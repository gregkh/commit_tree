commit 7490e75482cc99ce9d0c32a1d028d2f834c36713
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jul 16 08:13:36 2020 +0200

    Linux 5.7.9

commit 8942819f040e5c3e9b903ebca55e95f2b7cbc214
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Jun 24 17:39:14 2020 +0200

    s390/maccess: add no DAT mode to kernel_write
    
    [ Upstream commit d6df52e9996dcc2062c3d9c9123288468bb95b52 ]
    
    To be able to patch kernel code before paging is initialized do plain
    memcpy if DAT is off. This is required to enable early jump label
    initialization.
    
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5857c6b717ecdcee9bfe3b53e2f3b54120d94a7
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Wed Apr 29 10:24:47 2020 -0500

    s390: Change s390_kernel_write() return type to match memcpy()
    
    [ Upstream commit cb2cceaefb4c4dc28fc27ff1f1b2d258bfc10353 ]
    
    s390_kernel_write()'s function type is almost identical to memcpy().
    Change its return type to "void *" so they can be used interchangeably.
    
    Cc: linux-s390@vger.kernel.org
    Cc: heiko.carstens@de.ibm.com
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Acked-by: Joe Lawrence <joe.lawrence@redhat.com>
    Acked-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Gerald Schaefer <gerald.schaefer@de.ibm.com> # s390
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bba39534180e0f6a946dedd8f35e46bee8674e58
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jun 29 12:19:55 2020 +0300

    perf scripts python: exported-sql-viewer.py: Fix time chart call tree
    
    commit f18d5cf86cdb58eb50cafb5a5e20943ec7a61b1f upstream.
    
    Using Python version 3.8.2 and PySide2 version 5.14.0, time chart call tree
    would not expand the tree to the result. Fix by using setExpanded().
    
    Example:
    
      $ perf record -e intel_pt//u uname
      Linux
      [ perf record: Woken up 1 times to write data ]
      [ perf record: Captured and wrote 0.034 MB perf.data ]
      $ perf script --itrace=bep -s ~/libexec/perf-core/scripts/python/export-to-sqlite.py perf.data.db branches calls
      2020-06-26 15:32:14.928997 Creating database ...
      2020-06-26 15:32:14.933971 Writing records...
      2020-06-26 15:32:15.535251 Adding indexes
      2020-06-26 15:32:15.542993 Dropping unused tables
      2020-06-26 15:32:15.549716 Done
      $ python3 ~/libexec/perf-core/scripts/python/exported-sql-viewer.py perf.data.db
    
      Select: Charts -> Time chart by CPU
      Move mouse over middle of chart
      Right-click and select Show Call Tree
    
    Before: displays Call Tree but not expanded to selected time
    After: displays Call Tree expanded to selected time
    
    Fixes: e69d5df75d74d ("perf scripts python: exported-sql-viewer.py: Add ability for Call tree to open at a specified task and time")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20200629091955.17090-7-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc3fa8f379db1b7063af424a79bf6aaccc515319
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jun 29 12:19:52 2020 +0300

    perf scripts python: exported-sql-viewer.py: Fix unexpanded 'Find' result
    
    commit 3a3cf7c570a486b07d9a6e68a77548aea6a8421f upstream.
    
    Using Python version 3.8.2 and PySide2 version 5.14.0, ctrl-F ('Find')
    would not expand the tree to the result. Fix by using setExpanded().
    
    Example:
    
      $ perf record -e intel_pt//u uname
      Linux
      [ perf record: Woken up 1 times to write data ]
      [ perf record: Captured and wrote 0.034 MB perf.data ]
      $ perf script --itrace=bep -s ~/libexec/perf-core/scripts/python/export-to-sqlite.py perf.data.db branches calls
      2020-06-26 15:32:14.928997 Creating database ...
      2020-06-26 15:32:14.933971 Writing records...
      2020-06-26 15:32:15.535251 Adding indexes
      2020-06-26 15:32:15.542993 Dropping unused tables
      2020-06-26 15:32:15.549716 Done
      $ python3 ~/libexec/perf-core/scripts/python/exported-sql-viewer.py perf.data.db
    
      Select: Reports -> Context-Sensitive Call Graph    or     Reports -> Call Tree
      Press: Ctrl-F
      Enter: main
      Press: Enter
    
    Before: line showing 'main' does not display
    
    After: tree is expanded to line showing 'main'
    
    Fixes: ebd70c7dc2f5f ("perf scripts python: exported-sql-viewer.py: Add ability to find symbols in the call-graph")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20200629091955.17090-4-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97fcddffb809b64fb369b3f188109c8c11e17f67
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jun 29 12:19:54 2020 +0300

    perf scripts python: exported-sql-viewer.py: Fix zero id in call tree 'Find' result
    
    commit 031c8d5edb1ddeb6d398f7942ce2a01a1a51ada9 upstream.
    
    Using ctrl-F ('Find') would not find 'unknown' because it matches id
    zero.  Fix by excluding id zero from selection.
    
    Example:
    
       $ perf record -e intel_pt//u uname
       Linux
       [ perf record: Woken up 1 times to write data ]
       [ perf record: Captured and wrote 0.034 MB perf.data ]
       $ perf script --itrace=bep -s ~/libexec/perf-core/scripts/python/export-to-sqlite.py perf.data.db branches calls
       2020-06-26 15:32:14.928997 Creating database ...
       2020-06-26 15:32:14.933971 Writing records...
       2020-06-26 15:32:15.535251 Adding indexes
       2020-06-26 15:32:15.542993 Dropping unused tables
       2020-06-26 15:32:15.549716 Done
       $ python3 ~/libexec/perf-core/scripts/python/exported-sql-viewer.py perf.data.db
    
       Select: Reports -> Call Tree
       Press: Ctrl-F
       Enter: unknown
       Press: Enter
    
    Before: displays 'unknown' not found
    After: tree is expanded to line showing 'unknown'
    
    Fixes: ae8b887c00d3f ("perf scripts python: exported-sql-viewer.py: Add call tree")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20200629091955.17090-6-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dff001f9971ad4c214ff2a2d7c3e495185803806
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jun 29 12:19:53 2020 +0300

    perf scripts python: exported-sql-viewer.py: Fix zero id in call graph 'Find' result
    
    commit 7ff520b0a71dd2db695b52ad117d81b7eaf6ff9d upstream.
    
    Using ctrl-F ('Find') would not find 'unknown' because it matches id zero.
    Fix by excluding id zero from selection.
    
    Example:
    
      $ perf record -e intel_pt//u uname
      Linux
      [ perf record: Woken up 1 times to write data ]
      [ perf record: Captured and wrote 0.034 MB perf.data ]
      $ perf script --itrace=bep -s ~/libexec/perf-core/scripts/python/export-to-sqlite.py perf.data.db branches calls
      2020-06-26 15:32:14.928997 Creating database ...
      2020-06-26 15:32:14.933971 Writing records...
      2020-06-26 15:32:15.535251 Adding indexes
      2020-06-26 15:32:15.542993 Dropping unused tables
      2020-06-26 15:32:15.549716 Done
      $ python3 ~/libexec/perf-core/scripts/python/exported-sql-viewer.py perf.data.db
    
      Select: Reports -> Context-Sensitive Call Graph
      Press: Ctrl-F
      Enter: unknown
      Press: Enter
    
    Before: gets stuck
    After: tree is expanded to line showing 'unknown'
    
    Fixes: 254c0d820b86d ("perf scripts python: exported-sql-viewer.py: Factor out CallGraphModelBase")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20200629091955.17090-5-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52a0bcd49359ccf30437f9cc3b9059de2e111a8c
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Jun 29 12:19:50 2020 +0300

    perf scripts python: export-to-postgresql.py: Fix struct.pack() int argument
    
    commit 640432e6bed08e9d5d2ba26856ba3f55008b07e3 upstream.
    
    Python 3.8 is requiring that arguments being packed as integers are also
    integers.  Add int() accordingly.
    
     Before:
    
       $ perf record -e intel_pt//u uname
       $ perf script --itrace=bep -s ~/libexec/perf-core/scripts/python/export-to-postgresql.py perf_data_db branches calls
       2020-06-25 16:09:10.547256 Creating database...
       2020-06-25 16:09:10.733185 Writing to intermediate files...
       Traceback (most recent call last):
         File "/home/ahunter/libexec/perf-core/scripts/python/export-to-postgresql.py", line 1106, in synth_data
           cbr(id, raw_buf)
         File "/home/ahunter/libexec/perf-core/scripts/python/export-to-postgresql.py", line 1058, in cbr
           value = struct.pack("!hiqiiiiii", 4, 8, id, 4, cbr, 4, MHz, 4, percent)
       struct.error: required argument is not an integer
       Fatal Python error: problem in Python trace event handler
       Python runtime state: initialized
    
       Current thread 0x00007f35d3695780 (most recent call first):
       <no Python frame>
       Aborted (core dumped)
    
     After:
    
       $ dropdb perf_data_db
       $ rm -rf perf_data_db-perf-data
       $ perf script --itrace=bep -s ~/libexec/perf-core/scripts/python/export-to-postgresql.py perf_data_db branches calls
       2020-06-25 16:09:40.990267 Creating database...
       2020-06-25 16:09:41.207009 Writing to intermediate files...
       2020-06-25 16:09:41.270915 Copying to database...
       2020-06-25 16:09:41.382030 Removing intermediate files...
       2020-06-25 16:09:41.384630 Adding primary keys
       2020-06-25 16:09:41.541894 Adding foreign keys
       2020-06-25 16:09:41.677044 Dropping unused tables
       2020-06-25 16:09:41.703761 Done
    
    Fixes: aba44287a224 ("perf scripts python: export-to-postgresql.py: Export Intel PT power and ptwrite events")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20200629091955.17090-2-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c74dafdfa52bf562bee0b58847e3791c01e26f6
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Tue Jun 30 17:49:24 2020 +0200

    dm writecache: reject asynchronous pmem devices
    
    commit a46624580376a3a0beb218d94cbc7f258696e29f upstream.
    
    DM writecache does not handle asynchronous pmem. Reject it when
    supplied as cache.
    
    Link: https://lore.kernel.org/linux-nvdimm/87lfk5hahc.fsf@linux.ibm.com/
    Fixes: 6e84200c0a29 ("virtio-pmem: Add virtio pmem driver")
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Acked-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org # 5.3+
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1506084b7799564f6da07c1eae57051a7afc1d51
Author: Ming Lei <ming.lei@redhat.com>
Date:   Tue Jul 7 11:04:33 2020 -0400

    blk-mq: consider non-idle request as "inflight" in blk_mq_rq_inflight()
    
    commit 05a4fed69ff00a8bd83538684cb602a4636b07a7 upstream.
    
    dm-multipath is the only user of blk_mq_queue_inflight().  When
    dm-multipath calls blk_mq_queue_inflight() to check if it has
    outstanding IO it can get a false negative.  The reason for this is
    blk_mq_rq_inflight() doesn't consider requests that are no longer
    MQ_RQ_IN_FLIGHT but that are now MQ_RQ_COMPLETE (->complete isn't
    called or finished yet) as "inflight".
    
    This causes request-based dm-multipath's dm_wait_for_completion() to
    return before all outstanding dm-multipath requests have actually
    completed.  This breaks DM multipath's suspend functionality because
    blk-mq requests complete after DM's suspend has finished -- which
    shouldn't happen.
    
    Fix this by considering any request not in the MQ_RQ_IDLE state
    (so either MQ_RQ_COMPLETE or MQ_RQ_IN_FLIGHT) as "inflight" in
    blk_mq_rq_inflight().
    
    Fixes: 3c94d83cb3526 ("blk-mq: change blk_mq_queue_busy() to blk_mq_queue_inflight()")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bf31fc4705fc72e10a42ae580708808b211dc1c
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Jul 6 17:38:01 2020 +0100

    arm64: arch_timer: Disable the compat vdso for cores affected by ARM64_WORKAROUND_1418040
    
    commit 4b661d6133c5d3a7c9aca0b4ee5a78c7766eff3f upstream.
    
    ARM64_WORKAROUND_1418040 requires that AArch32 EL0 accesses to
    the virtual counter register are trapped and emulated by the kernel.
    This makes the vdso pretty pointless, and in some cases livelock
    prone.
    
    Provide a workaround entry that limits the vdso to 64bit tasks.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200706163802.1836732-4-maz@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d2c72712eb3520802ad762b3cb8698cf5212821
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Jul 6 17:38:00 2020 +0100

    arm64: arch_timer: Allow an workaround descriptor to disable compat vdso
    
    commit c1fbec4ac0d701f350a581941d35643d5a9cd184 upstream.
    
    As we are about to disable the vdso for compat tasks in some circumstances,
    let's allow a workaround descriptor to express exactly that.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200706163802.1836732-3-maz@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f907048b7ea67d0f1145c27fc734d4af0ddc93f
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Jul 6 17:37:59 2020 +0100

    arm64: Introduce a way to disable the 32bit vdso
    
    commit 97884ca8c2925d14c32188e865069f21378b4b4f upstream.
    
    We have a class of errata (grouped under the ARM64_WORKAROUND_1418040
    banner) that force the trapping of counter access from 32bit EL0.
    
    We would normally disable the whole vdso for such defect, except that
    it would disable it for 64bit userspace as well, which is a shame.
    
    Instead, add a new vdso_clock_mode, which signals that the vdso
    isn't usable for compat tasks.  This gets checked in the new
    vdso_clocksource_ok() helper, now provided for the 32bit vdso.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200706163802.1836732-2-maz@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 016bc797c3b95f2a5975d332645602d3fb5741eb
Author: Janosch Frank <frankja@linux.ibm.com>
Date:   Tue Jul 7 15:38:54 2020 +0200

    s390/mm: fix huge pte soft dirty copying
    
    commit 528a9539348a0234375dfaa1ca5dbbb2f8f8e8d2 upstream.
    
    If the pmd is soft dirty we must mark the pte as soft dirty (and not dirty).
    This fixes some cases for guest migration with huge page backings.
    
    Cc: <stable@vger.kernel.org> # 4.8
    Fixes: bc29b7ac1d9f ("s390/mm: clean up pte/pmd encoding")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dae3b787b69947c9270010789142ac6fec6b859
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Thu Jun 18 17:17:19 2020 +0200

    s390/setup: init jump labels before command line parsing
    
    commit 95e61b1b5d6394b53d147c0fcbe2ae70fbe09446 upstream.
    
    Command line parameters might set static keys. This is true for s390 at
    least since commit 6471384af2a6 ("mm: security: introduce init_on_alloc=1
    and init_on_free=1 boot options"). To avoid the following WARN:
    
    static_key_enable_cpuslocked(): static key 'init_on_alloc+0x0/0x40' used
    before call to jump_label_init()
    
    call jump_label_init() just before parse_early_param().
    jump_label_init() is safe to call multiple times (x86 does that), doesn't
    do any memory allocations and hence should be safe to call that early.
    
    Fixes: 6471384af2a6 ("mm: security: introduce init_on_alloc=1 and init_on_free=1 boot options")
    Cc: <stable@vger.kernel.org> # 5.3: d6df52e9996d: s390/maccess: add no DAT mode to kernel_write
    Cc: <stable@vger.kernel.org> # 5.3
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dcd4768a2b85eca699f049906f22d5cbb83e070
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Wed May 27 14:18:45 2020 -0700

    ARC: elf: use right ELF_ARCH
    
    commit b7faf971081a4e56147f082234bfff55135305cb upstream.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c2952b4f8a5ac9e24d5a065e384b1d8a6de5a1d
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue May 19 22:28:32 2020 -0700

    ARC: entry: fix potential EFA clobber when TIF_SYSCALL_TRACE
    
    commit 00fdec98d9881bf5173af09aebd353ab3b9ac729 upstream.
    
    Trap handler for syscall tracing reads EFA (Exception Fault Address),
    in case strace wants PC of trap instruction (EFA is not part of pt_regs
    as of current code).
    
    However this EFA read is racy as it happens after dropping to pure
    kernel mode (re-enabling interrupts). A taken interrupt could
    context-switch, trigger a different task's trap, clobbering EFA for this
    execution context.
    
    Fix this by reading EFA early, before re-enabling interrupts. A slight
    side benefit is de-duplication of FAKE_RET_FROM_EXCPN in trap handler.
    The trap handler is common to both ARCompact and ARCv2 builds too.
    
    This just came out of code rework/review and no real problem was reported
    but is clearly a potential problem specially for strace.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a211f79afb987b489410bc573d44c055ba548425
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Jun 6 11:31:50 2020 +0200

    pinctrl: baytrail: Fix pin being driven low for a while on gpiod_get(..., GPIOD_OUT_HIGH)
    
    commit 45c11a927606c612e4898a9484867b71318699f6 upstream.
    
    The pins on the Bay Trail SoC have separate input-buffer and output-buffer
    enable bits and a read of the level bit of the value register will always
    return the value from the input-buffer.
    
    The BIOS of a device may configure a pin in output-only mode, only enabling
    the output buffer, and write 1 to the level bit to drive the pin high.
    This 1 written to the level bit will be stored inside the data-latch of the
    output buffer.
    
    But a subsequent read of the value register will return 0 for the level bit
    because the input-buffer is disabled. This causes a read-modify-write as
    done by byt_gpio_set_direction() to write 0 to the level bit, driving the
    pin low!
    
    Before this commit byt_gpio_direction_output() relied on
    pinctrl_gpio_direction_output() to set the direction, followed by a call
    to byt_gpio_set() to apply the selected value. This causes the pin to
    go low between the pinctrl_gpio_direction_output() and byt_gpio_set()
    calls.
    
    Change byt_gpio_direction_output() to directly make the register
    modifications itself instead. Replacing the 2 subsequent writes to the
    value register with a single write.
    
    Note that the pinctrl code does not keep track internally of the direction,
    so not going through pinctrl_gpio_direction_output() is not an issue.
    
    This issue was noticed on a Trekstor SurfTab Twin 10.1. When the panel is
    already on at boot (no external monitor connected), then the i915 driver
    does a gpiod_get(..., GPIOD_OUT_HIGH) for the panel-enable GPIO. The
    temporarily going low of that GPIO was causing the panel to reset itself
    after which it would not show an image until it was turned off and back on
    again (until a full modeset was done on it). This commit fixes this.
    
    This commit also updates the byt_gpio_direction_input() to use direct
    register accesses instead of going through pinctrl_gpio_direction_input(),
    to keep it consistent with byt_gpio_direction_output().
    
    Note for backporting, this commit depends on:
    commit e2b74419e5cc ("pinctrl: baytrail: Replace WARN with dev_info_once
    when setting direct-irq pin to output")
    
    Cc: stable@vger.kernel.org
    Fixes: 86e3ef812fe3 ("pinctrl: baytrail: Update gpio chip operations")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd9b1442d7ec97c49c110008d9aabfb430616074
Author: Manivannan Sadhasivam <mani@kernel.org>
Date:   Sun Jun 21 08:23:30 2020 +0530

    mmc: owl-mmc: Get rid of of_match_ptr() macro
    
    commit f8884711f78fa946041cf04492e218c377479a9c upstream.
    
    Remove the 'of_match_ptr()' macro to fix the warning when CONFIG_OF is
    not selected.
    
    drivers/mmc/host/owl-mmc.c:677:34: warning: unused variable 'owl_mmc_of_match'
    [-Wunused-const-variable]
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Manivannan Sadhasivam <mani@kernel.org>
    Link: https://lore.kernel.org/r/20200621025330.10561-1-mani@kernel.org
    Fixes: ff65ffe46d28 ("mmc: Add Actions Semi Owl SoCs SD/MMC driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47eb6b0e8e71de9eb0507014c66a89541afe185d
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Mon Jun 8 10:44:58 2020 +0200

    mmc: meson-gx: limit segments to 1 when dram-access-quirk is needed
    
    commit 27a5e7d36d383970affae801d77141deafd536a8 upstream.
    
    The actual max_segs computation leads to failure while using the broadcom
    sdio brcmfmac/bcmsdh driver, since the driver tries to make usage of
    scatter gather.
    
    But with the dram-access-quirk we use a 1,5K SRAM bounce buffer, and the
    max_segs current value of 3 leads to max transfers to 4,5k, which doesn't
    work.
    
    This patch sets max_segs to 1 to better describe the hardware limitation,
    and fix the SDIO functionality with the brcmfmac/bcmsdh driver on Amlogic
    G12A/G12B SoCs on boards like SEI510 or Khadas VIM3.
    
    Reported-by: Art Nikpal <art@khadas.com>
    Reported-by: Christian Hewitt <christianshewitt@gmail.com>
    Fixes: acdc8e71d9bb ("mmc: meson-gx: add dram-access-quirk")
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200608084458.32014-1-narmstrong@baylibre.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75c19a53cf68735b42c64b50c5174310fb40ffc1
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jul 8 12:25:20 2020 -0400

    dm: use noio when sending kobject event
    
    commit 6958c1c640af8c3f40fa8a2eee3b5b905d95b677 upstream.
    
    kobject_uevent may allocate memory and it may be called while there are dm
    devices suspended. The allocation may recurse into a suspended device,
    causing a deadlock. We must set the noio flag when sending a uevent.
    
    The observed deadlock was reported here:
    https://www.redhat.com/archives/dm-devel/2020-March/msg00025.html
    
    Reported-by: Khazhismel Kumykov <khazhy@google.com>
    Reported-by: Tahsin Erdogan <tahsin@google.com>
    Reported-by: Gabriel Krisman Bertazi <krisman@collabora.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fab3c82266a1ca1215b22c51722e44a01bc8791f
Author: Steve French <stfrench@microsoft.com>
Date:   Tue Jul 7 23:43:39 2020 -0500

    smb3: fix unneeded error message on change notify
    
    commit 8668115cf2db40e22e7be02652a3673d8d30c9f0 upstream.
    
    We should not be logging a warning repeatedly on change notify.
    
    CC: Stable <stable@vger.kernel.org> # v5.6+
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b659e2500e595fb3791bc001dc9d3fc6484dc91
Author: Steve French <stfrench@microsoft.com>
Date:   Tue Jul 7 18:08:46 2020 -0500

    smb3: fix access denied on change notify request to some servers
    
    commit 4ef9b4f1a76ea2370fbfe20e80fef141ab92b65e upstream.
    
    read permission, not just read attributes permission, is required
    on the directory.
    
    See MS-SMB2 (protocol specification) section 3.3.5.19.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org> # v5.6+
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 891b9d266303b0f8732da1092ae6c1369da2331f
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Thu Jul 9 20:39:49 2020 +1000

    cifs: fix reference leak for tlink
    
    commit a77592a70081edb58a95b9da18fd5a2882a25666 upstream.
    
    Don't leak a reference to tlink during the NOTIFY ioctl
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    CC: Stable <stable@vger.kernel.org> # v5.6+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e53344673fcf1df8ff52675ab0539fff26a8e29
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jul 2 22:10:15 2020 +0100

    drm/i915: Also drop vm.ref along error paths for vma construction
    
    commit cf1976b11372cac3b57fbae1831f66a4486355d3 upstream.
    
    Not only do we need to release the vm.ref we acquired for the vma on the
    duplicate insert branch, but also for the normal error paths, so roll
    them all into one.
    
    Reported-by: Andi Shyti <andi.shyti@intel.com>
    Suggested-by: Andi Shyti <andi.shyti@intel.com>
    Fixes: 2850748ef876 ("drm/i915: Pull i915_vma_pin under the vm->mutex")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Andi Shyti <andi.shyti@intel.com>
    Cc: <stable@vger.kernel.org> # v5.5+
    Reviewed-by: Andi Shyti <andi.shyti@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200702211015.29604-1-chris@chris-wilson.co.uk
    (cherry picked from commit 03fca66b7a36b52da8915341eee388267f6d5b73)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98762e5b00567622d57295d2d3389aea2c37be03
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jul 2 09:32:03 2020 +0100

    drm/i915: Drop vm.ref for duplicate vma on construction
    
    commit 42723673a193d5f8e30dba6ea9826d42262a502b upstream.
    
    As we allow for parallel threads to create the same vma instance
    concurrently, and we only filter out the duplicates upon reacquiring the
    spinlock for the rbtree, we have to free the loser of the constructors'
    race. When freeing, we should also drop any resource references acquired
    for the redundant vma.
    
    Fixes: 2850748ef876 ("drm/i915: Pull i915_vma_pin under the vm->mutex")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: <stable@vger.kernel.org> # v5.5+
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200702083225.20044-1-chris@chris-wilson.co.uk
    (cherry picked from commit 2377427cdd2b7514eb4c40241cf5c4dec63c1bec)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22ff658396b44606163ad0231e8215309a26d613
Author: Huang Rui <ray.huang@amd.com>
Date:   Tue Jun 30 10:43:21 2020 +0800

    drm/amdgpu: asd function needs to be unloaded in suspend phase
    
    commit 20303ec5d2165ee6344190274bc59118921f71d9 upstream.
    
    Unload ASD function in suspend phase.
    
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c41c968c6f6480860c67210815cadc6507f5014
Author: Huang Rui <ray.huang@amd.com>
Date:   Tue Jun 30 12:32:57 2020 +0800

    drm/amdgpu: add TMR destory function for psp
    
    commit c564b8601ae917086751d90f464d5f19d731ece7 upstream.
    
    TMR is required to be destoried with GFX_CMD_ID_DESTROY_TMR while the
    system goes to suspend. Otherwise, PSP may return the failure state
    (0xFFFF007) on Gfx-2-PSP command GFX_CMD_ID_SETUP_TMR after do multiple
    times suspend/resume.
    
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7915047a1d59474d06789a9dd1925064969e080
Author: Marek Olšák <marek.olsak@amd.com>
Date:   Mon Jul 6 18:23:17 2020 -0400

    drm/amdgpu: don't do soft recovery if gpu_recovery=0
    
    commit f4892c327a8e5df7ce16cab40897daf90baf6bec upstream.
    
    It's impossible to debug shader hangs with soft recovery.
    
    Signed-off-by: Marek Olšák <marek.olsak@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d073ed965cd908d320d49824dee02c80168f96a8
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Jun 30 16:27:24 2020 +0100

    drm/i915: Skip stale object handle for debugfs per-file-stats
    
    commit 7dfbf8a07cf8c936b0d6cc810df6ae7923954d5b upstream.
    
    As we close a handle GEM object, we update the drm_file's idr with an
    error^W NULL pointer to indicate the in-progress closure, and finally
    removing it. If we read the idr directly, we may then see an invalid
    object pointer, and in our debugfs per_file_stats() we therefore need
    to protect against the entry being invalid.
    
    [ 1016.651637] RIP: 0010:per_file_stats+0xe/0x16e
    [ 1016.651646] Code: d2 41 0f b6 8e 69 8c 00 00 48 89 df 48 c7 c6 7b 74 8c be 31 c0 e8 0c 89 cf ff eb d2 0f 1f 44 00 00 55 48 89 e5 41
    57 41 56 53 <8b> 06 85 c0 0f 84 4d 01 00 00 49 89 d6 48 89 f3 3d ff ff ff 7f 73
    [ 1016.651651] RSP: 0018:ffffad3a01337ba0 EFLAGS: 00010293
    [ 1016.651656] RAX: 0000000000000018 RBX: ffff96fe040d65e0 RCX: 0000000000000002
    [ 1016.651660] RDX: ffffad3a01337c50 RSI: 0000000000000000 RDI: 00000000000001e8
    [ 1016.651663] RBP: ffffad3a01337bb8 R08: 0000000000000000 R09: 00000000000001c0
    [ 1016.651667] R10: 0000000000000000 R11: ffffffffbdbe5fce R12: 0000000000000000
    [ 1016.651671] R13: ffffffffbdbe5fce R14: ffffad3a01337c50 R15: 0000000000000001
    [ 1016.651676] FS:  00007a597e2d7480(0000) GS:ffff96ff3bb00000(0000) knlGS:0000000000000000
    [ 1016.651680] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1016.651683] CR2: 0000000000000000 CR3: 0000000171fc2001 CR4: 00000000003606e0
    [ 1016.651687] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 1016.651690] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 1016.651693] Call Trace:
    [ 1016.651693] Call Trace:
    [ 1016.651703]  idr_for_each+0x8a/0xe8
    [ 1016.651711]  i915_gem_object_info+0x2a3/0x3eb
    [ 1016.651720]  seq_read+0x162/0x3ca
    [ 1016.651727]  full_proxy_read+0x5b/0x8d
    [ 1016.651733]  __vfs_read+0x45/0x1bb
    [ 1016.651741]  vfs_read+0xc9/0x15e
    [ 1016.651746]  ksys_read+0x7e/0xde
    [ 1016.651752]  do_syscall_64+0x54/0x68
    [ 1016.651758]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Fixes: a8c15954d64a ("drm/i915: Protect debugfs per_file_stats with RCU lock")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: stable@vger.kernel.org
    Reviewed-by: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200630152724.3734-1-chris@chris-wilson.co.uk
    (cherry picked from commit c1b9fd3d310177b31621d5e661f06885869cae12)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 096b85c64987a0ef4fcc6ac0e3c3661573828df1
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Jul 6 18:01:38 2020 +0100

    drm/i915/gt: Pin the rings before marking active
    
    commit 5a383d443b29a140094430f3ad1d02fa1acc2b80 upstream.
    
    On eviction, we acquire the vm->mutex and then wait on the vma->active.
    Therefore when binding and pinning the vma, we must follow the same
    sequence, lock/pin the vma then mark it active. Otherwise, we mark the
    vma as active, then wait for the vm->mutex, and meanwhile the evictor
    holding the mutex waits upon us to complete our activity.
    
    Fixes: 8ccfc20a7d56 ("drm/i915/gt: Mark ring->vma as active while pinned")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: <stable@vger.kernel.org> # v5.6+
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200706170138.8993-1-chris@chris-wilson.co.uk
    (cherry picked from commit 8567774e87e23a57155e5102f81208729b992ae6)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67e9648f20524ff6824ebeb26afea45f7d9c300d
Author: Tom Rix <trix@redhat.com>
Date:   Mon Jul 6 05:28:57 2020 -0700

    drm/radeon: fix double free
    
    commit 41855a898650803e24b284173354cc3e44d07725 upstream.
    
    clang static analysis flags this error
    
    drivers/gpu/drm/radeon/ci_dpm.c:5652:9: warning: Use of memory after it is freed [unix.Malloc]
                    kfree(rdev->pm.dpm.ps[i].ps_priv);
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/gpu/drm/radeon/ci_dpm.c:5654:2: warning: Attempt to free released memory [unix.Malloc]
            kfree(rdev->pm.dpm.ps);
            ^~~~~~~~~~~~~~~~~~~~~~
    
    problem is reported in ci_dpm_fini, with these code blocks.
    
            for (i = 0; i < rdev->pm.dpm.num_ps; i++) {
                    kfree(rdev->pm.dpm.ps[i].ps_priv);
            }
            kfree(rdev->pm.dpm.ps);
    
    The first free happens in ci_parse_power_table where it cleans up locally
    on a failure.  ci_dpm_fini also does a cleanup.
    
            ret = ci_parse_power_table(rdev);
            if (ret) {
                    ci_dpm_fini(rdev);
                    return ret;
            }
    
    So remove the cleanup in ci_parse_power_table and
    move the num_ps calculation to inside the loop so ci_dpm_fini
    will know how many array elements to free.
    
    Fixes: cc8dbbb4f62a ("drm/radeon: add dpm support for CI dGPUs (v2)")
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c3483bc0f31ef837ce8a1dc5a991daa13a3ef1e
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Jul 6 09:14:12 2020 -0400

    btrfs: fix double put of block group with nocow
    
    commit 230ed397435e85b54f055c524fcb267ae2ce3bc4 upstream.
    
    While debugging a patch that I wrote I was hitting use-after-free panics
    when accessing block groups on unmount.  This turned out to be because
    in the nocow case if we bail out of doing the nocow for whatever reason
    we need to call btrfs_dec_nocow_writers() if we called the inc.  This
    puts our block group, but a few error cases does
    
    if (nocow) {
        btrfs_dec_nocow_writers();
        goto error;
    }
    
    unfortunately, error is
    
    error:
            if (nocow)
                    btrfs_dec_nocow_writers();
    
    so we get a double put on our block group.  Fix this by dropping the
    error cases calling of btrfs_dec_nocow_writers(), as it's handled at the
    error label now.
    
    Fixes: 762bf09893b4 ("btrfs: improve error handling in run_delalloc_nocow")
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 526fb476ca845cdf9b53293660db97a159fb3412
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Jul 3 15:05:50 2020 +0800

    btrfs: discard: add missing put when grabbing block group from unused list
    
    commit 04e484c5973ed0f9234c97685c3c5e1ebf0d6eb6 upstream.
    
    [BUG]
    The following small test script can trigger ASSERT() at unmount time:
    
      mkfs.btrfs -f $dev
      mount $dev $mnt
      mount -o remount,discard=async $mnt
      umount $mnt
    
    The call trace:
      assertion failed: atomic_read(&block_group->count) == 1, in fs/btrfs/block-group.c:3431
      ------------[ cut here ]------------
      kernel BUG at fs/btrfs/ctree.h:3204!
      invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
      CPU: 4 PID: 10389 Comm: umount Tainted: G           O      5.8.0-rc3-custom+ #68
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
      Call Trace:
       btrfs_free_block_groups.cold+0x22/0x55 [btrfs]
       close_ctree+0x2cb/0x323 [btrfs]
       btrfs_put_super+0x15/0x17 [btrfs]
       generic_shutdown_super+0x72/0x110
       kill_anon_super+0x18/0x30
       btrfs_kill_super+0x17/0x30 [btrfs]
       deactivate_locked_super+0x3b/0xa0
       deactivate_super+0x40/0x50
       cleanup_mnt+0x135/0x190
       __cleanup_mnt+0x12/0x20
       task_work_run+0x64/0xb0
       __prepare_exit_to_usermode+0x1bc/0x1c0
       __syscall_return_slowpath+0x47/0x230
       do_syscall_64+0x64/0xb0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The code:
                    ASSERT(atomic_read(&block_group->count) == 1);
                    btrfs_put_block_group(block_group);
    
    [CAUSE]
    Obviously it's some btrfs_get_block_group() call doesn't get its put
    call.
    
    The offending btrfs_get_block_group() happens here:
    
      void btrfs_mark_bg_unused(struct btrfs_block_group *bg)
      {
            if (list_empty(&bg->bg_list)) {
                    btrfs_get_block_group(bg);
                    list_add_tail(&bg->bg_list, &fs_info->unused_bgs);
            }
      }
    
    So every call sites removing the block group from unused_bgs list should
    reduce the ref count of that block group.
    
    However for async discard, it didn't follow the call convention:
    
      void btrfs_discard_punt_unused_bgs_list(struct btrfs_fs_info *fs_info)
      {
            list_for_each_entry_safe(block_group, next, &fs_info->unused_bgs,
                                     bg_list) {
                    list_del_init(&block_group->bg_list);
                    btrfs_discard_queue_work(&fs_info->discard_ctl, block_group);
            }
      }
    
    And in btrfs_discard_queue_work(), it doesn't call
    btrfs_put_block_group() either.
    
    [FIX]
    Fix the problem by reducing the reference count when we grab the block
    group from unused_bgs list.
    
    Reported-by: Marcos Paulo de Souza <mpdesouza@suse.com>
    Fixes: 6e80d4f8c422 ("btrfs: handle empty block_group removal for async discard")
    CC: stable@vger.kernel.org # 5.6+
    Tested-by: Marcos Paulo de Souza <mpdesouza@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 991e01c636285c52a898b33b9461a4dbc96f2d88
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Jun 30 14:53:02 2020 -0400

    btrfs: reset tree root pointer after error in init_tree_roots
    
    commit 0465337c5599bbe360cdcff452992a1a6b7ed2d4 upstream.
    
    Eric reported an issue where mounting -o recovery with a fuzzed fs
    resulted in a kernel panic.  This is because we tried to free the tree
    node, except it was an error from the read.  Fix this by properly
    resetting the tree_root->node == NULL in this case.  The panic was the
    following
    
      BTRFS warning (device loop0): failed to read tree root
      BUG: kernel NULL pointer dereference, address: 000000000000001f
      RIP: 0010:free_extent_buffer+0xe/0x90 [btrfs]
      Call Trace:
       free_root_extent_buffers.part.0+0x11/0x30 [btrfs]
       free_root_pointers+0x1a/0xa2 [btrfs]
       open_ctree+0x1776/0x18a5 [btrfs]
       btrfs_mount_root.cold+0x13/0xfa [btrfs]
       ? selinux_fs_context_parse_param+0x37/0x80
       legacy_get_tree+0x27/0x40
       vfs_get_tree+0x25/0xb0
       fc_mount+0xe/0x30
       vfs_kern_mount.part.0+0x71/0x90
       btrfs_mount+0x147/0x3e0 [btrfs]
       ? cred_has_capability+0x7c/0x120
       ? legacy_get_tree+0x27/0x40
       legacy_get_tree+0x27/0x40
       vfs_get_tree+0x25/0xb0
       do_mount+0x735/0xa40
       __x64_sys_mount+0x8e/0xd0
       do_syscall_64+0x4d/0x90
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Nik says: this is problematic only if we fail on the last iteration of
    the loop as this results in init_tree_roots returning err value with
    tree_root->node = -ERR. Subsequently the caller does: fail_tree_roots
    which calls free_root_pointers on the bogus value.
    
    Reported-by: Eric Sandeen <sandeen@redhat.com>
    Fixes: b8522a1e5f42 ("btrfs: Factor out tree roots initialization during mount")
    CC: stable@vger.kernel.org # 5.5+
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add details how the pointer gets dereferenced ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2edbab7628c7f0d4db36cd5e56c43cddf28b84db
Author: Boris Burkov <boris@bur.io>
Date:   Wed Jun 17 11:35:19 2020 -0700

    btrfs: fix fatal extent_buffer readahead vs releasepage race
    
    commit 6bf9cd2eed9aee6d742bb9296c994a91f5316949 upstream.
    
    Under somewhat convoluted conditions, it is possible to attempt to
    release an extent_buffer that is under io, which triggers a BUG_ON in
    btrfs_release_extent_buffer_pages.
    
    This relies on a few different factors. First, extent_buffer reads done
    as readahead for searching use WAIT_NONE, so they free the local extent
    buffer reference while the io is outstanding. However, they should still
    be protected by TREE_REF. However, if the system is doing signficant
    reclaim, and simultaneously heavily accessing the extent_buffers, it is
    possible for releasepage to race with two concurrent readahead attempts
    in a way that leaves TREE_REF unset when the readahead extent buffer is
    released.
    
    Essentially, if two tasks race to allocate a new extent_buffer, but the
    winner who attempts the first io is rebuffed by a page being locked
    (likely by the reclaim itself) then the loser will still go ahead with
    issuing the readahead. The loser's call to find_extent_buffer must also
    race with the reclaim task reading the extent_buffer's refcount as 1 in
    a way that allows the reclaim to re-clear the TREE_REF checked by
    find_extent_buffer.
    
    The following represents an example execution demonstrating the race:
    
                CPU0                                                         CPU1                                           CPU2
    reada_for_search                                            reada_for_search
      readahead_tree_block                                        readahead_tree_block
        find_create_tree_block                                      find_create_tree_block
          alloc_extent_buffer                                         alloc_extent_buffer
                                                                      find_extent_buffer // not found
                                                                      allocates eb
                                                                      lock pages
                                                                      associate pages to eb
                                                                      insert eb into radix tree
                                                                      set TREE_REF, refs == 2
                                                                      unlock pages
                                                                  read_extent_buffer_pages // WAIT_NONE
                                                                    not uptodate (brand new eb)
                                                                                                                lock_page
                                                                    if !trylock_page
                                                                      goto unlock_exit // not an error
                                                                  free_extent_buffer
                                                                    release_extent_buffer
                                                                      atomic_dec_and_test refs to 1
            find_extent_buffer // found
                                                                                                                try_release_extent_buffer
                                                                                                                  take refs_lock
                                                                                                                  reads refs == 1; no io
              atomic_inc_not_zero refs to 2
              mark_buffer_accessed
                check_buffer_tree_ref
                  // not STALE, won't take refs_lock
                  refs == 2; TREE_REF set // no action
        read_extent_buffer_pages // WAIT_NONE
                                                                                                                  clear TREE_REF
                                                                                                                  release_extent_buffer
                                                                                                                    atomic_dec_and_test refs to 1
                                                                                                                    unlock_page
          still not uptodate (CPU1 read failed on trylock_page)
          locks pages
          set io_pages > 0
          submit io
          return
        free_extent_buffer
          release_extent_buffer
            dec refs to 0
            delete from radix tree
            btrfs_release_extent_buffer_pages
              BUG_ON(io_pages > 0)!!!
    
    We observe this at a very low rate in production and were also able to
    reproduce it in a test environment by introducing some spurious delays
    and by introducing probabilistic trylock_page failures.
    
    To fix it, we apply check_tree_ref at a point where it could not
    possibly be unset by a competing task: after io_pages has been
    incremented. All the codepaths that clear TREE_REF check for io, so they
    would not be able to clear it after this point until the io is done.
    
    Stack trace, for reference:
    [1417839.424739] ------------[ cut here ]------------
    [1417839.435328] kernel BUG at fs/btrfs/extent_io.c:4841!
    [1417839.447024] invalid opcode: 0000 [#1] SMP
    [1417839.502972] RIP: 0010:btrfs_release_extent_buffer_pages+0x20/0x1f0
    [1417839.517008] Code: ed e9 ...
    [1417839.558895] RSP: 0018:ffffc90020bcf798 EFLAGS: 00010202
    [1417839.570816] RAX: 0000000000000002 RBX: ffff888102d6def0 RCX: 0000000000000028
    [1417839.586962] RDX: 0000000000000002 RSI: ffff8887f0296482 RDI: ffff888102d6def0
    [1417839.603108] RBP: ffff88885664a000 R08: 0000000000000046 R09: 0000000000000238
    [1417839.619255] R10: 0000000000000028 R11: ffff88885664af68 R12: 0000000000000000
    [1417839.635402] R13: 0000000000000000 R14: ffff88875f573ad0 R15: ffff888797aafd90
    [1417839.651549] FS:  00007f5a844fa700(0000) GS:ffff88885f680000(0000) knlGS:0000000000000000
    [1417839.669810] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [1417839.682887] CR2: 00007f7884541fe0 CR3: 000000049f609002 CR4: 00000000003606e0
    [1417839.699037] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [1417839.715187] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [1417839.731320] Call Trace:
    [1417839.737103]  release_extent_buffer+0x39/0x90
    [1417839.746913]  read_block_for_search.isra.38+0x2a3/0x370
    [1417839.758645]  btrfs_search_slot+0x260/0x9b0
    [1417839.768054]  btrfs_lookup_file_extent+0x4a/0x70
    [1417839.778427]  btrfs_get_extent+0x15f/0x830
    [1417839.787665]  ? submit_extent_page+0xc4/0x1c0
    [1417839.797474]  ? __do_readpage+0x299/0x7a0
    [1417839.806515]  __do_readpage+0x33b/0x7a0
    [1417839.815171]  ? btrfs_releasepage+0x70/0x70
    [1417839.824597]  extent_readpages+0x28f/0x400
    [1417839.833836]  read_pages+0x6a/0x1c0
    [1417839.841729]  ? startup_64+0x2/0x30
    [1417839.849624]  __do_page_cache_readahead+0x13c/0x1a0
    [1417839.860590]  filemap_fault+0x6c7/0x990
    [1417839.869252]  ? xas_load+0x8/0x80
    [1417839.876756]  ? xas_find+0x150/0x190
    [1417839.884839]  ? filemap_map_pages+0x295/0x3b0
    [1417839.894652]  __do_fault+0x32/0x110
    [1417839.902540]  __handle_mm_fault+0xacd/0x1000
    [1417839.912156]  handle_mm_fault+0xaa/0x1c0
    [1417839.921004]  __do_page_fault+0x242/0x4b0
    [1417839.930044]  ? page_fault+0x8/0x30
    [1417839.937933]  page_fault+0x1e/0x30
    [1417839.945631] RIP: 0033:0x33c4bae
    [1417839.952927] Code: Bad RIP value.
    [1417839.960411] RSP: 002b:00007f5a844f7350 EFLAGS: 00010206
    [1417839.972331] RAX: 000000000000006e RBX: 1614b3ff6a50398a RCX: 0000000000000000
    [1417839.988477] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000002
    [1417840.004626] RBP: 00007f5a844f7420 R08: 000000000000006e R09: 00007f5a94aeccb8
    [1417840.020784] R10: 00007f5a844f7350 R11: 0000000000000000 R12: 00007f5a94aecc79
    [1417840.036932] R13: 00007f5a94aecc78 R14: 00007f5a94aecc90 R15: 00007f5a94aecc40
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Boris Burkov <boris@bur.io>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e819ef06243153b5f20a4b3ca9e66e18c2a28759
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jul 14 14:03:44 2020 +0200

    Revert "ath9k: Fix general protection fault in ath9k_hif_usb_rx_cb"
    
    This reverts commit 6602f080cb28745259e2fab1a4cf55eeb5894f93 which is
    commit 2bbcaaee1fcbd83272e29f31e2bb7e70d8c49e05 upstream.
    
    It is being reverted upstream, just hasn't made it there yet and is
    causing lots of problems.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Cc: Qiujun Huang <hqjagain@gmail.com>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a2cfe930439ee41b9f4d77453c00592a54f9e1a
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jul 2 15:45:23 2020 -0700

    bpf: Check correct cred for CAP_SYSLOG in bpf_dump_raw_ok()
    
    commit 63960260457a02af2a6cb35d75e6bdb17299c882 upstream.
    
    When evaluating access control over kallsyms visibility, credentials at
    open() time need to be used, not the "current" creds (though in BPF's
    case, this has likely always been the same). Plumb access to associated
    file->f_cred down through bpf_dump_raw_ok() and its callers now that
    kallsysm_show_value() has been refactored to take struct cred.
    
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: bpf@vger.kernel.org
    Cc: stable@vger.kernel.org
    Fixes: 7105e828c087 ("bpf: allow for correlation of maps and helpers in dump")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53e789aef0cd80c52d9b6a3ae940fd569d4318d4
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jul 2 15:20:22 2020 -0700

    kprobes: Do not expose probe addresses to non-CAP_SYSLOG
    
    commit 60f7bb66b88b649433bf700acfc60c3f24953871 upstream.
    
    The kprobe show() functions were using "current"'s creds instead
    of the file opener's creds for kallsyms visibility. Fix to use
    seq_file->file->f_cred.
    
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: stable@vger.kernel.org
    Fixes: 81365a947de4 ("kprobes: Show address of kprobes if kallsyms does")
    Fixes: ffb9bd68ebdb ("kprobes: Show blacklist addresses as same as kallsyms does")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a82f3f8f4f010ac41c269472cc4762d963dbdfd2
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jul 2 14:43:59 2020 -0700

    module: Do not expose section addresses to non-CAP_SYSLOG
    
    commit b25a7c5af9051850d4f3d93ca500056ab6ec724b upstream.
    
    The printing of section addresses in /sys/module/*/sections/* was not
    using the correct credentials to evaluate visibility.
    
    Before:
    
     # cat /sys/module/*/sections/.*text
     0xffffffffc0458000
     ...
     # capsh --drop=CAP_SYSLOG -- -c "cat /sys/module/*/sections/.*text"
     0xffffffffc0458000
     ...
    
    After:
    
     # cat /sys/module/*/sections/*.text
     0xffffffffc0458000
     ...
     # capsh --drop=CAP_SYSLOG -- -c "cat /sys/module/*/sections/.*text"
     0x0000000000000000
     ...
    
    Additionally replaces the existing (safe) /proc/modules check with
    file->f_cred for consistency.
    
    Reported-by: Dominik Czarnota <dominik.czarnota@trailofbits.com>
    Fixes: be71eda5383f ("module: Fix display of wrong module .text address")
    Cc: stable@vger.kernel.org
    Tested-by: Jessica Yu <jeyu@kernel.org>
    Acked-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be163232ad51d8280f310bcf99429327ba8166e9
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jul 2 13:47:20 2020 -0700

    module: Refactor section attr into bin attribute
    
    commit ed66f991bb19d94cae5d38f77de81f96aac7813f upstream.
    
    In order to gain access to the open file's f_cred for kallsym visibility
    permission checks, refactor the module section attributes to use the
    bin_attribute instead of attribute interface. Additionally removes the
    redundant "name" struct member.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Jessica Yu <jeyu@kernel.org>
    Acked-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27801485039d491539d29c262e8927ccff6cf477
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jul 2 11:49:23 2020 -0700

    kallsyms: Refactor kallsyms_show_value() to take cred
    
    commit 160251842cd35a75edfb0a1d76afa3eb674ff40a upstream.
    
    In order to perform future tests against the cred saved during open(),
    switch kallsyms_show_value() to operate on a cred, and have all current
    callers pass current_cred(). This makes it very obvious where callers
    are checking the wrong credential in their "read" contexts. These will
    be fixed in the coming patches.
    
    Additionally switch return value to bool, since it is always used as a
    direct permission check, not a 0-on-success, negative-on-error style
    function return.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ceb2995e1a6c5c241eedb50a6ac9ac5e305d801
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sun Jul 12 13:23:08 2020 +0300

    io_uring: fix missing msg_name assignment
    
    commit dd821e0c95a64b5923a0c57f07d3f7563553e756 upstream.
    
    Ensure to set msg.msg_name for the async portion of send/recvmsg,
    as the header copy will copy to/from it.
    
    Cc: stable@vger.kernel.org # v5.5+
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 939498a0da7eb8cd2040cf3ee5ab43620a9c3d53
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Jul 10 14:14:20 2020 +0000

    io_uring: fix memleak in io_sqe_files_register()
    
    commit 667e57da358f61b6966e12e925a69e42d912e8bb upstream.
    
    I got a memleak report when doing some fuzz test:
    
    BUG: memory leak
    unreferenced object 0x607eeac06e78 (size 8):
      comm "test", pid 295, jiffies 4294735835 (age 31.745s)
      hex dump (first 8 bytes):
        00 00 00 00 00 00 00 00                          ........
      backtrace:
        [<00000000932632e6>] percpu_ref_init+0x2a/0x1b0
        [<0000000092ddb796>] __io_uring_register+0x111d/0x22a0
        [<00000000eadd6c77>] __x64_sys_io_uring_register+0x17b/0x480
        [<00000000591b89a6>] do_syscall_64+0x56/0xa0
        [<00000000864a281d>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Call percpu_ref_exit() on error path to avoid
    refcount memleak.
    
    Fixes: 05f3fb3c5397 ("io_uring: avoid ring quiesce for fixed file set unregister and update")
    Cc: stable@vger.kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55460694b74bf8cd654007879982f8b1fee49ad3
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Jul 10 09:13:34 2020 -0600

    io_uring: account user memory freed when exit has been queued
    
    commit 309fc03a3284af62eb6082fb60327045a1dabf57 upstream.
    
    We currently account the memory after the exit work has been run, but
    that leaves a gap where a process has closed its ring and until the
    memory has been accounted as freed. If the memlocked ulimit is
    borderline, then that can introduce spurious setup errors returning
    -ENOMEM because the free work hasn't been run yet.
    
    Account this as freed when we close the ring, as not to expose a tiny
    gap where setting up a new ring can fail.
    
    Fixes: 85faa7b8346e ("io_uring: punt final io_ring_ctx wait-and-free to workqueue")
    Cc: stable@vger.kernel.org # v5.7
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e77ec769daf9d7428bdfef94f11bf2350e12fc7
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Jul 9 10:11:41 2020 +0000

    io_uring: fix memleak in __io_sqe_files_update()
    
    commit f3bd9dae3708a0ff6b067e766073ffeb853301f9 upstream.
    
    I got a memleak report when doing some fuzz test:
    
    BUG: memory leak
    unreferenced object 0xffff888113e02300 (size 488):
    comm "syz-executor401", pid 356, jiffies 4294809529 (age 11.954s)
    hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
    a0 a4 ce 19 81 88 ff ff 60 ce 09 0d 81 88 ff ff ........`.......
    backtrace:
    [<00000000129a84ec>] kmem_cache_zalloc include/linux/slab.h:659 [inline]
    [<00000000129a84ec>] __alloc_file+0x25/0x310 fs/file_table.c:101
    [<000000003050ad84>] alloc_empty_file+0x4f/0x120 fs/file_table.c:151
    [<000000004d0a41a3>] alloc_file+0x5e/0x550 fs/file_table.c:193
    [<000000002cb242f0>] alloc_file_pseudo+0x16a/0x240 fs/file_table.c:233
    [<00000000046a4baa>] anon_inode_getfile fs/anon_inodes.c:91 [inline]
    [<00000000046a4baa>] anon_inode_getfile+0xac/0x1c0 fs/anon_inodes.c:74
    [<0000000035beb745>] __do_sys_perf_event_open+0xd4a/0x2680 kernel/events/core.c:11720
    [<0000000049009dc7>] do_syscall_64+0x56/0xa0 arch/x86/entry/common.c:359
    [<00000000353731ca>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    BUG: memory leak
    unreferenced object 0xffff8881152dd5e0 (size 16):
    comm "syz-executor401", pid 356, jiffies 4294809529 (age 11.954s)
    hex dump (first 16 bytes):
    01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 ................
    backtrace:
    [<0000000074caa794>] kmem_cache_zalloc include/linux/slab.h:659 [inline]
    [<0000000074caa794>] lsm_file_alloc security/security.c:567 [inline]
    [<0000000074caa794>] security_file_alloc+0x32/0x160 security/security.c:1440
    [<00000000c6745ea3>] __alloc_file+0xba/0x310 fs/file_table.c:106
    [<000000003050ad84>] alloc_empty_file+0x4f/0x120 fs/file_table.c:151
    [<000000004d0a41a3>] alloc_file+0x5e/0x550 fs/file_table.c:193
    [<000000002cb242f0>] alloc_file_pseudo+0x16a/0x240 fs/file_table.c:233
    [<00000000046a4baa>] anon_inode_getfile fs/anon_inodes.c:91 [inline]
    [<00000000046a4baa>] anon_inode_getfile+0xac/0x1c0 fs/anon_inodes.c:74
    [<0000000035beb745>] __do_sys_perf_event_open+0xd4a/0x2680 kernel/events/core.c:11720
    [<0000000049009dc7>] do_syscall_64+0x56/0xa0 arch/x86/entry/common.c:359
    [<00000000353731ca>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    If io_sqe_file_register() failed, we need put the file that get by fget()
    to avoid the memleak.
    
    Fixes: c3a31e605620 ("io_uring: add support for IORING_REGISTER_FILES_UPDATE")
    Cc: stable@vger.kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ec2a85cb5e56511d2606b653212ee91a6080362
Author: Steven Price <steven.price@arm.com>
Date:   Wed Jun 17 11:54:56 2020 +0100

    KVM: arm64: Fix kvm_reset_vcpu() return code being incorrect with SVE
    
    If SVE is enabled then 'ret' can be assigned the return value of
    kvm_vcpu_enable_sve() which may be 0 causing future "goto out" sites to
    erroneously return 0 on failure rather than -EINVAL as expected.
    
    Remove the initialisation of 'ret' and make setting the return value
    explicit to avoid this situation in the future.
    
    Fixes: 9a3cdf26e336 ("KVM: arm64/sve: Allow userspace to enable SVE for vcpus")
    Cc: stable@vger.kernel.org
    Reported-by: James Morse <james.morse@arm.com>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200617105456.28245-1-steven.price@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b211bc0ac1697bb6f05953177f02cf7956f2db0
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jul 2 21:04:21 2020 -0700

    KVM: x86: Mark CR4.TSD as being possibly owned by the guest
    
    commit 7c83d096aed055a7763a03384f92115363448b71 upstream.
    
    Mark CR4.TSD as being possibly owned by the guest as that is indeed the
    case on VMX.  Without TSD being tagged as possibly owned by the guest, a
    targeted read of CR4 to get TSD could observe a stale value.  This bug
    is benign in the current code base as the sole consumer of TSD is the
    emulator (for RDTSC) and the emulator always "reads" the entirety of CR4
    when grabbing bits.
    
    Add a build-time assertion in to ensure VMX doesn't hand over more CR4
    bits without also updating x86.
    
    Fixes: 52ce3c21aec3 ("x86,kvm,vmx: Don't trap writes to CR4.TSD")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200703040422.31536-2-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f367d507f16a63e3532b2e3cbb2db65846b47dd
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jul 2 19:17:14 2020 -0700

    KVM: x86: Inject #GP if guest attempts to toggle CR4.LA57 in 64-bit mode
    
    commit d74fcfc1f0ff4b6c26ecef1f9e48d8089ab4eaac upstream.
    
    Inject a #GP on MOV CR4 if CR4.LA57 is toggled in 64-bit mode, which is
    illegal per Intel's SDM:
    
      CR4.LA57
        57-bit linear addresses (bit 12 of CR4) ... blah blah blah ...
        This bit cannot be modified in IA-32e mode.
    
    Note, the pseudocode for MOV CR doesn't call out the fault condition,
    which is likely why the check was missed during initial development.
    This is arguably an SDM bug and will hopefully be fixed in future
    release of the SDM.
    
    Fixes: fd8cb433734ee ("KVM: MMU: Expose the LA57 feature to VM.")
    Cc: stable@vger.kernel.org
    Reported-by: Sebastien Boeuf <sebastien.boeuf@intel.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200703021714.5549-1-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d5ebb33c7b2ccca03e6f82c62e76c6d1afe6958
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jun 30 07:07:20 2020 -0400

    KVM: x86: bit 8 of non-leaf PDPEs is not reserved
    
    commit 5ecad245de2ae23dc4e2dbece92f8ccfbaed2fa7 upstream.
    
    Bit 8 would be the "global" bit, which does not quite make sense for non-leaf
    page table entries.  Intel ignores it; AMD ignores it in PDEs and PDPEs, but
    reserves it in PML4Es.
    
    Probably, earlier versions of the AMD manual documented it as reserved in PDPEs
    as well, and that behavior made it into KVM as well as kvm-unit-tests; fix it.
    
    Cc: stable@vger.kernel.org
    Reported-by: Nadav Amit <namit@vmware.com>
    Fixes: a0c0feb57992 ("KVM: x86: reserve bit 8 of non-leaf PDPEs and PML4Es in 64-bit mode on AMD", 2014-09-03)
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca37cecd9dca22db76de95583d2280ddee4ffc07
Author: Alexandru Elisei <alexandru.elisei@arm.com>
Date:   Thu Jun 18 18:12:54 2020 +0100

    KVM: arm64: Annotate hyp NMI-related functions as __always_inline
    
    commit 7733306bd593c737c63110175da6c35b4b8bb32c upstream.
    
    The "inline" keyword is a hint for the compiler to inline a function.  The
    functions system_uses_irq_prio_masking() and gic_write_pmr() are used by
    the code running at EL2 on a non-VHE system, so mark them as
    __always_inline to make sure they'll always be part of the .hyp.text
    section.
    
    This fixes the following splat when trying to run a VM:
    
    [   47.625273] Kernel panic - not syncing: HYP panic:
    [   47.625273] PS:a00003c9 PC:0000ca0b42049fc4 ESR:86000006
    [   47.625273] FAR:0000ca0b42049fc4 HPFAR:0000000010001000 PAR:0000000000000000
    [   47.625273] VCPU:0000000000000000
    [   47.647261] CPU: 1 PID: 217 Comm: kvm-vcpu-0 Not tainted 5.8.0-rc1-ARCH+ #61
    [   47.654508] Hardware name: Globalscale Marvell ESPRESSOBin Board (DT)
    [   47.661139] Call trace:
    [   47.663659]  dump_backtrace+0x0/0x1cc
    [   47.667413]  show_stack+0x18/0x24
    [   47.670822]  dump_stack+0xb8/0x108
    [   47.674312]  panic+0x124/0x2f4
    [   47.677446]  panic+0x0/0x2f4
    [   47.680407] SMP: stopping secondary CPUs
    [   47.684439] Kernel Offset: disabled
    [   47.688018] CPU features: 0x240402,20002008
    [   47.692318] Memory Limit: none
    [   47.695465] ---[ end Kernel panic - not syncing: HYP panic:
    [   47.695465] PS:a00003c9 PC:0000ca0b42049fc4 ESR:86000006
    [   47.695465] FAR:0000ca0b42049fc4 HPFAR:0000000010001000 PAR:0000000000000000
    [   47.695465] VCPU:0000000000000000 ]---
    
    The instruction abort was caused by the code running at EL2 trying to fetch
    an instruction which wasn't mapped in the EL2 translation tables. Using
    objdump showed the two functions as separate symbols in the .text section.
    
    Fixes: 85738e05dc38 ("arm64: kvm: Unmask PMR before entering guest")
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Acked-by: James Morse <james.morse@arm.com>
    Link: https://lore.kernel.org/r/20200618171254.1596055-1-alexandru.elisei@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1166404c04a85e15504fb66f47d72239968880a6
Author: Andrew Scull <ascull@google.com>
Date:   Mon Jul 6 10:52:59 2020 +0100

    KVM: arm64: Stop clobbering x0 for HVC_SOFT_RESTART
    
    commit b9e10d4a6c9f5cbe6369ce2c17ebc67d2e5a4be5 upstream.
    
    HVC_SOFT_RESTART is given values for x0-2 that it should installed
    before exiting to the new address so should not set x0 to stub HVC
    success or failure code.
    
    Fixes: af42f20480bf1 ("arm64: hyp-stub: Zero x0 on successful stub handling")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andrew Scull <ascull@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200706095259.1338221-1-ascull@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9a977b24ffab4a4a56cfb03715ebb71d823e574
Author: Will Deacon <will@kernel.org>
Date:   Wed Jul 8 17:25:46 2020 +0100

    KVM: arm64: Fix definition of PAGE_HYP_DEVICE
    
    commit 68cf617309b5f6f3a651165f49f20af1494753ae upstream.
    
    PAGE_HYP_DEVICE is intended to encode attribute bits for an EL2 stage-1
    pte mapping a device. Unfortunately, it includes PROT_DEVICE_nGnRE which
    encodes attributes for EL1 stage-1 mappings such as UXN and nG, which are
    RES0 for EL2, and DBM which is meaningless as TCR_EL2.HD is not set.
    
    Fix the definition of PAGE_HYP_DEVICE so that it doesn't set RES0 bits
    at EL2.
    
    Acked-by: Marc Zyngier <maz@kernel.org>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200708162546.26176-1-will@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72bf33273496a10f2557871ddc9cd0bcf56abcde
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Mon Jul 6 15:18:29 2020 +0800

    ALSA: hda/realtek: Enable headset mic of Acer Veriton N4660G with ALC269VC
    
    commit 781c90c034d994c6a4e2badf189128a95ed864c2 upstream.
    
    The Acer Veriton N4660G desktop's audio (1025:1248) with ALC269VC cannot
    detect the headset microphone until ALC269VC_FIXUP_ACER_MIC_NO_PRESENCE
    quirk maps the NID 0x18 as the headset mic pin.
    
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200706071826.39726-3-jian-hong@endlessm.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5304cc0cf2cfe86ad44189c7886b1e10625843dc
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Mon Jul 6 15:18:27 2020 +0800

    ALSA: hda/realtek: Enable headset mic of Acer C20-820 with ALC269VC
    
    commit 6e15d1261d522d1d222f8f89b23c6966905e9049 upstream.
    
    The Acer Aspire C20-820 AIO's audio (1025:1065) with ALC269VC can't
    detect the headset microphone until ALC269VC_FIXUP_ACER_HEADSET_MIC
    quirk maps the NID 0x18 as the headset mic pin.
    
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: Daniel Drake <drake@endlessm.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200706071826.39726-2-jian-hong@endlessm.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d653a503105353375eb4bbac6bad5bf4bd8d2fe9
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Mon Jul 6 15:18:25 2020 +0800

    ALSA: hda/realtek - Enable audio jacks of Acer vCopperbox with ALC269VC
    
    commit 8eae7e9b3967f08efaa4d70403aec513cbe45ad0 upstream.
    
    The Acer desktop vCopperbox with ALC269VC cannot detect the MIC of
    headset, the line out and internal speaker until
    ALC269VC_FIXUP_ACER_VCOPPERBOX_PINS quirk applied.
    
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: Chris Chiu <chiu@endlessm.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200706071826.39726-1-jian-hong@endlessm.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 193d0e307b89adc89ec5c8a6bc61893b30d704e9
Author: Benjamin Poirier <benjamin.poirier@gmail.com>
Date:   Fri Jul 3 17:00:04 2020 +0900

    ALSA: hda/realtek - Fix Lenovo Thinkpad X1 Carbon 7th quirk subdevice id
    
    commit 9774dc218bb628974dcbc76412f970e9258e5f27 upstream.
    
    1)
    In snd_hda_pick_fixup(), quirks are first matched by PCI SSID and then, if
    there is no match, by codec SSID. The Lenovo "ThinkPad X1 Carbon 7th" has
    an audio chip with PCI SSID 0x2292 and codec SSID 0x2293[1]. Therefore, fix
    the quirk meant for that device to match on .subdevice == 0x2292.
    
    2)
    The "Thinkpad X1 Yoga 7th" does not exist. The companion product to the
    Carbon 7th is the Yoga 4th. That device has an audio chip with PCI SSID
    0x2292 and codec SSID 0x2292[2]. Given the behavior of
    snd_hda_pick_fixup(), it is not possible to have a separate quirk for the
    Yoga based on SSID. Therefore, merge the quirks meant for the Carbon and
    Yoga. This preserves the current behavior for the Yoga.
    
    [1] This is the case on my own machine and can also be checked here
    https://github.com/linuxhw/LsPCI/tree/master/Notebook/Lenovo/ThinkPad
    https://gist.github.com/hamidzr/dd81e429dc86f4327ded7a2030e7d7d9#gistcomment-3225701
    [2]
    https://github.com/linuxhw/LsPCI/tree/master/Convertible/Lenovo/ThinkPad
    https://gist.github.com/hamidzr/dd81e429dc86f4327ded7a2030e7d7d9#gistcomment-3176355
    
    Fixes: d2cd795c4ece ("ALSA: hda - fixup for the bass speaker on Lenovo Carbon X1 7th gen")
    Fixes: 54a6a7dc107d ("ALSA: hda/realtek - Add quirk for the bass speaker on Lenovo Yoga X1 7th gen")
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Kailang Yang <kailang@realtek.com>
    Tested-by: Vincent Bernat <vincent@bernat.ch>
    Tested-by: Even Brenden <evenbrenden@gmail.com>
    Signed-off-by: Benjamin Poirier <benjamin.poirier@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200703080005.8942-2-benjamin.poirier@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4514e2cceee8b1e9ead4496096dbc0ab18ab6bbd
Author: Pavel Hofman <pavel.hofman@ivitera.com>
Date:   Fri Jul 3 12:04:33 2020 +0200

    ALSA: usb-audio: Add implicit feedback quirk for RTX6001
    
    commit b6a1e78b96a5d7f312f08b3a470eb911ab5feec0 upstream.
    
    USB Audio analyzer RTX6001 uses the same implicit feedback quirk
    as other XMOS-based devices.
    
    Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Tested-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/822f0f20-1886-6884-a6b2-d11c685cbafa@ivitera.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c13e009c2741312f658aec7d28a39bd92fda8523
Author: Hector Martin <marcan@marcan.st>
Date:   Thu Jul 2 16:14:33 2020 +0900

    ALSA: usb-audio: add quirk for MacroSilicon MS2109
    
    commit e337bf19f6af38d5c3fa6d06cd594e0f890ca1ac upstream.
    
    These devices claim to be 96kHz mono, but actually are 48kHz stereo with
    swapped channels and unaligned transfers.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200702071433.237843-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8e97d3376d6153b6f84078f28514a1f15ee51d7
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Jun 25 16:38:33 2020 +0800

    ALSA: hda - let hs_mic be picked ahead of hp_mic
    
    commit 6a6ca7881b1ab1c13fe0d70bae29211a65dd90de upstream.
    
    We have a Dell AIO, there is neither internal speaker nor internal
    mic, only a multi-function audio jack on it.
    
    Users reported that after freshly installing the OS and plug
    a headset to the audio jack, the headset can't output sound. I
    reproduced this bug, at that moment, the Input Source is as below:
    Simple mixer control 'Input Source',0
      Capabilities: cenum
      Items: 'Headphone Mic' 'Headset Mic'
      Item0: 'Headphone Mic'
    
    That is because the patch_realtek will set this audio jack as mic_in
    mode if Input Source's value is hp_mic.
    
    If it is not fresh installing, this issue will not happen since the
    systemd will run alsactl restore -f /var/lib/alsa/asound.state, this
    will set the 'Input Source' according to history value.
    
    If there is internal speaker or internal mic, this issue will not
    happen since there is valid sink/source in the pulseaudio, the PA will
    set the 'Input Source' according to active_port.
    
    To fix this issue, change the parser function to let the hs_mic be
    stored ahead of hp_mic.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200625083833.11264-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 642cab5239a3cc128cdfc30f0bdd3d5463f390be
Author: xidongwang <wangxidong_97@163.com>
Date:   Sun Jul 5 20:27:38 2020 -0700

    ALSA: opl3: fix infoleak in opl3
    
    commit ad155712bb1ea2151944cf06a0e08c315c70c1e3 upstream.
    
    The stack object “info” in snd_opl3_ioctl() has a leaking problem.
    It has 2 padding bytes which are not initialized and leaked via
    “copy_to_user”.
    
    Signed-off-by: xidongwang <wangxidong_97@163.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1594006058-30362-1-git-send-email-wangxidong_97@163.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daea9b9277e40e6f1ef34bd0be607a3aab2df0b4
Author: Kaike Wan <kaike.wan@intel.com>
Date:   Tue Jun 23 16:40:53 2020 -0400

    IB/hfi1: Do not destroy link_wq when the device is shut down
    
    commit 2315ec12ee8e8257bb335654c62e0cae71dc278d upstream.
    
    The workqueue link_wq should only be destroyed when the hfi1 driver is
    unloaded, not when the device is shut down.
    
    Fixes: 71d47008ca1b ("IB/hfi1: Create workqueue for link events")
    Link: https://lore.kernel.org/r/20200623204053.107638.70315.stgit@awfm-01.aw.intel.com
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b30b86b2c215cb9c8ab4002bcad1fc4fe33295e9
Author: Kaike Wan <kaike.wan@intel.com>
Date:   Tue Jun 23 16:40:47 2020 -0400

    IB/hfi1: Do not destroy hfi1_wq when the device is shut down
    
    commit 28b70cd9236563e1a88a6094673fef3c08db0d51 upstream.
    
    The workqueue hfi1_wq is destroyed in function shutdown_device(), which is
    called by either shutdown_one() or remove_one(). The function
    shutdown_one() is called when the kernel is rebooted while remove_one() is
    called when the hfi1 driver is unloaded. When the kernel is rebooted,
    hfi1_wq is destroyed while all qps are still active, leading to a kernel
    crash:
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000102
      IP: [<ffffffff94cb7b02>] __queue_work+0x32/0x3e0
      PGD 0
      Oops: 0000 [#1] SMP
      Modules linked in: dm_round_robin nvme_rdma(OE) nvme_fabrics(OE) nvme_core(OE) ib_isert iscsi_target_mod target_core_mod ib_ucm mlx4_ib iTCO_wdt iTCO_vendor_support mxm_wmi sb_edac intel_powerclamp coretemp intel_rapl iosf_mbi kvm rpcrdma sunrpc irqbypass crc32_pclmul ghash_clmulni_intel rdma_ucm aesni_intel ib_uverbs lrw gf128mul opa_vnic glue_helper ablk_helper ib_iser cryptd ib_umad rdma_cm iw_cm ses enclosure libiscsi scsi_transport_sas pcspkr joydev ib_ipoib(OE) scsi_transport_iscsi ib_cm sg ipmi_ssif mei_me lpc_ich i2c_i801 mei ioatdma ipmi_si dm_multipath ipmi_devintf ipmi_msghandler wmi acpi_pad acpi_power_meter hangcheck_timer ip_tables ext4 mbcache jbd2 mlx4_en sd_mod crc_t10dif crct10dif_generic mgag200 drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ttm hfi1(OE)
      crct10dif_pclmul crct10dif_common crc32c_intel drm ahci mlx4_core libahci rdmavt(OE) igb megaraid_sas ib_core libata drm_panel_orientation_quirks ptp pps_core devlink dca i2c_algo_bit dm_mirror dm_region_hash dm_log dm_mod
      CPU: 19 PID: 0 Comm: swapper/19 Kdump: loaded Tainted: G OE ------------ 3.10.0-957.el7.x86_64 #1
      Hardware name: Phegda X2226A/S2600CW, BIOS SE5C610.86B.01.01.0024.021320181901 02/13/2018
      task: ffff8a799ba0d140 ti: ffff8a799bad8000 task.ti: ffff8a799bad8000
      RIP: 0010:[<ffffffff94cb7b02>] [<ffffffff94cb7b02>] __queue_work+0x32/0x3e0
      RSP: 0018:ffff8a90dde43d80 EFLAGS: 00010046
      RAX: 0000000000000082 RBX: 0000000000000086 RCX: 0000000000000000
      RDX: ffff8a90b924fcb8 RSI: 0000000000000000 RDI: 000000000000001b
      RBP: ffff8a90dde43db8 R08: ffff8a799ba0d6d8 R09: ffff8a90dde53900
      R10: 0000000000000002 R11: ffff8a90dde43de8 R12: ffff8a90b924fcb8
      R13: 000000000000001b R14: 0000000000000000 R15: ffff8a90d2890000
      FS: 0000000000000000(0000) GS:ffff8a90dde40000(0000) knlGS:0000000000000000
      CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000102 CR3: 0000001a70410000 CR4: 00000000001607e0
      Call Trace:
      [<ffffffff94cb8105>] queue_work_on+0x45/0x50
      [<ffffffffc03f781e>] _hfi1_schedule_send+0x6e/0xc0 [hfi1]
      [<ffffffffc03f78a2>] hfi1_schedule_send+0x32/0x70 [hfi1]
      [<ffffffffc02cf2d9>] rvt_rc_timeout+0xe9/0x130 [rdmavt]
      [<ffffffff94ce563a>] ? trigger_load_balance+0x6a/0x280
      [<ffffffffc02cf1f0>] ? rvt_free_qpn+0x40/0x40 [rdmavt]
      [<ffffffff94ca7f58>] call_timer_fn+0x38/0x110
      [<ffffffffc02cf1f0>] ? rvt_free_qpn+0x40/0x40 [rdmavt]
      [<ffffffff94caa3bd>] run_timer_softirq+0x24d/0x300
      [<ffffffff94ca0f05>] __do_softirq+0xf5/0x280
      [<ffffffff9537832c>] call_softirq+0x1c/0x30
      [<ffffffff94c2e675>] do_softirq+0x65/0xa0
      [<ffffffff94ca1285>] irq_exit+0x105/0x110
      [<ffffffff953796c8>] smp_apic_timer_interrupt+0x48/0x60
      [<ffffffff95375df2>] apic_timer_interrupt+0x162/0x170
      <EOI>
      [<ffffffff951adfb7>] ? cpuidle_enter_state+0x57/0xd0
      [<ffffffff951ae10e>] cpuidle_idle_call+0xde/0x230
      [<ffffffff94c366de>] arch_cpu_idle+0xe/0xc0
      [<ffffffff94cfc3ba>] cpu_startup_entry+0x14a/0x1e0
      [<ffffffff94c57db7>] start_secondary+0x1f7/0x270
      [<ffffffff94c000d5>] start_cpu+0x5/0x14
    
    The solution is to destroy the workqueue only when the hfi1 driver is
    unloaded, not when the device is shut down. In addition, when the device
    is shut down, no more work should be scheduled on the workqueues and the
    workqueues are flushed.
    
    Fixes: 8d3e71136a08 ("IB/{hfi1, qib}: Add handling of kernel restart")
    Link: https://lore.kernel.org/r/20200623204047.107638.77646.stgit@awfm-01.aw.intel.com
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 321c181738c3d0fc0cc3f9b6f29ff2a928b2e3b1
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Fri Jul 10 16:41:39 2020 +0300

    mlxsw: pci: Fix use-after-free in case of failed devlink reload
    
    [ Upstream commit c4317b11675b99af6641662ebcbd3c6010600e64 ]
    
    In case devlink reload failed, it is possible to trigger a
    use-after-free when querying the kernel for device info via 'devlink dev
    info' [1].
    
    This happens because as part of the reload error path the PCI command
    interface is de-initialized and its mailboxes are freed. When the
    devlink '->info_get()' callback is invoked the device is queried via the
    command interface and the freed mailboxes are accessed.
    
    Fix this by initializing the command interface once during probe and not
    during every reload.
    
    This is consistent with the other bus used by mlxsw (i.e., 'mlxsw_i2c')
    and also allows user space to query the running firmware version (for
    example) from the device after a failed reload.
    
    [1]
    BUG: KASAN: use-after-free in memcpy include/linux/string.h:406 [inline]
    BUG: KASAN: use-after-free in mlxsw_pci_cmd_exec+0x177/0xa60 drivers/net/ethernet/mellanox/mlxsw/pci.c:1675
    Write of size 4096 at addr ffff88810ae32000 by task syz-executor.1/2355
    
    CPU: 1 PID: 2355 Comm: syz-executor.1 Not tainted 5.8.0-rc2+ #29
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0xf6/0x16e lib/dump_stack.c:118
     print_address_description.constprop.0+0x1c/0x250 mm/kasan/report.c:383
     __kasan_report mm/kasan/report.c:513 [inline]
     kasan_report.cold+0x1f/0x37 mm/kasan/report.c:530
     check_memory_region_inline mm/kasan/generic.c:186 [inline]
     check_memory_region+0x14e/0x1b0 mm/kasan/generic.c:192
     memcpy+0x39/0x60 mm/kasan/common.c:106
     memcpy include/linux/string.h:406 [inline]
     mlxsw_pci_cmd_exec+0x177/0xa60 drivers/net/ethernet/mellanox/mlxsw/pci.c:1675
     mlxsw_cmd_exec+0x249/0x550 drivers/net/ethernet/mellanox/mlxsw/core.c:2335
     mlxsw_cmd_access_reg drivers/net/ethernet/mellanox/mlxsw/cmd.h:859 [inline]
     mlxsw_core_reg_access_cmd drivers/net/ethernet/mellanox/mlxsw/core.c:1938 [inline]
     mlxsw_core_reg_access+0x2f6/0x540 drivers/net/ethernet/mellanox/mlxsw/core.c:1985
     mlxsw_reg_query drivers/net/ethernet/mellanox/mlxsw/core.c:2000 [inline]
     mlxsw_devlink_info_get+0x17f/0x6e0 drivers/net/ethernet/mellanox/mlxsw/core.c:1090
     devlink_nl_info_fill.constprop.0+0x13c/0x2d0 net/core/devlink.c:4588
     devlink_nl_cmd_info_get_dumpit+0x246/0x460 net/core/devlink.c:4648
     genl_lock_dumpit+0x85/0xc0 net/netlink/genetlink.c:575
     netlink_dump+0x515/0xe50 net/netlink/af_netlink.c:2245
     __netlink_dump_start+0x53d/0x830 net/netlink/af_netlink.c:2353
     genl_family_rcv_msg_dumpit.isra.0+0x296/0x300 net/netlink/genetlink.c:638
     genl_family_rcv_msg net/netlink/genetlink.c:733 [inline]
     genl_rcv_msg+0x78d/0x9d0 net/netlink/genetlink.c:753
     netlink_rcv_skb+0x152/0x440 net/netlink/af_netlink.c:2469
     genl_rcv+0x24/0x40 net/netlink/genetlink.c:764
     netlink_unicast_kernel net/netlink/af_netlink.c:1303 [inline]
     netlink_unicast+0x53a/0x750 net/netlink/af_netlink.c:1329
     netlink_sendmsg+0x850/0xd90 net/netlink/af_netlink.c:1918
     sock_sendmsg_nosec net/socket.c:652 [inline]
     sock_sendmsg+0x150/0x190 net/socket.c:672
     ____sys_sendmsg+0x6d8/0x840 net/socket.c:2363
     ___sys_sendmsg+0xff/0x170 net/socket.c:2417
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2450
     do_syscall_64+0x56/0xa0 arch/x86/entry/common.c:359
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: a9c8336f6544 ("mlxsw: core: Add support for devlink info command")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 477656c72b521ac45ee364c48432a5eb4aea4fed
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Fri Jul 10 16:41:38 2020 +0300

    mlxsw: spectrum_router: Remove inappropriate usage of WARN_ON()
    
    [ Upstream commit d9d5420273997664a1c09151ca86ac993f2f89c1 ]
    
    We should not trigger a warning when a memory allocation fails. Remove
    the WARN_ON().
    
    The warning is constantly triggered by syzkaller when it is injecting
    faults:
    
    [ 2230.758664] FAULT_INJECTION: forcing a failure.
    [ 2230.758664] name failslab, interval 1, probability 0, space 0, times 0
    [ 2230.762329] CPU: 3 PID: 1407 Comm: syz-executor.0 Not tainted 5.8.0-rc2+ #28
    ...
    [ 2230.898175] WARNING: CPU: 3 PID: 1407 at drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c:6265 mlxsw_sp_router_fib_event+0xfad/0x13e0
    [ 2230.898179] Kernel panic - not syncing: panic_on_warn set ...
    [ 2230.898183] CPU: 3 PID: 1407 Comm: syz-executor.0 Not tainted 5.8.0-rc2+ #28
    [ 2230.898190] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    
    Fixes: 3057224e014c ("mlxsw: spectrum_router: Implement FIB offload in deferred work")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97ebde9225e6fdc80105c55ca4900ac0f66bfc1b
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Fri Jul 10 14:46:45 2020 +0200

    net: macb: fix call to pm_runtime in the suspend/resume functions
    
    [ Upstream commit 6c8f85cac98a4c6b767c4c4f6af7283724c32b47 ]
    
    The calls to pm_runtime_force_suspend/resume() functions are only
    relevant if the device is not configured to act as a WoL wakeup source.
    Add the device_may_wakeup() test before calling them.
    
    Fixes: 3e2a5e153906 ("net: macb: add wake-on-lan support via magic packet")
    Cc: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Harini Katakam <harini.katakam@xilinx.com>
    Cc: Sergio Prado <sergio.prado@e-labworks.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit feefce61211d2e24e5702f47479a64e0da75f259
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Fri Jul 10 14:46:44 2020 +0200

    net: macb: fix macb_suspend() by removing call to netif_carrier_off()
    
    [ Upstream commit 64febc5e56c9a748162f206dcc5be1a44436087a ]
    
    As we now use the phylink call to phylink_stop() in the non-WoL path,
    there is no need for this call to netif_carrier_off() anymore. It can
    disturb the underlying phylink FSM.
    
    Fixes: 7897b071ac3b ("net: macb: convert to phylink")
    Cc: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Harini Katakam <harini.katakam@xilinx.com>
    Cc: Antoine Tenart <antoine.tenart@bootlin.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8438f279296006fa838f4fe1f4082bf68ce7b73e
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Fri Jul 10 14:46:43 2020 +0200

    net: macb: fix macb_get/set_wol() when moving to phylink
    
    [ Upstream commit 253fe09435045ab9346a8e364299d971185ae031 ]
    
    Keep previous function goals and integrate phylink actions to them.
    
    phylink_ethtool_get_wol() is not enough to figure out if Ethernet driver
    supports Wake-on-Lan.
    Initialization of "supported" and "wolopts" members is done in phylink
    function, no need to keep them in calling function.
    
    phylink_ethtool_set_wol() return value is considered and determines
    if the MAC has to handle WoL or not. The case where the PHY doesn't
    implement WoL leads to the MAC configuring it to provide this feature.
    
    Fixes: 7897b071ac3b ("net: macb: convert to phylink")
    Cc: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Harini Katakam <harini.katakam@xilinx.com>
    Cc: Antoine Tenart <antoine.tenart@bootlin.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2d36146a095a0be8b06849a4bb27df6bcbe002c
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Fri Jul 10 14:46:42 2020 +0200

    net: macb: mark device wake capable when "magic-packet" property present
    
    [ Upstream commit ced4799d06375929e013eea04ba6908207afabbe ]
    
    Change the way the "magic-packet" DT property is handled in the
    macb_probe() function, matching DT binding documentation.
    Now we mark the device as "wakeup capable" instead of calling the
    device_init_wakeup() function that would enable the wakeup source.
    
    For Ethernet WoL, enabling the wakeup_source is done by
    using ethtool and associated macb_set_wol() function that
    already calls device_set_wakeup_enable() for this purpose.
    
    That would reduce power consumption by cutting more clocks if
    "magic-packet" property is set but WoL is not configured by ethtool.
    
    Fixes: 3e2a5e153906 ("net: macb: add wake-on-lan support via magic packet")
    Cc: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Harini Katakam <harini.katakam@xilinx.com>
    Cc: Sergio Prado <sergio.prado@e-labworks.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7571df08b49d931effe77448080b0098a383e3e
Author: Nicolas Ferre <nicolas.ferre@microchip.com>
Date:   Fri Jul 10 14:46:41 2020 +0200

    net: macb: fix wakeup test in runtime suspend/resume routines
    
    [ Upstream commit 515a10a701d570e26dfbe6ee373f77c8bf11053f ]
    
    Use the proper struct device pointer to check if the wakeup flag
    and wakeup source are positioned.
    Use the one passed by function call which is equivalent to
    &bp->dev->dev.parent.
    
    It's preventing the trigger of a spurious interrupt in case the
    Wake-on-Lan feature is used.
    
    Fixes: d54f89af6cc4 ("net: macb: Add pm runtime support")
    Cc: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Harini Katakam <harini.katakam@xilinx.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92792adf6bed4019efdeef6a948c1fa160e85b49
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Fri Jul 10 12:55:08 2020 +0200

    bnxt_en: fix NULL dereference in case SR-IOV configuration fails
    
    [ Upstream commit c8b1d7436045d3599bae56aef1682813ecccaad7 ]
    
    we need to set 'active_vfs' back to 0, if something goes wrong during the
    allocation of SR-IOV resources: otherwise, further VF configurations will
    wrongly assume that bp->pf.vf[x] are valid memory locations, and commands
    like the ones in the following sequence:
    
     # echo 2 >/sys/bus/pci/devices/${ADDR}/sriov_numvfs
     # ip link set dev ens1f0np0 up
     # ip link set dev ens1f0np0 vf 0 trust on
    
    will cause a kernel crash similar to this:
    
     bnxt_en 0000:3b:00.0: not enough MMIO resources for SR-IOV
     BUG: kernel NULL pointer dereference, address: 0000000000000014
     #PF: supervisor read access in kernel mode
     #PF: error_code(0x0000) - not-present page
     PGD 0 P4D 0
     Oops: 0000 [#1] SMP PTI
     CPU: 43 PID: 2059 Comm: ip Tainted: G          I       5.8.0-rc2.upstream+ #871
     Hardware name: Dell Inc. PowerEdge R740/08D89F, BIOS 2.2.11 06/13/2019
     RIP: 0010:bnxt_set_vf_trust+0x5b/0x110 [bnxt_en]
     Code: 44 24 58 31 c0 e8 f5 fb ff ff 85 c0 0f 85 b6 00 00 00 48 8d 1c 5b 41 89 c6 b9 0b 00 00 00 48 c1 e3 04 49 03 9c 24 f0 0e 00 00 <8b> 43 14 89 c2 83 c8 10 83 e2 ef 45 84 ed 49 89 e5 0f 44 c2 4c 89
     RSP: 0018:ffffac6246a1f570 EFLAGS: 00010246
     RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000000000000b
     RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff98b28f538900
     RBP: ffff98b28f538900 R08: 0000000000000000 R09: 0000000000000008
     R10: ffffffffb9515be0 R11: ffffac6246a1f678 R12: ffff98b28f538000
     R13: 0000000000000001 R14: 0000000000000000 R15: ffffffffc05451e0
     FS:  00007fde0f688800(0000) GS:ffff98baffd40000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000014 CR3: 000000104bb0a003 CR4: 00000000007606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     PKRU: 55555554
     Call Trace:
      do_setlink+0x994/0xfe0
      __rtnl_newlink+0x544/0x8d0
      rtnl_newlink+0x47/0x70
      rtnetlink_rcv_msg+0x29f/0x350
      netlink_rcv_skb+0x4a/0x110
      netlink_unicast+0x21d/0x300
      netlink_sendmsg+0x329/0x450
      sock_sendmsg+0x5b/0x60
      ____sys_sendmsg+0x204/0x280
      ___sys_sendmsg+0x88/0xd0
      __sys_sendmsg+0x5e/0xa0
      do_syscall_64+0x47/0x80
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: c0c050c58d840 ("bnxt_en: New Broadcom ethernet driver.")
    Reported-by: Fei Liu <feliu@redhat.com>
    CC: Jonathan Toppins <jtoppins@redhat.com>
    CC: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Reviewed-by: Michael Chan <michael.chan@broadcom.com>
    Acked-by: Jonathan Toppins <jtoppins@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55dda1a8f4dfb71f0ead5bc8527f884bcd697894
Author: Eli Britstein <elibr@mellanox.com>
Date:   Sun Jun 28 15:42:26 2020 +0300

    net/mlx5e: CT: Fix memory leak in cleanup
    
    [ Upstream commit eb32b3f53d283e8d68b6d86c3a6ed859b24dacae ]
    
    CT entries are deleted via a workqueue from netfilter. If removing the
    module before that, the rules are cleaned by the driver itself, but the
    memory entries for them are not freed. Fix that.
    
    Fixes: ac991b48d43c ("net/mlx5e: CT: Offload established flows")
    Signed-off-by: Eli Britstein <elibr@mellanox.com>
    Reviewed-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1d02b8995fba061c1d07fa93b291f348d1d6335
Author: Aya Levin <ayal@mellanox.com>
Date:   Mon Jun 15 12:48:47 2020 +0300

    net/mlx5e: Fix 50G per lane indication
    
    [ Upstream commit 6a1cf4e443a3b0a4d690d3c93b84b1e9cbfcb1bd ]
    
    Some released FW versions mistakenly don't set the capability that 50G
    per lane link-modes are supported for VFs (ptys_extended_ethernet
    capability bit). When the capability is unset, read
    PTYS.ext_eth_proto_capability (always reliable).
    If PTYS.ext_eth_proto_capability is valid (has a non-zero value)
    conclude that the HCA supports 50G per lane. Otherwise, conclude that
    the HCA doesn't support 50G per lane.
    
    Fixes: a08b4ed1373d ("net/mlx5: Add support to ext_* fields introduced in Port Type and Speed register")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8596b95cca940398717ddc5096beee830d5180fb
Author: Aya Levin <ayal@mellanox.com>
Date:   Wed May 20 10:37:42 2020 +0300

    net/mlx5e: Fix CPU mapping after function reload to avoid aRFS RX crash
    
    [ Upstream commit f4aebbfb56ed0c186adbeb2799df836da50f78e3 ]
    
    After function reload, CPU mapping used by aRFS RX is broken, leading to
    a kernel panic. Fix by moving initialization of rx_cpu_rmap from
    netdev_init to netdev_attach. IRQ table is re-allocated on mlx5_load,
    but netdev is not re-initialize.
    
    Trace of the panic:
    [ 22.055672] general protection fault, probably for non-canonical address 0x785634120000ff1c: 0000 [#1] SMP PTI
    [ 22.065010] CPU: 4 PID: 0 Comm: swapper/4 Not tainted 5.7.0-rc2-for-upstream-perf-2020-04-21_16-34-03-31 #1
    [ 22.067967] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    [ 22.071174] RIP: 0010:get_rps_cpu+0x267/0x300
    [ 22.075692] RSP: 0018:ffffc90000244d60 EFLAGS: 00010202
    [ 22.076888] RAX: ffff888459b0e400 RBX: 0000000000000000 RCX:0000000000000007
    [ 22.078364] RDX: 0000000000008884 RSI: ffff888467cb5b00 RDI:0000000000000000
    [ 22.079815] RBP: 00000000ff342b27 R08: 0000000000000007 R09:0000000000000003
    [ 22.081289] R10: ffffffffffffffff R11: 00000000000070cc R12:ffff888454900000
    [ 22.082767] R13: ffffc90000e5a950 R14: ffffc90000244dc0 R15:0000000000000007
    [ 22.084190] FS: 0000000000000000(0000) GS:ffff88846fc80000(0000)knlGS:0000000000000000
    [ 22.086161] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 22.087427] CR2: ffffffffffffffff CR3: 0000000464426003 CR4:0000000000760ee0
    [ 22.088888] DR0: 0000000000000000 DR1: 0000000000000000 DR2:0000000000000000
    [ 22.090336] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:0000000000000400
    [ 22.091764] PKRU: 55555554
    [ 22.092618] Call Trace:
    [ 22.093442] <IRQ>
    [ 22.094211] ? kvm_clock_get_cycles+0xd/0x10
    [ 22.095272] netif_receive_skb_list_internal+0x258/0x2a0
    [ 22.096460] gro_normal_list.part.137+0x19/0x40
    [ 22.097547] napi_complete_done+0xc6/0x110
    [ 22.098685] mlx5e_napi_poll+0x190/0x670 [mlx5_core]
    [ 22.099859] net_rx_action+0x2a0/0x400
    [ 22.100848] __do_softirq+0xd8/0x2a8
    [ 22.101829] irq_exit+0xa5/0xb0
    [ 22.102750] do_IRQ+0x52/0xd0
    [ 22.103654] common_interrupt+0xf/0xf
    [ 22.104641] </IRQ>
    
    Fixes: 4383cfcc65e7 ("net/mlx5: Add devlink reload")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c15471511e5bf6d3d38a5220ff8c8988b39a34c
Author: Aya Levin <ayal@mellanox.com>
Date:   Wed Jun 24 19:04:03 2020 +0300

    net/mlx5e: Fix VXLAN configuration restore after function reload
    
    [ Upstream commit b3c2ed21c0bdf35ba498a9974aa587f99a03b658 ]
    
    When detaching netdev, remove vxlan port configuration using
    udp_tunnel_drop_rx_info. During function reload, configuration will be
    restored using udp_tunnel_get_rx_info. This ensures sync between
    firmware and driver. Use udp_tunnel_get_rx_info even if its physical
    interface is down.
    
    Fixes: 4383cfcc65e7 ("net/mlx5: Add devlink reload")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8e284d778e7b3ada3d790ed9cf9dfdf783de6a0
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Sun Jun 14 17:31:26 2020 +0300

    net/mlx5: Fix eeprom support for SFP module
    
    [ Upstream commit 47afbdd2fa4c5775c383ba376a3d1da7d7f694dc ]
    
    Fix eeprom SFP query support by setting i2c_addr, offset and page number
    correctly. Unlike QSFP modules, SFP eeprom params are as follow:
    - i2c_addr is 0x50 for offset 0 - 255 and 0x51 for offset 256 - 511.
    - Page number is always zero.
    - Page offset is always relative to zero.
    
    As part of eeprom query, query the module ID (SFP / QSFP*) via helper
    function to set the params accordingly.
    
    In addition, change mlx5_qsfp_eeprom_page() input type to be u16 to avoid
    unnecessary casting.
    
    Fixes: a708fb7b1f8d ("net/mlx5e: ethtool, Add support for EEPROM high pages query")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Huy Nguyen <huyn@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f488ed82212934bf3eac7d910c99a17d3779c13
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Thu Jul 9 12:51:51 2020 +0100

    selftests: bpf: Fix detach from sockmap tests
    
    [ Upstream commit f43cb0d672aa8eb09bfdb779de5900c040487d1d ]
    
    Fix sockmap tests which rely on old bpf_prog_dispatch behaviour.
    In the first case, the tests check that detaching without giving
    a program succeeds. Since these are not the desired semantics,
    invert the condition. In the second case, the clean up code doesn't
    supply the necessary program fds.
    
    Fixes: bb0de3131f4c ("bpf: sockmap: Require attach_bpf_fd when detaching a program")
    Reported-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20200709115151.75829-1-lmb@cloudflare.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c150de3bc7c1a605819b08475a96905239d1081
Author: Sudarsana Reddy Kalluru <skalluru@marvell.com>
Date:   Wed Jul 8 20:14:29 2020 -0700

    qed: Populate nvm-file attributes while reading nvm config partition.
    
    [ Upstream commit 13cf8aab7425a253070433b5a55b4209ceac8b19 ]
    
    NVM config file address will be modified when the MBI image is upgraded.
    Driver would return stale config values if user reads the nvm-config
    (via ethtool -d) in this state. The fix is to re-populate nvm attribute
    info while reading the nvm config values/partition.
    
    Changes from previous version:
    -------------------------------
    v3: Corrected the formatting in 'Fixes' tag.
    v2: Added 'Fixes' tag.
    
    Fixes: 1ac4329a1cff ("qed: Add configuration information to register dump and debug data")
    Signed-off-by: Sudarsana Reddy Kalluru <skalluru@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d1c809531a64660818721dd008c6e57b3720e25
Author: Aya Levin <ayal@mellanox.com>
Date:   Tue Jul 7 14:06:11 2020 +0300

    IB/mlx5: Fix 50G per lane indication
    
    [ Upstream commit 530c8632b547ff72f11ff83654b22462a73f1f7b ]
    
    Some released FW versions mistakenly don't set the capability that 50G per
    lane link-modes are supported for VFs (ptys_extended_ethernet capability
    bit).
    
    Use PTYS.ext_eth_proto_capability instead, as this indication is always
    accurate. If PTYS.ext_eth_proto_capability is valid
    (has a non-zero value) conclude that the HCA supports 50G per lane.
    
    Otherwise, conclude that the HCA doesn't support 50G per lane.
    
    Fixes: 08e8676f1607 ("IB/mlx5: Add support for 50Gbps per lane link modes")
    Link: https://lore.kernel.org/r/20200707110612.882962-3-leon@kernel.org
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Reviewed-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ca140995654558475b313147cf45c5d9cac4caa
Author: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
Date:   Thu Jul 9 03:14:27 2020 +0530

    cxgb4: fix all-mask IP address comparison
    
    [ Upstream commit 76c4d85c9260c3d741cbd194c30c61983d0a4303 ]
    
    Convert all-mask IP address to Big Endian, instead, for comparison.
    
    Fixes: f286dd8eaad5 ("cxgb4: use correct type for all-mask IP address comparison")
    Signed-off-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95e6c7f6d569b70b76dda42a347adada2a6bd706
Author: Zheng Bin <zhengbin13@huawei.com>
Date:   Mon Jun 29 09:23:49 2020 +0800

    nbd: Fix memory leak in nbd_add_socket
    
    [ Upstream commit 579dd91ab3a5446b148e7f179b6596b270dace46 ]
    
    When adding first socket to nbd, if nsock's allocation failed, the data
    structure member "config->socks" was reallocated, but the data structure
    member "config->num_connections" was not updated. A memory leak will occur
    then because the function "nbd_config_put" will free "config->socks" only
    when "config->num_connections" is not zero.
    
    Fixes: 03bf73c315ed ("nbd: prevent memory leak")
    Reported-by: syzbot+934037347002901b8d2a@syzkaller.appspotmail.com
    Signed-off-by: Zheng Bin <zhengbin13@huawei.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c4487e7e901a18325d85d06aab81dc33b5a5818
Author: Wei Li <liwei391@huawei.com>
Date:   Sun May 10 05:41:56 2020 +0800

    arm64: kgdb: Fix single-step exception handling oops
    
    [ Upstream commit 8523c006264df65aac7d77284cc69aac46a6f842 ]
    
    After entering kdb due to breakpoint, when we execute 'ss' or 'go' (will
    delay installing breakpoints, do single-step first), it won't work
    correctly, and it will enter kdb due to oops.
    
    It's because the reason gotten in kdb_stub() is not as expected, and it
    seems that the ex_vector for single-step should be 0, like what arch
    powerpc/sh/parisc has implemented.
    
    Before the patch:
    Entering kdb (current=0xffff8000119e2dc0, pid 0) on processor 0 due to Keyboard Entry
    [0]kdb> bp printk
    Instruction(i) BP #0 at 0xffff8000101486cc (printk)
        is enabled   addr at ffff8000101486cc, hardtype=0 installed=0
    
    [0]kdb> g
    
    / # echo h > /proc/sysrq-trigger
    
    Entering kdb (current=0xffff0000fa878040, pid 266) on processor 3 due to Breakpoint @ 0xffff8000101486cc
    [3]kdb> ss
    
    Entering kdb (current=0xffff0000fa878040, pid 266) on processor 3 Oops: (null)
    due to oops @ 0xffff800010082ab8
    CPU: 3 PID: 266 Comm: sh Not tainted 5.7.0-rc4-13839-gf0e5ad491718 #6
    Hardware name: linux,dummy-virt (DT)
    pstate: 00000085 (nzcv daIf -PAN -UAO)
    pc : el1_irq+0x78/0x180
    lr : __handle_sysrq+0x80/0x190
    sp : ffff800015003bf0
    x29: ffff800015003d20 x28: ffff0000fa878040
    x27: 0000000000000000 x26: ffff80001126b1f0
    x25: ffff800011b6a0d8 x24: 0000000000000000
    x23: 0000000080200005 x22: ffff8000101486cc
    x21: ffff800015003d30 x20: 0000ffffffffffff
    x19: ffff8000119f2000 x18: 0000000000000000
    x17: 0000000000000000 x16: 0000000000000000
    x15: 0000000000000000 x14: 0000000000000000
    x13: 0000000000000000 x12: 0000000000000000
    x11: 0000000000000000 x10: 0000000000000000
    x9 : 0000000000000000 x8 : ffff800015003e50
    x7 : 0000000000000002 x6 : 00000000380b9990
    x5 : ffff8000106e99e8 x4 : ffff0000fadd83c0
    x3 : 0000ffffffffffff x2 : ffff800011b6a0d8
    x1 : ffff800011b6a000 x0 : ffff80001130c9d8
    Call trace:
     el1_irq+0x78/0x180
     printk+0x0/0x84
     write_sysrq_trigger+0xb0/0x118
     proc_reg_write+0xb4/0xe0
     __vfs_write+0x18/0x40
     vfs_write+0xb0/0x1b8
     ksys_write+0x64/0xf0
     __arm64_sys_write+0x14/0x20
     el0_svc_common.constprop.2+0xb0/0x168
     do_el0_svc+0x20/0x98
     el0_sync_handler+0xec/0x1a8
     el0_sync+0x140/0x180
    
    [3]kdb>
    
    After the patch:
    Entering kdb (current=0xffff8000119e2dc0, pid 0) on processor 0 due to Keyboard Entry
    [0]kdb> bp printk
    Instruction(i) BP #0 at 0xffff8000101486cc (printk)
        is enabled   addr at ffff8000101486cc, hardtype=0 installed=0
    
    [0]kdb> g
    
    / # echo h > /proc/sysrq-trigger
    
    Entering kdb (current=0xffff0000fa852bc0, pid 268) on processor 0 due to Breakpoint @ 0xffff8000101486cc
    [0]kdb> g
    
    Entering kdb (current=0xffff0000fa852bc0, pid 268) on processor 0 due to Breakpoint @ 0xffff8000101486cc
    [0]kdb> ss
    
    Entering kdb (current=0xffff0000fa852bc0, pid 268) on processor 0 due to SS trap @ 0xffff800010082ab8
    [0]kdb>
    
    Fixes: 44679a4f142b ("arm64: KGDB: Add step debugging support")
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20200509214159.19680-2-liwei391@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e57133275e95d52f65e23ab1c93f6f3c5e642d73
Author: Dmitry Bogdanov <dbogdanov@marvell.com>
Date:   Wed Jul 8 17:17:10 2020 +0300

    net: atlantic: fix ip dst and ipv6 address filters
    
    [ Upstream commit a42e6aee7f47a8a68d09923c720fc8f605a04207 ]
    
    This patch fixes ip dst and ipv6 address filters.
    There were 2 mistakes in the code, which led to the issue:
    * invalid register was used for ipv4 dst address;
    * incorrect write order of dwords for ipv6 addresses.
    
    Fixes: 23e7a718a49b ("net: aquantia: add rx-flow filter definitions")
    Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
    Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
    Signed-off-by: Alexander Lobakin <alobakin@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51d1a5ba09fb0fd40256946fbe79225d07d40722
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Tue Jul 7 16:09:31 2020 +0300

    RDMA/siw: Fix reporting vendor_part_id
    
    [ Upstream commit 04340645f69ab7abb6f9052688a60f0213b3f79c ]
    
    Move the initialization of the vendor_part_id to be before calling
    ib_register_device(), this is needed because the query_device() callback
    is called from the context of ib_register_device() before initializing the
    vendor_part_id, so the reported value is wrong.
    
    Fixes: bdcf26bf9b3a ("rdma/siw: network and RDMA core interface")
    Link: https://lore.kernel.org/r/20200707130931.444724-1-kamalheib1@gmail.com
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Reviewed-by: Bernard Metzler <bmt@zurich.ibm.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed2f2a9a1fa1a1109a4fbf3e59f72c3cb6a17237
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Jul 8 17:49:42 2020 +1000

    powerpc/64s/exception: Fix 0x1500 interrupt handler crash
    
    [ Upstream commit 4557ac6b344b8cdf948ff8b007e8e1de34832f2e ]
    
    A typo caused the interrupt handler to branch immediately to the
    common "unknown interrupt" handler and skip the special case test for
    denormal cause.
    
    This does not affect KVM softpatch handling (e.g., for POWER9 TM
    assist) because the KVM test was moved to common code by commit
    9600f261acaa ("powerpc/64s/exception: Move KVM test to common code")
    just before this bug was introduced.
    
    Fixes: 3f7fbd97d07d ("powerpc/64s/exception: Clean up SRR specifiers")
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Tested-by: Paul Menzel <pmenzel@molgen.mpg.de>
    [mpe: Split selftest into a separate patch]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200708074942.1713396-1-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31503de4dd384d550cf5e2e03d3d9ada49dc1700
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Jul 7 14:13:26 2020 -0700

    ionic: centralize queue reset code
    
    [ Upstream commit 086c18f2452d0028f81e319f098bcb8e53133dbf ]
    
    The queue reset pattern is used in a couple different places,
    only slightly different from each other, and could cause
    issues if one gets changed and the other didn't.  This puts
    them together so that only one version is needed, yet each
    can have slighty different effects by passing in a pointer
    to a work function to do whatever configuration twiddling is
    needed in the middle of the reset.
    
    This specifically addresses issues seen where under loops
    of changing ring size or queue count parameters we could
    occasionally bump into the netdev watchdog.
    
    v2: added more commit message commentary
    
    Fixes: 4d03e00a2140 ("ionic: Add initial ethtool support")
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Acked-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ed1dabb18da0642b916cad7136ad5b5719d8bee
Author: Alexander Lobakin <alobakin@marvell.com>
Date:   Mon Jul 6 12:25:53 2020 +0300

    net: qed: fix buffer overflow on ethtool -d
    
    [ Upstream commit da3287111ab43b32cec54d7ca6b48640f210a196 ]
    
    When generating debug dump, driver firstly collects all data in binary
    form, and then performs per-feature formatting to human-readable if it
    is supported.
    
    For ethtool -d, this is roughly incorrect for two reasons. First of all,
    drivers should always provide only original raw dumps to Ethtool without
    any changes.
    The second, and more critical, is that Ethtool's output buffer size is
    strictly determined by ethtool_ops::get_regs_len(), and all data *must*
    fit in it. The current version of driver always returns the size of raw
    data, but the size of the formatted buffer exceeds it in most cases.
    This leads to out-of-bound writes and memory corruption.
    
    Address both issues by adding an option to return original, non-formatted
    debug data, and using it for Ethtool case.
    
    v2:
     - Expand commit message to make it more clear;
     - No functional changes.
    
    Fixes: c965db444629 ("qed: Add support for debug data collection")
    Signed-off-by: Alexander Lobakin <alobakin@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4b71c2136792ec78f6cf37110acb79fe49592db
Author: Alex Elder <elder@linaro.org>
Date:   Mon Jul 6 18:10:08 2020 -0500

    net: ipa: fix QMI structure definition bugs
    
    [ Upstream commit 74478ea4ded519db35cb1f059948b1e713bb4abf ]
    
    Building with "W=1" did exactly what it was supposed to do, namely
    point out some suspicious-looking code to be verified not to contain
    bugs.
    
    Some QMI message structures defined in "ipa_qmi_msg.c" contained
    some bad field names (duplicating the "elem_size" field instead of
    defining the "offset" field), almost certainly due to copy/paste
    errors that weren't obvious in a scan of the code.  Fix these bugs.
    
    Fixes: 530f9216a953 ("soc: qcom: ipa: AP/modem communications")
    Signed-off-by: Alex Elder <elder@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c752ccd537a89ac3ae22775fa64d57a67d4d02ad
Author: Vinod Koul <vkoul@kernel.org>
Date:   Mon Jun 29 19:17:37 2020 +0530

    ALSA: compress: fix partial_drain completion state
    
    [ Upstream commit f79a732a8325dfbd570d87f1435019d7e5501c6d ]
    
    On partial_drain completion we should be in SNDRV_PCM_STATE_RUNNING
    state, so set that for partially draining streams in
    snd_compr_drain_notify() and use a flag for partially draining streams
    
    While at it, add locks for stream state change in
    snd_compr_drain_notify() as well.
    
    Fixes: f44f2a5417b2 ("ALSA: compress: fix drain calls blocking other compress functions (v6)")
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Link: https://lore.kernel.org/r/20200629134737.105993-4-vkoul@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06d85bc7e09f79aa947052dfbcd819fe4a332792
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Mon Jul 6 19:26:02 2020 +0800

    net: hns3: fix use-after-free when doing self test
    
    [ Upstream commit a06656211304fec653c1931c2ca6d644013b5bbb ]
    
    Enable promisc mode of PF, set VF link state to enable, and
    run iperf of the VF, then do self test of the PF. The self test
    will fail with a low frequency, and may cause a use-after-free
    problem.
    
    [   87.142126] selftest:000004a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    [   87.159722] ==================================================================
    [   87.174187] BUG: KASAN: use-after-free in hex_dump_to_buffer+0x140/0x608
    [   87.187600] Read of size 1 at addr ffff003b22828000 by task ethtool/1186
    [   87.201012]
    [   87.203978] CPU: 7 PID: 1186 Comm: ethtool Not tainted 5.5.0-rc4-gfd51c473-dirty #4
    [   87.219306] Hardware name: Huawei TaiShan 2280 V2/BC82AMDA, BIOS TA BIOS 2280-A CS V2.B160.01 01/15/2020
    [   87.238292] Call trace:
    [   87.243173]  dump_backtrace+0x0/0x280
    [   87.250491]  show_stack+0x24/0x30
    [   87.257114]  dump_stack+0xe8/0x140
    [   87.263911]  print_address_description.isra.8+0x70/0x380
    [   87.274538]  __kasan_report+0x12c/0x230
    [   87.282203]  kasan_report+0xc/0x18
    [   87.288999]  __asan_load1+0x60/0x68
    [   87.295969]  hex_dump_to_buffer+0x140/0x608
    [   87.304332]  print_hex_dump+0x140/0x1e0
    [   87.312000]  hns3_lb_check_skb_data+0x168/0x170
    [   87.321060]  hns3_clean_rx_ring+0xa94/0xfe0
    [   87.329422]  hns3_self_test+0x708/0x8c0
    
    The length of packet sent by the selftest process is only
    128 + 14 bytes, and the min buffer size of a BD is 256 bytes,
    and the receive process will make sure the packet sent by
    the selftest process is in the linear part, so only check
    the linear part in hns3_lb_check_skb_data().
    
    So fix this use-after-free by using skb_headlen() to dump
    skb->data instead of skb->len.
    
    Fixes: c39c4d98dc65 ("net: hns3: Add mac loopback selftest support in hns3 driver")
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c860585bb6b4bbe32c2cb78630f34463426b6f7
Author: Huazhong Tan <tanhuazhong@huawei.com>
Date:   Mon Jul 6 19:26:01 2020 +0800

    net: hns3: add a missing uninit debugfs when unload driver
    
    [ Upstream commit e22b5e728bbb179b912d3a3cd5c25894a89a26a2 ]
    
    When unloading driver, if flag HNS3_NIC_STATE_INITED has been
    already cleared, the debugfs will not be uninitialized, so fix it.
    
    Fixes: b2292360bb2a ("net: hns3: Add debugfs framework registration")
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a2e6606cc12d6fd3a0e5562a8e31b430f880262
Author: Huazhong Tan <tanhuazhong@huawei.com>
Date:   Mon Jul 6 19:26:00 2020 +0800

    net: hns3: fix for mishandle of asserting VF reset fail
    
    [ Upstream commit cddd5648926d7a6e84526dadd8bfb21609a14fb7 ]
    
    When asserts VF reset fail, flag HCLGEVF_STATE_CMD_DISABLE
    and handshake status should not set, otherwise the retry will
    fail. So adds a check for asserting VF reset and returns
    directly when fails.
    
    Fixes: ef5f8e507ec9 ("net: hns3: stop handling command queue while resetting VF")
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 473b3901d8e7b9a8dc1326b523cc683b8125443f
Author: Huazhong Tan <tanhuazhong@huawei.com>
Date:   Mon Jul 6 19:25:59 2020 +0800

    net: hns3: check reset pending after FLR prepare
    
    [ Upstream commit bb3d866882c280a85e8950d4d72af1e294d2e69c ]
    
    If there is a PF reset pending before FLR prepare, FLR's
    preparatory work will not fail, but the FLR rebuild procedure
    will fail for this pending. So this PF reset pending should
    be handled in the FLR preparatory.
    
    Fixes: 8627bdedc435 ("net: hns3: refactor the precedure of PF FLR")
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc9571178b2aecc81c84052af9670e867e27f644
Author: Andre Edich <andre.edich@microchip.com>
Date:   Mon Jul 6 10:39:35 2020 +0200

    smsc95xx: avoid memory leak in smsc95xx_bind
    
    [ Upstream commit 3ed58f96a70b85ef646d5427258f677f1395b62f ]
    
    In a case where the ID_REV register read is failed, the memory for a
    private data structure has to be freed before returning error from the
    function smsc95xx_bind.
    
    Fixes: bbd9f9ee69242 ("smsc95xx: add wol support for more frame types")
    Signed-off-by: Andre Edich <andre.edich@microchip.com>
    Signed-off-by: Parthiban Veerasooran <Parthiban.Veerasooran@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 208c82f380d24c23f95ddacfb8e34560ba29533e
Author: Andre Edich <andre.edich@microchip.com>
Date:   Mon Jul 6 10:39:34 2020 +0200

    smsc95xx: check return value of smsc95xx_reset
    
    [ Upstream commit 7c8b1e855f94f88a0c569be6309fc8d5c8844cd1 ]
    
    The return value of the function smsc95xx_reset() must be checked
    to avoid returning false success from the function smsc95xx_bind().
    
    Fixes: 2f7ca802bdae2 ("net: Add SMSC LAN9500 USB2.0 10/100 ethernet adapter driver")
    Signed-off-by: Andre Edich <andre.edich@microchip.com>
    Signed-off-by: Parthiban Veerasooran <Parthiban.Veerasooran@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adf8da377a8658e23c179ae6c416b5314ef865cc
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Jun 30 16:39:35 2020 +0300

    perf intel-pt: Fix PEBS sample for XMM registers
    
    [ Upstream commit 4c95ad261cfac120dd66238fcae222766754c219 ]
    
    The condition to add XMM registers was missing, the regs array needed to
    be in the outer scope, and the size of the regs array was too small.
    
    Fixes: 143d34a6b387b ("perf intel-pt: Add XMM registers to synthesized PEBS sample")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Luwei Kang <luwei.kang@intel.com>
    Link: http://lore.kernel.org/lkml/20200630133935.11150-4-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a53bb39408021aa12cf0684055c4fecafe79bcb
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Jun 30 16:39:33 2020 +0300

    perf intel-pt: Fix recording PEBS-via-PT with registers
    
    [ Upstream commit 75bcb8776dc987538f267ba4ba05ca43fc2b1676 ]
    
    When recording PEBS-via-PT, the kernel will not accept the intel_pt
    event with register sampling e.g.
    
     # perf record --kcore -c 10000 -e '{intel_pt/branch=0/,branch-loads/aux-output/ppp}' -I -- ls -l
     Error:
     intel_pt/branch=0/: PMU Hardware doesn't support sampling/overflow-interrupts. Try 'perf stat'
    
    Fix by suppressing register sampling on the intel_pt evsel.
    
    Committer notes:
    
    Adrian informed that this is only available from Tremont onwards, so on
    older processors the error continues the same as before.
    
    Fixes: 9e64cefe4335b ("perf intel-pt: Process options for PEBS event synthesis")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Luwei Kang <luwei.kang@intel.com>
    Link: http://lore.kernel.org/lkml/20200630133935.11150-2-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1de53aaa04c1d2c6fb1db570eaf9ed6769c00a35
Author: Wei Li <liwei391@huawei.com>
Date:   Fri Jun 12 17:43:22 2020 +0800

    perf report TUI: Fix segmentation fault in perf_evsel__hists_browse()
    
    [ Upstream commit d61cbb859b45fdb6b4997f2d51834fae41af0e94 ]
    
    The segmentation fault can be reproduced as following steps:
    
    1) Executing perf report in tui.
    
    2) Typing '/xxxxx' to filter the symbol to get nothing matched.
    
    3) Pressing enter with no entry selected.
    
    Then it will report a segmentation fault.
    
    It is caused by the lack of check of browser->he_selection when
    accessing it's member res_samples in perf_evsel__hists_browse().
    
    These processes are meaningful for specified samples, so we can skip
    these when nothing is selected.
    
    Fixes: 4968ac8fb7c3 ("perf report: Implement browsing of individual samples")
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Link: http://lore.kernel.org/lkml/20200612094322.39565-1-liwei391@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2741fae5449c912ed5db5c2a283d144a86de3678
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Thu Jul 2 17:08:55 2020 +0000

    net: rmnet: do not allow to add multiple bridge interfaces
    
    [ Upstream commit 2fb2799a2abb39d7dbb48abb3baa1133bf5e921a ]
    
    rmnet can have only two bridge interface.
    One of them is a link interface and another one is added by
    the master operation.
    rmnet interface shouldn't allow adding additional
    bridge interfaces by mater operation.
    But, there is no code to deny additional interfaces.
    So, interface leak occurs.
    
    Test commands:
        ip link add dummy0 type dummy
        ip link add dummy1 type dummy
        ip link add dummy2 type dummy
        ip link add rmnet0 link dummy0 type rmnet mux_id 1
        ip link set dummy1 master rmnet0
        ip link set dummy2 master rmnet0
        ip link del rmnet0
    
    In the above test command, the dummy0 was attached to rmnet as VND mode.
    Then, dummy1 was attached to rmnet0 as BRIDGE mode.
    At this point, dummy0 mode is switched from VND to BRIDGE automatically.
    Then, dummy2 is attached to rmnet as BRIDGE mode.
    At this point, rmnet0 should deny this operation.
    But, rmnet0 doesn't deny this.
    So that below splat occurs when the rmnet0 interface is deleted.
    
    Splat looks like:
    [  186.684787][    C2] WARNING: CPU: 2 PID: 1009 at net/core/dev.c:8992 rollback_registered_many+0x986/0xcf0
    [  186.684788][    C2] Modules linked in: rmnet dummy openvswitch nsh nf_conncount nf_nat nf_conntrack nf_defrag_x
    [  186.684805][    C2] CPU: 2 PID: 1009 Comm: ip Not tainted 5.8.0-rc1+ #621
    [  186.684807][    C2] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    [  186.684808][    C2] RIP: 0010:rollback_registered_many+0x986/0xcf0
    [  186.684811][    C2] Code: 41 8b 4e cc 45 31 c0 31 d2 4c 89 ee 48 89 df e8 e0 47 ff ff 85 c0 0f 84 cd fc ff ff 5
    [  186.684812][    C2] RSP: 0018:ffff8880cd9472e0 EFLAGS: 00010287
    [  186.684815][    C2] RAX: ffff8880cc56da58 RBX: ffff8880ab21c000 RCX: ffffffff9329d323
    [  186.684816][    C2] RDX: 1ffffffff2be6410 RSI: 0000000000000008 RDI: ffffffff95f32080
    [  186.684818][    C2] RBP: dffffc0000000000 R08: fffffbfff2be6411 R09: fffffbfff2be6411
    [  186.684819][    C2] R10: ffffffff95f32087 R11: 0000000000000001 R12: ffff8880cd947480
    [  186.684820][    C2] R13: ffff8880ab21c0b8 R14: ffff8880cd947400 R15: ffff8880cdf10640
    [  186.684822][    C2] FS:  00007f00843890c0(0000) GS:ffff8880d4e00000(0000) knlGS:0000000000000000
    [  186.684823][    C2] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  186.684825][    C2] CR2: 000055b8ab1077b8 CR3: 00000000ab612006 CR4: 00000000000606e0
    [  186.684826][    C2] Call Trace:
    [  186.684827][    C2]  ? lockdep_hardirqs_on_prepare+0x379/0x540
    [  186.684829][    C2]  ? netif_set_real_num_tx_queues+0x780/0x780
    [  186.684830][    C2]  ? rmnet_unregister_real_device+0x56/0x90 [rmnet]
    [  186.684831][    C2]  ? __kasan_slab_free+0x126/0x150
    [  186.684832][    C2]  ? kfree+0xdc/0x320
    [  186.684834][    C2]  ? rmnet_unregister_real_device+0x56/0x90 [rmnet]
    [  186.684835][    C2]  unregister_netdevice_many.part.135+0x13/0x1b0
    [  186.684836][    C2]  rtnl_delete_link+0xbc/0x100
    [ ... ]
    [  238.440071][ T1009] unregister_netdevice: waiting for rmnet0 to become free. Usage count = 1
    
    Fixes: 037f9cdf72fb ("net: rmnet: use upper/lower device infrastructure")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac79644a6df7bb2c26264b54c195a10fb77e2187
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Thu Jul 2 17:08:18 2020 +0000

    net: rmnet: fix lower interface leak
    
    [ Upstream commit 2a762e9e8cd1cf1242e4269a2244666ed02eecd1 ]
    
    There are two types of the lower interface of rmnet that are VND
    and BRIDGE.
    Each lower interface can have only one type either VND or BRIDGE.
    But, there is a case, which uses both lower interface types.
    Due to this unexpected behavior, lower interface leak occurs.
    
    Test commands:
        ip link add dummy0 type dummy
        ip link add dummy1 type dummy
        ip link add rmnet0 link dummy0 type rmnet mux_id 1
        ip link set dummy1 master rmnet0
        ip link add rmnet1 link dummy1 type rmnet mux_id 2
        ip link del rmnet0
    
    The dummy1 was attached as BRIDGE interface of rmnet0.
    Then, it also was attached as VND interface of rmnet1.
    This is unexpected behavior and there is no code for handling this case.
    So that below splat occurs when the rmnet0 interface is deleted.
    
    Splat looks like:
    [   53.254112][    C1] WARNING: CPU: 1 PID: 1192 at net/core/dev.c:8992 rollback_registered_many+0x986/0xcf0
    [   53.254117][    C1] Modules linked in: rmnet dummy openvswitch nsh nf_conncount nf_nat nf_conntrack nf_defrag_ipv6 nfx
    [   53.254182][    C1] CPU: 1 PID: 1192 Comm: ip Not tainted 5.8.0-rc1+ #620
    [   53.254188][    C1] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    [   53.254192][    C1] RIP: 0010:rollback_registered_many+0x986/0xcf0
    [   53.254200][    C1] Code: 41 8b 4e cc 45 31 c0 31 d2 4c 89 ee 48 89 df e8 e0 47 ff ff 85 c0 0f 84 cd fc ff ff 0f 0b e5
    [   53.254205][    C1] RSP: 0018:ffff888050a5f2e0 EFLAGS: 00010287
    [   53.254214][    C1] RAX: ffff88805756d658 RBX: ffff88804d99c000 RCX: ffffffff8329d323
    [   53.254219][    C1] RDX: 1ffffffff0be6410 RSI: 0000000000000008 RDI: ffffffff85f32080
    [   53.254223][    C1] RBP: dffffc0000000000 R08: fffffbfff0be6411 R09: fffffbfff0be6411
    [   53.254228][    C1] R10: ffffffff85f32087 R11: 0000000000000001 R12: ffff888050a5f480
    [   53.254233][    C1] R13: ffff88804d99c0b8 R14: ffff888050a5f400 R15: ffff8880548ebe40
    [   53.254238][    C1] FS:  00007f6b86b370c0(0000) GS:ffff88806c200000(0000) knlGS:0000000000000000
    [   53.254243][    C1] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   53.254248][    C1] CR2: 0000562c62438758 CR3: 000000003f600005 CR4: 00000000000606e0
    [   53.254253][    C1] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   53.254257][    C1] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   53.254261][    C1] Call Trace:
    [   53.254266][    C1]  ? lockdep_hardirqs_on_prepare+0x379/0x540
    [   53.254270][    C1]  ? netif_set_real_num_tx_queues+0x780/0x780
    [   53.254275][    C1]  ? rmnet_unregister_real_device+0x56/0x90 [rmnet]
    [   53.254279][    C1]  ? __kasan_slab_free+0x126/0x150
    [   53.254283][    C1]  ? kfree+0xdc/0x320
    [   53.254288][    C1]  ? rmnet_unregister_real_device+0x56/0x90 [rmnet]
    [   53.254293][    C1]  unregister_netdevice_many.part.135+0x13/0x1b0
    [   53.254297][    C1]  rtnl_delete_link+0xbc/0x100
    [   53.254301][    C1]  ? rtnl_af_register+0xc0/0xc0
    [   53.254305][    C1]  rtnl_dellink+0x2dc/0x840
    [   53.254309][    C1]  ? find_held_lock+0x39/0x1d0
    [   53.254314][    C1]  ? valid_fdb_dump_strict+0x620/0x620
    [   53.254318][    C1]  ? rtnetlink_rcv_msg+0x457/0x890
    [   53.254322][    C1]  ? lock_contended+0xd20/0xd20
    [   53.254326][    C1]  rtnetlink_rcv_msg+0x4a8/0x890
    [ ... ]
    [   73.813696][ T1192] unregister_netdevice: waiting for rmnet0 to become free. Usage count = 1
    
    Fixes: 037f9cdf72fb ("net: rmnet: use upper/lower device infrastructure")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7e08f82172d4cf59a019fcad0f1dfbd59aeaa62
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Jul 1 13:17:40 2020 +0200

    netfilter: conntrack: refetch conntrack after nf_conntrack_update()
    
    [ Upstream commit d005fbb855d3b5660d62ee5a6bd2d99c13ff8cf3 ]
    
    __nf_conntrack_update() might refresh the conntrack object that is
    attached to the skbuff. Otherwise, this triggers UAF.
    
    [  633.200434] ==================================================================
    [  633.200472] BUG: KASAN: use-after-free in nf_conntrack_update+0x34e/0x770 [nf_conntrack]
    [  633.200478] Read of size 1 at addr ffff888370804c00 by task nfqnl_test/6769
    
    [  633.200487] CPU: 1 PID: 6769 Comm: nfqnl_test Not tainted 5.8.0-rc2+ #388
    [  633.200490] Hardware name: LENOVO 23259H1/23259H1, BIOS G2ET32WW (1.12 ) 05/30/2012
    [  633.200491] Call Trace:
    [  633.200499]  dump_stack+0x7c/0xb0
    [  633.200526]  ? nf_conntrack_update+0x34e/0x770 [nf_conntrack]
    [  633.200532]  print_address_description.constprop.6+0x1a/0x200
    [  633.200539]  ? _raw_write_lock_irqsave+0xc0/0xc0
    [  633.200568]  ? nf_conntrack_update+0x34e/0x770 [nf_conntrack]
    [  633.200594]  ? nf_conntrack_update+0x34e/0x770 [nf_conntrack]
    [  633.200598]  kasan_report.cold.9+0x1f/0x42
    [  633.200604]  ? call_rcu+0x2c0/0x390
    [  633.200633]  ? nf_conntrack_update+0x34e/0x770 [nf_conntrack]
    [  633.200659]  nf_conntrack_update+0x34e/0x770 [nf_conntrack]
    [  633.200687]  ? nf_conntrack_find_get+0x30/0x30 [nf_conntrack]
    
    Closes: https://bugzilla.netfilter.org/show_bug.cgi?id=1436
    Fixes: ee04805ff54a ("netfilter: conntrack: make conntrack userspace helpers work again")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3331b12fa0e52680d0e7869e4ce80c4f6198f3a3
Author: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date:   Thu Jul 2 12:44:50 2020 +0300

    net: dsa: microchip: set the correct number of ports
    
    [ Upstream commit af199a1a9cb02ec0194804bd46c174b6db262075 ]
    
    The number of ports is incorrectly set to the maximum available for a DSA
    switch. Even if the extra ports are not used, this causes some functions
    to be called later, like port_disable() and port_stp_state_set(). If the
    driver doesn't check the port index, it will end up modifying unknown
    registers.
    
    Fixes: b987e98e50ab ("dsa: add DSA switch driver for Microchip KSZ9477")
    Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f294bd94e0bfa9252ab5e472381b7251f20b75fd
Author: Divya Indi <divya.indi@oracle.com>
Date:   Tue Jun 23 19:13:09 2020 -0700

    IB/sa: Resolv use-after-free in ib_nl_make_request()
    
    [ Upstream commit f427f4d6214c183c474eeb46212d38e6c7223d6a ]
    
    There is a race condition where ib_nl_make_request() inserts the request
    data into the linked list but the timer in ib_nl_request_timeout() can see
    it and destroy it before ib_nl_send_msg() is done touching it. This could
    happen, for instance, if there is a long delay allocating memory during
    nlmsg_new()
    
    This causes a use-after-free in the send_mad() thread:
    
      [<ffffffffa02f43cb>] ? ib_pack+0x17b/0x240 [ib_core]
      [ <ffffffffa032aef1>] ib_sa_path_rec_get+0x181/0x200 [ib_sa]
      [<ffffffffa0379db0>] rdma_resolve_route+0x3c0/0x8d0 [rdma_cm]
      [<ffffffffa0374450>] ? cma_bind_port+0xa0/0xa0 [rdma_cm]
      [<ffffffffa040f850>] ? rds_rdma_cm_event_handler_cmn+0x850/0x850 [rds_rdma]
      [<ffffffffa040f22c>] rds_rdma_cm_event_handler_cmn+0x22c/0x850 [rds_rdma]
      [<ffffffffa040f860>] rds_rdma_cm_event_handler+0x10/0x20 [rds_rdma]
      [<ffffffffa037778e>] addr_handler+0x9e/0x140 [rdma_cm]
      [<ffffffffa026cdb4>] process_req+0x134/0x190 [ib_addr]
      [<ffffffff810a02f9>] process_one_work+0x169/0x4a0
      [<ffffffff810a0b2b>] worker_thread+0x5b/0x560
      [<ffffffff810a0ad0>] ? flush_delayed_work+0x50/0x50
      [<ffffffff810a68fb>] kthread+0xcb/0xf0
      [<ffffffff816ec49a>] ? __schedule+0x24a/0x810
      [<ffffffff816ec49a>] ? __schedule+0x24a/0x810
      [<ffffffff810a6830>] ? kthread_create_on_node+0x180/0x180
      [<ffffffff816f25a7>] ret_from_fork+0x47/0x90
      [<ffffffff810a6830>] ? kthread_create_on_node+0x180/0x180
    
    The ownership rule is once the request is on the list, ownership transfers
    to the list and the local thread can't touch it any more, just like for
    the normal MAD case in send_mad().
    
    Thus, instead of adding before send and then trying to delete after on
    errors, move the entire thing under the spinlock so that the send and
    update of the lists are atomic to the conurrent threads. Lightly reoganize
    things so spinlock safe memory allocations are done in the final NL send
    path and the rest of the setup work is done before and outside the lock.
    
    Fixes: 3ebd2fd0d011 ("IB/sa: Put netlink request into the request list before sending")
    Link: https://lore.kernel.org/r/1592964789-14533-1-git-send-email-divya.indi@oracle.com
    Signed-off-by: Divya Indi <divya.indi@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9542f27d78307b4feb5ad12f7aece2250abfdb2c
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Jun 20 17:57:52 2020 +0200

    drm/meson: viu: fix setting the OSD burst length in VIU_OSD1_FIFO_CTRL_STAT
    
    [ Upstream commit 17f64701ea6f541db7eb5d7423a830cb929b3052 ]
    
    The burst length is configured in VIU_OSD1_FIFO_CTRL_STAT[31] and
    VIU_OSD1_FIFO_CTRL_STAT[11:10]. The public S905D3 datasheet describes
    this as:
    - 0x0 = up to 24 per burst
    - 0x1 = up to 32 per burst
    - 0x2 = up to 48 per burst
    - 0x3 = up to 64 per burst
    - 0x4 = up to 96 per burst
    - 0x5 = up to 128 per burst
    
    The lower two bits map to VIU_OSD1_FIFO_CTRL_STAT[11:10] while the upper
    bit maps to VIU_OSD1_FIFO_CTRL_STAT[31].
    
    Replace meson_viu_osd_burst_length_reg() with pre-defined macros which
    set these values. meson_viu_osd_burst_length_reg() always returned 0
    (for the two used values: 32 and 64 at least) and thus incorrectly set
    the burst size to 24.
    
    Fixes: 147ae1cbaa1842 ("drm: meson: viu: use proper macros instead of magic constants")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Tested-by: Christian Hewitt <christianshewitt@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200620155752.21065-1-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 507e86d835405bcd0893cef849c5bad5ab17c189
Author: Filipe Manana <fdmanana@suse.com>
Date:   Sat Jun 27 11:40:44 2020 +0100

    btrfs: fix reclaim_size counter leak after stealing from global reserve
    
    [ Upstream commit 6d548b9e5d56067cff17ff77585167cd65375e4b ]
    
    Commit 7f9fe614407692 ("btrfs: improve global reserve stealing logic"),
    added in the 5.8 merge window, introduced another leak for the space_info's
    reclaim_size counter. This is very often triggered by the test cases
    generic/269 and generic/416 from fstests, producing a stack trace like the
    following during unmount:
    
    [37079.155499] ------------[ cut here ]------------
    [37079.156844] WARNING: CPU: 2 PID: 2000423 at fs/btrfs/block-group.c:3422 btrfs_free_block_groups+0x2eb/0x300 [btrfs]
    [37079.158090] Modules linked in: dm_snapshot btrfs dm_thin_pool (...)
    [37079.164440] CPU: 2 PID: 2000423 Comm: umount Tainted: G        W         5.7.0-rc7-btrfs-next-62 #1
    [37079.165422] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), (...)
    [37079.167384] RIP: 0010:btrfs_free_block_groups+0x2eb/0x300 [btrfs]
    [37079.168375] Code: bd 58 ff ff ff 00 4c 8d (...)
    [37079.170199] RSP: 0018:ffffaa53875c7de0 EFLAGS: 00010206
    [37079.171120] RAX: ffff98099e701cf8 RBX: ffff98099e2d4000 RCX: 0000000000000000
    [37079.172057] RDX: 0000000000000001 RSI: ffffffffc0acc5b1 RDI: 00000000ffffffff
    [37079.173002] RBP: ffff98099e701cf8 R08: 0000000000000000 R09: 0000000000000000
    [37079.173886] R10: 0000000000000000 R11: 0000000000000000 R12: ffff98099e701c00
    [37079.174730] R13: ffff98099e2d5100 R14: dead000000000122 R15: dead000000000100
    [37079.175578] FS:  00007f4d7d0a5840(0000) GS:ffff9809ec600000(0000) knlGS:0000000000000000
    [37079.176434] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [37079.177289] CR2: 0000559224dcc000 CR3: 000000012207a004 CR4: 00000000003606e0
    [37079.178152] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [37079.178935] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [37079.179675] Call Trace:
    [37079.180419]  close_ctree+0x291/0x2d1 [btrfs]
    [37079.181162]  generic_shutdown_super+0x6c/0x100
    [37079.181898]  kill_anon_super+0x14/0x30
    [37079.182641]  btrfs_kill_super+0x12/0x20 [btrfs]
    [37079.183371]  deactivate_locked_super+0x31/0x70
    [37079.184012]  cleanup_mnt+0x100/0x160
    [37079.184650]  task_work_run+0x68/0xb0
    [37079.185284]  exit_to_usermode_loop+0xf9/0x100
    [37079.185920]  do_syscall_64+0x20d/0x260
    [37079.186556]  entry_SYSCALL_64_after_hwframe+0x49/0xb3
    [37079.187197] RIP: 0033:0x7f4d7d2d9357
    [37079.187836] Code: eb 0b 00 f7 d8 64 89 01 48 (...)
    [37079.189180] RSP: 002b:00007ffee4e0d368 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
    [37079.189845] RAX: 0000000000000000 RBX: 00007f4d7d3fb224 RCX: 00007f4d7d2d9357
    [37079.190515] RDX: ffffffffffffff78 RSI: 0000000000000000 RDI: 0000559224dc5c90
    [37079.191173] RBP: 0000559224dc1970 R08: 0000000000000000 R09: 00007ffee4e0c0e0
    [37079.191815] R10: 0000559224dc7b00 R11: 0000000000000246 R12: 0000000000000000
    [37079.192451] R13: 0000559224dc5c90 R14: 0000559224dc1a80 R15: 0000559224dc1ba0
    [37079.193096] irq event stamp: 0
    [37079.193729] hardirqs last  enabled at (0): [<0000000000000000>] 0x0
    [37079.194379] hardirqs last disabled at (0): [<ffffffff97ab8935>] copy_process+0x755/0x1ea0
    [37079.195033] softirqs last  enabled at (0): [<ffffffff97ab8935>] copy_process+0x755/0x1ea0
    [37079.195700] softirqs last disabled at (0): [<0000000000000000>] 0x0
    [37079.196318] ---[ end trace b32710d864dea887 ]---
    
    In the past commit d611add48b717a ("btrfs: fix reclaim counter leak of
    space_info objects") fixed similar cases. That commit however has a date
    more recent (April 7 2020) then the commit mentioned before (March 13
    2020), however it was merged in kernel 5.7 while the older commit, which
    introduces a new leak, was merged only in the 5.8 merge window. So the
    leak sneaked in unnoticed.
    
    Fix this by making steal_from_global_rsv() remove the ticket using the
    helper remove_ticket(), which decrements the reclaim_size counter of the
    space_info object.
    
    Fixes: 7f9fe614407692 ("btrfs: improve global reserve stealing logic")
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8251e1573ff69ebca23f45d07eec6b5bb51b54d9
Author: Li Heng <liheng40@huawei.com>
Date:   Mon Jun 29 18:49:51 2020 +0800

    net: cxgb4: fix return error value in t4_prep_fw
    
    [ Upstream commit 8a259e6b73ad8181b0b2ef338b35043433db1075 ]
    
    t4_prep_fw goto bye tag with positive return value when something
    bad happened and which can not free resource in adap_init0.
    so fix it to return negative value.
    
    Fixes: 16e47624e76b ("cxgb4: Add new scheme to update T4/T5 firmware")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Li Heng <liheng40@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91be65812602cb40769d2d2586ddba3ed9337683
Author: Alex Elder <elder@linaro.org>
Date:   Tue Jun 30 07:44:43 2020 -0500

    net: ipa: no checksum offload for SDM845 LAN RX
    
    [ Upstream commit 41af5436e857ec64f302fcc9b6e4a8c526b6b402 ]
    
    The AP LAN RX endpoint should not have download checksum offload
    enabled.
    
    The receive handler does properly accommodate the trailer that's
    added by the hardware, but we ignore it.
    
    Fixes: 1ed7d0c0fdba ("soc: qcom: ipa: configuration data")
    Signed-off-by: Alex Elder <elder@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bdca37e7471294d1b11af626b92a76d8c98f029
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Jun 30 11:04:40 2020 +0100

    net: mvneta: fix use of state->speed
    
    [ Upstream commit f2ca673d2cd5df9a76247b670e9ffd4d63682b3f ]
    
    When support for short preambles was added, it incorrectly keyed its
    decision off state->speed instead of state->interface.  state->speed
    is not guaranteed to be correct for in-band modes, which can lead to
    short preambles being unexpectedly disabled.
    
    Fix this by keying off the interface mode, which is the only way that
    mvneta can operate at 2.5Gbps.
    
    Fixes: da58a931f248 ("net: mvneta: Add support for 2500Mbps SGMII")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f004091b11bffc80218a2966c8b34b17b6f1ea3
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jun 29 17:04:17 2020 -0700

    netfilter: ipset: call ip_set_free() instead of kfree()
    
    [ Upstream commit c4e8fa9074ad94f80e5c0dcaa16b313e50e958c5 ]
    
    Whenever ip_set_alloc() is used, allocated memory can either
    use kmalloc() or vmalloc(). We should call kvfree() or
    ip_set_free()
    
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    CPU: 0 PID: 21935 Comm: syz-executor.3 Not tainted 5.8.0-rc2-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__phys_addr+0xa7/0x110 arch/x86/mm/physaddr.c:28
    Code: 1d 7a 09 4c 89 e3 31 ff 48 d3 eb 48 89 de e8 d0 58 3f 00 48 85 db 75 0d e8 26 5c 3f 00 4c 89 e0 5b 5d 41 5c c3 e8 19 5c 3f 00 <0f> 0b e8 12 5c 3f 00 48 c7 c0 10 10 a8 89 48 ba 00 00 00 00 00 fc
    RSP: 0000:ffffc900018572c0 EFLAGS: 00010046
    RAX: 0000000000040000 RBX: 0000000000000001 RCX: ffffc9000fac3000
    RDX: 0000000000040000 RSI: ffffffff8133f437 RDI: 0000000000000007
    RBP: ffffc90098aff000 R08: 0000000000000000 R09: ffff8880ae636cdb
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000408018aff000
    R13: 0000000000080000 R14: 000000000000001d R15: ffffc900018573d8
    FS:  00007fc540c66700(0000) GS:ffff8880ae600000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fc9dcd67200 CR3: 0000000059411000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     virt_to_head_page include/linux/mm.h:841 [inline]
     virt_to_cache mm/slab.h:474 [inline]
     kfree+0x77/0x2c0 mm/slab.c:3749
     hash_net_create+0xbb2/0xd70 net/netfilter/ipset/ip_set_hash_gen.h:1536
     ip_set_create+0x6a2/0x13c0 net/netfilter/ipset/ip_set_core.c:1128
     nfnetlink_rcv_msg+0xbe8/0xea0 net/netfilter/nfnetlink.c:230
     netlink_rcv_skb+0x15a/0x430 net/netlink/af_netlink.c:2469
     nfnetlink_rcv+0x1ac/0x420 net/netfilter/nfnetlink.c:564
     netlink_unicast_kernel net/netlink/af_netlink.c:1303 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1329
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1918
     sock_sendmsg_nosec net/socket.c:652 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:672
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2352
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2406
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2439
     do_syscall_64+0x60/0xe0 arch/x86/entry/common.c:359
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x45cb19
    Code: Bad RIP value.
    RSP: 002b:00007fc540c65c78 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 00000000004fed80 RCX: 000000000045cb19
    RDX: 0000000000000000 RSI: 0000000020001080 RDI: 0000000000000003
    RBP: 000000000078bf00 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 000000000000095e R14: 00000000004cc295 R15: 00007fc540c666d4
    
    Fixes: f66ee0410b1c ("netfilter: ipset: Fix "INFO: rcu detected stall in hash_xxx" reports")
    Fixes: 03c8b234e61a ("netfilter: ipset: Generalize extensions support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4abd3550a351b2af7cb59ad33a8efb68f7faead9
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Thu Jun 25 16:13:18 2020 -0700

    bpf, sockmap: RCU dereferenced psock may be used outside RCU block
    
    [ Upstream commit 8025751d4d55a2f32be6bdf825b6a80c299875f5 ]
    
    If an ingress verdict program specifies message sizes greater than
    skb->len and there is an ENOMEM error due to memory pressure we
    may call the rcv_msg handler outside the strp_data_ready() caller
    context. This is because on an ENOMEM error the strparser will
    retry from a workqueue. The caller currently protects the use of
    psock by calling the strp_data_ready() inside a rcu_read_lock/unlock
    block.
    
    But, in above workqueue error case the psock is accessed outside
    the read_lock/unlock block of the caller. So instead of using
    psock directly we must do a look up against the sk again to
    ensure the psock is available.
    
    There is an an ugly piece here where we must handle
    the case where we paused the strp and removed the psock. On
    psock removal we first pause the strparser and then remove
    the psock. If the strparser is paused while an skb is
    scheduled on the workqueue the skb will be dropped on the
    flow and kfree_skb() is called. If the workqueue manages
    to get called before we pause the strparser but runs the rcvmsg
    callback after the psock is removed we will hit the unlikely
    case where we run the sockmap rcvmsg handler but do not have
    a psock. For now we will follow strparser logic and drop the
    skb on the floor with skb_kfree(). This is ugly because the
    data is dropped. To date this has not caused problems in practice
    because either the application controlling the sockmap is
    coordinating with the datapath so that skbs are "flushed"
    before removal or we simply wait for the sock to be closed before
    removing it.
    
    This patch fixes the describe RCU bug and dropping the skb doesn't
    make things worse. Future patches will improve this by allowing
    the normal case where skbs are not merged to skip the strparser
    altogether. In practice many (most?) use cases have no need to
    merge skbs so its both a code complexity hit as seen above and
    a performance issue. For example, in the Cilium case we always
    set the strparser up to return sbks 1:1 without any merging and
    have avoided above issues.
    
    Fixes: e91de6afa81c1 ("bpf: Fix running sk_skb program types with ktls")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/159312679888.18340.15248924071966273998.stgit@john-XPS-13-9370
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f1c6b6194807a926deac5363d532c662489a09f
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Thu Jun 25 16:12:59 2020 -0700

    bpf, sockmap: RCU splat with redirect and strparser error or TLS
    
    [ Upstream commit 93dd5f185916b05e931cffae636596f21f98546e ]
    
    There are two paths to generate the below RCU splat the first and
    most obvious is the result of the BPF verdict program issuing a
    redirect on a TLS socket (This is the splat shown below). Unlike
    the non-TLS case the caller of the *strp_read() hooks does not
    wrap the call in a rcu_read_lock/unlock. Then if the BPF program
    issues a redirect action we hit the RCU splat.
    
    However, in the non-TLS socket case the splat appears to be
    relatively rare, because the skmsg caller into the strp_data_ready()
    is wrapped in a rcu_read_lock/unlock. Shown here,
    
     static void sk_psock_strp_data_ready(struct sock *sk)
     {
            struct sk_psock *psock;
    
            rcu_read_lock();
            psock = sk_psock(sk);
            if (likely(psock)) {
                    if (tls_sw_has_ctx_rx(sk)) {
                            psock->parser.saved_data_ready(sk);
                    } else {
                            write_lock_bh(&sk->sk_callback_lock);
                            strp_data_ready(&psock->parser.strp);
                            write_unlock_bh(&sk->sk_callback_lock);
                    }
            }
            rcu_read_unlock();
     }
    
    If the above was the only way to run the verdict program we
    would be safe. But, there is a case where the strparser may throw an
    ENOMEM error while parsing the skb. This is a result of a failed
    skb_clone, or alloc_skb_for_msg while building a new merged skb when
    the msg length needed spans multiple skbs. This will in turn put the
    skb on the strp_wrk workqueue in the strparser code. The skb will
    later be dequeued and verdict programs run, but now from a
    different context without the rcu_read_lock()/unlock() critical
    section in sk_psock_strp_data_ready() shown above. In practice
    I have not seen this yet, because as far as I know most users of the
    verdict programs are also only working on single skbs. In this case no
    merge happens which could trigger the above ENOMEM errors. In addition
    the system would need to be under memory pressure. For example, we
    can't hit the above case in selftests because we missed having tests
    to merge skbs. (Added in later patch)
    
    To fix the below splat extend the rcu_read_lock/unnlock block to
    include the call to sk_psock_tls_verdict_apply(). This will fix both
    TLS redirect case and non-TLS redirect+error case. Also remove
    psock from the sk_psock_tls_verdict_apply() function signature its
    not used there.
    
    [ 1095.937597] WARNING: suspicious RCU usage
    [ 1095.940964] 5.7.0-rc7-02911-g463bac5f1ca79 #1 Tainted: G        W
    [ 1095.944363] -----------------------------
    [ 1095.947384] include/linux/skmsg.h:284 suspicious rcu_dereference_check() usage!
    [ 1095.950866]
    [ 1095.950866] other info that might help us debug this:
    [ 1095.950866]
    [ 1095.957146]
    [ 1095.957146] rcu_scheduler_active = 2, debug_locks = 1
    [ 1095.961482] 1 lock held by test_sockmap/15970:
    [ 1095.964501]  #0: ffff9ea6b25de660 (sk_lock-AF_INET){+.+.}-{0:0}, at: tls_sw_recvmsg+0x13a/0x840 [tls]
    [ 1095.968568]
    [ 1095.968568] stack backtrace:
    [ 1095.975001] CPU: 1 PID: 15970 Comm: test_sockmap Tainted: G        W         5.7.0-rc7-02911-g463bac5f1ca79 #1
    [ 1095.977883] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
    [ 1095.980519] Call Trace:
    [ 1095.982191]  dump_stack+0x8f/0xd0
    [ 1095.984040]  sk_psock_skb_redirect+0xa6/0xf0
    [ 1095.986073]  sk_psock_tls_strp_read+0x1d8/0x250
    [ 1095.988095]  tls_sw_recvmsg+0x714/0x840 [tls]
    
    v2: Improve commit message to identify non-TLS redirect plus error case
        condition as well as more common TLS case. In the process I decided
        doing the rcu_read_unlock followed by the lock/unlock inside branches
        was unnecessarily complex. We can just extend the current rcu block
        and get the same effeective without the shuffling and branching.
        Thanks Martin!
    
    Fixes: e91de6afa81c1 ("bpf: Fix running sk_skb program types with ktls")
    Reported-by: Jakub Sitnicki <jakub@cloudflare.com>
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/159312677907.18340.11064813152758406626.stgit@john-XPS-13-9370
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1d4483956d7382b137eb0dee1f545e1d676f4e7
Author: Hsin-Yi Wang <hsinyi@chromium.org>
Date:   Mon Jun 22 23:57:53 2020 +0800

    drm/mediatek: Check plane visibility in atomic_update
    
    [ Upstream commit c0b8892e2461b5fa740e47efbb1269a487b04020 ]
    
    Disable the plane if it's not visible. Otherwise mtk_ovl_layer_config()
    would proceed with invalid plane and we may see vblank timeout.
    
    Fixes: 119f5173628a ("drm/mediatek: Add DRM Driver for Mediatek SoC MT8173.")
    Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Reviewed-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bc4eaca563f6619ca9b8c8bd957c88d831d268c
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Fri Jun 26 12:49:40 2020 +0300

    nl80211: fix memory leak when parsing NL80211_ATTR_HE_BSS_COLOR
    
    [ Upstream commit 60a0121f8fa64b0f4297aa6fef8207500483a874 ]
    
    If there is an error when parsing the NL80211_ATTR_HE_BSS_COLOR
    attribute, we return immediately without freeing param.acl.  Fit it by
    using goto out instead of returning immediately.
    
    Fixes: 5c5e52d1bb96 ("nl80211: add handling for BSS color")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20200626124931.7ad2a3eb894f.I60905fb70bd20389a3b170db515a07275e31845e@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b8ff58c35c6c6a063f73eaac40b79a1b56ab369
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Fri Jun 26 12:49:39 2020 +0300

    nl80211: don't return err unconditionally in nl80211_start_ap()
    
    [ Upstream commit bc7a39b4272b9672d806d422b6850e8c1a09914c ]
    
    When a memory leak was fixed, a return err was changed to goto err,
    but, accidentally, the if (err) was removed, so now we always exit at
    this point.
    
    Fix it by adding if (err) back.
    
    Fixes: 9951ebfcdf2b ("nl80211: fix potential leak in AP start")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20200626124931.871ba5b31eee.I97340172d92164ee92f3c803fe20a8a6e97714e1@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82d1d58e9f2070b0055f29480ab43b629cb280ef
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Wed Jun 24 15:20:39 2020 -0700

    bpf: Do not allow btf_ctx_access with __int128 types
    
    [ Upstream commit a9b59159d338d414acaa8e2f569d129d51c76452 ]
    
    To ensure btf_ctx_access() is safe the verifier checks that the BTF
    arg type is an int, enum, or pointer. When the function does the
    BTF arg lookup it uses the calculation 'arg = off / 8'  using the
    fact that registers are 8B. This requires that the first arg is
    in the first reg, the second in the second, and so on. However,
    for __int128 the arg will consume two registers by default LLVM
    implementation. So this will cause the arg layout assumed by the
    'arg = off / 8' calculation to be incorrect.
    
    Because __int128 is uncommon this patch applies the easiest fix and
    will force int types to be sizeof(u64) or smaller so that they will
    fit in a single register.
    
    v2: remove unneeded parens per Andrii's feedback
    
    Fixes: 9e15db66136a1 ("bpf: Implement accurate raw_tp context access via BTF")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/159303723962.11287.13309537171132420717.stgit@john-Precision-5820-Tower
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 719a2cc571b8bce1c25ce61ca10d0811bfc6de62
Author: Seevalamuthu Mariappan <seevalam@codeaurora.org>
Date:   Tue Jun 9 15:45:54 2020 +0530

    mac80211: Fix dropping broadcast packets in 802.11 encap
    
    [ Upstream commit 78fb5b541b7ae57ac39187ccb3097e606004cf9b ]
    
    Broadcast pkts like arp are getting dropped in 'ieee80211_8023_xmit'.
    Fix this by replacing is_valid_ether_addr api with is_zero_ether_addr.
    
    Fixes: 50ff477a8639 ("mac80211: add 802.11 encapsulation offloading support")
    Signed-off-by: Seevalamuthu Mariappan <seevalam@codeaurora.org>
    Link: https://lore.kernel.org/r/1591697754-4975-1-git-send-email-seevalam@codeaurora.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5e0520a89828817a6ae9bef11a23b2173267d88
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jun 23 10:44:08 2020 +0100

    KVM: arm64: vgic-v4: Plug race between non-residency and v4.1 doorbell
    
    [ Upstream commit a3f574cd65487cd993f79ab235d70229d9302c1e ]
    
    When making a vPE non-resident because it has hit a blocking WFI,
    the doorbell can fire at any time after the write to the RD.
    Crucially, it can fire right between the write to GICR_VPENDBASER
    and the write to the pending_last field in the its_vpe structure.
    
    This means that we would overwrite pending_last with stale data,
    and potentially not wakeup until some unrelated event (such as
    a timer interrupt) puts the vPE back on the CPU.
    
    GICv4 isn't affected by this as we actively mask the doorbell on
    entering the guest, while GICv4.1 automatically manages doorbell
    delivery without any hypervisor-driven masking.
    
    Use the vpe_lock to synchronize such update, which solves the
    problem altogether.
    
    Fixes: ae699ad348cdc ("irqchip/gic-v4.1: Move doorbell management to the GICv4 abstraction layer")
    Reported-by: Zenghui Yu <yuzenghui@huawei.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b60aad88699029c4360bbaa47cb4088a6bb95e6d
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Tue Jun 23 14:01:12 2020 +0800

    ASoC: fsl_mqs: Fix unchecked return value for clk_prepare_enable
    
    [ Upstream commit 15217d170a4461c1d4c1ea7c497e1fc1122e42a9 ]
    
    Fix unchecked return value for clk_prepare_enable, add error
    handler in fsl_mqs_runtime_resume.
    
    Fixes: 9e28f6532c61 ("ASoC: fsl_mqs: Add MQS component driver")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Link: https://lore.kernel.org/r/5edd68d03def367d96268f1a9a00bd528ea5aaf2.1592888591.git.shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f09d198c61e0a65ede3424f6ae87abeaa7916037
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Tue Jun 23 14:01:11 2020 +0800

    ASoC: fsl_mqs: Don't check clock is NULL before calling clk API
    
    [ Upstream commit adf46113a608d9515801997fc96cbfe8ffa89ed3 ]
    
    Because clk_prepare_enable and clk_disable_unprepare should
    check input clock parameter is NULL or not internally, then
    we don't need to check them before calling the function.
    
    Fixes: 9e28f6532c61 ("ASoC: fsl_mqs: Add MQS component driver")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Link: https://lore.kernel.org/r/743be216bd504c26e8d45d5ce4a84561b67a122b.1592888591.git.shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a216a583a73ad15af561df5bc56aa471f056c1a
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Jun 18 14:49:06 2020 +0300

    gpio: pca953x: Fix GPIO resource leak on Intel Galileo Gen 2
    
    [ Upstream commit 5d8913504ccfeea6120df5ae1c6f4479ff09b931 ]
    
    When adding a quirk for IRQ on Intel Galileo Gen 2 the commit ba8c90c61847
    ("gpio: pca953x: Override IRQ for one of the expanders on Galileo Gen 2")
    missed GPIO resource release. We can safely do this in the same quirk, since
    IRQ will be locked by GPIO framework when requested and unlocked on freeing.
    
    Fixes: ba8c90c61847 ("gpio: pca953x: Override IRQ for one of the expanders on Galileo Gen 2")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36c9dedaabb42d3160bf2ebabb6b068e7c28e680
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jun 5 16:40:35 2020 +0300

    gpio: pca953x: Fix direction setting when configure an IRQ
    
    [ Upstream commit 0b22c25e1b81c5f718e89c4d759e6a359be24417 ]
    
    The commit 0f25fda840a9 ("gpio: pca953x: Zap ad-hoc reg_direction cache")
    seems inadvertently made a typo in pca953x_irq_bus_sync_unlock().
    
    When the direction bit is 1 it means input, and the piece of code in question
    was looking for output ones that should be turned to inputs.
    
    Fix direction setting when configure an IRQ by injecting a bitmap complement
    operation.
    
    Fixes: 0f25fda840a9 ("gpio: pca953x: Zap ad-hoc reg_direction cache")
    Depends-on: 35d13d94893f ("gpio: pca953x: convert to use bitmap API")
    Cc: Marek Vasut <marek.vasut@gmail.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 099988823d894b80a1eae706e7a7b8df0431a7c0
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jun 5 16:40:34 2020 +0300

    gpio: pca953x: Override IRQ for one of the expanders on Galileo Gen 2
    
    [ Upstream commit ba8c90c6184784b397807b72403656085ac2f8c1 ]
    
    ACPI table on Intel Galileo Gen 2 has wrong pin number for IRQ resource
    of one of the I²C GPIO expanders. Since we know what that number is and
    luckily have GPIO bases fixed for SoC's controllers, we may use a simple
    DMI quirk to match the platform and retrieve GpioInt() pin on it for
    the expander in question.
    
    Mika suggested the way to avoid a quirk in the GPIO ACPI library and
    here is the second, almost rewritten version of it.
    
    Fixes: f32517bf1ae0 ("gpio: pca953x: support ACPI devices found on Galileo Gen2")
    Depends-on: 25e3ef894eef ("gpio: acpi: Split out acpi_gpio_get_irq_resource() helper")
    Suggested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9b56f4512f29e161e7fe9256d406dca99e00102
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jun 5 16:40:33 2020 +0300

    gpio: pca953x: Synchronize interrupt handler properly
    
    [ Upstream commit 064c73afe7385de99e5b2785b88c83dc5d84403b ]
    
    Since the commit aa58a21ae378 ("gpio: pca953x: disable regmap locking")
    the locking of regmap is disabled and that immediately introduces
    a synchronization issue. It's easy to see when we try to monitor
    more than one interrupt from the same chip.
    
    It seems that the problem exists from the day one and even commit
    6e20fb18054c ("drivers/gpio/pca953x.c: add a mutex to fix race condition")
    missed this.
    
    Below are the traces and shell reproducers before and after proposed change.
    Note duplicates in the IRQ events. /proc/interrupts also shows a deviation,
    i.e. sum of children interrupts higher than parent's one.
    
    When locking is disabled for regmap and no protection in IRQ handler
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     ...
     gpioset-194          regmap_hw_write_start: i2c-INT3491:02 reg=2 count=1
     irq/31-i2c-INT3-139  regmap_hw_read_start: i2c-INT3491:02 reg=4c count=2
     gpioset-194          regmap_hw_write_done: i2c-INT3491:02 reg=2 count=1
     gpioset-194          regmap_reg_read_cache: i2c-INT3491:02 reg=6 val=f5
     gpioset-194          regmap_reg_write: i2c-INT3491:02 reg=6 val=f5
     gpioset-194          regmap_hw_write_start: i2c-INT3491:02 reg=6 count=1
     irq/31-i2c-INT3-139  regmap_hw_read_done: i2c-INT3491:02 reg=4c count=2
     ...
    
     % gpiomon gpiochip3 0 &
     % gpioset gpiochip3 1=0
     % gpioset gpiochip3 1=1
     event:  RISING EDGE offset: 0 timestamp: [     302.782583765]
     % gpiomon gpiochip3 2 &
     % gpioset gpiochip3 1=0
     event:  RISING EDGE offset: 2 timestamp: [     312.033148829]
     event: FALLING EDGE offset: 0 timestamp: [     312.022757525]
     % gpioset gpiochip3 1=1
     event:  RISING EDGE offset: 2 timestamp: [     316.201148473]
     event:  RISING EDGE offset: 0 timestamp: [     316.191759599]
    
    When locking is disabled for regmap and protection in IRQ handler
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     ...
     gpioset-202          regmap_hw_write_start: i2c-INT3491:02 reg=2 count=1
     gpioset-202          regmap_hw_write_done: i2c-INT3491:02 reg=2 count=1
     gpioset-202          regmap_reg_read_cache: i2c-INT3491:02 reg=6 val=fd
     gpioset-202          regmap_reg_write: i2c-INT3491:02 reg=6 val=fd
     gpioset-202          regmap_hw_write_start: i2c-INT3491:02 reg=6 count=1
     gpioset-202          regmap_hw_write_done: i2c-INT3491:02 reg=6 count=1
     irq/31-i2c-INT3-139  regmap_hw_read_start: i2c-INT3491:02 reg=4c count=2
     irq/31-i2c-INT3-139  regmap_hw_read_done: i2c-INT3491:02 reg=4c count=2
     ...
    
     % gpiomon gpiochip3 0 &
     % gpioset gpiochip3 1=0
     event: FALLING EDGE offset: 0 timestamp: [     531.330078107]
     % gpioset gpiochip3 1=1
     event:  RISING EDGE offset: 0 timestamp: [     532.912239128]
     % gpiomon gpiochip3 2 &
     % gpioset gpiochip3 1=0
     event: FALLING EDGE offset: 0 timestamp: [     539.633669484]
     % gpioset gpiochip3 1=1
     event:  RISING EDGE offset: 0 timestamp: [     542.256978461]
    
    Fixes: 6e20fb18054c ("drivers/gpio/pca953x.c: add a mutex to fix race condition")
    Depends-on: 35d13d94893f ("gpio: pca953x: convert to use bitmap API")
    Depends-on: 49427232764d ("gpio: pca953x: Perform basic regmap conversion")
    Cc: Marek Vasut <marek.vasut@gmail.com>
    Cc: Roland Stigge <stigge@antcom.de>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49a7b5d58e2a59c9e8ea7175ea01a42a3d40629d
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Mon Jun 15 11:51:34 2020 -0400

    mtd: set master partition panic write flag
    
    [ Upstream commit 630e8d5507d9f55dfa98134bfcadefb6cfba4fbb ]
    
    Check and set master panic write flag so that low level drivers
    can use it to take required action to ensure oops data gets written
    to assigned mtdoops device partition.
    
    Fixes: 9f897bfdd89f ("mtd: Add flag to indicate panic_write")
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200615155134.32007-1-kdasu.kdev@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47f304110fb06caec2c52b9428ceeae5453ce78e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jun 30 14:46:15 2020 +0300

    net: qrtr: Fix an out of bounds read qrtr_endpoint_post()
    
    commit 8ff41cc21714704ef0158a546c3c4d07fae2c952 upstream.
    
    This code assumes that the user passed in enough data for a
    qrtr_hdr_v1 or qrtr_hdr_v2 struct, but it's not necessarily true.  If
    the buffer is too small then it will read beyond the end.
    
    Reported-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reported-by: syzbot+b8fe393f999a291a9ea6@syzkaller.appspotmail.com
    Fixes: 194ccc88297a ("net: qrtr: Support decoding incoming v2 packets")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d85ed6567fb5eb6faebaa2e225a20fa30fd2581d
Author: Scott Wood <swood@redhat.com>
Date:   Wed Jun 17 14:17:42 2020 +0200

    sched/core: Check cpus_mask, not cpus_ptr in __set_cpus_allowed_ptr(), to fix mask corruption
    
    [ Upstream commit fd844ba9ae59b51e34e77105d79f8eca780b3bd6 ]
    
    This function is concerned with the long-term CPU mask, not the
    transitory mask the task might have while migrate disabled.  Before
    this patch, if a task was migrate-disabled at the time
    __set_cpus_allowed_ptr() was called, and the new mask happened to be
    equal to the CPU that the task was running on, then the mask update
    would be lost.
    
    Signed-off-by: Scott Wood <swood@redhat.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lkml.kernel.org/r/20200617121742.cpxppyi7twxmpin7@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6da6b579a6235cf29cf76dcacce34cd30e343af5
Author: Tom Rix <trix@redhat.com>
Date:   Fri Jun 12 15:45:49 2020 -0700

    nfs: Fix memory leak of export_path
    
    [ Upstream commit 4659ed7cc8514369043053463514408ca16ad6f3 ]
    
    The try_location function is called within a loop by nfs_follow_referral.
    try_location calls nfs4_pathname_string to created the export_path.
    nfs4_pathname_string allocates the memory. export_path is stored in the
    nfs_fs_context/fs_context structure similarly as hostname and source.
    But whereas the ctx hostname and source are freed before assignment,
    export_path is not.  So if there are multiple loops, the new export_path
    will overwrite the old without the old being freed.
    
    So call kfree for export_path.
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bafbef3877a91e8185f448fc935cf84858d4621
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Thu Jun 25 16:01:23 2020 +0530

    arm64: Add KRYO{3,4}XX silver CPU cores to SSB safelist
    
    [ Upstream commit 108447fd0d1a34b0929cd26dc637c917a734ebab ]
    
    QCOM KRYO{3,4}XX silver/LITTLE CPU cores are based on
    Cortex-A55 and are SSB safe, hence add them to SSB
    safelist -> arm64_ssb_cpus[].
    
    Reported-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20200625103123.7240-1-saiprakash.ranjan@codeaurora.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba1d41232d002fbc8627ce16c763b4c26f9eed75
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jun 17 18:25:57 2020 +0200

    x86/entry: Increase entry_stack size to a full page
    
    [ Upstream commit c7aadc09321d8f9a1d3bd1e6d8a47222ecddf6c5 ]
    
    Marco crashed in bad_iret with a Clang11/KCSAN build due to
    overflowing the stack. Now that we run C code on it, expand it to a
    full page.
    
    Suggested-by: Andy Lutomirski <luto@amacapital.net>
    Reported-by: Marco Elver <elver@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Tested-by: Marco Elver <elver@google.com>
    Link: https://lkml.kernel.org/r/20200618144801.819246178@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d3b492b14b950581a7ef90f45b74a9c24f2f864
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Tue Jun 23 17:55:25 2020 +0300

    nvme-rdma: assign completion vector correctly
    
    [ Upstream commit 032a9966a22a3596addf81dacf0c1736dfedc32a ]
    
    The completion vector index that is given during CQ creation can't
    exceed the number of support vectors by the underlying RDMA device. This
    violation currently can accure, for example, in case one will try to
    connect with N regular read/write queues and M poll queues and the sum
    of N + M > num_supported_vectors. This will lead to failure in establish
    a connection to remote target. Instead, in that case, share a completion
    vector between queues.
    
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a28be6a6eed46837abdaa097b0f0be7bd769323
Author: Chengguang Xu <cgxu519@mykernel.net>
Date:   Wed Jun 24 18:21:39 2020 +0800

    block: release bip in a right way in error path
    
    [ Upstream commit 0b8eb629a700c0ef15a437758db8255f8444e76c ]
    
    Release bip using kfree() in error path when that was allocated
    by kmalloc().
    
    Signed-off-by: Chengguang Xu <cgxu519@mykernel.net>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2c905c7f4d2a5556faa8ee4a117f80134383e44
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Wed Jun 24 18:04:06 2020 +0530

    arm64: kpti: Add KRYO{3, 4}XX silver CPU cores to kpti safelist
    
    [ Upstream commit f4617be35b4b547e82d30993f56d631dfc2d5f88 ]
    
    QCOM KRYO{3,4}XX silver/LITTLE CPU cores are based on Cortex-A55
    and are meltdown safe, hence add them to kpti_safe_list[].
    
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Link: https://lore.kernel.org/r/20200624123406.3472-1-saiprakash.ranjan@codeaurora.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bd5ad9fcd6d2833de6db0edd113b9f746805a89
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 22:15:25 2020 -0500

    usb: dwc3: pci: Fix reference count leak in dwc3_pci_resume_work
    
    [ Upstream commit 2655971ad4b34e97dd921df16bb0b08db9449df7 ]
    
    dwc3_pci_resume_work() calls pm_runtime_get_sync() that increments
    the reference counter. In case of failure, decrement the reference
    before returning.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8120a7f04a86f45836b6f05212c1630595cde8d1
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Tue Jun 16 17:04:46 2020 +0200

    scsi: mptscsih: Fix read sense data size
    
    [ Upstream commit afe89f115e84edbc76d316759e206580a06c6973 ]
    
    The sense data buffer in sense_buf_pool is allocated with size of
    MPT_SENSE_BUFFER_ALLOC(64) (multiplied by req_depth) while SNS_LEN(sc)(96)
    is used when reading the data.  That may lead to a read from unallocated
    area, sometimes from another (unallocated) page.  To fix this, limit the
    read size to MPT_SENSE_BUFFER_ALLOC.
    
    Link: https://lore.kernel.org/r/20200616150446.4840-1-thenzl@redhat.com
    Co-developed-by: Stanislav Saner <ssaner@redhat.com>
    Signed-off-by: Stanislav Saner <ssaner@redhat.com>
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84ab66821948c06c0da75a25b1305263bc633a7d
Author: Arun Easi <aeasi@marvell.com>
Date:   Tue Mar 31 03:40:13 2020 -0700

    scsi: qla2xxx: Fix MPI failure AEN (8200) handling
    
    [ Upstream commit cbb01c2f2f630f1497f703c51ff21538ae2d86b8 ]
    
    Today, upon an MPI failure AEN, on top of collecting an MPI dump, a regular
    firmware dump is also taken and then chip reset. This is disruptive to IOs
    and not required. Make the firmware dump collection, followed by chip
    reset, optional (not done by default).
    
    Firmware dump buffer and MPI dump buffer are independent of each
    other with this change and each can have dump that was taken at two
    different times for two different issues. The MPI dump is saved in a
    separate buffer and is retrieved differently from firmware dump.
    
    To collect full dump on MPI failure AEN, a module parameter is
    introduced:
        ql2xfulldump_on_mpifail (default: 0)
    
    Link: https://lore.kernel.org/r/20200331104015.24868-2-njavali@marvell.com
    Reported-by: kbuild test robot <lkp@intel.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8aaefe9d72f5247f7c2163180e5edd62fe215a59
Author: yu kuai <yukuai3@huawei.com>
Date:   Thu Jun 4 20:54:49 2020 +0800

    ARM: imx6: add missing put_device() call in imx6q_suspend_init()
    
    [ Upstream commit 4845446036fc9c13f43b54a65c9b757c14f5141b ]
    
    if of_find_device_by_node() succeed, imx6q_suspend_init() doesn't have a
    corresponding put_device(). Thus add a jump target to fix the exception
    handling for this function implementation.
    
    Signed-off-by: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c28ae55fcd97ad43d61e8aedae36ed6e8f41dcc3
Author: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date:   Fri Jun 19 22:51:29 2020 -0400

    cifs: update ctime and mtime during truncate
    
    [ Upstream commit 5618303d8516f8ac5ecfe53ee8e8bc9a40eaf066 ]
    
    As the man description of the truncate, if the size changed,
    then the st_ctime and st_mtime fields should be updated. But
    in cifs, we doesn't do it.
    
    It lead the xfstests generic/313 failed.
    
    So, add the ATTR_MTIME|ATTR_CTIME flags on attrs when change
    the file size
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0a38eb0efcc15c2273c16c3eeb0f2e8531b7b2e
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Wed Jun 17 15:05:49 2020 +0200

    s390/kasan: fix early pgm check handler execution
    
    [ Upstream commit 998f5bbe3dbdab81c1cfb1aef7c3892f5d24f6c7 ]
    
    Currently if early_pgm_check_handler is called it ends up in pgm check
    loop. The problem is that early_pgm_check_handler is instrumented by
    KASAN but executed without DAT flag enabled which leads to addressing
    exception when KASAN checks try to access shadow memory.
    
    Fix that by executing early handlers with DAT flag on under KASAN as
    expected.
    
    Reported-and-tested-by: Alexander Egorenkov <egorenar@linux.ibm.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 109b3b4e2a0f5bfda023a1b91b404fac31ba6808
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun May 31 11:30:25 2020 +0200

    drm: panel-orientation-quirks: Use generic orientation-data for Acer S1003
    
    [ Upstream commit a05caf9e62a85d12da27e814ac13195f4683f21c ]
    
    The Acer S1003 has proper DMI strings for sys-vendor and product-name,
    so we do not need to match by BIOS-date.
    
    This means that the Acer S1003 can use the generic lcd800x1280_rightside_up
    drm_dmi_panel_orientation_data struct which is also used by other quirks.
    
    Reviewed-by: Emil Velikov <emil.l.velikov@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200531093025.28050-2-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e64e92fea2bf85d9f33304faf973c46859afd0f7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun May 31 11:30:24 2020 +0200

    drm: panel-orientation-quirks: Add quirk for Asus T101HA panel
    
    [ Upstream commit 6c22bc18a3b93a38018844636557ad02e588e055 ]
    
    Like the Asus T100HA the Asus T101HA also uses a panel which has been
    mounted 90 degrees rotated, albeit in the opposite direction.
    Add a quirk for this.
    
    Reviewed-by: Emil Velikov <emil.l.velikov@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200531093025.28050-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0fe26310bc07b256d0be66b8641fd8b8dfa6f36
Author: Rajat Jain <rajatja@google.com>
Date:   Tue Jun 23 07:13:42 2020 +0800

    iommu/vt-d: Don't apply gfx quirks to untrusted devices
    
    [ Upstream commit 67e8a5b18d41af9298db5c17193f671f235cce01 ]
    
    Currently, an external malicious PCI device can masquerade the VID:PID
    of faulty gfx devices, and thus apply iommu quirks to effectively
    disable the IOMMU restrictions for itself.
    
    Thus we need to ensure that the device we are applying quirks to, is
    indeed an internal trusted device.
    
    Signed-off-by: Rajat Jain <rajatja@google.com>
    Reviewed-by: Ashok Raj <ashok.raj@intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20200622231345.29722-4-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fcbf07a4f23174a45e015b62a8e42ddbc2e53ef
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Jun 15 09:20:52 2020 -0400

    xprtrdma: Prevent dereferencing r_xprt->rx_ep after it is freed
    
    [ Upstream commit 2acc5cae292355f5f18ad377a2a966e7f03c8fec ]
    
    r_xprt->rx_ep is known to be good while the transport's send lock is
    held.  Otherwise additional references on rx_ep must be held when it
    is used outside of that lock's critical sections.
    
    For now, bump the rx_ep reference count once whenever there is at
    least one outstanding Receive WR. This avoids the memory bandwidth
    overhead of taking and releasing the reference count for every
    ib_post_recv() and Receive completion.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6e7f01298817f7f94a720800dd268801b871b67
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Jun 11 17:31:59 2020 +0530

    powerpc/kvm/book3s64: Fix kernel crash with nested kvm & DEBUG_VIRTUAL
    
    [ Upstream commit c1ed1754f271f6b7acb1bfdc8cfb62220fbed423 ]
    
    With CONFIG_DEBUG_VIRTUAL=y, __pa() checks for addr value and if it's
    less than PAGE_OFFSET it leads to a BUG().
    
      #define __pa(x)
      ({
            VIRTUAL_BUG_ON((unsigned long)(x) < PAGE_OFFSET);
            (unsigned long)(x) & 0x0fffffffffffffffUL;
      })
    
      kernel BUG at arch/powerpc/kvm/book3s_64_mmu_radix.c:43!
      cpu 0x70: Vector: 700 (Program Check) at [c0000018a2187360]
          pc: c000000000161b30: __kvmhv_copy_tofrom_guest_radix+0x130/0x1f0
          lr: c000000000161d5c: kvmhv_copy_from_guest_radix+0x3c/0x80
      ...
      kvmhv_copy_from_guest_radix+0x3c/0x80
      kvmhv_load_from_eaddr+0x48/0xc0
      kvmppc_ld+0x98/0x1e0
      kvmppc_load_last_inst+0x50/0x90
      kvmppc_hv_emulate_mmio+0x288/0x2b0
      kvmppc_book3s_radix_page_fault+0xd8/0x2b0
      kvmppc_book3s_hv_page_fault+0x37c/0x1050
      kvmppc_vcpu_run_hv+0xbb8/0x1080
      kvmppc_vcpu_run+0x34/0x50
      kvm_arch_vcpu_ioctl_run+0x2fc/0x410
      kvm_vcpu_ioctl+0x2b4/0x8f0
      ksys_ioctl+0xf4/0x150
      sys_ioctl+0x28/0x80
      system_call_exception+0x104/0x1d0
      system_call_common+0xe8/0x214
    
    kvmhv_copy_tofrom_guest_radix() uses a NULL value for to/from to
    indicate direction of copy.
    
    Avoid calling __pa() if the value is NULL to avoid the BUG().
    
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    [mpe: Massage change log a bit to mention CONFIG_DEBUG_VIRTUAL]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200611120159.680284-1-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a3b8a9cbaded0ed06c673f9efeaeb3146213dff
Author: Dany Madden <drt@linux.ibm.com>
Date:   Thu Jun 18 15:24:13 2020 -0400

    ibmvnic: continue to init in CRQ reset returns H_CLOSED
    
    [ Upstream commit 8b40eb73509f5704a0e8cd25de0163876299f1a7 ]
    
    Continue the reset path when partner adapter is not ready or H_CLOSED is
    returned from reset crq. This patch allows the CRQ init to proceed to
    establish a valid CRQ for traffic to flow after reset.
    
    Signed-off-by: Dany Madden <drt@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d24a4b9cf7e77740bde13dc11decb058b28f0d84
Author: Ciara Loftus <ciara.loftus@intel.com>
Date:   Tue Jun 9 13:19:45 2020 +0000

    ice: protect ring accesses with WRITE_ONCE
    
    [ Upstream commit b1d95cc2391ffac0c5b27256a4fb0d2cfb021a29 ]
    
    The READ_ONCE macro is used when reading rings prior to accessing the
    statistics pointer. The corresponding WRITE_ONCE usage when allocating and
    freeing the rings to ensure protected access was not in place. Introduce
    this.
    
    Signed-off-by: Ciara Loftus <ciara.loftus@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d32a3981b38976227f93d51d30e241f1810ae57b
Author: Ciara Loftus <ciara.loftus@intel.com>
Date:   Tue Jun 9 13:19:44 2020 +0000

    i40e: protect ring accesses with READ- and WRITE_ONCE
    
    [ Upstream commit d59e267912cd90b0adf33b4659050d831e746317 ]
    
    READ_ONCE should be used when reading rings prior to accessing the
    statistics pointer. Introduce this as well as the corresponding WRITE_ONCE
    usage when allocating and freeing the rings, to ensure protected access.
    
    Signed-off-by: Ciara Loftus <ciara.loftus@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 405e56b1a564aac965338c95b9be366e3dde50b9
Author: Ciara Loftus <ciara.loftus@intel.com>
Date:   Tue Jun 9 13:19:43 2020 +0000

    ixgbe: protect ring accesses with READ- and WRITE_ONCE
    
    [ Upstream commit f140ad9fe2ae16f385f8fe4dc9cf67bb4c51d794 ]
    
    READ_ONCE should be used when reading rings prior to accessing the
    statistics pointer. Introduce this as well as the corresponding WRITE_ONCE
    usage when allocating and freeing the rings, to ensure protected access.
    
    Signed-off-by: Ciara Loftus <ciara.loftus@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ebe7c9a20b325c6566c962a8533da9d3cba8801
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Jun 16 10:31:40 2020 +0200

    net: ethernet: mvneta: Add 2500BaseX support for SoCs without comphy
    
    [ Upstream commit 1a642ca7f38992b086101fe204a1ae3c90ed8016 ]
    
    The older SoCs like Armada XP support a 2500BaseX mode in the datasheets
    referred to as DR-SGMII (Double rated SGMII) or HS-SGMII (High Speed
    SGMII). This is an upclocked 1000BaseX mode, thus
    PHY_INTERFACE_MODE_2500BASEX is the appropriate mode define for it.
    adding support for it merely means writing the correct magic value into
    the MVNETA_SERDES_CFG register.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b6f09869c84f341b5818e5c899318693389455a
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Jun 16 10:31:39 2020 +0200

    net: ethernet: mvneta: Fix Serdes configuration for SoCs without comphy
    
    [ Upstream commit b4748553f53f2971e07d2619f13d461daac0f3bb ]
    
    The MVNETA_SERDES_CFG register is only available on older SoCs like the
    Armada XP. On newer SoCs like the Armada 38x the fields are moved to
    comphy. This patch moves the writes to this register next to the comphy
    initialization, so that depending on the SoC either comphy or
    MVNETA_SERDES_CFG is configured.
    With this we no longer write to the MVNETA_SERDES_CFG on SoCs where it
    doesn't exist.
    
    Suggested-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88f4b8fe5b9a67dca9a3c710a3d9557659ba9122
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Thu Jun 18 11:21:25 2020 +0800

    spi: spidev: fix a potential use-after-free in spidev_release()
    
    [ Upstream commit 06096cc6c5a84ced929634b0d79376b94c65a4bd ]
    
    If an spi device is unbounded from the driver before the release
    process, there will be an NULL pointer reference when it's
    referenced in spi_slave_abort().
    
    Fix it by checking it's already freed before reference.
    
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Link: https://lore.kernel.org/r/20200618032125.4650-2-zhenzhong.duan@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abce0ef45b5e343704e1e6306bdc404a96c57013
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Thu Jun 18 11:21:24 2020 +0800

    spi: spidev: fix a race between spidev_release and spidev_remove
    
    [ Upstream commit abd42781c3d2155868821f1b947ae45bbc33330d ]
    
    Imagine below scene, spidev is referenced after it's freed.
    
    spidev_release()                spidev_remove()
    ...
                                    spin_lock_irq(&spidev->spi_lock);
                                        spidev->spi = NULL;
                                    spin_unlock_irq(&spidev->spi_lock);
    mutex_lock(&device_list_lock);
    dofree = (spidev->spi == NULL);
    if (dofree)
        kfree(spidev);
    mutex_unlock(&device_list_lock);
                                    mutex_lock(&device_list_lock);
                                    list_del(&spidev->device_entry);
                                    device_destroy(spidev_class, spidev->devt);
                                    clear_bit(MINOR(spidev->devt), minors);
                                    if (spidev->users == 0)
                                        kfree(spidev);
                                    mutex_unlock(&device_list_lock);
    
    Fix it by resetting spidev->spi in device_list_lock's protection.
    
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Link: https://lore.kernel.org/r/20200618032125.4650-1-zhenzhong.duan@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c68a68e97a4c79d98a387bf568bf72585603091d
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Wed Jun 17 11:49:09 2020 -0500

    ALSA: hda: Intel: add missing PCI IDs for ICL-H, TGL-H and EKL
    
    [ Upstream commit d50313a5a0d803bcf55121a2b82086633060d05e ]
    
    Mirror PCI ids used for SOF.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200617164909.18225-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b57939c7663a5e320c5e3be7dca2c20482798c0
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Wed Jun 17 11:41:44 2020 -0500

    ASoC: hdac_hda: fix memleak with regmap not freed on remove
    
    [ Upstream commit a94eaccefea1186947c5c5451fcae2245dd7e714 ]
    
    kmemleak throws error reports on module load/unload tests, add
    snd_hdac_regmap_exit() in .remove().
    
    While we are at it, also fix the error handling flow in .probe() to
    use snd_hdac_regmap_exit() if needed.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Daniel Baluta <daniel.baluta@gmail.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@linux.intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20200617164144.17859-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25aa198d5023383eb2dc63eeae9a7c6ba515cba9
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Wed Jun 17 11:47:54 2020 -0500

    ASoC: SOF: Intel: add PCI ID for CometLake-S
    
    [ Upstream commit 258fb4f4c34a0db9d3834aba6784d7b322176bb9 ]
    
    Mirror ID added for legacy HDaudio
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200617164755.18104-3-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb8cb2a6704f6530dc941971f43483fdd6406bad
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Jun 14 00:30:26 2020 +0200

    drm: mcde: Fix display initialization problem
    
    [ Upstream commit b984b6d8b52372b98cce0a6ff6c2787f50665b87 ]
    
    The following bug appeared in the MCDE driver/display
    initialization during the recent merge window.
    
    First the place we call drm_fbdev_generic_setup() in the
    wrong place: this needs to be called AFTER calling
    drm_dev_register() else we get this splat:
    
     ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 1 at ../drivers/gpu/drm/drm_fb_helper.c:2198 drm_fbdev_generic_setup+0x164/0x1a8
    mcde a0350000.mcde: Device has not been registered.
    Modules linked in:
    Hardware name: ST-Ericsson Ux5x0 platform (Device Tree Support)
    [<c010e704>] (unwind_backtrace) from [<c010a86c>] (show_stack+0x10/0x14)
    [<c010a86c>] (show_stack) from [<c0414f38>] (dump_stack+0x9c/0xb0)
    [<c0414f38>] (dump_stack) from [<c0121c8c>] (__warn+0xb8/0xd0)
    [<c0121c8c>] (__warn) from [<c0121d18>] (warn_slowpath_fmt+0x74/0xb8)
    [<c0121d18>] (warn_slowpath_fmt) from [<c04b154c>] (drm_fbdev_generic_setup+0x164/0x1a8)
    [<c04b154c>] (drm_fbdev_generic_setup) from [<c04ed278>] (mcde_drm_bind+0xc4/0x160)
    [<c04ed278>] (mcde_drm_bind) from [<c04f06b8>] (try_to_bring_up_master+0x15c/0x1a4)
    (...)
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200613223027.4189309-1-linus.walleij@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f3387c880e5265e7842d8bbc3e94f77aa361e7e
Author: Jérôme Pouiller <jerome.pouiller@silabs.com>
Date:   Fri May 29 14:12:56 2020 +0200

    staging: wfx: fix coherency of hif_scan() prototype
    
    [ Upstream commit 29de523a6270a308d12d21f4fecf52dac491e226 ]
    
    The function hif_scan() return the timeout for the completion of the
    scan request. It is the only function from hif_tx.c that return another
    thing than just an error code. This behavior is not coherent with the
    rest of file. Worse, if value returned is positive, the caller can't
    make say if it is a timeout or the value returned by the hardware.
    
    Uniformize API with other HIF functions, only return the error code and
    pass timeout with parameters.
    
    Signed-off-by: Jérôme Pouiller <jerome.pouiller@silabs.com>
    Link: https://lore.kernel.org/r/20200529121256.1045521-1-Jerome.Pouiller@silabs.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9f34d8fb0a90f599b6287686340d0569a201fd7
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Apr 8 19:38:02 2020 +0200

    gpu: host1x: Detach driver on unregister
    
    [ Upstream commit d9a0a05bf8c76e6dc79230669a8b5d685b168c30 ]
    
    Currently when a host1x device driver is unregistered, it is not
    detached from the host1x controller, which means that the device
    will stay around and when the driver is registered again, it may
    bind to the old, stale device rather than the new one that was
    created from scratch upon driver registration. This in turn can
    cause various weird crashes within the driver core because it is
    confronted with a device that was already deleted.
    
    Fix this by detaching the driver from the host1x controller when
    it is unregistered. This ensures that the deleted device also is
    no longer present in the device list that drivers will bind to.
    
    Reported-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Tested-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ceea8871fc9a6af90ea1f1595b9368a5595d61d4
Author: Nicolin Chen <nicoleotsuka@gmail.com>
Date:   Tue May 19 02:03:01 2020 -0700

    drm/tegra: hub: Do not enable orphaned window group
    
    [ Upstream commit ef4e417eb3ec7fe657928f10ac1d2154d8a5fb38 ]
    
    Though the unconditional enable/disable code is not a final solution,
    we don't want to run into a NULL pointer situation when window group
    doesn't link to its DC parent if the DC is disabled in Device Tree.
    
    So this patch simply adds a check to make sure that window group has
    a valid parent before running into tegra_windowgroup_enable/disable.
    
    Signed-off-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5689ddf2dd7db1dafa101d3e2be9aba44ed25fae
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Apr 26 21:16:30 2020 +0200

    gpu: host1x: Clean up debugfs in error handling path
    
    [ Upstream commit 109be8b23fb2ec8e2d309325ee3b7a49eab63961 ]
    
    host1x_debug_init() must be reverted in an error handling path.
    
    This is already fixed in the remove function since commit 44156eee91ba
    ("gpu: host1x: Clean up debugfs on removal")
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfd4297fd74ebb18d05044e49f1ff2fedd2ece8d
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Sat Jun 13 20:30:25 2020 +0800

    drm/ttm: Fix dma_fence refcnt leak when adding move fence
    
    [ Upstream commit 11425c4519e2c974a100fc984867046d905b9380 ]
    
    ttm_bo_add_move_fence() invokes dma_fence_get(), which returns a
    reference of the specified dma_fence object to "fence" with increased
    refcnt.
    
    When ttm_bo_add_move_fence() returns, local variable "fence" becomes
    invalid, so the refcount should be decreased to keep refcount balanced.
    
    The reference counting issue happens in one exception handling path of
    ttm_bo_add_move_fence(). When no_wait_gpu flag is equals to true, the
    function forgets to decrease the refcnt increased by dma_fence_get(),
    causing a refcnt leak.
    
    Fix this issue by calling dma_fence_put() when no_wait_gpu flag is
    equals to true.
    
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/370221/
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5e6ec57e3cbe37cd3ef52d18de6be9953ee105a
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Sat Jun 13 20:28:38 2020 +0800

    drm/ttm: Fix dma_fence refcnt leak in ttm_bo_vm_fault_reserved
    
    [ Upstream commit 37cc4b95d13f311c04aa8e9daacca3905ad45ca7 ]
    
    ttm_bo_vm_fault_reserved() invokes dma_fence_get(), which returns a
    reference of the specified dma_fence object to "moving" with increased
    refcnt.
    
    When ttm_bo_vm_fault_reserved() returns, local variable "moving" becomes
    invalid, so the refcount should be decreased to keep refcount balanced.
    
    The reference counting issue happens in several exception handling paths
    of ttm_bo_vm_fault_reserved(). When those error scenarios occur such as
    "err" equals to -EBUSY, the function forgets to decrease the refcnt
    increased by dma_fence_get(), causing a refcnt leak.
    
    Fix this issue by calling dma_fence_put() when no_wait_gpu flag is
    equals to true.
    
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/370219/
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 130ca84cdc6a0db0a06fb43e0792222a46198eef
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jun 1 17:18:56 2020 -0700

    ARM: dts: omap4-droid4: Fix spi configuration and increase rate
    
    [ Upstream commit 0df12a01f4857495816b05f048c4c31439446e35 ]
    
    We can currently sometimes get "RXS timed out" errors and "EOT timed out"
    errors with spi transfers.
    
    These errors can be made easy to reproduce by reading the cpcap iio
    values in a loop while keeping the CPUs busy by also reading /dev/urandom.
    
    The "RXS timed out" errors we can fix by adding spi-cpol and spi-cpha
    in addition to the spi-cs-high property we already have.
    
    The "EOT timed out" errors we can fix by increasing the spi clock rate
    to 9.6 MHz. Looks similar MC13783 PMIC says it works at spi clock rates
    up to 20 MHz, so let's assume we can pick any rate up to 20 MHz also
    for cpcap.
    
    Cc: maemo-leste@lists.dyne.org
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01cbcabb2c292df43af5dc664353db97546cef63
Author: Stephane Eranian <eranian@google.com>
Date:   Thu May 28 13:16:14 2020 -0700

    perf/x86/rapl: Fix RAPL config variable bug
    
    [ Upstream commit 16accae3d97f97d7f61c4ee5d0002bccdef59088 ]
    
    This patch fixes a bug introduced by:
    
      fd3ae1e1587d6 ("perf/x86/rapl: Move RAPL support to common x86 code")
    
    The Kconfig variable name was wrong. It was missing the CONFIG_ prefix.
    
    Signed-off-by: Stephane Eranian <eraniangoogle.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Tested-by: Kim Phillips <kim.phillips@amd.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20200528201614.250182-1-eranian@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 401ec59876de64b54e726b658738f30c2050ee74
Author: Stephane Eranian <eranian@google.com>
Date:   Wed May 27 15:46:55 2020 -0700

    perf/x86/rapl: Move RAPL support to common x86 code
    
    [ Upstream commit fd3ae1e1587d64ef8cc8e361903d33625458073e ]
    
    To prepare for support of both Intel and AMD RAPL.
    
    As per the AMD PPR, Fam17h support Package RAPL counters to monitor power usage.
    The RAPL counter operates as with Intel RAPL, and as such it is beneficial
    to share the code.
    
    No change in functionality.
    
    Signed-off-by: Stephane Eranian <eranian@google.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20200527224659.206129-2-eranian@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1f915700830f11ba85c02874b31fde77f15a349
Author: Jens Thoms Toerring <jt@toerring.de>
Date:   Sun May 31 11:53:00 2020 +0200

    regmap: fix alignment issue
    
    [ Upstream commit 53d860952c8215cf9ae1ea33409c8cb71ad6ad3d ]
    
    The assembly and disassembly of data to be sent to or received from
    a device invoke functions regmap_format_XX() and regmap_parse_XX()
    that extract or insert data items from or into a buffer, using
    assignments. In some cases the functions are called with a buffer
    pointer with an odd address. On architectures with strict alignment
    requirements this can result in a kernel crash. The assignments
    have been replaced by functions that take alignment into account.
    
    Signed-off-by: Jens Thoms Toerring <jt@toerring.de>
    Link: https://lore.kernel.org/r/20200531095300.GA27570@toerring.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 566d865d8307bb9034969012f545e7e1131c2bd4
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jun 22 13:05:40 2020 +0200

    spi: spi-fsl-dspi: Fix lockup if device is removed during SPI transfer
    
    [ Upstream commit 7684580d45bd3d84ed9b453a4cadf7a9a5605a3f ]
    
    During device removal, the driver should unregister the SPI controller
    and stop the hardware.  Otherwise the dspi_transfer_one_message() could
    wait on completion infinitely.
    
    Additionally, calling spi_unregister_controller() first in device
    removal reverse-matches the probe function, where SPI controller is
    registered at the end.
    
    Fixes: 05209f457069 ("spi: fsl-dspi: add missing clk_disable_unprepare() in dspi_remove()")
    Reported-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200622110543.5035-1-krzk@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6e8da80139a00b99b350c88b414917ada8e76cd
Author: Peng Ma <peng.ma@nxp.com>
Date:   Fri Apr 24 14:12:16 2020 +0800

    spi: spi-fsl-dspi: Adding shutdown hook
    
    [ Upstream commit dc234825997ec6ff05980ca9e2204f4ac3f8d695 ]
    
    We need to ensure dspi controller could be stopped in order for kexec
    to start the next kernel.
    So add the shutdown operation support.
    
    Signed-off-by: Peng Ma <peng.ma@nxp.com>
    Link: https://lore.kernel.org/r/20200424061216.27445-1-peng.ma@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 378049d6a82226d40d22fb5192812bad6c3e832f
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Wed Jun 17 10:36:20 2020 +0200

    KVM: s390: reduce number of IO pins to 1
    
    [ Upstream commit 774911290c589e98e3638e73b24b0a4d4530e97c ]
    
    The current number of KVM_IRQCHIP_NUM_PINS results in an order 3
    allocation (32kb) for each guest start/restart. This can result in OOM
    killer activity even with free swap when the memory is fragmented
    enough:
    
    kernel: qemu-system-s39 invoked oom-killer: gfp_mask=0x440dc0(GFP_KERNEL_ACCOUNT|__GFP_COMP|__GFP_ZERO), order=3, oom_score_adj=0
    kernel: CPU: 1 PID: 357274 Comm: qemu-system-s39 Kdump: loaded Not tainted 5.4.0-29-generic #33-Ubuntu
    kernel: Hardware name: IBM 8562 T02 Z06 (LPAR)
    kernel: Call Trace:
    kernel: ([<00000001f848fe2a>] show_stack+0x7a/0xc0)
    kernel:  [<00000001f8d3437a>] dump_stack+0x8a/0xc0
    kernel:  [<00000001f8687032>] dump_header+0x62/0x258
    kernel:  [<00000001f8686122>] oom_kill_process+0x172/0x180
    kernel:  [<00000001f8686abe>] out_of_memory+0xee/0x580
    kernel:  [<00000001f86e66b8>] __alloc_pages_slowpath+0xd18/0xe90
    kernel:  [<00000001f86e6ad4>] __alloc_pages_nodemask+0x2a4/0x320
    kernel:  [<00000001f86b1ab4>] kmalloc_order+0x34/0xb0
    kernel:  [<00000001f86b1b62>] kmalloc_order_trace+0x32/0xe0
    kernel:  [<00000001f84bb806>] kvm_set_irq_routing+0xa6/0x2e0
    kernel:  [<00000001f84c99a4>] kvm_arch_vm_ioctl+0x544/0x9e0
    kernel:  [<00000001f84b8936>] kvm_vm_ioctl+0x396/0x760
    kernel:  [<00000001f875df66>] do_vfs_ioctl+0x376/0x690
    kernel:  [<00000001f875e304>] ksys_ioctl+0x84/0xb0
    kernel:  [<00000001f875e39a>] __s390x_sys_ioctl+0x2a/0x40
    kernel:  [<00000001f8d55424>] system_call+0xd8/0x2c8
    
    As far as I can tell s390x does not use the iopins as we bail our for
    anything other than KVM_IRQ_ROUTING_S390_ADAPTER and the chip/pin is
    only used for KVM_IRQ_ROUTING_IRQCHIP. So let us use a small number to
    reduce the memory footprint.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Link: https://lore.kernel.org/r/20200617083620.5409-1-borntraeger@de.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
