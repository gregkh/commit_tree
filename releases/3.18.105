commit 78db2bbfa06cc39707054093fbbc5e573a643d3e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 13 19:52:25 2018 +0200

    Linux 3.18.105

commit 1117cb497d8c9bc3e0d13d2d4238032ae460f1ab
Author: Greg Hackmann <ghackmann@google.com>
Date:   Thu Apr 12 17:29:51 2018 -0700

    Revert "xhci: plat: Register shutdown for xhci_plat"
    
    Pixel 2 field testers reported that when they tried to reboot their
    phones with some USB devices plugged in, the reboot would get wedged and
    eventually trigger watchdog reset.  Once the Pixel kernel team found a
    reliable repro case, they narrowed it down to this commit's 4.4.y
    backport.  Reverting the change made the issue go away.
    
    This reverts commit b07c12517f2aed0add8ce18146bb426b14099392.
    
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff82de4d71f84e5f7ee1aec4bc904c1e2c365bdb
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Fri Mar 23 14:47:30 2018 +0100

    ipv6: the entire IPv6 header chain must fit the first fragment
    
    
    [ Upstream commit 10b8a3de603df7b96004179b1b33b1708c76d144 ]
    
    While building ipv6 datagram we currently allow arbitrary large
    extheaders, even beyond pmtu size. The syzbot has found a way
    to exploit the above to trigger the following splat:
    
    kernel BUG at ./include/linux/skbuff.h:2073!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 4230 Comm: syzkaller672661 Not tainted 4.16.0-rc2+ #326
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:__skb_pull include/linux/skbuff.h:2073 [inline]
    RIP: 0010:__ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636
    RSP: 0018:ffff8801bc18f0f0 EFLAGS: 00010293
    RAX: ffff8801b17400c0 RBX: 0000000000000738 RCX: ffffffff84f01828
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8801b415ac18
    RBP: ffff8801bc18f360 R08: ffff8801b4576844 R09: 0000000000000000
    R10: ffff8801bc18f380 R11: ffffed00367aee4e R12: 00000000000000d6
    R13: ffff8801b415a740 R14: dffffc0000000000 R15: ffff8801b45767c0
    FS:  0000000001535880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000002000b000 CR3: 00000001b4123001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      ip6_finish_skb include/net/ipv6.h:969 [inline]
      udp_v6_push_pending_frames+0x269/0x3b0 net/ipv6/udp.c:1073
      udpv6_sendmsg+0x2a96/0x3400 net/ipv6/udp.c:1343
      inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:764
      sock_sendmsg_nosec net/socket.c:630 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:640
      ___sys_sendmsg+0x320/0x8b0 net/socket.c:2046
      __sys_sendmmsg+0x1ee/0x620 net/socket.c:2136
      SYSC_sendmmsg net/socket.c:2167 [inline]
      SyS_sendmmsg+0x35/0x60 net/socket.c:2162
      do_syscall_64+0x280/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x4404c9
    RSP: 002b:00007ffdce35f948 EFLAGS: 00000217 ORIG_RAX: 0000000000000133
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004404c9
    RDX: 0000000000000003 RSI: 0000000020001f00 RDI: 0000000000000003
    RBP: 00000000006cb018 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 0000000020000080 R11: 0000000000000217 R12: 0000000000401df0
    R13: 0000000000401e80 R14: 0000000000000000 R15: 0000000000000000
    Code: ff e8 1d 5e b9 fc e9 15 e9 ff ff e8 13 5e b9 fc e9 44 e8 ff ff e8 29
    5e b9 fc e9 c0 e6 ff ff e8 3f f3 80 fc 0f 0b e8 38 f3 80 fc <0f> 0b 49 8d
    87 80 00 00 00 4d 8d 87 84 00 00 00 48 89 85 20 fe
    RIP: __skb_pull include/linux/skbuff.h:2073 [inline] RSP: ffff8801bc18f0f0
    RIP: __ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636 RSP:
    ffff8801bc18f0f0
    
    As stated by RFC 7112 section 5:
    
       When a host fragments an IPv6 datagram, it MUST include the entire
       IPv6 Header Chain in the First Fragment.
    
    So this patch addresses the issue dropping datagrams with excessive
    extheader length. It also updates the error path to report to the
    calling socket nonnegative pmtu values.
    
    The issue apparently predates git history.
    
    v1 -> v2: cleanup error path, as per Eric's suggestion
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+91e6f9932ff122fa4410@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f15ab256b4faf2395ba9ef5be09ccad1b915d35e
Author: Craig Dillabaugh <cdillaba@mojatatu.com>
Date:   Mon Mar 26 14:58:32 2018 -0400

    net sched actions: fix dumping which requires several messages to user space
    
    
    [ Upstream commit 734549eb550c0c720bc89e50501f1b1e98cdd841 ]
    
    Fixes a bug in the tcf_dump_walker function that can cause some actions
    to not be reported when dumping a large number of actions. This issue
    became more aggrevated when cookies feature was added. In particular
    this issue is manifest when large cookie values are assigned to the
    actions and when enough actions are created that the resulting table
    must be dumped in multiple batches.
    
    The number of actions returned in each batch is limited by the total
    number of actions and the memory buffer size.  With small cookies
    the numeric limit is reached before the buffer size limit, which avoids
    the code path triggering this bug. When large cookies are used buffer
    fills before the numeric limit, and the erroneous code path is hit.
    
    For example after creating 32 csum actions with the cookie
    aaaabbbbccccdddd
    
    $ tc actions ls action csum
    total acts 26
    
        action order 0: csum (tcp) action continue
        index 1 ref 1 bind 0
        cookie aaaabbbbccccdddd
    
        .....
    
        action order 25: csum (tcp) action continue
        index 26 ref 1 bind 0
        cookie aaaabbbbccccdddd
    total acts 6
    
        action order 0: csum (tcp) action continue
        index 28 ref 1 bind 0
        cookie aaaabbbbccccdddd
    
        ......
    
        action order 5: csum (tcp) action continue
        index 32 ref 1 bind 0
        cookie aaaabbbbccccdddd
    
    Note that the action with index 27 is omitted from the report.
    
    Fixes: 4b3550ef530c ("[NET_SCHED]: Use nla_nest_start/nla_nest_end")"
    Signed-off-by: Craig Dillabaugh <cdillaba@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e10f44b15b5cab611bb50042ae3cb8a71afcfb30
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Mon Mar 26 19:19:30 2018 +0200

    r8169: fix setting driver_data after register_netdev
    
    
    [ Upstream commit 19c9ea363a244f85f90a424f9936e6d56449e33c ]
    
    pci_set_drvdata() is called only after registering the net_device,
    therefore we could run into a NPE if one of the functions using
    driver_data is called before it's set.
    
    Fix this by calling pci_set_drvdata() before registering the
    net_device.
    
    This fix is a candidate for stable. As far as I can see the
    bug has been there in kernel version 3.2 already, therefore
    I can't provide a reference which commit is fixed by it.
    
    The fix may need small adjustments per kernel version because
    due to other changes the label which is jumped to if
    register_netdev() fails has changed over time.
    
    Reported-by: David Miller <davem@davemloft.net>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44c05b356313632628aa0479a36a6b32defa60e1
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:30 2018 -0700

    ip6_tunnel: better validate user provided tunnel names
    
    
    [ Upstream commit db7a65e3ab78e5b1c4b17c0870ebee35a4ee3257 ]
    
    Use valid_name() to make sure user does not provide illegal
    device name.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff54063c787796b489eb928487bdf4f88dd383ea
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:31 2018 -0700

    vti6: better validate user provided tunnel names
    
    
    [ Upstream commit 537b361fbcbcc3cd6fe2bb47069fd292b9256d16 ]
    
    Use valid_name() to make sure user does not provide illegal
    device name.
    
    Fixes: ed1efb2aefbb ("ipv6: Add support for IPsec virtual tunnel interfaces")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53d960544b3d78830794ebbd6988998361d022e7
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:29 2018 -0700

    ip6_gre: better validate user provided tunnel names
    
    
    [ Upstream commit 5f42df013b8bc1b6511af7a04bf93b014884ae2a ]
    
    Use dev_valid_name() to make sure user does not provide illegal
    device name.
    
    syzbot caught the following bug :
    
    BUG: KASAN: stack-out-of-bounds in strlcpy include/linux/string.h:300 [inline]
    BUG: KASAN: stack-out-of-bounds in ip6gre_tunnel_locate+0x334/0x860 net/ipv6/ip6_gre.c:339
    Write of size 20 at addr ffff8801afb9f7b8 by task syzkaller851048/4466
    
    CPU: 1 PID: 4466 Comm: syzkaller851048 Not tainted 4.16.0+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1b9/0x29f lib/dump_stack.c:53
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0xac/0x2f5 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     memcpy+0x37/0x50 mm/kasan/kasan.c:303
     strlcpy include/linux/string.h:300 [inline]
     ip6gre_tunnel_locate+0x334/0x860 net/ipv6/ip6_gre.c:339
     ip6gre_tunnel_ioctl+0x69d/0x12e0 net/ipv6/ip6_gre.c:1195
     dev_ifsioc+0x43e/0xb90 net/core/dev_ioctl.c:334
     dev_ioctl+0x69a/0xcc0 net/core/dev_ioctl.c:525
     sock_ioctl+0x47e/0x680 net/socket.c:1015
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:500 [inline]
     do_vfs_ioctl+0x1cf/0x1650 fs/ioctl.c:684
     ksys_ioctl+0xa9/0xd0 fs/ioctl.c:701
     SYSC_ioctl fs/ioctl.c:708 [inline]
     SyS_ioctl+0x24/0x30 fs/ioctl.c:706
     do_syscall_64+0x29e/0x9d0 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: c12b395a4664 ("gre: Support GRE over IPv6")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ebe7bd411cedaa0800fd4cd332ee71dadbf19de
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:28 2018 -0700

    ipv6: sit: better validate user provided tunnel names
    
    
    [ Upstream commit b95211e066fc3494b7c115060b2297b4ba21f025 ]
    
    Use dev_valid_name() to make sure user does not provide illegal
    device name.
    
    syzbot caught the following bug :
    
    BUG: KASAN: stack-out-of-bounds in strlcpy include/linux/string.h:300 [inline]
    BUG: KASAN: stack-out-of-bounds in ipip6_tunnel_locate+0x63b/0xaa0 net/ipv6/sit.c:254
    Write of size 33 at addr ffff8801b64076d8 by task syzkaller932654/4453
    
    CPU: 0 PID: 4453 Comm: syzkaller932654 Not tainted 4.16.0+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1b9/0x29f lib/dump_stack.c:53
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0xac/0x2f5 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     memcpy+0x37/0x50 mm/kasan/kasan.c:303
     strlcpy include/linux/string.h:300 [inline]
     ipip6_tunnel_locate+0x63b/0xaa0 net/ipv6/sit.c:254
     ipip6_tunnel_ioctl+0xe71/0x241b net/ipv6/sit.c:1221
     dev_ifsioc+0x43e/0xb90 net/core/dev_ioctl.c:334
     dev_ioctl+0x69a/0xcc0 net/core/dev_ioctl.c:525
     sock_ioctl+0x47e/0x680 net/socket.c:1015
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:500 [inline]
     do_vfs_ioctl+0x1cf/0x1650 fs/ioctl.c:684
     ksys_ioctl+0xa9/0xd0 fs/ioctl.c:701
     SYSC_ioctl fs/ioctl.c:708 [inline]
     SyS_ioctl+0x24/0x30 fs/ioctl.c:706
     do_syscall_64+0x29e/0x9d0 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c708641ebeb69f8be9ceb073b50b9e14f7cfeae
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:27 2018 -0700

    ip_tunnel: better validate user provided tunnel names
    
    
    [ Upstream commit 9cb726a212a82c88c98aa9f0037fd04777cd8fe5 ]
    
    Use dev_valid_name() to make sure user does not provide illegal
    device name.
    
    syzbot caught the following bug :
    
    BUG: KASAN: stack-out-of-bounds in strlcpy include/linux/string.h:300 [inline]
    BUG: KASAN: stack-out-of-bounds in __ip_tunnel_create+0xca/0x6b0 net/ipv4/ip_tunnel.c:257
    Write of size 20 at addr ffff8801ac79f810 by task syzkaller268107/4482
    
    CPU: 0 PID: 4482 Comm: syzkaller268107 Not tainted 4.16.0+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1b9/0x29f lib/dump_stack.c:53
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0xac/0x2f5 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     memcpy+0x37/0x50 mm/kasan/kasan.c:303
     strlcpy include/linux/string.h:300 [inline]
     __ip_tunnel_create+0xca/0x6b0 net/ipv4/ip_tunnel.c:257
     ip_tunnel_create net/ipv4/ip_tunnel.c:352 [inline]
     ip_tunnel_ioctl+0x818/0xd40 net/ipv4/ip_tunnel.c:861
     ipip_tunnel_ioctl+0x1c5/0x420 net/ipv4/ipip.c:350
     dev_ifsioc+0x43e/0xb90 net/core/dev_ioctl.c:334
     dev_ioctl+0x69a/0xcc0 net/core/dev_ioctl.c:525
     sock_ioctl+0x47e/0x680 net/socket.c:1015
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:500 [inline]
     do_vfs_ioctl+0x1cf/0x1650 fs/ioctl.c:684
     ksys_ioctl+0xa9/0xd0 fs/ioctl.c:701
     SYSC_ioctl fs/ioctl.c:708 [inline]
     SyS_ioctl+0x24/0x30 fs/ioctl.c:706
     do_syscall_64+0x29e/0x9d0 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: c54419321455 ("GRE: Refactor GRE tunneling code.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f377efac04e88a9fcfe1332c7d590398cf320553
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:26 2018 -0700

    net: fool proof dev_valid_name()
    
    
    [ Upstream commit a9d48205d0aedda021fc3728972a9e9934c2b9de ]
    
    We want to use dev_valid_name() to validate tunnel names,
    so better use strnlen(name, IFNAMSIZ) than strlen(name) to make
    sure to not upset KASAN.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8666081f2b185994e799f8c3abb655749b46db61
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:47 2018 +0800

    bonding: process the err returned by dev_set_allmulti properly in bond_enslave
    
    
    [ Upstream commit 9f5a90c107741b864398f4ac0014711a8c1d8474 ]
    
    When dev_set_promiscuity(1) succeeds but dev_set_allmulti(1) fails,
    dev_set_promiscuity(-1) should be done before going to the err path.
    Otherwise, dev->promiscuity will leak.
    
    Fixes: 7e1a1ac1fbaa ("bonding: Check return of dev_set_promiscuity/allmulti")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0036076b30da0edd329a89243458c48313bf177f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:46 2018 +0800

    bonding: move dev_mc_sync after master_upper_dev_link in bond_enslave
    
    
    [ Upstream commit ae42cc62a9f07f1f6979054ed92606b9c30f4a2e ]
    
    Beniamino found a crash when adding vlan as slave of bond which is also
    the parent link:
    
      ip link add bond1 type bond
      ip link set bond1 up
      ip link add link bond1 vlan1 type vlan id 80
      ip link set vlan1 master bond1
    
    The call trace is as below:
    
      [<ffffffffa850842a>] queued_spin_lock_slowpath+0xb/0xf
      [<ffffffffa8515680>] _raw_spin_lock+0x20/0x30
      [<ffffffffa83f6f07>] dev_mc_sync+0x37/0x80
      [<ffffffffc08687dc>] vlan_dev_set_rx_mode+0x1c/0x30 [8021q]
      [<ffffffffa83efd2a>] __dev_set_rx_mode+0x5a/0xa0
      [<ffffffffa83f7138>] dev_mc_sync_multiple+0x78/0x80
      [<ffffffffc084127c>] bond_enslave+0x67c/0x1190 [bonding]
      [<ffffffffa8401909>] do_setlink+0x9c9/0xe50
      [<ffffffffa8403bf2>] rtnl_newlink+0x522/0x880
      [<ffffffffa8403ff7>] rtnetlink_rcv_msg+0xa7/0x260
      [<ffffffffa8424ecb>] netlink_rcv_skb+0xab/0xc0
      [<ffffffffa83fe498>] rtnetlink_rcv+0x28/0x30
      [<ffffffffa8424850>] netlink_unicast+0x170/0x210
      [<ffffffffa8424bf8>] netlink_sendmsg+0x308/0x420
      [<ffffffffa83cc396>] sock_sendmsg+0xb6/0xf0
    
    This is actually a dead lock caused by sync slave hwaddr from master when
    the master is the slave's 'slave'. This dead loop check is actually done
    by netdev_master_upper_dev_link. However, Commit 1f718f0f4f97 ("bonding:
    populate neighbour's private on enslave") moved it after dev_mc_sync.
    
    This patch is to fix it by moving dev_mc_sync after master_upper_dev_link,
    so that this loop check would be earlier than dev_mc_sync. It also moves
    if (mode == BOND_MODE_8023AD) into if (!bond_uses_primary) clause as an
    improvement.
    
    Note team driver also has this issue, I will fix it in another patch.
    
    Fixes: 1f718f0f4f97 ("bonding: populate neighbour's private on enslave")
    Reported-by: Beniamino Galvani <bgalvani@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01af3f60ad7accec62db0cb6078497142a615c65
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:45 2018 +0800

    bonding: fix the err path for dev hwaddr sync in bond_enslave
    
    
    [ Upstream commit 5c78f6bfae2b10ff70e21d343e64584ea6280c26 ]
    
    vlan_vids_add_by_dev is called right after dev hwaddr sync, so on
    the err path it should unsync dev hwaddr. Otherwise, the slave
    dev's hwaddr will never be unsync when this err happens.
    
    Fixes: 1ff412ad7714 ("bonding: change the bond's vlan syncing functions with the standard ones")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bc596d0b1de9e2c11e4e69c32b41fc807367a60
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Mar 27 20:50:52 2018 +0800

    vhost: correctly remove wait queue during poll failure
    
    
    [ Upstream commit dc6455a71c7fc5117977e197f67f71b49f27baba ]
    
    We tried to remove vq poll from wait queue, but do not check whether
    or not it was in a list before. This will lead double free. Fixing
    this by switching to use vhost_poll_stop() which zeros poll->wqh after
    removing poll from waitqueue to make sure it won't be freed twice.
    
    Cc: Darren Kenny <darren.kenny@oracle.com>
    Reported-by: syzbot+c0272972b01b872e604a@syzkaller.appspotmail.com
    Fixes: 2b8b328b61c79 ("vhost_net: handle polling errors when setting backend")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8403439194395abb0e83a2aface0ae374d6bdf23
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sat Mar 31 23:42:03 2018 +0800

    sky2: Increase D3 delay to sky2 stops working after suspend
    
    
    [ Upstream commit afb133637071be6deeb8b3d0e55593ffbf63c527 ]
    
    The sky2 ethernet stops working after system resume from suspend:
    [ 582.852065] sky2 0000:04:00.0: Refused to change power state, currently in D3
    
    The current 150ms delay is not enough, change it to 200ms can solve the
    issue.
    
    BugLink: https://bugs.launchpad.net/bugs/1758507
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42e996ef02bf28fa5aa260b35261b44b9c6b13d2
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Apr 8 07:52:08 2018 -0700

    sctp: sctp_sockaddr_af must check minimal addr length for AF_INET6
    
    
    [ Upstream commit 81e98370293afcb58340ce8bd71af7b97f925c26 ]
    
    Check must happen before call to ipv6_addr_v4mapped()
    
    syzbot report was :
    
    BUG: KMSAN: uninit-value in sctp_sockaddr_af net/sctp/socket.c:359 [inline]
    BUG: KMSAN: uninit-value in sctp_do_bind+0x60f/0xdc0 net/sctp/socket.c:384
    CPU: 0 PID: 3576 Comm: syzkaller968804 Not tainted 4.16.0+ #82
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:53
     kmsan_report+0x142/0x240 mm/kmsan/kmsan.c:1067
     __msan_warning_32+0x6c/0xb0 mm/kmsan/kmsan_instr.c:676
     sctp_sockaddr_af net/sctp/socket.c:359 [inline]
     sctp_do_bind+0x60f/0xdc0 net/sctp/socket.c:384
     sctp_bind+0x149/0x190 net/sctp/socket.c:332
     inet6_bind+0x1fd/0x1820 net/ipv6/af_inet6.c:293
     SYSC_bind+0x3f2/0x4b0 net/socket.c:1474
     SyS_bind+0x54/0x80 net/socket.c:1460
     do_syscall_64+0x309/0x430 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    RIP: 0033:0x43fd49
    RSP: 002b:00007ffe99df3d28 EFLAGS: 00000213 ORIG_RAX: 0000000000000031
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 000000000043fd49
    RDX: 0000000000000010 RSI: 0000000020000000 RDI: 0000000000000003
    RBP: 00000000006ca018 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 00000000004002c8 R11: 0000000000000213 R12: 0000000000401670
    R13: 0000000000401700 R14: 0000000000000000 R15: 0000000000000000
    
    Local variable description: ----address@SYSC_bind
    Variable was created at:
     SYSC_bind+0x6f/0x4b0 net/socket.c:1461
     SyS_bind+0x54/0x80 net/socket.c:1460
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42481f7ae9a3a03934614cfb50b0ecc0640ecbf4
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Apr 7 17:15:22 2018 -0700

    sctp: do not leak kernel memory to user space
    
    
    [ Upstream commit 6780db244d6b1537d139dea0ec8aad10cf9e4adb ]
    
    syzbot produced a nice report [1]
    
    Issue here is that a recvmmsg() managed to leak 8 bytes of kernel memory
    to user space, because sin_zero (padding field) was not properly cleared.
    
    [1]
    BUG: KMSAN: uninit-value in copy_to_user include/linux/uaccess.h:184 [inline]
    BUG: KMSAN: uninit-value in move_addr_to_user+0x32e/0x530 net/socket.c:227
    CPU: 1 PID: 3586 Comm: syzkaller481044 Not tainted 4.16.0+ #82
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:53
     kmsan_report+0x142/0x240 mm/kmsan/kmsan.c:1067
     kmsan_internal_check_memory+0x164/0x1d0 mm/kmsan/kmsan.c:1176
     kmsan_copy_to_user+0x69/0x160 mm/kmsan/kmsan.c:1199
     copy_to_user include/linux/uaccess.h:184 [inline]
     move_addr_to_user+0x32e/0x530 net/socket.c:227
     ___sys_recvmsg+0x4e2/0x810 net/socket.c:2211
     __sys_recvmmsg+0x54e/0xdb0 net/socket.c:2313
     SYSC_recvmmsg+0x29b/0x3e0 net/socket.c:2394
     SyS_recvmmsg+0x76/0xa0 net/socket.c:2378
     do_syscall_64+0x309/0x430 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    RIP: 0033:0x4401c9
    RSP: 002b:00007ffc56f73098 EFLAGS: 00000217 ORIG_RAX: 000000000000012b
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004401c9
    RDX: 0000000000000001 RSI: 0000000020003ac0 RDI: 0000000000000003
    RBP: 00000000006ca018 R08: 0000000020003bc0 R09: 0000000000000010
    R10: 0000000000000000 R11: 0000000000000217 R12: 0000000000401af0
    R13: 0000000000401b80 R14: 0000000000000000 R15: 0000000000000000
    
    Local variable description: ----addr@___sys_recvmsg
    Variable was created at:
     ___sys_recvmsg+0xd5/0x810 net/socket.c:2172
     __sys_recvmmsg+0x54e/0xdb0 net/socket.c:2313
    
    Bytes 8-15 of 16 are uninitialized
    
    ==================================================================
    Kernel panic - not syncing: panic_on_warn set ...
    
    CPU: 1 PID: 3586 Comm: syzkaller481044 Tainted: G    B            4.16.0+ #82
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:53
     panic+0x39d/0x940 kernel/panic.c:183
     kmsan_report+0x238/0x240 mm/kmsan/kmsan.c:1083
     kmsan_internal_check_memory+0x164/0x1d0 mm/kmsan/kmsan.c:1176
     kmsan_copy_to_user+0x69/0x160 mm/kmsan/kmsan.c:1199
     copy_to_user include/linux/uaccess.h:184 [inline]
     move_addr_to_user+0x32e/0x530 net/socket.c:227
     ___sys_recvmsg+0x4e2/0x810 net/socket.c:2211
     __sys_recvmmsg+0x54e/0xdb0 net/socket.c:2313
     SYSC_recvmmsg+0x29b/0x3e0 net/socket.c:2394
     SyS_recvmmsg+0x76/0xa0 net/socket.c:2378
     do_syscall_64+0x309/0x430 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc:     Vlad Yasevich <vyasevich@gmail.com>
    Cc:     Neil Horman <nhorman@tuxdriver.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c6453b2839e9b5e7b35c4caeccfd9fb54c744de
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Apr 2 18:48:37 2018 -0700

    pptp: remove a buggy dst release in pptp_connect()
    
    
    [ Upstream commit bfacfb457b36911a10140b8cb3ce76a74883ac5a ]
    
    Once dst has been cached in socket via sk_setup_caps(),
    it is illegal to call ip_rt_put() (or dst_release()),
    since sk_setup_caps() did not change dst refcount.
    
    We can still dereference it since we hold socket lock.
    
    Caugth by syzbot :
    
    BUG: KASAN: use-after-free in atomic_dec_return include/asm-generic/atomic-instrumented.h:198 [inline]
    BUG: KASAN: use-after-free in dst_release+0x27/0xa0 net/core/dst.c:185
    Write of size 4 at addr ffff8801c54dc040 by task syz-executor4/20088
    
    CPU: 1 PID: 20088 Comm: syz-executor4 Not tainted 4.16.0+ #376
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1a7/0x27d lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x23c/0x360 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x137/0x190 mm/kasan/kasan.c:267
     kasan_check_write+0x14/0x20 mm/kasan/kasan.c:278
     atomic_dec_return include/asm-generic/atomic-instrumented.h:198 [inline]
     dst_release+0x27/0xa0 net/core/dst.c:185
     sk_dst_set include/net/sock.h:1812 [inline]
     sk_dst_reset include/net/sock.h:1824 [inline]
     sock_setbindtodevice net/core/sock.c:610 [inline]
     sock_setsockopt+0x431/0x1b20 net/core/sock.c:707
     SYSC_setsockopt net/socket.c:1845 [inline]
     SyS_setsockopt+0x2ff/0x360 net/socket.c:1828
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x4552d9
    RSP: 002b:00007f4878126c68 EFLAGS: 00000246 ORIG_RAX: 0000000000000036
    RAX: ffffffffffffffda RBX: 00007f48781276d4 RCX: 00000000004552d9
    RDX: 0000000000000019 RSI: 0000000000000001 RDI: 0000000000000013
    RBP: 000000000072bea0 R08: 0000000000000010 R09: 0000000000000000
    R10: 00000000200010c0 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 0000000000000526 R14: 00000000006fac30 R15: 0000000000000000
    
    Allocated by task 20088:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459 [inline]
     kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:552
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:489
     kmem_cache_alloc+0x12e/0x760 mm/slab.c:3542
     dst_alloc+0x11f/0x1a0 net/core/dst.c:104
     rt_dst_alloc+0xe9/0x540 net/ipv4/route.c:1520
     __mkroute_output net/ipv4/route.c:2265 [inline]
     ip_route_output_key_hash_rcu+0xa49/0x2c60 net/ipv4/route.c:2493
     ip_route_output_key_hash+0x20b/0x370 net/ipv4/route.c:2322
     __ip_route_output_key include/net/route.h:126 [inline]
     ip_route_output_flow+0x26/0xa0 net/ipv4/route.c:2577
     ip_route_output_ports include/net/route.h:163 [inline]
     pptp_connect+0xa84/0x1170 drivers/net/ppp/pptp.c:453
     SYSC_connect+0x213/0x4a0 net/socket.c:1639
     SyS_connect+0x24/0x30 net/socket.c:1620
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Freed by task 20082:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459 [inline]
     __kasan_slab_free+0x11a/0x170 mm/kasan/kasan.c:520
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:527
     __cache_free mm/slab.c:3486 [inline]
     kmem_cache_free+0x83/0x2a0 mm/slab.c:3744
     dst_destroy+0x266/0x380 net/core/dst.c:140
     dst_destroy_rcu+0x16/0x20 net/core/dst.c:153
     __rcu_reclaim kernel/rcu/rcu.h:178 [inline]
     rcu_do_batch kernel/rcu/tree.c:2675 [inline]
     invoke_rcu_callbacks kernel/rcu/tree.c:2930 [inline]
     __rcu_process_callbacks kernel/rcu/tree.c:2897 [inline]
     rcu_process_callbacks+0xd6c/0x17b0 kernel/rcu/tree.c:2914
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
    
    The buggy address belongs to the object at ffff8801c54dc000
     which belongs to the cache ip_dst_cache of size 168
    The buggy address is located 64 bytes inside of
     168-byte region [ffff8801c54dc000, ffff8801c54dc0a8)
    The buggy address belongs to the page:
    page:ffffea0007153700 count:1 mapcount:0 mapping:ffff8801c54dc000 index:0x0
    flags: 0x2fffc0000000100(slab)
    raw: 02fffc0000000100 ffff8801c54dc000 0000000000000000 0000000100000010
    raw: ffffea0006b34b20 ffffea0006b6c1e0 ffff8801d674a1c0 0000000000000000
    page dumped because: kasan: bad access detected
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaf9594d18b22431694ecafedfd5edf1192aebbd
Author: Alexander Potapenko <glider@google.com>
Date:   Fri Mar 23 13:49:02 2018 +0100

    netlink: make sure nladdr has correct size in netlink_connect()
    
    
    [ Upstream commit 7880287981b60a6808f39f297bb66936e8bdf57a ]
    
    KMSAN reports use of uninitialized memory in the case when |alen| is
    smaller than sizeof(struct sockaddr_nl), and therefore |nladdr| isn't
    fully copied from the userspace.
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Fixes: 1da177e4c3f41524 ("Linux-2.6.12-rc2")
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dab02a24803283426755ae2b6a5a88a1c839cf83
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 26 08:08:07 2018 -0700

    net: fix possible out-of-bound read in skb_network_protocol()
    
    
    [ Upstream commit 1dfe82ebd7d8fd43dba9948fdfb31f145014baa0 ]
    
    skb mac header is not necessarily set at the time skb_network_protocol()
    is called. Use skb->data instead.
    
    BUG: KASAN: slab-out-of-bounds in skb_network_protocol+0x46b/0x4b0 net/core/dev.c:2739
    Read of size 2 at addr ffff8801b3097a0b by task syz-executor5/14242
    
    CPU: 1 PID: 14242 Comm: syz-executor5 Not tainted 4.16.0-rc6+ #280
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x24d lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x23c/0x360 mm/kasan/report.c:412
     __asan_report_load_n_noabort+0xf/0x20 mm/kasan/report.c:443
     skb_network_protocol+0x46b/0x4b0 net/core/dev.c:2739
     harmonize_features net/core/dev.c:2924 [inline]
     netif_skb_features+0x509/0x9b0 net/core/dev.c:3011
     validate_xmit_skb+0x81/0xb00 net/core/dev.c:3084
     validate_xmit_skb_list+0xbf/0x120 net/core/dev.c:3142
     packet_direct_xmit+0x117/0x790 net/packet/af_packet.c:256
     packet_snd net/packet/af_packet.c:2944 [inline]
     packet_sendmsg+0x3aed/0x60b0 net/packet/af_packet.c:2969
     sock_sendmsg_nosec net/socket.c:629 [inline]
     sock_sendmsg+0xca/0x110 net/socket.c:639
     ___sys_sendmsg+0x767/0x8b0 net/socket.c:2047
     __sys_sendmsg+0xe5/0x210 net/socket.c:2081
    
    Fixes: 19acc327258a ("gso: Handle Trans-Ether-Bridging protocol in skb_network_protocol()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Pravin B Shelar <pshelar@ovn.org>
    Reported-by: Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 714f4e55231893dd2319962127e6c9b730c57c1a
Author: Mel Gorman <mgorman@suse.de>
Date:   Tue Feb 9 11:15:14 2016 -0800

    futex: Remove requirement for lock_page() in get_futex_key()
    
    commit 65d8fc777f6dcfee12785c057a6b57f679641c90 upstream.
    
    When dealing with key handling for shared futexes, we can drastically reduce
    the usage/need of the page lock. 1) For anonymous pages, the associated futex
    object is the mm_struct which does not require the page lock. 2) For inode
    based, keys, we can check under RCU read lock if the page mapping is still
    valid and take reference to the inode. This just leaves one rare race that
    requires the page lock in the slow path when examining the swapcache.
    
    Additionally realtime users currently have a problem with the page lock being
    contended for unbounded periods of time during futex operations.
    
    Task A
         get_futex_key()
         lock_page()
        ---> preempted
    
    Now any other task trying to lock that page will have to wait until
    task A gets scheduled back in, which is an unbound time.
    
    With this patch, we pretty much have a lockless futex_get_key().
    
    Experiments show that this patch can boost/speedup the hashing of shared
    futexes with the perf futex benchmarks (which is good for measuring such
    change) by up to 45% when there are high (> 100) thread counts on a 60 core
    Westmere. Lower counts are pretty much in the noise range or less than 10%,
    but mid range can be seen at over 30% overall throughput (hash ops/sec).
    This makes anon-mem shared futexes much closer to its private counterpart.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    [ Ported on top of thp refcount rework, changelog, comments, fixes. ]
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Chris Mason <clm@fb.com>
    Cc: Darren Hart <dvhart@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: dave@stgolabs.net
    Link: http://lkml.kernel.org/r/1455045314-8305-3-git-send-email-dave@stgolabs.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Chenbo Feng <fengc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77dcc4b901562869171c67ea1fb473cc20cff183
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Jun 7 19:01:32 2017 -0400

    random: use lockless method of accessing and updating f->reg_idx
    
    commit 92e75428ffc90e2a0321062379f883f3671cfebe upstream.
    
    Linus pointed out that there is a much more efficient way of avoiding
    the problem that we were trying to address in commit 9dfa7bba35ac0:
    "fix race in drivers/char/random.c:get_reg()".
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd63ed219ea24f7be43687a18ae6544b91a430ae
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Apr 9 18:21:44 2018 -0700

    virtio_net: check return value of skb_to_sgvec in one more location
    
    Kernels that do not have f6b10209b90d ("virtio-net: switch to use
    build_skb() for small buffer") will have an extra call to skb_to_sgvec
    that is not handled by e2fcad58fd23 ("virtio_net: check return value of
    skb_to_sgvec always"). Since the former does not appear to be stable
    material, just fix the call up directly.
    
    Cc: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13bbd09eeff80b9cc4e09ca6197a01e0e29fcb37
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:26 2017 +0200

    virtio_net: check return value of skb_to_sgvec always
    
    commit e2fcad58fd230f635a74e4e983c6f4ea893642d2 upstream.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [natechancellor: backport to 3.18]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2ee82df5700ac497cd2d34096ab628049451382
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:24 2017 +0200

    rxrpc: check return value of skb_to_sgvec always
    
    commit 89a5ea99662505d2d61f2a3030a6896c2cb3cdb0 upstream.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Acked-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [natechancellor: backport to 3.18]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0fcb83da112d3550931b4acb42c29db663e7302
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:23 2017 +0200

    ipsec: check return value of skb_to_sgvec always
    
    commit 3f29770723fe498a5c5f57c3a31a996ebdde03e1 upstream.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [nc: Adjust context due to lack of 000ae7b2690e2 and fca11ebde3f0]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ede3b044f109a6a4f9f7ac16da703a6eca002634
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 7 21:54:00 2018 +0100

    EDAC, mv64x60: Fix an error handling path
    
    
    [ Upstream commit 68fa24f9121c04ef146b5158f538c8b32f285be5 ]
    
    We should not call edac_mc_del_mc() if a corresponding call to
    edac_mc_add_mc() has not been performed yet.
    
    So here, we should go to err instead of err2 to branch at the right
    place of the error handling path.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180107205400.14068-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bddb76d85da182bf592082442ab8117590cb643f
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Jan 3 10:18:03 2018 -0800

    tty: n_gsm: Allow ADM response in addition to UA for control dlci
    
    
    [ Upstream commit ea3d8465ab9b3e01be329ac5195970a84bef76c5 ]
    
    Some devices have the control dlci stay in ADM mode instead of the UA
    mode. This can seen at least on droid 4 when trying to open the ts
    27.010 mux port. Enabling n_gsm debug mode shows the control dlci
    always respond with DM to SABM instead of UA:
    
    # modprobe n_gsm debug=0xff
    # ldattach -d GSM0710 /dev/ttyS0 &
    gsmld_output: 00000000: f9 03 3f 01 1c f9
    --> 0) C: SABM(P)
    gsmld_receive: 00000000: f9 03 1f 01 36 f9
    <-- 0) C: DM(P)
    ...
    $ minicom -D /dev/gsmtty1
    minicom: cannot open /dev/gsmtty1: No error information
    $ strace minicom -D /dev/gsmtty1
    ...
    open("/dev/gsmtty1", O_RDWR|O_NOCTTY|O_NONBLOCK|O_LARGEFILE) = -1 EL2HLT
    
    Note that this is different issue from other n_gsm -EL2HLT issues such
    as timeouts when the control dlci does not respond at all.
    
    The ADM mode seems to be a quite common according to "RF Wireless World"
    article "GSM Issue-UE sends SABM and gets a DM response instead of
    UA response":
    
      This issue is most commonly observed in GSM networks where in UE sends
      SABM and expects network to send UA response but it ends up receiving
      DM response from the network. SABM stands for Set asynchronous balanced
      mode, UA stands for Unnumbered Acknowledge and DA stands for
      Disconnected Mode.
    
      An RLP entity can be in one of two modes:
      - Asynchronous Balanced Mode (ABM)
      - Asynchronous Disconnected Mode (ADM)
    
    Currently Linux kernel closes the control dlci after several retries
    in gsm_dlci_t1() on DM. This causes n_gsm /dev/gsmtty ports to produce
    error code -EL2HLT when trying to open them as the closing of control
    dlci has already set gsm->dead.
    
    Let's fix the issue by allowing control dlci stay in ADM mode after the
    retries so the /dev/gsmtty ports can be opened and used. It seems that
    it might take several attempts to get any response from the control
    dlci, so it's best to allow ADM mode only after the SABM retries are
    done.
    
    Note that for droid 4 additional patches are needed to mux the ttyS0
    pins and to toggle RTS gpio_149 to wake up the mdm6600 modem are also
    needed to use n_gsm. And the mdm6600 modem needs to be powered on.
    
    Cc: linux-serial@vger.kernel.org
    Cc: Alan Cox <alan@llwyncelyn.cymru>
    Cc: Jiri Prchal <jiri.prchal@aksignal.cz>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Marcel Partap <mpartap@gmx.net>
    Cc: Michael Scott <michael.scott@linaro.org>
    Cc: Peter Hurley <peter@hurleysoftware.com>
    Cc: Russ Gorby <russ.gorby@intel.com>
    Cc: Sascha Hauer <s.hauer@pengutronix.de>
    Cc: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 108c448df1ca19b968493f1bfbb121cd5a7033ad
Author: chenxiang <chenxiang66@hisilicon.com>
Date:   Thu Jan 4 21:04:33 2018 +0800

    scsi: libsas: initialize sas_phy status according to response of DISCOVER
    
    
    [ Upstream commit affc67788fe5dfffad5cda3d461db5cf2b2ff2b0 ]
    
    The status of SAS PHY is in sas_phy->enabled. There is an issue that the
    status of a remote SAS PHY may be initialized incorrectly: if disable
    remote SAS PHY through sysfs interface (such as echo 0 >
    /sys/class/sas_phy/phy-1:0:0/enable), then reboot the system, and we
    will find the status of remote SAS PHY which is disabled before is
    1 (cat /sys/class/sas_phy/phy-1:0:0/enable). But actually the status of
    remote SAS PHY is disabled and the device attached is not found.
    
    In SAS protocol, NEGOTIATED LOGICAL LINK RATE field of DISCOVER response
    is 0x1 when remote SAS PHY is disabled. So initialize sas_phy->enabled
    according to the value of NEGOTIATED LOGICAL LINK RATE field.
    
    Signed-off-by: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8603b7ca5f0cb84c08feae87212642d532ec8bd6
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:32 2018 +0800

    scsi: libsas: fix error when getting phy events
    
    
    [ Upstream commit 2b23d9509fd7174b362482cf5f3b5f9a2265bc33 ]
    
    The intend purpose here was to goto out if smp_execute_task() returned
    error. Obviously something got screwed up. We will never get these link
    error statistics below:
    
    ~:/sys/class/sas_phy/phy-1:0:12 # cat invalid_dword_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat running_disparity_error_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat loss_of_dword_sync_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat phy_reset_problem_count
    0
    
    Obviously we should goto error handler if smp_execute_task() returns
    non-zero.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7323e9393266e6227540f906d74a6c55be39f37
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:31 2018 +0800

    scsi: libsas: fix memory leak in sas_smp_get_phy_events()
    
    
    [ Upstream commit 4a491b1ab11ca0556d2fda1ff1301e862a2d44c4 ]
    
    We've got a memory leak with the following producer:
    
    while true;
    do cat /sys/class/sas_phy/phy-1:0:12/invalid_dword_count >/dev/null;
    done
    
    The buffer req is allocated and not freed after we return. Fix it.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a73020b1a0862921f3b0ec385752dbc98fd1a712
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Jan 8 12:21:21 2018 -0800

    bcache: segregate flash only volume write streams
    
    
    [ Upstream commit 4eca1cb28d8b0574ca4f1f48e9331c5f852d43b9 ]
    
    In such scenario that there are some flash only volumes
    , and some cached devices, when many tasks request these devices in
    writeback mode, the write IOs may fall to the same bucket as bellow:
    | cached data | flash data | cached data | cached data| flash data|
    then after writeback of these cached devices, the bucket would
    be like bellow bucket:
    | free | flash data | free | free | flash data |
    
    So, there are many free space in this bucket, but since data of flash
    only volumes still exists, so this bucket cannot be reclaimable,
    which would cause waste of bucket space.
    
    In this patch, we segregate flash only volume write streams from
    cached devices, so data from flash only volumes and cached devices
    can store in different buckets.
    
    Compare to v1 patch, this patch do not add a additionally open bucket
    list, and it is try best to segregate flash only volume write streams
    from cached devices, sectors of flash only volumes may still be mixed
    with dirty sectors of cached device, but the number is very small.
    
    [mlyle: fixed commit log formatting, permissions, line endings]
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f180aca3546e4399647e23c40ebae6dcdec564b5
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Jan 8 12:21:19 2018 -0800

    bcache: stop writeback thread after detaching
    
    
    [ Upstream commit 8d29c4426b9f8afaccf28de414fde8a722b35fdf ]
    
    Currently, when a cached device detaching from cache, writeback thread is
    not stopped, and writeback_rate_update work is not canceled. For example,
    after the following command:
    echo 1 >/sys/block/sdb/bcache/detach
    you can still see the writeback thread. Then you attach the device to the
    cache again, bcache will create another writeback thread, for example,
    after below command:
    echo  ba0fb5cd-658a-4533-9806-6ce166d883b9 > /sys/block/sdb/bcache/attach
    then you will see 2 writeback threads.
    This patch stops writeback thread and cancels writeback_rate_update work
    when cached device detaching from cache.
    
    Compare with patch v1, this v2 patch moves code down into the register
    lock for safety in case of any future changes as Coly and Mike suggested.
    
    [edit by mlyle: commit log spelling/formatting]
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1acea7442a568921dfd79299543002d47a2a6a9
Author: Roopa Prabhu <roopa@cumulusnetworks.com>
Date:   Sun Jun 11 16:32:50 2017 -0700

    vxlan: dont migrate permanent fdb entries during learn
    
    
    [ Upstream commit e0090a9e979de5202c7d16c635dea2f005221073 ]
    
    This patch fixes vxlan_snoop to not move permanent fdb entries
    on learn events. This is consistent with the bridge fdb
    handling of permanent entries.
    
    Fixes: 26a41ae60438 ("vxlan: only migrate dynamic FDB entries")
    Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b51f16e3172b61434cf7e818a223318dc185f40c
Author: Bob Moore <robert.moore@intel.com>
Date:   Mon Jun 5 16:40:34 2017 +0800

    ACPICA: Disassembler: Abort on an invalid/unknown AML opcode
    
    
    [ Upstream commit 6f0527b77d9e0129dd8e50945b0d610ed943d6b2 ]
    
    ACPICA commit ed0389cb11a61e63c568ac1f67948fc6a7bd1aeb
    
    An invalid opcode indicates something seriously wrong with the
    input AML file. The AML parser is immediately confused and lost,
    causing the resulting parse tree to be ill-formed. The actual
    disassembly can then cause numerous unrelated errors and faults.
    
    This change aborts the disassembly upon discovery of such an
    opcode during the AML parse phase.
    
    Link: https://github.com/acpica/acpica/commit/ed0389cb
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 525e1c229280d8f1b983339a06824e18961d1cc2
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Mon Jun 5 16:40:02 2017 +0800

    ACPICA: Events: Add runtime stub support for event APIs
    
    
    [ Upstream commit 861ba6351c520328e94a78c923b415faa9116287 ]
    
    ACPICA commit 99bc3beca92c6574ea1d69de42e54f872e6373ce
    
    It is reported that on Linux, RTC driver complains wrong errors on
    hardware reduced platform:
      [    4.085420] ACPI Warning: Could not enable fixed event - real_time_clock (4) (20160422/evxface-654)
    
    This patch fixes this by correctly adding runtime reduced hardware check.
    Reported by Chandan Tagore, fixed by Lv Zheng.
    
    Link: https://github.com/acpica/acpica/commit/99bc3bec
    Tested-by: Chandan Tagore <tagore.chandan@gmail.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6013c30341e7816f2f4eb8f6438107eea6bb77e
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Fri Jun 9 18:43:56 2017 +0200

    Bluetooth: Send HCI Set Event Mask Page 2 command only when needed
    
    
    [ Upstream commit 313f6888c8fbb1bc8b36c9012ce4e1de848df696 ]
    
    The Broadcom BCM20702 Bluetooth controller in ThinkPad-T530 devices
    report support for the Set Event Mask Page 2 command, but actually do
    return an error when trying to use it.
    
      < HCI Command: Read Local Supported Commands (0x04|0x0002) plen 0
      > HCI Event: Command Complete (0x0e) plen 68
           Read Local Supported Commands (0x04|0x0002) ncmd 1
             Status: Success (0x00)
             Commands: 162 entries
               ...
               Set Event Mask Page 2 (Octet 22 - Bit 2)
               ...
    
      < HCI Command: Set Event Mask Page 2 (0x03|0x0063) plen 8
             Mask: 0x0000000000000000
      > HCI Event: Command Complete (0x0e) plen 4
           Set Event Mask Page 2 (0x03|0x0063) ncmd 1
             Status: Unknown HCI Command (0x01)
    
    Since these controllers do not support any feature that would require
    the event mask page 2 to be modified, it is safe to not send this
    command at all. The default value is all bits set to zero.
    
    T:  Bus=01 Lev=02 Prnt=02 Port=03 Cnt=03 Dev#=  9 Spd=12   MxCh= 0
    D:  Ver= 2.00 Cls=ff(vend.) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=0a5c ProdID=21e6 Rev= 1.12
    S:  Manufacturer=Broadcom Corp
    S:  Product=BCM20702A0
    S:  SerialNumber=F82FA8E8CFC0
    C:* #Ifs= 4 Cfg#= 1 Atr=e0 MxPwr=  0mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=btusb
    E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=01 Driver=(none)
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Reported-by: Sedat Dilek <sedat.dilek@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Szymon Janc <szymon.janc@codecoup.pl>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51b503fbbc3de0428102e0258f338d9c1a095f64
Author: Lorenzo Bianconi <lorenzo.bianconi83@gmail.com>
Date:   Tue Jun 6 22:51:24 2017 +0200

    iio: magnetometer: st_magn_spi: fix spi_device_id table
    
    
    [ Upstream commit c83761ff0aac954aa368c623bb0f0d1a3214e834 ]
    
    Remove LSM303DLHC, LSM303DLM from st_magn_id_table since LSM303DL series
    does not support spi interface
    
    Fixes: 872e79add756 (iio: magn: Add STMicroelectronics magn driver)
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@st.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7638610f97f78f54c82aeb6f8f81aea8aa82eac7
Author: Jag Raman <jag.raman@oracle.com>
Date:   Fri Jun 9 12:29:31 2017 -0400

    sparc64: ldc abort during vds iso boot
    
    
    [ Upstream commit 6c95483b768c62f8ee933ae08a1bdbcb78b5410f ]
    
    Orabug: 20902628
    
    When an ldc control-only packet is received during data exchange in
    read_nonraw(), a new rx head is calculated but the rx queue head is not
    actually advanced (rx_set_head() is not called) and a branch is taken to
    'no_data' at which point two things can happen depending on the value
    of the newly calculated rx head and the current rx tail:
    
    - If the rx queue is determined to be not empty, then the wrong packet
      is picked up.
    
    - If the rx queue is determined to be empty, then a read error (EAGAIN)
      is eventually returned since it is falsely assumed that more data was
      expected.
    
    The fix is to update the rx head and return in case of a control only
    packet during data exchange.
    
    Signed-off-by: Jagannathan Raman <jag.raman@oracle.com>
    Reviewed-by: Aaron Young <aaron.young@oracle.com>
    Reviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>
    Reviewed-by: Bijan Mottahedeh <bijan.mottahedeh@oracle.com>
    Reviewed-by: Liam Merwick <liam.merwick@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b229267f96c34efdefe2c0e0af9e8bf3a5456fe
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Jun 10 14:56:56 2017 +0800

    sctp: fix recursive locking warning in sctp_do_peeloff
    
    
    [ Upstream commit 6dfe4b97e08ec3d1a593fdaca099f0ef0a3a19e6 ]
    
    Dmitry got the following recursive locking report while running syzkaller
    fuzzer, the Call Trace:
     __dump_stack lib/dump_stack.c:16 [inline]
     dump_stack+0x2ee/0x3ef lib/dump_stack.c:52
     print_deadlock_bug kernel/locking/lockdep.c:1729 [inline]
     check_deadlock kernel/locking/lockdep.c:1773 [inline]
     validate_chain kernel/locking/lockdep.c:2251 [inline]
     __lock_acquire+0xef2/0x3430 kernel/locking/lockdep.c:3340
     lock_acquire+0x2a1/0x630 kernel/locking/lockdep.c:3755
     lock_sock_nested+0xcb/0x120 net/core/sock.c:2536
     lock_sock include/net/sock.h:1460 [inline]
     sctp_close+0xcd/0x9d0 net/sctp/socket.c:1497
     inet_release+0xed/0x1c0 net/ipv4/af_inet.c:425
     inet6_release+0x50/0x70 net/ipv6/af_inet6.c:432
     sock_release+0x8d/0x1e0 net/socket.c:597
     __sock_create+0x38b/0x870 net/socket.c:1226
     sock_create+0x7f/0xa0 net/socket.c:1237
     sctp_do_peeloff+0x1a2/0x440 net/sctp/socket.c:4879
     sctp_getsockopt_peeloff net/sctp/socket.c:4914 [inline]
     sctp_getsockopt+0x111a/0x67e0 net/sctp/socket.c:6628
     sock_common_getsockopt+0x95/0xd0 net/core/sock.c:2690
     SYSC_getsockopt net/socket.c:1817 [inline]
     SyS_getsockopt+0x240/0x380 net/socket.c:1799
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    This warning is caused by the lock held by sctp_getsockopt() is on one
    socket, while the other lock that sctp_close() is getting later is on
    the newly created (which failed) socket during peeloff operation.
    
    This patch is to avoid this warning by use lock_sock with subclass
    SINGLE_DEPTH_NESTING as Wang Cong and Marcelo's suggestion.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Suggested-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Suggested-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bc4f815b0d6293dc7f61dedb034077107a62668
Author: Mintz, Yuval <Yuval.Mintz@cavium.com>
Date:   Fri Jun 9 17:17:01 2017 +0300

    bnx2x: Allow vfs to disable txvlan offload
    
    
    [ Upstream commit 92f85f05caa51d844af6ea14ffbc7a786446a644 ]
    
    VF clients are configured as enforced, meaning firmware is validating
    the correctness of their ethertype/vid during transmission.
    Once txvlan is disabled, VF would start getting SKBs for transmission
    here vlan is on the payload - but it'll pass the packet's ethertype
    instead of the vid, leading to firmware declaring it as malicious.
    
    Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b3cbf961bd70e2720f811f791ff5ebf4c1bc611
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jun 8 10:53:10 2017 +0200

    xen: avoid type warning in xchg_xen_ulong
    
    
    [ Upstream commit 9cc91f212111cdcbefa02dcdb7dd443f224bf52c ]
    
    The improved type-checking version of container_of() triggers a warning for
    xchg_xen_ulong, pointing out that 'xen_ulong_t' is unsigned, but atomic64_t
    contains a signed value:
    
    drivers/xen/events/events_2l.c: In function 'evtchn_2l_handle_events':
    drivers/xen/events/events_2l.c:187:1020: error: call to '__compiletime_assert_187' declared with attribute error: pointer type mismatch in container_of()
    
    This adds a cast to work around the warning.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Fixes: 85323a991d40 ("xen: arm: mandate EABI and use generic atomic operations.")
    Fixes: daa2ac80834d ("kernel.h: handle pointers to arrays better in container_of()")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Acked-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 091b3b4ba55daf8b28f40794aefdaa0bdb5af7a1
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Thu Jun 8 16:31:07 2017 +0900

    perf tests: Decompress kernel module before objdump
    
    
    [ Upstream commit 94df1040b1e6aacd8dec0ba3c61d7e77cd695f26 ]
    
    If a kernel modules is compressed, it should be decompressed before
    running objdump to parse binary data correctly.  This fixes a failure of
    object code reading test for me.
    
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: kernel-team@lge.com
    Link: http://lkml.kernel.org/r/20170608073109.30699-8-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78b2f6fc11c85abe023f668b0255eab3de5e935f
Author: Christian Lamparter <chunkeey@googlemail.com>
Date:   Wed Jun 7 15:51:15 2017 +0200

    net: emac: fix reset timeout with AR8035 phy
    
    
    [ Upstream commit 19d90ece81da802207a9b91ce95a29fbdc40626e ]
    
    This patch fixes a problem where the AR8035 PHY can't be
    detected on an Cisco Meraki MR24, if the ethernet cable is
    not connected on boot.
    
    Russell Senior provided steps to reproduce the issue:
    |Disconnect ethernet cable, apply power, wait until device has booted,
    |plug in ethernet, check for interfaces, no eth0 is listed.
    |
    |This appears to be a problem during probing of the AR8035 Phy chip.
    |When ethernet has no link, the phy detection fails, and eth0 is not
    |created. Plugging ethernet later has no effect, because there is no
    |interface as far as the kernel is concerned. The relevant part of
    |the boot log looks like this:
    |this is the failing case:
    |
    |[    0.876611] /plb/opb/emac-rgmii@ef601500: input 0 in RGMII mode
    |[    0.882532] /plb/opb/ethernet@ef600c00: reset timeout
    |[    0.888546] /plb/opb/ethernet@ef600c00: can't find PHY!
    |and the succeeding case:
    |
    |[    0.876672] /plb/opb/emac-rgmii@ef601500: input 0 in RGMII mode
    |[    0.883952] eth0: EMAC-0 /plb/opb/ethernet@ef600c00, MAC 00:01:..
    |[    0.890822] eth0: found Atheros 8035 Gigabit Ethernet PHY (0x01)
    
    Based on the comment and the commit message of
    commit 23fbb5a87c56 ("emac: Fix EMAC soft reset on 460EX/GT").
    This is because the AR8035 PHY doesn't provide the TX Clock,
    if the ethernet cable is not attached. This causes the reset
    to timeout and the PHY detection code in emac_init_phy() is
    unable to detect the AR8035 PHY. As a result, the emac driver
    bails out early and the user left with no ethernet.
    
    In order to stay compatible with existing configurations, the driver
    tries the current reset approach at first. Only if the first attempt
    timed out, it does perform one more retry with the clock temporarily
    switched to the internal source for just the duration of the reset.
    
    LEDE-Bug: #687 <https://bugs.lede-project.org/index.php?do=details&task_id=687>
    
    Cc: Chris Blake <chrisrblake93@gmail.com>
    Reported-by: Russell Senior <russell@personaltelco.net>
    Fixes: 23fbb5a87c56e98 ("emac: Fix EMAC soft reset on 460EX/GT")
    Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4430b27d8d5abf45f67002787aca552a1381b13d
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Thu Jun 8 15:20:32 2017 +0200

    MIPS: kprobes: flush_insn_slot should flush only if probe initialised
    
    
    [ Upstream commit 698b851073ddf5a894910d63ca04605e0473414e ]
    
    When ftrace is used with kprobes, it is possible for a kprobe to contain
    an invalid location (ie. only initialised to 0 and not to a specific
    location in the code). Trying to perform a cache flush on such location
    leads to a crash r4k_flush_icache_range().
    
    Fixes: c1bf207d6ee1 ("MIPS: kprobe: Add support.")
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16296/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a80b4705ab32d7a0c5b1938914956c67bdd3e725
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Tue Apr 11 09:00:34 2017 +0200

    MIPS: mm: fixed mappings: correct initialisation
    
    
    [ Upstream commit 71eb989ab5a110df8bcbb9609bacde73feacbedd ]
    
    fixrange_init operates at PMD-granularity and expects the addresses to
    be PMD-size aligned, but currently that might not be the case for
    PKMAP_BASE unless it is defined properly, so ensure a correct alignment
    is used before passing the address to fixrange_init.
    
    fixed mappings: only align the start address that is passed to
    fixrange_init rather than the value before adding the size, as we may
    end up with uninitialised upper part of the range.
    
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15948/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88abd409ada54b52673268749d49361614c4157d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue May 30 11:45:12 2017 +0200

    perf/core: Correct event creation with PERF_FORMAT_GROUP
    
    
    [ Upstream commit ba5213ae6b88fb170c4771fef6553f759c7d8cdd ]
    
    Andi was asking about PERF_FORMAT_GROUP vs inherited events, which led
    to the discovery of a bug from commit:
    
      3dab77fb1bf8 ("perf: Rework/fix the whole read vs group stuff")
    
     -       PERF_SAMPLE_GROUP                       = 1U << 4,
     +       PERF_SAMPLE_READ                        = 1U << 4,
    
     -       if (attr->inherit && (attr->sample_type & PERF_SAMPLE_GROUP))
     +       if (attr->inherit && (attr->read_format & PERF_FORMAT_GROUP))
    
    is a clear fail :/
    
    While this changes user visible behaviour; it was previously possible
    to create an inherited event with PERF_SAMPLE_READ; this is deemed
    acceptible because its results were always incorrect.
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vince@deater.net>
    Fixes:  3dab77fb1bf8 ("perf: Rework/fix the whole read vs group stuff")
    Link: http://lkml.kernel.org/r/20170530094512.dy2nljns2uq7qa3j@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85fcf68b0216c9a1347e19dfa1f744bcd77f7892
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed May 31 18:50:43 2017 +0300

    e1000e: Undo e1000e_pm_freeze if __e1000_shutdown fails
    
    
    [ Upstream commit 833521ebc65b1c3092e5c0d8a97092f98eec595d ]
    
    An error during suspend (e100e_pm_suspend),
    
    [  429.994338] ACPI : EC: event blocked
    [  429.994633] e1000e: EEE TX LPI TIMER: 00000011
    [  430.955451] pci_pm_suspend(): e1000e_pm_suspend+0x0/0x30 [e1000e] returns -2
    [  430.955454] dpm_run_callback(): pci_pm_suspend+0x0/0x140 returns -2
    [  430.955458] PM: Device 0000:00:19.0 failed to suspend async: error -2
    [  430.955581] PM: Some devices failed to suspend, or early wake event detected
    [  430.957709] ACPI : EC: event unblocked
    
    lead to complete failure:
    
    [  432.585002] ------------[ cut here ]------------
    [  432.585013] WARNING: CPU: 3 PID: 8372 at kernel/irq/manage.c:1478 __free_irq+0x9f/0x280
    [  432.585015] Trying to free already-free IRQ 20
    [  432.585016] Modules linked in: cdc_ncm usbnet x86_pkg_temp_thermal intel_powerclamp coretemp mii crct10dif_pclmul crc32_pclmul ghash_clmulni_intel snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep lpc_ich snd_hda_core snd_pcm mei_me mei sdhci_pci sdhci i915 mmc_core e1000e ptp pps_core prime_numbers
    [  432.585042] CPU: 3 PID: 8372 Comm: kworker/u16:40 Tainted: G     U          4.10.0-rc8-CI-Patchwork_3870+ #1
    [  432.585044] Hardware name: LENOVO 2356GCG/2356GCG, BIOS G7ET31WW (1.13 ) 07/02/2012
    [  432.585050] Workqueue: events_unbound async_run_entry_fn
    [  432.585051] Call Trace:
    [  432.585058]  dump_stack+0x67/0x92
    [  432.585062]  __warn+0xc6/0xe0
    [  432.585065]  warn_slowpath_fmt+0x4a/0x50
    [  432.585070]  ? _raw_spin_lock_irqsave+0x49/0x60
    [  432.585072]  __free_irq+0x9f/0x280
    [  432.585075]  free_irq+0x34/0x80
    [  432.585089]  e1000_free_irq+0x65/0x70 [e1000e]
    [  432.585098]  e1000e_pm_freeze+0x7a/0xb0 [e1000e]
    [  432.585106]  e1000e_pm_suspend+0x21/0x30 [e1000e]
    [  432.585113]  pci_pm_suspend+0x71/0x140
    [  432.585118]  dpm_run_callback+0x6f/0x330
    [  432.585122]  ? pci_pm_freeze+0xe0/0xe0
    [  432.585125]  __device_suspend+0xea/0x330
    [  432.585128]  async_suspend+0x1a/0x90
    [  432.585132]  async_run_entry_fn+0x34/0x160
    [  432.585137]  process_one_work+0x1f4/0x6d0
    [  432.585140]  ? process_one_work+0x16e/0x6d0
    [  432.585143]  worker_thread+0x49/0x4a0
    [  432.585145]  kthread+0x107/0x140
    [  432.585148]  ? process_one_work+0x6d0/0x6d0
    [  432.585150]  ? kthread_create_on_node+0x40/0x40
    [  432.585154]  ret_from_fork+0x2e/0x40
    [  432.585156] ---[ end trace 6712df7f8c4b9124 ]---
    
    The unwind failures stems from commit 2800209994f8 ("e1000e: Refactor PM
    flows"), but it may be a later patch that introduced the non-recoverable
    behaviour.
    
    Fixes: 2800209994f8 ("e1000e: Refactor PM flows")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=99847
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd1c55ea4c42e941cca85b53ea5ec6d66107f306
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Jun 5 12:22:55 2017 +0100

    net: phy: avoid genphy_aneg_done() for PHYs without clause 22 support
    
    
    [ Upstream commit 41408ad519f7a2a1c5229e61f2a97f4df1b61adc ]
    
    Avoid calling genphy_aneg_done() for PHYs that do not implement the
    Clause 22 register set.
    
    Clause 45 PHYs may implement the Clause 22 register set along with the
    Clause 22 extension MMD.  Hence, we can't simply block access to the
    Clause 22 functions based on the PHY being a Clause 45 PHY.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99e6a55fedd64fe163301611571fff71a657b1e0
Author: A Sun <as1033x@comcast.net>
Date:   Sun Mar 26 15:33:07 2017 -0300

    mceusb: sporadic RX truncation corruption fix
    
    
    [ Upstream commit 8e175b22e8640bf3a58e071af54190b909e4a944 ]
    
    Intermittent RX truncation and loss of IR received data. This resulted
    in receive stream synchronization errors where driver attempted to
    incorrectly parse IR data (eg 0x90 below) as command response.
    
    [ 3969.139898] mceusb 1-1.2:1.0: processed IR data
    [ 3969.151315] mceusb 1-1.2:1.0: rx data: 00 90 (length=2)
    [ 3969.151321] mceusb 1-1.2:1.0: Unknown command 0x00 0x90
    [ 3969.151336] mceusb 1-1.2:1.0: rx data: 98 0a 8d 0a 8e 0a 8e 0a 8e 0a 8e 0a 9a 0a 8e 0a 0b 3a 8e 00 80 41 59 00 00 (length=25)
    [ 3969.151341] mceusb 1-1.2:1.0: Raw IR data, 24 pulse/space samples
    [ 3969.151348] mceusb 1-1.2:1.0: Storing space with duration 500000
    
    Bug trigger appears to be normal, but heavy, IR receiver use.
    
    Signed-off-by: A Sun <as1033x@comcast.net>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ca4ba25a31b492a20c2fe9fe1f9c6847ca6c19e
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Apr 23 10:06:36 2017 -0300

    cx25840: fix unchecked return values
    
    
    [ Upstream commit 35378ce143071c2a6bad4b59a000e9b9f8f6ea67 ]
    
    In functions cx25840_initialize(), cx231xx_initialize(), and
    cx23885_initialize(), the return value of create_singlethread_workqueue()
    is used without validation. This may result in NULL dereference and cause
    kernel crash. This patch fixes it.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7860df19508e8a0829ed7f627900ab3874c707a8
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed May 3 10:28:50 2017 -0700

    e1000e: fix race condition around skb_tstamp_tx()
    
    
    [ Upstream commit 5012863b7347866764c4a4e58b62fb05346b0d06 ]
    
    The e1000e driver and related hardware has a limitation on Tx PTP
    packets which requires we limit to timestamping a single packet at once.
    We do this by verifying that we never request a new Tx timestamp while
    we still have a tx_hwtstamp_skb pointer.
    
    Unfortunately the driver suffers from a race condition around this. The
    tx_hwtstamp_skb pointer is not set to NULL until after skb_tstamp_tx()
    is called. This function notifies the stack and applications of a new
    timestamp. Even a well behaved application that only sends a new request
    when the first one is finished might be woken up and possibly send
    a packet before we can free the timestamp in the driver again. The
    result is that we needlessly ignore some Tx timestamp requests in this
    corner case.
    
    Fix this by assigning the tx_hwtstamp_skb pointer prior to calling
    skb_tstamp_tx() and use a temporary pointer to hold the timestamped skb
    until that function finishes. This ensures that the application is not
    woken up until the driver is ready to begin timestamping a new packet.
    
    This ensures that well behaved applications do not accidentally race
    with condition to skip Tx timestamps. Obviously an application which
    sends multiple Tx timestamp requests at once will still only timestamp
    one packet at a time. Unfortunately there is nothing we can do about
    this.
    
    Reported-by: David Mirabito <davidm@metamako.com>
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cfbe9ba85101aa413d337fe5fd2946bf210b8c0
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Mon Jun 5 13:59:15 2017 +0200

    tags: honor COMPILED_SOURCE with apart output directory
    
    
    [ Upstream commit cbf52a3e6a8a92beec6e0c70abf4111cd8f8faf7 ]
    
    When the kernel is compiled with an "O=" argument, the object files are
    not in the source tree, but in the build tree.
    
    This patch fixes O= build by looking for object files in the build tree.
    
    Fixes: 923e02ecf3f8 ("scripts/tags.sh: Support compiled source")
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 731c55b81b42754498fe3090d1988617064fbfdc
Author: Milian Wolff <milian.wolff@kdab.com>
Date:   Fri Jun 2 16:37:52 2017 +0200

    perf report: Ensure the perf DSO mapping matches what libdw sees
    
    
    [ Upstream commit 2538b9e2450ae255337c04356e9e0f8cb9ec48d9 ]
    
    In some situations the libdw unwinder stopped working properly.  I.e.
    with libunwind we see:
    
    ~~~~~
    heaptrack_gui  2228 135073.400112:     641314 cycles:
                        e8ed _dl_fixup (/usr/lib/ld-2.25.so)
                       15f06 _dl_runtime_resolve_sse_vex (/usr/lib/ld-2.25.so)
                       ed94c KDynamicJobTracker::KDynamicJobTracker (/home/milian/projects/compiled/kf5/lib64/libKF5KIOWidgets.so.5.35.0)
                       608f3 _GLOBAL__sub_I_kdynamicjobtracker.cpp (/home/milian/projects/compiled/kf5/lib64/libKF5KIOWidgets.so.5.35.0)
                        f199 call_init.part.0 (/usr/lib/ld-2.25.so)
                        f2a5 _dl_init (/usr/lib/ld-2.25.so)
                         db9 _dl_start_user (/usr/lib/ld-2.25.so)
    ~~~~~
    
    But with libdw and without this patch this sample is not properly
    unwound:
    
    ~~~~~
    heaptrack_gui  2228 135073.400112:     641314 cycles:
                        e8ed _dl_fixup (/usr/lib/ld-2.25.so)
                       15f06 _dl_runtime_resolve_sse_vex (/usr/lib/ld-2.25.so)
                       ed94c KDynamicJobTracker::KDynamicJobTracker (/home/milian/projects/compiled/kf5/lib64/libKF5KIOWidgets.so.5.35.0)
    ~~~~~
    
    Debug output showed me that libdw found a module for the last frame
    address, but it thinks it belongs to /usr/lib/ld-2.25.so. This patch
    double-checks what libdw sees and what perf knows. If the mappings
    mismatch, we now report the elf known to perf. This fixes the situation
    above, and the libdw unwinder produces the same stack as libunwind.
    
    Signed-off-by: Milian Wolff <milian.wolff@kdab.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lkml.kernel.org/r/20170602143753.16907-1-milian.wolff@kdab.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8a6af587e34428ccd56a0f5a639d5f2e32692f5
Author: Talat Batheesh <talatb@mellanox.com>
Date:   Sun Jun 4 14:30:07 2017 +0300

    net/mlx4: Fix the check in attaching steering rules
    
    
    [ Upstream commit 6dc06c08bef1c746ff8da33dab677cfbacdcad32 ]
    
    Our previous patch (cited below) introduced a regression
    for RAW Eth QPs.
    
    Fix it by checking if the QP number provided by user-space
    exists, hence allowing steering rules to be added for valid
    QPs only.
    
    Fixes: 89c557687a32 ("net/mlx4_en: Avoid adding steering rules with invalid ring")
    Reported-by: Or Gerlitz <gerlitz.or@gmail.com>
    Signed-off-by: Talat Batheesh <talatb@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Or Gerlitz <ogerlitz@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c115eaa40a032c6e40dda1f38a7a958e3c68307
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:22 2017 +0200

    skbuff: return -EMSGSIZE in skb_to_sgvec to prevent overflow
    
    
    [ Upstream commit 48a1df65334b74bd7531f932cca5928932abf769 ]
    
    This is a defense-in-depth measure in response to bugs like
    4d6fa57b4dab ("macsec: avoid heap overflow in skb_to_sgvec"). There's
    not only a potential overflow of sglist items, but also a stack overflow
    potential, so we fix this by limiting the amount of recursion this function
    is allowed to do. Not actually providing a bounded base case is a future
    disaster that we can easily avoid here.
    
    As a small matter of house keeping, we take this opportunity to move the
    documentation comment over the actual function the documentation is for.
    
    While this could be implemented by using an explicit stack of skbuffs,
    when implementing this, the function complexity increased considerably,
    and I don't think such complexity and bloat is actually worth it. So,
    instead I built this and tested it on x86, x86_64, ARM, ARM64, and MIPS,
    and measured the stack usage there. I also reverted the recent MIPS
    changes that give it a separate IRQ stack, so that I could experience
    some worst-case situations. I found that limiting it to 24 layers deep
    yielded a good stack usage with room for safety, as well as being much
    deeper than any driver actually ever creates.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Sabrina Dubroca <sd@queasysnail.net>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b499ce80dbabca23deb3ba2852fd37a21690dfec
Author: Dmitry Monakhov <dmonakhov@openvz.org>
Date:   Wed May 10 19:20:44 2017 +0400

    bio-integrity: Do not allocate integrity context for bio w/o data
    
    
    [ Upstream commit 3116a23bb30272d74ea81baf5d0ee23f602dd15b ]
    
    If bio has no data, such as ones from blkdev_issue_flush(),
    then we have nothing to protect.
    
    This patch prevent bugon like follows:
    
    kfree_debugcheck: out of range ptr ac1fa1d106742a5ah
    kernel BUG at mm/slab.c:2773!
    invalid opcode: 0000 [#1] SMP
    Modules linked in: bcache
    CPU: 0 PID: 4428 Comm: xfs_io Tainted: G        W       4.11.0-rc4-ext4-00041-g2ef0043-dirty #43
    Hardware name: Virtuozzo KVM, BIOS seabios-1.7.5-11.vz7.4 04/01/2014
    task: ffff880137786440 task.stack: ffffc90000ba8000
    RIP: 0010:kfree_debugcheck+0x25/0x2a
    RSP: 0018:ffffc90000babde0 EFLAGS: 00010082
    RAX: 0000000000000034 RBX: ac1fa1d106742a5a RCX: 0000000000000007
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff88013f3ccb40
    RBP: ffffc90000babde8 R08: 0000000000000000 R09: 0000000000000000
    R10: 00000000fcb76420 R11: 00000000725172ed R12: 0000000000000282
    R13: ffffffff8150e766 R14: ffff88013a145e00 R15: 0000000000000001
    FS:  00007fb09384bf40(0000) GS:ffff88013f200000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fd0172f9e40 CR3: 0000000137fa9000 CR4: 00000000000006f0
    Call Trace:
     kfree+0xc8/0x1b3
     bio_integrity_free+0xc3/0x16b
     bio_free+0x25/0x66
     bio_put+0x14/0x26
     blkdev_issue_flush+0x7a/0x85
     blkdev_fsync+0x35/0x42
     vfs_fsync_range+0x8e/0x9f
     vfs_fsync+0x1c/0x1e
     do_fsync+0x31/0x4a
     SyS_fsync+0x10/0x14
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e56a2fd0a8fc14fdfe21ebdd79817f9a4eb50e2d
Author: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
Date:   Wed May 31 22:21:03 2017 +0200

    Fix serial console on SNI RM400 machines
    
    
    [ Upstream commit e279e6d98e0cf2c2fe008b3c29042b92f0e17b1d ]
    
    sccnxp driver doesn't get the correct uart clock rate, if CONFIG_HAVE_CLOCK
    is disabled. Correct usage of clk API to make it work with/without it.
    
    Fixes: 90efa75f7ab0 (serial: sccnxp: Using CLK API for getting UART clock)
    
    Suggested-by: Russell King - ARM Linux <linux@armlinux.org.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3de0436c51b8e3027f9f710d463c6518efdac73
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu May 18 11:51:51 2017 +0300

    drm/omap: fix tiled buffer stride calculations
    
    
    [ Upstream commit cc8dd7661ccc2d8dc88921da8e6cc7c2fcdb0341 ]
    
    omap_gem uses page alignment for buffer stride. The related calculations
    are a bit off, though, as byte stride of 4096 gets aligned to 8192,
    instead of 4096.
    
    This patch changes the code to use DIV_ROUND_UP(), which fixes those
    calculations and makes them more readable.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fe9dcbadf023b3ced2a2cc7ad572c8d97f8fff4
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Wed May 31 15:08:25 2017 +0800

    mISDN: Fix a sleep-in-atomic bug
    
    
    [ Upstream commit 93818da5eed63fbc17b64080406ea53b86b23309 ]
    
    The driver may sleep under a read spin lock, and the function call path is:
    send_socklist (acquire the lock by read_lock)
      skb_copy(GFP_KERNEL) --> may sleep
    
    To fix it, the "GFP_KERNEL" is replaced with "GFP_ATOMIC".
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd1ca48c141577f836860b6634ed0c398af25ce
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Thu Jun 1 16:18:10 2017 +0800

    qlcnic: Fix a sleep-in-atomic bug in qlcnic_82xx_hw_write_wx_2M and qlcnic_82xx_hw_read_wx_2M
    
    
    [ Upstream commit 5ea6d691aac6c93b790f0905e3460d44cc4c449b ]
    
    The driver may sleep under a write spin lock, and the function
    call path is:
    qlcnic_82xx_hw_write_wx_2M (acquire the lock by write_lock_irqsave)
      crb_win_lock
        qlcnic_pcie_sem_lock
          usleep_range
    qlcnic_82xx_hw_read_wx_2M (acquire the lock by write_lock_irqsave)
      crb_win_lock
        qlcnic_pcie_sem_lock
          usleep_range
    
    To fix it, the usleep_range is replaced with udelay.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 005f225828b02c3dba535ee087877baa8268afc0
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed May 31 13:35:57 2017 +0200

    perf trace: Add mmap alias for s390
    
    
    [ Upstream commit 54265664c15a68905d8d67d19205e9a767636434 ]
    
    The s390 architecture maps sys_mmap (nr 90) into sys_old_mmap.  For this
    reason perf trace can't find the proper syscall event to get args format
    from and displays it wrongly as 'continued'.
    
    To fix that fill the "alias" field with "old_mmap" for trace's mmap record
    to get the correct translation.
    
    Before:
         0.042 ( 0.011 ms): vest/43052 fstat(statbuf: 0x3ffff89fd90                ) = 0
         0.042 ( 0.028 ms): vest/43052  ... [continued]: mmap()) = 0x3fffd6e2000
         0.072 ( 0.025 ms): vest/43052 read(buf: 0x3fffd6e2000, count: 4096        ) = 6
    
    After:
         0.045 ( 0.011 ms): fstat(statbuf: 0x3ffff8a0930                           ) = 0
         0.057 ( 0.018 ms): mmap(arg: 0x3ffff8a0858                                ) = 0x3fffd14a000
         0.076 ( 0.025 ms): read(buf: 0x3fffd14a000, count: 4096                   ) = 6
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/20170531113557.19175-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 434a18bf102a9300743b4e8d7ed622bc73b6e71e
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon May 29 20:26:07 2017 +1000

    powerpc/spufs: Fix coredump of SPU contexts
    
    
    [ Upstream commit 99acc9bede06bbb2662aafff51f5b9e529fa845e ]
    
    If a process dumps core while it has SPU contexts active then we have
    code to also dump information about the SPU contexts.
    
    Unfortunately it's been broken for 3 1/2 years, and we didn't notice. In
    commit 7b1f4020d0d1 ("spufs: get rid of dump_emit() wrappers") the nread
    variable was removed and rc used instead. That means when the loop exits
    successfully, rc has the number of bytes read, but it's then used as the
    return value for the function, which should return 0 on success.
    
    So fix it by setting rc = 0 before returning in the success case.
    
    Fixes: 7b1f4020d0d1 ("spufs: get rid of dump_emit() wrappers")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Jeremy Kerr <jk@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8853077bde74cf460aacd321fe61b6d3a9bac7be
Author: Roman Pen <roman.penyaev@profitbricks.com>
Date:   Thu Jun 1 10:55:03 2017 +0200

    KVM: SVM: do not zero out segment attributes if segment is unusable or not present
    
    
    [ Upstream commit d9c1b5431d5f0e07575db785a022bce91051ac1d ]
    
    This is a fix for the problem [1], where VMCB.CPL was set to 0 and interrupt
    was taken on userspace stack.  The root cause lies in the specific AMD CPU
    behaviour which manifests itself as unusable segment attributes on SYSRET.
    The corresponding work around for the kernel is the following:
    
    61f01dd941ba ("x86_64, asm: Work around AMD SYSRET SS descriptor attribute issue")
    
    In other turn virtualization side treated unusable segment incorrectly and
    restored CPL from SS attributes, which were zeroed out few lines above.
    
    In current patch it is assured only that P bit is cleared in VMCB.save state
    and segment attributes are not zeroed out if segment is not presented or is
    unusable, therefore CPL can be safely restored from DPL field.
    
    This is only one part of the fix, since QEMU side should be fixed accordingly
    not to zero out attributes on its side.  Corresponding patch will follow.
    
    [1] Message id: CAJrWOzD6Xq==b-zYCDdFLgSRMPM-NkNuTSDFEtX=7MreT45i7Q@mail.gmail.com
    
    Signed-off-by: Roman Pen <roman.penyaev@profitbricks.com>
    Signed-off-by: Mikhail Sennikovskii <mikhail.sennikovskii@profitbricks.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim KrÄmÃ¡Å™ <rkrcmar@redhat.com>
    Cc: kvm@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a288ca3ff28f5c9156729caae3d1c15f3640a4b
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Tue May 30 17:38:43 2017 -0500

    net: freescale: fix potential null pointer dereference
    
    
    [ Upstream commit 06d2d6431bc8d41ef5ffd8bd4b52cea9f72aed22 ]
    
    Add NULL check before dereferencing pointer _id_ in order to avoid
    a potential NULL pointer dereference.
    
    Addresses-Coverity-ID: 1397995
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d70b9c586354866067b3c0e4561e0fe780e73665
Author: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
Date:   Fri May 19 22:18:55 2017 +0530

    rtc: interface: Validate alarm-time before handling rollover
    
    
    [ Upstream commit da96aea0ed177105cb13ee83b328f6c61e061d3f ]
    
    In function __rtc_read_alarm() its possible for an alarm time-stamp to
    be invalid even after replacing missing components with current
    time-stamp. The condition 'alarm->time.tm_year < 70' will trigger this
    case and will cause the call to 'rtc_tm_to_time64(&alarm->time)'
    return a negative value for variable t_alm.
    
    While handling alarm rollover this negative t_alm (assumed to seconds
    offset from '1970-01-01 00:00:00') is converted back to rtc_time via
    rtc_time64_to_tm() which results in this error log with seemingly
    garbage values:
    
    "rtc rtc0: invalid alarm value: -2-1--1041528741
    2005511117:71582844:32"
    
    This error was generated when the rtc driver (rtc-opal in this case)
    returned an alarm time-stamp of '00-00-00 00:00:00' to indicate that
    the alarm is disabled. Though I have submitted a separate fix for the
    rtc-opal driver, this issue may potentially impact other
    existing/future rtc drivers.
    
    To fix this issue the patch validates the alarm time-stamp just after
    filling up the missing datetime components and if rtc_valid_tm() still
    reports it to be invalid then bails out of the function without
    handling the rollover.
    
    Reported-by: Steve Best <sbest@redhat.com>
    Signed-off-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae9940a9de794495b04fe13a5e10c8a841ca5091
Author: Will Deacon <will@kernel.org>
Date:   Wed Apr 5 11:14:05 2017 +0100

    arm64: futex: Fix undefined behaviour with FUTEX_OP_OPARG_SHIFT usage
    
    
    [ Upstream commit 5f16a046f8e144c294ef98cd29d9458b5f8273e5 ]
    
    FUTEX_OP_OPARG_SHIFT instructs the futex code to treat the 12-bit oparg
    field as a shift value, potentially leading to a left shift value that
    is negative or with an absolute value that is significantly larger then
    the size of the type. UBSAN chokes with:
    
    ================================================================================
    UBSAN: Undefined behaviour in ./arch/arm64/include/asm/futex.h:60:13
    shift exponent -1 is negative
    CPU: 1 PID: 1449 Comm: syz-executor0 Not tainted 4.11.0-rc4-00005-g977eb52-dirty #11
    Hardware name: linux,dummy-virt (DT)
    Call trace:
    [<ffff200008094778>] dump_backtrace+0x0/0x538 arch/arm64/kernel/traps.c:73
    [<ffff200008094cd0>] show_stack+0x20/0x30 arch/arm64/kernel/traps.c:228
    [<ffff200008c194a8>] __dump_stack lib/dump_stack.c:16 [inline]
    [<ffff200008c194a8>] dump_stack+0x120/0x188 lib/dump_stack.c:52
    [<ffff200008cc24b8>] ubsan_epilogue+0x18/0x98 lib/ubsan.c:164
    [<ffff200008cc3098>] __ubsan_handle_shift_out_of_bounds+0x250/0x294 lib/ubsan.c:421
    [<ffff20000832002c>] futex_atomic_op_inuser arch/arm64/include/asm/futex.h:60 [inline]
    [<ffff20000832002c>] futex_wake_op kernel/futex.c:1489 [inline]
    [<ffff20000832002c>] do_futex+0x137c/0x1740 kernel/futex.c:3231
    [<ffff200008320504>] SYSC_futex kernel/futex.c:3281 [inline]
    [<ffff200008320504>] SyS_futex+0x114/0x268 kernel/futex.c:3249
    [<ffff200008084770>] el0_svc_naked+0x24/0x28
    ================================================================================
    syz-executor1 uses obsolete (PF_INET,SOCK_PACKET)
    sock: process `syz-executor0' is using obsolete setsockopt SO_BSDCOMPAT
    
    This patch attempts to fix some of this by:
    
      * Making encoded_op an unsigned type, so we can shift it left even if
        the top bit is set.
    
      * Casting to signed prior to shifting right when extracting oparg
        and cmparg
    
      * Consider only the bottom 5 bits of oparg when using it as a left-shift
        value.
    
    Whilst I think this catches all of the issues, I'd much prefer to remove
    this stuff, as I think it's unused and the bugs are copy-pasted between
    a bunch of architectures.
    
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1afb2e8c6db476970ea0370bc5613e3bcbc73382
Author: Ivan Mikhaylov <ivan@de.ibm.com>
Date:   Fri May 19 18:47:05 2017 +0300

    powerpc/[booke|4xx]: Don't clobber TCR[WP] when setting TCR[DIE]
    
    
    [ Upstream commit 6e2f03e292ef46eed2b31b0a344a91d514f9cd81 ]
    
    Prevent a kernel panic caused by unintentionally clearing TCR watchdog
    bits. At this point in the kernel boot, the watchdog may have already
    been enabled by u-boot. The original code's attempt to write to the TCR
    register results in an inadvertent clearing of the watchdog
    configuration bits, causing the 476 to reset.
    
    Signed-off-by: Ivan Mikhaylov <ivan@de.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bcc9b4b3a0a0fcf269558db8bc54cc9586f585f
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon May 29 15:15:27 2017 +0200

    ovl: filter trusted xattr for non-admin
    
    
    [ Upstream commit a082c6f680da298cf075886ff032f32ccb7c5e1a ]
    
    Filesystems filter out extended attributes in the "trusted." domain for
    unprivlieged callers.
    
    Overlay calls underlying filesystem's method with elevated privs, so need
    to do the filtering in overlayfs too.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a9936458980e73306980539949a7d700eb700c1
Author: Firo Yang <firogm@gmail.com>
Date:   Fri May 26 22:37:38 2017 +0800

    hdlcdrv: Fix divide by zero in hdlcdrv_ioctl
    
    
    [ Upstream commit fb3ce90b7d7761b6f7f28f0ff5c456ef6b5229a1 ]
    
    syszkaller fuzzer triggered a divide by zero, when set calibration
    through ioctl().
    
    To fix it, test 'bitrate' if it is negative or 0, just return -EINVAL.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Firo Yang <firogm@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e62c857c50b8a40d081ba19f3afbce6be1c631c7
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Dec 26 17:33:18 2017 +0000

    wl1251: check return from call to wl1251_acx_arp_ip_filter
    
    
    [ Upstream commit ac1181c60822292176ab96912208ec9f9819faf8 ]
    
    Currently the less than zero error check on ret is incorrect
    as it is checking a far earlier ret assignment rather than the
    return from the call to wl1251_acx_arp_ip_filter. Fix this by
    adding in the missing assginment.
    
    Detected by CoverityScan, CID#1164835 ("Logically dead code")
    
    Fixes: 204cc5c44fb6 ("wl1251: implement hardware ARP filtering")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b94c1767cb6985edc2b1c275e2edf6c6d76c4353
Author: Pieter \"PoroCYon\" Sluys <pcy@national.shitposting.agency>
Date:   Thu Jan 4 16:53:50 2018 +0100

    vfb: fix video mode and line_length being set when loaded
    
    
    [ Upstream commit 7b9faf5df0ac495a1a3d7cdb64921c179f9008ac ]
    
    Currently, when loading the vfb module, the newly created fbdev
    has a line_length of 0, and its video mode would be PSEUDOCOLOR
    regardless of color depth. (The former could be worked around by
    calling the FBIOPUT_VSCREENINFO ioctl with having the FBACTIVIATE_FORCE
    flag set.) This patch automatically sets the line_length correctly,
    and the video mode is derived from the bit depth now as well.
    
    Thanks to Geert Uytterhoeven for confirming the bug and helping me with
    the patch.
    
    Output of `fbset -i' before the patch:
    mode "1366x768-60"
        # D: 72.432 MHz, H: 47.403 kHz, V: 60.004 Hz
        geometry 1366 768 1366 768 32
        timings 13806 120 10 14 3 32 5
        rgba 8/0,8/8,8/16,8/24
    endmode
    
    Frame buffer device information:
        Name        : Virtual FB
        Address     : 0xffffaa1405d85000
        Size        : 4196352
        Type        : PACKED PIXELS
        Visual      : PSEUDOCOLOR
        XPanStep    : 1
        YPanStep    : 1
        YWrapStep   : 1
        LineLength  : 0                    <-- note this
        Accelerator : No
    
    After:
    mode "1366x768-60"
        # D: 72.432 MHz, H: 47.403 kHz, V: 60.004 Hz
        geometry 1366 768 1366 768 32
        timings 13806 120 10 14 3 32 5
        rgba 8/0,8/8,8/16,8/24
    endmode
    
    Frame buffer device information:
        Name        : Virtual FB
        Address     : 0xffffaa1405d85000
        Size        : 4196352
        Type        : PACKED PIXELS
        Visual      : TRUECOLOR
        XPanStep    : 1
        YPanStep    : 1
        YWrapStep   : 1
        LineLength  : 5464
        Accelerator : No
    
    Signed-off-by: "Pieter \"PoroCYon\" Sluys" <pcy@national.shitposting.agency>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    [b.zolnierkie: minor fixups]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccfa1529fec6142964685b4cc683a4bfb17609fd
Author: Rafael David Tinoco <rafael.tinoco@canonical.com>
Date:   Thu Dec 7 19:59:13 2017 -0200

    scsi: libiscsi: Allow sd_shutdown on bad transport
    
    
    [ Upstream commit d754941225a7dbc61f6dd2173fa9498049f9a7ee ]
    
    If, for any reason, userland shuts down iscsi transport interfaces
    before proper logouts - like when logging in to LUNs manually, without
    logging out on server shutdown, or when automated scripts can't
    umount/logout from logged LUNs - kernel will hang forever on its
    sd_sync_cache() logic, after issuing the SYNCHRONIZE_CACHE cmd to all
    still existent paths.
    
    PID: 1 TASK: ffff8801a69b8000 CPU: 1 COMMAND: "systemd-shutdow"
     #0 [ffff8801a69c3a30] __schedule at ffffffff8183e9ee
     #1 [ffff8801a69c3a80] schedule at ffffffff8183f0d5
     #2 [ffff8801a69c3a98] schedule_timeout at ffffffff81842199
     #3 [ffff8801a69c3b40] io_schedule_timeout at ffffffff8183e604
     #4 [ffff8801a69c3b70] wait_for_completion_io_timeout at ffffffff8183fc6c
     #5 [ffff8801a69c3bd0] blk_execute_rq at ffffffff813cfe10
     #6 [ffff8801a69c3c88] scsi_execute at ffffffff815c3fc7
     #7 [ffff8801a69c3cc8] scsi_execute_req_flags at ffffffff815c60fe
     #8 [ffff8801a69c3d30] sd_sync_cache at ffffffff815d37d7
     #9 [ffff8801a69c3da8] sd_shutdown at ffffffff815d3c3c
    
    This happens because iscsi_eh_cmd_timed_out(), the transport layer
    timeout helper, would tell the queue timeout function (scsi_times_out)
    to reset the request timer over and over, until the session state is
    back to logged in state. Unfortunately, during server shutdown, this
    might never happen again.
    
    Other option would be "not to handle" the issue in the transport
    layer. That would trigger the error handler logic, which would also need
    the session state to be logged in again.
    
    Best option, for such case, is to tell upper layers that the command was
    handled during the transport layer error handler helper, marking it as
    DID_NO_CONNECT, which will allow completion and inform about the
    problem.
    
    After the session was marked as ISCSI_STATE_FAILED, due to the first
    timeout during the server shutdown phase, all subsequent cmds will fail
    to be queued, allowing upper logic to fail faster.
    
    Signed-off-by: Rafael David Tinoco <rafael.tinoco@canonical.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e60a32a14dfe08aabf3fba68a30f1ddb2e4b6f10
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Dec 22 15:10:17 2017 +0100

    l2tp: fix missing print session offset info
    
    
    [ Upstream commit 820da5357572715c6235ba3b3daa2d5b43a1198f ]
    
    Report offset parameter in L2TP_CMD_SESSION_GET command if
    it has been configured by userspace
    
    Fixes: 309795f4bec ("l2tp: Add netlink control API for L2TP")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd595a85c71a872fe1c001e079b8b3fd7f3846cd
Author: linzhang <xiaolou4617@gmail.com>
Date:   Thu May 25 14:07:18 2017 +0800

    net: llc: add lock_sock in llc_ui_bind to avoid a race condition
    
    
    [ Upstream commit 0908cf4dfef35fc6ac12329007052ebe93ff1081 ]
    
    There is a race condition in llc_ui_bind if two or more processes/threads
    try to bind a same socket.
    
    If more processes/threads bind a same socket success that will lead to
    two problems, one is this action is not what we expected, another is
    will lead to kernel in unstable status or oops(in my simple test case,
    cause llc2.ko can't unload).
    
    The current code is test SOCK_ZAPPED bit to avoid a process to
    bind a same socket twice but that is can't avoid more processes/threads
    try to bind a same socket at the same time.
    
    So, add lock_sock in llc_ui_bind like others, such as llc_ui_connect.
    
    Signed-off-by: Lin Zhang <xiaolou4617@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 865b856edf0668ceb9d5bff116b591da1dc0d3fd
Author: Jan H. Schönherr <jschoenh@amazon.de>
Date:   Sat May 20 13:22:56 2017 +0200

    KVM: nVMX: Fix handling of lmsw instruction
    
    
    [ Upstream commit e1d39b17e044e8ae819827810d87d809ba5f58c0 ]
    
    The decision whether or not to exit from L2 to L1 on an lmsw instruction is
    based on bogus values: instead of using the information encoded within the
    exit qualification, it uses the data also used for the mov-to-cr
    instruction, which boils down to using whatever is in %eax at that point.
    
    Use the correct values instead.
    
    Without this fix, an L1 may not get notified when a 32-bit Linux L2
    switches its secondary CPUs to protected mode; the L1 is only notified on
    the next modification of CR0. This short time window poses a problem, when
    there is some other reason to exit to L1 in between. Then, L2 will be
    resumed in real mode and chaos ensues.
    
    Signed-off-by: Jan H. Schönherr <jschoenh@amazon.de>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9776027b451f34d0d92a549fbe31f05f088f86fc
Author: Nithin Sujir <nsujir@tintri.com>
Date:   Wed May 24 19:45:17 2017 -0700

    bonding: Don't update slave->link until ready to commit
    
    
    [ Upstream commit 797a93647a48d6cb8a20641a86a71713a947f786 ]
    
    In the loadbalance arp monitoring scheme, when a slave link change is
    detected, the slave->link is immediately updated and slave_state_changed
    is set. Later down the function, the rtnl_lock is acquired and the
    changes are committed, updating the bond link state.
    
    However, the acquisition of the rtnl_lock can fail. The next time the
    monitor runs, since slave->link is already updated, it determines that
    link is unchanged. This results in the bond link state permanently out
    of sync with the slave link.
    
    This patch modifies bond_loadbalance_arp_mon() to handle link changes
    identical to bond_ab_arp_{inspect/commit}(). The new link state is
    maintained in slave->new_link until we're ready to commit at which point
    it's copied into slave->link.
    
    NOTE: miimon_{inspect/commit}() has a more complex state machine
    requiring the use of the bond_{propose,commit}_link_state() functions
    which maintains the intermediate state in slave->link_new_state. The arp
    monitors don't require that.
    
    Testing: This bug is very easy to reproduce with the following steps.
    1. In a loop, toggle a slave link of a bond slave interface.
    2. In a separate loop, do ifconfig up/down of an unrelated interface to
    create contention for rtnl_lock.
    Within a few iterations, the bond link goes out of sync with the slave
    link.
    
    Signed-off-by: Nithin Nayak Sujir <nsujir@tintri.com>
    Cc: Mahesh Bandewar <maheshb@google.com>
    Cc: Jay Vosburgh <jay.vosburgh@canonical.com>
    Acked-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b80f8b7d3e76688f33fa48d0fb1c84b07a9a0641
Author: Roman Kapl <roman.kapl@sysgo.com>
Date:   Wed May 24 10:22:22 2017 +0200

    net: move somaxconn init from sysctl code
    
    
    [ Upstream commit 7c3f1875c66fbc19762760097cabc91849ea0bbb ]
    
    The default value for somaxconn is set in sysctl_core_net_init(), but this
    function is not called when kernel is configured without CONFIG_SYSCTL.
    
    This results in the kernel not being able to accept TCP connections,
    because the backlog has zero size. Usually, the user ends up with:
    "TCP: request_sock_TCP: Possible SYN flooding on port 7. Dropping request.  Check SNMP counters."
    If SYN cookies are not enabled the connection is rejected.
    
    Before ef547f2ac16 (tcp: remove max_qlen_log), the effects were less
    severe, because the backlog was always at least eight slots long.
    
    Signed-off-by: Roman Kapl <roman.kapl@sysgo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c14ecf3e6ec376ae50f4bcfec7aa60ed8bdb9e3
Author: Eryu Guan <eguan@redhat.com>
Date:   Wed May 24 18:02:20 2017 -0400

    ext4: fix off-by-one on max nr_pages in ext4_find_unwritten_pgoff()
    
    
    [ Upstream commit 624327f8794704c5066b11a52f9da6a09dce7f9a ]
    
    ext4_find_unwritten_pgoff() is used to search for offset of hole or
    data in page range [index, end] (both inclusive), and the max number
    of pages to search should be at least one, if end == index.
    Otherwise the only page is missed and no hole or data is found,
    which is not correct.
    
    When block size is smaller than page size, this can be demonstrated
    by preallocating a file with size smaller than page size and writing
    data to the last block. E.g. run this xfs_io command on a 1k block
    size ext4 on x86_64 host.
    
      # xfs_io -fc "falloc 0 3k" -c "pwrite 2k 1k" \
                -c "seek -d 0" /mnt/ext4/testfile
      wrote 1024/1024 bytes at offset 2048
      1 KiB, 1 ops; 0.0000 sec (42.459 MiB/sec and 43478.2609 ops/sec)
      Whence  Result
      DATA    EOF
    
    Data at offset 2k was missed, and lseek(2) returned ENXIO.
    
    This is unconvered by generic/285 subtest 07 and 08 on ppc64 host,
    where pagesize is 64k. Because a recent change to generic/285
    reduced the preallocated file size to smaller than 64k.
    
    Signed-off-by: Eryu Guan <eguan@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3d9fa5e0499faf0f31b6555aa2fe9d52d1123ad
Author: Michael Schmitz <schmitzmic@gmail.com>
Date:   Sun Apr 30 19:49:21 2017 +1200

    fix race in drivers/char/random.c:get_reg()
    
    
    [ Upstream commit 9dfa7bba35ac08a63565d58c454dccb7e1bb0a08 ]
    
    get_reg() can be reentered on architectures with prioritized interrupts
    (m68k in this case), causing f->reg_index to be incremented after the
    range check. Out of bounds memory access past the pt_regs struct results.
    This will go mostly undetected unless access is beyond end of memory.
    
    Prevent the race by disabling interrupts in get_reg().
    
    Tested on m68k (Atari Falcon, and ARAnyM emulator).
    
    Kudos to Geert Uytterhoeven for helping to trace this race.
    
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aef4c08f785c0764d5302b88e9385146519bfc15
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Wed May 24 14:09:44 2017 +0200

    scsi: bnx2fc: fix race condition in bnx2fc_get_host_stats()
    
    
    [ Upstream commit c2dd893a3b0772d1c680e109b9d5715d7f73022b ]
    
    If multiple tasks attempt to read the stats, it may happen that the
    start_req_done completion is re-initialized while still being used by
    another task, causing a list corruption.
    
    This patch fixes the bug by adding a mutex to serialize the calls to
    bnx2fc_get_host_stats().
    
    WARNING: at lib/list_debug.c:48 list_del+0x6e/0xa0() (Not tainted)
    Hardware name: PowerEdge R820
    list_del corruption. prev->next should be ffff882035627d90, but was ffff884069541588
    
    Pid: 40267, comm: perl Not tainted 2.6.32-642.3.1.el6.x86_64 #1
    Call Trace:
     [<ffffffff8107c691>] ? warn_slowpath_common+0x91/0xe0
     [<ffffffff8107c796>] ? warn_slowpath_fmt+0x46/0x60
     [<ffffffff812ad16e>] ? list_del+0x6e/0xa0
     [<ffffffff81547eed>] ? wait_for_common+0x14d/0x180
     [<ffffffff8106c4a0>] ? default_wake_function+0x0/0x20
     [<ffffffff81547fd3>] ? wait_for_completion_timeout+0x13/0x20
     [<ffffffffa05410b1>] ? bnx2fc_get_host_stats+0xa1/0x280 [bnx2fc]
     [<ffffffffa04cf630>] ? fc_stat_show+0x90/0xc0 [scsi_transport_fc]
     [<ffffffffa04cf8b6>] ? show_fcstat_tx_frames+0x16/0x20 [scsi_transport_fc]
     [<ffffffff8137c647>] ? dev_attr_show+0x27/0x50
     [<ffffffff8113b9be>] ? __get_free_pages+0xe/0x50
     [<ffffffff812170e1>] ? sysfs_read_file+0x111/0x200
     [<ffffffff8119a305>] ? vfs_read+0xb5/0x1a0
     [<ffffffff8119b0b6>] ? fget_light_pos+0x16/0x50
     [<ffffffff8119a651>] ? sys_read+0x51/0xb0
     [<ffffffff810ee1fe>] ? __audit_syscall_exit+0x25e/0x290
     [<ffffffff8100b0d2>] ? system_call_fastpath+0x16/0x1b
    
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Acked-by: Chad Dupuis <chad.dupuis@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 295042b880ced189cb2b9659652677ee088640a2
Author: Liping Zhang <zlpnobody@gmail.com>
Date:   Sun May 21 07:22:49 2017 +0800

    netfilter: ctnetlink: fix incorrect nf_ct_put during hash resize
    
    
    [ Upstream commit fefa92679dbe0c613e62b6c27235dcfbe9640ad1 ]
    
    If nf_conntrack_htable_size was adjusted by the user during the ct
    dump operation, we may invoke nf_ct_put twice for the same ct, i.e.
    the "last" ct. This will cause the ct will be freed but still linked
    in hash buckets.
    
    It's very easy to reproduce the problem by the following commands:
      # while : ; do
      echo $RANDOM > /proc/sys/net/netfilter/nf_conntrack_buckets
      done
      # while : ; do
      conntrack -L
      done
      # iperf -s 127.0.0.1 &
      # iperf -c 127.0.0.1 -P 60 -t 36000
    
    After a while, the system will hang like this:
      NMI watchdog: BUG: soft lockup - CPU#1 stuck for 22s! [bash:20184]
      NMI watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [iperf:20382]
      ...
    
    So at last if we find cb->args[1] is equal to "last", this means hash
    resize happened, then we can set cb->args[1] to 0 to fix the above
    issue.
    
    Fixes: d205dc40798d ("[NETFILTER]: ctnetlink: fix deadlock in table dumping")
    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5ca1641274a023a34a4e3b022b68c0728c41bd0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 23 17:25:10 2017 +0300

    libceph: NULL deref on crush_decode() error path
    
    
    [ Upstream commit 293dffaad8d500e1a5336eeb90d544cf40d4fbd8 ]
    
    If there is not enough space then ceph_decode_32_safe() does a goto bad.
    We need to return an error code in that situation.  The current code
    returns ERR_PTR(0) which is NULL.  The callers are not expecting that
    and it results in a NULL dereference.
    
    Fixes: f24e9980eb86 ("ceph: OSD client")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42469a9e2b152094ffabf3a9d534e4e24036cf9d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 23 17:28:36 2017 +0300

    block: fix an error code in add_partition()
    
    
    [ Upstream commit 7bd897cfce1eb373892d35d7f73201b0f9b221c4 ]
    
    We don't set an error code on this path.  It means that we return NULL
    instead of an error pointer and the caller does a NULL dereference.
    
    Fixes: 6d1d8050b4bc ("block, partition: add partition_meta_info to hd_struct")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be622831649a4223be0d3da88403b6774ab354f0
Author: Tin Huynh <tnhuynh@apm.com>
Date:   Mon May 22 16:19:20 2017 +0700

    leds: pca955x: Correct I2C Functionality
    
    
    [ Upstream commit aace34c0bb8ea3c8bdcec865b6a4be4db0a68e33 ]
    
    The driver checks an incorrect flag of functionality of adapter.
    When a driver requires i2c_smbus_read_byte_data and
    i2c_smbus_write_byte_data, it should check I2C_FUNC_SMBUS_BYTE_DATA
    instead I2C_FUNC_I2C.
    This patch fixes the problem.
    
    Signed-off-by: Tin Huynh <tnhuynh@apm.com>
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1219bf3c78af8916269def7e4890ad9ca59a8ae
Author: Kees Cook <keescook@chromium.org>
Date:   Fri May 5 15:38:41 2017 -0700

    ray_cs: Avoid reading past end of buffer
    
    
    [ Upstream commit e48d661eb13f2f83861428f001c567fdb3f317e8 ]
    
    Using memcpy() from a buffer that is shorter than the length copied means
    the destination buffer is being filled with arbitrary data from the kernel
    rodata segment. In this case, the source was made longer, since it did not
    match the destination structure size. Additionally removes a needless cast.
    
    This was found with the future CONFIG_FORTIFY_SOURCE feature.
    
    Cc: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 933eb53dd1e1f10c398e307e73d2f507c9737726
Author: Suman Anna <s-anna@ti.com>
Date:   Tue May 16 17:13:45 2017 -0500

    ARM: davinci: da8xx: Create DSP device only when assigned memory
    
    
    [ Upstream commit f97f03578b997a8ec2b9bc4928f958a865137268 ]
    
    The DSP device on Davinci platforms does not have an MMU and requires
    specific DDR memory to boot. This memory is reserved using the rproc_mem
    kernel boot parameter and is assigned to the device on non-DT boots.
    The remoteproc core uses the DMA API and so will fall back to assigning
    random memory if this memory is not assigned to the device, but the DSP
    remote processor boot will not be successful in such cases. So, check
    that memory has been reserved and assigned to the device specifically
    before even creating the DSP device.
    
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 890c7e22e6c4fa623e9b70bf29165cf418d24a06
Author: Antony Antony <antony@phenome.org>
Date:   Fri May 19 12:47:00 2017 +0200

    xfrm: fix state migration copy replay sequence numbers
    
    
    [ Upstream commit a486cd23661c9387fb076c3f6ae8b2aa9d20d54a ]
    
    During xfrm migration copy replay and preplay sequence numbers
    from the previous state.
    
    Here is a tcpdump output showing the problem.
    10.0.10.46 is running vanilla kernel, is the IKE/IPsec responder.
    After the migration it sent wrong sequence number, reset to 1.
    The migration is from 10.0.0.52 to 10.0.0.53.
    
    IP 10.0.0.52.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7cf), length 136
    IP 10.0.10.46.4500 > 10.0.0.52.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x7cf), length 136
    IP 10.0.0.52.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7d0), length 136
    IP 10.0.10.46.4500 > 10.0.0.52.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x7d0), length 136
    
    IP 10.0.0.53.4500 > 10.0.10.46.4500: NONESP-encap: isakmp: child_sa  inf2[I]
    IP 10.0.10.46.4500 > 10.0.0.53.4500: NONESP-encap: isakmp: child_sa  inf2[R]
    IP 10.0.0.53.4500 > 10.0.10.46.4500: NONESP-encap: isakmp: child_sa  inf2[I]
    IP 10.0.10.46.4500 > 10.0.0.53.4500: NONESP-encap: isakmp: child_sa  inf2[R]
    
    IP 10.0.0.53.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7d1), length 136
    
    NOTE: next sequence is wrong 0x1
    
    IP 10.0.10.46.4500 > 10.0.0.53.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x1), length 136
    IP 10.0.0.53.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7d2), length 136
    IP 10.0.10.46.4500 > 10.0.0.53.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x2), length 136
    
    Signed-off-by: Antony Antony <antony@phenome.org>
    Reviewed-by: Richard Guy Briggs <rgb@tricolour.ca>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0b98134e5f0d292c8cb71f117a77c9a2f75b46a
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri May 19 11:29:04 2017 +1000

    selftests/powerpc: Fix TM resched DSCR test with some compilers
    
    
    [ Upstream commit fe06fe860250a4f01d0eaf70a2563b1997174a74 ]
    
    The tm-resched-dscr test has started failing sometimes, depending on
    what compiler it's built with, eg:
    
      test: tm_resched_dscr
      Check DSCR TM context switch: tm-resched-dscr: tm-resched-dscr.c:76: test_body: Assertion `rv' failed.
      !! child died by signal 6
    
    When it fails we see that the compiler doesn't initialise rv to 1 before
    entering the inline asm block. Although that's counter intuitive, it
    is allowed because we tell the compiler that the inline asm will write
    to rv (using "=r"), meaning the original value is irrelevant.
    
    Marking it as a read/write parameter would presumably work, but it seems
    simpler to fix it by setting the initial value of rv in the inline asm.
    
    Fixes: 96d016108640 ("powerpc: Correct DSCR during TM context switch")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f08a63e04c34023dd67d05774ab5faadf34400ab
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed May 3 15:26:00 2017 +0100

    ath5k: fix memory leak on buf on failed eeprom read
    
    
    [ Upstream commit 8fed6823e06e43ee9cf7c0ffecec2f9111ce6201 ]
    
    The AR5K_EEPROM_READ macro returns with -EIO if a read error
    occurs causing a memory leak on the allocated buffer buf. Fix
    this by explicitly calling ath5k_hw_nvram_read and exiting on
    the via the freebuf label that performs the necessary free'ing
    of buf when a read error occurs.
    
    Detected by CoverityScan, CID#1248782 ("Resource Leak")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14a2bd542c6f2d0182e82087f924a828d2caf7f5
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu May 18 15:01:34 2017 +0200

    sh_eth: Use platform device for printing before register_netdev()
    
    
    [ Upstream commit 5f5c5449acad0cd3322e53e1ac68c044483b0aa5 ]
    
    The MDIO initialization failure message is printed using the network
    device, before it has been registered, leading to:
    
         (null): failed to initialise MDIO
    
    Use the platform device instead to fix this:
    
        sh-eth ee700000.ethernet: failed to initialise MDIO
    
    Fixes: daacf03f0bbfefee ("sh_eth: Register MDIO bus before registering the network device")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13ab5f87781bd606daf56e9bd72fe43d080f3c4c
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue May 16 11:47:52 2017 -0400

    USB: ene_usb6250: fix SCSI residue overwriting
    
    
    [ Upstream commit aa18c4b6e0e39bfb00af48734ec24bc189ac9909 ]
    
    In the ene_usb6250 sub-driver for usb-storage, the SCSI residue is not
    reported correctly.  The residue is initialized to 0, but this value
    is overwritten whenever the driver sends firmware to the card reader
    before performing the current command.  As a result, a valid READ or
    WRITE operation appears to have failed, causing the SCSI core to retry
    the command multiple times and eventually fail.
    
    This patch fixes the problem by resetting the SCSI residue to 0 after
    sending firmware to the device.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Andreas Hartmann <andihartmann@01019freenet.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fef094bddce60cf488e814dc6e7631bdd65a8694
Author: linzhang <xiaolou4617@gmail.com>
Date:   Wed May 17 12:05:07 2017 +0800

    net: x25: fix one potential use-after-free issue
    
    
    [ Upstream commit 64df6d525fcff1630098db9238bfd2b3e092d5c1 ]
    
    The function x25_init is not properly unregister related resources
    on error handler.It is will result in kernel oops if x25_init init
    failed, so add properly unregister call on error handler.
    
    Also, i adjust the coding style and make x25_register_sysctl properly
    return failure.
    
    Signed-off-by: linzhang <xiaolou4617@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17805e4b848097e1ee4672cfbfaeb6a7bcacac5c
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue May 16 11:47:42 2017 -0400

    USB: ene_usb6250: fix first command execution
    
    
    [ Upstream commit 4b309f1c4972c8f09e03ac64fc63510dbf5591a4 ]
    
    In the ene_usb6250 sub-driver for usb-storage, the ene_transport()
    routine is supposed to initialize the driver before executing the
    current command, if the initialization has not already been performed.
    However, a bug in the routine causes it to skip the command after
    doing the initialization.  Also, the routine does not return an
    appropriate error code if either the initialization or the command
    fails.
    
    As a result of the first bug, the first command (a SCSI INQUIRY) is
    not carried out.  The results can be seen in the system log, in the
    form of a warning message and empty or garbage INQUIRY data:
    
    Apr 18 22:40:08 notebook2 kernel: scsi host6: scsi scan: INQUIRY result too short (5), using 36
    Apr 18 22:40:08 notebook2 kernel: scsi 6:0:0:0: Direct-Access                                    PQ: 0 ANSI: 0
    
    This patch fixes both errors.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Andreas Hartmann <andihartmann@01019freenet.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b87344e0d7421dc0d4680f4593841c5dabbadeb9
Author: Jisheng Zhang <jszhang@marvell.com>
Date:   Wed Apr 26 16:59:34 2017 +0800

    usb: chipidea: properly handle host or gadget initialization failure
    
    
    [ Upstream commit c4a0bbbdb7f6e3c37fa6deb3ef28c5ed99da6175 ]
    
    If ci_hdrc_host_init() or ci_hdrc_gadget_init() returns error and the
    error != -ENXIO, as Peter pointed out, "it stands for initialization
    for host or gadget has failed", so we'd better return failure rather
    continue.
    
    And before destroying the otg, i.e ci_hdrc_otg_destroy(ci), we should
    also check ci->roles[CI_ROLE_GADGET].
    
    Signed-off-by: Jisheng Zhang <jszhang@marvell.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6c2fbc0c9b921864e06d4a52383763923fa3fd6
Author: Ihar Hrachyshka <ihrachys@redhat.com>
Date:   Tue May 16 08:44:24 2017 -0700

    neighbour: update neigh timestamps iff update is effective
    
    
    [ Upstream commit 77d7123342dcf6442341b67816321d71da8b2b16 ]
    
    It's a common practice to send gratuitous ARPs after moving an
    IP address to another device to speed up healing of a service. To
    fulfill service availability constraints, the timing of network peers
    updating their caches to point to a new location of an IP address can be
    particularly important.
    
    Sometimes neigh_update calls won't touch neither lladdr nor state, for
    example if an update arrives in locktime interval. The neigh->updated
    value is tested by the protocol specific neigh code, which in turn
    will influence whether NEIGH_UPDATE_F_OVERRIDE gets set in the
    call to neigh_update() or not. As a result, we may effectively ignore
    the update request, bailing out of touching the neigh entry, except that
    we still bump its timestamps inside neigh_update.
    
    This may be a problem for updates arriving in quick succession. For
    example, consider the following scenario:
    
    A service is moved to another device with its IP address. The new device
    sends three gratuitous ARP requests into the network with ~1 seconds
    interval between them. Just before the first request arrives to one of
    network peer nodes, its neigh entry for the IP address transitions from
    STALE to DELAY.  This transition, among other things, updates
    neigh->updated. Once the kernel receives the first gratuitous ARP, it
    ignores it because its arrival time is inside the locktime interval. The
    kernel still bumps neigh->updated. Then the second gratuitous ARP
    request arrives, and it's also ignored because it's still in the (new)
    locktime interval. Same happens for the third request. The node
    eventually heals itself (after delay_first_probe_time seconds since the
    initial transition to DELAY state), but it just wasted some time and
    require a new ARP request/reply round trip. This unfortunate behaviour
    both puts more load on the network, as well as reduces service
    availability.
    
    This patch changes neigh_update so that it bumps neigh->updated (as well
    as neigh->confirmed) only once we are sure that either lladdr or entry
    state will change). In the scenario described above, it means that the
    second gratuitous ARP request will actually update the entry lladdr.
    
    Ideally, we would update the neigh entry on the very first gratuitous
    ARP request. The locktime mechanism is designed to ignore ARP updates in
    a short timeframe after a previous ARP update was honoured by the kernel
    layer. This would require tracking timestamps for state transitions
    separately from timestamps when actual updates are received. This would
    probably involve changes in neighbour struct. Therefore, the patch
    doesn't tackle the issue of the first gratuitous APR ignored, leaving
    it for a follow-up.
    
    Signed-off-by: Ihar Hrachyshka <ihrachys@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fef9e917dd4cd44bd306012a7ea2207d84cc648
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue May 16 14:06:12 2017 +0200

    ata: libahci: properly propagate return value of platform_get_irq()
    
    
    [ Upstream commit c034640a32f8456018d9c8c83799ead683046b95 ]
    
    When platform_get_irq() fails, it returns an error code, which
    libahci_platform and replaces it by -EINVAL. This commit fixes that by
    propagating the error code. It fixes the situation where
    platform_get_irq() returns -EPROBE_DEFER because the interrupt
    controller is not available yet, and generally looks like the right
    thing to do.
    
    We pay attention to not show the "no irq" message when we are in an
    EPROBE_DEFER situation, because the driver probing will be retried
    later on, once the interrupt controller becomes available to provide
    the interrupt.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52cf1b621a018f2055ae6f098d019bffee40456b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue May 9 18:14:01 2017 +0100

    btrfs: fix incorrect error return ret being passed to mapping_set_error
    
    
    [ Upstream commit bff5baf8aa37a97293725a16c03f49872249c07e ]
    
    The setting of return code ret should be based on the error code
    passed into function end_extent_writepage and not on ret. Thanks
    to Liu Bo for spotting this mistake in the original fix I submitted.
    
    Detected by CoverityScan, CID#1414312 ("Logically dead code")
    
    Fixes: 5dca6eea91653e ("Btrfs: mark mapping with error flag to report errors to userspace")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c27acc195bd34521183a386c50748e6ddd42932
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Apr 23 13:55:13 2017 +0800

    usb: dwc3: keystone: check return value
    
    
    [ Upstream commit 018047a1dba7636e1f7fdae2cc290a528991d648 ]
    
    Function devm_clk_get() returns an ERR_PTR when it fails. However, in
    function kdwc3_probe(), its return value is not checked, which may
    result in a bad memory access bug. This patch fixes the bug.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dae5083681beccf24d3d7e5bc2ea319730e882f5
Author: Anup Patel <anup.patel@broadcom.com>
Date:   Mon May 15 10:34:53 2017 +0530

    async_tx: Fix DMA_PREP_FENCE usage in do_async_gen_syndrome()
    
    
    [ Upstream commit baae03a0e2497f49704628fd0aaf993cf98e1b99 ]
    
    The DMA_PREP_FENCE is to be used when preparing Tx descriptor if output
    of Tx descriptor is to be used by next/dependent Tx descriptor.
    
    The DMA_PREP_FENSE will not be set correctly in do_async_gen_syndrome()
    when calling dma->device_prep_dma_pq() under following conditions:
    1. ASYNC_TX_FENCE not set in submit->flags
    2. DMA_PREP_FENCE not set in dma_flags
    3. src_cnt (= (disks - 2)) is greater than dma_maxpq(dma, dma_flags)
    
    This patch fixes DMA_PREP_FENCE usage in do_async_gen_syndrome() taking
    inspiration from do_async_xor() implementation.
    
    Signed-off-by: Anup Patel <anup.patel@broadcom.com>
    Reviewed-by: Ray Jui <ray.jui@broadcom.com>
    Reviewed-by: Scott Branden <scott.branden@broadcom.com>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 678b1730848c3493599e76642128d96149a0d046
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Fri May 12 17:03:39 2017 -0700

    ipv6: avoid dad-failures for addresses with NODAD
    
    
    [ Upstream commit 66eb9f86e50547ec2a8ff7a75997066a74ef584b ]
    
    Every address gets added with TENTATIVE flag even for the addresses with
    IFA_F_NODAD flag and dad-work is scheduled for them. During this DAD process
    we realize it's an address with NODAD and complete the process without
    sending any probe. However the TENTATIVE flags stays on the
    address for sometime enough to cause misinterpretation when we receive a NS.
    While processing NS, if the address has TENTATIVE flag, we mark it DADFAILED
    and endup with an address that was originally configured as NODAD with
    DADFAILED.
    
    We can't avoid scheduling dad_work for addresses with NODAD but we can
    avoid adding TENTATIVE flag to avoid this racy situation.
    
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ebf343cbed76773563223761586fd5edcd0dc61
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Sun May 14 11:50:50 2017 -0300

    ARM: dts: imx6qdl-wandboard: Fix audio channel swap
    
    
    [ Upstream commit 79935915300c5eb88a0e94fa9148a7505c14a02a ]
    
    When running a stress playback/stop loop test on a mx6wandboard channel
    swaps can be noticed randomly.
    
    Increasing the SGTL5000 LRCLK pad strength to its maximum value fixes
    the issue, so add the 'lrclk-strength' property to avoid the audio
    channel swaps.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b88cb3a385b0d9fa013b6a7dfb85bea56fc1fa8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Apr 13 14:56:44 2017 +0200

    x86/tsc: Provide 'tsc=unstable' boot parameter
    
    
    [ Upstream commit 8309f86cd41e8714526867177facf7a316d9be53 ]
    
    Since the clocksource watchdog will only detect broken TSC after the
    fact, all TSC based clocks will likely have observed non-continuous
    values before/when switching away from TSC.
    
    Therefore only thing to fully avoid random clock movement when your
    BIOS randomly mucks with TSC values from SMI handlers is reporting the
    TSC as unstable at boot.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e4546c646c09f07c46412bbe0d4abbf45e30276
Author: Andrea della Porta <sfaragnaus@gmail.com>
Date:   Sat Apr 29 07:30:23 2017 +0100

    staging: wlan-ng: prism2mgmt.c: fixed a double endian conversion before calling hfa384x_drvr_setconfig16, also fixes relative sparse warning
    
    
    [ Upstream commit dea20579a69ab68cdca6adf79bb7c0c162eb9b72 ]
    
    staging: wlan-ng: prism2mgmt.c: This patches fixes a double endian conversion.
    cpu_to_le16() was called twice first in prism2mgmt_scan and again inside
    hfa384x_drvr_setconfig16() for the same variable, hence it was swapped
    twice. Incidentally, it also fixed the following sparse warning:
    
    drivers/staging/wlan-ng/prism2mgmt.c:173:30: warning: incorrect type in assignment (different base types)
    drivers/staging/wlan-ng/prism2mgmt.c:173:30:    expected unsigned short [unsigned] [usertype] word
    drivers/staging/wlan-ng/prism2mgmt.c:173:30:    got restricted __le16 [usertype] <noident>
    
    Unfortunately, only compile tested.
    
    Signed-off-by: Andrea della Porta <sfaragnaus@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b169fe73b2e99ccb903ea53635b47031cacd74fd
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed May 10 22:40:06 2017 +0300

    PowerCap: Fix an error code in powercap_register_zone()
    
    
    [ Upstream commit 216c4e9db4c9d1d2a382b42880442dc632cd47d9 ]
    
    In the current code we accidentally return the successful result from
    idr_alloc() instead of a negative error pointer.  The caller is looking
    for an error pointer and so it treats the returned value as a valid
    pointer.
    
    This one might be a bit serious because if it lets people get around the
    kernel's protection for remapping NULL.  I'm not sure.
    
    Fixes: 75d2364ea0ca (PowerCap: Add class driver)
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79d744974fdd3a70b7acc66fff0665fd8c7af9fa
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri May 12 17:59:32 2017 +0200

    SMB2: Fix share type handling
    
    
    [ Upstream commit cd1230070ae1c12fd34cf6a557bfa81bf9311009 ]
    
    In fs/cifs/smb2pdu.h, we have:
    #define SMB2_SHARE_TYPE_DISK    0x01
    #define SMB2_SHARE_TYPE_PIPE    0x02
    #define SMB2_SHARE_TYPE_PRINT   0x03
    
    Knowing that, with the current code, the SMB2_SHARE_TYPE_PRINT case can
    never trigger and printer share would be interpreted as disk share.
    
    So, test the ShareType value for equality instead.
    
    Fixes: faaf946a7d5b ("CIFS: Add tree connect/disconnect capability for SMB2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c73d2c037774a27a2e2e02fca949083dd627467e
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Fri May 12 12:00:01 2017 -0400

    vmxnet3: ensure that adapter is in proper state during force_close
    
    
    [ Upstream commit 1c4d5f51a812a82de97beee24f48ed05c65ebda5 ]
    
    There are several paths in vmxnet3, where settings changes cause the
    adapter to be brought down and back up (vmxnet3_set_ringparam among
    them).  Should part of the reset operation fail, these paths call
    vmxnet3_force_close, which enables all napi instances prior to calling
    dev_close (with the expectation that vmxnet3_close will then properly
    disable them again).  However, vmxnet3_force_close neglects to clear
    VMXNET3_STATE_BIT_QUIESCED prior to calling dev_close.  As a result
    vmxnet3_quiesce_dev (called from vmxnet3_close), returns early, and
    leaves all the napi instances in a enabled state while the device itself
    is closed.  If a device in this state is activated again, napi_enable
    will be called on already enabled napi_instances, leading to a BUG halt.
    
    The fix is to simply enausre that the QUIESCED bit is cleared in
    vmxnet3_force_close to allow quesence to be completed properly on close.
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Shrikrishna Khare <skhare@vmware.com>
    CC: "VMware, Inc." <pv-drivers@vmware.com>
    CC: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beca5e3439a8c220116cfde16c1ce6ea2e7c9ca3
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu May 11 11:33:30 2017 +1000

    KVM: PPC: Book3S PR: Check copy_to/from_user return values
    
    
    [ Upstream commit 67325e988faea735d663799b6d152b5f4254093c ]
    
    The PR KVM implementation of the PAPR HPT hypercalls (H_ENTER etc.)
    access an image of the HPT in userspace memory using copy_from_user
    and copy_to_user.  Recently, the declarations of those functions were
    annotated to indicate that the return value must be checked.  Since
    this code doesn't currently check the return value, this causes
    compile warnings like the ones shown below, and since on PPC the
    default is to compile arch/powerpc with -Werror, this causes the
    build to fail.
    
    To fix this, we check the return values, and if non-zero, fail the
    hypercall being processed with a H_FUNCTION error return value.
    There is really no good error return value to use since PAPR didn't
    envisage the possibility that the hypervisor may not be able to access
    the guest's HPT, and H_FUNCTION (function not supported) seems as
    good as any.
    
    The typical compile warnings look like this:
    
      CC      arch/powerpc/kvm/book3s_pr_papr.o
    /home/paulus/kernel/kvm/arch/powerpc/kvm/book3s_pr_papr.c: In function ‘kvmppc_h_pr_enter’:
    /home/paulus/kernel/kvm/arch/powerpc/kvm/book3s_pr_papr.c:53:2: error: ignoring return value of ‘copy_from_user’, declared with attribute warn_unused_result [-Werror=unused-result]
      copy_from_user(pteg, (void __user *)pteg_addr, sizeof(pteg));
      ^
    /home/paulus/kernel/kvm/arch/powerpc/kvm/book3s_pr_papr.c:74:2: error: ignoring return value of ‘copy_to_user’, declared with attribute warn_unused_result [-Werror=unused-result]
      copy_to_user((void __user *)pteg_addr, hpte, HPTE_SIZE);
      ^
    
    ... etc.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2812452ce6331c3838b2c729782bb3991df18501
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue May 9 17:19:42 2017 +0100

    netxen_nic: set rcode to the return status from the call to netxen_issue_cmd
    
    
    [ Upstream commit 0fe20fafd1791f993806d417048213ec57b81045 ]
    
    Currently rcode is being initialized to NX_RCODE_SUCCESS and later it
    is checked to see if it is not NX_RCODE_SUCCESS which is never true. It
    appears that there is an unintentional missing assignment of rcode from
    the return of the call to netxen_issue_cmd() that was dropped in
    an earlier fix, so add it in.
    
    Detected by CoverityScan, CID#401900 ("Logically dead code")
    
    Fixes: 2dcd5d95ad6b2 ("netxen_nic: fix cdrp race condition")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4db93645f63a6b000f6ef1c95761ab0df14092b7
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Tue May 9 15:40:38 2017 +0200

    net: qca_spi: Fix alignment issues in rx path
    
    
    [ Upstream commit 8d66c30b12ed3cb533696dea8b9a9eadd5da426a ]
    
    The qca_spi driver causes alignment issues on ARM devices.
    So fix this by using netdev_alloc_skb_ip_align().
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: 291ab06ecf67 ("net: qualcomm: new Ethernet over SPI driver for QCA7000")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c70c210b8361cbebf7ddb4c78b543b08164aea91
Author: Rabin Vincent <rabinv@axis.com>
Date:   Wed May 3 17:17:21 2017 +0200

    CIFS: silence lockdep splat in cifs_relock_file()
    
    
    [ Upstream commit 560d388950ceda5e7c7cdef7f3d9a8ff297bbf9d ]
    
    cifs_relock_file() can perform a down_write() on the inode's lock_sem even
    though it was already performed in cifs_strict_readv().  Lockdep complains
    about this.  AFAICS, there is no problem here, and lockdep just needs to be
    told that this nesting is OK.
    
     =============================================
     [ INFO: possible recursive locking detected ]
     4.11.0+ #20 Not tainted
     ---------------------------------------------
     cat/701 is trying to acquire lock:
      (&cifsi->lock_sem){++++.+}, at: cifs_reopen_file+0x7a7/0xc00
    
     but task is already holding lock:
      (&cifsi->lock_sem){++++.+}, at: cifs_strict_readv+0x177/0x310
    
     other info that might help us debug this:
      Possible unsafe locking scenario:
    
            CPU0
            ----
       lock(&cifsi->lock_sem);
       lock(&cifsi->lock_sem);
    
      *** DEADLOCK ***
    
      May be due to missing lock nesting notation
    
     1 lock held by cat/701:
      #0:  (&cifsi->lock_sem){++++.+}, at: cifs_strict_readv+0x177/0x310
    
     stack backtrace:
     CPU: 0 PID: 701 Comm: cat Not tainted 4.11.0+ #20
     Call Trace:
      dump_stack+0x85/0xc2
      __lock_acquire+0x17dd/0x2260
      ? trace_hardirqs_on_thunk+0x1a/0x1c
      ? preempt_schedule_irq+0x6b/0x80
      lock_acquire+0xcc/0x260
      ? lock_acquire+0xcc/0x260
      ? cifs_reopen_file+0x7a7/0xc00
      down_read+0x2d/0x70
      ? cifs_reopen_file+0x7a7/0xc00
      cifs_reopen_file+0x7a7/0xc00
      ? printk+0x43/0x4b
      cifs_readpage_worker+0x327/0x8a0
      cifs_readpage+0x8c/0x2a0
      generic_file_read_iter+0x692/0xd00
      cifs_strict_readv+0x29f/0x310
      generic_file_splice_read+0x11c/0x1c0
      do_splice_to+0xa5/0xc0
      splice_direct_to_actor+0xfa/0x350
      ? generic_pipe_buf_nosteal+0x10/0x10
      do_splice_direct+0xb5/0xe0
      do_sendfile+0x278/0x3a0
      SyS_sendfile64+0xc4/0xe0
      entry_SYSCALL_64_fastpath+0x1f/0xbe
    
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Acked-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b13441c1d55f6eb2e6bb764b6fccfda495b4a8b
Author: Talat Batheesh <talatb@mellanox.com>
Date:   Tue May 9 14:45:23 2017 +0300

    net/mlx4_en: Avoid adding steering rules with invalid ring
    
    
    [ Upstream commit 89c557687a32c294e9d25670a96e9287c09f2d5f ]
    
    Inserting steering rules with illegal ring is an invalid operation,
    block it.
    
    Fixes: 820672812f82 ('net/mlx4_en: Manage flow steering rules with ethtool')
    Signed-off-by: Talat Batheesh <talatb@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66f0db50935d844d9c531484f103f89659374ef4
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu May 4 09:42:22 2017 +0200

    s390: move _text symbol to address higher than zero
    
    
    [ Upstream commit d04a4c76f71dd5335f8e499b59617382d84e2b8d ]
    
    The perf tool assumes that kernel symbols are never present at address
    zero. In fact it assumes if functions that map symbols to addresses
    return zero, that the symbol was not found.
    
    Given that s390's _text symbol historically is located at address zero
    this yields at least a couple of false errors and warnings in one of
    perf's test cases about not present symbols ("perf test 1").
    
    To fix this simply move the _text symbol to address 0x200, just behind
    the initial psw and channel program located at the beginning of the
    kernel image. This is now hard coded within the linker script.
    
    I tried a nicer solution which moves the initial psw and channel
    program into an own section. However that would move the symbols
    within the "real" head.text section to different addresses, since the
    ".org" statements within head.S are relative to the head.text
    section. If there is a new section in front, everything else will be
    moved. Alternatively I could have adjusted all ".org" statements. But
    this current solution seems to be the easiest one, since nobody really
    cares where the _text symbol is actually located.
    
    Reported-by: Zvonko Kosic <zkosic@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1625ef6eba1f95698b675f9120eeca67c5581e00
Author: Kirill Tkhai <ktkhai@virtuozzo.com>
Date:   Mon May 8 15:56:34 2017 -0700

    pidns: disable pid allocation if pid_ns_prepare_proc() is failed in alloc_pid()
    
    
    [ Upstream commit 8896c23d2ef803f1883fea73117a435925c2b4c4 ]
    
    alloc_pidmap() advances pid_namespace::last_pid.  When first pid
    allocation fails, then next created process will have pid 2 and
    pid_ns_prepare_proc() won't be called.  So, pid_namespace::proc_mnt will
    never be initialized (not to mention that there won't be a child
    reaper).
    
    I saw crash stack of such case on kernel 3.10:
    
        BUG: unable to handle kernel NULL pointer dereference at (null)
        IP: proc_flush_task+0x8f/0x1b0
        Call Trace:
            release_task+0x3f/0x490
            wait_consider_task.part.10+0x7ff/0xb00
            do_wait+0x11f/0x280
            SyS_wait4+0x7d/0x110
    
    We may fix this by restore of last_pid in 0 or by prohibiting of futher
    allocations.  Since there was a similar issue in Oleg Nesterov's commit
    314a8ad0f18a ("pidns: fix free_pid() to handle the first fork failure").
    and it was fixed via prohibiting allocation, let's follow this way, and
    do the same.
    
    Link: http://lkml.kernel.org/r/149201021004.4863.6762095011554287922.stgit@localhost.localdomain
    Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Andrei Vagin <avagin@virtuozzo.com>
    Cc: Andreas Gruenbacher <agruenba@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Michael Kerrisk <mtk.manpages@googlemail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Paul Moore <paul@paul-moore.com>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Serge Hallyn <serge@hallyn.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bb16f97201a0a9f68573a2223460424f4b8a8e5
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Mar 28 21:25:08 2017 -0400

    lockd: fix lockd shutdown race
    
    
    [ Upstream commit efda760fe95ea15291853c8fa9235c32d319cd98 ]
    
    As reported by David Jeffery: "a signal was sent to lockd while lockd
    was shutting down from a request to stop nfs.  The signal causes lockd
    to call restart_grace() which puts the lockd_net structure on the grace
    list.  If this signal is received at the wrong time, it will occur after
    lockd_down_net() has called locks_end_grace() but before
    lockd_down_net() stops the lockd thread.  This leads to lockd putting
    the lockd_net structure back on the grace list, then exiting without
    anything removing it from the list."
    
    So, perform the final locks_end_grace() from the the lockd thread; this
    ensures it's serialized with respect to restart_grace().
    
    Reported-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a9afaaac6e5353b1643bed44f2dcc476c2f3431
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Mon May 8 14:21:21 2017 -0500

    net: ethernet: ti: cpsw: adjust cpsw fifos depth for fullduplex flow control
    
    
    [ Upstream commit 48f5bccc60675f8426a6159935e8636a1fd89f56 ]
    
    When users set flow control using ethtool the bits are set properly in the
    CPGMAC_SL MACCONTROL register, but the FIFO depth in the respective Port n
    Maximum FIFO Blocks (Pn_MAX_BLKS) registers remains set to the minimum size
    reset value. When receive flow control is enabled on a port, the port's
    associated FIFO block allocation must be adjusted. The port RX allocation
    must increase to accommodate the flow control runout. The TRM recommends
    numbers of 5 or 6.
    
    Hence, apply required Port FIFO configuration to
    Pn_MAX_BLKS.Pn_TX_MAX_BLKS=0xF and Pn_MAX_BLKS.Pn_RX_MAX_BLKS=0x5 during
    interface initialization.
    
    Cc: Schuyler Patton <spatton@ti.com>
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b002c74c40dfe77d481a37c7c0a9a972a5c1089
Author: Kees Cook <keescook@chromium.org>
Date:   Fri May 5 15:34:34 2017 -0700

    qlge: Avoid reading past end of buffer
    
    
    [ Upstream commit df5303a8aa9a0a6934f4cea7427f1edf771f21c2 ]
    
    Using memcpy() from a string that is shorter than the length copied means
    the destination buffer is being filled with arbitrary data from the kernel
    rodata segment. Instead, use strncpy() which will fill the trailing bytes
    with zeros.
    
    This was found with the future CONFIG_FORTIFY_SOURCE feature.
    
    Cc: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8f828fb92fc92d43b3d48a997fe5466d3d535fa
Author: Kees Cook <keescook@chromium.org>
Date:   Fri May 5 15:25:32 2017 -0700

    bna: Avoid reading past end of buffer
    
    
    [ Upstream commit 9e4eb1ce472fbf7b007f23c88ec11c37265e401c ]
    
    Using memcpy() from a string that is shorter than the length copied means
    the destination buffer is being filled with arbitrary data from the kernel
    rodata segment. Instead, use strncpy() which will fill the trailing bytes
    with zeros.
    
    This was found with the future CONFIG_FORTIFY_SOURCE feature.
    
    Cc: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3b0df34dd5eeab163f696e583ddbb9be5e887d5
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Tue May 2 17:56:21 2017 +0300

    mac80211: bail out from prep_connection() if a reconfig is ongoing
    
    
    [ Upstream commit f8860ce836f2d502b07ef99559707fe55d90f5bc ]
    
    If ieee80211_hw_restart() is called during authentication, the
    authentication process will continue, causing the driver to be called
    in a wrong state.  This ultimately causes an oops in the iwlwifi
    driver (at least).
    
    This fixes bugzilla 195299 partly.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=195299
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc705996bb341187df2bbcbf1b6c2c1cf330ef40
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Fri May 5 07:40:42 2017 +0200

    af_key: Fix slab-out-of-bounds in pfkey_compile_policy.
    
    
    [ Upstream commit d90c902449a7561f1b1d58ba5a0d11728ce8b0b2 ]
    
    The sadb_x_sec_len is stored in the unit 'byte divided by eight'.
    So we have to multiply this value by eight before we can do
    size checks. Otherwise we may get a slab-out-of-bounds when
    we memcpy the user sec_ctx.
    
    Fixes: df71837d502 ("[LSM-IPSec]: Security association restriction.")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51188ac2676d861fb53303a9a394b86f4e7467c6
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu May 4 15:50:53 2017 -0700

    IB/srpt: Fix abort handling
    
    
    [ Upstream commit 55d694275f41a1c0eef4ef49044ff29bc3999490 ]
    
    Let the target core check the CMD_T_ABORTED flag instead of the SRP
    target driver. Hence remove the transport_check_aborted_status()
    call. Since state == SRPT_STATE_CMD_RSP_SENT is something that really
    should not happen, do not try to recover if srpt_queue_response() is
    called for an I/O context that is in that state. This patch is a bug
    fix because the srpt_abort_cmd() call is misplaced - if that function
    is called from srpt_queue_response() it should either be called
    before the command state is changed or after the response has been
    sent.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Cc: Doug Ledford <dledford@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5054873ca2d1240fbc66a196142290607eb088c
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu May 4 13:44:04 2017 -0400

    NFSv4.1: RECLAIM_COMPLETE must handle NFS4ERR_CONN_NOT_BOUND_TO_SESSION
    
    
    [ Upstream commit 0048fdd06614a4ea088f9fcad11511956b795698 ]
    
    If the server returns NFS4ERR_CONN_NOT_BOUND_TO_SESSION because we
    are trunking, then RECLAIM_COMPLETE must handle that by calling
    nfs4_schedule_session_recovery() and then retrying.
    
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
