commit 5cf9896dc5c72a6c68c36140568b755f697f7760
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jul 10 09:50:06 2015 -0700

    Linux 4.1.2

commit 4e1fc88c6112cb9b691807cc4fe0b6bfa66b1e60
Author: Fabian Frederick <fabf@skynet.be>
Date:   Wed Jun 17 18:15:45 2015 +0200

    fs/ufs: restore s_lock mutex_init()
    
    commit e4f95517f18271b1da36cfc5d700e46844396d6e upstream.
    
    Add last missing line in commit "cdd9eefdf905"
    ("fs/ufs: restore s_lock mutex")
    
    Signed-off-by: Fabian Frederick <fabf@skynet.be>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b94332a90b6572713d0a4ca92563e9655a7dd33d
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jun 2 11:26:34 2015 +0200

    ufs: Fix possible deadlock when looking up directories
    
    commit 514d748f69c97a51a2645eb198ac5c6218f22ff9 upstream.
    
    Commit e4502c63f56aeca88 (ufs: deal with nfsd/iget races) made ufs
    create inodes with I_NEW flag set. However ufs_mkdir() never cleared
    this flag. Thus if someone ever tried to lookup the directory by inode
    number, he would deadlock waiting for I_NEW to be cleared. Luckily this
    mostly happens only if the filesystem is exported over NFS since
    otherwise we have the inode attached to dentry and don't look it up by
    inode number. In rare cases dentry can get freed without inode being
    freed and then we'd hit the deadlock even without NFS export.
    
    Fix the problem by clearing I_NEW before instantiating new directory
    inode.
    
    Fixes: e4502c63f56aeca887ced37f24e0def1ef11cec8
    Reported-by: Fabian Frederick <fabf@skynet.be>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 918ef5dc2e9761f4cf34e8059e74cc2f834234ca
Author: Jan Kara <jack@suse.cz>
Date:   Mon Jun 1 14:52:04 2015 +0200

    ufs: Fix warning from unlock_new_inode()
    
    commit 12ecbb4b1d765a5076920999298d9625439dbe58 upstream.
    
    Commit e4502c63f56aeca88 (ufs: deal with nfsd/iget races) introduced
    unlock_new_inode() call into ufs_add_nondir(). However that function
    gets called also from ufs_link() which hands it already initialized
    inode and thus unlock_new_inode() complains. The problem is harmless but
    annoying.
    
    Fix the problem by opencoding necessary stuff in ufs_link()
    
    Fixes: e4502c63f56aeca887ced37f24e0def1ef11cec8
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c89d4319ae55186496c43b7a6e510aa1d09dd387
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Jan 7 08:10:09 2015 -0600

    vfs: Ignore unlocked mounts in fs_fully_visible
    
    commit ceeb0e5d39fcdf4dca2c997bf225c7fc49200b37 upstream.
    
    Limit the mounts fs_fully_visible considers to locked mounts.
    Unlocked can always be unmounted so considering them adds hassle
    but no security benefit.
    
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eda16d166170124b56e4090075ce6997c3d43af
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Sun May 24 09:25:00 2015 -0500

    vfs: Remove incorrect debugging WARN in prepend_path
    
    commit 93e3bce6287e1fb3e60d3324ed08555b5bbafa89 upstream.
    
    The warning message in prepend_path is unclear and outdated.  It was
    added as a warning that the mechanism for generating names of pseudo
    files had been removed from prepend_path and d_dname should be used
    instead.  Unfortunately the warning reads like a general warning,
    making it unclear what to do with it.
    
    Remove the warning.  The transition it was added to warn about is long
    over, and I added code several years ago which in rare cases causes
    the warning to fire on legitimate code, and the warning is now firing
    and scaring people for no good reason.
    
    Reported-by: Ivan Delalande <colona@arista.com>
    Reported-by: Omar Sandoval <osandov@osandov.com>
    Fixes: f48cfddc6729e ("vfs: In d_path don't call d_dname on a mount point")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0da5a72210cbe177ab1043be058403ca49eb7a2b
Author: Fabian Frederick <fabf@skynet.be>
Date:   Wed Jun 10 10:09:32 2015 +1000

    fs/ufs: restore s_lock mutex
    
    commit cdd9eefdf905e92e7fc6cc393314efe68dc6ff66 upstream.
    
    Commit 0244756edc4b98c ("ufs: sb mutex merge + mutex_destroy") generated
    deadlocks in read/write mode on mkdir.
    
    This patch partially reverts it keeping fixes by Andrew Morton and
    mutex_destroy()
    
    [AV: fixed a missing bit in ufs_remount()]
    
    Signed-off-by: Fabian Frederick <fabf@skynet.be>
    Reported-by: Ian Campbell <ian.campbell@citrix.com>
    Suggested-by: Jan Kara <jack@suse.cz>
    Cc: Ian Campbell <ian.campbell@citrix.com>
    Cc: Evgeniy Dushistov <dushistov@mail.ru>
    Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Cc: Roger Pau Monne <roger.pau@citrix.com>
    Cc: Ian Jackson <Ian.Jackson@eu.citrix.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60c92e3205a6eb78c7970bf370cc9c550bd0c132
Author: Fabian Frederick <fabf@skynet.be>
Date:   Wed Jun 10 10:09:32 2015 +1000

    fs/ufs: revert "ufs: fix deadlocks introduced by sb mutex merge"
    
    commit 13b987ea275840d74d9df9a44326632fab1894da upstream.
    
    This reverts commit 9ef7db7f38d0 ("ufs: fix deadlocks introduced by sb
    mutex merge") That patch tried to solve commit 0244756edc4b98c ("ufs: sb
    mutex merge + mutex_destroy") which is itself partially reverted due to
    multiple deadlocks.
    
    Signed-off-by: Fabian Frederick <fabf@skynet.be>
    Suggested-by: Jan Kara <jack@suse.cz>
    Cc: Ian Campbell <ian.campbell@citrix.com>
    Cc: Evgeniy Dushistov <dushistov@mail.ru>
    Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Cc: Roger Pau Monne <roger.pau@citrix.com>
    Cc: Ian Jackson <Ian.Jackson@eu.citrix.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c1215740834bef3dec9e1ef9c4f5bbe86f1f6cb
Author: Jan Kara <jack@suse.cz>
Date:   Thu May 21 16:05:52 2015 +0200

    fs: Fix S_NOSEC handling
    
    commit 2426f3910069ed47c0cc58559a6d088af7920201 upstream.
    
    file_remove_suid() could mistakenly set S_NOSEC inode bit when root was
    modifying the file. As a result following writes to the file by ordinary
    user would avoid clearing suid or sgid bits.
    
    Fix the bug by checking actual mode bits before setting S_NOSEC.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ed8b759437fadfd18202be9bb65a7f80c3c6d63
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Wed Jul 1 15:31:49 2015 +0200

    KVM: x86: make vapics_in_nmi_mode atomic
    
    commit 42720138b06301cc8a7ee8a495a6d021c4b6a9bc upstream.
    
    Writes were a bit racy, but hard to turn into a bug at the same time.
    (Particularly because modern Linux doesn't use this feature anymore.)
    
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [Actually the next patch makes it much, much easier to trigger the race
     so I'm including this one for stable@ as well. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58382447b9a9989da551a7b17e72756f6e238bb8
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Tue Jun 30 22:19:17 2015 +0200

    KVM: x86: properly restore LVT0
    
    commit db1385624c686fe99fe2d1b61a36e1537b915d08 upstream.
    
    Legacy NMI watchdog didn't work after migration/resume, because
    vapics_in_nmi_mode was left at 0.
    
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da75b45af7778af80c7c1d9853868e9bb4b75065
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Jun 17 14:43:35 2015 +0100

    KVM: arm/arm64: vgic: Avoid injecting reserved IRQ numbers
    
    commit 4839ddc27b7212ec58874f62c97da7400c8523be upstream.
    
    Commit fd1d0ddf2ae9 (KVM: arm/arm64: check IRQ number on userland
    injection) rightly limited the range of interrupts userspace can
    inject in a guest, but failed to consider the (unlikely) case where
    a guest is configured with 1024 interrupts.
    
    In this case, interrupts ranging from 1020 to 1023 are unuseable,
    as they have a special meaning for the GIC CPU interface.
    
    Make sure that these number cannot be used as an IRQ. Also delete
    a redundant (and similarily buggy) check in kvm_set_irq.
    
    Reported-by: Peter Maydell <peter.maydell@linaro.org>
    Cc: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aae3d9fecc22c1c7565c94f0818704a1908543ce
Author: Cornelia Huck <cornelia.huck@de.ibm.com>
Date:   Mon Jun 29 16:44:01 2015 +0200

    KVM: s390: virtio-ccw: don't overwrite config space values
    
    commit 431dae778aea4eed31bd12e5ee82edc571cd4d70 upstream.
    
    Eric noticed problems with vhost-scsi and virtio-ccw: vhost-scsi
    complained about overwriting values in the config space, which
    was triggered by a broken implementation of virtio-ccw's config
    get/set routines. It was probably sheer luck that we did not hit
    this before.
    
    When writing a value to the config space, the WRITE_CONF ccw will
    always write from the beginning of the config space up to and
    including the value to be set. If the config space up to the value
    has not yet been retrieved from the device, however, we'll end up
    overwriting values. Keep track of the known config space and update
    if needed to avoid this.
    
    Moreover, READ_CONF will only read the number of bytes it has been
    instructed to retrieve, so we must not copy more than that to the
    buffer, or we might overwrite trailing values.
    
    Reported-by: Eric Farman <farman@linux.vnet.ibm.com>
    Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Reviewed-by: Eric Farman <farman@linux.vnet.ibm.com>
    Tested-by: Eric Farman <farman@linux.vnet.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c7a81c60df147a14735ca3c0f039cf4507b65fc
Author: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Date:   Thu Jun 11 19:59:04 2015 +0200

    s390/kdump: fix REGSET_VX_LOW vector register ELF notes
    
    commit 3c8e5105e759e7b2d88ea8a85b1285e535bc7500 upstream.
    
    The REGSET_VX_LOW ELF notes should contain the lower 64 bit halfes of the
    first sixteen 128 bit vector registers. Unfortunately currently we copy
    the upper halfes.
    
    Fix this and correctly copy the lower halfes.
    
    Fixes: a62bc0739253 ("s390/kdump: add support for vector extension")
    Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17de07163877d0f1fdd9185130ac4111f5f340f7
Author: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Date:   Thu May 21 15:39:31 2015 +0200

    s390/bpf: Fix backward jumps
    
    commit b035b60ded132592055c0f9bd1cc280259c7de4b upstream.
    
    Currently all backward jumps crash for JITed s390x eBPF programs
    with an illegal instruction program check and kernel panic. Because
    for negative values the opcode of the jump instruction is overriden
    by the negative branch offset an illegal instruction is generated
    by the JIT:
    
     000003ff802da378: c01100000002   lgfi    %r1,2
     000003ff802da37e: fffffff52065   unknown <-- illegal instruction
     000003ff802da384: b904002e       lgr     %r2,%r14
    
    So fix this and mask the offset in order not to damage the opcode.
    
    Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 534c9f9886c25221d4f4dd396cd78b67214c1796
Author: Jens Freimann <jfrei@linux.vnet.ibm.com>
Date:   Mon Jun 22 13:20:12 2015 +0200

    KVM: s390: clear floating interrupt bitmap and parameters
    
    commit f2ae45edbca7ba5324eef01719ede0151dc5cead upstream.
    
    commit 6d3da24141 ("KVM: s390: deliver floating interrupts in order
    of priority") introduced a regression for the reset handling.
    
    We don't clear the bitmap of pending floating interrupts
    and interrupt parameters. This could result in stale interrupts
    even after a reset. Let's fix this by clearing the pending bitmap
    and the parameters for service and machine check interrupts.
    
    Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14fe2f14d73609cfdb19b71467d085e5347f7353
Author: David Hildenbrand <dahi@linux.vnet.ibm.com>
Date:   Thu Apr 30 13:33:59 2015 +0200

    KVM: s390: fix external call injection without sigp interpretation
    
    commit b938eacea0b6881f2116a061e6da3ec840e75137 upstream.
    
    Commit ea5f49692575 ("KVM: s390: only one external call may be pending
    at a time") introduced a bug on machines that don't have SIGP
    interpretation facility installed.
    The injection of an external call will now always fail with -EBUSY
    (if none is already pending).
    
    This leads to the following symptoms:
    - An external call will be injected but with the wrong "src cpu id",
      as this id will not be remembered.
    - The target vcpu will not be woken up, therefore the guest will hang if
      it cannot deal with unexpected failures of the SIGP EXTERNAL CALL
      instruction.
    - If an external call is already pending, -EBUSY will not be reported.
    
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Jens Freimann <jfrei@linux.vnet.ibm.com>
    Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f3d3bc20372afb29708307608946e2bb56a5a64
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Apr 27 15:07:16 2015 +0100

    MIPS: Fix KVM guest fixmap address
    
    commit 8e748c8d09a9314eedb5c6367d9acfaacddcdc88 upstream.
    
    KVM guest kernels for trap & emulate run in user mode, with a modified
    set of kernel memory segments. However the fixmap address is still in
    the normal KSeg3 region at 0xfffe0000 regardless, causing problems when
    cache alias handling makes use of them when handling copy on write.
    
    Therefore define FIXADDR_TOP as 0x7ffe0000 in the guest kernel mapped
    region when CONFIG_KVM_GUEST is defined.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/9887/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dff1316f4f15d9c3ff3ff9c11f2c92e0a2040a49
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon May 18 08:35:43 2015 +0200

    KVM: mips: use id_to_memslot correctly
    
    commit 69a1220060c1523fd0515216eaa29e22f133b894 upstream.
    
    The argument to KVM_GET_DIRTY_LOG is a memslot id; it may not match the
    position in the memslots array, which is sorted by gfn.
    
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f2faffa0a189c28a2f2242c0b23fb031ba3075
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Jun 9 18:54:07 2015 -0500

    x86/PCI: Use host bridge _CRS info on Foxconn K8M890-8237A
    
    commit 1dace0116d0b05c967d94644fc4dfe96be2ecd3d upstream.
    
    The Foxconn K8M890-8237A has two PCI host bridges, and we can't assign
    resources correctly without the information from _CRS that tells us which
    address ranges are claimed by which bridge.  In the bugs mentioned below,
    we incorrectly assign a sound card address (this example is from 1033299):
    
      bus: 00 index 2 [mem 0x80000000-0xfcffffffff]
      ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-7f])
      pci_root PNP0A08:00: host bridge window [mem 0x80000000-0xbfefffff] (ignored)
      pci_root PNP0A08:00: host bridge window [mem 0xc0000000-0xdfffffff] (ignored)
      pci_root PNP0A08:00: host bridge window [mem 0xf0000000-0xfebfffff] (ignored)
      ACPI: PCI Root Bridge [PCI1] (domain 0000 [bus 80-ff])
      pci_root PNP0A08:01: host bridge window [mem 0xbff00000-0xbfffffff] (ignored)
      pci 0000:80:01.0: [1106:3288] type 0 class 0x000403
      pci 0000:80:01.0: reg 10: [mem 0xbfffc000-0xbfffffff 64bit]
      pci 0000:80:01.0: address space collision: [mem 0xbfffc000-0xbfffffff 64bit] conflicts with PCI Bus #00 [mem 0x80000000-0xfcffffffff]
      pci 0000:80:01.0: BAR 0: assigned [mem 0xfd00000000-0xfd00003fff 64bit]
      BUG: unable to handle kernel paging request at ffffc90000378000
      IP: [<ffffffffa0345f63>] azx_create+0x37c/0x822 [snd_hda_intel]
    
    We assigned 0xfd_0000_0000, but that is not in any of the host bridge
    windows, and the sound card doesn't work.
    
    Turn on pci=use_crs automatically for this system.
    
    Link: https://bugs.launchpad.net/ubuntu/+source/alsa-driver/+bug/931368
    Link: https://bugs.launchpad.net/ubuntu/+source/alsa-driver/+bug/1033299
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dc6d43528e147f9d243df8da6ccf54c7ee244de
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Jun 9 17:31:38 2015 -0500

    x86/PCI: Use host bridge _CRS info on systems with >32 bit addressing
    
    commit 3d9fecf6bfb8b12bc2f9a4c7109895a2a2bb9436 upstream.
    
    We enable _CRS on all systems from 2008 and later.  On older systems, we
    ignore _CRS and assume the whole physical address space (excluding RAM and
    other devices) is available for PCI devices, but on systems that support
    physical address spaces larger than 4GB, it's doubtful that the area above
    4GB is really available for PCI.
    
    After d56dbf5bab8c ("PCI: Allocate 64-bit BARs above 4G when possible"), we
    try to use that space above 4GB *first*, so we're more likely to put a
    device there.
    
    On Juan's Toshiba Satellite Pro U200, BIOS left the graphics, sound, 1394,
    and card reader devices unassigned (but only after Windows had been
    booted).  Only the sound device had a 64-bit BAR, so it was the only device
    placed above 4GB, and hence the only device that didn't work.
    
    Keep _CRS enabled even on pre-2008 systems if they support physical address
    space larger than 4GB.
    
    Fixes: d56dbf5bab8c ("PCI: Allocate 64-bit BARs above 4G when possible")
    Reported-and-tested-by: Juan Dayer <jdayer@outlook.com>
    Reported-and-tested-by: Alan Horsfield <alan@hazelgarth.co.uk>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=99221
    Link: https://bugzilla.opensuse.org/show_bug.cgi?id=907092
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6707abd213039644950edb760d5c46503f065fa
Author: Anton Blanchard <anton@samba.org>
Date:   Tue May 26 15:10:24 2015 +1000

    powerpc/perf: Fix book3s kernel to userspace backtraces
    
    commit 72e349f1124a114435e599479c9b8d14bfd1ebcd upstream.
    
    When we take a PMU exception or a software event we call
    perf_read_regs(). This overloads regs->result with a boolean that
    describes if we should use the sampled instruction address register
    (SIAR) or the regs.
    
    If the exception is in kernel, we start with the kernel regs and
    backtrace through the kernel stack. At this point we switch to the
    userspace regs and backtrace the user stack with perf_callchain_user().
    
    Unfortunately these regs have not got the perf_read_regs() treatment,
    so regs->result could be anything. If it is non zero,
    perf_instruction_pointer() decides to use the SIAR, and we get issues
    like this:
    
    0.11%  qemu-system-ppc  [kernel.kallsyms]        [k] _raw_spin_lock_irqsave
           |
           ---_raw_spin_lock_irqsave
              |
              |--52.35%-- 0
              |          |
              |          |--46.39%-- __hrtimer_start_range_ns
              |          |          kvmppc_run_core
              |          |          kvmppc_vcpu_run_hv
              |          |          kvmppc_vcpu_run
              |          |          kvm_arch_vcpu_ioctl_run
              |          |          kvm_vcpu_ioctl
              |          |          do_vfs_ioctl
              |          |          sys_ioctl
              |          |          system_call
              |          |          |
              |          |          |--67.08%-- _raw_spin_lock_irqsave <--- hi mum
              |          |          |          |
              |          |          |           --100.00%-- 0x7e714
              |          |          |                     0x7e714
    
    Notice the bogus _raw_spin_irqsave when we transition from kernel
    (system_call) to userspace (0x7e714). We inserted what was in the SIAR.
    
    Add a check in regs_use_siar() to check that the regs in question
    are from a PMU exception. With this fix the backtrace makes sense:
    
         0.47%  qemu-system-ppc  [kernel.vmlinux]         [k] _raw_spin_lock_irqsave
                |
                ---_raw_spin_lock_irqsave
                   |
                   |--53.83%-- 0
                   |          |
                   |          |--44.73%-- hrtimer_try_to_cancel
                   |          |          kvmppc_start_thread
                   |          |          kvmppc_run_core
                   |          |          kvmppc_vcpu_run_hv
                   |          |          kvmppc_vcpu_run
                   |          |          kvm_arch_vcpu_ioctl_run
                   |          |          kvm_vcpu_ioctl
                   |          |          do_vfs_ioctl
                   |          |          sys_ioctl
                   |          |          system_call
                   |          |          __ioctl
                   |          |          0x7e714
                   |          |          0x7e714
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9d118e11a1b94c155a1cc985f1a2d3a9e03da2f
Author: preeti <preeti@linux.vnet.ibm.com>
Date:   Wed Jun 24 01:48:01 2015 -0500

    tick/idle/powerpc: Do not register idle states with CPUIDLE_FLAG_TIMER_STOP set in periodic mode
    
    commit cc5a2f7b8f39e7db559778f7913a2410257b3e50 upstream.
    
    On some archs, the local clockevent device stops in deep cpuidle states.
    The broadcast framework is used to wakeup cpus in these idle states, in
    which either an external clockevent device is used to send wakeup ipis
    or the hrtimer broadcast framework kicks in in the absence of such a
    device. One cpu is nominated as the broadcast cpu and this cpu sends
    wakeup ipis to sleeping cpus at the appropriate time. This is the
    implementation in the oneshot mode of broadcast.
    
    In periodic mode of broadcast however, the presence of such cpuidle
    states results in the cpuidle driver calling tick_broadcast_enable()
    which shuts down the local clockevent devices of all the cpus and
    appoints the tick broadcast device as the clockevent device for each of
    them. This works on those archs where the tick broadcast device is a
    real clockevent device.  But on archs which depend on the hrtimer mode
    of broadcast, the tick broadcast device hapens to be a pseudo device.
    The consequence is that the local clockevent devices of all cpus are
    shutdown and the kernel hangs at boot time in periodic mode.
    
    Let us thus not register the cpuidle states which have
    CPUIDLE_FLAG_TIMER_STOP flag set, on archs which depend on the hrtimer
    mode of broadcast in periodic mode. This patch takes care of doing this
    on powerpc. The cpus would not have entered into such deep cpuidle
    states in periodic mode on powerpc anyway. So there is no loss here.
    
    Signed-off-by: Preeti U Murthy <preeti@linux.vnet.ibm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 301773b62355e8a6028a8023be2d04c7317915d9
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue Jun 16 14:12:57 2015 +0200

    ARM: mvebu: fix suspend to RAM on big-endian configurations
    
    commit 2f5bc307be2480ba89e4c5d118f406f04a4a7299 upstream.
    
    The current Armada XP suspend to RAM implementation, as added in
    commit 27432825ae19f ("ARM: mvebu: Armada XP GP specific
    suspend/resume code") does not handle big-endian configurations
    properly: the small bit of assembly code putting the DRAM in
    self-refresh and toggling the GPIOs to turn off power forgets to
    convert the values to little-endian.
    
    This commit fixes that by making sure the two values we will write to
    the DRAM controller register and GPIO register are already in
    little-endian before entering the critical assembly code.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Fixes: 27432825ae19f ("ARM: mvebu: Armada XP GP specific suspend/resume code")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3544f27efa25890516158c8e13d21e878969d125
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Thu Jan 15 13:58:57 2015 +0300

    ARM: tegra20: Store CPU "resettable" status in IRAM
    
    commit 4d48edb3c3e1234d6b3fcdfb9ac24d7c6de449cb upstream.
    
    Commit 7232398abc6a ("ARM: tegra: Convert PMC to a driver") changed tegra_resume()
    location storing from late to early and, as a result, broke suspend on Tegra20.
    PMC scratch register 41 is used by tegra LP1 resume code for retrieving stored
    physical memory address of common resume function and in the same time used by
    tegra20_cpu_shutdown() (shared by Tegra20 cpuidle driver and platform SMP code),
    which is storing CPU1 "resettable" status. It implies strict order of scratch
    register usage, otherwise resume function address is lost on Tegra20 after
    disabling non-boot CPU's on suspend. Fix it by storing "resettable" status in
    IRAM instead of PMC scratch register.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Fixes: 7232398abc6a (ARM: tegra: Convert PMC to a driver)
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f3587c4ff8c828aac436237aeca8694a26defd3
Author: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
Date:   Wed Jun 10 15:19:24 2015 +0100

    ARM: kvm: psci: fix handling of unimplemented functions
    
    commit e2d997366dc5b6c9d14035867f73957f93e7578c upstream.
    
    According to the PSCI specification and the SMC/HVC calling
    convention, PSCI function_ids that are not implemented must
    return NOT_SUPPORTED as return value.
    
    Current KVM implementation takes an unhandled PSCI function_id
    as an error and injects an undefined instruction into the guest
    if PSCI implementation is called with a function_id that is not
    handled by the resident PSCI version (ie it is not implemented),
    which is not the behaviour expected by a guest when calling a
    PSCI function_id that is not implemented.
    
    This patch fixes this issue by returning NOT_SUPPORTED whenever
    the kvm PSCI call is executed for a function_id that is not
    implemented by the PSCI kvm layer.
    
    Cc: Christoffer Dall <christoffer.dall@linaro.org>
    Acked-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8bdf091472978ecfc884148b50be5f93761fdf9
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Mar 16 10:59:43 2015 +0000

    arm: KVM: force execution of HCPTR access on VM exit
    
    commit 85e84ba31039595995dae80b277378213602891b upstream.
    
    On VM entry, we disable access to the VFP registers in order to
    perform a lazy save/restore of these registers.
    
    On VM exit, we restore access, test if we did enable them before,
    and save/restore the guest/host registers if necessary. In this
    sequence, the FPEXC register is always accessed, irrespective
    of the trapping configuration.
    
    If the guest didn't touch the VFP registers, then the HCPTR access
    has now enabled such access, but we're missing a barrier to ensure
    architectural execution of the new HCPTR configuration. If the HCPTR
    access has been delayed/reordered, the subsequent access to FPEXC
    will cause a trap, which we aren't prepared to handle at all.
    
    The same condition exists when trapping to enable VFP for the guest.
    
    The fix is to introduce a barrier after enabling VFP access. In the
    vmexit case, it can be relaxed to only takes place if the guest hasn't
    accessed its view of the VFP registers, making the access to FPEXC safe.
    
    The set_hcptr macro is modified to deal with both vmenter/vmexit and
    vmtrap operations, and now takes an optional label that is branched to
    when the guest hasn't touched the VFP registers.
    
    Reported-by: Vikram Sethi <vikrams@codeaurora.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 805f18e0bcbf894c4412e3069c7ac4c3e1feb9bf
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Jun 4 15:57:25 2015 -0400

    selinux: fix setting of security labels on NFS
    
    commit 9fc2b4b436cff7d8403034676014f1be9d534942 upstream.
    
    Before calling into the filesystem, vfs_setxattr calls
    security_inode_setxattr, which ends up calling selinux_inode_setxattr in
    our case.  That returns -EOPNOTSUPP whenever SBLABEL_MNT is not set.
    SBLABEL_MNT was supposed to be set by sb_finish_set_opts, which sets it
    only if selinux_is_sblabel_mnt returns true.
    
    The selinux_is_sblabel_mnt logic was broken by eadcabc697e9 "SELinux: do
    all flags twiddling in one place", which didn't take into the account
    the SECURITY_FS_USE_NATIVE behavior that had been introduced for nfs
    with eb9ae686507b "SELinux: Add new labeling type native labels".
    
    This caused setxattr's of security labels over NFSv4.2 to fail.
    
    Cc: Eric Paris <eparis@redhat.com>
    Cc: David Quigley <dpquigl@davequigley.com>
    Reported-by: Richard Chan <rc556677@outlook.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Acked-by: Stephen Smalley <sds@tycho.nsa.gov>
    [PM: added the stable dependency]
    Signed-off-by: Paul Moore <pmoore@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd430d3e58e79d93597c26ee684730302940ae8c
Author: Joe Konno <joe.konno@intel.com>
Date:   Tue May 12 07:59:42 2015 -0700

    intel_pstate: set BYT MSR with wrmsrl_on_cpu()
    
    commit 0dd23f94251f49da99a6cbfb22418b2d757d77d6 upstream.
    
    Commit 007bea098b86 (intel_pstate: Add setting voltage value for
    baytrail P states.) introduced byt_set_pstate() with the assumption that
    it would always be run by the CPU whose MSR is to be written by it.  It
    turns out, however, that is not always the case in practice, so modify
    byt_set_pstate() to enforce the MSR write done by it to always happen on
    the right CPU.
    
    Fixes: 007bea098b86 (intel_pstate: Add setting voltage value for baytrail P states.)
    Signed-off-by: Joe Konno <joe.konno@intel.com>
    Acked-by: Kristen Carlson Accardi <kristen@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b81f9f8194ffa58b27d269233c9f778b758cb2b
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Jun 12 11:45:02 2015 +0200

    mmc: sdhci: fix low memory corruption
    
    commit 62a7f368ffbc13d9aedfdd7aeae711b177db69ac upstream.
    
    When dma mapping (dma_map_sg) fails in sdhci_pre_dma_transfer, -EINVAL
    is returned. There are 3 callers of sdhci_pre_dma_transfer:
    * sdhci_pre_req and sdhci_adma_table_pre: handle negative return
    * sdhci_prepare_data: handles 0 (error) and "else" (good) only
    
    sdhci_prepare_data is therefore broken. When it receives -EINVAL from
    sdhci_pre_dma_transfer, it assumes 1 sg mapping was mapped. Later,
    this non-existent mapping with address 0 is kmap'ped and written to:
    Corrupted low memory at ffff880000001000 (1000 phys) = 22b7d67df2f6d1cf
    Corrupted low memory at ffff880000001008 (1008 phys) = 63848a5216b7dd95
    Corrupted low memory at ffff880000001010 (1010 phys) = 330eb7ddef39e427
    Corrupted low memory at ffff880000001018 (1018 phys) = 8017ac7295039bda
    Corrupted low memory at ffff880000001020 (1020 phys) = 8ce039eac119074f
    ...
    
    So teach sdhci_prepare_data to understand negative return values from
    sdhci_pre_dma_transfer and disable DMA in that case, as well as for
    zero.
    
    It was introduced in 348487cb28e66b032bae1b38424d81bf5b444408 (mmc:
    sdhci: use pipeline mmc requests to improve performance). The commit
    seems to be suspicious also by assigning host->sg_count both in
    sdhci_pre_dma_transfer and sdhci_adma_table_pre.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: 348487cb28e6
    Cc: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Haibo Chen <haibo.chen@freescale.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 396887ba3a77ee7f8b17ea85afa8501262e230b4
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Jun 18 10:48:34 2015 +0200

    iommu/amd: Handle large pages correctly in free_pagetable
    
    commit 0b3fff54bc01e8e6064d222a33e6fa7adabd94cd upstream.
    
    Make sure that we are skipping over large PTEs while walking
    the page-table tree.
    
    Fixes: 5c34c403b723 ("iommu/amd: Fix memory leak in free_pagetable")
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72e09509a225e553f3736b3822a91f99f8c4777c
Author: Will Deacon <will@kernel.org>
Date:   Mon Jun 29 17:47:42 2015 +0100

    iommu/arm-smmu: Fix broken ATOS check
    
    commit d38f0ff9ab35414644995bae187d015c31aae19c upstream.
    
    Commit 83a60ed8f0b5 ("iommu/arm-smmu: fix ARM_SMMU_FEAT_TRANS_OPS
    condition") accidentally negated the ID0_ATOSNS predicate in the ATOS
    feature check, causing the driver to attempt ATOS requests on SMMUv2
    hardware without the ATOS feature implemented.
    
    This patch restores the predicate to the correct value.
    
    Reported-by: Varun Sethi <varun.sethi@freescale.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44cb6ff1db11f2a147cccc943927a5ca20d1bb81
Author: Horia Geant? <horia.geanta@freescale.com>
Date:   Mon May 11 20:04:49 2015 +0300

    Revert "crypto: talitos - convert to use be16_add_cpu()"
    
    commit 69d9cd8c592f1abce820dbce7181bbbf6812cfbd upstream.
    
    This reverts commit 7291a932c6e27d9768e374e9d648086636daf61c.
    
    The conversion to be16_add_cpu() is incorrect in case cryptlen is
    negative due to premature (i.e. before addition / subtraction)
    implicit conversion of cryptlen (int -> u16) leading to sign loss.
    
    Cc: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Signed-off-by: Horia Geanta <horia.geanta@freescale.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e566fe9dea0750713fa267b5a0b23f0b78b26ea
Author: Horia Geant? <horia.geanta@freescale.com>
Date:   Mon May 11 20:03:24 2015 +0300

    crypto: talitos - avoid memleak in talitos_alg_alloc()
    
    commit 5fa7dadc898567ce14d6d6d427e7bd8ce6eb5d39 upstream.
    
    Fixes: 1d11911a8c57 ("crypto: talitos - fix warning: 'alg' may be used uninitialized in this function")
    Signed-off-by: Horia Geanta <horia.geanta@freescale.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e4205d4e0b0579b906de8ec7c5920968bfb32a9
Author: Rui Miguel Silva <rui.silva@linaro.org>
Date:   Wed May 20 14:52:40 2015 +0100

    usb: gadget: f_fs: add extra check before unregister_gadget_item
    
    commit f14e9ad17f46051b02bffffac2036486097de19e upstream.
    
    ffs_closed can race with configfs_rmdir which will call config_item_release, so
    add an extra check to avoid calling the unregister_gadget_item with an null
    gadget item.
    
    Signed-off-by: Rui Miguel Silva <rui.silva@linaro.org>
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfa06e6258be556d44aad030fe1babeed4f92240
Author: Simon Guinot <simon.guinot@sequanux.org>
Date:   Tue Jun 30 16:20:22 2015 +0200

    net: mvneta: disable IP checksum with jumbo frames for Armada 370
    
    [ Upstream commit b65657fc240ae6c1d2a1e62db9a0e61ac9631d7a ]
    
    The Ethernet controller found in the Armada 370, 380 and 385 SoCs don't
    support TCP/IP checksumming with frame sizes larger than 1600 bytes.
    
    This patch fixes the issue by disabling the features NETIF_F_IP_CSUM and
    NETIF_F_TSO for the Armada 370 and compatibles SoCs when the MTU is set
    to a value greater than 1600 bytes.
    
    Signed-off-by: Simon Guinot <simon.guinot@sequanux.org>
    Fixes: c5aff18204da ("net: mvneta: driver for Marvell Armada 370/XP network unit")
    Cc: <stable@vger.kernel.org> # v3.8+
    Acked-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c40e8bf8f8239a5e1fe85ceeb8c6d930f28ef8e
Author: Simon Guinot <simon.guinot@sequanux.org>
Date:   Tue Jun 30 16:20:21 2015 +0200

    ARM: mvebu: update Ethernet compatible string for Armada XP
    
    [ Upstream commit ea3b55fe83b5fcede82d183164b9d6831b26e33b ]
    
    This patch updates the Ethernet DT nodes for Armada XP SoCs with the
    compatible string "marvell,armada-xp-neta".
    
    Signed-off-by: Simon Guinot <simon.guinot@sequanux.org>
    Fixes: 77916519cba3 ("arm: mvebu: Armada XP MV78230 has only three Ethernet interfaces")
    Cc: <stable@vger.kernel.org> # v3.8+
    Acked-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Reviewed-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5aded8311788994641bd1d04b4b922f9c202b8f
Author: Simon Guinot <simon.guinot@sequanux.org>
Date:   Tue Jun 30 16:20:20 2015 +0200

    net: mvneta: introduce compatible string "marvell, armada-xp-neta"
    
    [ Upstream commit f522a975a8101895a85354b9c143f41b8248e71a ]
    
    The mvneta driver supports the Ethernet IP found in the Armada 370, XP,
    380 and 385 SoCs. Since at least one more hardware feature is available
    for the Armada XP SoCs then a way to identify them is needed.
    
    This patch introduces a new compatible string "marvell,armada-xp-neta".
    
    Signed-off-by: Simon Guinot <simon.guinot@sequanux.org>
    Fixes: c5aff18204da ("net: mvneta: driver for Marvell Armada 370/XP network unit")
    Cc: <stable@vger.kernel.org> # v3.8+
    Acked-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Acked-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c6e5415f83cb5ba0da1321ec743b650c8a16764
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jun 29 11:22:12 2015 -0500

    amd-xgbe: Add the __GFP_NOWARN flag to Rx buffer allocation
    
    [ Upstream commit 472cfe7127760d68b819cf35a26e5a1b44b30f4e ]
    
    When allocating Rx related buffers, alloc_pages is called using an order
    number that is decreased until successful. A system under stress can
    experience failures during this allocation process resulting in a warning
    being issued. This message can be of concern to end users even though the
    failure is not fatal. Since the failure is not fatal and can occur
    multiple times, the driver should include the __GFP_NOWARN flag to
    suppress the warning message from being issued.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67866a8c30f4707cef895635d5d08cb8105d2f5e
Author: Alexander Sverdlin <alexander.sverdlin@nokia.com>
Date:   Mon Jun 29 10:41:03 2015 +0200

    sctp: Fix race between OOTB responce and route removal
    
    [ Upstream commit 29c4afc4e98f4dc0ea9df22c631841f9c220b944 ]
    
    There is NULL pointer dereference possible during statistics update if the route
    used for OOTB responce is removed at unfortunate time. If the route exists when
    we receive OOTB packet and we finally jump into sctp_packet_transmit() to send
    ABORT, but in the meantime route is removed under our feet, we take "no_route"
    path and try to update stats with IP_INC_STATS(sock_net(asoc->base.sk), ...).
    
    But sctp_ootb_pkt_new() used to prepare responce packet doesn't call
    sctp_transport_set_owner() and therefore there is no asoc associated with this
    packet. Probably temporary asoc just for OOTB responces is overkill, so just
    introduce a check like in all other places in sctp_packet_transmit(), where
    "asoc" is dereferenced.
    
    To reproduce this, one needs to
    0. ensure that sctp module is loaded (otherwise ABORT is not generated)
    1. remove default route on the machine
    2. while true; do
         ip route del [interface-specific route]
         ip route add [interface-specific route]
       done
    3. send enough OOTB packets (i.e. HB REQs) from another host to trigger ABORT
       responce
    
    On x86_64 the crash looks like this:
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
    IP: [<ffffffffa05ec9ac>] sctp_packet_transmit+0x63c/0x730 [sctp]
    PGD 0
    Oops: 0000 [#1] PREEMPT SMP
    Modules linked in: ...
    CPU: 0 PID: 0 Comm: swapper/0 Tainted: G           O    4.0.5-1-ARCH #1
    Hardware name: ...
    task: ffffffff818124c0 ti: ffffffff81800000 task.ti: ffffffff81800000
    RIP: 0010:[<ffffffffa05ec9ac>]  [<ffffffffa05ec9ac>] sctp_packet_transmit+0x63c/0x730 [sctp]
    RSP: 0018:ffff880127c037b8  EFLAGS: 00010296
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 00000015ff66b480
    RDX: 00000015ff66b400 RSI: ffff880127c17200 RDI: ffff880123403700
    RBP: ffff880127c03888 R08: 0000000000017200 R09: ffffffff814625af
    R10: ffffea00047e4680 R11: 00000000ffffff80 R12: ffff8800b0d38a28
    R13: ffff8800b0d38a28 R14: ffff8800b3e88000 R15: ffffffffa05f24e0
    FS:  0000000000000000(0000) GS:ffff880127c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    CR2: 0000000000000020 CR3: 00000000c855b000 CR4: 00000000000007f0
    Stack:
     ffff880127c03910 ffff8800b0d38a28 ffffffff8189d240 ffff88011f91b400
     ffff880127c03828 ffffffffa05c94c5 0000000000000000 ffff8800baa1c520
     0000000000000000 0000000000000001 0000000000000000 0000000000000000
    Call Trace:
     <IRQ>
     [<ffffffffa05c94c5>] ? sctp_sf_tabort_8_4_8.isra.20+0x85/0x140 [sctp]
     [<ffffffffa05d6b42>] ? sctp_transport_put+0x52/0x80 [sctp]
     [<ffffffffa05d0bfc>] sctp_do_sm+0xb8c/0x19a0 [sctp]
     [<ffffffff810b0e00>] ? trigger_load_balance+0x90/0x210
     [<ffffffff810e0329>] ? update_process_times+0x59/0x60
     [<ffffffff812c7a40>] ? timerqueue_add+0x60/0xb0
     [<ffffffff810e0549>] ? enqueue_hrtimer+0x29/0xa0
     [<ffffffff8101f599>] ? read_tsc+0x9/0x10
     [<ffffffff8116d4b5>] ? put_page+0x55/0x60
     [<ffffffff810ee1ad>] ? clockevents_program_event+0x6d/0x100
     [<ffffffff81462b68>] ? skb_free_head+0x58/0x80
     [<ffffffffa029a10b>] ? chksum_update+0x1b/0x27 [crc32c_generic]
     [<ffffffff81283f3e>] ? crypto_shash_update+0xce/0xf0
     [<ffffffffa05d3993>] sctp_endpoint_bh_rcv+0x113/0x280 [sctp]
     [<ffffffffa05dd4e6>] sctp_inq_push+0x46/0x60 [sctp]
     [<ffffffffa05ed7a0>] sctp_rcv+0x880/0x910 [sctp]
     [<ffffffffa05ecb50>] ? sctp_packet_transmit_chunk+0xb0/0xb0 [sctp]
     [<ffffffffa05ecb70>] ? sctp_csum_update+0x20/0x20 [sctp]
     [<ffffffff814b05a5>] ? ip_route_input_noref+0x235/0xd30
     [<ffffffff81051d6b>] ? ack_ioapic_level+0x7b/0x150
     [<ffffffff814b27be>] ip_local_deliver_finish+0xae/0x210
     [<ffffffff814b2e15>] ip_local_deliver+0x35/0x90
     [<ffffffff814b2a15>] ip_rcv_finish+0xf5/0x370
     [<ffffffff814b3128>] ip_rcv+0x2b8/0x3a0
     [<ffffffff81474193>] __netif_receive_skb_core+0x763/0xa50
     [<ffffffff81476c28>] __netif_receive_skb+0x18/0x60
     [<ffffffff81476cb0>] netif_receive_skb_internal+0x40/0xd0
     [<ffffffff814776c8>] napi_gro_receive+0xe8/0x120
     [<ffffffffa03946aa>] rtl8169_poll+0x2da/0x660 [r8169]
     [<ffffffff8147896a>] net_rx_action+0x21a/0x360
     [<ffffffff81078dc1>] __do_softirq+0xe1/0x2d0
     [<ffffffff8107912d>] irq_exit+0xad/0xb0
     [<ffffffff8157d158>] do_IRQ+0x58/0xf0
     [<ffffffff8157b06d>] common_interrupt+0x6d/0x6d
     <EOI>
     [<ffffffff810e1218>] ? hrtimer_start+0x18/0x20
     [<ffffffffa05d65f9>] ? sctp_transport_destroy_rcu+0x29/0x30 [sctp]
     [<ffffffff81020c50>] ? mwait_idle+0x60/0xa0
     [<ffffffff810216ef>] arch_cpu_idle+0xf/0x20
     [<ffffffff810b731c>] cpu_startup_entry+0x3ec/0x480
     [<ffffffff8156b365>] rest_init+0x85/0x90
     [<ffffffff818eb035>] start_kernel+0x48b/0x4ac
     [<ffffffff818ea120>] ? early_idt_handlers+0x120/0x120
     [<ffffffff818ea339>] x86_64_start_reservations+0x2a/0x2c
     [<ffffffff818ea49c>] x86_64_start_kernel+0x161/0x184
    Code: 90 48 8b 80 b8 00 00 00 48 89 85 70 ff ff ff 48 83 bd 70 ff ff ff 00 0f 85 cd fa ff ff 48 89 df 31 db e8 18 63 e7 e0 48 8b 45 80 <48> 8b 40 20 48 8b 40 30 48 8b 80 68 01 00 00 65 48 ff 40 78 e9
    RIP  [<ffffffffa05ec9ac>] sctp_packet_transmit+0x63c/0x730 [sctp]
     RSP <ffff880127c037b8>
    CR2: 0000000000000020
    ---[ end trace 5aec7fd2dc983574 ]---
    Kernel panic - not syncing: Fatal exception in interrupt
    Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
    drm_kms_helper: panic occurred, switching back to text console
    ---[ end Kernel panic - not syncing: Fatal exception in interrupt
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Acked-by: Vlad Yasevich <vyasevich@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e2a3d667c4c9ca494c73f5930365240a31c4eb0
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Jun 26 07:32:29 2015 +0200

    bnx2x: fix lockdep splat
    
    [ Upstream commit d53c66a5b80698620f7c9ba2372fff4017e987b8 ]
    
    Michel reported following lockdep splat
    
    [   44.718117] INFO: trying to register non-static key.
    [   44.723081] the code is fine but needs lockdep annotation.
    [   44.728559] turning off the locking correctness validator.
    [   44.734036] CPU: 8 PID: 5483 Comm: ethtool Not tainted 4.1.0
    [   44.770289] Call Trace:
    [   44.772741]  [<ffffffff816eb1cd>] dump_stack+0x4c/0x65
    [   44.777879]  [<ffffffff8111d921>] ? console_unlock+0x1f1/0x510
    [   44.783708]  [<ffffffff811121f5>] __lock_acquire+0x1d05/0x1f10
    [   44.789538]  [<ffffffff8111370a>] ? mark_held_locks+0x6a/0x90
    [   44.795276]  [<ffffffff81113835>] ? trace_hardirqs_on_caller+0x105/0x1d0
    [   44.801967]  [<ffffffff8111390d>] ? trace_hardirqs_on+0xd/0x10
    [   44.807793]  [<ffffffff811330fa>] ? hrtimer_try_to_cancel+0x4a/0x250
    [   44.814142]  [<ffffffff81112ba6>] lock_acquire+0xb6/0x290
    [   44.819537]  [<ffffffff810d6675>] ? flush_work+0x5/0x280
    [   44.824844]  [<ffffffff810d66ad>] flush_work+0x3d/0x280
    [   44.830061]  [<ffffffff810d6675>] ? flush_work+0x5/0x280
    [   44.835366]  [<ffffffff816f3c43>] ? schedule_hrtimeout_range+0x13/0x20
    [   44.841889]  [<ffffffff8112ec9b>] ? usleep_range+0x4b/0x50
    [   44.847365]  [<ffffffff8111370a>] ? mark_held_locks+0x6a/0x90
    [   44.853102]  [<ffffffff810d8585>] ? __cancel_work_timer+0x105/0x1c0
    [   44.859359]  [<ffffffff81113835>] ? trace_hardirqs_on_caller+0x105/0x1d0
    [   44.866045]  [<ffffffff810d851f>] __cancel_work_timer+0x9f/0x1c0
    [   44.872048]  [<ffffffffa0010982>] ? bnx2x_func_stop+0x42/0x90 [bnx2x]
    [   44.878481]  [<ffffffff810d8670>] cancel_work_sync+0x10/0x20
    [   44.884134]  [<ffffffffa00259e5>] bnx2x_chip_cleanup+0x245/0x730 [bnx2x]
    [   44.890829]  [<ffffffff8110ce02>] ? up+0x32/0x50
    [   44.895439]  [<ffffffff811306b5>] ? del_timer_sync+0x5/0xd0
    [   44.901005]  [<ffffffffa005596d>] bnx2x_nic_unload+0x20d/0x8e0 [bnx2x]
    [   44.907527]  [<ffffffff811f1aef>] ? might_fault+0x5f/0xb0
    [   44.912921]  [<ffffffffa005851c>] bnx2x_reload_if_running+0x2c/0x50 [bnx2x]
    [   44.919879]  [<ffffffffa005a3c5>] bnx2x_set_ringparam+0x2b5/0x460 [bnx2x]
    [   44.926664]  [<ffffffff815d498b>] dev_ethtool+0x55b/0x1c40
    [   44.932148]  [<ffffffff815dfdc7>] ? rtnl_lock+0x17/0x20
    [   44.937364]  [<ffffffff815e7f8b>] dev_ioctl+0x17b/0x630
    [   44.942582]  [<ffffffff815abf8d>] sock_do_ioctl+0x5d/0x70
    [   44.947972]  [<ffffffff815ac013>] sock_ioctl+0x73/0x280
    [   44.953192]  [<ffffffff8124c1c8>] do_vfs_ioctl+0x88/0x5b0
    [   44.958587]  [<ffffffff8110d0b3>] ? up_read+0x23/0x40
    [   44.963631]  [<ffffffff812584cc>] ? __fget_light+0x6c/0xa0
    [   44.969105]  [<ffffffff8124c781>] SyS_ioctl+0x91/0xb0
    [   44.974149]  [<ffffffff816f4dd7>] system_call_fastpath+0x12/0x6f
    
    As bnx2x_init_ptp() is only called if bp->flags contains PTP_SUPPORTED,
    we also need to guard bnx2x_stop_ptp() with same condition, otherwise
    ptp_task workqueue is not initialized and kernel barfs on
    cancel_work_sync()
    
    Fixes: eeed018cbfa30 ("bnx2x: Add timestamping and PTP hardware clock support")
    Reported-by: Michel Lespinasse <walken@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Michal Kalderon <Michal.Kalderon@qlogic.com>
    Cc: Ariel Elior <Ariel.Elior@qlogic.com>
    Cc: Yuval Mintz <Yuval.Mintz@qlogic.com>
    Cc: David Decotigny <decot@google.com>
    Acked-by: Sony Chacko <sony.chacko@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c10c84170c40bf3d4a9953ae5a2ffe59ad736d4
Author: Mugunthan V N <mugunthanvnm@ti.com>
Date:   Thu Jun 25 22:21:02 2015 +0530

    net: phy: fix phy link up when limiting speed via device tree
    
    [ Upstream commit eb686231fce3770299760f24fdcf5ad041f44153 ]
    
    When limiting phy link speed using "max-speed" to 100mbps or less on a
    giga bit phy, phy never completes auto negotiation and phy state
    machine is held in PHY_AN. Fixing this issue by comparing the giga
    bit advertise though phydev->supported doesn't have it but phy has
    BMSR_ESTATEN set. So that auto negotiation is restarted as old and
    new advertise are different and link comes up fine.
    
    Signed-off-by: Mugunthan V N <mugunthanvnm@ti.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62a9ad17a245002cc611fc4667c2919ef422d8ee
Author: Or Gerlitz <ogerlitz@mellanox.com>
Date:   Thu Jun 25 11:29:44 2015 +0300

    mlx4: Disable HA for SRIOV PF RoCE devices
    
    [ Upstream commit 7254acffeeec3c0a75b9c5364c29a6eb00014930 ]
    
    When in HA mode, the driver exposes an IB (RoCE) device instance with only
    one port. Under SRIOV, the existing implementation doesn't go well with
    the PF RoCE driver's role of Special QPs Para-Virtualization, etc.
    
    As such, disable HA for the mlx4 PF RoCE device in SRIOV mode.
    
    Fixes: a57500903093 ('IB/mlx4: Add port aggregation support')
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b74080050336e29a82abc2a9b2e1f901485a362
Author: Ido Shamay <idos@mellanox.com>
Date:   Thu Jun 25 11:29:43 2015 +0300

    net/mlx4_en: Fix wrong csum complete report when rxvlan offload is disabled
    
    [ Upstream commit 79a258526ce1051cb9684018c25a89d51ac21be8 ]
    
    The check_csum() function relied on hwtstamp_rx_filter to know if rxvlan
    offload is disabled. This is wrong since rxvlan offload can be switched
    on/off regardless of hwtstamp_rx_filter.
    
    Also moved check_csum to query CQE information to identify VLAN packets
    and removed the check of IP packets, since it has been validated before.
    
    Fixes: f8c6455bb04b ('net/mlx4_en: Extend checksum offloading by CHECKSUM COMPLETE')
    Signed-off-by: Ido Shamay <idos@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a9aa8ab0c706b3d2770a3996c9e63f08074c855
Author: Ido Shamay <idos@mellanox.com>
Date:   Thu Jun 25 11:29:42 2015 +0300

    net/mlx4_en: Wake TX queues only when there's enough room
    
    [ Upstream commit 488a9b48e398b157703766e2cd91ea45ac6997c5 ]
    
    Indication of a single completed packet, marked by txbbs_skipped
    being bigger then zero, in not enough in order to wake up a
    stopped TX queue. The completed packet may contain a single TXBB,
    while next packet to be sent (after the wake up) may have multiple
    TXBBs (LSO/TSO packets for example), causing overflow in queue followed
    by WQE corruption and TX queue timeout.
    Instead, wake the stopped queue only when there's enough room for the
    worst case (maximum sized WQE) packet that we should need to handle after
    the queue is opened again.
    
    Also created an helper routine - mlx4_en_is_tx_ring_full, which checks
    if the current TX ring is full or not. It provides better code readability
    and removes code duplication.
    
    Signed-off-by: Ido Shamay <idos@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3f6617f6b90f2e27ee7362f8a2f4063c7eac6a7
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Thu Jun 25 11:29:41 2015 +0300

    net/mlx4_en: Release TX QP when destroying TX ring
    
    [ Upstream commit 0eb08514fdbdcd16fd6870680cd638f203662e9d ]
    
    TX ring QP wasn't released at mlx4_en_destroy_tx_ring. Instead, the code
    used the deprecated base_tx_qpn field. Move TX QP release to
    mlx4_en_destroy_tx_ring and remove the base_tx_qpn field.
    
    Fixes: ddae0349fdb7 ('net/mlx4: Change QP allocation scheme')
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66634bb1c4f1eda70583eddaf8c5e980f05a8fb9
Author: Julian Anastasov <ja@ssi.bg>
Date:   Tue Jun 23 08:34:39 2015 +0300

    ip: report the original address of ICMP messages
    
    [ Upstream commit 34b99df4e6256ddafb663c6de0711dceceddfe0e ]
    
    ICMP messages can trigger ICMP and local errors. In this case
    serr->port is 0 and starting from Linux 4.0 we do not return
    the original target address to the error queue readers.
    Add function to define which errors provide addr_offset.
    With this fix my ping command is not silent anymore.
    
    Fixes: c247f0534cc5 ("ip: fix error queue empty skb handling")
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fc8b947b364ceb6d91e5b6f3e3d22cd9a013ac0
Author: Palik, Imre <imrep@amazon.de>
Date:   Fri Jun 19 14:21:51 2015 +0200

    xen-netback: fix a BUG() during initialization
    
    [ Upstream commit 12b322ac85208de564ecf23aa754d796a91de21f ]
    
    Commit edafc132baac ("xen-netback: making the bandwidth limiter runtime settable")
    introduced the capability to change the bandwidth rate limit at runtime.
    But it also introduced a possible crashing bug.
    
    If netback receives two XenbusStateConnected without getting the
    hotplug-status watch firing in between, then it will try to register the
    watches for the rate limiter again.  But this triggers a BUG() in the watch
    registration code.
    
    The fix modifies connect() to remove the possibly existing packet-rate
    watches before trying to install those watches.  This behaviour is in line
    with how connect() deals with the hotplug-status watch.
    
    Signed-off-by: Imre Palik <imrep@amazon.de>
    Cc: Matt Wilson <msw@amazon.com>
    Acked-by: Wei Liu <wei.liu2@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c31967d447989b85b631dda39487a319df21e03a
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Thu Jun 18 09:15:34 2015 -0700

    tcp: Do not call tcp_fastopen_reset_cipher from interrupt context
    
    [ Upstream commit dfea2aa654243f70dc53b8648d0bbdeec55a7df1 ]
    
    tcp_fastopen_reset_cipher really cannot be called from interrupt
    context. It allocates the tcp_fastopen_context with GFP_KERNEL and
    calls crypto_alloc_cipher, which allocates all kind of stuff with
    GFP_KERNEL.
    
    Thus, we might sleep when the key-generation is triggered by an
    incoming TFO cookie-request which would then happen in interrupt-
    context, as shown by enabling CONFIG_DEBUG_ATOMIC_SLEEP:
    
    [   36.001813] BUG: sleeping function called from invalid context at mm/slub.c:1266
    [   36.003624] in_atomic(): 1, irqs_disabled(): 0, pid: 1016, name: packetdrill
    [   36.004859] CPU: 1 PID: 1016 Comm: packetdrill Not tainted 4.1.0-rc7 #14
    [   36.006085] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    [   36.008250]  00000000000004f2 ffff88007f8838a8 ffffffff8171d53a ffff880075a084a8
    [   36.009630]  ffff880075a08000 ffff88007f8838c8 ffffffff810967d3 ffff88007f883928
    [   36.011076]  0000000000000000 ffff88007f8838f8 ffffffff81096892 ffff88007f89be00
    [   36.012494] Call Trace:
    [   36.012953]  <IRQ>  [<ffffffff8171d53a>] dump_stack+0x4f/0x6d
    [   36.014085]  [<ffffffff810967d3>] ___might_sleep+0x103/0x170
    [   36.015117]  [<ffffffff81096892>] __might_sleep+0x52/0x90
    [   36.016117]  [<ffffffff8118e887>] kmem_cache_alloc_trace+0x47/0x190
    [   36.017266]  [<ffffffff81680d82>] ? tcp_fastopen_reset_cipher+0x42/0x130
    [   36.018485]  [<ffffffff81680d82>] tcp_fastopen_reset_cipher+0x42/0x130
    [   36.019679]  [<ffffffff81680f01>] tcp_fastopen_init_key_once+0x61/0x70
    [   36.020884]  [<ffffffff81680f2c>] __tcp_fastopen_cookie_gen+0x1c/0x60
    [   36.022058]  [<ffffffff816814ff>] tcp_try_fastopen+0x58f/0x730
    [   36.023118]  [<ffffffff81671788>] tcp_conn_request+0x3e8/0x7b0
    [   36.024185]  [<ffffffff810e3872>] ? __module_text_address+0x12/0x60
    [   36.025327]  [<ffffffff8167b2e1>] tcp_v4_conn_request+0x51/0x60
    [   36.026410]  [<ffffffff816727e0>] tcp_rcv_state_process+0x190/0xda0
    [   36.027556]  [<ffffffff81661f97>] ? __inet_lookup_established+0x47/0x170
    [   36.028784]  [<ffffffff8167c2ad>] tcp_v4_do_rcv+0x16d/0x3d0
    [   36.029832]  [<ffffffff812e6806>] ? security_sock_rcv_skb+0x16/0x20
    [   36.030936]  [<ffffffff8167cc8a>] tcp_v4_rcv+0x77a/0x7b0
    [   36.031875]  [<ffffffff816af8c3>] ? iptable_filter_hook+0x33/0x70
    [   36.032953]  [<ffffffff81657d22>] ip_local_deliver_finish+0x92/0x1f0
    [   36.034065]  [<ffffffff81657f1a>] ip_local_deliver+0x9a/0xb0
    [   36.035069]  [<ffffffff81657c90>] ? ip_rcv+0x3d0/0x3d0
    [   36.035963]  [<ffffffff81657569>] ip_rcv_finish+0x119/0x330
    [   36.036950]  [<ffffffff81657ba7>] ip_rcv+0x2e7/0x3d0
    [   36.037847]  [<ffffffff81610652>] __netif_receive_skb_core+0x552/0x930
    [   36.038994]  [<ffffffff81610a57>] __netif_receive_skb+0x27/0x70
    [   36.040033]  [<ffffffff81610b72>] process_backlog+0xd2/0x1f0
    [   36.041025]  [<ffffffff81611482>] net_rx_action+0x122/0x310
    [   36.042007]  [<ffffffff81076743>] __do_softirq+0x103/0x2f0
    [   36.042978]  [<ffffffff81723e3c>] do_softirq_own_stack+0x1c/0x30
    
    This patch moves the call to tcp_fastopen_init_key_once to the places
    where a listener socket creates its TFO-state, which always happens in
    user-context (either from the setsockopt, or implicitly during the
    listen()-call)
    
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Fixes: 222e83d2e0ae ("tcp: switch tcp_fastopen key generation to net_get_random_once")
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bc31b1e80a716b903cf40ae4d679c820f71d518
Author: Stas Sergeev <stsp@list.ru>
Date:   Thu Jun 18 18:36:03 2015 +0300

    mvneta: add forgotten initialization of autonegotiation bits
    
    [ Upstream commit 538761b794c1542f1c6e31eadd9d7aae118889f7 ]
    
    The commit 898b2970e2c9 ("mvneta: implement SGMII-based in-band link state
    signaling")
    changed mvneta_adjust_link() so that it does not clear the auto-negotiation
    bits in MVNETA_GMAC_AUTONEG_CONFIG register. This was necessary for
    auto-negotiation mode to work.
    Unfortunately I haven't checked if these bits are ever initialized.
    It appears they are not.
    This patch adds the missing initialization of the auto-negotiation bits
    in the MVNETA_GMAC_AUTONEG_CONFIG register.
    It fixes the following regression:
    https://www.mail-archive.com/netdev@vger.kernel.org/msg67928.html
    
    Since the patch was tested to fix a regression, it should be applied to
    stable tree.
    
    Tested-by: Arnaud Ebalard <arno@natisbad.org>
    
    CC: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    CC: Florian Fainelli <f.fainelli@gmail.com>
    CC: netdev@vger.kernel.org
    CC: linux-kernel@vger.kernel.org
    CC: stable@vger.kernel.org
    
    Signed-off-by: Stas Sergeev <stsp@users.sourceforge.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80b856db9f9e1dbaf20a24020f8ade95c14f7477
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Jun 17 13:54:54 2015 +0200

    mac80211: fix locking in update_vlan_tailroom_need_count()
    
    [ Upstream commit 51f458d9612177f69c2e2c437034ae15f93078e7 ]
    
    Unfortunately, Michal's change to fix AP_VLAN crypto tailroom
    caused a locking issue that was reported by lockdep, but only
    in a few cases - the issue was a classic ABBA deadlock caused
    by taking the mtx after the key_mtx, where normally they're
    taken the other way around.
    
    As the key mutex protects the field in question (I'm adding a
    few annotations to make that clear) only the iteration needs
    to be protected, but we can also iterate the interface list
    with just RCU protection while holding the key mutex.
    
    Fixes: f9dca80b98ca ("mac80211: fix AP_VLAN crypto tailroom calculation")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 914b0ef228c97dfea025091428f6c7809c9d38ad
Author: Julian Anastasov <ja@ssi.bg>
Date:   Tue Jun 16 22:56:39 2015 +0300

    neigh: do not modify unlinked entries
    
    [ Upstream commit 2c51a97f76d20ebf1f50fef908b986cb051fdff9 ]
    
    The lockless lookups can return entry that is unlinked.
    Sometimes they get reference before last neigh_cleanup_and_release,
    sometimes they do not need reference. Later, any
    modification attempts may result in the following problems:
    
    1. entry is not destroyed immediately because neigh_update
    can start the timer for dead entry, eg. on change to NUD_REACHABLE
    state. As result, entry lives for some time but is invisible
    and out of control.
    
    2. __neigh_event_send can run in parallel with neigh_destroy
    while refcnt=0 but if timer is started and expired refcnt can
    reach 0 for second time leading to second neigh_destroy and
    possible crash.
    
    Thanks to Eric Dumazet and Ying Xue for their work and analyze
    on the __neigh_event_send change.
    
    Fixes: 767e97e1e0db ("neigh: RCU conversion of struct neighbour")
    Fixes: a263b3093641 ("ipv4: Make neigh lookups directly in output packet path.")
    Fixes: 6fd6ce2056de ("ipv6: Do not depend on rt->n in ip6_finish_output2().")
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c330edb4b31fdf18c6a6c4d1d9b482632c3925b
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Jun 17 15:59:34 2015 -0400

    packet: avoid out of bounds read in round robin fanout
    
    [ Upstream commit 468479e6043c84f5a65299cc07cb08a22a28c2b1 ]
    
    PACKET_FANOUT_LB computes f->rr_cur such that it is modulo
    f->num_members. It returns the old value unconditionally, but
    f->num_members may have changed since the last store. Ensure
    that the return value is always < num.
    
    When modifying the logic, simplify it further by replacing the loop
    with an unconditional atomic increment.
    
    Fixes: dc99f600698d ("packet: Add fanout support.")
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7884e43677ba8618ae2f1ead7b96b215b409e20
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jun 16 07:59:11 2015 -0700

    packet: read num_members once in packet_rcv_fanout()
    
    [ Upstream commit f98f4514d07871da7a113dd9e3e330743fd70ae4 ]
    
    We need to tell compiler it must not read f->num_members multiple
    times. Otherwise testing if num is not zero is flaky, and we could
    attempt an invalid divide by 0 in fanout_demux_cpu()
    
    Note bug was present in packet_rcv_fanout_hash() and
    packet_rcv_fanout_lb() but final 3.1 had a simple location
    after commit 95ec3eb417115fb ("packet: Add 'cpu' fanout policy.")
    
    Fixes: dc99f600698dc ("packet: Add fanout support.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08be544ef5d8453b7778bd57f3da8eeebcf1cd65
Author: Nikolay Aleksandrov <razor@blackwall.org>
Date:   Mon Jun 15 20:28:51 2015 +0300

    bridge: fix br_stp_set_bridge_priority race conditions
    
    [ Upstream commit 2dab80a8b486f02222a69daca6859519e05781d9 ]
    
    After the ->set() spinlocks were removed br_stp_set_bridge_priority
    was left running without any protection when used via sysfs. It can
    race with port add/del and could result in use-after-free cases and
    corrupted lists. Tested by running port add/del in a loop with stp
    enabled while setting priority in a loop, crashes are easily
    reproducible.
    The spinlocks around sysfs ->set() were removed in commit:
    14f98f258f19 ("bridge: range check STP parameters")
    There's also a race condition in the netlink priority support that is
    fixed by this change, but it was introduced recently and the fixes tag
    covers it, just in case it's needed the commit is:
    af615762e972 ("bridge: add ageing_time, stp_state, priority over netlink")
    
    Signed-off-by: Nikolay Aleksandrov <razor@blackwall.org>
    Fixes: 14f98f258f19 ("bridge: range check STP parameters")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd0a0d20ebd08f250af9023530b5de4bc433ebaa
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Fri Jun 12 10:16:41 2015 -0300

    sctp: fix ASCONF list handling
    
    [ Upstream commit 2d45a02d0166caf2627fe91897c6ffc3b19514c4 ]
    
    ->auto_asconf_splist is per namespace and mangled by functions like
    sctp_setsockopt_auto_asconf() which doesn't guarantee any serialization.
    
    Also, the call to inet_sk_copy_descendant() was backuping
    ->auto_asconf_list through the copy but was not honoring
    ->do_auto_asconf, which could lead to list corruption if it was
    different between both sockets.
    
    This commit thus fixes the list handling by using ->addr_wq_lock
    spinlock to protect the list. A special handling is done upon socket
    creation and destruction for that. Error handlig on sctp_init_sock()
    will never return an error after having initialized asconf, so
    sctp_destroy_sock() can be called without addrq_wq_lock. The lock now
    will be take on sctp_close_sock(), before locking the socket, so we
    don't do it in inverse order compared to sctp_addr_wq_timeout_handler().
    
    Instead of taking the lock on sctp_sock_migrate() for copying and
    restoring the list values, it's preferred to avoid rewritting it by
    implementing sctp_copy_descendant().
    
    Issue was found with a test application that kept flipping sysctl
    default_auto_asconf on and off, but one could trigger it by issuing
    simultaneous setsockopt() calls on multiple sockets or by
    creating/destroying sockets fast enough. This is only triggerable
    locally.
    
    Fixes: 9f7d653b67ae ("sctp: Add Auto-ASCONF support (core).")
    Reported-by: Ji Jianwen <jiji@redhat.com>
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Suggested-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a2cddd17ebe5e76a796c25e11cdd5518310eabc
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Sun Jun 21 18:50:44 2015 +0200

    can: fix loss of CAN frames in raw_rcv
    
    commit 36c01245eb8046c16eee6431e7dbfbb302635fa8 upstream.
    
    As reported by Manfred Schlaegl here
    
       http://marc.info/?l=linux-netdev&m=143482089824232&w=2
    
    commit 514ac99c64b "can: fix multiple delivery of a single CAN frame for
    overlapping CAN filters" requires the skb->tstamp to be set to check for
    identical CAN skbs.
    
    As net timestamping is influenced by several players (netstamp_needed and
    netdev_tstamp_prequeue) Manfred missed a proper timestamp which leads to
    CAN frame loss.
    
    As skb timestamping became now mandatory for CAN related skbs this patch
    makes sure that received CAN skbs always have a proper timestamp set.
    Maybe there's a better solution in the future but this patch fixes the
    CAN frame loss so far.
    
    Reported-by: Manfred Schlaegl <manfred.schlaegl@gmx.at>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa0b8c72f5c1e0208bfafb383b535bdc9d3b2c6b
Author: Bandan Das <bsd@redhat.com>
Date:   Thu Jun 11 02:05:33 2015 -0400

    KVM: nSVM: Check for NRIPS support before updating control field
    
    commit f104765b4f81fd74d69e0eb161e89096deade2db upstream.
    
    If hardware doesn't support DecodeAssist - a feature that provides
    more information about the intercept in the VMCB, KVM decodes the
    instruction and then updates the next_rip vmcb control field.
    However, NRIP support itself depends on cpuid Fn8000_000A_EDX[NRIPS].
    Since skip_emulated_instruction() doesn't verify nrip support
    before accepting control.next_rip as valid, avoid writing this
    field if support isn't present.
    
    Signed-off-by: Bandan Das <bsd@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d281572f2be11afa36e1534da43890cb9a130cc
Author: Sebastien Szymanski <sebastien.szymanski@armadeus.com>
Date:   Wed May 20 16:30:37 2015 +0200

    ARM: clk-imx6q: refine sata's parent
    
    commit da946aeaeadcd24ff0cda9984c6fb8ed2bfd462a upstream.
    
    According to IMX6D/Q RM, table 18-3, sata clock's parent is ahb, not ipg.
    
    Signed-off-by: Sebastien Szymanski <sebastien.szymanski@armadeus.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@freescale.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    [dirk.behme: Adjust moved file]
    Signed-off-by: Dirk Behme <dirk.behme@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bdbb8968e9e7e6b9619076d1867da1c0cfec2c7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Mar 8 21:53:42 2015 +0100

    ARM: dts: sunxi: Adjust touchscreen compatible for sun5i and later
    
    commit 8bf1b9b3d90194a174493febc731f7783f2adf1a upstream.
    
    The touchscreen controller in the A13 and later has a different temperature
    curve than the one in the original A10, change the compatible for the A13 and
    later so that the kernel will use the correct curve.
    
    Reported-by: Tong Zhang <lovewilliam@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
