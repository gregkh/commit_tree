commit 1e4d47787a21e0c69182430628613e5599c412f3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Mar 12 06:45:50 2017 +0100

    Linux 4.10.2

commit 92d90f089848b550570f1c5ffa9e807033ae5f28
Author: Yan, Zheng <zyan@redhat.com>
Date:   Thu Jan 19 11:21:29 2017 +0800

    ceph: update readpages osd request according to size of pages
    
    commit d641df819db8b80198fd85d9de91137e8a823b07 upstream.
    
    add_to_page_cache_lru() can fails, so the actual pages to read
    can be smaller than the initial size of osd request. We need to
    update osd request size in that case.
    
    Signed-off-by: Yan, Zheng <zyan@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 519f6fa2addb34a48d0e0bc8c8744010940c6e78
Author: James Smart <jsmart2021@gmail.com>
Date:   Sun Feb 12 13:52:25 2017 -0800

    scsi: lpfc: Correct WQ creation for pagesize
    
    commit 8ea73db486cda442f0671f4bc9c03a76be398a28 upstream.
    
    Correct WQ creation for pagesize
    
    The driver was calculating the adapter command pagesize indicator from
    the system pagesize. However, the buffers the driver allocates are only
    one size (SLI4_PAGE_SIZE), so no calculation was necessary.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 209cf1f25d0dcc25f47599aca605fa1c9f166035
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Thu Dec 15 12:39:22 2016 +0100

    MIPS: IP22: Fix build error due to binutils 2.25 uselessnes.
    
    commit ae2f5e5ed04a17c1aa1f0a3714c725e12c21d2a9 upstream.
    
    Fix the following build error with binutils 2.25.
    
      CC      arch/mips/mm/sc-ip22.o
    {standard input}: Assembler messages:
    {standard input}:132: Error: number (0x9000000080000000) larger than 32 bits
    {standard input}:159: Error: number (0x9000000080000000) larger than 32 bits
    {standard input}:200: Error: number (0x9000000080000000) larger than 32 bits
    scripts/Makefile.build:293: recipe for target 'arch/mips/mm/sc-ip22.o' failed
    make[1]: *** [arch/mips/mm/sc-ip22.o] Error 1
    
    MIPS has used .set mips3 to temporarily switch the assembler to 64 bit
    mode in 64 bit kernels virtually forever.  Binutils 2.25 broke this
    behavious partially by happily accepting 64 bit instructions in .set mips3
    mode but puking on 64 bit constants when generating 32 bit ELF.  Binutils
    2.26 restored the old behaviour again.
    
    Fix build with binutils 2.25 by open coding the offending
    
            dli $1, 0x9000000080000000
    
    as
    
            li      $1, 0x9000
            dsll    $1, $1, 48
    
    which is ugly be the only thing that will build on all binutils vintages.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b647284905d655891907567bb3df2e2382927b96
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Thu Dec 15 12:27:21 2016 +0100

    MIPS: IP22: Reformat inline assembler code to modern standards.
    
    commit f9f1c8db1c37253805eaa32265e1e1af3ae7d0a4 upstream.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84c131c8c9d00ef9d589c18f00d031ecd0440301
Author: Luis R. Rodriguez <mcgrof@kernel.org>
Date:   Fri Feb 10 14:06:22 2017 -0800

    module: fix memory leak on early load_module() failures
    
    commit a5544880aff90baf1bd4443ac7ff65182213ffcd upstream.
    
    While looking for early possible module loading failures I was
    able to reproduce a memory leak possible with kmemleak. There
    are a few rare ways to trigger a failure:
    
      o we've run into a failure while processing kernel parameters
        (parse_args() returns an error)
      o mod_sysfs_setup() fails
      o we're a live patch module and copy_module_elf() fails
    
    Chances of running into this issue is really low.
    
    kmemleak splat:
    
    unreferenced object 0xffff9f2c4ada1b00 (size 32):
      comm "kworker/u16:4", pid 82, jiffies 4294897636 (age 681.816s)
      hex dump (first 32 bytes):
        6d 65 6d 73 74 69 63 6b 30 00 00 00 00 00 00 00  memstick0.......
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8c6cfeba>] kmemleak_alloc+0x4a/0xa0
        [<ffffffff8c200046>] __kmalloc_track_caller+0x126/0x230
        [<ffffffff8c1bc581>] kstrdup+0x31/0x60
        [<ffffffff8c1bc5d4>] kstrdup_const+0x24/0x30
        [<ffffffff8c3c23aa>] kvasprintf_const+0x7a/0x90
        [<ffffffff8c3b5481>] kobject_set_name_vargs+0x21/0x90
        [<ffffffff8c4fbdd7>] dev_set_name+0x47/0x50
        [<ffffffffc07819e5>] memstick_check+0x95/0x33c [memstick]
        [<ffffffff8c09c893>] process_one_work+0x1f3/0x4b0
        [<ffffffff8c09cb98>] worker_thread+0x48/0x4e0
        [<ffffffff8c0a2b79>] kthread+0xc9/0xe0
        [<ffffffff8c6dab5f>] ret_from_fork+0x1f/0x40
        [<ffffffffffffffff>] 0xffffffffffffffff
    
    Fixes: e180a6b7759a ("param: fix charp parameters set via sysfs")
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Reviewed-by: Aaron Tomlin <atomlin@redhat.com>
    Reviewed-by: Rusty Russell <rusty@rustcorp.com.au>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Signed-off-by: Jessica Yu <jeyu@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf1c6beafa753a0ef17892be2b7fdf0c52a3fee5
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Wed Feb 22 10:42:02 2017 +0530

    powerpc/mm/hash: Always clear UPRT and Host Radix bits when setting up CPU
    
    commit fda2d27db6eae5c2468f9e4657539b72bbc238bb upstream.
    
    We will set LPCR with correct value for radix during int. This make sure we
    start with a sanitized value of LPCR. In case of kexec, cpus can have LPCR
    value based on the previous translation mode we were running.
    
    Fixes: fe036a0605d60 ("powerpc/64/kexec: Fix MMU cleanup on radix")
    Acked-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 543fd2ab74dc817a6e1fbcc14480b5caa6aa666f
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Tue Feb 7 00:09:27 2017 +0530

    powerpc/mm: Add MMU_FTR_KERNEL_RO to possible feature mask
    
    commit a5ecdad4847897007399d7a14c9109b65ce4c9b7 upstream.
    
    Without this we will always find the feature disabled.
    
    Fixes: 984d7a1ec6 ("powerpc/mm: Fixup kernel read only mapping")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ffde229727ea9ca8506d652782cec783e4fd5cb
Author: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
Date:   Tue Nov 22 14:55:59 2016 +0530

    powerpc/xmon: Fix data-breakpoint
    
    commit c21a493a2b44650707d06741601894329486f2ad upstream.
    
    Currently xmon data-breakpoint feature is broken.
    
    Whenever there is a watchpoint match occurs, hw_breakpoint_handler will
    be called by do_break via notifier chains mechanism. If watchpoint is
    registered by xmon, hw_breakpoint_handler won't find any associated
    perf_event and returns immediately with NOTIFY_STOP. Similarly, do_break
    also returns without notifying to xmon.
    
    Solve this by returning NOTIFY_DONE when hw_breakpoint_handler does not
    find any perf_event associated with matched watchpoint, rather than
    NOTIFY_STOP, which tells the core code to continue calling the other
    breakpoint handlers including the xmon one.
    
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 737af93c3dced0bc0b1bdfee58f43d23b0dc3e8a
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Feb 8 17:00:10 2017 -0500

    xprtrdma: Reduce required number of send SGEs
    
    commit 16f906d66cd76fb9895cbc628f447532a7ac1faa upstream.
    
    The MAX_SEND_SGES check introduced in commit 655fec6987be
    ("xprtrdma: Use gathered Send for large inline messages") fails
    for devices that have a small max_sge.
    
    Instead of checking for a large fixed maximum number of SGEs,
    check for a minimum small number. RPC-over-RDMA will switch to
    using a Read chunk if an xdr_buf has more pages than can fit in
    the device's max_sge limit. This is considerably better than
    failing all together to mount the server.
    
    This fix supports devices that have as few as three send SGEs
    available.
    
    Reported-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Reported-by: Devesh Sharma <devesh.sharma@broadcom.com>
    Reported-by: Honggang Li <honli@redhat.com>
    Reported-by: Ram Amrani <Ram.Amrani@cavium.com>
    Fixes: 655fec6987be ("xprtrdma: Use gathered Send for large ...")
    Tested-by: Honggang Li <honli@redhat.com>
    Tested-by: Ram Amrani <Ram.Amrani@cavium.com>
    Tested-by: Steve Wise <swise@opengridcomputing.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 387fb7dc3fde8636a8cabd3086a451d204255436
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Feb 8 17:00:02 2017 -0500

    xprtrdma: Disable pad optimization by default
    
    commit c95a3c6b88658bcb8f77f85f31a0b9d9036e8016 upstream.
    
    Commit d5440e27d3e5 ("xprtrdma: Enable pad optimization") made the
    Linux client omit XDR round-up padding in normal Read and Write
    chunks so that the client doesn't have to register and invalidate
    3-byte memory regions that contain no real data.
    
    Unfortunately, my cheery 2014 assessment that this optimization "is
    supported now by both Linux and Solaris servers" was premature.
    We've found bugs in Solaris in this area since commit d5440e27d3e5
    ("xprtrdma: Enable pad optimization") was merged (SYMLINK is the
    main offender).
    
    So for maximum interoperability, I'm disabling this optimization
    again. If a CM private message is exchanged when connecting, the
    client recognizes that the server is Linux, and enables the
    optimization for that connection.
    
    Until now the Solaris server bugs did not impact common operations,
    and were thus largely benign. Soon, less capable devices on Linux
    NFS/RDMA clients will make use of Read chunks more often, and these
    Solaris bugs will prevent interoperation in more cases.
    
    Fixes: 677eb17e94ed ("xprtrdma: Fix XDR tail buffer marshalling")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d53884b2c1baca7aa1511a1d7c48a84e69c1a13
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Feb 8 16:59:54 2017 -0500

    xprtrdma: Per-connection pad optimization
    
    commit b5f0afbea4f2ea52c613ac2b06cb6de2ea18cb6d upstream.
    
    Pad optimization is changed by echoing into
    /proc/sys/sunrpc/rdma_pad_optimize. This is a global setting,
    affecting all RPC-over-RDMA connections to all servers.
    
    The marshaling code picks up that value and uses it for decisions
    about how to construct each RPC-over-RDMA frame. Having it change
    suddenly in mid-operation can result in unexpected failures. And
    some servers a client mounts might need chunk round-up, while
    others don't.
    
    So instead, copy the pad_optimize setting into each connection's
    rpcrdma_ia when the transport is created, and use the copy, which
    can't change during the life of the connection, instead.
    
    This also removes a hack: rpcrdma_convert_iovs was using
    the remote-invalidation-expected flag to predict when it could leave
    out Write chunk padding. This is because the Linux server handles
    implicit XDR padding on Write chunks correctly, and only Linux
    servers can set the connection's remote-invalidation-expected flag.
    
    It's more sensible to use the pad optimization setting instead.
    
    Fixes: 677eb17e94ed ("xprtrdma: Fix XDR tail buffer marshalling")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 921fe03af2b56517c0c52a9b997236fadc371f01
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Feb 8 16:59:46 2017 -0500

    xprtrdma: Fix Read chunk padding
    
    commit 24abdf1be15c478e2821d6fc903a4a4440beff02 upstream.
    
    When pad optimization is disabled, rpcrdma_convert_iovs still
    does not add explicit XDR round-up padding to a Read chunk.
    
    Commit 677eb17e94ed ("xprtrdma: Fix XDR tail buffer marshalling")
    incorrectly short-circuited the test for whether round-up padding
    is needed that appears later in rpcrdma_convert_iovs.
    
    However, if this is indeed a regular Read chunk (and not a
    Position-Zero Read chunk), the tail iovec _always_ contains the
    chunk's padding, and never anything else.
    
    So, it's easy to just skip the tail when padding optimization is
    enabled, and add the tail in a subsequent Read chunk segment, if
    disabled.
    
    Fixes: 677eb17e94ed ("xprtrdma: Fix XDR tail buffer marshalling")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 143ac52c3ba8224d606c502667acdc6c67eb28f0
Author: Magnus Lilja <lilja.magnus@gmail.com>
Date:   Wed Dec 21 22:13:58 2016 +0100

    dmaengine: ipu: Make sure the interrupt routine checks all interrupts.
    
    commit adee40b265d7568296e218f079f478197ffa15bf upstream.
    
    Commit 3d8cc00073d6 ("dmaengine: ipu: Consolidate duplicated irq handlers")
    consolidated the two interrupts routines into one, but the remaining
    interrupt routine only checks the status of the error interrupts, not the
    normal interrupts.
    
    This patch fixes that problem (tested on i.MX31 PDK board).
    
    Fixes: 3d8cc00073d6 ("dmaengine: ipu: Consolidate duplicated irq handlers")
    Cc: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Magnus Lilja <lilja.magnus@gmail.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 700c30c5179d78e99b281a0370ba38a2bb6f5a19
Author: Mark Marshall <mark.marshall@omicronenergy.com>
Date:   Thu Jan 26 16:18:27 2017 +0100

    mtd: nand: ifc: Fix location of eccstat registers for IFC V1.0
    
    commit 656441478ed55d960df5f3ccdf5a0f8c61dfd0b3 upstream.
    
    The commit 7a654172161c ("mtd/ifc: Add support for IFC controller
    version 2.0") added support for version 2.0 of the IFC controller.
    The version 2.0 controller has the ECC status registers at a different
    location to the previous versions.
    
    Correct the fsl_ifc_nand structure so that the ECC status can be read
    from the correct location for both version 1.0 and 2.0 of the controller.
    
    Fixes: 7a654172161c ("mtd/ifc: Add support for IFC controller version 2.0")
    Signed-off-by: Mark Marshall <mark.marshall@omicronenergy.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c12c1cec4bd052584c52ce17f05190ae9aa3666
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Sat Jan 28 14:31:22 2017 +0100

    bcma: use (get|put)_device when probing/removing device driver
    
    commit a971df0b9d04674e325346c17de9a895425ca5e1 upstream.
    
    This allows tracking device state and e.g. makes devm work as expected.
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe83da6961f829932d4bca07d42a1d319c688379
Author: colyli@suse.de <colyli@suse.de>
Date:   Sat Jan 28 21:11:49 2017 +0800

    md linear: fix a race between linear_add() and linear_congested()
    
    commit 03a9e24ef2aaa5f1f9837356aed79c860521407a upstream.
    
    Recently I receive a bug report that on Linux v3.0 based kerenl, hot add
    disk to a md linear device causes kernel crash at linear_congested(). From
    the crash image analysis, I find in linear_congested(), mddev->raid_disks
    contains value N, but conf->disks[] only has N-1 pointers available. Then
    a NULL pointer deference crashes the kernel.
    
    There is a race between linear_add() and linear_congested(), RCU stuffs
    used in these two functions cannot avoid the race. Since Linuv v4.0
    RCU code is replaced by introducing mddev_suspend().  After checking the
    upstream code, it seems linear_congested() is not called in
    generic_make_request() code patch, so mddev_suspend() cannot provent it
    from being called. The possible race still exists.
    
    Here I explain how the race still exists in current code.  For a machine
    has many CPUs, on one CPU, linear_add() is called to add a hard disk to a
    md linear device; at the same time on other CPU, linear_congested() is
    called to detect whether this md linear device is congested before issuing
    an I/O request onto it.
    
    Now I use a possible code execution time sequence to demo how the possible
    race happens,
    
    seq    linear_add()                linear_congested()
     0                                 conf=mddev->private
     1   oldconf=mddev->private
     2   mddev->raid_disks++
     3                              for (i=0; i<mddev->raid_disks;i++)
     4                                bdev_get_queue(conf->disks[i].rdev->bdev)
     5   mddev->private=newconf
    
    In linear_add() mddev->raid_disks is increased in time seq 2, and on
    another CPU in linear_congested() the for-loop iterates conf->disks[i] by
    the increased mddev->raid_disks in time seq 3,4. But conf with one more
    element (which is a pointer to struct dev_info type) to conf->disks[] is
    not updated yet, accessing its structure member in time seq 4 will cause a
    NULL pointer deference fault.
    
    To fix this race, there are 2 parts of modification in the patch,
     1) Add 'int raid_disks' in struct linear_conf, as a copy of
        mddev->raid_disks. It is initialized in linear_conf(), always being
        consistent with pointers number of 'struct dev_info disks[]'. When
        iterating conf->disks[] in linear_congested(), use conf->raid_disks to
        replace mddev->raid_disks in the for-loop, then NULL pointer deference
        will not happen again.
     2) RCU stuffs are back again, and use kfree_rcu() in linear_add() to
        free oldconf memory. Because oldconf may be referenced as mddev->private
        in linear_congested(), kfree_rcu() makes sure that its memory will not
        be released until no one uses it any more.
    Also some code comments are added in this patch, to make this modification
    to be easier understandable.
    
    This patch can be applied for kernels since v4.0 after commit:
    3be260cc18f8 ("md/linear: remove rcu protections in favour of
    suspend/resume"). But this bug is reported on Linux v3.0 based kernel, for
    people who maintain kernels before Linux v4.0, they need to do some back
    back port to this patch.
    
    Changelog:
     - V3: add 'int raid_disks' in struct linear_conf, and use kfree_rcu() to
           replace rcu_call() in linear_add().
     - v2: add RCU stuffs by suggestion from Shaohua and Neil.
     - v1: initial effort.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Cc: Shaohua Li <shli@fb.com>
    Cc: Neil Brown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c1afb4c72be3264263522ae3bd2ab85383af356
Author: Maxime Ripard <mripard@kernel.org>
Date:   Mon Jan 23 11:41:48 2017 +0100

    rtc: sun6i: Switch to the external oscillator
    
    commit fb61bb82cb46a932ef2fc62e1c731c8e7e6640d5 upstream.
    
    The RTC is clocked from either an internal, imprecise, oscillator or an
    external one, which is usually much more accurate.
    
    The difference perceived between the time elapsed and the time reported by
    the RTC is in a 10% scale, which prevents the RTC from being useful at all.
    
    Fortunately, the external oscillator is reported to be mandatory in the
    Allwinner datasheet, so we can just switch to it.
    
    Fixes: 9765d2d94309 ("rtc: sun6i: Add sun6i RTC driver")
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fcdc5edafc20b71820b5f389973bea0c16ab84a
Author: Maxime Ripard <mripard@kernel.org>
Date:   Mon Jan 23 11:41:47 2017 +0100

    rtc: sun6i: Add some locking
    
    commit a9422a19ce270a22fc520f2278fb7e80c58be508 upstream.
    
    Some registers have a read-modify-write access pattern that are not atomic.
    
    Add some locking to prevent from concurrent accesses.
    
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c45b4fe3ca45377ebaddda8455f85a3f2ef9a377
Author: Maxime Ripard <mripard@kernel.org>
Date:   Mon Jan 23 11:41:46 2017 +0100

    rtc: sun6i: Disable the build as a module
    
    commit 3753941475ae6501dcd1e41832bd0e6c35247d6a upstream.
    
    Since we have to provide the clock very early on, the RTC driver cannot be
    built as a module. Make sure that won't happen.
    
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b97cb8ece888ff009e54acb01d8e61baa6110e78
Author: Masato Suzuki <masato.suzuki@wdc.com>
Date:   Mon Feb 27 20:52:49 2017 +0900

    f2fs: Fix zoned block device support
    
    commit 7bb3a371d199156cb6a863feab377146b80942c5 upstream.
    
    The introduction of the multi-device feature partially broke the support
    for zoned block devices. In the function f2fs_scan_devices, sbi->devs
    allocation and initialization is skipped in the case of a single device
    mount. This result in no device information structure being allocated
    for the device. This is fine if the device is a regular device, but in
    the case of a zoned block device, the device zone type array is not
    initialized, which causes the function __f2fs_issue_discard_zone to fail
    as get_blkz_type is unable to determine the zone type of a section.
    
    Fix this by always allocating and initializing the sbi->devs device
    information array even in the case of a single device if that device is
    zoned. For this particular case, make sure to obtain a reference on the
    single device so that the call to blkdev_put() in destroy_device_list
    operates as expected.
    
    Fixes: 3c62be17d4f562f4 ("f2fs: support multiple devices")
    Signed-off-by: Masato Suzuki <masato.suzuki@wdc.com>
    Acked-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8917cd860db436fdb5abcad6ae579f420c6c9df
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Mon Feb 27 11:57:11 2017 -0800

    f2fs: avoid to issue redundant discard commands
    
    commit 8b107f5b97772c7c0c218302e9a4d15b4edf50b4 upstream.
    
    If segs_per_sec is over 1 like under SMR, previously f2fs issues discard
    commands redundantly on the same section, since we didn't move end position
    for the previous discard command.
    
    E.g.,
    
                           start  end
                             |    |
          prefree_bitmap = [01111100111100]
    
    And, after issue discard for this section,
                                 end      start
                                  |        |
          prefree_bitmap = [01111100111100]
    
    Select this section again by searching from (end + 1),
                                 start  end
                                    |   |
          prefree_bitmap = [01111100111100]
    
    Fixes: 36abef4e796d38 ("f2fs: introduce mode=lfs mount option")
    Cc: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c85fc3f1d59f48d6f885b965ad61110a6af8e184
Author: Hou Pengyang <houpengyang@huawei.com>
Date:   Thu Feb 16 12:34:31 2017 +0000

    f2fs: add ovp valid_blocks check for bg gc victim to fg_gc
    
    commit e93b9865251a0503d83fd570e7d5a7c8bc351715 upstream.
    
    For foreground gc, greedy algorithm should be adapted, which makes
    this formula work well:
    
            (2 * (100 / config.overprovision + 1) + 6)
    
    But currently, we fg_gc have a prior to select bg_gc victim segments to gc
    first, these victims are selected by cost-benefit algorithm, we can't guarantee
    such segments have the small valid blocks, which may destroy the f2fs rule, on
    the worstest case, would consume all the free segments.
    
    This patch fix this by add a filter in check_bg_victims, if segment's has # of
    valid blocks over overprovision ratio, skip such segments.
    
    Signed-off-by: Hou Pengyang <houpengyang@huawei.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f213a0f926de3a3794c6bcf60c3699a62615535a
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue Feb 14 09:54:37 2017 -0800

    f2fs: fix multiple f2fs_add_link() calls having same name
    
    commit 88c5c13a5027b36d914536fdba23f069d7067204 upstream.
    
    It turns out a stakable filesystem like sdcardfs in AOSP can trigger multiple
    vfs_create() to lower filesystem. In that case, f2fs will add multiple dentries
    having same name which breaks filesystem consistency.
    
    Until upper layer fixes, let's work around by f2fs, which shows actually not
    much performance regression.
    
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88cf812869fd2dcbfef7e39fb71a1062b42829dc
Author: Yunlei He <heyunlei@huawei.com>
Date:   Mon Dec 19 20:10:48 2016 +0800

    f2fs: fix a problem of using memory after free
    
    commit 7855eba4d6102f811b6dd142d6c749f53b591fa3 upstream.
    
    This patch fix a problem of using memory after free
    in function __try_merge_extent_node.
    
    Fixes: 0f825ee6e873 ("f2fs: add new interfaces for extent tree")
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd414a3e7d2cb245bd37321baa01b1102cd12b7e
Author: Weston Andros Adamson <dros@primarydata.com>
Date:   Thu Feb 23 14:54:21 2017 -0500

    NFSv4: fix getacl ERANGE for some ACL buffer sizes
    
    commit ed92d8c137b7794c2c2aa14479298b9885967607 upstream.
    
    We're not taking into account that the space needed for the (variable
    length) attr bitmap, with the result that we'd sometimes get a spurious
    ERANGE when the ACL data got close to the end of a page.
    
    Just add in an extra page to make sure.
    
    Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca83d7a97e36a2237a5d15cf469e9384515e4af6
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Feb 23 14:53:39 2017 -0500

    NFSv4: fix getacl head length estimation
    
    commit 6682c14bbe505a8b912c57faf544f866777ee48d upstream.
    
    Bitmap and attrlen follow immediately after the op reply header.  This
    was an oversight from commit bf118a342f.
    
    Consequences of this are just minor efficiency (extra calls to
    xdr_shrink_bufhead).
    
    Fixes: bf118a342f10 "NFSv4: include bitmap in nfsv4 get acl data"
    Reviewed-by: Kinglong Mee <kinglongmee@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81df387e03e0212d7d6a09c3a53906de5f1fe21e
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Feb 17 19:50:18 2017 -0500

    Revert "NFSv4.1: Handle NFS4ERR_BADSESSION/NFS4ERR_DEADSESSION replies to OP_SEQUENCE"
    
    commit a5e14c9376871ee74fe93fdcb380c5d54eaa2d43 upstream.
    
    This reverts commit 2cf10cdd486c362f983abdce00dc1127e8ab8c59.
    
    The patch has been seen to cause excessive looping.
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad2ce81eeeb0975ff42a46b4c5ce4366ec0b86fd
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Feb 17 19:49:09 2017 -0500

    pNFS/flexfiles: If the layout is invalid, it must be updated before retrying
    
    commit df3ab232e462bce20710596d697ade6b72497694 upstream.
    
    If we see that our pNFS READ/WRITE/COMMIT operation failed, but we
    also see that our layout segment is no longer valid, then we need to
    get a new layout segment before retrying.
    
    Fixes: 90816d1ddacf ("NFSv4.1/flexfiles: Don't mark the entire deviceid...")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7776aaacda1283f22f1fe98ab2bb38bb0cd898e8
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Feb 17 18:42:32 2017 -0500

    NFSv4: Fix reboot recovery in copy offload
    
    commit 9d8cacbf5636657d2cd0dda17438a56d806d3224 upstream.
    
    Copy offload code needs to be hooked into the code for handling
    NFS4ERR_BAD_STATEID by ensuring that we set the "stateid" field
    in struct nfs4_exception.
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Fixes: 2e72448b07dc3 ("NFS: Add COPY nfs operation")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 607137e3f171dcdd4ae1c5db3c908a9994d2d495
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Feb 8 11:29:46 2017 -0500

    NFSv4: Fix memory and state leak in _nfs4_open_and_get_state
    
    commit a974deee477af89411e0f80456bfb344ac433c98 upstream.
    
    If we exit because the file access check failed, we currently
    leak the struct nfs4_state. We need to attach it to the
    open context before returning.
    
    Fixes: 3efb9722475e ("NFSv4: Refactor _nfs4_open_and_get_state..")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 982898d7f97a35447403c3fcecc0d96c646ce101
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Feb 20 07:21:33 2017 +0100

    nfsd: special case truncates some more
    
    commit 783112f7401ff449d979530209b3f6c2594fdb4e upstream.
    
    Both the NFS protocols and the Linux VFS use a setattr operation with a
    bitmap of attributes to set to set various file attributes including the
    file size and the uid/gid.
    
    The Linux syscalls never mix size updates with unrelated updates like
    the uid/gid, and some file systems like XFS and GFS2 rely on the fact
    that truncates don't update random other attributes, and many other file
    systems handle the case but do not update the other attributes in the
    same transaction.  NFSD on the other hand passes the attributes it gets
    on the wire more or less directly through to the VFS, leading to updates
    the file systems don't expect.  XFS at least has an assert on the
    allowed attributes, which caught an unusual NFS client setting the size
    and group at the same time.
    
    To handle this issue properly this splits the notify_change call in
    nfsd_setattr into two separate ones.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8defb389140f883313a3d2f890c971cd2388e5cd
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Feb 20 17:04:42 2017 -0500

    nfsd: minor nfsd_setattr cleanup
    
    commit 758e99fefe1d9230111296956335cd35995c0eaf upstream.
    
    Simplify exit paths, size_change use.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11596d936ec4e32cc4c399e3a2a4116dcdfdcb91
Author: Stefano Babic <sbabic@denx.de>
Date:   Fri Jan 20 10:38:20 2017 -0500

    VME: restore bus_remove function causing incomplete module unload
    
    commit 9797484ba83d68f18fe1cbd964b7cd830f78f0f7 upstream.
    
    Commit 050c3d52cc7810d9d17b8cd231708609af6876ae ("vme: make core
    vme support explicitly non-modular") dropped the remove function
    because it appeared as if it was for removal of the bus, which is
    not supported.
    
    However, vme_bus_remove() is called when a VME device is removed
    from the bus and not when the bus is removed; as it calls the VME
    device driver's cleanup function.  Without this function, the
    remove() in the VME device driver is never called and VME device
    drivers cannot be reloaded again.
    
    Here we restore the remove function that was deleted in that
    commit, and the reference to the function in the bus structure.
    
    Fixes: 050c3d52cc78 ("vme: make core vme support explicitly non-modular")
    Cc: Manohar Vanga <manohar.vanga@gmail.com>
    Acked-by: Martyn Welch <martyn@welchs.me.uk>
    Cc: devel@driverdev.osuosl.org
    Signed-off-by: Stefano Babic <sbabic@denx.de>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 031fad61741fcd2a38d7f32a45d82e5bb05a006a
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sun Feb 5 10:24:22 2017 -0600

    rtlwifi: rtl8192c-common: Fix "BUG: KASAN:
    
    commit 6773386f977ce5af339f9678fa2918909a946c6b upstream.
    
    Kernels built with CONFIG_KASAN=y report the following BUG for rtl8192cu
    and rtl8192c-common:
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in rtl92c_dm_bt_coexist+0x858/0x1e40
         [rtl8192c_common] at addr ffff8801c90edb08
    Read of size 1 by task kworker/0:1/38
    page:ffffea0007243800 count:1 mapcount:0 mapping:          (null)
         index:0x0 compound_mapcount: 0
    flags: 0x8000000000004000(head)
    page dumped because: kasan: bad access detected
    CPU: 0 PID: 38 Comm: kworker/0:1 Not tainted 4.9.7-gentoo #3
    Hardware name: Gigabyte Technology Co., Ltd. To be filled by
         O.E.M./Z77-DS3H, BIOS F11a 11/13/2013
    Workqueue: rtl92c_usb rtl_watchdog_wq_callback [rtlwifi]
      0000000000000000 ffffffff829eea33 ffff8801d7f0fa30 ffff8801c90edb08
      ffffffff824c0f09 ffff8801d4abee80 0000000000000004 0000000000000297
      ffffffffc070b57c ffff8801c7aa7c48 ffff880100000004 ffffffff000003e8
    Call Trace:
      [<ffffffff829eea33>] ? dump_stack+0x5c/0x79
      [<ffffffff824c0f09>] ? kasan_report_error+0x4b9/0x4e0
      [<ffffffffc070b57c>] ? _usb_read_sync+0x15c/0x280 [rtl_usb]
      [<ffffffff824c0f75>] ? __asan_report_load1_noabort+0x45/0x50
      [<ffffffffc06d7a88>] ? rtl92c_dm_bt_coexist+0x858/0x1e40 [rtl8192c_common]
      [<ffffffffc06d7a88>] ? rtl92c_dm_bt_coexist+0x858/0x1e40 [rtl8192c_common]
      [<ffffffffc06d0cbe>] ? rtl92c_dm_rf_saving+0x96e/0x1330 [rtl8192c_common]
    ...
    
    The problem is due to rtl8192ce and rtl8192cu sharing routines, and having
    different layouts of struct rtl_pci_priv, which is used by rtl8192ce, and
    struct rtl_usb_priv, which is used by rtl8192cu. The problem was resolved
    by placing the struct bt_coexist_info at the head of each of those private
    areas.
    
    Reported-and-tested-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Cc: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0ff495de3437b6cafe2e84353e8fa3ceb795a44
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Wed Dec 28 15:40:04 2016 -0600

    rtlwifi: Fix alignment issues
    
    commit 40b368af4b750863b2cb66a3a9513241db2f0793 upstream.
    
    The addresses of Wlan NIC registers are natural alignment, but some
    drivers have bugs. These are evident on platforms that need natural
    alignment to access registers.  This change contains the following:
     1. Function _rtl8821ae_dbi_read() is used to read one byte from DBI,
        thus it should use rtl_read_byte().
     2. Register 0x4C7 of 8192ee is single byte.
    
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28cd8db6a715f55d4e4d924afc34f44b8bedfa7d
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Fri Jan 27 02:06:36 2017 -0800

    remoteproc: qcom: mdt_loader: Don't overwrite firmware object
    
    commit 3e8b571a9a0881ba3381ca0915995696da145ab8 upstream.
    
    The "fw" firmware object is passed from the remoteproc core and should
    not be overwritten, as that results in leaked buffers and a double free
    of the the last firmware object.
    
    Fixes: 051fb70fd4ea ("remoteproc: qcom: Driver for the self-authenticating Hexagon v5")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e2b7672b43e7fd7758c8285598d2b9670cede79
Author: Andrew Price <anprice@redhat.com>
Date:   Wed Feb 22 12:05:03 2017 -0500

    gfs2: Add missing rcu locking for glock lookup
    
    commit f38e5fb95a1f8feda88531eedc98f69b24748712 upstream.
    
    We must hold the rcu read lock across looking up glocks and trying to
    bump their refcount to prevent the glocks from being freed in between.
    
    Signed-off-by: Andrew Price <anprice@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6baafeb34b877940b19383f298f890bf22123aec
Author: Steve Wise <larrystevenwise@gmail.com>
Date:   Tue Feb 21 11:21:57 2017 -0800

    rdma_cm: fail iwarp accepts w/o connection params
    
    commit f2625f7db4dd0bbd16a9c7d2950e7621f9aa57ad upstream.
    
    cma_accept_iw() needs to return an error if conn_params is NULL.
    Since this is coming from user space, we can crash.
    
    Reported-by: Shaobo He <shaobo@cs.utah.edu>
    Acked-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc11f49a6a4647f72da0b50221cae2b0031d6bcc
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Thu Dec 22 18:07:52 2016 -0700

    RDMA/core: Fix incorrect structure packing for booleans
    
    commit 55efcfcd7776165b294f8b5cd6e05ca00ec89b7c upstream.
    
    The RDMA core uses ib_pack() to convert from unpacked CPU structs
    to on-the-wire bitpacked structs.
    
    This process requires that 1 bit fields are declared as u8 in the
    unpacked struct, otherwise the packing process does not read the
    value properly and the packed result is wired to 0. Several
    places wrongly used int.
    
    Crucially this means the kernel has never, set reversible
    correctly in the path record request. It has always asked for
    irreversible paths even if the ULP requests otherwise.
    
    When the kernel is used with a SM that supports this feature, it
    completely breaks communication management if reversible paths are
    not properly requested.
    
    The only reason this ever worked is because opensm ignores the
    reversible bit.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93919359467c6ce2f0f0ca4ad0f517b2d9bb03cf
Author: K. Y. Srinivasan <kys@microsoft.com>
Date:   Thu Dec 22 16:54:03 2016 -0800

    Drivers: hv: util: Backup: Fix a rescind processing issue
    
    commit d77044d142e960f7b5f814a91ecb8bcf86aa552c upstream.
    
    VSS may use a char device to support the communication between
    the user level daemon and the driver. When the VSS channel is rescinded
    we need to make sure that the char device is fully cleaned up before
    we can process a new VSS offer from the host. Implement this logic.
    
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48dc52df9155443289f8bbf52f25a4214961ebee
Author: K. Y. Srinivasan <kys@microsoft.com>
Date:   Thu Dec 22 16:54:02 2016 -0800

    Drivers: hv: util: Fcopy: Fix a rescind processing issue
    
    commit 20951c7535b5e6af46bc37b7142105f716df739c upstream.
    
    Fcopy may use a char device to support the communication between
    the user level daemon and the driver. When the Fcopy channel is rescinded
    we need to make sure that the char device is fully cleaned up before
    we can process a new Fcopy offer from the host. Implement this logic.
    
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f38bcff3986238898806512863b0e9d675de45ee
Author: K. Y. Srinivasan <kys@microsoft.com>
Date:   Thu Dec 22 16:54:01 2016 -0800

    Drivers: hv: util: kvp: Fix a rescind processing issue
    
    commit 5a66fecbf6aa528e375cbebccb1061cc58d80c84 upstream.
    
    KVP may use a char device to support the communication between
    the user level daemon and the driver. When the KVP channel is rescinded
    we need to make sure that the char device is fully cleaned up before
    we can process a new KVP offer from the host. Implement this logic.
    
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec6f27bd19e0f9142c71d293d4c3b381348550b7
Author: K. Y. Srinivasan <kys@microsoft.com>
Date:   Thu Dec 22 16:54:00 2016 -0800

    Drivers: hv: vmbus: Fix a rescind handling bug
    
    commit ccb61f8a99e6c29df4fb96a65dad4fad740d5be9 upstream.
    
    The host can rescind a channel that has been offered to the
    guest and once the channel is rescinded, the host does not
    respond to any requests on that channel. Deal with the case where
    the guest may be blocked waiting for a response from the host.
    
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42b0681b7fe98556c1e4288e534368cc0bf607f9
Author: K. Y. Srinivasan <kys@microsoft.com>
Date:   Wed Dec 7 01:16:28 2016 -0800

    Drivers: hv: vmbus: Prevent sending data on a rescinded channel
    
    commit e7e97dd8b77ee7366f2f8c70a033bf5fa05ec2e0 upstream.
    
    After the channel is rescinded, the host does not read from the rescinded channel.
    Fail writes to a channel that has already been rescinded. If we permit writes on a
    rescinded channel, since the host will not respond we will have situations where
    we will be unable to unload vmbus drivers that cannot have any outstanding requests
    to the host at the point they are unoaded.
    
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f791a7b4a7ae3a008a8af887b5a3f36ad1ac0574
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Dec 7 01:16:27 2016 -0800

    hv: don't reset hv_context.tsc_page on crash
    
    commit 56ef6718a1d8d77745033c5291e025ce18504159 upstream.
    
    It may happen that secondary CPUs are still alive and resetting
    hv_context.tsc_page will cause a consequent crash in read_hv_clock_tsc()
    as we don't check for it being not NULL there. It is safe as we're not
    freeing this page anyways.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a34da99e9468a3990a8ca91bb9e502af61f95535
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Dec 7 01:16:26 2016 -0800

    hv: init percpu_list in hv_synic_alloc()
    
    commit 3c7630d35009e6635e5b58d62de554fd5b6db5df upstream.
    
    Initializing hv_context.percpu_list in hv_synic_alloc() helps to prevent a
    crash in percpu_channel_enq() when not all CPUs were online during
    initialization and it naturally belongs there.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa2765857f7411a960778afc1ed34cb57dc43f08
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Dec 7 01:16:25 2016 -0800

    hv: allocate synic pages for all present CPUs
    
    commit 421b8f20d3c381b215f988b42428f56fc3b82405 upstream.
    
    It may happen that not all CPUs are online when we do hv_synic_alloc() and
    in case more CPUs come online later we may try accessing these allocated
    structures.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d03229ccf262d24e8a41dac06097a54496ccfb25
Author: Krzysztof Opasiak <kopasiak90@gmail.com>
Date:   Tue Jan 24 03:27:24 2017 +0100

    usb: gadget: f_hid: fix: Move IN request allocation to set_alt()
    
    commit 749494b6bdbbaf0899aa1c62a1ad74cd747bce47 upstream.
    
    Since commit: ba1582f22231 ("usb: gadget: f_hid: use alloc_ep_req()")
    we cannot allocate any requests in bind() as we check if we should
    align request buffer based on endpoint descriptor which is assigned
    in set_alt().
    
    Allocating request in bind() function causes a NULL pointer
    dereference.
    
    This commit moves allocation of IN request from bind() to set_alt()
    to prevent this issue.
    
    Fixes: ba1582f22231 ("usb: gadget: f_hid: use alloc_ep_req()")
    Tested-by: David Lechner <david@lechnology.com>
    Signed-off-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae1756eb2af93343ec81d0bce204e27834fa794f
Author: Krzysztof Opasiak <kopasiak90@gmail.com>
Date:   Thu Jan 19 18:55:29 2017 +0100

    usb: gadget: f_hid: Use spinlock instead of mutex
    
    commit 33e4c1a9987a1fc3b42c3b534100b5b006d55c61 upstream.
    
    As IN request has to be allocated in set_alt() and released in
    disable() we cannot use mutex to protect it as we cannot sleep
    in those funcitons. Let's replace this mutex with a spinlock.
    
    Tested-by: David Lechner <david@lechnology.com>
    Signed-off-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1d6621ad63667ec9c139579d982447272e60876
Author: Krzysztof Opasiak <kopasiak90@gmail.com>
Date:   Thu Jan 19 18:55:28 2017 +0100

    usb: gadget: f_hid: fix: Prevent accessing released memory
    
    commit aa65d11aa008f4de58a9cee7e121666d9d68505e upstream.
    
    When we unlock our spinlock to copy data to user we may get
    disabled by USB host and free the whole list of completed out
    requests including the one from which we are copying the data
    to user memory.
    
    To prevent from this let's remove our working element from
    the list and place it back only if there is sth left when we
    finish with it.
    
    Fixes: 99c515005857 ("usb: gadget: hidg: register OUT INT endpoint for SET_REPORT")
    Tested-by: David Lechner <david@lechnology.com>
    Signed-off-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afa9556b5fe6a5bf0ec95b02dd7e98fcf777aa41
Author: Krzysztof Opasiak <kopasiak90@gmail.com>
Date:   Thu Jan 19 18:55:27 2017 +0100

    usb: gadget: f_hid: fix: Free out requests
    
    commit 20d2ca955bd09639c7b01db5761d157c297aea0a upstream.
    
    Requests for out endpoint are allocated in bind() function
    but never released.
    
    This commit ensures that all pending requests are released
    when we disable out endpoint.
    
    Fixes: 99c515005857 ("usb: gadget: hidg: register OUT INT endpoint for SET_REPORT")
    Tested-by: David Lechner <david@lechnology.com>
    Signed-off-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6be8bf7cbcc2b3308db0bd859fa6e9e17fad8c2a
Author: Magnus Lilja <lilja.magnus@gmail.com>
Date:   Wed Jan 25 22:07:59 2017 +0100

    usb: gadget: udc: fsl: Add missing complete function.
    
    commit 5528954a1a0c49c6974ef1b8d6eaceff536204d5 upstream.
    
    Commit 304f7e5e1d08 ("usb: gadget: Refactor request completion")
    removed check if req->req.complete is non-NULL, resulting in a NULL
    pointer derefence and a kernel panic.
    This patch adds an empty complete function instead of re-introducing
    the req->req.complete check.
    
    Fixes: 304f7e5e1d08 ("usb: gadget: Refactor request completion")
    
    Signed-off-by: Magnus Lilja <lilja.magnus@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d95b60e8e9ec6ebe0b835d449aa8c3c149d5a58
Author: Krzysztof Opasiak <k.opasiak@samsung.com>
Date:   Mon Jan 16 08:40:57 2017 +0100

    usb: gadget: udc-core: Rescan pending list on driver unbind
    
    commit 8236800da115a3e24b9165c573067343f51cf5ea upstream.
    
    Since:
    
    commit 855ed04a3758 ("usb: gadget: udc-core: independent registration
    of gadgets and gadget drivers")
    
    if we load gadget module but there is no free udc available
    then it will be stored on a pending gadgets list.
    
    $ modprobe g_zero.ko
    $ modprobe g_ether.ko
    [] udc-core: couldn't find an available UDC - added [g_ether] to list
    of pending drivers
    
    We scan this list each time when new UDC appears in system.
    But we can get a free UDC each time after gadget unbind.
    This commit add scanning of that list directly after unbinding
    gadget from udc.
    
    Thanks to this, when we unload first gadget:
    
    $ rmmod g_zero.ko
    
    gadget which is pending is automatically
    attached to that UDC (if name matches).
    
    Fixes: 855ed04a3758  ("usb: gadget: udc-core: independent registration of gadgets and gadget drivers")
    Signed-off-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3afb5a0bd1f1f5025a16e76312198727a04b9d7d
Author: William wu <william.wu@rock-chips.com>
Date:   Tue Jan 17 15:32:07 2017 +0800

    usb: host: xhci: plat: check hcc_params after add hcd
    
    commit 5de4e1ea9a731cad195ce5152705c21daef3bbba upstream.
    
    The commit 4ac53087d6d4 ("usb: xhci: plat: Create both
    HCDs before adding them") move add hcd to the end of
    probe, this cause hcc_params uninitiated, because xHCI
    driver sets hcc_params in xhci_gen_setup() called from
    usb_add_hcd().
    
    This patch checks the Maximum Primary Stream Array Size
    in the hcc_params register after add primary hcd.
    
    Signed-off-by: William wu <william.wu@rock-chips.com>
    Acked-by: Roger Quadros <rogerq@ti.com>
    Fixes: 4ac53087d6d4 ("usb: xhci: plat: Create both HCDs before adding them")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fd8890d42fc10c77e56a41ff3b274b647c477b9
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Thu Jan 19 13:38:42 2017 +0200

    usb: dwc3: gadget: skip Set/Clear Halt when invalid
    
    commit ffb80fc672c3a7b6afd0cefcb1524fb99917b2f3 upstream.
    
    At least macOS seems to be sending
    ClearFeature(ENDPOINT_HALT) to endpoints which
    aren't Halted. This makes DWC3's CLEARSTALL command
    time out which causes several issues for the driver.
    
    Instead, let's just return 0 and bail out early.
    
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fed46b52662820fa3951cd6d3301e6661c9457eb
Author: Alexandre Bailon <abailon@baylibre.com>
Date:   Wed Feb 1 21:30:12 2017 -0600

    usb: musb: da8xx: Remove CPPI 3.0 quirk and methods
    
    commit a994ce2d7e66008381a0b184c73be9ae9b72eb5c upstream.
    
    DA8xx driver is registering and using the CPPI 3.0 DMA controller but
    actually, the DA8xx has a CPPI 4.1 DMA controller.
    Remove the CPPI 3.0 quirk and methods.
    
    Fixes: f8e9f34f80a2 ("usb: musb: Fix up DMA related macros")
    Fixes: 7f6283ed6fe8 ("usb: musb: Set up function pointers for DMA")
    Signed-off-by: Alexandre Bailon <abailon@baylibre.com>
    Acked-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53021fb719185ccc31c88b3873e254d8e9b20e84
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Wed Jan 18 21:31:11 2017 +0100

    w1: ds2490: USB transfer buffers need to be DMAable
    
    commit 61cd1b4cd1e8f7f7642ab64529d9bd52e8374641 upstream.
    
    ds2490 driver was doing USB transfers from / to buffers on a stack.
    This is not permitted and made the driver non-working with vmapped stacks.
    
    Since all these transfers are done under the same bus_mutex lock we can
    simply use shared buffers in a device private structure for two most common
    of them.
    
    While we are at it, let's also fix a comparison between int and size_t in
    ds9490r_search() which made the driver spin in this function if state
    register get requests were failing.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Acked-by: Evgeniy Polyakov <zbr@ioremap.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d1b1e1738efb65e2509cace8e588486e707a78b
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Sat Jan 21 23:50:18 2017 +0100

    w1: don't leak refcount on slave attach failure in w1_attach_slave_device()
    
    commit d2ce4ea1a0b0162e5d2d7e7942ab6f5cc2063d5a upstream.
    
    Near the beginning of w1_attach_slave_device() we increment a w1 master
    reference count.
    Later, when we are going to exit this function without actually attaching
    a slave device (due to failure of __w1_attach_slave_device()) we need to
    decrement this reference count back.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Fixes: 9fcbbac5ded489 ("w1: process w1 netlink commands in w1_process thread")
    Cc: Evgeniy Polyakov <zbr@ioremap.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c903cc53f760a6b3c246bc74a89239492578a48b
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Thu Mar 2 12:03:40 2017 +0100

    can: usb_8dev: Fix memory leak of priv->cmd_msg_buffer
    
    commit 7c42631376306fb3f34d51fda546b50a9b6dd6ec upstream.
    
    The priv->cmd_msg_buffer is allocated in the probe function, but never
    kfree()ed. This patch converts the kzalloc() to resource-managed
    kzalloc.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9394d5a762dc04958ea933bd5d2df096491ea04
Author: Ethan Zonca <e@ethanzonca.com>
Date:   Fri Feb 24 11:27:36 2017 -0500

    can: gs_usb: Don't use stack memory for USB transfers
    
    commit c919a3069c775c1c876bec55e00b2305d5125caa upstream.
    
    Fixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device
    
    The gs_usb driver is performing USB transfers using buffers allocated on
    the stack. This causes the driver to not function with vmapped stacks.
    Instead, allocate memory for the transfer buffers.
    
    Signed-off-by: Ethan Zonca <e@ethanzonca.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d0db60652436a10f946e1afb1a1bd4a5c3416f8
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Feb 1 21:40:56 2017 +0100

    iio: pressure: mpl3115: do not rely on structure field ordering
    
    commit 9cf6cdba586ced75c69b8314b88b2d2f5ce9b3ed upstream.
    
    Fixes a regression triggered by a change in the layout of
    struct iio_chan_spec, but the real bug is in the driver which assumed
    a specific structure layout in the first place. Hint: the two bits were
    not OR:ed together as implied by the indentation prior to this patch,
    there was a comma between them, which accidentally moved the ..._SCALE
    bit to the next structure field. That field was .info_mask_shared_by_type
    before the _available attributes was added by commit 51239600074b
    ("iio:core: add a callback to allow drivers to provide _available
    attributes") and .info_mask_separate_available afterwards, and the
    regression happened.
    
    info_mask_shared_by_type is actually a better choice than the originally
    intended info_mask_separate for the ..._SCALE bit since a constant is
    returned from mpl3115_read_raw for the scale. Using
    info_mask_shared_by_type also preserves the behavior from before the
    regression and is therefore less likely to cause other interesting side
    effects.
    
    The above mentioned regression causes an unintended sysfs attibute to
    show up that is not backed by code, in turn causing the following NULL
    pointer defererence to happen on access.
    
    Segmentation fault
    
    Unable to handle kernel NULL pointer dereference at virtual address 00000000
    pgd = ecc3c000
    [00000000] *pgd=87f91831
    Internal error: Oops: 80000007 [#1] SMP ARM
    Modules linked in:
    CPU: 1 PID: 1051 Comm: cat Not tainted 4.10.0-rc5-00009-gffd8858-dirty #3
    Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
    task: ed54ec00 task.stack: ee2bc000
    PC is at 0x0
    LR is at iio_read_channel_info_avail+0x40/0x280
    pc : [<00000000>]    lr : [<c06fbc1c>]    psr: a0070013
    sp : ee2bdda8  ip : 00000000  fp : ee2bddf4
    r10: c0a53c74  r9 : ed79f000  r8 : ee8d1018
    r7 : 00001000  r6 : 00000fff  r5 : ee8b9a00  r4 : ed79f000
    r3 : ee2bddc4  r2 : ee2bddbc  r1 : c0a86dcc  r0 : ee8d1000
    Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 10c5387d  Table: 3cc3c04a  DAC: 00000051
    Process cat (pid: 1051, stack limit = 0xee2bc210)
    Stack: (0xee2bdda8 to 0xee2be000)
    dda0:                   ee2bddc0 00000002 c016d720 c016d394 ed54ec00 00000000
    ddc0: 60070013 ed413780 00000001 edffd480 ee8b9a00 00000fff 00001000 ee8d1018
    dde0: ed79f000 c0a53c74 ee2bde0c ee2bddf8 c0513c58 c06fbbe8 edffd480 edffd540
    de00: ee2bde3c ee2bde10 c0293474 c0513c40 c02933e4 ee2bde60 00000001 ed413780
    de20: 00000001 ed413780 00000000 edffd480 ee2bde4c ee2bde40 c0291d00 c02933f0
    de40: ee2bde9c ee2bde50 c024679c c0291ce0 edffd4b0 b6e37000 00020000 ee2bdf78
    de60: 00000000 00000000 ed54ec00 ed013200 00000817 c0a111fc edffd540 ed413780
    de80: b6e37000 00020000 00020000 ee2bdf78 ee2bded4 ee2bdea0 c0292890 c0246604
    dea0: c0117940 c016ba50 00000025 c0a111fc b6e37000 ed413780 ee2bdf78 00020000
    dec0: ee2bc000 b6e37000 ee2bdf44 ee2bded8 c021d158 c0292770 c0117764 b6e36004
    dee0: c0f0d7c4 ee2bdfb0 b6f89228 00021008 ee2bdfac ee2bdf00 c0101374 c0117770
    df00: 00000000 00000000 ee2bc000 00000000 ee2bdf34 ee2bdf20 c016ba04 c0171080
    df20: 00000000 00020000 ed413780 b6e37000 00000000 ee2bdf78 ee2bdf74 ee2bdf48
    df40: c021e7a0 c021d130 c023e300 c023e280 ee2bdf74 00000000 00000000 ed413780
    df60: ed413780 00020000 ee2bdfa4 ee2bdf78 c021e870 c021e71c 00000000 00000000
    df80: 00020000 00020000 b6e37000 00000003 c0108084 00000000 00000000 ee2bdfa8
    dfa0: c0107ee0 c021e838 00020000 00020000 00000003 b6e37000 00020000 0001a2b4
    dfc0: 00020000 00020000 b6e37000 00000003 7fffe000 00000000 00000000 00020000
    dfe0: 00000000 be98eb4c 0000c740 b6f1985c 60070010 00000003 00000000 00000000
    Backtrace:
    [<c06fbbdc>] (iio_read_channel_info_avail) from [<c0513c58>] (dev_attr_show+0x24/0x50)
     r10:c0a53c74 r9:ed79f000 r8:ee8d1018 r7:00001000 r6:00000fff r5:ee8b9a00
     r4:edffd480
    [<c0513c34>] (dev_attr_show) from [<c0293474>] (sysfs_kf_seq_show+0x90/0x110)
     r5:edffd540 r4:edffd480
    [<c02933e4>] (sysfs_kf_seq_show) from [<c0291d00>] (kernfs_seq_show+0x2c/0x30)
     r10:edffd480 r9:00000000 r8:ed413780 r7:00000001 r6:ed413780 r5:00000001
     r4:ee2bde60 r3:c02933e4
    [<c0291cd4>] (kernfs_seq_show) from [<c024679c>] (seq_read+0x1a4/0x4e0)
    [<c02465f8>] (seq_read) from [<c0292890>] (kernfs_fop_read+0x12c/0x1cc)
     r10:ee2bdf78 r9:00020000 r8:00020000 r7:b6e37000 r6:ed413780 r5:edffd540
     r4:c0a111fc
    [<c0292764>] (kernfs_fop_read) from [<c021d158>] (__vfs_read+0x34/0x118)
     r10:b6e37000 r9:ee2bc000 r8:00020000 r7:ee2bdf78 r6:ed413780 r5:b6e37000
     r4:c0a111fc
    [<c021d124>] (__vfs_read) from [<c021e7a0>] (vfs_read+0x90/0x11c)
     r8:ee2bdf78 r7:00000000 r6:b6e37000 r5:ed413780 r4:00020000
    [<c021e710>] (vfs_read) from [<c021e870>] (SyS_read+0x44/0x90)
     r8:00020000 r7:ed413780 r6:ed413780 r5:00000000 r4:00000000
    [<c021e82c>] (SyS_read) from [<c0107ee0>] (ret_fast_syscall+0x0/0x1c)
     r10:00000000 r8:c0108084 r7:00000003 r6:b6e37000 r5:00020000 r4:00020000
    Code: bad PC value
    ---[ end trace 9c4938ccd0389004 ]---
    
    Fixes: cc26ad455f57 ("iio: Add Freescale MPL3115A2 pressure / temperature sensor driver")
    Fixes: 51239600074b ("iio:core: add a callback to allow drivers to provide _available attributes")
    Reported-by: Ken Lin <ken.lin@advantech.com>
    Tested-by: Ken Lin <ken.lin@advantech.com>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bab740787fd1c5bc21a1df4c256e772aa8e61a1d
Author: Peter Rosin <peda@axentia.se>
Date:   Wed Feb 1 21:40:57 2017 +0100

    iio: pressure: mpl115: do not rely on structure field ordering
    
    commit 6a6e1d56a0769795a36c0461c64bf5e5b9bbb4c0 upstream.
    
    Fixes a regression triggered by a change in the layout of
    struct iio_chan_spec, but the real bug is in the driver which assumed
    a specific structure layout in the first place. Hint: the three bits were
    not OR:ed together as implied by the indentation prior to this patch,
    there was a comma between the first two, which accidentally moved the
    ..._SCALE and ..._OFFSET bits to the next structure field. That field
    was .info_mask_shared_by_type before the _available attributes was added
    by commit 51239600074b ("iio:core: add a callback to allow drivers to
    provide _available attributes") and .info_mask_separate_available
    afterwards, and the regression happened.
    
    info_mask_shared_by_type is actually a better choice than the originally
    intended info_mask_separate for the ..._SCALE and ..._OFFSET bits since
    a constant is returned from mpl115_read_raw for the scale/offset. Using
    info_mask_shared_by_type also preserves the behavior from before the
    regression and is therefore less likely to cause other interesting side
    effects.
    
    The above mentioned regression causes unintended sysfs attibutes to
    show up that are not backed by code, in turn causing a NULL pointer
    defererence to happen on access.
    
    Fixes: 3017d90e8931 ("iio: Add Freescale MPL115A2 pressure / temperature sensor driver")
    Fixes: 51239600074b ("iio:core: add a callback to allow drivers to provide _available attributes")
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 615b1dc4f6155a4f44a9addeb7f2f85ea5a187ec
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Feb 23 16:22:55 2017 +0000

    Revert "arm64: mm: set the contiguous bit for kernel mappings where appropriate"
    
    commit d81bbe6d882461dec4b71dbe2aa85565fcca4187 upstream.
    
    This reverts commit 0bfc445dec9dd8130d22c9f4476eed7598524129.
    
    When we change the permissions of regions mapped using contiguous
    entries, the architecture requires us to follow a Break-Before-Make
    strategy, breaking *all* associated entries before we can change any of
    the following properties from the entries:
    
     - presence of the contiguous bit
     - output address
     - attributes
     - permissiones
    
    Failure to do so can result in a number of problems (e.g. TLB conflict
    aborts and/or erroneous results from TLB lookups).
    
    See ARM DDI 0487A.k_iss10775, "Misprogramming of the Contiguous bit",
    page D4-1762.
    
    We do not take this into account when altering the permissions of kernel
    segments in mark_rodata_ro(), where we change the permissions of live
    contiguous entires one-by-one, leaving them transiently inconsistent.
    This has been observed to result in failures on some fast model
    configurations.
    
    Unfortunately, we cannot follow Break-Before-Make here as we'd have to
    unmap kernel text and data used to perform the sequence.
    
    For the timebeing, revert commit 0bfc445dec9dd813 so as to avoid issues
    resulting from this misuse of the contiguous bit.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reported-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <Will.Deacon@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6c72c4e3d935aecbabef6b927f8d63c7d67cc42
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Thu Feb 2 20:30:03 2017 -0600

    KVM: arm/arm64: vgic: Stop injecting the MSI occurrence twice
    
    commit 0bdbf3b071986ba80731203683cf623d5c0cacb1 upstream.
    
    The IRQFD framework calls the architecture dependent function
    twice if the corresponding GSI type is edge triggered. For ARM,
    the function kvm_set_msi() is getting called twice whenever the
    IRQFD receives the event signal. The rest of the code path is
    trying to inject the MSI without any validation checks. No need
    to call the function vgic_its_inject_msi() second time to avoid
    an unnecessary overhead in IRQ queue logic. It also avoids the
    possibility of VM seeing the MSI twice.
    
    Simple fix, return -1 if the argument 'level' value is zero.
    
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68b83bee9b90d405691afa2427a09ee58e0582eb
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Feb 2 17:32:14 2017 +0000

    arm64: fix erroneous __raw_read_system_reg() cases
    
    commit 7d0928f18bf890d2853281f59aba0dd5a46b34f9 upstream.
    
    Since it was introduced in commit da8d02d19ffdd201 ("arm64/capabilities:
    Make use of system wide safe value"), __raw_read_system_reg() has
    erroneously mapped some sysreg IDs to other registers.
    
    For the fields in ID_ISAR5_EL1, our local feature detection will be
    erroneous. We may spuriously detect that a feature is uniformly
    supported, or may fail to detect when it actually is, meaning some
    compat hwcaps may be erroneous (or not enforced upon hotplug).
    
    This patch corrects the erroneous entries.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Fixes: da8d02d19ffdd201 ("arm64/capabilities: Make use of system wide safe value")
    Reported-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5d1e9cc2879daf30ce6efe740cafad1304b017a
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Wed Jan 25 18:31:31 2017 +0000

    arm64: dma-mapping: Fix dma_mapping_error() when bypassing SWIOTLB
    
    commit adbe7e26f4257f72817495b9bce114284060b0d7 upstream.
    
    When bypassing SWIOTLB on small-memory systems, we need to avoid calling
    into swiotlb_dma_mapping_error() in exactly the same way as we avoid
    swiotlb_dma_supported(), because the former also relies on SWIOTLB state
    being initialised.
    
    Under the assumptions for which we skip SWIOTLB, dma_map_{single,page}()
    will only ever return the DMA-offset-adjusted physical address of the
    page passed in, thus we can report success unconditionally.
    
    Fixes: b67a8b29df7e ("arm64: mm: only initialize swiotlb when necessary")
    CC: Jisheng Zhang <jszhang@marvell.com>
    Reported-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91dc54c352c4dac78037a543af0fe4c57a410b43
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Jan 25 12:29:59 2017 +0000

    arm/arm64: KVM: Enforce unconditional flush to PoC when mapping to stage-2
    
    commit 8f36ebaf21fdae99c091c67e8b6fab33969f2667 upstream.
    
    When we fault in a page, we flush it to the PoC (Point of Coherency)
    if the faulting vcpu has its own caches off, so that it can observe
    the page we just brought it.
    
    But if the vcpu has its caches on, we skip that step. Bad things
    happen when *another* vcpu tries to access that page with its own
    caches disabled. At that point, there is no garantee that the
    data has made it to the PoC, and we access stale data.
    
    The obvious fix is to always flush to PoC when a page is faulted
    in, no matter what the state of the vcpu is.
    
    Fixes: 2d58b733c876 ("arm64: KVM: force cache clean on page fault when caches are off")
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6039863d6c97814cd1e147021487fcc21a82762a
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Thu Feb 23 14:26:03 2017 -0800

    x86/pkeys: Check against max pkey to avoid overflows
    
    commit 58ab9a088ddac4efe823471275859d64f735577e upstream.
    
    Kirill reported a warning from UBSAN about undefined behavior when using
    protection keys.  He is running on hardware that actually has support for
    it, which is not widely available.
    
    The warning triggers because of very large shifts of integers when doing a
    pkey_free() of a large, invalid value. This happens because we never check
    that the pkey "fits" into the mm_pkey_allocation_map().
    
    I do not believe there is any danger here of anything bad happening
    other than some aliasing issues where somebody could do:
    
            pkey_free(35);
    
    and the kernel would effectively execute:
    
            pkey_free(8);
    
    While this might be confusing to an app that was doing something stupid, it
    has to do something stupid and the effects are limited to the app shooting
    itself in the foot.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Cc: kirill.shutemov@linux.intel.com
    Link: http://lkml.kernel.org/r/20170223222603.A022ED65@viggo.jf.intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7e1174b9d534671fd6583d061a44d631f526159
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Feb 22 20:08:25 2017 +0100

    fuse: add missing FR_FORCE
    
    commit 2e38bea99a80eab408adee27f873a188d57b76cb upstream.
    
    fuse_file_put() was missing the "force" flag for the RELEASE request when
    sending synchronously (fuseblk).
    
    If this flag is not set, then a sync request may be interrupted before it
    is dequeued by the userspace filesystem.  In this case the OPEN won't be
    balanced with a RELEASE.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 5a18ec176c93 ("fuse: fix hang of single threaded fuseblk filesystem")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5e2e7ca6e6a28b9796b977b7ff5fb206cc199dd
Author: Paulo Flabiano Smorigo <pfsmorigo@linux.vnet.ibm.com>
Date:   Wed Mar 1 11:00:00 2017 -0300

    crypto: vmx - Use skcipher for xts fallback
    
    commit 5839f555fa576be57371686265206398d9ea1480 upstream.
    
    Signed-off-by: Paulo Flabiano Smorigo <pfsmorigo@linux.vnet.ibm.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fd2ec10d3e1c8c4d93db1baaf3eef4e9bb1f3e3
Author: Paulo Flabiano Smorigo <pfsmorigo@linux.vnet.ibm.com>
Date:   Wed Mar 1 10:58:20 2017 -0300

    crypto: vmx - Use skcipher for cbc fallback
    
    commit c96d0a1c47abd5c4fa544dcedb5fac4d020ac58b upstream.
    
    Signed-off-by: Paulo Flabiano Smorigo <pfsmorigo@linux.vnet.ibm.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7fa3bd29e07398677f56b0a43581d21ba3cd643
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Sun Feb 26 12:22:35 2017 +0800

    crypto: api - Add crypto_requires_off helper
    
    commit 016df0abc56ec06d0c63c5318ef53e40738dea8b upstream.
    
    This patch adds crypto_requires_off which is an extension of
    crypto_requires_sync for similar bits such as NEED_FALLBACK.
    
    Suggested-by: Marcelo Cerri <marcelo.cerri@canonical.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddde9085f58cffb43100e9b0650b84a6b6534343
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Sun Feb 26 12:24:10 2017 +0800

    crypto: xts - Propagate NEED_FALLBACK bit
    
    commit 89027579bc6c2febbcc9c2f9d5069adf71539e4b upstream.
    
    When we're used as a fallback algorithm, we should propagate
    the NEED_FALLBACK bit when searching for the underlying ECB mode.
    
    This just happens to fix a hang too because otherwise the search
    may end up loading the same module that triggered this XTS creation.
    
    Fixes: f1c131b45410 ("crypto: xts - Convert to skcipher")
    Reported-by: Harald Freudenberger <freude@linux.vnet.ibm.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5b190f8689ca43297ed19d793c67132bf505529
Author: Laura Abbott <labbott@redhat.com>
Date:   Tue Feb 28 14:07:25 2017 -0800

    crypto: testmgr - Pad aes_ccm_enc_tv_template vector
    
    commit 1c68bb0f62bf8de8bb30123ea840d5168f25abea upstream.
    
    Running with KASAN and crypto tests currently gives
    
     BUG: KASAN: global-out-of-bounds in __test_aead+0x9d9/0x2200 at addr ffffffff8212fca0
     Read of size 16 by task cryptomgr_test/1107
     Address belongs to variable 0xffffffff8212fca0
     CPU: 0 PID: 1107 Comm: cryptomgr_test Not tainted 4.10.0+ #45
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.9.1-1.fc24 04/01/2014
     Call Trace:
      dump_stack+0x63/0x8a
      kasan_report.part.1+0x4a7/0x4e0
      ? __test_aead+0x9d9/0x2200
      ? crypto_ccm_init_crypt+0x218/0x3c0 [ccm]
      kasan_report+0x20/0x30
      check_memory_region+0x13c/0x1a0
      memcpy+0x23/0x50
      __test_aead+0x9d9/0x2200
      ? kasan_unpoison_shadow+0x35/0x50
      ? alg_test_akcipher+0xf0/0xf0
      ? crypto_skcipher_init_tfm+0x2e3/0x310
      ? crypto_spawn_tfm2+0x37/0x60
      ? crypto_ccm_init_tfm+0xa9/0xd0 [ccm]
      ? crypto_aead_init_tfm+0x7b/0x90
      ? crypto_alloc_tfm+0xc4/0x190
      test_aead+0x28/0xc0
      alg_test_aead+0x54/0xd0
      alg_test+0x1eb/0x3d0
      ? alg_find_test+0x90/0x90
      ? __sched_text_start+0x8/0x8
      ? __wake_up_common+0x70/0xb0
      cryptomgr_test+0x4d/0x60
      kthread+0x173/0x1c0
      ? crypto_acomp_scomp_free_ctx+0x60/0x60
      ? kthread_create_on_node+0xa0/0xa0
      ret_from_fork+0x2c/0x40
     Memory state around the buggy address:
      ffffffff8212fb80: 00 00 00 00 01 fa fa fa fa fa fa fa 00 00 00 00
      ffffffff8212fc00: 00 01 fa fa fa fa fa fa 00 00 00 00 01 fa fa fa
     >ffffffff8212fc80: fa fa fa fa 00 05 fa fa fa fa fa fa 00 00 00 00
                                       ^
      ffffffff8212fd00: 01 fa fa fa fa fa fa fa 00 00 00 00 01 fa fa fa
      ffffffff8212fd80: fa fa fa fa 00 00 00 00 00 05 fa fa fa fa fa fa
    
    This always happens on the same IV which is less than 16 bytes.
    
    Per Ard,
    
    "CCM IVs are 16 bytes, but due to the way they are constructed
    internally, the final couple of bytes of input IV are dont-cares.
    
    Apparently, we do read all 16 bytes, which triggers the KASAN errors."
    
    Fix this by padding the IV with null bytes to be at least 16 bytes.
    
    Fixes: 0bc5a6c5c79a ("crypto: testmgr - Disable rfc4309 test and convert test vectors")
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c2f646b90b7304cf96ad906272a080a62c48777
Author: Milan Broz <gmazyland@gmail.com>
Date:   Thu Feb 23 08:38:26 2017 +0100

    crypto: xts - Add ECB dependency
    
    commit 12cb3a1c4184f891d965d1f39f8cfcc9ef617647 upstream.
    
    Since the
       commit f1c131b45410a202eb45cc55980a7a9e4e4b4f40
       crypto: xts - Convert to skcipher
    the XTS mode is based on ECB, so the mode must select
    ECB otherwise it can fail to initialize.
    
    Signed-off-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fd8c1cb80a1403aab4f36de85804c44666a486d
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Dec 7 01:16:24 2016 -0800

    Drivers: hv: vmbus: Raise retry/wait limits in vmbus_post_msg()
    
    commit c0bb03924f1a80e7f65900e36c8e6b3dc167c5f8 upstream.
    
    DoS protection conditions were altered in WS2016 and now it's easy to get
    -EAGAIN returned from vmbus_post_msg() (e.g. when we try changing MTU on a
    netvsc device in a loop). All vmbus_post_msg() callers don't retry the
    operation and we usually end up with a non-functional device or crash.
    
    While host's DoS protection conditions are unknown to me my tests show that
    it can take up to 10 seconds before the message is sent so doing udelay()
    is not an option, we really need to sleep. Almost all vmbus_post_msg()
    callers are ready to sleep but there is one special case:
    vmbus_initiate_unload() which can be called from interrupt/NMI context and
    we can't sleep there. I'm also not sure about the lonely
    vmbus_send_tl_connect_request() which has no in-tree users but its external
    users are most likely waiting for the host to reply so sleeping there is
    also appropriate.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c849a5c6a83721b4c64dfc1e6851c2c8042c54b
Author: Ley Foon Tan <ley.foon.tan@intel.com>
Date:   Tue Feb 28 18:37:16 2017 +0800

    PCI: altera: Fix TLP_CFG_DW0 for TLP write
    
    commit 2a7275a3d867b228216886aae35e1f64291180b1 upstream.
    
    eb5767122feb ("PCI: altera: Simplify TLB_CFG_DW0 usage") used
    TLP_FMTTYPE_CFGRD* (instead of TLP_FMTTYPE_CFGWR*) for TLP writes, which
    causes writing to configuration space to fail.  Fix it by using correct
    FMTTYPE for write operation.
    
    Fixes: eb5767122feb ("PCI: altera: Simplify TLB_CFG_DW0 usage")
    Signed-off-by: Ley Foon Tan <ley.foon.tan@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc4c9766324a7e9fda48de58691796430c8511bf
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Thu Feb 16 10:22:34 2017 +1100

    pci/hotplug/pnv-php: Disable MSI and PCI device properly
    
    commit 49f4b08e61547a5ccd2db551d994c4503efe5666 upstream.
    
    pnv_php_disable_irq() can be called in two paths: Bailing path in
    pnv_php_enable_irq() or releasing slot. The MSI (or MSIx) interrupts
    is disabled unconditionally in pnv_php_disable_irq(). It's wrong
    because that might be enabled by drivers other than pnv-php.
    
    This disables MSI (or MSIx) interrupts and the PCI device only if
    it was enabled by pnv-php. In the error path of pnv_php_enable_irq(),
    we rely on the newly added parameter @disable_device. In the path
    of releasing slot, @pnv_php->irq is checked.
    
    Fixes: 360aebd85a4c ("drivers/pci/hotplug: Support surprise hotplug in powernv driver")
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91f5bce789d9083f1e24bc09b00c8c781c015835
Author: Dexuan Cui <decui@microsoft.com>
Date:   Fri Feb 10 15:18:46 2017 -0600

    PCI: hv: Fix wslot_to_devfn() to fix warnings on device removal
    
    commit 60e2e2fbafdd1285ae1b4ad39ded41603e0c74d0 upstream.
    
    The devfn of 00:02.0 is 0x10.  devfn_to_wslot(0x10) == 0x2, and
    wslot_to_devfn(0x2) should be 0x10, while it's 0x2 in the current code.
    
    Due to this, hv_eject_device_work() -> pci_get_domain_bus_and_slot()
    returns NULL and pci_stop_and_remove_bus_device() is not called.
    
    Later when the real device driver's .remove() is invoked by
    hv_pci_remove() -> pci_stop_root_bus(), some warnings can be noticed
    because the VM has lost the access to the underlying device at that
    time.
    
    Signed-off-by: Jake Oshins <jakeo@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Haiyang Zhang <haiyangz@microsoft.com>
    CC: K. Y. Srinivasan <kys@microsoft.com>
    CC: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1306371f6cacc7a0928e2088320acd47a83e05e4
Author: Christian Lamparter <chunkeey@googlemail.com>
Date:   Tue Feb 14 20:10:30 2017 +0100

    ath9k: use correct OTP register offsets for the AR9340 and AR9550
    
    commit c9f1e32600816d695f817477d56490bfc2ba43c6 upstream.
    
    This patch fixes the OTP register definitions for the AR934x and AR9550
    WMAC SoC.
    
    Previously, the ath9k driver was unable to initialize the integrated
    WMAC on an Aerohive AP121:
    
    | ath: phy0: timeout (1000 us) on reg 0x30018: 0xbadc0ffe & 0x00000007 != 0x00000004
    | ath: phy0: timeout (1000 us) on reg 0x30018: 0xbadc0ffe & 0x00000007 != 0x00000004
    | ath: phy0: Unable to initialize hardware; initialization status: -5
    | ath9k ar934x_wmac: failed to initialize device
    | ath9k: probe of ar934x_wmac failed with error -5
    
    It turns out that the AR9300_OTP_STATUS and AR9300_OTP_DATA
    definitions contain a typo.
    
    Cc: Gabor Juhos <juhosg@openwrt.org>
    Fixes: add295a4afbdf5852d0 "ath9k: use correct OTP register offsets for AR9550"
    Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
    Signed-off-by: Chris Blake <chrisrblake93@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bdf880b74c306e516572e1c7bfd4d035b9ac40f
Author: Felix Fietkau <nbd@nbd.name>
Date:   Thu Feb 2 10:14:52 2017 +0100

    ath9k: fix race condition in enabling/disabling IRQs
    
    commit 3a5e969bb2f6692a256352649355d56d018d6b88 upstream.
    
    The code currently relies on refcounting to disable IRQs from within the
    IRQ handler and re-enabling them again after the tasklet has run.
    
    However, due to race conditions sometimes the IRQ handler might be
    called twice, or the tasklet may not run at all (if interrupted in the
    middle of a reset).
    
    This can cause nasty imbalances in the irq-disable refcount which will
    get the driver permanently stuck until the entire radio has been stopped
    and started again (ath_reset will not recover from this).
    
    Instead of using this fragile logic, change the code to ensure that
    running the irq handler during tasklet processing is safe, and leave the
    refcount untouched.
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5294659a5721f2f582b4a8f2d110ee377b45ecd
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Jan 11 16:32:13 2017 +0200

    ath5k: drop bogus warning on drv_set_key with unsupported cipher
    
    commit a70e1d6fd6b5e1a81fa6171600942bee34f5128f upstream.
    
    Simply return -EOPNOTSUPP instead.
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21b7618b6a792a80d756dedb8f02bc8e84f7a8b4
Author: Tamizh chelvam <c_traja@qti.qualcomm.com>
Date:   Thu Feb 2 08:32:18 2017 +0200

    ath10k: fix boot failure in UTF mode/testmode
    
    commit cb4281528b62207918b1e95827cad7527aa4dbaa upstream.
    
    Rx filter reset and the dynamic tx switch mode (EXT_RESOURCE_CFG)
    configuration are causing the following errors when UTF firmware
    is loaded to the target.
    
    Error message 1:
    [ 598.015629] ath10k_pci 0001:01:00.0: failed to ping firmware: -110
    [ 598.020828] ath10k_pci 0001:01:00.0: failed to reset rx filter: -110
    [ 598.141556] ath10k_pci 0001:01:00.0: failed to start core (testmode): -110
    
    Error message 2:
    [ 668.615839] ath10k_ahb a000000.wifi: failed to send ext resource cfg command : -95
    [ 668.618902] ath10k_ahb a000000.wifi: failed to start core (testmode): -95
    
    Avoiding these configurations while bringing the target in
    testmode is solving the problem.
    
    Signed-off-by: Tamizh chelvam <c_traja@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fbc16143918511377544927f1dfb27e5eeed4fa
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Wed Feb 8 00:41:45 2017 +0200

    mei: remove support for broken parallel read
    
    commit cb97fbbcac15982406e0c74cd5512a8b6fcf10b3 upstream.
    
    Parallel reads from multiple threads on a file descriptor
    are not well defined and racy. It is safer to return to original
    behavior and simply fail the additional read.
    The solution is to remove request for next read credit.
    
    Fixes: ff1586a7ea57 ("mei: enqueue consecutive reads")
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8655a4538d01fe2357a26c4c1c84cfb3a53888fe
Author: Mathias Svensson <idolf@google.com>
Date:   Fri Jan 6 13:32:39 2017 -0800

    samples/seccomp: fix 64-bit comparison macros
    
    commit 916cafdc95843fb9af5fd5f83ca499d75473d107 upstream.
    
    There were some bugs in the JNE64 and JLT64 comparision macros. This fixes
    them, improves comments, and cleans up the file while we are at it.
    
    Reported-by: Stephen Röttger <sroettger@google.com>
    Signed-off-by: Mathias Svensson <idolf@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c30d59d397e40fe1979335ede6ac35d54b88911
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Feb 15 01:26:39 2017 -0500

    ext4: fix fencepost in s_first_meta_bg validation
    
    commit 2ba3e6e8afc9b6188b471f27cf2b5e3cf34e7af2 upstream.
    
    It is OK for s_first_meta_bg to be equal to the number of block group
    descriptor blocks.  (It rarely happens, but it shouldn't cause any
    problems.)
    
    https://bugzilla.kernel.org/show_bug.cgi?id=194567
    
    Fixes: 3a4b77cd47bb837b8557595ec7425f281f2ca1fe
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1062240132b68e88f25a0ec9c02a24bad51b94b
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Feb 5 01:26:48 2017 -0500

    ext4: return EROFS if device is r/o and journal replay is needed
    
    commit 4753d8a24d4588657bc0a4cd66d4e282dff15c8c upstream.
    
    If the file system requires journal recovery, and the device is
    read-ony, return EROFS to the mount system call.  This allows xfstests
    generic/050 to pass.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9605f3406975d12ac7ba415170e1f865be1e2070
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Feb 4 23:38:06 2017 -0500

    ext4: preserve the needs_recovery flag when the journal is aborted
    
    commit 97abd7d4b5d9c48ec15c425485f054e1c15e591b upstream.
    
    If the journal is aborted, the needs_recovery feature flag should not
    be removed.  Otherwise, it's the journal might not get replayed and
    this could lead to more data getting lost.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dda2495d85ff8f49cc271b6a5512f5ef8f91fe1
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Feb 4 23:04:00 2017 -0500

    ext4: fix inline data error paths
    
    commit eb5efbcb762aee4b454b04f7115f73ccbcf8f0ef upstream.
    
    The write_end() function must always unlock the page and drop its ref
    count, even on an error.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9bcbdfebb1fb52eb2b4087b5d6a50499e7fcba6
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Feb 1 21:07:11 2017 -0500

    ext4: fix use-after-iput when fscrypt contexts are inconsistent
    
    commit dd01b690f8f4b1e414f89e5a9a5326bf720d6652 upstream.
    
    In the case where the child's encryption context was inconsistent with
    its parent directory, we were using inode->i_sb and inode->i_ino after
    the inode had already been iput().  Fix this by doing the iput() in the
    correct places.
    
    Note: only ext4 had this bug, not f2fs and ubifs.
    
    Fixes: d9cdc9033181 ("ext4 crypto: enforce context consistency")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8f246b40261373b74b44e660824dee5b997312c
Author: Jan Kara <jack@suse.cz>
Date:   Fri Jan 27 14:35:38 2017 -0500

    ext4: fix data corruption in data=journal mode
    
    commit 3b136499e906460919f0d21a49db1aaccf0ae963 upstream.
    
    ext4_journalled_write_end() did not propely handle all the cases when
    generic_perform_write() did not copy all the data into the target page
    and could mark buffers with uninitialized contents as uptodate and dirty
    leading to possible data corruption (which would be quickly fixed by
    generic_perform_write() retrying the write but still). Fix the problem
    by carefully handling the case when the page that is written to is not
    uptodate.
    
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4fbdc0124799f1772f4d886b7f2e1a6f881d195
Author: Jan Kara <jack@suse.cz>
Date:   Fri Jan 27 14:34:30 2017 -0500

    ext4: trim allocation requests to group size
    
    commit cd648b8a8fd5071d232242d5ee7ee3c0815776af upstream.
    
    If filesystem groups are artifically small (using parameter -g to
    mkfs.ext4), ext4_mb_normalize_request() can result in a request that is
    larger than a block group. Trim the request size to not confuse
    allocation code.
    
    Reported-by: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 011fe6ade610c2ca5a609c83c509f1fc8e4c8b7f
Author: Roman Pen <roman.penyaev@profitbricks.com>
Date:   Sun Jan 8 21:00:35 2017 -0500

    ext4: do not polute the extents cache while shifting extents
    
    commit 03e916fa8b5577d85471452a3d0c5738aa658dae upstream.
    
    Inside ext4_ext_shift_extents() function ext4_find_extent() is called
    without EXT4_EX_NOCACHE flag, which should prevent cache population.
    
    This leads to oudated offsets in the extents tree and wrong blocks
    afterwards.
    
    Patch fixes the problem providing EXT4_EX_NOCACHE flag for each
    ext4_find_extents() call inside ext4_ext_shift_extents function.
    
    Fixes: 331573febb6a2
    Signed-off-by: Roman Pen <roman.penyaev@profitbricks.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: Namjae Jeon <namjae.jeon@samsung.com>
    Cc: Andreas Dilger <adilger.kernel@dilger.ca>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac870011b6dc4fc7a6a7a202868a52558b367aee
Author: Roman Pen <roman.penyaev@profitbricks.com>
Date:   Sun Jan 8 20:59:35 2017 -0500

    ext4: Include forgotten start block on fallocate insert range
    
    commit 2a9b8cba62c0741109c33a2be700ff3d7703a7c2 upstream.
    
    While doing 'insert range' start block should be also shifted right.
    The bug can be easily reproduced by the following test:
    
        ptr = malloc(4096);
        assert(ptr);
    
        fd = open("./ext4.file", O_CREAT | O_TRUNC | O_RDWR, 0600);
        assert(fd >= 0);
    
        rc = fallocate(fd, 0, 0, 8192);
        assert(rc == 0);
        for (i = 0; i < 2048; i++)
                *((unsigned short *)ptr + i) = 0xbeef;
        rc = pwrite(fd, ptr, 4096, 0);
        assert(rc == 4096);
        rc = pwrite(fd, ptr, 4096, 4096);
        assert(rc == 4096);
    
        for (block = 2; block < 1000; block++) {
                rc = fallocate(fd, FALLOC_FL_INSERT_RANGE, 4096, 4096);
                assert(rc == 0);
    
                for (i = 0; i < 2048; i++)
                        *((unsigned short *)ptr + i) = block;
    
                rc = pwrite(fd, ptr, 4096, 4096);
                assert(rc == 4096);
        }
    
    Because start block is not included in the range the hole appears at
    the wrong offset (just after the desired offset) and the following
    pwrite() overwrites already existent block, keeping hole untouched.
    
    Simple way to verify wrong behaviour is to check zeroed blocks after
    the test:
    
       $ hexdump ./ext4.file | grep '0000 0000'
    
    The root cause of the bug is a wrong range (start, stop], where start
    should be inclusive, i.e. [start, stop].
    
    This patch fixes the problem by including start into the range.  But
    not to break left shift (range collapse) stop points to the beginning
    of the a block, not to the end.
    
    The other not obvious change is an iterator check on validness in a
    main loop.  Because iterator is unsigned the following corner case
    should be considered with care: insert a block at 0 offset, when stop
    variables overflows and never becomes less than start, which is 0.
    To handle this special case iterator is set to NULL to indicate that
    end of the loop is reached.
    
    Fixes: 331573febb6a2
    Signed-off-by: Roman Pen <roman.penyaev@profitbricks.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: Namjae Jeon <namjae.jeon@samsung.com>
    Cc: Andreas Dilger <adilger.kernel@dilger.ca>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdc13a3e453e5932fd7a35f3101688c1bd7b245a
Author: Omar Sandoval <osandov@fb.com>
Date:   Wed Mar 1 10:42:38 2017 -0800

    loop: fix LO_FLAGS_PARTSCAN hang
    
    commit e02898b423802b1f3a3aaa7f16e896da069ba8f7 upstream.
    
    loop_reread_partitions() needs to do I/O, but we just froze the queue,
    so we end up waiting forever. This can easily be reproduced with losetup
    -P. Fix it by moving the reread to after we unfreeze the queue.
    
    Fixes: ecdd09597a57 ("block/loop: fix race between I/O and set_status")
    Reported-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Ming Lei <tom.leiming@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d957eb76b46870e98fbe8d367daf89f7b4713337
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Sat Feb 11 11:40:45 2017 +0800

    block/loop: fix race between I/O and set_status
    
    commit ecdd09597a57251323b0de50e3d45e69298c4a83 upstream.
    
    Inside set_status, transfer need to setup again, so
    we have to drain IO before the transition, otherwise
    oops may be triggered like the following:
    
            divide error: 0000 [#1] SMP KASAN
            CPU: 0 PID: 2935 Comm: loop7 Not tainted 4.10.0-rc7+ #213
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs
            01/01/2011
            task: ffff88006ba1e840 task.stack: ffff880067338000
            RIP: 0010:transfer_xor+0x1d1/0x440 drivers/block/loop.c:110
            RSP: 0018:ffff88006733f108 EFLAGS: 00010246
            RAX: 0000000000000000 RBX: ffff8800688d7000 RCX: 0000000000000059
            RDX: 0000000000000000 RSI: 1ffff1000d743f43 RDI: ffff880068891c08
            RBP: ffff88006733f160 R08: ffff8800688d7001 R09: 0000000000000000
            R10: 0000000000000000 R11: 0000000000000000 R12: ffff8800688d7000
            R13: ffff880067b7d000 R14: dffffc0000000000 R15: 0000000000000000
            FS:  0000000000000000(0000) GS:ffff88006d000000(0000)
            knlGS:0000000000000000
            CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
            CR2: 00000000006c17e0 CR3: 0000000066e3b000 CR4: 00000000001406f0
            Call Trace:
             lo_do_transfer drivers/block/loop.c:251 [inline]
             lo_read_transfer drivers/block/loop.c:392 [inline]
             do_req_filebacked drivers/block/loop.c:541 [inline]
             loop_handle_cmd drivers/block/loop.c:1677 [inline]
             loop_queue_work+0xda0/0x49b0 drivers/block/loop.c:1689
             kthread_worker_fn+0x4c3/0xa30 kernel/kthread.c:630
             kthread+0x326/0x3f0 kernel/kthread.c:227
             ret_from_fork+0x31/0x40 arch/x86/entry/entry_64.S:430
            Code: 03 83 e2 07 41 29 df 42 0f b6 04 30 4d 8d 44 24 01 38 d0 7f 08
            84 c0 0f 85 62 02 00 00 44 89 f8 41 0f b6 48 ff 25 ff 01 00 00 99 <f7>
            7d c8 48 63 d2 48 03 55 d0 48 89 d0 48 89 d7 48 c1 e8 03 83
            RIP: transfer_xor+0x1d1/0x440 drivers/block/loop.c:110 RSP:
            ffff88006733f108
            ---[ end trace 0166f7bd3b0c0933 ]---
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94cbe6f239a8d10fb9506c62a41c1edc609a5343
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Feb 4 23:14:19 2017 -0500

    jbd2: don't leak modified metadata buffers on an aborted journal
    
    commit e112666b4959b25a8552d63bc564e1059be703e8 upstream.
    
    If the journal has been aborted, we shouldn't mark the underlying
    buffer head as dirty, since that will cause the metadata block to get
    modified.  And if the journal has been aborted, we shouldn't allow
    this since it will almost certainly lead to a corrupted file system.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4639f7eef3c848268943c34631a061a960eaf4e
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Thu Nov 3 10:29:28 2016 -0600

    Fix: Disable sys_membarrier when nohz_full is enabled
    
    commit 907565337ebf998a68cb5c5b2174ce5e5da065eb upstream.
    
    Userspace applications should be allowed to expect the membarrier system
    call with MEMBARRIER_CMD_SHARED command to issue memory barriers on
    nohz_full CPUs, but synchronize_sched() does not take those into
    account.
    
    Given that we do not want unrelated processes to be able to affect
    real-time sensitive nohz_full CPUs, simply return ENOSYS when membarrier
    is invoked on a kernel with enabled nohz_full CPUs.
    
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    CC: Josh Triplett <josh@joshtriplett.org>
    CC: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Rik van Riel <riel@redhat.com>
    Acked-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 112db4f65c53512e534e3457466d593b2dfc0051
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Oct 25 11:37:59 2016 +0200

    power: reset: at91-poweroff: timely shutdown LPDDR memories
    
    commit 0b0408745e7ff24757cbfd571d69026c0ddb803c upstream.
    
    LPDDR memories can only handle up to 400 uncontrolled power off. Ensure the
    proper power off sequence is used before shutting down the platform.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2990d648cf23b5b5abd09fd06a9c532c7e79294
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Feb 17 09:02:45 2017 +0100

    scsi: use 'scsi_device_from_queue()' for scsi_dh
    
    commit 857de6e00778738dc3d61f75acbac35bdc48e533 upstream.
    
    The device handler needs to check if a given queue belongs to a scsi
    device; only then does it make sense to attach a device handler.
    
    [mkp: dropped flags]
    
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9acc751068e806ea0e2951fefb57b0230234d5f0
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Thu Feb 16 12:51:21 2017 -0800

    scsi: aacraid: Reorder Adapter status check
    
    commit c421530bf848604e97d0785a03b3fe2c62775083 upstream.
    
    The driver currently checks the SELF_TEST_FAILED first and then
    KERNEL_PANIC next. Under error conditions(boot code failure) both
    SELF_TEST_FAILED and KERNEL_PANIC can be set at the same time.
    
    The driver has the capability to reset the controller on an KERNEL_PANIC,
    but not on SELF_TEST_FAILED.
    
    Fixed by first checking KERNEL_PANIC and then the others.
    
    Fixes: e8b12f0fb835223752 ([SCSI] aacraid: Add new code for PMC-Sierra's SRC base controller family)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Reviewed-by: David Carroll <David.Carroll@microsemi.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 154f7a1523b717cad67e0b3d2ed4c660fd1b2e7c
Author: Michael Hernandez <michael.hernandez@cavium.com>
Date:   Wed Feb 15 15:37:21 2017 -0800

    scsi: qla2xxx: Fix Regression introduced by pci_alloc_irq_vectors_affinity call.
    
    commit 67f2db8792f96d8f7521461635d25f9c80245d80 upstream.
    
    For target mode, we need to increase minimum vectors value by one to
    account for ATIO queue.
    
    Following stack trace will be seen
    
    Call Trace:
    qla24xx_config_rings+0x15a/0x230 [qla2xxx]
    qla2x00_init_rings+0x1a1/0x3a0 [qla2xxx]
    qla2x00_restart_isp+0x5c/0x120 [qla2xxx]
    qla2x00_abort_isp+0x138/0x430 [qla2xxx]
    ? __schedule+0x260/0x580
    qla2x00_do_dpc+0x3bc/0x920 [qla2xxx]
    ? qla2x00_relogin+0x290/0x290 [qla2xxx]
    ? schedule+0x3a/0xa0
    ? qla2x00_relogin+0x290/0x290 [qla2xxx]
    kthread+0x103/0x140
    ? __kthread_init_worker+0x40/0x40
    ret_from_fork+0x29/0x40
    
    RIP: qlt_24xx_config_rings+0x6c/0x90
    
    [mkp: fixed Fixes: hash]
    
    Fixes: 17e5fc58588b ("scsi: qla2xxx: fix MSI-X vector affinity")
    Signed-off-by: Michael Hernandez <michael.hernandez@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 699abe249b0e2ca590284424d95490e92ccd6aeb
Author: Michael Hernandez <michael.hernandez@cavium.com>
Date:   Wed Feb 15 15:37:20 2017 -0800

    scsi: qla2xxx: Fix response queue count for Target mode.
    
    commit d0d2c68b759bbf678e078fd0c71b5fde65a9392c upstream.
    
    Target mode initialization was not calculating response queue values
    correctly resulting into one less MSI-X vector.
    
    [mkp: fixed Fixes: hash]
    
    Fixes: 093df73771ba ("scsi: qla2xxx: Fix Target mode handling with Multiqueue changes.")
    Signed-off-by: Michael Hernandez <michael.hernandez@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf9d9110806493e2ea2db7d00a1a991401dfb9d5
Author: Michael Hernandez <michael.hernandez@cavium.com>
Date:   Wed Feb 15 15:37:19 2017 -0800

    scsi: qla2xxx: Cleaned up queue configuration code.
    
    commit f54f2cb540b53d55a81d620e816810d59be5cb1b upstream.
    
    This patch cleaned up queue configuration code, such that once
    initialized, we should not touch msix_count value.  This will prevent
    incorrect numbers of MSI-X vectors requested while performing target
    mode configuration.
    
    [mkp: fixed Fixes: hash]
    
    Fixes: d74595278f4a ("scsi: qla2xxx: Add multiple queue pair functionality.")
    Signed-off-by: Michael Hernandez <michael.hernandez@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5fbe2328cc5c7211e4338b76f9004214b5bb663
Author: Long Li <longli@microsoft.com>
Date:   Wed Dec 14 18:46:03 2016 -0800

    scsi: storvsc: properly set residual data length on errors
    
    commit 40630f462824ee24bc00d692865c86c3828094e0 upstream.
    
    On I/O errors, the Windows driver doesn't set data_transfer_length
    on error conditions other than SRB_STATUS_DATA_OVERRUN.
    In these cases we need to set data_transfer_length to 0,
    indicating there is no data transferred. On SRB_STATUS_DATA_OVERRUN,
    data_transfer_length is set by the Windows driver to the actual data transferred.
    
    Reported-by: Shiva Krishna <Shiva.Krishna@nimblestorage.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aeb049529f3573dd35a549f846e5f623899d480
Author: Long Li <longli@microsoft.com>
Date:   Wed Dec 14 18:46:02 2016 -0800

    scsi: storvsc: properly handle SRB_ERROR when sense message is present
    
    commit bba5dc332ec2d3a685cb4dae668c793f6a3713a3 upstream.
    
    When sense message is present on error, we should pass along to the upper
    layer to decide how to deal with the error.
    This patch fixes connectivity issues with Fiber Channel devices.
    
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99b3ba253c8b7bf8635fc68b5371a8225371f47c
Author: Long Li <longli@microsoft.com>
Date:   Wed Dec 14 18:46:01 2016 -0800

    scsi: storvsc: use tagged SRB requests if supported by the device
    
    commit 3cd6d3d9b1abab8dcdf0800224ce26daac24eea2 upstream.
    
    Properly set SRB flags when hosting device supports tagged queuing.
    This patch improves the performance on Fiber Channel disks.
    
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4517ad77e7e6bb08b8ebb0487ef508b127b0c8f2
Author: Heinz Mauelshagen <heinzm@redhat.com>
Date:   Tue Feb 28 19:17:49 2017 +0100

    dm raid: fix data corruption on reshape request
    
    commit d36a19541fe8f392778ac137d60f9be8dfdd8f9d upstream.
    
    The lvm2 sequence to manage dm-raid constructor flags that trigger a
    rebuild or a reshape is defined as:
    
    1) load table with flags (e.g. rebuild/delta_disks/data_offset)
    2) clear out the flags in lvm2 metadata
    3) store the lvm2 metadata, reload the table to reset the flags
       previously established during the initial load (1) -- in order to
       prevent repeatedly requesting a rebuild or a reshape on activation
    
    Currently, loading an inactive table with rebuild/reshape flags
    specified will cause dm-raid to rebuild/reshape on resume and thus start
    updating the raid metadata (about the progress).  When the second table
    reload, to reset the flags, occurs the constructor accesses the volatile
    progress state kept in the raid superblocks.  Because the active mapping
    is still processing the rebuild/reshape, that position will be stale by
    the time the device is resumed.
    
    In the reshape case, this causes data corruption by processing already
    reshaped stripes again.  In the rebuild case, it does _not_ cause data
    corruption but instead involves superfluous rebuilds.
    
    Fix by keeping the raid set frozen during the first resume and then
    allow the rebuild/reshape during the second resume.
    
    Fixes: 9dbd1aa3a ("dm raid: add reshaping support to the target")
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37ce3ec1e70b68c82e64a747e4892b5e15ff620f
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Feb 16 23:57:17 2017 -0500

    dm round robin: revert "use percpu 'repeat_count' and 'current_path'"
    
    commit 37a098e9d10db6e2efc05fe61e3a6ff2e9802c53 upstream.
    
    The sloppy nature of lockless access to percpu pointers
    (s->current_path) in rr_select_path(), from multiple threads, is
    causing some paths to used more than others -- which results in less
    IO performance being observed.
    
    Revert these upstream commits to restore truly symmetric round-robin
    IO submission in DM multipath:
    
    b0b477c dm round robin: use percpu 'repeat_count' and 'current_path'
    802934b dm round robin: do not use this_cpu_ptr() without having preemption disabled
    
    There is no benefit to all this complexity if repeat_count = 1 (which is
    the recommended default).
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72ea8179bc800548984f82c43e4c1b6fea796392
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Feb 15 12:06:19 2017 -0500

    dm stats: fix a leaked s->histogram_boundaries array
    
    commit 6085831883c25860264721df15f05bbded45e2a2 upstream.
    
    Fixes: dfcfac3e4cd9 ("dm stats: collect and report histogram of IO latencies")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d18f5797ecf3d7ee59bbd2be2f729cf4acfff915
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Feb 9 11:46:18 2017 -0500

    dm cache: fix corruption seen when using cache > 2TB
    
    commit ca763d0a53b264a650342cee206512bc92ac7050 upstream.
    
    A rounding bug due to compiler generated temporary being 32bit was found
    in remap_to_cache().  A localized cast in remap_to_cache() fixes the
    corruption but this preferred fix (changing from uint32_t to sector_t)
    eliminates potential for future rounding errors elsewhere.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae74de54c982372290526b616f840fdaccb1e344
Author: Chanwoo Choi <cw00.choi@samsung.com>
Date:   Tue Jan 31 15:38:17 2017 +0900

    PM / devfreq: Fix wrong trans_stat of passive devfreq device
    
    commit 30582c25a4b4e0a5e456a309fde79b845e9473b2 upstream.
    
    Until now, the trans_stat information of passive devfreq is not updated.
    This patch updates the trans_stat information after setting the target
    frequency of passive devfreq device.
    
    Fixes: 996133119f57 ("PM / devfreq: Add new passive governor")
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1aa0ed613681addbcf69944c5807faa0e1f429f
Author: Chanwoo Choi <cw00.choi@samsung.com>
Date:   Tue Jan 31 15:38:16 2017 +0900

    PM / devfreq: Fix available_governor sysfs
    
    commit bcf23c79c4e46130701370af4383b61a3cba755c upstream.
    
    The devfreq using passive governor is not able to change the governor.
    So, the user can not change the governor through 'available_governor' sysfs
    entry. Also, the devfreq which don't use the passive governor is not able to
    change to 'passive' governor on the fly.
    
    Fixes: 996133119f57 ("PM / devfreq: Add new passive governor")
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c01d51bb34a686ea9b3741f9f0fe936e76f6cc
Author: Mimi Zohar <zohar@linux.vnet.ibm.com>
Date:   Tue Jan 17 06:45:41 2017 -0500

    ima: fix ima_d_path() possible race with rename
    
    commit bc15ed663e7e53ee4dc3e60f8d09c93a0528c694 upstream.
    
    On failure to return a pathname from ima_d_path(), a pointer to
    dname is returned, which is subsequently used in the IMA measurement
    list, the IMA audit records, and other audit logging.  Saving the
    pointer to dname for later use has the potential to race with rename.
    
    Intead of returning a pointer to dname on failure, this patch returns
    a pointer to a copy of the filename.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87d1f686d6bf9d9003372469ffb5f1c310f28299
Author: Davidlohr Bueso <dave@stgolabs.net>
Date:   Mon Feb 27 14:28:24 2017 -0800

    ipc/shm: Fix shmat mmap nil-page protection
    
    commit 95e91b831f87ac8e1f8ed50c14d709089b4e01b8 upstream.
    
    The issue is described here, with a nice testcase:
    
        https://bugzilla.kernel.org/show_bug.cgi?id=192931
    
    The problem is that shmat() calls do_mmap_pgoff() with MAP_FIXED, and
    the address rounded down to 0.  For the regular mmap case, the
    protection mentioned above is that the kernel gets to generate the
    address -- arch_get_unmapped_area() will always check for MAP_FIXED and
    return that address.  So by the time we do security_mmap_addr(0) things
    get funky for shmat().
    
    The testcase itself shows that while a regular user crashes, root will
    not have a problem attaching a nil-page.  There are two possible fixes
    to this.  The first, and which this patch does, is to simply allow root
    to crash as well -- this is also regular mmap behavior, ie when hacking
    up the testcase and adding mmap(...  |MAP_FIXED).  While this approach
    is the safer option, the second alternative is to ignore SHM_RND if the
    rounded address is 0, thus only having MAP_SHARED flags.  This makes the
    behavior of shmat() identical to the mmap() case.  The downside of this
    is obviously user visible, but does make sense in that it maintains
    semantics after the round-down wrt 0 address and mmap.
    
    Passes shm related ltp tests.
    
    Link: http://lkml.kernel.org/r/1486050195-18629-1-git-send-email-dave@stgolabs.net
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Reported-by: Gareth Evans <gareth.evans@contextis.co.uk>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: Michael Kerrisk <mtk.manpages@googlemail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d24d588d82eefd35c0568982fb4fc1014a95487
Author: Stas Sergeev <stsp@list.ru>
Date:   Mon Feb 27 14:27:25 2017 -0800

    sigaltstack: support SS_AUTODISARM for CONFIG_COMPAT
    
    commit 441398d378f29a5ad6d0fcda07918e54e4961800 upstream.
    
    Currently SS_AUTODISARM is not supported in compatibility mode, but does
    not return -EINVAL either.  This makes dosemu built with -m32 on x86_64
    to crash.  Also the kernel's sigaltstack selftest fails if compiled with
    -m32.
    
    This patch adds the needed support.
    
    Link: http://lkml.kernel.org/r/20170205101213.8163-2-stsp@list.ru
    Signed-off-by: Stas Sergeev <stsp@users.sourceforge.net>
    Cc: Milosz Tanski <milosz@adfin.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Nicolas Pitre <nicolas.pitre@linaro.org>
    Cc: Waiman Long <Waiman.Long@hpe.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Wang Xiaoqiang <wangxq10@lzu.edu.cn>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97ddabf533f7369d10f28ebc54822dc841344622
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Feb 22 15:46:01 2017 -0800

    mm, vmscan: consider eligible zones in get_scan_count
    
    commit 71ab6cfe88dcf9f6e6a65eb85cf2bda20a257682 upstream.
    
    get_scan_count() considers the whole node LRU size when
    
     - doing SCAN_FILE due to many page cache inactive pages
     - calculating the number of pages to scan
    
    In both cases this might lead to unexpected behavior especially on 32b
    systems where we can expect lowmem memory pressure very often.
    
    A large highmem zone can easily distort SCAN_FILE heuristic because
    there might be only few file pages from the eligible zones on the node
    lru and we would still enforce file lru scanning which can lead to
    trashing while we could still scan anonymous pages.
    
    The later use of lruvec_lru_size can be problematic as well.  Especially
    when there are not many pages from the eligible zones.  We would have to
    skip over many pages to find anything to reclaim but shrink_node_memcg
    would only reduce the remaining number to scan by SWAP_CLUSTER_MAX at
    maximum.  Therefore we can end up going over a large LRU many times
    without actually having chance to reclaim much if anything at all.  The
    closer we are out of memory on lowmem zone the worse the problem will
    be.
    
    Fix this by filtering out all the ineligible zones when calculating the
    lru size for both paths and consider only sc->reclaim_idx zones.
    
    The patch would need to be tweaked a bit to apply to 4.10 and older but
    I will do that as soon as it hits the Linus tree in the next merge
    window.
    
    Link: http://lkml.kernel.org/r/20170117103702.28542-3-mhocko@kernel.org
    Fixes: b2e18757f2c9 ("mm, vmscan: begin reclaiming pages on a per-node basis")
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Tested-by: Trevor Cordes <trevor@tecnopolis.ca>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Hillf Danton <hillf.zj@alibaba-inc.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2338022cdedb4d6b85385a3d1459f3086ff6fef
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Feb 22 15:45:58 2017 -0800

    mm, vmscan: cleanup lru size claculations
    
    commit fd538803731e50367b7c59ce4ad3454426a3d671 upstream.
    
    lruvec_lru_size returns the full size of the LRU list while we sometimes
    need a value reduced only to eligible zones (e.g.  for lowmem requests).
    inactive_list_is_low is one such user.  Later patches will add more of
    them.  Add a new parameter to lruvec_lru_size and allow it filter out
    zones which are not eligible for the given context.
    
    Link: http://lkml.kernel.org/r/20170117103702.28542-2-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Hillf Danton <hillf.zj@alibaba-inc.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b156aab44c9190ca0573f008b7eeb7854f237d6
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Fri Feb 24 15:00:40 2017 -0800

    mm balloon: umount balloon_mnt when removing vb device
    
    commit 9c57b5808c625f4fc93da330b932647eaff321f7 upstream.
    
    With CONFIG_BALLOON_COMPACTION=y the kernel will mount balloon_mnt for
    balloon page migration when we probe a virtio_balloon device.  However
    we do not unmount it when removing the device.  Fix this.
    
    Fixes: b1123ea6d3b3 ("mm: balloon: use general non-lru movable page feature")
    Link: http://lkml.kernel.org/r/1486531318-35189-1-git-send-email-xieyisheng1@huawei.com
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Cc: Rafael Aquini <aquini@redhat.com>
    Cc: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Gioh Kim <gi-oh.kim@profitbricks.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Xishi Qiu <qiuxishi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e560c8b23c3be63ad1c761eaa26bd9624a5b093e
Author: Minchan Kim <minchan@kernel.org>
Date:   Fri Feb 24 14:59:59 2017 -0800

    mm: do not access page->mapping directly on page_endio
    
    commit dd8416c47715cf324c9a16f13273f9fda87acfed upstream.
    
    With rw_page, page_endio is used for completing IO on a page and it
    propagates write error to the address space if the IO fails.  The
    problem is it accesses page->mapping directly which might be okay for
    file-backed pages but it shouldn't for anonymous page.  Otherwise, it
    can corrupt one of field from anon_vma under us and system goes panic
    randomly.
    
    swap_writepage
      bdev_writepage
        ops->rw_page
    
    I encountered the BUG during developing new zram feature and it was
    really hard to figure it out because it made random crash, somtime
    mmap_sem lockdep, sometime other places where places never related to
    zram/zsmalloc, and not reproducible with some configuration.
    
    When I consider how that bug is subtle and people do fast-swap test with
    brd, it's worth to add stable mark, I think.
    
    Fixes: dd6bd0d9c7db ("swap: use bdev_read_page() / bdev_write_page()")
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67b5c7997148bd48d693b1d6add8287a358a6e37
Author: Vinayak Menon <vinmenon@codeaurora.org>
Date:   Fri Feb 24 14:59:39 2017 -0800

    mm: vmpressure: fix sending wrong events on underflow
    
    commit e1587a4945408faa58d0485002c110eb2454740c upstream.
    
    At the end of a window period, if the reclaimed pages is greater than
    scanned, an unsigned underflow can result in a huge pressure value and
    thus a critical event.  Reclaimed pages is found to go higher than
    scanned because of the addition of reclaimed slab pages to reclaimed in
    shrink_node without a corresponding increment to scanned pages.
    
    Minchan Kim mentioned that this can also happen in the case of a THP
    page where the scanned is 1 and reclaimed could be 512.
    
    Link: http://lkml.kernel.org/r/1486641577-11685-1-git-send-email-vinmenon@codeaurora.org
    Signed-off-by: Vinayak Menon <vinmenon@codeaurora.org>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Anton Vorontsov <anton.vorontsov@linaro.org>
    Cc: Shiraz Hashim <shashim@codeaurora.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fd7a425d92537c7e4b659586f22a4901ce11d71
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Fri Feb 24 14:59:33 2017 -0800

    mm/page_alloc: fix nodes for reclaim in fast path
    
    commit e02dc017c3032dcdce1b993af0db135462e1b4b7 upstream.
    
    When @node_reclaim_node isn't 0, the page allocator tries to reclaim
    pages if the amount of free memory in the zones are below the low
    watermark.  On Power platform, none of NUMA nodes are scanned for page
    reclaim because no nodes match the condition in zone_allows_reclaim().
    On Power platform, RECLAIM_DISTANCE is set to 10 which is the distance
    of Node-A to Node-A.  So the preferred node even won't be scanned for
    page reclaim.
    
       __alloc_pages_nodemask()
       get_page_from_freelist()
          zone_allows_reclaim()
    
    Anton proposed the test code as below:
    
       # cat alloc.c
          :
       int main(int argc, char *argv[])
       {
            void *p;
            unsigned long size;
            unsigned long start, end;
    
            start = time(NULL);
            size = strtoul(argv[1], NULL, 0);
            printf("To allocate %ldGB memory\n", size);
    
            size <<= 30;
            p = malloc(size);
            assert(p);
            memset(p, 0, size);
    
            end = time(NULL);
            printf("Used time: %ld seconds\n", end - start);
            sleep(3600);
            return 0;
       }
    
    The system I use for testing has two NUMA nodes.  Both have 128GB
    memory.  In below scnario, the page caches on node#0 should be reclaimed
    when it encounters pressure to accommodate request of allocation.
    
       # echo 2 > /proc/sys/vm/zone_reclaim_mode; \
         sync; \
         echo 3 > /proc/sys/vm/drop_caches; \
       # taskset -c 0 cat file.32G > /dev/null; \
         grep FilePages /sys/devices/system/node/node0/meminfo
         Node 0 FilePages:       33619712 kB
       # taskset -c 0 ./alloc 128
       # grep FilePages /sys/devices/system/node/node0/meminfo
         Node 0 FilePages:       33619840 kB
       # grep MemFree /sys/devices/system/node/node0/meminfo
         Node 0 MemFree:          186816 kB
    
    With the patch applied, the pagecache on node-0 is reclaimed when its
    free memory is running out.  It's the expected behaviour.
    
       # echo 2 > /proc/sys/vm/zone_reclaim_mode; \
         sync; \
         echo 3 > /proc/sys/vm/drop_caches
       # taskset -c 0 cat file.32G > /dev/null; \
         grep FilePages /sys/devices/system/node/node0/meminfo
         Node 0 FilePages:       33605568 kB
       # taskset -c 0 ./alloc 128
       # grep FilePages /sys/devices/system/node/node0/meminfo
         Node 0 FilePages:        1379520 kB
       # grep MemFree /sys/devices/system/node/node0/meminfo
         Node 0 MemFree:           317120 kB
    
    Fixes: 5f7a75acdb24 ("mm: page_alloc: do not cache reclaim distances")
    Link: http://lkml.kernel.org/r/1486532455-29613-1-git-send-email-gwshan@linux.vnet.ibm.com
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Anton Blanchard <anton@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0e2f86dff3af4c8ca84b7d044152648fabcc45f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Feb 24 14:55:45 2017 -0800

    mm, devm_memremap_pages: hold device_hotplug lock over mem_hotplug_{begin, done}
    
    commit b5d24fda9c3dce51fcb4eee459550a458eaaf1e2 upstream.
    
    The mem_hotplug_{begin,done} lock coordinates with {get,put}_online_mems()
    to hold off "readers" of the current state of memory from new hotplug
    actions.  mem_hotplug_begin() expects exclusive access, via the
    device_hotplug lock, to set mem_hotplug.active_writer.  Calling
    mem_hotplug_begin() without locking device_hotplug can lead to
    corrupting mem_hotplug.refcount and missed wakeups / soft lockups.
    
    [dan.j.williams@intel.com: v2]
      Link: http://lkml.kernel.org/r/148728203365.38457.17804568297887708345.stgit@dwillia2-desk3.amr.corp.intel.com
    Link: http://lkml.kernel.org/r/148693885680.16345.17802627926777862337.stgit@dwillia2-desk3.amr.corp.intel.com
    Fixes: f931ab479dd2 ("mm: fix devm_memremap_pages crash, use mem_hotplug_{begin, done}")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Toshi Kani <toshi.kani@hpe.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Logan Gunthorpe <logang@deltatee.com>
    Cc: Masayoshi Mizuma <m.mizuma@jp.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 069634bd9e517f90154024240d53371ec703c425
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Thu Jan 19 13:53:15 2017 -0800

    CIFS: Fix splice read for non-cached files
    
    commit 9c25702cee1405099f982894c865c163de7909a8 upstream.
    
    Currently we call copy_page_to_iter() for uncached reading into a pipe.
    This is wrong because it treats pages as VFS cache pages and copies references
    rather than actual data. When we are trying to read from the pipe we end up
    calling page_cache_pipe_buf_confirm() which returns -ENODATA. This error
    is translated into 0 which is returned to a user.
    
    This issue is reproduced by running xfs-tests suite (generic test #249)
    against mount points with "cache=none". Fix it by mapping pages manually
    and calling copy_to_iter() that copies data into the pipe.
    
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d654322f85e279ad09584beaf42dfbb3f84487e
Author: Ashok Raj <ashok.raj@intel.com>
Date:   Mon Jan 30 09:39:53 2017 -0800

    iommu/vt-d: Tylersburg isoch identity map check is done too late.
    
    commit 21e722c4c8377b5bc82ad058fed12165af739c1b upstream.
    
    The check to set identity map for tylersburg is done too late. It needs
    to be done before the check for identity_map domain is done.
    
    To: Joerg Roedel <joro@8bytes.org>
    To: David Woodhouse <dwmw2@infradead.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: linux-kernel@vger.kernel.org
    Cc: Ashok Raj <ashok.raj@intel.com>
    
    Fixes: 86080ccc22 ("iommu/vt-d: Allocate si_domain in init_dmars()")
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Reported-by: Yunhong Jiang <yunhong.jiang@intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f8d55b2050c9a2a87107801ce442f35aea4063b
Author: CQ Tang <cq.tang@intel.com>
Date:   Mon Jan 30 09:39:52 2017 -0800

    iommu/vt-d: Fix some macros that are incorrectly specified in intel-iommu
    
    commit aaa59306b0b7e0ca4ba92cc04c5db101cbb1c096 upstream.
    
    Some of the macros are incorrect with wrong bit-shifts resulting in picking
    the incorrect invalidation granularity. Incorrect Source-ID in extended
    devtlb invalidation caused device side errors.
    
    To: Joerg Roedel <joro@8bytes.org>
    To: David Woodhouse <dwmw2@infradead.org>
    Cc: iommu@lists.linux-foundation.org
    Cc: linux-kernel@vger.kernel.org
    Cc: CQ Tang <cq.tang@intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    
    Fixes: 2f26e0a9 ("iommu/vt-d: Add basic SVM PASID support")
    Signed-off-by: CQ Tang <cq.tang@intel.com>
    Signed-off-by: Ashok Raj <ashok.raj@intel.com>
    Tested-by: CQ Tang <cq.tang@intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b54dc49d8c4f2b1ab5ea27cca47db3fb8fa51ddf
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Feb 7 15:51:47 2017 +0000

    tpm_tis: fix the error handling of init_tis()
    
    commit 5939eaf4f9d432586dd2cdeea778506471e8088e upstream.
    
    Add the missing platform_driver_unregister() and remove the duplicate
    platform_device_unregister(force_pdev) in the error handling case.
    
    Fixes: 00194826e6be ("tpm_tis: Clean up the force=1 module parameter")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c15aff9ef90139b83e806c1978201b51e012b736
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Fri Jan 13 22:37:00 2017 +0100

    tpm_tis: use default timeout value if chip reports it as zero
    
    commit 1d70fe9d9c3a4c627f9757cbba5d628687b121c1 upstream.
    
    Since commit 1107d065fdf1 ("tpm_tis: Introduce intermediate layer for
    TPM access") Atmel 3203 TPM on ThinkPad X61S (TPM firmware version 13.9)
    no longer works.  The initialization proceeds fine until we get and
    start using chip-reported timeouts - and the chip reports C and D
    timeouts of zero.
    
    It turns out that until commit 8e54caf407b98e ("tpm: Provide a generic
    means to override the chip returned timeouts") we had actually let
    default timeout values remain in this case, so let's bring back this
    behavior to make chips like Atmel 3203 work again.
    
    Use a common code that was introduced by that commit so a warning is
    printed in this case and /sys/class/tpm/tpm*/timeouts correctly says the
    timeouts aren't chip-original.
    
    Fixes: 1107d065fdf1 ("tpm_tis: Introduce intermediate layer for TPM access")
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 992b0ac79a12c58199ed2bf915a7bf0020c009ca
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Tue Feb 14 17:31:03 2017 +0200

    regulator: Fix regulator_summary for deviceless consumers
    
    commit e42a46b6f52473661ad192f76a128a68fe301df4 upstream.
    
    It is allowed to call regulator_get with a NULL dev argument
    (_regulator_get explicitly checks for it) but this causes an error later
    when printing /sys/kernel/debug/regulator_summary.
    
    Fix this by explicitly handling "deviceless" consumers in the debugfs code.
    
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2eb4d8daec8695beecb1f526ad7d6a35cd352cb5
Author: Wang Nan <wangnan0@huawei.com>
Date:   Mon Jan 23 10:41:22 2017 -0700

    coresight: fix kernel panic caused by invalid CPU
    
    commit f09444639099584bc4784dfcd85ada67c6f33e0f upstream.
    
    Commit d52c9750f150 ("coresight: reset "enable_sink" flag when need be")
    caused a kernel panic because of the using of an invalid value: after
    'for_each_cpu(cpu, mask)', value of local variable 'cpu' become invalid,
    causes following 'cpu_to_node' access invalid memory area.
    
    This patch brings the deleted 'cpu = cpumask_first(mask)' back.
    
    Panic log:
    
     $ perf record -e cs_etm// ls
    
     Unable to handle kernel paging request at virtual address fffe801804af4f10
     pgd = ffff8017ce031600
     [fffe801804af4f10] *pgd=0000000000000000, *pud=0000000000000000
     Internal error: Oops: 96000004 [#1] SMP
     Modules linked in:
     CPU: 33 PID: 1619 Comm: perf Not tainted 4.7.1+ #16
     Hardware name: Huawei Taishan 2280 /CH05TEVBA, BIOS 1.10 11/24/2016
     task: ffff8017cb0c8400 ti: ffff8017cb154000 task.ti: ffff8017cb154000
     PC is at tmc_alloc_etf_buffer+0x60/0xd4
     LR is at tmc_alloc_etf_buffer+0x44/0xd4
     pc : [<ffff000008633df8>] lr : [<ffff000008633ddc>] pstate: 60000145
     sp : ffff8017cb157b40
     x29: ffff8017cb157b40 x28: 0000000000000000
     ...skip...
     7a60: ffff000008c64dc8 0000000000000006 0000000000000253 ffffffffffffffff
     7a80: 0000000000000000 0000000000000000 ffff0000080872cc 0000000000000001
     [<ffff000008633df8>] tmc_alloc_etf_buffer+0x60/0xd4
     [<ffff000008632b9c>] etm_setup_aux+0x1dc/0x1e8
     [<ffff00000816eed4>] rb_alloc_aux+0x2b0/0x338
     [<ffff00000816a5e4>] perf_mmap+0x414/0x568
     [<ffff0000081ab694>] mmap_region+0x324/0x544
     [<ffff0000081abbe8>] do_mmap+0x334/0x3e0
     [<ffff000008191150>] vm_mmap_pgoff+0xa4/0xc8
     [<ffff0000081a9a30>] SyS_mmap_pgoff+0xb0/0x22c
     [<ffff0000080872e4>] sys_mmap+0x18/0x28
     [<ffff0000080843f0>] el0_svc_naked+0x24/0x28
     Code: 912040a5 d0001c00 f873d821 911c6000 (b8656822)
     ---[ end trace 98933da8f92b0c9a ]---
    
    Signed-off-by: Wang Nan <wangnan0@huawei.com>
    Cc: Xia Kaixu <xiakaixu@huawei.com>
    Cc: Li Zefan <lizefan@huawei.com>
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Fixes: d52c9750f150 ("coresight: reset "enable_sink" flag when need be")
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91b8d5b2f2e313983cc8654714e55513e9d3c385
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Mon Jan 16 18:00:00 2017 +0000

    coresight: STM: Balance enable/disable
    
    commit 4474f4c40a9c607c7317e686b23619b7b768004f upstream.
    
    The stm is automatically enabled when an application sets the policy
    via ->link() call back by using coresight_enable(), which keeps the
    refcount of the current users of the STM. However, the unlink() callback
    issues stm_disable() directly, which leaves the STM turned off, without
    the coresight layer knowing about it. This prevents any further uses
    of the STM hardware as the coresight layer still thinks the STM is
    turned on and doesn't enable the hardware when required. Even manually
    enabling the STM via sysfs can't really enable the hw.
    
    e.g,
    
     $ echo 1 > $CS_DEVS/$ETR/enable_sink
     $ mkdir -p $CONFIG_FS/stp-policy/$source.0/stm_test/
     $ echo 32768 65535 > $CONFIG_FS/stp-policy/$source.0/stm_test/channels
     $ echo 64 > $CS_DEVS/$source/traceid
     $ ./stm_app
     Sending 64000 byte blocks of pattern 0 at 0us intervals
     Success to map channel(32768~32783) to 0xffffa95fa000
     Sending on channel 32768
     $ dd if=/dev/$ETR of=~/trace.bin.1
     597+1 records in
     597+1 records out
     305920 bytes (306 kB) copied, 0.399952 s, 765 kB/s
     $ ./stm_app
     Sending 64000 byte blocks of pattern 0 at 0us intervals
     Success to map channel(32768~32783) to 0xffff7e9e2000
     Sending on channel 32768
     $ dd if=/dev/$ETR of=~/trace.bin.2
     0+0 records in
     0+0 records out
     0 bytes (0 B) copied, 0.0232083 s, 0.0 kB/s
    
     Note that we don't get any data from the ETR for the second session.
    
     Also dmesg shows :
    
     [   77.520458] coresight-tmc 20800000.etr: TMC-ETR enabled
     [   77.537097] coresight-replicator etr_replicator@20890000: REPLICATOR enabled
     [   77.558828] coresight-replicator main_replicator@208a0000: REPLICATOR enabled
     [   77.581068] coresight-funnel 208c0000.main_funnel: FUNNEL inport 0 enabled
     [   77.602217] coresight-tmc 20840000.etf: TMC-ETF enabled
     [   77.618422] coresight-stm 20860000.stm: STM tracing enabled
     [  139.554252] coresight-stm 20860000.stm: STM tracing disabled
      # End of first tracing session
     [  146.351135] coresight-tmc 20800000.etr: TMC read start
     [  146.514486] coresight-tmc 20800000.etr: TMC read end
      # Note that the STM is not turned on via stm_generic_link()->coresight_enable()
      # and hence none of the components are turned on.
     [  152.479080] coresight-tmc 20800000.etr: TMC read start
     [  152.542632] coresight-tmc 20800000.etr: TMC read end
    
    This patch fixes the problem by balancing the unlink operation by using
    the coresight_disable(), keeping the coresight layer in sync with the
    hardware state and thus allowing normal usage of the STM component.
    
    Fixes: commit 237483aa5cf43 ("coresight: stm: adding driver for CoreSight STM component")
    Cc: Pratik Patel <pratikp@codeaurora.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Reviewed-by: Chunyan Zhang <zhang.chunyan@linaro.org>
    Reported-by: Robert Walker <robert.walker@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 805c95a692ede7357efdc73330fc0991628f93de
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 11 15:53:08 2017 +0100

    staging: rtl: fix possible NULL pointer dereference
    
    commit 6e017006022abfea5d2466cad936065f45763ad1 upstream.
    
    gcc-7 detects that wlanhdr_to_ethhdr() in two drivers calls memcpy() with
    a destination argument that an earlier function call may have set to NULL:
    
    staging/rtl8188eu/core/rtw_recv.c: In function 'wlanhdr_to_ethhdr':
    staging/rtl8188eu/core/rtw_recv.c:1318:2: warning: argument 1 null where non-null expected [-Wnonnull]
    staging/rtl8712/rtl871x_recv.c: In function 'r8712_wlanhdr_to_ethhdr':
    staging/rtl8712/rtl871x_recv.c:649:2: warning: argument 1 null where non-null expected [-Wnonnull]
    
    I'm fixing this by adding a NULL pointer check and returning failure
    from the function, which is hopefully already handled properly.
    
    This seems to date back to when the drivers were originally added,
    so backporting the fix to stable seems appropriate. There are other
    related realtek drivers in the kernel, but none of them contain a
    function with a similar name or produce this warning.
    
    Fixes: 1cc18a22b96b ("staging: r8188eu: Add files for new driver - part 5")
    Fixes: 2865d42c78a9 ("staging: r8712u: Add the new driver to the mainline kernel")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2bdb905fec27880f76f143ee7bb0d3145c9a4e3
Author: Oleg Drokin <green@linuxhacker.ru>
Date:   Sun Feb 19 16:35:59 2017 -0500

    staging/lustre/lnet: Fix allocation size for sv_cpt_data
    
    commit dc7ffefdcc28a45214aa707fdc3df6a5e611ba09 upstream.
    
    This is unbreaking another of those "stealth" janitor
    patches that got in and subtly broke some things.
    
    sv_cpt_data is a pointer to pointer, so need to
    dereference it twice to allocate the correct structure size.
    
    Fixes: 9899cb68c6c2 ("Staging: lustre: rpc: Use sizeof type *pointer instead of sizeof type.")
    CC: Sandhya Bankar <bankarsandhya512@gmail.com>
    Signed-off-by: Oleg Drokin <green@linuxhacker.ru>
    Reviewed-by: James Simmons <jsimmons@infradead.org>
    Reviewed-by: Doug Oucharek <doug.s.oucharek@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d43004bdde3f58439aad5efd5fd5744714ef2459
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 26 12:37:32 2017 +0100

    staging: greybus: loopback: fix broken udelay
    
    commit 33b8807a6fe10d0e675e0704444373a6fad93188 upstream.
    
    The loopback driver allows the user to set a minimum delay of up to one
    second to be inserted between test iterations (i.e. request
    submissions). The delay is currently specified in microseconds and is
    implemented using udelay.
    
    Busy looping for long periods is not just anti-social; udelay must not
    be used for delays longer than a few milliseconds due to the risk of
    integer overflow.
    
    Replace the broken udelay with a usleep_range with a 100 us range for
    short delays (< 20 ms) and otherwise revert to using msleep.
    
    Fixes: b36f04fa9417 ("greybus: loopback: Convert thread delay to microseconds")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75225bc818b06b2a354540c0db01d42c2560443b
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Feb 8 14:02:59 2017 -0800

    hwmon: (it87) Ensure that pwm control cache is current before updating values
    
    commit 82dbe987b70042b340f851bdc969a971081e5f02 upstream.
    
    If sensor attributes were never read, the pwm control data has not been
    initiialized, which can cause wrong driver behavior. Ensure that cached
    data is current before acting on it.
    
    Reported-by: Kevin Folz <kfolz@evertz.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b43f4161a5fa85347bb4898b5559841b4addc4b
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Feb 8 14:07:42 2017 -0800

    hwmon: (it87) Do not overwrite bit 2..6 of pwm control registers
    
    commit 4c7b8ca1ae5ed9e27014732c8a918ba11a86cf09 upstream.
    
    In IT8620E, after setting pwm control to manual, it was observed that
    pwm values for fan 4..6 have reversed results (writing 0 results in fans
    running at full speed, writing 255 results in fans turned off).
    
    With the new PWM control, pwm polarity for pwm control 4..6 is specified
    in its pwm control registers. Those registers are overwritten when setting
    the pwm mode or the temperature mapping. Do not touch bit 2..6 of pwm
    control registers on register writes to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d2c16ca46bdd6fcf37d970c47fa159fd8fd161b
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Feb 27 10:11:47 2017 +0800

    ALSA: hda - Fix micmute hotkey problem for a lenovo AIO machine
    
    commit 29693efcea0f38cf40d0055d2401490a4f9bf8be upstream.
    
    On this machine, the micmute button is connected to Line2 of the
    codec and the micmute led is connected to GPIO2 of the codec.
    
    After applying this quirk, both hotkey and led work well.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfd8367d0c85e743102714f38641394e272f316c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 28 17:27:57 2017 +0100

    ALSA: hda - Add subwoofer support for Dell Inspiron 17 7000 Gaming
    
    commit 493de342748cc6f52938096f5480cf291da58a0b upstream.
    
    Dell Inspiron 17 7000 Gaming laptop needs a similar quirk like
    Inspiron 7599 to support its subwoofer speaker.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=194191
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80ed6047658c30d2811db5e6b791dbc98c2e59bd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 28 22:15:51 2017 +0100

    ALSA: seq: Fix link corruption by event error handling
    
    commit f3ac9f737603da80c2da3e84b89e74429836bb6d upstream.
    
    The sequencer FIFO management has a bug that may lead to a corruption
    (shortage) of the cell linked list.  When a sequencer client faces an
    error at the event delivery, it tries to put back the dequeued cell.
    When the first queue was put back, this forgot the tail pointer
    tracking, and the link will be screwed up.
    
    Although there is no memory corruption, the sequencer client may stall
    forever at exit while flushing the pending FIFO cells in
    snd_seq_pool_done(), as spotted by syzkaller.
    
    This patch addresses the missing tail pointer tracking at
    snd_seq_fifo_cell_putback().  Also the patch makes sure to clear the
    cell->enxt pointer at snd_seq_fifo_event_in() for avoiding a similar
    mess-up of the FIFO linked list.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b1c5904ad8d4b3a621bccba41b76f34b7f53aa5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 28 17:16:48 2017 +0100

    ALSA: ctxfi: Fallback DMA mask to 32bit
    
    commit 15c75b09f8d190f89ab4db463b87d411ca349dfe upstream.
    
    Currently ctxfi driver tries to set only the 64bit DMA mask on 64bit
    architectures, and bails out if it fails.  This causes a problem on
    some platforms since the 64bit DMA isn't always guaranteed.  We should
    fall back to the default 32bit DMA when 64bit DMA fails.
    
    Fixes: 6d74b86d3c0f ("ALSA: ctxfi - Allow 64bit DMA")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cff10ccb6060cec00e4dc1443c42e12cbcc0846f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 28 14:49:07 2017 +0100

    ALSA: timer: Reject user params with too small ticks
    
    commit 71321eb3f2d0df4e6c327e0b936eec4458a12054 upstream.
    
    When a user sets a too small ticks with a fine-grained timer like
    hrtimer, the kernel tries to fire up the timer irq too frequently.
    This may lead to the condensed locks, eventually the kernel spinlock
    lockup with warnings.
    
    For avoiding such a situation, we define a lower limit of the
    resolution, namely 1ms.  When the user passes a too small tick value
    that results in less than that, the kernel returns -EINVAL now.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a517802c5b33c821b31b8503f9071572325256d2
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Wed Feb 15 17:09:42 2017 +0100

    ALSA: hda - fix Lewisburg audio issue
    
    commit e7480b34ad1ab84a63540b2c884cb92c0764ab74 upstream.
    
    Like for Sunrise Point, the total stream number of Lewisburg's
    input and output stream exceeds 15 (GCAP is 0x9701), which will
    cause some streams do not work because of the overflow on
    SDxCTL.STRM field if using the legacy stream tag allocation method.
    
    Fixes: 5cf92c8b3dc5 ("ALSA: hda - Add Intel Lewisburg device IDs Audio")
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3895ed1823d4695c0ca5cf44004295380345a1e5
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Feb 16 15:26:54 2017 +0800

    ALSA: hda/realtek - Cannot adjust speaker's volume on a Dell AIO
    
    commit 9f1bc2c4c58fcb2d86e0e26437dc8f3a18ac3276 upstream.
    
    The issue is the same as "dd9aa335c880 ALSA: hda/realtek - Can't adjust
    speaker's volume on a Dell AIO", the output requires to connect to a node
    with Amp-out capability.
    
    Applying the same fixup "ALC298_FIXUP_SPK_VOLUME" can fix the issue.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75cf4b6b6e29020f6150f306526980968dae993f
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Jan 19 23:05:39 2017 +0100

    ARM: dts: at91: Enable DMA on sama5d2_xplained console
    
    commit 78162d48466d23c45a784034630c5928af631e3d upstream.
    
    Enable DMA on uart1 to get a more reliable console.
    
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67f1dd02b98dcd7299f93be5230c734cc5aabd91
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Jan 19 01:46:58 2017 +0100

    ARM: dts: at91: Enable DMA on sama5d4_xplained console
    
    commit ef8d02d4a2c36f7a93e74c95a9c419353b310117 upstream.
    
    Enable DMA on usart3 to get a more reliable console. This is especially
    useful for automation and kernelci were a kernel with PROVE_LOCKING enabled
    is quite susceptible to character loss, resulting in tests failure.
    
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55015e149d5b924233214f0c46c6974c7c47b4e3
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Oct 25 11:37:58 2016 +0200

    ARM: at91: define LPDDR types
    
    commit e3f0a4017c2143b4b813df6a93e8cf79e3f76936 upstream.
    
    The Atmel MPDDR controller support LPDDR2 and LPDDR3 memories, add their
    types.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e07d34fd09c07bd90baf53870ab1ed004ea004f
Author: Andi Shyti <andi@etezian.org>
Date:   Fri Feb 10 11:20:19 2017 +0900

    spi: s3c64xx: fix inconsistency between binding and driver
    
    commit 379f831a927817c130a62e3ca0082ae685557324 upstream.
    
    Commit a92e7c3d82a1 ("spi: s3c64xx: consider the case when the CS
    line is not connected") introduced an inconsistency between the
    binding, where the disconnected CS line was marked as
    'no-cs-readback', and the driver.
    
    The driver is erroneously checking for that attribute with
    property name of 'broken-cs'.
    
    Check for 'no-cs-readback' in the driver as well.
    
    Fixes: a92e7c3d82a1 ("spi: s3c64xx: consider the case when the CS line is not connected")
    Signed-off-by: Andi Shyti <andi.shyti@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cf6b709b6412afd1d93b2c4b37163c3602e3b95
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Jan 11 21:50:46 2017 -0500

    ext4: fix deadlock between inline_data and ext4_expand_extra_isize_ea()
    
    commit c755e251357a0cee0679081f08c3f4ba797a8009 upstream.
    
    The xattr_sem deadlock problems fixed in commit 2e81a4eeedca: "ext4:
    avoid deadlock when expanding inode size" didn't include the use of
    xattr_sem in fs/ext4/inline.c.  With the addition of project quota
    which added a new extra inode field, this exposed deadlocks in the
    inline_data code similar to the ones fixed by 2e81a4eeedca.
    
    The deadlock can be reproduced via:
    
       dmesg -n 7
       mke2fs -t ext4 -O inline_data -Fq -I 256 /dev/vdc 32768
       mount -t ext4 -o debug_want_extra_isize=24 /dev/vdc /vdc
       mkdir /vdc/a
       umount /vdc
       mount -t ext4 /dev/vdc /vdc
       echo foo > /vdc/a/foo
    
    and looks like this:
    
    [   11.158815]
    [   11.160276] =============================================
    [   11.161960] [ INFO: possible recursive locking detected ]
    [   11.161960] 4.10.0-rc3-00015-g011b30a8a3cf #160 Tainted: G        W
    [   11.161960] ---------------------------------------------
    [   11.161960] bash/2519 is trying to acquire lock:
    [   11.161960]  (&ei->xattr_sem){++++..}, at: [<c1225a4b>] ext4_expand_extra_isize_ea+0x3d/0x4cd
    [   11.161960]
    [   11.161960] but task is already holding lock:
    [   11.161960]  (&ei->xattr_sem){++++..}, at: [<c1227941>] ext4_try_add_inline_entry+0x3a/0x152
    [   11.161960]
    [   11.161960] other info that might help us debug this:
    [   11.161960]  Possible unsafe locking scenario:
    [   11.161960]
    [   11.161960]        CPU0
    [   11.161960]        ----
    [   11.161960]   lock(&ei->xattr_sem);
    [   11.161960]   lock(&ei->xattr_sem);
    [   11.161960]
    [   11.161960]  *** DEADLOCK ***
    [   11.161960]
    [   11.161960]  May be due to missing lock nesting notation
    [   11.161960]
    [   11.161960] 4 locks held by bash/2519:
    [   11.161960]  #0:  (sb_writers#3){.+.+.+}, at: [<c11a2414>] mnt_want_write+0x1e/0x3e
    [   11.161960]  #1:  (&type->i_mutex_dir_key){++++++}, at: [<c119508b>] path_openat+0x338/0x67a
    [   11.161960]  #2:  (jbd2_handle){++++..}, at: [<c123314a>] start_this_handle+0x582/0x622
    [   11.161960]  #3:  (&ei->xattr_sem){++++..}, at: [<c1227941>] ext4_try_add_inline_entry+0x3a/0x152
    [   11.161960]
    [   11.161960] stack backtrace:
    [   11.161960] CPU: 0 PID: 2519 Comm: bash Tainted: G        W       4.10.0-rc3-00015-g011b30a8a3cf #160
    [   11.161960] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.1-1 04/01/2014
    [   11.161960] Call Trace:
    [   11.161960]  dump_stack+0x72/0xa3
    [   11.161960]  __lock_acquire+0xb7c/0xcb9
    [   11.161960]  ? kvm_clock_read+0x1f/0x29
    [   11.161960]  ? __lock_is_held+0x36/0x66
    [   11.161960]  ? __lock_is_held+0x36/0x66
    [   11.161960]  lock_acquire+0x106/0x18a
    [   11.161960]  ? ext4_expand_extra_isize_ea+0x3d/0x4cd
    [   11.161960]  down_write+0x39/0x72
    [   11.161960]  ? ext4_expand_extra_isize_ea+0x3d/0x4cd
    [   11.161960]  ext4_expand_extra_isize_ea+0x3d/0x4cd
    [   11.161960]  ? _raw_read_unlock+0x22/0x2c
    [   11.161960]  ? jbd2_journal_extend+0x1e2/0x262
    [   11.161960]  ? __ext4_journal_get_write_access+0x3d/0x60
    [   11.161960]  ext4_mark_inode_dirty+0x17d/0x26d
    [   11.161960]  ? ext4_add_dirent_to_inline.isra.12+0xa5/0xb2
    [   11.161960]  ext4_add_dirent_to_inline.isra.12+0xa5/0xb2
    [   11.161960]  ext4_try_add_inline_entry+0x69/0x152
    [   11.161960]  ext4_add_entry+0xa3/0x848
    [   11.161960]  ? __brelse+0x14/0x2f
    [   11.161960]  ? _raw_spin_unlock_irqrestore+0x44/0x4f
    [   11.161960]  ext4_add_nondir+0x17/0x5b
    [   11.161960]  ext4_create+0xcf/0x133
    [   11.161960]  ? ext4_mknod+0x12f/0x12f
    [   11.161960]  lookup_open+0x39e/0x3fb
    [   11.161960]  ? __wake_up+0x1a/0x40
    [   11.161960]  ? lock_acquire+0x11e/0x18a
    [   11.161960]  path_openat+0x35c/0x67a
    [   11.161960]  ? sched_clock_cpu+0xd7/0xf2
    [   11.161960]  do_filp_open+0x36/0x7c
    [   11.161960]  ? _raw_spin_unlock+0x22/0x2c
    [   11.161960]  ? __alloc_fd+0x169/0x173
    [   11.161960]  do_sys_open+0x59/0xcc
    [   11.161960]  SyS_open+0x1d/0x1f
    [   11.161960]  do_int80_syscall_32+0x4f/0x61
    [   11.161960]  entry_INT80_32+0x2f/0x2f
    [   11.161960] EIP: 0xb76ad469
    [   11.161960] EFLAGS: 00000286 CPU: 0
    [   11.161960] EAX: ffffffda EBX: 08168ac8 ECX: 00008241 EDX: 000001b6
    [   11.161960] ESI: b75e46bc EDI: b7755000 EBP: bfbdb108 ESP: bfbdafc0
    [   11.161960]  DS: 007b ES: 007b FS: 0000 GS: 0033 SS: 007b
    
    Reported-by: George Spelvin <linux@sciencehorizons.net>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4b6ff75838f3c39577adffca445f176ed8b1a81
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Jan 2 08:32:47 2017 -0200

    media: Properly pass through media entity types in entity enumeration
    
    commit 98d85f3cb912fde14593ead54dea4c1a00b3966f upstream.
    
    When the functions replaced media entity types, the range which was
    allowed for the types was incorrect. This meant that media entity types
    for specific devices were not passed correctly to the userspace through
    MEDIA_IOC_ENUM_ENTITIES. Fix it.
    
    Fixes: commit b2cd27448b33 ("[media] media-device: map new functions into old types for legacy API")
    Reported-and-tested-by: Antti Laakso <antti.laakso@intel.com>
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81d5066323a8b422b9a3bb6cd336523e806c1885
Author: Sean Young <sean@mess.org>
Date:   Fri Dec 2 15:16:08 2016 -0200

    lirc_dev: LIRC_{G,S}ET_REC_MODE do not work
    
    commit bd291208d7f5d6b2d6a033fee449a429230b06df upstream.
    
    Since "273b902 [media] lirc_dev: use LIRC_CAN_REC() define" these
    ioctls no longer work.
    
    Signed-off-by: Sean Young <sean@mess.org>
    Reviewed-by: Andi Shyti <andi.shyti@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a0fc4b1d6ae1534289fb19a7b747278216c4fad
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Tue Jan 24 08:13:11 2017 -0200

    dvb-usb: don't use stack for firmware load
    
    commit 43fab9793c1f44e665b4f98035a14942edf03ddc upstream.
    
    As reported by Marc Duponcheel <marc@offline.be>, firmware load on
    dvb-usb is using the stack, with is not allowed anymore on default
    Kernel configurations:
    
    [ 1025.958836] dvb-usb: found a 'WideView WT-220U PenType Receiver (based on ZL353)' in cold state, will try to load a firmware
    [ 1025.958853] dvb-usb: downloading firmware from file 'dvb-usb-wt220u-zl0353-01.fw'
    [ 1025.958855] dvb-usb: could not stop the USB controller CPU.
    [ 1025.958856] dvb-usb: error while transferring firmware (transferred size: -11, block size: 3)
    [ 1025.958856] dvb-usb: firmware download failed at 8 with -22
    [ 1025.958867] usbcore: registered new interface driver dvb_usb_dtt200u
    
    [    2.789902] dvb-usb: downloading firmware from file 'dvb-usb-wt220u-zl0353-01.fw'
    [    2.789905] ------------[ cut here ]------------
    [    2.789911] WARNING: CPU: 3 PID: 2196 at drivers/usb/core/hcd.c:1584 usb_hcd_map_urb_for_dma+0x430/0x560 [usbcore]
    [    2.789912] transfer buffer not dma capable
    [    2.789912] Modules linked in: btusb dvb_usb_dtt200u(+) dvb_usb_af9035(+) btrtl btbcm dvb_usb dvb_usb_v2 btintel dvb_core bluetooth rc_core rfkill x86_pkg_temp_thermal intel_powerclamp coretemp crc32_pclmul aesni_intel aes_x86_64 glue_helper lrw gf128mul ablk_helper cryptd drm_kms_helper syscopyarea sysfillrect pcspkr i2c_i801 sysimgblt fb_sys_fops drm i2c_smbus i2c_core r8169 lpc_ich mfd_core mii thermal fan rtc_cmos video button acpi_cpufreq processor snd_hda_codec_realtek snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep snd_hda_core snd_pcm snd_timer snd crc32c_intel ahci libahci libata xhci_pci ehci_pci xhci_hcd ehci_hcd usbcore usb_common dm_mirror dm_region_hash dm_log dm_mod
    [    2.789936] CPU: 3 PID: 2196 Comm: systemd-udevd Not tainted 4.9.0-gentoo #1
    [    2.789937] Hardware name: ASUS All Series/H81I-PLUS, BIOS 0401 07/23/2013
    [    2.789938]  ffffc9000339b690 ffffffff812bd397 ffffc9000339b6e0 0000000000000000
    [    2.789939]  ffffc9000339b6d0 ffffffff81055c86 000006300339b6a0 ffff880116c0c000
    [    2.789941]  0000000000000000 0000000000000000 0000000000000001 ffff880116c08000
    [    2.789942] Call Trace:
    [    2.789945]  [<ffffffff812bd397>] dump_stack+0x4d/0x66
    [    2.789947]  [<ffffffff81055c86>] __warn+0xc6/0xe0
    [    2.789948]  [<ffffffff81055cea>] warn_slowpath_fmt+0x4a/0x50
    [    2.789952]  [<ffffffffa006d460>] usb_hcd_map_urb_for_dma+0x430/0x560 [usbcore]
    [    2.789954]  [<ffffffff814ed5a8>] ? io_schedule_timeout+0xd8/0x110
    [    2.789956]  [<ffffffffa006e09c>] usb_hcd_submit_urb+0x9c/0x980 [usbcore]
    [    2.789958]  [<ffffffff812d0ebf>] ? copy_page_to_iter+0x14f/0x2b0
    [    2.789960]  [<ffffffff81126818>] ? pagecache_get_page+0x28/0x240
    [    2.789962]  [<ffffffff8118c2a0>] ? touch_atime+0x20/0xa0
    [    2.789964]  [<ffffffffa006f7c4>] usb_submit_urb+0x2c4/0x520 [usbcore]
    [    2.789967]  [<ffffffffa006feca>] usb_start_wait_urb+0x5a/0xe0 [usbcore]
    [    2.789969]  [<ffffffffa007000c>] usb_control_msg+0xbc/0xf0 [usbcore]
    [    2.789970]  [<ffffffffa067903d>] usb_cypress_writemem+0x3d/0x40 [dvb_usb]
    [    2.789972]  [<ffffffffa06791cf>] usb_cypress_load_firmware+0x4f/0x130 [dvb_usb]
    [    2.789973]  [<ffffffff8109dbbe>] ? console_unlock+0x2fe/0x5d0
    [    2.789974]  [<ffffffff8109e10c>] ? vprintk_emit+0x27c/0x410
    [    2.789975]  [<ffffffff8109e40a>] ? vprintk_default+0x1a/0x20
    [    2.789976]  [<ffffffff81124d76>] ? printk+0x43/0x4b
    [    2.789977]  [<ffffffffa0679310>] dvb_usb_download_firmware+0x60/0xd0 [dvb_usb]
    [    2.789979]  [<ffffffffa0679898>] dvb_usb_device_init+0x3d8/0x610 [dvb_usb]
    [    2.789981]  [<ffffffffa069e302>] dtt200u_usb_probe+0x92/0xd0 [dvb_usb_dtt200u]
    [    2.789984]  [<ffffffffa007420c>] usb_probe_interface+0xfc/0x270 [usbcore]
    [    2.789985]  [<ffffffff8138bf95>] driver_probe_device+0x215/0x2d0
    [    2.789986]  [<ffffffff8138c0e6>] __driver_attach+0x96/0xa0
    [    2.789987]  [<ffffffff8138c050>] ? driver_probe_device+0x2d0/0x2d0
    [    2.789988]  [<ffffffff81389ffb>] bus_for_each_dev+0x5b/0x90
    [    2.789989]  [<ffffffff8138b7b9>] driver_attach+0x19/0x20
    [    2.789990]  [<ffffffff8138b33c>] bus_add_driver+0x11c/0x220
    [    2.789991]  [<ffffffff8138c91b>] driver_register+0x5b/0xd0
    [    2.789994]  [<ffffffffa0072f6c>] usb_register_driver+0x7c/0x130 [usbcore]
    [    2.789994]  [<ffffffffa06a5000>] ? 0xffffffffa06a5000
    [    2.789996]  [<ffffffffa06a501e>] dtt200u_usb_driver_init+0x1e/0x20 [dvb_usb_dtt200u]
    [    2.789997]  [<ffffffff81000408>] do_one_initcall+0x38/0x140
    [    2.789998]  [<ffffffff8116001c>] ? __vunmap+0x7c/0xc0
    [    2.789999]  [<ffffffff81124fb0>] ? do_init_module+0x22/0x1d2
    [    2.790000]  [<ffffffff81124fe8>] do_init_module+0x5a/0x1d2
    [    2.790002]  [<ffffffff810c96b1>] load_module+0x1e11/0x2580
    [    2.790003]  [<ffffffff810c68b0>] ? show_taint+0x30/0x30
    [    2.790004]  [<ffffffff81177250>] ? kernel_read_file+0x100/0x190
    [    2.790005]  [<ffffffff810c9ffa>] SyS_finit_module+0xba/0xc0
    [    2.790007]  [<ffffffff814f13e0>] entry_SYSCALL_64_fastpath+0x13/0x94
    [    2.790008] ---[ end trace c78a74e78baec6fc ]---
    
    So, allocate the structure dynamically.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa315c9614c87d3166d77c9b99c8148f765dd3a1
Author: Antti Palosaari <crope@iki.fi>
Date:   Mon Jan 16 19:27:41 2017 -0200

    cxd2820r: fix gpio null pointer dereference
    
    commit 0ffb94b6cc5df6376ab6bff5b80075641f6716f8 upstream.
    
    Setting GPIOs during probe causes null pointer deference when
    GPIOLIB was not selected by Kconfig. Initialize driver private
    field before calling set gpios.
    
    It is regressing bug since 4.9.
    
    Fixes: 07fdf7d9f19f ("[media] cxd2820r: add I2C driver bindings")
    
    Reported-by: Chris Rankin <rankincj@gmail.com>
    Tested-by: Chris Rankin <rankincj@gmail.com>
    Tested-by: Håkan Lennestål <hakan.lennestal@gmail.com>
    Signed-off-by: Antti Palosaari <crope@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1403c576b0b6588b8a24c60e1973b14a98a0b04
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Jan 7 23:08:49 2017 -0200

    media: fix dm1105.c build error
    
    commit e3bb3cddd177550d63a3e4909cf1a7782f13414d upstream.
    
    Fix dm1105 build error when CONFIG_I2C_ALGOBIT=m and
    CONFIG_DVB_DM1105=y.
    
    drivers/built-in.o: In function `dm1105_probe':
    dm1105.c:(.text+0x2836e7): undefined reference to `i2c_bit_add_bus'
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Cc: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dafb02049535575e332924ec31046bd41148b06
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Mon Dec 12 09:16:51 2016 -0200

    uvcvideo: Fix a wrong macro
    
    commit 17c341ec0115837a610b2da15e32546e26068234 upstream.
    
    Don't mix up UVC_BUF_STATE_* and VB2_BUF_STATE_* codes.
    
    Fixes: 6998b6fb4b1c ("[media] uvcvideo: Use videobuf2-vmalloc")
    
    Signed-off-by: Guennadi Liakhovetski <guennadi.liakhovetski@intel.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 895bff918136d72a488db228e5a38a8fa7d4836d
Author: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date:   Tue Dec 27 16:02:36 2016 -0200

    am437x-vpfe: always assign bpp variable
    
    commit 6ebf75774f823ddbdbd10921006989d4df222f4a upstream.
    
    In vpfe_s_fmt(), when the sensor format and the requested format were
    the same, bpp was assigned to vpfe->bpp without being initialized first.
    
    Grab the bpp value that is currently used by using __vpfe_get_format()
    instead of its wrapper, vpfe_try_fmt().
    
    This use of uninitialized variable has been found by compiling the
    kernel with clang.
    
    Fixes: 417d2e507edc ("[media] media: platform: add VPFE capture driver
    support for AM437X")
    
    Signed-off-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dc455047ef2da6ea83121e0ac189f98ae852742
Author: Zhang Rui <rui.zhang@intel.com>
Date:   Wed Jan 18 17:46:18 2017 +0800

    mmc: sdhci-acpi: support deferred probe
    
    commit e28d6f048799acb0014491e6b74e580d84bd7916 upstream.
    
    With commit 67bf5156edc4 ("gpio / ACPI: fix returned error from
    acpi_dev_gpio_irq_get()"), mmc_gpiod_request_cd() returns -EPROBE_DEFER if
    GPIO is not ready when sdhci-acpi driver is probed, and sdhci-acpi driver
    should be probed again later in this case.
    
    This fixes an order issue when both GPIO and sdhci-acpi drivers are built
    as modules.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=177101
    Tested-by: Jonas Aaberg <cja@gmx.net>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70d4818d1c89e8646a97f89a2086cc47fb40bfae
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 15:07:07 2016 +0000

    MIPS: Handle microMIPS jumps in the same way as MIPS32/MIPS64 jumps
    
    commit 096a0de427ea333f56f0ee00328cff2a2731bcf1 upstream.
    
    is_jump_ins() checks for plain jump ("j") instructions since commit
    e7438c4b893e ("MIPS: Fix sibling call handling in get_frame_info") but
    that commit didn't make the same change to the microMIPS code, leaving
    it inconsistent with the MIPS32/MIPS64 code. Handle the microMIPS
    encoding of the jump instruction too such that it behaves consistently.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: e7438c4b893e ("MIPS: Fix sibling call handling in get_frame_info")
    Cc: Tony Wu <tung7970@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14533/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f6914d77b1815bb1aa7f5f919da671b9420910f
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 15:07:06 2016 +0000

    MIPS: Calculate microMIPS ra properly when unwinding the stack
    
    commit bb9bc4689b9c635714fbcd5d335bad9934a7ebfc upstream.
    
    get_frame_info() calculates the offset of the return address within a
    stack frame simply by dividing a the bottom 16 bits of the instruction,
    treated as a signed integer, by the size of a long. Whilst this works
    for MIPS32 & MIPS64 ISAs where the sw or sd instructions are used, it's
    incorrect for microMIPS where encodings differ. The result is that we
    typically completely fail to unwind the stack on microMIPS.
    
    Fix this by adjusting is_ra_save_ins() to calculate the return address
    offset, and take into account the various different encodings there in
    the same place as we consider whether an instruction is storing the
    ra/$31 register.
    
    With this we are now able to unwind the stack for kernels targetting the
    microMIPS ISA, for example we can produce:
    
        Call Trace:
        [<80109e1f>] show_stack+0x63/0x7c
        [<8011ea17>] __warn+0x9b/0xac
        [<8011ea45>] warn_slowpath_fmt+0x1d/0x20
        [<8013fe53>] register_console+0x43/0x314
        [<8067c58d>] of_setup_earlycon+0x1dd/0x1ec
        [<8067f63f>] early_init_dt_scan_chosen_stdout+0xe7/0xf8
        [<8066c115>] do_early_param+0x75/0xac
        [<801302f9>] parse_args+0x1dd/0x308
        [<8066c459>] parse_early_options+0x25/0x28
        [<8066c48b>] parse_early_param+0x2f/0x38
        [<8066e8cf>] setup_arch+0x113/0x488
        [<8066c4f3>] start_kernel+0x57/0x328
        ---[ end trace 0000000000000000 ]---
    
    Whereas previously we only produced:
    
        Call Trace:
        [<80109e1f>] show_stack+0x63/0x7c
        ---[ end trace 0000000000000000 ]---
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 34c2f668d0f6 ("MIPS: microMIPS: Add unaligned access support.")
    Cc: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14532/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4ab4d6fd79b745f048cea37e3ae434673e8e567
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 15:07:05 2016 +0000

    MIPS: Fix is_jump_ins() handling of 16b microMIPS instructions
    
    commit 67c75057709a6d85c681c78b9b2f9b71191f01a2 upstream.
    
    is_jump_ins() checks 16b instruction fields without verifying that the
    instruction is indeed 16b, as is done by is_ra_save_ins() &
    is_sp_move_ins(). Add the appropriate check.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 34c2f668d0f6 ("MIPS: microMIPS: Add unaligned access support.")
    Cc: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14531/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ec5e28dfb8d1f55ec3f403867bdec7aa5223e11
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 15:07:04 2016 +0000

    MIPS: Fix get_frame_info() handling of microMIPS function size
    
    commit b6c7a324df37bf05ef7a2c1580683cf10d082d97 upstream.
    
    get_frame_info() is meant to iterate over up to the first 128
    instructions within a function, but for microMIPS kernels it will not
    reach that many instructions unless the function is 512 bytes long since
    we calculate the maximum number of instructions to check by dividing the
    function length by the 4 byte size of a union mips_instruction. In
    microMIPS kernels this won't do since instructions are variable length.
    
    Fix this by instead checking whether the pointer to the current
    instruction has reached the end of the function, and use max_insns as a
    simple constant to check the number of iterations against.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 34c2f668d0f6 ("MIPS: microMIPS: Add unaligned access support.")
    Cc: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14530/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9bba20eaae7ffc6c00efc583ae7051c8a730f82
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 15:07:03 2016 +0000

    MIPS: Prevent unaligned accesses during stack unwinding
    
    commit a3552dace7d1d0cabf573e88fc3025cb90c4a601 upstream.
    
    During stack unwinding we call a number of functions to determine what
    type of instruction we're looking at. The union mips_instruction pointer
    provided to them may be pointing at a 2 byte, but not 4 byte, aligned
    address & we thus cannot directly access the 4 byte wide members of the
    union mips_instruction. To avoid this is_ra_save_ins() copies the
    required half-words of the microMIPS instruction to a correctly aligned
    union mips_instruction on the stack, which it can then access safely.
    The is_jump_ins() & is_sp_move_ins() functions do not correctly perform
    this temporary copy, and instead attempt to directly dereference 4 byte
    fields which may be misaligned and lead to an address exception.
    
    Fix this by copying the instruction halfwords to a temporary union
    mips_instruction in get_frame_info() such that we can provide a 4 byte
    aligned union mips_instruction to the is_*_ins() functions and they do
    not need to deal with misalignment themselves.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 34c2f668d0f6 ("MIPS: microMIPS: Add unaligned access support.")
    Cc: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14529/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 953f805442e14050b606f43f878a7f90d58ccc55
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 15:07:02 2016 +0000

    MIPS: Clear ISA bit correctly in get_frame_info()
    
    commit ccaf7caf2c73c6db920772bf08bf1d47b2170634 upstream.
    
    get_frame_info() can be called in microMIPS kernels with the ISA bit
    already clear. For example this happens when unwind_stack_by_address()
    is called because we begin with a PC that has the ISA bit set & subtract
    the (odd) offset from the preceding symbol (which does not have the ISA
    bit set). Since get_frame_info() unconditionally subtracts 1 from the PC
    in microMIPS kernels it incorrectly misaligns the address it then
    attempts to access code at, leading to an address error exception.
    
    Fix this by using msk_isa16_mode() to clear the ISA bit, which allows
    get_frame_info() to function regardless of whether it is provided with a
    PC that has the ISA bit set or not.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 34c2f668d0f6 ("MIPS: microMIPS: Add unaligned access support.")
    Cc: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14528/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 734696a238da88aceda7c4b5aa6236486d54b3b2
Author: Felix Fietkau <nbd@nbd.name>
Date:   Thu Jan 19 14:20:09 2017 +0100

    MIPS: Lantiq: Keep ethernet enabled during boot
    
    commit 774f0c6419bb8f9d83901d33582c7fe3ba6a6cb3 upstream.
    
    Disabling ethernet during reboot (only to enable it again when the
    ethernet driver attaches) can put the chip into a faulty state where it
    corrupts the header of all incoming packets.
    
    This happens if packets arrive during the time window where the core is
    disabled, and it can be easily reproduced by rebooting while sending a
    flood ping to the broadcast address.
    
    Fixes: 95135bfa7ead ("MIPS: Lantiq: Deactivate most of the devices by default")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Acked-by: John Crispin <john@phrozen.org>
    Cc: hauke.mehrtens@lantiq.com
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15078/
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1764303e5e5aa35b227ea222a4ea76d8ad8d0e6e
Author: James Cowgill <James.Cowgill@imgtec.com>
Date:   Mon Jan 9 16:52:28 2017 +0000

    MIPS: OCTEON: Fix copy_from_user fault handling for large buffers
    
    commit 884b426917e4b3c85f33b382c792a94305dfdd62 upstream.
    
    If copy_from_user is called with a large buffer (>= 128 bytes) and the
    userspace buffer refers partially to unreadable memory, then it is
    possible for Octeon's copy_from_user to report the wrong number of bytes
    have been copied. In the case where the buffer size is an exact multiple
    of 128 and the fault occurs in the last 64 bytes, copy_from_user will
    report that all the bytes were copied successfully but leave some
    garbage in the destination buffer.
    
    The bug is in the main __copy_user_common loop in octeon-memcpy.S where
    in the middle of the loop, src and dst are incremented by 128 bytes. The
    l_exc_copy fault handler is used after this but that assumes that
    "src < THREAD_BUADDR($28)". This is not the case if src has already been
    incremented.
    
    Fix by adding an extra fault handler which rewinds the src and dst
    pointers 128 bytes before falling though to l_exc_copy.
    
    Thanks to the pwritev test from the strace test suite for originally
    highlighting this bug!
    
    Fixes: 5b3b16880f40 ("MIPS: Add Cavium OCTEON processor support ...")
    Signed-off-by: James Cowgill <James.Cowgill@imgtec.com>
    Acked-by: David Daney <david.daney@cavium.com>
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14978/
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2b15d5001236c5814317d46f9533c6ea42ae814
Author: Mirko Parthey <mirko.parthey@web.de>
Date:   Wed Feb 15 23:31:30 2017 +0100

    MIPS: BCM47XX: Fix button inversion for Asus WL-500W
    
    commit bdfdaf1a016ef09cb941f2edad485a713510b8d5 upstream.
    
    The Asus WL-500W buttons are active high, but the software treats them
    as active low. Fix the inverted logic.
    
    Fixes: 3be972556fa1 ("MIPS: BCM47XX: Import buttons database from OpenWrt")
    Signed-off-by: Mirko Parthey <mirko.parthey@web.de>
    Acked-by: Rafał Miłecki <rafal@milecki.pl>
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15295/
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 890fb4e3c3e148084a39336d6543af6be0691a32
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Thu Jan 26 02:16:47 2017 +0100

    MIPS: Fix special case in 64 bit IP checksumming.
    
    commit 66fd848cadaa6be974a8c780fbeb328f0af4d3bd upstream.
    
    For certain arguments such as saddr = 0xc0a8fd60, daddr = 0xc0a8fda1,
    len = 80, proto = 17, sum = 0x7eae049d there will be a carry when
    folding the intermediate 64 bit checksum to 32 bit but the code doesn't
    add the carry back to the one's complement sum, thus an incorrect result
    will be generated.
    
    Reported-by: Mark Zhang <bomb.zhang@gmail.com>
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87592def9b31becaba94d93c65b08b38ad175d40
Author: Purna Chandra Mandal <purna.mandal@microchip.com>
Date:   Thu Jun 2 14:51:42 2016 +0530

    MIPS: pic32mzda: Fix linker error for pic32_get_pbclk()
    
    commit a726f1d2dd4fee179aa4513176d688ad309de6cc upstream.
    
    Early clock API pic32_get_pbclk() is defined in early_clk.c and used by
    time.c and early_console.c. When CONFIG_EARLY_PRINTK isn't set,
    early_clk.c isn't compiled and time.c fails to link.
    
    Fix it by compiling early_clk.c always. Also sort files in alphabetical
    order.
    
    Fixes: 6e4ad1b41360 ("MIPS: pic32mzda: fix getting timer clock rate.")
    Reported-by: Harvey Hunt <harvey.hunt@imgtec.com>
    Signed-off-by: Purna Chandra Mandal <purna.mandal@microchip.com>
    Reviewed-by: Harvey Hunt <harvey.hunt@imgtec.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Joshua Henderson <digitalpeer@digitalpeer.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13383/
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
