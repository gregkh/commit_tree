commit 0f1b4cb77d7f5a442b03f8ad597768b422e8ec58
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Apr 14 08:22:37 2021 +0200

    Linux 4.19.187
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Link: https://lore.kernel.org/r/20210412083958.129944265@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dae14f0fdd20bf747f7ea65d6e3247851aee10d8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Apr 12 09:56:57 2021 +0200

    Revert "cifs: Set CIFS_MOUNT_USE_PREFIX_PATH flag on setting cifs_sb->prepath."
    
    This reverts commit 7496d7034a4e1b715c2baf6fe976bbaf7a361106 which is
    commit a738c93fb1c17e386a09304b517b1c6b2a6a5a8b upstream.
    
    It is reported to cause problems in older kernels, so revert it for now
    until we can figure it out...
    
    Reported-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/YG7r0UaivWZL762N@eldamar.lan
    Cc: Shyam Prasad N <sprasad@microsoft.com>
    Cc: Aurelien Aptel <aaptel@suse.com>
    Cc: Steve French <stfrench@microsoft.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bc3fa84d70846a0821493f22c23271c2d066a1a
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:54 2021 -0400

    net: ieee802154: stop dump llsec params for monitors
    
    commit 1534efc7bbc1121e92c86c2dabebaf2c9dcece19 upstream.
    
    This patch stops dumping llsec params for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Reported-by: syzbot+cde43a581a8e5f317bc2@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-16-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90eab5269e5ee65fec1321c904ea075167d02337
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:53 2021 -0400

    net: ieee802154: forbid monitor for del llsec seclevel
    
    commit 9dde130937e95b72adfae64ab21d6e7e707e2dac upstream.
    
    This patch forbids to del llsec seclevel for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Reported-by: syzbot+fbf4fc11a819824e027b@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-15-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12f120cecfea577581da94193e7dfca44bc67c88
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:41 2021 -0400

    net: ieee802154: forbid monitor for set llsec params
    
    commit 88c17855ac4291fb462e13a86b7516773b6c932e upstream.
    
    This patch forbids to set llsec params for monitor interfaces which we
    don't support yet.
    
    Reported-by: syzbot+8b6719da8a04beeafcc3@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22e025c1733b330ecdc49f23365f914f6d39ac12
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:21 2021 -0500

    net: ieee802154: fix nl802154 del llsec devkey
    
    commit 27c746869e1a135dffc2f2a80715bb7aa00445b4 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVKEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+368672e0da240db53b5f@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdd1d2784ad3e51698047f832f935a2389f3b4a6
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:20 2021 -0500

    net: ieee802154: fix nl802154 add llsec key
    
    commit 20d5fe2d7103f5c43ad11a3d6d259e9d61165c35 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ce4e062c2d51977ddc50@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fe0c0485a298809017fe53a3eebd1863593075d
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:19 2021 -0500

    net: ieee802154: fix nl802154 del llsec dev
    
    commit 3d1eac2f45585690d942cf47fd7fbd04093ebd1b upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVICE is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+d946223c2e751d136c94@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-2-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79ba55c0e7a7990537d36a470e3a2f0968408b7e
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:18 2021 -0500

    net: ieee802154: fix nl802154 del llsec key
    
    commit 37feaaf5ceb2245e474369312bb7b922ce7bce69 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ac5c11d2959a8b3c4806@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-1-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5983b9de012edaa1149c3114e56c82ec6e9dd957
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 28 10:18:03 2021 -0500

    net: ieee802154: nl-mac: fix check on panid
    
    commit 6f7f657f24405f426212c09260bf7fe8a52cef33 upstream.
    
    This patch fixes a null pointer derefence for panid handle by move the
    check for the netlink variable directly before accessing them.
    
    Reported-by: syzbot+d4c07de0144f6f63be3a@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210228151817.95700-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c166c0f5311dc9de687b8985574a5ee5166d367e
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Mar 4 18:21:25 2021 +0300

    net: mac802154: Fix general protection fault
    
    commit 1165affd484889d4986cf3b724318935a0b120d8 upstream.
    
    syzbot found general protection fault in crypto_destroy_tfm()[1].
    It was caused by wrong clean up loop in llsec_key_alloc().
    If one of the tfm array members is in IS_ERR() range it will
    cause general protection fault in clean up function [1].
    
    Call Trace:
     crypto_free_aead include/crypto/aead.h:191 [inline] [1]
     llsec_key_alloc net/mac802154/llsec.c:156 [inline]
     mac802154_llsec_key_add+0x9e0/0xcc0 net/mac802154/llsec.c:249
     ieee802154_add_llsec_key+0x56/0x80 net/mac802154/cfg.c:338
     rdev_add_llsec_key net/ieee802154/rdev-ops.h:260 [inline]
     nl802154_add_llsec_key+0x3d3/0x560 net/ieee802154/nl802154.c:1584
     genl_family_rcv_msg_doit+0x228/0x320 net/netlink/genetlink.c:739
     genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]
     genl_rcv_msg+0x328/0x580 net/netlink/genetlink.c:800
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     genl_rcv+0x24/0x40 net/netlink/genetlink.c:811
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reported-by: syzbot+9ec037722d2603a9f52e@syzkaller.appspotmail.com
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210304152125.1052825-1-paskripkin@gmail.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b58bb4eaa0c265522074dcc41ab6b00bd65d7c0a
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 16:27:52 2021 +0300

    drivers: net: fix memory leak in peak_usb_create_dev
    
    commit a0b96b4a62745397aee662670cfc2157bac03f55 upstream.
    
    syzbot reported memory leak in peak_usb.
    The problem was in case of failure after calling
    ->dev_init()[2] in peak_usb_create_dev()[1]. The data
    allocated int dev_init() wasn't freed, so simple
    ->dev_free() call fix this problem.
    
    backtrace:
        [<0000000079d6542a>] kmalloc include/linux/slab.h:552 [inline]
        [<0000000079d6542a>] kzalloc include/linux/slab.h:682 [inline]
        [<0000000079d6542a>] pcan_usb_fd_init+0x156/0x210 drivers/net/can/usb/peak_usb/pcan_usb_fd.c:868   [2]
        [<00000000c09f9057>] peak_usb_create_dev drivers/net/can/usb/peak_usb/pcan_usb_core.c:851 [inline] [1]
        [<00000000c09f9057>] peak_usb_probe+0x389/0x490 drivers/net/can/usb/peak_usb/pcan_usb_core.c:949
    
    Reported-by: syzbot+91adee8d9ebb9193d22d@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e61043662d753055a743b7e3cddf5c8d98c08ddd
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 07:46:24 2021 +0300

    drivers: net: fix memory leak in atusb_probe
    
    commit 6b9fbe16955152626557ec6f439f3407b7769941 upstream.
    
    syzbot reported memory leak in atusb_probe()[1].
    The problem was in atusb_alloc_urbs().
    Since urb is anchored, we need to release the reference
    to correctly free the urb
    
    backtrace:
        [<ffffffff82ba0466>] kmalloc include/linux/slab.h:559 [inline]
        [<ffffffff82ba0466>] usb_alloc_urb+0x66/0xe0 drivers/usb/core/urb.c:74
        [<ffffffff82ad3888>] atusb_alloc_urbs drivers/net/ieee802154/atusb.c:362 [inline][2]
        [<ffffffff82ad3888>] atusb_probe+0x158/0x820 drivers/net/ieee802154/atusb.c:1038 [1]
    
    Reported-by: syzbot+28a246747e0a465127f3@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 962bc99bf0a93dcf10afa342a0bebad3dec3327d
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Tue Apr 6 18:45:54 2021 +0100

    net: tun: set tun->dev->addr_len during TUNSETLINK processing
    
    commit cca8ea3b05c972ffb5295367e6c544369b45fbdd upstream.
    
    When changing type with TUNSETLINK ioctl command, set tun->dev->addr_len
    to match the appropriate type, using new tun_get_addr_len utility function
    which returns appropriate address length for given type. Fixes a
    KMSAN-found uninit-value bug reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=0766d38c656abeace60621896d705743aeefed51
    
    Reported-by: syzbot+001516d86dbe88862cec@syzkaller.appspotmail.com
    Diagnosed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee1a5262eb01fc347de97b0d3e0bc0e6f83ad8e1
Author: Du Cheng <ducheng2@gmail.com>
Date:   Thu Apr 8 00:27:56 2021 +0800

    cfg80211: remove WARN_ON() in cfg80211_sme_connect
    
    commit 1b5ab825d9acc0f27d2f25c6252f3526832a9626 upstream.
    
    A WARN_ON(wdev->conn) would trigger in cfg80211_sme_connect(), if multiple
    send_msg(NL80211_CMD_CONNECT) system calls are made from the userland, which
    should be anticipated and handled by the wireless driver. Remove this WARN_ON()
    to prevent kernel panic if kernel is configured to "panic_on_warn".
    
    Bug reported by syzbot.
    
    Reported-by: syzbot+5f9392825de654244975@syzkaller.appspotmail.com
    Signed-off-by: Du Cheng <ducheng2@gmail.com>
    Link: https://lore.kernel.org/r/20210407162756.6101-1-ducheng2@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b376516dbdac3657b1d4cb9d33ae368280377de2
Author: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Date:   Tue Mar 30 04:23:23 2021 +0530

    net: sched: bump refcount for new action in ACT replace mode
    
    commit 6855e8213e06efcaf7c02a15e12b1ae64b9a7149 upstream.
    
    Currently, action creation using ACT API in replace mode is buggy.
    When invoking for non-existent action index 42,
    
            tc action replace action bpf obj foo.o sec <xyz> index 42
    
    kernel creates the action, fills up the netlink response, and then just
    deletes the action after notifying userspace.
    
            tc action show action bpf
    
    doesn't list the action.
    
    This happens due to the following sequence when ovr = 1 (replace mode)
    is enabled:
    
    tcf_idr_check_alloc is used to atomically check and either obtain
    reference for existing action at index, or reserve the index slot using
    a dummy entry (ERR_PTR(-EBUSY)).
    
    This is necessary as pointers to these actions will be held after
    dropping the idrinfo lock, so bumping the reference count is necessary
    as we need to insert the actions, and notify userspace by dumping their
    attributes. Finally, we drop the reference we took using the
    tcf_action_put_many call in tcf_action_add. However, for the case where
    a new action is created due to free index, its refcount remains one.
    This when paired with the put_many call leads to the kernel setting up
    the action, notifying userspace of its creation, and then tearing it
    down. For existing actions, the refcount is still held so they remain
    unaffected.
    
    Fortunately due to rtnl_lock serialization requirement, such an action
    with refcount == 1 will not be concurrently deleted by anything else, at
    best CLS API can move its refcount up and down by binding to it after it
    has been published from tcf_idr_insert_many. Since refcount is atleast
    one until put_many call, CLS API cannot delete it. Also __tcf_action_put
    release path already ensures deterministic outcome (either new action
    will be created or existing action will be reused in case CLS API tries
    to bind to action concurrently) due to idr lock serialization.
    
    We fix this by making refcount of newly created actions as 2 in ACT API
    replace mode. A relaxed store will suffice as visibility is ensured only
    after the tcf_idr_insert_many call.
    
    Note that in case of creation or overwriting using CLS API only (i.e.
    bind = 1), overwriting existing action object is not allowed, and any
    such request is silently ignored (without error).
    
    The refcount bump that occurs in tcf_idr_check_alloc call there for
    existing action will pair with tcf_exts_destroy call made from the
    owner module for the same action. In case of action creation, there
    is no existing action, so no tcf_exts_destroy callback happens.
    
    This means no code changes for CLS API.
    
    Fixes: cae422f379f3 ("net: sched: use reference counting action init")
    Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6801e9221594d30f506882499864e87f638e4345
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Sun Mar 14 12:07:09 2021 +0100

    clk: socfpga: fix iomem pointer cast on 64-bit
    
    commit 2867b9746cef78745c594894aece6f8ef826e0b4 upstream.
    
    Pointers should be cast with uintptr_t instead of integer.  This fixes
    warning when compile testing on ARM64:
    
      drivers/clk/socfpga/clk-gate.c: In function ‘socfpga_clk_recalc_rate’:
      drivers/clk/socfpga/clk-gate.c:102:7: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    
    Fixes: b7cec13f082f ("clk: socfpga: Look for the GPIO_DB_CLK by its offset")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Link: https://lore.kernel.org/r/20210314110709.32599-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 814b7cf4c6d3e492c6105eb4b7e97563bc61cb60
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Wed Mar 31 19:27:15 2021 +0530

    RDMA/cxgb4: check for ipv6 address properly while destroying listener
    
    [ Upstream commit 603c4690b01aaffe3a6c3605a429f6dac39852ae ]
    
    ipv6 bit is wrongly set by the below which causes fatal adapter lookup
    engine errors for ipv4 connections while destroying a listener.  Fix it to
    properly check the local address for ipv6.
    
    Fixes: 3408be145a5d ("RDMA/cxgb4: Fix adapter LE hash errors while destroying ipv6 listening server")
    Link: https://lore.kernel.org/r/20210331135715.30072-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec547864af694775e7a88dbeb1e25261b81015f6
Author: Aya Levin <ayal@nvidia.com>
Date:   Sun Apr 4 12:55:00 2021 +0300

    net/mlx5: Fix PBMC register mapping
    
    [ Upstream commit 534b1204ca4694db1093b15cf3e79a99fcb6a6da ]
    
    Add reserved mapping to cover all the register in order to avoid setting
    arbitrary values to newer FW which implements the reserved fields.
    
    Fixes: 50b4a3c23646 ("net/mlx5: PPTB and PBMC register firmware command support")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d2426a41f8d8f4e9164a3d2e2b7081c5b825609
Author: Raed Salem <raeds@nvidia.com>
Date:   Thu Jan 21 16:01:37 2021 +0200

    net/mlx5: Fix placement of log_max_flow_counter
    
    [ Upstream commit a14587dfc5ad2312dabdd42a610d80ecd0dc8bea ]
    
    The cited commit wrongly placed log_max_flow_counter field of
    mlx5_ifc_flow_table_prop_layout_bits, align it to the HW spec intended
    placement.
    
    Fixes: 16f1c5bb3ed7 ("net/mlx5: Check device capability for maximum flow counters")
    Signed-off-by: Raed Salem <raeds@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0b19c2e3b4f722fa54414e7477aba8e7c50448f
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Mon Mar 29 18:35:07 2021 +0200

    s390/cpcmd: fix inline assembly register clobbering
    
    [ Upstream commit 7a2f91441b2c1d81b77c1cd816a4659f4abc9cbe ]
    
    Register variables initialized using arithmetic. That leads to
    kasan instrumentaton code corrupting the registers contents.
    Follow GCC guidlines and use temporary variables for assigning
    init values to register variables.
    
    Fixes: 94c12cc7d196 ("[S390] Inline assembly cleanup.")
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Acked-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Link: https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/Local-Register-Variables.html
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d79ff4485792a13047a611606cea7d64a0bb7db
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Thu Feb 18 11:16:49 2021 +0800

    workqueue: Move the position of debug_work_activate() in __queue_work()
    
    [ Upstream commit 0687c66b5f666b5ad433f4e94251590d9bc9d10e ]
    
    The debug_work_activate() is called on the premise that
    the work can be inserted, because if wq be in WQ_DRAINING
    status, insert work may be failed.
    
    Fixes: e41e704bc4f4 ("workqueue: improve destroy_workqueue() debuggability")
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1bc78d64479e3ec82a1c941e37f125f0c144e54
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:49 2021 +0200

    clk: fix invalid usage of list cursor in unregister
    
    [ Upstream commit 7045465500e465b09f09d6e5bdc260a9f1aab97b ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_unregister(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used. The patch fixes a logical
    bug that hasn't been seen in pratice however it is analogus
    to the bug fixed in clk_notifier_register().
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
     ...
     Memory state around the buggy address:
      ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
     >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                              ^
      ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
      ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-2-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b8cbe80367a5224a9f7c23842e7f71577bee78a
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:48 2021 +0200

    clk: fix invalid usage of list cursor in register
    
    [ Upstream commit 8d3c0c01cb2e36b2bf3c06a82b18b228d0c8f5d0 ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_register(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used.
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
    ...
    Memory state around the buggy address:
     ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
     ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
    >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                          ^
     ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
     ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
     ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-1-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5c58b8cb9e5c7317693dbc407bcafb9c1bf97cc
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 14:15:23 2021 +0100

    soc/fsl: qbman: fix conflicting alignment attributes
    
    [ Upstream commit 040f31196e8b2609613f399793b9225271b79471 ]
    
    When building with W=1, gcc points out that the __packed attribute
    on struct qm_eqcr_entry conflicts with the 8-byte alignment
    attribute on struct qm_fd inside it:
    
    drivers/soc/fsl/qbman/qman.c:189:1: error: alignment 1 of 'struct qm_eqcr_entry' is less than 8 [-Werror=packed-not-aligned]
    
    I assume that the alignment attribute is the correct one, and
    that qm_eqcr_entry cannot actually be unaligned in memory,
    so add the same alignment on the outer struct.
    
    Fixes: c535e923bb97 ("soc/fsl: Introduce DPAA 1.x QMan device driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210323131530.2619900-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90e501b66b2ac99f7488965d41feb21b1c865a76
Author: Bastian Germann <bage@linutronix.de>
Date:   Wed Mar 31 17:18:43 2021 +0200

    ASoC: sunxi: sun4i-codec: fill ASoC card owner
    
    [ Upstream commit 7c0d6e482062eb5c06ecccfab340abc523bdca00 ]
    
    card->owner is a required property and since commit 81033c6b584b ("ALSA:
    core: Warn on empty module") a warning is issued if it is empty. Add it.
    This fixes following warning observed on Lamobo R1:
    
    WARNING: CPU: 1 PID: 190 at sound/core/init.c:207 snd_card_new+0x430/0x480 [snd]
    Modules linked in: sun4i_codec(E+) sun4i_backend(E+) snd_soc_core(E) ...
    CPU: 1 PID: 190 Comm: systemd-udevd Tainted: G         C  E     5.10.0-1-armmp #1 Debian 5.10.4-1
    Hardware name: Allwinner sun7i (A20) Family
    Call trace:
     (snd_card_new [snd])
     (snd_soc_bind_card [snd_soc_core])
     (snd_soc_register_card [snd_soc_core])
     (sun4i_codec_probe [sun4i_codec])
    
    Fixes: 45fb6b6f2aa3 ("ASoC: sunxi: add support for the on-chip codec on early Allwinner SoCs")
    Related: commit 3c27ea23ffb4 ("ASoC: qcom: Set card->owner to avoid warnings")
    Related: commit ec653df2a0cb ("drm/vc4/vc4_hdmi: fill ASoC card owner")
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Bastian Germann <bage@linutronix.de>
    Link: https://lore.kernel.org/r/20210331151843.30583-1-bage@linutronix.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b5eec0099a8a69537a51151caf504ecc55e593a
Author: Milton Miller <miltonm@us.ibm.com>
Date:   Mon Mar 29 10:20:39 2021 -0500

    net/ncsi: Avoid channel_monitor hrtimer deadlock
    
    [ Upstream commit 03cb4d05b4ea9a3491674ca40952adb708d549fa ]
    
    Calling ncsi_stop_channel_monitor from channel_monitor is a guaranteed
    deadlock on SMP because stop calls del_timer_sync on the timer that
    invoked channel_monitor as its timer function.
    
    Recognise the inherent race of marking the monitor disabled before
    deleting the timer by just returning if enable was cleared.  After
    a timeout (the default case -- reset to START when response received)
    just mark the monitor.enabled false.
    
    If the channel has an entry on the channel_queue list, or if the
    state is not ACTIVE or INACTIVE, then warn and mark the timer stopped
    and don't restart, as the locking is broken somehow.
    
    Fixes: 0795fb2021f0 ("net/ncsi: Stop monitor if channel times out or is inactive")
    Signed-off-by: Milton Miller <miltonm@us.ibm.com>
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d0696f2efb51f5a86f8e2bd65ec9b1f2187c930
Author: Stefan Riedmueller <s.riedmueller@phytec.de>
Date:   Mon Mar 29 15:01:03 2021 +0200

    ARM: dts: imx6: pbab01: Set vmmc supply for both SD interfaces
    
    [ Upstream commit f57011e72f5fe0421ec7a812beb1b57bdf4bb47f ]
    
    Setting the vmmc supplies is crucial since otherwise the supplying
    regulators get disabled and the SD interfaces are no longer powered
    which leads to system failures if the system is booted from that SD
    interface.
    
    Fixes: 1e44d3f880d5 ("ARM i.MX6Q: dts: Enable I2C1 with EEPROM and PMIC on Phytec phyFLEX-i.MX6 Ouad module")
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b89b5b030c1ea2ce4811766faadec0ee49d793b2
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Sun Mar 28 00:30:29 2021 -0700

    net:tipc: Fix a double free in tipc_sk_mcast_rcv
    
    [ Upstream commit 6bf24dc0cc0cc43b29ba344b66d78590e687e046 ]
    
    In the if(skb_peek(arrvq) == skb) branch, it calls __skb_dequeue(arrvq) to get
    the skb by skb = skb_peek(arrvq). Then __skb_dequeue() unlinks the skb from arrvq
    and returns the skb which equals to skb_peek(arrvq). After __skb_dequeue(arrvq)
    finished, the skb is freed by kfree_skb(__skb_dequeue(arrvq)) in the first time.
    
    Unfortunately, the same skb is freed in the second time by kfree_skb(skb) after
    the branch completed.
    
    My patch removes kfree_skb() in the if(skb_peek(arrvq) == skb) branch, because
    this skb will be freed by kfree_skb(skb) finally.
    
    Fixes: cb1b728096f54 ("tipc: eliminate race condition at multicast reception")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b4c7879af6e9c96d318dce37008168ffb216918
Author: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
Date:   Sat Mar 27 23:49:08 2021 +0530

    cxgb4: avoid collecting SGE_QBASE regs during traffic
    
    [ Upstream commit 1bfb3dea965ff9f6226fd1709338f227363b6061 ]
    
    Accessing SGE_QBASE_MAP[0-3] and SGE_QBASE_INDEX registers can lead
    to SGE missing doorbells under heavy traffic. So, only collect them
    when adapter is idle. Also update the regdump range to skip collecting
    these registers.
    
    Fixes: 80a95a80d358 ("cxgb4: collect SGE PF/VF queue map")
    Signed-off-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 255fe5647185f2793a66348949bd092c9c61536e
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Mon Mar 29 17:08:47 2021 +0300

    gianfar: Handle error code at MAC address change
    
    [ Upstream commit bff5b62585123823842833ab20b1c0a7fa437f8c ]
    
    Handle return error code of eth_mac_addr();
    
    Fixes: 3d23a05c75c7 ("gianfar: Enable changing mac addr when if up")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cd84c8252db74e97efb9f45bf5fea3c4f5d8ae2
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:14:53 2021 -0700

    sch_red: fix off-by-one checks in red_check_params()
    
    [ Upstream commit 3a87571f0ffc51ba3bf3ecdb6032861d0154b164 ]
    
    This fixes following syzbot report:
    
    UBSAN: shift-out-of-bounds in ./include/net/red.h:237:23
    shift exponent 32 is too large for 32-bit type 'unsigned int'
    CPU: 1 PID: 8418 Comm: syz-executor170 Not tainted 5.12.0-rc4-next-20210324-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     red_set_parms include/net/red.h:237 [inline]
     choke_change.cold+0x3c/0xc8 net/sched/sch_choke.c:414
     qdisc_create+0x475/0x12f0 net/sched/sch_api.c:1247
     tc_modify_qdisc+0x4c8/0x1a50 net/sched/sch_api.c:1663
     rtnetlink_rcv_msg+0x44e/0xad0 net/core/rtnetlink.c:5553
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x43f039
    Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007ffdfa725168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000400488 RCX: 000000000043f039
    RDX: 0000000000000000 RSI: 0000000020000040 RDI: 0000000000000004
    RBP: 0000000000403020 R08: 0000000000400488 R09: 0000000000400488
    R10: 0000000000400488 R11: 0000000000000246 R12: 00000000004030b0
    R13: 0000000000000000 R14: 00000000004ac018 R15: 0000000000400488
    
    Fixes: 8afa10cbe281 ("net_sched: red: Avoid illegal values")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3cb7c978e222b7a12dc2b496d64fe918ef1e8631
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Thu Mar 25 08:39:12 2021 +0530

    amd-xgbe: Update DMA coherency values
    
    [ Upstream commit d75135082698140a26a56defe1bbc1b06f26a41f ]
    
    Based on the IOMMU configuration, the current cache control settings can
    result in possible coherency issues. The hardware team has recommended
    new settings for the PCI device path to eliminate the issue.
    
    Fixes: 6f595959c095 ("amd-xgbe: Adjust register settings to improve performance")
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17f6a7fe662676dc241986ebb272a691552b291a
Author: Eryk Rybak <eryk.roch.rybak@intel.com>
Date:   Thu Feb 18 11:15:26 2021 +0000

    i40e: Fix kernel oops when i40e driver removes VF's
    
    [ Upstream commit 347b5650cd158d1d953487cc2bec567af5c5bf96 ]
    
    Fix the reason of kernel oops when i40e driver removed VFs.
    Added new __I40E_VFS_RELEASING state to signalize releasing
    process by PF, that it makes possible to exit of reset VF procedure.
    Without this patch, it is possible to suspend the VFs reset by
    releasing VFs resources procedure. Retrying the reset after the
    timeout works on the freed VF memory causing a kernel oops.
    
    Fixes: d43d60e5eb95 ("i40e: ensure reset occurs when disabling VF")
    Signed-off-by: Eryk Rybak <eryk.roch.rybak@intel.com>
    Signed-off-by: Grzegorz Szczurek <grzegorzx.szczurek@intel.com>
    Reviewed-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c1c0eedea71c9cb4fc3cd5fda9e94d254c44983
Author: Mateusz Palczewski <mateusz.palczewski@intel.com>
Date:   Mon Jan 4 15:00:02 2021 +0000

    i40e: Added Asym_Pause to supported link modes
    
    [ Upstream commit 90449e98c265296329446c7abcd2aae3b20c0bc9 ]
    
    Add Asym_Pause to supported link modes (it is supported by HW).
    Lack of Asym_Pause in supported modes can cause several problems,
    i.e. it won't be possible to turn the autonegotiation on
    with asymmetric pause settings (i.e. Tx on, Rx off).
    
    Fixes: 4e91bcd5d47a ("i40e: Finish implementation of ethtool get settings")
    Signed-off-by: Dawid Lukwinski <dawid.lukwinski@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Reviewed-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Reviewed-by: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 682011fcc93c5a9c6ad60db4550c7d4d25e36df6
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Mar 19 18:48:46 2021 +0800

    ASoC: wm8960: Fix wrong bclk and lrclk with pll enabled for some chips
    
    [ Upstream commit 16b82e75c15a7dbd564ea3654f3feb61df9e1e6f ]
    
    The input MCLK is 12.288MHz, the desired output sysclk is 11.2896MHz
    and sample rate is 44100Hz, with the configuration pllprescale=2,
    postscale=sysclkdiv=1, some chip may have wrong bclk
    and lrclk output with pll enabled in master mode, but with the
    configuration pllprescale=1, postscale=2, the output clock is correct.
    
    >From Datasheet, the PLL performs best when f2 is between
    90MHz and 100MHz when the desired sysclk output is 11.2896MHz
    or 12.288MHz, so sysclkdiv = 2 (f2/8) is the best choice.
    
    So search available sysclk_divs from 2 to 1 other than from 1 to 2.
    
    Fixes: 84fdc00d519f ("ASoC: codec: wm9860: Refactor PLL out freq search")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1616150926-22892-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cc68d05c0049f537e00ee86eb5018a8f0992a0c
Author: Ahmed S. Darwish <a.darwish@linutronix.de>
Date:   Tue Mar 16 11:56:29 2021 +0100

    net: xfrm: Localize sequence counter per network namespace
    
    [ Upstream commit e88add19f68191448427a6e4eb059664650a837f ]
    
    A sequence counter write section must be serialized or its internal
    state can get corrupted. The "xfrm_state_hash_generation" seqcount is
    global, but its write serialization lock (net->xfrm.xfrm_state_lock) is
    instantiated per network namespace. The write protection is thus
    insufficient.
    
    To provide full protection, localize the sequence counter per network
    namespace instead. This should be safe as both the seqcount read and
    write sections access data exclusively within the network namespace. It
    also lays the foundation for transforming "xfrm_state_hash_generation"
    data type from seqcount_t to seqcount_LOCKNAME_t in further commits.
    
    Fixes: b65e3d7be06f ("xfrm: state: add sequence count to detect hash resizes")
    Signed-off-by: Ahmed S. Darwish <a.darwish@linutronix.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 887d32c6db06991215ef3719f34314198dbfc0af
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Mar 12 14:02:40 2021 +0100

    regulator: bd9571mwv: Fix AVS and DVFS voltage range
    
    [ Upstream commit 3b6e7088afc919f5b52e4d2de8501ad34d35b09b ]
    
    According to Table 30 ("DVFS_MoniVDAC [6:0] Setting Table") in the
    BD9571MWV-M Datasheet Rev. 002, the valid voltage range is 600..1100 mV
    (settings 0x3c..0x6e).  While the lower limit is taken into account (by
    setting regulator_desc.linear_min_sel to 0x3c), the upper limit is not.
    
    Fix this by reducing regulator_desc.n_voltages from 0x80 to 0x6f.
    
    Fixes: e85c5a153fe237f2 ("regulator: Add ROHM BD9571MWV-M PMIC regulator driver")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20210312130242.3390038-2-geert+renesas@glider.be
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b318f319b0c81965adaba0997cdddd9e280270d5
Author: Eyal Birger <eyal.birger@gmail.com>
Date:   Sat Feb 20 15:01:15 2021 +0200

    xfrm: interface: fix ipv4 pmtu check to honor ip header df
    
    [ Upstream commit 8fc0e3b6a8666d656923d214e4dc791e9a17164a ]
    
    Frag needed should only be sent if the header enables DF.
    
    This fix allows packets larger than MTU to pass the xfrm interface
    and be fragmented after encapsulation, aligning behavior with
    non-interface xfrm.
    
    Fixes: f203b76d7809 ("xfrm: Add virtual xfrm interfaces")
    Signed-off-by: Eyal Birger <eyal.birger@gmail.com>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15f135b4ea6e31215d184ef26d0bbb44e1cbe9f5
Author: Yuya Kusakabe <yuya.kusakabe@gmail.com>
Date:   Tue Feb 25 12:32:12 2020 +0900

    virtio_net: Add XDP meta data support
    
    [ Upstream commit 503d539a6e417b018616bf3060e0b5814fafce47 ]
    
    Implement support for transferring XDP meta data into skb for
    virtio_net driver; before calling into the program, xdp.data_meta points
    to xdp.data, where on program return with pass verdict, we call
    into skb_metadata_set().
    
    Tested with the script at
    https://github.com/higebu/virtio_net-xdp-metadata-test.
    
    Signed-off-by: Yuya Kusakabe <yuya.kusakabe@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/bpf/20200225033212.437563-2-yuya.kusakabe@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d64734b26c4596403290ed18da428147669bb76c
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon Mar 15 12:50:08 2021 +0100

    i2c: turn recovery error on init to debug
    
    commit e409a6a3e0690efdef9b8a96197bc61ff117cfaf upstream.
    
    In some configurations, recovery is optional. So, don't throw an error
    when it is not used because e.g. pinctrl settings for recovery are not
    provided. Reword the message and make it debug output.
    
    Reported-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Tested-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1b35d375efc5c869f93cb7c423ca3f2fae341be
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:51 2021 -0600

    usbip: synchronize event handler with sysfs code paths
    
    commit 363eaa3a450abb4e63bd6e3ad79d1f7a0f717814 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to synchronize event handler with sysfs paths
    in usbip drivers.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/c5c8723d3f29dfe3d759cfaafa7dd16b0dfe2918.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98671cffee7f988e4d8a9764e818cd8bf57e9b69
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:50 2021 -0600

    usbip: vudc synchronize sysfs code paths
    
    commit bd8b82042269a95db48074b8bb400678dbac1815 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to protect sysfs paths in vudc.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/caabcf3fc87bdae970509b5ff32d05bb7ce2fb15.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcc23b41c2b84358cb4aabf99d0a5cf83754435b
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:49 2021 -0600

    usbip: stub-dev synchronize sysfs code paths
    
    commit 9dbf34a834563dada91366c2ac266f32ff34641a upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    Use sysfs_lock to protect sysfs paths in stub-dev.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/2b182f3561b4a065bf3bf6dce3b0e9944ba17b3f.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9cc8be51ab03bb323d4beb12ceaf2d087d1de27
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Mon Mar 29 19:36:48 2021 -0600

    usbip: add sysfs_lock to synchronize sysfs code paths
    
    commit 4e9c93af7279b059faf5bb1897ee90512b258a12 upstream.
    
    Fuzzing uncovered race condition between sysfs code paths in usbip
    drivers. Device connect/disconnect code paths initiated through
    sysfs interface are prone to races if disconnect happens during
    connect and vice versa.
    
    This problem is common to all drivers while it can be reproduced easily
    in vhci_hcd. Add a sysfs_lock to usbip_device struct to protect the paths.
    
    Use this in vhci_hcd to protect sysfs paths. For a complete fix, usip_host
    and usip-vudc drivers and the event handler will have to use this lock to
    protect the paths. These changes will be done in subsequent patches.
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/b6568f7beae702bbc236a545d3c020106ca75eac.1616807117.git.skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef99f18eb959573ddb7d489befc4bcad6f478caf
Author: Maciej Żenczykowski <maze@google.com>
Date:   Mon Apr 5 00:06:52 2021 -0700

    net-ipv6: bugfix - raw & sctp - switch to ipv6_can_nonlocal_bind()
    
    commit 630e4576f83accf90366686f39808d665d8dbecc upstream.
    
    Found by virtue of ipv6 raw sockets not honouring the per-socket
    IP{,V6}_FREEBIND setting.
    
    Based on hits found via:
      git grep '[.]ip_nonlocal_bind'
    We fix both raw ipv6 sockets to honour IP{,V6}_FREEBIND and IP{,V6}_TRANSPARENT,
    and we fix sctp sockets to honour IP{,V6}_TRANSPARENT (they already honoured
    FREEBIND), and not just the ipv6 'ip_nonlocal_bind' sysctl.
    
    The helper is defined as:
      static inline bool ipv6_can_nonlocal_bind(struct net *net, struct inet_sock *inet) {
        return net->ipv6.sysctl.ip_nonlocal_bind || inet->freebind || inet->transparent;
      }
    so this change only widens the accepted opt-outs and is thus a clean bugfix.
    
    I'm not entirely sure what 'fixes' tag to add, since this is AFAICT an ancient bug,
    but IMHO this should be applied to stable kernels as far back as possible.
    As such I'm adding a 'fixes' tag with the commit that originally added the helper,
    which happened in 4.19.  Backporting to older LTS kernels (at least 4.9 and 4.14)
    would presumably require open-coding it or backporting the helper as well.
    
    Other possibly relevant commits:
      v4.18-rc6-1502-g83ba4645152d net: add helpers checking if socket can be bound to nonlocal address
      v4.18-rc6-1431-gd0c1f01138c4 net/ipv6: allow any source address for sendmsg pktinfo with ip_nonlocal_bind
      v4.14-rc5-271-gb71d21c274ef sctp: full support for ipv6 ip_nonlocal_bind & IP_FREEBIND
      v4.7-rc7-1883-g9b9742022888 sctp: support ipv6 nonlocal bind
      v4.1-12247-g35a256fee52c ipv6: Nonlocal bind
    
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Fixes: 83ba4645152d ("net: add helpers checking if socket can be bound to nonlocal address")
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Reviewed-By: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9a7488979a7d0abfd30bc32f370b8e0c124db33
Author: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
Date:   Thu Apr 8 18:14:31 2021 +0300

    net: sched: sch_teql: fix null-pointer dereference
    
    commit 1ffbc7ea91606e4abd10eb60de5367f1c86daf5e upstream.
    
    Reproduce:
    
      modprobe sch_teql
      tc qdisc add dev teql0 root teql0
    
    This leads to (for instance in Centos 7 VM) OOPS:
    
    [  532.366633] BUG: unable to handle kernel NULL pointer dereference at 00000000000000a8
    [  532.366733] IP: [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.366825] PGD 80000001376d5067 PUD 137e37067 PMD 0
    [  532.366906] Oops: 0000 [#1] SMP
    [  532.366987] Modules linked in: sch_teql ...
    [  532.367945] CPU: 1 PID: 3026 Comm: tc Kdump: loaded Tainted: G               ------------ T 3.10.0-1062.7.1.el7.x86_64 #1
    [  532.368041] Hardware name: Virtuozzo KVM, BIOS 1.11.0-2.vz7.2 04/01/2014
    [  532.368125] task: ffff8b7d37d31070 ti: ffff8b7c9fdbc000 task.ti: ffff8b7c9fdbc000
    [  532.368224] RIP: 0010:[<ffffffffc06124a8>]  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.368320] RSP: 0018:ffff8b7c9fdbf8e0  EFLAGS: 00010286
    [  532.368394] RAX: ffffffffc0612490 RBX: ffff8b7cb1565e00 RCX: ffff8b7d35ba2000
    [  532.368476] RDX: ffff8b7d35ba2000 RSI: 0000000000000000 RDI: ffff8b7cb1565e00
    [  532.368557] RBP: ffff8b7c9fdbf8f8 R08: ffff8b7d3fd1f140 R09: ffff8b7d3b001600
    [  532.368638] R10: ffff8b7d3b001600 R11: ffffffff84c7d65b R12: 00000000ffffffd8
    [  532.368719] R13: 0000000000008000 R14: ffff8b7d35ba2000 R15: ffff8b7c9fdbf9a8
    [  532.368800] FS:  00007f6a4e872740(0000) GS:ffff8b7d3fd00000(0000) knlGS:0000000000000000
    [  532.368885] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  532.368961] CR2: 00000000000000a8 CR3: 00000001396ee000 CR4: 00000000000206e0
    [  532.369046] Call Trace:
    [  532.369159]  [<ffffffff84c8192e>] qdisc_create+0x36e/0x450
    [  532.369268]  [<ffffffff846a9b49>] ? ns_capable+0x29/0x50
    [  532.369366]  [<ffffffff849afde2>] ? nla_parse+0x32/0x120
    [  532.369442]  [<ffffffff84c81b4c>] tc_modify_qdisc+0x13c/0x610
    [  532.371508]  [<ffffffff84c693e7>] rtnetlink_rcv_msg+0xa7/0x260
    [  532.372668]  [<ffffffff84907b65>] ? sock_has_perm+0x75/0x90
    [  532.373790]  [<ffffffff84c69340>] ? rtnl_newlink+0x890/0x890
    [  532.374914]  [<ffffffff84c8da7b>] netlink_rcv_skb+0xab/0xc0
    [  532.376055]  [<ffffffff84c63708>] rtnetlink_rcv+0x28/0x30
    [  532.377204]  [<ffffffff84c8d400>] netlink_unicast+0x170/0x210
    [  532.378333]  [<ffffffff84c8d7a8>] netlink_sendmsg+0x308/0x420
    [  532.379465]  [<ffffffff84c2f3a6>] sock_sendmsg+0xb6/0xf0
    [  532.380710]  [<ffffffffc034a56e>] ? __xfs_filemap_fault+0x8e/0x1d0 [xfs]
    [  532.381868]  [<ffffffffc034a75c>] ? xfs_filemap_fault+0x2c/0x30 [xfs]
    [  532.383037]  [<ffffffff847ec23a>] ? __do_fault.isra.61+0x8a/0x100
    [  532.384144]  [<ffffffff84c30269>] ___sys_sendmsg+0x3e9/0x400
    [  532.385268]  [<ffffffff847f3fad>] ? handle_mm_fault+0x39d/0x9b0
    [  532.386387]  [<ffffffff84d88678>] ? __do_page_fault+0x238/0x500
    [  532.387472]  [<ffffffff84c31921>] __sys_sendmsg+0x51/0x90
    [  532.388560]  [<ffffffff84c31972>] SyS_sendmsg+0x12/0x20
    [  532.389636]  [<ffffffff84d8dede>] system_call_fastpath+0x25/0x2a
    [  532.390704]  [<ffffffff84d8de21>] ? system_call_after_swapgs+0xae/0x146
    [  532.391753] Code: 00 00 00 00 00 00 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 41 55 41 54 53 48 8b b7 48 01 00 00 48 89 fb <48> 8b 8e a8 00 00 00 48 85 c9 74 43 48 89 ca eb 0f 0f 1f 80 00
    [  532.394036] RIP  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.395127]  RSP <ffff8b7c9fdbf8e0>
    [  532.396179] CR2: 00000000000000a8
    
    Null pointer dereference happens on master->slaves dereference in
    teql_destroy() as master is null-pointer.
    
    When qdisc_create() calls teql_qdisc_init() it imediately fails after
    check "if (m->dev == dev)" because both devices are teql0, and it does
    not set qdisc_priv(sch)->m leaving it zero on error path, then
    qdisc_create() imediately calls teql_destroy() which does not expect
    zero master pointer and we get OOPS.
    
    Fixes: 87b60cfacf9f ("net_sched: fix error recovery at qdisc creation")
    Signed-off-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c65dd60239f7d888b8170f6344d7d6c61e8f2f9
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Mar 30 16:43:43 2021 -0700

    net: ensure mac header is set in virtio_net_hdr_to_skb()
    
    commit 61431a5907fc36d0738e9a547c7e1556349a03e9 upstream.
    
    Commit 924a9bc362a5 ("net: check if protocol extracted by virtio_net_hdr_set_proto is correct")
    added a call to dev_parse_header_protocol() but mac_header is not yet set.
    
    This means that eth_hdr() reads complete garbage, and syzbot complained about it [1]
    
    This patch resets mac_header earlier, to get more coverage about this change.
    
    Audit of virtio_net_hdr_to_skb() callers shows that this change should be safe.
    
    [1]
    
    BUG: KASAN: use-after-free in eth_header_parse_protocol+0xdc/0xe0 net/ethernet/eth.c:282
    Read of size 2 at addr ffff888017a6200b by task syz-executor313/8409
    
    CPU: 1 PID: 8409 Comm: syz-executor313 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:232
     __kasan_report mm/kasan/report.c:399 [inline]
     kasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416
     eth_header_parse_protocol+0xdc/0xe0 net/ethernet/eth.c:282
     dev_parse_header_protocol include/linux/netdevice.h:3177 [inline]
     virtio_net_hdr_to_skb.constprop.0+0x99d/0xcd0 include/linux/virtio_net.h:83
     packet_snd net/packet/af_packet.c:2994 [inline]
     packet_sendmsg+0x2325/0x52b0 net/packet/af_packet.c:3031
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     sock_no_sendpage+0xf3/0x130 net/core/sock.c:2860
     kernel_sendpage.part.0+0x1ab/0x350 net/socket.c:3631
     kernel_sendpage net/socket.c:3628 [inline]
     sock_sendpage+0xe5/0x140 net/socket.c:947
     pipe_to_sendpage+0x2ad/0x380 fs/splice.c:364
     splice_from_pipe_feed fs/splice.c:418 [inline]
     __splice_from_pipe+0x43e/0x8a0 fs/splice.c:562
     splice_from_pipe fs/splice.c:597 [inline]
     generic_splice_sendpage+0xd4/0x140 fs/splice.c:746
     do_splice_from fs/splice.c:767 [inline]
     do_splice+0xb7e/0x1940 fs/splice.c:1079
     __do_splice+0x134/0x250 fs/splice.c:1144
     __do_sys_splice fs/splice.c:1350 [inline]
     __se_sys_splice fs/splice.c:1332 [inline]
     __x64_sys_splice+0x198/0x250 fs/splice.c:1332
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
    
    Fixes: 924a9bc362a5 ("net: check if protocol extracted by virtio_net_hdr_set_proto is correct")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Balazs Nemeth <bnemeth@redhat.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92028d7a31e55d53e41cff679156b9432cffcb36
Author: Anirudh Rayabharam <mail@anirudhrb.com>
Date:   Wed Apr 7 22:57:22 2021 +0530

    net: hso: fix null-ptr-deref during tty device unregistration
    
    commit 8a12f8836145ffe37e9c8733dce18c22fb668b66 upstream.
    
    Multiple ttys try to claim the same the minor number causing a double
    unregistration of the same device. The first unregistration succeeds
    but the next one results in a null-ptr-deref.
    
    The get_free_serial_index() function returns an available minor number
    but doesn't assign it immediately. The assignment is done by the caller
    later. But before this assignment, calls to get_free_serial_index()
    would return the same minor number.
    
    Fix this by modifying get_free_serial_index to assign the minor number
    immediately after one is found to be and rename it to obtain_minor()
    to better reflect what it does. Similary, rename set_serial_by_index()
    to release_minor() and modify it to free up the minor number of the
    given hso_serial. Every obtain_minor() should have corresponding
    release_minor() call.
    
    Fixes: 72dc1c096c705 ("HSO: add option hso driver")
    Reported-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Tested-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 312561cc0750edbb2d2a97538ab6a34d5ddf5199
Author: Fabio Pricoco <fabio.pricoco@intel.com>
Date:   Fri Feb 26 13:19:24 2021 -0800

    ice: Increase control queue timeout
    
    commit f88c529ac77b3c21819d2cf1dfcfae1937849743 upstream.
    
    250 msec timeout is insufficient for some AQ commands. Advice from FW
    team was to increase the timeout. Increase to 1 second.
    
    Fixes: 7ec59eeac804 ("ice: Add support for control queues")
    Signed-off-by: Fabio Pricoco <fabio.pricoco@intel.com>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 086d27b51d594809ff5e3e16491d7eba9e00f55a
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Apr 5 19:16:50 2021 +0900

    batman-adv: initialize "struct batadv_tvlv_tt_vlan_data"->reserved field
    
    commit 08c27f3322fec11950b8f1384aa0f3b11d028528 upstream.
    
    KMSAN found uninitialized value at batadv_tt_prepare_tvlv_local_data()
    [1], for commit ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16
    in TT code") inserted 'reserved' field into "struct batadv_tvlv_tt_data"
    and commit 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN
    specific") moved that field to "struct batadv_tvlv_tt_vlan_data" but left
    that field uninitialized.
    
    [1] https://syzkaller.appspot.com/bug?id=07f3e6dba96f0eb3cabab986adcd8a58b9bdbe9d
    
    Reported-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Tested-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16 in TT code")
    Fixes: 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN specific")
    Acked-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e25b13ce0b0fa98d49a44453acede04fe19e5708
Author: Marek Behún <kabel@kernel.org>
Date:   Sun Feb 21 00:11:44 2021 +0100

    ARM: dts: turris-omnia: configure LED[2]/INTn pin as interrupt pin
    
    commit a26c56ae67fa9fbb45a8a232dcd7ebaa7af16086 upstream.
    
    Use the `marvell,reg-init` DT property to configure the LED[2]/INTn pin
    of the Marvell 88E1514 ethernet PHY on Turris Omnia into interrupt mode.
    
    Without this the pin is by default in LED[2] mode, and the Marvell PHY
    driver configures LED[2] into "On - Link, Blink - Activity" mode.
    
    This fixes the issue where the pca9538 GPIO/interrupt controller (which
    can't mask interrupts in HW) received too many interrupts and after a
    time started ignoring the interrupt with error message:
      IRQ 71: nobody cared
    
    There is a work in progress to have the Marvell PHY driver support
    parsing PHY LED nodes from OF and registering the LEDs as Linux LED
    class devices. Once this is done the PHY driver can also automatically
    set the pin into INTn mode if it does not find LED[2] in OF.
    
    Until then, though, we fix this via `marvell,reg-init` DT property.
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Reported-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Fixes: 26ca8b52d6e1 ("ARM: dts: add support for Turris Omnia")
    Cc: Uwe Kleine-König <uwe@kleine-koenig.org>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Gregory CLEMENT <gregory.clement@bootlin.com>
    Cc: <stable@vger.kernel.org>
    Tested-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08ed36b34f6a3e5745e29d89c1f988daa1d2e19a
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Tue Apr 6 12:59:29 2021 +0800

    parisc: avoid a warning on u8 cast for cmpxchg on u8 pointers
    
    commit 4d752e5af63753ab5140fc282929b98eaa4bd12e upstream.
    
    commit b344d6a83d01 ("parisc: add support for cmpxchg on u8 pointers")
    can generate a sparse warning ("cast truncates bits from constant
    value"), which has been reported several times [1] [2] [3].
    
    The original code worked as expected, but anyway, let silence such
    sparse warning as what others did [4].
    
    [1] https://lore.kernel.org/r/202104061220.nRMBwCXw-lkp@intel.com
    [2] https://lore.kernel.org/r/202012291914.T5Agcn99-lkp@intel.com
    [3] https://lore.kernel.org/r/202008210829.KVwn7Xeh%25lkp@intel.com
    [4] https://lore.kernel.org/r/20210315131512.133720-2-jacopo+renesas@jmondi.org
    Cc: Liam Beguin <liambeguin@gmail.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.8+
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 472e68b7c0be3ccfe8d665844d19dbda27b57c4f
Author: Helge Deller <deller@gmx.de>
Date:   Tue Apr 6 11:32:52 2021 +0200

    parisc: parisc-agp requires SBA IOMMU driver
    
    commit 9054284e8846b0105aad43a4e7174ca29fffbc44 upstream.
    
    Add a dependency to the SBA IOMMU driver to avoid:
    ERROR: modpost: "sba_list" [drivers/char/agp/parisc-agp.ko] undefined!
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7de46dc46efd49dc8cc59b52d56c5ab1eb8e8497
Author: Jack Qiu <jack.qiu@huawei.com>
Date:   Fri Apr 9 13:27:35 2021 -0700

    fs: direct-io: fix missing sdio->boundary
    
    commit df41872b68601059dd4a84858952dcae58acd331 upstream.
    
    I encountered a hung task issue, but not a performance one.  I run DIO
    on a device (need lba continuous, for example open channel ssd), maybe
    hungtask in below case:
    
      DIO:                                          Checkpoint:
      get addr A(at boundary), merge into BIO,
      no submit because boundary missing
                                                    flush dirty data(get addr A+1), wait IO(A+1)
                                                    writeback timeout, because DIO(A) didn't submit
      get addr A+2 fail, because checkpoint is doing
    
    dio_send_cur_page() may clear sdio->boundary, so prevent it from missing
    a boundary.
    
    Link: https://lkml.kernel.org/r/20210322042253.38312-1-jack.qiu@huawei.com
    Fixes: b1058b981272 ("direct-io: submit bio after boundary buffer is added to it")
    Signed-off-by: Jack Qiu <jack.qiu@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24afe15d966540a0e2099d8efcce5b8286abeb6b
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Apr 9 13:27:29 2021 -0700

    ocfs2: fix deadlock between setattr and dio_end_io_write
    
    commit 90bd070aae6c4fb5d302f9c4b9c88be60c8197ec upstream.
    
    The following deadlock is detected:
    
      truncate -> setattr path is waiting for pending direct IO to be done (inode->i_dio_count become zero) with inode->i_rwsem held (down_write).
    
      PID: 14827  TASK: ffff881686a9af80  CPU: 20  COMMAND: "ora_p005_hrltd9"
       #0  __schedule at ffffffff818667cc
       #1  schedule at ffffffff81866de6
       #2  inode_dio_wait at ffffffff812a2d04
       #3  ocfs2_setattr at ffffffffc05f322e [ocfs2]
       #4  notify_change at ffffffff812a5a09
       #5  do_truncate at ffffffff812808f5
       #6  do_sys_ftruncate.constprop.18 at ffffffff81280cf2
       #7  sys_ftruncate at ffffffff81280d8e
       #8  do_syscall_64 at ffffffff81003949
       #9  entry_SYSCALL_64_after_hwframe at ffffffff81a001ad
    
    dio completion path is going to complete one direct IO (decrement
    inode->i_dio_count), but before that it hung at locking inode->i_rwsem:
    
       #0  __schedule+700 at ffffffff818667cc
       #1  schedule+54 at ffffffff81866de6
       #2  rwsem_down_write_failed+536 at ffffffff8186aa28
       #3  call_rwsem_down_write_failed+23 at ffffffff8185a1b7
       #4  down_write+45 at ffffffff81869c9d
       #5  ocfs2_dio_end_io_write+180 at ffffffffc05d5444 [ocfs2]
       #6  ocfs2_dio_end_io+85 at ffffffffc05d5a85 [ocfs2]
       #7  dio_complete+140 at ffffffff812c873c
       #8  dio_aio_complete_work+25 at ffffffff812c89f9
       #9  process_one_work+361 at ffffffff810b1889
      #10  worker_thread+77 at ffffffff810b233d
      #11  kthread+261 at ffffffff810b7fd5
      #12  ret_from_fork+62 at ffffffff81a0035e
    
    Thus above forms ABBA deadlock.  The same deadlock was mentioned in
    upstream commit 28f5a8a7c033 ("ocfs2: should wait dio before inode lock
    in ocfs2_setattr()").  It seems that that commit only removed the
    cluster lock (the victim of above dead lock) from the ABBA deadlock
    party.
    
    End-user visible effects: Process hang in truncate -> ocfs2_setattr path
    and other processes hang at ocfs2_dio_end_io_write path.
    
    This is to fix the deadlock itself.  It removes inode_lock() call from
    dio completion path to remove the deadlock and add ip_alloc_sem lock in
    setattr path to synchronize the inode modifications.
    
    [wen.gang.wang@oracle.com: remove the "had_alloc_lock" as suggested]
      Link: https://lkml.kernel.org/r/20210402171344.1605-1-wen.gang.wang@oracle.com
    
    Link: https://lkml.kernel.org/r/20210331203654.3911-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a55eaeff174a68cc33791e20c160148e7de81574
Author: Mike Rapoport <rppt@kernel.org>
Date:   Fri Apr 9 13:27:23 2021 -0700

    nds32: flush_dcache_page: use page_mapping_file to avoid races with swapoff
    
    commit a3a8833dffb7e7329c2586b8bfc531adb503f123 upstream.
    
    Commit cb9f753a3731 ("mm: fix races between swapoff and flush dcache")
    updated flush_dcache_page implementations on several architectures to
    use page_mapping_file() in order to avoid races between page_mapping()
    and swapoff().
    
    This update missed arch/nds32 and there is a possibility of a race
    there.
    
    Replace page_mapping() with page_mapping_file() in nds32 implementation
    of flush_dcache_page().
    
    Link: https://lkml.kernel.org/r/20210330175126.26500-1-rppt@kernel.org
    Fixes: cb9f753a3731 ("mm: fix races between swapoff and flush dcache")
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Acked-by: Greentime Hu <green.hu@gmail.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Nick Hu <nickhu@andestech.com>
    Cc: Vincent Chen <deanbo422@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3d4de0fc05dc820ccf4ac6bad179287248146a1
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Apr 9 13:27:32 2021 -0700

    ia64: fix user_stack_pointer() for ptrace()
    
    commit 7ad1e366167837daeb93d0bacb57dee820b0b898 upstream.
    
    ia64 has two stacks:
    
     - memory stack (or stack), pointed at by by r12
    
     - register backing store (register stack), pointed at by
       ar.bsp/ar.bspstore with complications around dirty
       register frame on CPU.
    
    In [1] Dmitry noticed that PTRACE_GET_SYSCALL_INFO returns the register
    stack instead memory stack.
    
    The bug comes from the fact that user_stack_pointer() and
    current_user_stack_pointer() don't return the same register:
    
      ulong user_stack_pointer(struct pt_regs *regs) { return regs->ar_bspstore; }
      #define current_user_stack_pointer() (current_pt_regs()->r12)
    
    The change gets both back in sync.
    
    I think ptrace(PTRACE_GET_SYSCALL_INFO) is the only affected user by
    this bug on ia64.
    
    The change fixes 'rt_sigreturn.gen.test' strace test where it was
    observed initially.
    
    Link: https://bugs.gentoo.org/769614 [1]
    Link: https://lkml.kernel.org/r/20210331084447.2561532-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 426853f87e34c9945a655e8997d2f551b12ceb76
Author: Muhammad Usama Anjum <musamaanjum@gmail.com>
Date:   Fri Apr 9 03:01:29 2021 +0500

    net: ipv6: check for validity before dereferencing cfg->fc_nlinfo.nlh
    
    commit 864db232dc7036aa2de19749c3d5be0143b24f8f upstream.
    
    nlh is being checked for validtity two times when it is dereferenced in
    this function. Check for validity again when updating the flags through
    nlh pointer to make the dereferencing safe.
    
    CC: <stable@vger.kernel.org>
    Addresses-Coverity: ("NULL pointer dereference")
    Signed-off-by: Muhammad Usama Anjum <musamaanjum@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df720c5687aeae1f99ded448d26893e288702ff3
Author: Luca Fancellu <luca.fancellu@arm.com>
Date:   Tue Apr 6 11:51:04 2021 +0100

    xen/evtchn: Change irq_info lock to raw_spinlock_t
    
    commit d120198bd5ff1d41808b6914e1eb89aff937415c upstream.
    
    Unmask operation must be called with interrupt disabled,
    on preempt_rt spin_lock_irqsave/spin_unlock_irqrestore
    don't disable/enable interrupts, so use raw_* implementation
    and change lock variable in struct irq_info from spinlock_t
    to raw_spinlock_t
    
    Cc: stable@vger.kernel.org
    Fixes: 25da4618af24 ("xen/events: don't unmask an event channel when an eoi is pending")
    Signed-off-by: Luca Fancellu <luca.fancellu@arm.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Wei Liu <wei.liu@kernel.org>
    Link: https://lore.kernel.org/r/20210406105105.10141-1-luca.fancellu@arm.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eab391e0766ed88262160b14bb7131f331f6af1a
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:13 2021 +0800

    nfc: Avoid endless loops caused by repeated llcp_sock_connect()
    
    commit 4b5db93e7f2afbdfe3b78e37879a85290187e6f1 upstream.
    
    When sock_wait_state() returns -EINPROGRESS, "sk->sk_state" is
     LLCP_CONNECTING. In this case, llcp_sock_connect() is repeatedly invoked,
     nfc_llcp_sock_link() will add sk to local->connecting_sockets twice.
     sk->sk_node->next will point to itself, that will make an endless loop
     and hang-up the system.
    To fix it, check whether sk->sk_state is LLCP_CONNECTING in
     llcp_sock_connect() to avoid repeated invoking.
    
    Fixes: b4011239a08e ("NFC: llcp: Fix non blocking sockets connections")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.11
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 301a4264d6ab56d2b9230066b060d7ceaa000d68
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:12 2021 +0800

    nfc: fix memory leak in llcp_sock_connect()
    
    commit 7574fcdbdcb335763b6b322f6928dc0fd5730451 upstream.
    
    In llcp_sock_connect(), use kmemdup to allocate memory for
     "llcp_sock->service_name". The memory is not released in the sock_unlink
    label of the subsequent failure branch.
    As a result, memory leakage occurs.
    
    fix CVE-2020-25672
    
    Fixes: d646960f7986 ("NFC: Initial LLCP support")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.3
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c14b50185cd0d5ba6d7a5eb8acf9fbcc3663416d
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:11 2021 +0800

    nfc: fix refcount leak in llcp_sock_connect()
    
    commit 8a4cd82d62b5ec7e5482333a72b58a4eea4979f0 upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_connect(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25671
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adbb1d218c5f56dbae052765da83c0f57fce2a31
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:10 2021 +0800

    nfc: fix refcount leak in llcp_sock_bind()
    
    commit c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_bind(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25670
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bb097f9dce1d562e43047b6dabf0e9445f0bf08
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Mar 24 14:27:10 2021 +0100

    ASoC: intel: atom: Stop advertising non working S24LE support
    
    commit aa65bacdb70e549a81de03ec72338e1047842883 upstream.
    
    The SST firmware's media and deep-buffer inputs are hardcoded to
    S16LE, the corresponding DAIs don't have a hw_params callback and
    their prepare callback also does not take the format into account.
    
    So far the advertising of non working S24LE support has not caused
    issues because pulseaudio defaults to S16LE, but changing pulse-audio's
    config to use S24LE will result in broken sound.
    
    Pipewire is replacing pulse now and pipewire prefers S24LE over S16LE
    when available, causing the problem of the broken S24LE support to
    come to the surface now.
    
    Cc: stable@vger.kernel.org
    BugLink: https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/866
    Fixes: 098c2cd281409 ("ASoC: Intel: Atom: add 24-bit support for media playback and capture")
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210324132711.216152-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2566aad55cbafb94d033a0ebfc41c25cd0465a8
Author: Jonas Holmberg <jonashg@axis.com>
Date:   Wed Apr 7 09:54:28 2021 +0200

    ALSA: aloop: Fix initialization of controls
    
    commit 168632a495f49f33a18c2d502fc249d7610375e9 upstream.
    
    Add a control to the card before copying the id so that the numid field
    is initialized in the copy. Otherwise the numid field of active_id,
    format_id, rate_id and channels_id will be the same (0) and
    snd_ctl_notify() will not queue the events properly.
    
    Signed-off-by: Jonas Holmberg <jonashg@axis.com>
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210407075428.2666787-1-jonashg@axis.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
