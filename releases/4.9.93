commit d32da5bd9fd2e6eafa25c82318b55124c54d3a66
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Apr 8 12:13:01 2018 +0200

    Linux 4.9.93

commit bf7eb32f77e2b509942feff4bdf124a962e3ab52
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 6 10:18:25 2018 +0200

    spi: davinci: fix up dma_mapping_error() incorrect patch
    
    commit aabb797b4c1204b2e8518538b2616e476f2bac92, which is commit
    c5a2a394835f473ae23931eda5066d3771d7b2f8 upstream had an error in it.
    
    Ben writes:
            The '!' needs to be deleted.  This appears to have been fixed upstream
            by:
    
            commit 8aedbf580d21121d2a032e4c8ea12d8d2d85e275
            Author: Fabien Parent <fparent@baylibre.com>
            Date:   Thu Feb 23 19:01:56 2017 +0100
    
                spi: davinci: Use SPI framework to handle DMA mapping
    
            which is not suitable for stable.
    
    So I'm just fixing this up directly.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Kevin Hilman <khilman@baylibre.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0151aaf5dd738460ef2d21a5579d56df09cc4e51
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 6 09:45:22 2018 +0200

    Revert "ip6_vti: adjust vti mtu according to mtu of lower device"
    
    This reverts commit 1139d77d8a7f9aa6b6ae0a1c902f94775dad2f52 which is
    commit 53c81e95df1793933f87748d36070a721f6cb287 upstream.
    
    Ben writes that there are a number of follow-on patches needed to fix
    this up, but they get complex to backport, and some custom fixes are
    needed, so let's just revert this and wait for a "real" set of patches
    to resolve this to be submitted if it is really needed.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Petr Vorel <pvorel@suse.cz>
    Cc: Alexey Kodanev <alexey.kodanev@oracle.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39639c49bc5046b3279d8dd400defb5d32884ff3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 6 09:28:46 2018 +0200

    Revert "mtip32xx: use runtime tag to initialize command header"
    
    This reverts commit db54facd56a40e7766bf7f7cda1ae138e72a691c which was
    commit a4e84aae8139aca9fbfbced1f45c51ca81b57488 upstream.
    
    Ben writes:
        MQ IO schedulers were introduced in 4.11, so this shouldn't be
        needed in older branches.  It also causes a performance
        regression (fixed upstream).  Please revert this for 4.4 and
        4.9.
    
    So let's revert it!
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 182ab70f61d18ed231ab4357bb2059a2be27f257
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 6 09:08:12 2018 +0200

    Revert "spi: bcm-qspi: shut up warning about cfi header inclusion"
    
    This reverts commit c30e6636ce101fd61331092c490b9d9c55b2d143.
    
    Florian writes:
            Sorry for noticing so late, but this appears to be bogus, there
            is no MTD_NORFLASH symbol being defined in 4.9, in fact I can't
            find this Kconfig symbol in any kernel version, so this
            effectively results in the driver no longer being selectable, so
            this sure does silence the warning.
    
    It's not good to just disable a whole driver :(
    
    So let's revert the patch for now, Arnd can work on a better build
    fix...
    
    Reported-by: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c201211feaa089699bc28356899ed0a6a01db8e7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 6 08:56:45 2018 +0200

    Revert "ARM: dts: omap3-n900: Fix the audio CODEC's reset pin"
    
    This reverts commit e5ca83f556925b86133af12ef7f17c1a52c39d7e which was
    commit 7be4b5dc7ffa9499ac6ef33a5ffa9ff43f9b7057 upstream.
    
    It requires a driver that was not merged until 4.16, so remove it from
    this stable tree as it is pointless.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Andrew F. Davis <afd@ti.com>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95563efd4578250d8b85906cdab8e7dcb83d4cca
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 6 08:47:29 2018 +0200

    Revert "ARM: dts: am335x-pepper: Fix the audio CODEC's reset pin"
    
    This reverts commit 272b5eef085c23cd71eec30fe040fb1592682508 which was
    comit e153db03c6b7a035c797bcdf35262586f003ee93 upstream.
    
    It requires a driver that was not merged until 4.16, so remove it from
    this stable tree as it is pointless.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Andrew F. Davis <afd@ti.com>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bae91221eea93a2a7d9a9dda22cf28c1c392db0
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Mar 21 12:49:29 2018 -0400

    Fix slab name "biovec-(1<<(21-12))"
    
    commit bd5c4facf59648581d2f1692dad7b107bf429954 upstream.
    
    I'm getting a slab named "biovec-(1<<(21-12))". It is caused by unintended
    expansion of the macro BIO_MAX_PAGES. This patch renames it to biovec-max.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org      # v4.14+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83216cbbfda8c7091fffa8260e4436355f1d49a7
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Thu Mar 15 17:54:20 2018 +0100

    net: hns: Fix ethtool private flags
    
    commit d61d263c8d82db7c4404a29ebc29674b1c0c05c9 upstream.
    
    The driver implementation returns support for private flags, while
    no private flags are present. When asked for the number of private
    flags it returns the number of statistic flag names.
    
    Fix this by returning EOPNOTSUPP for not implemented ethtool flags.
    
    Signed-off-by: Matthias Brugger <mbrugger@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e4321c232c75230bd1579eba6c5b3f54571328d
Author: Guoqing Jiang <gqjiang@suse.com>
Date:   Thu Apr 6 09:12:18 2017 +0800

    md/raid10: reset the 'first' at the end of loop
    
    commit 6f287ca6046edd34ed83aafb7f9033c9c2e809e2 upstream.
    
    We need to set "first = 0' at the end of rdev_for_each
    loop, so we can get the array's min_offset_diff correctly
    otherwise min_offset_diff just means the last rdev's
    offset diff.
    
    [only the first chunk, due to b506335e5d2b ("md/raid10: skip spare disk as
    'first' disk") being already applied - gregkh]
    
    Suggested-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Guoqing Jiang <gqjiang@suse.com>
    Reviewed-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afda607daa76f3991ca256b9e10ee4a3727ca8cd
Author: Keerthy <j-keerthy@ti.com>
Date:   Thu Nov 10 10:39:20 2016 +0530

    ARM: dts: am57xx-idk-common: Add overide powerhold property
    
    commit 8804755bfb1f3cbc003e4ebe99eac491672f354c upstream.
    
    The PMICs have POWERHOLD set by default which prevents PMIC shutdown
    even on DEV_CTRL On bit set to 0 as the Powerhold has higher priority.
    So to enable pmic power off this property lets one over ride the default
    value and enable pmic power off.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e284effe33905be28268bebe6d0c7de3d5283a2f
Author: Keerthy <j-keerthy@ti.com>
Date:   Thu Nov 10 10:39:19 2016 +0530

    ARM: dts: am57xx-beagle-x15-common: Add overide powerhold property
    
    commit 1f166499ce006b3770a3166122eda64e160736ab upstream.
    
    The PMICs have POWERHOLD set by default which prevents PMIC shutdown
    even on DEV_CTRL On bit set to 0 as the Powerhold has higher priority.
    So to enable pmic power off this property lets one over ride the default
    value and enable pmic power off.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cae986d2b5eb5cbe43f02688e495684f068da0a
Author: Keerthy <j-keerthy@ti.com>
Date:   Thu Apr 13 10:21:21 2017 +0530

    ARM: dts: dra7: Add power hold and power controller properties to palmas
    
    commit 7c62de5f3fc92291decc0dac5f36949bdc3fb575 upstream.
    
    Add power hold and power controller properties to palmas node.
    This is needed to shutdown pmic correctly on boards with
    powerhold set.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98a7f813e9c984afaf09c651b160dd3c2a66b22e
Author: Keerthy <j-keerthy@ti.com>
Date:   Mon Nov 28 09:31:58 2016 +0530

    Documentation: pinctrl: palmas: Add ti,palmas-powerhold-override property definition
    
    commit 0ea66f76ba17a4b229caaadd77de694111b21769 upstream.
    
    GPIO7 is configured in POWERHOLD mode which has higher priority
    over DEV_ON bit and keeps the PMIC supplies on even after the DEV_ON
    bit is turned off. This property enables driver to over ride the
    POWERHOLD value to GPIO7 so as to turn off the PMIC in power off
    scenarios.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d2e98ce445b10b2f1f4f44ff096a6a9381726e1
Author: Mike Frysinger <vapier@chromium.org>
Date:   Mon Jan 29 17:08:21 2018 -0500

    vt: change SGR 21 to follow the standards
    
    commit 65d9982d7e523a1a8e7c9af012da0d166f72fc56 upstream.
    
    ECMA-48 [1] (aka ISO 6429) has defined SGR 21 as "doubly underlined"
    since at least March 1984.  The Linux kernel has treated it as SGR 22
    "normal intensity" since it was added in Linux-0.96b in June 1992.
    Before that, it was simply ignored.  Other terminal emulators have
    either ignored it, or treat it as double underline now.  xterm for
    example added support in its 304 release (May 2014) [2] where it was
    previously ignoring it.
    
    Changing this behavior shouldn't be an issue:
    - It isn't a named capability in ncurses's terminfo database, so no
      script is using libtinfo/libcurses to look this up, or using tput
      to query & output the right sequence.
    - Any script assuming SGR 21 will reset intensity in all terminals
      already do not work correctly on non-Linux VTs (including running
      under screen/tmux/etc...).
    - If someone has written a script that only runs in the Linux VT, and
      they're using SGR 21 (instead of SGR 22), the output should still
      be readable.
    
    imo it's important to change this as the Linux VT's non-conformance
    is sometimes used as an argument for other terminal emulators to not
    implement SGR 21 at all, or do so incorrectly.
    
    [1]: https://www.ecma-international.org/publications/standards/Ecma-048.htm
    [2]: https://github.com/ThomasDickey/xterm-snapshots/commit/2fd29cb98d214cb536bcafbee00bc73b3f1eeb9d
    
    Signed-off-by: Mike Frysinger <vapier@chromium.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f662f40fce81d7a5d7f0a14f6e0ab4a01321cc2
Author: Ondrej Zary <linux@rainbow-software.org>
Date:   Tue Apr 3 10:24:34 2018 -0700

    Input: i8042 - enable MUX on Sony VAIO VGN-CS series to fix touchpad
    
    commit 04bb1719c4de94700056241d4c0fe3c1413f5aff upstream.
    
    The touch sensor buttons on Sony VAIO VGN-CS series laptops (e.g.
    VGN-CS31S) are a separate PS/2 device. As the MUX is disabled for all
    VAIO machines by the nomux blacklist, the data from touch sensor
    buttons and touchpad are combined. The protocol used by the buttons is
    probably similar to the touchpad protocol (both are Synaptics) so both
    devices get enabled. The controller combines the data, creating a mess
    which results in random button clicks, touchpad stopping working and
    lost sync error messages:
    psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 4
    psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1
    psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1
    psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1
    psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1
    psmouse serio1: issuing reconnect request
    
    Add a new i8042_dmi_forcemux_table whitelist with VGN-CS.
    With MUX enabled, touch sensor buttons are detected as separate device
    (and left disabled as there's currently no driver), fixing all touchpad
    problems.
    
    Signed-off-by: Ondrej Zary <linux@rainbow-software.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f00faad73188d1a4d628658bbc47aafeee2f495
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 15:32:09 2018 -0800

    Input: i8042 - add Lenovo ThinkPad L460 to i8042 reset list
    
    commit b56af54ac78c54a519d82813836f305d7f76ef27 upstream.
    
    Reset i8042 before probing because of insufficient BIOS initialisation of
    the i8042 serial controller. This makes Synaptics touchpad detection
    possible. Without resetting the Synaptics touchpad is not detected because
    there are always NACK messages from AUX port.
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61981aa00364a3b52c217a3150038ecebc5abdec
Author: Masaki Ota <masaki.ota@jp.alps.com>
Date:   Mon Jan 29 14:36:54 2018 -0800

    Input: ALPS - fix TrackStick detection on Thinkpad L570 and Latitude 7370
    
    commit 567b9b549cfa1cbc202762ae97b5385c29ade1e3 upstream.
    
    The primary interface for the touchpad device in Thinkpad L570 is SMBus,
    so ALPS overlooked PS2 interface Firmware setting of TrackStick, and
    shipped with TrackStick otp bit is disabled.
    
    The address 0xD7 contains device number information, so we can identify
    the device by checking this value, but to access it we need to enable
    Command mode, and then re-enable the device. Devices shipped in Thinkpad
    L570 report either 0x0C or 0x1D as device numbers, if we see them we assume
    that the devices are DualPoints.
    
    The same issue exists on Dell Latitude 7370.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196929
    Fixes: 646580f793 ("Input: ALPS - fix multi-touch decoding on SS4 plus touchpads")
    Signed-off-by: Masaki Ota <masaki.ota@jp.alps.com>
    Tested-by: Aaron Ma <aaron.ma@canonical.com>
    Tested-by: Jonathan Liu <net147@gmail.com>
    Tested-by: Jaak Ristioja <jaak@ristioja.ee>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baa392b075f84359c79264a2482be434313ba25d
Author: Frank Mori Hess <fmh6jj@gmail.com>
Date:   Thu Mar 15 10:25:44 2018 +0000

    staging: comedi: ni_mio_common: ack ai fifo error interrupts.
    
    commit e1d9fc04c41840a4688ef6ce90b6dcca157ea4d7 upstream.
    
    Ack ai fifo error interrupts in interrupt handler to clear interrupt
    after fifo overflow.  It should prevent lock-ups after the ai fifo
    overflows.
    
    Cc: <stable@vger.kernel.org> # v4.2+
    Signed-off-by: Frank Mori Hess <fmh6jj@gmail.com>
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27bb1e0ce8c15e175867ef25f8ac111af5b2faf1
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Feb 19 23:48:12 2018 -0800

    crypto: x86/cast5-avx - fix ECB encryption when long sg follows short one
    
    commit 8f461b1e02ed546fbd0f11611138da67fd85a30f upstream.
    
    With ecb-cast5-avx, if a 128+ byte scatterlist element followed a
    shorter one, then the algorithm accidentally encrypted/decrypted only 8
    bytes instead of the expected 128 bytes.  Fix it by setting the
    encryption/decryption 'fn' correctly.
    
    Fixes: c12ab20b162c ("crypto: cast5/avx - avoid using temporary stack buffers")
    Cc: <stable@vger.kernel.org> # v3.8+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7246bf30088f570aaa87b6de6bfbe3cd7510e4c6
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Mar 26 08:53:25 2018 +0800

    crypto: ahash - Fix early termination in hash walk
    
    commit 900a081f6912a8985dc15380ec912752cb66025a upstream.
    
    When we have an unaligned SG list entry where there is no leftover
    aligned data, the hash walk code will incorrectly return zero as if
    the entire SG list has been processed.
    
    This patch fixes it by moving onto the next page instead.
    
    Reported-by: Eli Cooper <elicooper@gmx.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5104b330e75be2fafd65e4affdd2c70691677817
Author: Alexander Gerasiov <gq@redlab-i.ru>
Date:   Sun Feb 4 02:50:22 2018 +0300

    parport_pc: Add support for WCH CH382L PCI-E single parallel port card.
    
    commit 823f7923833c6cc2b16e601546d607dcfb368004 upstream.
    
    WCH CH382L is a PCI-E adapter with 1 parallel port. It is similair to CH382
    but serial ports are not soldered on board. Detected as
    Serial controller: Device 1c00:3050 (rev 10) (prog-if 05 [16850])
    
    Signed-off-by: Alexander Gerasiov <gq@redlab-i.ru>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50cd7759a34104c3acb510e644355d4ae8010851
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Jan 8 09:21:07 2018 -0500

    media: usbtv: prevent double free in error case
    
    commit 50e7044535537b2a54c7ab798cd34c7f6d900bd2 upstream.
    
    Quoting the original report:
    
    It looks like there is a double-free vulnerability in Linux usbtv driver
    on an error path of usbtv_probe function. When audio registration fails,
    usbtv_video_free function ends up freeing usbtv data structure, which
    gets freed the second time under usbtv_video_fail label.
    
    usbtv_audio_fail:
    
            usbtv_video_free(usbtv); =>
    
               v4l2_device_put(&usbtv->v4l2_dev);
    
                  => v4l2_device_put
    
                      => kref_put
    
                          => v4l2_device_release
    
      => usbtv_release (CALLBACK)
    
                                 => kfree(usbtv) (1st time)
    
    usbtv_video_fail:
    
            usb_set_intfdata(intf, NULL);
    
            usb_put_dev(usbtv->udev);
    
            kfree(usbtv); (2nd time)
    
    So, as we have refcounting, use it
    
    Reported-by: Yavuz, Tuba <tuba@ece.ufl.edu>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 666dc4c8378f77b9815fd8b317339f22025bcc3c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Feb 27 16:21:05 2018 +0000

    mei: remove dev_err message on an unsupported ioctl
    
    commit bb0829a741792b56c908d7745bc0b2b540293bcc upstream.
    
    Currently the driver spams the kernel log on unsupported ioctls which is
    unnecessary as the ioctl returns -ENOIOCTLCMD to indicate this anyway.
    I suspect this was originally for debugging purposes but it really is not
    required so remove it.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f213d151e8927d3486a0a21e7031179a358e52bf
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Mar 6 09:32:43 2018 +0100

    USB: serial: cp210x: add ELDAT Easywave RX09 id
    
    commit 1f1e82f74c0947e40144688c9e36abe4b3999f49 upstream.
    
    Add device id for ELDAT Easywave RX09 tranceiver.
    
    Reported-by: Jan Jansen <nattelip@hotmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6424b64c8a6dcf505242b18286dce5d0931c6ee4
Author: Clemens Werther <clemens.werther@gmail.com>
Date:   Fri Mar 16 10:20:46 2018 +0100

    USB: serial: ftdi_sio: add support for Harman FirmwareHubEmulator
    
    commit 6555ad13a01952c16485c82a52ad1f3e07e34b3a upstream.
    
    Add device id for Harman FirmwareHubEmulator to make the device
    auto-detectable by the driver.
    
    Signed-off-by: Clemens Werther <clemens.werther@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04e624e76153d65541a062d82b851e95b3eae581
Author: Major Hayden <major@mhtx.net>
Date:   Fri Feb 23 14:29:54 2018 -0600

    USB: serial: ftdi_sio: add RT Systems VX-8 cable
    
    commit 9608e5c0f079390473b484ef92334dfd3431bb89 upstream.
    
    This patch adds a device ID for the RT Systems cable used to
    program Yaesu VX-8R/VX-8DR handheld radios. It uses the main
    FTDI VID instead of the common RT Systems VID.
    
    Signed-off-by: Major Hayden <major@mhtx.net>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 574e44dc36676a13af084a9d5f42cc71a59b8066
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:23 2018 +0100

    arm64: idmap: Use "awx" flags for .idmap.text .pushsection directives
    
    commit 439e70e27a51 upstream.
    
    The identity map is mapped as both writeable and executable by the
    SWAPPER_MM_MMUFLAGS and this is relied upon by the kpti code to manage
    a synchronisation flag. Update the .pushsection flags to reflect the
    actual mapping attributes.
    
    Reported-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a80d8e2979f32113df09b844d5e12e771162db40
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:22 2018 +0100

    arm64: entry: Reword comment about post_ttbr_update_workaround
    
    commit f167211a93ac upstream.
    
    We don't fully understand the Cavium ThunderX erratum, but it appears
    that mapping the kernel as nG can lead to horrible consequences such as
    attempting to execute userspace from kernel context. Since kpti isn't
    enabled for these CPUs anyway, simplify the comment justifying the lack
    of post_ttbr_update_workaround in the exception trampoline.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da93510bae26c62cc6171d8cdbe177a091a1ab79
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Apr 3 12:09:21 2018 +0100

    arm64: Force KPTI to be disabled on Cavium ThunderX
    
    commit 6dc52b15c4a4 upstream.
    
    Cavium ThunderX's erratum 27456 results in a corruption of icache
    entries that are loaded from memory that is mapped as non-global
    (i.e. ASID-tagged).
    
    As KPTI is based on memory being mapped non-global, let's prevent
    it from kicking in if this erratum is detected.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    [will: Update comment]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    [Alex: use cpus_have_cap as cpus_have_const_cap doesn't exist in v4.9]
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4025fe1291e4d0b1de6a12c4e5fa68fadd388f3d
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:20 2018 +0100

    arm64: kpti: Add ->enable callback to remap swapper using nG mappings
    
    commit f992b4dfd58b upstream.
    
    Defaulting to global mappings for kernel space is generally good for
    performance and appears to be necessary for Cavium ThunderX. If we
    subsequently decide that we need to enable kpti, then we need to rewrite
    our existing page table entries to be non-global. This is fiddly, and
    made worse by the possible use of contiguous mappings, which require
    a strict break-before-make sequence.
    
    Since the enable callback runs on each online CPU from stop_machine
    context, we can have all CPUs enter the idmap, where secondaries can
    wait for the primary CPU to rewrite swapper with its MMU off. It's all
    fairly horrible, but at least it only runs once.
    
    Nicolas Dechesne <nicolas.dechesne@linaro.org> found a bug on this commit
    which cause boot failure on db410c etc board. Ard Biesheuvel found it
    writting wrong contenct to ttbr1_el1 in __idmap_cpu_set_reserved_ttbr1
    macro and fixed it by give it the right content.
    
    Tested-by: Marc Zyngier <marc.zyngier@arm.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [Alex: avoid dependency on 52-bit PA patches and TTBR/MMU erratum patches]
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fefeffe1973f7a5ee57ad4b593f270747b4c784b
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:19 2018 +0100

    arm64: kpti: Make use of nG dependent on arm64_kernel_unmapped_at_el0()
    
    commit 41acec624087 upstream.
    
    To allow systems which do not require kpti to continue running with
    global kernel mappings (which appears to be a requirement for Cavium
    ThunderX due to a CPU erratum), make the use of nG in the kernel page
    tables dependent on arm64_kernel_unmapped_at_el0(), which is resolved
    at runtime.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2adcb1fb389f1e4d650ecbd25b9ecace0fe5d014
Author: Jayachandran C <c.jayachandran@gmail.com>
Date:   Tue Apr 3 12:09:18 2018 +0100

    arm64: Turn on KPTI only on CPUs that need it
    
    commit 0ba2e29c7fc1 upstream.
    
    Whitelist Broadcom Vulcan/Cavium ThunderX2 processors in
    unmap_kernel_at_el0(). These CPUs are not vulnerable to
    CVE-2017-5754 and do not need KPTI when KASLR is off.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Jayachandran C <jnair@caviumnetworks.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f93aea3da223df5a79b4d103b1e4e6d30296b527
Author: Jayachandran C <c.jayachandran@gmail.com>
Date:   Tue Apr 3 12:09:17 2018 +0100

    arm64: cputype: Add MIDR values for Cavium ThunderX2 CPUs
    
    commit 0d90718871fe upstream.
    
    Add the older Broadcom ID as well as the new Cavium ID for ThunderX2
    CPUs.
    
    Signed-off-by: Jayachandran C <jnair@caviumnetworks.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e0946de6224fd8fdea333f6523100e9625cb26e
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Tue Apr 3 12:09:16 2018 +0100

    arm64: capabilities: Handle duplicate entries for a capability
    
    commit 67948af41f2e upstream.
    
    Sometimes a single capability could be listed multiple times with
    differing matches(), e.g, CPU errata for different MIDR versions.
    This breaks verify_local_cpu_feature() and this_cpu_has_cap() as
    we stop checking for a capability on a CPU with the first
    entry in the given table, which is not sufficient. Make sure we
    run the checks for all entries of the same capability. We do
    this by fixing __this_cpu_has_cap() to run through all the
    entries in the given table for a match and reuse it for
    verify_local_cpu_feature().
    
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d648e44e902e063f8a34c1acdd1fbe06df19cb0
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Apr 3 12:09:15 2018 +0100

    arm64: Allow checking of a CPU-local erratum
    
    commit 8f4137588261d7504f4aa022dc9d1a1fd1940e8e upstream.
    
    this_cpu_has_cap() only checks the feature array, and not the errata
    one. In order to be able to check for a CPU-local erratum, allow it
    to inspect the latter as well.
    
    This is consistent with cpus_have_cap()'s behaviour, which includes
    errata already.
    
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7354772afe1bfdcabc1eb218bedf736516daff50
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:14 2018 +0100

    arm64: Take into account ID_AA64PFR0_EL1.CSV3
    
    commit 179a56f6f9fb upstream.
    
    For non-KASLR kernels where the KPTI behaviour has not been overridden
    on the command line we can use ID_AA64PFR0_EL1.CSV3 to determine whether
    or not we should unmap the kernel whilst running at EL0.
    
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    [Alex: s/read_sanitised_ftr_reg/read_system_reg/ to match v4.9 naming]
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    [Mark: correct zero bits in ftr_id_aa64pfr0 to account for CSV3]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ded98c668a71e28a769a04051df7973cafad73f2
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:13 2018 +0100

    arm64: Kconfig: Reword UNMAP_KERNEL_AT_EL0 kconfig entry
    
    commit 0617052ddde3 upstream.
    
    Although CONFIG_UNMAP_KERNEL_AT_EL0 does make KASLR more robust, it's
    actually more useful as a mitigation against speculation attacks that
    can leak arbitrary kernel data to userspace through speculation.
    
    Reword the Kconfig help message to reflect this, and make the option
    depend on EXPERT so that it is on by default for the majority of users.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 531a0eb24fb70137714b33956cab71a26d408fcd
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:12 2018 +0100

    arm64: Kconfig: Add CONFIG_UNMAP_KERNEL_AT_EL0
    
    commit 084eb77cd3a8 upstream.
    
    Add a Kconfig entry to control use of the entry trampoline, which allows
    us to unmap the kernel whilst running in userspace and improve the
    robustness of KASLR.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6af5324fbda14e56247c60f1fd7d6a50abe32cf
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:11 2018 +0100

    arm64: use RET instruction for exiting the trampoline
    
    commit be04a6d1126b upstream.
    
    Speculation attacks against the entry trampoline can potentially resteer
    the speculative instruction stream through the indirect branch and into
    arbitrary gadgets within the kernel.
    
    This patch defends against these attacks by forcing a misprediction
    through the return stack: a dummy BL instruction loads an entry into
    the stack, so that the predicted program flow of the subsequent RET
    instruction is to a branch-to-self instruction which is finally resolved
    as a branch to the kernel vectors with speculation suppressed.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96750422f84e74dfac4e4572fd9fa9fc274d5dc5
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:10 2018 +0100

    arm64: kaslr: Put kernel vectors address in separate data page
    
    commit 6c27c4082f4f upstream.
    
    The literal pool entry for identifying the vectors base is the only piece
    of information in the trampoline page that identifies the true location
    of the kernel.
    
    This patch moves it into a page-aligned region of the .rodata section
    and maps this adjacent to the trampoline text via an additional fixmap
    entry, which protects against any accidental leakage of the trampoline
    contents.
    
    Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [Alex: avoid ARM64_WORKAROUND_QCOM_FALKOR_E1003 dependency]
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfca15762de353a87ebca2fe39ff6d769cebf0b2
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:09 2018 +0100

    arm64: entry: Add fake CPU feature for unmapping the kernel at EL0
    
    commit ea1e3de85e94 upstream.
    
    Allow explicit disabling of the entry trampoline on the kernel command
    line (kpti=off) by adding a fake CPU feature (ARM64_UNMAP_KERNEL_AT_EL0)
    that can be used to toggle the alternative sequences in our entry code and
    avoid use of the trampoline altogether if desired. This also allows us to
    make use of a static key in arm64_kernel_unmapped_at_el0().
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [Alex: use first free cpucap number, use cpus_have_cap]
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e7fb7cc6bc4053382477f64322251717d110d83
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:08 2018 +0100

    arm64: tls: Avoid unconditional zeroing of tpidrro_el0 for native tasks
    
    commit 18011eac28c7 upstream.
    
    When unmapping the kernel at EL0, we use tpidrro_el0 as a scratch register
    during exception entry from native tasks and subsequently zero it in
    the kernel_ventry macro. We can therefore avoid zeroing tpidrro_el0
    in the context-switch path for native tasks using the entry trampoline.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ded93ce56e9a96f94397699be447ba8e9e4b45c3
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:07 2018 +0100

    arm64: entry: Hook up entry trampoline to exception vectors
    
    commit 4bf3286d29f3 upstream.
    
    Hook up the entry trampoline to our exception vectors so that all
    exceptions from and returns to EL0 go via the trampoline, which swizzles
    the vector base register accordingly. Transitioning to and from the
    kernel clobbers x30, so we use tpidrro_el0 and far_el1 as scratch
    registers for native tasks.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0b3c71fbc87a8db3f2f841287bfcb6e7d78635c
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:06 2018 +0100

    arm64: entry: Explicitly pass exception level to kernel_ventry macro
    
    commit 5b1f7fe41909 upstream.
    
    We will need to treat exceptions from EL0 differently in kernel_ventry,
    so rework the macro to take the exception level as an argument and
    construct the branch target using that.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    [Mark: avoid dependency on C error handler backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1809afd71b9c419ab8b57c3ea5c870b5285f442a
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:05 2018 +0100

    arm64: mm: Map entry trampoline into trampoline and kernel page tables
    
    commit 51a0048beb44 upstream.
    
    The exception entry trampoline needs to be mapped at the same virtual
    address in both the trampoline page table (which maps nothing else)
    and also the kernel page table, so that we can swizzle TTBR1_EL1 on
    exceptions from and return to EL0.
    
    This patch maps the trampoline at a fixed virtual address in the fixmap
    area of the kernel virtual address space, which allows the kernel proper
    to be randomized with respect to the trampoline when KASLR is enabled.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78a0cec5fe4399dced66e70cdec793618590d932
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:04 2018 +0100

    arm64: entry: Add exception trampoline page for exceptions from EL0
    
    commit c7b9adaf85f8 upstream.
    
    To allow unmapping of the kernel whilst running at EL0, we need to
    point the exception vectors at an entry trampoline that can map/unmap
    the kernel on entry/exit respectively.
    
    This patch adds the trampoline page, although it is not yet plugged
    into the vector table and is therefore unused.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [Alex: avoid dependency on SW PAN patches]
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    [Mark: remove dummy SW PAN definitions]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f9a93b30bcb7d78f09c86ed47aa86f7340e42e8
Author: AKASHI Takahiro <takahiro.akashi@linaro.org>
Date:   Tue Apr 3 12:09:03 2018 +0100

    module: extend 'rodata=off' boot cmdline parameter to module mappings
    
    commit 39290b389ea upstream.
    
    The current "rodata=off" parameter disables read-only kernel mappings
    under CONFIG_DEBUG_RODATA:
        commit d2aa1acad22f ("mm/init: Add 'rodata=off' boot cmdline parameter
        to disable read-only kernel mappings")
    
    This patch is a logical extension to module mappings ie. read-only mappings
    at module loading can be disabled even if CONFIG_DEBUG_SET_MODULE_RONX
    (mainly for debug use). Please note, however, that it only affects RO/RW
    permissions, keeping NX set.
    
    This is the first step to make CONFIG_DEBUG_SET_MODULE_RONX mandatory
    (always-on) in the future as CONFIG_DEBUG_RODATA on x86 and arm64.
    
    Suggested-by: and Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Acked-by: Rusty Russell <rusty@rustcorp.com.au>
    Link: http://lkml.kernel.org/r/20161114061505.15238-1-takahiro.akashi@linaro.org
    Signed-off-by: Jessica Yu <jeyu@redhat.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e355d4b6a2757a72826383c32b88eb2e76e77f66
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Tue Apr 3 12:09:02 2018 +0100

    arm64: factor out entry stack manipulation
    
    commit b11e5759bfac upstream.
    
    In subsequent patches, we will detect stack overflow in our exception
    entry code, by verifying the SP after it has been decremented to make
    space for the exception regs.
    
    This verification code is small, and we can minimize its impact by
    placing it directly in the vectors. To avoid redundant modification of
    the SP, we also need to move the initial decrement of the SP into the
    vectors.
    
    As a preparatory step, this patch introduces kernel_ventry, which
    performs this decrement, and updates the entry code accordingly.
    Subsequent patches will fold SP verification into kernel_ventry.
    
    There should be no functional change as a result of this patch.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [Mark: turn into prep patch, expand commit msg]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e800ba7a62e5f204d87782c2f0a823512e9d5f3
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:01 2018 +0100

    arm64: mm: Invalidate both kernel and user ASIDs when performing TLBI
    
    commit 9b0de864b5bc upstream.
    
    Since an mm has both a kernel and a user ASID, we need to ensure that
    broadcast TLB maintenance targets both address spaces so that things
    like CoW continue to work with the uaccess primitives in the kernel.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93116842895ec062e3e700f00477bb6c7f3b09ee
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:09:00 2018 +0100

    arm64: mm: Add arm64_kernel_unmapped_at_el0 helper
    
    commit fc0e1299da54 upstream.
    
    In order for code such as TLB invalidation to operate efficiently when
    the decision to map the kernel at EL0 is determined at runtime, this
    patch introduces a helper function, arm64_kernel_unmapped_at_el0, to
    determine whether or not the kernel is mapped whilst running in userspace.
    
    Currently, this just reports the value of CONFIG_UNMAP_KERNEL_AT_EL0,
    but will later be hooked up to a fake CPU capability using a static key.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8919d317bb7f3f7d0e26aae9eb6e430f0f821ca9
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:08:59 2018 +0100

    arm64: mm: Allocate ASIDs in pairs
    
    commit 0c8ea531b774 upstream.
    
    In preparation for separate kernel/user ASIDs, allocate them in pairs
    for each mm_struct. The bottom bit distinguishes the two: if it is set,
    then the ASID will map only userspace.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 984e60a9d110ef00938e3fc8d74831893f7cab7d
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:08:58 2018 +0100

    arm64: mm: Move ASID from TTBR0 to TTBR1
    
    commit 7655abb95386 upstream.
    
    In preparation for mapping kernelspace and userspace with different
    ASIDs, move the ASID to TTBR1 and update switch_mm to context-switch
    TTBR0 via an invalid mapping (the zero page).
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e4e9770667fc96e50b2bf69377333b587834fae
Author: Will Deacon <will@kernel.org>
Date:   Tue Apr 3 12:08:57 2018 +0100

    arm64: mm: Use non-global mappings for kernel space
    
    commit e046eb0c9bf2 upstream.
    
    In preparation for unmapping the kernel whilst running in userspace,
    make the kernel mappings non-global so we can avoid expensive TLB
    invalidation on kernel exit to userspace.
    
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Tested-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Alex Shi <alex.shi@linaro.org> [v4.9 backport]
    Signed-off-by: Mark Rutland <mark.rutland@arm.com> [v4.9 backport]
    Tested-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e59524527a5ce0cbca047f3ad0fb8f7997713fe
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon Oct 23 14:32:48 2017 -0700

    usb: dwc2: Improve gadget state disconnection handling
    
    commit d2471d4a24dfbff5e463d382e2c6fec7d7e25a09 upstream.
    
    In the earlier commit dad3f793f20f ("usb: dwc2: Make sure we
    disconnect the gadget state"), I was trying to fix up the
    fact that we somehow weren't disconnecting the gadget state,
    so that when the OTG port was plugged in the second time we
    would get warnings about the state tracking being wrong.
    
    (This seems to be due to a quirk of the HiKey board where
    we do not ever get any otg interrupts, particularly the session
    end detected signal. Instead we only see status change
    interrupt.)
    
    The fix there was somewhat simple, as it just made sure to
    call dwc2_hsotg_disconnect() before we connected things up
    in OTG mode, ensuring the state handling didn't throw errors.
    
    But in looking at a different issue I was seeing with UDC
    state handling, I realized that it would be much better
    to call dwc2_hsotg_disconnect when we get the state change
    signal moving to host mode.
    
    Thus, this patch removes the earlier disconnect call I added
    and moves it (and the needed locking) to the host mode
    transition.
    
    Cc: Wei Xu <xuwei5@hisilicon.com>
    Cc: Guodong Xu <guodong.xu@linaro.org>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Cc: YongQin Liu <yongqin.liu@linaro.org>
    Cc: John Youn <johnyoun@synopsys.com>
    Cc: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: Chen Yu <chenyu56@huawei.com>
    Cc: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-usb@vger.kernel.org
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Tested-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfde23842ab214e3de39beb7e68970c502e849e8
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Jul 5 10:30:56 2017 +0200

    scsi: virtio_scsi: always read VPD pages for multiqueue too
    
    commit a680f1d463aeaeb00d22af257a56e111967c2f18 upstream.
    
    Multi-queue virtio-scsi uses a different scsi_host_template struct.  Add
    the .device_alloc field there, too.
    
    Fixes: 25d1d50e23275e141e3a3fe06c25a99f4c4bf4e0
    Cc: stable@vger.kernel.org
    Cc: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Fam Zheng <famz@redhat.com>
    Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecd508abb0fa6716a6b397e9bf9e3efbfa4c5864
Author: Alexander Potapenko <glider@google.com>
Date:   Wed Jul 19 20:27:30 2017 +0200

    llist: clang: introduce member_address_is_nonnull()
    
    commit beaec533fc2701a28a4d667f67c9f59c6e4e0d13 upstream.
    
    Currently llist_for_each_entry() and llist_for_each_entry_safe() iterate
    until &pos->member != NULL.  But when building the kernel with Clang,
    the compiler assumes &pos->member cannot be NULL if the member's offset
    is greater than 0 (which would be equivalent to the object being
    non-contiguous in memory).  Therefore the loop condition is always true,
    and the loops become infinite.
    
    To work around this, introduce the member_address_is_nonnull() macro,
    which casts object pointer to uintptr_t, thus letting the member pointer
    to be NULL.
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Tested-by: Sodagudi Prasad <psodagud@codeaurora.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24382a60331d6be571b09eb2165815dbab2457cc
Author: Szymon Janc <szymon.janc@codecoup.pl>
Date:   Mon Feb 26 15:41:53 2018 +0100

    Bluetooth: Fix missing encryption refresh on Security Request
    
    commit 64e759f58f128730b97a3c3a26d283c075ad7c86 upstream.
    
    If Security Request is received on connection that is already encrypted
    with sufficient security master should perform encryption key refresh
    procedure instead of just ignoring Slave Security Request
    (Core Spec 5.0 Vol 3 Part H 2.4.6).
    
    > ACL Data RX: Handle 3585 flags 0x02 dlen 6
          SMP: Security Request (0x0b) len 1
            Authentication requirement: Bonding, No MITM, SC, No Keypresses (0x09)
    < HCI Command: LE Start Encryption (0x08|0x0019) plen 28
            Handle: 3585
            Random number: 0x0000000000000000
            Encrypted diversifier: 0x0000
            Long term key: 44264272a5c426a9e868f034cf0e69f3
    > HCI Event: Command Status (0x0f) plen 4
          LE Start Encryption (0x08|0x0019) ncmd 1
            Status: Success (0x00)
    > HCI Event: Encryption Key Refresh Complete (0x30) plen 3
            Status: Success (0x00)
            Handle: 3585
    
    Signed-off-by: Szymon Janc <szymon.janc@codecoup.pl>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6ab7c6ceba551319e968e46d82f745d9ca1535a
Author: Florian Westphal <fw@strlen.de>
Date:   Sat Mar 10 01:15:45 2018 +0100

    netfilter: x_tables: add and use xt_check_proc_name
    
    commit b1d0a5d0cba4597c0394997b2d5fced3e3841b4e upstream.
    
    recent and hashlimit both create /proc files, but only check that
    name is 0 terminated.
    
    This can trigger WARN() from procfs when name is "" or "/".
    Add helper for this and then use it for both.
    
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Reported-by: <syzbot+0502b00edac2a0680b61@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccf38b31223edd9dd1852e43dafe347308629a46
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Mar 9 14:27:31 2018 +0100

    netfilter: bridge: ebt_among: add more missing match size checks
    
    commit c8d70a700a5b486bfa8e5a7d33d805389f6e59f9 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    commit c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    added validation for pool size, but missed fact that the macros
    ebt_among_wh_src/dst can already return out-of-bound result because
    they do not check value of wh_src/dst_ofs (an offset) vs. the size
    of the match that userspace gave to us.
    
    v2:
    check that offset has correct alignment.
    Paolo Abeni points out that we should also check that src/dst
    wormhash arrays do not overlap, and src + length lines up with
    start of dst (or vice versa).
    v3: compact wormhash_sizes_valid() part
    
    NB: Fixes tag is intentionally wrong, this bug exists from day
    one when match was added for 2.6 kernel. Tag is there so stable
    maintainers will notice this one too.
    
    Tested with same rules from the earlier patch.
    
    Fixes: c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    Reported-by: <syzbot+bdabab6f1983a03fc009@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02a5b414bf929922d84bb2289c7ef78eb060a426
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Thu Feb 1 08:49:23 2018 +0100

    xfrm: Refuse to insert 32 bit userspace socket policies on 64 bit systems
    
    commit 19d7df69fdb2636856dc8919de72fc1bf8f79598 upstream.
    
    We don't have a compat layer for xfrm, so userspace and kernel
    structures have different sizes in this case. This results in
    a broken configuration, so refuse to configure socket policies
    when trying to insert from 32 bit userspace as we do it already
    with policies inserted via netlink.
    
    Reported-and-tested-by: syzbot+e1a1577ca8bcb47b769a@syzkaller.appspotmail.com
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30df7fb50d323c05ae7913c404753047335cf0fa
Author: Greg Hackmann <ghackmann@google.com>
Date:   Wed Mar 7 14:42:53 2018 -0800

    net: xfrm: use preempt-safe this_cpu_read() in ipcomp_alloc_tfms()
    
    commit 0dcd7876029b58770f769cbb7b484e88e4a305e5 upstream.
    
    f7c83bcbfaf5 ("net: xfrm: use __this_cpu_read per-cpu helper") added a
    __this_cpu_read() call inside ipcomp_alloc_tfms().
    
    At the time, __this_cpu_read() required the caller to either not care
    about races or to handle preemption/interrupt issues.  3.15 tightened
    the rules around some per-cpu operations, and now __this_cpu_read()
    should never be used in a preemptible context.  On 3.15 and later, we
    need to use this_cpu_read() instead.
    
    syzkaller reported this leading to the following kernel BUG while
    fuzzing sendmsg:
    
    BUG: using __this_cpu_read() in preemptible [00000000] code: repro/3101
    caller is ipcomp_init_state+0x185/0x990
    CPU: 3 PID: 3101 Comm: repro Not tainted 4.16.0-rc4-00123-g86f84779d8e9 #154
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1 04/01/2014
    Call Trace:
     dump_stack+0xb9/0x115
     check_preemption_disabled+0x1cb/0x1f0
     ipcomp_init_state+0x185/0x990
     ? __xfrm_init_state+0x876/0xc20
     ? lock_downgrade+0x5e0/0x5e0
     ipcomp4_init_state+0xaa/0x7c0
     __xfrm_init_state+0x3eb/0xc20
     xfrm_init_state+0x19/0x60
     pfkey_add+0x20df/0x36f0
     ? pfkey_broadcast+0x3dd/0x600
     ? pfkey_sock_destruct+0x340/0x340
     ? pfkey_seq_stop+0x80/0x80
     ? __skb_clone+0x236/0x750
     ? kmem_cache_alloc+0x1f6/0x260
     ? pfkey_sock_destruct+0x340/0x340
     ? pfkey_process+0x62a/0x6f0
     pfkey_process+0x62a/0x6f0
     ? pfkey_send_new_mapping+0x11c0/0x11c0
     ? mutex_lock_io_nested+0x1390/0x1390
     pfkey_sendmsg+0x383/0x750
     ? dump_sp+0x430/0x430
     sock_sendmsg+0xc0/0x100
     ___sys_sendmsg+0x6c8/0x8b0
     ? copy_msghdr_from_user+0x3b0/0x3b0
     ? pagevec_lru_move_fn+0x144/0x1f0
     ? find_held_lock+0x32/0x1c0
     ? do_huge_pmd_anonymous_page+0xc43/0x11e0
     ? lock_downgrade+0x5e0/0x5e0
     ? get_kernel_page+0xb0/0xb0
     ? _raw_spin_unlock+0x29/0x40
     ? do_huge_pmd_anonymous_page+0x400/0x11e0
     ? __handle_mm_fault+0x553/0x2460
     ? __fget_light+0x163/0x1f0
     ? __sys_sendmsg+0xc7/0x170
     __sys_sendmsg+0xc7/0x170
     ? SyS_shutdown+0x1a0/0x1a0
     ? __do_page_fault+0x5a0/0xca0
     ? lock_downgrade+0x5e0/0x5e0
     SyS_sendmsg+0x27/0x40
     ? __sys_sendmsg+0x170/0x170
     do_syscall_64+0x19f/0x640
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x7f0ee73dfb79
    RSP: 002b:00007ffe14fc15a8 EFLAGS: 00000207 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f0ee73dfb79
    RDX: 0000000000000000 RSI: 00000000208befc8 RDI: 0000000000000004
    RBP: 00007ffe14fc15b0 R08: 00007ffe14fc15c0 R09: 00007ffe14fc15c0
    R10: 0000000000000000 R11: 0000000000000207 R12: 0000000000400440
    R13: 00007ffe14fc16b0 R14: 0000000000000000 R15: 0000000000000000
    
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0253af4a15b81f7f9d033917c3fd64b65df0154
Author: Roland Dreier <roland@purestorage.com>
Date:   Wed Mar 28 11:27:22 2018 -0700

    RDMA/ucma: Introduce safer rdma_addr_size() variants
    
    commit 84652aefb347297aa08e91e283adf7b18f77c2d5 upstream.
    
    There are several places in the ucma ABI where userspace can pass in a
    sockaddr but set the address family to AF_IB.  When that happens,
    rdma_addr_size() will return a size bigger than sizeof struct sockaddr_in6,
    and the ucma kernel code might end up copying past the end of a buffer
    not sized for a struct sockaddr_ib.
    
    Fix this by introducing new variants
    
        int rdma_addr_size_in6(struct sockaddr_in6 *addr);
        int rdma_addr_size_kss(struct __kernel_sockaddr_storage *addr);
    
    that are type-safe for the types used in the ucma ABI and return 0 if the
    size computed is bigger than the size of the type passed in.  We can use
    these new variants to check what size userspace has passed in before
    copying any addresses.
    
    Reported-by: <syzbot+6800425d54ed3ed8135d@syzkaller.appspotmail.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5eaa1b1e089708c1afab79bca3950fe93e7c3b35
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Mar 25 11:39:05 2018 +0300

    RDMA/ucma: Check that device exists prior to accessing it
    
    commit c8d3bcbfc5eab3f01cf373d039af725f3b488813 upstream.
    
    Ensure that device exists prior to accessing its properties.
    
    Reported-by: <syzbot+71655d44855ac3e76366@syzkaller.appspotmail.com>
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 269f3734f20cf1ffe97f54db5e822a381b6994b7
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Mar 25 11:23:55 2018 +0300

    RDMA/ucma: Check that device is connected prior to access it
    
    commit 4b658d1bbc16605330694bb3ef2570c465ef383d upstream.
    
    Add missing check that device is connected prior to access it.
    
    [   55.358652] BUG: KASAN: null-ptr-deref in rdma_init_qp_attr+0x4a/0x2c0
    [   55.359389] Read of size 8 at addr 00000000000000b0 by task qp/618
    [   55.360255]
    [   55.360432] CPU: 1 PID: 618 Comm: qp Not tainted 4.16.0-rc1-00071-gcaf61b1b8b88 #91
    [   55.361693] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [   55.363264] Call Trace:
    [   55.363833]  dump_stack+0x5c/0x77
    [   55.364215]  kasan_report+0x163/0x380
    [   55.364610]  ? rdma_init_qp_attr+0x4a/0x2c0
    [   55.365238]  rdma_init_qp_attr+0x4a/0x2c0
    [   55.366410]  ucma_init_qp_attr+0x111/0x200
    [   55.366846]  ? ucma_notify+0xf0/0xf0
    [   55.367405]  ? _get_random_bytes+0xea/0x1b0
    [   55.367846]  ? urandom_read+0x2f0/0x2f0
    [   55.368436]  ? kmem_cache_alloc_trace+0xd2/0x1e0
    [   55.369104]  ? refcount_inc_not_zero+0x9/0x60
    [   55.369583]  ? refcount_inc+0x5/0x30
    [   55.370155]  ? rdma_create_id+0x215/0x240
    [   55.370937]  ? _copy_to_user+0x4f/0x60
    [   55.371620]  ? mem_cgroup_commit_charge+0x1f5/0x290
    [   55.372127]  ? _copy_from_user+0x5e/0x90
    [   55.372720]  ucma_write+0x174/0x1f0
    [   55.373090]  ? ucma_close_id+0x40/0x40
    [   55.373805]  ? __lru_cache_add+0xa8/0xd0
    [   55.374403]  __vfs_write+0xc4/0x350
    [   55.374774]  ? kernel_read+0xa0/0xa0
    [   55.375173]  ? fsnotify+0x899/0x8f0
    [   55.375544]  ? fsnotify_unmount_inodes+0x170/0x170
    [   55.376689]  ? __fsnotify_update_child_dentry_flags+0x30/0x30
    [   55.377522]  ? handle_mm_fault+0x174/0x320
    [   55.378169]  vfs_write+0xf7/0x280
    [   55.378864]  SyS_write+0xa1/0x120
    [   55.379270]  ? SyS_read+0x120/0x120
    [   55.379643]  ? mm_fault_error+0x180/0x180
    [   55.380071]  ? task_work_run+0x7d/0xd0
    [   55.380910]  ? __task_pid_nr_ns+0x120/0x140
    [   55.381366]  ? SyS_read+0x120/0x120
    [   55.381739]  do_syscall_64+0xeb/0x250
    [   55.382143]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   55.382841] RIP: 0033:0x7fc2ef803e99
    [   55.383227] RSP: 002b:00007fffcc5f3be8 EFLAGS: 00000217 ORIG_RAX: 0000000000000001
    [   55.384173] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fc2ef803e99
    [   55.386145] RDX: 0000000000000057 RSI: 0000000020000080 RDI: 0000000000000003
    [   55.388418] RBP: 00007fffcc5f3c00 R08: 0000000000000000 R09: 0000000000000000
    [   55.390542] R10: 0000000000000000 R11: 0000000000000217 R12: 0000000000400480
    [   55.392916] R13: 00007fffcc5f3cf0 R14: 0000000000000000 R15: 0000000000000000
    [   55.521088] Code: e5 4d 1e ff 48 89 df 44 0f b6 b3 b8 01 00 00 e8 65 50 1e ff 4c 8b 2b 49
    8d bd b0 00 00 00 e8 56 50 1e ff 41 0f b6 c6 48 c1 e0 04 <49> 03 85 b0 00 00 00 48 8d 78 08
    48 89 04 24 e8 3a 4f 1e ff 48
    [   55.525980] RIP: rdma_init_qp_attr+0x52/0x2c0 RSP: ffff8801e2c2f9d8
    [   55.532648] CR2: 00000000000000b0
    [   55.534396] ---[ end trace 70cee64090251c0b ]---
    
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Fixes: d541e45500bd ("IB/core: Convert ah_attr from OPA to IB when copying to user")
    Reported-by: <syzbot+7b62c837c2516f8f38c8@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6cd10d9940282804d45a139bc14ccf93bd34769
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Mar 20 17:05:13 2018 +0200

    RDMA/ucma: Ensure that CM_ID exists prior to access it
    
    commit e8980d67d6017c8eee8f9c35f782c4bd68e004c9 upstream.
    
    Prior to access UCMA commands, the context should be initialized
    and connected to CM_ID with ucma_create_id(). In case user skips
    this step, he can provide non-valid ctx without CM_ID and cause
    to multiple NULL dereferences.
    
    Also there are situations where the create_id can be raced with
    other user access, ensure that the context is only shared to
    other threads once it is fully initialized to avoid the races.
    
    [  109.088108] BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
    [  109.090315] IP: ucma_connect+0x138/0x1d0
    [  109.092595] PGD 80000001dc02d067 P4D 80000001dc02d067 PUD 1da9ef067 PMD 0
    [  109.095384] Oops: 0000 [#1] SMP KASAN PTI
    [  109.097834] CPU: 0 PID: 663 Comm: uclose Tainted: G    B 4.16.0-rc1-00062-g2975d5de6428 #45
    [  109.100816] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [  109.105943] RIP: 0010:ucma_connect+0x138/0x1d0
    [  109.108850] RSP: 0018:ffff8801c8567a80 EFLAGS: 00010246
    [  109.111484] RAX: 0000000000000000 RBX: 1ffff100390acf50 RCX: ffffffff9d7812e2
    [  109.114496] RDX: 1ffffffff3f507a5 RSI: 0000000000000297 RDI: 0000000000000297
    [  109.117490] RBP: ffff8801daa15600 R08: 0000000000000000 R09: ffffed00390aceeb
    [  109.120429] R10: 0000000000000001 R11: ffffed00390aceea R12: 0000000000000000
    [  109.123318] R13: 0000000000000120 R14: ffff8801de6459c0 R15: 0000000000000118
    [  109.126221] FS:  00007fabb68d6700(0000) GS:ffff8801e5c00000(0000) knlGS:0000000000000000
    [  109.129468] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  109.132523] CR2: 0000000000000020 CR3: 00000001d45d8003 CR4: 00000000003606b0
    [  109.135573] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  109.138716] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  109.142057] Call Trace:
    [  109.144160]  ? ucma_listen+0x110/0x110
    [  109.146386]  ? wake_up_q+0x59/0x90
    [  109.148853]  ? futex_wake+0x10b/0x2a0
    [  109.151297]  ? save_stack+0x89/0xb0
    [  109.153489]  ? _copy_from_user+0x5e/0x90
    [  109.155500]  ucma_write+0x174/0x1f0
    [  109.157933]  ? ucma_resolve_route+0xf0/0xf0
    [  109.160389]  ? __mod_node_page_state+0x1d/0x80
    [  109.162706]  __vfs_write+0xc4/0x350
    [  109.164911]  ? kernel_read+0xa0/0xa0
    [  109.167121]  ? path_openat+0x1b10/0x1b10
    [  109.169355]  ? fsnotify+0x899/0x8f0
    [  109.171567]  ? fsnotify_unmount_inodes+0x170/0x170
    [  109.174145]  ? __fget+0xa8/0xf0
    [  109.177110]  vfs_write+0xf7/0x280
    [  109.179532]  SyS_write+0xa1/0x120
    [  109.181885]  ? SyS_read+0x120/0x120
    [  109.184482]  ? compat_start_thread+0x60/0x60
    [  109.187124]  ? SyS_read+0x120/0x120
    [  109.189548]  do_syscall_64+0xeb/0x250
    [  109.192178]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [  109.194725] RIP: 0033:0x7fabb61ebe99
    [  109.197040] RSP: 002b:00007fabb68d5e98 EFLAGS: 00000202 ORIG_RAX: 0000000000000001
    [  109.200294] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fabb61ebe99
    [  109.203399] RDX: 0000000000000120 RSI: 00000000200001c0 RDI: 0000000000000004
    [  109.206548] RBP: 00007fabb68d5ec0 R08: 0000000000000000 R09: 0000000000000000
    [  109.209902] R10: 0000000000000000 R11: 0000000000000202 R12: 00007fabb68d5fc0
    [  109.213327] R13: 0000000000000000 R14: 00007fff40ab2430 R15: 00007fabb68d69c0
    [  109.216613] Code: 88 44 24 2c 0f b6 84 24 6e 01 00 00 88 44 24 2d 0f
    b6 84 24 69 01 00 00 88 44 24 2e 8b 44 24 60 89 44 24 30 e8 da f6 06 ff
    31 c0 <66> 41 83 7c 24 20 1b 75 04 8b 44 24 64 48 8d 74 24 20 4c 89 e7
    [  109.223602] RIP: ucma_connect+0x138/0x1d0 RSP: ffff8801c8567a80
    [  109.226256] CR2: 0000000000000020
    
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Reported-by: <syzbot+36712f50b0552615bf59@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7d0333a87b3a9b68c9d4351fbd9e0f76f6ac913
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Mar 19 14:20:15 2018 +0200

    RDMA/ucma: Fix use-after-free access in ucma_close
    
    commit ed65a4dc22083e73bac599ded6a262318cad7baf upstream.
    
    The error in ucma_create_id() left ctx in the list of contexts belong
    to ucma file descriptor. The attempt to close this file descriptor causes
    to use-after-free accesses while iterating over such list.
    
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Reported-by: <syzbot+dcfd344365a56fbebd0f@syzkaller.appspotmail.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 510d52da02ae6c8ebaa8c760bde50f141906ac87
Author: Leon Romanovsky <leon@kernel.org>
Date:   Thu Mar 15 15:33:02 2018 +0200

    RDMA/ucma: Check AF family prior resolving address
    
    commit 2975d5de6428ff6d9317e9948f0968f7d42e5d74 upstream.
    
    Garbage supplied by user will cause to UCMA module provide zero
    memory size for memcpy(), because it wasn't checked, it will
    produce unpredictable results in rdma_resolve_addr().
    
    [   42.873814] BUG: KASAN: null-ptr-deref in rdma_resolve_addr+0xc8/0xfb0
    [   42.874816] Write of size 28 at addr 00000000000000a0 by task resaddr/1044
    [   42.876765]
    [   42.876960] CPU: 1 PID: 1044 Comm: resaddr Not tainted 4.16.0-rc1-00057-gaa56a5293d7e #34
    [   42.877840] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [   42.879691] Call Trace:
    [   42.880236]  dump_stack+0x5c/0x77
    [   42.880664]  kasan_report+0x163/0x380
    [   42.881354]  ? rdma_resolve_addr+0xc8/0xfb0
    [   42.881864]  memcpy+0x34/0x50
    [   42.882692]  rdma_resolve_addr+0xc8/0xfb0
    [   42.883366]  ? deref_stack_reg+0x88/0xd0
    [   42.883856]  ? vsnprintf+0x31a/0x770
    [   42.884686]  ? rdma_bind_addr+0xc40/0xc40
    [   42.885327]  ? num_to_str+0x130/0x130
    [   42.885773]  ? deref_stack_reg+0x88/0xd0
    [   42.886217]  ? __read_once_size_nocheck.constprop.6+0x10/0x10
    [   42.887698]  ? unwind_get_return_address_ptr+0x50/0x50
    [   42.888302]  ? replace_slot+0x147/0x170
    [   42.889176]  ? delete_node+0x12c/0x340
    [   42.890223]  ? __radix_tree_lookup+0xa9/0x160
    [   42.891196]  ? ucma_resolve_ip+0xb7/0x110
    [   42.891917]  ucma_resolve_ip+0xb7/0x110
    [   42.893003]  ? ucma_resolve_addr+0x190/0x190
    [   42.893531]  ? _copy_from_user+0x5e/0x90
    [   42.894204]  ucma_write+0x174/0x1f0
    [   42.895162]  ? ucma_resolve_route+0xf0/0xf0
    [   42.896309]  ? dequeue_task_fair+0x67e/0xd90
    [   42.897192]  ? put_prev_entity+0x7d/0x170
    [   42.897870]  ? ring_buffer_record_is_on+0xd/0x20
    [   42.898439]  ? tracing_record_taskinfo_skip+0x20/0x50
    [   42.899686]  __vfs_write+0xc4/0x350
    [   42.900142]  ? kernel_read+0xa0/0xa0
    [   42.900602]  ? firmware_map_remove+0xdf/0xdf
    [   42.901135]  ? do_task_dead+0x5d/0x60
    [   42.901598]  ? do_exit+0xcc6/0x1220
    [   42.902789]  ? __fget+0xa8/0xf0
    [   42.903190]  vfs_write+0xf7/0x280
    [   42.903600]  SyS_write+0xa1/0x120
    [   42.904206]  ? SyS_read+0x120/0x120
    [   42.905710]  ? compat_start_thread+0x60/0x60
    [   42.906423]  ? SyS_read+0x120/0x120
    [   42.908716]  do_syscall_64+0xeb/0x250
    [   42.910760]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   42.912735] RIP: 0033:0x7f138b0afe99
    [   42.914734] RSP: 002b:00007f138b799e98 EFLAGS: 00000287 ORIG_RAX: 0000000000000001
    [   42.917134] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f138b0afe99
    [   42.919487] RDX: 000000000000002e RSI: 0000000020000c40 RDI: 0000000000000004
    [   42.922393] RBP: 00007f138b799ec0 R08: 00007f138b79a700 R09: 0000000000000000
    [   42.925266] R10: 00007f138b79a700 R11: 0000000000000287 R12: 00007f138b799fc0
    [   42.927570] R13: 0000000000000000 R14: 00007ffdbae757c0 R15: 00007f138b79a9c0
    [   42.930047]
    [   42.932681] Disabling lock debugging due to kernel taint
    [   42.934795] BUG: unable to handle kernel NULL pointer dereference at 00000000000000a0
    [   42.936939] IP: memcpy_erms+0x6/0x10
    [   42.938864] PGD 80000001bea92067 P4D 80000001bea92067 PUD 1bea96067 PMD 0
    [   42.941576] Oops: 0002 [#1] SMP KASAN PTI
    [   42.943952] CPU: 1 PID: 1044 Comm: resaddr Tainted: G    B 4.16.0-rc1-00057-gaa56a5293d7e #34
    [   42.946964] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014
    [   42.952336] RIP: 0010:memcpy_erms+0x6/0x10
    [   42.954707] RSP: 0018:ffff8801c8b479c8 EFLAGS: 00010286
    [   42.957227] RAX: 00000000000000a0 RBX: ffff8801c8b47ba0 RCX: 000000000000001c
    [   42.960543] RDX: 000000000000001c RSI: ffff8801c8b47bbc RDI: 00000000000000a0
    [   42.963867] RBP: ffff8801c8b47b60 R08: 0000000000000000 R09: ffffed0039168ed1
    [   42.967303] R10: 0000000000000001 R11: ffffed0039168ed0 R12: ffff8801c8b47bbc
    [   42.970685] R13: 00000000000000a0 R14: 1ffff10039168f4a R15: 0000000000000000
    [   42.973631] FS:  00007f138b79a700(0000) GS:ffff8801e5d00000(0000) knlGS:0000000000000000
    [   42.976831] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   42.979239] CR2: 00000000000000a0 CR3: 00000001be908002 CR4: 00000000003606a0
    [   42.982060] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   42.984877] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   42.988033] Call Trace:
    [   42.990487]  rdma_resolve_addr+0xc8/0xfb0
    [   42.993202]  ? deref_stack_reg+0x88/0xd0
    [   42.996055]  ? vsnprintf+0x31a/0x770
    [   42.998707]  ? rdma_bind_addr+0xc40/0xc40
    [   43.000985]  ? num_to_str+0x130/0x130
    [   43.003410]  ? deref_stack_reg+0x88/0xd0
    [   43.006302]  ? __read_once_size_nocheck.constprop.6+0x10/0x10
    [   43.008780]  ? unwind_get_return_address_ptr+0x50/0x50
    [   43.011178]  ? replace_slot+0x147/0x170
    [   43.013517]  ? delete_node+0x12c/0x340
    [   43.016019]  ? __radix_tree_lookup+0xa9/0x160
    [   43.018755]  ? ucma_resolve_ip+0xb7/0x110
    [   43.021270]  ucma_resolve_ip+0xb7/0x110
    [   43.023968]  ? ucma_resolve_addr+0x190/0x190
    [   43.026312]  ? _copy_from_user+0x5e/0x90
    [   43.029384]  ucma_write+0x174/0x1f0
    [   43.031861]  ? ucma_resolve_route+0xf0/0xf0
    [   43.034782]  ? dequeue_task_fair+0x67e/0xd90
    [   43.037483]  ? put_prev_entity+0x7d/0x170
    [   43.040215]  ? ring_buffer_record_is_on+0xd/0x20
    [   43.042990]  ? tracing_record_taskinfo_skip+0x20/0x50
    [   43.045595]  __vfs_write+0xc4/0x350
    [   43.048624]  ? kernel_read+0xa0/0xa0
    [   43.051604]  ? firmware_map_remove+0xdf/0xdf
    [   43.055379]  ? do_task_dead+0x5d/0x60
    [   43.058000]  ? do_exit+0xcc6/0x1220
    [   43.060783]  ? __fget+0xa8/0xf0
    [   43.063133]  vfs_write+0xf7/0x280
    [   43.065677]  SyS_write+0xa1/0x120
    [   43.068647]  ? SyS_read+0x120/0x120
    [   43.071179]  ? compat_start_thread+0x60/0x60
    [   43.074025]  ? SyS_read+0x120/0x120
    [   43.076705]  do_syscall_64+0xeb/0x250
    [   43.079006]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   43.081606] RIP: 0033:0x7f138b0afe99
    [   43.083679] RSP: 002b:00007f138b799e98 EFLAGS: 00000287 ORIG_RAX: 0000000000000001
    [   43.086802] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f138b0afe99
    [   43.089989] RDX: 000000000000002e RSI: 0000000020000c40 RDI: 0000000000000004
    [   43.092866] RBP: 00007f138b799ec0 R08: 00007f138b79a700 R09: 0000000000000000
    [   43.096233] R10: 00007f138b79a700 R11: 0000000000000287 R12: 00007f138b799fc0
    [   43.098913] R13: 0000000000000000 R14: 00007ffdbae757c0 R15: 00007f138b79a9c0
    [   43.101809] Code: 90 90 90 90 90 eb 1e 0f 1f 00 48 89 f8 48 89 d1 48
    c1 e9 03 83 e2 07 f3 48 a5 89 d1 f3 a4 c3 66 0f 1f 44 00 00 48 89 f8 48
    89 d1 <f3> a4 c3 0f 1f 80 00 00 00 00 48 89 f8 48 83 fa 20 72 7e 40 38
    [   43.107950] RIP: memcpy_erms+0x6/0x10 RSP: ffff8801c8b479c8
    
    Reported-by: <syzbot+1d8c43206853b369d00c@syzkaller.appspotmail.com>
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0355a9f6d8bad8dfbe36f9081e9767263a206d78
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 12 14:42:01 2018 +0100

    xfrm_user: uncoditionally validate esn replay attribute struct
    
    commit d97ca5d714a5334aecadadf696875da40f1fbf3e upstream.
    
    The sanity test added in ecd7918745234 can be bypassed, validation
    only occurs if XFRM_STATE_ESN flag is set, but rest of code doesn't care
    and just checks if the attribute itself is present.
    
    So always validate.  Alternative is to reject if we have the attribute
    without the flag but that would change abi.
    
    Reported-by: syzbot+0ab777c27d2bb7588f73@syzkaller.appspotmail.com
    Cc: Mathias Krause <minipli@googlemail.com>
    Fixes: ecd7918745234 ("xfrm_user: ensure user supplied esn replay window is valid")
    Fixes: d8647b79c3b7e ("xfrm: Add user interface for esn and big anti-replay windows")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2a3e4f77de1c99f26d3454530da8f9066a03c03
Author: Nick Desaulniers <nick.desaulniers@gmail.com>
Date:   Thu Jul 6 15:36:50 2017 -0700

    mm/vmscan.c: fix unsequenced modification and access warning
    
    commit f2f43e566a02a3bdde0a65e6a2e88d707c212a29 upstream.
    
    Clang and its -Wunsequenced emits a warning
    
      mm/vmscan.c:2961:25: error: unsequenced modification and access to 'gfp_mask' [-Wunsequenced]
                      .gfp_mask = (gfp_mask = current_gfp_context(gfp_mask)),
                                            ^
    
    While it is not clear to me whether the initialization code violates the
    specification (6.7.8 par 19 (ISO/IEC 9899) looks like it disagrees) the
    code is quite confusing and worth cleaning up anyway.  Fix this by
    reusing sc.gfp_mask rather than the updated input gfp_mask parameter.
    
    Link: http://lkml.kernel.org/r/20170510154030.10720-1-nick.desaulniers@gmail.com
    Signed-off-by: Nick Desaulniers <nick.desaulniers@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [natechancellor: Adjust context due to abscence of 7dea19f9ee63]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1978d829a63177b1cc679da74b5dbddef3264636
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Fri May 19 10:09:32 2017 -0700

    selinux: Remove redundant check for unknown labeling behavior
    
    commit 270e8573145a26de924e2dc644596332d400445b upstream.
    
    The check is already performed in ocontext_read() when the policy is
    loaded. Removing the array also fixes the following warning when
    building with clang:
    
    security/selinux/hooks.c:338:20: error: variable 'labeling_behaviors'
        is not needed and will not be emitted
        [-Werror,-Wunneeded-internal-declaration]
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Acked-by: Stephen Smalley <sds@tycho.nsa.gov>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a29152831bb2906f486501ff309a15a35e81a24f
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Thu Aug 3 11:03:58 2017 -0700

    arm64: avoid overflow in VA_START and PAGE_OFFSET
    
    commit 82cd588052815eb4146f9f7c5347ca5e32c56360 upstream.
    
    The bitmask used to define these values produces overflow, as seen by
    this compiler warning:
    
    arch/arm64/kernel/head.S:47:8: warning:
          integer overflow in preprocessor expression
      #elif (PAGE_OFFSET & 0x1fffff) != 0
             ^~~~~~~~~~~
    arch/arm64/include/asm/memory.h:52:46: note:
          expanded from macro 'PAGE_OFFSET'
      #define PAGE_OFFSET             (UL(0xffffffffffffffff) << (VA_BITS -
    1))
                                          ~~~~~~~~~~~~~~~~~~  ^
    
    It would be preferrable to use GENMASK_ULL() instead, but it's not set
    up to be used from assembly (the UL() macro token pastes UL suffixes
    when not included in assembly sources).
    
    Suggested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Suggested-by: Yury Norov <ynorov@caviumnetworks.com>
    Suggested-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7f42b03fbfb8309a2169aa7c1917b366a886506
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Thu Jul 27 14:30:23 2017 -0700

    btrfs: Remove extra parentheses from condition in copy_items()
    
    commit 0dde10bed2c44a4024eb446cc72fe4e0cb97ec06 upstream.
    
    There is no need for the extra pair of parentheses, remove it. This
    fixes the following warning when building with clang:
    
    fs/btrfs/tree-log.c:3694:10: warning: equality comparison with extraneous
      parentheses [-Wparentheses-equality]
                    if ((i == (nr - 1)))
                         ~~^~~~~~~~~~~
    
    Also remove the unnecessary parentheses around the substraction.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 471d4a48d8d19cce4afcb02072b19108cbbf2571
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Mon Apr 17 13:59:53 2017 -0700

    mac80211: ibss: Fix channel type enum in ieee80211_sta_join_ibss()
    
    commit a4ac6f2e53e568a77a2eb3710efd99ca08634c0a upstream.
    
    cfg80211_chandef_create() expects an 'enum nl80211_channel_type' as
    channel type however in ieee80211_sta_join_ibss()
    NL80211_CHAN_WIDTH_20_NOHT is passed in two occasions, which is of
    the enum type 'nl80211_chan_width'. Change the value to NL80211_CHAN_NO_HT
    (20 MHz, non-HT channel) of the channel type enum.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bb306460188d3200e42e1431d24d19df4159505
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Thu Apr 6 16:31:41 2017 -0700

    mac80211: Fix clang warning about constant operand in logical operation
    
    commit 93f56de259376d7e4fff2b2d104082e1fa66e237 upstream.
    
    When clang detects a non-boolean constant in a logical operation it
    generates a 'constant-logical-operand' warning. In
    ieee80211_try_rate_control_ops_get() the result of strlen(<const str>)
    is used in a logical operation, clang resolves the expression to an
    (integer) constant at compile time when clang's builtin strlen function
    is used.
    
    Change the condition to check for strlen() > 0 to make the constant
    operand boolean and thus avoid the warning.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e8f962da78c89b96c7ed718d77e35a1caf469da
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Wed Apr 19 11:39:20 2017 -0700

    netfilter: ctnetlink: Make some parameters integer to avoid enum mismatch
    
    commit a2b7cbdd2559aff06cebc28a7150f81c307a90d3 upstream.
    
    Not all parameters passed to ctnetlink_parse_tuple() and
    ctnetlink_exp_dump_tuple() match the enum type in the signatures of these
    functions. Since this is intended change the argument type of to be an
    unsigned integer value.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6061c11c3b5a8f1bba97bfe3cd1af5f95cfca95
Author: Frank Praznik <frank.praznik@gmail.com>
Date:   Wed Feb 8 13:58:43 2017 -0500

    HID: sony: Use LED_CORE_SUSPENDRESUME
    
    commit 765a1077c85e5f2efcc43582f80caf43a052e903 upstream.
    
    The LED subsystem provides the LED_CORE_SUSPENDRESUME flag to handle
    automatically turning off and restoring the state of device LEDs during
    suspend/resume.  Use this flag instead of saving and restoring the state
    locally.
    
    Signed-off-by: Frank Praznik <frank.praznik@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bb797afd7ba5d76fa6fa5a8d4fe930c2c2e029d
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Thu Apr 13 10:05:04 2017 -0700

    cfg80211: Fix array-bounds warning in fragment copy
    
    commit aa1702dd162f420bf85ecef0c77686ef0dbc1496 upstream.
    
    __ieee80211_amsdu_copy_frag intentionally initializes a pointer to
    array[-1] to increment it later to valid values. clang rightfully
    generates an array-bounds warning on the initialization statement.
    
    Initialize the pointer to array[0] and change the algorithm from
    increment before to increment after consume.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7164cb7360fe981fc4748afec4528f5c46091c86
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Mon Apr 17 15:59:52 2017 -0700

    nl80211: Fix enum type of variable in nl80211_put_sta_rate()
    
    commit bbf67e450a5dc2a595e1e7a67b4869f1a7f5a338 upstream.
    
    rate_flg is of type 'enum nl80211_attrs', however it is assigned with
    'enum nl80211_rate_info' values. Change the type of rate_flg accordingly.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54af0282954055bc5f866a6a449864ca61a86282
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 1 17:46:02 2017 +0100

    xgene_enet: remove bogus forward declarations
    
    commit 1f3d62090d3ba4d0c14e5271be87812fc577b197 upstream.
    
    The device match tables for both the xgene_enet driver and its phy driver
    have forward declarations that declare an array without a length, leading
    to a clang warning when they are not followed by an actual defitinition:
    
    drivers/net/ethernet/apm/xgene/../../../phy/mdio-xgene.h:135:34: warning: tentative array definition assumed to have one element
    drivers/net/ethernet/apm/xgene/xgene_enet_main.c:33:36: warning: tentative array definition assumed to have one element
    
    The declarations for the mdio driver are even in a header file, so they
    cause duplicate definitions of the tables for each file that includes
    them.
    
    This removes all four forward declarations and moves the actual
    definitions up a little, so they are in front of their first user. For
    the OF match tables, this means having to remove the #ifdef around them,
    and passing the actual structure into of_match_device(). This has no
    effect on the generated object code though, as the of_match_device
    function has an empty stub that does not evaluate its argument, and
    the symbol gets dropped either way.
    
    Fixes: 43b3cf6634a4 ("drivers: net: phy: xgene: Add MDIO driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17af7983691f9394e5e3619e910570f8897b5ab0
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Apr 16 20:12:50 2017 -0700

    usb: gadget: remove redundant self assignment
    
    commit 8a8b161df5ce06ef5a315899f83978e765be09e8 upstream.
    
    The assignment ret = ret is redundant and can be removed.
    
    Reviewed-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc7a9eb0f88375fc27e2454b256dc19ebc283ac8
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Fri Jun 2 14:46:16 2017 -0700

    frv: declare jiffies to be located in the .data section
    
    commit 60b0a8c3d2480f3b57282b47b7cae7ee71c48635 upstream.
    
    Commit 7c30f352c852 ("jiffies.h: declare jiffies and jiffies_64 with
    ____cacheline_aligned_in_smp") removed a section specification from the
    jiffies declaration that caused conflicts on some platforms.
    
    Unfortunately this change broke the build for frv:
    
      kernel/built-in.o: In function `__do_softirq': (.text+0x6460): relocation truncated to fit: R_FRV_GPREL12 against symbol
          `jiffies' defined in *ABS* section in .tmp_vmlinux1
      kernel/built-in.o: In function `__do_softirq': (.text+0x6574): relocation truncated to fit: R_FRV_GPREL12 against symbol
          `jiffies' defined in *ABS* section in .tmp_vmlinux1
      kernel/built-in.o: In function `pwq_activate_delayed_work': workqueue.c:(.text+0x15b9c): relocation truncated to fit: R_FRV_GPREL12 against
          symbol `jiffies' defined in *ABS* section in .tmp_vmlinux1
      ...
    
    Add __jiffy_arch_data to the declaration of jiffies and use it on frv to
    include the section specification.  For all other platforms
    __jiffy_arch_data (currently) has no effect.
    
    Fixes: 7c30f352c852 ("jiffies.h: declare jiffies and jiffies_64 with ____cacheline_aligned_in_smp")
    Link: http://lkml.kernel.org/r/20170516221333.177280-1-mka@chromium.org
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: David Howells <dhowells@redhat.com>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbc5d42d5ec735a3716882ef87a9f57aceac8590
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Mon May 8 15:55:05 2017 -0700

    jiffies.h: declare jiffies and jiffies_64 with ____cacheline_aligned_in_smp
    
    commit 7c30f352c852bae2715ad65ac4a38ca9af7d7696 upstream.
    
    jiffies_64 is defined in kernel/time/timer.c with
    ____cacheline_aligned_in_smp, however this macro is not part of the
    declaration of jiffies and jiffies_64 in jiffies.h.
    
    As a result clang generates the following warning:
    
      kernel/time/timer.c:57:26: error: section does not match previous declaration [-Werror,-Wsection]
      __visible u64 jiffies_64 __cacheline_aligned_in_smp = INITIAL_JIFFIES;
                               ^
      include/linux/cache.h:39:36: note: expanded from macro '__cacheline_aligned_in_smp'
                                         ^
      include/linux/cache.h:34:4: note: expanded from macro '__cacheline_aligned'
                       __section__(".data..cacheline_aligned")))
                       ^
      include/linux/jiffies.h:77:12: note: previous attribute is here
      extern u64 __jiffy_data jiffies_64;
                 ^
      include/linux/jiffies.h:70:38: note: expanded from macro '__jiffy_data'
    
    Link: http://lkml.kernel.org/r/20170403190200.70273-1-mka@chromium.org
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Cc: "Jason A . Donenfeld" <Jason@zx2c4.com>
    Cc: Grant Grundler <grundler@chromium.org>
    Cc: Michael Davidson <md@google.com>
    Cc: Greg Hackmann <ghackmann@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9b2c4a8f4bfd960d8c2dbe70e73c903309050a3
Author: Mark Charlebois <charlebm@gmail.com>
Date:   Fri Apr 28 15:15:12 2017 -0700

    fs: compat: Remove warning from COMPATIBLE_IOCTL
    
    commit 9280cdd6fe5b8287a726d24cc1d558b96c8491d7 upstream.
    
    cmd in COMPATIBLE_IOCTL is always a u32, so cast it so there isn't a
    warning about an overflow in XFORM.
    
    From: Mark Charlebois <charlebm@gmail.com>
    Signed-off-by: Mark Charlebois <charlebm@gmail.com>
    Signed-off-by: Behan Webster <behanw@converseincode.com>
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00972acdcf70f21548d9aa7915f7ceacf87dcf05
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Thu Mar 16 15:26:52 2017 -0700

    selinux: Remove unnecessary check of array base in selinux_set_mapping()
    
    commit 342e91578eb6909529bc7095964cd44b9c057c4e upstream.
    
    'perms' will never be NULL since it isn't a plain pointer but an array
    of u32 values.
    
    This fixes the following warning when building with clang:
    
    security/selinux/ss/services.c:158:16: error: address of array
    'p_in->perms' will always evaluate to 'true'
    [-Werror,-Wpointer-bool-conversion]
                    while (p_in->perms && p_in->perms[k]) {
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e78c59fda86c61b5c2a79ad9c4a52cd72a9c88ef
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Wed Apr 12 11:20:29 2017 -0700

    cpumask: Add helper cpumask_available()
    
    commit f7e30f01a9e221067bb4b579e3cfc25cd2617467 upstream.
    
    With CONFIG_CPUMASK_OFFSTACK=y cpumask_var_t is a struct cpumask
    pointer, otherwise a struct cpumask array with a single element.
    
    Some code dealing with cpumasks needs to validate that a cpumask_var_t
    is not a NULL pointer when CONFIG_CPUMASK_OFFSTACK=y. This is typically
    done by performing the check always, regardless of the underlying type
    of cpumask_var_t. This works in both cases, however clang raises a
    warning like this when CONFIG_CPUMASK_OFFSTACK=n:
    
    kernel/irq/manage.c:839:28: error: address of array
    'desc->irq_common_data.affinity' will always evaluate to 'true'
    [-Werror,-Wpointer-bool-conversion]
    
    Add the inline helper cpumask_available() which only performs the
    pointer check if CONFIG_CPUMASK_OFFSTACK=y.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Cc: Grant Grundler <grundler@chromium.org>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Greg Hackmann <ghackmann@google.com>
    Cc: Michael Davidson <md@google.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20170412182030.83657-1-mka@chromium.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02e3a7d445c30d56d825599a7dea67cdc2bd3288
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Wed Apr 12 11:20:30 2017 -0700

    genirq: Use cpumask_available() for check of cpumask variable
    
    commit d170fe7dd992b313d4851ae5ab77ee7a51ed8c72 upstream.
    
    This fixes the following clang warning when CONFIG_CPUMASK_OFFSTACK=n:
    
    kernel/irq/manage.c:839:28: error: address of array
    'desc->irq_common_data.affinity' will always evaluate to 'true'
    [-Werror,-Wpointer-bool-conversion]
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Cc: Grant Grundler <grundler@chromium.org>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Greg Hackmann <ghackmann@google.com>
    Cc: Michael Davidson <md@google.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20170412182030.83657-2-mka@chromium.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d1fc27f41b24cdfa69413e1c03a50c591cbae9a
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Fri Aug 11 11:16:07 2017 -0700

    netfilter: nf_nat_h323: fix logical-not-parentheses warning
    
    commit eee6ebbac18a189ef33d25ea9b8bcae176515e49 upstream.
    
    Clang produces the following warning:
    
    net/ipv4/netfilter/nf_nat_h323.c:553:6: error:
    logical not is only applied to the left hand side of this comparison
      [-Werror,-Wlogical-not-parentheses]
    if (!set_h225_addr(skb, protoff, data, dataoff, taddr,
        ^
    add parentheses after the '!' to evaluate the comparison first
    add parentheses around left hand side expression to silence this warning
    
    There's not necessarily a bug here, but it's cleaner to return early,
    ex:
    
    if (x)
      return
    ...
    
    rather than:
    
    if (x == 0)
      ...
    else
      return
    
    Also added a return code check that seemed to be missing in one
    instance.
    
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4361da43816836e2a28b266dc7ae4c12d754edb
Author: Nick Desaulniers <nick.desaulniers@gmail.com>
Date:   Sat Jun 24 22:50:12 2017 -0700

    Input: mousedev - fix implicit conversion warning
    
    commit dae1a432ab1fe79ae53129ededeaece35a2dc14d upstream.
    
    Clang warns:
    
    drivers/input/mousedev.c:653:63: error: implicit conversion from 'int'
    to 'signed char' changes value from 200 to -56
    [-Wconstant-conversion]
      client->ps2[1] = 0x60; client->ps2[2] = 3; client->ps2[3] = 200;
                                                                ~ ^~~
    As the PS2 data is really a stream of bytes, let's switch to using u8 type
    for it, which silences this warning.
    
    Signed-off-by: Nick Desaulniers <nick.desaulniers@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6be48fd6991f14f46f041fcd82614e3b2f5172f5
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Mon Apr 17 11:05:03 2017 -0700

    dm ioctl: remove double parentheses
    
    commit e36215d87f301f9567c8c99fd34e6c3521a94ddf upstream.
    
    The extra pair of parantheses is not needed and causes clang to generate
    warnings about the DM_DEV_CREATE_CMD comparison in validate_params().
    
    Also remove another double parentheses that doesn't cause a warning.
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d9a121dc9b3c0907bc8bc23dd5445cea1192fb3
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Fri Apr 14 13:38:02 2017 -0700

    PCI: Make PCI_ROM_ADDRESS_MASK a 32-bit constant
    
    commit 76dc52684d0f72971d9f6cc7d5ae198061b715bd upstream.
    
    A 64-bit value is not needed since a PCI ROM address consists in 32 bits.
    This fixes a clang warning about "implicit conversion from 'unsigned long'
    to 'u32'".
    
    Also remove now unnecessary casts to u32 from __pci_read_base() and
    pci_std_update_resource().
    
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd2f070985ea0eefdd503efbb9a5b9275161b893
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu May 25 19:38:17 2017 +0900

    kprobes/x86: Fix to set RWX bits correctly before releasing trampoline
    
    commit c93f5cf571e7795f97d49ef51b766cf25e328545 upstream.
    
    Fix kprobes to set(recover) RWX bits correctly on trampoline
    buffer before releasing it. Releasing readonly page to
    module_memfree() crash the kernel.
    
    Without this fix, if kprobes user register a bunch of kprobes
    in function body (since kprobes on function entry usually
    use ftrace) and unregister it, kernel hits a BUG and crash.
    
    Link: http://lkml.kernel.org/r/149570868652.3518.14120169373590420503.stgit@devbox
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Fixes: d0381c81c2f7 ("kprobes/x86: Set kprobes pages read-only")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd94a2c744246617623c3d67a2511d5493250688
Author: Richard Narron <comet.berkeley@gmail.com>
Date:   Wed Jan 10 09:12:16 2018 -0700

    partitions/msdos: Unable to mount UFS 44bsd partitions
    
    commit 5f15684bd5e5ef39d4337988864fec8012471dda upstream.
    
    UFS partitions from newer versions of FreeBSD 10 and 11 use relative
    addressing for their subpartitions. But older versions of FreeBSD still
    use absolute addressing just like OpenBSD and NetBSD.
    
    Instead of simply testing for a FreeBSD partition, the code needs to
    also test if the starting offset of the C subpartition is zero.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=197733
    
    Signed-off-by: Richard Narron <comet.berkeley@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e522e2ea300e2345d287478fe034d995fecf96e2
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Mar 23 15:53:38 2018 +1000

    powerpc/64s: Fix i-side SLB miss bad address handler saving nonvolatile GPRs
    
    commit 52396500f97c53860164debc7d4f759077853423 upstream.
    
    The SLB bad address handler's trap number fixup does not preserve the
    low bit that indicates nonvolatile GPRs have not been saved. This
    leads save_nvgprs to skip saving them, and subsequent functions and
    return from interrupt will think they are saved.
    
    This causes kernel branch-to-garbage debugging to not have correct
    registers, can also cause userspace to have its registers clobbered
    after a segfault.
    
    Fixes: f0f558b131db ("powerpc/mm: Preserve CFAR value on SLB miss caused by access to bogus address")
    Cc: stable@vger.kernel.org # v4.9+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 812d42a5a9b64ac929fa24ee352908601a910fa3
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Mar 21 12:22:28 2018 +1000

    powerpc/64s: Fix lost pending interrupt due to race causing lost update to irq_happened
    
    commit ff6781fd1bb404d8a551c02c35c70cec1da17ff1 upstream.
    
    force_external_irq_replay() can be called in the do_IRQ path with
    interrupts hard enabled and soft disabled if may_hard_irq_enable() set
    MSR[EE]=1. It updates local_paca->irq_happened with a load, modify,
    store sequence. If a maskable interrupt hits during this sequence, it
    will go to the masked handler to be marked pending in irq_happened.
    This update will be lost when the interrupt returns and the store
    instruction executes. This can result in unpredictable latencies,
    timeouts, lockups, etc.
    
    Fix this by ensuring hard interrupts are disabled before modifying
    irq_happened.
    
    This could cause any maskable asynchronous interrupt to get lost, but
    it was noticed on P9 SMP system doing RDMA NVMe target over 100GbE,
    so very high external interrupt rate and high IPI rate. The hang was
    bisected down to enabling doorbell interrupts for IPIs. These provided
    an interrupt type that could run at high rates in the do_IRQ path,
    stressing the race.
    
    Fixes: 1d607bb3bd60 ("powerpc/irq: Add mechanism to force a replay of interrupts")
    Cc: stable@vger.kernel.org # v4.8+
    Reported-by: Carol L. Soto <clsoto@us.ibm.com>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86c8c892d38fd80c8acc4b44b75213758eb5d9de
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Wed Mar 28 16:01:01 2018 -0700

    ipc/shm.c: add split function to shm_vm_ops
    
    commit 3d942ee079b917b24e2a0c5f18d35ac8ec9fee48 upstream.
    
    If System V shmget/shmat operations are used to create a hugetlbfs
    backed mapping, it is possible to munmap part of the mapping and split
    the underlying vma such that it is not huge page aligned.  This will
    untimately result in the following BUG:
    
      kernel BUG at /build/linux-jWa1Fv/linux-4.15.0/mm/hugetlb.c:3310!
      Oops: Exception in kernel mode, sig: 5 [#1]
      LE SMP NR_CPUS=2048 NUMA PowerNV
      Modules linked in: kcm nfc af_alg caif_socket caif phonet fcrypt
      CPU: 18 PID: 43243 Comm: trinity-subchil Tainted: G         C  E 4.15.0-10-generic #11-Ubuntu
      NIP:  c00000000036e764 LR: c00000000036ee48 CTR: 0000000000000009
      REGS: c000003fbcdcf810 TRAP: 0700   Tainted: G         C  E (4.15.0-10-generic)
      MSR:  9000000000029033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 24002222  XER: 20040000
      CFAR: c00000000036ee44 SOFTE: 1
      NIP __unmap_hugepage_range+0xa4/0x760
      LR __unmap_hugepage_range_final+0x28/0x50
      Call Trace:
        0x7115e4e00000 (unreliable)
        __unmap_hugepage_range_final+0x28/0x50
        unmap_single_vma+0x11c/0x190
        unmap_vmas+0x94/0x140
        exit_mmap+0x9c/0x1d0
        mmput+0xa8/0x1d0
        do_exit+0x360/0xc80
        do_group_exit+0x60/0x100
        SyS_exit_group+0x24/0x30
        system_call+0x58/0x6c
      ---[ end trace ee88f958a1c62605 ]---
    
    This bug was introduced by commit 31383c6865a5 ("mm, hugetlbfs:
    introduce ->split() to vm_operations_struct").  A split function was
    added to vm_operations_struct to determine if a mapping can be split.
    This was mostly for device-dax and hugetlbfs mappings which have
    specific alignment constraints.
    
    Mappings initiated via shmget/shmat have their original vm_ops
    overwritten with shm_vm_ops.  shm_vm_ops functions will call back to the
    original vm_ops if needed.  Add such a split function to shm_vm_ops.
    
    Link: http://lkml.kernel.org/r/20180321161314.7711-1-mike.kravetz@oracle.com
    Fixes: 31383c6865a5 ("mm, hugetlbfs: introduce ->split() to vm_operations_struct")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reported-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Reviewed-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Tested-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff1c42b0c60a11dc0272ea02bcc01eafe1652964
Author: Yan, Zheng <zyan@redhat.com>
Date:   Fri Mar 16 11:22:29 2018 +0800

    ceph: only dirty ITER_IOVEC pages for direct read
    
    commit 85784f9395987a422fa04263e7c0fb13da11eb5c upstream.
    
    If a page is already locked, attempting to dirty it leads to a deadlock
    in lock_page().  This is what currently happens to ITER_BVEC pages when
    a dio-enabled loop device is backed by ceph:
    
      $ losetup --direct-io /dev/loop0 /mnt/cephfs/img
      $ xfs_io -c 'pread 0 4k' /dev/loop0
    
    Follow other file systems and only dirty ITER_IOVEC pages.
    
    Cc: stable@kernel.org
    Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7614f7db9bee160c5e8d298919af3f28941fc703
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Mar 26 15:39:07 2018 -1000

    perf/hwbp: Simplify the perf-hwbp code, fix documentation
    
    commit f67b15037a7a50c57f72e69a6d59941ad90a0f0f upstream.
    
    Annoyingly, modify_user_hw_breakpoint() unnecessarily complicates the
    modification of a breakpoint - simplify it and remove the pointless
    local variables.
    
    Also update the stale Docbook while at it.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: <stable@vger.kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43320b2902ab09647bab768ba00fbfdee14b66b6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 27 16:07:52 2018 +0300

    ALSA: pcm: potential uninitialized return values
    
    commit 5607dddbfca774fb38bffadcb077fe03aa4ac5c6 upstream.
    
    Smatch complains that "tmp" can be uninitialized if we do a zero size
    write.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5a2bcb8db37ba9b9502dd94c646ef36ad6a2ef7
Author: Stefan Roese <sr@denx.de>
Date:   Mon Mar 26 16:10:21 2018 +0200

    ALSA: pcm: Use dma_bytes as size parameter in dma_mmap_coherent()
    
    commit 9066ae7ff5d89c0b5daa271e2d573540097a94fa upstream.
    
    When trying to use the driver (e.g. aplay *.wav), the 4MiB DMA buffer
    will get mmapp'ed in 16KiB chunks. But this fails with the 2nd 16KiB
    area, as the page offset is outside of the VMA range (size), which is
    currently used as size parameter in snd_pcm_lib_default_mmap(). By
    using the DMA buffer size (dma_bytes) instead, the complete DMA buffer
    can be mmapp'ed and the issue is fixed.
    
    This issue was detected on an ARM platform (TI AM57xx) using the RME
    HDSP MADI PCIe soundcard.
    
    Fixes: 657b1989dacf ("ALSA: pcm - Use dma_mmap_coherent() if available")
    Signed-off-by: Stefan Roese <sr@denx.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7200152be3f185202ec263dbb050cb88d99053f
Author: Nobutaka Okabe <nob77413@gmail.com>
Date:   Fri Mar 23 19:49:44 2018 +0900

    ALSA: usb-audio: Add native DSD support for TEAC UD-301
    
    commit b00214865d65100163574ba250008f182cf90869 upstream.
    
    Add native DSD support quirk for TEAC UD-301 DAC,
    by adding the PID/VID 0644:804a.
    
    Signed-off-by: Nobutaka Okabe <nob77413@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 760adf5cc0e042ad1f0cd54c267c0377d4b40b1e
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sat Mar 3 23:29:03 2018 +0100

    mtd: jedec_probe: Fix crash in jedec_read_mfr()
    
    commit 87a73eb5b56fd6e07c8e499fe8608ef2d8912b82 upstream.
    
    It turns out that the loop where we read manufacturer
    jedec_read_mfd() can under some circumstances get a
    CFI_MFR_CONTINUATION repeatedly, making the loop go
    over all banks and eventually hit the end of the
    map and crash because of an access violation:
    
    Unable to handle kernel paging request at virtual address c4980000
    pgd = (ptrval)
    [c4980000] *pgd=03808811, *pte=00000000, *ppte=00000000
    Internal error: Oops: 7 [#1] PREEMPT ARM
    CPU: 0 PID: 1 Comm: swapper Not tainted 4.16.0-rc1+ #150
    Hardware name: Gemini (Device Tree)
    PC is at jedec_probe_chip+0x6ec/0xcd0
    LR is at 0x4
    pc : [<c03a2bf4>]    lr : [<00000004>]    psr: 60000013
    sp : c382dd18  ip : 0000ffff  fp : 00000000
    r10: c0626388  r9 : 00020000  r8 : c0626340
    r7 : 00000000  r6 : 00000001  r5 : c3a71afc  r4 : c382dd70
    r3 : 00000001  r2 : c4900000  r1 : 00000002  r0 : 00080000
    Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 0000397f  Table: 00004000  DAC: 00000053
    Process swapper (pid: 1, stack limit = 0x(ptrval))
    
    Fix this by breaking the loop with a return 0 if
    the offset exceeds the map size.
    
    Fixes: 5c9c11e1c47c ("[MTD] [NOR] Add support for flash chips with ID in bank other than 0")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da789f7d683cbce7da4c008c62668cd5912f2dec
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Jan 22 12:20:26 2018 +0100

    ARM: 8746/1: vfp: Go back to clearing vfp_current_hw_state[]
    
    commit 1328f02005bbbaed15b9d5b7f3ab5ec9d4d5268a upstream.
    
    Commit 384b38b66947 ("ARM: 7873/1: vfp: clear vfp_current_hw_state
    for dying cpu") fixed the cpu dying notifier by clearing
    vfp_current_hw_state[]. However commit e5b61bafe704 ("arm: Convert VFP
    hotplug notifiers to state machine") incorrectly used the original
    vfp_force_reload() function in the cpu dying notifier.
    
    Fix it by going back to clearing vfp_current_hw_state[].
    
    Fixes: e5b61bafe704 ("arm: Convert VFP hotplug notifiers to state machine")
    Cc: linux-stable <stable@vger.kernel.org>
    Reported-by: Kohji Okuno <okuno.kohji@jp.panasonic.com>
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
