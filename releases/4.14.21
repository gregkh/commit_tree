commit 58056a531e440061142a4481358ebb365193df5e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 22 15:42:33 2018 +0100

    Linux 4.14.21

commit e506ac1dab86c88b03f62404055a35262dda310d
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Sun Jan 14 18:35:40 2018 +0200

    ovl: hash directory inodes for fsnotify
    
    commit 31747eda41ef3c30c09c5c096b380bf54013746a upstream.
    
    fsnotify pins a watched directory inode in cache, but if directory dentry
    is released, new lookup will allocate a new dentry and a new inode.
    Directory events will be notified on the new inode, while fsnotify listener
    is watching the old pinned inode.
    
    Hash all directory inodes to reuse the pinned inode on lookup. Pure upper
    dirs are hashes by real upper inode, merge and lower dirs are hashed by
    real lower inode.
    
    The reference to lower inode was being held by the lower dentry object
    in the overlay dentry (oe->lowerstack[0]). Releasing the overlay dentry
    may drop lower inode refcount to zero. Add a refcount on behalf of the
    overlay inode to prevent that.
    
    As a by-product, hashing directory inodes also detects multiple
    redirected dirs to the same lower dir and uncovered redirected dir
    target on and returns -ESTALE on lookup.
    
    The reported issue dates back to initial version of overlayfs, but this
    patch depends on ovl_inode code that was introduced in kernel v4.13.
    
    Cc: <stable@vger.kernel.org> #v4.13
    Reported-by: Niklas Cassel <niklas.cassel@axis.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Tested-by: Niklas Cassel <niklas.cassel@axis.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1a81c0eab38a1cf8887cd10731c77ad547cc17c
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Jan 5 14:55:33 2018 -0600

    ASoC: acpi: fix machine driver selection based on quirk
    
    commit 5c256045b87b8aa8e5bc9d2e2fdc0802351c1f99 upstream.
    
    The ACPI/machine-driver code refactoring introduced in 4.13 introduced
    a regression for cases where we need a DMI-based quirk to select the
    machine driver (the BIOS reports an invalid HID). The fix is just to
    make sure the results of the quirk are actually used.
    
    Fixes: 54746dabf770 ('ASoC: Improve machine driver selection based on quirk data')
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=96691
    Tested-by: Nicole FÃ¦rber <nicole.faerber@dpin.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a2b3777bd5335e34ec585ecc8e29d575dfc8c13
Author: yinbo.zhu <yinbo.zhu@nxp.com>
Date:   Fri Dec 1 15:09:34 2017 +0800

    mmc: sdhci-of-esdhc: fix the mmc error after sleep on ls1046ardb
    
    commit f2bc600008bd6f7f5d0b6b56238d14f95cd454d2 upstream.
    
    When system wakes up from sleep on ls1046ardb, the SD operation fails
    with mmc error messages since ESDHC_TB_EN bit couldn't be cleaned by
    eSDHC_SYSCTL[RSTA]. It's proper to clean this bit in esdhc_reset()
    rather than in probe.
    
    Signed-off-by: yinbo.zhu <yinbo.zhu@nxp.com>
    Acked-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44e47693e3a680114332420a92281861bba5a9a4
Author: yinbo.zhu <yinbo.zhu@nxp.com>
Date:   Wed Nov 8 17:09:50 2017 +0800

    mmc: sdhci-of-esdhc: fix eMMC couldn't work after kexec
    
    commit 97618aca1440b5addc5c3d78659d3e176be23b80 upstream.
    
    The bit eSDHC_TBCTL[TB_EN] couldn't be reset by eSDHC_SYSCTL[RSTA] which is
    used to reset for all. The driver should make sure it's cleared before card
    initialization, otherwise the initialization would fail.
    
    Signed-off-by: yinbo.zhu <yinbo.zhu@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe075e233bb8049ba7d3e362b37bc97ecf7e6fa
Author: yangbo lu <yangbo.lu@nxp.com>
Date:   Thu Sep 21 16:43:31 2017 +0800

    mmc: sdhci-of-esdhc: disable SD clock for clock value 0
    
    commit dd3f6983b4a468efca9e8caa0e2b4aa20946d801 upstream.
    
    SD clock should be disabled for clock value 0. It's not
    right to just return. This may cause failure of signal
    voltage switching.
    
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11785a9ece1b10d43156ae79e24f709053644bc5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Nov 30 06:08:05 2017 -0500

    media: r820t: fix r820t_write_reg for KASAN
    
    commit 16c3ada89cff9a8c2a0eea34ffa1aa20af3f6008 upstream.
    
    With CONFIG_KASAN, we get an overly long stack frame due to inlining
    the register access functions:
    
    drivers/media/tuners/r820t.c: In function 'generic_set_freq.isra.7':
    drivers/media/tuners/r820t.c:1334:1: error: the frame size of 2880 bytes is larger than 2048 bytes [-Werror=frame-larger-than=]
    
    This is caused by a gcc bug that has now been fixed in gcc-8.
    To work around the problem, we can pass the register data
    through a local variable that older gcc versions can optimize
    out as well.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81715
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbd577fec485647aaad0e2ba6142f2fec363b946
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Jan 2 08:57:17 2018 +0100

    ARM: dts: Delete bogus reference to the charlcd
    
    commit 586b2a4befad88cd87b372a1cea01e58c6811ea9 upstream.
    
    The EB MP board probably has a character LCD but the board manual does
    not really state which IRQ it has assigned to this device. The invalid
    assignment was a mistake by me during submission of the DTSI where I was
    looking for the reference, didn't find it and didn't fill it in.
    
    Delete this for now: it can probably be fixed but that requires access
    to the actual board for some trial-and-error experiments.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5782df0a58b6748cca77cd0a7684c8c7e2401af2
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Fri Dec 1 13:07:08 2017 +0100

    arm: dts: mt2701: Add reset-cells
    
    commit ae72e95b5e4ded145bfc6926ad9457b74e3af41a upstream.
    
    The hifsys and ethsys needs the definition of the reset-cells
    property. Fix this.
    
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 011c19041424dabd87e0bfa26b5ce20c1a0119e1
Author: Matthias Brugger <matthias.bgg@gmail.com>
Date:   Fri Dec 1 13:07:07 2017 +0100

    arm: dts: mt7623: Update ethsys binding
    
    commit 76a09ce214addb8ddc0f6d50dc1106a5f829e713 upstream.
    
    The ethsys binding misses the reset-cells, this patch
    adds this property.
    
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7367af9cf0e4e1502151d42535cae779046d77e4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 17:10:11 2018 +0100

    ARM: dts: s5pv210: add interrupt-parent for ohci
    
    commit 5c1037196b9ee75897c211972de370ed1336ec8f upstream.
    
    The ohci-hcd node has an interrupt number but no interrupt-parent,
    leading to a warning with current dtc versions:
    
    arch/arm/boot/dts/s5pv210-aquila.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-goni.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-smdkc110.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-smdkv210.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    arch/arm/boot/dts/s5pv210-torbreck.dtb: Warning (interrupts_property): Missing interrupt-parent for /soc/ohci@ec300000
    
    As seen from the related exynos dts files, the ohci and ehci controllers
    always share one interrupt number, and the number is the same here as
    well, so setting the same interrupt-parent is the reasonable solution
    here.
    
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34aac3426553aed01e59ec30467e42d165af2142
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Tue Nov 7 19:45:01 2017 -0800

    arm64: dts: msm8916: Add missing #phy-cells
    
    commit b0ab681285aa66064f2de5b74191c0cabba381ff upstream.
    
    Add a missing #phy-cells to the dsi-phy, to silence dtc warning.
    
    Cc: Archit Taneja <architt@codeaurora.org>
    Fixes: 305410ffd1b2 ("arm64: dts: msm8916: Add display support")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Archit Taneja <architt@codeaurora.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 361bd5be7b845f10f6f282987088c1e62dd671d9
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 15:40:37 2018 +0100

    ARM: pxa/tosa-bt: add MODULE_LICENSE tag
    
    commit 3343647813fdf0f2409fbf5816ee3e0622168079 upstream.
    
    Without this tag, we get a build warning:
    
    WARNING: modpost: missing MODULE_LICENSE() in arch/arm/mach-pxa/tosa-bt.o
    
    For completeness, I'm also adding author and description fields.
    
    Acked-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5eab7c3d1003d0d8df8beefa531187452212c59
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 21 22:30:07 2017 +0100

    ARM: dts: exynos: fix RTC interrupt for exynos5410
    
    commit 5628a8ca14149ba4226e3bdce3a04c3b688435ad upstream.
    
    According to the comment added to exynos_dt_pmu_match[] in commit
    8b283c025443 ("ARM: exynos4/5: convert pmu wakeup to stacked domains"),
    the RTC is not able to wake up the system through the PMU on Exynos5410,
    unlike Exynos5420.
    
    However, when the RTC DT node got added, it was a straight copy of
    the Exynos5420 node, which now causes a warning from dtc.
    
    This removes the incorrect interrupt-parent, which should get the
    interrupt working and avoid the warning.
    
    Fixes: e1e146b1b062 ("ARM: dts: exynos: Add RTC and I2C to Exynos5410")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcdc01c2edd4baf8096c70837fd583e1cc00d023
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Oct 11 15:47:54 2017 +0200

    Bluetooth: BT_HCIUART now depends on SERIAL_DEV_BUS
    
    commit 05e89fb576f580ac95e7a5d00bdb34830b09671a upstream.
    
    It is no longer possible to build BT_HCIUART into the kernel
    when SERIAL_DEV_BUS is a loadable module, even if none of the
    SERIAL_DEV_BUS based implementations are selected:
    
    drivers/bluetooth/hci_ldisc.o: In function `hci_uart_set_flow_control':
    hci_ldisc.c:(.text+0xb40): undefined reference to `serdev_device_set_flow_control'
    hci_ldisc.c:(.text+0xb5c): undefined reference to `serdev_device_set_tiocm'
    
    This adds a dependency to avoid the broken configuration.
    
    Fixes: 7841d554809b ("Bluetooth: hci_uart_set_flow_control: Fix NULL deref when using serdev")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 875758d79d8f6182aa2c76c09eb810a7c54249ec
Author: Hannes Reinecke <hare@suse.de>
Date:   Wed Dec 13 14:21:37 2017 +0100

    scsi: core: check for device state in __scsi_remove_target()
    
    commit 81b6c999897919d5a16fedc018fe375dbab091c5 upstream.
    
    As it turned out device_get() doesn't use kref_get_unless_zero(), so we
    will be always getting a device pointer.  Consequently, we need to check
    for the device state in __scsi_remove_target() to avoid tripping over
    deleted objects.
    
    Fixes: fbce4d97fd43 ("scsi: fixup kernel warning during rmmod()")
    Reported-by: Jason Yan <yanaijie@huawei.com>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Max Ivanov <ivanov.maxim@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26f8c38bb466c1a2d232d7609fb4bfb4bc121678
Author: Tony Luck <tony.luck@intel.com>
Date:   Thu Jan 25 14:23:48 2018 -0800

    x86/mm, mm/hwpoison: Don't unconditionally unmap kernel 1:1 pages
    
    commit fd0e786d9d09024f67bd71ec094b110237dc3840 upstream.
    
    In the following commit:
    
      ce0fa3e56ad2 ("x86/mm, mm/hwpoison: Clear PRESENT bit for kernel 1:1 mappings of poison pages")
    
    ... we added code to memory_failure() to unmap the page from the
    kernel 1:1 virtual address space to avoid speculative access to the
    page logging additional errors.
    
    But memory_failure() may not always succeed in taking the page offline,
    especially if the page belongs to the kernel.  This can happen if
    there are too many corrected errors on a page and either mcelog(8)
    or drivers/ras/cec.c asks to take a page offline.
    
    Since we remove the 1:1 mapping early in memory_failure(), we can
    end up with the page unmapped, but still in use. On the next access
    the kernel crashes :-(
    
    There are also various debug paths that call memory_failure() to simulate
    occurrence of an error. Since there is no actual error in memory, we
    don't need to map out the page for those cases.
    
    Revert most of the previous attempt and keep the solution local to
    arch/x86/kernel/cpu/mcheck/mce.c. Unmap the page only when:
    
            1) there is a real error
            2) memory_failure() succeeds.
    
    All of this only applies to 64-bit systems. 32-bit kernel doesn't map
    all of memory into kernel space. It isn't worth adding the code to unmap
    the piece that is mapped because nobody would run a 32-bit kernel on a
    machine that has recoverable machine checks.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave <dave.hansen@intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Robert (Persistent Memory) <elliott@hpe.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Cc: stable@vger.kernel.org #v4.14
    Fixes: ce0fa3e56ad2 ("x86/mm, mm/hwpoison: Clear PRESENT bit for kernel 1:1 mappings of poison pages")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4ea7c12229c5fec232120713abe74bd35164157
Author: James Hogan <jhogan@kernel.org>
Date:   Wed Jan 31 22:24:45 2018 +0000

    usb: Move USB_UHCI_BIG_ENDIAN_* out of USB_SUPPORT
    
    commit ec897569ad7dbc6d595873a487c3fac23f463f76 upstream.
    
    Move the Kconfig symbols USB_UHCI_BIG_ENDIAN_MMIO and
    USB_UHCI_BIG_ENDIAN_DESC out of drivers/usb/host/Kconfig, which is
    conditional upon USB && USB_SUPPORT, so that it can be freely selected
    by platform Kconfig symbols in architecture code.
    
    For example once the MIPS_GENERIC platform selects are fixed in commit
    2e6522c56552 ("MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN"), the MIPS
    32r6_defconfig warns like so:
    
    warning: (MIPS_GENERIC) selects USB_UHCI_BIG_ENDIAN_MMIO which has unmet direct dependencies (USB_SUPPORT && USB)
    warning: (MIPS_GENERIC) selects USB_UHCI_BIG_ENDIAN_DESC which has unmet direct dependencies (USB_SUPPORT && USB)
    
    Fixes: 2e6522c56552 ("MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Corentin Labbe <clabbe.montjoie@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@mips.com>
    Cc: linux-usb@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Patchwork: https://patchwork.linux-mips.org/patch/18559/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac98d5a624fed603233421ddd808f2623f331ad8
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Feb 11 18:10:28 2018 -0500

    mvpp2: fix multicast address filter
    
    commit 7ac8ff95f48cbfa609a060fd6a1e361dd62feeb3 upstream.
    
    IPv6 doesn't work on the MacchiatoBIN board. It is caused by broken
    multicast address filter in the mvpp2 driver.
    
    The driver loads doesn't load any multicast entries if "allmulti" is not
    set. This condition should be reversed.
    
    The condition !netdev_mc_empty(dev) is useless (because
    netdev_for_each_mc_addr is nop if the list is empty).
    
    This patch also fixes a possible overflow of the multicast list - if
    mvpp2_prs_mac_da_accept fails, we set the allmulti flag and retry.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7466294dad8963e29f051d8ab2f4d3f67d2f62a6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 12 15:20:51 2018 +0100

    ALSA: seq: Fix racy pool initializations
    
    commit d15d662e89fc667b90cd294b0eb45694e33144da upstream.
    
    ALSA sequencer core initializes the event pool on demand by invoking
    snd_seq_pool_init() when the first write happens and the pool is
    empty.  Meanwhile user can reset the pool size manually via ioctl
    concurrently, and this may lead to UAF or out-of-bound accesses since
    the function tries to vmalloc / vfree the buffer.
    
    A simple fix is to just wrap the snd_seq_pool_init() call with the
    recently introduced client->ioctl_mutex; as the calls for
    snd_seq_pool_init() from other side are always protected with this
    mutex, we can avoid the race.
    
    Reported-by: èé¾é£ <long7573@126.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec5a08abefe6aa239ada078e6041f222eac52196
Author: Daniel Mack <daniel@zonque.org>
Date:   Sun Feb 11 09:50:27 2018 -0400

    ALSA: usb: add more device quirks for USB DSD devices
    
    commit 7c74866baef1827e18f8269aec85030063520bd4 upstream.
    
    Add some more devices that need quirks to handle DSD modes correctly.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Reported-and-tested-by: Thomas Gresens <tgresens@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1b13eb16c98eb289751098f8f79ff220b8bfdff
Author: Lassi Ylikojola <lassi.ylikojola@gmail.com>
Date:   Fri Feb 9 16:51:36 2018 +0200

    ALSA: usb-audio: add implicit fb quirk for Behringer UFX1204
    
    commit 5e35dc0338d85ccebacf3f77eca1e5dea73155e8 upstream.
    
    Add quirk to ensure a sync endpoint is properly configured.
    This patch is a fix for same symptoms on Behringer UFX1204 as patch
    from Albertto Aquirre on Dec 8 2016 for Axe-Fx II.
    
    Signed-off-by: Lassi Ylikojola <lassi.ylikojola@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de3e8191756434f6fa4bd69d38ceb5bacd0f1028
Author: Jan-Marek Glogowski <glogow@fbihome.de>
Date:   Wed Feb 14 11:29:15 2018 +0100

    ALSA: hda/realtek: PCI quirk for Fujitsu U7x7
    
    commit fdcc968a3b290407bcba9d4c90e2fba6d8d928f1 upstream.
    
    These laptops have a combined jack to attach headsets, the U727 on
    the left, the U757 on the right, but a headsets microphone doesn't
    work. Using hdajacksensetest I found that pin 0x19 changed the
    present state when plugging the headset, in addition to 0x21, but
    didn't have the correct configuration (shown as "Not connected").
    
    So this sets the configuration to the same values as the headphone
    pin 0x21 except for the device type microphone, which makes it
    work correctly. With the patch the configured pins for U727 are
    
    Pin 0x12 (Internal Mic, Mobile-In): present = No
    Pin 0x14 (Internal Speaker): present = No
    Pin 0x19 (Black Mic, Left side): present = No
    Pin 0x1d (Internal Aux): present = No
    Pin 0x21 (Black Headphone, Left side): present = No
    
    Signed-off-by: Jan-Marek Glogowski <glogow@fbihome.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81ae4f7479f96a5123ace58cc3bdc11303de8a46
Author: Kailang Yang <kailang@realtek.com>
Date:   Fri Feb 2 15:26:46 2018 +0800

    ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform
    
    commit 61fcf8ece9b6b09450250c4ca40cc3b81a96a68d upstream.
    
    Thinkpad Dock device support for ALC298 platform.
    It need to use SSID for the quirk table.
    Because IdeaPad also has ALC298 platform.
    Use verb for the quirk table will confuse.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5640397f06ada0800d734b98fced5e74fbd4b217
Author: Kailang Yang <kailang@realtek.com>
Date:   Fri Feb 2 15:13:09 2018 +0800

    ALSA: hda/realtek - Add headset mode support for Dell laptop
    
    commit 40e2c4e5a7efcd50983aacbddd3c617e776018bf upstream.
    
    This platform had two Dmic and single Dmic.
    This update was for single Dmic.
    
    This commit was for two Dmic.
    
    Fixes: 75ee94b20b46 ("ALSA: hda - fix headset mic problem for Dell machines...")
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f65cd77c97c033bade459958611b1c9126c553c
Author: Kirill Marinushkin <k.marinushkin@gmail.com>
Date:   Mon Jan 29 06:37:55 2018 +0100

    ALSA: usb-audio: Fix UAC2 get_ctl request with a RANGE attribute
    
    commit 447cae58cecd69392b74a4a42cd0ab9cabd816af upstream.
    
    The layout of the UAC2 Control request and response varies depending on
    the request type. With the current implementation, only the Layout 2
    Parameter Block (with the 2-byte sized RANGE attribute) is handled
    properly. For the Control requests with the 1-byte sized RANGE attribute
    (Bass Control, Mid Control, Tremble Control), the response is parsed
    incorrectly.
    
    This commit:
    * fixes the wLength field value in the request
    * fixes parsing the range values from the response
    
    Fixes: 23caaf19b11e ("ALSA: usb-mixer: Add support for Audio Class v2.0")
    Signed-off-by: Kirill Marinushkin <k.marinushkin@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0cf529a8f4df5d063816c59af8ea927d277c799
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Jan 29 14:23:15 2018 +0800

    ALSA: hda - Fix headset mic detection problem for two Dell machines
    
    commit 3f2f7c553d077be6a30cb96b2976a2c940bf5335 upstream.
    
    One of them has the codec of alc256 and the other one has the codec
    of alc289.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc74262f3a6524b5122cf1388965bd0c7d9cb5cb
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Feb 9 13:21:42 2018 +0100

    mtd: nand: vf610: set correct ooblayout
    
    commit ea56fb282368ea08c2a313af6b55cb597aec4db1 upstream.
    
    With commit 3cf32d180227 ("mtd: nand: vf610: switch to
    mtd_ooblayout_ops") the driver started to use the NAND cores
    default large page ooblayout. However, shortly after commit
    6a623e076944 ("mtd: nand: add ooblayout for old hamming layout")
    changed the default layout to the old hamming layout, which is
    not what vf610_nfc is using. Specify the default large page
    layout explicitly.
    
    Fixes: 6a623e076944 ("mtd: nand: add ooblayout for old hamming layout")
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a8c9588c289bcd2dbaf7a198144293978833a7c
Author: Greg Kurz <groug@kaod.org>
Date:   Mon Jan 22 22:02:05 2018 +0100

    9p/trans_virtio: discard zero-length reply
    
    commit 26d99834f89e76514076d9cd06f61e56e6a509b8 upstream.
    
    When a 9p request is successfully flushed, the server is expected to just
    mark it as used without sending a 9p reply (ie, without writing data into
    the buffer). In this case, virtqueue_get_buf() will return len == 0 and
    we must not report a REQ_STATUS_RCVD status to the client, otherwise the
    client will erroneously assume the request has not been flushed.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61c07810bf2e53f348dbdba751ddf7ba31aba4aa
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:56 2018 -0700

    Btrfs: fix unexpected -EEXIST when creating new inode
    
    commit 900c9981680067573671ecc5cbfa7c5770be3a40 upstream.
    
    The highest objectid, which is assigned to new inode, is decided at
    the time of initializing fs roots.  However, in cases where log replay
    gets processed, the btree which fs root owns might be changed, so we
    have to search it again for the highest objectid, otherwise creating
    new inode would end up with -EEXIST.
    
    cc: <stable@vger.kernel.org> v4.4-rc6+
    Fixes: f32e48e92596 ("Btrfs: Initialize btrfs_root->highest_objectid when loading tree root and subvolume roots")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f30c7d95b4eb1fefe9ac0b31f4a8a3e9d4b04bb1
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:54 2018 -0700

    Btrfs: fix use-after-free on root->orphan_block_rsv
    
    commit 1a932ef4e47984dee227834667b5ff5a334e4805 upstream.
    
    I got these from running generic/475,
    
    WARNING: CPU: 0 PID: 26384 at fs/btrfs/inode.c:3326 btrfs_orphan_commit_root+0x1ac/0x2b0 [btrfs]
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    IP: btrfs_block_rsv_release+0x1c/0x70 [btrfs]
    Call Trace:
      btrfs_orphan_release_metadata+0x9f/0x200 [btrfs]
      btrfs_orphan_del+0x10d/0x170 [btrfs]
      btrfs_setattr+0x500/0x640 [btrfs]
      notify_change+0x7ae/0x870
      do_truncate+0xca/0x130
      vfs_truncate+0x2ee/0x3d0
      do_sys_truncate+0xaf/0xf0
      SyS_truncate+0xe/0x10
      entry_SYSCALL_64_fastpath+0x1f/0x96
    
    The race is between btrfs_orphan_commit_root and btrfs_orphan_del,
            t1                                        t2
    btrfs_orphan_commit_root                     btrfs_orphan_del
       spin_lock
       check (&root->orphan_inodes)
       root->orphan_block_rsv = NULL;
       spin_unlock
                                                 atomic_dec(&root->orphan_inodes);
                                                 access root->orphan_block_rsv
    
    Accessing root->orphan_block_rsv must be done before decreasing
    root->orphan_inodes.
    
    cc: <stable@vger.kernel.org> v3.12+
    Fixes: 703c88e03524 ("Btrfs: fix tracking of orphan inode count")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1371798b92c84ddb06e0630fc1e2a9fcdeec2b57
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:53 2018 -0700

    Btrfs: fix btrfs_evict_inode to handle abnormal inodes correctly
    
    commit e8f1bc1493855e32b7a2a019decc3c353d94daf6 upstream.
    
    This regression is introduced in
    commit 3d48d9810de4 ("btrfs: Handle uninitialised inode eviction").
    
    There are two problems,
    
    a) it is ->destroy_inode() that does the final free on inode, not
       ->evict_inode(),
    b) clear_inode() must be called before ->evict_inode() returns.
    
    This could end up hitting BUG_ON(inode->i_state != (I_FREEING | I_CLEAR));
    in evict() because I_CLEAR is set in clear_inode().
    
    Fixes: commit 3d48d9810de4 ("btrfs: Handle uninitialised inode eviction")
    Cc: <stable@vger.kernel.org> # v4.7-rc6+
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a701c4fa563d3102b291de2531e0288ac4d7ee1
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:52 2018 -0700

    Btrfs: fix extent state leak from tree log
    
    commit 55237a5f2431a72435e3ed39e4306e973c0446b7 upstream.
    
    It's possible that btrfs_sync_log() bails out after one of the two
    btrfs_write_marked_extents() which convert extent state's state bit into
    EXTENT_NEED_WAIT from EXTENT_DIRTY/EXTENT_NEW, however only EXTENT_DIRTY
    and EXTENT_NEW are searched by free_log_tree() so that those extent states
    with EXTENT_NEED_WAIT lead to memory leak.
    
    cc: <stable@vger.kernel.org>
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fda3bb933b332a206730300a40ee71023548d0b0
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:51 2018 -0700

    Btrfs: fix crash due to not cleaning up tree log block's dirty bits
    
    commit 1846430c24d66e85cc58286b3319c82cd54debb2 upstream.
    
    In cases that the whole fs flips into readonly status due to failures in
    critical sections, then log tree's blocks are still dirty, and this leads
    to a crash during umount time, the crash is about use-after-free,
    
    umount
     -> close_ctree
        -> stop workers
        -> iput(btree_inode)
           -> iput_final
              -> write_inode_now
                 -> ...
                   -> queue job on stop'd workers
    
    cc: <stable@vger.kernel.org> v3.12+
    Fixes: 681ae50917df ("Btrfs: cleanup reserved space when freeing tree log on error")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c766cb48771b7604fb5beca646bfa9904d0a2b17
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Thu Jan 25 11:02:50 2018 -0700

    Btrfs: fix deadlock in run_delalloc_nocow
    
    commit e89166990f11c3f21e1649d760dd35f9e410321c upstream.
    
    @cur_offset is not set back to what it should be (@cow_start) if
    btrfs_next_leaf() returns something wrong, and the range [cow_start,
    cur_offset) remains locked forever.
    
    cc: <stable@vger.kernel.org>
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6318abd3a5458be821eb417969726622e1e09c4
Author: NeilBrown <neilb@suse.com>
Date:   Thu Feb 15 20:00:15 2018 +1100

    dm: correctly handle chained bios in dec_pending()
    
    commit 8dd601fa8317243be887458c49f6c29c2f3d719f upstream.
    
    dec_pending() is given an error status (possibly 0) to be recorded
    against a bio.  It can be called several times on the one 'struct
    dm_io', and it is careful to only assign a non-zero error to
    io->status.  However when it then assigned io->status to bio->bi_status,
    it is not careful and could overwrite a genuine error status with 0.
    
    This can happen when chained bios are in use.  If a bio is chained
    beneath the bio that this dm_io is handling, the child bio might
    complete and set bio->bi_status before the dm_io completes.
    
    This has been possible since chained bios were introduced in 3.14, and
    has become a lot easier to trigger with commit 18a25da84354 ("dm: ensure
    bio submission follows a depth-first tree walk") as that commit caused
    dm to start using chained bios itself.
    
    A particular failure mode is that if a bio spans an 'error' target and a
    working target, the 'error' fragment will complete instantly and set the
    ->bi_status, and the other fragment will normally complete a little
    later, and will clear ->bi_status.
    
    The fix is simply to only assign io_error to bio->bi_status when
    io_error is not zero.
    
    Reported-and-tested-by: Milan Broz <gmazyland@gmail.com>
    Cc: stable@vger.kernel.org (v3.14+)
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8d0f63c15851e7d6f41b455d74e4b2b0a862a09
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Jan 19 14:36:29 2018 +0100

    iscsi-target: make sure to wake up sleeping login worker
    
    commit 1c130ae00b769a2e2df41bad3d6051ee8234b636 upstream.
    
    Mike Christie reports:
      Starting in 4.14 iscsi logins will fail around 50% of the time.
    
    Problem appears to be that iscsi_target_sk_data_ready() callback may
    return without doing anything in case it finds the login work queue
    is still blocked in sock_recvmsg().
    
    Nicholas Bellinger says:
      It would indicate users providing their own ->sk_data_ready() callback
      must be responsible for waking up a kthread context blocked on
      sock_recvmsg(..., MSG_WAITALL), when a second ->sk_data_ready() is
      received before the first sock_recvmsg(..., MSG_WAITALL) completes.
    
    So, do this and invoke the original data_ready() callback -- in
    case of tcp sockets this takes care of waking the thread.
    
    Disclaimer: I do not understand why this problem did not show up before
    tcp prequeue removal.
    
    (Drop WARN_ON usage - nab)
    
    Reported-by: Mike Christie <mchristi@redhat.com>
    Bisected-by: Mike Christie <mchristi@redhat.com>
    Tested-by: Mike Christie <mchristi@redhat.com>
    Diagnosed-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Fixes: e7942d0633c4 ("tcp: remove prequeue support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Cc: stable@vger.kernel.org # 4.14+
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cbb9fdf133cc5a5dcb1ac7153791792976c62c9
Author: David Disseldorp <ddiss@suse.de>
Date:   Wed Dec 13 18:22:30 2017 +0100

    target/iscsi: avoid NULL dereference in CHAP auth error path
    
    commit ce512d79d0466a604793addb6b769d12ee326822 upstream.
    
    If chap_server_compute_md5() fails early, e.g. via CHAP_N mismatch, then
    crypto_free_shash() is called with a NULL pointer which gets
    dereferenced in crypto_shash_tfm().
    
    Fixes: 69110e3cedbb ("iscsi-target: Use shash and ahash")
    Suggested-by: Markus Elfring <elfring@users.sourceforge.net>
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Cc: stable@vger.kernel.org # 4.6+
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0528a533f368c93efe752dbd52698dcea214554a
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Feb 5 13:16:56 2018 -0700

    blk-wbt: account flush requests correctly
    
    commit 5235553d821433e1f4fa720fd025d2c4b7ee9994 upstream.
    
    Mikulas reported a workload that saw bad performance, and figured
    out what it was due to various other types of requests being
    accounted as reads. Flush requests, for instance. Due to the
    high latency of those, we heavily throttle the writes to keep
    the latencies in balance. But they really should be accounted
    as writes.
    
    Fix this by checking the exact type of the request. If it's a
    read, account as a read, if it's a write or a flush, account
    as a write. Any other request we disregard. Previously everything
    would have been mistakenly accounted as reads.
    
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67154fb8012152aed14dbd70e5b7fc79dcfd53f4
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Jan 31 12:34:13 2018 -0500

    xprtrdma: Fix BUG after a device removal
    
    commit e89e8d8fcdc6751e86ccad794b052fe67e6ad619 upstream.
    
    Michal Kalderon reports a BUG that occurs just after device removal:
    
    [  169.112490] rpcrdma: removing device qedr0 for 192.168.110.146:20049
    [  169.143909] BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    [  169.181837] IP: rpcrdma_dma_unmap_regbuf+0xa/0x60 [rpcrdma]
    
    The RPC/RDMA client transport attempts to allocate some resources
    on demand. Registered buffers are one such resource. These are
    allocated (or re-allocated) by xprt_rdma_allocate to hold RPC Call
    and Reply messages. A hardware resource is associated with each of
    these buffers, as they can be used for a Send or Receive Work
    Request.
    
    If a device is removed from under an NFS/RDMA mount, the transport
    layer is responsible for releasing all hardware resources before
    the device can be finally unplugged. A BUG results when the NFS
    mount hasn't yet seen much activity: the transport tries to release
    resources that haven't yet been allocated.
    
    rpcrdma_free_regbuf() already checks for this case, so just move
    that check to cover the DEVICE_REMOVAL case as well.
    
    Reported-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Fixes: bebd031866ca ("xprtrdma: Support unplugging an HCA ...")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84b41e3708ac9869190dd09d47b548392b7a656a
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Jan 31 12:34:05 2018 -0500

    xprtrdma: Fix calculation of ri_max_send_sges
    
    commit 1179e2c27efe21167ec9d882b14becefba2ee990 upstream.
    
    Commit 16f906d66cd7 ("xprtrdma: Reduce required number of send
    SGEs") introduced the rpcrdma_ia::ri_max_send_sges field. This fixes
    a problem where xprtrdma would not work if the device's max_sge
    capability was small (low single digits).
    
    At least RPCRDMA_MIN_SEND_SGES are needed for the inline parts of
    each RPC. ri_max_send_sges is set to this value:
    
      ia->ri_max_send_sges = max_sge - RPCRDMA_MIN_SEND_SGES;
    
    Then when marshaling each RPC, rpcrdma_args_inline uses that value
    to determine whether the device has enough Send SGEs to convey an
    NFS WRITE payload inline, or whether instead a Read chunk is
    required.
    
    More recently, commit ae72950abf99 ("xprtrdma: Add data structure to
    manage RDMA Send arguments") used the ri_max_send_sges value to
    calculate the size of an array, but that commit erroneously assumed
    ri_max_send_sges contains a value similar to the device's max_sge,
    and not one that was reduced by the minimum SGE count.
    
    This assumption results in the calculated size of the sendctx's
    Send SGE array to be too small. When the array is used to marshal
    an RPC, the code can write Send SGEs into the following sendctx
    element in that array, corrupting it. When the device's max_sge is
    large, this issue is entirely harmless; but it results in an oops
    in the provider's post_send method, if dev.attrs.max_sge is small.
    
    So let's straighten this out: ri_max_send_sges will now contain a
    value with the same meaning as dev.attrs.max_sge, which makes
    the code easier to understand, and enables rpcrdma_sendctx_create
    to calculate the size of the SGE array correctly.
    
    Reported-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Fixes: 16f906d66cd7 ("xprtrdma: Reduce required number of send SGEs")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 848dd9bf51544c8e5436960124f3d1f9c51cdb99
Author: Ray Strode <rstrode@redhat.com>
Date:   Mon Nov 27 16:50:10 2017 -0500

    drm/qxl: reapply cursor after resetting primary
    
    commit 9428088c90b6f7d5edd2a1b0d742c75339b36f6e upstream.
    
    QXL associates mouse state with its primary plane.
    
    Destroying a primary plane and putting a new one in place has the side
    effect of destroying the cursor as well.
    
    This commit changes the driver to reapply the cursor any time a new
    primary is created. It achieves this by keeping a reference to the
    cursor bo on the qxl_crtc struct.
    
    This fix is very similar to
    
    commit 4532b241a4b7 ("drm/qxl: reapply cursor after SetCrtc calls")
    
    which got implicitly reverted as part of implementing the atomic
    modeset feature.
    
    Cc: Gerd Hoffmann <kraxel@redhat.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1512097
    Fixes: 1277eed5fecb ("drm: qxl: Atomic phase 1: convert cursor to universal plane")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ray Strode <rstrode@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc0b764a7c1a3a03b56c5582bf9a9c4554bf5e96
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Thu Oct 19 08:21:50 2017 +0200

    qxl: alloc & use shadow for dumb buffers
    
    commit 62676d10b483a2ff6e8b08c5e7c7d63a831343f5 upstream.
    
    This patch changes the way the primary surface is used for dumb
    framebuffers.  Instead of configuring the bo itself as primary surface
    a shadow bo is created and used instead.  Framebuffers can share the
    shadow bo in case they have the same format and resolution.
    
    On atomic plane updates we don't have to update the primary surface in
    case we pageflip from one framebuffer to another framebuffer which
    shares the same shadow.  This in turn avoids the flicker caused by the
    primary-destroy + primary-create cycle, which is very annonying when
    running wayland on qxl.
    
    The qxl driver never actually writes to the shadow bo.  It sends qxl
    blit commands which update it though, and the spice server might
    actually execute them (and thereby write to the shadow) in case the
    local rendering is kicked for some reason.  This happens for example in
    case qemu is asked to write out a dump of the guest display (screendump
    monitor command).
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20171019062150.28090-3-kraxel@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 851e2ea82303f3a543b32f5cc81adbc1929d053a
Author: Will Deacon <will@kernel.org>
Date:   Tue Feb 13 13:14:09 2018 +0000

    arm64: proc: Set PTE_NG for table entries to avoid traversing them twice
    
    commit 2ce77f6d8a9ae9ce6d80397d88bdceb84a2004cd upstream.
    
    When KASAN is enabled, the swapper page table contains many identical
    mappings of the zero page, which can lead to a stall during boot whilst
    the G -> nG code continually walks the same page table entries looking
    for global mappings.
    
    This patch sets the nG bit (bit 11, which is IGNORED) in table entries
    after processing the subtree so we can easily skip them if we see them
    a second time.
    
    Tested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff59e379234bb4b479deca97e29f685eabe22954
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Feb 5 12:38:11 2018 -0600

    rtlwifi: rtl8821ae: Fix connection lost problem correctly
    
    commit c713fb071edc0efc01a955f65a006b0e1795d2eb upstream.
    
    There has been a coding error in rtl8821ae since it was first introduced,
    namely that an 8-bit register was read using a 16-bit read in
    _rtl8821ae_dbi_read(). This error was fixed with commit 40b368af4b75
    ("rtlwifi: Fix alignment issues"); however, this change led to
    instability in the connection. To restore stability, this change
    was reverted in commit b8b8b16352cd ("rtlwifi: rtl8821ae: Fix connection
    lost problem").
    
    Unfortunately, the unaligned access causes machine checks in ARM
    architecture, and we were finally forced to find the actual cause of the
    problem on x86 platforms. Following a suggestion from Pkshih
    <pkshih@realtek.com>, it was found that increasing the ASPM L1
    latency from 0 to 7 fixed the instability. This parameter was varied to
    see if a smaller value would work; however, it appears that 7 is the
    safest value. A new symbol is defined for this quantity, thus it can be
    easily changed if necessary.
    
    Fixes: b8b8b16352cd ("rtlwifi: rtl8821ae: Fix connection lost problem")
    Cc: Stable <stable@vger.kernel.org> # 4.14+
    Fix-suggested-by: Pkshih <pkshih@realtek.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Tested-by: James Cameron <quozl@laptop.org>  # x86_64 OLPC NL3
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 753fc48e595a24eac4d4476a421c36307a7fbcb5
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Feb 7 22:34:24 2018 -0800

    mpls, nospec: Sanitize array index in mpls_label_ok()
    
    commit 3968523f855050b8195134da951b87c20bd66130 upstream.
    
    mpls_label_ok() validates that the 'platform_label' array index from a
    userspace netlink message payload is valid. Under speculation the
    mpls_label_ok() result may not resolve in the CPU pipeline until after
    the index is used to access an array element. Sanitize the index to zero
    to prevent userspace-controlled arbitrary out-of-bounds speculation, a
    precursor for a speculative execution side channel vulnerability.
    
    Cc: <stable@vger.kernel.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 294975841483c08e84572713f348cd51b8408021
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Feb 5 22:18:11 2018 -0500

    tracing: Fix parsing of globs with a wildcard at the beginning
    
    commit 07234021410bbc27b7c86c18de98616c29fbe667 upstream.
    
    Al Viro reported:
    
        For substring - sure, but what about something like "*a*b" and "a*b"?
        AFAICS, filter_parse_regex() ends up with identical results in both
        cases - MATCH_GLOB and *search = "a*b".  And no way for the caller
        to tell one from another.
    
    Testing this with the following:
    
     # cd /sys/kernel/tracing
     # echo '*raw*lock' > set_ftrace_filter
     bash: echo: write error: Invalid argument
    
    With this patch:
    
     # echo '*raw*lock' > set_ftrace_filter
     # cat set_ftrace_filter
    _raw_read_trylock
    _raw_write_trylock
    _raw_read_unlock
    _raw_spin_unlock
    _raw_write_unlock
    _raw_spin_trylock
    _raw_spin_lock
    _raw_write_lock
    _raw_read_lock
    
    Al recommended not setting the search buffer to skip the first '*' unless we
    know we are not using MATCH_GLOB. This implements his suggested logic.
    
    Link: http://lkml.kernel.org/r/20180127170748.GF13338@ZenIV.linux.org.uk
    
    Cc: stable@vger.kernel.org
    Fixes: 60f1d5e3bac44 ("ftrace: Support full glob matching")
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Suggsted-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29b4af70409cfca62d045cd4e0170912ab262c66
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Nov 15 11:34:58 2017 +0100

    seq_file: fix incomplete reset on read from zero offset
    
    commit cf5eebae2cd28d37581507668605f4d23cd7218d upstream.
    
    When resetting iterator on a zero offset we need to discard any data
    already in the buffer (count), and private state of the iterator (version).
    
    For example this bug results in first line being repeated in /proc/mounts
    if doing a zero size read before a non-zero size read.
    
    Reported-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: e522751d605d ("seq_file: reset iterator to first record for zero offset")
    Cc: <stable@vger.kernel.org> # v4.10
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f0fd00739118302568ff8b57ddfc5898c1a3796
Author: Joao Martins <joao.m.martins@oracle.com>
Date:   Fri Feb 2 17:42:33 2018 +0000

    xenbus: track caller request id
    
    commit 29fee6eed2811ff1089b30fc579a2d19d78016ab upstream.
    
    Commit fd8aa9095a95 ("xen: optimize xenbus driver for multiple concurrent
    xenstore accesses") optimized xenbus concurrent accesses but in doing so
    broke UABI of /dev/xen/xenbus. Through /dev/xen/xenbus applications are in
    charge of xenbus message exchange with the correct header and body. Now,
    after the mentioned commit the replies received by application will no
    longer have the header req_id echoed back as it was on request (see
    specification below for reference), because that particular field is being
    overwritten by kernel.
    
    struct xsd_sockmsg
    {
      uint32_t type;  /* XS_??? */
      uint32_t req_id;/* Request identifier, echoed in daemon's response.  */
      uint32_t tx_id; /* Transaction id (0 if not related to a transaction). */
      uint32_t len;   /* Length of data following this. */
    
      /* Generally followed by nul-terminated string(s). */
    };
    
    Before there was only one request at a time so req_id could simply be
    forwarded back and forth. To allow simultaneous requests we need a
    different req_id for each message thus kernel keeps a monotonic increasing
    counter for this field and is written on every request irrespective of
    userspace value.
    
    Forwarding again the req_id on userspace requests is not a solution because
    we would open the possibility of userspace-generated req_id colliding with
    kernel ones. So this patch instead takes another route which is to
    artificially keep user req_id while keeping the xenbus logic as is. We do
    that by saving the original req_id before xs_send(), use the private kernel
    counter as req_id and then once reply comes and was validated, we restore
    back the original req_id.
    
    Cc: <stable@vger.kernel.org> # 4.11
    Fixes: fd8aa9095a ("xen: optimize xenbus driver for multiple concurrent xenstore accesses")
    Reported-by: Bhavesh Davda <bhavesh.davda@oracle.com>
    Signed-off-by: Joao Martins <joao.m.martins@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2fd6c0950337a39abd79046edb43c24ba91d033
Author: Simon Gaiser <simon@invisiblethingslab.com>
Date:   Wed Feb 7 21:47:40 2018 +0100

    xen: Fix {set,clear}_foreign_p2m_mapping on autotranslating guests
    
    commit 781198f1f373c3e350dbeb3af04a7d4c81c1b8d7 upstream.
    
    Commit 82616f9599a7 ("xen: remove tests for pvh mode in pure pv paths")
    removed the check for autotranslation from {set,clear}_foreign_p2m_mapping
    but those are called by grant-table.c also on PVH/HVM guests.
    
    Cc: <stable@vger.kernel.org> # 4.14
    Fixes: 82616f9599a7 ("xen: remove tests for pvh mode in pure pv paths")
    Signed-off-by: Simon Gaiser <simon@invisiblethingslab.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0569dd9beef44d33e4866bf2db2e03fd3644de4f
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Tue Jan 16 15:41:54 2018 +0100

    rbd: whitelist RBD_FEATURE_OPERATIONS feature bit
    
    commit e573427a440fd67d3f522357d7ac901d59281948 upstream.
    
    This feature bit restricts older clients from performing certain
    maintenance operations against an image (e.g. clone, snap create).
    krbd does not perform maintenance operations.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Jason Dillaman <dillaman@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3711b5c568cd651ca78d6623d5c0fc839eac9499
Author: Nicolas Pitre <nico@fluxnic.net>
Date:   Mon Jan 15 17:04:22 2018 +0100

    console/dummy: leave .con_font_get set to NULL
    
    commit 724ba8b30b044aa0d94b1cd374fc15806cdd6f18 upstream.
    
    When this method is set, the caller expects struct console_font fields
    to be properly initialized when it returns. Leave it unset otherwise
    nonsensical (leaked kernel stack) values are returned to user space.
    
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e6fd5b4ea9d568ac989a61b8d78ae0c5ce19bcf
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Dec 29 19:48:43 2017 +0100

    video: fbdev: atmel_lcdfb: fix display-timings lookup
    
    commit 9cb18db0701f6b74f0c45c23ad767b3ebebe37f6 upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent display node was also prematurely
    freed.
    
    Note that the display and timings node references are never put after a
    successful dt-initialisation so the nodes would leak on later probe
    deferrals and on driver unbind.
    
    Fixes: b985172b328a ("video: atmel_lcdfb: add device tree suport")
    Cc: stable <stable@vger.kernel.org>     # 3.13
    Cc: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c77b388550368068a1615e164b9441937786a1de
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 17 14:38:31 2017 +0100

    PCI: keystone: Fix interrupt-controller-node lookup
    
    commit eac56aa3bc8af3d9b9850345d0f2da9d83529134 upstream.
    
    Fix child-node lookup during initialisation which was using the wrong
    OF-helper and ended up searching the whole device tree depth-first
    starting at the parent rather than just matching on its children.
    
    To make things worse, the parent pci node could end up being prematurely
    freed as of_find_node_by_name() drops a reference to its first argument.
    Any matching child interrupt-controller node was also leaked.
    
    Fixes: 0c4ffcfe1fbc ("PCI: keystone: Add TI Keystone PCIe driver")
    Cc: stable <stable@vger.kernel.org>     # 3.18
    Acked-by: Murali Karicheri <m-karicheri2@ti.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    [lorenzo.pieralisi@arm.com: updated commit subject]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c125f391333a1e4fb1f760f5ed14657a1894bcf
Author: Ray Jui <ray.jui@broadcom.com>
Date:   Thu Jan 11 12:36:16 2018 -0800

    PCI: iproc: Fix NULL pointer dereference for BCMA
    
    commit 3b65ca50d24ce33cb92d88840e289135c92b40ed upstream.
    
    With the inbound DMA mapping supported added, the iProc PCIe driver
    parses DT property "dma-ranges" through call to
    "of_pci_dma_range_parser_init()". In the case of BCMA, this results in a
    NULL pointer deference due to a missing of_node.
    
    Fix this by adding a guard in pcie-iproc-platform.c to only enable the
    inbound DMA mapping logic when DT property "dma-ranges" is present.
    
    Fixes: dd9d4e7498de3 ("PCI: iproc: Add inbound DMA mapping support")
    Reported-by: RafaÅ MiÅecki <rafal@milecki.pl>
    Signed-off-by: Ray Jui <ray.jui@broadcom.com>
    [lorenzo.pieralisi@arm.com: updated commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Tested-by: RafaÅ MiÅecki <rafal@milecki.pl>
    cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 990bb6eb9ec21bbf5925c9def1db53958041ce3b
Author: Dongdong Liu <liudongdong3@huawei.com>
Date:   Thu Dec 28 17:53:32 2017 +0800

    PCI: Disable MSI for HiSilicon Hip06/Hip07 only in Root Port mode
    
    commit deb86999323661c019ef2740eb9d479d1e526b5c upstream.
    
    HiSilicon Hip06/Hip07 can operate as either a Root Port or an Endpoint.  It
    always advertises an MSI capability, but it can only generate MSIs when in
    Endpoint mode.
    
    The device has the same Vendor and Device IDs in both modes, so check the
    Class Code and disable MSI only when operating as a Root Port.
    
    [bhelgaas: changelog]
    Fixes: 72f2ff0deb87 ("PCI: Disable MSI for HiSilicon Hip06/Hip07 Root Ports")
    Signed-off-by: Dongdong Liu <liudongdong3@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Zhou Wang <wangzhou1@hisilicon.com>
    Cc: stable@vger.kernel.org      # v4.11+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 524a886aa8c98e6220e844afffa47439343db612
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Thu Feb 1 12:37:21 2018 +0100

    MIPS: Fix incorrect mem=X@Y handling
    
    commit 67a3ba25aa955198196f40b76b329b3ab9ad415a upstream.
    
    Commit 73fbc1eba7ff ("MIPS: fix mem=X@Y commandline processing") added a
    fix to ensure that the memory range between PHYS_OFFSET and low memory
    address specified by mem= cmdline argument is not later processed by
    free_all_bootmem.  This change was incorrect for systems where the
    commandline specifies more than 1 mem argument, as it will cause all
    memory between PHYS_OFFSET and each of the memory offsets to be marked
    as reserved, which results in parts of the RAM marked as reserved
    (Creator CI20's u-boot has a default commandline argument 'mem=256M@0x0
    mem=768M@0x30000000').
    
    Change the behaviour to ensure that only the range between PHYS_OFFSET
    and the lowest start address of the memories is marked as protected.
    
    This change also ensures that the range is marked protected even if it's
    only defined through the devicetree and not only via commandline
    arguments.
    
    Reported-by: Mathieu Malaterre <mathieu.malaterre@gmail.com>
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@mips.com>
    Fixes: 73fbc1eba7ff ("MIPS: fix mem=X@Y commandline processing")
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # v4.11+
    Tested-by: Mathieu Malaterre <malat@debian.org>
    Patchwork: https://patchwork.linux-mips.org/patch/18562/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4f261974c6bf60f6b4cf3b6f1ea836504dc95b3
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Wed Jan 17 19:56:38 2018 +0100

    MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN
    
    commit 2e6522c565522a2e18409c315c49d78c8b74807b upstream.
    
    MIPS_GENERIC selects some options conditional on BIG_ENDIAN which does
    not exist.
    
    Replace BIG_ENDIAN with CPU_BIG_ENDIAN which is the correct kconfig
    name. Note that BMIPS_GENERIC does the same which confirms that this
    patch is needed.
    
    Fixes: eed0eabd12ef0 ("MIPS: generic: Introduce generic DT-based board support")
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Reviewed-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 4.9+
    Patchwork: https://patchwork.linux-mips.org/patch/18495/
    [jhogan@kernel.org: Clean up commit message]
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f21cd46cacae0fe7429d27c8781370317fe4a67
Author: Jan H. SchÃ¶nherr <jschoenh@amazon.de>
Date:   Fri Jan 19 16:27:54 2018 -0800

    mm: Fix memory size alignment in devm_memremap_pages_release()
    
    commit 10a0cd6e4932b5078215b1ec2c896597eec0eff9 upstream.
    
    The functions devm_memremap_pages() and devm_memremap_pages_release() use
    different ways to calculate the section-aligned amount of memory. The
    latter function may use an incorrect size if the memory region is small
    but straddles a section border.
    
    Use the same code for both.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 5f29a77cd957 ("mm: fix mixed zone detection in devm_memremap_pages")
    Signed-off-by: Jan H. SchÃ¶nherr <jschoenh@amazon.de>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 568c61facce6b0bddbfa04ec634b34904c6e2f1c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 16 16:25:53 2018 +0100

    mm: hide a #warning for COMPILE_TEST
    
    commit af27d9403f5b80685b79c88425086edccecaf711 upstream.
    
    We get a warning about some slow configurations in randconfig kernels:
    
      mm/memory.c:83:2: error: #warning Unfortunate NUMA and NUMA Balancing config, growing page-frame for last_cpupid. [-Werror=cpp]
    
    The warning is reasonable by itself, but gets in the way of randconfig
    build testing, so I'm hiding it whenever CONFIG_COMPILE_TEST is set.
    
    The warning was added in 2013 in commit 75980e97dacc ("mm: fold
    page->_last_nid into page->flags where possible").
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef7fd28b1137c4023a5fc9fc0497a92838d81910
Author: Ernesto A. FernÃ¡ndez <ernesto.mnd.fernandez@gmail.com>
Date:   Thu Jan 11 13:43:33 2018 -0500

    ext4: correct documentation for grpid mount option
    
    commit 9f0372488cc9243018a812e8cfbf27de650b187b upstream.
    
    The grpid option is currently described as being the same as nogrpid.
    
    Signed-off-by: Ernesto A. FernÃ¡ndez <ernesto.mnd.fernandez@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e38988253c165a8b81d3ceea55fb68cb2d19e1c
Author: Zhouyi Zhou <zhouzhouyi@gmail.com>
Date:   Wed Jan 10 00:34:19 2018 -0500

    ext4: save error to disk in __ext4_grp_locked_error()
    
    commit 06f29cc81f0350261f59643a505010531130eea0 upstream.
    
    In the function __ext4_grp_locked_error(), __save_error_info()
    is called to save error info in super block block, but does not sync
    that information to disk to info the subsequence fsck after reboot.
    
    This patch writes the error information to disk.  After this patch,
    I think there is no obvious EXT4 error handle branches which leads to
    "Remounting filesystem read-only" will leave the disk partition miss
    the subsequence fsck.
    
    Signed-off-by: Zhouyi Zhou <zhouzhouyi@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d4d103a1b7e2990bcdbf83a24a83b3e351b6838
Author: Harshad Shirwadkar <harshads@google.com>
Date:   Wed Jan 10 00:13:13 2018 -0500

    ext4: fix a race in the ext4 shutdown path
    
    commit abbc3f9395c76d554a9ed27d4b1ebfb5d9b0e4ca upstream.
    
    This patch fixes a race between the shutdown path and bio completion
    handling. In the ext4 direct io path with async io, after submitting a
    bio to the block layer, if journal starting fails,
    ext4_direct_IO_write() would bail out pretending that the IO
    failed. The caller would have had no way of knowing whether or not the
    IO was successfully submitted. So instead, we return -EIOCBQUEUED in
    this case. Now, the caller knows that the IO was submitted.  The bio
    completion handler takes care of the error.
    
    Tested: Ran the shutdown xfstest test 461 in loop for over 2 hours across
    4 machines resulting in over 400 runs. Verified that the race didn't
    occur. Usually the race was seen in about 20-30 iterations.
    
    Signed-off-by: Harshad Shirwadkar <harshads@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 879bcbe0913fb6f938157af821d10f48235c166c
Author: Tobin C. Harding <me@tobin.cc>
Date:   Wed Jan 10 00:27:29 2018 -0500

    jbd2: fix sphinx kernel-doc build warnings
    
    commit f69120ce6c024aa634a8fc25787205e42f0ccbe6 upstream.
    
    Sphinx emits various (26) warnings when building make target 'htmldocs'.
    Currently struct definitions contain duplicate documentation, some as
    kernel-docs and some as standard c89 comments.  We can reduce
    duplication while cleaning up the kernel docs.
    
    Move all kernel-docs to right above each struct member.  Use the set of
    all existing comments (kernel-doc and c89).  Add documentation for
    missing struct members and function arguments.
    
    Signed-off-by: Tobin C. Harding <me@tobin.cc>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 598b21708ec09ad33cd66d162d2fea2dd66d9f64
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Jan 24 19:35:45 2018 +0100

    Revert "apple-gmux: lock iGP IO to protect from vgaarb changes"
    
    commit d6fa7588fd7a8def4c747c0c574ce85d453e3788 upstream.
    
    Commit 4eebd5a4e726 ("apple-gmux: lock iGP IO to protect from vgaarb
    changes") amended this driver's ->probe hook to lock decoding of normal
    (non-legacy) I/O space accesses to the integrated GPU on dual-GPU
    MacBook Pros.  The lock stays in place until the driver is unbound.
    
    The change was made to work around an issue with the out-of-tree nvidia
    graphics driver (available at http://www.nvidia.com/object/unix.html).
    It contains the following sequence in nvidia/nv.c:
    
            #if defined(CONFIG_VGA_ARB) && !defined(NVCPU_PPC64LE)
            #if defined(VGA_DEFAULT_DEVICE)
                vga_tryget(VGA_DEFAULT_DEVICE, VGA_RSRC_LEGACY_MASK);
            #endif
                vga_set_legacy_decoding(dev, VGA_RSRC_NONE);
            #endif
    
    This code was reported to cause deadlocks with VFIO already in 2013:
    https://devtalk.nvidia.com/default/topic/545560
    
    I've reported the issue to Nvidia developers once more in 2017:
    https://www.spinics.net/lists/dri-devel/msg138754.html
    
    On the MacBookPro10,1, this code apparently breaks backlight control
    (which is handled by apple-gmux via an I/O region starting at 0x700),
    as reported by Petri Hodju:
    https://bugzilla.kernel.org/show_bug.cgi?id=86121
    
    I tried to replicate Petri's observations on my MacBook9,1, which uses
    the same Intel Ivy Bridge + Nvidia GeForce GT 650M architecture, to no
    avail.  On my machine apple-gmux' I/O region remains accessible even
    with the nvidia driver loaded and commit 4eebd5a4e726 reverted.
    Petri reported that apple-gmux becomes accessible again after a
    suspend/resume cycle because the BIOS changed the VGA routing on the
    root port to the Nvidia GPU.  Perhaps this is a BIOS issue after all
    that can be fixed with an update?
    
    In any case, the change made by commit 4eebd5a4e726 has turned out to
    cause two new issues:
    
    * Wilfried Klaebe reports a deadlock when launching Xorg because it
      opens /dev/vga_arbiter and calls vga_get(), but apple-gmux is holding
      a lock on I/O space indefinitely.  It looks like apple-gmux' current
      behavior is an abuse of the vgaarb API as locks are not meant to be
      held for longer periods:
      https://bugzilla.kernel.org/show_bug.cgi?id=88861#c11
      https://bugzilla.kernel.org/attachment.cgi?id=217541
    
    * On dual GPU MacBook Pros introduced since 2013, the integrated GPU is
      powergated on boot und thus becomes invisible to Linux unless a custom
      EFI protocol is used to leave it powered on.  (A patch exists but is
      not in mainline yet due to several negative side effects.)  On these
      machines, locking I/O to the integrated GPU (as done by 4eebd5a4e726)
      fails and backlight control is therefore broken:
      https://bugzilla.kernel.org/show_bug.cgi?id=105051
    
    So let's revert commit 4eebd5a4e726 please.  Users experiencing the
    issue with the proprietary nvidia driver can comment out the above-
    quoted problematic code as a workaround (or try updating the BIOS).
    
    Cc: Petri Hodju <petrihodju@yahoo.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Bruno PrÃ©mont <bonbons@linux-vserver.org>
    Cc: Andy Ritger <aritger@nvidia.com>
    Cc: Ronald TschalÃ¤r <ronald@innovation.ch>
    Tested-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7cedb56ae9a1c00b76df98d2adebb6208d2b71e
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 5 16:24:52 2018 +0200

    mlx5: fix mlx5_get_vector_affinity to start from completion vector 0
    
    commit 2572cf57d75a7f91835d9a38771e9e76d575d122 upstream.
    
    The consumers of this routine expects the affinity map of of vector
    index relative to the first completion vector. The upper layers are
    not aware of internal/private completion vectors that mlx5 allocates
    for its own usage.
    
    Hence, return the affinity map of vector index relative to the first
    completion vector.
    
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Reported-by: Logan Gunthorpe <logang@deltatee.com>
    Tested-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Cc: <stable@vger.kernel.org> # v4.15
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 723cc3aeba9be034c7509860dbf445e1bd25467f
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Feb 12 14:13:59 2018 +0100

    Revert "mmc: meson-gx: include tx phase in the tuning process"
    
    commit fe0e58048f005fdce315eb4d185e5c160be4ac01 upstream.
    
    This reverts commit 0a44697627d17a66d7dc98f17aeca07ca79c5c20.
    
    This commit was initially intended to fix problems with hs200 and hs400
    on some boards, mainly the odroid-c2. The OC2 (Rev 0.2) I have performs
    well in this modes, so I could not confirm these issues.
    
    We've had several reports about the issues being still present on (some)
    OC2, so apparently, this change does not do what it was supposed to do.
    Maybe the eMMC signal quality is on the edge on the board. This may
    explain the variability we see in term of stability, but this is just a
    guess. Lowering the max_frequency to 100Mhz seems to do trick for those
    affected by the issue
    
    Worse, the commit created new issues (CRC errors and hangs) on other
    boards, such as the kvim 1 and 2, the p200 or the libretech-cc.
    
    According to amlogic, the Tx phase should not be tuned and left in its
    default configuration, so it is best to just revert the commit.
    
    Fixes: 0a44697627d1 ("mmc: meson-gx: include tx phase in the tuning process")
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8012ff8779378a650aab3d088239053bfbdc57f
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Mon Feb 12 21:13:44 2018 +0100

    mmc: bcm2835: Don't overwrite max frequency unconditionally
    
    commit 118032be389009b07ecb5a03ffe219a89d421def upstream.
    
    The optional DT parameter max-frequency could init the max bus frequency.
    So take care of this, before setting the max bus frequency.
    
    Fixes: 660fc733bd74 ("mmc: bcm2835: Add new driver for the sdhost controller.")
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Cc: <stable@vger.kernel.org> # 4.12+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1341cac93fa9d54f49f5fedf7a577bfc7a7665c
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jan 29 00:44:53 2018 +0100

    mmc: sdhci: Implement an SDHCI-specific bounce buffer
    
    commit bd9b902798ab14d19ca116b10bde581ddff8f905 upstream.
    
    The bounce buffer is gone from the MMC core, and now we found out
    that there are some (crippled) i.MX boards out there that have broken
    ADMA (cannot do scatter-gather), and also broken PIO so they must
    use SDMA. Closer examination shows a less significant slowdown
    also on SDMA-only capable Laptop hosts.
    
    SDMA sets down the number of segments to one, so that each segment
    gets turned into a singular request that ping-pongs to the block
    layer before the next request/segment is issued.
    
    Apparently it happens a lot that the block layer send requests
    that include a lot of physically discontiguous segments. My guess
    is that this phenomenon is coming from the file system.
    
    These devices that cannot handle scatterlists in hardware can see
    major benefits from a DMA-contiguous bounce buffer.
    
    This patch accumulates those fragmented scatterlists in a physically
    contiguous bounce buffer so that we can issue bigger DMA data chunks
    to/from the card.
    
    When tested with a PCI-integrated host (1217:8221) that
    only supports SDMA:
    0b:00.0 SD Host controller: O2 Micro, Inc. OZ600FJ0/OZ900FJ0/OZ600FJS
            SD/MMC Card Reader Controller (rev 05)
    This patch gave ~1Mbyte/s improved throughput on large reads and
    writes when testing using iozone than without the patch.
    
    dmesg:
    sdhci-pci 0000:0b:00.0: SDHCI controller found [1217:8221] (rev 5)
    mmc0 bounce up to 128 segments into one, max segment size 65536 bytes
    mmc0: SDHCI controller on PCI [0000:0b:00.0] using DMA
    
    On the i.MX SDHCI controllers on the crippled i.MX 25 and i.MX 35
    the patch restores the performance to what it was before we removed
    the bounce buffers.
    
    Cc: Pierre Ossman <pierre@ossman.eu>
    Cc: BenoÃ®t ThÃ©baudeau <benoit@wsystem.com>
    Cc: Fabio Estevam <fabio.estevam@nxp.com>
    Cc: Benjamin Beckmeyer <beckmeyer.b@rittal.de>
    Cc: stable@vger.kernel.org # v4.14+
    Fixes: de3ee99b097d ("mmc: Delete bounce buffer handling")
    Tested-by: Benjamin Beckmeyer <beckmeyer.b@rittal.de>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e96a219899740432662b58c60a93505ab3dced5c
Author: Alexander Potapenko <glider@google.com>
Date:   Sun Jan 7 16:22:35 2018 -0500

    mbcache: initialize entry->e_referenced in mb_cache_entry_create()
    
    commit 3876bbe27d04b848750d5310a37d6b76b593f648 upstream.
    
    KMSAN reported use of uninitialized |entry->e_referenced| in a condition
    in mb_cache_shrink():
    
    ==================================================================
    BUG: KMSAN: use of uninitialized memory in mb_cache_shrink+0x3b4/0xc50 fs/mbcache.c:287
    CPU: 2 PID: 816 Comm: kswapd1 Not tainted 4.11.0-rc5+ #2877
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs
    01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:16 [inline]
     dump_stack+0x172/0x1c0 lib/dump_stack.c:52
     kmsan_report+0x12a/0x180 mm/kmsan/kmsan.c:927
     __msan_warning_32+0x61/0xb0 mm/kmsan/kmsan_instr.c:469
     mb_cache_shrink+0x3b4/0xc50 fs/mbcache.c:287
     mb_cache_scan+0x67/0x80 fs/mbcache.c:321
     do_shrink_slab mm/vmscan.c:397 [inline]
     shrink_slab+0xc3d/0x12d0 mm/vmscan.c:500
     shrink_node+0x208f/0x2fd0 mm/vmscan.c:2603
     kswapd_shrink_node mm/vmscan.c:3172 [inline]
     balance_pgdat mm/vmscan.c:3289 [inline]
     kswapd+0x160f/0x2850 mm/vmscan.c:3478
     kthread+0x46c/0x5f0 kernel/kthread.c:230
     ret_from_fork+0x29/0x40 arch/x86/entry/entry_64.S:430
    chained origin:
     save_stack_trace+0x37/0x40 arch/x86/kernel/stacktrace.c:59
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:302 [inline]
     kmsan_save_stack mm/kmsan/kmsan.c:317 [inline]
     kmsan_internal_chain_origin+0x12a/0x1f0 mm/kmsan/kmsan.c:547
     __msan_store_shadow_origin_1+0xac/0x110 mm/kmsan/kmsan_instr.c:257
     mb_cache_entry_create+0x3b3/0xc60 fs/mbcache.c:95
     ext4_xattr_cache_insert fs/ext4/xattr.c:1647 [inline]
     ext4_xattr_block_set+0x4c82/0x5530 fs/ext4/xattr.c:1022
     ext4_xattr_set_handle+0x1332/0x20a0 fs/ext4/xattr.c:1252
     ext4_xattr_set+0x4d2/0x680 fs/ext4/xattr.c:1306
     ext4_xattr_trusted_set+0x8d/0xa0 fs/ext4/xattr_trusted.c:36
     __vfs_setxattr+0x703/0x790 fs/xattr.c:149
     __vfs_setxattr_noperm+0x27a/0x6f0 fs/xattr.c:180
     vfs_setxattr fs/xattr.c:223 [inline]
     setxattr+0x6ae/0x790 fs/xattr.c:449
     path_setxattr+0x1eb/0x380 fs/xattr.c:468
     SYSC_lsetxattr+0x8d/0xb0 fs/xattr.c:490
     SyS_lsetxattr+0x77/0xa0 fs/xattr.c:486
     entry_SYSCALL_64_fastpath+0x13/0x94
    origin:
     save_stack_trace+0x37/0x40 arch/x86/kernel/stacktrace.c:59
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:302 [inline]
     kmsan_internal_poison_shadow+0xb1/0x1a0 mm/kmsan/kmsan.c:198
     kmsan_kmalloc+0x7f/0xe0 mm/kmsan/kmsan.c:337
     kmem_cache_alloc+0x1c2/0x1e0 mm/slub.c:2766
     mb_cache_entry_create+0x283/0xc60 fs/mbcache.c:86
     ext4_xattr_cache_insert fs/ext4/xattr.c:1647 [inline]
     ext4_xattr_block_set+0x4c82/0x5530 fs/ext4/xattr.c:1022
     ext4_xattr_set_handle+0x1332/0x20a0 fs/ext4/xattr.c:1252
     ext4_xattr_set+0x4d2/0x680 fs/ext4/xattr.c:1306
     ext4_xattr_trusted_set+0x8d/0xa0 fs/ext4/xattr_trusted.c:36
     __vfs_setxattr+0x703/0x790 fs/xattr.c:149
     __vfs_setxattr_noperm+0x27a/0x6f0 fs/xattr.c:180
     vfs_setxattr fs/xattr.c:223 [inline]
     setxattr+0x6ae/0x790 fs/xattr.c:449
     path_setxattr+0x1eb/0x380 fs/xattr.c:468
     SYSC_lsetxattr+0x8d/0xb0 fs/xattr.c:490
     SyS_lsetxattr+0x77/0xa0 fs/xattr.c:486
     entry_SYSCALL_64_fastpath+0x13/0x94
    ==================================================================
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Cc: stable@vger.kernel.org # v4.6
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3bdd547042fa2e71825d7cc5e871b558d4153e9
Author: Stewart Smith <stewart@linux.vnet.ibm.com>
Date:   Tue Aug 2 11:50:16 2016 +1000

    rtc-opal: Fix handling of firmware error codes, prevent busy loops
    
    commit 5b8b58063029f02da573120ef4dc9079822e3cda upstream.
    
    According to the OPAL docs:
      skiboot-5.2.5/doc/opal-api/opal-rtc-read-3.txt
      skiboot-5.2.5/doc/opal-api/opal-rtc-write-4.txt
    
    OPAL_HARDWARE may be returned from OPAL_RTC_READ or OPAL_RTC_WRITE and
    this indicates either a transient or permanent error.
    
    Prior to this patch, Linux was not dealing with OPAL_HARDWARE being a
    permanent error particularly well, in that you could end up in a busy
    loop.
    
    This was not too hard to trigger on an AMI BMC based OpenPOWER machine
    doing a continuous "ipmitool mc reset cold" to the BMC, the result of
    that being that we'd get stuck in an infinite loop in
    opal_get_rtc_time().
    
    We now retry a few times before returning the error higher up the
    stack.
    
    Fixes: 16b1d26e77b1 ("rtc/tpo: Driver to support rtc and wakeup on PowerNV platform")
    Cc: stable@vger.kernel.org # v3.19+
    Signed-off-by: Stewart Smith <stewart@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a29adc04cb6d5ec4ac71c63ceeb67efc011a4b65
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Sat Jan 27 15:28:15 2018 +0100

    drm/radeon: adjust tested variable
    
    commit 3a61b527b4e1f285d21b6e9e623dc45cf8bb391f upstream.
    
    Check the variable that was most recently initialized.
    
    The semantic match that finds this problem is as follows:
    (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @@
    expression x, y, f, g, e, m;
    statement S1,S2,S3,S4;
    @@
    
    x = f(...);
    if (\(<+...x...+>\&e\)) S1 else S2
    (
    x = g(...);
    |
    m = g(...,&x,...);
    |
    y = g(...);
    *if (e)
     S3 else S4
    )
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 808700475218f382591313acabd4812c30ec7fa3
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Nov 21 12:09:38 2017 -0500

    drm/radeon: Add dpm quirk for Jet PRO (v2)
    
    commit 239b5f64e12b1f09f506c164dff0374924782979 upstream.
    
    Fixes stability issues.
    
    v2: clamp sclk to 600 Mhz
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=103370
    Acked-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 254d48c8cc3b1f478f2c75349930da6e12abdd39
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Sun Feb 11 19:16:15 2018 -0600

    arm64: Add missing Falkor part number for branch predictor hardening
    
    commit 16e574d762ac5512eb922ac0ac5eed360b7db9d8 upstream.
    
    References to CPU part number MIDR_QCOM_FALKOR were dropped from the
    mailing list patch due to mainline/arm64 branch dependency. So this
    patch adds the missing part number.
    
    Fixes: ec82b567a74f ("arm64: Implement branch predictor hardening for Falkor")
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a6d687e5d9e603f7188ca2ee88040c5fdd03dd
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Jan 18 16:40:16 2018 +0100

    drm/ast: Load lut in crtc_commit
    
    commit 24b8ef699e8221d2b7f813adaab13eec053e1507 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
        drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Cc: Bill Fraser <bill.fraser@gmail.com>
    Reported-and-Tested-by: Bill Fraser <bill.fraser@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc2b0e41fc5e6d11fe4539317e57cf84c67cd18d
Author: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
Date:   Wed Jan 17 17:24:13 2018 -0500

    drm/amd/powerplay: Fix smu_table_entry.handle type
    
    commit adab595d16abe48e9c097f000bf8921d35b28fb7 upstream.
    
    The handle describes kernel logical address, should be
    unsigned long and not uint32_t.
    Fixes KASAN error and GFP on driver unload.
    
    Reviewed-by: Rex Zhu <Rex.Zhu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b51521c9a191083033d3d8d7174e41d33b71a9bf
Author: Ray Strode <rstrode@redhat.com>
Date:   Mon Nov 27 16:50:09 2017 -0500

    drm/qxl: unref cursor bo when finished with it
    
    commit 16c6db3688734b27487a42d0c2a1062d0b2bad03 upstream.
    
    qxl_cursor_atomic_update allocs a bo for the cursor that
    it never frees up at the end of the function.
    
    This commit fixes that.
    
    Signed-off-by: Ray Strode <rstrode@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15cdc016f109e2b8b7ede8c68c413c9b97c09fa8
Author: Tom St Denis <tom.stdenis@amd.com>
Date:   Fri Jan 26 09:32:29 2018 -0500

    drm/ttm: Fix 'buf' pointer update in ttm_bo_vm_access_kmap() (v2)
    
    commit 95244db2d3f743f37e69446a2807dd1a42750542 upstream.
    
    The buf pointer was not being incremented inside the loop
    meaning the same block of data would be read or written
    repeatedly.
    (v2) Change 'buf' pointer to uint8_t* type
    
    Cc: stable@vger.kernel.org
    Fixes: 09ac4fcb3f25 ("drm/ttm: Implement vm_operations_struct.access v2")
    
    Signed-off-by: Tom St Denis <tom.stdenis@amd.com>
    Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f02c3f7f6d30fb7d0f245594c7d4a033763baa67
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Jan 17 23:52:03 2018 -0500

    drm/ttm: Don't add swapped BOs to swap-LRU list
    
    commit fd5002d6a3c602664b07668a24df4ef7a43bf078 upstream.
    
    A BO that's already swapped would be added back to the swap-LRU list
    for example if its validation failed under high memory pressure. This
    could later lead to swapping it out again and leaking previous swap
    storage.
    
    This commit adds a condition to prevent that from happening.
    
    v2: Check page_flags instead of swap_storage
    
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c0398cfebf5d3f6d5ebc6924a3faf26a12935f4
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 14 08:39:11 2018 +0100

    x86/entry/64: Fix CR3 restore in paranoid_exit()
    
    commit e48657573481a5dff7cfdc3d57005c80aa816500 upstream.
    
    Josh Poimboeuf noticed the following bug:
    
     "The paranoid exit code only restores the saved CR3 when it switches back
      to the user GS.  However, even in the kernel GS case, it's possible that
      it needs to restore a user CR3, if for example, the paranoid exception
      occurred in the syscall exit path between SWITCH_TO_USER_CR3_STACK and
      SWAPGS."
    
    Josh also confirmed via targeted testing that it's possible to hit this bug.
    
    Fix the bug by also restoring CR3 in the paranoid_exit_no_swapgs branch.
    
    The reason we haven't seen this bug reported by users yet is probably because
    "paranoid" entry points are limited to the following cases:
    
     idtentry double_fault       do_double_fault  has_error_code=1  paranoid=2
     idtentry debug              do_debug         has_error_code=0  paranoid=1 shift_ist=DEBUG_STACK
     idtentry int3               do_int3          has_error_code=0  paranoid=1 shift_ist=DEBUG_STACK
     idtentry machine_check      do_mce           has_error_code=0  paranoid=1
    
    Amongst those entry points only machine_check is one that will interrupt an
    IRQS-off critical section asynchronously - and machine check events are rare.
    
    The other main asynchronous entries are NMI entries, which can be very high-freq
    with perf profiling, but they are special: they don't use the 'idtentry' macro but
    are open coded and restore user CR3 unconditionally so don't have this bug.
    
    Reported-and-tested-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20180214073910.boevmg65upbk3vqb@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 231d0c70be748bba8982b6bda3daa613bf5c8a29
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Tue Feb 13 13:22:08 2018 -0600

    x86/cpu: Change type of x86_cache_size variable to unsigned int
    
    commit 24dbc6000f4b9b0ef5a9daecb161f1907733765a upstream.
    
    Currently, x86_cache_size is of type int, which makes no sense as we
    will never have a valid cache size equal or less than 0. So instead of
    initializing this variable to -1, it can perfectly be initialized to 0
    and use it as an unsigned variable instead.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Addresses-Coverity-ID: 1464429
    Link: http://lkml.kernel.org/r/20180213192208.GA26414@embeddedor.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d7ebee6ce113fff252f1b923fbbbad83b1221b8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 14 10:14:17 2018 +0300

    x86/spectre: Fix an error message
    
    commit 9de29eac8d2189424d81c0d840cd0469aa3d41c8 upstream.
    
    If i == ARRAY_SIZE(mitigation_options) then we accidentally print
    garbage from one space beyond the end of the mitigation_options[] array.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: KarimAllah Ahmed <karahmed@amazon.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kernel-janitors@vger.kernel.org
    Fixes: 9005c6834c0f ("x86/spectre: Simplify spectre_v2 command line parsing")
    Link: http://lkml.kernel.org/r/20180214071416.GA26677@mwanda
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 325cbb04dc61692ba01445c34fd551ad91df9e6d
Author: Jia Zhang <qianyue.zj@alibaba-inc.com>
Date:   Mon Jan 1 09:52:10 2018 +0800

    x86/cpu: Rename cpu_data.x86_mask to cpu_data.x86_stepping
    
    commit b399151cb48db30ad1e0e93dd40d68c6d007b637 upstream.
    
    x86_mask is a confusing name which is hard to associate with the
    processor's stepping.
    
    Additionally, correct an indent issue in lib/cpu.c.
    
    Signed-off-by: Jia Zhang <qianyue.zj@alibaba-inc.com>
    [ Updated it to more recent kernels. ]
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bp@alien8.de
    Cc: tony.luck@intel.com
    Link: http://lkml.kernel.org/r/1514771530-70829-1-git-send-email-qianyue.zj@alibaba-inc.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73f231c7ee696cdc53ee0922e6d3bf0480a5ae90
Author: Rui Wang <rui.y.wang@intel.com>
Date:   Mon Dec 18 16:34:10 2017 +0800

    selftests/x86/mpx: Fix incorrect bounds with old _sigfault
    
    commit 961888b1d76d84efc66a8f5604b06ac12ac2f978 upstream.
    
    For distributions with old userspace header files, the _sigfault
    structure is different. mpx-mini-test fails with the following
    error:
    
      [root@Purley]# mpx-mini-test_64 tabletest
      XSAVE is supported by HW & OS
      XSAVE processor supported state mask: 0x2ff
      XSAVE OS supported state mask: 0x2ff
       BNDREGS: size: 64 user: 1 supervisor: 0 aligned: 0
        BNDCSR: size: 64 user: 1 supervisor: 0 aligned: 0
      starting mpx bounds table test
      ERROR: siginfo bounds do not match shadow bounds for register 0
    
    Fix it by using the correct offset of _lower/_upper in _sigfault.
    RHEL needs this patch to work.
    
    Signed-off-by: Rui Wang <rui.y.wang@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dave.hansen@linux.intel.com
    Fixes: e754aedc26ef ("x86/mpx, selftests: Add MPX self test")
    Link: http://lkml.kernel.org/r/1513586050-1641-1-git-send-email-rui.y.wang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 208beef6d8f223a0cc57e2fcecc9ca28fc778f50
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Jan 31 08:03:10 2018 -0800

    x86/mm: Rename flush_tlb_single() and flush_tlb_one() to __flush_tlb_one_[user|kernel]()
    
    commit 1299ef1d8870d2d9f09a5aadf2f8b2c887c2d033 upstream.
    
    flush_tlb_single() and flush_tlb_one() sound almost identical, but
    they really mean "flush one user translation" and "flush one kernel
    translation".  Rename them to flush_tlb_one_user() and
    flush_tlb_one_kernel() to make the semantics more obvious.
    
    [ I was looking at some PTI-related code, and the flush-one-address code
      is unnecessarily hard to understand because the names of the helpers are
      uninformative.  This came up during PTI review, but no one got around to
      doing it. ]
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linux-MM <linux-mm@kvack.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Link: http://lkml.kernel.org/r/3303b02e3c3d049dc5235d5651e0ae6d29a34354.1517414378.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6d0c0a618a15ba4dadd7ad6131a814359a53973
Author: Michal Hocko <mhocko@suse.com>
Date:   Wed Dec 6 11:27:57 2017 +0100

    kmemcheck: rip it out for real
    
    commit f335195adf043168ee69d78ea72ac3e30f0c57ce upstream.
    
    Commit 4675ff05de2d ("kmemcheck: rip it out") has removed the code but
    for some reason SPDX header stayed in place.  This looks like a rebase
    mistake in the mmotm tree or the merge mistake.  Let's drop those
    leftovers as well.
    
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f369f1486116b0f3e9630a2481addde6854df541
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:36:02 2017 -0800

    kmemcheck: rip it out
    
    commit 4675ff05de2d76d167336b368bd07f3fef6ed5a6 upstream.
    
    Fix up makefiles, remove references, and git rm kmemcheck.
    
    Link: http://lkml.kernel.org/r/20171007030159.22241-4-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9870f85817ebb331d7496d50a0b99088e240e20
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:35:58 2017 -0800

    kmemcheck: remove whats left of NOTRACK flags
    
    commit d8be75663cec0069b85f80191abd2682ce4a512f upstream.
    
    Now that kmemcheck is gone, we don't need the NOTRACK flags.
    
    Link: http://lkml.kernel.org/r/20171007030159.22241-5-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae63fd26b2d81eaaf3cf35693dc01c0148bd7a9b
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:35:54 2017 -0800

    kmemcheck: stop using GFP_NOTRACK and SLAB_NOTRACK
    
    commit 75f296d93bcebcfe375884ddac79e30263a31766 upstream.
    
    Convert all allocations that used a NOTRACK flag to stop using it.
    
    Link: http://lkml.kernel.org/r/20171007030159.22241-3-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2abfcdf8e77d3719aa1d37b1f9de800fa596eda3
Author: Levin, Alexander (Sasha Levin) <alexander.levin@verizon.com>
Date:   Wed Nov 15 17:35:51 2017 -0800

    kmemcheck: remove annotations
    
    commit 4950276672fce5c241857540f8561c440663673d upstream.
    
    Patch series "kmemcheck: kill kmemcheck", v2.
    
    As discussed at LSF/MM, kill kmemcheck.
    
    KASan is a replacement that is able to work without the limitation of
    kmemcheck (single CPU, slow).  KASan is already upstream.
    
    We are also not aware of any users of kmemcheck (or users who don't
    consider KASan as a suitable replacement).
    
    The only objection was that since KASAN wasn't supported by all GCC
    versions provided by distros at that time we should hold off for 2
    years, and try again.
    
    Now that 2 years have passed, and all distros provide gcc that supports
    KASAN, kill kmemcheck again for the very same reasons.
    
    This patch (of 4):
    
    Remove kmemcheck annotations, and calls to kmemcheck from the kernel.
    
    [alexander.levin@verizon.com: correctly remove kmemcheck call from dma_map_sg_attrs]
      Link: http://lkml.kernel.org/r/20171012192151.26531-1-alexander.levin@verizon.com
    Link: http://lkml.kernel.org/r/20171007030159.22241-2-alexander.levin@verizon.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tim Hansen <devtimhansen@gmail.com>
    Cc: Vegard Nossum <vegardno@ifi.uio.no>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fed58f610b57c1190862819eba6f7bc5396b08d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Feb 13 14:28:19 2018 +0100

    x86/speculation: Add <asm/msr-index.h> dependency
    
    commit ea00f301285ea2f07393678cd2b6057878320c9d upstream.
    
    Joe Konno reported a compile failure resulting from using an MSR
    without inclusion of <asm/msr-index.h>, and while the current code builds
    fine (by accident) this needs fixing for future patches.
    
    Reported-by: Joe Konno <joe.konno@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan@linux.intel.com
    Cc: bp@alien8.de
    Cc: dan.j.williams@intel.com
    Cc: dave.hansen@linux.intel.com
    Cc: dwmw2@infradead.org
    Cc: dwmw@amazon.co.uk
    Cc: gregkh@linuxfoundation.org
    Cc: hpa@zytor.com
    Cc: jpoimboe@redhat.com
    Cc: linux-tip-commits@vger.kernel.org
    Cc: luto@kernel.org
    Fixes: 20ffa1caecca ("x86/speculation: Add basic IBPB (Indirect Branch Prediction Barrier) support")
    Link: http://lkml.kernel.org/r/20180213132819.GJ25201@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b4cdbbb29d4eb34f02d5e1419789b53c3cbb930
Author: Will Deacon <will@kernel.org>
Date:   Mon Feb 5 14:16:06 2018 +0000

    nospec: Move array_index_nospec() parameter checking into separate macro
    
    commit 8fa80c503b484ddc1abbd10c7cb2ab81f3824a50 upstream.
    
    For architectures providing their own implementation of
    array_index_mask_nospec() in asm/barrier.h, attempting to use WARN_ONCE() to
    complain about out-of-range parameters using WARN_ON() results in a mess
    of mutually-dependent include files.
    
    Rather than unpick the dependencies, simply have the core code in nospec.h
    perform the checking for us.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/1517840166-15399-1-git-send-email-will.deacon@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d4cb4dc7a110ef253e99808b66b45c726ba5596
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Feb 6 18:22:40 2018 -0800

    x86/speculation: Fix up array_index_nospec_mask() asm constraint
    
    commit be3233fbfcb8f5acb6e3bcd0895c3ef9e100d470 upstream.
    
    Allow the compiler to handle @size as an immediate value or memory
    directly rather than allocating a register.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151797010204.1289.1510000292250184993.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41d315482500e9612d1906b7a057fbe9c4b6c676
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Feb 9 13:16:59 2018 +0100

    x86/debug: Use UD2 for WARN()
    
    commit 3b3a371cc9bc980429baabe0a8e5f307f3d1f463 upstream.
    
    Since the Intel SDM added an ModR/M byte to UD0 and binutils followed
    that specification, we now cannot disassemble our kernel anymore.
    
    This now means Intel and AMD disagree on the encoding of UD0. And instead
    of playing games with additional bytes that are valid ModR/M and single
    byte instructions (0xd6 for instance), simply use UD2 for both WARN() and
    BUG().
    
    Requested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180208194406.GD25181@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e0067c22d6b38a7b882e560b3db4c103166575e
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Feb 8 17:09:26 2018 -0600

    x86/debug, objtool: Annotate WARN()-related UD2 as reachable
    
    commit 2b5db66862b95532cb6cca8165ae6eb73633cf85 upstream.
    
    By default, objtool assumes that a UD2 is a dead end.  This is mainly
    because GCC 7+ sometimes inserts a UD2 when it detects a divide-by-zero
    condition.
    
    Now that WARN() is moving back to UD2, annotate the code after it as
    reachable so objtool can follow the code flow.
    
    Reported-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kbuild test robot <fengguang.wu@intel.com>
    Link: http://lkml.kernel.org/r/0e483379275a42626ba8898117f918e1bf661e40.1518130694.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 842a0d95ef16d8e3f85cd5316efc8c25934ff3ce
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Feb 8 17:09:25 2018 -0600

    objtool: Fix segfault in ignore_unreachable_insn()
    
    commit fe24e27128252c230a34a6c628da2bf1676781ea upstream.
    
    Peter Zijlstra's patch for converting WARN() to use UD2 triggered a
    bunch of false "unreachable instruction" warnings, which then triggered
    a seg fault in ignore_unreachable_insn().
    
    The seg fault happened when it tried to dereference a NULL 'insn->func'
    pointer.  Thanks to static_cpu_has(), some functions can jump to a
    non-function area in the .altinstr_aux section.  That breaks
    ignore_unreachable_insn()'s assumption that it's always inside the
    original function.
    
    Make sure ignore_unreachable_insn() only follows jumps within the
    current function.
    
    Reported-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kbuild test robot <fengguang.wu@intel.com>
    Link: http://lkml.kernel.org/r/bace77a60d5af9b45eddb8f8fb9c776c8de657ef.1518130694.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 410d273ecc8ed1f30ef0d06acb2d22ffa29cd732
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Tue Feb 13 09:15:19 2018 +0100

    selftests/x86: Disable tests requiring 32-bit support on pure 64-bit systems
    
    commit 9279ddf23ce78ff2676e8e8e19fec0f022c26d04 upstream.
    
    The ldt_gdt and ptrace_syscall selftests, even in their 64-bit variant, use
    hard-coded 32-bit syscall numbers and call "int $0x80".
    
    This will fail on 64-bit systems with CONFIG_IA32_EMULATION=y disabled.
    
    Therefore, do not build these tests if we cannot build 32-bit binaries
    (which should be a good approximation for CONFIG_IA32_EMULATION=y being enabled).
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-6-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8520ea2a043842b3b52d95210ee774ed16748ef5
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Tue Feb 13 09:13:21 2018 +0100

    selftests/x86: Do not rely on "int $0x80" in single_step_syscall.c
    
    commit 4105c69703cdeba76f384b901712c9397b04e9c2 upstream.
    
    On 64-bit builds, we should not rely on "int $0x80" working (it only does if
    CONFIG_IA32_EMULATION=y is enabled). To keep the "Set TF and check int80"
    test running on 64-bit installs with CONFIG_IA32_EMULATION=y enabled, build
    this test only if we can also build 32-bit binaries (which should be a
    good approximation for that).
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-5-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf4db6342da4c433b814ccdad0461e1ca7477695
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 12:10:11 2018 +0100

    selftests/x86: Do not rely on "int $0x80" in test_mremap_vdso.c
    
    commit 2cbc0d66de0480449c75636f55697c7ff3af61fc upstream.
    
    On 64-bit builds, we should not rely on "int $0x80" working (it only does if
    CONFIG_IA32_EMULATION=y is enabled).
    
    Without this patch, the move test may succeed, but the "int $0x80" causes
    a segfault, resulting in a false negative output of this self-test.
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-4-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6eced764e1a18665212c349f100188a337d8fa8
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Feb 13 08:26:17 2018 +0100

    selftests/x86/pkeys: Remove unused functions
    
    commit ce676638fe7b284132a7d7d5e7e7ad81bab9947e upstream.
    
    This also gets rid of two build warnings:
    
      protection_keys.c: In function âdumpitâ:
      protection_keys.c:419:3: warning: ignoring return value of âwriteâ, declared with attribute warn_unused_result [-Wunused-result]
         write(1, buf, nr_read);
         ^~~~~~~~~~~~~~~~~~~~~~
    
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Shuah Khan <shuahkh@osg.samsung.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eb95d5187a3df8c0aa1d5f531a6b9f567fcd9a7
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 21:59:24 2018 +0100

    selftests/x86: Clean up and document sscanf() usage
    
    commit d8e92de8ef952bed88c56c7a44c02d8dcae0984e upstream.
    
    Replace a couple of magically connected buffer length literal constants with
    a common definition that makes their relationship obvious. Also document
    why our sscanf() usage is safe.
    
    No intended functional changes.
    
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andrew Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211205924.GA23210@light.dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 301e6fe0915c8b2eab4da812de4f16c583e5b113
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 12:10:10 2018 +0100

    selftests/x86: Fix vDSO selftest segfault for vsyscall=none
    
    commit 198ee8e17502da2634f7366395db1d77630e0219 upstream.
    
    The vDSO selftest tries to execute a vsyscall unconditionally, even if it
    is not present on the test system (e.g. if booted with vsyscall=none or
    with CONFIG_LEGACY_VSYSCALL_NONE=y set. Fix this by copying (and tweaking)
    the vsyscall check from test_vsyscall.c
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andrew Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Cc: shuah@kernel.org
    Link: http://lkml.kernel.org/r/20180211111013.16888-3-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cf7b883bcbaca7b85002770915e39eb6d510309
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Feb 12 21:13:18 2018 +0100

    x86/entry/64: Remove the unused 'icebp' macro
    
    commit b498c261107461d5c42140dfddd05df83d8ca078 upstream.
    
    That macro was touched around 2.5.8 times, judging by the full history
    linux repo, but it was unused even then. Get rid of it already.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux@dominikbrodowski.net
    Link: http://lkml.kernel.org/r/20180212201318.GD14640@pd.tnic
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdcf05c64a64743f512f12b17d4f9d8b14d2ad31
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Feb 12 11:45:03 2018 -0600

    x86/entry/64: Fix paranoid_entry() frame pointer warning
    
    commit b3ccefaed922529e6a67de7b30af5aa38c76ace9 upstream.
    
    With the following commit:
    
      f09d160992d1 ("x86/entry/64: Get rid of the ALLOC_PT_GPREGS_ON_STACK and SAVE_AND_CLEAR_REGS macros")
    
    ... one of my suggested improvements triggered a frame pointer warning:
    
      arch/x86/entry/entry_64.o: warning: objtool: paranoid_entry()+0x11: call without frame pointer save/setup
    
    The warning is correct for the build-time code, but it's actually not
    relevant at runtime because of paravirt patching.  The paravirt swapgs
    call gets replaced with either a SWAPGS instruction or NOPs at runtime.
    
    Go back to the previous behavior by removing the ELF function annotation
    for paranoid_entry() and adding an unwind hint, which effectively
    silences the warning.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kbuild-all@01.org
    Cc: tipbuild@zytor.com
    Fixes: f09d160992d1 ("x86/entry/64: Get rid of the ALLOC_PT_GPREGS_ON_STACK and SAVE_AND_CLEAR_REGS macros")
    Link: http://lkml.kernel.org/r/20180212174503.5acbymg5z6p32snu@treble
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a816dd2fa2dcbde206bc67ebbdf8bbf75a54936c
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:48 2018 +0100

    x86/entry/64: Indent PUSH_AND_CLEAR_REGS and POP_REGS properly
    
    commit 92816f571af81e9a71cc6f3dc8ce1e2fcdf7b6b8 upstream.
    
    ... same as the other macros in arch/x86/entry/calling.h
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-8-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de66c3a3b0a6403702d6d6ead20ccd38bae615d7
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:47 2018 +0100

    x86/entry/64: Get rid of the ALLOC_PT_GPREGS_ON_STACK and SAVE_AND_CLEAR_REGS macros
    
    commit dde3036d62ba3375840b10ab9ec0d568fd773b07 upstream.
    
    Previously, error_entry() and paranoid_entry() saved the GP registers
    onto stack space previously allocated by its callers. Combine these two
    steps in the callers, and use the generic PUSH_AND_CLEAR_REGS macro
    for that.
    
    This adds a significant amount ot text size. However, Ingo Molnar points
    out that:
    
            "these numbers also _very_ significantly over-represent the
            extra footprint. The assumptions that resulted in
            us compressing the IRQ entry code have changed very
            significantly with the new x86 IRQ allocation code we
            introduced in the last year:
    
            - IRQ vectors are usually populated in tightly clustered
              groups.
    
              With our new vector allocator code the typical per CPU
              allocation percentage on x86 systems is ~3 device vectors
              and ~10 fixed vectors out of ~220 vectors - i.e. a very
              low ~6% utilization (!). [...]
    
              The days where we allocated a lot of vectors on every
              CPU and the compression of the IRQ entry code text
              mattered are over.
    
            - Another issue is that only a small minority of vectors
              is frequent enough to actually matter to cache utilization
              in practice: 3-4 key IPIs and 1-2 device IRQs at most - and
              those vectors tend to be tightly clustered as well into about
              two groups, and are probably already on 2-3 cache lines in
              practice.
    
              For the common case of 'cache cold' IRQs it's the depth of
              the call chain and the fragmentation of the resulting I$
              that should be the main performance limit - not the overall
              size of it.
    
            - The CPU side cost of IRQ delivery is still very expensive
              even in the best, most cached case, as in 'over a thousand
              cycles'. So much stuff is done that maybe contemporary x86
              IRQ entry microcode already prefetches the IDT entry and its
              expected call target address."[*]
    
    [*] http://lkml.kernel.org/r/20180208094710.qnjixhm6hybebdv7@gmail.com
    
    The "testb $3, CS(%rsp)" instruction in the idtentry macro does not need
    modification. Previously, %rsp was manually decreased by 15*8; with
    this patch, %rsp is decreased by 15 pushq instructions.
    
    [jpoimboe@redhat.com: unwind hint improvements]
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-7-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd25388691c041903c084c68dc7da0fc45265d98
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:46 2018 +0100

    x86/entry/64: Use PUSH_AND_CLEAN_REGS in more cases
    
    commit 30907fd13bb593202574bb20af58d67c70a1ee14 upstream.
    
    entry_SYSCALL_64_after_hwframe() and nmi() can be converted to use
    PUSH_AND_CLEAN_REGS instead of opencoded variants thereof. Due to
    the interleaving, the additional XOR-based clearing of R8 and R9
    in entry_SYSCALL_64_after_hwframe() should not have any noticeable
    negative implications.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-6-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ce4863a44ff4e7e8d48d480853eea79cfd27bf6
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:45 2018 +0100

    x86/entry/64: Introduce the PUSH_AND_CLEAN_REGS macro
    
    commit 3f01daecd545e818098d84fd1ad43e19a508d705 upstream.
    
    Those instances where ALLOC_PT_GPREGS_ON_STACK is called just before
    SAVE_AND_CLEAR_REGS can trivially be replaced by PUSH_AND_CLEAN_REGS.
    This macro uses PUSH instead of MOV and should therefore be faster, at
    least on newer CPUs.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-5-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47d9c905ae7af1c16b58a41be627a74027f5b601
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:44 2018 +0100

    x86/entry/64: Interleave XOR register clearing with PUSH instructions
    
    commit f7bafa2b05ef25eda1d9179fd930b0330cf2b7d1 upstream.
    
    Same as is done for syscalls, interleave XOR with PUSH instructions
    for exceptions/interrupts, in order to minimize the cost of the
    additional instructions required for register clearing.
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-4-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb68735527648cc3439bcacab5e6a30ab8219c46
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:43 2018 +0100

    x86/entry/64: Merge the POP_C_REGS and POP_EXTRA_REGS macros into a single POP_REGS macro
    
    commit 502af0d70843c2a9405d7ba1f79b4b0305aaf5f5 upstream.
    
    The two special, opencoded cases for POP_C_REGS can be handled by ASM
    macros.
    
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-3-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51209eec238ffd1b4edec999a024159bbae51a3d
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Feb 11 11:49:42 2018 +0100

    x86/entry/64: Merge SAVE_C_REGS and SAVE_EXTRA_REGS, remove unused extensions
    
    commit 2e3f0098bc45f710a2f4cbcc94b80a1fae7a99a1 upstream.
    
    All current code paths call SAVE_C_REGS and then immediately
    SAVE_EXTRA_REGS. Therefore, merge these two macros and order the MOV
    sequeneces properly.
    
    While at it, remove the macros to save all except specific registers,
    as these macros have been unused for a long time.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dan.j.williams@intel.com
    Link: http://lkml.kernel.org/r/20180211104949.12992-2-linux@dominikbrodowski.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d10d0bb86d974c41ccbbf1f22044e700597a84d0
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Feb 5 17:18:11 2018 -0800

    x86/entry/64: Clear registers for exceptions/interrupts, to reduce speculation attack surface
    
    commit 3ac6d8c787b835b997eb23e43e09aa0895ef7d58 upstream.
    
    Clear the 'extra' registers on entering the 64-bit kernel for exceptions
    and interrupts. The common registers are not cleared since they are
    likely clobbered well before they can be exploited in a speculative
    execution attack.
    
    Originally-From: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151787989146.7847.15749181712358213254.stgit@dwillia2-desk3.amr.corp.intel.com
    [ Made small improvements to the changelog and the code comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e578fedba81e72e195fe71f893828d4597714db5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 12 11:34:22 2018 +0100

    PM: cpuidle: Fix cpuidle_poll_state_init() prototype
    
    commit d7212cfb05ba802bea4dd6c90d61cfe6366ea224 upstream.
    
    Commit f85942207516 (x86: PM: Make APM idle driver initialize polling
    state) made apm_init() call cpuidle_poll_state_init(), but that only
    is defined for CONFIG_CPU_IDLE set, so make the empty stub of it
    available for CONFIG_CPU_IDLE unset too to fix the resulting build
    issue.
    
    Fixes: f85942207516 (x86: PM: Make APM idle driver initialize polling state)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c59cce7943dff0fbafcaa4e71149ee1da879d03f
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Feb 10 19:13:58 2018 +0100

    PM / runtime: Update links_count also if !CONFIG_SRCU
    
    commit 433986c2c265d106d6a8e88006e0131fefc92b7b upstream.
    
    Commit baa8809f6097 (PM / runtime: Optimize the use of device links)
    added an invocation of pm_runtime_drop_link() to __device_link_del().
    However there are two variants of that function, one for CONFIG_SRCU and
    another for !CONFIG_SRCU, and the commit only modified the former.
    
    Fixes: baa8809f6097 (PM / runtime: Optimize the use of device links)
    Cc: v4.10+ <stable@vger.kernel.org> # v4.10+
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2efd067aa4ef25386d4abbe2fe9b2c7f22cd9302
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Feb 13 09:03:08 2018 +0100

    x86/speculation: Clean up various Spectre related details
    
    commit 21e433bdb95bdf3aa48226fd3d33af608437f293 upstream.
    
    Harmonize all the Spectre messages so that a:
    
        dmesg | grep -i spectre
    
    ... gives us most Spectre related kernel boot messages.
    
    Also fix a few other details:
    
     - clarify a comment about firmware speculation control
    
     - s/KPTI/PTI
    
     - remove various line-breaks that made the code uglier
    
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a15bdf6579b23f62bb0130941158dd2f9b94f079
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Sat Feb 10 23:39:26 2018 +0000

    KVM/nVMX: Set the CPU_BASED_USE_MSR_BITMAPS if we have a valid L02 MSR bitmap
    
    commit 3712caeb14dcb33fb4d5114f14c0beef10aca101 upstream.
    
    We either clear the CPU_BASED_USE_MSR_BITMAPS and end up intercepting all
    MSR accesses or create a valid L02 MSR bitmap and use that. This decision
    has to be made every time we evaluate whether we are going to generate the
    L02 MSR bitmap.
    
    Before commit:
    
      d28b387fb74d ("KVM/VMX: Allow direct access to MSR_IA32_SPEC_CTRL")
    
    ... this was probably OK since the decision was always identical.
    
    This is no longer the case now since the MSR bitmap might actually
    change once we decide to not intercept SPEC_CTRL and PRED_CMD.
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim KrÄmÃ¡Å <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: kvm@vger.kernel.org
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-6-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a3a99ed7f99d207328fae0da73c83be0799722
Author: KarimAllah Ahmed <karahmed@amazon.de>
Date:   Sat Feb 10 23:39:25 2018 +0000

    X86/nVMX: Properly set spec_ctrl and pred_cmd before merging MSRs
    
    commit 206587a9fb764d71f035dc7f6d3b6488f5d5b304 upstream.
    
    These two variables should check whether SPEC_CTRL and PRED_CMD are
    supposed to be passed through to L2 guests or not. While
    msr_write_intercepted_l01 would return 'true' if it is not passed through.
    
    So just invert the result of msr_write_intercepted_l01 to implement the
    correct semantics.
    
    Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim KrÄmÃ¡Å <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: kvm@vger.kernel.org
    Cc: sironi@amazon.de
    Fixes: 086e7d4118cc ("KVM: VMX: Allow direct access to MSR_IA32_SPEC_CTRL")
    Link: http://lkml.kernel.org/r/1518305967-31356-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 474bd0b82e24e8b928910aba876c20c49098ae6d
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:24 2018 +0000

    KVM/x86: Reduce retpoline performance impact in slot_handle_level_range(), by always inlining iterator helper methods
    
    commit 928a4c39484281f8ca366f53a1db79330d058401 upstream.
    
    With retpoline, tight loops of "call this function for every XXX" are
    very much pessimised by taking a prediction miss *every* time. This one
    is by far the biggest contributor to the guest launch time with retpoline.
    
    By marking the iterator slot_handle_â¦() functions always_inline, we can
    ensure that the indirect function call can be optimised away into a
    direct call and it actually generates slightly smaller code because
    some of the other conditionals can get optimised away too.
    
    Performance is now pretty close to what we see with nospectre_v2 on
    the command line.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Filippo Sironi <sironi@amazon.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Filippo Sironi <sironi@amazon.de>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1518305967-31356-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdc69a2ffa0105c1e736fbe4bfaa0b53bd3e915f
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:23 2018 +0000

    Revert "x86/speculation: Simplify indirect_branch_prediction_barrier()"
    
    commit f208820a321f9b23d77d7eed89945d862d62a3ed upstream.
    
    This reverts commit 64e16720ea0879f8ab4547e3b9758936d483909b.
    
    We cannot call C functions like that, without marking all the
    call-clobbered registers as, well, clobbered. We might have got away
    with it for now because the __ibp_barrier() function was *fairly*
    unlikely to actually use any other registers. But no. Just no.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-3-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7451cb6159a573736cf674e586c75daabd62ae5
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 12 15:27:34 2018 +0000

    x86/speculation: Correct Speculation Control microcode blacklist again
    
    commit d37fc6d360a404b208547ba112e7dabb6533c7fc upstream.
    
    Arjan points out that the Intel document only clears the 0xc2 microcode
    on *some* parts with CPUID 506E3 (INTEL_FAM6_SKYLAKE_DESKTOP stepping 3).
    For the Skylake H/S platform it's OK but for Skylake E3 which has the
    same CPUID it isn't (yet) cleared.
    
    So removing it from the blacklist was premature. Put it back for now.
    
    Also, Arjan assures me that the 0x84 microcode for Kaby Lake which was
    featured in one of the early revisions of the Intel document was never
    released to the public, and won't be until/unless it is also validated
    as safe. So those can change to 0x80 which is what all *other* versions
    of the doc have identified.
    
    Once the retrospective testing of existing public microcodes is done, we
    should be back into a mode where new microcodes are only released in
    batches and we shouldn't even need to update the blacklist for those
    anyway, so this tweaking of the list isn't expected to be a thing which
    keeps happening.
    
    Requested-by: Arjan van de Ven <arjan.van.de.ven@intel.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: dave.hansen@intel.com
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Link: http://lkml.kernel.org/r/1518449255-2182-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5a1b559235a38d527e8e363a325705fa0325602
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Feb 10 23:39:22 2018 +0000

    x86/speculation: Update Speculation Control microcode blacklist
    
    commit 1751342095f0d2b36fa8114d8e12c5688c455ac4 upstream.
    
    Intel have retroactively blessed the 0xc2 microcode on Skylake mobile
    and desktop parts, and the Gemini Lake 0x22 microcode is apparently fine
    too. We blacklisted the latter purely because it was present with all
    the other problematic ones in the 2018-01-08 release, but now it's
    explicitly listed as OK.
    
    We still list 0x84 for the various Kaby Lake / Coffee Lake parts, as
    that appeared in one version of the blacklist and then reverted to
    0x80 again. We can change it if 0x84 is actually announced to be safe.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: arjan.van.de.ven@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: sironi@amazon.de
    Link: http://lkml.kernel.org/r/1518305967-31356-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 372ed448263dcc733f4ef3d24d704d2f016d734c
Author: Nadav Amit <namit@vmware.com>
Date:   Fri Feb 9 09:06:38 2018 -0800

    x86/mm/pti: Fix PTI comment in entry_SYSCALL_64()
    
    commit 14b1fcc62043729d12e8ae00f8297ab2ffe9fa91 upstream.
    
    The comment is confusing since the path is taken when
    CONFIG_PAGE_TABLE_ISOLATION=y is disabled (while the comment says it is not
    taken).
    
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: nadav.amit@gmail.com
    Link: http://lkml.kernel.org/r/20180209170638.15161-1-namit@vmware.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b973685e70c3b418ad46a03d6a9c81554c5c4ba2
Author: Balbir Singh <bsingharora@gmail.com>
Date:   Wed Feb 7 17:35:51 2018 +1100

    powerpc/mm/radix: Split linear mapping on hot-unplug
    
    commit 4dd5f8a99e791a8c6500e3592f3ce81ae7edcde1 upstream.
    
    This patch splits the linear mapping if the hot-unplug range is
    smaller than the mapping size. The code detects if the mapping needs
    to be split into a smaller size and if so, uses the stop machine
    infrastructure to clear the existing mapping and then remap the
    remaining range using a smaller page size.
    
    The code will skip any region of the mapping that overlaps with kernel
    text and warn about it once. We don't want to remove a mapping where
    the kernel text and the LMB we intend to remove overlap in the same
    TLB mapping as it may affect the currently executing code.
    
    I've tested these changes under a kvm guest with 2 vcpus, from a split
    mapping point of view, some of the caveats mentioned above applied to
    the testing I did.
    
    Fixes: 4b5d62ca17a1 ("powerpc/mm: add radix__remove_section_mapping()")
    Signed-off-by: Balbir Singh <bsingharora@gmail.com>
    [mpe: Tweak change log to match updated behaviour]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14d87b710338145e46940d0f751c5b7dd5b4c38f
Author: Artem Savkov <artem.savkov@gmail.com>
Date:   Tue Feb 6 22:20:22 2018 +0100

    crypto: sun4i_ss_prng - convert lock to _bh in sun4i_ss_prng_generate
    
    commit 2e7d1d61ea6c0f1c4da5eb82cafac750d55637a7 upstream.
    
    Lockdep detects a possible deadlock in sun4i_ss_prng_generate() and
    throws an "inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage" warning.
    Disabling softirqs to fix this.
    
    Fixes: b8ae5c7387ad ("crypto: sun4i-ss - support the Security System PRNG")
    Signed-off-by: Artem Savkov <artem.savkov@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3d33c5f296b36a05e24828f96c8ea5e02a15b06
Author: Artem Savkov <artem.savkov@gmail.com>
Date:   Tue Feb 6 22:20:21 2018 +0100

    crypto: sun4i_ss_prng - fix return value of sun4i_ss_prng_generate
    
    commit dd78c832ffaf86eb6434e56de4bc3bc31f03f771 upstream.
    
    According to crypto/rng.h generate function should return 0 on success
    and < 0 on error.
    
    Fixes: b8ae5c7387ad ("crypto: sun4i-ss - support the Security System PRNG")
    Signed-off-by: Artem Savkov <artem.savkov@gmail.com>
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fff8ad7c18a238a32a56056980fccd40ed8cce83
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Feb 1 11:21:59 2018 +0100

    compiler-gcc.h: __nostackprotector needs gcc-4.4 and up
    
    commit d9afaaa4ff7af8b87d4a205e48cb8a6f666d7f01 upstream.
    
    Gcc versions before 4.4 do not recognize the __optimize__ compiler
    attribute:
    
        warning: â__optimize__â attribute directive ignored
    
    Fixes: 7375ae3a0b79ea07 ("compiler-gcc.h: Introduce __nostackprotector function attribute")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 045e5161abfcfefce5b2777788e5913d85bb5c6f
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Feb 1 11:21:58 2018 +0100

    compiler-gcc.h: Introduce __optimize function attribute
    
    commit df5d45aa08f848b79caf395211b222790534ccc7 upstream.
    
    Create a new function attribute __optimize, which allows to specify an
    optimization level on a per-function basis.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec35f83de1c80e4decdbda0d61cd1f8924ae606f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Feb 5 17:18:17 2018 -0800

    x86/entry/64/compat: Clear registers for compat syscalls, to reduce speculation attack surface
    
    commit 6b8cf5cc9965673951f1ab3f0e3cf23d06e3e2ee upstream.
    
    At entry userspace may have populated registers with values that could
    otherwise be useful in a speculative execution attack. Clear them to
    minimize the kernel's attack surface.
    
    Originally-From: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151787989697.7847.4083702787288600552.stgit@dwillia2-desk3.amr.corp.intel.com
    [ Made small improvements to the changelog. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bc19b518cb25150572ae4fe34ea6d623d733e2e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Feb 5 17:18:05 2018 -0800

    x86/entry/64: Clear extra registers beyond syscall arguments, to reduce speculation attack surface
    
    commit 8e1eb3fa009aa7c0b944b3c8b26b07de0efb3200 upstream.
    
    At entry userspace may have (maliciously) populated the extra registers
    outside the syscall calling convention with arbitrary values that could
    be useful in a speculative execution (Spectre style) attack.
    
    Clear these registers to minimize the kernel's attack surface.
    
    Note, this only clears the extra registers and not the unused
    registers for syscalls less than 6 arguments, since those registers are
    likely to be clobbered well before their values could be put to use
    under speculation.
    
    Note, Linus found that the XOR instructions can be executed with
    minimized cost if interleaved with the PUSH instructions, and Ingo's
    analysis found that R10 and R11 should be included in the register
    clearing beyond the typical 'extra' syscall calling convention
    registers.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/151787988577.7847.16733592218894189003.stgit@dwillia2-desk3.amr.corp.intel.com
    [ Made small improvements to the changelog and the code comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43d38b079ca7466a9eebf2936584e091f8c20349
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Feb 6 18:55:12 2018 +0100

    x86: PM: Make APM idle driver initialize polling state
    
    commit f859422075165e32c00c8d75d63f300015cc07ae upstream.
    
    Update the APM driver overlooked by commit 1b39e3f813b4 (cpuidle: Make
    drivers initialize polling state) to initialize the polling state like
    the other cpuidle drivers modified by that commit to prevent cpuidle
    from crashing.
    
    Fixes: 1b39e3f813b4 (cpuidle: Make drivers initialize polling state)
    Reported-by: Ville SyrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>
    Tested-by: Ville SyrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>
    Cc: 4.14+ <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41fd295d90a7d8518f3d3d705884fb05df9596f0
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Feb 1 13:40:19 2018 +0100

    x86/xen: init %gs very early to avoid page faults with stack protector
    
    commit 4f277295e54c5b7340e48efea3fc5cc21a2872b7 upstream.
    
    When running as Xen pv guest %gs is initialized some time after
    C code is started. Depending on stack protector usage this might be
    too late, resulting in page faults.
    
    So setup %gs and MSR_GS_BASE in assembly code already.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Chris Patterson <cjp256@gmail.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04f048fad32e191d48c1a260d6aa74e27cfe846e
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Jan 29 14:08:45 2018 +0300

    x86/kexec: Make kexec (mostly) work in 5-level paging mode
    
    commit 5bf30316991d5bcda046343ee77d823cf16fdd03 upstream.
    
    Currently kexec() will crash when switching into a 5-level paging
    enabled kernel.
    
    I missed that we need to change relocate_kernel() to set CR4.LA57
    flag if the kernel has 5-level paging enabled.
    
    I avoided using #ifdef CONFIG_X86_5LEVEL here and inferred if we need to
    enable 5-level paging from previous CR4 value. This way the code is
    ready for boot-time switching between paging modes.
    
    With this patch applied, in addition to kexec 4-to-4 which always worked,
    we can kexec 4-to-5 and 5-to-5 - while 5-to-4 will need more work.
    
    Reported-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Tested-by: Baoquan He <bhe@redhat.com>
    Cc: <stable@vger.kernel.org> # v4.14+
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Fixes: 77ef56e4f0fb ("x86: Enable 5-level paging support via CONFIG_X86_5LEVEL=y")
    Link: http://lkml.kernel.org/r/20180129110845.26633-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe1e5ec1c27115afdaf245cc1a8b42765448381
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Wed Dec 13 12:04:25 2017 -0800

    x86/gpu: add CFL to early quirks
    
    commit 33aa69ed8aacd92dea12671e52eb3ca6ac2d7a49 upstream.
    
    CFL was missing from intel_early_ids[]. The PCI ID needs to be there to
    allow the memory region to be stolen, otherwise we could have RAM being
    arbitrarily overwritten if for example we keep using the UEFI framebuffer,
    depending on how BIOS has set up the e820 map.
    
    Fixes: b056f8f3d6b9 ("drm/i915/cfl: Add Coffee Lake PCI IDs for S Skus.")
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Anusha Srivatsa <anusha.srivatsa@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org
    Cc: <stable@vger.kernel.org> # v4.13+ 0890540e21cf drm/i915: add GT number to intel_device_info
    Cc: <stable@vger.kernel.org> # v4.13+ 41693fd52373 drm/i915/kbl: Change a KBL pci id to GT2 from GT1.5
    Cc: <stable@vger.kernel.org> # v4.13+
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171213200425.2954-1-lucas.demarchi@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba86431b7b588d887aca002596a42890edee9bd0
Author: Anuj Phogat <anuj.phogat@gmail.com>
Date:   Wed Sep 20 13:31:26 2017 -0700

    drm/i915/kbl: Change a KBL pci id to GT2 from GT1.5
    
    commit 41693fd5237397d3c61b311af0fda1f6f39297c2 upstream.
    
    See Mesa commit 9c588ff
    
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Anuj Phogat <anuj.phogat@gmail.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170920203126.1323-1-anuj.phogat@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc2759b7bb7c55a4bed674a8223c89a8b88fb3d7
Author: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Date:   Wed Aug 30 17:12:05 2017 +0100

    drm/i915: add GT number to intel_device_info
    
    commit 0890540e21cf1156b4cf960a4c1c734db4e816f9 upstream.
    
    Up to Coffeelake we could deduce this GT number from the device ID.
    This doesn't seem to be the case anymore. This change reorders pciids
    per GT and adds a gt field to intel_device_info. We set this field on
    the following platforms :
    
       - SNB/IVB/HSW/BDW/SKL/KBL/CFL/CNL
    
    Before & After :
    
    $ modinfo drivers/gpu/drm/i915/i915.ko | grep ^alias | wc -l
    209
    
    v2: Add SNB & IVB (Chris)
    
    v3: Fix compilation error in early-quirks (Lionel)
    
    v4: Fix inconsistency between FEATURE/PLATFORM macros (Ville)
    
    Signed-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170830161208.29221-2-lionel.g.landwerlin@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce6ec5b8dc5a15b830022dd6ee5a040ead0debb9
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:53 2018 +0530

    arm: spear13xx: Fix spics gpio controller's warning
    
    commit f8975cb1b8a36d0839b6365235778dd9df1d04ca upstream.
    
    This fixes the following warning by also sending the flags argument for
    gpio controllers:
    
    Property 'cs-gpios', cell 6 is not a phandle reference in
    /ahb/apb/spi@e0100000
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Cc: stable@vger.kernel.org # v3.8+
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 349d03cb5378e97e6bfd4fed5c78d3bab115b36e
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:52 2018 +0530

    arm: spear13xx: Fix dmas cells
    
    commit cdd10409914184c7eee5ae3e11beb890c9c16c61 upstream.
    
    The "dmas" cells for the designware DMA controller need to have only 3
    properties apart from the phandle: request line, src master and
    destination master. But the commit 6e8887f60f60 updated it incorrectly
    while moving from platform code to DT. Fix it.
    
    Cc: stable@vger.kernel.org # v3.10+
    Fixes: 6e8887f60f60 ("ARM: SPEAr13xx: Pass generic DW DMAC platform data from DT")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1637c1236d0e0240277b616f94882022cd2a55e
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Jan 11 11:28:51 2018 +0530

    arm: spear600: Add missing interrupt-parent of rtc
    
    commit 6ffb5b4f248fe53e0361b8cbc2a523b432566442 upstream.
    
    The interrupt-parent of rtc was missing, add it.
    
    Fixes: 8113ba917dfa ("ARM: SPEAr: DT: Update device nodes")
    Cc: stable@vger.kernel.org # v3.8+
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbcc2ff13af5664804f0c2622aff9159f79f249f
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Dec 7 14:43:24 2017 +0800

    arm: dts: mt7623: fix card detection issue on bananapi-r2
    
    commit b96a696fb2a8dd1ee4e6cfee48dcac270fc53287 upstream.
    
    Fix that bananapi-r2 booting from SD-card would fail since incorrect
    polarity is applied to the previous setup with GPIO_ACTIVE_HIGH.
    
    Cc: stable@vger.kernel.org
    Fixes: 0eed8d097612 ("arm: dts: mt7623: Add SD-card and EMMC to bananapi-r2")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Tested-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be1965486122417edcd95893e8414902696e8e11
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jan 15 17:37:08 2018 +0100

    ARM: dts: nomadik: add interrupt-parent for clcd
    
    commit e8bfa0422469cdfc86be3f525f621b1d44d2481b upstream.
    
    The clcd device is lacking an interrupt-parent property, which makes
    the interrupt unusable and shows up as a warning with the latest
    dtc version:
    
    arch/arm/boot/dts/ste-nomadik-s8815.dtb: Warning (interrupts_property): Missing interrupt-parent for /amba/clcd@10120000
    arch/arm/boot/dts/ste-nomadik-nhk15.dtb: Warning (interrupts_property): Missing interrupt-parent for /amba/clcd@10120000
    
    I looked up the old board files and found that this interrupt has
    the same irqchip as all the other on-chip device, it just needs one
    extra line.
    
    Fixes: 17470b7da11c ("ARM: dts: add the CLCD LCD display to the NHK15")
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be4b2f6d024c89affe63360475fba9b167d7230
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Wed Jan 10 09:21:02 2018 +0100

    ARM: dts: STi: Add gpio polarity for "hdmi,hpd-gpio" property
    
    commit 7ac1f59c09a61e6af6622df6809e003b0af07f3d upstream.
    
    The GPIO polarity is missing in the hdmi,hpd-gpio property, this
    fixes the following DT warnings:
    
    arch/arm/boot/dts/stih410-b2120.dtb: Warning (gpios_property): hdmi,hpd-gpio property
    size (8) too small for cell size 2 in /soc/sti-display-subsystem/sti-hdmi@8d04000
    
    arch/arm/boot/dts/stih407-b2120.dtb: Warning (gpios_property): hdmi,hpd-gpio property
    size (8) too small for cell size 2 in /soc/sti-display-subsystem/sti-hdmi@8d04000
    
    arch/arm/boot/dts/stih410-b2260.dtb: Warning (gpios_property): hdmi,hpd-gpio property
    size (8) too small for cell size 2 in /soc/sti-display-subsystem/sti-hdmi@8d04000
    
    [arnd: marked Cc:stable since this warning shows up with the latest dtc
           by default, and is more likely to actually cause problems than the
           other patches from this series]
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34d58f7ccb65c9a2d2c9221b282e556e08e5a801
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 10 17:22:00 2018 +0100

    ARM: lpc3250: fix uda1380 gpio numbers
    
    commit ca32e0c4bf9ca4b87089c5a5ce945e5f2ec890da upstream.
    
    dtc warns about obviously incorrect GPIO numbers for the audio codec
    on both lpc32xx boards:
    
    arch/arm/boot/dts/lpc3250-phy3250.dtb: Warning (gpios_property): reset-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    arch/arm/boot/dts/lpc3250-phy3250.dtb: Warning (gpios_property): power-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    arch/arm/boot/dts/lpc3250-ea3250.dtb: Warning (gpios_property): reset-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    arch/arm/boot/dts/lpc3250-ea3250.dtb: Warning (gpios_property): power-gpio property size (12) too small for cell size 3 in /ahb/apb/i2c@400A0000/uda1380@18
    
    It looks like the nodes are written for a different binding that combines
    the GPIO number into a single number rather than a bank/number pair.
    I found the right numbers on stackexchange.com, so this patch fixes
    the warning and has a reasonable chance of getting things to actually
    work.
    
    Cc: stable@vger.kernel.org
    Link: https://unix.stackexchange.com/questions/59497/alsa-asoc-how-to-correctly-load-devices-drivers/62217#62217
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd420093636759d081bb31b343807efc5bbc58d3
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Nov 30 21:27:32 2017 -0800

    arm64: dts: msm8916: Correct ipc references for smsm
    
    commit 566bd8902e7fa20bd412ed753e09e89c1c96939c upstream.
    
    SMSM is not symmetrical, the incoming bits from WCNSS are available at
    index 6, but the outgoing host id for WCNSS is 3. Further more, upstream
    references the base of APCS (in contrast to downstream), so the register
    offset of 8 must be included.
    
    Fixes: 1fb47e0a9ba4 ("arm64: dts: qcom: msm8916: Add smsm and smp2p nodes")
    Cc: stable@vger.kernel.org
    Reported-by: Ramon Fried <rfried@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27f97375fcb86750cdf82a65dab8174bb991c238
Author: Eugene Syromiatnikov <esyr@redhat.com>
Date:   Mon Jan 15 20:38:17 2018 +0100

    s390: fix handling of -1 in set{,fs}[gu]id16 syscalls
    
    commit 6dd0d2d22aa363fec075cb2577ba273ac8462e94 upstream.
    
    For some reason, the implementation of some 16-bit ID system calls
    (namely, setuid16/setgid16 and setfsuid16/setfsgid16) used type cast
    instead of low2highgid/low2highuid macros for converting [GU]IDs, which
    led to incorrect handling of value of -1 (which ought to be considered
    invalid).
    
    Discovered by strace test suite.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Eugene Syromiatnikov <esyr@redhat.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f25dfc9359cc5e173a5b94e407c6417f5889c9c6
Author: Christian KÃ¶nig <ckoenig.leichtzumerken@gmail.com>
Date:   Mon Jan 22 21:00:03 2018 +0100

    dma-buf: fix reservation_object_wait_timeout_rcu once more v2
    
    commit 5bffee867df7494ecd32c1e6ec4e8fc934c521b7 upstream.
    
    We need to set shared_count even if we already have a fence to wait for.
    
    v2: init i to -1 as well
    
    Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Cc: stable@vger.kernel.org
    Tested-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180122200003.6665-1-christian.koenig@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40be210c830e80642ce5f4e3d726864ec22d5f50
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Nov 10 12:15:00 2017 +1100

    powerpc: Fix DABR match on hash based systems
    
    commit f23ab3efb1b30cc5c5ef5ae4ef294ed467f30675 upstream.
    
    Commit 398a719d34a1 ("powerpc/mm: Update bits used to skip hash_page")
    mistakenly dropped the DSISR_DABRMATCH bit from the mask of bit tested
    to skip trying to hash a page.
    
    As a result, the DABR matches would no longer be detected.
    
    This adds it back. We open code it in the 2 places where it matters
    rather than fold it into DSISR_BAD_FAULT_32S/64S because this isn't
    technically a bad fault and while we would never hit it with the
    current code, I prefer if page_fault_is_bad() didn't trigger on these.
    
    Fixes: 398a719d34a1 ("powerpc/mm: Update bits used to skip hash_page")
    Cc: stable@vger.kernel.org # v4.14
    Tested-by: Pedro Miraglia Franco de Carvalho <pedromfc@br.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b09911d3beb326a117bfb05c717c3021e5458ca
Author: CÃ©dric Le Goater <clg@kaod.org>
Date:   Tue Feb 13 09:47:12 2018 +0100

    powerpc/xive: Use hw CPU ids when configuring the CPU queues
    
    commit 8e036c8d30a2cd9d8fc7442fbf6824e0a3e986e7 upstream.
    
    The CPU event notification queues on sPAPR should be configured using
    a hardware CPU identifier.
    
    The problem did not show up on the Power Hypervisor because pHyp
    supports 8 threads per core which keeps CPU number contiguous. This is
    not the case on all sPAPR virtual machines, some use SMT=1.
    
    Also improve error logging by adding the CPU number.
    
    Fixes: eac1e731b59e ("powerpc/xive: guest exploitation of the XIVE interrupt controller")
    Cc: stable@vger.kernel.org # v4.14+
    Signed-off-by: CÃ©dric Le Goater <clg@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 892674b5058a2b15d35d1185f5d09d8f4c257a7e
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Thu Feb 1 16:09:44 2018 +1100

    powerpc/mm: Flush radix process translations when setting MMU type
    
    commit 62e984ddfd6b056d399e24113f5e6a7145e579d8 upstream.
    
    Radix guests do normally invalidate process-scoped translations when a
    new pid is allocated but migrated guests do not invalidate these so
    migrated guests crash sometime, especially easy to reproduce with
    migration happening within first 10 seconds after the guest boot start
    on the same machine.
    
    This adds the "Invalidate process-scoped translations" flush to fix
    radix guests migration.
    
    Fixes: 2ee13be34b13 ("KVM: PPC: Book3S HV: Update kvmppc_set_arch_compat() for ISA v3.00")
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Tested-by: Laurent Vivier <lvivier@redhat.com>
    Tested-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4386f223b41868197080bd74882c2d31aca92a1a
Author: Nathan Fontenot <nfont@linux.vnet.ibm.com>
Date:   Fri Jan 26 13:41:59 2018 -0600

    powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove
    
    commit 1d9a090783bef19fe8cdec878620d22f05191316 upstream.
    
    When DLPAR removing a CPU, the unmapping of the cpu from a node in
    unmap_cpu_from_node() should also invalidate the CPUs entry in the
    numa_cpu_lookup_table. There is not a guarantee that on a subsequent
    DLPAR add of the CPU the associativity will be the same and thus
    could be in a different node. Invalidating the entry in the
    numa_cpu_lookup_table causes the associativity to be read from the
    device tree at the time of the add.
    
    The current behavior of not invalidating the CPUs entry in the
    numa_cpu_lookup_table can result in scenarios where the the topology
    layout of CPUs in the partition does not match the device tree
    or the topology reported by the HMC.
    
    This bug looks like it was introduced in 2004 in the commit titled
    "ppc64: cpu hotplug notifier for numa", which is 6b15e4e87e32 in the
    linux-fullhist tree. Hence tag it for all stable releases.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b98d31481f9e216e6df6b31e5a959db259c055e
Author: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
Date:   Thu Nov 30 14:35:54 2017 +0530

    powerpc/radix: Remove trace_tlbie call from radix__flush_tlb_all
    
    commit 8d81296cfcce89013a714feb8d25004a156f8181 upstream.
    
    radix__flush_tlb_all() is called only in kexec path in real mode and any
    tracepoints at this stage will make kexec to fail if enabled.
    
    To verify enable tlbie trace before kexec.
    
    $ echo 1 > /sys/kernel/debug/tracing/events/powerpc/tlbie/enable
    == kexec into new kernel and kexec fails.
    
    Fix this by not calling trace_tlbie from radix__flush_tlb_all().
    
    Fixes: 0428491cba92 ("powerpc/mm: Trace tlbie(l) instructions")
    Cc: stable@vger.kernel.org # v4.13+
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e7e8bd8f19550c56ebc56158f60626546b7c564
Author: Gang He <ghe@suse.com>
Date:   Wed Jan 31 16:14:48 2018 -0800

    ocfs2: try a blocking lock before return AOP_TRUNCATED_PAGE
    
    commit ff26cc10aec128c3f86b5611fd5f59c71d49c0e3 upstream.
    
    If we can't get inode lock immediately in the function
    ocfs2_inode_lock_with_page() when reading a page, we should not return
    directly here, since this will lead to a softlockup problem when the
    kernel is configured with CONFIG_PREEMPT is not set.  The method is to
    get a blocking lock and immediately unlock before returning, this can
    avoid CPU resource waste due to lots of retries, and benefits fairness
    in getting lock among multiple nodes, increase efficiency in case
    modifying the same file frequently from multiple nodes.
    
    The softlockup crash (when set /proc/sys/kernel/softlockup_panic to 1)
    looks like:
    
      Kernel panic - not syncing: softlockup: hung tasks
      CPU: 0 PID: 885 Comm: multi_mmap Tainted: G L 4.12.14-6.1-default #1
      Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
      Call Trace:
        <IRQ>
        dump_stack+0x5c/0x82
        panic+0xd5/0x21e
        watchdog_timer_fn+0x208/0x210
        __hrtimer_run_queues+0xcc/0x200
        hrtimer_interrupt+0xa6/0x1f0
        smp_apic_timer_interrupt+0x34/0x50
        apic_timer_interrupt+0x96/0xa0
        </IRQ>
       RIP: 0010:unlock_page+0x17/0x30
       RSP: 0000:ffffaf154080bc88 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff10
       RAX: dead000000000100 RBX: fffff21e009f5300 RCX: 0000000000000004
       RDX: dead0000000000ff RSI: 0000000000000202 RDI: fffff21e009f5300
       RBP: 0000000000000000 R08: 0000000000000000 R09: ffffaf154080bb00
       R10: ffffaf154080bc30 R11: 0000000000000040 R12: ffff993749a39518
       R13: 0000000000000000 R14: fffff21e009f5300 R15: fffff21e009f5300
        ocfs2_inode_lock_with_page+0x25/0x30 [ocfs2]
        ocfs2_readpage+0x41/0x2d0 [ocfs2]
        filemap_fault+0x12b/0x5c0
        ocfs2_fault+0x29/0xb0 [ocfs2]
        __do_fault+0x1a/0xa0
        __handle_mm_fault+0xbe8/0x1090
        handle_mm_fault+0xaa/0x1f0
        __do_page_fault+0x235/0x4b0
        trace_do_page_fault+0x3c/0x110
        async_page_fault+0x28/0x30
       RIP: 0033:0x7fa75ded638e
       RSP: 002b:00007ffd6657db18 EFLAGS: 00010287
       RAX: 000055c7662fb700 RBX: 0000000000000001 RCX: 000055c7662fb700
       RDX: 0000000000001770 RSI: 00007fa75e909000 RDI: 000055c7662fb700
       RBP: 0000000000000003 R08: 000000000000000e R09: 0000000000000000
       R10: 0000000000000483 R11: 00007fa75ded61b0 R12: 00007fa75e90a770
       R13: 000000000000000e R14: 0000000000001770 R15: 0000000000000000
    
    About performance improvement, we can see the testing time is reduced,
    and CPU utilization decreases, the detailed data is as follows.  I ran
    multi_mmap test case in ocfs2-test package in a three nodes cluster.
    
    Before applying this patch:
        PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
       2754 ocfs2te+  20   0  170248   6980   4856 D 80.73 0.341   0:18.71 multi_mmap
       1505 root      rt   0  222236 123060  97224 S 2.658 6.015   0:01.44 corosync
          5 root      20   0       0      0      0 S 1.329 0.000   0:00.19 kworker/u8:0
         95 root      20   0       0      0      0 S 1.329 0.000   0:00.25 kworker/u8:1
       2728 root      20   0       0      0      0 S 0.997 0.000   0:00.24 jbd2/sda1-33
       2721 root      20   0       0      0      0 S 0.664 0.000   0:00.07 ocfs2dc-3C8CFD4
       2750 ocfs2te+  20   0  142976   4652   3532 S 0.664 0.227   0:00.28 mpirun
    
      ocfs2test@tb-node2:~>multiple_run.sh -i ens3 -k ~/linux-4.4.21-69.tar.gz -o ~/ocfs2mullog -C hacluster -s pcmk -n tb-node2,tb-node1,tb-node3 -d /dev/sda1 -b 4096 -c 32768 -t multi_mmap /mnt/shared
      Tests with "-b 4096 -C 32768"
      Thu Dec 28 14:44:52 CST 2017
      multi_mmap..................................................Passed.
      Runtime 783 seconds.
    
    After apply this patch:
    
        PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
       2508 ocfs2te+  20   0  170248   6804   4680 R 54.00 0.333   0:55.37 multi_mmap
        155 root      20   0       0      0      0 S 2.667 0.000   0:01.20 kworker/u8:3
         95 root      20   0       0      0      0 S 2.000 0.000   0:01.58 kworker/u8:1
       2504 ocfs2te+  20   0  142976   4604   3480 R 1.667 0.225   0:01.65 mpirun
          5 root      20   0       0      0      0 S 1.000 0.000   0:01.36 kworker/u8:0
       2482 root      20   0       0      0      0 S 1.000 0.000   0:00.86 jbd2/sda1-33
        299 root       0 -20       0      0      0 S 0.333 0.000   0:00.13 kworker/2:1H
        335 root       0 -20       0      0      0 S 0.333 0.000   0:00.17 kworker/1:1H
        535 root      20   0   12140   7268   1456 S 0.333 0.355   0:00.34 haveged
       1282 root      rt   0  222284 123108  97224 S 0.333 6.017   0:01.33 corosync
    
      ocfs2test@tb-node2:~>multiple_run.sh -i ens3 -k ~/linux-4.4.21-69.tar.gz -o ~/ocfs2mullog -C hacluster -s pcmk -n tb-node2,tb-node1,tb-node3 -d /dev/sda1 -b 4096 -c 32768 -t multi_mmap /mnt/shared
      Tests with "-b 4096 -C 32768"
      Thu Dec 28 15:04:12 CST 2017
      multi_mmap..................................................Passed.
      Runtime 487 seconds.
    
    Link: http://lkml.kernel.org/r/1514447305-30814-1-git-send-email-ghe@suse.com
    Fixes: 1cce4df04f37 ("ocfs2: do not lock/unlock() inode DLM lock")
    Signed-off-by: Gang He <ghe@suse.com>
    Reviewed-by: Eric Ren <zren@suse.com>
    Acked-by: alex chen <alex.chen@huawei.com>
    Acked-by: piaojun <piaojun@huawei.com>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ec4c78e3444c317c724820f0f40324e65470654
Author: Brian Norris <briannorris@chromium.org>
Date:   Fri Jan 12 13:08:37 2018 -0800

    mwifiex: resolve reset vs. remove()/shutdown() deadlocks
    
    commit a64e7a79dd6030479caad603c8d78e6c9c14904f upstream.
    
    Commit b014e96d1abb ("PCI: Protect pci_error_handlers->reset_notify()
    usage with device_lock()") resolves races between driver reset and
    removal, but it introduces some new deadlock problems. If we see a
    timeout while we've already started suspending, removing, or shutting
    down the driver, we might see:
    
    (a) a worker thread, running mwifiex_pcie_work() ->
        mwifiex_pcie_card_reset_work() -> pci_reset_function()
    (b) a removal thread, running mwifiex_pcie_remove() ->
        mwifiex_free_adapter() -> mwifiex_unregister() ->
        mwifiex_cleanup_pcie() -> cancel_work_sync(&card->work)
    
    Unfortunately, mwifiex_pcie_remove() already holds the device lock that
    pci_reset_function() is now requesting, and so we see a deadlock.
    
    It's necessary to cancel and synchronize our outstanding work before
    tearing down the driver, so we can't have this work wait indefinitely
    for the lock.
    
    It's reasonable to only "try" to reset here, since this will mostly
    happen for cases where it's already difficult to reset the firmware
    anyway (e.g., while we're suspending or powering off the system). And if
    reset *really* needs to happen, we can always try again later.
    
    Fixes: b014e96d1abb ("PCI: Protect pci_error_handlers->reset_notify() usage with device_lock()")
    Cc: <stable@vger.kernel.org>
    Cc: Xinming Hu <huxm@marvell.com>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62def1d604a5473055b1cce23b55b7639302710a
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Sun Nov 5 21:27:41 2017 -0800

    PM / devfreq: Propagate error from devfreq_add_device()
    
    commit d1bf2d30728f310f72296b54f0651ecdb09cbb12 upstream.
    
    Propagate the error of devfreq_add_device() in devm_devfreq_add_device()
    rather than statically returning ENOMEM. This makes it slightly faster
    to pinpoint the cause of a returned error.
    
    Fixes: 8cd84092d35e ("PM / devfreq: Add resource-managed function for devfreq device")
    Cc: stable@vger.kernel.org
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37efa60e167036b3eaed20e70095bbdcb72a55ce
Author: Christian KÃ¶nig <ckoenig.leichtzumerken@gmail.com>
Date:   Thu Jan 4 14:24:19 2018 +0100

    swiotlb: suppress warning when __GFP_NOWARN is set
    
    commit d0bc0c2a31c95002d37c3cc511ffdcab851b3256 upstream.
    
    TTM tries to allocate coherent memory in chunks of 2MB first to improve
    TLB efficiency and falls back to allocating 4K pages if that fails.
    
    Suppress the warning when the 2MB allocations fails since there is a
    valid fall back path.
    
    Signed-off-by: Christian KÃ¶nig <christian.koenig@amd.com>
    Reported-by: Mike Galbraith <efault@gmx.de>
    Acked-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=104082
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e56a935a4b751bc8cb5288480b23827f8d2564d
Author: Shilpasri G Bhat <shilpa.bhat@linux.vnet.ibm.com>
Date:   Fri Jan 12 12:43:53 2018 +0530

    cpufreq: powernv: Dont assume distinct pstate values for nominal and pmin
    
    commit 3fa4680b860bf48b437d6a2c039789c4abe202ae upstream.
    
    Some OpenPOWER boxes can have same pstate values for nominal and
    pmin pstates. In these boxes the current code will not initialize
    'powernv_pstate_info.min' variable and result in erroneous CPU
    frequency reporting. This patch fixes this problem.
    
    Fixes: 09ca4c9b5958 (cpufreq: powernv: Replacing pstate_id with frequency table index)
    Reported-by: Alvin Wang <wangat@tw.ibm.com>
    Signed-off-by: Shilpasri G Bhat <shilpa.bhat@linux.vnet.ibm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: 4.8+ <stable@vger.kernel.org> # 4.8+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75a3f11c7bad580dc5fbf4175f5dc39192f088d5
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Jan 12 15:11:59 2018 -0800

    RDMA/rxe: Fix rxe_qp_cleanup()
    
    commit bb3ffb7ad48a21e98a5c64eb21103a74fd9f03f6 upstream.
    
    rxe_qp_cleanup() can sleep so it must be run in thread context and
    not in atomic context. This patch avoids that the following bug is
    triggered:
    
    Kernel BUG at 00000000560033f3 [verbose debug info unavailable]
    BUG: sleeping function called from invalid context at net/core/sock.c:2761
    in_atomic(): 1, irqs_disabled(): 0, pid: 7, name: ksoftirqd/0
    INFO: lockdep is turned off.
    Preemption disabled at:
    [<00000000b6e69628>] __do_softirq+0x4e/0x540
    CPU: 0 PID: 7 Comm: ksoftirqd/0 Not tainted 4.15.0-rc7-dbg+ #4
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    Call Trace:
     dump_stack+0x85/0xbf
     ___might_sleep+0x177/0x260
     lock_sock_nested+0x1d/0x90
     inet_shutdown+0x2e/0xd0
     rxe_qp_cleanup+0x107/0x140 [rdma_rxe]
     rxe_elem_release+0x18/0x80 [rdma_rxe]
     rxe_requester+0x1cf/0x11b0 [rdma_rxe]
     rxe_do_task+0x78/0xf0 [rdma_rxe]
     tasklet_action+0x99/0x270
     __do_softirq+0xc0/0x540
     run_ksoftirqd+0x1c/0x70
     smpboot_thread_fn+0x1be/0x270
     kthread+0x117/0x130
     ret_from_fork+0x24/0x30
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 571cb36fac2f62bfe5fe7fa488f0ea7271db9c2f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Jan 12 15:11:58 2018 -0800

    RDMA/rxe: Fix a race condition in rxe_requester()
    
    commit 65567e41219888feec72fee1de98ccf1efbbc16d upstream.
    
    The rxe driver works as follows:
    * The send queue, receive queue and completion queues are implemented as
      circular buffers.
    * ib_post_send() and ib_post_recv() calls are serialized through a spinlock.
    * Removing elements from various queues happens from tasklet
      context. Tasklets are guaranteed to run on at most one CPU. This serializes
      access to these queues. See also rxe_completer(), rxe_requester() and
      rxe_responder().
    * rxe_completer() processes the skbs queued onto qp->resp_pkts.
    * rxe_requester() handles the send queue (qp->sq.queue).
    * rxe_responder() processes the skbs queued onto qp->req_pkts.
    
    Since rxe_drain_req_pkts() processes qp->req_pkts, calling
    rxe_drain_req_pkts() from rxe_requester() is racy. Hence this patch.
    
    Reported-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4e8a46d4cf2592910275dee6036ceb1d351975
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Jan 9 11:23:40 2018 -0800

    RDMA/rxe: Fix a race condition related to the QP error state
    
    commit 6f301e06de4cf9ab7303f5acd43e64fcd4aa04be upstream.
    
    The following sequence:
    * Change queue pair state into IB_QPS_ERR.
    * Post a work request on the queue pair.
    
    Triggers the following race condition in the rdma_rxe driver:
    * rxe_qp_error() triggers an asynchronous call of rxe_completer(), the function
      that examines the QP send queue.
    * rxe_post_send() posts a work request on the QP send queue.
    
    If rxe_completer() runs prior to rxe_post_send(), it will drain the send
    queue and the driver will assume no further action is necessary.
    However, once we post the send to the send queue, because the queue is
    in error, no send completion will ever happen and the send will get
    stuck.  In order to process the send, we need to make sure that
    rxe_completer() gets run after a send is posted to a queue pair in an
    error state.  This patch ensures that happens.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Moni Shoua <monis@mellanox.com>
    Cc: <stable@vger.kernel.org> # v4.8
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dd2dbdd4606fc44da2cbb59fcd1c560c3f3fb94
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 9 17:26:24 2018 +0100

    kselftest: fix OOM in memory compaction test
    
    commit 4c1baad223906943b595a887305f2e8124821dad upstream.
    
    Running the compaction_test sometimes results in out-of-memory
    failures. When I debugged this, it turned out that the code to
    reset the number of hugepages to the initial value is simply
    broken since we write into an open sysctl file descriptor
    multiple times without seeking back to the start.
    
    Adding the lseek here fixes the problem.
    
    Cc: stable@vger.kernel.org
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Link: https://bugs.linaro.org/show_bug.cgi?id=3145
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c2e7a048d19dce8b82e0dc169feb1721d856d37
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Fri Jan 5 17:31:18 2018 +0100

    selftests: seccomp: fix compile error seccomp_bpf
    
    commit 912ec316686df352028afb6efec59e47a958a24d upstream.
    
    aarch64-linux-gnu-gcc -Wl,-no-as-needed -Wall
        -lpthread seccomp_bpf.c -o seccomp_bpf
    seccomp_bpf.c: In function 'tracer_ptrace':
    seccomp_bpf.c:1720:12: error: '__NR_open' undeclared
        (first use in this function)
      if (nr == __NR_open)
                ^~~~~~~~~
    seccomp_bpf.c:1720:12: note: each undeclared identifier is reported
        only once for each function it appears in
    In file included from seccomp_bpf.c:48:0:
    seccomp_bpf.c: In function 'TRACE_syscall_ptrace_syscall_dropped':
    seccomp_bpf.c:1795:39: error: '__NR_open' undeclared
        (first use in this function)
      EXPECT_SYSCALL_RETURN(EPERM, syscall(__NR_open));
                                           ^
    open(2) is a legacy syscall, replaced with openat(2) since 2.6.16.
    Thus new architectures in the kernel, such as arm64, don't implement
    these legacy syscalls.
    
    Fixes: a33b2d0359a0 ("selftests/seccomp: Add tests for basic ptrace actions")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Tested-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Cc: stable@vger.kernel.org
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d6eb826e65d8b92d1f8cb081b33bb0786a5a4ab
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Thu Feb 1 12:31:06 2018 -0800

    IB/core: Avoid a potential OOPs for an unused optional parameter
    
    commit 2ff124d597c2df8696169ce0006fc974c49a4569 upstream.
    
    The ev_file is an optional parameter for CQ creation. If the parameter
    is not passed, the ev_file pointer will be NULL.  Using that pointer
    to set the cq_context will result in an OOPs.
    
    Verify that ev_file is not NULL before using.
    
    Cc: <stable@vger.kernel.org> # 4.14.x
    Fixes: 9ee79fce3642 ("IB/core: Add completion queue (cq) object actions")
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d40ad865704b0a3547ca199acba102020ebb947e
Author: Bodong Wang <bodong@mellanox.com>
Date:   Fri Jan 12 07:58:41 2018 +0200

    IB/core: Fix ib_wc structure size to remain in 64 bytes boundary
    
    commit cd2a6e7d384b043d5d029e39663061cebc949385 upstream.
    
    The change of slid from u16 to u32 results in sizeof(struct ib_wc)
    cross 64B boundary, which causes more cache misses. This patch
    rearranges the fields and remain the size to 64B.
    
    Pahole output before this change:
    
    struct ib_wc {
            union {
                    u64                wr_id;                /*           8 */
                    struct ib_cqe *    wr_cqe;               /*           8 */
            };                                               /*     0     8 */
            enum ib_wc_status          status;               /*     8     4 */
            enum ib_wc_opcode          opcode;               /*    12     4 */
            u32                        vendor_err;           /*    16     4 */
            u32                        byte_len;             /*    20     4 */
            struct ib_qp *             qp;                   /*    24     8 */
            union {
                    __be32             imm_data;             /*           4 */
                    u32                invalidate_rkey;      /*           4 */
            } ex;                                            /*    32     4 */
            u32                        src_qp;               /*    36     4 */
            int                        wc_flags;             /*    40     4 */
            u16                        pkey_index;           /*    44     2 */
    
            /* XXX 2 bytes hole, try to pack */
    
            u32                        slid;                 /*    48     4 */
            u8                         sl;                   /*    52     1 */
            u8                         dlid_path_bits;       /*    53     1 */
            u8                         port_num;             /*    54     1 */
            u8                         smac[6];              /*    55     6 */
    
            /* XXX 1 byte hole, try to pack */
    
            u16                        vlan_id;              /*    62     2 */
            /* --- cacheline 1 boundary (64 bytes) --- */
            u8                         network_hdr_type;     /*    64     1 */
    
            /* size: 72, cachelines: 2, members: 17 */
            /* sum members: 62, holes: 2, sum holes: 3 */
            /* padding: 7 */
            /* last cacheline: 8 bytes */
    };
    
    Pahole output after this change:
    
    struct ib_wc {
            union {
                    u64                wr_id;                /*           8 */
                    struct ib_cqe *    wr_cqe;               /*           8 */
            };                                               /*     0     8 */
            enum ib_wc_status          status;               /*     8     4 */
            enum ib_wc_opcode          opcode;               /*    12     4 */
            u32                        vendor_err;           /*    16     4 */
            u32                        byte_len;             /*    20     4 */
            struct ib_qp *             qp;                   /*    24     8 */
            union {
                    __be32             imm_data;             /*           4 */
                    u32                invalidate_rkey;      /*           4 */
            } ex;                                            /*    32     4 */
            u32                        src_qp;               /*    36     4 */
            u32                        slid;                 /*    40     4 */
            int                        wc_flags;             /*    44     4 */
            u16                        pkey_index;           /*    48     2 */
            u8                         sl;                   /*    50     1 */
            u8                         dlid_path_bits;       /*    51     1 */
            u8                         port_num;             /*    52     1 */
            u8                         smac[6];              /*    53     6 */
    
            /* XXX 1 byte hole, try to pack */
    
            u16                        vlan_id;              /*    60     2 */
            u8                         network_hdr_type;     /*    62     1 */
    
            /* size: 64, cachelines: 1, members: 17 */
            /* sum members: 62, holes: 1, sum holes: 1 */
            /* padding: 1 */
    };
    
    Fixes: 7db20ecd1d97 ("IB/core: Change wc.slid from 16 to 32 bits")
    Signed-off-by: Bodong Wang <bodong@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18c0ee900c8d93ae48a99cc1f46d372897b8e9a6
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jan 3 13:28:18 2018 -0800

    IB/core: Fix two kernel warnings triggered by rxe registration
    
    commit 02ee9da347873699603d9ce0112a80b5dd69dea1 upstream.
    
    Eliminate the WARN_ONs that create following two warnings when
    registering an rxe device:
    
    WARNING: CPU: 2 PID: 1005 at drivers/infiniband/core/device.c:449 ib_register_device+0x591/0x640 [ib_core]
    CPU: 2 PID: 1005 Comm: run_tests Not tainted 4.15.0-rc4-dbg+ #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:ib_register_device+0x591/0x640 [ib_core]
    Call Trace:
     rxe_register_device+0x3c6/0x470 [rdma_rxe]
     rxe_add+0x543/0x5e0 [rdma_rxe]
     rxe_net_add+0x37/0xb0 [rdma_rxe]
     rxe_param_set_add+0x5a/0x120 [rdma_rxe]
     param_attr_store+0x5e/0xc0
     module_attr_store+0x19/0x30
     sysfs_kf_write+0x3d/0x50
     kernfs_fop_write+0x116/0x1a0
     __vfs_write+0x23/0x120
     vfs_write+0xbe/0x1b0
     SyS_write+0x44/0xa0
     entry_SYSCALL_64_fastpath+0x23/0x9a
    
    WARNING: CPU: 2 PID: 1005 at drivers/infiniband/core/sysfs.c:1279 ib_device_register_sysfs+0x11d/0x160 [ib_core]
    CPU: 2 PID: 1005 Comm: run_tests Tainted: G        W        4.15.0-rc4-dbg+ #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:ib_device_register_sysfs+0x11d/0x160 [ib_core]
    Call Trace:
     ib_register_device+0x3f7/0x640 [ib_core]
     rxe_register_device+0x3c6/0x470 [rdma_rxe]
     rxe_add+0x543/0x5e0 [rdma_rxe]
     rxe_net_add+0x37/0xb0 [rdma_rxe]
     rxe_param_set_add+0x5a/0x120 [rdma_rxe]
     param_attr_store+0x5e/0xc0
     module_attr_store+0x19/0x30
     sysfs_kf_write+0x3d/0x50
     kernfs_fop_write+0x116/0x1a0
     __vfs_write+0x23/0x120
     vfs_write+0xbe/0x1b0
     SyS_write+0x44/0xa0
     entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The code should accept either a parent pointer or a fully specified DMA
    specification without producing warnings.
    
    Fixes: 99db9494035f ("IB/core: Remove ib_device.dma_device")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ade57e9031fac0c972c488acfce58e9a50e2c8dc
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Fri Jan 12 07:58:40 2018 +0200

    IB/mlx4: Fix incorrectly releasing steerable UD QPs when have only ETH ports
    
    commit 852f6927594d0d3e8632c889b2ab38cbc46476ad upstream.
    
    Allocating steerable UD QPs depends on having at least one IB port,
    while releasing those QPs does not.
    
    As a result, when there are only ETH ports, the IB (RoCE) driver
    requests releasing a qp range whose base qp is zero, with
    qp count zero.
    
    When SR-IOV is enabled, and the VF driver is running on a VM over
    a hypervisor which treats such qp release calls as errors
    (rather than NOPs), we see lines in the VM message log like:
    
     mlx4_core 0002:00:02.0: Failed to release qp range base:0 cnt:0
    
    Fix this by adding a check for a zero count in mlx4_release_qp_range()
    (which thus treats releasing 0 qps as a nop), and eliminating the
    check for device managed flow steering when releasing steerable UD QPs.
    (Freeing ib_uc_qpns_bitmap unconditionally is also OK, since it
    remains NULL when steerable UD QPs are not allocated).
    
    Fixes: 4196670be786 ("IB/mlx4: Don't allocate range of steerable UD QPs for Ethernet-only device")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a4255467cd8ce9e2c5f9a25b50f2fe692cf1bb8
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Tue Nov 14 04:34:52 2017 -0800

    IB/qib: Fix comparison error with qperf compare/swap test
    
    commit 87b3524cb5058fdc7c2afdb92bdb2e079661ddc4 upstream.
    
    This failure exists with qib:
    
    ver_rc_compare_swap:
    mismatch, sequence 2, expected 123456789abcdef, got 0
    
    The request builder was using the incorrect inlines to
    build the request header resulting in incorrect data
    in the atomic header.
    
    Fix by using the appropriate inlines to create the request.
    
    Fixes: 261a4351844b ("IB/qib,IB/hfi: Use core common header file")
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a748f0bb2e4aca2c18223585523eb07199a4715
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Sun Jan 28 11:25:29 2018 +0200

    IB/umad: Fix use of unprotected device pointer
    
    commit f23a5350e43c810ca36b26d4ed4ecd9a08686f47 upstream.
    
    The ib_write_umad() is protected by taking the umad file mutex.
    However, it accesses file->port->ib_dev -- which is protected only by the
    port's mutex (field file_mutex).
    
    The ib_umad_remove_one() calls ib_umad_kill_port() which sets
    port->ib_dev to NULL under the port mutex (NOT the file mutex).
    It then sets the mad agent to "dead" under the umad file mutex.
    
    This is a race condition -- because there is a window where
    port->ib_dev is NULL, while the agent is not "dead".
    
    As a result, we saw stack traces like:
    
    [16490.678059] BUG: unable to handle kernel NULL pointer dereference at 00000000000000b0
    [16490.678246] IP: ib_umad_write+0x29c/0xa3a [ib_umad]
    [16490.678333] PGD 0 P4D 0
    [16490.678404] Oops: 0000 [#1] SMP PTI
    [16490.678466] Modules linked in: rdma_ucm(OE) ib_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_uverbs(OE) ib_umad(OE) mlx4_en(OE) ptp pps_core mlx4_ib(OE-) ib_core(OE) mlx4_core(OE) mlx_compat
    (OE) memtrack(OE) devlink mst_pciconf(OE) mst_pci(OE) netconsole nfsv3 nfs_acl nfs lockd grace fscache cfg80211 rfkill esp6_offload esp6 esp4_offload esp4 sunrpc kvm_intel kvm ppdev parport_pc irqbypass
    parport joydev i2c_piix4 virtio_balloon cirrus drm_kms_helper ttm drm e1000 serio_raw virtio_pci virtio_ring virtio ata_generic pata_acpi qemu_fw_cfg [last unloaded: mlxfw]
    [16490.679202] CPU: 4 PID: 3115 Comm: sminfo Tainted: G           OE   4.14.13-300.fc27.x86_64 #1
    [16490.679339] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu2 04/01/2014
    [16490.679477] task: ffff9cf753890000 task.stack: ffffaf70c26b0000
    [16490.679571] RIP: 0010:ib_umad_write+0x29c/0xa3a [ib_umad]
    [16490.679664] RSP: 0018:ffffaf70c26b3d90 EFLAGS: 00010202
    [16490.679747] RAX: 0000000000000010 RBX: ffff9cf75610fd80 RCX: 0000000000000000
    [16490.679856] RDX: 0000000000000001 RSI: 00007ffdf2bfd714 RDI: ffff9cf6bb2a9c00
    
    In the above trace, ib_umad_write is trying to dereference the NULL
    file->port->ib_dev pointer.
    
    Fix this by using the agent's device pointer (the device field
    in struct ib_mad_agent) -- which IS protected by the umad file mutex.
    
    Fixes: 44c58487d51a ("IB/core: Define 'ib' and 'roce' rdma_ah_attr types")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e99306bb4f6741d5482f924585975db5a6934953
Author: Steffen Weber <steffen.weber@gmail.com>
Date:   Tue Jan 2 19:24:09 2018 +0100

    scsi: smartpqi: allow static build ("built-in")
    
    commit dc2db1dc5fb9ab3a43b305c2720fee5278dbee2a upstream.
    
    If CONFIG_SCSI_SMARTPQI=y then don't build this driver as a module.
    
    Signed-off-by: Steffen Weber <steffen.weber@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f2efb86440af16ecdf08e23924a4dc52c1bd4a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Jan 15 11:07:27 2018 -0800

    tracing: Prevent PROFILE_ALL_BRANCHES when FORTIFY_SOURCE=y
    
    commit 68e76e034b6b1c1ce2eece1ab8ae4008e14be470 upstream.
    
    I regularly get 50 MB - 60 MB files during kernel randconfig builds.
    These large files mostly contain (many repeats of; e.g., 124,594):
    
    In file included from ../include/linux/string.h:6:0,
                     from ../include/linux/uuid.h:20,
                     from ../include/linux/mod_devicetable.h:13,
                     from ../scripts/mod/devicetable-offsets.c:3:
    ../include/linux/compiler.h:64:4: warning: '______f' is static but declared in inline function 'strcpy' which is not static [enabled by default]
        ______f = {     \
        ^
    ../include/linux/compiler.h:56:23: note: in expansion of macro '__trace_if'
                           ^
    ../include/linux/string.h:425:2: note: in expansion of macro 'if'
      if (p_size == (size_t)-1 && q_size == (size_t)-1)
      ^
    
    This only happens when CONFIG_FORTIFY_SOURCE=y and
    CONFIG_PROFILE_ALL_BRANCHES=y, so prevent PROFILE_ALL_BRANCHES if
    FORTIFY_SOURCE=y.
    
    Link: http://lkml.kernel.org/r/9199446b-a141-c0c3-9678-a3f9107f2750@infradead.org
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
