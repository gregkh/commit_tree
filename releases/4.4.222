commit b63f449e18b130fdc372b9717e72c19b83fc4876
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue May 5 19:13:25 2020 +0200

    Linux 4.4.222

commit 92b5848736395f4ea56738895acdd09cdc2a93da
Author: Paul Moore <paul@paul-moore.com>
Date:   Tue Apr 28 09:59:02 2020 -0400

    selinux: properly handle multiple messages in selinux_netlink_send()
    
    commit fb73974172ffaaf57a7c42f35424d9aece1a5af6 upstream.
    
    Fix the SELinux netlink_send hook to properly handle multiple netlink
    messages in a single sk_buff; each message is parsed and subject to
    SELinux access control.  Prior to this patch, SELinux only inspected
    the first message in the sk_buff.
    
    Cc: stable@vger.kernel.org
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e68a660e95d34cdb30be9e3312b136b1305ed21
Author: Olivier Matz <olivier.matz@6wind.com>
Date:   Thu Jun 6 09:15:18 2019 +0200

    ipv6: use READ_ONCE() for inet->hdrincl as in ipv4
    
    commit 59e3e4b52663a9d97efbce7307f62e4bc5c9ce91 upstream.
    
    As it was done in commit 8f659a03a0ba ("net: ipv4: fix for a race
    condition in raw_sendmsg") and commit 20b50d79974e ("net: ipv4: emulate
    READ_ONCE() on ->hdrincl bit-field in raw_sendmsg()") for ipv4, copy the
    value of inet->hdrincl in a local variable, to avoid introducing a race
    condition in the next commit.
    
    Signed-off-by: Olivier Matz <olivier.matz@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d44ee5417e3f829b26d83976fd8f4f7ac9bc5335
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Jan 26 13:54:15 2016 +0100

    ASoC: imx-spdif: Fix crash on suspend
    
    commit 9954859185c6e8359e71121037b627f1e294057d upstream.
    
    When registering a ASoC card the driver data of the parent device is set to
    point to the card. This driver data is used in the
    snd_soc_suspend()/resume() callbacks.
    
    The imx-spdif driver overwrites the driver data with custom data which
    causes snd_soc_suspend() to crash.  Since the custom driver is not used
    anywhere simply deleting the line which sets the custom driver data fixes
    the issue.
    
    Fixes: 43ac946922b3 ("ASoC: imx-spdif: add snd_soc_pm_ops for spdif machine driver")
    Tested-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f441c4f2b5166629649ea567847819d286973e10
Author: Stuart Henderson <stuart.henderson@cirrus.com>
Date:   Tue Jan 19 13:09:09 2016 +0000

    ASoC: wm8960: Fix WM8960_SYSCLK_PLL mode
    
    commit 6bb7451429084cefcb3a18fff809f7992595d2af upstream.
    
    With the introduction of WM8960_SYSCLK_AUTO mode, WM8960_SYSCLK_PLL mode was
    made unusable.  Ensure we're not PLL mode before trying to use MCLK.
    
    Fixes: 3176bf2d7ccd ("ASoC: wm8960: update pll and clock setting function")
    Signed-off-by: Stuart Henderson <stuart.henderson@cirrus.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af9b55d6ab6ab911d26f34415613db494e2692b7
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Tue Dec 8 12:15:54 2015 -0200

    exynos4-is: fix a format string bug
    
    commit 76a563675485849f6f9ad5b30df220438b3628c1 upstream.
    
    Ironically, 7d4020c3c400 ("[media] exynos4-is: fix some warnings when
    compiling on arm64") fixed some format string bugs but introduced a
    new one. buf_index is a simple int, so it should be printed with %d,
    not %pad (which is correctly used for dma_addr_t).
    
    Fixes: 7d4020c3c400 ("[media] exynos4-is: fix some warnings when compiling on arm64")
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 399762a56b3ad9028219c589e5933dc32e5ec8e0
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 27 23:24:29 2016 +0100

    perf/x86: Fix uninitialized value usage
    
    commit e01d8718de4170373cd7fbf5cf6f9cb61cebb1e9 upstream.
    
    When calling intel_alt_er() with .idx != EXTRA_REG_RSP_* we will not
    initialize alt_idx and then use this uninitialized value to index an
    array.
    
    When that is not fatal, it can result in an infinite loop in its
    caller __intel_shared_reg_get_constraints(), with IRQs disabled.
    
    Alternative error modes are random memory corruption due to the
    cpuc->shared_regs->regs[] array overrun, which manifest in either
    get_constraints or put_constraints doing weird stuff.
    
    Only took 6 hours of painful debugging to find this. Neither GCC nor
    Smatch warnings flagged this bug.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: ae3f011fc251 ("perf/x86/intel: Fix SLM MSR_OFFCORE_RSP1 valid_mask")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fc63389e0a11617a0b059c1b5d7a4cd45d78bf5
Author: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
Date:   Mon Jan 25 14:03:46 2016 +0530

    powerpc/perf: Remove PPMU_HAS_SSLOT flag for Power8
    
    commit 370f06c88528b3988fe24a372c10e1303bb94cf6 upstream.
    
    Commit 7a7868326d77 ("powerpc/perf: Add an explict flag indicating
    presence of SLOT field") introduced the PPMU_HAS_SSLOT flag to remove
    the assumption that MMCRA[SLOT] was present when PPMU_ALT_SIPR was not
    set.
    
    That commit's changelog also mentions that Power8 does not support
    MMCRA[SLOT]. However when the Power8 PMU support was merged, it
    errnoeously included the PPMU_HAS_SSLOT flag.
    
    So remove PPMU_HAS_SSLOT from the Power8 flags.
    
    mpe: On systems where MMCRA[SLOT] exists, the field occupies bits 37:39
    (IBM numbering). On Power8 bit 37 is reserved, and 38:39 overlap with
    the high bits of the Threshold Event Counter Mantissa. I am not aware of
    any published events which use the threshold counting mechanism, which
    would cause the mantissa bits to be set. So in practice this bug is
    unlikely to trigger.
    
    Fixes: e05b9b9e5c10 ("powerpc/perf: Power8 PMU support")
    Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 203598aa54fdca3cdf395e1955a935e324b1151e
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed Jan 20 12:56:33 2016 +0100

    perf hists: Fix HISTC_MEM_DCACHELINE width setting
    
    commit 0805909f59e02036a4e2660159f27dbf8b6084ac upstream.
    
    Set correct width for unresolved mem_dcacheline addr.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Fixes: 9b32ba71ba90 ("perf tools: Add dcacheline sort")
    Link: http://lkml.kernel.org/r/1453290995-18485-3-git-send-email-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 751ecdc5474027f05670c7ca6d5ac14cfbc032f0
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jan 15 22:02:12 2016 +0200

    i2c: designware-pci: use IRQF_COND_SUSPEND flag
    
    commit 08c6e8cc66282a082484480c1a5641bc27d26c55 upstream.
    
    This is effectively reapplies the commit b0898fdaffb2 ("i2c: designware-pci: use
    IRQF_COND_SUSPEND flag") after the commit d80d134182ba ("i2c: designware: Move
    common probe code into i2c_dw_probe()"). Original message as follows.
    
    The mentioned flag fixes a warning on Intel Edison board since one of the I2C
    controller shares IRQ line with watchdog timer.
    
    Fixes: d80d134182ba (i2c: designware: Move common probe code into i2c_dw_probe())
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 056e60c10f93f264da19be7c13ef60c328fb619c
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Apr 24 19:11:42 2020 +0300

    dmaengine: dmatest: Fix iteration non-stop logic
    
    commit b9f960201249f20deea586b4ec814669b4c6b1c0 upstream.
    
    Under some circumstances, i.e. when test is still running and about to
    time out and user runs, for example,
    
            grep -H . /sys/module/dmatest/parameters/*
    
    the iterations parameter is not respected and test is going on and on until
    user gives
    
            echo 0 > /sys/module/dmatest/parameters/run
    
    This is not what expected.
    
    The history of this bug is interesting. I though that the commit
      2d88ce76eb98 ("dmatest: add a 'wait' parameter")
    is a culprit, but looking closer to the code I think it simple revealed the
    broken logic from the day one, i.e. in the commit
      0a2ff57d6fba ("dmaengine: dmatest: add a maximum number of test iterations")
    which adds iterations parameter.
    
    So, to the point, the conditional of checking the thread to be stopped being
    first part of conjunction logic prevents to check iterations. Thus, we have to
    always check both conditions to be able to stop after given iterations.
    
    Since it wasn't visible before second commit appeared, I add a respective
    Fixes tag.
    
    Fixes: 2d88ce76eb98 ("dmatest: add a 'wait' parameter")
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/20200424161147.16895-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 170529ca5d440911f594bdcc192bdca3d0012cfe
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Apr 20 15:51:47 2020 +0200

    nfs: Fix potential posix_acl refcnt leak in nfs3_set_acl
    
    commit 7648f939cb919b9d15c21fff8cd9eba908d595dc upstream.
    
    nfs3_set_acl keeps track of the acl it allocated locally to determine if an acl
    needs to be released at the end.  This results in a memory leak when the
    function allocates an acl as well as a default acl.  Fix by releasing acls
    that differ from the acl originally passed into nfs3_set_acl.
    
    Fixes: b7fa0554cf1b ("[PATCH] NFS: Add support for NFSv3 ACLs")
    Reported-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d38cb0cc90ceddcfa44d8946b7c421c5cb2d0fe0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Apr 29 21:02:03 2020 +0200

    ALSA: opti9xx: shut up gcc-10 range warning
    
    commit 5ce00760a84848d008554c693ceb6286f4d9c509 upstream.
    
    gcc-10 points out a few instances of suspicious integer arithmetic
    leading to value truncation:
    
    sound/isa/opti9xx/opti92x-ad1848.c: In function 'snd_opti9xx_configure':
    sound/isa/opti9xx/opti92x-ad1848.c:322:43: error: overflow in conversion from 'int' to 'unsigned char' changes value from '(int)snd_opti9xx_read(chip, 3) & -256 | 240' to '240' [-Werror=overflow]
      322 |   (snd_opti9xx_read(chip, reg) & ~(mask)) | ((value) & (mask)))
          |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
    sound/isa/opti9xx/opti92x-ad1848.c:351:3: note: in expansion of macro 'snd_opti9xx_write_mask'
      351 |   snd_opti9xx_write_mask(chip, OPTi9XX_MC_REG(3), 0xf0, 0xff);
          |   ^~~~~~~~~~~~~~~~~~~~~~
    sound/isa/opti9xx/miro.c: In function 'snd_miro_configure':
    sound/isa/opti9xx/miro.c:873:40: error: overflow in conversion from 'int' to 'unsigned char' changes value from '(int)snd_miro_read(chip, 3) & -256 | 240' to '240' [-Werror=overflow]
      873 |   (snd_miro_read(chip, reg) & ~(mask)) | ((value) & (mask)))
          |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
    sound/isa/opti9xx/miro.c:1010:3: note: in expansion of macro 'snd_miro_write_mask'
     1010 |   snd_miro_write_mask(chip, OPTi9XX_MC_REG(3), 0xf0, 0xff);
          |   ^~~~~~~~~~~~~~~~~~~
    
    These are all harmless here as only the low 8 bit are passed down
    anyway. Change the macros to inline functions to make the code
    more readable and also avoid the warning.
    
    Strictly speaking those functions also need locking to make the
    read/write pair atomic, but it seems unlikely that anyone would
    still run into that issue.
    
    Fixes: 1841f613fd2e ("[ALSA] Add snd-miro driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20200429190216.85919-1-arnd@arndb.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae88829f5d15ba6e16ddb53c7bed7e6aae668184
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Apr 16 15:50:57 2020 -0700

    vfio/type1: Fix VA->PA translation for PFNMAP VMAs in vaddr_get_pfn()
    
    commit 5cbf3264bc715e9eb384e2b68601f8c02bb9a61d upstream.
    
    Use follow_pfn() to get the PFN of a PFNMAP VMA instead of assuming that
    vma->vm_pgoff holds the base PFN of the VMA.  This fixes a bug where
    attempting to do VFIO_IOMMU_MAP_DMA on an arbitrary PFNMAP'd region of
    memory calculates garbage for the PFN.
    
    Hilariously, this only got detected because the first "PFN" calculated
    by vaddr_get_pfn() is PFN 0 (vma->vm_pgoff==0), and iommu_iova_to_phys()
    uses PA==0 as an error, which triggers a WARN in vfio_unmap_unpin()
    because the translation "failed".  PFN 0 is now unconditionally reserved
    on x86 in order to mitigate L1TF, which causes is_invalid_reserved_pfn()
    to return true and in turns results in vaddr_get_pfn() returning success
    for PFN 0.  Eventually the bogus calculation runs into PFNs that aren't
    reserved and leads to failure in vfio_pin_map_dma().  The subsequent
    call to vfio_remove_dma() attempts to unmap PFN 0 and WARNs.
    
      WARNING: CPU: 8 PID: 5130 at drivers/vfio/vfio_iommu_type1.c:750 vfio_unmap_unpin+0x2e1/0x310 [vfio_iommu_type1]
      Modules linked in: vfio_pci vfio_virqfd vfio_iommu_type1 vfio ...
      CPU: 8 PID: 5130 Comm: sgx Tainted: G        W         5.6.0-rc5-705d787c7fee-vfio+ #3
      Hardware name: Intel Corporation Mehlow UP Server Platform/Moss Beach Server, BIOS CNLSE2R1.D00.X119.B49.1803010910 03/01/2018
      RIP: 0010:vfio_unmap_unpin+0x2e1/0x310 [vfio_iommu_type1]
      Code: <0f> 0b 49 81 c5 00 10 00 00 e9 c5 fe ff ff bb 00 10 00 00 e9 3d fe
      RSP: 0018:ffffbeb5039ebda8 EFLAGS: 00010246
      RAX: 0000000000000000 RBX: ffff9a55cbf8d480 RCX: 0000000000000000
      RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff9a52b771c200
      RBP: 0000000000000000 R08: 0000000000000040 R09: 00000000fffffff2
      R10: 0000000000000001 R11: ffff9a51fa896000 R12: 0000000184010000
      R13: 0000000184000000 R14: 0000000000010000 R15: ffff9a55cb66ea08
      FS:  00007f15d3830b40(0000) GS:ffff9a55d5600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000561cf39429e0 CR3: 000000084f75f005 CR4: 00000000003626e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       vfio_remove_dma+0x17/0x70 [vfio_iommu_type1]
       vfio_iommu_type1_ioctl+0x9e3/0xa7b [vfio_iommu_type1]
       ksys_ioctl+0x92/0xb0
       __x64_sys_ioctl+0x16/0x20
       do_syscall_64+0x4c/0x180
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f15d04c75d7
      Code: <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 81 48 2d 00 f7 d8 64 89 01 48
    
    Fixes: 73fa0d10d077 ("vfio: Type1 IOMMU implementation")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7981746ad508c57c86bbb20bfae680b21abec9a
Author: Alaa Hleihel <alaa@mellanox.com>
Date:   Mon Apr 13 16:22:35 2020 +0300

    RDMA/mlx4: Initialize ib_spec on the stack
    
    commit c08cfb2d8d78bfe81b37cc6ba84f0875bddd0d5c upstream.
    
    Initialize ib_spec on the stack before using it, otherwise we will have
    garbage values that will break creating default rules with invalid parsing
    error.
    
    Fixes: a37a1a428431 ("IB/mlx4: Add mechanism to support flow steering over IB links")
    Link: https://lore.kernel.org/r/20200413132235.930642-1-leon@kernel.org
    Signed-off-by: Alaa Hleihel <alaa@mellanox.com>
    Reviewed-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d8e2371a2b2454d224d7822a351209734d93274
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Apr 21 15:55:16 2020 +0800

    PM: ACPI: Output correct message on target power state
    
    commit a9b760b0266f563b4784f695bbd0e717610dc10a upstream.
    
    Transitioned power state logged at the end of setting ACPI power.
    
    However, D3cold won't be in the message because state can only be
    D3hot at most.
    
    Use target_state to corretly report when power state is D3cold.
    
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76088b289bd444536b2ce0fe728e6da6f721b1a0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 24 21:33:50 2020 +0200

    ALSA: pcm: oss: Place the plugin buffer overflow checks correctly
    
    commit 4285de0725b1bf73608abbcd35ad7fd3ddc0b61e upstream.
    
    The checks of the plugin buffer overflow in the previous fix by commit
      f2ecf903ef06 ("ALSA: pcm: oss: Avoid plugin buffer overflow")
    are put in the wrong places mistakenly, which leads to the expected
    (repeated) sound when the rate plugin is involved.  Fix in the right
    places.
    
    Also, at those right places, the zero check is needed for the
    termination node, so added there as well, and let's get it done,
    finally.
    
    Fixes: f2ecf903ef06 ("ALSA: pcm: oss: Avoid plugin buffer overflow")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200424193350.19678-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3a63b721569bb9b629dea109c0326bbc283565e
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Mon Apr 27 08:32:51 2020 +0300

    drm/qxl: qxl_release leak in qxl_hw_surface_alloc()
    
    commit a65aa9c3676ffccb21361d52fcfedd5b5ff387d7 upstream.
    
    Cc: stable@vger.kernel.org
    Fixes: 8002db6336dd ("qxl: convert qxl driver to proper use for reservations")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/2e5a13ae-9ab2-5401-aa4d-03d5f5593423@virtuozzo.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb8205bc70de836e58b7ed204a2bba068fa56dd4
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Dec 31 22:34:31 2018 -0500

    ext4: fix special inode number checks in __ext4_iget()
    
    commit 191ce17876c9367819c4b0a25b503c0f6d9054d8 upstream.
    
    The check for special (reserved) inode number checks in __ext4_iget()
    was broken by commit 8a363970d1dc: ("ext4: avoid declaring fs
    inconsistent due to invalid file handles").  This was caused by a
    botched reversal of the sense of the flag now known as
    EXT4_IGET_SPECIAL (when it was previously named EXT4_IGET_NORMAL).
    Fix the logic appropriately.
    
    Fixes: 8a363970d1dc ("ext4: avoid declaring fs inconsistent...")
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@kernel.org
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
