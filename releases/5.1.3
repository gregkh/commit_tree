commit 7cb9c5d341b95274b4f1fccfc5db122f945f6730
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu May 16 19:35:40 2019 +0200

    Linux 5.1.3

commit dabb99e0a8fa747cfa6760a3e2c1a707589c664a
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Sat Mar 16 09:13:06 2019 +0900

    f2fs: Fix use of number of devices
    
    commit 0916878da355650d7e77104a7ac0fa1784eca852 upstream.
    
    For a single device mount using a zoned block device, the zone
    information for the device is stored in the sbi->devs single entry
    array and sbi->s_ndevs is set to 1. This differs from a single device
    mount using a regular block device which does not allocate sbi->devs
    and sets sbi->s_ndevs to 0.
    
    However, sbi->s_devs == 0 condition is used throughout the code to
    differentiate a single device mount from a multi-device mount where
    sbi->s_ndevs is always larger than 1. This results in problems with
    single zoned block device volumes as these are treated as multi-device
    mounts but do not have the start_blk and end_blk information set. One
    of the problem observed is skipping of zone discard issuing resulting in
    write commands being issued to full zones or unaligned to a zone write
    pointer.
    
    Fix this problem by simply treating the cases sbi->s_ndevs == 0 (single
    regular block device mount) and sbi->s_ndevs == 1 (single zoned block
    device mount) in the same manner. This is done by introducing the
    helper function f2fs_is_multi_device() and using this helper in place
    of direct tests of sbi->s_ndevs value, improving code readability.
    
    Fixes: 7bb3a371d199 ("f2fs: Fix zoned block device support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d82e3d5b18d4c675d0284b8bde2db875a5f7ff68
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Mar 4 21:34:49 2019 +0000

    PCI: hv: Add pci_destroy_slot() in pci_devices_present_work(), if necessary
    
    commit 340d455699400f2c2c0f9b3f703ade3085cdb501 upstream.
    
    When we hot-remove a device, usually the host sends us a PCI_EJECT message,
    and a PCI_BUS_RELATIONS message with bus_rel->device_count == 0.
    
    When we execute the quick hot-add/hot-remove test, the host may not send
    us the PCI_EJECT message if the guest has not fully finished the
    initialization by sending the PCI_RESOURCES_ASSIGNED* message to the
    host, so it's potentially unsafe to only depend on the
    pci_destroy_slot() in hv_eject_device_work() because the code path
    
    create_root_hv_pci_bus()
     -> hv_pci_assign_slots()
    
    is not called in this case. Note: in this case, the host still sends the
    guest a PCI_BUS_RELATIONS message with bus_rel->device_count == 0.
    
    In the quick hot-add/hot-remove test, we can have such a race before
    the code path
    
    pci_devices_present_work()
     -> new_pcichild_device()
    
    adds the new device into the hbus->children list, we may have already
    received the PCI_EJECT message, and since the tasklet handler
    
    hv_pci_onchannelcallback()
    
    may fail to find the "hpdev" by calling
    
    get_pcichild_wslot(hbus, dev_message->wslot.slot)
    
    hv_pci_eject_device() is not called; Later, by continuing execution
    
    create_root_hv_pci_bus()
     -> hv_pci_assign_slots()
    
    creates the slot and the PCI_BUS_RELATIONS message with
    bus_rel->device_count == 0 removes the device from hbus->children, and
    we end up being unable to remove the slot in
    
    hv_pci_remove()
     -> hv_pci_remove_slots()
    
    Remove the slot in pci_devices_present_work() when the device
    is removed to address this race.
    
    pci_devices_present_work() and hv_eject_device_work() run in the
    singled-threaded hbus->wq, so there is not a double-remove issue for the
    slot.
    
    We cannot offload hv_pci_eject_device() from hv_pci_onchannelcallback()
    to the workqueue, because we need the hv_pci_onchannelcallback()
    synchronously call hv_pci_eject_device() to poll the channel
    ringbuffer to work around the "hangs in hv_compose_msi_msg()" issue
    fixed in commit de0aa7b2f97d ("PCI: hv: Fix 2 hang issues in
    hv_compose_msi_msg()")
    
    Fixes: a15f2c08c708 ("PCI: hv: support reporting serial number as slot information")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    [lorenzo.pieralisi@arm.com: rewritten commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Reviewed-by:  Michael Kelley <mikelley@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c36f4347d07dd09addc11059b8a41a25b783a0f
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Mar 4 21:34:48 2019 +0000

    PCI: hv: Add hv_pci_remove_slots() when we unload the driver
    
    commit 15becc2b56c6eda3d9bf5ae993bafd5661c1fad1 upstream.
    
    When we unload the pci-hyperv host controller driver, the host does not
    send us a PCI_EJECT message.
    
    In this case we also need to make sure the sysfs PCI slot directory is
    removed, otherwise a command on a slot file eg:
    
    "cat /sys/bus/pci/slots/2/address"
    
    will trigger a
    
    "BUG: unable to handle kernel paging request"
    
    and, if we unload/reload the driver several times we would end up with
    stale slot entries in PCI slot directories in /sys/bus/pci/slots/
    
    root@localhost:~# ls -rtl  /sys/bus/pci/slots/
    total 0
    drwxr-xr-x 2 root root 0 Feb  7 10:49 2
    drwxr-xr-x 2 root root 0 Feb  7 10:49 2-1
    drwxr-xr-x 2 root root 0 Feb  7 10:51 2-2
    
    Add the missing code to remove the PCI slot and fix the current
    behaviour.
    
    Fixes: a15f2c08c708 ("PCI: hv: support reporting serial number as slot information")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    [lorenzo.pieralisi@arm.com: reformatted the log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91425cbebb8bd0a1409eb9c5743c069d86f64660
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Mar 4 21:34:48 2019 +0000

    PCI: hv: Fix a memory leak in hv_eject_device_work()
    
    commit 05f151a73ec2b23ffbff706e5203e729a995cdc2 upstream.
    
    When a device is created in new_pcichild_device(), hpdev->refs is set
    to 2 (i.e. the initial value of 1 plus the get_pcichild()).
    
    When we hot remove the device from the host, in a Linux VM we first call
    hv_pci_eject_device(), which increases hpdev->refs by get_pcichild() and
    then schedules a work of hv_eject_device_work(), so hpdev->refs becomes
    3 (let's ignore the paired get/put_pcichild() in other places). But in
    hv_eject_device_work(), currently we only call put_pcichild() twice,
    meaning the 'hpdev' struct can't be freed in put_pcichild().
    
    Add one put_pcichild() to fix the memory leak.
    
    The device can also be removed when we run "rmmod pci-hyperv". On this
    path (hv_pci_remove() -> hv_pci_bus_exit() -> hv_pci_devices_present()),
    hpdev->refs is 2, and we do correctly call put_pcichild() twice in
    pci_devices_present_work().
    
    Fixes: 4daace0d8ce8 ("PCI: hv: Add paravirtual PCI front-end for Microsoft Hyper-V VMs")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    [lorenzo.pieralisi@arm.com: commit log rework]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Reviewed-by:  Michael Kelley <mikelley@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 037ca765796fec2a7becc14c75c0ebcfb57be0c0
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Mar 12 15:06:53 2019 +0800

    virtio_ring: Fix potential mem leak in virtqueue_add_indirect_packed
    
    commit df0bfe7501e9319546ea380d39674a4179e059c3 upstream.
    
    'desc' should be freed before leaving from err handing path.
    
    Fixes: 1ce9e6055fa0 ("virtio_ring: introduce packed ring support")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 665c4bdd5736977cb01ee6f5efd76f6df9d6b303
Author: Laurentiu Tudor <laurentiu.tudor@nxp.com>
Date:   Mon Apr 15 14:52:11 2019 +0300

    powerpc/booke64: set RI in default MSR
    
    commit 5266e58d6cd90ac85c187d673093ad9cb649e16d upstream.
    
    Set RI in the default kernel's MSR so that the architected way of
    detecting unrecoverable machine check interrupts has a chance to work.
    This is inline with the MSR setup of the rest of booke powerpc
    architectures configured here.
    
    Signed-off-by: Laurentiu Tudor <laurentiu.tudor@nxp.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f855814e7f0eafa7fa291c0f97acde823b05fce
Author: Russell Currey <ruscur@russell.cc>
Date:   Thu Apr 18 16:51:16 2019 +1000

    powerpc/powernv/idle: Restore IAMR after idle
    
    commit a3f3072db6cad40895c585dce65e36aab997f042 upstream.
    
    Without restoring the IAMR after idle, execution prevention on POWER9
    with Radix MMU is overwritten and the kernel can freely execute
    userspace without faulting.
    
    This is necessary when returning from any stop state that modifies
    user state, as well as hypervisor state.
    
    To test how this fails without this patch, load the lkdtm driver and
    do the following:
    
      $ echo EXEC_USERSPACE > /sys/kernel/debug/provoke-crash/DIRECT
    
    which won't fault, then boot the kernel with powersave=off, where it
    will fault. Applying this patch will fix this.
    
    Fixes: 3b10d0095a1e ("powerpc/mm/radix: Prevent kernel execution of user space")
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Reviewed-by: Akshay Adiga <akshay.adiga@linux.vnet.ibm.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6aa7a9ea942143d5c419f7e07588e4d6e05492a1
Author: Rick Lindsley <ricklind@linux.vnet.ibm.com>
Date:   Sun May 5 17:20:43 2019 -0700

    powerpc/book3s/64: check for NULL pointer in pgd_alloc()
    
    commit f39356261c265a0689d7ee568132d516e8b6cecc upstream.
    
    When the memset code was added to pgd_alloc(), it failed to consider
    that kmem_cache_alloc() can return NULL. It's uncommon, but not
    impossible under heavy memory contention. Example oops:
    
      Unable to handle kernel paging request for data at address 0x00000000
      Faulting instruction address: 0xc0000000000a4000
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE SMP NR_CPUS=2048 NUMA pSeries
      CPU: 70 PID: 48471 Comm: entrypoint.sh Kdump: loaded Not tainted 4.14.0-115.6.1.el7a.ppc64le #1
      task: c000000334a00000 task.stack: c000000331c00000
      NIP:  c0000000000a4000 LR: c00000000012f43c CTR: 0000000000000020
      REGS: c000000331c039c0 TRAP: 0300   Not tainted  (4.14.0-115.6.1.el7a.ppc64le)
      MSR:  800000010280b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]>  CR: 44022840  XER: 20040000
      CFAR: c000000000008874 DAR: 0000000000000000 DSISR: 42000000 SOFTE: 1
      ...
      NIP [c0000000000a4000] memset+0x68/0x104
      LR [c00000000012f43c] mm_init+0x27c/0x2f0
      Call Trace:
        mm_init+0x260/0x2f0 (unreliable)
        copy_mm+0x11c/0x638
        copy_process.isra.28.part.29+0x6fc/0x1080
        _do_fork+0xdc/0x4c0
        ppc_clone+0x8/0xc
      Instruction dump:
      409e000c b0860000 38c60002 409d000c 90860000 38c60004 78a0d183 78a506a0
      7c0903a6 41820034 60000000 60420000 <f8860000> f8860008 f8860010 f8860018
    
    Fixes: fc5c2f4a55a2 ("powerpc/mm/hash64: Zero PGD pages on allocation")
    Cc: stable@vger.kernel.org # v4.16+
    Signed-off-by: Rick Lindsley <ricklind@vnet.linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85ee20811e6a9cfcee5ab30e211ec3666aa67401
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 14 15:47:03 2019 -0700

    drivers/virt/fsl_hypervisor.c: prevent integer overflow in ioctl
    
    commit 6a024330650e24556b8a18cc654ad00cfecf6c6c upstream.
    
    The "param.count" value is a u64 thatcomes from the user.  The code
    later in the function assumes that param.count is at least one and if
    it's not then it leads to an Oops when we dereference the ZERO_SIZE_PTR.
    
    Also the addition can have an integer overflow which would lead us to
    allocate a smaller "pages" array than required.  I can't immediately
    tell what the possible run times implications are, but it's safest to
    prevent the overflow.
    
    Link: http://lkml.kernel.org/r/20181218082129.GE32567@kadam
    Fixes: 6db7199407ca ("drivers/virt: introduce Freescale hypervisor management driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Timur Tabi <timur@freescale.com>
    Cc: Mihai Caraman <mihai.caraman@freescale.com>
    Cc: Kumar Gala <galak@kernel.crashing.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41771de5af83ac465ddf6f587de66da29e408ba1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 14 15:47:00 2019 -0700

    drivers/virt/fsl_hypervisor.c: dereferencing error pointers in ioctl
    
    commit c8ea3663f7a8e6996d44500ee818c9330ac4fd88 upstream.
    
    strndup_user() returns error pointers on error, and then in the error
    handling we pass the error pointers to kfree().  It will cause an Oops.
    
    Link: http://lkml.kernel.org/r/20181218082003.GD32567@kadam
    Fixes: 6db7199407ca ("drivers/virt: introduce Freescale hypervisor management driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Timur Tabi <timur@freescale.com>
    Cc: Mihai Caraman <mihai.caraman@freescale.com>
    Cc: Kumar Gala <galak@kernel.crashing.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de2dec852a2554895464934d57d32c49a8d00dc7
Author: Paul Bolle <pebolle@tiscali.nl>
Date:   Wed May 1 23:19:03 2019 +0200

    isdn: bas_gigaset: use usb_fill_int_urb() properly
    
    [ Upstream commit 4014dfae3ccaaf3ec19c9ae0691a3f14e7132eae ]
    
    The switch to make bas_gigaset use usb_fill_int_urb() - instead of
    filling that urb "by hand" - missed the subtle ordering of the previous
    code.
    
    See, before the switch urb->dev was set to a member somewhere deep in a
    complicated structure and then supplied to usb_rcvisocpipe() and
    usb_sndisocpipe(). After that switch urb->dev wasn't set to anything
    specific before being supplied to those two macros. This triggers a
    nasty oops:
    
        BUG: unable to handle kernel NULL pointer dereference at 00000000
        #PF error: [normal kernel read fault]
        *pde = 00000000
        Oops: 0000 [#1] SMP
        CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.1.0-0.rc4.1.local0.fc28.i686 #1
        Hardware name: IBM 2525FAG/2525FAG, BIOS 74ET64WW (2.09 ) 12/14/2006
        EIP: gigaset_init_bchannel+0x89/0x320 [bas_gigaset]
        Code: 75 07 83 8b 84 00 00 00 40 8d 47 74 c7 07 01 00 00 00 89 45 f0 8b 44 b7 68 85 c0 0f 84 6a 02 00 00 8b 48 28 8b 93 88 00 00 00 <8b> 09 8d 54 12 03 c1 e2 0f c1 e1 08 09 ca 8b 8b 8c 00 00 00 80 ca
        EAX: f05ec200 EBX: ed404200 ECX: 00000000 EDX: 00000000
        ESI: 00000000 EDI: f065a000 EBP: f30c9f40 ESP: f30c9f20
        DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 EFLAGS: 00010086
        CR0: 80050033 CR2: 00000000 CR3: 0ddc7000 CR4: 000006d0
        Call Trace:
         <SOFTIRQ>
         ? gigaset_isdn_connD+0xf6/0x140 [gigaset]
         gigaset_handle_event+0x173e/0x1b90 [gigaset]
         tasklet_action_common.isra.16+0x4e/0xf0
         tasklet_action+0x1e/0x20
         __do_softirq+0xb2/0x293
         ? __irqentry_text_end+0x3/0x3
         call_on_stack+0x45/0x50
         </SOFTIRQ>
         ? irq_exit+0xb5/0xc0
         ? do_IRQ+0x78/0xd0
         ? acpi_idle_enter_s2idle+0x50/0x50
         ? common_interrupt+0xd4/0xdc
         ? acpi_idle_enter_s2idle+0x50/0x50
         ? sched_cpu_activate+0x1b/0xf0
         ? acpi_fan_resume.cold.7+0x9/0x18
         ? cpuidle_enter_state+0x152/0x4c0
         ? cpuidle_enter+0x14/0x20
         ? call_cpuidle+0x21/0x40
         ? do_idle+0x1c8/0x200
         ? cpu_startup_entry+0x25/0x30
         ? rest_init+0x88/0x8a
         ? arch_call_rest_init+0xd/0x19
         ? start_kernel+0x42f/0x448
         ? i386_start_kernel+0xac/0xb0
         ? startup_32_smp+0x164/0x168
        Modules linked in: ppp_generic slhc capi bas_gigaset gigaset kernelcapi nf_conntrack_netbios_ns nf_conntrack_broadcast xt_CT ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_nat ip6table_mangle ip6table_raw ip6table_security iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c iptable_mangle iptable_raw iptable_security ebtable_filter ebtables ip6table_filter ip6_tables sunrpc ipw2200 iTCO_wdt gpio_ich snd_intel8x0 libipw iTCO_vendor_support snd_ac97_codec lib80211 ppdev ac97_bus snd_seq cfg80211 snd_seq_device pcspkr thinkpad_acpi lpc_ich snd_pcm i2c_i801 snd_timer ledtrig_audio snd soundcore rfkill parport_pc parport pcc_cpufreq acpi_cpufreq i915 i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sdhci_pci sysimgblt cqhci fb_sys_fops drm sdhci mmc_core tg3 ata_generic serio_raw yenta_socket pata_acpi video
        CR2: 0000000000000000
        ---[ end trace 1fe07487b9200c73 ]---
        EIP: gigaset_init_bchannel+0x89/0x320 [bas_gigaset]
        Code: 75 07 83 8b 84 00 00 00 40 8d 47 74 c7 07 01 00 00 00 89 45 f0 8b 44 b7 68 85 c0 0f 84 6a 02 00 00 8b 48 28 8b 93 88 00 00 00 <8b> 09 8d 54 12 03 c1 e2 0f c1 e1 08 09 ca 8b 8b 8c 00 00 00 80 ca
        EAX: f05ec200 EBX: ed404200 ECX: 00000000 EDX: 00000000
        ESI: 00000000 EDI: f065a000 EBP: f30c9f40 ESP: cddcb3bc
        DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 EFLAGS: 00010086
        CR0: 80050033 CR2: 00000000 CR3: 0ddc7000 CR4: 000006d0
        Kernel panic - not syncing: Fatal exception in interrupt
        Kernel Offset: 0xcc00000 from 0xc0400000 (relocation range: 0xc0000000-0xf6ffdfff)
        ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---
    
    No-one noticed because this Oops is apparently only triggered by setting
    up an ISDN data connection on a live ISDN line on a gigaset base (ie,
    the PBX that the gigaset driver support). Very few people do that
    running present day kernels.
    
    Anyhow, a little code reorganization makes this problem go away, while
    avoiding the subtle ordering that was used in the past. So let's do
    that.
    
    Fixes: 78c696c19578 ("isdn: gigaset: use usb_fill_int_urb()")
    Signed-off-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e106991b22d9c034216cc04179f00260f20995b3
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 13 09:38:55 2019 -0700

    flow_dissector: disable preemption around BPF calls
    
    [ Upstream commit b1c17a9a353878602fd5bfe9103e4afe5e9a3f96 ]
    
    Various things in eBPF really require us to disable preemption
    before running an eBPF program.
    
    syzbot reported :
    
    BUG: assuming atomic context at net/core/flow_dissector.c:737
    in_atomic(): 0, irqs_disabled(): 0, pid: 24710, name: syz-executor.3
    2 locks held by syz-executor.3/24710:
     #0: 00000000e81a4bf1 (&tfile->napi_mutex){+.+.}, at: tun_get_user+0x168e/0x3ff0 drivers/net/tun.c:1850
     #1: 00000000254afebd (rcu_read_lock){....}, at: __skb_flow_dissect+0x1e1/0x4bb0 net/core/flow_dissector.c:822
    CPU: 1 PID: 24710 Comm: syz-executor.3 Not tainted 5.1.0+ #6
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x172/0x1f0 lib/dump_stack.c:113
     __cant_sleep kernel/sched/core.c:6165 [inline]
     __cant_sleep.cold+0xa3/0xbb kernel/sched/core.c:6142
     bpf_flow_dissect+0xfe/0x390 net/core/flow_dissector.c:737
     __skb_flow_dissect+0x362/0x4bb0 net/core/flow_dissector.c:853
     skb_flow_dissect_flow_keys_basic include/linux/skbuff.h:1322 [inline]
     skb_probe_transport_header include/linux/skbuff.h:2500 [inline]
     skb_probe_transport_header include/linux/skbuff.h:2493 [inline]
     tun_get_user+0x2cfe/0x3ff0 drivers/net/tun.c:1940
     tun_chr_write_iter+0xbd/0x156 drivers/net/tun.c:2037
     call_write_iter include/linux/fs.h:1872 [inline]
     do_iter_readv_writev+0x5fd/0x900 fs/read_write.c:693
     do_iter_write fs/read_write.c:970 [inline]
     do_iter_write+0x184/0x610 fs/read_write.c:951
     vfs_writev+0x1b3/0x2f0 fs/read_write.c:1015
     do_writev+0x15b/0x330 fs/read_write.c:1058
     __do_sys_writev fs/read_write.c:1131 [inline]
     __se_sys_writev fs/read_write.c:1128 [inline]
     __x64_sys_writev+0x75/0xb0 fs/read_write.c:1128
     do_syscall_64+0x103/0x670 arch/x86/entry/common.c:298
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: d58e468b1112 ("flow_dissector: implements flow dissector BPF hook")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Petar Penkov <ppenkov@google.com>
    Cc: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b58df9d780cfc187b8453f7745204e72e2b593ed
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Wed May 1 21:54:28 2019 +0200

    net: phy: fix phy_validate_pause
    
    [ Upstream commit b4010af981ac8cdf1f7f58eb6b131c482e5dee02 ]
    
    We have valid scenarios where ETHTOOL_LINK_MODE_Pause_BIT doesn't
    need to be supported. Therefore extend the first check to check
    for rx_pause being set.
    
    See also phy_set_asym_pause:
    rx=0 and tx=1: advertise asym pause only
    rx=0 and tx=0: stop advertising both pause modes
    
    The fixed commit isn't wrong, it's just the one that introduced the
    linkmode bitmaps.
    
    Fixes: 3c1bcc8614db ("net: ethernet: Convert phydev advertize and supported from u32 to link mode")
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f852d10a0bf4ac9fa34ce3b4d2f84d321d1249b
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed May 8 23:20:18 2019 -0400

    tuntap: synchronize through tfiles array instead of tun->numqueues
    
    [ Upstream commit 9871a9e47a2646fe30ae7fd2e67668a8d30912f6 ]
    
    When a queue(tfile) is detached through __tun_detach(), we move the
    last enabled tfile to the position where detached one sit but don't
    NULL out last position. We expect to synchronize the datapath through
    tun->numqueues. Unfortunately, this won't work since we're lacking
    sufficient mechanism to order or synchronize the access to
    tun->numqueues.
    
    To fix this, NULL out the last position during detaching and check
    RCU protected tfile against NULL instead of checking tun->numqueues in
    datapath.
    
    Cc: YueHaibing <yuehaibing@huawei.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: weiyongjun (A) <weiyongjun1@huawei.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Fixes: c8d68e6be1c3b ("tuntap: multiqueue support")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e1d1a3a3348c69dddd5b56a714c0703f0ca7213
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed May 8 23:20:17 2019 -0400

    tuntap: fix dividing by zero in ebpf queue selection
    
    [ Upstream commit a35d310f03a692bf4798eb309a1950a06a150620 ]
    
    We need check if tun->numqueues is zero (e.g for the persist device)
    before trying to use it for modular arithmetic.
    
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Fixes: 96f84061620c6("tun: add eBPF based queue selection method")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee0d666d5d87061c2edb9d8a3b4f680f92e3ab41
Author: Stephen Suryaputra <ssuryaextr@gmail.com>
Date:   Mon May 6 15:00:01 2019 -0400

    vrf: sit mtu should not be updated when vrf netdev is the link
    
    [ Upstream commit ff6ab32bd4e073976e4d8797b4d514a172cfe6cb ]
    
    VRF netdev mtu isn't typically set and have an mtu of 65536. When the
    link of a tunnel is set, the tunnel mtu is changed from 1480 to the link
    mtu minus tunnel header. In the case of VRF netdev is the link, then the
    tunnel mtu becomes 65516. So, fix it by not setting the tunnel mtu in
    this case.
    
    Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e03133855cbeda1849334381962c4eccd55ad6e
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu May 9 14:55:07 2019 +0800

    vlan: disable SIOCSHWTSTAMP in container
    
    [ Upstream commit 873017af778439f2f8e3d87f28ddb1fcaf244a76 ]
    
    With NET_ADMIN enabled in container, a normal user could be mapped to
    root and is able to change the real device's rx filter via ioctl on
    vlan, which would affect the other ptp process on host. Fix it by
    disabling SIOCSHWTSTAMP in container.
    
    Fixes: a6111d3c93d0 ("vlan: Pass SIOC[SG]HWTSTAMP ioctls to real device")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5338e8ff22f3180cfafa74b3f9aa92c03c39cc1e
Author: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@gmail.com>
Date:   Thu May 9 07:13:42 2019 +0200

    tipc: fix hanging clients using poll with EPOLLOUT flag
    
    [ Upstream commit ff946833b70e0c7f93de9a3f5b329b5ae2287b38 ]
    
    commit 517d7c79bdb398 ("tipc: fix hanging poll() for stream sockets")
    introduced a regression for clients using non-blocking sockets.
    After the commit, we send EPOLLOUT event to the client even in
    TIPC_CONNECTING state. This causes the subsequent send() to fail
    with ENOTCONN, as the socket is still not in TIPC_ESTABLISHED state.
    
    In this commit, we:
    - improve the fix for hanging poll() by replacing sk_data_ready()
      with sk_state_change() to wake up all clients.
    - revert the faulty updates introduced by commit 517d7c79bdb398
      ("tipc: fix hanging poll() for stream sockets").
    
    Fixes: 517d7c79bdb398 ("tipc: fix hanging poll() for stream sockets")
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@gmail.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.se>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17617cd5557ac5b82b3d7da71772e02f2258805b
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed May 8 15:32:51 2019 +0200

    selinux: do not report error on connect(AF_UNSPEC)
    
    [ Upstream commit c7e0d6cca86581092cbbf2cd868b3601495554cf ]
    
    calling connect(AF_UNSPEC) on an already connected TCP socket is an
    established way to disconnect() such socket. After commit 68741a8adab9
    ("selinux: Fix ltp test connect-syscall failure") it no longer works
    and, in the above scenario connect() fails with EAFNOSUPPORT.
    
    Fix the above falling back to the generic/old code when the address family
    is not AF_INET{4,6}, but leave the SCTP code path untouched, as it has
    specific constraints.
    
    Fixes: 68741a8adab9 ("selinux: Fix ltp test connect-syscall failure")
    Reported-by: Tom Deseyn <tdeseyn@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad0ccae4bad9fe7bedd034cc09afb43d923046d
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu May 9 22:52:20 2019 +0800

    packet: Fix error path in packet_init
    
    [ Upstream commit 36096f2f4fa05f7678bc87397665491700bae757 ]
    
    kernel BUG at lib/list_debug.c:47!
    invalid opcode: 0000 [#1
    CPU: 0 PID: 12914 Comm: rmmod Tainted: G        W         5.1.0+ #47
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:__list_del_entry_valid+0x53/0x90
    Code: 48 8b 32 48 39 fe 75 35 48 8b 50 08 48 39 f2 75 40 b8 01 00 00 00 5d c3 48
    89 fe 48 89 c2 48 c7 c7 18 75 fe 82 e8 cb 34 78 ff <0f> 0b 48 89 fe 48 c7 c7 50 75 fe 82 e8 ba 34 78 ff 0f 0b 48 89 f2
    RSP: 0018:ffffc90001c2fe40 EFLAGS: 00010286
    RAX: 000000000000004e RBX: ffffffffa0184000 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffff888237a17788 RDI: 00000000ffffffff
    RBP: ffffc90001c2fe40 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffc90001c2fe10 R11: 0000000000000000 R12: 0000000000000000
    R13: ffffc90001c2fe50 R14: ffffffffa0184000 R15: 0000000000000000
    FS:  00007f3d83634540(0000) GS:ffff888237a00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000555c350ea818 CR3: 0000000231677000 CR4: 00000000000006f0
    Call Trace:
     unregister_pernet_operations+0x34/0x120
     unregister_pernet_subsys+0x1c/0x30
     packet_exit+0x1c/0x369 [af_packet
     __x64_sys_delete_module+0x156/0x260
     ? lockdep_hardirqs_on+0x133/0x1b0
     ? do_syscall_64+0x12/0x1f0
     do_syscall_64+0x6e/0x1f0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    When modprobe af_packet, register_pernet_subsys
    fails and does a cleanup, ops->list is set to LIST_POISON1,
    but the module init is considered to success, then while rmmod it,
    BUG() is triggered in __list_del_entry_valid which is called from
    unregister_pernet_subsys. This patch fix error handing path in
    packet_init to avoid possilbe issue if some error occur.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be0e51d77a08bb4d26c68ababb9b332055433c89
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri May 3 13:33:23 2019 +0000

    net: ucc_geth - fix Oops when changing number of buffers in the ring
    
    [ Upstream commit ee0df19305d9fabd9479b785918966f6e25b733b ]
    
    When changing the number of buffers in the RX ring while the interface
    is running, the following Oops is encountered due to the new number
    of buffers being taken into account immediately while their allocation
    is done when opening the device only.
    
    [   69.882706] Unable to handle kernel paging request for data at address 0xf0000100
    [   69.890172] Faulting instruction address: 0xc033e164
    [   69.895122] Oops: Kernel access of bad area, sig: 11 [#1]
    [   69.900494] BE PREEMPT CMPCPRO
    [   69.907120] CPU: 0 PID: 0 Comm: swapper Not tainted 4.14.115-00006-g179ade8ce3-dirty #269
    [   69.915956] task: c0684310 task.stack: c06da000
    [   69.920470] NIP:  c033e164 LR: c02e44d0 CTR: c02e41fc
    [   69.925504] REGS: dfff1e20 TRAP: 0300   Not tainted  (4.14.115-00006-g179ade8ce3-dirty)
    [   69.934161] MSR:  00009032 <EE,ME,IR,DR,RI>  CR: 22004428  XER: 20000000
    [   69.940869] DAR: f0000100 DSISR: 20000000
    [   69.940869] GPR00: c0352d70 dfff1ed0 c0684310 f00000a4 00000040 dfff1f68 00000000 0000001f
    [   69.940869] GPR08: df53f410 1cc00040 00000021 c0781640 42004424 100c82b6 f00000a4 df53f5b0
    [   69.940869] GPR16: df53f6c0 c05daf84 00000040 00000000 00000040 c0782be4 00000000 00000001
    [   69.940869] GPR24: 00000000 df53f400 000001b0 df53f410 df53f000 0000003f df708220 1cc00044
    [   69.978348] NIP [c033e164] skb_put+0x0/0x5c
    [   69.982528] LR [c02e44d0] ucc_geth_poll+0x2d4/0x3f8
    [   69.987384] Call Trace:
    [   69.989830] [dfff1ed0] [c02e4554] ucc_geth_poll+0x358/0x3f8 (unreliable)
    [   69.996522] [dfff1f20] [c0352d70] net_rx_action+0x248/0x30c
    [   70.002099] [dfff1f80] [c04e93e4] __do_softirq+0xfc/0x310
    [   70.007492] [dfff1fe0] [c0021124] irq_exit+0xd0/0xd4
    [   70.012458] [dfff1ff0] [c000e7e0] call_do_irq+0x24/0x3c
    [   70.017683] [c06dbe80] [c0006bac] do_IRQ+0x64/0xc4
    [   70.022474] [c06dbea0] [c001097c] ret_from_except+0x0/0x14
    [   70.027964] --- interrupt: 501 at rcu_idle_exit+0x84/0x90
    [   70.027964]     LR = rcu_idle_exit+0x74/0x90
    [   70.037585] [c06dbf60] [20000000] 0x20000000 (unreliable)
    [   70.042984] [c06dbf80] [c004bb0c] do_idle+0xb4/0x11c
    [   70.047945] [c06dbfa0] [c004bd14] cpu_startup_entry+0x18/0x1c
    [   70.053682] [c06dbfb0] [c05fb034] start_kernel+0x370/0x384
    [   70.059153] [c06dbff0] [00003438] 0x3438
    [   70.063062] Instruction dump:
    [   70.066023] 38a00000 38800000 90010014 4bfff015 80010014 7c0803a6 3123ffff 7c691910
    [   70.073767] 38210010 4e800020 38600000 4e800020 <80e3005c> 80c30098 3107ffff 7d083910
    [   70.081690] ---[ end trace be7ccd9c1e1a9f12 ]---
    
    This patch forbids the modification of the number of buffers in the
    ring while the interface is running.
    
    Fixes: ac421852b3a0 ("ucc_geth: add ethtool support")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abda892dda7b8fb5c75e3d1bfb270cddfa17cd2a
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Mon May 13 13:15:17 2019 +0200

    net: seeq: fix crash caused by not set dev.parent
    
    [ Upstream commit 5afcd14cfc7fed1bcc8abcee2cef82732772bfc2 ]
    
    The old MIPS implementation of dma_cache_sync() didn't use the dev argument,
    but commit c9eb6172c328 ("dma-mapping: turn dma_cache_sync into a
    dma_map_ops method") changed that, so we now need to set dev.parent.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f80c82f30deb6418f0d75d7efcc9cffd5b58b5f
Author: Harini Katakam <harini.katakam@xilinx.com>
Date:   Tue May 7 19:59:10 2019 +0530

    net: macb: Change interrupt and napi enable order in open
    
    [ Upstream commit 0504453139ef5a593c9587e1e851febee859c7d8 ]
    
    Current order in open:
    -> Enable interrupts (macb_init_hw)
    -> Enable NAPI
    -> Start PHY
    
    Sequence of RX handling:
    -> RX interrupt occurs
    -> Interrupt is cleared and interrupt bits disabled in handler
    -> NAPI is scheduled
    -> In NAPI, RX budget is processed and RX interrupts are re-enabled
    
    With the above, on QEMU or fixed link setups (where PHY state doesn't
    matter), there's a chance macb RX interrupt occurs before NAPI is
    enabled. This will result in NAPI being scheduled before it is enabled.
    Fix this macb open by changing the order.
    
    Fixes: ae1f2a56d273 ("net: macb: Added support for many RX queues")
    Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a344dc5cd3a074841e5654e8e488589a6ec2c045
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Mon May 13 13:06:39 2019 +0000

    net: ethernet: stmmac: dwmac-sun8i: enable support of unicast filtering
    
    [ Upstream commit d4c26eb6e721683a0f93e346ce55bc8dc3cbb175 ]
    
    When adding more MAC addresses to a dwmac-sun8i interface, the device goes
    directly in promiscuous mode.
    This is due to IFF_UNICAST_FLT missing flag.
    
    So since the hardware support unicast filtering, let's add IFF_UNICAST_FLT.
    
    Fixes: 9f93ac8d4085 ("net-next: stmmac: Add dwmac-sun8i")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cb6d28ba5bed324cb113273e38551a6e43d22f9
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon May 6 23:25:29 2019 +0800

    net: dsa: Fix error cleanup path in dsa_init_module
    
    [ Upstream commit 68be930249d051fd54d3d99156b3dcadcb2a1f9b ]
    
    BUG: unable to handle kernel paging request at ffffffffa01c5430
    PGD 3270067 P4D 3270067 PUD 3271063 PMD 230bc5067 PTE 0
    Oops: 0000 [#1
    CPU: 0 PID: 6159 Comm: modprobe Not tainted 5.1.0+ #33
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:raw_notifier_chain_register+0x16/0x40
    Code: 63 f8 66 90 e9 5d ff ff ff 90 90 90 90 90 90 90 90 90 90 90 55 48 8b 07 48 89 e5 48 85 c0 74 1c 8b 56 10 3b 50 10 7e 07 eb 12 <39> 50 10 7c 0d 48 8d 78 08 48 8b 40 08 48 85 c0 75 ee 48 89 46 08
    RSP: 0018:ffffc90001c33c08 EFLAGS: 00010282
    RAX: ffffffffa01c5420 RBX: ffffffffa01db420 RCX: 4fcef45928070a8b
    RDX: 0000000000000000 RSI: ffffffffa01db420 RDI: ffffffffa01b0068
    RBP: ffffc90001c33c08 R08: 000000003e0a33d0 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000094443661 R12: ffff88822c320700
    R13: ffff88823109be80 R14: 0000000000000000 R15: ffffc90001c33e78
    FS:  00007fab8bd08540(0000) GS:ffff888237a00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffffffffa01c5430 CR3: 00000002297ea000 CR4: 00000000000006f0
    Call Trace:
     register_netdevice_notifier+0x43/0x250
     ? 0xffffffffa01e0000
     dsa_slave_register_notifier+0x13/0x70 [dsa_core
     ? 0xffffffffa01e0000
     dsa_init_module+0x2e/0x1000 [dsa_core
     do_one_initcall+0x6c/0x3cc
     ? do_init_module+0x22/0x1f1
     ? rcu_read_lock_sched_held+0x97/0xb0
     ? kmem_cache_alloc_trace+0x325/0x3b0
     do_init_module+0x5b/0x1f1
     load_module+0x1db1/0x2690
     ? m_show+0x1d0/0x1d0
     __do_sys_finit_module+0xc5/0xd0
     __x64_sys_finit_module+0x15/0x20
     do_syscall_64+0x6b/0x1d0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Cleanup allocated resourses if there are errors,
    otherwise it will trgger memleak.
    
    Fixes: c9eb3e0f8701 ("net: dsa: Add support for learning FDB through notification")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 353b3fd8e207b45f51c4214c9c230ba9c9e06d5b
Author: David Ahern <dsahern@gmail.com>
Date:   Tue May 7 20:44:59 2019 -0700

    ipv4: Fix raw socket lookup for local traffic
    
    [ Upstream commit 19e4e768064a87b073a4b4c138b55db70e0cfb9f ]
    
    inet_iif should be used for the raw socket lookup. inet_iif considers
    rt_iif which handles the case of local traffic.
    
    As it stands, ping to a local address with the '-I <dev>' option fails
    ever since ping was changed to use SO_BINDTODEVICE instead of
    cmsg + IP_PKTINFO.
    
    IPv6 works fine.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e83a63de802bac7cad265852e5fbecf6385b19ed
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue May 7 17:11:18 2019 +0800

    fib_rules: return 0 directly if an exactly same rule exists when NLM_F_EXCL not supplied
    
    [ Upstream commit e9919a24d3022f72bcadc407e73a6ef17093a849 ]
    
    With commit 153380ec4b9 ("fib_rules: Added NLM_F_EXCL support to
    fib_nl_newrule") we now able to check if a rule already exists. But this
    only works with iproute2. For other tools like libnl, NetworkManager,
    it still could add duplicate rules with only NLM_F_CREATE flag, like
    
    [localhost ~ ]# ip rule
    0:      from all lookup local
    32766:  from all lookup main
    32767:  from all lookup default
    100000: from 192.168.7.5 lookup 5
    100000: from 192.168.7.5 lookup 5
    
    As it doesn't make sense to create two duplicate rules, let's just return
    0 if the rule exists.
    
    Fixes: 153380ec4b9 ("fib_rules: Added NLM_F_EXCL support to fib_nl_newrule")
    Reported-by: Thomas Haller <thaller@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e996c41bb194a2c7a950023fef9caf77cb97df53
Author: Laurentiu Tudor <laurentiu.tudor@nxp.com>
Date:   Fri May 3 16:03:11 2019 +0300

    dpaa_eth: fix SG frame cleanup
    
    [ Upstream commit 17170e6570c082717c142733d9a638bcd20551f8 ]
    
    Fix issue with the entry indexing in the sg frame cleanup code being
    off-by-1. This problem showed up when doing some basic iperf tests and
    manifested in traffic coming to a halt.
    
    Signed-off-by: Laurentiu Tudor <laurentiu.tudor@nxp.com>
    Acked-by: Madalin Bucur <madalin.bucur@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73082d240fe6540bce300991f3e046636aeee955
Author: Tobin C. Harding <tobin@kernel.org>
Date:   Fri May 10 12:52:12 2019 +1000

    bridge: Fix error path for kobject_init_and_add()
    
    [ Upstream commit bdfad5aec1392b93495b77b864d58d7f101dc1c1 ]
    
    Currently error return from kobject_init_and_add() is not followed by a
    call to kobject_put().  This means there is a memory leak.  We currently
    set p to NULL so that kfree() may be called on it as a noop, the code is
    arguably clearer if we move the kfree() up closer to where it is
    called (instead of after goto jump).
    
    Remove a goto label 'err1' and jump to call to kobject_put() in error
    return from kobject_init_and_add() fixing the memory leak.  Re-name goto
    label 'put_back' to 'err1' now that we don't use err1, following current
    nomenclature (err1, err2 ...).  Move call to kfree out of the error
    code at bottom of function up to closer to where memory was allocated.
    Add comment to clarify call to kfree().
    
    Signed-off-by: Tobin C. Harding <tobin@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9035a941823d560a449beca00277aa079678696f
Author: Jarod Wilson <jarod@redhat.com>
Date:   Fri May 10 17:57:09 2019 -0400

    bonding: fix arp_validate toggling in active-backup mode
    
    [ Upstream commit a9b8a2b39ce65df45687cf9ef648885c2a99fe75 ]
    
    There's currently a problem with toggling arp_validate on and off with an
    active-backup bond. At the moment, you can start up a bond, like so:
    
    modprobe bonding mode=1 arp_interval=100 arp_validate=0 arp_ip_targets=192.168.1.1
    ip link set bond0 down
    echo "ens4f0" > /sys/class/net/bond0/bonding/slaves
    echo "ens4f1" > /sys/class/net/bond0/bonding/slaves
    ip link set bond0 up
    ip addr add 192.168.1.2/24 dev bond0
    
    Pings to 192.168.1.1 work just fine. Now turn on arp_validate:
    
    echo 1 > /sys/class/net/bond0/bonding/arp_validate
    
    Pings to 192.168.1.1 continue to work just fine. Now when you go to turn
    arp_validate off again, the link falls flat on it's face:
    
    echo 0 > /sys/class/net/bond0/bonding/arp_validate
    dmesg
    ...
    [133191.911987] bond0: Setting arp_validate to none (0)
    [133194.257793] bond0: bond_should_notify_peers: slave ens4f0
    [133194.258031] bond0: link status definitely down for interface ens4f0, disabling it
    [133194.259000] bond0: making interface ens4f1 the new active one
    [133197.330130] bond0: link status definitely down for interface ens4f1, disabling it
    [133197.331191] bond0: now running without any active interface!
    
    The problem lies in bond_options.c, where passing in arp_validate=0
    results in bond->recv_probe getting set to NULL. This flies directly in
    the face of commit 3fe68df97c7f, which says we need to set recv_probe =
    bond_arp_recv, even if we're not using arp_validate. Said commit fixed
    this in bond_option_arp_interval_set, but missed that we can get to that
    same state in bond_option_arp_validate_set as well.
    
    One solution would be to universally set recv_probe = bond_arp_recv here
    as well, but I don't think bond_option_arp_validate_set has any business
    touching recv_probe at all, and that should be left to the arp_interval
    code, so we can just make things much tidier here.
    
    Fixes: 3fe68df97c7f ("bonding: always set recv_probe to bond_arp_rcv in arp monitor")
    CC: Jay Vosburgh <j.vosburgh@gmail.com>
    CC: Veaceslav Falico <vfalico@gmail.com>
    CC: Andy Gospodarek <andy@greyhouse.net>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: netdev@vger.kernel.org
    Signed-off-by: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57e60bc8f74abcec2f76466b0516771ff579127f
Author: Nigel Croxon <ncroxon@redhat.com>
Date:   Fri Mar 29 10:46:15 2019 -0700

    Don't jump to compute_result state from check_result state
    
    commit 4f4fd7c5798bbdd5a03a60f6269cf1177fbd11ef upstream.
    
    Changing state from check_state_check_result to
    check_state_compute_result not only is unsafe but also doesn't
    appear to serve a valid purpose.  A raid6 check should only be
    pushing out extra writes if doing repair and a mis-match occurs.
    The stripe dev management will already try and do repair writes
    for failing sectors.
    
    This patch makes the raid6 check_state_check_result handling
    work more like raid5's.  If somehow too many failures for a
    check, just quit the check operation for the stripe.  When any
    checks pass, don't try and use check_state_compute_result for
    a purpose it isn't needed for and is unsafe for.  Just mark the
    stripe as in sync for passing its parity checks and let the
    stripe dev read/write code and the bad blocks list do their
    job handling I/O errors.
    
    Repro steps from Xiao:
    
    These are the steps to reproduce this problem:
    1. redefined OPT_MEDIUM_ERR_ADDR to 12000 in scsi_debug.c
    2. insmod scsi_debug.ko dev_size_mb=11000  max_luns=1 num_tgts=1
    3. mdadm --create /dev/md127 --level=6 --raid-devices=5 /dev/sde1 /dev/sde2 /dev/sde3 /dev/sde5 /dev/sde6
    sde is the disk created by scsi_debug
    4. echo "2" >/sys/module/scsi_debug/parameters/opts
    5. raid-check
    
    It panic:
    [ 4854.730899] md: data-check of RAID array md127
    [ 4854.857455] sd 5:0:0:0: [sdr] tag#80 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.859246] sd 5:0:0:0: [sdr] tag#80 Sense Key : Medium Error [current]
    [ 4854.860694] sd 5:0:0:0: [sdr] tag#80 Add. Sense: Unrecovered read error
    [ 4854.862207] sd 5:0:0:0: [sdr] tag#80 CDB: Read(10) 28 00 00 00 2d 88 00 04 00 00
    [ 4854.864196] print_req_error: critical medium error, dev sdr, sector 11656 flags 0
    [ 4854.867409] sd 5:0:0:0: [sdr] tag#100 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.869469] sd 5:0:0:0: [sdr] tag#100 Sense Key : Medium Error [current]
    [ 4854.871206] sd 5:0:0:0: [sdr] tag#100 Add. Sense: Unrecovered read error
    [ 4854.872858] sd 5:0:0:0: [sdr] tag#100 CDB: Read(10) 28 00 00 00 2e e0 00 00 08 00
    [ 4854.874587] print_req_error: critical medium error, dev sdr, sector 12000 flags 4000
    [ 4854.876456] sd 5:0:0:0: [sdr] tag#101 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.878552] sd 5:0:0:0: [sdr] tag#101 Sense Key : Medium Error [current]
    [ 4854.880278] sd 5:0:0:0: [sdr] tag#101 Add. Sense: Unrecovered read error
    [ 4854.881846] sd 5:0:0:0: [sdr] tag#101 CDB: Read(10) 28 00 00 00 2e e8 00 00 08 00
    [ 4854.883691] print_req_error: critical medium error, dev sdr, sector 12008 flags 4000
    [ 4854.893927] sd 5:0:0:0: [sdr] tag#166 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.896002] sd 5:0:0:0: [sdr] tag#166 Sense Key : Medium Error [current]
    [ 4854.897561] sd 5:0:0:0: [sdr] tag#166 Add. Sense: Unrecovered read error
    [ 4854.899110] sd 5:0:0:0: [sdr] tag#166 CDB: Read(10) 28 00 00 00 2e e0 00 00 10 00
    [ 4854.900989] print_req_error: critical medium error, dev sdr, sector 12000 flags 0
    [ 4854.902757] md/raid:md127: read error NOT corrected!! (sector 9952 on sdr1).
    [ 4854.904375] md/raid:md127: read error NOT corrected!! (sector 9960 on sdr1).
    [ 4854.906201] ------------[ cut here ]------------
    [ 4854.907341] kernel BUG at drivers/md/raid5.c:4190!
    
    raid5.c:4190 above is this BUG_ON:
    
        handle_parity_checks6()
            ...
            BUG_ON(s->uptodate < disks - 1); /* We don't need Q to recover */
    
    Cc: <stable@vger.kernel.org> # v3.16+
    OriginalAuthor: David Jeffery <djeffery@redhat.com>
    Cc: Xiao Ni <xni@redhat.com>
    Tested-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: David Jeffy <djeffery@redhat.com>
    Signed-off-by: Nigel Croxon <ncroxon@redhat.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c72b658be4bab095204456595be22110b2ad848
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Apr 16 10:17:22 2019 -0500

    rtlwifi: rtl8723ae: Fix missing break in switch statement
    
    commit 84242b82d81c54e009a2aaa74d3d9eff70babf56 upstream.
    
    Add missing break statement in order to prevent the code from falling
    through to case 0x1025, and erroneously setting rtlhal->oem_id to
    RT_CID_819X_ACER when rtlefuse->eeprom_svid is equal to 0x10EC and
    none of the cases in switch (rtlefuse->eeprom_smid) match.
    
    This bug was found thanks to the ongoing efforts to enable
    -Wimplicit-fallthrough.
    
    Fixes: 238ad2ddf34b ("rtlwifi: rtl8723ae: Clean up the hardware info routine")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b856e1fb89bfa277a0d062c82b33f52f0f9c46d1
Author: Petr Štetiar <ynezz@true.cz>
Date:   Thu Apr 11 20:13:30 2019 +0200

    mwl8k: Fix rate_idx underflow
    
    commit 6b583201fa219b7b1b6aebd8966c8fd9357ef9f4 upstream.
    
    It was reported on OpenWrt bug tracking system[1], that several users
    are affected by the endless reboot of their routers if they configure
    5GHz interface with channel 44 or 48.
    
    The reboot loop is caused by the following excessive number of WARN_ON
    messages:
    
     WARNING: CPU: 0 PID: 0 at backports-4.19.23-1/net/mac80211/rx.c:4516
                                 ieee80211_rx_napi+0x1fc/0xa54 [mac80211]
    
    as the messages are being correctly emitted by the following guard:
    
     case RX_ENC_LEGACY:
          if (WARN_ON(status->rate_idx >= sband->n_bitrates))
    
    as the rate_idx is in this case erroneously set to 251 (0xfb). This fix
    simply converts previously used magic number to proper constant and
    guards against substraction which is leading to the currently observed
    underflow.
    
    1. https://bugs.openwrt.org/index.php?do=details&task_id=2218
    
    Fixes: 854783444bab ("mwl8k: properly set receive status rate index on 5 GHz receive")
    Cc: <stable@vger.kernel.org>
    Tested-by: Eubert Bao <bunnier@gmail.com>
    Reported-by: Eubert Bao <bunnier@gmail.com>
    Signed-off-by: Petr Štetiar <ynezz@true.cz>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9952ff2838f8f63e0d9ca7cf008344fc13eb757a
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 25 18:05:36 2019 +0200

    USB: serial: fix unthrottle races
    
    commit 3f5edd58d040bfa4b74fb89bc02f0bc6b9cd06ab upstream.
    
    Fix two long-standing bugs which could potentially lead to memory
    corruption or leave the port throttled until it is reopened (on weakly
    ordered systems), respectively, when read-URB completion races with
    unthrottle().
    
    First, the URB must not be marked as free before processing is complete
    to prevent it from being submitted by unthrottle() on another CPU.
    
            CPU 1                           CPU 2
            ================                ================
            complete()                      unthrottle()
              process_urb();
              smp_mb__before_atomic();
              set_bit(i, free);               if (test_and_clear_bit(i, free))
                                                      submit_urb();
    
    Second, the URB must be marked as free before checking the throttled
    flag to prevent unthrottle() on another CPU from failing to observe that
    the URB needs to be submitted if complete() sees that the throttled flag
    is set.
    
            CPU 1                           CPU 2
            ================                ================
            complete()                      unthrottle()
              set_bit(i, free);               throttled = 0;
              smp_mb__after_atomic();         smp_mb();
              if (throttled)                  if (test_and_clear_bit(i, free))
                      return;                         submit_urb();
    
    Note that test_and_clear_bit() only implies barriers when the test is
    successful. To handle the case where the URB is still in use an explicit
    barrier needs to be added to unthrottle() for the second race condition.
    
    Fixes: d83b405383c9 ("USB: serial: add support for multiple read urbs")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fd04652aa579d101e7b2c8aec83d2ea5be9fb1e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Apr 4 14:39:09 2019 +0200

    virt: vbox: Sanity-check parameter types for hgcm-calls coming from userspace
    
    commit cf4f2ad6b87dda2dbe0573b1ebeb0273f8d4aac6 upstream.
    
    Userspace can make host function calls, called hgcm-calls through the
    /dev/vboxguest device.
    
    In this case we should not accept all hgcm-function-parameter-types, some
    are only valid for in kernel calls.
    
    This commit adds proper hgcm-function-parameter-type validation to the
    ioctl for doing a hgcm-call from userspace.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 777d3fa587fba8d89976816dc9cc8c2516263bc5
Author: Andrea Parri <andrea.parri@amarulasolutions.com>
Date:   Tue Apr 16 14:17:11 2019 +0200

    kernfs: fix barrier usage in __kernfs_new_node()
    
    commit 998267900cee901c5d1dfa029a6304d00acbc29f upstream.
    
    smp_mb__before_atomic() can not be applied to atomic_set().  Remove the
    barrier and rely on RELEASE synchronization.
    
    Fixes: ba16b2846a8c6 ("kernfs: add an API to get kernfs node from inode number")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andrea Parri <andrea.parri@amarulasolutions.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b2c4e6de652044cc655edaa911e2169f4e9a063
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Thu Apr 25 16:19:47 2019 +0200

    i2c: core: ratelimit 'transfer when suspended' errors
    
    commit 4db61c2a16fce2ef85d82751de4ba43a39347cfb upstream.
    
    There are two problems with WARN_ON() here. One: It is not ratelimited.
    Two: We don't see which adapter was used when trying to transfer
    something when already suspended. Implement a custom ratelimit once per
    adapter and use dev_WARN there. This fixes both issues. Drawback is that
    we don't see if multiple drivers are trying to transfer with the same
    adapter while suspended. They need to be discovered one after the other
    now. This is better than a high CPU load because a really broken driver
    might try to resend endlessly.
    
    Fixes: 9ac6cb5fbb17 ("i2c: add suspended flag and accessors for i2c adapters")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@vger.kernel.org # v5.1+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af6a4f3ccd4df9087e0a44d783a565a38722a56a
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Apr 11 16:56:31 2019 -0700

    selftests/seccomp: Handle namespace failures gracefully
    
    commit 9dd3fcb0ab73cb1e00b8562ef027a38521aaff87 upstream.
    
    When running without USERNS or PIDNS the seccomp test would hang since
    it was waiting forever for the child to trigger the user notification
    since it seems the glibc() abort handler makes a call to getpid(),
    which would trap again. This changes the getpid filter to getppid, and
    makes sure ASSERTs execute to stop from spawning the listener.
    
    Reported-by: Shuah Khan <shuah@kernel.org>
    Fixes: 6a21cc50f0c7 ("seccomp: add a return code to trap to userspace")
    Cc: stable@vger.kernel.org # > 5.0
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Tycho Andersen <tycho@tycho.ws>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4173b7588c32ba64a61e831e99a461e14b6b53b
Author: Lei YU <mine260309@gmail.com>
Date:   Mon Apr 15 18:37:20 2019 +0800

    hwmon: (occ) Fix extended status bits
    
    commit b88c5049219a7f322bb1fd65fc30d17472a23563 upstream.
    
    The occ's extended status is checked and shown as sysfs attributes. But
    the code was incorrectly checking the "status" bits.
    Fix it by checking the "ext_status" bits.
    
    Cc: stable@vger.kernel.org
    Fixes: df04ced684d4 ("hwmon (occ): Add sysfs attributes for additional OCC data")
    Signed-off-by: Lei YU <mine260309@gmail.com>
    Reviewed-by: Eddie James <eajames@linux.ibm.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 214e40a558f6d1505e441f15b23ea961d806315a
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Apr 3 14:48:33 2019 +0200

    hwmon: (pwm-fan) Disable PWM if fetching cooling data fails
    
    commit 53f1647da3e8fb3e89066798f0fdc045064d353d upstream.
    
    In case pwm_fan_of_get_cooling_data() fails we should disable the PWM
    just like in the other error cases.
    
    Fixes: 2e5219c77183 ("hwmon: (pwm-fan) Read PWM FAN configuration from device tree")
    Cc: <stable@vger.kernel.org> # 4.14+
    Reported-by: Guenter Rock <linux@roeck-us.net>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2bc9bc6eede76f4d5f003e855959e0bfcc9779e
Author: Mario Limonciello <mario.limonciello@dell.com>
Date:   Wed Mar 27 09:25:34 2019 -0500

    platform/x86: dell-laptop: fix rfkill functionality
    
    commit 6cc13c28da5beee0f706db6450e190709700b34a upstream.
    
    When converting the driver two arguments were transposed leading
    to rfkill not working.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201427
    Reported-by: Pepijn de Vos <pepijndevos@gmail.com>
    Fixes: 549b49 ("platform/x86: dell-smbios: Introduce dispatcher for SMM calls")
    Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
    Acked-by: Pali Rohár <pali.rohar@gmail.com>
    Cc: <stable@vger.kernel.org> # 4.14.x
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59190fff6b228dc1297acdc8b725bf77655e6c68
Author: Jiaxun Yang <jiaxun.yang@flygoat.com>
Date:   Thu Mar 7 17:37:16 2019 +0800

    platform/x86: thinkpad_acpi: Disable Bluetooth for some machines
    
    commit f7db839fccf087664e5587966220821289b6a9cb upstream.
    
    Some AMD based ThinkPads have a firmware bug that calling
    "GBDC" will cause Bluetooth on Intel wireless cards blocked.
    
    Probe these models by DMI match and disable Bluetooth subdriver
    if specified Intel wireless card exist.
    
    Cc: stable <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67acc44d45ae722f47b33d5b48948a033d6c571d
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Wed Apr 24 13:09:34 2019 -0500

    platform/x86: sony-laptop: Fix unintentional fall-through
    
    commit 1cbd7a64959d33e7a2a1fa2bf36a62b350a9fcbd upstream.
    
    It seems that the default case should return AE_CTRL_TERMINATE, instead
    of falling through to case ACPI_RESOURCE_TYPE_END_TAG and returning AE_OK;
    otherwise the line of code at the end of the function is unreachable and
    makes no sense:
    
    return AE_CTRL_TERMINATE;
    
    This fix is based on the following thread of discussion:
    
    https://lore.kernel.org/patchwork/patch/959782/
    
    Fixes: 33a04454527e ("sony-laptop: Add SNY6001 device handling (sonypi reimplementation)")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
