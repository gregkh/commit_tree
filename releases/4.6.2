commit 536b1f59b9b2be80e5cdc02ca3300d7fe9f44cc1
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jun 7 18:23:53 2016 -0700

    Linux 4.6.2

commit 18055cbc5e852cda2b1dc7486f85e8af626d8a02
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Wed Mar 30 17:09:13 2016 +0100

    regulator: Fix deadlock during regulator registration
    
    commit a2151374230820a3a6e654f2998b2a44dbfae4e1 upstream.
    
    Commit 5e3ca2b349b1 ("regulator: Try to resolve regulators supplies on
    registration") added a call to regulator_resolve_supply() within
    regulator_register() where the regulator_list_mutex is held. This causes
    a deadlock to occur on the Tegra114 Dalmore board when the palmas PMIC
    is registered because regulator_register_resolve_supply() calls
    regulator_dev_lookup() which may try to acquire the regulator_list_mutex
    again.
    
    Fix this by releasing the mutex before calling
    regulator_register_resolve_supply() and update the error exit path to
    ensure the mutex is released on an error.
    
    [Made commit message more legible -- broonie]
    
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55d37507a61b889945fac08f3ea7b3a0c8d95522
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Tue May 24 12:50:23 2016 -0700

    IB/hfi1: Fix hard lockup due to not using save/restore spin lock
    
    commit 7049de65c9e520886f06d6f9deceaaed5d93fb7c upstream.
    
    Commit b9b06cb6feda
    ("IB/hfi1: Fix missing lock/unlock in verbs drain callback")
    added a spin lock.
    
    Unfortunately, the new lock code can be called from a base
    level interrupt state, and an interrupt that can get stacked
    will attempt to get the same lock.
    
    Fix by using the flag save/restore spin lock variation.
    
    Cc: stable@vger.kernel.org # 4.6+
    Reviewed-by: Sebastian Sanchez <sebastian.sanchez@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ce76644efbacb708b6c9f1d893890bdd410465c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat Apr 16 22:41:46 2016 +0200

    drm: msm: remove unused variable
    
    commit 6979cd54c0667189bb0805c0fcebfef8afc5a191 upstream.
    
    A recent cleanup removed the only user of the 'kms' variable in
    msm_preclose(), causing a harmless compiler warning:
    
    drivers/gpu/drm/msm/msm_drv.c: In function 'msm_preclose':
    drivers/gpu/drm/msm/msm_drv.c:468:18: error: unused variable 'kms' [-Werror=unused-variable]
    
    This removes the variable as well.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 4016260ba47a ("drm/msm: fix bug after preclose removal")
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b09e96744342e7a7fbf92fc0a698ab67887fcb7
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed May 18 13:54:23 2016 +1000

    xfs: skip stale inodes in xfs_iflush_cluster
    
    commit 7d3aa7fe970791f1a674b14572a411accf2f4d4e upstream.
    
    We don't write back stale inodes so we should skip them in
    xfs_iflush_cluster, too.
    
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03b58aaa2f6974a074eeb4687bb894399729e0f6
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed May 18 13:54:22 2016 +1000

    xfs: fix inode validity check in xfs_iflush_cluster
    
    commit 51b07f30a71c27405259a0248206ed4e22adbee2 upstream.
    
    Some careless idiot(*) wrote crap code in commit 1a3e8f3 ("xfs:
    convert inode cache lookups to use RCU locking") back in late 2010,
    and so xfs_iflush_cluster checks the wrong inode for whether it is
    still valid under RCU protection. Fix it to lock and check the
    correct inode.
    
    (*) Careless-idiot: Dave Chinner <dchinner@redhat.com>
    
    Discovered-by: Brain Foster <bfoster@redhat.com>
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94e7cf3f6e2fa8c8301516db503126b7e96b4551
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed May 18 13:53:42 2016 +1000

    xfs: xfs_iflush_cluster fails to abort on error
    
    commit b1438f477934f5a4d5a44df26f3079a7575d5946 upstream.
    
    When a failure due to an inode buffer occurs, the error handling
    fails to abort the inode writeback correctly. This can result in the
    inode being reclaimed whilst still in the AIL, leading to
    use-after-free situations as well as filesystems that cannot be
    unmounted as the inode log items left in the AIL never get removed.
    
    Fix this by ensuring fatal errors from xfs_imap_to_bp() result in
    the inode flush being aborted correctly.
    
    Reported-by: Shyam Kaushik <shyam@zadarastorage.com>
    Diagnosed-by: Shyam Kaushik <shyam@zadarastorage.com>
    Tested-by: Shyam Kaushik <shyam@zadarastorage.com>
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b0d2a625088e4138fab67152b91be6359da4563
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed May 18 13:52:42 2016 +1000

    xfs: remove xfs_fs_evict_inode()
    
    commit 8179c03629de67f515d3ab825b5a9428687d4b85 upstream.
    
    Joe Lawrence reported a list_add corruption with 4.6-rc1 when
    testing some custom md administration code that made it's own
    block device nodes for the md array. The simple test loop of:
    
    for i in {0..100}; do
            mknod --mode=0600 $tmp/tmp_node b $MAJOR $MINOR
            mdadm --detail --export $tmp/tmp_node > /dev/null
            rm -f $tmp/tmp_node
    done
    
    
    Would produce this warning in bd_acquire() when mdadm opened the
    device node:
    
    list_add double add: new=ffff88043831c7b8, prev=ffff8804380287d8, next=ffff88043831c7b8.
    
    And then produce this from bd_forget from kdevtmpfs evicting a block
    dev inode:
    
    list_del corruption. prev->next should be ffff8800bb83eb10, but was ffff88043831c7b8
    
    This is a regression caused by commit c19b3b05 ("xfs: mode di_mode
    to vfs inode"). The issue is that xfs_inactive() frees the
    unlinked inode, and the above commit meant that this freeing zeroed
    the mode in the struct inode. The problem is that after evict() has
    called ->evict_inode, it expects the i_mode to be intact so that it
    can call bd_forget() or cd_forget() to drop the reference to the
    block device inode attached to the XFS inode.
    
    In reality, the only thing we do in xfs_fs_evict_inode() that is not
    generic is call xfs_inactive(). We can move the xfs_inactive() call
    to xfs_fs_destroy_inode() without any problems at all, and this
    will leave the VFS inode intact until it is completely done with it.
    
    So, remove xfs_fs_evict_inode(), and do the work it used to do in
    ->destroy_inode instead.
    
    Reported-by: Joe Lawrence <joe.lawrence@stratus.com>
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3abc7b73224c789af7a471c32d78f1665582ec87
Author: Dave Chinner <dchinner@redhat.com>
Date:   Wed Apr 6 07:06:20 2016 +1000

    xfs: Don't wrap growfs AGFL indexes
    
    commit ad747e3b299671e1a53db74963cc6c5f6cdb9f6d upstream.
    
    Commit 96f859d ("libxfs: pack the agfl header structure so
    XFS_AGFL_SIZE is correct") allowed the freelist to use the empty
    slot at the end of the freelist on 64 bit systems that was not
    being used due to sizeof() rounding up the structure size.
    
    This has caused versions of xfs_repair prior to 4.5.0 (which also
    has the fix) to report this as a corruption once the filesystem has
    been grown. Older kernels can also have problems (seen from a whacky
    container/vm management environment) mounting filesystems grown on a
    system with a newer kernel than the vm/container it is deployed on.
    
    To avoid this problem, change the initial free list indexes not to
    wrap across the end of the AGFL, hence avoiding the initialisation
    of agf_fllast to the last index in the AGFL.
    
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88f4d3b70849f436021d9d0290a85f32bf46b0bb
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Wed Apr 6 07:05:41 2016 +1000

    xfs: disallow rw remount on fs with unknown ro-compat features
    
    commit d0a58e833931234c44e515b5b8bede32bd4e6eed upstream.
    
    Today, a kernel which refuses to mount a filesystem read-write
    due to unknown ro-compat features can still transition to read-write
    via the remount path.  The old kernel is most likely none the wiser,
    because it's unaware of the new feature, and isn't using it.  However,
    writing to the filesystem may well corrupt metadata related to that
    new feature, and moving to a newer kernel which understand the feature
    will have problems.
    
    Right now the only ro-compat feature we have is the free inode btree,
    which showed up in v3.16.  It would be good to push this back to
    all the active stable kernels, I think, so that if anyone is using
    newer mkfs (which enables the finobt feature) with older kernel
    releases, they'll be protected.
    
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Bill O'Donnell <billodo@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 579c08b8ed33ee94543aeaaabf6bbd6b0d9c8a13
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Apr 25 17:35:30 2016 +0200

    gcov: disable tree-loop-im to reduce stack usage
    
    commit c87bf431448b404a6ef5fbabd74c0e3e42157a7f upstream.
    
    Enabling CONFIG_GCOV_PROFILE_ALL produces us a lot of warnings like
    
    lib/lz4/lz4hc_compress.c: In function 'lz4_compresshcctx':
    lib/lz4/lz4hc_compress.c:514:1: warning: the frame size of 1504 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    After some investigation, I found that this behavior started with gcc-4.9,
    and opened https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69702.
    A suggested workaround for it is to use the -fno-tree-loop-im
    flag that turns off one of the optimization stages in gcc, so the
    code runs a little slower but does not use excessive amounts
    of stack.
    
    We could make this conditional on the gcc version, but I could not
    find an easy way to do this in Kbuild and the benefit would be
    fairly small, given that most of the gcc version in production are
    affected now.
    
    I'm marking this for 'stable' backports because it addresses a bug
    with code generation in gcc that exists in all kernel versions
    with the affected gcc releases.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2a120ab424856178a5ceae7521100808ee9112b
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri May 27 14:27:38 2016 -0700

    mm: thp: avoid false positive VM_BUG_ON_PAGE in page_move_anon_rmap()
    
    commit 0798d3c022dc63eb0ec02b511e1f76ca8411ef8e upstream.
    
    If page_move_anon_rmap() is refiling a pmd-splitted THP mapped in a tail
    page from a pte, the "address" must be THP aligned in order for the
    page->index bugcheck to pass in the CONFIG_DEBUG_VM=y builds.
    
    Link: http://lkml.kernel.org/r/1464253620-106404-1-git-send-email-kirill.shutemov@linux.intel.com
    Fixes: 6d0a07edd17c ("mm: thp: calculate the mapcount correctly for THP pages during WP faults")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reported-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d7ceda76ce9708fa796a9c494f0422370dd6055
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Sat May 14 20:09:52 2016 -0700

    scripts/package/Makefile: rpmbuild add support of RPMOPTS
    
    commit 65a9f31c5042e5bb50d30ed8ae374044be561054 upstream.
    
    After commit 21a59991ce0c ("scripts/package/Makefile: rpmbuild is needed
    for rpm targets"), it is no longer possible to specify RPMOPTS.
    For example, we can no longer able to control _topdir using the following
    make command.
    make RPMOPTS="--define '_topdir /home/xyz/workspace/'" binrpm-pkg
    
    Fixes: 21a59991ce0c ("scripts/package/Makefile: rpmbuild is needed for rpm targets")
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 923dd9f8eb9d5ecf2e6cd2b02a29a0129ffff23a
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu May 26 15:16:25 2016 -0700

    dma-debug: avoid spinlock recursion when disabling dma-debug
    
    commit 3017cd63f26fc655d56875aaf497153ba60e9edf upstream.
    
    With netconsole (at least) the pr_err("...  disablingn") call can
    recurse back into the dma-debug code, where it'll try to grab
    free_entries_lock again.  Avoid the problem by doing the printk after
    dropping the lock.
    
    Link: http://lkml.kernel.org/r/1463678421-18683-1-git-send-email-ville.syrjala@linux.intel.com
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41103c791d4af40643183825d61eb7bb34282ac3
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri May 20 23:09:49 2016 +0200

    PM / sleep: Handle failures in device_suspend_late() consistently
    
    commit 3a17fb329da68cb00558721aff876a80bba2fdb9 upstream.
    
    Grygorii Strashko reports:
    
     The PM runtime will be left disabled for the device if its
     .suspend_late() callback fails and async suspend is not allowed
     for this device. In this case device will not be added in
     dpm_late_early_list and dpm_resume_early() will ignore this
     device, as result PM runtime will be disabled for it forever
     (side effect: after 8 subsequent failures for the same device
     the PM runtime will be reenabled due to disable_depth overflow).
    
    To fix this problem, add devices to dpm_late_early_list regardless
    of whether or not device_suspend_late() returns errors for them.
    
    That will ensure failures in there to be handled consistently for
    all devices regardless of their async suspend/resume status.
    
    Reported-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Tested-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b64a69a65e749d9d09851963e3bbbad8f858d946
Author: Weston Andros Adamson <dros@monkey.org>
Date:   Wed May 25 10:07:23 2016 -0400

    nfs: avoid race that crashes nfs_init_commit
    
    commit ade8febde0271513360bac44883dbebad44276c3 upstream.
    
    Since the patch "NFS: Allow multiple commit requests in flight per file"
    we can run multiple simultaneous commits on the same inode.  This
    introduced a race over collecting pages to commit that made it possible
    to call nfs_init_commit() with an empty list - which causes crashes like
    the one below.
    
    The fix is to catch this race and avoid calling nfs_init_commit and
    initiate_commit when there is no work to do.
    
    Here is the crash:
    
    [600522.076832] BUG: unable to handle kernel NULL pointer dereference at 0000000000000040
    [600522.078475] IP: [<ffffffffa0479e72>] nfs_init_commit+0x22/0x130 [nfs]
    [600522.078745] PGD 4272b1067 PUD 4272cb067 PMD 0
    [600522.078972] Oops: 0000 [#1] SMP
    [600522.079204] Modules linked in: nfsv3 nfs_layout_flexfiles rpcsec_gss_krb5 nfsv4 dns_resolver nfs fscache dcdbas ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ebtable_nat ebtable_broute bridge stp llc ebtable_filter ebtables ip6table_nat nf_conntrack_ipv6 nf_defrag_ipv6 nf_nat_ipv6 ip6table_mangle ip6table_security ip6table_raw ip6table_filter ip6_tables iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack iptable_mangle iptable_security iptable_raw vmw_vsock_vmci_transport vsock bonding ipmi_devintf ipmi_msghandler coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ppdev vmw_balloon parport_pc parport acpi_cpufreq vmw_vmci i2c_piix4 shpchp nfsd auth_rpcgss nfs_acl lockd grace sunrpc xfs libcrc32c vmwgfx drm_kms_helper ttm drm crc32c_intel serio_raw vmxnet3
    [600522.081380]  vmw_pvscsi ata_generic pata_acpi
    [600522.081809] CPU: 3 PID: 15667 Comm: /usr/bin/python Not tainted 4.1.9-100.pd.88.el7.x86_64 #1
    [600522.082281] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 09/30/2014
    [600522.082814] task: ffff8800bbbfa780 ti: ffff88042ae84000 task.ti: ffff88042ae84000
    [600522.083378] RIP: 0010:[<ffffffffa0479e72>]  [<ffffffffa0479e72>] nfs_init_commit+0x22/0x130 [nfs]
    [600522.083973] RSP: 0018:ffff88042ae87438  EFLAGS: 00010246
    [600522.084571] RAX: 0000000000000000 RBX: ffff880003485e40 RCX: ffff88042ae87588
    [600522.085188] RDX: 0000000000000000 RSI: ffff88042ae874b0 RDI: ffff880003485e40
    [600522.085756] RBP: ffff88042ae87448 R08: ffff880003486010 R09: ffff88042ae874b0
    [600522.086332] R10: 0000000000000000 R11: 0000000000000005 R12: ffff88042ae872d0
    [600522.086905] R13: ffff88042ae874b0 R14: ffff880003485e40 R15: ffff88042704c840
    [600522.087484] FS:  00007f4728ff2740(0000) GS:ffff88043fd80000(0000) knlGS:0000000000000000
    [600522.088070] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [600522.088663] CR2: 0000000000000040 CR3: 000000042b6aa000 CR4: 00000000001406e0
    [600522.089327] Stack:
    [600522.089926]  0000000000000001 ffff88042ae87588 ffff88042ae874f8 ffffffffa04f09fa
    [600522.090549]  0000000000017840 0000000000017840 ffff88042ae87588 ffff8803258d9930
    [600522.091169]  ffff88042ae87578 ffffffffa0563d80 0000000000000000 ffff88042704c840
    [600522.091789] Call Trace:
    [600522.092420]  [<ffffffffa04f09fa>] pnfs_generic_commit_pagelist+0x1da/0x320 [nfsv4]
    [600522.093052]  [<ffffffffa0563d80>] ? ff_layout_commit_prepare_v3+0x30/0x30 [nfs_layout_flexfiles]
    [600522.093696]  [<ffffffffa0562645>] ff_layout_commit_pagelist+0x15/0x20 [nfs_layout_flexfiles]
    [600522.094359]  [<ffffffffa047bc78>] nfs_generic_commit_list+0xe8/0x120 [nfs]
    [600522.095032]  [<ffffffffa047bd6a>] nfs_commit_inode+0xba/0x110 [nfs]
    [600522.095719]  [<ffffffffa046ac54>] nfs_release_page+0x44/0xd0 [nfs]
    [600522.096410]  [<ffffffff811a8122>] try_to_release_page+0x32/0x50
    [600522.097109]  [<ffffffff811bd4f1>] shrink_page_list+0x961/0xb30
    [600522.097812]  [<ffffffff811bdced>] shrink_inactive_list+0x1cd/0x550
    [600522.098530]  [<ffffffff811bea65>] shrink_lruvec+0x635/0x840
    [600522.099250]  [<ffffffff811bed60>] shrink_zone+0xf0/0x2f0
    [600522.099974]  [<ffffffff811bf312>] do_try_to_free_pages+0x192/0x470
    [600522.100709]  [<ffffffff811bf6ca>] try_to_free_pages+0xda/0x170
    [600522.101464]  [<ffffffff811b2198>] __alloc_pages_nodemask+0x588/0x970
    [600522.102235]  [<ffffffff811fbbd5>] alloc_pages_vma+0xb5/0x230
    [600522.103000]  [<ffffffff813a1589>] ? cpumask_any_but+0x39/0x50
    [600522.103774]  [<ffffffff811d6115>] wp_page_copy.isra.55+0x95/0x490
    [600522.104558]  [<ffffffff810e3438>] ? __wake_up+0x48/0x60
    [600522.105357]  [<ffffffff811d7d3b>] do_wp_page+0xab/0x4f0
    [600522.106137]  [<ffffffff810a1bbb>] ? release_task+0x36b/0x470
    [600522.106902]  [<ffffffff8126dbd7>] ? eventfd_ctx_read+0x67/0x1c0
    [600522.107659]  [<ffffffff811da2a8>] handle_mm_fault+0xc78/0x1900
    [600522.108431]  [<ffffffff81067ef1>] __do_page_fault+0x181/0x420
    [600522.109173]  [<ffffffff811446a6>] ? __audit_syscall_exit+0x1e6/0x280
    [600522.109893]  [<ffffffff810681c0>] do_page_fault+0x30/0x80
    [600522.110594]  [<ffffffff81024f36>] ? syscall_trace_leave+0xc6/0x120
    [600522.111288]  [<ffffffff81790a58>] page_fault+0x28/0x30
    [600522.111947] Code: 5d c3 0f 1f 80 00 00 00 00 0f 1f 44 00 00 55 4c 8d 87 d0 01 00 00 48 89 e5 53 48 89 fb 48 83 ec 08 4c 8b 0e 49 8b 41 18 4c 39 ce <48> 8b 40 40 4c 8b 50 30 74 24 48 8b 87 d0 01 00 00 48 8b 7e 08
    [600522.113343] RIP  [<ffffffffa0479e72>] nfs_init_commit+0x22/0x130 [nfs]
    [600522.114003]  RSP <ffff88042ae87438>
    [600522.114636] CR2: 0000000000000040
    
    Fixes: af7cf057 (NFS: Allow multiple commit requests in flight per file)
    Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35b5ea7019bcb78e93793578629397895cee6fc8
Author: Nicolai Stange <nicstange@gmail.com>
Date:   Thu May 5 19:46:19 2016 -0400

    ext4: silence UBSAN in ext4_mb_init()
    
    commit 935244cd54b86ca46e69bc6604d2adfb1aec2d42 upstream.
    
    Currently, in ext4_mb_init(), there's a loop like the following:
    
      do {
        ...
        offset += 1 << (sb->s_blocksize_bits - i);
        i++;
      } while (i <= sb->s_blocksize_bits + 1);
    
    Note that the updated offset is used in the loop's next iteration only.
    
    However, at the last iteration, that is at i == sb->s_blocksize_bits + 1,
    the shift count becomes equal to (unsigned)-1 > 31 (c.f. C99 6.5.7(3))
    and UBSAN reports
    
      UBSAN: Undefined behaviour in fs/ext4/mballoc.c:2621:15
      shift exponent 4294967295 is too large for 32-bit type 'int'
      [...]
      Call Trace:
       [<ffffffff818c4d25>] dump_stack+0xbc/0x117
       [<ffffffff818c4c69>] ? _atomic_dec_and_lock+0x169/0x169
       [<ffffffff819411ab>] ubsan_epilogue+0xd/0x4e
       [<ffffffff81941cac>] __ubsan_handle_shift_out_of_bounds+0x1fb/0x254
       [<ffffffff81941ab1>] ? __ubsan_handle_load_invalid_value+0x158/0x158
       [<ffffffff814b6dc1>] ? kmem_cache_alloc+0x101/0x390
       [<ffffffff816fc13b>] ? ext4_mb_init+0x13b/0xfd0
       [<ffffffff814293c7>] ? create_cache+0x57/0x1f0
       [<ffffffff8142948a>] ? create_cache+0x11a/0x1f0
       [<ffffffff821c2168>] ? mutex_lock+0x38/0x60
       [<ffffffff821c23ab>] ? mutex_unlock+0x1b/0x50
       [<ffffffff814c26ab>] ? put_online_mems+0x5b/0xc0
       [<ffffffff81429677>] ? kmem_cache_create+0x117/0x2c0
       [<ffffffff816fcc49>] ext4_mb_init+0xc49/0xfd0
       [...]
    
    Observe that the mentioned shift exponent, 4294967295, equals (unsigned)-1.
    
    Unless compilers start to do some fancy transformations (which at least
    GCC 6.0.0 doesn't currently do), the issue is of cosmetic nature only: the
    such calculated value of offset is never used again.
    
    Silence UBSAN by introducing another variable, offset_incr, holding the
    next increment to apply to offset and adjust that one by right shifting it
    by one position per loop iteration.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=114701
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=112161
    
    Signed-off-by: Nicolai Stange <nicstange@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7bc51456cc65d9b040e4921df43a5367e02aa10
Author: Nicolai Stange <nicstange@gmail.com>
Date:   Thu May 5 17:38:03 2016 -0400

    ext4: address UBSAN warning in mb_find_order_for_block()
    
    commit b5cb316cdf3a3f5f6125412b0f6065185240cfdc upstream.
    
    Currently, in mb_find_order_for_block(), there's a loop like the following:
    
      while (order <= e4b->bd_blkbits + 1) {
        ...
        bb += 1 << (e4b->bd_blkbits - order);
      }
    
    Note that the updated bb is used in the loop's next iteration only.
    
    However, at the last iteration, that is at order == e4b->bd_blkbits + 1,
    the shift count becomes negative (c.f. C99 6.5.7(3)) and UBSAN reports
    
      UBSAN: Undefined behaviour in fs/ext4/mballoc.c:1281:11
      shift exponent -1 is negative
      [...]
      Call Trace:
       [<ffffffff818c4d35>] dump_stack+0xbc/0x117
       [<ffffffff818c4c79>] ? _atomic_dec_and_lock+0x169/0x169
       [<ffffffff819411bb>] ubsan_epilogue+0xd/0x4e
       [<ffffffff81941cbc>] __ubsan_handle_shift_out_of_bounds+0x1fb/0x254
       [<ffffffff81941ac1>] ? __ubsan_handle_load_invalid_value+0x158/0x158
       [<ffffffff816e93a0>] ? ext4_mb_generate_from_pa+0x590/0x590
       [<ffffffff816502c8>] ? ext4_read_block_bitmap_nowait+0x598/0xe80
       [<ffffffff816e7b7e>] mb_find_order_for_block+0x1ce/0x240
       [...]
    
    Unless compilers start to do some fancy transformations (which at least
    GCC 6.0.0 doesn't currently do), the issue is of cosmetic nature only: the
    such calculated value of bb is never used again.
    
    Silence UBSAN by introducing another variable, bb_incr, holding the next
    increment to apply to bb and adjust that one by right shifting it by one
    position per loop iteration.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=114701
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=112161
    
    Signed-off-by: Nicolai Stange <nicstange@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80f1ca541c8ffcad850b9ff8c0e085a51e0b14c9
Author: Jan Kara <jack@suse.cz>
Date:   Thu May 5 11:10:15 2016 -0400

    ext4: fix oops on corrupted filesystem
    
    commit 74177f55b70e2f2be770dd28684dd6d17106a4ba upstream.
    
    When filesystem is corrupted in the right way, it can happen
    ext4_mark_iloc_dirty() in ext4_orphan_add() returns error and we
    subsequently remove inode from the in-memory orphan list. However this
    deletion is done with list_del(&EXT4_I(inode)->i_orphan) and thus we
    leave i_orphan list_head with a stale content. Later we can look at this
    content causing list corruption, oops, or other issues. The reported
    trace looked like:
    
    WARNING: CPU: 0 PID: 46 at lib/list_debug.c:53 __list_del_entry+0x6b/0x100()
    list_del corruption, 0000000061c1d6e0->next is LIST_POISON1
    0000000000100100)
    CPU: 0 PID: 46 Comm: ext4.exe Not tainted 4.1.0-rc4+ #250
    Stack:
     60462947 62219960 602ede24 62219960
     602ede24 603ca293 622198f0 602f02eb
     62219950 6002c12c 62219900 601b4d6b
    Call Trace:
     [<6005769c>] ? vprintk_emit+0x2dc/0x5c0
     [<602ede24>] ? printk+0x0/0x94
     [<600190bc>] show_stack+0xdc/0x1a0
     [<602ede24>] ? printk+0x0/0x94
     [<602ede24>] ? printk+0x0/0x94
     [<602f02eb>] dump_stack+0x2a/0x2c
     [<6002c12c>] warn_slowpath_common+0x9c/0xf0
     [<601b4d6b>] ? __list_del_entry+0x6b/0x100
     [<6002c254>] warn_slowpath_fmt+0x94/0xa0
     [<602f4d09>] ? __mutex_lock_slowpath+0x239/0x3a0
     [<6002c1c0>] ? warn_slowpath_fmt+0x0/0xa0
     [<60023ebf>] ? set_signals+0x3f/0x50
     [<600a205a>] ? kmem_cache_free+0x10a/0x180
     [<602f4e88>] ? mutex_lock+0x18/0x30
     [<601b4d6b>] __list_del_entry+0x6b/0x100
     [<601177ec>] ext4_orphan_del+0x22c/0x2f0
     [<6012f27c>] ? __ext4_journal_start_sb+0x2c/0xa0
     [<6010b973>] ? ext4_truncate+0x383/0x390
     [<6010bc8b>] ext4_write_begin+0x30b/0x4b0
     [<6001bb50>] ? copy_from_user+0x0/0xb0
     [<601aa840>] ? iov_iter_fault_in_readable+0xa0/0xc0
     [<60072c4f>] generic_perform_write+0xaf/0x1e0
     [<600c4166>] ? file_update_time+0x46/0x110
     [<60072f0f>] __generic_file_write_iter+0x18f/0x1b0
     [<6010030f>] ext4_file_write_iter+0x15f/0x470
     [<60094e10>] ? unlink_file_vma+0x0/0x70
     [<6009b180>] ? unlink_anon_vmas+0x0/0x260
     [<6008f169>] ? free_pgtables+0xb9/0x100
     [<600a6030>] __vfs_write+0xb0/0x130
     [<600a61d5>] vfs_write+0xa5/0x170
     [<600a63d6>] SyS_write+0x56/0xe0
     [<6029fcb0>] ? __libc_waitpid+0x0/0xa0
     [<6001b698>] handle_syscall+0x68/0x90
     [<6002633d>] userspace+0x4fd/0x600
     [<6002274f>] ? save_registers+0x1f/0x40
     [<60028bd7>] ? arch_prctl+0x177/0x1b0
     [<60017bd5>] fork_handler+0x85/0x90
    
    Fix the problem by using list_del_init() as we always should with
    i_orphan list.
    
    Reported-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0df369860a0bb5b1b1238c2d734b3784ed4b119
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Thu May 5 10:52:38 2016 -0400

    ext4: fix check of dqget() return value in ext4_ioctl_setproject()
    
    commit ff0bc08454917964291f72ee5b8eca66de4bc250 upstream.
    
    A failed call to dqget() returns an ERR_PTR() and not null. Fix
    the check in ext4_ioctl_setproject() to handle this correctly.
    
    Fixes: 9b7365fc1c82 ("ext4: add FS_IOC_FSSETXATTR/FS_IOC_FSGETXATTR interface support")
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 447b62eddcfb060449dd1e1269c128d7aede5450
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Apr 30 00:49:54 2016 -0400

    ext4: clean up error handling when orphan list is corrupted
    
    commit 7827a7f6ebfcb7f388dc47fddd48567a314701ba upstream.
    
    Instead of just printing warning messages, if the orphan list is
    corrupted, declare the file system is corrupted.  If there are any
    reserved inodes in the orphaned inode list, declare the file system
    corrupted and stop right away to avoid doing more potential damage to
    the file system.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ce09a5524ec339c3964725f040c186e29169dd
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Apr 30 00:48:54 2016 -0400

    ext4: fix hang when processing corrupted orphaned inode list
    
    commit c9eb13a9105e2e418f72e46a2b6da3f49e696902 upstream.
    
    If the orphaned inode list contains inode #5, ext4_iget() returns a
    bad inode (since the bootloader inode should never be referenced
    directly).  Because of the bad inode, we end up processing the inode
    repeatedly and this hangs the machine.
    
    This can be reproduced via:
    
       mke2fs -t ext4 /tmp/foo.img 100
       debugfs -w -R "ssv last_orphan 5" /tmp/foo.img
       mount -o loop /tmp/foo.img /mnt
    
    (But don't do this if you are using an unpatched kernel if you care
    about the system staying functional.  :-)
    
    This bug was found by the port of American Fuzzy Lop into the kernel
    to find file system problems[1].  (Since it *only* happens if inode #5
    shows up on the orphan list --- 3, 7, 8, etc. won't do it, it's not
    surprising that AFL needed two hours before it found it.)
    
    [1] http://events.linuxfoundation.org/sites/events/files/slides/AFL%20filesystem%20fuzzing%2C%20Vault%202016_0.pdf
    
    Reported by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efafc4236827a88320bfe12da8ddc7edaf6e8495
Author: Jan Kara <jack@suse.cz>
Date:   Sun Apr 24 00:56:03 2016 -0400

    ext4: fix data exposure after a crash
    
    commit 06bd3c36a733ac27962fea7d6f47168841376824 upstream.
    
    Huang has reported that in his powerfail testing he is seeing stale
    block contents in some of recently allocated blocks although he mounts
    ext4 in data=ordered mode. After some investigation I have found out
    that indeed when delayed allocation is used, we don't add inode to
    transaction's list of inodes needing flushing before commit. Originally
    we were doing that but commit f3b59291a69d removed the logic with a
    flawed argument that it is not needed.
    
    The problem is that although for delayed allocated blocks we write their
    contents immediately after allocating them, there is no guarantee that
    the IO scheduler or device doesn't reorder things and thus transaction
    allocating blocks and attaching them to inode can reach stable storage
    before actual block contents. Actually whenever we attach freshly
    allocated blocks to inode using a written extent, we should add inode to
    transaction's ordered inode list to make sure we properly wait for block
    contents to be written before committing the transaction. So that is
    what we do in this patch. This also handles other cases where stale data
    exposure was possible - like filling hole via mmap in
    data=ordered,nodelalloc mode.
    
    The only exception to the above rule are extending direct IO writes where
    blkdev_direct_IO() waits for IO to complete before increasing i_size and
    thus stale data exposure is not possible. For now we don't complicate
    the code with optimizing this special case since the overhead is pretty
    low. In case this is observed to be a performance problem we can always
    handle it using a special flag to ext4_map_blocks().
    
    Fixes: f3b59291a69d0b734be1fc8be489fef2dd846d3d
    Reported-by: "HUANG Weller (CM/ESW12-CN)" <Weller.Huang@cn.bosch.com>
    Tested-by: "HUANG Weller (CM/ESW12-CN)" <Weller.Huang@cn.bosch.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c72b52a2d088ec809b9ef6d6828b09c5f2024b9c
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Mar 9 19:07:24 2016 +0200

    drm/i915: Pass the correct crtc state to .update_plane()
    
    commit 9f6151c9039084e18c118831779a99ac8f29e39c upstream.
    
    Pass the current crtc state, not the old crtc state, to the
    .update_plane() hook.
    
    Noticed on BSW when PRIMSIZE was getting programmed to a stale value
    which produced utter garbage on screen eg. wwhen going from 1920x1080
    to 1024x768.
    
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Fixes: a758e6845825 ("drm/i915: Do not use commit_plane for sprite planes.")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1457543247-13987-3-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63d0430f991314f5af8968784d3488da7ce95aa2
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Thu May 12 15:00:44 2016 +0200

    drm/imx: Match imx-ipuv3-crtc components using device node in platform data
    
    commit 310944d148e3600dcff8b346bee7fa01d34903b1 upstream.
    
    The component master driver imx-drm-core matches component devices using
    their of_node. Since commit 950b410dd1ab ("gpu: ipu-v3: Fix imx-ipuv3-crtc
    module autoloading"), the imx-ipuv3-crtc dev->of_node is not set during
    probing. Before that, of_node was set and caused an of: modalias to be
    used instead of the platform: modalias, which broke module autoloading.
    
    On the other hand, if dev->of_node is not set yet when the imx-ipuv3-crtc
    probe function calls component_add, component matching in imx-drm-core
    fails. While dev->of_node will be set once the next component tries to
    bring up the component master, imx-drm-core component binding will never
    succeed if one of the crtc devices is probed last.
    
    Add of_node to the component platform data and match against the
    pdata->of_node instead of dev->of_node in imx-drm-core to work around
    this problem.
    
    Fixes: 950b410dd1ab ("gpu: ipu-v3: Fix imx-ipuv3-crtc module autoloading")
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Tested-by: Fabio Estevam <fabio.estevam@nxp.com>
    Tested-by: Lothar Waßmann <LW@KARO-electronics.de>
    Tested-by: Heiko Schocher <hs@denx.de>
    Tested-by: Chris Ruehl <chris.ruehl@gtsys.com.hk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60ae20cc590e546cd23225adbed3ac258c1b3770
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri May 6 16:46:52 2016 +0300

    drm: Add helper for DP++ adaptors
    
    commit b3daa5ef52c26acd7432c787989bd92d48070c76 upstream.
    
    Add a helper which aids in the identification of DP dual mode
    (aka. DP++) adaptors. There are several types of adaptors
    specified: type 1 DVI, type 1 HDMI, type 2 DVI, type 2 HDMI
    
    Type 1 adaptors have a max TMDS clock limit of 165MHz, type 2 adaptors
    may go as high as 300MHz and they provide a register informing the
    source device what the actual limit is. Supposedly also type 1 adaptors
    may optionally implement this register. This TMDS clock limit is the
    main reason why we need to identify these adaptors.
    
    Type 1 adaptors provide access to their internal registers and the sink
    DDC bus through I2C. Type 2 adaptors provide this access both via I2C
    and I2C-over-AUX. A type 2 source device may choose to implement either
    of these methods. If a source device implements the I2C-over-AUX
    method, then the driver will obviously need specific support for such
    adaptors since the port is driven like an HDMI port, but DDC
    communication happes over the AUX channel.
    
    This helper should be enough to identify the adaptor type (some
    type 1 DVI adaptors may be a slight exception) and the maximum TMDS
    clock limit. Another feature that may be available is control over
    the TMDS output buffers on the adaptor, possibly allowing for some
    power saving when the TMDS link is down.
    
    Other user controllable features that may be available in the adaptors
    are downstream i2c bus speed control when using i2c-over-aux, and
    some control over the CEC pin. I chose not to provide any helper
    functions for those since I have no use for them in i915 at this time.
    The rest of the registers in the adaptor are mostly just information,
    eg. IEEE OUI, hardware and firmware revision, etc.
    
    v2: Pass adaptor type to helper functions to ease driver implementation
        Fix a bunch of typoes (Paulo)
        Add DRM_DP_DUAL_MODE_UNKNOWN for the case where we don't (yet) know
        the type (Paulo)
        Reject 0x00 and 0xff DP_DUAL_MODE_MAX_TMDS_CLOCK values (Paulo)
        Adjust drm_dp_dual_mode_detect() type2 vs. type1 detection to
        ease future LSPCON enabling
        Remove the unused DP_DUAL_MODE_LAST_RESERVED define
    v3: Fix kernel doc function argument descriptions (Jani)
        s/NONE/UNKNOWN/ in drm_dp_dual_mode_detect() docs
        Add kernel doc for enum drm_dp_dual_mode_type
        Actually build the docs
        Fix more typoes
    v4: Adjust code indentation of type2 adaptor detection (Shashank)
        Add debug messages for failurs cases (Shashank)
    v5: EXPORT_SYMBOL(drm_dp_dual_mode_read) (Paulo)
    
    Cc: Tore Anderson <tore@fud.no>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: Shashank Sharma <shashank.sharma@intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Shashank Sharma <shashank.sharma@intel.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Shashank Sharma <shashank.sharma@intel.com> (v4)
    Link: http://patchwork.freedesktop.org/patch/msgid/1462542412-25533-1-git-send-email-ville.syrjala@linux.intel.com
    (cherry picked from commit ede53344dbfd1dd43bfd73eb6af743d37c56a7c3)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5c446d7a152da038a5d3e85e3e6f3097fd21023
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Mar 9 19:07:25 2016 +0200

    drm/i915: Fix watermarks for VLV/CHV
    
    commit caed361d83b204b7766924b80463bf7502ee7986 upstream.
    
    commit 92826fcdfc14 ("drm/i915: Calculate watermark related members in the crtc_state, v4.")
    broke thigns by removing the pre vs. post wm update distinction. We also
    lost the pre plane wm update entirely for VLV/CHV from the crtc enable
    path.
    
    This caused underruns on modeset and plane enable/disable on CHV,
    and often those can lead to a dead pipe.
    
    So let's bring back the pre vs. post thing, and let's toss in an
    explicit wm update to valleyview_crtc_enable() to avoid having to
    put it into the common code.
    
    This is more or less a partial revert of the offending commit.
    
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: drm-intel-fixes@lists.freedesktop.org
    Fixes: 92826fcdfc14 ("drm/i915: Calculate watermark related members in the crtc_state, v4.")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1457543247-13987-4-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccb46409376e6dde67453833cfcb6d950852fdec
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri May 13 17:55:17 2016 +0300

    drm/i915: Don't leave old junk in ilk active watermarks on readout
    
    commit 7045c3689f148a0c95f42bae8ef3eb2829ac7de9 upstream.
    
    When we read out the watermark state from the hardware we're supposed to
    transfer that into the active watermarks, but currently we fail to any
    part of the active watermarks that isn't explicitly written. Let's clear
    it all upfront.
    
    Looks like this has been like this since the beginning, when I added the
    readout. No idea why I didn't clear it up.
    
    Cc: Matt Roper <matthew.d.roper@intel.com>
    Fixes: 243e6a44b9ca ("drm/i915: Init HSW watermark tracking in intel_modeset_setup_hw_state()")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
    Signed-off-by: Matt Roper <matthew.d.roper@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1463151318-14719-2-git-send-email-ville.syrjala@linux.intel.com
    (cherry picked from commit 15606534bf0a65d8a74a90fd57b8712d147dbca6)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28b3b41dd1f908d640a1b3370b48cd915775032e
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon May 2 22:08:24 2016 +0300

    drm/i915: Enable/disable TMDS output buffers in DP++ adaptor as needed
    
    commit 0c2fb7c6c8fef2092051192095a7788231ba9a42 upstream.
    
    To save a bit of power, let's try to turn off the TMDS output buffers
    in DP++ adaptors when we're not driving the port.
    
    v2: Let's not forget DDI, toss in a debug message while at it
    v3: Just do the TMDS output control based on adaptor type. With the
        helper getting passed the type, we wouldn't actually have to
        check at all in the driver, but the check eliminates the debug
        output more honest
    
    Cc: Tore Anderson <tore@fud.no>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: Shashank Sharma <shashank.sharma@intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1462216105-20881-4-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Shashank Sharma <shashank.sharma@intel.com>
    (cherry picked from commit b2ccb822d376d1bbbe5d1f9118d1488b25e6bc6d)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c7c171590589516db8371af1b79779f0c3a9894
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon May 2 22:08:23 2016 +0300

    drm/i915: Respect DP++ adaptor TMDS clock limit
    
    commit c578d15226c99f0566d5d022f81af6b7d69928db upstream.
    
    Try to detect the max TMDS clock limit for the DP++ adaptor (if any)
    and take it into account when checking the port clock.
    
    Note that as with the sink (HDMI vs. DVI) TMDS clock limit we'll ignore
    the adaptor TMDS clock limit in the modeset path, in case users are
    already "overclocking" their TMDS links. One subtle change here is that
    we'll have to respect the adaptor TMDS clock limit when we decide whether
    to do 12bpc or 8bpc, otherwise we might end up picking 12bpc and
    accidentally driving the TMDS link out of spec even when the user chose
    a mode that fits wihting the limits at 8bpc. This means you can't
    "overclock" your DP++ dongle at 12bpc anymore, but you can continue to
    do so at 8bpc.
    
    Note that for simplicity we'll use the I2C access method for all dual
    mode adaptors including type 2. Otherwise we'd have to start mixing
    DP AUX and HDMI together. In the future we may need to do that if we
    come across any board designs that don't hook up the DDC pins to the
    DP++ connectors. Such boards would obviously only work with type 2
    dual mode adaptors, and not type 1.
    
    v2: Store adaptor type under indel_hdmi->dp_dual_mode
        Deal with DRM_DP_DUAL_MODE_UNKNOWN
        Pass adaptor type to drm_dp_dual_mode_max_tmds_clock(),
        and use it for type1 adaptors as well
    
    Reported-by: Tore Anderson <tore@fud.no>
    Fixes: 7a0baa623446 ("Revert "drm/i915: Disable 12bpc hdmi for now"")
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Cc: Shashank Sharma <shashank.sharma@intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1462216105-20881-3-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Shashank Sharma <shashank.sharma@intel.com>
    (cherry picked from commit b1ba124d8e95cca48d33502a4a76b1ed09d213ce)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69205c5c16df0702870179c8419e89cc954bd311
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed May 18 18:47:11 2016 +0200

    drm/i915/psr: Try to program link training times correctly
    
    commit 03b7b5f983091bca17e9c163832fcde56971d7d1 upstream.
    
    The default of 0 is 500us of link training, but that's not enough for
    some platforms. Decoding this correctly means we're using 2.5ms of
    link training on these platforms, which fixes flickering issues
    associated with enabling PSR.
    
    v2: Unbotch the math a bit.
    
    v3: Drop debug hunk.
    
    v4: Improve commit message.
    
    Tested-by: Lyude <cpaul@redhat.com>
    Cc: Lyude <cpaul@redhat.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=95176
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Sonika Jindal <sonika.jindal@intel.com>
    Cc: Durgadoss R <durgadoss.r@intel.com>
    Cc: "Pandiyan, Dhinakaran" <dhinakaran.pandiyan@intel.com>
    Tested-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Tested-by: fritsch@kodi.tv
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1463590036-17824-2-git-send-email-daniel.vetter@ffwll.ch
    (cherry picked from commit 50db139018f9c94376d5f4db94a3bae65fdfac14)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35cde4017ac929e8d2dae57de54f84e476e24bb3
Author: Glenn Ruben Bakke <glennrubenbakke@nordicsemi.no>
Date:   Fri Apr 22 18:06:11 2016 +0200

    Bluetooth: 6lowpan: Fix memory corruption of ipv6 destination address
    
    commit 55441070ca1cbd47ce1ad2959bbf4b47aed9b83b upstream.
    
    The memcpy of ipv6 header destination address to the skb control block
    (sbk->cb) in header_create() results in currupted memory when bt_xmit()
    is issued. The skb->cb is "released" in the return of header_create()
    making room for lower layer to minipulate the skb->cb.
    
    The value retrieved in bt_xmit is not persistent across header creation
    and sending, and the lower layer will overwrite portions of skb->cb,
    making the copied destination address wrong.
    
    The memory corruption will lead to non-working multicast as the first 4
    bytes of the copied destination address is replaced by a value that
    resolves into a non-multicast prefix.
    
    This fix removes the dependency on the skb control block between header
    creation and send, by moving the destination address memcpy to the send
    function path (setup_create, which is called from bt_xmit).
    
    Signed-off-by: Glenn Ruben Bakke <glenn.ruben.bakke@nordicsemi.no>
    Acked-by: Jukka Rissanen <jukka.rissanen@linux.intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d82a4b5bc708ab30cf41cb024f8d45b31987374
Author: Lyude <cpaul@redhat.com>
Date:   Tue May 31 12:49:07 2016 -0400

    drm/atomic: Verify connector->funcs != NULL when clearing states
    
    Unfortunately since we don't have Dave's connector refcounting patch
    here yet, it's very possible that drm_atomic_state_default_clear() could
    get called by intel_display_resume() when
    intel_dp_mst_destroy_connector() isn't completely finished destroying an
    mst connector, but has already finished setting connector->funcs to
    NULL. As such, we need to treat the connector like it's already been
    destroyed and just skip it, otherwise we'll end up dereferencing a NULL
    pointer.
    
    This fix is only required for 4.6 and below. David Airlie's patchseries
    for 4.7 to add connector reference counting provides a more proper fix
    for this.
    
    Changes since v1:
     - Fix leftover whitespace
    
    Upstream fix: 0552f7651bc2 ("drm/i915/mst: use reference counted
    connectors. (v3)")
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7360309ba4b5f4ae2839844748e23a157ffdc67d
Author: Lyude <cpaul@redhat.com>
Date:   Tue May 31 12:49:06 2016 -0400

    drm/i915: Discard previous atomic state on resume if connectors change
    
    If an MST device is disconnected while the machine is suspended, the
    number of connectors will change as well after we call
    intel_dp_mst_resume(). This means that any previous atomic state we had
    before suspending is no longer valid, since it'll still be pointing to
    missing connectors. We need to check for this before committing the
    state, otherwise we'll kernel panic on resume whenever if any MST
    display was disconnected before we started resuming:
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
    IP: [<ffffffffa01588ef>] drm_atomic_helper_check_modeset+0x29f/0xb40 [drm_kms_helper]
    Call Trace:
     [<ffffffffa02354f4>] intel_atomic_check+0x34/0x1180 [i915]
     [<ffffffff810e6c3f>] ? mark_held_locks+0x6f/0xa0
     [<ffffffff810e6d99>] ? trace_hardirqs_on_caller+0x129/0x1b0
     [<ffffffffa00ff1d2>] drm_atomic_check_only+0x192/0x620 [drm]
     [<ffffffff813ee001>] ? pci_pm_thaw+0x21/0x90
     [<ffffffffa00ff677>] drm_atomic_commit+0x17/0x60 [drm]
     [<ffffffffa023e0ad>] intel_display_resume+0xbd/0x160 [i915]
     [<ffffffff813ee070>] ? pci_pm_thaw+0x90/0x90
     [<ffffffffa01b60d8>] i915_drm_resume+0xd8/0x160 [i915]
     [<ffffffffa01b6185>] i915_pm_resume+0x25/0x30 [i915]
     [<ffffffff813ee0d4>] pci_pm_resume+0x64/0xa0
     [<ffffffff814d9ea0>] dpm_run_callback+0x90/0x190
     [<ffffffff814da455>] device_resume+0xd5/0x1f0
     [<ffffffff814da58d>] async_resume+0x1d/0x50
     [<ffffffff810b6718>] async_run_entry_fn+0x48/0x150
     [<ffffffff810acc19>] process_one_work+0x1e9/0x5c0
     [<ffffffff810acb96>] ? process_one_work+0x166/0x5c0
     [<ffffffff810ad038>] worker_thread+0x48/0x4e0
     [<ffffffff810acff0>] ? process_one_work+0x5c0/0x5c0
     [<ffffffff810b3794>] kthread+0xe4/0x100
     [<ffffffff81742672>] ret_from_fork+0x22/0x50
     [<ffffffff810b36b0>] ? kthread_create_on_node+0x200/0x200
    
    Changes since v1:
      - Move drm_atomic_state_free() call down so we're holding the
        appropriate locks when destroying the atomic state
    Changes since v2:
      - Check that state != NULL before we start accessing it's members
    
    This fix is only required for 4.6 and below. David Airlie's patchseries
    for 4.7 to add connector reference counting provides a more proper fix
    for this.
    
    Upstream fix: 0552f7651bc2 ("drm/i915/mst: use reference counted
    connectors. (v3)")
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4eb16ab490ed87b9b67733193e39b44ba0cf07c
Author: Lyude <cpaul@redhat.com>
Date:   Thu May 12 10:56:59 2016 -0400

    drm/fb_helper: Fix references to dev->mode_config.num_connector
    
    commit 255f0e7c418ad95a4baeda017ae6182ba9b3c423 upstream.
    
    During boot, MST hotplugs are generally expected (even if no physical
    hotplugging occurs) and result in DRM's connector topology changing.
    This means that using num_connector from the current mode configuration
    can lead to the number of connectors changing under us. This can lead to
    some nasty scenarios in fbcon:
    
    - We allocate an array to the size of dev->mode_config.num_connectors.
    - MST hotplug occurs, dev->mode_config.num_connectors gets incremented.
    - We try to loop through each element in the array using the new value
      of dev->mode_config.num_connectors, and end up going out of bounds
      since dev->mode_config.num_connectors is now larger then the array we
      allocated.
    
    fb_helper->connector_count however, will always remain consistent while
    we do a modeset in fb_helper.
    
    Note: This is just polish for 4.7, Dave Airlie's drm_connector
    refcounting fixed these bugs for real. But it's good enough duct-tape
    for stable kernel backporting, since backporting the refcounting
    changes is way too invasive.
    
    Signed-off-by: Lyude <cpaul@redhat.com>
    [danvet: Clarify why we need this. Also remove the now unused "dev"
    local variable to appease gcc.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1463065021-18280-3-git-send-email-cpaul@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c266d0078d7de7b9474879df8f805d3e22474006
Author: Lyude <cpaul@redhat.com>
Date:   Thu May 12 10:56:58 2016 -0400

    drm/i915/fbdev: Fix num_connector references in intel_fb_initial_config()
    
    commit 14a3842a1d5945067d1dd0788f314e14d5b18e5b upstream.
    
    During boot time, MST devices usually send a ton of hotplug events
    irregardless of whether or not any physical hotplugs actually occurred.
    Hotplugs mean connectors being created/destroyed, and the number of DRM
    connectors changing under us. This isn't a problem if we use
    fb_helper->connector_count since we only set it once in the code,
    however if we use num_connector from struct drm_mode_config we risk it's
    value changing under us. On top of that, there's even a chance that
    dev->mode_config.num_connector != fb_helper->connector_count. If the
    number of connectors happens to increase under us, we'll end up using
    the wrong array size for memcpy and start writing beyond the actual
    length of the array, occasionally resulting in kernel panics.
    
    Note: This is just polish for 4.7, Dave Airlie's drm_connector
    refcounting fixed these bugs for real. But it's good enough duct-tape
    for stable kernel backporting, since backporting the refcounting
    changes is way too invasive.
    
    Signed-off-by: Lyude <cpaul@redhat.com>
    [danvet: Clarify why we need this.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1463065021-18280-2-git-send-email-cpaul@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d6e1fd56ca52391719872fc01120bf64cf7522b
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Tue May 24 18:12:43 2016 +0200

    drm/amdgpu: Fix hdmi deep color support.
    
    commit 9d746ab68163d642dae13756b2b3145b2e38cb65 upstream.
    
    When porting the hdmi deep color detection code from
    radeon-kms to amdgpu-kms apparently some kind of
    copy and paste error happened, attaching an else
    branch to the wrong if statement.
    
    The result is that hdmi deep color mode is always
    disabled, regardless of gpu and display capabilities and
    user wishes, as the code mistakenly thinks that the display
    doesn't provide the required max_tmds_clock limit and falls
    back to 8 bpc.
    
    This patch fixes deep color support, as tested on a
    R9 380 Tonga Pro + suitable display, and should be
    backported to all kernels with amdgpu-kms support.
    
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c88c77f9f803d14c21755e39d611518aefce529
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon May 2 10:24:41 2016 -0400

    drm/amdgpu: use drm_mode_vrefresh() rather than mode->vrefresh
    
    commit 6b8812eb004ee2b24aac8b1a711a0e8e797df3ce upstream.
    
    This is a port of radeon commit:
    3d2d98ee1af0cf6eebfbd6bff4c17d3601ac1284
    drm/radeon: use drm_mode_vrefresh() rather than mode->vrefresh
    to amdgpu.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 932d68f3a322c3fe86683df2d1e934542c3d99f8
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Tue May 3 11:24:35 2016 +0200

    drm/vmwgfx: Kill some lockdep warnings
    
    commit 93cd16817ae5ddcfc548784b51c76bf6d7923442 upstream.
    
    Some global KMS state that is elsewhere protected by the mode_config
    mutex here needs to be protected with a local mutex. Remove corresponding
    lockdep checks and introduce a new driver-private global_kms_state_mutex,
    and make sure its locking order is *after* the crtc locks in order to
    avoid having to release those when the new mutex is taken.
    
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Brian Paul <brianp@vmware.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0f24236341e862f3a7b0a0837efb468d9d22217
Author: Itai Handler <itai_handler@hotmail.com>
Date:   Tue Nov 3 00:20:56 2015 +0200

    drm/gma500: Fix possible out of bounds read
    
    commit 7ccca1d5bf69fdd1d3c5fcf84faf1659a6e0ad11 upstream.
    
    Fix possible out of bounds read, by adding missing comma.
    The code may read pass the end of the dsi_errors array
    when the most significant bit (bit #31) in the intr_stat register
    is set.
    This bug has been detected using CppCheck (static analysis tool).
    
    Signed-off-by: Itai Handler <itai_handler@hotmail.com>
    Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb366dc9e9a440a410498b2ea08566822b4f83bf
Author: Tomáš Trnka <ttrnka@mail.muni.cz>
Date:   Fri May 20 16:41:10 2016 +0200

    sunrpc: fix stripping of padded MIC tokens
    
    commit c0cb8bf3a8e4bd82e640862cdd8891400405cb89 upstream.
    
    The length of the GSS MIC token need not be a multiple of four bytes.
    It is then padded by XDR to a multiple of 4 B, but unwrap_integ_data()
    would previously only trim mic.len + 4 B. The remaining up to three
    bytes would then trigger a check in nfs4svc_decode_compoundargs(),
    leading to a "garbage args" error and mount failure:
    
    nfs4svc_decode_compoundargs: compound not properly padded!
    nfsd: failed to decode arguments!
    
    This would prevent older clients using the pre-RFC 4121 MIC format
    (37-byte MIC including a 9-byte OID) from mounting exports from v3.9+
    servers using krb5i.
    
    The trimming was introduced by commit 4c190e2f913f ("sunrpc: trim off
    trailing checksum before returning decrypted or integrity authenticated
    buffer").
    
    Fixes: 4c190e2f913f "unrpc: trim off trailing checksum..."
    Signed-off-by: Tomáš Trnka <ttrnka@mail.muni.cz>
    Acked-by: Jeff Layton <jlayton@poochiereds.net>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 345de6e350883491cb53b8b5e32335c73fc993f2
Author: Juergen Gross <jgross@suse.com>
Date:   Wed May 18 16:44:54 2016 +0200

    xen: use same main loop for counting and remapping pages
    
    commit dd14be92fbf5bc1ef7343f34968440e44e21b46a upstream.
    
    Instead of having two functions for cycling through the E820 map in
    order to count to be remapped pages and remap them later, just use one
    function with a caller supplied sub-function called for each region to
    be processed. This eliminates the possibility of a mismatch between
    both loops which showed up in certain configurations.
    
    Suggested-by: Ed Swierk <eswierk@skyportsystems.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54891d9185363de1251f64f44a12f0de173927a7
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue May 10 16:11:00 2016 +0100

    xen/events: Don't move disabled irqs
    
    commit f0f393877c71ad227d36705d61d1e4062bc29cf5 upstream.
    
    Commit ff1e22e7a638 ("xen/events: Mask a moving irq") open-coded
    irq_move_irq() but left out checking if the IRQ is disabled. This broke
    resuming from suspend since it tries to move a (disabled) irq without
    holding the IRQ's desc->lock. Fix it by adding in a check for disabled
    IRQs.
    
    The resulting stacktrace was:
    kernel BUG at /build/linux-UbQGH5/linux-4.4.0/kernel/irq/migration.c:31!
    invalid opcode: 0000 [#1] SMP
    Modules linked in: xenfs xen_privcmd ...
    CPU: 0 PID: 9 Comm: migration/0 Not tainted 4.4.0-22-generic #39-Ubuntu
    Hardware name: Xen HVM domU, BIOS 4.6.1-xs125180 05/04/2016
    task: ffff88003d75ee00 ti: ffff88003d7bc000 task.ti: ffff88003d7bc000
    RIP: 0010:[<ffffffff810e26e2>]  [<ffffffff810e26e2>] irq_move_masked_irq+0xd2/0xe0
    RSP: 0018:ffff88003d7bfc50  EFLAGS: 00010046
    RAX: 0000000000000000 RBX: ffff88003d40ba00 RCX: 0000000000000001
    RDX: 0000000000000001 RSI: 0000000000000100 RDI: ffff88003d40bad8
    RBP: ffff88003d7bfc68 R08: 0000000000000000 R09: ffff88003d000000
    R10: 0000000000000000 R11: 000000000000023c R12: ffff88003d40bad0
    R13: ffffffff81f3a4a0 R14: 0000000000000010 R15: 00000000ffffffff
    FS:  0000000000000000(0000) GS:ffff88003da00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fd4264de624 CR3: 0000000037922000 CR4: 00000000003406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Stack:
     ffff88003d40ba38 0000000000000024 0000000000000000 ffff88003d7bfca0
     ffffffff814c8d92 00000010813ef89d 00000000805ea732 0000000000000009
     0000000000000024 ffff88003cc39b80 ffff88003d7bfce0 ffffffff814c8f66
    Call Trace:
     [<ffffffff814c8d92>] eoi_pirq+0xb2/0xf0
     [<ffffffff814c8f66>] __startup_pirq+0xe6/0x150
     [<ffffffff814ca659>] xen_irq_resume+0x319/0x360
     [<ffffffff814c7e75>] xen_suspend+0xb5/0x180
     [<ffffffff81120155>] multi_cpu_stop+0xb5/0xe0
     [<ffffffff811200a0>] ? cpu_stop_queue_work+0x80/0x80
     [<ffffffff811203d0>] cpu_stopper_thread+0xb0/0x140
     [<ffffffff810a94e6>] ? finish_task_switch+0x76/0x220
     [<ffffffff810ca731>] ? __raw_callee_save___pv_queued_spin_unlock+0x11/0x20
     [<ffffffff810a3935>] smpboot_thread_fn+0x105/0x160
     [<ffffffff810a3830>] ? sort_range+0x30/0x30
     [<ffffffff810a0588>] kthread+0xd8/0xf0
     [<ffffffff810a04b0>] ? kthread_create_on_node+0x1e0/0x1e0
     [<ffffffff8182568f>] ret_from_fork+0x3f/0x70
     [<ffffffff810a04b0>] ? kthread_create_on_node+0x1e0/0x1e0
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b3448ce36c2d7bb02a0cf60f7e29fddb40ec70c
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Wed Apr 27 11:14:51 2016 +1000

    powerpc/eeh: Restore initial state in eeh_pe_reset_and_recover()
    
    commit 5a0cdbfd17b90a89c64a71d8aec9773ecdb20d0d upstream.
    
    The function eeh_pe_reset_and_recover() is used to recover EEH
    error when the passthrou device are transferred to guest and
    backwards. The content in the device's config space will be lost
    on PE reset issued in the middle of the recovery. The function
    saves/restores it before/after the reset. However, config access
    to some adapters like Broadcom BCM5719 at this point will causes
    fenced PHB. The config space is always blocked and we save 0xFF's
    that are restored at late point. The memory BARs are totally
    corrupted, causing another EEH error upon access to one of the
    memory BARs.
    
    This restores the config space on those adapters like BCM5719
    from the content saved to the EEH device when it's populated,
    to resolve above issue.
    
    Fixes: 5cfb20b9 ("powerpc/eeh: Emulate EEH recovery for VFIO devices")
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Reviewed-by: Russell Currey <ruscur@russell.cc>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a86408d6d1c1de0dba2587f914a05eb04c8c2da
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Mon Apr 11 16:17:22 2016 -0300

    Revert "powerpc/eeh: Fix crash in eeh_add_device_early() on Cell"
    
    commit c2078d9ef600bdbe568c89e5ddc2c6f15b7982c8 upstream.
    
    This reverts commit 89a51df5ab1d38b257300b8ac940bbac3bb0eb9b.
    
    The function eeh_add_device_early() is used to perform EEH
    initialization in devices added later on the system, like in
    hotplug/DLPAR scenarios. Since the commit 89a51df5ab1d ("powerpc/eeh:
    Fix crash in eeh_add_device_early() on Cell") a new check was introduced
    in this function - Cell has no EEH capabilities which led to kernel oops
    if hotplug was performed, so checking for eeh_enabled() was introduced
    to avoid the issue.
    
    However, in architectures that EEH is present like pSeries or PowerNV,
    we might reach a case in which no PCI devices are present on boot time
    and so EEH is not initialized. Then, if a device is added via DLPAR for
    example, eeh_add_device_early() fails because eeh_enabled() is false,
    and EEH end up not being enabled at all.
    
    This reverts the aforementioned patch since a new verification was
    introduced by the commit d91dafc02f42 ("powerpc/eeh: Delay probing EEH
    device during hotplug") and so the original Cell issue does not happen
    anymore.
    
    Reviewed-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a61001463652ec2a0113d2cd93d0c2786639a3a1
Author: Gavin Shan <gwshan@linux.vnet.ibm.com>
Date:   Wed Apr 27 11:14:50 2016 +1000

    powerpc/eeh: Don't report error in eeh_pe_reset_and_recover()
    
    commit affeb0f2d3a9af419ad7ef4ac782e1540b2f7b28 upstream.
    
    The function eeh_pe_reset_and_recover() is used to recover EEH
    error when the passthrough device are transferred to guest and
    backwards, meaning the device's driver is vfio-pci or none.
    When the driver is vfio-pci that provides error_detected() error
    handler only, the handler simply stops the guest and it's not
    expected behaviour. On the other hand, no error handlers will
    be called if we don't have a bound driver.
    
    This ignores the error handler in eeh_pe_reset_and_recover()
    that reports the error to device driver to avoid the exceptional
    behaviour.
    
    Fixes: 5cfb20b9 ("powerpc/eeh: Emulate EEH recovery for VFIO devices")
    Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Reviewed-by: Russell Currey <ruscur@russell.cc>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3dc33df76b0843af9a8ca3871fc22b103024ed8
Author: Hari Bathini <hbathini@linux.vnet.ibm.com>
Date:   Fri Apr 15 22:48:02 2016 +1000

    powerpc/book3s64: Fix branching to OOL handlers in relocatable kernel
    
    commit 8ed8ab40047a570fdd8043a40c104a57248dd3fd upstream.
    
    Some of the interrupt vectors on 64-bit POWER server processors are only
    32 bytes long (8 instructions), which is not enough for the full
    first-level interrupt handler. For these we need to branch to an
    out-of-line (OOL) handler. But when we are running a relocatable kernel,
    interrupt vectors till __end_interrupts marker are copied down to real
    address 0x100. So, branching to labels (ie. OOL handlers) outside this
    section must be handled differently (see LOAD_HANDLER()), considering
    relocatable kernel, which would need at least 4 instructions.
    
    However, branching from interrupt vector means that we corrupt the
    CFAR (come-from address register) on POWER7 and later processors as
    mentioned in commit 1707dd16. So, EXCEPTION_PROLOG_0 (6 instructions)
    that contains the part up to the point where the CFAR is saved in the
    PACA should be part of the short interrupt vectors before we branch out
    to OOL handlers.
    
    But as mentioned already, there are interrupt vectors on 64-bit POWER
    server processors that are only 32 bytes long (like vectors 0x4f00,
    0x4f20, etc.), which cannot accomodate the above two cases at the same
    time owing to space constraint. Currently, in these interrupt vectors,
    we simply branch out to OOL handlers, without using LOAD_HANDLER(),
    which leaves us vulnerable when running a relocatable kernel (eg. kdump
    case). While this has been the case for sometime now and kdump is used
    widely, we were fortunate not to see any problems so far, for three
    reasons:
    
      1. In almost all cases, production kernel (relocatable) is used for
         kdump as well, which would mean that crashed kernel's OOL handler
         would be at the same place where we end up branching to, from short
         interrupt vector of kdump kernel.
      2. Also, OOL handler was unlikely the reason for crash in almost all
         the kdump scenarios, which meant we had a sane OOL handler from
         crashed kernel that we branched to.
      3. On most 64-bit POWER server processors, page size is large enough
         that marking interrupt vector code as executable (see commit
         429d2e83) leads to marking OOL handler code from crashed kernel,
         that sits right below interrupt vector code from kdump kernel, as
         executable as well.
    
    Let us fix this by moving the __end_interrupts marker down past OOL
    handlers to make sure that we also copy OOL handlers to real address
    0x100 when running a relocatable kernel.
    
    This fix has been tested successfully in kdump scenario, on an LPAR with
    4K page size by using different default/production kernel and kdump
    kernel.
    
    Also tested by manually corrupting the OOL handlers in the first kernel
    and then kdump'ing, and then causing the OOL handlers to fire - mpe.
    
    Fixes: c1fb6816fb1b ("powerpc: Add relocation on exception vector handlers")
    Signed-off-by: Hari Bathini <hbathini@linux.vnet.ibm.com>
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f38db9379af750cf0d6ecf957af129100dc62a9e
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sat May 21 17:48:17 2016 +0800

    batman-adv: Fix double neigh_node_put in batadv_v_ogm_route_update
    
    The router is put down twice when it was non-NULL and either orig_ifinfo is
    NULL afterwards or batman-adv receives a packet with the same sequence
    number. This will end up in a use-after-free when the batadv_neigh_node is
    removed because the reference counter ended up too early at 0.
    
    This patch is skipping netdev and is being sent directly to stable in
    accordance with David S. Miller[1].
    
    The reason is that this patch applies only on linux-4.6 and not on
    linux-4.7/net because it was "accidentally" fixed by a refactoring
    commit (more details in [2]).
    
    It addresses a reference imbalance which systematically leads to a
    use-after-free and then a kernel crash.
    
    [1] https://www.mail-archive.com/b.a.t.m.a.n@lists.open-mesh.org/msg15258.html
    [2] https://www.mail-archive.com/b.a.t.m.a.n@lists.open-mesh.org/msg15252.html
    
    
    Fixes: 9323158ef9f4 ("batman-adv: OGMv2 - implement originators logic")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Antonio Quartulli <a@unstable.cc>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c291d3adad88eb74a5d9a38a75266bfb527bfa2
Author: Zhao Qiang <qiang.zhao@nxp.com>
Date:   Wed Mar 9 09:48:11 2016 +0800

    QE-UART: add "fsl,t1040-ucc-uart" to of_device_id
    
    commit 11ca2b7ab432eb90906168c327733575e68d388f upstream.
    
    New bindings use "fsl,t1040-ucc-uart" as the compatible for qe-uart.
    So add it.
    
    Signed-off-by: Zhao Qiang <qiang.zhao@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d6d4bc3f6346915aeba7df9653d606ba0cc1613
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon May 23 16:23:50 2016 -0700

    wait/ptrace: assume __WALL if the child is traced
    
    commit bf959931ddb88c4e4366e96dd22e68fa0db9527c upstream.
    
    The following program (simplified version of generated by syzkaller)
    
            #include <pthread.h>
            #include <unistd.h>
            #include <sys/ptrace.h>
            #include <stdio.h>
            #include <signal.h>
    
            void *thread_func(void *arg)
            {
                    ptrace(PTRACE_TRACEME, 0,0,0);
                    return 0;
            }
    
            int main(void)
            {
                    pthread_t thread;
    
                    if (fork())
                            return 0;
    
                    while (getppid() != 1)
                            ;
    
                    pthread_create(&thread, NULL, thread_func, NULL);
                    pthread_join(thread, NULL);
                    return 0;
            }
    
    creates an unreapable zombie if /sbin/init doesn't use __WALL.
    
    This is not a kernel bug, at least in a sense that everything works as
    expected: debugger should reap a traced sub-thread before it can reap the
    leader, but without __WALL/__WCLONE do_wait() ignores sub-threads.
    
    Unfortunately, it seems that /sbin/init in most (all?) distributions
    doesn't use it and we have to change the kernel to avoid the problem.
    Note also that most init's use sys_waitid() which doesn't allow __WALL, so
    the necessary user-space fix is not that trivial.
    
    This patch just adds the "ptrace" check into eligible_child().  To some
    degree this matches the "tsk->ptrace" in exit_notify(), ->exit_signal is
    mostly ignored when the tracee reports to debugger.  Or WSTOPPED, the
    tracer doesn't need to set this flag to wait for the stopped tracee.
    
    This obviously means the user-visible change: __WCLONE and __WALL no
    longer have any meaning for debugger.  And I can only hope that this won't
    break something, but at least strace/gdb won't suffer.
    
    We could make a more conservative change.  Say, we can take __WCLONE into
    account, or !thread_group_leader().  But it would be nice to not
    complicate these historical/confusing checks.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Jan Kratochvil <jan.kratochvil@redhat.com>
    Cc: "Michael Kerrisk (man-pages)" <mtk.manpages@gmail.com>
    Cc: Pedro Alves <palves@redhat.com>
    Cc: Roland McGrath <roland@hack.frob.com>
    Cc: <syzkaller@googlegroups.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0784672d05684de901fc2aa56150d7ea9a475a2d
Author: Chen Feng <puck.chen@hisilicon.com>
Date:   Fri May 20 16:59:02 2016 -0700

    mm/compaction.c: fix zoneindex in kcompactd()
    
    commit 6cd9dc3e75078ef646076fa63adfb9b85ced0b66 upstream.
    
    While testing the kcompactd in my platform 3G MEM only DMA ZONE.  I
    found the kcompactd never wakeup.  It seems the zoneindex has already
    minus 1 before.  So the traverse here should be <=.
    
    It fixes a regression where kswapd could previously compact, but
    kcompactd not.  Not a crash fix though.
    
    [akpm@linux-foundation.org: fix kcompactd_do_work() as well, per Hugh]
    Link: http://lkml.kernel.org/r/1463659121-84124-1-git-send-email-puck.chen@hisilicon.com
    Fixes: accf62422b3a ("mm, kswapd: replace kswapd compaction with waking up kcompactd")
    Signed-off-by: Chen Feng <puck.chen@hisilicon.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Zhuangluan Su <suzhuangluan@hisilicon.com>
    Cc: Yiping Xu <xuyiping@hisilicon.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d6855d014e26710495baf881e277c616d67dea1
Author: Stefan Bader <stefan.bader@canonical.com>
Date:   Fri May 20 16:58:38 2016 -0700

    mm: use phys_addr_t for reserve_bootmem_region() arguments
    
    commit 4b50bcc7eda4d3cc9e3f2a0aa60e590fedf728c5 upstream.
    
    Since commit 92923ca3aace ("mm: meminit: only set page reserved in the
    memblock region") the reserved bit is set on reserved memblock regions.
    However start and end address are passed as unsigned long.  This is only
    32bit on i386, so it can end up marking the wrong pages reserved for
    ranges at 4GB and above.
    
    This was observed on a 32bit Xen dom0 which was booted with initial
    memory set to a value below 4G but allowing to balloon in memory
    (dom0_mem=1024M for example).  This would define a reserved bootmem
    region for the additional memory (for example on a 8GB system there was
    a reverved region covering the 4GB-8GB range).  But since the addresses
    were passed on as unsigned long, this was actually marking all pages
    from 0 to 4GB as reserved.
    
    Fixes: 92923ca3aacef63 ("mm: meminit: only set page reserved in the memblock region")
    Link: http://lkml.kernel.org/r/1463491221-10573-1-git-send-email-stefan.bader@canonical.com
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5d679e43bb8a2fe7f2a1d252cca52fb08a0833d
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Mar 18 15:51:31 2016 +0000

    PKCS#7: fix missing break on OID_sha224 case
    
    commit 06af9b0f4949b85b20107e6d75f5eba15111d220 upstream.
    
    The OID_sha224 case is missing a break and it falls through
    to the -ENOPKG error default.  Since HASH_ALGO_SHA224 seems
    to be supported, this looks like an unintentional missing break.
    
    Fixes: 07f081fb5057 ("PKCS#7: Add OIDs for sha224, sha284 and sha512 hash algos and use them")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3373d15e99654d544c1419179b32b7892eb98df
Author: Tiffany Lin <tiffany.lin@mediatek.com>
Date:   Mon Mar 14 08:16:14 2016 -0300

    media: v4l2-compat-ioctl32: fix missing reserved field copy in put_v4l2_create32
    
    commit baf43c6eace43868e490f18560287fa3481b2159 upstream.
    
    In v4l2-compliance utility, test VIDIOC_CREATE_BUFS will check whether reserved
    filed of v4l2_create_buffers filled with zero
    Reserved field is filled with zero in v4l_create_bufs.
    This patch copy reserved field of v4l2_create_buffer from kernel space to user
    space
    
    Signed-off-by: Tiffany Lin <tiffany.lin@mediatek.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de98345b2bf53e1ca92d1a7dd3ef023b752fa568
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Wed May 11 12:27:16 2016 -0400

    PCI: Disable all BAR sizing for devices with non-compliant BARs
    
    commit ad67b437f187ea818b2860524d10f878fadfdd99 upstream.
    
    b84106b4e229 ("PCI: Disable IO/MEM decoding for devices with non-compliant
    BARs") disabled BAR sizing for BARs 0-5 of devices that don't comply with
    the PCI spec.  But it didn't do anything for expansion ROM BARs, so we
    still try to size them, resulting in warnings like this on Broadwell-EP:
    
      pci 0000:ff:12.0: BAR 6: failed to assign [mem size 0x00000001 pref]
    
    Move the non-compliant BAR check from __pci_read_base() up to
    pci_read_bases() so it applies to the expansion ROM BAR as well as
    to BARs 0-5.
    
    Note that direct callers of __pci_read_base(), like sriov_init(), will now
    bypass this check.  We haven't had reports of devices with broken SR-IOV
    BARs yet.
    
    [bhelgaas: changelog]
    Fixes: b84106b4e229 ("PCI: Disable IO/MEM decoding for devices with non-compliant BARs")
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    CC: Thomas Gleixner <tglx@linutronix.de>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ade217987b4122e81f0ec9569343a1655b417096
Author: Andrew Jeffery <andrew@aj.id.au>
Date:   Wed Apr 20 11:24:17 2016 +0930

    pinctrl: exynos5440: Use off-stack memory for pinctrl_gpio_range
    
    commit 71324fdc72ef0163e57631aa814a9a81e9e4770b upstream.
    
    The range is registered into a linked list which can be referenced
    throughout the lifetime of the driver. Ensure the range's memory is useful
    for the same lifetime by adding it to the driver's private data structure.
    
    The bug was introduced in the driver's initial commit, which was present in
    v3.10.
    
    Fixes: f0b9a7e521fa ("pinctrl: exynos5440: add pinctrl driver for Samsung EXYNOS5440 SoC")
    Signed-off-by: Andrew Jeffery <andrew@aj.id.au>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f3befd020509cd9678865e7e2539318b826db98
Author: Martin Sperl <kernel@martin.sperl.org>
Date:   Mon Feb 29 11:39:21 2016 +0000

    clk: bcm2835: correctly enable fractional clock support
    
    commit 959ca92a3235fc4b17c1e18483fc390b3d612254 upstream.
    
    The current driver calculates the clock divider with
    fractional support enabled.
    
    But it does not enable fractional support in the
    control register itself resulting in an integer only divider,
    but in clk_set_rate responds back the fractionally divided
    clock frequency.
    
    This patch enables fractional support in the control register
    whenever there is a fractional bit set in the requested clock divider.
    
    Mash clock limits are are also handled for the PWM clock
    applying the correct divider limits (2 and max_int) applicable to
    basic fractional divider support (mash order of 1).
    
    It also adds locking to protect the read/modify/write cycle of
    the register modification.
    
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the
    audio domain clocks")
    
    Signed-off-by: Martin Sperl <kernel@martin.sperl.org>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0559152de4bfdf2db9c800a0379e762ebc7737d
Author: Martin Sperl <kernel@martin.sperl.org>
Date:   Mon Feb 29 11:39:20 2016 +0000

    clk: bcm2835: divider value has to be 1 or more
    
    commit 997f16bd5d2e9b3456027f96fcadfe1e2bf12f4e upstream.
    
    Current clamping of a normal divider allows a value < 1 to be valid.
    
    A divider of < 1 would actually only be possible if we had a PLL...
    
    So this patch clamps the divider to 1.
    
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the
    audio domain clocks")
    
    Signed-off-by: Martin Sperl <kernel@martin.sperl.org>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11e3690a519143f3442491bbaed80217fdb476ba
Author: Martin Sperl <kernel@martin.sperl.org>
Date:   Mon Feb 29 11:39:17 2016 +0000

    clk: bcm2835: pll_off should only update CM_PLL_ANARST
    
    commit 6727f086cfe4ddcc651eb2bf4301abfcf619be06 upstream.
    
    bcm2835_pll_off is currently assigning CM_PLL_ANARST to the control
    register, which may lose the other bits that are currently set by the
    clock dividers.
    
    It also now locks during the read/modify/write cycle of both
    registers.
    
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the
    audio domain clocks")
    
    Signed-off-by: Martin Sperl <kernel@martin.sperl.org>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 528b498ea5e7fd6260aa457aba9335699b8a66c4
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Tue Mar 8 01:41:29 2016 +0200

    clk: at91: fix check of clk_register() returned value
    
    commit cb0ceaf77d93964a0d00477c79f4499123f6159c upstream.
    
    The clk_register() function returns a valid pointer to struct clk or
    ERR_PTR() error code, this makes a check for returned NULL value
    useless and may lead to oops on error path.
    
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Acked-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Fixes: bcc5fd49a0fd ("clk: at91: add a driver for the h32mx clock")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4709231f7ad9fce6254e99e8ff685d26a1c6fa60
Author: Eric Anholt <eric@anholt.net>
Date:   Wed Apr 13 13:05:03 2016 -0700

    clk: bcm2835: Fix PLL poweron
    
    commit e708b383f4b94feca2e0d5d06e1cfc13cdfea100 upstream.
    
    In poweroff, we set the reset bit and the power down bit, but only
    managed to unset the reset bit for poweron.  This meant that if HDMI
    did -EPROBE_DEFER after it had grabbed its clocks, we'd power down the
    PLLH (that had been on at boot time) and never recover.
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the audio domain clocks")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a17392e676ff43f487e15211adb464a293ebf3b3
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Tue May 17 16:54:00 2016 +0200

    cpuidle: Fix cpuidle_state_is_coupled() argument in cpuidle_enter()
    
    commit e7387da52028b072489c45efeb7a916c0205ebd2 upstream.
    
    Commit 0b89e9aa2856 (cpuidle: delay enabling interrupts until all
    coupled CPUs leave idle) rightfully fixed a regression by letting
    the coupled idle state framework to handle local interrupt enabling
    when the CPU is exiting an idle state.
    
    The current code checks if the idle state is coupled and, if so, it
    will let the coupled code to enable interrupts. This way, it can
    decrement the ready-count before handling the interrupt. This
    mechanism prevents the other CPUs from waiting for a CPU which is
    handling interrupts.
    
    But the check is done against the state index returned by the back
    end driver's ->enter functions which could be different from the
    initial index passed as parameter to the cpuidle_enter_state()
    function.
    
     entered_state = target_state->enter(dev, drv, index);
    
     [ ... ]
    
     if (!cpuidle_state_is_coupled(drv, entered_state))
            local_irq_enable();
    
     [ ... ]
    
    If the 'index' is referring to a coupled idle state but the
    'entered_state' is *not* coupled, then the interrupts are enabled
    again. All CPUs blocked on the sync barrier may busy loop longer
    if the CPU has interrupts to handle before decrementing the
    ready-count. That's consuming more energy than saving.
    
    Fixes: 0b89e9aa2856 (cpuidle: delay enabling interrupts until all coupled CPUs leave idle)
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    [ rjw: Subject & changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1325d1ec0f9866d1aff88198cb451a9751da8ae9
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Tue Apr 5 14:05:38 2016 -0500

    cpuidle: Indicate when a device has been unregistered
    
    commit c998c07836f985b24361629dc98506ec7893e7a0 upstream.
    
    Currently the 'registered' member of the cpuidle_device struct is set
    to 1 during cpuidle_register_device. In this same function there are
    checks to see if the device is already registered to prevent duplicate
    calls to register the device, but this value is never set to 0 even on
    unregister of the device. Because of this, any attempt to call
    cpuidle_register_device after a call to cpuidle_unregister_device will
    fail which shouldn't be the case.
    
    To prevent this, set registered to 0 when the device is unregistered.
    
    Fixes: c878a52d3c7c (cpuidle: Check if device is already registered)
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a2a66b526e58a772b34da22af0075157cf9a7e4
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Fri Apr 8 13:10:23 2016 +0200

    PM / Runtime: Fix error path in pm_runtime_force_resume()
    
    commit 0ae3aeefabbeef26294e7a349b51f1c761d46c9f upstream.
    
    As pm_runtime_set_active() may fail because the device's parent isn't
    active, we can end up executing the ->runtime_resume() callback for the
    device when it isn't allowed.
    
    Fix this by invoking pm_runtime_set_active() before running the callback
    and let's also deal with the error code.
    
    Fixes: 37f204164dfb (PM: Add pm_runtime_suspend|resume_force functions)
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db68cb368b918d1d6db87ae06929b19dd44f6c14
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Apr 22 22:38:55 2016 +0300

    mfd: intel_soc_pmic_core: Terminate panel control GPIO lookup table correctly
    
    commit 36e6d081cfb2cb64e6d8e5121cffb1e62f894d36 upstream.
    
    GPIO lookup tables are supposed to be zero terminated. Let's do that
    and avoid accidentally walking off the end.
    
    Fixes: 61dd2ca2d44e ("mfd: intel_soc_pmic_core: Add lookup table for Panel Control as GPIO signal")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29b0aa9e376b70806ed8e018abe1645a6f641d42
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Mon Apr 18 15:14:56 2016 +0300

    mfd: intel-lpss: Save register context on suspend
    
    commit 41a3da2b8e1639d983192e3650670df4ecc94cf7 upstream.
    
    All configurations are lost and the registers will have
    default values when the hardware is suspended and resumed,
    so saving the private register space context on suspend, and
    restoring it on resume.
    
    Fixes: 4b45efe85263 (mfd: Add support for Intel Sunrisepoint LPSS devices)
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 648dbfa6cb8a86bec2e1d8f3da1e16bb47418bed
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Feb 19 10:42:10 2016 +0200

    mfd: intel_quark_i2c_gpio: Remove clock tree on error path
    
    commit 7f0c5ae18d649ed2f4978cbf07c02a0ff732f23e upstream.
    
    There is a potential resource leak in case when ->probe() fails. We have to
    unregister and remove clock tree which is done here.
    
    This is a follow up to previously pushed commit c4726abce63b ("mfd:
    intel_quark_i2c_gpio: Use clkdev_create()") that prevents double free() when
    clkdev_drop() followed by kfree() in devm_kcalloc() release stage.
    
    I leave Fixes tag here, but the backporting will require to backport the commit
    c4726abce63b ("mfd: intel_quark_i2c_gpio: Use clkdev_create()") first.
    
    Fixes: 60ae5b9f5cdd (mfd: intel_quark_i2c_gpio: Add Intel Quark X1000 I2C-GPIO MFD Driver)
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddce032df6a9236f3a59dacce9ee529487667fdb
Author: Akshay Bhat <akshay.bhat@timesys.com>
Date:   Mon Apr 18 15:47:53 2016 -0400

    hwmon: (ads7828) Enable internal reference
    
    commit 7a18afe8097731b8ffb6cb5b2b3b418ded77c105 upstream.
    
    On ads7828 the internal reference defaults to off upon power up. When
    using internal reference, it needs to be turned on and the voltage needs
    to settle before normal conversion cycle can be started. Hence perform a
    dummy read in the probe to enable the internal reference allowing the
    voltage to settle before performing a normal read.
    
    Without this fix, the first read from the ADC when using internal
    reference always returns incorrect data.
    
    Signed-off-by: Akshay Bhat <akshay.bhat@timesys.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d8cd5e768d3f806d31364dc480b80272a4eb4d4
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Wed Mar 23 20:59:34 2016 -0300

    regulator: Try to resolve regulators supplies on registration
    
    commit 5e3ca2b349b1e2c80b060b51bbf2af37448fad85 upstream.
    
    Commit 6261b06de565 ("regulator: Defer lookup of supply to regulator_get")
    moved the regulator supplies lookup logic from the regulators registration
    to the regulators get time.
    
    Unfortunately, that changed the behavior of the regulator core since now a
    parent supply with a child regulator marked as always-on, won't be enabled
    unless a client driver attempts to get the child regulator during boot.
    
    This patch tries to resolve the parent supply for the already registered
    regulators each time that a new regulator is registered. So the regulators
    that have child regulators marked as always on will be enabled regardless
    if a driver gets the child regulator or not.
    
    That was the behavior before the mentioned commit, since parent supplies
    were looked up at regulator registration time instead of during child get.
    
    Since regulator_resolve_supply() checks for rdev->supply, most of the times
    it will be a no-op. Errors aren't checked to keep the possible out of order
    dependencies which was the motivation for the mentioned commit.
    
    Also, the supply being available will be enforced on regulator get anyways
    in case the resolve fails on regulators registration.
    
    Fixes: 6261b06de565 ("regulator: Defer lookup of supply to regulator_get")
    Suggested-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71a9e868f374d7d5c18144c9d5f3f2a5df42139b
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Mon Apr 25 23:32:37 2016 -0700

    aacraid: Fix for KDUMP driver hang
    
    commit 78cbccd3bd683c295a44af8050797dc4a41376ff upstream.
    
    When KDUMP is triggered the driver first talks to the firmware in INTX
    mode, but the adapter firmware is still in MSIX mode. Therefore the first
    driver command hangs since the driver is waiting for an INTX response and
    firmware gives a MSIX response. If when the OS is installed on a RAID
    drive created by the adapter KDUMP will hang since the driver does not
    receive a response in sync mode.
    
    Fixed by: Change the firmware to INTX mode if it is in MSIX mode before
    sending the first sync command.
    
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c15939124e0563880bcc0bb33c0c4f3b4301384
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Mon Apr 25 23:31:57 2016 -0700

    aacraid: Fix for aac_command_thread hang
    
    commit fc4bf75ea300a5e62a2419f89dd0e22189dd7ab7 upstream.
    
    Typically under error conditions, it is possible for aac_command_thread()
    to miss the wakeup from kthread_stop() and go back to sleep, causing it
    to hang aac_shutdown.
    
    In the observed scenario, the adapter is not functioning correctly and so
    aac_fib_send() never completes (or time-outs depending on how it was
    called). Shortly after aac_command_thread() starts it performs
    aac_fib_send(SendHostTime) which hangs. When aac_probe_one
    /aac_get_adapter_info send time outs, kthread_stop is called which breaks
    the command thread out of it's hang.
    
    The code will still go back to sleep in schedule_timeout() without
    checking kthread_should_stop() so it causes aac_probe_one to hang until
    the schedule_timeout() which is 30 minutes.
    
    Fixed by: Adding another kthread_should_stop() before schedule_timeout()
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7acda5d39f4928215472181de0d135023314450c
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Mon Apr 25 23:31:26 2016 -0700

    aacraid: Relinquish CPU during timeout wait
    
    commit 07beca2be24cc710461c0b131832524c9ee08910 upstream.
    
    aac_fib_send has a special function case for initial commands during
    driver initialization using wait < 0(pseudo sync mode). In this case,
    the command does not sleep but rather spins checking for timeout.This
    loop is calls cpu_relax() in an attempt to allow other processes/threads
    to use the CPU, but this function does not relinquish the CPU and so the
    command will hog the processor. This was observed in a KDUMP
    "crashkernel" and that prevented the "command thread" (which is
    responsible for completing the command from being timed out) from
    starting because it could not get the CPU.
    
    Fixed by replacing "cpu_relax()" call with "schedule()"
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3b7ad330d02ba7d6a150eeea3efae2118eca07f
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Mon Apr 25 23:31:12 2016 -0700

    aacraid: Start adapter after updating number of MSIX vectors
    
    commit 116d77fea02e2a5aded7d29ba4c692774cb339f1 upstream.
    
    The adapter has to be started after updating the number of MSIX Vectors
    
    Fixes: ecc479e00db8 (aacraid: Set correct MSIX count for EEH recovery)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc3db459b518bad266141947d903feb30e22fd6d
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Mon May 9 21:39:43 2016 -0400

    Revert "lpfc: Delete unnecessary checks before the function call mempool_destroy"
    
    commit d65c8fff867a6450c58ce31572e883148a445ddf upstream.
    
    This reverts commit 9be321819c43417432a8376428b90fe3fe3a3510 which
    caused a regression on hardware using the SLI3 interface.
    
    Reported-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: James Bottomley <jejb@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5933622cae3fcf3b5c008f99bcd2b0fdb1b3e2e6
Author: wang yanqing <udknight@gmail.com>
Date:   Sat May 7 00:33:53 2016 +0800

    rtlwifi: pci: use dev_kfree_skb_irq instead of kfree_skb in rtl_pci_reset_trx_ring
    
    commit cf968937d27751296920e6b82ffa89735e3a0023 upstream.
    
    We can't use kfree_skb in irq disable context, because spin_lock_irqsave
    make sure we are always in irq disable context, use dev_kfree_skb_irq
    instead of kfree_skb is better than dev_kfree_skb_any.
    
    This patch fix below kernel warning:
    [ 7612.095528] ------------[ cut here ]------------
    [ 7612.095546] WARNING: CPU: 3 PID: 4460 at kernel/softirq.c:150 __local_bh_enable_ip+0x58/0x80()
    [ 7612.095550] Modules linked in: rtl8723be x86_pkg_temp_thermal btcoexist rtl_pci rtlwifi rtl8723_common
    [ 7612.095567] CPU: 3 PID: 4460 Comm: ifconfig Tainted: G        W       4.4.0+ #4
    [ 7612.095570] Hardware name: LENOVO 20DFA04FCD/20DFA04FCD, BIOS J5ET48WW (1.19 ) 08/27/2015
    [ 7612.095574]  00000000 00000000 da37fc70 c12ce7c5 00000000 da37fca0 c104cc59 c19d4454
    [ 7612.095584]  00000003 0000116c c19d4784 00000096 c10508a8 c10508a8 00000200 c1b42400
    [ 7612.095594]  f29be780 da37fcb0 c104ccad 00000009 00000000 da37fcbc c10508a8 f21f08b8
    [ 7612.095604] Call Trace:
    [ 7612.095614]  [<c12ce7c5>] dump_stack+0x41/0x5c
    [ 7612.095620]  [<c104cc59>] warn_slowpath_common+0x89/0xc0
    [ 7612.095628]  [<c10508a8>] ? __local_bh_enable_ip+0x58/0x80
    [ 7612.095634]  [<c10508a8>] ? __local_bh_enable_ip+0x58/0x80
    [ 7612.095640]  [<c104ccad>] warn_slowpath_null+0x1d/0x20
    [ 7612.095646]  [<c10508a8>] __local_bh_enable_ip+0x58/0x80
    [ 7612.095653]  [<c16b7d34>] destroy_conntrack+0x64/0xa0
    [ 7612.095660]  [<c16b300f>] nf_conntrack_destroy+0xf/0x20
    [ 7612.095665]  [<c1677565>] skb_release_head_state+0x55/0xa0
    [ 7612.095670]  [<c16775bb>] skb_release_all+0xb/0x20
    [ 7612.095674]  [<c167760b>] __kfree_skb+0xb/0x60
    [ 7612.095679]  [<c16776f0>] kfree_skb+0x30/0x70
    [ 7612.095686]  [<f81b869d>] ? rtl_pci_reset_trx_ring+0x22d/0x370 [rtl_pci]
    [ 7612.095692]  [<f81b869d>] rtl_pci_reset_trx_ring+0x22d/0x370 [rtl_pci]
    [ 7612.095698]  [<f81b87f9>] rtl_pci_start+0x19/0x190 [rtl_pci]
    [ 7612.095705]  [<f81970e6>] rtl_op_start+0x56/0x90 [rtlwifi]
    [ 7612.095712]  [<c17e3f16>] drv_start+0x36/0xc0
    [ 7612.095717]  [<c17f5ab3>] ieee80211_do_open+0x2d3/0x890
    [ 7612.095725]  [<c16820fe>] ? call_netdevice_notifiers_info+0x2e/0x60
    [ 7612.095730]  [<c17f60bd>] ieee80211_open+0x4d/0x50
    [ 7612.095736]  [<c16891b3>] __dev_open+0xa3/0x130
    [ 7612.095742]  [<c183fa53>] ? _raw_spin_unlock_bh+0x13/0x20
    [ 7612.095748]  [<c1689499>] __dev_change_flags+0x89/0x140
    [ 7612.095753]  [<c127c70d>] ? selinux_capable+0xd/0x10
    [ 7612.095759]  [<c1689589>] dev_change_flags+0x29/0x60
    [ 7612.095765]  [<c1700b93>] devinet_ioctl+0x553/0x670
    [ 7612.095772]  [<c12db758>] ? _copy_to_user+0x28/0x40
    [ 7612.095777]  [<c17018b5>] inet_ioctl+0x85/0xb0
    [ 7612.095783]  [<c166e647>] sock_ioctl+0x67/0x260
    [ 7612.095788]  [<c166e5e0>] ? sock_fasync+0x80/0x80
    [ 7612.095795]  [<c115c99b>] do_vfs_ioctl+0x6b/0x550
    [ 7612.095800]  [<c127c812>] ? selinux_file_ioctl+0x102/0x1e0
    [ 7612.095807]  [<c10a8914>] ? timekeeping_suspend+0x294/0x320
    [ 7612.095813]  [<c10a256a>] ? __hrtimer_run_queues+0x14a/0x210
    [ 7612.095820]  [<c1276e24>] ? security_file_ioctl+0x34/0x50
    [ 7612.095827]  [<c115cef0>] SyS_ioctl+0x70/0x80
    [ 7612.095832]  [<c1001804>] do_fast_syscall_32+0x84/0x120
    [ 7612.095839]  [<c183ff91>] sysenter_past_esp+0x36/0x55
    [ 7612.095844] ---[ end trace 97e9c637a20e8348 ]---
    
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 649e3cb294e6d3c6549e9342aa762973d4a9e34d
Author: wang yanqing <udknight@gmail.com>
Date:   Tue May 3 00:38:36 2016 +0800

    rtlwifi: Fix logic error in enter/exit power-save mode
    
    commit 873ffe154ae074c46ed2d72dbd9a2a99f06f55b4 upstream.
    
    In commit a269913c52ad ("rtlwifi: Rework rtl_lps_leave() and
    rtl_lps_enter() to use work queue"), the tests for enter/exit
    power-save mode were inverted. With this change applied, the
    wifi connection becomes much more stable.
    
    Fixes: a269913c52ad ("rtlwifi: Rework rtl_lps_leave() and rtl_lps_enter() to use work queue")
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f19f23ec55fd79a448dac3a8024404f1bbc0fdf
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Wed Mar 16 13:33:35 2016 -0500

    rtlwifi: btcoexist: Implement antenna selection
    
    commit baa1702290953295e421f0f433e2b1ff4815827c upstream.
    
    The previous patch added an option to rtl8723be to manually select the
    antenna for those cases when only a single antenna is present, and the
    on-board EEPROM is incorrectly programmed. This patch implements the
    necessary changes in the Bluetooth coexistence driver.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c00bf0046782fd9dfab7b7354e3fd322bc5a5b1
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Wed Mar 16 13:33:34 2016 -0500

    rtlwifi: rtl8723be: Add antenna select module parameter
    
    commit c18d8f5095715c56bb3cd9cba64242542632054b upstream.
    
    A number of new laptops have been delivered with only a single antenna.
    In principle, this is OK; however, a problem arises when the on-board
    EEPROM is programmed to use the other antenna connection. The option
    of opening the computer and moving the connector is not always possible
    as it will void the warranty in some cases. In addition, this solution
    breaks the Windows driver when the box dual boots Linux and Windows.
    
    A fix involving a new module parameter has been developed.  This commit
    adds the new parameter and implements the changes needed for the driver.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c56bee3c9e5b6632e27005fda31b57b1fd4eb6a3
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Mar 14 09:07:13 2016 +0900

    hwrng: exynos - Fix unbalanced PM runtime put on timeout error path
    
    commit f1925d78d7b710a1179828d53e918295f5f5d222 upstream.
    
    In case of timeout during read operation, the exit path lacked PM
    runtime put. This could lead to unbalanced runtime PM usage counter thus
    leaving the device in an active state.
    
    Fixes: d7fd6075a205 ("hwrng: exynos - Add timeout for waiting on init done")
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2971a9b4a759546511cf9e1c56161b8dccfa9b5
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Mon Mar 14 14:51:48 2016 -0400

    ath5k: Change led pin configuration for compaq c700 laptop
    
    commit 7b9bc799a445aea95f64f15e0083cb19b5789abe upstream.
    
    BugLink: http://bugs.launchpad.net/bugs/972604
    
    Commit 09c9bae26b0d3c9472cb6ae45010460a2cee8b8d ("ath5k: add led pin
    configuration for compaq c700 laptop") added a pin configuration for the Compaq
    c700 laptop.  However, the polarity of the led pin is reversed.  It should be
    red for wifi off and blue for wifi on, but it is the opposite.  This bug was
    reported in the following bug report:
    http://pad.lv/972604
    
    Fixes: 09c9bae26b0d3c9472cb6ae45010460a2cee8b8d ("ath5k: add led pin configuration for compaq c700 laptop")
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69cbb20164fb559cf65bb5987648ce99cd67f9fd
Author: Anilkumar Kolli <akolli@qti.qualcomm.com>
Date:   Tue Apr 26 21:35:48 2016 +0530

    ath10k: fix kernel panic, move arvifs list head init before htt init
    
    commit 4ad24a9d83bd4bf0a85e95bf144e18d3fda4fbf1 upstream.
    
    It is observed that while loading and unloading ath10k modules
    in an infinite loop, before ath10k_core_start() completion HTT
    rx frames are received, while processing these frames,
    dereferencing the arvifs list code is getting hit before
    initilizing the arvifs list, causing a kernel panic.
    
    This patch initilizes the arvifs list before initilizing htt.
    
    Fixes the below issue:
     [<bf88b058>] (ath10k_htt_rx_pktlog_completion_handler+0x278/0xd08 [ath10k_core])
     [<bf88b058>] (ath10k_htt_rx_pktlog_completion_handler [ath10k_core])
     [<bf88c0dc>] (ath10k_htt_txrx_compl_task+0x5f4/0xeb0 [ath10k_core])
     [<bf88c0dc>] (ath10k_htt_txrx_compl_task [ath10k_core])
     [<c0234100>] (tasklet_action+0x8c/0xec)
     [<c0234100>] (tasklet_action)
     [<c02337c0>] (__do_softirq+0xf8/0x228)
     [<c02337c0>] (__do_softirq)  [<c0233920>] (run_ksoftirqd+0x30/0x90)
     Code: e5954ad8 e2899008 e1540009 0a00000d (e5943008)
     ---[ end trace 71de5c2e011dbf56 ]---
     Kernel panic - not syncing: Fatal exception in interrupt
    
    Fixes: 500ff9f9389d ("ath10k: implement chanctx API")
    Signed-off-by: Anilkumar Kolli <akolli@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d75673857619d32a4819c3b3cf7193b26758db5d
Author: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
Date:   Thu Apr 7 12:11:54 2016 +0530

    ath10k: fix rx_channel during hw reconfigure
    
    commit 1ce8c1484e80010a6e4b9611c65668ff77556f45 upstream.
    
    Upon firmware assert, restart work will be triggered so that mac80211
    will reconfigure the driver. An issue is reported that after restart
    work, survey dump data do not contain in-use (SURVEY_INFO_IN_USE) info
    for operating channel. During reconfigure, since mac80211 already has
    valid channel context for given radio, channel context iteration return
    num_chanctx > 0. Hence rx_channel is always NULL. Fix this by assigning
    channel context to rx_channel when driver restart is in progress.
    
    Signed-off-by: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3903f64ba2b1af67a32bba70630f87e63433a2f2
Author: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
Date:   Wed Mar 2 20:13:52 2016 +0530

    ath10k: fix firmware assert in monitor mode
    
    commit 8a75fc54745fd3ce9062ab1cc6429a9da9ac2a68 upstream.
    
    commit 166de3f1895d ("ath10k: remove supported chain mask") had revealed
    an issue on monitor mode. Configuring NSS upon monitor interface
    creation is causing target assert in all qca9888x and qca6174 firmware.
    Firmware assert issue can be reproduced by below sequence even after
    reverting commit 166de3f1895d ("ath10k: remove supported chain mask").
    
    ip link set wlan0 down
    iw wlan0 set type monitor
    iw phy0 set antenna 7
    ip link set wlan0 up
    
    This issue is originally reported on qca9888 with 10.1 firmware.
    
    Fixes: 5572a95b4b ("ath10k: apply chainmask settings to vdev on creation")
    Reported-by: Janusz Dziedzic <janusz.dziedzic@tieto.com>
    Signed-off-by: Rajkumar Manoharan <rmanohar@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1840f2b66f16df8c997ad8043c3d736e2dbce2c9
Author: Anilkumar Kolli <akolli@qti.qualcomm.com>
Date:   Fri Mar 11 11:46:39 2016 +0530

    ath10k: fix debugfs pktlog_filter write
    
    commit 9ddc486aa09a3413a6c492fcf160ce61bfccb7b1 upstream.
    
    It is observed that, we are disabling the packet log if we write same
    value to the pktlog_filter for the second time. Always enable pktlogs
    on non zero filter.
    
    Fixes: 90174455ae05 ("ath10k: add support to configure pktlog filter")
    Signed-off-by: Anilkumar Kolli <akolli@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49ba5b374f6810bf4c3e0f5f3c2fa23a80d547e1
Author: Vittorio Gambaletta (VittGam) <linux-wireless@vittgam.net>
Date:   Mon Apr 11 04:48:55 2016 +0200

    ath9k: Fix LED polarity for some Mini PCI AR9220 MB92 cards.
    
    commit 0f9edcdd88a993914fa1d1dc369b35dc503979db upstream.
    
    The Wistron DNMA-92 and Compex WLM200NX have inverted LED polarity
    (active high instead of active low).
    
    The same PCI Subsystem ID is used by both cards, which are based on
    the same Atheros MB92 design.
    
    Cc: <linux-wireless@vger.kernel.org>
    Cc: <ath9k-devel@qca.qualcomm.com>
    Cc: <ath9k-devel@lists.ath9k.org>
    Signed-off-by: Vittorio Gambaletta <linuxbugs@vittgam.net>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b49828588915a38e17fd38ca97e6406444c1404
Author: Vittorio Gambaletta (VittGam) <linux-wireless@vittgam.net>
Date:   Mon Apr 11 04:48:54 2016 +0200

    ath9k: Add a module parameter to invert LED polarity.
    
    commit cd84042ce9040ad038e958bc67a46fcfc015c736 upstream.
    
    The LED can be active high instead of active low on some hardware.
    
    Add the led_active_high module parameter. It defaults to -1 to obey
    platform data as before.
    
    Setting the parameter to 1 or 0 will force the LED respectively
    active high or active low.
    
    Cc: <linux-wireless@vger.kernel.org>
    Cc: <ath9k-devel@qca.qualcomm.com>
    Cc: <ath9k-devel@lists.ath9k.org>
    Signed-off-by: Vittorio Gambaletta <linuxbugs@vittgam.net>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a51c3d995f741a59994063d9d94f214216a8b9d4
Author: Alexander Kurz <akurz@blala.de>
Date:   Thu Apr 14 23:30:49 2016 +0200

    ARM: dts: imx35: restore existing used clock enumeration
    
    commit 3397c2c45b1b6f54834dfeae30a73046f33ca943 upstream.
    
    A new element got inserted into enum mx35_clks with commit 3713e3f5e927
    ("clk: imx35: define two clocks for rtc"). This insertion shifted most
    nummerical clock assignments to a new nummerical value which in turn
    rendered most hardcoded nummeric values in imx35.dtsi incorrect.
    
    Restore the existing order by moving the newly introduced clock to the
    end of the enum. Update the dts documentation accordingly.
    
    Signed-off-by: Alexander Kurz <akurz@blala.de>
    Fixes: 3713e3f5e927 ("clk: imx35: define two clocks for rtc")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37278f9db951f11b200c549e4250847ca82a3e96
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri May 6 09:27:16 2016 +0200

    ARM: dts: exynos: Add interrupt line to MAX8997 PMIC on exynos4210-trats
    
    commit 330d12764e15f6e3e94ff34cda29db96d2589c24 upstream.
    
    MAX8997 PMIC requires interrupt and fails probing without it.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: d105f0b1215d ("ARM: dts: Add basic dts file for Samsung Trats board")
    [k.kozlowski: Write commit message, add CC-stable]
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d787de946242221c4eef057c84ecc85576b8292
Author: Florian Vallee <fvallee@eukrea.fr>
Date:   Tue Apr 19 17:50:05 2016 +0200

    ARM: dts: at91: fix typo in sama5d2 PIN_PD24 description
    
    commit b1f3a3b03eb5f61b4051e2da9aa15653e705e111 upstream.
    
    Fix a typo on PIN_PD24 for UTXD2 and FLEXCOM4_IO3 which were
    wrongly linked to PIN_PD23).
    
    Signed-off-by: Florian Vallee <fvallee@eukrea.fr>
    Fixes: 7f16cb676c00 ("ARM: at91/dt: add sama5d2 pinmux")
    [nicolas.ferre@atmel.com: add commit message, changed subject]
    Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eca549900e5b9ccd0d32ea27bb8d2717b54e2657
Author: Imre Kaloz <kaloz@openwrt.org>
Date:   Fri Jul 31 20:42:00 2015 +0200

    ARM: mvebu: fix GPIO config on the Linksys boards
    
    commit 9800917cf92f5b5fe5cae706cb70db8d014f663c upstream.
    
    Some of the GPIO configs were wrong in the submitted DTS files,
    this patch fixes all affected boards.
    
    Signed-off-by: Imre Kaloz <kaloz@openwrt.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>

commit 6a78b3ecd8219a476646682665a8b7b59d2098a7
Author: Priit Laes <plaes@plaes.org>
Date:   Thu Mar 24 21:52:17 2016 +0200

    ARM: sun7i: dt: Enable dram gate 5 (tve0 clock) for simplefb TV output
    
    commit 4b8ccef22fb547007ac38c4e5a28a773adee1e6e upstream.
    
    Seems like dram_gate 5 was forgotten when DRAM gating driver was added.
    
    Add it.
    
    Fixes: 0b4bf5a5200b (ARM: dts: sun7i: Add DRAM gates)
    Signed-off-by: Priit Laes <plaes@plaes.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8f8349d497205286fd405d2fdf689a631e1f322
Author: Priit Laes <plaes@plaes.org>
Date:   Thu Mar 24 21:52:16 2016 +0200

    ARM: sun4i: dt: Enable dram gate 5 (tve0 clock) for simplefb TV output
    
    commit bec38aaafd9ec1463dd3857f02bc029707e4213d upstream.
    
    Seems like dram_gate 5 was forgotten when DRAM gate driver was added.
    
    Enable it.
    
    Fixes: 82f8582feef4 (ARM: dts: sun4i: Add DRAM gates)
    Signed-off-by: Priit Laes <plaes@plaes.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 786f010dc699b1c8df122ab32ef7d9899fa3fd1d
Author: Cameron Gutman <aicommander@gmail.com>
Date:   Fri May 27 16:23:50 2016 -0700

    Input: xpad - prevent spurious input from wired Xbox 360 controllers
    
    commit 1ff5fa3c6732f08e01ae12f12286d4728c9e4d86 upstream.
    
    After initially connecting a wired Xbox 360 controller or sending it
    a command to change LEDs, a status/response packet is interpreted as
    controller input. This causes the state of buttons represented in
    byte 2 of the controller data packet to be incorrect until the next
    valid input packet. Wireless Xbox 360 controllers are not affected.
    
    Writing a new value to the LED device while holding the Start button
    and running jstest is sufficient to reproduce this bug. An event will
    come through with the Start button released.
    
    Xboxdrv also won't attempt to read controller input from a packet
    where byte 0 is non-zero. It also checks that byte 1 is 0x14, but
    that value differs between wired and wireless controllers and this
    code is shared by both. I think just checking byte 0 is enough to
    eliminate unwanted packets.
    
    The following are some examples of 3-byte status packets I saw:
    01 03 02
    02 03 00
    03 03 03
    08 03 00
    
    Signed-off-by: Cameron Gutman <aicommander@gmail.com>
    Signed-off-by: Pavel Rojtberg <rojtberg@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7b4508f0af855bf70fbbad0b90a522a23af601a
Author: Pavel Rojtberg <rojtberg@gmail.com>
Date:   Fri May 27 16:22:25 2016 -0700

    Input: xpad - move pending clear to the correct location
    
    commit 4efc6939a83c54fb3417541be48991afd0290ba3 upstream.
    
    otherwise we lose ff commands: https://github.com/paroj/xpad/issues/27
    
    Signed-off-by: Pavel Rojtberg <rojtberg@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c9fd4b43979b7ece47a6b2f81518f0be43d21a8
Author: Ricky Liang <jcliang@chromium.org>
Date:   Fri May 20 10:58:59 2016 -0700

    Input: uinput - handle compat ioctl for UI_SET_PHYS
    
    commit affa80bd97f7ca282d1faa91667b3ee9e4c590e6 upstream.
    
    When running a 32-bit userspace on a 64-bit kernel, the UI_SET_PHYS
    ioctl needs to be treated with special care, as it has the pointer
    size encoded in the command.
    
    Signed-off-by: Ricky Liang <jcliang@chromium.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9982464a668d468789f80b761b7d43b11a44768c
Author: Mark Brown <broonie@kernel.org>
Date:   Wed May 18 18:30:39 2016 +0100

    ASoC: ak4642: Enable cache usage to fix crashes on resume
    
    commit d3030d11961a8c103cf07aed59905276ddfc06c2 upstream.
    
    The ak4642 driver is using a regmap cache sync to restore the
    configuration of the chip on resume but (as Peter observed) does not
    actually define a register cache which means that the resume is never
    going to work and we trigger asserts in regmap.  Fix this by enabling
    caching.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reported-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecd717314e55bf12a2c1c0ada51b3b888f2403b1
Author: Mikulas Patocka <mikulas@twibright.com>
Date:   Tue May 24 22:48:33 2016 +0200

    affs: fix remount failure when there are no options changed
    
    commit 01d6e08711bf90bc4d7ead14a93a0cbd73b1896a upstream.
    
    Commit c8f33d0bec99 ("affs: kstrdup() memory handling") checks if the
    kstrdup function returns NULL due to out-of-memory condition.
    
    However, if we are remounting a filesystem with no change to
    filesystem-specific options, the parameter data is NULL.  In this case,
    kstrdup returns NULL (because it was passed NULL parameter), although no
    out of memory condition exists.  The mount syscall then fails with
    ENOMEM.
    
    This patch fixes the bug.  We fail with ENOMEM only if data is non-NULL.
    
    The patch also changes the call to replace_mount_options - if we didn't
    pass any filesystem-specific options, we don't call
    replace_mount_options (thus we don't erase existing reported options).
    
    Fixes: c8f33d0bec99 ("affs: kstrdup() memory handling")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e1ff12114cf7788ef1355d0f388c2f84aac090e
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Thu May 26 12:55:45 2016 +0100

    MIPS: VDSO: Build with `-fno-strict-aliasing'
    
    commit 94cc36b84acc29f543b48bc5ed786011b112a666 upstream.
    
    Avoid an aliasing issue causing a build error in VDSO:
    
    In file included from include/linux/srcu.h:34:0,
                     from include/linux/notifier.h:15,
                     from ./arch/mips/include/asm/uprobes.h:9,
                     from include/linux/uprobes.h:61,
                     from include/linux/mm_types.h:13,
                     from ./arch/mips/include/asm/vdso.h:14,
                     from arch/mips/vdso/vdso.h:27,
                     from arch/mips/vdso/gettimeofday.c:11:
    include/linux/workqueue.h: In function 'work_static':
    include/linux/workqueue.h:186:2: error: dereferencing type-punned pointer will break strict-aliasing rules [-Werror=strict-aliasing]
      return *work_data_bits(work) & WORK_STRUCT_STATIC;
      ^
    cc1: all warnings being treated as errors
    make[2]: *** [arch/mips/vdso/gettimeofday.o] Error 1
    
    with a CONFIG_DEBUG_OBJECTS_WORK configuration and GCC 5.2.0.  Include
    `-fno-strict-aliasing' along with compiler options used, as required for
    kernel code, fixing a problem present since the introduction of VDSO
    with commit ebb5e78cc634 ("MIPS: Initial implementation of a VDSO").
    
    Thanks to Tejun for diagnosing this properly!
    
    Signed-off-by: Maciej W. Rozycki <macro@imgtec.com>
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Fixes: ebb5e78cc634 ("MIPS: Initial implementation of a VDSO")
    Cc: Tejun Heo <tj@kernel.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13357/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4daf9b84e750c76b10b10adc9ec241062f844e3
Author: Harvey Hunt <harvey.hunt@imgtec.com>
Date:   Wed May 25 11:06:35 2016 +0100

    MIPS: lib: Mark intrinsics notrace
    
    commit aedcfbe06558a9f53002e82d5be64c6c94687726 upstream.
    
    On certain MIPS32 devices, the ftrace tracer "function_graph" uses
    __lshrdi3() during the capturing of trace data. ftrace then attempts to
    trace __lshrdi3() which leads to infinite recursion and a stack overflow.
    Fix this by marking __lshrdi3() as notrace. Mark the other compiler
    intrinsics as notrace in case the compiler decides to use them in the
    ftrace path.
    
    Signed-off-by: Harvey Hunt <harvey.hunt@imgtec.com>
    Cc: <linux-mips@linux-mips.org>
    Cc: <linux-kernel@vger.kernel.org>
    Patchwork: https://patchwork.linux-mips.org/patch/13354/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a75432acfd4b7635f623dd1d98f99e0fe49a457
Author: James Hogan <jhogan@kernel.org>
Date:   Tue May 24 09:35:11 2016 +0100

    MIPS: Build microMIPS VDSO for microMIPS kernels
    
    commit bb93078e655be1e24d68f28f2756676e62c037ce upstream.
    
    MicroMIPS kernels may be expected to run on microMIPS only cores which
    don't support the normal MIPS instruction set, so be sure to pass the
    -mmicromips flag through to the VDSO cflags.
    
    Fixes: ebb5e78cc634 ("MIPS: Initial implementation of a VDSO")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13349/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a2fdd0483e1780e4665b94d97a55602b5fbcdc4
Author: James Hogan <jhogan@kernel.org>
Date:   Tue May 24 09:35:10 2016 +0100

    MIPS: Fix sigreturn via VDSO on microMIPS kernel
    
    commit 13eb192d10bcc9ac518d57356179071d603bcb4e upstream.
    
    In microMIPS kernels, handle_signal() sets the isa16 mode bit in the
    vdso address so that the sigreturn trampolines (which are offset from
    the VDSO) get executed as microMIPS.
    
    However commit ebb5e78cc634 ("MIPS: Initial implementation of a VDSO")
    changed the offsets to come from the VDSO image, which already have the
    isa16 mode bit set correctly since they're extracted from the VDSO
    shared library symbol table.
    
    Drop the isa16 mode bit handling from handle_signal() to fix sigreturn
    for cores which support both microMIPS and normal MIPS. This doesn't fix
    microMIPS only cores, since the VDSO is still built for normal MIPS, but
    thats a separate problem.
    
    Fixes: ebb5e78cc634 ("MIPS: Initial implementation of a VDSO")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13348/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe690fa3b0cda04a49f9e94ef8634f01e8921a7
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Thu May 12 10:19:08 2016 +0100

    MIPS: ptrace: Prevent writes to read-only FCSR bits
    
    commit abf378be49f38c4d3e23581d3df3fa9f1b1b11d2 upstream.
    
    Correct the cases missed with commit 9b26616c8d9d ("MIPS: Respect the
    ISA level in FCSR handling") and prevent writes to read-only FCSR bits
    there.
    
    This in particular applies to FP context initialisation where any IEEE
    754-2008 bits preset by `mips_set_personality_nan' are cleared before
    the relevant ptrace(2) call takes effect and the PTRACE_POKEUSR request
    addressing FPC_CSR where no masking of read-only FCSR bits is done.
    
    Remove the FCSR clearing from FP context initialisation then and unify
    PTRACE_POKEUSR/FPC_CSR and PTRACE_SETFPREGS handling, by factoring out
    code from `ptrace_setfpregs' and calling it from both places.
    
    This mostly matters to soft float configurations where the emulator can
    be switched this way to a mode which should not be accessible and cannot
    be set with the CTC1 instruction.  With hard float configurations any
    effect is transient anyway as read-only bits will retain their values at
    the time the FP context is restored.
    
    Signed-off-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13239/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 664ebbd2b71918abe54b137f0ab3876bb3d4519c
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Thu May 12 10:18:27 2016 +0100

    MIPS: ptrace: Fix FP context restoration FCSR regression
    
    commit 4249548454f7ba4581aeee26bd83f42b48a14d15 upstream.
    
    Fix a floating-point context restoration regression introduced with
    commit 9b26616c8d9d ("MIPS: Respect the ISA level in FCSR handling")
    that causes a Floating Point exception and consequently a kernel oops
    with hard float configurations when one or more FCSR Enable and their
    corresponding Cause bits are set both at a time via a ptrace(2) call.
    
    To do so reinstate Cause bit masking originally introduced with commit
    b1442d39fac2 ("MIPS: Prevent user from setting FCSR cause bits") to
    address this exact problem and then inadvertently removed from the
    PTRACE_SETFPREGS request with the commit referred above.
    
    Signed-off-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13238/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2f8254a071f9890eff771ff8e4f4e0cb9bcde18
Author: Paul Burton <paulburton@kernel.org>
Date:   Thu Apr 21 12:43:57 2016 +0100

    MIPS: Disable preemption during prctl(PR_SET_FP_MODE, ...)
    
    commit bd239f1e1429e7781096bf3884bdb1b2b1bb4f28 upstream.
    
    Whilst a PR_SET_FP_MODE prctl is performed there are decisions made
    based upon whether the task is executing on the current CPU. This may
    change if we're preempted, so disable preemption to avoid such changes
    for the lifetime of the mode switch.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 9791554b45a2 ("MIPS,prctl: add PR_[GS]ET_FP_MODE prctl options for MIPS")
    Reviewed-by: Maciej W. Rozycki <macro@imgtec.com>
    Tested-by: Aurelien Jarno <aurelien@aurel32.net>
    Cc: Adam Buchbinder <adam.buchbinder@gmail.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/13144/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1692853620495e30f7af687a917d61a2d3efe81
Author: Paul Burton <paulburton@kernel.org>
Date:   Thu Apr 21 18:04:53 2016 +0100

    MIPS: Prevent "restoration" of MSA context in non-MSA kernels
    
    commit 6533af4d4831c421cd9aa4dce7cfc19a3514cc09 upstream.
    
    If a kernel doesn't support MSA context (ie. CONFIG_CPU_HAS_MSA=n) then
    it will only keep 64 bits per FP register in thread context, and the
    calls to set_fpr64 in restore_msa_extcontext will overrun the end of the
    FP register context into the FCSR & MSACSR values. GCC 6.x has become
    smart enough to detect this & complain like so:
    
        arch/mips/kernel/signal.c: In function 'protected_restore_fp_context':
        ./arch/mips/include/asm/processor.h:114:17: error: array subscript is above array bounds [-Werror=array-bounds]
          fpr->val##width[FPR_IDX(width, idx)] = val;   \
          ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        ./arch/mips/include/asm/processor.h:118:1: note: in expansion of macro 'BUILD_FPR_ACCESS'
         BUILD_FPR_ACCESS(64)
    
    The only way to trigger this code to run would be for a program to set
    up an artificial extended MSA context structure following a sigframe &
    execute sigreturn. Whilst this doesn't allow a program to write to any
    state that it couldn't already, it makes little sense to allow this
    "restoration" of MSA context in a system that doesn't support MSA.
    
    Fix this by killing a program with SIGSYS if it tries something as crazy
    as "restoring" fake MSA context in this way, also fixing the build error
    & allowing for most of restore_msa_extcontext to be optimised out of
    kernels without support for MSA.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Reported-by: Michal Toman <michal.toman@imgtec.com>
    Fixes: bf82cb30c7e5 ("MIPS: Save MSA extended context around signals")
    Tested-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Michal Toman <michal.toman@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13164/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f8a8e57f9ed9044b9890521744a19ea7a215d1f
Author: Paul Burton <paulburton@kernel.org>
Date:   Thu Apr 21 12:43:58 2016 +0100

    MIPS: Force CPUs to lose FP context during mode switches
    
    commit 6b8322576e9d325b65c54fbef64e4e8690ad70ce upstream.
    
    Commit 9791554b45a2 ("MIPS,prctl: add PR_[GS]ET_FP_MODE prctl options
    for MIPS") added support for the PR_SET_FP_MODE prctl, which allows a
    userland program to modify its FP mode at runtime. This is most notably
    required if dynamic linking leads to the FP mode requirement changing at
    runtime from that indicated in the initial executable's ELF header. In
    order to avoid overhead in the general FP context restore code, it aimed
    to have threads in the process become unable to enable the FPU during a
    mode switch & have the thread calling the prctl syscall wait for all
    other threads in the process to be context switched at least once. Once
    that happens we can know that no thread in the process whose mode will
    be switched has live FP context, and it's safe to perform the mode
    switch. However in the (rare) case of modeswitches occurring in
    multithreaded programs this can lead to indeterminate delays for the
    thread invoking the prctl syscall, and the code monitoring for those
    context switches was woefully inadequate for all but the simplest cases.
    
    Fix this by broadcasting an IPI if other CPUs may have live FP context
    for an affected thread, with a handler causing those CPUs to relinquish
    their FPU ownership. Threads will then be allowed to continue running
    but will stall on the wait_on_atomic_t in enable_restore_fp_context if
    they attempt to use FP again whilst the mode switch is still in
    progress. The end result is less fragile poking at scheduler context
    switch counts & a more expedient completion of the mode switch.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 9791554b45a2 ("MIPS,prctl: add PR_[GS]ET_FP_MODE prctl options for MIPS")
    Reviewed-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: Adam Buchbinder <adam.buchbinder@gmail.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/13145/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bab73d27b323eb9db1e4b54a393f4f97ceb593bc
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Apr 15 10:07:24 2016 +0100

    MIPS: Fix MSA ld_*/st_* asm macros to use PTR_ADDU
    
    commit ea1688573426adc2587ed52d086b51c7c62eaca3 upstream.
    
    The MSA ld_*/st_* assembler macros for when the toolchain doesn't
    support MSA use addu to offset the base address. However it is a virtual
    memory pointer so fix it to use PTR_ADDU which expands to daddu for
    64-bit kernels.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13062/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c841b82e735c2784e29b4472afb52c06433403c7
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Apr 15 10:07:23 2016 +0100

    MIPS: Use copy_s.fmt rather than copy_u.fmt
    
    commit 8a3c8b48aca8771bff3536e40aa26ffb311699d1 upstream.
    
    In revision 1.12 of the MSA specification, the copy_u.w instruction has
    been removed for MIPS32 & the copy_u.d instruction has been removed for
    MIPS64. Newer toolchains (eg. Codescape SDK essentials 2015.10) will
    complain about this like so:
    
    arch/mips/kernel/r4k_fpu.S:290: Error: opcode not supported on this
    processor: mips32r2 (mips32r2) `copy_u.w $1,$w26[3]'
    
    Since we always copy to the width of a GPR, simply use copy_s instead of
    copy_u to fix this.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13061/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 990a6023ee81c91ed333dfccef03843fe2b73ceb
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Mar 17 20:41:05 2016 +0800

    MIPS: Loongson-3: Reserve 32MB for RS780E integrated GPU
    
    commit 3484de7bcbed20ecbf2b8d80671619e7059e2dd7 upstream.
    
    Due to datasheet, reserving 0xff800000~0xffffffff (8MB below 4GB) is
    not enough for RS780E integrated GPU's TOM (top of memory) registers
    and MSI/MSI-x memory region, so we reserve 0xfe000000~0xffffffff (32MB
    below 4GB).
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: Aurelien Jarno <aurelien@aurel32.net>
    Cc: Steven J . Hill <sjhill@realitydiluted.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/12889/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed58c916ae90af0e8e6156435c09dad18051f88c
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Mar 17 20:37:10 2016 +0800

    MIPS: Reserve nosave data for hibernation
    
    commit a95d069204e178f18476f5499abab0d0d9cbc32c upstream.
    
    After commit 92923ca3aacef63c92d ("mm: meminit: only set page reserved
    in the memblock region"), the MIPS hibernation is broken. Because pages
    in nosave data section should be "reserved", but currently they aren't
    set to "reserved" at initialization. This patch makes hibernation work
    again.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: Aurelien Jarno <aurelien@aurel32.net>
    Cc: Steven J . Hill <sjhill@realitydiluted.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/12888/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bc4ddc789664910d5e599d35091901fbb4279e4
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Thu Mar 24 16:02:52 2016 +0100

    MIPS: ath79: make bootconsole wait for both THRE and TEMT
    
    commit f5b556c94c8490d42fea79d7b4ae0ecbc291e69d upstream.
    
    This makes the ath79 bootconsole behave the same way as the generic 8250
    bootconsole.
    
    Also waiting for TEMT (transmit buffer is empty) instead of just THRE
    (transmit buffer is not full) ensures that all characters have been
    transmitted before the real serial driver starts reconfiguring the serial
    controller (which would sometimes result in garbage being transmitted.)
    This change does not cause a visible performance loss.
    
    In addition, this seems to fix a hang observed in certain configurations on
    many AR7xxx/AR9xxx SoCs during autoconfig of the real serial driver.
    
    A more complete follow-up patch will disable 8250 autoconfig for ath79
    altogether (the serial controller is detected as a 16550A, which is not
    fully compatible with the ath79 serial, and the autoconfig may lead to
    undefined behavior on ath79.)
    
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 599eacdcc7fb5539dc36c2f5219d3da8ae7fd0b3
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Mar 17 20:41:06 2016 +0800

    MIPS: Loongson-3: Fix build error after ld-version.sh modification
    
    commit 820880cdba0137baff6cc0e828c3c418c363ae44 upstream.
    
    Commit d5ece1cb074b2c ("Fix ld-version.sh to handle large 3rd version
    part") modifies the ld version description. This causes a build error
    on Loongson-3, so fix it.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: Aurelien Jarno <aurelien@aurel32.net>
    Cc: Steven J . Hill <sjhill@realitydiluted.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: Huacai Chen <chenhc@lemote.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/12890/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 404cb7fb23d3f6a1dd7ccc3f2df9d80a96d92355
Author: Paul Burton <paulburton@kernel.org>
Date:   Tue Mar 1 02:37:59 2016 +0000

    MIPS: Sync icache & dcache in set_pte_at
    
    commit 37d22a0d798b5c938b277d32cfd86dc231381342 upstream.
    
    It's possible for pages to become visible prior to update_mmu_cache
    running if a thread within the same address space preempts the current
    thread or runs simultaneously on another CPU. That is, the following
    scenario is possible:
    
        CPU0                            CPU1
    
        write to page
        flush_dcache_page
        flush_icache_page
        set_pte_at
                                        map page
        update_mmu_cache
    
    If CPU1 maps the page in between CPU0's set_pte_at, which marks it valid
    & visible, and update_mmu_cache where the dcache flush occurs then CPU1s
    icache will fill from stale data (unless it fills from the dcache, in
    which case all is good, but most MIPS CPUs don't have this property).
    Commit 4d46a67a3eb8 ("MIPS: Fix race condition in lazy cache flushing.")
    attempted to fix that by performing the dcache flush in
    flush_icache_page such that it occurs before the set_pte_at call makes
    the page visible. However it has the problem that not all code that
    writes to pages exposed to userland call flush_icache_page. There are
    many callers of set_pte_at under mm/ and only 2 of them do call
    flush_icache_page. Thus the race window between a page becoming visible
    & being coherent between the icache & dcache remains open in some cases.
    
    To illustrate some of the cases, a WARN was added to __update_cache with
    this patch applied that triggered in cases where a page about to be
    flushed from the dcache was not the last page provided to
    flush_icache_page. That is, backtraces were obtained for cases in which
    the race window is left open without this patch. The 2 standout examples
    follow.
    
    When forking a process:
    
    [   15.271842] [<80417630>] __update_cache+0xcc/0x188
    [   15.277274] [<80530394>] copy_page_range+0x56c/0x6ac
    [   15.282861] [<8042936c>] copy_process.part.54+0xd40/0x17ac
    [   15.289028] [<80429f80>] do_fork+0xe4/0x420
    [   15.293747] [<80413808>] handle_sys+0x128/0x14c
    
    When exec'ing an ELF binary:
    
    [   14.445964] [<80417630>] __update_cache+0xcc/0x188
    [   14.451369] [<80538d88>] move_page_tables+0x414/0x498
    [   14.457075] [<8055d848>] setup_arg_pages+0x220/0x318
    [   14.462685] [<805b0f38>] load_elf_binary+0x530/0x12a0
    [   14.468374] [<8055ec3c>] search_binary_handler+0xbc/0x214
    [   14.474444] [<8055f6c0>] do_execveat_common+0x43c/0x67c
    [   14.480324] [<8055f938>] do_execve+0x38/0x44
    [   14.485137] [<80413808>] handle_sys+0x128/0x14c
    
    These code paths write into a page, call flush_dcache_page then call
    set_pte_at without flush_icache_page inbetween. The end result is that
    the icache can become corrupted & userland processes may execute
    unexpected or invalid code, typically resulting in a reserved
    instruction exception, a trap or a segfault.
    
    Fix this race condition fully by performing any cache maintenance
    required to keep the icache & dcache in sync in set_pte_at, before the
    page is made valid. This has the added bonus of ensuring the cache
    maintenance always happens in one location, rather than being duplicated
    in flush_icache_page & update_mmu_cache. It also matches the way other
    architectures solve the same problem (see arm, ia64 & powerpc).
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Reported-by: Ionela Voinescu <ionela.voinescu@imgtec.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Fixes: 4d46a67a3eb8 ("MIPS: Fix race condition in lazy cache flushing.")
    Cc: Steven J. Hill <sjhill@realitydiluted.com>
    Cc: David Daney <david.daney@cavium.com>
    Cc: Huacai Chen <chenhc@lemote.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Jerome Marchand <jmarchan@redhat.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12722/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f497b77b0e907a752b11546337099150db7e1786
Author: Paul Burton <paulburton@kernel.org>
Date:   Tue Mar 1 02:37:58 2016 +0000

    MIPS: Handle highmem pages in __update_cache
    
    commit f4281bba818105c7c91799abe40bc05c0dbdaa25 upstream.
    
    The following patch will expose __update_cache to highmem pages. Handle
    them by mapping them in for the duration of the cache maintenance, just
    like in __flush_dcache_page. The code for that isn't shared because we
    need the page address in __update_cache so sharing became messy. Given
    that the entirity is an extra 5 lines, just duplicate it.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Jerome Marchand <jmarchan@redhat.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12721/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b35229a6d6458c5b2a424470ff1280378d33192
Author: Paul Burton <paulburton@kernel.org>
Date:   Tue Mar 1 02:37:57 2016 +0000

    MIPS: Flush highmem pages in __flush_dcache_page
    
    commit 234859e49a15323cf1b2331bdde7f658c4cb45fb upstream.
    
    When flush_dcache_page is called on an executable page, that page is
    about to be provided to userland & we can presume that the icache
    contains no valid entries for its address range. However if the icache
    does not fill from the dcache then we cannot presume that the pages
    content has been written back as far as the memories that the dcache
    will fill from (ie. L2 or further out).
    
    This was being done for lowmem pages, but not for highmem which can lead
    to icache corruption. Fix this by mapping highmem pages & flushing their
    content from the dcache in __flush_dcache_page before providing the page
    to userland, just as is done for lowmem pages.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12720/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a82fdd38d226913e5b0113582b40b8b75c81e3b2
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Mar 1 22:19:36 2016 +0000

    MIPS: Fix watchpoint restoration
    
    commit a7e89326b415b5d81c4b1016fd4a40db861eb58d upstream.
    
    Commit f51246efee2b ("MIPS: Get rid of finish_arch_switch().") moved the
    __restore_watch() call from finish_arch_switch() (i.e. after resume()
    returns) to before the resume() call in switch_to(). This results in
    watchpoints only being restored when a task is descheduled, preventing
    the watchpoints from being effective most of the time, except due to
    chance before the watchpoints are lazily removed.
    
    Fix the call sequence from switch_to() through to
    mips_install_watch_registers() to pass the task_struct pointer of the
    next task, instead of using current. This allows the watchpoints for the
    next (non-current) task to be restored without reintroducing
    finish_arch_switch().
    
    Fixes: f51246efee2b ("MIPS: Get rid of finish_arch_switch().")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/12726/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dfc57bd1228a926ac9489d90e1d21d6be0738c6
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Feb 8 18:43:51 2016 +0000

    MIPS: Fix uapi include in exported asm/siginfo.h
    
    commit 987e5b834467c9251ca584febda65ef8f66351a9 upstream.
    
    Since commit 8cb48fe169dd ("MIPS: Provide correct siginfo_t.si_stime"),
    MIPS' uapi/asm/siginfo.h has included uapi/asm-generic/siginfo.h
    directly before defining MIPS' struct siginfo, in order to get the
    necessary definitions needed for the siginfo struct without the generic
    copy_siginfo() hitting compiler errors due to struct siginfo not yet
    being defined.
    
    Now that the generic copy_siginfo() is moved out to linux/signal.h we
    can safely include asm-generic/siginfo.h before defining the MIPS
    specific struct siginfo, which avoids the uapi/ include as well as
    breakage due to generic copy_siginfo() being defined before struct
    siginfo.
    
    Reported-by: Christopher Ferris <cferris@google.com>
    Fixes: 8cb48fe169dd ("MIPS: Provide correct siginfo_t.si_stime")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Petr Malat <oss@malat.biz>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cff029679bce51bd181f54c93a8533177d66fd8
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Feb 8 18:43:49 2016 +0000

    MIPS: Fix siginfo.h to use strict posix types
    
    commit 5daebc477da4dfeb31ae193d83084def58fd2697 upstream.
    
    Commit 85efde6f4e0d ("make exported headers use strict posix types")
    changed the asm-generic siginfo.h to use the __kernel_* types, and
    commit 3a471cbc081b ("remove __KERNEL_STRICT_NAMES") make the internal
    types accessible only to the kernel, but the MIPS implementation hasn't
    been updated to match.
    
    Switch to proper types now so that the exported asm/siginfo.h won't
    produce quite so many compiler errors when included alone by a user
    program.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Christopher Ferris <cferris@google.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12477/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd03fca280b377adea93eed19fb6bc3d26ee596a
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Dec 4 22:25:02 2015 +0000

    MIPS: Avoid using unwind_stack() with usermode
    
    commit 81a76d7119f63c359750e4adeff922a31ad1135f upstream.
    
    When showing backtraces in response to traps, for example crashes and
    address errors (usually unaligned accesses) when they are set in debugfs
    to be reported, unwind_stack will be used if the PC was in the kernel
    text address range. However since EVA it is possible for user and kernel
    address ranges to overlap, and even without EVA userland can still
    trigger an address error by jumping to a KSeg0 address.
    
    Adjust the check to also ensure that it was running in kernel mode. I
    don't believe any harm can come of this problem, since unwind_stack() is
    sufficiently defensive, however it is only meant for unwinding kernel
    code, so to be correct it should use the raw backtracing instead.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Reviewed-by: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/11701/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    (cherry picked from commit d2941a975ac745c607dfb590e92bb30bc352dad9)
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f77518651e31b961809cd0fa5f2b6f12af6cc1c5
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Dec 4 22:25:01 2015 +0000

    MIPS: Don't unwind to user mode with EVA
    
    commit a816b306c62195b7c43c92cb13330821a96bdc27 upstream.
    
    When unwinding through IRQs and exceptions, the unwinding only continues
    if the PC is a kernel text address, however since EVA it is possible for
    user and kernel address ranges to overlap, potentially allowing
    unwinding to continue to user mode if the user PC happens to be in the
    kernel text address range.
    
    Adjust the check to also ensure that the register state from before the
    exception is actually running in kernel mode, i.e. !user_mode(regs).
    
    I don't believe any harm can come of this problem, since the PC is only
    output, the stack pointer is checked to ensure it resides within the
    task's stack page before it is dereferenced in search of the return
    address, and the return address register is similarly only output (if
    the PC is in a leaf function or the beginning of a non-leaf function).
    
    However unwind_stack() is only meant for unwinding kernel code, so to be
    correct the unwind should stop there.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Reviewed-by: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/11700/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ea534fb90a014e7c39225a825be44bef69a1301
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Tue May 17 06:12:27 2016 +0100

    MIPS: MSA: Fix a link error on `_init_msa_upper' with older GCC
    
    commit e49d38488515057dba8f0c2ba4cfde5be4a7281f upstream.
    
    Fix a build regression from commit c9017757c532 ("MIPS: init upper 64b
    of vector registers when MSA is first used"):
    
    arch/mips/built-in.o: In function `enable_restore_fp_context':
    traps.c:(.text+0xbb90): undefined reference to `_init_msa_upper'
    traps.c:(.text+0xbb90): relocation truncated to fit: R_MIPS_26 against `_init_msa_upper'
    traps.c:(.text+0xbef0): undefined reference to `_init_msa_upper'
    traps.c:(.text+0xbef0): relocation truncated to fit: R_MIPS_26 against `_init_msa_upper'
    
    to !CONFIG_CPU_HAS_MSA configurations with older GCC versions, which are
    unable to figure out that calls to `_init_msa_upper' are indeed dead.
    Of the many ways to tackle this failure choose the approach we have
    already taken in `thread_msa_context_live'.
    
    [ralf@linux-mips.org: Drop patch segment to junk file.]
    
    Signed-off-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13271/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 482a601d4c69eba3900f6ca4f5fa0b7feb0ffb00
Author: Paul Burton <paulburton@kernel.org>
Date:   Thu Apr 21 14:04:55 2016 +0100

    MIPS: math-emu: Fix jalr emulation when rd == $0
    
    commit ab4a92e66741b35ca12f8497896bafbe579c28a1 upstream.
    
    When emulating a jalr instruction with rd == $0, the code in
    isBranchInstr was incorrectly writing to GPR $0 which should actually
    always remain zeroed. This would lead to any further instructions
    emulated which use $0 operating on a bogus value until the task is next
    context switched, at which point the value of $0 in the task context
    would be restored to the correct zero by a store in SAVE_SOME. Fix this
    by not writing to rd if it is $0.
    
    Fixes: 102cedc32a6e ("MIPS: microMIPS: Floating point support.")
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Cc: Maciej W. Rozycki <macro@imgtec.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/13160/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce206484f16fe353aff89ac890c146cafca1a41
Author: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
Date:   Tue Apr 28 12:53:35 2015 -0700

    MIPS64: R6: R2 emulation bugfix
    
    commit 41fa29e4d8cf4150568a0fe9bb4d62229f9caed5 upstream.
    
    Error recovery pointers for fixups was improperly set as ".word"
    which is unsuitable for MIPS64.
    
    Replaced by STR(PTR)
    
    [ralf@linux-mips.org: Apply changes as requested in the review process.]
    
    Signed-off-by: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
    Reviewed-by: James Hogan <james.hogan@imgtec.com>
    Reviewed-by: Markos Chandras <markos.chandras@imgtec.com>
    Fixes: b0a668fb2038 ("MIPS: kernel: mips-r2-to-r6-emul: Add R2 emulator for MIPS R6")
    Cc: macro@linux-mips.org
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/9911/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e4c51d2532cc6fd1ff858365e893f2f39aa26b4
Author: Chao Yu <chao@kernel.org>
Date:   Wed May 11 19:48:44 2016 +0800

    f2fs: fix deadlock when flush inline data
    
    commit ab47036d8f7227361cad7894adee8e66ab6f95b2 upstream.
    
    Below backtrace info was reported by Yunlei He:
    
    Call Trace:
     [<ffffffff817a9395>] schedule+0x35/0x80
     [<ffffffff817abb7d>] rwsem_down_read_failed+0xed/0x130
     [<ffffffff813c12a8>] call_rwsem_down_read_failed+0x18/0x
     [<ffffffff817ab1d0>] down_read+0x20/0x30
     [<ffffffffa02a1a12>] f2fs_evict_inode+0x242/0x3a0 [f2fs]
     [<ffffffff81217057>] evict+0xc7/0x1a0
     [<ffffffff81217cd6>] iput+0x196/0x200
     [<ffffffff812134f9>] __dentry_kill+0x179/0x1e0
     [<ffffffff812136f9>] dput+0x199/0x1f0
     [<ffffffff811fe77b>] __fput+0x18b/0x220
     [<ffffffff811fe84e>] ____fput+0xe/0x10
     [<ffffffff81097427>] task_work_run+0x77/0x90
     [<ffffffff81074d62>] exit_to_usermode_loop+0x73/0xa2
     [<ffffffff81003b7a>] do_syscall_64+0xfa/0x110
     [<ffffffff817acf65>] entry_SYSCALL64_slow_path+0x25/0x25
    
    Call Trace:
     [<ffffffff817a9395>] schedule+0x35/0x80
     [<ffffffff81216dc3>] __wait_on_freeing_inode+0xa3/0xd0
     [<ffffffff810bc300>] ? autoremove_wake_function+0x40/0x4
     [<ffffffff8121771d>] find_inode_fast+0x7d/0xb0
     [<ffffffff8121794a>] ilookup+0x6a/0xd0
     [<ffffffffa02bc740>] sync_node_pages+0x210/0x650 [f2fs]
     [<ffffffff8122e690>] ? do_fsync+0x70/0x70
     [<ffffffffa02b085e>] block_operations+0x9e/0xf0 [f2fs]
     [<ffffffff8137b795>] ? bio_endio+0x55/0x60
     [<ffffffffa02b0942>] write_checkpoint+0x92/0xba0 [f2fs]
     [<ffffffff8117da57>] ? mempool_free_slab+0x17/0x20
     [<ffffffff8117de8b>] ? mempool_free+0x2b/0x80
     [<ffffffff8122e690>] ? do_fsync+0x70/0x70
     [<ffffffffa02a53e3>] f2fs_sync_fs+0x63/0xd0 [f2fs]
     [<ffffffff8129630f>] ? ext4_sync_fs+0xbf/0x190
     [<ffffffff8122e6b0>] sync_fs_one_sb+0x20/0x30
     [<ffffffff812002e9>] iterate_supers+0xb9/0x110
     [<ffffffff8122e7b5>] sys_sync+0x55/0x90
     [<ffffffff81003ae9>] do_syscall_64+0x69/0x110
     [<ffffffff817acf65>] entry_SYSCALL64_slow_path+0x25/0x25
    
    With following excuting serials, we will set inline_node in inode page
    after inode was unlinked, result in a deadloop described as below:
    1. open file
    2. write file
    3. unlink file
    4. write file
    5. close file
    
    Thread A                                Thread B
     - dput
      - iput_final
       - inode->i_state |= I_FREEING
       - evict
        - f2fs_evict_inode
                                             - f2fs_sync_fs
                                              - write_checkpoint
                                               - block_operations
                                                - f2fs_lock_all (down_write(cp_rwsem))
         - f2fs_lock_op (down_read(cp_rwsem))
                                                - sync_node_pages
                                                 - ilookup
                                                  - find_inode_fast
                                                   - __wait_on_freeing_inode
                                                     (wait on I_FREEING clear)
    
    Here, we change to set inline_node flag only for linked inode for fixing.
    
    Reported-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Tested-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
