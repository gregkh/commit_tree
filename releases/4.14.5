commit 64138f0adb25ca8f34baa57af33260b05efe2874
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Dec 10 13:40:45 2017 +0100

    Linux 4.14.5

commit c3b0874866f2282f51295dc4cf69672b2caf6039
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Dec 4 17:24:54 2017 -0800

    locking/refcounts: Do not force refcount_t usage as GPL-only export
    
    commit b562c171cf011d297059bd0265742eb5fab0ad2f upstream.
    
    The refcount_t protection on x86 was not intended to use the stricter
    GPL export. This adjusts the linkage again to avoid a regression in
    the availability of the refcount API.
    
    Reported-by: Dave Airlie <airlied@gmail.com>
    Fixes: 7a46ec0e2f48 ("locking/refcounts, x86/asm: Implement fast refcount overflow protection")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Ivan Kozik <ivan@ludios.org>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de667b08c34c61b59fb1a71ba0eff648550a7799
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 7 16:45:04 2017 +0000

    usb: host: fix incorrect updating of offset
    
    commit 1d5a31582ef046d3b233f0da1a68ae26519b2f0a upstream.
    
    The variable temp is incorrectly being updated, instead it should
    be offset otherwise the loop just reads the same capability value
    and loops forever.  Thanks to Alan Stern for pointing out the
    correct fix to my original fix.  Fix also cleans up clang warning:
    
    drivers/usb/host/ehci-dbg.c:840:4: warning: Value stored to 'temp'
    is never read
    
    Fixes: d49d43174400 ("USB: misc ehci updates")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15f12be9860e380ccc809f0bb939b9ea385be9b1
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 23 16:39:52 2017 +0100

    USB: usbfs: Filter flags passed in from user space
    
    commit 446f666da9f019ce2ffd03800995487e79a91462 upstream.
    
    USBDEVFS_URB_ISO_ASAP must be accepted only for ISO endpoints.
    Improve sanity checking.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 903b2d14d0e57e48fd80d5a9d35d9fbf3c1e63ea
Author: Masakazu Mokuno <masakazu.mokuno@gmail.com>
Date:   Fri Nov 10 01:25:50 2017 +0900

    USB: core: Add type-specific length check of BOS descriptors
    
    commit 81cf4a45360f70528f1f64ba018d61cb5767249a upstream.
    
    As most of BOS descriptors are longer in length than their header
    'struct usb_dev_cap_header', comparing solely with it is not sufficient
    to avoid out-of-bounds access to BOS descriptors.
    
    This patch adds descriptor type specific length check in
    usb_get_bos_descriptor() to fix the issue.
    
    Signed-off-by: Masakazu Mokuno <masakazu.mokuno@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4346c775cf707a703e2b305315e37b9beee30bd6
Author: Yu Chen <chenyu56@huawei.com>
Date:   Fri Dec 1 13:41:20 2017 +0200

    usb: xhci: fix panic in xhci_free_virt_devices_depth_first
    
    commit 80e457699a8dbdd70f2d26911e46f538645c55fc upstream.
    
    Check vdev->real_port 0 to avoid panic
    [    9.261347] [<ffffff800884a390>] xhci_free_virt_devices_depth_first+0x58/0x108
    [    9.261352] [<ffffff800884a814>] xhci_mem_cleanup+0x1bc/0x570
    [    9.261355] [<ffffff8008842de8>] xhci_stop+0x140/0x1c8
    [    9.261365] [<ffffff80087ed304>] usb_remove_hcd+0xfc/0x1d0
    [    9.261369] [<ffffff80088551c4>] xhci_plat_remove+0x6c/0xa8
    [    9.261377] [<ffffff80086e928c>] platform_drv_remove+0x2c/0x70
    [    9.261384] [<ffffff80086e6ea0>] __device_release_driver+0x80/0x108
    [    9.261387] [<ffffff80086e7a1c>] device_release_driver+0x2c/0x40
    [    9.261392] [<ffffff80086e5f28>] bus_remove_device+0xe0/0x120
    [    9.261396] [<ffffff80086e2e34>] device_del+0x114/0x210
    [    9.261399] [<ffffff80086e9e00>] platform_device_del+0x30/0xa0
    [    9.261403] [<ffffff8008810bdc>] dwc3_otg_work+0x204/0x488
    [    9.261407] [<ffffff80088133fc>] event_work+0x304/0x5b8
    [    9.261414] [<ffffff80080e31b0>] process_one_work+0x148/0x490
    [    9.261417] [<ffffff80080e3548>] worker_thread+0x50/0x4a0
    [    9.261421] [<ffffff80080e9ea0>] kthread+0xe8/0x100
    [    9.261427] [<ffffff8008083680>] ret_from_fork+0x10/0x50
    
    The problem can occur if xhci_plat_remove() is called shortly after
    xhci_plat_probe(). While xhci_free_virt_devices_depth_first been
    called before the device has been setup and get real_port initialized.
    The problem occurred on Hikey960 and was reproduced by Guenter Roeck
    on Kevin with chromeos-4.4.
    
    Fixes: ee8665e28e8d ("xhci: free xhci virtual devices with leaf nodes first")
    Cc: Guenter Roeck <groeck@google.com>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Fan Ning <fanning4@hisilicon.com>
    Signed-off-by: Li Rui <lirui39@hisilicon.com>
    Signed-off-by: yangdi <yangdi10@hisilicon.com>
    Signed-off-by: Yu Chen <chenyu56@huawei.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33288619482a876f2575ed308ac2c1c3199a6a1a
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 1 13:41:19 2017 +0200

    xhci: Don't show incorrect WARN message about events for empty rings
    
    commit e4ec40ec4b260efcca15089de4285a0a3411259b upstream.
    
    xHC can generate two events for a short transfer if the short TRB and
    last TRB in the TD are not the same TRB.
    
    The driver will handle the TD after the first short event, and remove
    it from its internal list. Driver then incorrectly prints a warning
    for the second event:
    
    "WARN Event TRB for slot x ep y with no TDs queued"
    
    Fix this by not printing a warning if we get a event on a empty list
    if the previous event was a short event.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bc546bbfec9be32108af2684a2766629acc052d
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 16:31:18 2017 +0100

    USB: ulpi: fix bus-node lookup
    
    commit 33c309ebc797b908029fd3a0851aefe697e9b598 upstream.
    
    Fix bus-node lookup during registration, which ended up searching the whole
    device tree depth-first starting at the parent (or grand parent) rather
    than just matching on its children.
    
    To make things worse, the parent (or grand-parent) node could end being
    prematurely freed as well.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Reported-by: Peter Robinson <pbrobinson@gmail.com>
    Reported-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 755532dd5f643f1a1da479bb133a946ce5c97905
Author: Mike Looijmans <mike.looijmans@topic.nl>
Date:   Thu Nov 9 13:16:46 2017 +0100

    usb: hub: Cycle HUB power when initialization fails
    
    commit 973593a960ddac0f14f0d8877d2d0abe0afda795 upstream.
    
    Sometimes the USB device gets confused about the state of the initialization and
    the connection fails. In particular, the device thinks that it's already set up
    and running while the host thinks the device still needs to be configured. To
    work around this issue, power-cycle the hub's output to issue a sort of "reset"
    to the device. This makes the device restart its state machine and then the
    initialization succeeds.
    
    This fixes problems where the kernel reports a list of errors like this:
    
    usb 1-1.3: device not accepting address 19, error -71
    
    The end result is a non-functioning device. After this patch, the sequence
    becomes like this:
    
    usb 1-1.3: new high-speed USB device number 18 using ci_hdrc
    usb 1-1.3: device not accepting address 18, error -71
    usb 1-1.3: new high-speed USB device number 19 using ci_hdrc
    usb 1-1.3: device not accepting address 19, error -71
    usb 1-1-port3: attempt power cycle
    usb 1-1.3: new high-speed USB device number 21 using ci_hdrc
    usb-storage 1-1.3:1.2: USB Mass Storage device detected
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a633c7ed4a4c6097475de05d950e35cf92b8dec7
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Nov 9 09:16:09 2017 +0000

    staging: ccree: fix leak of import() after init()
    
    commit c5f39d07860c35e5e4c63188139465af790f86ce upstream.
    
    crypto_ahash_import() may be called either after
    crypto_ahash_init() or without such call. Right now
    we always internally call init() as part of
    import(), thus leaking memory and mappings if the
    user has already called init() herself.
    
    Fix this by only calling init() internally if the
    state is not already initialized.
    
    Fixes: commit 454527d0d94f ("staging: ccree: fix hash import/export")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 779bfa90bdf97a6d00459471f6d371f6036f3da5
Author: Dominik Behr <dbehr@chromium.org>
Date:   Thu Sep 7 16:02:46 2017 -0300

    dma-buf/sw_sync: force signal all unsignaled fences on dying timeline
    
    commit ea4d5a270b57fa8d4871f372ca9b97b7697fdfda upstream.
    
    To avoid hanging userspace components that might have been waiting on the
    active fences of the destroyed timeline we need to signal with error all
    remaining fences on such timeline.
    
    This restore the default behaviour of the Android sw_sync framework, which
    Android still relies on. It was broken on the dma fence conversion a few
    years ago and never fixed.
    
    v2: Do not bother with cleanup do the list (Chris Wilson)
    
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Dominik Behr <dbehr@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170907190246.16425-2-gustavo@padovan.org
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ffabfc1d58ba586fa11cc3cde21d54afec03387
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Mon Oct 23 22:07:38 2017 +0530

    powerpc/kprobes: Disable preemption before invoking probe handler for optprobes
    
    commit 8a2d71a3f2737e2448aa68de2b6052cb570d3d2a upstream.
    
    Per Documentation/kprobes.txt, probe handlers need to be invoked with
    preemption disabled. Update optimized_callback() to do so. Also move
    get_kprobe_ctlblk() invocation post preemption disable, since it
    accesses pre-cpu data.
    
    This was not an issue so far since optprobes wasn't selected if
    CONFIG_PREEMPT was enabled. Commit a30b85df7d599f ("kprobes: Use
    synchronize_rcu_tasks() for optprobe with CONFIG_PREEMPT=y") changes
    this.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8d07852819a0c2da239fca155342b4f80f4aedf
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Fri Sep 22 14:40:47 2017 +0530

    powerpc/jprobes: Disable preemption when triggered through ftrace
    
    commit 6baea433bc84cd148af1c524389a8d756f67412e upstream.
    
    KPROBES_SANITY_TEST throws the below splat when CONFIG_PREEMPT is
    enabled:
    
      Kprobe smoke test: started
      DEBUG_LOCKS_WARN_ON(val > preempt_count())
      ------------[ cut here ]------------
      WARNING: CPU: 19 PID: 1 at kernel/sched/core.c:3094 preempt_count_sub+0xcc/0x140
      Modules linked in:
      CPU: 19 PID: 1 Comm: swapper/0 Not tainted 4.13.0-rc7-nnr+ #97
      task: c0000000fea80000 task.stack: c0000000feb00000
      NIP:  c00000000011d3dc LR: c00000000011d3d8 CTR: c000000000a090d0
      REGS: c0000000feb03400 TRAP: 0700   Not tainted  (4.13.0-rc7-nnr+)
      MSR:  8000000000021033 <SF,ME,IR,DR,RI,LE>  CR: 28000282  XER: 00000000
      CFAR: c00000000015aa18 SOFTE: 0
      <snip>
      NIP preempt_count_sub+0xcc/0x140
      LR  preempt_count_sub+0xc8/0x140
      Call Trace:
        preempt_count_sub+0xc8/0x140 (unreliable)
        kprobe_handler+0x228/0x4b0
        program_check_exception+0x58/0x3b0
        program_check_common+0x16c/0x170
        --- interrupt: 0 at kprobe_target+0x8/0x20
                         LR = init_test_probes+0x248/0x7d0
        kp+0x0/0x80 (unreliable)
        livepatch_handler+0x38/0x74
        init_kprobes+0x1d8/0x208
        do_one_initcall+0x68/0x1d0
        kernel_init_freeable+0x298/0x374
        kernel_init+0x24/0x160
        ret_from_kernel_thread+0x5c/0x70
      Instruction dump:
      419effdc 3d22001b 39299240 81290000 2f890000 409effc8 3c82ffcb 3c62ffcb
      3884bc68 3863bc18 4803d5fd 60000000 <0fe00000> 4bffffa8 60000000 60000000
      ---[ end trace 432dd46b4ce3d29f ]---
      Kprobe smoke test: passed successfully
    
    The issue is that we aren't disabling preemption in
    kprobe_ftrace_handler(). Disable it.
    
    Fixes: ead514d5fb30a0 ("powerpc/kprobes: Add support for KPROBES_ON_FTRACE")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    [mpe: Trim oops a little for formatting]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 340d45d70850ea395a7e397a94ab59972581022c
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Sep 2 13:09:46 2017 -0700

    locking/refcounts, x86/asm: Enable CONFIG_ARCH_HAS_REFCOUNT
    
    
    [ Upstream commit 39208aa7ecb7d9c4e86df782b5693270313cbab1 ]
    
    With the section inlining bug fixed for the x86 refcount protection,
    we can turn the config back on.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Elena <elena.reshetova@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch <linux-arch@vger.kernel.org>
    Link: http://lkml.kernel.org/r/1504382986-49301-3-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53ce4d4aad93e2b48999ab9a225a84bfa54760fe
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Thu Jul 6 23:53:11 2017 -0500

    iio: multiplexer: add NULL check on devm_kzalloc() and devm_kmemdup() return values
    
    
    [ Upstream commit dd92d5ea20ef8a42be7aeda08c669c586c730451 ]
    
    Check return values from call to devm_kzalloc() and devm_kmemup()
    in order to prevent a NULL pointer dereference.
    
    This issue was detected using Coccinelle and the following semantic patch:
    
    @@
    expression x;
    identifier fld;
    @@
    
    * x = devm_kzalloc(...);
       ... when != x == NULL
       x->fld
    
    Fixes: 7ba9df54b091 ("iio: multiplexer: new iio category and iio-mux driver")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Acked-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68744edd6edcfa663ab917f62827919a0ca95b05
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Fri Aug 25 07:39:16 2017 +0200

    iio: adc: ti-ads1015: add 10% to conversion wait time
    
    
    [ Upstream commit fe895ac88b9fbdf2026f0bfd56c82747bb9d7c48 ]
    
    As user's guide "ADS1015EVM, ADS1115EVM, ADS1015EVM-PDK, ADS1115EVM-PDK
    User Guide (Rev. B)" (http://www.ti.com/lit/ug/sbau157b/sbau157b.pdf)
    states at page 16:
    "Note that both the ADS1115 and ADS1015 have internal clocks with a ±10%
    accuracy. If performing FFT tests, frequencies may appear to be incorrect
    as a result of this tolerance range.", add those 10% to converion wait
    time.
    
    Cc: Daniel Baluta <daniel.baluta@gmail.com>
    Cc: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 342ee877580058554fe68480756c7d326b625bed
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Sat Sep 9 00:56:03 2017 +0300

    mm, x86/mm: Fix performance regression in get_user_pages_fast()
    
    
    [ Upstream commit 5b65c4677a57a1d4414212f9995aa0e46a21ff80 ]
    
    The 0-day test bot found a performance regression that was tracked down to
    switching x86 to the generic get_user_pages_fast() implementation:
    
      http://lkml.kernel.org/r/20170710024020.GA26389@yexl-desktop
    
    The regression was caused by the fact that we now use local_irq_save() +
    local_irq_restore() in get_user_pages_fast() to disable interrupts.
    In x86 implementation local_irq_disable() + local_irq_enable() was used.
    
    The fix is to make get_user_pages_fast() use local_irq_disable(),
    leaving local_irq_save() for __get_user_pages_fast() that can be called
    with interrupts disabled.
    
    Numbers for pinning a gigabyte of memory, one page a time, 20 repeats:
    
      Before:  Average: 14.91 ms, stddev: 0.45 ms
      After:   Average: 10.76 ms, stddev: 0.18 ms
    
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thorsten Leemhuis <regressions@leemhuis.info>
    Cc: linux-mm@kvack.org
    Fixes: e585513b76f7 ("x86/mm/gup: Switch GUP to the generic get_user_page_fast() implementation")
    Link: http://lkml.kernel.org/r/20170908215603.9189-3-kirill.shutemov@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d29ae49cd31597586835fd22957adba5368cdb1
Author: Martin Kepplinger <martink@posteo.de>
Date:   Wed Sep 13 21:14:19 2017 +0200

    perf tools: Fix leaking rec_argv in error cases
    
    
    [ Upstream commit c896f85a7c15ab9d040ffac8b8003e47996602a2 ]
    
    Let's free the allocated rec_argv in case we return early, in order to
    avoid leaking memory.
    
    This adds free() at a few very similar places across the tree where it
    was missing.
    
    Signed-off-by: Martin Kepplinger <martink@posteo.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Martin kepplinger <martink@posteo.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20170913191419.29806-1-martink@posteo.de
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf33c88d64557ab627eca91c79c8a7891a9ba9d4
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Sep 21 12:12:17 2017 -0300

    tools include: Do not use poison with C++
    
    
    [ Upstream commit 6ae8eefc6c8fe050f057781b70a83262eb0a61ee ]
    
    LIST_POISON[12] are used to initialize list_head and hlist_node
    pointers, and do void pointer arithmetic, which C++ doesn't like, so, to
    avoid drifting from the kernel by introducing some HLIST_POISON to do
    away with void pointer math, just make those poisoned pointers be NULL
    when building it with a C++ compiler.
    
    Noticed with:
    
      $ make LLVM_CONFIG=/usr/bin/llvm-config-3.9 LIBCLANGLLVM=1
        CXX      util/c++/clang.o
        CXX    util/c++/clang-test.o
      In file included from /home/lizj/linux/tools/include/linux/list.h:5:0,
                       from /home/lizj/linux/tools/perf/util/namespaces.h:13,
                       from /home/lizj/linux/tools/perf/util/util.h:15,
                       from /home/lizj/linux/tools/perf/util/util-cxx.h:20,
                       from util/c++/clang-c.h:5,
                       from util/c++/clang-test.cpp:2:
      /home/lizj/linux/tools/include/linux/list.h: In function ‘void list_del(list_head*)’:
      /home/lizj/linux/tools/include/linux/poison.h:14:31: error: pointer of type ‘void *’ used in arithmetic [-Werror=pointer-arith]
       # define POISON_POINTER_DELTA 0
                                     ^
      /home/lizj/linux/tools/include/linux/poison.h:22:41: note: in expansion of macro ‘POISON_POINTER_DELTA’
       #define LIST_POISON1  ((void *) 0x100 + POISON_POINTER_DELTA)
                                               ^
      /home/lizj/linux/tools/include/linux/list.h:107:16: note: in expansion of macro ‘LIST_POISON1’
        entry->next = LIST_POISON1;
                      ^
      In file included from /home/lizj/linux/tools/perf/util/namespaces.h:13:0,
                       from /home/lizj/linux/tools/perf/util/util.h:15,
                       from /home/lizj/linux/tools/perf/util/util-cxx.h:20,
                       from util/c++/clang-c.h:5,
                       from util/c++/clang-test.cpp:2:
      /home/lizj/linux/tools/include/linux/list.h:107:14: error: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
    
    Reported-by: Li Zhijian <lizhijian@cn.fujitsu.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Philip Li <philip.li@intel.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/n/tip-m5ei2o0mjshucbr28baf5lqz@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9f359f24ce70a291997b3644aeead56d0c44cd6
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:23 2017 +0200

    s390/ptrace: fix guarded storage regset handling
    
    
    [ Upstream commit 5ef2d5231d547c672c67bdf84c13a4adaf477964 ]
    
    If the guarded storage regset for current is supposed to be changed,
    the regset from user space is copied directly into the guarded storage
    control block.
    
    If then the process gets scheduled away while the control block is
    being copied and before the new control block has been loaded, the
    result is random: the process can be scheduled away due to a page
    fault or preemption. If that happens the already copied parts will be
    overwritten by save_gs_cb(), called from switch_to().
    
    Avoid this by copying the data to a temporary buffer on the stack and
    do the actual update with preemption disabled.
    
    Fixes: f5bbd7219891 ("s390/ptrace: guarded storage regset for the current task")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bef9bcf53789a454f54adf01c654650189628ab0
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Sep 2 13:09:45 2017 -0700

    locking/refcounts, x86/asm: Use unique .text section for refcount exceptions
    
    
    [ Upstream commit 564c9cc84e2adf8a6671c1937f0a9fe3da2a4b0e ]
    
    Using .text.unlikely for refcount exceptions isn't safe because gcc may
    move entire functions into .text.unlikely (e.g. in6_dev_dev()), which
    would cause any uses of a protected refcount_t function to stay inline
    with the function, triggering the protection unconditionally:
    
            .section        .text.unlikely,"ax",@progbits
            .type   in6_dev_get, @function
    in6_dev_getx:
    .LFB4673:
            .loc 2 4128 0
            .cfi_startproc
    ...
            lock; incl 480(%rbx)
            js 111f
            .pushsection .text.unlikely
    111:    lea 480(%rbx), %rcx
    112:    .byte 0x0f, 0xff
    .popsection
    113:
    
    This creates a unique .text..refcount section and adds an additional
    test to the exception handler to WARN in the case of having none of OF,
    SF, nor ZF set so we can see things like this more easily in the future.
    
    The double dot for the section name keeps it out of the TEXT_MAIN macro
    namespace, to avoid collisions and so it can be put at the end with
    text.unlikely to keep the cold code together.
    
    See commit:
    
      cb87481ee89db ("kbuild: linker script do not match C names unless LD_DEAD_CODE_DATA_ELIMINATION is configured")
    
    ... which matches C names: [a-zA-Z0-9_] but not ".".
    
    Reported-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Elena <elena.reshetova@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch <linux-arch@vger.kernel.org>
    Fixes: 7a46ec0e2f48 ("locking/refcounts, x86/asm: Implement fast refcount overflow protection")
    Link: http://lkml.kernel.org/r/1504382986-49301-2-git-send-email-keescook@chromium.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d0d3ac1ec32444ad985cb92272c94d07e43e9f7
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Sep 19 19:01:40 2017 +0900

    kprobes/x86: Disable preemption in ftrace-based jprobes
    
    
    [ Upstream commit 5bb4fc2d8641219732eb2bb654206775a4219aca ]
    
    Disable preemption in ftrace-based jprobe handlers as
    described in Documentation/kprobes.txt:
    
      "Probe handlers are run with preemption disabled."
    
    This will fix jprobes behavior when CONFIG_PREEMPT=y.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexei Starovoitov <ast@fb.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E . McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/150581530024.32348.9863783558598926771.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c530d86ded9becc305aaf984cab5d547b6fd6480
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Wed Sep 13 10:12:08 2017 +0200

    perf test attr: Fix python error on empty result
    
    
    [ Upstream commit 3440fe2790aa3d13530260af6033533b18959aee ]
    
    Commit d78ada4a767 ("perf tests attr: Do not store failed events") does
    not create an event file in the /tmp directory when the
    perf_open_event() system call failed.
    
    This can lead to a situation where not /tmp/event-xx-yy-zz result file
    exists at all (for example on a s390x virtual machine environment) where
    no CPUMF hardware is available.
    
    The following command then fails with a python call back chain instead
    of printing failure:
    
      [root@s8360046 perf]# /usr/bin/python2 ./tests/attr.py -d ./tests/attr/ \
          -p ./perf -v -ttest-stat-basic
      running './tests/attr//test-stat-basic'
      Traceback (most recent call last):
        File "./tests/attr.py", line 379, in <module>
          main()
        File "./tests/attr.py", line 370, in main
          run_tests(options)
        File "./tests/attr.py", line 311, in run_tests
          Test(f, options).run()
        File "./tests/attr.py", line 300, in run
          self.compare(self.expect, self.result)
        File "./tests/attr.py", line 248, in compare
          exp_event.diff(res_event)
      UnboundLocalError: local variable 'res_event' referenced before assignment
      [root@s8360046 perf]#
    
    This patch catches this pitfall and prints an error message instead:
    
      [root@s8360047 perf]# /usr/bin/python2 ./tests/attr.py -d ./tests/attr/ \
           -p ./perf  -vvv -ttest-stat-basic
      running './tests/attr//test-stat-basic'
        loading expected events
          Event event:base-stat
            fd = 1
            group_fd = -1
            flags = 0|8
            [....]
            sample_regs_user = 0
            sample_stack_user = 0
        'PERF_TEST_ATTR=/tmp/tmpJbMQMP ./perf stat -o /tmp/tmpJbMQMP/perf.data -e cycles kill >/dev/null 2>&1' ret '1', expected '1'
        loading result events
        compare
          matching [event:base-stat]
          match: [event:base-stat] matches []
          res_event is empty
      FAILED './tests/attr//test-stat-basic' - match failure
      [root@s8360047 perf]#
    
    Signed-off-by: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    LPU-Reference: 20170913081209.39570-1-tmricht@linux.vnet.ibm.com
    Link: http://lkml.kernel.org/n/tip-04d63nn7svfgxdhi60gq2mlm@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bb9d1772d4a07c1c71e4b82035a67c11f21ad20
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Wed Sep 13 10:12:09 2017 +0200

    perf test attr: Fix ignored test case result
    
    
    [ Upstream commit 22905582f6dd4bbd0c370fe5732c607452010c04 ]
    
    Command perf test -v 16 (Setup struct perf_event_attr test) always
    reports success even if the test case fails.  It works correctly if you
    also specify -F (for don't fork).
    
       root@s35lp76 perf]# ./perf test -v 16
       15: Setup struct perf_event_attr               :
       --- start ---
       running './tests/attr/test-record-no-delay'
       [ perf record: Woken up 1 times to write data ]
       [ perf record: Captured and wrote 0.002 MB /tmp/tmp4E1h7R/perf.data
         (1 samples) ]
       expected task=0, got 1
       expected precise_ip=0, got 3
       expected wakeup_events=1, got 0
       FAILED './tests/attr/test-record-no-delay' - match failure
       test child finished with 0
       ---- end ----
       Setup struct perf_event_attr: Ok
    
    The reason for the wrong error reporting is the return value of the
    system() library call. It is called in run_dir() file tests/attr.c and
    returns the exit status, in above case 0xff00.
    
    This value is given as parameter to the exit() function which can only
    handle values 0-0xff.
    
    The child process terminates with exit value of 0 and the parent does
    not detect any error.
    
    This patch corrects the error reporting and prints the correct test
    result.
    
    Signed-off-by: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    LPU-Reference: 20170913081209.39570-2-tmricht@linux.vnet.ibm.com
    Link: http://lkml.kernel.org/n/tip-rdube6rfcjsr1nzue72c7lqn@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9093d8bc530402a7d7651be40dd53b0b97a813af
Author: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date:   Thu Sep 28 09:10:33 2017 -0500

    staging: fsl-mc/dpio: Fix incorrect comparison
    
    
    [ Upstream commit 8dabf52ffb6445fa5bcc8b6d2ecb615f60d0dd12 ]
    
    For some dpio functions, a cpu id parameter value of -1 is
    valid and means "any". But when trying to validate this param
    value against an upper limit, in this case num_possible_cpus(),
    we risk obtaining the wrong result due to an implicit cast.
    
    Avoid an incorrect check result by explicitly comparing the
    cpu id with the "any" value before verifying the upper bound.
    
    Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c25bec2de9268122407a3f431dd7d031c06f293d
Author: Ian Jamison <ian.dev@arkver.com>
Date:   Thu Sep 21 10:13:12 2017 +0200

    serial: imx: Update cached mctrl value when changing RTS
    
    
    [ Upstream commit a0983c742a5885f82afb282166f83f1d3d8addf4 ]
    
    UART core function uart_update_mctrl relies on a cached value of
    modem control lines. This was used but not updated by local RTS
    control functions within imx.c. These are used for RS485 line
    driver enable signalling. Having an out-of-date value in the cached
    mctrl can result in the transmitter being enabled when it shouldn't
    be.
    
    Fix this by updating the mctrl value before applying it.
    
    Signed-off-by: Ian Jamison <ian.dev@arkver.com>
    Origin: id:8195c96e674517b82a6ff7fe914c7ba0f86e702b.1505375165.git.ian.dev@arkver.com
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Tested-by: Clemens Gruber <clemens.gruber@pqgruber.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87837b102c0630fd559a412f6fa48c8e9710755c
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Oct 1 02:18:37 2017 +0100

    usbip: tools: Install all headers needed for libusbip development
    
    
    [ Upstream commit c15562c0dcb2c7f26e891923b784cf1926b8c833 ]
    
    usbip_host_driver.h now depends on several additional headers, which
    need to be installed along with it.
    
    Fixes: 021aed845303 ("staging: usbip: userspace: migrate usbip_host_driver ...")
    Fixes: 3391ba0e2792 ("usbip: tools: Extract generic code to be shared with ...")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25aafb3061f64099e379dfb24e394b07f3f93b38
Author: Andy Lowe <andy_lowe@mentor.com>
Date:   Fri Sep 22 20:29:30 2017 +0200

    serial: sh-sci: suppress warning for ports without dma channels
    
    
    [ Upstream commit 7464779fa8551b90d5797d4020b0bdb7e6422eb9 ]
    
    If a port has no dma channel defined in the device tree, then
    don't attempt to allocate a dma channel for the port.
    Also suppress the warning message concerning the failure to allocate
    a dma channel.  Continue to emit the warning message if a dma
    channel is defined but cannot be allocated.
    
    Signed-off-by: Andy Lowe <andy_lowe@mentor.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dddd2bd98cb2a547c9fd08d68273c69d5bca3e1f
Author: Jibin Xu <jibin.xu@windriver.com>
Date:   Sun Sep 10 20:11:42 2017 -0700

    sysrq : fix Show Regs call trace on ARM
    
    
    [ Upstream commit b00bebbc301c8e1f74f230dc82282e56b7e7a6db ]
    
    When kernel configuration SMP,PREEMPT and DEBUG_PREEMPT are enabled,
    echo 1 >/proc/sys/kernel/sysrq
    echo p >/proc/sysrq-trigger
    kernel will print call trace as below:
    
    sysrq: SysRq : Show Regs
    BUG: using __this_cpu_read() in preemptible [00000000] code: sh/435
    caller is __this_cpu_preempt_check+0x18/0x20
    Call trace:
    [<ffffff8008088e80>] dump_backtrace+0x0/0x1d0
    [<ffffff8008089074>] show_stack+0x24/0x30
    [<ffffff8008447970>] dump_stack+0x90/0xb0
    [<ffffff8008463950>] check_preemption_disabled+0x100/0x108
    [<ffffff8008463998>] __this_cpu_preempt_check+0x18/0x20
    [<ffffff80084c9194>] sysrq_handle_showregs+0x1c/0x40
    [<ffffff80084c9c7c>] __handle_sysrq+0x12c/0x1a0
    [<ffffff80084ca140>] write_sysrq_trigger+0x60/0x70
    [<ffffff8008251e00>] proc_reg_write+0x90/0xd0
    [<ffffff80081f1788>] __vfs_write+0x48/0x90
    [<ffffff80081f241c>] vfs_write+0xa4/0x190
    [<ffffff80081f3354>] SyS_write+0x54/0xb0
    [<ffffff80080833f0>] el0_svc_naked+0x24/0x28
    
    This can be seen on a common board like an r-pi3.
    This happens because when echo p >/proc/sysrq-trigger,
    get_irq_regs() is called outside of IRQ context,
    if preemption is enabled in this situation,kernel will
    print the call trace. Since many prior discussions on
    the mailing lists have made it clear that get_irq_regs
    either just returns NULL or stale data when used outside
    of IRQ context,we simply avoid calling it outside of
    IRQ context.
    
    Signed-off-by: Jibin Xu <jibin.xu@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e99614575b9f1e66249729878a415b9b6659ee7
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Thu Oct 5 11:21:43 2017 +0300

    usb: xhci: Return error when host is dead in xhci_disable_slot()
    
    
    [ Upstream commit dcabc76fa9361186e6b88c30a68db8fa9d5b4a1c ]
    
    xhci_disable_slot() is a helper for disabling a slot when a device
    goes away or recovers from error situations. Currently, it returns
    success when it sees a dead host. This is not the right way to go.
    It should return error and let the invoker know that disable slot
    command was failed due to a dead host.
    
    Fixes: f9e609b82479 ("usb: xhci: Add helper function xhci_disable_slot().")
    Cc: Guoqing Zhang <guoqing.zhang@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8876436aa90d03372a2e6480b9a26d19d225603c
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue Oct 10 13:47:55 2017 +0800

    ARM: cpuidle: Correct driver unregistration if init fails
    
    
    [ Upstream commit 0f87855d969a87f02048ff5ced7503465d5ab2f1 ]
    
    If cpuidle init fails, the code misses to unregister the driver for
    current CPU. Furthermore, we also need to rollback to cancel all
    previous CPUs registration; but the code retrieves driver handler by
    using function cpuidle_get_driver(), this function returns back
    current CPU driver handler but not previous CPU's handler, which leads
    to the failure handling code cannot unregister previous CPUs driver.
    
    This commit fixes two mentioned issues, it adds error handling path
    'goto out_unregister_drv' for current CPU driver unregistration; and
    it is to replace cpuidle_get_driver() with cpuidle_get_cpu_driver(),
    the later function can retrieve driver handler for previous CPUs
    according to the CPU device handler so can unregister the driver
    properly.
    
    This patch also adds extra error handling paths 'goto out_kfree_dev'
    and 'goto out_kfree_drv' and adjusts the freeing sentences for previous
    CPUs; so make the code more readable for freeing 'dev' and 'drv'
    structures.
    
    Suggested-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Fixes: d50a7d8acd78 (ARM: cpuidle: Support asymmetric idle definition)
    Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2001a980d1ab676f07a455c728fa72ae86d40058
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sat Sep 23 19:36:04 2017 -0500

    staging: rtl8822be: Keep array subscript no lower than zero
    
    
    [ Upstream commit 43d15c2013130a9fa230c2f5203aca818ae0bb86 ]
    
    The kbuild test robot reports the following:
       drivers/staging//rtlwifi/phydm/phydm_dig.c: In function 'odm_pause_dig':
       drivers/staging//rtlwifi/phydm/phydm_dig.c:494:45: warning: array subscript is below array bounds [-Warray-bounds]
          odm_write_dig(dm, dig_tab->pause_dig_value[max_level]);
    
    This condition is caused when a loop falls through. The fix is to pin
    max_level to be >= 0.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    c: kbuild test robot <fengguang.wu@intel.com>
    Fixes: 9ce99b04b5b82fdf11e4c76b60a5f82c1e541297 staging: r8822be: Add phydm mini driver
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11d9a37aaf271de4dc9b8016182330ba8f06bf38
Author: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date:   Wed Oct 11 08:29:44 2017 -0500

    staging: fsl-dpaa2/eth: Account for Rx FD buffers on error path
    
    
    [ Upstream commit cbb3ea40fc495bf04070200b35c1c4cd05d11bd3 ]
    
    On Rx path, if we fail to build an skb from the incoming FD,
    we still need to update the channel buffer count accordingly,
    otherwise we risk depleting the pool while the software counter
    still sees available buffers.
    
    Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8891ee7e676c0adc59b5e6c298de0b109a1934d5
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Fri Oct 13 17:10:37 2017 +0800

    usb: mtu3: fix error return code in ssusb_gadget_init()
    
    
    [ Upstream commit c162ff0aaaac456ef29aebd1e9d4d3e305cd3279 ]
    
    When failing to get IRQ number, platform_get_irq() may return
    -EPROBE_DEFER, but we ignore it and always return -ENODEV,
    so fix it.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a95d0d2ee717908be9b67d1f1b2fb44e1c1210a1
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Oct 16 12:40:29 2017 -0500

    EDAC, sb_edac: Fix missing break in switch
    
    
    [ Upstream commit a8e9b186f153a44690ad0363a56716e7077ad28c ]
    
    Add missing break statement in order to prevent the code from falling
    through.
    
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20171016174029.GA19757@embeddedor.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a105cd032d9d42a61aad547b4af283ead1c0d37b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Sep 18 15:46:41 2017 +0200

    dt-bindings: timer: renesas, cmt: Fix SoC-specific compatible values
    
    
    [ Upstream commit e20824e944c3bf4352fcd8d9f446c41b53901e7b ]
    
    While the new family-specific compatible values introduced by commit
    6f54cc1adcc8957f ("devicetree: bindings: R-Car Gen2 CMT0 and CMT1
    bindings") use the recommended order "<vendor>,<family>-<device>", the
    new SoC-specific compatible values still use the old and deprecated
    order "<vendor>,<device>-<soc>".
    
    Switch the SoC-specific compatible values to the recommended order while
    there are no upstream users of these compatible values yet.
    
    Fixes: 7f03a0ecfdc786c1 ("devicetree: bindings: r8a73a4 and R-Car Gen2 CMT bindings")
    Fixes: 63d9e8ca0dd4bfa4 ("devicetree: bindings: Deprecate property, update example")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebbd9c27dcf71d2947e30d743cfc2c15e7d8f723
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Oct 16 16:28:38 2017 +0100

    clocksource/drivers/arm_arch_timer: Validate CNTFRQ after enabling frame
    
    
    [ Upstream commit 21492e1333a0d07af6968667f128e19088cf5ead ]
    
    The ACPI GTDT code validates the CNTFRQ field of each MMIO timer
    frame against the CNTFRQ system register of the current CPU, to
    ensure that they are equal, which is mandated by the architecture.
    
    However, reading the CNTFRQ field of a frame is not possible until
    the RFRQ bit in the frame's CNTACRn register is set, and doing so
    before that willl produce the following error:
    
      arch_timer: [Firmware Bug]: CNTFRQ mismatch: frame @ 0x00000000e0be0000: (0x00000000), CPU: (0x0ee6b280)
      arch_timer: Disabling MMIO timers due to CNTFRQ mismatch
      arch_timer: Failed to initialize memory-mapped timer.
    
    The reason is that the CNTFRQ field is RES0 if access is not enabled.
    
    So move the validation of CNTFRQ into the loop that iterates over the
    timers to find the best frame, but defer it until after we have selected
    the best frame, which should also have enabled the RFRQ bit.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec2d8c832343de707fd777f29d5916b4eb6fea28
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Wed Oct 18 10:21:07 2017 -0700

    x86/entry: Use SYSCALL_DEFINE() macros for sys_modify_ldt()
    
    
    [ Upstream commit da20ab35180780e4a6eadc804544f1fa967f3567 ]
    
    We do not have tracepoints for sys_modify_ldt() because we define
    it directly instead of using the normal SYSCALL_DEFINEx() macros.
    
    However, there is a reason sys_modify_ldt() does not use the macros:
    it has an 'int' return type instead of 'unsigned long'.  This is
    a bug, but it's a bug cemented in the ABI.
    
    What does this mean?  If we return -EINVAL from a function that
    returns 'int', we have 0x00000000ffffffea in %rax.  But, if we
    return -EINVAL from a function returning 'unsigned long', we end
    up with 0xffffffffffffffea in %rax, which is wrong.
    
    To work around this and maintain the 'int' behavior while using
    the SYSCALL_DEFINEx() macros, so we add a cast to 'unsigned int'
    in both implementations of sys_modify_ldt().
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Brian Gerst <brgerst@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171018172107.1A79C532@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5715de464ac8ef97fdc0daacd41ac35dcd412e2f
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 20 08:43:39 2017 +0900

    kprobes: Use synchronize_rcu_tasks() for optprobe with CONFIG_PREEMPT=y
    
    
    [ Upstream commit a30b85df7d599f626973e9cd3056fe755bd778e0 ]
    
    We want to wait for all potentially preempted kprobes trampoline
    execution to have completed. This guarantees that any freed
    trampoline memory is not in use by any task in the system anymore.
    synchronize_rcu_tasks() gives such a guarantee, so use it.
    
    Also, this guarantees to wait for all potentially preempted tasks
    on the instructions which will be replaced with a jump.
    
    Since this becomes a problem only when CONFIG_PREEMPT=y, enable
    CONFIG_TASKS_RCU=y for synchronize_rcu_tasks() in that case.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naveen N . Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Paul E . McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/150845661962.5443.17724352636247312231.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c36100e295ffc4d957b0884a82bd32ac5a135c51
Author: Aaron Sierra <asierra@xes-inc.com>
Date:   Wed Oct 4 10:01:28 2017 -0500

    serial: 8250: Preserve DLD[7:4] for PORT_XR17V35X
    
    
    [ Upstream commit 0ab84da2e076948c49d36197ee7d254125c53eab ]
    
    The upper four bits of the XR17V35x fractional divisor register (DLD)
    control general chip function (RS-485 direction pin polarity, multidrop
    mode, XON/XOFF parity check, and fast IR mode). Don't allow these bits
    to be clobbered when setting the baudrate.
    
    Signed-off-by: Aaron Sierra <asierra@xes-inc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c5faa44569688d8b984059def5846e9f15b2cff
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Fri Oct 20 02:16:59 2017 -0700

    x86/intel_rdt: Fix potential deadlock during resctrl mount
    
    
    [ Upstream commit 87943db7dfb0c5ee5aa74a9ac06346fadd9695c8 ]
    
    Sai reported a warning during some MBA tests:
    
    [  236.755559] ======================================================
    [  236.762443] WARNING: possible circular locking dependency detected
    [  236.769328] 4.14.0-rc4-yocto-standard #8 Not tainted
    [  236.774857] ------------------------------------------------------
    [  236.781738] mount/10091 is trying to acquire lock:
    [  236.787071]  (cpu_hotplug_lock.rw_sem){++++}, at: [<ffffffff8117f892>] static_key_enable+0x12/0x30
    [  236.797058]
                   but task is already holding lock:
    [  236.803552]  (&type->s_umount_key#37/1){+.+.}, at: [<ffffffff81208b2f>] sget_userns+0x32f/0x520
    [  236.813247]
                   which lock already depends on the new lock.
    
    [  236.822353]
                   the existing dependency chain (in reverse order) is:
    [  236.830686]
                   -> #4 (&type->s_umount_key#37/1){+.+.}:
    [  236.837756]        __lock_acquire+0x1100/0x11a0
    [  236.842799]        lock_acquire+0xdf/0x1d0
    [  236.847363]        down_write_nested+0x46/0x80
    [  236.852310]        sget_userns+0x32f/0x520
    [  236.856873]        kernfs_mount_ns+0x7e/0x1f0
    [  236.861728]        rdt_mount+0x30c/0x440
    [  236.866096]        mount_fs+0x38/0x150
    [  236.870262]        vfs_kern_mount+0x67/0x150
    [  236.875015]        do_mount+0x1df/0xd50
    [  236.879286]        SyS_mount+0x95/0xe0
    [  236.883464]        entry_SYSCALL_64_fastpath+0x18/0xad
    [  236.889183]
                   -> #3 (rdtgroup_mutex){+.+.}:
    [  236.895292]        __lock_acquire+0x1100/0x11a0
    [  236.900337]        lock_acquire+0xdf/0x1d0
    [  236.904899]        __mutex_lock+0x80/0x8f0
    [  236.909459]        mutex_lock_nested+0x1b/0x20
    [  236.914407]        intel_rdt_online_cpu+0x3b/0x4a0
    [  236.919745]        cpuhp_invoke_callback+0xce/0xb80
    [  236.925177]        cpuhp_thread_fun+0x1c5/0x230
    [  236.930222]        smpboot_thread_fn+0x11a/0x1e0
    [  236.935362]        kthread+0x152/0x190
    [  236.939536]        ret_from_fork+0x27/0x40
    [  236.944097]
                   -> #2 (cpuhp_state-up){+.+.}:
    [  236.950199]        __lock_acquire+0x1100/0x11a0
    [  236.955241]        lock_acquire+0xdf/0x1d0
    [  236.959800]        cpuhp_issue_call+0x12e/0x1c0
    [  236.964845]        __cpuhp_setup_state_cpuslocked+0x13b/0x2f0
    [  236.971242]        __cpuhp_setup_state+0xa7/0x120
    [  236.976483]        page_writeback_init+0x43/0x67
    [  236.981623]        pagecache_init+0x38/0x3b
    [  236.986281]        start_kernel+0x3c6/0x41a
    [  236.990931]        x86_64_start_reservations+0x2a/0x2c
    [  236.996650]        x86_64_start_kernel+0x72/0x75
    [  237.001793]        verify_cpu+0x0/0xfb
    [  237.005966]
                   -> #1 (cpuhp_state_mutex){+.+.}:
    [  237.012364]        __lock_acquire+0x1100/0x11a0
    [  237.017408]        lock_acquire+0xdf/0x1d0
    [  237.021969]        __mutex_lock+0x80/0x8f0
    [  237.026527]        mutex_lock_nested+0x1b/0x20
    [  237.031475]        __cpuhp_setup_state_cpuslocked+0x54/0x2f0
    [  237.037777]        __cpuhp_setup_state+0xa7/0x120
    [  237.043013]        page_alloc_init+0x28/0x30
    [  237.047769]        start_kernel+0x148/0x41a
    [  237.052425]        x86_64_start_reservations+0x2a/0x2c
    [  237.058145]        x86_64_start_kernel+0x72/0x75
    [  237.063284]        verify_cpu+0x0/0xfb
    [  237.067456]
                   -> #0 (cpu_hotplug_lock.rw_sem){++++}:
    [  237.074436]        check_prev_add+0x401/0x800
    [  237.079286]        __lock_acquire+0x1100/0x11a0
    [  237.084330]        lock_acquire+0xdf/0x1d0
    [  237.088890]        cpus_read_lock+0x42/0x90
    [  237.093548]        static_key_enable+0x12/0x30
    [  237.098496]        rdt_mount+0x406/0x440
    [  237.102862]        mount_fs+0x38/0x150
    [  237.107035]        vfs_kern_mount+0x67/0x150
    [  237.111787]        do_mount+0x1df/0xd50
    [  237.116058]        SyS_mount+0x95/0xe0
    [  237.120233]        entry_SYSCALL_64_fastpath+0x18/0xad
    [  237.125952]
                   other info that might help us debug this:
    
    [  237.134867] Chain exists of:
                     cpu_hotplug_lock.rw_sem --> rdtgroup_mutex --> &type->s_umount_key#37/1
    
    [  237.148425]  Possible unsafe locking scenario:
    
    [  237.155015]        CPU0                    CPU1
    [  237.160057]        ----                    ----
    [  237.165100]   lock(&type->s_umount_key#37/1);
    [  237.169952]                                lock(rdtgroup_mutex);
    [  237.176641]
    lock(&type->s_umount_key#37/1);
    [  237.184287]   lock(cpu_hotplug_lock.rw_sem);
    [  237.189041]
                    *** DEADLOCK ***
    
    When the resctrl filesystem is mounted the locks must be acquired in the
    same order as was done when the cpus came online:
    
         cpu_hotplug_lock before rdtgroup_mutex.
    
    This also requires to switch the static_branch_enable() calls to the
    _cpulocked variant because now cpu hotplug lock is held already.
    
    [ tglx: Switched to cpus_read_[un]lock ]
    
    Reported-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Tested-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Acked-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Cc: fenghua.yu@intel.com
    Cc: tony.luck@intel.com
    Link: https://lkml.kernel.org/r/9c41b91bc2f47d9e95b62b213ecdb45623c47a9f.1508490116.git.reinette.chatre@intel.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24567dc3cc8a9fb6f7ac7e9a5040e839efe3716c
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Fri Oct 20 02:16:57 2017 -0700

    x86/intel_rdt: Initialize bitmask of shareable resource if CDP enabled
    
    
    [ Upstream commit 95953034fb24c16ad0047a98b16427e5935830c4 ]
    
    The platform informs via CPUID.(EAX=0x10, ECX=res#):EBX[31:0] (valid res#
    are only 1 for L3 and 2 for L2) which unit of the allocation may be used by
    other entities in the platform. This information is valid whether CDP (Code
    and Data Prioritization) is enabled or not.
    
    Ensure that the bitmask of shareable resource is initialized when CDP is
    enabled.
    
    Fixes: 0dd2d7494cd8 ("x86/intel_rdt: Show bitmask of shareable resource with other executing units"
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Fenghua Yu <fenghua.yu@intel.com>
    Acked-by: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/815747bddc820ca221a8924edaf4d1a7324547e4.1508490116.git.reinette.chatre@intel.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd89f47e21aa3166d557f348deae1affde54f8b8
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Mon Oct 9 14:33:37 2017 +0530

    PCI: dra7xx: Create functional dependency between PCIe and PHY
    
    
    [ Upstream commit 7a4db656a6350f8dd46f711bdef3b0e9c6e3f4cb ]
    
    PCI core access configuration space registers in resume_noirq callbacks.
    In the case of dra7xx, PIPE3 PHY connected to PCIe controller has to be
    enabled before accessing configuration space registers. Since
    PIPE3 PHY is enabled by only configuring control module registers, no
    aborts has been observed so far (though during noirq stage, interface
    clock of PIPE3 PHY is not enabled).
    
    With new TRM updates, PIPE3 PHY has to be initialized (PIPE3 PHY
    registers has to be accessed) as well which requires the interface
    clock of PIPE3 PHY to be enabled. The interface clock of PIPE3 PHY is
    derived from OCP2SCP and hence PCIe PHY is modeled as a child of
    OCP2SCP. Since pm_runtime is not enabled during noirq stage,
    pm_runtime_get_sync done in phy_init doesn't enable
    OCP2SCP clocks resulting in abort when PIPE3 PHY registers are
    accessed.
    
    Create a function dependency between PCIe and PHY here to make
    sure PCIe is suspended before PCIe PHY/OCP2SCP and resumed after
    PCIe PHY/OCP2SCP.
    
    Suggested-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cac6a26e3c76c310e33172133e4621b38143244
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Oct 21 01:02:07 2017 +0300

    usb: phy: tahvo: fix error handling in tahvo_usb_probe()
    
    
    [ Upstream commit ce035409bfa892a2fabb89720b542e1b335c3426 ]
    
    If devm_extcon_dev_allocate() fails, we should disable clk before return.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: 860d2686fda7 ("usb: phy: tahvo: Use devm_extcon_dev_[allocate|register]() and replace deprecated API")
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ee9572b109de66357a73e27effed5266a449183
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Sep 5 13:38:24 2017 +0200

    perf/core: Fix __perf_read_group_add() locking
    
    
    [ Upstream commit a9cd8194e1e6bd09619954721dfaf0f94fe2003e ]
    
    Event timestamps are serialized using ctx->lock, make sure to hold it
    over reading all values.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9851961159b6d33b7523e73cdedf156204a731bd
Author: Edward A. James <eajames@us.ibm.com>
Date:   Fri Oct 27 11:55:05 2017 -0500

    hwmon: (pmbus/core) Prevent unintentional setting of page to 0xFF
    
    
    [ Upstream commit 6dcf2fb5e8db3704f50af1f198256cb4e2453f8b ]
    
    The pmbus core may call read/write word data functions with a page value
    of -1, intending to perform the operation without setting the page.
    However, the read/write word data functions accept only unsigned 8-bit
    page numbers, and therefore cannot check for negative page number to
    avoid setting the page. This results in setting the page number to 0xFF.
    This may result in errors or undefined behavior of some devices
    (specifically the ir35221, which allows the page to be set to 0xFF,
    but some subsequent operations to read registers may fail).
    
    Switch the pmbus_set_page page parameter to an integer and perform the
    check for negative page there. Make read/write functions consistent in
    accepting an integer page number parameter.
    
    Signed-off-by: Edward A. James <eajames@us.ibm.com>
    Fixes: cbcdec6202c9 ("hwmon: (pmbus): Access word data for STATUS_WORD")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69d02547cbdf3d571f0aba394ce4b90b5daf6b71
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Wed Sep 27 11:04:40 2017 +0530

    mmc: sdhci-msm: fix issue with power irq
    
    
    [ Upstream commit c7ccee224d2d551f712752c4a16947f6529d6506 ]
    
    SDCC controller reset (SW_RST) during probe may trigger power irq if
    previous status of PWRCTL was either BUS_ON or IO_HIGH_V. So before we
    enable the power irq interrupt in GIC (by registering the interrupt
    handler), we need to ensure that any pending power irq interrupt status
    is acknowledged otherwise power irq interrupt handler would be fired
    prematurely.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Vijay Viswanath <vviswana@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ef27d564261b2ae9d7c39f9993da8dace2cb99b
Author: Fabrizio Castro <fabrizio.castro@bp.renesas.com>
Date:   Fri Sep 22 12:22:17 2017 +0100

    mmc: tmio: check mmc_regulator_get_supply return value
    
    
    [ Upstream commit a3d95d1d4007b1fefd6d8b12db26fda05de05cfb ]
    
    mmc_regulator_get_supply returns -EPROBE_DEFER if either vmmc or
    vqmmc regulators had their probing deferred.
    vqmmc regulator is needed by UHS to work properly, therefore this
    patch checks the value returned by mmc_regulator_get_supply to
    make sure we have a reference to both vmmc and vqmmc (if found in
    the DT).
    
    Signed-off-by: Fabrizio Castro <fabrizio.castro@bp.renesas.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4507d57777ff432efa66a3d212f35a6036015298
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 30 11:35:27 2017 +0100

    spi: spi-axi: fix potential use-after-free after deregistration
    
    
    [ Upstream commit 4d5e0689dc9d5640ad46cdfbe1896b74d8df1661 ]
    
    Take an extra reference to the controller before deregistering it to
    prevent use-after-free in the interrupt handler in case an interrupt
    fires before the line is disabled.
    
    Fixes: b1353d1c1d45 ("spi: Add Analog Devices AXI SPI Engine controller support")
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9bf23504e6521af8cbce108761eb22fe9b63136
Author: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
Date:   Thu Nov 2 10:32:36 2017 +0100

    spi: sh-msiof: Fix DMA transfer size check
    
    
    [ Upstream commit 36735783fdb599c94b9c86824583df367c65900b ]
    
    DMA supports 32-bit words only,
    even if BITLEN1 of SITMDR2 register is 16bit.
    
    Fixes: b0d0ce8b6b91 ("spi: sh-msiof: Add DMA support")
    Signed-off-by: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Dirk Behme <dirk.behme@de.bosch.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3912c2aef4ea046568ace227aa5d54bad44cac9
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Oct 20 20:40:24 2017 +0200

    staging: rtl8188eu: avoid a null dereference on pmlmepriv
    
    
    [ Upstream commit 123c0aab0050cd0e07ce18e453389fbbb0a5a425 ]
    
    There is a check on pmlmepriv before dereferencing it when
    vfree'ing pmlmepriv->free_bss_buf however the previous call
    to rtw_free_mlme_priv_ie_data deferences pmlmepriv causing
    a null pointer deference if it is null.  Avoid this by also
    calling rtw_free_mlme_priv_ie_data if the pointer is non-null.
    
    Detected by CoverityScan, CID#1230262 ("Dereference before null check")
    Fixes: 7b464c9fa5cc ("staging: r8188eu: Add files for new driver - part 4")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a99611910dd745e940fc1a0cdab15aadf07c3e23
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Mon Oct 23 11:35:59 2017 +0200

    staging: rtl8822be: fix wrong dma unmap len
    
    
    [ Upstream commit c40a45a465e9eab72cfdd3ab69d15cf8ef8b89c8 ]
    
    Patch fixes splat:
    
    r8822be 0000:04:00.0: DMA-API: device driver frees DMA memory with different size
    [device address=0x0000000078477000] [map size=4096 bytes] [unmap size=424 bytes]
    <snip>
    Call Trace:
      debug_dma_unmap_page+0xa5/0xb0
      ? unmap_single+0x2f/0x40
      _rtl8822be_send_bcn_or_cmd_packet+0x2c5/0x300 [r8822be]
      ? _rtl8822be_send_bcn_or_cmd_packet+0x2c5/0x300 [r8822be]
      rtl8822b_halmac_cb_write_data_rsvd_page+0x51/0xc0 [r8822be]
      _halmac_write_data_rsvd_page+0x22/0x30 [r8822be]
      halmac_download_rsvd_page_88xx+0xee/0x1f0 [r8822be]
      halmac_dlfw_to_mem_88xx+0x80/0x120 [r8822be]
      halmac_download_firmware_88xx.part.47+0x477/0x600 [r8822be]
      halmac_download_firmware_88xx+0x32/0x40 [r8822be]
      rtl_halmac_dlfw+0x70/0x120 [r8822be]
      rtl_halmac_init_hal+0x5f/0x1b0 [r8822be]
      rtl8822be_hw_init+0x8a2/0x1040 [r8822be]
    
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bee9d1d1c54c8bf9ff8149ccacbaf398f524a37
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Oct 28 11:35:49 2017 +0200

    serial: 8250_fintek: Fix rs485 disablement on invalid ioctl()
    
    
    [ Upstream commit 3236a965486ba0c6043cf2c7b51943d8b382ae29 ]
    
    This driver's ->rs485_config callback checks if SER_RS485_RTS_ON_SEND
    and SER_RS485_RTS_AFTER_SEND have the same value.  If they do, it means
    the user has passed in invalid data with the TIOCSRS485 ioctl()
    since RTS must have a different polarity when sending and when not
    sending.  In this case, rs485 mode is not enabled (the RS485_URA bit
    is not set in the RS485 Enable Register) and this is supposed to be
    signaled back to the user by clearing the SER_RS485_ENABLED bit in
    struct serial_rs485 ... except a missing tilde character is preventing
    that from happening.
    
    Fixes: 28e3fb6c4dce ("serial: Add support for Fintek F81216A LPC to 4 UART")
    Cc: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Cc: "Ji-Ze Hong (Peter Hong)" <hpeter@gmail.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 162cefc5547b95f24c1a2aad2af1817381afa6a6
Author: Greg Ungerer <gerg@linux-m68k.org>
Date:   Tue Sep 5 22:57:06 2017 +1000

    m68k: fix ColdFire node shift size calculation
    
    
    [ Upstream commit f55ab8f27548ff3431a6567d400c6757c49fd520 ]
    
    The m68k pg_data_table is a fix size array defined in arch/m68k/mm/init.c.
    Index numbers within it are defined based on memory size. But for Coldfire
    these don't take into account a non-zero physical RAM base address, and this
    causes us to access past the end of this array at system start time.
    
    Change the node shift calculation so that we keep the index inside its range.
    
    Reported-by: Angelo Dureghello <angelo@sysam.it>
    Tested-by: Angelo Dureghello <angelo@sysam.it>
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff8cc6f882c735df53ae2e2fdde8362cafe14100
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Mon Nov 6 01:32:20 2017 +0000

    staging: greybus: loopback: Fix iteration count on async path
    
    
    [ Upstream commit 44b02da39210e6dd67e39ff1f48d30c56d384240 ]
    
    Commit 12927835d211 ("greybus: loopback: Add asynchronous bi-directional
    support") does what it says on the tin - namely, adds support for
    asynchronous bi-directional loopback operations.
    
    What it neglects to do though is increment the per-connection
    gb->iteration_count on an asynchronous operation error. This patch fixes
    that omission.
    
    Fixes: 12927835d211 ("greybus: loopback: Add asynchronous bi-directional support")
    
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Reported-by: Mitch Tasman <tasman@leaflabs.com>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Cc: Alex Elder <elder@kernel.org>
    Cc: Mitch Tasman <tasman@leaflabs.com>
    Cc: greybus-dev@lists.linaro.org
    Cc: devel@driverdev.osuosl.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 898fe968f78c45e12fed31aee35a118a4e26e1b4
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:49 2017 -0700

    selftests/x86/ldt_gdt: Robustify against set_thread_area() and LAR oddities
    
    
    [ Upstream commit d60ad744c9741586010d4bea286f09a063a90fbd ]
    
    Bits 19:16 of LAR's result are undefined, and some upcoming
    improvements to the test case seem to trigger this.  Mask off those
    bits to avoid spurious failures.
    
    commit 5b781c7e317f ("x86/tls: Forcibly set the accessed bit in TLS
    segments") adds a valid case in which LAR's output doesn't quite
    agree with set_thread_area()'s input.  This isn't triggered in the
    test as is, but it will be if we start calling set_thread_area()
    with the accessed bit clear.  Work around this discrepency.
    
    I've added a Fixes tag so that -stable can pick this up if neccesary.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 5b781c7e317f ("x86/tls: Forcibly set the accessed bit in TLS segments")
    Link: http://lkml.kernel.org/r/b82f3f89c034b53580970ac865139fd8863f44e2.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aaa793b6b05b57cf37814ccf0d992035ea41407
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:52 2017 -0700

    selftests/x86/ldt_get: Add a few additional tests for limits
    
    
    [ Upstream commit fec8f5ae1715a01c72ad52cb2ecd8aacaf142302 ]
    
    We weren't testing the .limit and .limit_in_pages fields very well.
    Add more tests.
    
    This addition seems to trigger the "bits 16:19 are undefined" issue
    that was fixed in an earlier patch.  I think that, at least on my
    CPU, the high nibble of the limit ends in LAR bits 16:19.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/5601c15ea9b3113d288953fd2838b18bedf6bc67.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dde14f7f78b337d43fc1a6877cb283023121f2f
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Mon Oct 30 14:38:58 2017 +0100

    s390/pci: do not require AIS facility
    
    
    [ Upstream commit 48070c73058be6de9c0d754d441ed7092dfc8f12 ]
    
    As of today QEMU does not provide the AIS facility to its guest.  This
    prevents Linux guests from using PCI devices as the ais facility is
    checked during init. As this is just a performance optimization, we can
    move the ais check into the code where we need it (calling the SIC
    instruction). This is used at initialization and on interrupt. Both
    places do not require any serialization, so we can simply skip the
    instruction.
    
    Since we will now get all interrupts, we can also avoid the 2nd scan.
    As we can have multiple interrupts in parallel we might trigger spurious
    irqs more often for the non-AIS case but the core code can handle that.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>
    Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Acked-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca04b90f9d8e053e81f630610076d00239129c1f
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Wed Nov 8 10:11:02 2017 +0100

    PM / Domains: Fix genpd to deal with drivers returning 1 from ->prepare()
    
    
    [ Upstream commit 5241ab40f6e742f8a1631f8826faf6dc6412b3b5 ]
    
    During system-wide PM, genpd relies on its PM callbacks to be invoked for
    all its attached devices, as to deal with powering off/on the PM domain. In
    other words, genpd is not compatible with the direct_complete path, if
    executed by the PM core for any of its attached devices.
    
    However, when genpd's ->prepare() callback invokes pm_generic_prepare(), it
    does not take into account that it may return 1. Instead it treats that as
    an error internally and expects the PM core to abort the prepare phase and
    roll back. This leads to genpd not properly powering on/off the PM domain,
    because its internal counters gets wrongly balanced.
    
    To fix the behaviour, allow drivers to return 1 from their ->prepare()
    callbacks, but let's return 0 from genpd's ->prepare() callback in such
    case, as that prevents the PM core from running the direct_complete path
    for the device.
    
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0bf7b7396a474cf3d61ebd7669bb20f914289fc
Author: Jason J. Herne <jjherne@linux.vnet.ibm.com>
Date:   Tue Nov 7 10:22:32 2017 -0500

    s390: vfio-ccw: Do not attempt to free no-op, test and tic cda.
    
    
    [ Upstream commit 408358b50deaf59b07c82a7bff8c7e7cce031fae ]
    
    Because we do not make use of the cda (channel data address) for test,
    no-op ccws no address translation takes place. This means cda could
    contain a guest address which we do not want to attempt to free. Let's
    check the command type and skip cda free when it is not needed.
    
    For a TIC ccw, ccw->cda points to either a ccw in an existing chain or
    it points to a whole new allocated chain. In either case the data will
    be freed when the owning chain is freed.
    
    Signed-off-by: Jason J. Herne <jjherne@linux.vnet.ibm.com>
    Reviewed-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>
    Message-Id: <1510068152-21988-1-git-send-email-jjherne@linux.vnet.ibm.com>
    Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c503475ae2aa08c10e50e56c9e12efe6415eefa
Author: Boshi Wang <wangboshi@huawei.com>
Date:   Fri Oct 20 16:01:03 2017 +0800

    ima: fix hash algorithm initialization
    
    
    [ Upstream commit ebe7c0a7be92bbd34c6ff5b55810546a0ee05bee ]
    
    The hash_setup function always sets the hash_setup_done flag, even
    when the hash algorithm is invalid.  This prevents the default hash
    algorithm defined as CONFIG_IMA_DEFAULT_HASH from being used.
    
    This patch sets hash_setup_done flag only for valid hash algorithms.
    
    Fixes: e7a2ad7eb6f4 "ima: enable support for larger default filedata hash algorithms"
    Signed-off-by: Boshi Wang <wangboshi@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07c925116820b3def5610a917cad3901d69d18d9
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Nov 28 15:22:20 2017 +0000

    MIPS: Add custom serial.h with BASE_BAUD override for generic kernel
    
    commit c8ec2041f549e7f2dee0c34d25381be6f7805f99 upstream.
    
    Add a custom serial.h header for MIPS, allowing platforms to override
    the asm-generic version if required.
    
    The generic platform uses this header to set BASE_BAUD to 0. The
    generic platform supports multiple boards, which may have different
    UART clocks. Also one of the boards supported is the Boston FPGA board,
    where the UART clock depends on the loaded FPGA bitfile. As such there
    is no way that the generic kernel can set a compile time default
    BASE_BAUD.
    
    Commit 31cb9a8575ca ("earlycon: initialise baud field of earlycon device
    structure") changed the behavior of of_setup_earlycon such that any baud
    rate set in the device tree is now set in the earlycon structure. The
    UART driver will then calculate a divisor based on BASE_BAUD and set it.
    With MIPS generic kernels this resulted in garbage output due to the
    incorrect uart clock rate being used to calculate a divisor. This
    commit, combined with "serial: 8250_early: Only set divisor if valid clk
    & baud" prevents the earlycon code setting a bad divisor and restores
    earlycon output.
    
    Fixes: 31cb9a8575ca ("earlycon: initialise baud field of earlycon device structure")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64dbff3359fc3865a000d051143ade71aea1242b
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Wed Nov 22 09:57:28 2017 +0000

    serial: 8250_early: Only set divisor if valid clk & baud
    
    commit 0ff3ab701963a845d52337ded7eebf2d1a14fe00 upstream.
    
    If either uartclk or baud are 0, avoid calculating and setting a divisor
    based on them since the output will almost certainly be garbage.
    
    This also allows platforms such as the MIPS generic kernel, which has no
    way to know a valid BASE_BASE for the board it is actually booted on at
    compile time, to set BASE_BAUD to 0 and avoid early_8250 setting a bad
    divisor.
    
    This fixes a regression caused by commit 31cb9a8575ca ("earlycon:
    initialise baud field of earlycon device structure"), which changed the
    behavior of of_setup_earlycon such that it sets a baud rate in the
    earlycon structure where previously it was left as 0. All boards
    supported by the MIPS generic kernel started outputting garbage from the
    boot console due to an incorrect divisor being set.
    
    Fixes: 31cb9a8575ca ("earlycon: initialise baud field of earlycon device structure")
    Signed-off-by: Matt Redfearn <matt.redfearn@mips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a53dae2e338bcd32d8fac11ee87c01ab873fec3
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Nov 28 12:40:59 2017 +0800

    USB: serial: usb_debug: add new USB device id
    
    commit 762ff4678e89a5e3f8b2237533e04d3ef2737e78 upstream.
    
    USB vendor id and product id for Linux USB Debug Target is added.
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b200d9899afe672d66c0d8d618c63455d21913ea
Author: Sebastian Sjoholm <ssjoholm@mac.com>
Date:   Mon Nov 20 19:29:32 2017 +0100

    USB: serial: option: add Quectel BG96 id
    
    commit c654b21ede93845863597de9ad774fd30db5f2ab upstream.
    
    Quectel BG96 is an Qualcomm MDM9206 based IoT modem, supporting both
    CAT-M and NB-IoT. Tested hardware is BG96 mounted on Quectel
    development board (EVB). The USB id is added to option.c to allow
    DIAG,GPS,AT and modem communication with the BG96.
    
    Signed-off-by: Sebastian Sjoholm <ssjoholm@mac.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22ad53793edbc73a5a12f6960749bc967551fde4
Author: Martijn Coenen <maco@android.com>
Date:   Mon Nov 13 10:06:08 2017 +0100

    ANDROID: binder: fix transaction leak.
    
    commit fb2c445277e7b0b4ffe10de8114bad4eccaca948 upstream.
    
    If a call to put_user() fails, we failed to
    properly free a transaction and send a failed
    reply (if necessary).
    
    Signed-off-by: Martijn Coenen <maco@android.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c17d9b6ea66925c8aadbb2973c48d668f673fc
Author: Matt Wilson <msw@amazon.com>
Date:   Mon Nov 13 11:31:31 2017 -0800

    serial: 8250_pci: Add Amazon PCI serial device ID
    
    commit 3bfd1300abfe3adb18e84a89d97a0e82a22124bb upstream.
    
    This device will be used in future Amazon EC2 instances as the primary
    serial port (i.e., data sent to this port will be available via the
    GetConsoleOuput [1] EC2 API).
    
    [1] http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html
    
    Signed-off-by: Matt Wilson <msw@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 502ae7582aacc85ffd38fa820e4c734a230ccc25
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Nov 14 01:31:15 2017 -0500

    usb: quirks: Add no-lpm quirk for KY-688 USB 3.1 Type-C Hub
    
    commit e43a12f1793ae1fe006e26fe9327a8840a92233c upstream.
    
    KY-688 USB 3.1 Type-C Hub internally uses a Genesys Logic hub to connect
    to Realtek r8153.
    
    Similar to commit ("7496cfe5431f2 usb: quirks: Add no-lpm quirk for Moshi
    USB to Ethernet Adapter"), no-lpm can make r8153 ethernet work.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6e6e58814d5583bef5c75734324b27f77f70f1b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Nov 14 19:27:22 2017 +0100

    uas: Always apply US_FL_NO_ATA_1X quirk to Seagate devices
    
    commit 7fee72d5e8f1e7b8d8212e28291b1a0243ecf2f1 upstream.
    
    We've been adding this as a quirk on a per device basis hoping that
    newer disk enclosures would do better, but that has not happened,
    so simply apply this quirk to all Seagate devices.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b76f8338123f06c565574a5f36964f482db829a3
Author: Yuyang Du <yuyang.du@intel.com>
Date:   Thu Nov 30 10:22:40 2017 +0800

    usbip: Fix USB device hang due to wrong enabling of scatter-gather
    
    commit 770b2edece42fa55bbe7d4cbe53347a07b8968d4 upstream.
    
    The previous USB3 SuperSpeed enabling patches mistakenly enabled
    URB scatter-gather chaining, which is actually not supported by
    the VHCI HCD. This patch fixes that.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197867
    Fixes: 03cd00d538a6feb ("usbip: vhci-hcd: Set the vhci structure up to work")
    Reported-by: Juan Zea <juan.zea@qindel.com>
    Signed-off-by: Yuyang Du <yuyang.du@intel.com>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0264c662ca8ba118715072927af08d96fd90a36
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Nov 29 15:24:22 2017 -0700

    usbip: fix usbip attach to find a port that matches the requested speed
    
    commit 1ac7c8a78be85f84b019d3d2742d1a9f07255cc5 upstream.
    
    usbip attach fails to find a free port when the device on the first port
    is a USB_SPEED_SUPER device and non-super speed device is being attached.
    It keeps checking the first port and returns without a match getting stuck
    in a loop.
    
    Fix it check to find the first port with matching speed.
    
    Reported-by: Juan Zea <juan.zea@qindel.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8e212c599082896a180a18a0c9bd529526590be
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/runtime instrumentation: simplify task exit handling
    
    commit 8d9047f8b967ce6181fd824ae922978e1b055cc0 upstream.
    
    Free data structures required for runtime instrumentation from
    arch_release_task_struct(). This allows to simplify the code a bit,
    and also makes the semantics a bit easier: arch_release_task_struct()
    is never called from the task that is being removed.
    
    In addition this allows to get rid of exit_thread() in a later patch.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 955c907b978589fbd34e9eaaf53527d8cbf589b4
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Wed Nov 22 15:55:21 2017 +0100

    drm/amdgpu: Use unsigned ring indices in amdgpu_queue_mgr_map
    
    commit fa7c7939b4bf112cd06ba166b739244077898990 upstream.
    
    This matches the corresponding UAPI fields. Treating the ring index as
    signed could result in accessing random unrelated memory if the MSB was
    set.
    
    Fixes: effd924d2f3b ("drm/amdgpu: untie user ring ids from kernel ring ids v6")
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bacbe44889828852678bc74ad0e942a7684f206f
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Nov 10 10:15:28 2017 +0100

    drm/fsl-dcu: enable IRQ before drm_atomic_helper_resume()
    
    commit 9fd99f4f3f5e13ce959900ae57d64b1bdb51d823 upstream.
    
    The resume helpers wait for a vblank to occurre hence IRQ need
    to be enabled. This avoids a warning as follows during resume:
      WARNING: CPU: 0 PID: 314 at drivers/gpu/drm/drm_atomic_helper.c:1249 drm_atomic_helper_wait_for_vblanks.part.1+0x284/0x288
      [CRTC:28:crtc-0] vblank wait timed out
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8111b1885d3a802e57f895e77aaa1e88de57282
Author: Stefan Agner <stefan@agner.ch>
Date:   Thu Nov 9 15:39:56 2017 +0100

    drm/fsl-dcu: avoid disabling pixel clock twice on suspend
    
    commit 9306e996574f7f57136a62e49cd0075f85713623 upstream.
    
    With commit 0a70c998d0c5 ("drm/fsl-dcu: enable pixel clock when
    enabling CRTC") the pixel clock is controlled by the CRTC code.
    Disabling the pixel clock in suspend leads to a warning due to
    the second clk_disable_unprepare call:
      WARNING: CPU: 0 PID: 359 at drivers/clk/clk.c:594 clk_core_disable+0x8c/0x90
    
    Remove clk_disable_unprepare call for pixel clock to avoid
    unbalanced clock disable on suspend.
    
    Fixes: 0a70c998d0c5 ("drm/fsl-dcu: enable pixel clock when enabling CRTC")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
