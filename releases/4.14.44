commit 102b97d6241d938ac153193504a5936fc0be27ed
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri May 25 16:18:02 2018 +0200

    Linux 4.14.44

commit 6b73dfbd3cfc9af7cb50fc109585b8735e404201
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Jan 16 14:45:21 2018 +0000

    rtc: goldfish: Add missing MODULE_LICENSE
    
    [ Upstream commit 82d632b85eb89f97051530f556cb49ee1c04bde7 ]
    
    Fix the following warning in MIPS allmodconfig by adding a
    MODULE_LICENSE() at the end of rtc-goldfish.c, based on the file header
    comment which says GNU General Public License version 2:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/rtc/rtc-goldfish.o
    
    Fixes: f22d9cdcb5eb ("rtc: goldfish: Add RTC driver for Android emulator")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Cc: linux-rtc@vger.kernel.org
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f34e436509ec90703365972cf0aef90d41c009f
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Mon Feb 12 23:47:49 2018 +0100

    rtc: rp5c01: fix possible race condition
    
    [ Upstream commit bcdd559268039d8340d38fa58668393596e29fdc ]
    
    The probe function is not allowed to fail after registering the RTC because
    the following may happen:
    
    CPU0:                                CPU1:
    sys_load_module()
     do_init_module()
      do_one_initcall()
       cmos_do_probe()
        rtc_device_register()
         __register_chrdev()
         cdev->owner = struct module*
                                         open("/dev/rtc0")
        rtc_device_unregister()
      module_put()
      free_module()
       module_free(mod->module_core)
       /* struct module *module is now
          freed */
                                          chrdev_open()
                                           spin_lock(cdev_lock)
                                           cdev_get()
                                            try_module_get()
                                             module_is_live()
                                             /* dereferences already
                                                freed struct module* */
    
    Switch to devm_rtc_allocate_device/rtc_register_device to register the rtc
    as late as possible.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78227b671e0db669eac33f2302bef45a7d5ea33a
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 15 19:36:14 2018 +0000

    rtc: tx4939: avoid unintended sign extension on a 24 bit shift
    
    [ Upstream commit 347876ad47b9923ce26e686173bbf46581802ffa ]
    
    The shifting of buf[5] by 24 bits to the left will be promoted to
    a 32 bit signed int and then sign-extended to an unsigned long. If
    the top bit of buf[5] is set then all then all the upper bits sec
    end up as also being set because of the sign-extension. Fix this by
    casting buf[5] to an unsigned long before the shift.
    
    Detected by CoverityScan, CID#1465292 ("Unintended sign extension")
    
    Fixes: 0e1492330cd2 ("rtc: add rtc-tx4939 driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 459aa4904ab20d0544dc3e237d264e7211fc7aa5
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sun Feb 25 21:14:31 2018 +0100

    rtc: m41t80: fix race conditions
    
    [ Upstream commit 10d0c768cc6d581523d673b9d1b54213f8a5eb24 ]
    
    The IRQ is requested before the struct rtc is allocated and registered, but
    this struct is used in the IRQ handler, leading to:
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000017c
    pgd = a38a2f9b
    [0000017c] *pgd=00000000
    Internal error: Oops: 5 [#1] ARM
    Modules linked in:
    CPU: 0 PID: 613 Comm: irq/48-m41t80 Not tainted 4.16.0-rc1+ #42
    Hardware name: Atmel SAMA5
    PC is at mutex_lock+0x14/0x38
    LR is at m41t80_handle_irq+0x1c/0x9c
    pc : [<c06e864c>]    lr : [<c04b70f0>]    psr: 20000013
    sp : dec73f30  ip : 00000000  fp : dec56d98
    r10: df437cf0  r9 : c0a03008  r8 : c0145ffc
    r7 : df5c4300  r6 : dec568d0  r5 : df593000  r4 : 0000017c
    r3 : df592800  r2 : 60000013  r1 : df593000  r0 : 0000017c
    Flags: nzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 10c53c7d  Table: 20004059  DAC: 00000051
    Process irq/48-m41t80 (pid: 613, stack limit = 0xb52d091e)
    Stack: (0xdec73f30 to 0xdec74000)
    3f20:                                     dec56840 df5c4300 00000001 df5c4300
    3f40: c0145ffc c0146018 dec56840 ffffe000 00000001 c0146290 dec567c0 00000000
    3f60: c0146084 ed7c9a62 c014615c dec56d80 dec567c0 00000000 dec72000 dec56840
    3f80: c014615c c012ffc0 dec72000 dec567c0 c012fe80 00000000 00000000 00000000
    3fa0: 00000000 00000000 00000000 c01010e8 00000000 00000000 00000000 00000000
    3fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    3fe0: 00000000 00000000 00000000 00000000 00000013 00000000 29282726 2d2c2b2a
    [<c06e864c>] (mutex_lock) from [<c04b70f0>] (m41t80_handle_irq+0x1c/0x9c)
    [<c04b70f0>] (m41t80_handle_irq) from [<c0146018>] (irq_thread_fn+0x1c/0x54)
    [<c0146018>] (irq_thread_fn) from [<c0146290>] (irq_thread+0x134/0x1c0)
    [<c0146290>] (irq_thread) from [<c012ffc0>] (kthread+0x140/0x148)
    [<c012ffc0>] (kthread) from [<c01010e8>] (ret_from_fork+0x14/0x2c)
    Exception stack(0xdec73fb0 to 0xdec73ff8)
    3fa0:                                     00000000 00000000 00000000 00000000
    3fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    3fe0: 00000000 00000000 00000000 00000000 00000013 00000000
    Code: e3c33d7f e3c3303f f5d0f000 e593300c (e1901f9f)
    ---[ end trace 22b027302eb7c604 ]---
    genirq: exiting task "irq/48-m41t80" (613) is an active IRQ thread (irq 48)
    
    Also, there is another possible race condition. The probe function is not
    allowed to fail after the RTC is registered because the following may
    happen:
    
    CPU0:                                CPU1:
    sys_load_module()
     do_init_module()
      do_one_initcall()
       cmos_do_probe()
        rtc_device_register()
         __register_chrdev()
         cdev->owner = struct module*
                                         open("/dev/rtc0")
        rtc_device_unregister()
      module_put()
      free_module()
       module_free(mod->module_core)
       /* struct module *module is now
          freed */
                                          chrdev_open()
                                           spin_lock(cdev_lock)
                                           cdev_get()
                                            try_module_get()
                                             module_is_live()
                                             /* dereferences already
                                                freed struct module* */
    
    Switch to devm_rtc_allocate_device/rtc_register_device to allocate the rtc
    before requesting the IRQ and register it as late as possible.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6266010c38950eec0dd304d04a79540e6115b71b
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Wed Feb 21 11:57:05 2018 +0100

    rtc: rk808: fix possible race condition
    
    [ Upstream commit 201fac95e799c3d0304ec724d555e1251b9f6e84 ]
    
    The probe function is not allowed to fail after registering the RTC because
    the following may happen:
    
    CPU0:                                CPU1:
    sys_load_module()
     do_init_module()
      do_one_initcall()
       cmos_do_probe()
        rtc_device_register()
         __register_chrdev()
         cdev->owner = struct module*
                                         open("/dev/rtc0")
        rtc_device_unregister()
      module_put()
      free_module()
       module_free(mod->module_core)
       /* struct module *module is now
          freed */
                                          chrdev_open()
                                           spin_lock(cdev_lock)
                                           cdev_get()
                                            try_module_get()
                                             module_is_live()
                                             /* dereferences already
                                                freed struct module* */
    
    Switch to devm_rtc_allocate_device/rtc_register_device to register the rtc
    as late as possible.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c1c17116484cf376aee8a072fa37553da9ac0bd
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Mar 8 23:27:31 2018 +0100

    rtc: hctosys: Ensure system time doesn't overflow time_t
    
    [ Upstream commit b3a5ac42ab18b7d1a8f2f072ca0ee76a3b754a43 ]
    
    On 32bit platforms, time_t is still a signed 32bit long. If it is
    overflowed, userspace and the kernel cant agree on the current system time.
    This causes multiple issues, in particular with systemd:
    https://github.com/systemd/systemd/issues/1143
    
    A good workaround is to simply avoid using hctosys which is something I
    greatly encourage as the time is better set by userspace.
    
    However, many distribution enable it and use systemd which is rendering the
    system unusable in case the RTC holds a date after 2038 (and more so after
    2106). Many drivers have workaround for this case and they should be
    eliminated so there is only one place left to fix when userspace is able to
    cope with dates after the 31bit overflow.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 731d965a587c96ebd319bca7e09448482e01d7b1
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Wed Mar 28 20:14:05 2018 +0100

    rtc: snvs: Fix usage of snvs_rtc_enable
    
    [ Upstream commit 1485991c024603b2fb4ae77beb7a0d741128a48e ]
    
    commit 179a502f8c46 ("rtc: snvs: add Freescale rtc-snvs driver") introduces
    the SNVS RTC driver with a function snvs_rtc_enable().
    
    snvs_rtc_enable() can return an error on the enable path however this
    driver does not currently trap that failure on the probe() path and
    consequently if enabling the RTC fails we encounter a later error spinning
    forever in rtc_write_sync_lp().
    
    [   36.093481] [<c010d630>] (__irq_svc) from [<c0c2e9ec>] (_raw_spin_unlock_irqrestore+0x34/0x44)
    [   36.102122] [<c0c2e9ec>] (_raw_spin_unlock_irqrestore) from [<c072e32c>] (regmap_read+0x4c/0x5c)
    [   36.110938] [<c072e32c>] (regmap_read) from [<c085d0f4>] (rtc_write_sync_lp+0x6c/0x98)
    [   36.118881] [<c085d0f4>] (rtc_write_sync_lp) from [<c085d160>] (snvs_rtc_alarm_irq_enable+0x40/0x4c)
    [   36.128041] [<c085d160>] (snvs_rtc_alarm_irq_enable) from [<c08567b4>] (rtc_timer_do_work+0xd8/0x1a8)
    [   36.137291] [<c08567b4>] (rtc_timer_do_work) from [<c01441b8>] (process_one_work+0x28c/0x76c)
    [   36.145840] [<c01441b8>] (process_one_work) from [<c01446cc>] (worker_thread+0x34/0x58c)
    [   36.153961] [<c01446cc>] (worker_thread) from [<c014aee4>] (kthread+0x138/0x150)
    [   36.161388] [<c014aee4>] (kthread) from [<c0107e14>] (ret_from_fork+0x14/0x20)
    [   36.168635] rcu_sched kthread starved for 2602 jiffies! g496 c495 f0x2 RCU_GP_WAIT_FQS(3) ->state=0x0 ->cpu=0
    [   36.178564] rcu_sched       R  running task        0     8      2 0x00000000
    [   36.185664] [<c0c288b0>] (__schedule) from [<c0c29134>] (schedule+0x3c/0xa0)
    [   36.192739] [<c0c29134>] (schedule) from [<c0c2db80>] (schedule_timeout+0x78/0x4e0)
    [   36.200422] [<c0c2db80>] (schedule_timeout) from [<c01a7ab0>] (rcu_gp_kthread+0x648/0x1864)
    [   36.208800] [<c01a7ab0>] (rcu_gp_kthread) from [<c014aee4>] (kthread+0x138/0x150)
    [   36.216309] [<c014aee4>] (kthread) from [<c0107e14>] (ret_from_fork+0x14/0x20)
    
    This patch fixes by parsing the result of rtc_write_sync_lp() and
    propagating both in the probe and elsewhere. If the RTC doesn't start we
    don't proceed loading the driver and don't get into this loop mess later
    on.
    
    Fixes: 179a502f8c46 ("rtc: snvs: add Freescale rtc-snvs driver")
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Acked-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8293e6238e03a91cd74c60d2901bc0a825526b9f
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Jan 25 14:30:43 2018 +0100

    serial: altera: ensure port->regshift is honored consistently
    
    [ Upstream commit 0e254963b6ba4d63ac911e79537fea38dd03dc50 ]
    
    Most register accesses in the altera driver honor port->regshift by
    using altera_uart_writel(). There are a few accesses however that were
    missed when the driver was converted to use port->regshift and some
    others were added later in commit 4d9d7d896d77 ("serial: altera_uart:
    add earlycon support").
    
    Fixes: 2780ad42f5fe ("tty: serial: altera_uart: Use port->regshift to store bus shift")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Acked-by: Tobias Klauser <tklauser@distanz.ch>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e10bbc220e1a37ce0292217dbbc98773b330b525
Author: Vignesh R <vigneshr@ti.com>
Date:   Thu Feb 8 18:25:41 2018 +0530

    serial: 8250: Don't service RX FIFO if interrupts are disabled
    
    [ Upstream commit 2e9fe539108320820016f78ca7704a7342788380 ]
    
    Currently, data in RX FIFO is read based on UART_LSR register state even
    if RDI and RLSI interrupts are disabled in UART_IER register.
    This is because when IRQ handler is called due to TX FIFO empty event,
    RX FIFO is serviced based on UART_LSR register status instead of
    UART_IIR status. This defeats the purpose of disabling UART RX
    FIFO interrupts during throttling(see, omap_8250_throttle()) as IRQ
    handler continues to drain UART RX FIFO resulting in overflow of buffer
    at tty layer.
    Fix this by making sure that driver drains UART RX FIFO only when
    UART_IIR_RDI is set along with UART_LSR_BI or UART_LSR_DR bits.
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c447ea137037fb3dae452efc28f607020df76d0
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:29 2018 +0100

    serial: arc_uart: Fix out-of-bounds access through DT alias
    
    [ Upstream commit f9f5786987e81d166c60833edcb7d1836aa16944 ]
    
    The arc_uart_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Note that the array size is defined by a Kconfig symbol
    (CONFIG_SERIAL_ARC_NR_PORTS), so this can even be triggered using a
    legitimate DTB.
    
    Fixes: ea28fd56fcde69af ("serial/arc-uart: switch to devicetree based probing")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db69a1a58844c2227e93fc023821f67279d60573
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:30 2018 +0100

    serial: fsl_lpuart: Fix out-of-bounds access through DT alias
    
    [ Upstream commit ffab87fdecc655cc676f8be8dd1a2c5e22bd6d47 ]
    
    The lpuart_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: c9e2e946fb0ba5d2 ("tty: serial: add Freescale lpuart driver support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24182ff06635a2c5fdbe389e443d7b66416a421f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:31 2018 +0100

    serial: imx: Fix out-of-bounds access through serial port index
    
    [ Upstream commit 5673444821406dda5fc25e4b52aca419f8065a19 ]
    
    The imx_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, or from platform data, which may lead to an
    out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: ff05967a07225ab6 ("serial/imx: add of_alias_get_id() reference back")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f53807e751ef0b01e56d46d06d1f1a5828de249
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:32 2018 +0100

    serial: mxs-auart: Fix out-of-bounds access through serial port index
    
    [ Upstream commit dd345a31bfdec350d2593e6de5964e55c7f19c76 ]
    
    The auart_port[] array is indexed using a value derived from the
    "serialN" alias in DT, or from platform data, which may lead to an
    out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: 1ea6607d4cdc9179 ("serial: mxs-auart: Allow device tree probing")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491e61fe3c53d1f5cf74da10b1474cca0a6bbaaa
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:34 2018 +0100

    serial: samsung: Fix out-of-bounds access through serial port index
    
    [ Upstream commit 49ee23b71877831ac087d6083f6f397dc19c9664 ]
    
    The s3c24xx_serial_ports[] array is indexed using a value derived from
    the "serialN" alias in DT, or from an incrementing probe index, which
    may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Note that the array size is defined by a Kconfig symbol
    (CONFIG_SERIAL_SAMSUNG_UARTS), so this can even be triggered using
    a legitimate DTB or legitimate board code.
    
    Fixes: 13a9f6c64fdc55eb ("serial: samsung: Consider DT alias when probing ports")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb81dd52b425dc0a653a1c7944188c09c6be0aee
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:35 2018 +0100

    serial: sh-sci: Fix out-of-bounds access through DT alias
    
    [ Upstream commit 090fa4b0dccfa3d04e1c5ab0fe4eba16e6713895 ]
    
    The sci_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Note that the array size is defined by a Kconfig symbol
    (CONFIG_SERIAL_SH_SCI_NR_UARTS), so this can even be triggered using a
    legitimate DTB.
    
    Fixes: 97ed9790c514066b ("serial: sh-sci: Remove unused platform data capabilities field")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1e7f966521d9f264ae662394210eb44b0b10074
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:37 2018 +0100

    serial: xuartps: Fix out-of-bounds access through DT alias
    
    [ Upstream commit e7d75e18d0fc3f7193b65282b651f980c778d935 ]
    
    The cdns_uart_port[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: 928e9263492069ee ("tty: xuartps: Initialize ports according to aliases")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 604e648e8bf02b2995afa3b825a074943a5ec4ed
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jan 31 12:33:09 2018 -0500

    media: cx25821: prevent out-of-bounds read on array card
    
    [ Upstream commit 67300abdbe9f1717532aaf4e037222762716d0f6 ]
    
    Currently an out of range dev->nr is detected by just reporting the
    issue and later on an out-of-bounds read on array card occurs because
    of this. Fix this by checking the upper range of dev->nr with the size
    of array card (removes the hard coded size), move this check earlier
    and also exit with the error -ENOSYS to avoid the later out-of-bounds
    array read.
    
    Detected by CoverityScan, CID#711191 ("Out-of-bounds-read")
    
    Fixes: commit 02b20b0b4cde ("V4L/DVB (12730): Add conexant cx25821 driver")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    [hans.verkuil@cisco.com: %ld -> %zd]
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b7c44c4394621bec8ff7753089441e0ea9323ca
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Thu Feb 1 02:36:33 2018 -0500

    media: vivid: fix incorrect capabilities for radio
    
    [ Upstream commit 65243386f41d38460bfd4375d231a7c0346d0401 ]
    
    The vivid driver has two custom controls that change the behavior of RDS.
    Depending on the control setting the V4L2_CAP_READWRITE capability is toggled.
    However, after an earlier commit the capability was no longer set correctly.
    This is now fixed.
    
    Fixes: 9765a32cd8 ("vivid: set device_caps in video_device")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cfcd5bbb72319fc4cc338cbfb08ae51370ae734
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Feb 6 03:02:23 2018 -0500

    media: vb2: Fix videobuf2 to map correct area
    
    [ Upstream commit d13a0139d7874a0577b5955d6eed895517d23b72 ]
    
    Fixes vb2_vmalloc_get_userptr() to ioremap correct area.
    Since the current code does ioremap the page address, if the offset > 0,
    it does not do ioremap the last page and results in kernel panic.
    
    This fixes to pass the size + offset to ioremap so that ioremap
    can map correct area. Also, this uses __pfn_to_phys() to get the physical
    address of given PFN.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reported-by: Takao Orito <orito.takao@socionext.com>
    Reported-by: Fumihiro ATSUMI <atsumi@infinitegra.co.jp>
    Reviewed-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81173a58638f3e54e6af21ec2cc218b6cb733daf
Author: Kieran Bingham <kieran.bingham@ideasonboard.com>
Date:   Mon Jan 8 13:14:04 2018 -0500

    media: i2c: adv748x: fix HDMI field heights
    
    [ Upstream commit 9f564184e6cc21a86c26bab920afac1bab7653ff ]
    
    The ADV748x handles interlaced media using V4L2_FIELD_ALTERNATE field
    types.  The correct specification for the height on the mbus is the
    image height, in this instance, the field height.
    
    The AFE component already correctly adjusts the height on the mbus, but
    the HDMI component got left behind.
    
    Adjust the mbus height to correctly describe the image height of the
    fields when processing interlaced video for HDMI pipelines.
    
    Fixes: 3e89586a64df ("media: i2c: adv748x: add adv748x driver")
    
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93c72937a26bf899b10b2af6193f89f9c113577c
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Sun Dec 3 05:06:57 2017 -0500

    media: v4l: vsp1: Fix display stalls when requesting too many inputs
    
    [ Upstream commit 5e3e4cb5e24b92773b194aa90066170b12133bc6 ]
    
    Make sure we don't accept more inputs than the hardware can handle. This
    is a temporary fix to avoid display stall, we need to instead allocate
    the BRU or BRS to display pipelines dynamically based on the number of
    planes they each use.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d600eadf7d80edf8575462d8a0c117adbbceba52
Author: Brad Love <brad@nextdimension.cc>
Date:   Thu Jan 4 19:04:15 2018 -0500

    media: em28xx: Add Hauppauge SoloHD/DualHD bulk models
    
    [ Upstream commit f2a326c928cca1f5e36a3dceaf66e8c6b34e9cb8 ]
    
    Add additional pids to driver list
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Reviewed-by: Michael Ira Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d62c8d80f84fa4c9dba0f61b27376339afde2f35
Author: Brad Love <brad@nextdimension.cc>
Date:   Fri Jan 5 09:57:13 2018 -0500

    media: lgdt3306a: Fix a double kfree on i2c device remove
    
    [ Upstream commit 94448e21cf08b10f7dc7acdaca387594370396b0 ]
    
    Both lgdt33606a_release and lgdt3306a_remove kfree state, but _release is
    called first, then _remove operates on states members before kfree'ing it.
    This can lead to random oops/GPF/etc on USB disconnect.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53ba3526baad31528f72bd57bbc1b66378b60c3f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 16 16:52:15 2018 -0500

    media: s3c-camif: fix out-of-bounds array access
    
    [ Upstream commit a398e043637a4819a0e96467bfecaabf3224dd62 ]
    
    While experimenting with older compiler versions, I ran
    into a warning that no longer shows up on gcc-4.8 or newer:
    
    drivers/media/platform/s3c-camif/camif-capture.c: In function '__camif_subdev_try_format':
    drivers/media/platform/s3c-camif/camif-capture.c:1265:25: error: array subscript is below array bounds
    
    This is an off-by-one bug, leading to an access before the start of the
    array, while newer compilers silently assume this undefined behavior
    cannot happen and leave the loop at index 0 if no other entry matches.
    
    As Sylvester explains, we actually need to ensure that the
    value is within the range, so this reworks the loop to be
    easier to parse correctly, and an additional check to fall
    back on the first format value for any unexpected input.
    
    I found an existing gcc bug for it and added a reduced version
    of the function there.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69249#c3
    Fixes: babde1c243b2 ("[media] V4L: Add driver for S3C24XX/S3C64XX SoC series camera interface")
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ebcb461274843c4f2d7c6de68ab05caddedd091
Author: Brad Love <brad@nextdimension.cc>
Date:   Tue Mar 6 14:15:36 2018 -0500

    media: cx23885: Set subdev host data to clk_freq pointer
    
    [ Upstream commit 5ceade1d97fc6687e050c44c257382c192f56276 ]
    
    Currently clk_freq is ignored entirely, because the cx235840 driver
    configures the xtal at the chip defaults. This is an issue if a
    board is produced with a non-default frequency crystal. If clk_freq
    is not zero the cx25840 will attempt to use the setting provided,
    or fall back to defaults otherwise.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24858b9c030ae48d876f9102a142f69c696762e5
Author: Brad Love <brad@nextdimension.cc>
Date:   Tue Mar 6 14:15:37 2018 -0500

    media: cx23885: Override 888 ImpactVCBe crystal frequency
    
    [ Upstream commit 779c79d4b833ec646b0aed878da38edb45bbe156 ]
    
    Hauppauge produced a revision of ImpactVCBe using an 888,
    with a 25MHz crystal, instead of using the default third
    overtone 50Mhz crystal. This overrides that frequency so
    that the cx25840 is properly configured. Without the proper
    crystal setup the cx25840 cannot load the firmware or
    decode video.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c94830eeea533f617a0642e98dbac51214329a1
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Mon Mar 19 12:14:17 2018 -0400

    media: ov5645: add missing of_node_put() in error path
    
    [ Upstream commit 06fe932307d58108a11c3e603517dd2a73a57b80 ]
    
    The device node obtained with of_graph_get_next_endpoint() should be
    released by calling of_node_put().  But it was not released when
    v4l2_fwnode_endpoint_parse() failed.
    
    This change moves the of_node_put() call before the error check and
    fixes the issue.
    
    Cc: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Acked-by: Todor Tomov <todor.tomov@linaro.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc4b4af51c13c0aec5c0368986295eb9dcfcdab1
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Mon Feb 19 13:23:39 2018 -0500

    media: Don't let tvp5150_get_vbi() go out of vbi_ram_default array
    
    [ Upstream commit 3dd6b560dc5d59e7cb6dbda6e85dc9af7925fcf8 ]
    
    As pointed by Dan, possible values for bits[3:0] of te Line Mode Registers
    can range from 0x0 to 0xf, but the check logic allow values ranging
    from 0x0 to 0xe.
    
    As static arrays are initialized with zero, using a value without
    an explicit initializer at the array won't cause any harm.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07999bccf2e01312bc299c60aca1b18ba83626be
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Feb 11 05:44:21 2018 -0500

    media: dmxdev: fix error code for invalid ioctls
    
    [ Upstream commit a145f64c6107d3aa5a7cec9f8977d04ac2a896c9 ]
    
    Returning -EINVAL when an ioctl is not implemented is a very
    bad idea, as it is hard to distinguish from other error
    contitions that an ioctl could lead. Replace it by its
    right error code: -ENOTTY.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bc147610d1e74ca70ffb8a48d8fc44621bfc760
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:48 2018 +0100

    clk: samsung: exynos3250: Fix PLL rates
    
    [ Upstream commit a8321e7887410a2b2e80ab89d1ef7b30562658ea ]
    
    Rates declared in PLL rate tables should match exactly rates calculated
    from PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    In this patch an erroneous P value for 74176002 output frequency is also
    corrected.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fabe01cdf75445e432c7f730a6a4d082795c60a
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:49 2018 +0100

    clk: samsung: exynos5250: Fix PLL rates
    
    [ Upstream commit 2ac051eeabaa411ef89ae7cd5bb8e60cb41ad780 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated
    from PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90e14be44331243de96ad040c50abc3111a140d5
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:51 2018 +0100

    clk: samsung: exynos5433: Fix PLL rates
    
    [ Upstream commit ab0447845cffc0fd752df2ccd6b4e34006000ce4 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 256499854098069898ca1a35818961aa15c3cd83
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:50 2018 +0100

    clk: samsung: exynos5260: Fix PLL rates
    
    [ Upstream commit cdb68fbd4e7962be742c4f29475220c5bf28d8a5 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f4eef93e1abc3956f67865069df88df85c5c28e
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:52 2018 +0100

    clk: samsung: exynos7: Fix PLL rates
    
    [ Upstream commit 7e4db0c2836e892766565965207eee051c8037b9 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 264530c6ad12fbf04a5cff9461fda7b925d2e67c
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:53 2018 +0100

    clk: samsung: s3c2410: Fix PLL rates
    
    [ Upstream commit 179db533c08431f509a3823077549773d519358b ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 573dda18a809cce3ae4dc94de614cc6fe74ce176
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Mon Mar 5 11:25:58 2018 +0800

    clk: rockchip: Prevent calculating mmc phase if clock rate is zero
    
    [ Upstream commit 4bf59902b50012b1dddeeaa23b217d9c4956cdda ]
    
    The MMC sample and drv clock for rockchip platforms are derived from
    the bus clock output to the MMC/SDIO card. So it should never happens
    that the clk rate is zero given it should inherits the clock rate from
    its parent. If something goes wrong and makes the clock rate to be zero,
    the calculation would be wrong but may still make the mmc tuning process
    work luckily. However it makes people harder to debug when the following
    data transfer is unstable.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04adc8209a9a6518ce8ff545e9d97dbf6d3b8adf
Author: Marcel Ziswiler <marcel@ziswiler.com>
Date:   Fri Feb 23 00:04:51 2018 +0100

    clk: tegra: Fix pll_u rate configuration
    
    [ Upstream commit c35b518f9ba06c9de79fb3ff62eed7462d804995 ]
    
    Turns out latest upstream U-Boot does not configure/enable pll_u which
    leaves it at some default rate of 500 kHz:
    
    root@apalis-t30:~# cat /sys/kernel/debug/clk/clk_summary | grep pll_u
           pll_u                  3        3        0      500000          0
    
    Of course this won't quite work leading to the following messages:
    
    [    6.559593] usb 2-1: new full-speed USB device number 2 using tegra-
    ehci
    [   11.759173] usb 2-1: device descriptor read/64, error -110
    [   27.119453] usb 2-1: device descriptor read/64, error -110
    [   27.389217] usb 2-1: new full-speed USB device number 3 using tegra-
    ehci
    [   32.559454] usb 2-1: device descriptor read/64, error -110
    [   47.929777] usb 2-1: device descriptor read/64, error -110
    [   48.049658] usb usb2-port1: attempt power cycle
    [   48.759475] usb 2-1: new full-speed USB device number 4 using tegra-
    ehci
    [   59.349457] usb 2-1: device not accepting address 4, error -110
    [   59.509449] usb 2-1: new full-speed USB device number 5 using tegra-
    ehci
    [   70.069457] usb 2-1: device not accepting address 5, error -110
    [   70.079721] usb usb2-port1: unable to enumerate USB device
    
    Fix this by actually allowing the rate also being set from within
    the Linux kernel.
    
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99f29b5c1cc4670b3ea5e2e9013737a6201e49a5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 20 16:15:21 2018 +0100

    clk: hisilicon: mark wdt_mux_p[] as const
    
    [ Upstream commit df934cbcbff7afbc024bf05f02615917c61f6470 ]
    
    The symbol is in the __initconst section but not marked init, which
    caused a warning when building with LTO.
    
    This makes it 'const' as was obviously intended.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: c80dfd9bf54e ("clk: hisilicon: add CRG driver for Hi3516CV300 SoC")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dc1d1a8715ec6e2459f61be70b1faf43af29bf1
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Wed Mar 14 08:28:31 2018 +0800

    clk: Don't show the incorrect clock phase
    
    [ Upstream commit 1f9c63e8de3d7b377c9d74e4a17524cfb60e6384 ]
    
    It's found that the clock phase output from clk_summary is
    wrong compared to the actual phase reading from the register.
    
    cat /sys/kernel/debug/clk/clk_summary | grep sdio_sample
    sdio_sample     0        1        0 50000000          0 -22
    
    It exposes an issue that clk core, clk_core_get_phase, always
    returns the cached core->phase which should be either updated
    by calling clk_set_phase or directly from the first place the
    clk was registered.
    
    When registering the clk, the core->phase geting from ->get_phase()
    may return negative value indicating error. This is quite common
    since the clk's phase may be highly related to its parent chain,
    but it was temporarily orphan when registered, since its parent
    chains hadn't be ready at that time, so the clk drivers decide to
    return error in this case. However, if no clk_set_phase is called or
    maybe the ->set_phase() isn't even implemented, the core->phase would
    never be updated. This is wrong, and we should try to update it when
    all its parent chains are settled down, like the way of updating clock
    rate for that. But it's not deserved to complicate the code now and
    just update it anyway when calling clk_core_get_phase, which would be
    much simple and enough.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Acked-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a225a3ba32137fb61ecf13f9dbe7aeb25e55d7cb
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Wed Mar 21 10:39:19 2018 +0800

    clk: rockchip: Fix wrong parent for SDMMC phase clock for rk3228
    
    [ Upstream commit 4b0556a441dd37e598887215bc89b49a6ef525b3 ]
    
    commit c420c1e4db22 ("clk: rockchip: Prevent calculating mmc phase
    if clock rate is zero") catches one gremlin again for clk-rk3228.c
    that the parent of SDMMC phase clock should be sclk_sdmmc0, but not
    sclk_sdmmc. However, the naming of the sdmmc clocks varies in the
    manual with the card clock having the 0 while the hclk is named
    without appended 0. So standardize one one format to prevent
    confusion, as there also is only one (non-sdio) mmc controller on
    the soc.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9311d0b6b4666fed722f712a285b0a7069409f30
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Mon Feb 5 16:43:56 2018 +0100

    ASoC: samsung: i2s: Ensure the RCLK rate is properly determined
    
    [ Upstream commit 647d04f8e07afc7c3b7a42b3ee01a8b28db29631 ]
    
    If the RCLK mux clock configuration is specified in DT and no set_sysclk()
    callback is used in the sound card driver the sclk_srcrate field will remain
    set to 0, leading to an incorrect PSR divider setting.
    To fix this the frequency value is retrieved from the CLK_I2S_RCLK_SRC clock,
    so the actual RCLK mux selection is taken into account.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27cbb1df79c5079c0cf398f0164d7f5a7c38c268
Author: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date:   Fri Mar 9 11:11:17 2018 -0800

    ASoC: topology: create TLV data for dapm widgets
    
    [ Upstream commit bde8b3887add8368ecf0ca71117baf2fd56a6fc9 ]
    
    This patch adds the change required to create the TLV data
    for dapm widget kcontrols from topology. This also fixes the following
    TLV read error shown in amixer while showing the card control contents.
    "amixer: Control hw:1 element TLV read error: No such device or address"
    
    Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbeec965b8d1ca4005f2b63f70fd6ed54a147027
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Wed Mar 14 17:41:13 2018 +0100

    ASoC: samsung: odroid: Fix 32000 sample rate handling
    
    [ Upstream commit 1d22c337dc8f3a25638f7262e7bcb5729a34d140 ]
    
    In case of sample rates lower than 44100 currently there is too low MCLK
    frequency set for the CODEC. Playback fails with following errors:
    
    $ speaker-test -c2 -t sine -f 1500 -l2 -r 32000
    
    Sine wave rate is 1500.0000Hz
    Rate set to 32000Hz (requested 32000Hz)
    Buffer size range from 128 to 131072
    Period size range from 64 to 65536
    Using max buffer size 131072
    Periods = 4
    Unable to set hw params for playback: Invalid argument
    Setting of hwparams failed: Invalid argument
    
    [  497.883700] max98090 1-0010: Invalid master clock frequency
    
    To fix this the I2S root clock's frequency is increased, depending
    on sampling rate.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3bbda7bad73d900fcc49528712305331a1bd491
Author: Ezequiel Garcia <ezequiel@collabora.co.uk>
Date:   Tue Mar 20 13:03:31 2018 -0300

    ASoC: rockchip: rk3288-hdmi-analog: Select needed codecs
    
    [ Upstream commit b1d0db067fbe2598d62b248beea5d705a0ea7642 ]
    
    The driver does not select all the codec drivers that needs.
    Fix it by selecting the analog and HDMI codecs.
    
    Cc: Sjoerd Simons <sjoerd.simons@collabora.co.uk>
    Signed-off-by: Ezequiel Garcia <ezequiel@collabora.co.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98ffb5cf47e4d0b9c0bf0f53e20cff00d1ba7ee2
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Tue Feb 20 16:19:05 2018 +0200

    ASoC: hdmi-codec: Fix module unloading caused kernel crash
    
    [ Upstream commit 5e558f8afaec8957932b1dbe5aeff800f9fc6957 ]
    
    The hcp->chmap_info must not be freed up in the hdmi_codec_remove()
    function as it leads to kernel crash due ALSA core's
    pcm_chmap_ctl_private_free() is trying to free it up again when the card
    destroyed via snd_card_free.
    
    Commit cd6111b26280a ("ASoC: hdmi-codec: add channel mapping control")
    should not have added the kfree(hcp->chmap_info); to the hdmi_codec_remove
    function.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Reviewed-by: Jyri Sarha <jsarha@ti.com>
    Tested-by: Jyri Sarha <jsarha@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48e835f89769a1fcb1cf15259c734600891d87f5
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Jan 30 15:58:45 2018 -0800

    scsi: lpfc: Fix frequency of Release WQE CQEs
    
    [ Upstream commit 04673e38f56b30cd39b1fa0f386137d818b17781 ]
    
    The driver controls when the hardware sends completions that communicate
    consumption of elements from the WQ. This is done by setting a WQEC bit
    on a WQE.
    
    The current driver sets it on every Nth WQE posting. However, the driver
    isn't clearing the bit if the WQE is reused. Thus, if the queue depth
    isn't evenly divisible by N, with enough time, it can be set on every
    element, creating a lot of overhead and risking CQ full conditions.
    
    Correct by clearing the bit when not setting it on an Nth element.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fd4131a9fcc0ad8a60554c0505804b258362552
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Jan 30 15:58:54 2018 -0800

    scsi: lpfc: Fix soft lockup in lpfc worker thread during LIP testing
    
    [ Upstream commit 161df4f09987ae2e9f0f97f0b38eee298b4a39ff ]
    
    During link bounce testing in a point-to-point topology, the host may
    enter a soft lockup on the lpfc_worker thread:
    
        Call Trace:
         lpfc_work_done+0x1f3/0x1390 [lpfc]
         lpfc_do_work+0x16f/0x180 [lpfc]
         kthread+0xc7/0xe0
         ret_from_fork+0x3f/0x70
    
    The driver was simultaneously setting a combination of flags that caused
    lpfc_do_work()to effectively spin between slow path work and new event
    data, causing the lockup.
    
    Ensure in the typical wq completions, that new event data flags are set
    if the slow path flag is running. The slow path will eventually
    reschedule the wq handling.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5d331cdfcb27e6c5dd5c10ac0452f7442bbc6c5
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Jan 30 15:58:55 2018 -0800

    scsi: lpfc: Fix issue_lip if link is disabled
    
    [ Upstream commit 2289e9598dde9705400559ca2606fb8c145c34f0 ]
    
    The driver ignored checks on whether the link should be kept
    administratively down after a link bounce. Correct the checks.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9bcbce385ed5c496a14991039bbdfa69992ae12
Author: Wilfried Weissmann <wilfried.weissmann@gmx.at>
Date:   Fri Feb 23 20:52:34 2018 +0100

    scsi: mvsas: fix wrong endianness of sgpio api
    
    [ Upstream commit e75fba9c0668b3767f608ea07485f48d33c270cf ]
    
    This patch fixes the byte order of the SGPIO api and brings it back in
    sync with ledmon v0.80 and above.
    
    [mkp: added missing SoB and fixed whitespace]
    
    Signed-off-by: Wilfried Weissmann <wilfried.weissmann@gmx.at>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e315f31faefefdf3757529642884e3f87294d3d
Author: Douglas Gilbert <dgilbert@interlog.com>
Date:   Tue Mar 6 22:19:49 2018 -0500

    scsi: core: Make SCSI Status CONDITION MET equivalent to GOOD
    
    [ Upstream commit 1875ede02ed5e176a18dccbca84abc28d5b3e141 ]
    
    The SCSI PRE-FETCH (10 or 16) command is present both on hard disks
    and some SSDs. It is useful when the address of the next block(s) to
    be read is known but it is not following the LBA of the current READ
    (so read-ahead won't help). It returns two "good" SCSI Status values.
    If the requested blocks have fitted (or will most likely fit (when
    the IMMED bit is set)) into the disk's cache, it returns CONDITION
    MET. If it didn't (or will not) fit then it returns GOOD status.
    
    The goal of this patch is to stop the SCSI subsystem treating the
    CONDITION MET SCSI status as an error. The current state makes the
    PRE-FETCH command effectively unusable via pass-throughs.
    
    Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3de235c7753b84b18eb806e3cea76560681eda03
Author: Dave Carroll <david.carroll@microsemi.com>
Date:   Tue Apr 3 15:50:42 2018 -0600

    scsi: aacraid: Insure command thread is not recursively stopped
    
    [ Upstream commit 1c6b41fb92936fa5facea464d5d7cbf855966d04 ]
    
    If a recursive IOP_RESET is invoked, usually due to the eh_thread
    handling errors after the first reset, be sure we flag that the command
    thread has been stopped to avoid an Oops of the form;
    
     [ 336.620256] CPU: 28 PID: 1193 Comm: scsi_eh_0 Kdump: loaded Not tainted 4.14.0-49.el7a.ppc64le #1
     [ 336.620297] task: c000003fd630b800 task.stack: c000003fd61a4000
     [ 336.620326] NIP: c000000000176794 LR: c00000000013038c CTR: c00000000024bc10
     [ 336.620361] REGS: c000003fd61a7720 TRAP: 0300 Not tainted (4.14.0-49.el7a.ppc64le)
     [ 336.620395] MSR: 9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE> CR: 22084022 XER: 20040000
     [ 336.620435] CFAR: c000000000130388 DAR: 0000000000000000 DSISR: 40000000 SOFTE: 1
     [ 336.620435] GPR00: c00000000013038c c000003fd61a79a0 c0000000014c7e00 0000000000000000
     [ 336.620435] GPR04: 000000000000000c 000000000000000c 9000000000009033 0000000000000477
     [ 336.620435] GPR08: 0000000000000477 0000000000000000 0000000000000000 c008000010f7d940
     [ 336.620435] GPR12: c00000000024bc10 c000000007a33400 c0000000001708a8 c000003fe3b881d8
     [ 336.620435] GPR16: c000003fe3b88060 c000003fd61a7d10 fffffffffffff000 000000000000001e
     [ 336.620435] GPR20: 0000000000000001 c000000000ebf1a0 0000000000000001 c000003fe3b88000
     [ 336.620435] GPR24: 0000000000000003 0000000000000002 c000003fe3b88840 c000003fe3b887e8
     [ 336.620435] GPR28: c000003fe3b88000 c000003fc8181788 0000000000000000 c000003fc8181700
     [ 336.620750] NIP [c000000000176794] exit_creds+0x34/0x160
     [ 336.620775] LR [c00000000013038c] __put_task_struct+0x8c/0x1f0
     [ 336.620804] Call Trace:
     [ 336.620817] [c000003fd61a79a0] [c000003fe3b88000] 0xc000003fe3b88000 (unreliable)
     [ 336.620853] [c000003fd61a79d0] [c00000000013038c] __put_task_struct+0x8c/0x1f0
     [ 336.620889] [c000003fd61a7a00] [c000000000171418] kthread_stop+0x1e8/0x1f0
     [ 336.620922] [c000003fd61a7a40] [c008000010f7448c] aac_reset_adapter+0x14c/0x8d0 [aacraid]
     [ 336.620959] [c000003fd61a7b00] [c008000010f60174] aac_eh_host_reset+0x84/0x100 [aacraid]
     [ 336.621010] [c000003fd61a7b30] [c000000000864f24] scsi_try_host_reset+0x74/0x180
     [ 336.621046] [c000003fd61a7bb0] [c000000000867ac0] scsi_eh_ready_devs+0xc00/0x14d0
     [ 336.625165] [c000003fd61a7ca0] [c0000000008699e0] scsi_error_handler+0x550/0x730
     [ 336.632101] [c000003fd61a7dc0] [c000000000170a08] kthread+0x168/0x1b0
     [ 336.639031] [c000003fd61a7e30] [c00000000000b528] ret_from_kernel_thread+0x5c/0xb4
     [ 336.645971] Instruction dump:
     [ 336.648743] 384216a0 7c0802a6 fbe1fff8 f8010010 f821ffd1 7c7f1b78 60000000 60000000
     [ 336.657056] 39400000 e87f0838 f95f0838 7c0004ac <7d401828> 314affff 7d40192d 40c2fff4
     [ 336.663997] -[ end trace 4640cf8d4945ad95 ]-
    
    So flag when the thread is stopped by setting the thread pointer to NULL.
    
    Signed-off-by: Dave Carroll <david.carroll@microsemi.com>
    Reviewed-by: Raghava Aditya Renukunta <raghavaaditya.renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10859964e0e1591860171b49eed5189f5cd465ee
Author: Jianchao Wang <jianchao.w.wang@oracle.com>
Date:   Wed Mar 7 20:29:03 2018 +0800

    scsi: iscsi_tcp: set BDI_CAP_STABLE_WRITES when data digest enabled
    
    [ Upstream commit 89d0c804392bb962553f23dc4c119d11b6bd1675 ]
    
    iscsi tcp will first send out data, then calculate and send data
    digest. If we don't have BDI_CAP_STABLE_WRITES, the page cache will be
    written in spite of the on going writeback. Consequently, wrong digest
    will be got and sent to target.
    
    To fix this, set BDI_CAP_STABLE_WRITES when data digest is enabled
    in iscsi_tcp .slave_configure callback.
    
    Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
    Acked-by: Chris Leech <cleech@redhat.com>
    Acked-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1a706fdb5a89e1e432f2fc2e3e48a8eb9a9fbb6
Author: Jeremy Cline <jeremy@jcline.org>
Date:   Tue Mar 6 21:47:32 2018 +0000

    scsi: sd: Keep disk read-only when re-reading partition
    
    [ Upstream commit 20bd1d026aacc5399464f8328f305985c493cde3 ]
    
    If the read-only flag is true on a SCSI disk, re-reading the partition
    table sets the flag back to false.
    
    To observe this bug, you can run:
    
    1. blockdev --setro /dev/sda
    2. blockdev --rereadpt /dev/sda
    3. blockdev --getro /dev/sda
    
    This commit reads the disk's old state and combines it with the device
    disk-reported state rather than unconditionally marking it as RW.
    
    Reported-by: Li Ning <lining916740672@icloud.com>
    Signed-off-by: Jeremy Cline <jeremy@jcline.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bb6b7decff05262b04c7ef62b6d3b311420bc37
Author: Hannes Reinecke <hare@suse.de>
Date:   Mon Feb 26 15:26:01 2018 +0100

    scsi: mpt3sas: Do not mark fw_event workqueue as WQ_MEM_RECLAIM
    
    [ Upstream commit 864449eea7c600596e305ffdc4a6a846414b222c ]
    
    The firmware event workqueue should not be marked as WQ_MEM_RECLAIM
    as it's doesn't need to make forward progress under memory pressure.
    In the current state it will result in a deadlock if the device had been
    forcefully removed.
    
    Cc: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Cc: Suganath Prabu Subramani <suganath-prabu.subramani@broadcom.com>
    Acked-by: Sreekanth Reddy <Sreekanth.Reddy@broadcom.com>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbc80171609276ae68c8d7f271355d0fa84bb44c
Author: Manish Rangankar <manish.rangankar@cavium.com>
Date:   Mon Feb 26 01:01:17 2018 -0800

    scsi: qedi: Fix kernel crash during port toggle
    
    [ Upstream commit 967823d6c3980a30e214b92bfe6a101e7b46d025 ]
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000100
    
    [  985.596918] IP: _raw_spin_lock_bh+0x17/0x30
    [  985.601581] PGD 0 P4D 0
    [  985.604405] Oops: 0002 [#1] SMP
    :
    [  985.704533] CPU: 16 PID: 1156 Comm: qedi_thread/16 Not tainted 4.16.0-rc2 #1
    [  985.712397] Hardware name: Dell Inc. PowerEdge R730/0599V5, BIOS 2.4.3 01/17/2017
    [  985.720747] RIP: 0010:_raw_spin_lock_bh+0x17/0x30
    [  985.725996] RSP: 0018:ffffa4b1c43d3e10 EFLAGS: 00010246
    [  985.731823] RAX: 0000000000000000 RBX: ffff94a31bd03000 RCX: 0000000000000000
    [  985.739783] RDX: 0000000000000001 RSI: ffff94a32fa16938 RDI: 0000000000000100
    [  985.747744] RBP: 0000000000000004 R08: 0000000000000000 R09: 0000000000000a33
    [  985.755703] R10: 0000000000000000 R11: ffffa4b1c43d3af0 R12: 0000000000000000
    [  985.763662] R13: ffff94a301f40818 R14: 0000000000000000 R15: 000000000000000c
    [  985.771622] FS:  0000000000000000(0000) GS:ffff94a32fa00000(0000) knlGS:0000000000000000
    [  985.780649] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  985.787057] CR2: 0000000000000100 CR3: 000000067a009006 CR4: 00000000001606e0
    [  985.795017] Call Trace:
    [  985.797747]  qedi_fp_process_cqes+0x258/0x980 [qedi]
    [  985.803294]  qedi_percpu_io_thread+0x10f/0x1b0 [qedi]
    [  985.808931]  kthread+0xf5/0x130
    [  985.812434]  ? qedi_free_uio+0xd0/0xd0 [qedi]
    [  985.817298]  ? kthread_bind+0x10/0x10
    [  985.821372]  ? do_syscall_64+0x6e/0x1a0
    
    Signed-off-by: Manish Rangankar <manish.rangankar@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc6cb0cb91d51dcc501bf8e62029b86c24d8e7e0
Author: Manish Rangankar <manish.rangankar@cavium.com>
Date:   Sun Feb 11 22:48:41 2018 -0800

    scsi: qla4xxx: skip error recovery in case of register disconnect.
    
    [ Upstream commit 1bc5ad3a6acdcf56f83272f2de1cd2389ea9e9e2 ]
    
    A system crashes when continuously removing/re-adding the storage
    controller.
    
    Signed-off-by: Manish Rangankar <manish.rangankar@cavium.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b24fd4cd949106826bfe54c79df20d514c5a975c
Author: Meelis Roos <mroos@linux.ee>
Date:   Fri Feb 9 08:57:44 2018 +0200

    scsi: aacraid: fix shutdown crash when init fails
    
    [ Upstream commit 00c20cdc79259c6c5bf978b21af96c2d3edb646d ]
    
    When aacraid init fails with "AAC0: adapter self-test failed.", shutdown
    leads to UBSAN warning and then oops:
    
    [154316.118423] ================================================================================
    [154316.118508] UBSAN: Undefined behaviour in drivers/scsi/scsi_lib.c:2328:27
    [154316.118566] member access within null pointer of type 'struct Scsi_Host'
    [154316.118631] CPU: 2 PID: 14530 Comm: reboot Tainted: G        W        4.15.0-dirty #89
    [154316.118701] Hardware name: Hewlett Packard HP NetServer/HP System Board, BIOS 4.06.46 PW 06/25/2003
    [154316.118774] Call Trace:
    [154316.118848]  dump_stack+0x48/0x65
    [154316.118916]  ubsan_epilogue+0xe/0x40
    [154316.118976]  __ubsan_handle_type_mismatch+0xfb/0x180
    [154316.119043]  scsi_block_requests+0x20/0x30
    [154316.119135]  aac_shutdown+0x18/0x40 [aacraid]
    [154316.119196]  pci_device_shutdown+0x33/0x50
    [154316.119269]  device_shutdown+0x18a/0x390
    [...]
    [154316.123435] BUG: unable to handle kernel NULL pointer dereference at 000000f4
    [154316.123515] IP: scsi_block_requests+0xa/0x30
    
    This is because aac_shutdown() does
    
            struct Scsi_Host *shost = pci_get_drvdata(dev);
            scsi_block_requests(shost);
    
    and that assumes shost has been assigned with pci_set_drvdata().
    
    However, pci_set_drvdata(pdev, shost) is done in aac_probe_one() far
    after bailing out with error from calling the init function
    ((*aac_drivers[index].init)(aac)), and when the init function fails, no
    error is returned from aac_probe_one() so PCI layer assumes there is
    driver attached, and tries to shut it down later.
    
    Fix it by returning error from aac_probe_one() when card-specific init
    function fails.
    
    This fixes reboot on my HP NetRAID-4M with dead battery.
    
    Signed-off-by: Meelis Roos <mroos@linux.ee>
    Reviewed-by: Dave Carroll <david.carroll@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 942cb7bd774ae1c66e79d2ae720c1e1eee5ba0be
Author: Andrew Vasquez <andrew.vasquez@cavium.com>
Date:   Wed Feb 7 08:12:35 2018 -0800

    scsi: qedi: Fix truncation of CHAP name and secret
    
    [ Upstream commit 1683ce57f568c7c92d53e9234624a53554a29cd5 ]
    
    The data in NVRAM is not guaranteed to be NUL terminated.  Since
    snprintf expects byte-stream to accommodate null byte, the CHAP secret
    is truncated.  Use sprintf instead of snprintf to fix the truncation of
    CHAP name and secret.
    
    Signed-off-by: Andrew Vasquez <andrew.vasquez@cavium.com>
    Signed-off-by: Nilesh Javali <nilesh.javali@cavium.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Acked-by: Chris Leech <cleech@redhat.com>
    Acked-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9eb1e1031a075570468bc03c1b72fa0c2e22a69
Author: Michael Kelley (EOSG) <Michael.H.Kelley@microsoft.com>
Date:   Wed Jan 24 22:49:57 2018 +0000

    scsi: storvsc: Increase cmd_per_lun for higher speed devices
    
    [ Upstream commit cabe92a55e3a12005a4ac4d3954c9a174b0efe2a ]
    
    Increase cmd_per_lun to allow more I/Os in progress per device,
    particularly for NVMe's.  The Hyper-V host side can handle the higher
    count with no issues.
    
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Acked-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ad71103e12e2b8da7f0fbcc8d69f0aa3409b523
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jan 25 08:24:29 2018 -0800

    scsi: qla2xxx: Avoid triggering undefined behavior in qla2x00_mbx_completion()
    
    [ Upstream commit c02189e12ce3bf3808cb880569d3b10249f50bd9 ]
    
    A left shift must shift less than the bit width of the left argument.
    Avoid triggering undefined behavior if ha->mbx_count == 32.
    
    This patch avoids that UBSAN reports the following complaint:
    
    UBSAN: Undefined behaviour in drivers/scsi/qla2xxx/qla_isr.c:275:14
    shift exponent 32 is too large for 32-bit type 'int'
    Call Trace:
     dump_stack+0x4e/0x6c
     ubsan_epilogue+0xd/0x3b
     __ubsan_handle_shift_out_of_bounds+0x112/0x14c
     qla2x00_mbx_completion+0x1c5/0x25d [qla2xxx]
     qla2300_intr_handler+0x1ea/0x3bb [qla2xxx]
     qla2x00_mailbox_command+0x77b/0x139a [qla2xxx]
     qla2x00_mbx_reg_test+0x83/0x114 [qla2xxx]
     qla2x00_chip_diag+0x354/0x45f [qla2xxx]
     qla2x00_initialize_adapter+0x2c2/0xa4e [qla2xxx]
     qla2x00_probe_one+0x1681/0x392e [qla2xxx]
     pci_device_probe+0x10b/0x1f1
     driver_probe_device+0x21f/0x3a4
     __driver_attach+0xa9/0xe1
     bus_for_each_dev+0x6e/0xb5
     driver_attach+0x22/0x3c
     bus_add_driver+0x1d1/0x2ae
     driver_register+0x78/0x130
     __pci_register_driver+0x75/0xa8
     qla2x00_module_init+0x21b/0x267 [qla2xxx]
     do_one_initcall+0x5a/0x1e2
     do_init_module+0x9d/0x285
     load_module+0x20db/0x38e3
     SYSC_finit_module+0xa8/0xbc
     SyS_finit_module+0x9/0xb
     do_syscall_64+0x77/0x271
     entry_SYSCALL64_slow_path+0x25/0x25
    
    Reported-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62d16de3109f8dff76f97b58d66ce502970b2f3f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jan 25 17:27:27 2018 +0300

    scsi: mptfusion: Add bounds check in mptctl_hp_targetinfo()
    
    [ Upstream commit a7043e9529f3c367cc4d82997e00be034cbe57ca ]
    
    My static checker complains about an out of bounds read:
    
        drivers/message/fusion/mptctl.c:2786 mptctl_hp_targetinfo()
        error: buffer overflow 'hd->sel_timeout' 255 <= u32max.
    
    It's true that we probably should have a bounds check here.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bf213d90bb2c25d1f36811d14f239126764b130
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jan 25 17:13:40 2018 +0300

    scsi: sym53c8xx_2: iterator underflow in sym_getsync()
    
    [ Upstream commit e6f791d95313c85f3dd4a26141e28e50ae9aa0ae ]
    
    We wanted to exit the loop with "div" set to zero, but instead, if we
    don't hit the break then "div" is -1 when we finish the loop.  It leads
    to an array underflow a few lines later.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Acked-by: Matthew Wilcox <mawilcox@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1ac3da8431afd57a3d08e24b8eb460e6255bf99
Author: Chad Dupuis <chad.dupuis@cavium.com>
Date:   Wed Jan 24 08:07:06 2018 -0800

    scsi: bnx2fc: Fix check in SCSI completion handler for timed out request
    
    [ Upstream commit ecf7ff49945f5741fa1da112f994939f942031d3 ]
    
    When a request times out we set the io_req flag BNX2FC_FLAG_IO_COMPL so
    that if a subsequent completion comes in on that task ID we will ignore
    it.  The issue is that in the check for this flag there is a missing
    return so we will continue to process a request which may have already
    been returned to the ownership of the SCSI layer.  This can cause
    unpredictable results.
    
    Solution is to add in the missing return.
    
    [mkp: typo plus title shortening]
    
    Signed-off-by: Chad Dupuis <chad.dupuis@cavium.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Tested-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af9930622461584c82aeec6843de97b3495ff40a
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Wed Jan 24 09:52:35 2018 +0530

    scsi: ufs: Enable quirk to ignore sending WRITE_SAME command
    
    [ Upstream commit 84af7e8b895088d89f246d6b0f82717fafdebf61 ]
    
    WRITE_SAME command is not supported by UFS. Enable a quirk for the upper
    level drivers to not send WRITE SAME command.
    
    [mkp: botched patch, applied by hand]
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0ef004e86cf7ddc9498a4db4d9624d3fd5b3c07
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Tue Jan 23 11:05:21 2018 -0800

    scsi: qla2xxx: Fix memory corruption during hba reset test
    
    [ Upstream commit 2ce87cc5b269510de9ca1185ca8a6e10ec78c069 ]
    
    This patch fixes memory corrpution while performing HBA Reset test.
    
    Following stack trace is seen:
    
    [  466.397219] BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
    [  466.433669] IP: [<ffffffffc06f5dd0>] qlt_free_session_done+0x260/0x5f0 [qla2xxx]
    [  466.467731] PGD 0
    [  466.476718] Oops: 0000 [#1] SMP
    
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59ad4bb717141ee814db7843835c13e11032ed41
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Fri Jan 19 16:22:05 2018 +0100

    scsi: mpt3sas: fix an out of bound write
    
    [ Upstream commit 4a8842de8db4953fdda7866626b78b12fb8adb97 ]
    
    cpu_msix_table is allocated to store online cpus, but pci_irq_get_affinity
    may return cpu_possible_mask which is then used to access cpu_msix_table.
    That causes bad user experience.  Fix limits access to only online cpus,
    I've also added an additional test to protect from an unlikely change in
    cpu_online_mask.
    
    [mkp: checkpatch]
    
    Fixes: 1d55abc0e98a ("scsi: mpt3sas: switch to pci_alloc_irq_vectors")
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Acked-by: Suganath Prabu Subramani <suganath-prabu.subramani@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b2a92910c1968d2922f07b2a44a6a51d63ef6d7
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Tue Feb 13 09:26:55 2018 +0100

    crypto: inside-secure - fix the invalidation step during cra_exit
    
    [ Upstream commit b7007dbccd92f7b8c00e590020bee542a48c6a2c ]
    
    When exiting a transformation, the cra_exit() helper is called in each
    driver providing one. The Inside Secure SafeXcel driver has one, which
    is responsible of freeing some areas and of sending one invalidation
    request to the crypto engine, to invalidate the context that was used
    during the transformation.
    
    We could see in some setups (when lots of transformations were being
    used with a short lifetime, and hence lots of cra_exit() calls) NULL
    pointer dereferences and other weird issues. All these issues were
    coming from accessing the tfm context.
    
    The issue is the invalidation request completion is checked using a
    wait_for_completion_interruptible() call in both the cipher and hash
    cra_exit() helpers. In some cases this was interrupted while the
    invalidation request wasn't processed yet. And then cra_exit() returned,
    and its caller was freeing the tfm instance. Only then the request was
    being handled by the SafeXcel driver, which lead to the said issues.
    
    This patch fixes this by using wait_for_completion() calls in these
    specific cases.
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c787fb6bdac2045494fa240ab6687f72b7fa0d4a
Author: Peter Robinson <pbrobinson@gmail.com>
Date:   Sun Feb 11 23:15:37 2018 +0000

    crypto: sunxi-ss - Add MODULE_ALIAS to sun4i-ss
    
    [ Upstream commit 7c73cf4cc2ac16465f5102437dc0a12d66671bd6 ]
    
    The MODULE_ALIAS is required to enable the sun4i-ss driver to load
    automatically when built at a module. Tested on a Cubietruck.
    
    Fixes: 6298e948215f ("crypto: sunxi-ss - Add Allwinner Security System crypto accelerator")
    Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d03a0a61dc82f27fcb56561992f564f2ebc1e4b3
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Tue Feb 13 09:26:52 2018 +0100

    crypto: inside-secure - fix the extra cache computation
    
    [ Upstream commit c1a8fa6e240ed4b99778d48ab790743565cb61c8 ]
    
    This patch fixes the extra cache computation when the queued data is a
    multiple of a block size. This fixes the hash support in some cases.
    
    Fixes: 809778e02cd4 ("crypto: inside-secure - fix hash when length is a multiple of a block")
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6df26587d22d69b3f8310303f11f57199a738872
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Tue Feb 13 09:26:53 2018 +0100

    crypto: inside-secure - fix the cache_len computation
    
    [ Upstream commit 666a9c70b04fccabde5cea5e680ae1ae92460a62 ]
    
    This patch fixes the cache length computation as cache_len could end up
    being a negative value. The check between the queued size and the
    block size is updated to reflect the caching mechanism which can cache
    up to a full block size (included!).
    
    Fixes: 809778e02cd4 ("crypto: inside-secure - fix hash when length is a multiple of a block")
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a04b30fd74a1b00f9d8fa010bee5cde37aaa9803
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Tue Feb 13 09:26:54 2018 +0100

    crypto: inside-secure - do not process request if no command was issued
    
    [ Upstream commit 95831ceafc0de7d94a5fe86ebb1c2042317cc2cd ]
    
    This patch adds a check in the SafeXcel dequeue function, to avoid
    processing request further if no hardware command was issued. This can
    happen in certain cases where the ->send() function caches all the data
    that would have been send.
    
    Fixes: 809778e02cd4 ("crypto: inside-secure - fix hash when length is a multiple of a block")
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41b6f0ffb3ac1d486bcd2545f0b1d25189d78695
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Feb 23 23:33:07 2018 +0100

    crypto: ccp - don't disable interrupts while setting up debugfs
    
    [ Upstream commit 79eb382b5e06a6dca5806465d7195d686a463ab0 ]
    
    I don't why we need take a single write lock and disable interrupts
    while setting up debugfs. This is what what happens when we try anyway:
    
    |ccp 0000:03:00.2: enabling device (0000 -> 0002)
    |BUG: sleeping function called from invalid context at kernel/locking/rwsem.c:69
    |in_atomic(): 1, irqs_disabled(): 1, pid: 3, name: kworker/0:0
    |irq event stamp: 17150
    |hardirqs last  enabled at (17149): [<0000000097a18c49>] restore_regs_and_return_to_kernel+0x0/0x23
    |hardirqs last disabled at (17150): [<000000000773b3a9>] _raw_write_lock_irqsave+0x1b/0x50
    |softirqs last  enabled at (17148): [<0000000064d56155>] __do_softirq+0x3b8/0x4c1
    |softirqs last disabled at (17125): [<0000000092633c18>] irq_exit+0xb1/0xc0
    |CPU: 0 PID: 3 Comm: kworker/0:0 Not tainted 4.16.0-rc2+ #30
    |Workqueue: events work_for_cpu_fn
    |Call Trace:
    | dump_stack+0x7d/0xb6
    | ___might_sleep+0x1eb/0x250
    | down_write+0x17/0x60
    | start_creating+0x4c/0xe0
    | debugfs_create_dir+0x9/0x100
    | ccp5_debugfs_setup+0x191/0x1b0
    | ccp5_init+0x8a7/0x8c0
    | ccp_dev_init+0xb8/0xe0
    | sp_init+0x6c/0x90
    | sp_pci_probe+0x26e/0x590
    | local_pci_probe+0x3f/0x90
    | work_for_cpu_fn+0x11/0x20
    | process_one_work+0x1ff/0x650
    | worker_thread+0x1d4/0x3a0
    | kthread+0xfe/0x130
    | ret_from_fork+0x27/0x50
    
    If any locking is required, a simple mutex will do it.
    
    Cc: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Acked-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 223ba92a80594ed6c071b39402660ee07937ac8a
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Fri Feb 23 10:01:40 2018 +0100

    crypto: atmel-aes - fix the keys zeroing on errors
    
    [ Upstream commit 5d804a5157dbaa64872a675923ae87161165c66b ]
    
    The Atmel AES driver uses memzero_explicit on the keys on error, but the
    variable zeroed isn't the right one because of a typo. Fix this by using
    the right variable.
    
    Fixes: 89a82ef87e01 ("crypto: atmel-authenc - add support to authenc(hmac(shaX), Y(aes)) modes")
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 173c55493b8184623f415799aac8c62d0c5574b6
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Mon Feb 26 14:45:12 2018 +0100

    crypto: inside-secure - wait for the request to complete if in the backlog
    
    [ Upstream commit 4dc5475ae0375ea4f9283dfd9b2ddc91b20d4c4b ]
    
    This patch updates the safexcel_hmac_init_pad() function to also wait
    for completion when the digest return code is -EBUSY, as it would mean
    the request is in the backlog to be processed later.
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Suggested-by: Ofer Heifetz <oferh@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43624647a97c113e71ab23775b295ba0cccf0319
Author: NeilBrown <neilb@suse.com>
Date:   Fri Feb 23 09:09:33 2018 +1100

    staging: lustre: lmv: correctly iput lmo_root
    
    [ Upstream commit 17556cdbe6ed70a6a20e597b228628f7f34387f8 ]
    
    Commit 8f18c8a48b73 ("staging: lustre: lmv: separate master object
    with master stripe") changed how lmo_root inodes were managed,
    particularly when LMV_HASH_FLAG_MIGRATION is not set.
    Previously lsm_md_oinfo[0].lmo_root was always a borrowed
    inode reference and didn't need to by iput().
    Since the change, that special case only applies when
    LMV_HASH_FLAG_MIGRATION is set
    
    In the upstream (lustre-release) version of this patch [Commit
    60e07b972114 ("LU-4690 lod: separate master object with master
    stripe")] the for loop in the lmv_unpack_md() was changed to count
    from 0 and to ignore entry 0 if LMV_HASH_FLAG_MIGRATION is set.
    In the patch that got applied to Linux, that change was missing,
    so lsm_md_oinfo[0].lmo_root is never iput().
    This results in a "VFS: Busy inodes" warning at unmount.
    
    Fixes: 8f18c8a48b73 ("staging: lustre: lmv: separate master object with master stripe")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Reviewed-by: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 281bb7920cc0cd3e3bbe06b48a3d42b2dbeaa3cc
Author: Quytelda Kahja <quytelda@tamalin.org>
Date:   Wed Feb 28 21:19:07 2018 -0800

    staging: ks7010: Use constants from ieee80211_eid instead of literal ints.
    
    [ Upstream commit dc13498ab47fdfae3cda4df712beb2e4244b3fe0 ]
    
    The case statement in get_ap_information() should not use literal integers
    to parse information element IDs when these values are provided by name
    in 'enum ieee80211_eid' in the header 'linux/ieee80211.h'.
    
    Signed-off-by: Quytelda Kahja <quytelda@tamalin.org>
    Reviewed-by: Tobin C. Harding <me@tobin.cc>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5ae597ed13da51d203adea4deb524728c45da71
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Feb 28 11:28:49 2018 +0000

    staging: rtl8192u: return -ENOMEM on failed allocation of priv->oldaddr
    
    [ Upstream commit e1a7418529e33bc4efc346324557251a16a3e79b ]
    
    Currently the allocation of priv->oldaddr is not null checked which will
    lead to subsequent errors when accessing priv->oldaddr.  Fix this with
    a null pointer check and a return of -ENOMEM on allocation failure.
    
    Detected with Coccinelle:
    drivers/staging/rtl8192u/r8192U_core.c:1708:2-15: alloc with no test,
    possible model on line 1723
    
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20b9506df1b40367c782bd98a77497e3021baaa1
Author: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date:   Mon Feb 26 10:28:06 2018 -0600

    staging: fsl-dpaa2/eth: Fix incorrect casts
    
    [ Upstream commit 75c583ab9709692a60871d4719006391cde8dc1d ]
    
    The DPAA2 Ethernet driver incorrectly assumes virtual addresses
    are always 64b long, which causes compiler errors when building
    for a 32b platform.
    
    Fix this by using explicit casts to uintptr_t where necessary.
    
    Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff8eb22e5bb83ffc8fb3e633711cf3fc785dd60f
Author: NeilBrown <neilb@suse.com>
Date:   Fri Mar 2 10:31:25 2018 +1100

    staging: lustre: fix bug in osc_enter_cache_try
    
    [ Upstream commit 2fab9faf9b27298c4536c1c1b14072ab18b8f80b ]
    
    The lustre-release patch commit bdc5bb52c554 ("LU-4933 osc:
    Automatically increase the max_dirty_mb") changed
    
    -       if (cli->cl_dirty + PAGE_CACHE_SIZE <= cli->cl_dirty_max &&
    +       if (cli->cl_dirty_pages < cli->cl_dirty_max_pages &&
    
    When this patch landed in Linux a couple of years later, it landed as
    
    -       if (cli->cl_dirty + PAGE_SIZE <= cli->cl_dirty_max &&
    +       if (cli->cl_dirty_pages <= cli->cl_dirty_max_pages &&
    
    which is clearly different ('<=' vs '<'), and allows cl_dirty_pages to
    increase beyond cl_dirty_max_pages - which causes a latter assertion
    to fails.
    
    Fixes: 3147b268400a ("staging: lustre: osc: Automatically increase the max_dirty_mb")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf30d26981a857454bf9c71edc61fccc42dd6b83
Author: Kirill Marinushkin <k.marinushkin@gmail.com>
Date:   Fri Mar 23 20:32:54 2018 +0100

    staging: bcm2835-audio: Release resources on module_exit()
    
    [ Upstream commit 626118b472d2eb45f83a0276a18d3e6a01c69f6a ]
    
    In the current implementation, `rmmod snd_bcm2835` does not release
    resources properly. It causes an oops when trying to list sound devices.
    
    This commit fixes it.
    
    The details WRT allocation / free are described below.
    
    Device structure WRT allocation:
    
    pdev
      \childdev[]
        \card
          \chip
            \pcm
            \ctl
    
    Allocation / register sequence:
    
    * childdev: devm_kzalloc      - freed during driver detach
    * childdev: device_initialize - freed during device_unregister
    * pdev: devres_alloc          - freed during driver detach
    * childdev: device_add        - removed during device_unregister
    * pdev, childdev: devres_add  - freed during driver detach
    * card: snd_card_new          - freed during snd_card_free
    * chip: kzalloc               - freed during kfree
    * card, chip: snd_device_new  - freed during snd_device_free
    * chip: new_pcm               - TODO: free pcm
    * chip: new_ctl               - TODO: free ctl
    * card: snd_card_register     - unregistered during snd_card_free
    
    Free / unregister sequence:
    
    * card: snd_card_free
    * card, chip: snd_device_free
    * childdev: device_unregister
    * chip: kfree
    
    Steps to reproduce the issue before this commit:
    
    ~~~~
    $ rmmod snd_bcm2835
    $ aplay -L
    [  138.648130] Unable to handle kernel paging request at virtual address 7f1343c0
    [  138.660415] pgd = ad8f0000
    [  138.665567] [7f1343c0] *pgd=3864c811, *pte=00000000, *ppte=00000000
    [  138.674887] Internal error: Oops: 7 [#1] SMP ARM
    [  138.683571] Modules linked in: sha256_generic cfg80211 rfkill snd_pcm snd_timer
     snd fixed uio_pdrv_genirq uio ip_tables x_tables ipv6 [last unloaded: snd_bcm2835
    ]
    [  138.706594] CPU: 3 PID: 463 Comm: aplay Tainted: G        WC       4.15.0-rc1-v
    7+ #6
    [  138.719833] Hardware name: BCM2835
    [  138.726016] task: b877ac00 task.stack: aebec000
    [  138.733408] PC is at try_module_get+0x38/0x24c
    [  138.740813] LR is at snd_ctl_open+0x58/0x194 [snd]
    [  138.748485] pc : [<801c4d5c>]    lr : [<7f0e6b2c>]    psr: 20000013
    [  138.757709] sp : aebedd60  ip : aebedd88  fp : aebedd84
    [  138.765884] r10: 00000000  r9 : 00000004  r8 : 7f0ed440
    [  138.774040] r7 : b7e469b0  r6 : 7f0e6b2c  r5 : afd91900  r4 : 7f1343c0
    [  138.783571] r3 : aebec000  r2 : 00000001  r1 : b877ac00  r0 : 7f1343c0
    [  138.793084] Flags: nzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
    [  138.803300] Control: 10c5387d  Table: 2d8f006a  DAC: 00000055
    [  138.812064] Process aplay (pid: 463, stack limit = 0xaebec210)
    [  138.820868] Stack: (0xaebedd60 to 0xaebee000)
    [  138.828207] dd60: 00000000 b848d000 afd91900 00000000 b7e469b0 7f0ed440 aebedda4 aebedd88
    [  138.842371] dd80: 7f0e6b2c 801c4d30 afd91900 7f0ea4dc 00000000 b7e469b0 aebeddcc aebedda8
    [  138.856611] dda0: 7f0e250c 7f0e6ae0 7f0e2464 b8478ec0 b7e469b0 afd91900 7f0ea388 00000000
    [  138.870864] ddc0: aebeddf4 aebeddd0 802ce590 7f0e2470 8090ab64 afd91900 afd91900 b7e469b0
    [  138.885301] dde0: afd91908 802ce4e4 aebede1c aebeddf8 802c57b4 802ce4f0 afd91900 aebedea8
    [  138.900110] de00: b7fa4c00 00000000 00000000 00000004 aebede3c aebede20 802c6ba8 802c56b4
    [  138.915260] de20: aebedea8 00000000 aebedf5c 00000000 aebedea4 aebede40 802d9a68 802c6b58
    [  138.930661] de40: b874ddd0 00000000 00000000 00000001 00000041 00000000 afd91900 aebede70
    [  138.946402] de60: 00000000 00000000 00000002 b7e469b0 b8a87610 b8d6ab80 801852f8 00080000
    [  138.962314] de80: aebedf5c aebedea8 00000001 80108464 aebec000 00000000 aebedf4c aebedea8
    [  138.978414] dea0: 802dacd4 802d970c b8a87610 b8d6ab80 a7982bc6 00000009 af363019 b9231480
    [  138.994617] dec0: 00000000 b8c038a0 b7e469b0 00000101 00000002 00000238 00000000 00000000
    [  139.010823] dee0: 00000000 aebedee8 00080000 0000000f aebedf3c aebedf00 802ed7e4 80843f94
    [  139.027025] df00: 00000003 00080000 b9231490 b9231480 00000000 00080000 af363000 00000000
    [  139.043229] df20: 00000005 00000002 ffffff9c 00000000 00080000 ffffff9c af363000 00000003
    [  139.059430] df40: aebedf94 aebedf50 802c6f70 802dac70 aebec000 00000000 00000001 00000000
    [  139.075629] df60: 00020000 00000004 00000100 00000001 7ebe577c 0002e038 00000000 00000005
    [  139.091828] df80: 80108464 aebec000 aebedfa4 aebedf98 802c7060 802c6e6c 00000000 aebedfa8
    [  139.108025] dfa0: 801082c0 802c7040 7ebe577c 0002e038 7ebe577c 00080000 00000b98 e81c8400
    [  139.124222] dfc0: 7ebe577c 0002e038 00000000 00000005 7ebe57e4 00a20af8 7ebe57f0 76f87394
    [  139.140419] dfe0: 00000000 7ebe55c4 76ec88e8 76df1d9c 60000010 7ebe577c 00000000 00000000
    [  139.156715] [<801c4d5c>] (try_module_get) from [<7f0e6b2c>] (snd_ctl_open+0x58/0x194 [snd])
    [  139.173222] [<7f0e6b2c>] (snd_ctl_open [snd]) from [<7f0e250c>] (snd_open+0xa8/0x14c [snd])
    [  139.189683] [<7f0e250c>] (snd_open [snd]) from [<802ce590>] (chrdev_open+0xac/0x188)
    [  139.205465] [<802ce590>] (chrdev_open) from [<802c57b4>] (do_dentry_open+0x10c/0x314)
    [  139.221347] [<802c57b4>] (do_dentry_open) from [<802c6ba8>] (vfs_open+0x5c/0x88)
    [  139.236788] [<802c6ba8>] (vfs_open) from [<802d9a68>] (path_openat+0x368/0x944)
    [  139.248270] [<802d9a68>] (path_openat) from [<802dacd4>] (do_filp_open+0x70/0xc4)
    [  139.263731] [<802dacd4>] (do_filp_open) from [<802c6f70>] (do_sys_open+0x110/0x1d4)
    [  139.279378] [<802c6f70>] (do_sys_open) from [<802c7060>] (SyS_open+0x2c/0x30)
    [  139.290647] [<802c7060>] (SyS_open) from [<801082c0>] (ret_fast_syscall+0x0/0x28)
    [  139.306021] Code: e3c3303f e5932004 e2822001 e5832004 (e5943000)
    [  139.316265] ---[ end trace 7f3f7f6193b663ed ]---
    [  139.324956] note: aplay[463] exited with preempt_count 1
    ~~~~
    
    Signed-off-by: Kirill Marinushkin <k.marinushkin@gmail.com>
    Cc: Eric Anholt <eric@anholt.net>
    Cc: Stefan Wahren <stefan.wahren@i2se.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ray Jui <rjui@broadcom.com>
    Cc: Scott Branden <sbranden@broadcom.com>
    Cc: bcm-kernel-feedback-list@broadcom.com
    Cc: Michael Zoran <mzoran@crowfest.net>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: linux-rpi-kernel@lists.infradead.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: devel@driverdev.osuosl.org
    Cc: linux-kernel@vger.kernel.org
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe68f20e09f7b1ce276db20ef580fb8d9f69e0b
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Mar 16 16:33:06 2018 +0200

    xhci: Show what USB release number the xHC supports from protocol capablity
    
    [ Upstream commit 0ee78c101425aae681c631ba59c6ac7f44b1d83a ]
    
    xhci driver displays the supported xHC USB revision in a message during
    driver load:
    
    "Host supports USB 3.1 Enhanced SuperSpeed"
    
    Get the USB minor revision number from the xhci protocol capability.
    This will show the correct supported revisions for new USB 3.2 and later
    hosts
    
    Don't rely on the SBRN (serial bus revision number) register, it's often
    showing 0x30 (USB3.0) for hosts that support USB 3.1
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0249054e4bfd3237d042c9f0bc651e2db50fc9a8
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sun Feb 11 12:24:32 2018 -0600

    Bluetooth: btusb: Add device ID for RTL8822BE
    
    [ Upstream commit fed03fe7e55b7dc16077f672bd9d7bbe92b3a691 ]
    
    The Asus Z370-I contains a Realtek RTL8822BE device with an associated
    BT chip using a USB ID of 0b05:185c. This device is added to the driver.
    
    Signed-off-by: Hon Weng Chong <honwchong@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4504b80e012f6ca569a738b2dc3b70ae4f4ceb3
Author: Brad Love <brad@nextdimension.cc>
Date:   Thu Jan 4 19:04:13 2018 -0500

    media: em28xx: USB bulk packet size fix
    
    [ Upstream commit c7c7e8d7803406daa21e96d00c357de8b77b6764 ]
    
    Hauppauge em28xx bulk devices exhibit continuity errors and corrupted
    packets, when run in VMWare virtual machines. Unknown if other
    manufacturers bulk models exhibit the same issue. KVM/Qemu is unaffected.
    
    According to documentation the maximum packet multiplier for em28xx in bulk
    transfer mode is 256 * 188 bytes. This changes the size of bulk transfers
    to maximum supported value and have a bonus beneficial alignment.
    
    Before:
    
    After:
    
    This sets up USB to expect just as many bytes as the em28xx is set to emit.
    
    Successful usage under load afterwards natively and in both VMWare
    and KVM/Qemu virtual machines.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Reviewed-by: Michael Ira Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5f6bff50f36edf9cf503d8ea56a2b2e649236f4
Author: Brad Love <brad@nextdimension.cc>
Date:   Fri Jan 5 09:57:12 2018 -0500

    media: lgdt3306a: Fix module count mismatch on usb unplug
    
    [ Upstream commit 835d66173a38538c072a7c393d02360dcfac8582 ]
    
    When used as an i2c device there is a module usage count mismatch on
    removal, preventing the driver from being used thereafter. dvb_attach
    increments the usage count so it is properly balanced on removal.
    
    On disconnect of Hauppauge SoloHD/DualHD before:
    
    lsmod | grep lgdt3306a
    lgdt3306a              28672  -1
    i2c_mux                16384  1 lgdt3306a
    
    On disconnect of Hauppauge SoloHD/DualHD after:
    
    lsmod | grep lgdt3306a
    lgdt3306a              28672  0
    i2c_mux                16384  1 lgdt3306a
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3f3442027b5b4f7633fc008ade8b2f5558b16c9
Author: Chris Dickens <christopher.a.dickens@gmail.com>
Date:   Sun Dec 31 18:59:42 2017 -0800

    usb: gadget: composite: fix incorrect handling of OS desc requests
    
    [ Upstream commit 5d6ae4f0da8a64a185074dabb1b2f8c148efa741 ]
    
    When handling an OS descriptor request, one of the first operations is
    to zero out the request buffer using the wLength from the setup packet.
    There is no bounds checking, so a wLength > 4096 would clobber memory
    adjacent to the request buffer. Fix this by taking the min of wLength
    and the request buffer length prior to the memset. While at it, define
    the buffer length in a header file so that magic numbers don't appear
    throughout the code.
    
    When returning data to the host, the data length should be the min of
    the wLength and the valid data we have to return. Currently we are
    returning wLength, thus requests for a wLength greater than the amount
    of data in the OS descriptor buffer would return invalid (albeit zero'd)
    data following the valid descriptor data. Fix this by counting the
    number of bytes when constructing the data and using this when
    determining the length of the request.
    
    Signed-off-by: Chris Dickens <christopher.a.dickens@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9170c1411eca5a2409fe4ec03152ce416ab45f97
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Tue Feb 6 09:50:40 2018 +0100

    usb: gadget: udc: change comparison to bitshift when dealing with a mask
    
    [ Upstream commit ac87e560f7c0f91b62012e9a159c0681a373b922 ]
    
    Due to a typo, the mask was destroyed by a comparison instead of a bit
    shift.
    
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b80114337d31e617196b3d10820886038d8128d0
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Jan 29 00:04:18 2018 +0000

    usbip: Correct maximum value of CONFIG_USBIP_VHCI_HC_PORTS
    
    [ Upstream commit 351a8d4837ae0d61744e64262c3a80ab92ff3e42 ]
    
    Now that usbip supports USB3, the maximum number of ports allowed
    on a hub is 15 (USB_SS_MAXPORTS), not 31 (USB_MAXCHILDREN).
    
    Reported-by: Gianluigi Tiesi <sherpya@netfarm.it>
    Reported-by: Borissh1983 <borissh1983@gmail.com>
    References: https://bugs.debian.org/878866
    Fixes: 1c9de5bf4286 ("usbip: vhci-hcd: Add USB3 SuperSpeed support")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd5541c7a60d9fe8715a0b7f90dbdac6c2457636
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Jan 12 11:05:02 2018 +0100

    usb: gadget: ffs: Execute copy_to_user() with USER_DS set
    
    [ Upstream commit 4058ebf33cb0be88ca516f968eda24ab7b6b93e4 ]
    
    When using a AIO read() operation on the function FS gadget driver a URB is
    submitted asynchronously and on URB completion the received data is copied
    to the userspace buffer associated with the read operation.
    
    This is done from a kernel worker thread invoking copy_to_user() (through
    copy_to_iter()). And while the user space process memory is made available
    to the kernel thread using use_mm(), some architecture require in addition
    to this that the operation runs with USER_DS set. Otherwise the userspace
    memory access will fail.
    
    For example on ARM64 with Privileged Access Never (PAN) and User Access
    Override (UAO) enabled the following crash occurs.
    
            Internal error: Accessing user space memory with fs=KERNEL_DS: 9600004f [#1] SMP
            Modules linked in:
            CPU: 2 PID: 1636 Comm: kworker/2:1 Not tainted 4.9.0-04081-g8ab2dfb-dirty #487
            Hardware name: ZynqMP ZCU102 Rev1.0 (DT)
            Workqueue: events ffs_user_copy_worker
            task: ffffffc87afc8080 task.stack: ffffffc87a00c000
            PC is at __arch_copy_to_user+0x190/0x220
            LR is at copy_to_iter+0x78/0x3c8
            [...]
            [<ffffff800847b790>] __arch_copy_to_user+0x190/0x220
            [<ffffff80086f25d8>] ffs_user_copy_worker+0x70/0x130
            [<ffffff80080b8c64>] process_one_work+0x1dc/0x460
            [<ffffff80080b8f38>] worker_thread+0x50/0x4b0
            [<ffffff80080bf5a0>] kthread+0xd8/0xf0
            [<ffffff8008083680>] ret_from_fork+0x10/0x50
    
    Address this by placing a set_fs(USER_DS) before of the copy operation
    and revert it again once the copy operation has finished.
    
    This patch is analogous to commit d7ffde35e31a ("vhost: use USER_DS in
    vhost_worker thread") which addresses the same underlying issue.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f48c9ddca72a0c488331e775d21fe280c1f71f1
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Jan 12 11:26:16 2018 +0100

    usb: gadget: ffs: Let setup() return USB_GADGET_DELAYED_STATUS
    
    [ Upstream commit 946ef68ad4e45aa048a5fb41ce8823ed29da866a ]
    
    Some UDC drivers (like the DWC3) expect that the response to a setup()
    request is queued from within the setup function itself so that it is
    available as soon as setup() has completed.
    
    Upon receiving a setup request the function fs driver creates an event that
    is made available to userspace. And only once userspace has acknowledged
    that event the response to the setup request is queued.
    
    So it violates the requirement of those UDC drivers and random failures can
    be observed. This is basically a race condition and if userspace is able to
    read the event and queue the response fast enough all is good. But if it is
    not, for example because other processes are currently scheduled to run,
    the USB host that sent the setup request will observe an error.
    
    To avoid this the gadget framework provides the USB_GADGET_DELAYED_STATUS
    return code. If a setup() callback returns this value the UDC driver is
    aware that response is not yet available and can uses the appropriate
    methods to handle this case.
    
    Since in the case of function fs the response will never be available when
    the setup() function returns make sure that this status code is used.
    
    This fixed random occasional failures that were previously observed on a
    DWC3 based system under high system load.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11cb14a196793ce2f9fb3fa9811f2dbaf348141c
Author: Minas Harutyunyan <hminas@synopsys.com>
Date:   Fri Jan 19 14:44:20 2018 +0400

    usb: dwc2: host: Fix transaction errors in host mode
    
    [ Upstream commit 92a8dd26464e1f21f1d869ec53717bd2c1200d63 ]
    
    Added missing GUSBCFG programming in host mode, which fixes
    transaction errors issue on HiKey and Altera Cyclone V boards.
    
    These field even if was programmed in device mode (in function
    dwc2_hsotg_core_init_disconnected()) will be resetting to POR values
    after core soft reset applied.
    So, each time when switching to host mode required to set this field
    to correct value.
    
    Acked-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51250a9357d8b371fe1b8ab052c9b1ffe5f9a670
Author: Minas Harutyunyan <hminas@synopsys.com>
Date:   Fri Jan 19 14:43:53 2018 +0400

    usb: dwc2: hcd: Fix host channel halt flow
    
    [ Upstream commit a82c7abdf8fc3b09c4a0ed2eee6d43ecef2ccdb0 ]
    
    According databook in Buffer and External DMA mode
    non-split periodic channels can't be halted.
    
    Acked-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db81323e6a5d32a93ad7a1a419f99fe141df952e
Author: Grigor Tovmasyan <Grigor.Tovmasyan@synopsys.com>
Date:   Tue Feb 6 19:07:38 2018 +0400

    usb: dwc2: Fix interval type issue
    
    [ Upstream commit 12814a3f8f9b247531d7863170cc82b3fe4218fd ]
    
    The maximum value that unsigned char can hold is 255, meanwhile
    the maximum value of interval is  2^(bIntervalMax-1)=2^15.
    
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39280c27031b32639c5757da6e3462ba397df58c
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Mar 16 16:33:01 2018 +0200

    xhci: zero usb device slot_id member when disabling and freeing a xhci slot
    
    [ Upstream commit a400efe455f7b61ac9a801ac8d0d01f8c8d82dd5 ]
    
    set udev->slot_id to zero when disabling and freeing the xhci slot.
    Prevents usb core from calling xhci with a stale slot id.
    
    xHC controller may be reset during resume to recover from some error.
    All slots are unusable as they are disabled and freed.
    xhci driver starts slot enumeration again from 1 in the order they are
    enabled. In the worst case a stale udev->slot_id for one device matches
    a newly enabled slot_id for a different device, causing us to
    perform a action on the wrong device.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55aaef4bd8a08ec978169a4484c77b1d4cd49695
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Thu Mar 22 10:45:20 2018 +0200

    usb: dwc3: Makefile: fix link error on randconfig
    
    [ Upstream commit de948a74ad6f0eefddf36d765b8f2dd6df82caa0 ]
    
    If building a kernel without FTRACE but with TRACING, dwc3.ko fails to
    link due to missing trace events. Fix this by using the correct
    Kconfig symbol on Makefile.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 834329c4ad4cb59a8cd6c3e5354c8b91540841c3
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Mar 16 15:33:54 2018 -0700

    usb: dwc3: Update DWC_usb31 GTXFIFOSIZ reg fields
    
    [ Upstream commit 0cab8d26d6e5e053b2bed3356992aaa71dc93628 ]
    
    Update two GTXFIFOSIZ bit fields for the DWC_usb31 controller. TXFDEP
    is a 15-bit value instead of 16-bit value, and bit 15 is TXFRAMNUM.
    
    The GTXFIFOSIZ register for DWC_usb31 is as follows:
     +-------+-----------+----------------------------------+
     | BITS  | Name      | Description                      |
     +=======+===========+==================================+
     | 31:16 | TXFSTADDR | Transmit FIFOn RAM Start Address |
     | 15    | TXFRAMNUM | Asynchronous/Periodic TXFIFO     |
     | 14:0  | TXFDEP    | TXFIFO Depth                     |
     +-------+-----------+----------------------------------+
    
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fb2d2f1b04d983cb8b92ac12c6a15bd905943b2
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Mar 16 15:33:48 2018 -0700

    usb: dwc3: Add SoftReset PHY synchonization delay
    
    [ Upstream commit fab3833338779e1e668bd58d1f76d601657304b8 ]
    
    >From DWC_usb31 programming guide section 1.3.2, once DWC3_DCTL_CSFTRST
    bit is cleared, we must wait at least 50ms before accessing the PHY
    domain (synchronization delay).
    
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81ba08e69fe2af23162c4222ddd67622895f5bac
Author: Nobutaka Okabe <nob77413@gmail.com>
Date:   Fri Mar 23 19:18:22 2018 +0900

    ALSA: usb-audio: Add native DSD support for Luxman DA-06
    
    [ Upstream commit 71426535f49fe6034d0e0db77608b91a0c1a022d ]
    
    Add native DSD support quirk for Luxman DA-06 DAC, by adding the
    PID/VID 1852:5065.
    
    Rename "is_marantz_denon_dac()" function to "is_itf_usb_dsd_2alts_dac()"
    to cover broader device family sharing the same USB audio
    implementation(*).
    For the same reason, rename "is_teac_dsd_dac()" function to
    "is_itf_usb_dsd_3alts_dac()".
    
    (*)
    These devices have the same USB controller "ITF-USB DSD", supplied by
    INTERFACE Co., Ltd.
    "ITF-USB DSD" USB controller has two patterns,
    
    Pattern 1. (2 altsets version)
    - Altset 0: for control
    - Altset 1: for stream (S32)
    - Altset 2: for stream (S32, DSD_U32)
    
    Pattern 2. (3 altsets version)
    - Altset 0: for control
    - Altset 1: for stream (S16)
    - Altset 2: for stream (S32)
    - Altset 3: for stream (S32, DSD_U32)
    
    "is_itf_usb_dsd_2alts_dac()" returns true, if the DAC has "Pattern 1"
    USB controller, and "is_itf_usb_dsd_3alts_dac()" returns true, if
    "Pattern2".
    
    Signed-off-by: Nobutaka Okabe <nob77413@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d711223606e893e21a92706b269e0c7f1e5b2ce6
Author: Vicente Bergas <vicencb@gmail.com>
Date:   Tue Mar 20 19:41:10 2018 +0100

    Bluetooth: btusb: Add USB ID 7392:a611 for Edimax EW-7611ULB
    
    [ Upstream commit a41e0796396eeceff673af4a38feaee149c6ff86 ]
    
    This WiFi/Bluetooth USB dongle uses a Realtek chipset, so, use btrtl for it.
    
    Product information:
    https://wikidevi.com/wiki/Edimax_EW-7611ULB
    
    >From /sys/kernel/debug/usb/devices
    T:  Bus=02 Lev=02 Prnt=02 Port=00 Cnt=01 Dev#=  3 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=7392 ProdID=a611 Rev= 2.00
    S:  Manufacturer=Realtek
    S:  Product=Edimax Wi-Fi N150 Bluetooth4.0 USB Adapter
    S:  SerialNumber=00e04c000001
    C:* #Ifs= 3 Cfg#= 1 Atr=e0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=e0(wlcon) Sub=01 Prot=01
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    I:* If#= 2 Alt= 0 #EPs= 6 Cls=ff(vend.) Sub=ff Prot=ff Driver=rtl8723bu
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=87(I) Atr=03(Int.) MxPS=  64 Ivl=500us
    E:  Ad=08(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=09(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Tested-by: Vicente Bergas <vicencb@gmail.com>
    Signed-off-by: Vicente Bergas <vicencb@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89509cdb713f0dd6825fb600b3974a786905fdaf
Author: Giuseppe Lippolis <giu.lippolis@gmail.com>
Date:   Mon Mar 26 16:34:39 2018 +0200

    net-usb: add qmi_wwan if on lte modem wistron neweb d18q1
    
    [ Upstream commit d4c4bc11353f3bea6754f7d21e3612c9f32d1d64 ]
    
    This modem is embedded on dlink dwr-921 router.
        The oem configuration states:
    
        T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=480 MxCh= 0
        D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
        P:  Vendor=1435 ProdID=0918 Rev= 2.32
        S:  Manufacturer=Android
        S:  Product=Android
        S:  SerialNumber=0123456789ABCDEF
        C:* #Ifs= 7 Cfg#= 1 Atr=80 MxPwr=500mA
        I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
        E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
        E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
        E:  Ad=84(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
        E:  Ad=86(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
        E:  Ad=88(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
        E:  Ad=8a(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=89(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 6 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=(none)
        E:  Ad=8b(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=07(O) Atr=02(Bulk) MxPS= 512 Ivl=125us
    
    Tested on openwrt distribution
    
    Signed-off-by: Giuseppe Lippolis <giu.lippolis@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58249157c6ad4d3796eb1c00036689fe078eaef7
Author: Torsten Hilbrich <torsten.hilbrich@secunet.com>
Date:   Mon Mar 26 07:19:57 2018 +0200

    net/usb/qmi_wwan.c: Add USB id for lt4120 modem
    
    [ Upstream commit f3d801baf118c9d452ee7c278df16880c892e669 ]
    
    This is needed to support the modem found in HP EliteBook 820 G3.
    
    Signed-off-by: Torsten Hilbrich <torsten.hilbrich@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce04fbcdb39af0d3afc96115f10b39e46501e9b5
Author: Fredrik Noring <noring@nocrew.org>
Date:   Fri Mar 9 18:34:34 2018 +0100

    USB: OHCI: Fix NULL dereference in HCDs using HCD_LOCAL_MEM
    
    [ Upstream commit d6c931ea32dc08ac2665bb5f009f9c40ad1bbdb3 ]
    
    Scatter-gather needs to be disabled when using dma_declare_coherent_memory
    and HCD_LOCAL_MEM. Andrea Righi made the equivalent fix for EHCI drivers
    in commit 4307a28eb01284 "USB: EHCI: fix NULL pointer dererence in HCDs
    that use HCD_LOCAL_MEM".
    
    The following NULL pointer WARN_ON_ONCE triggered with OHCI drivers:
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 49 at drivers/usb/core/hcd.c:1379 hcd_alloc_coherent+0x4c/0xc8
    Modules linked in:
    CPU: 0 PID: 49 Comm: usb-storage Not tainted 4.15.0+ #1014
    Stack : 00000000 00000000 805a78d2 0000003a 81f5c2cc 8053d367 804d77fc 00000031
            805a3a08 00000563 81ee9400 805a0000 00000000 10058c00 81f61b10 805c0000
            00000000 00000000 805a0000 00d9038e 00000004 803ee818 00000006 312e3420
            805c0000 00000000 00000073 81f61958 00000000 00000000 802eb380 804fd538
            00000009 00000563 81ee9400 805a0000 00000002 80056148 00000000 805a0000
            ...
    Call Trace:
    [<578af360>] show_stack+0x74/0x104
    [<2f3702c6>] __warn+0x118/0x120
    [<ae93fc9e>] warn_slowpath_null+0x44/0x58
    [<a891a517>] hcd_alloc_coherent+0x4c/0xc8
    [<3578fa36>] usb_hcd_map_urb_for_dma+0x4d8/0x534
    [<110bc94c>] usb_hcd_submit_urb+0x82c/0x834
    [<02eb5baf>] usb_sg_wait+0x14c/0x1a0
    [<ccd09e85>] usb_stor_bulk_transfer_sglist.part.1+0xac/0x124
    [<87a5c34c>] usb_stor_bulk_srb+0x40/0x60
    [<ff1792ac>] usb_stor_Bulk_transport+0x160/0x37c
    [<b9e2709c>] usb_stor_invoke_transport+0x3c/0x500
    [<004754f4>] usb_stor_control_thread+0x258/0x28c
    [<22edf42e>] kthread+0x134/0x13c
    [<a419ffd0>] ret_from_kernel_thread+0x14/0x1c
    ---[ end trace bcdb825805eefdcc ]---
    
    Signed-off-by: Fredrik Noring <noring@nocrew.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5c8a6d499a1010eacacaef0ffc3e8c807282530
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Thu Mar 8 17:17:16 2018 +0200

    usb: host: xhci-plat: revert "usb: host: xhci-plat: enable clk in resume timing"
    
    [ Upstream commit d56e57ca030c8b4296944a2ae61ac167bf979c07 ]
    
    This patch reverts the commit 835e4241e714 ("usb: host: xhci-plat:
    enable clk in resume timing") because this driver also has runtime PM
    and the commit 560869100b99 ("clk: renesas: cpg-mssr: Restore module
    clocks during resume") will restore the clock on R-Car H3 environment.
    
    If the xhci_plat_suspend() disables the clk, the system cannot enable
    the clk in resume like the following behavior:
    
    < In resume >
     - genpd_resume_noirq() runs and enable the clk (enable_count = 1)
     - cpg_mssr_resume_noirq() restores the clk register.
      -- Since the clk was disabled in suspend, cpg_mssr_resume_noirq()
         will disable the clk and keep the enable_count.
     - Even if xhci_plat_resume() calls clk_prepare_enable(), since
       the enable_count is 1, the clk will be not enabled.
    
    After this patch is applied, the cpg-mssr driver will save the clk
    as enable, so the clk will be enabled in resume.
    
    Fixes: 835e4241e714 ("usb: host: xhci-plat: enable clk in resume timing")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38ed02d8584024951164d1fd2ec512fd9865de6d
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Thu Mar 1 14:52:08 2018 +0200

    ARM: dts: imx7d-sdb: Fix regulator-usb-otg2-vbus node name
    
    [ Upstream commit 970656b3246d30955894951ed16bd658e42d8c24 ]
    
    The two usb-otg regulators for imx7d-sdb are both called
    "regulator-usb-otg1-vbus" and they effectively override each other.
    
    This is most likely a copy-paste error.
    
    Fixes: b877039aa1fe ("ARM: dts: imx7d-sdb: Adjust the regulator nodes")
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5788084ba3cd9da81342be9c64ef8cb76a9874fd
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 5 11:41:13 2018 -0800

    net: usbnet: fix potential deadlock on 32bit hosts
    
    [ Upstream commit 2695578b896aea472b2c0dcbe9d92daa71738484 ]
    
    Marek reported a LOCKDEP issue occurring on 32bit host,
    that we tracked down to the fact that usbnet could either
    run from soft or hard irqs.
    
    This patch adds u64_stats_update_begin_irqsave() and
    u64_stats_update_end_irqrestore() helpers to solve this case.
    
    [   17.768040] ================================
    [   17.772239] WARNING: inconsistent lock state
    [   17.776511] 4.16.0-rc3-next-20180227-00007-g876c53a7493c #453 Not tainted
    [   17.783329] --------------------------------
    [   17.787580] inconsistent {IN-HARDIRQ-W} -> {HARDIRQ-ON-W} usage.
    [   17.793607] swapper/0/0 [HC0[0]:SC1[1]:HE1:SE0] takes:
    [   17.798751]  (&syncp->seq#5){?.-.}, at: [<9b22e5f0>]
    asix_rx_fixup_internal+0x188/0x288
    [   17.806790] {IN-HARDIRQ-W} state was registered at:
    [   17.811677]   tx_complete+0x100/0x208
    [   17.815319]   __usb_hcd_giveback_urb+0x60/0xf0
    [   17.819770]   xhci_giveback_urb_in_irq+0xa8/0x240
    [   17.824469]   xhci_td_cleanup+0xf4/0x16c
    [   17.828367]   xhci_irq+0xe74/0x2240
    [   17.831827]   usb_hcd_irq+0x24/0x38
    [   17.835343]   __handle_irq_event_percpu+0x98/0x510
    [   17.840111]   handle_irq_event_percpu+0x1c/0x58
    [   17.844623]   handle_irq_event+0x38/0x5c
    [   17.848519]   handle_fasteoi_irq+0xa4/0x138
    [   17.852681]   generic_handle_irq+0x18/0x28
    [   17.856760]   __handle_domain_irq+0x6c/0xe4
    [   17.860941]   gic_handle_irq+0x54/0xa0
    [   17.864666]   __irq_svc+0x70/0xb0
    [   17.867964]   arch_cpu_idle+0x20/0x3c
    [   17.871578]   arch_cpu_idle+0x20/0x3c
    [   17.875190]   do_idle+0x144/0x218
    [   17.878468]   cpu_startup_entry+0x18/0x1c
    [   17.882454]   start_kernel+0x394/0x400
    [   17.886177] irq event stamp: 161912
    [   17.889616] hardirqs last  enabled at (161912): [<7bedfacf>]
    __netdev_alloc_skb+0xcc/0x140
    [   17.897893] hardirqs last disabled at (161911): [<d58261d0>]
    __netdev_alloc_skb+0x94/0x140
    [   17.904903] exynos5-hsi2c 12ca0000.i2c: tx timeout
    [   17.906116] softirqs last  enabled at (161904): [<387102ff>]
    irq_enter+0x78/0x80
    [   17.906123] softirqs last disabled at (161905): [<cf4c628e>]
    irq_exit+0x134/0x158
    [   17.925722].
    [   17.925722] other info that might help us debug this:
    [   17.933435]  Possible unsafe locking scenario:
    [   17.933435].
    [   17.940331]        CPU0
    [   17.942488]        ----
    [   17.944894]   lock(&syncp->seq#5);
    [   17.948274]   <Interrupt>
    [   17.950847]     lock(&syncp->seq#5);
    [   17.954386].
    [   17.954386]  *** DEADLOCK ***
    [   17.954386].
    [   17.962422] no locks held by swapper/0/0.
    
    Fixes: c8b5d129ee29 ("net: usbnet: support 64bit stats")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7b3f33c79b77c42cb5621d79a2c05b0085d53ed
Author: Dominik Bozek <dominikx.bozek@intel.com>
Date:   Thu Feb 15 21:27:48 2018 -0800

    usb: cdc_acm: prevent race at write to acm while system resumes
    
    [ Upstream commit b86b8eb6fecb5a4bac1ed0ca925c4082a61ea6e9 ]
    
    ACM driver may accept data to transmit while system is not fully
    resumed. In this case ACM driver buffers data and prepare URBs
    on usb anchor list.
    There is a little chance that two tasks put a char and initiate
    acm_tty_flush_chars(). In such a case, driver will put one URB
    twice on usb anchor list.
    This patch also reset length of data before resue of a buffer.
    This not only prevent sending rubbish, but also lower risc of race.
    
    Without this patch we hit following kernel panic in one of our
    stabilty/stress tests.
    
    [   46.884442] *list_add double add*: new=ffff9b2ab7289330, prev=ffff9b2ab7289330, next=ffff9b2ab81e28e0.
    [   46.884476] Modules linked in: hci_uart btbcm bluetooth rfkill_gpio igb_avb(O) cfg80211 snd_soc_sst_bxt_tdf8532 snd_soc_skl snd_soc_skl_ipc snd_soc_sst_ipc snd_soc_sst_dsp snd_soc_sst_acpi snd_soc_sst_match snd_hda_ext_core snd_hda_core trusty_timer trusty_wall trusty_log trusty_virtio trusty_ipc trusty_mem trusty_irq trusty virtio_ring virtio intel_ipu4_mmu_bxtB0 lib2600_mod_bxtB0 intel_ipu4_isys_mod_bxtB0 lib2600psys_mod_bxtB0 intel_ipu4_psys_mod_bxtB0 intel_ipu4_mod_bxtB0 intel_ipu4_wrapper_bxtB0 intel_ipu4_acpi videobuf2_dma_contig as3638 dw9714 lm3643 crlmodule smiapp smiapp_pll
    [   46.884480] CPU: 1 PID: 33 Comm: kworker/u8:1 Tainted: G     U  W  O    4.9.56-quilt-2e5dc0ac-g618ed69ced6e-dirty #4
    [   46.884489] Workqueue: events_unbound flush_to_ldisc
    [   46.884494]  ffffb98ac012bb08 ffffffffad3e82e5 ffffb98ac012bb58 0000000000000000
    [   46.884497]  ffffb98ac012bb48 ffffffffad0a23d1 00000024ad6374dd ffff9b2ab7289330
    [   46.884500]  ffff9b2ab81e28e0 ffff9b2ab7289330 0000000000000002 0000000000000000
    [   46.884501] Call Trace:
    [   46.884507]  [<ffffffffad3e82e5>] dump_stack+0x67/0x92
    [   46.884511]  [<ffffffffad0a23d1>] __warn+0xd1/0xf0
    [   46.884513]  [<ffffffffad0a244f>] warn_slowpath_fmt+0x5f/0x80
    [   46.884516]  [<ffffffffad407443>] __list_add+0xb3/0xc0
    [   46.884521]  [<ffffffffad71133c>] *usb_anchor_urb*+0x4c/0xa0
    [   46.884524]  [<ffffffffad782c6f>] *acm_tty_flush_chars*+0x8f/0xb0
    [   46.884527]  [<ffffffffad782cd1>] *acm_tty_put_char*+0x41/0x100
    [   46.884530]  [<ffffffffad4ced34>] tty_put_char+0x24/0x40
    [   46.884533]  [<ffffffffad4d3bf5>] do_output_char+0xa5/0x200
    [   46.884535]  [<ffffffffad4d3e98>] __process_echoes+0x148/0x290
    [   46.884538]  [<ffffffffad4d654c>] n_tty_receive_buf_common+0x57c/0xb00
    [   46.884541]  [<ffffffffad4d6ae4>] n_tty_receive_buf2+0x14/0x20
    [   46.884543]  [<ffffffffad4d9662>] tty_ldisc_receive_buf+0x22/0x50
    [   46.884545]  [<ffffffffad4d9c05>] flush_to_ldisc+0xc5/0xe0
    [   46.884549]  [<ffffffffad0bcfe8>] process_one_work+0x148/0x440
    [   46.884551]  [<ffffffffad0bdc19>] worker_thread+0x69/0x4a0
    [   46.884554]  [<ffffffffad0bdbb0>] ? max_active_store+0x80/0x80
    [   46.884556]  [<ffffffffad0c2e10>] kthread+0x110/0x130
    [   46.884559]  [<ffffffffad0c2d00>] ? kthread_park+0x60/0x60
    [   46.884563]  [<ffffffffadad9917>] ret_from_fork+0x27/0x40
    [   46.884566] ---[ end trace 3bd599058b8a9eb3 ]---
    
    Signed-off-by: Dominik Bozek <dominikx.bozek@intel.com>
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee4ed01d4b5cf050fdce241cbf59bea40d079fd9
Author: Vardan Mikayelyan <mvardan@synopsys.com>
Date:   Tue Jan 16 16:04:24 2018 +0400

    usb: dwc2: Fix dwc2_hsotg_core_init_disconnected()
    
    [ Upstream commit 755d739534f998d92e348fba8ffb0478416576e7 ]
    
    We should call dwc2_hsotg_enqueue_setup() after properly
    setting lx_state. Because it may cause error-out from
    dwc2_hsotg_enqueue_setup() due to wrong value in lx_state.
    
    Issue can be reproduced by loading driver while connected
    A-Connector (start in A-HOST mode) then disconnect A-Connector
    to switch to B-DEVICE.
    
    Acked-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Vardan Mikayelyan <mvardan@synopsys.com>
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3fcccd4a7efc241de5a0c32d9ea31e0f2297ceb
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Feb 12 00:14:42 2018 +0100

    usb: gadget: fsl_udc_core: fix ep valid checks
    
    [ Upstream commit 20c63f4089cceab803438c383631963e34c4d8e5 ]
    
    Clang reports the following warning:
      drivers/usb/gadget/udc/fsl_udc_core.c:1312:10: warning: address of array
      'ep->name' will always evaluate to 'true' [-Wpointer-bool-conversion]
            if (ep->name)
            ~~  ~~~~^~~~
    
    It seems that the authors intention was to check if the ep has been
    configured through struct_ep_setup. Check whether struct usb_ep name
    pointer has been set instead.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36d66139a351b499dc902dcc474e150d000726e6
Author: Manu Gautam <mgautam@codeaurora.org>
Date:   Thu Dec 21 09:54:25 2017 +0530

    usb: gadget: core: Fix use-after-free of usb_request
    
    [ Upstream commit e74bd4d358e5455233f1dcc3975425905b270b91 ]
    
    Driver is tracing usb_request after freeing it.
    Fix it by changing the order.
    
    Signed-off-by: Manu Gautam <mgautam@codeaurora.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aefc5ce2342a91235149e6cfeccdb44c31776c1b
Author: Roger Quadros <rogerq@ti.com>
Date:   Mon Jan 22 15:01:42 2018 +0200

    usb: dwc3: omap: don't miss events during suspend/resume
    
    [ Upstream commit c49f63055e252810e5d6c83a4943b18db16b3cd8 ]
    
    The USB cable state can change during suspend/resume
    so be sure to check and update the extcon state.
    
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8f101ec20c09be9f8635ac053bd2a5dff22482c
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Jan 17 13:22:49 2018 -0800

    usb: dwc3: Undo PHY init if soft reset fails
    
    [ Upstream commit 00b42170c86f90ac9dea83a7dfcd3f0c38098fe2 ]
    
    In this function, we init the USB2 and USB3 PHYs, but if soft reset
    times out, we don't unwind this.
    
    Noticed by inspection.
    
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cc948e8ddb5dab378a2648f384dd87350aa7776
Author: John Keeping <john@metanate.com>
Date:   Fri Jan 12 18:43:32 2018 +0000

    usb: gadget: f_uac2: fix bFirstInterface in composite gadget
    
    [ Upstream commit 8813a59ed892305b5ac1b5b901740b1ad4b5fefa ]
    
    If there are multiple functions associated with a configuration, then
    the UAC2 interfaces may not start at zero.  Set the correct first
    interface number in the association descriptor so that the audio
    interfaces are enumerated correctly in this case.
    
    Reviewed-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ff6b2cac941e05ba436ca9468d21e478999e101
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed May 9 19:42:20 2018 +0900

    x86/kexec: Avoid double free_page() upon do_kexec_load() failure
    
    commit a466ef76b815b86748d9870ef2a430af7b39c710 upstream.
    
    >From ff82bedd3e12f0d3353282054ae48c3bd8c72012 Mon Sep 17 00:00:00 2001
    From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Date: Wed, 9 May 2018 12:12:39 +0900
    Subject: x86/kexec: Avoid double free_page() upon do_kexec_load() failure
    
    syzbot is reporting crashes after memory allocation failure inside
    do_kexec_load() [1]. This is because free_transition_pgtable() is called
    by both init_transition_pgtable() and machine_kexec_cleanup() when memory
    allocation failed inside init_transition_pgtable().
    
    Regarding 32bit code, machine_kexec_free_page_tables() is called by both
    machine_kexec_alloc_page_tables() and machine_kexec_cleanup() when memory
    allocation failed inside machine_kexec_alloc_page_tables().
    
    Fix this by leaving the error handling to machine_kexec_cleanup()
    (and optionally setting NULL after free_page()).
    
    [1] https://syzkaller.appspot.com/bug?id=91e52396168cf2bdd572fe1e1bc0bc645c1c6b40
    
    Fixes: f5deb79679af6eb4 ("x86: kexec: Use one page table in x86_64 machine_kexec")
    Fixes: 92be3d6bdf2cb349 ("kexec/i386: allocate page table pages dynamically")
    Reported-by: syzbot <syzbot+d96f60296ef613fe1d69@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Baoquan He <bhe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: prudo@linux.vnet.ibm.com
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: syzkaller-bugs@googlegroups.com
    Cc: takahiro.akashi@linaro.org
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: akpm@linux-foundation.org
    Cc: dyoung@redhat.com
    Cc: kirill.shutemov@linux.intel.com
    Link: https://lkml.kernel.org/r/201805091942.DGG12448.tMFVFSJFQOOLHO@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f119414a8f8d006f2929b9c236e6443b0fcbbae6
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri May 18 16:09:16 2018 -0700

    hfsplus: stop workqueue when fill_super() failed
    
    commit 66072c29328717072fd84aaff3e070e3f008ba77 upstream.
    
    syzbot is reporting ODEBUG messages at hfsplus_fill_super() [1].  This
    is because hfsplus_fill_super() forgot to call cancel_delayed_work_sync().
    
    As far as I can see, it is hfsplus_mark_mdb_dirty() from
    hfsplus_new_inode() in hfsplus_fill_super() that calls
    queue_delayed_work().  Therefore, I assume that hfsplus_new_inode() does
    not fail if queue_delayed_work() was called, and the out_put_hidden_dir
    label is the appropriate location to call cancel_delayed_work_sync().
    
    [1] https://syzkaller.appspot.com/bug?id=a66f45e96fdbeb76b796bf46eb25ea878c42a6c9
    
    Link: http://lkml.kernel.org/r/964a8b27-cd69-357c-fe78-76b066056201@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+4f2e5f086147d543ab03@syzkaller.appspotmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Ernesto A. Fernandez <ernesto.mnd.fernandez@gmail.com>
    Cc: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f2c35864ad690ba95e6526a136805fd8a8cdb3b
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Apr 3 14:33:49 2018 +0200

    cfg80211: limit wiphy names to 128 bytes
    
    commit a7cfebcb7594a24609268f91299ab85ba064bf82 upstream.
    
    There's currently no limit on wiphy names, other than netlink
    message size and memory limitations, but that causes issues when,
    for example, the wiphy name is used in a uevent, e.g. in rfkill
    where we use the same name for the rfkill instance, and then the
    buffer there is "only" 2k for the environment variables.
    
    This was reported by syzkaller, which used a 4k name.
    
    Limit the name to something reasonable, I randomly picked 128.
    
    Reported-by: syzbot+230d9e642a85d3fec29c@syzkaller.appspotmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 360964411d57d060d0b3f067c7a708ba9aeb5e07
Author: Omar Sandoval <osandov@fb.com>
Date:   Fri Apr 6 09:57:03 2018 -0700

    loop: fix LOOP_GET_STATUS lock imbalance
    
    commit bdac616db9bbadb90b7d6a406144571015e138f7 upstream.
    
    Commit 2d1d4c1e591f made loop_get_status() drop lo_ctx_mutex before
    returning, but the loop_get_status_old(), loop_get_status64(), and
    loop_get_status_compat() wrappers don't call loop_get_status() if the
    passed argument is NULL. The callers expect that the lock is dropped, so
    make sure we drop it in that case, too.
    
    Reported-by: syzbot+31e8daa8b3fc129e75f2@syzkaller.appspotmail.com
    Fixes: 2d1d4c1e591f ("loop: don't call into filesystem while holding lo_ctl_mutex")
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c18270ac9f8457c3d383e9b9a58e6368e046ce8a
Author: Omar Sandoval <osandov@fb.com>
Date:   Mon Mar 26 21:39:11 2018 -0700

    loop: don't call into filesystem while holding lo_ctl_mutex
    
    commit 2d1d4c1e591fd40bd7dafd868a249d7d00e215d5 upstream.
    
    We hit an issue where a loop device on NFS was stuck in
    loop_get_status() doing vfs_getattr() after the NFS server died, which
    caused a pile-up of uninterruptible processes waiting on lo_ctl_mutex.
    There's no reason to hold this lock while we wait on the filesystem;
    let's drop it so that other processes can do their thing. We need to
    grab a reference on lo_backing_file while we use it, and we can get rid
    of the check on lo_device, which has been unnecessary since commit
    a34c0ae9ebd6 ("[PATCH] loop: remove the bio remapping capability") in
    the linux-history tree.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c017b9fede935c21f3585b7deafcce6c6a8f4fb
Author: Jens Remus <jremus@linux.ibm.com>
Date:   Thu May 3 13:52:47 2018 +0200

    scsi: zfcp: fix infinite iteration on ERP ready list
    
    commit fa89adba1941e4f3b213399b81732a5c12fd9131 upstream.
    
    zfcp_erp_adapter_reopen() schedules blocking of all of the adapter's
    rports via zfcp_scsi_schedule_rports_block() and enqueues a reopen
    adapter ERP action via zfcp_erp_action_enqueue(). Both are separately
    processed asynchronously and concurrently.
    
    Blocking of rports is done in a kworker by zfcp_scsi_rport_work(). It
    calls zfcp_scsi_rport_block(), which then traces a DBF REC "scpdely" via
    zfcp_dbf_rec_trig().  zfcp_dbf_rec_trig() acquires the DBF REC spin lock
    and then iterates with list_for_each() over the adapter's ERP ready list
    without holding the ERP lock. This opens a race window in which the
    current list entry can be moved to another list, causing list_for_each()
    to iterate forever on the wrong list, as the erp_ready_head is never
    encountered as terminal condition.
    
    Meanwhile the ERP action can be processed in the ERP thread by
    zfcp_erp_thread(). It calls zfcp_erp_strategy(), which acquires the ERP
    lock and then calls zfcp_erp_action_to_running() to move the ERP action
    from the ready to the running list.  zfcp_erp_action_to_running() can
    move the ERP action using list_move() just during the aforementioned
    race window. It then traces a REC RUN "erator1" via zfcp_dbf_rec_run().
    zfcp_dbf_rec_run() tries to acquire the DBF REC spin lock. If this is
    held by the infinitely looping kworker, it effectively spins forever.
    
    Example Sequence Diagram:
    
    Process                ERP Thread             rport_work
    -------------------    -------------------    -------------------
    zfcp_erp_adapter_reopen()
    zfcp_erp_adapter_block()
    zfcp_scsi_schedule_rports_block()
    lock ERP                                      zfcp_scsi_rport_work()
    zfcp_erp_action_enqueue(ZFCP_ERP_ACTION_REOPEN_ADAPTER)
    list_add_tail() on ready                      !(rport_task==RPORT_ADD)
    wake_up() ERP thread                          zfcp_scsi_rport_block()
    zfcp_dbf_rec_trig()    zfcp_erp_strategy()    zfcp_dbf_rec_trig()
    unlock ERP                                    lock DBF REC
    zfcp_erp_wait()        lock ERP
    |                      zfcp_erp_action_to_running()
    |                                             list_for_each() ready
    |                      list_move()              current entry
    |                        ready to running
    |                      zfcp_dbf_rec_run()       endless loop over running
    |                      zfcp_dbf_rec_run_lvl()
    |                      lock DBF REC spins forever
    
    Any adapter recovery can trigger this, such as setting the device offline
    or reboot.
    
    V4.9 commit 4eeaa4f3f1d6 ("zfcp: close window with unblocked rport
    during rport gone") introduced additional tracing of (un)blocking of
    rports. It missed that the adapter->erp_lock must be held when calling
    zfcp_dbf_rec_trig().
    
    This fix uses the approach formerly introduced by commit aa0fec62391c
    ("[SCSI] zfcp: Fix sparse warning by providing new entry in dbf") that got
    later removed by commit ae0904f60fab ("[SCSI] zfcp: Redesign of the debug
    tracing for recovery actions.").
    
    Introduce zfcp_dbf_rec_trig_lock(), a wrapper for zfcp_dbf_rec_trig() that
    acquires and releases the adapter->erp_lock for read.
    
    Reported-by: Sebastian Ott <sebott@linux.ibm.com>
    Signed-off-by: Jens Remus <jremus@linux.ibm.com>
    Fixes: 4eeaa4f3f1d6 ("zfcp: close window with unblocked rport during rport gone")
    Cc: <stable@vger.kernel.org> # 2.6.32+
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d827bea2d18c07ba514f7d48cde49f90da9a1384
Author: Alexander Potapenko <glider@google.com>
Date:   Fri May 18 16:23:18 2018 +0200

    scsi: sg: allocate with __GFP_ZERO in sg_build_indirect()
    
    commit a45b599ad808c3c982fdcdc12b0b8611c2f92824 upstream.
    
    This shall help avoid copying uninitialized memory to the userspace when
    calling ioctl(fd, SG_IO) with an empty command.
    
    Reported-by: syzbot+7d26fc1eea198488deab@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58442874542fb41fd53de4ab34be180ad43779c9
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Mar 8 10:34:53 2018 +0800

    scsi: libsas: defer ata device eh commands to libata
    
    commit 318aaf34f1179b39fa9c30fa0f3288b645beee39 upstream.
    
    When ata device doing EH, some commands still attached with tasks are
    not passed to libata when abort failed or recover failed, so libata did
    not handle these commands. After these commands done, sas task is freed,
    but ata qc is not freed. This will cause ata qc leak and trigger a
    warning like below:
    
    WARNING: CPU: 0 PID: 28512 at drivers/ata/libata-eh.c:4037
    ata_eh_finish+0xb4/0xcc
    CPU: 0 PID: 28512 Comm: kworker/u32:2 Tainted: G     W  OE 4.14.0#1
    ......
    Call trace:
    [<ffff0000088b7bd0>] ata_eh_finish+0xb4/0xcc
    [<ffff0000088b8420>] ata_do_eh+0xc4/0xd8
    [<ffff0000088b8478>] ata_std_error_handler+0x44/0x8c
    [<ffff0000088b8068>] ata_scsi_port_error_handler+0x480/0x694
    [<ffff000008875fc4>] async_sas_ata_eh+0x4c/0x80
    [<ffff0000080f6be8>] async_run_entry_fn+0x4c/0x170
    [<ffff0000080ebd70>] process_one_work+0x144/0x390
    [<ffff0000080ec100>] worker_thread+0x144/0x418
    [<ffff0000080f2c98>] kthread+0x10c/0x138
    [<ffff0000080855dc>] ret_from_fork+0x10/0x18
    
    If ata qc leaked too many, ata tag allocation will fail and io blocked
    for ever.
    
    As suggested by Dan Williams, defer ata device commands to libata and
    merge sas_eh_finish_cmd() with sas_eh_defer_cmd(). libata will handle
    ata qcs correctly after this.
    
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: Xiaofei Tan <tanxiaofei@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1a35f5ddf369ed50bd46bf53d1c54697781317f
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:09 2018 +0200

    s390: use expoline thunks in the BPF JIT
    
    [ Upstream commit de5cb6eb514ebe241e3edeb290cb41deb380b81d ]
    
    The BPF JIT need safe guarding against spectre v2 in the sk_load_xxx
    assembler stubs and the indirect branches generated by the JIT itself
    need to be converted to expolines.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 457b944b61e6f192c8a6136451cce5ca0aa92027
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:08 2018 +0200

    s390: extend expoline to BC instructions
    
    [ Upstream commit 6deaa3bbca804b2a3627fd685f75de64da7be535 ]
    
    The BPF JIT uses a 'b <disp>(%r<x>)' instruction in the definition
    of the sk_load_word and sk_load_half functions.
    
    Add support for branch-on-condition instructions contained in the
    thunk code of an expoline.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a206c82f9bc98a314d8aa98f93d9977147e1b6d0
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:07 2018 +0200

    s390: move spectre sysfs attribute code
    
    [ Upstream commit 4253b0e0627ee3461e64c2495c616f1c8f6b127b ]
    
    The nospec-branch.c file is compiled without the gcc options to
    generate expoline thunks. The return branch of the sysfs show
    functions cpu_show_spectre_v1 and cpu_show_spectre_v2 is an indirect
    branch as well. These need to be compiled with expolines.
    
    Move the sysfs functions for spectre reporting to a separate file
    and loose an '.' for one of the messages.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: d424986f1d ("s390: add sysfs attributes for spectre")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a146a9b32400b52ca763df14344f7ab8c161f55
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:06 2018 +0200

    s390/kernel: use expoline for indirect branches
    
    [ Upstream commit c50c84c3ac4d5db683904bdb3257798b6ef980ae ]
    
    The assember code in arch/s390/kernel uses a few more indirect branches
    which need to be done with execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1bd3b99607b1e131b07847d3a763295ceacc51e
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:05 2018 +0200

    s390/ftrace: use expoline for indirect branches
    
    [ Upstream commit 23a4d7fd34856da8218c4cfc23dba7a6ec0a423a ]
    
    The return from the ftrace_stub, _mcount, ftrace_caller and
    return_to_handler functions is done with "br %r14" and "br %r1".
    These are indirect branches as well and need to use execute
    trampolines for CONFIG_EXPOLINE=y.
    
    The ftrace_caller function is a special case as it returns to the
    start of a function and may only use %r0 and %r1. For a pre z10
    machine the standard execute trampoline uses a LARL + EX to do
    this, but this requires *two* registers in the range %r1..%r15.
    To get around this the 'br %r1' located in the lowcore is used,
    then the EX instruction does not need an address register.
    But the lowcore trick may only be used for pre z14 machines,
    with noexec=on the mapping for the first page may not contain
    instructions. The solution for that is an ALTERNATIVE in the
    expoline THUNK generated by 'GEN_BR_THUNK %r1' to switch to
    EXRL, this relies on the fact that a machine that supports
    noexec=on has EXRL as well.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d201ff077a8160f1bba570a767ea98e901f3323
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:04 2018 +0200

    s390/lib: use expoline for indirect branches
    
    [ Upstream commit 97489e0663fa700d6e7febddc43b58df98d7bcda ]
    
    The return from the memmove, memset, memcpy, __memset16, __memset32 and
    __memset64 functions are done with "br %r14". These are indirect branches
    as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7aa3f13e146418b7cbf12e64f1e2cb0261681ca
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:03 2018 +0200

    s390/crc32-vx: use expoline for indirect branches
    
    [ Upstream commit 467a3bf219cee12259182c5cb4821f88fd518a51 ]
    
    The return from the crc32_le_vgfm_16/crc32c_le_vgfm_16 and the
    crc32_be_vgfm_16 functions are done with "br %r14". These are indirect
    branches as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3ad546e6094d1be00d71087c5d0d8656ef5d6c2
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:02 2018 +0200

    s390: move expoline assembler macros to a header
    
    [ Upstream commit 6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba ]
    
    To be able to use the expoline branches in different assembler
    files move the associated macros from entry.S to a new header
    nospec-insn.h.
    
    While we are at it make the macros a bit nicer to use.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a38169fb6025fdc6d468b1111a43e719c2143a6
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:01 2018 +0200

    s390: add assembler macros for CPU alternatives
    
    [ Upstream commit fba9eb7946251d6e420df3bdf7bc45195be7be9a ]
    
    Add a header with macros usable in assembler files to emit alternative
    code sequences. It works analog to the alternatives for inline assmeblies
    in C files, with the same restrictions and capabilities.
    The syntax is
    
         ALTERNATIVE "<default instructions sequence>", \
                     "<alternative instructions sequence>", \
                     "<features-bit>"
    and
    
         ALTERNATIVE_2 "<default instructions sequence>", \
                       "<alternative instructions sqeuence #1>", \
                       "<feature-bit #1>",
                       "<alternative instructions sqeuence #2>", \
                       "<feature-bit #2>"
    
    Reviewed-by: Vasily Gorbik <gor@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 131ff238b85971c75679670be41df5feb6b6530e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu May 17 17:18:30 2018 -0400

    ext2: fix a block leak
    
    commit 5aa1437d2d9a068c0334bd7c9dafa8ec4f97f13b upstream.
    
    open file, unlink it, then use ioctl(2) to make it immutable or
    append only.  Now close it and watch the blocks *not* freed...
    
    Immutable/append-only checks belong in ->setattr().
    Note: the bug is old and backport to anything prior to 737f2e93b972
    ("ext2: convert to use the new truncate convention") will need
    these checks lifted into ext2_setattr().
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea5ffcd46716fcda3da98313cffcf1ae5dcbb2c2
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Wed Apr 25 20:26:14 2018 +0530

    sparc: vio: use put_device() instead of kfree()
    
    [ Upstream commit 00ad691ab140b54ab9f5de5e74cb994f552e8124 ]
    
    Never directly free @dev after calling device_register(), even
    if it returned an error. Always use put_device() to give up the
    reference initialized.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c98b38c5ede478b938944109e71798462c36c88c
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Mon May 14 15:32:22 2018 -0700

    hv_netvsc: Fix net device attach on older Windows hosts
    
    [ Commit 55be9f25be1ca5bda75c39808fc77e42691bc07f upstream. ]
    
    On older windows hosts the net_device instance is returned to
    the caller of rndis_filter_device_add() without having the presence
    bit set first. This would cause any subsequent calls to network device
    operations (e.g. MTU change, channel change) to fail after the device
    is detached once, returning -ENODEV.
    
    Instead of returning the device instabce, we take the exit path where
    we call netif_device_attach()
    
    Fixes: 7b2ee50c0cd5 ("hv_netvsc: common detach logic")
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7da51021c8d3d09cc31396a12af75bb222dcfcf
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Mon May 14 15:32:21 2018 -0700

    hv_netvsc: Ensure correct teardown message sequence order
    
    [ Commit a56d99d714665591fed8527b90eef21530ea61e0 upstream. ]
    
    Prior to commit 0cf737808ae7 ("hv_netvsc: netvsc_teardown_gpadl() split")
    the call sequence in netvsc_device_remove() was as follows (as
    implemented in netvsc_destroy_buf()):
    1- Send NVSP_MSG1_TYPE_REVOKE_RECV_BUF message
    2- Teardown receive buffer GPADL
    3- Send NVSP_MSG1_TYPE_REVOKE_SEND_BUF message
    4- Teardown send buffer GPADL
    5- Close vmbus
    
    This didn't work for WS2016 hosts. Commit 0cf737808ae7
    ("hv_netvsc: netvsc_teardown_gpadl() split") rearranged the
    teardown sequence as follows:
    1- Send NVSP_MSG1_TYPE_REVOKE_RECV_BUF message
    2- Send NVSP_MSG1_TYPE_REVOKE_SEND_BUF message
    3- Close vmbus
    4- Teardown receive buffer GPADL
    5- Teardown send buffer GPADL
    
    That worked well for WS2016 hosts, but it prevented guests on older hosts from
    shutting down after changing network settings. Commit 0ef58b0a05c1
    ("hv_netvsc: change GPAD teardown order on older versions") ensured the
    following message sequence for older hosts
    1- Send NVSP_MSG1_TYPE_REVOKE_RECV_BUF message
    2- Send NVSP_MSG1_TYPE_REVOKE_SEND_BUF message
    3- Teardown receive buffer GPADL
    4- Teardown send buffer GPADL
    5- Close vmbus
    
    However, with this sequence calling `ip link set eth0 mtu 1000` hangs and the
    process becomes uninterruptible. On futher analysis it turns out that on tearing
    down the receive buffer GPADL the kernel is waiting indefinitely
    in vmbus_teardown_gpadl() for a completion to be signaled.
    
    Here is a snippet of where this occurs:
    int vmbus_teardown_gpadl(struct vmbus_channel *channel, u32 gpadl_handle)
    {
            struct vmbus_channel_gpadl_teardown *msg;
            struct vmbus_channel_msginfo *info;
            unsigned long flags;
            int ret;
    
            info = kmalloc(sizeof(*info) +
                           sizeof(struct vmbus_channel_gpadl_teardown), GFP_KERNEL);
            if (!info)
                    return -ENOMEM;
    
            init_completion(&info->waitevent);
            info->waiting_channel = channel;
    [....]
            ret = vmbus_post_msg(msg, sizeof(struct vmbus_channel_gpadl_teardown),
                                 true);
    
            if (ret)
                    goto post_msg_err;
    
            wait_for_completion(&info->waitevent);
    [....]
    }
    
    The completion is signaled from vmbus_ongpadl_torndown(), which gets called when
    the corresponding message is received from the host, which apparently never happens
    in that case.
    This patch works around the issue by restoring the first mentioned message sequence
    for older hosts
    
    Fixes: 0ef58b0a05c1 ("hv_netvsc: change GPAD teardown order on older versions")
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5345b11680f22cfe8c1439fcb65f602876a9d1d
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Mon May 14 15:32:20 2018 -0700

    hv_netvsc: Split netvsc_revoke_buf() and netvsc_teardown_gpadl()
    
    [ Commit 7992894c305eaf504d005529637ff8283d0a849d upstream. ]
    
    Split each of the functions into two for each of send/recv buffers.
    This will be needed in order to implement a fine-grained messaging
    sequence to the host so that we accommodate the requirements of
    different Windows versions
    
    Fixes: 0ef58b0a05c12 ("hv_netvsc: change GPAD teardown order on older versions")
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8c3e04d39132d2aa72bb62df1b14b95f0af90d8
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Mon May 14 15:32:19 2018 -0700

    hv_netvsc: Use Windows version instead of NVSP version on GPAD teardown
    
    commit 2afc5d61a7197de25a61f54ea4ecfb4cb62b1d42A upstram
    
    When changing network interface settings, Windows guests
    older than WS2016 can no longer shutdown. This was addressed
    by commit 0ef58b0a05c12 ("hv_netvsc: change GPAD teardown order
    on older versions"), however the issue also occurs on WS2012
    guests that share NVSP protocol versions with WS2016 guests.
    Hence we use Windows version directly to differentiate them.
    
    Fixes: 0ef58b0a05c12 ("hv_netvsc: change GPAD teardown order on older versions")
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be9c798d0d13ae609a91177323ac816545c39d28
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:18 2018 -0700

    hv_netvsc: common detach logic
    
    [ Commit 7b2ee50c0cd513a176a26a71f2989facdd75bfea upstream. ]
    
    Make common function for detaching internals of device
    during changes to MTU and RSS. Make sure no more packets
    are transmitted and all packets have been received before
    doing device teardown.
    
    Change the wait logic to be common and use usleep_range().
    
    Changes transmit enabling logic so that transmit queues are disabled
    during the period when lower device is being changed. And enabled
    only after sub channels are setup. This avoids issue where it could
    be that a packet was being sent while subchannel was not initialized.
    
    Fixes: 8195b1396ec8 ("hv_netvsc: fix deadlock on hotplug")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905f85c289d7fafd87fccff3f6d87f3782372e6e
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:17 2018 -0700

    hv_netvsc: change GPAD teardown order on older versions
    
    [ Commit 0ef58b0a05c127762f975c3dfe8b922e4aa87a29 upstream. ]
    
    On older versions of Windows, the host ignores messages after
    vmbus channel is closed.
    
    Workaround this by doing what Windows does and send the teardown
    before close on older versions of NVSP protocol.
    
    Reported-by: Mohammed Gamal <mgamal@redhat.com>
    Fixes: 0cf737808ae7 ("hv_netvsc: netvsc_teardown_gpadl() split")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c6439c7b1689f27c0c6957391da22343425ca18
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:16 2018 -0700

    hv_netvsc: use RCU to fix concurrent rx and queue changes
    
    [ Commit 02400fcee2542ee334a2394e0d9f6efd969fe782 upstream. ]
    
    The receive processing may continue to happen while the
    internal network device state is in RCU grace period.
    The internal RNDIS structure is associated with the
    internal netvsc_device structure; both have the same
    RCU lifetime.
    
    Defer freeing all associated parts until after grace
    period.
    
    Fixes: 0cf737808ae7 ("hv_netvsc: netvsc_teardown_gpadl() split")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f3ef8a7a3c667f72bcb20be61ec4b4214f355b2
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:15 2018 -0700

    hv_netvsc: disable NAPI before channel close
    
    [ Commit 8348e0460ab1473f06c8b824699dd2eed3c1979d upstream. ]
    
    This makes sure that no CPU is still process packets when
    the channel is closed.
    
    Fixes: 76bb5db5c749 ("netvsc: fix use after free on module removal")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9aab25e3326842b1986ecbad2af51a75c0dd646
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:14 2018 -0700

    hv_netvsc: defer queue selection to VF
    
    [ Commit b3bf5666a51068ad5ddd89a76ed877101ef3bc16 upstream. ]
    
    When VF is used for accelerated networking it will likely have
    more queues (and different policy) than the synthetic NIC.
    This patch defers the queue policy to the VF so that all the
    queues can be used. This impacts workloads like local generate UDP.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ac663c5674a8ed1b986e3de82d6b5427536b5ad
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:13 2018 -0700

    hv_netvsc: fix race in napi poll when rescheduling
    
    [ Commit d64e38ae690e3337db0d38d9b149a193a1646c4b upstream. ]
    
    There is a race between napi_reschedule and re-enabling interrupts
    which could lead to missed host interrrupts.  This occurs when
    interrupts are re-enabled (hv_end_read) and vmbus irq callback
    (netvsc_channel_cb) has already scheduled NAPI.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99e06589bd5d6631bbea0a5128257bf16dabac9b
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:12 2018 -0700

    hv_netvsc: cancel subchannel setup before halting device
    
    [ Commit a7483ec0267c69b34e818738da60b392623da94b upstream. ]
    
    Block setup of multiple channels earlier in the teardown
    process. This avoids possible races between halt and subchannel
    initialization.
    
    Suggested-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ed8945b3aa627ef8ec9dda6442b02c91f27bfb4
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:11 2018 -0700

    hv_netvsc: fix error unwind handling if vmbus_open fails
    
    [ Commit fcfb4a00d1e514e8313277a01ef919de1113025b upstream. ]
    
    Need to delete NAPI association if vmbus_open fails.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4857dca4dd65756dfdb90b33946d8f9d5c6447b8
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:10 2018 -0700

    hv_netvsc: only wake transmit queue if link is up
    
    [ Commit f4950e4586dfc957e0a28226eeb992ddc049b5a2 upstream. ]
    
    Don't wake transmit queues if link is not up yet.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0395570f81feeebbf0f390876c8ca763b6ce773c
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:09 2018 -0700

    hv_netvsc: avoid retry on send during shutdown
    
    [ Commit 12f69661a49446840d742d8feb593ace022d9f66 upstream. ]
    
    Change the initialization order so that the device is ready to transmit
    (ie connect vsp is completed) before setting the internal reference
    to the device with RCU.
    
    This avoids any races on initialization and prevents retry issues
    on shutdown.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36a9609cef4a32a1cfd9b8c765671f11caf03a7d
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Mon May 14 15:32:08 2018 -0700

    hv_netvsc: Use the num_online_cpus() for channel limit
    
    [ Commit 25a39f7f975c3c26a0052fbf9b59201c06744332 upstream. ]
    
    Since we no longer localize channel/CPU affiliation within one NUMA
    node, num_online_cpus() is used as the number of channel cap, instead of
    the number of processors in a NUMA node.
    
    This patch allows a bigger range for tuning the number of channels.
    
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c5fef7789571672459e18170add13ca56f33246
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon May 14 15:32:07 2018 -0700

    hv_netvsc: empty current transmit aggregation if flow blocked
    
    [ Commit cfd8afd986cdb59ea9adac873c5082498a1eb7c0 upstream. ]
    
    If the transmit queue is known full, then don't keep aggregating
    data. And the cp_partial flag which indicates that the current
    aggregation buffer is full can be folded in to avoid more
    conditionals.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41f24dbef1771a32f3a8e3f9a2f89633c985df0a
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Mon May 14 15:32:06 2018 -0700

    hv_netvsc: preserve hw_features on mtu/channels/ringparam changes
    
    [ Commit aefd80e874e98a864915df5b7d90824a4340b450 upstream. ]
    
    rndis_filter_device_add() is called both from netvsc_probe() when we
    initially create the device and from set channels/mtu/ringparam
    routines where we basically remove the device and add it back.
    
    hw_features is reset in rndis_filter_device_add() and filled with
    host data. However, we lose all additional flags which are set outside
    of the driver, e.g. register_netdevice() adds NETIF_F_SOFT_FEATURES and
    many others.
    
    Unfortunately, calls to rndis_{query_hwcaps(), _set_offload_params()}
    calls cannot be avoided on every RNDIS reset: host expects us to set
    required features explicitly. Moreover, in theory hardware capabilities
    can change and we need to reflect the change in hw_features.
    
    Reset net->hw_features bits according to host data in
    rndis_netdev_set_hwcaps(), clear corresponding feature bits
    from net->features in case some features went missing (will never happen
    in real life I guess but let's be consistent).
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 284a58c02eeb7f235f0a465580cf1cd739cc7d5d
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Mon May 14 15:32:05 2018 -0700

    hv_netvsc: netvsc_teardown_gpadl() split
    
    [ Commit 0cf737808ae7cb25e952be619db46b9147a92f46 upstream. ]
    
    It was found that in some cases host refuses to teardown GPADL for send/
    receive buffers (probably when some work with these buffere is scheduled or
    ongoing). Change the teardown logic to be:
    1) Send NVSP_MSG1_TYPE_REVOKE_* messages
    2) Close the channel
    3) Teardown GPADLs.
    This seems to work reliably.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6296e73e459d76ee9c6c83917bd4da6b5f8a049c
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Mon May 14 15:32:04 2018 -0700

    hv_netvsc: Set tx_table to equal weight after subchannels open
    
    [ Commit a6fb6aa3cfa9047b62653dbcfc9bcde6e2272b41 upstream. ]
    
    In some cases, like internal vSwitch, the host doesn't provide
    send indirection table updates. This patch sets the table to be
    equal weight after subchannels are all open. Otherwise, all workload
    will be on one TX channel.
    
    As tested, this patch has largely increased the throughput over
    internal vSwitch.
    
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef1c5903cd2a44c161de86f862182afddb4a9677
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Mon May 14 15:32:03 2018 -0700

    hv_netvsc: Add initialization of tx_table in netvsc_device_add()
    
    [ Commit 6b0cbe315868d613123cf387052ccda5f09d49ea upstream. ]
    
    tx_table is part of the private data of kernel net_device. It is only
    zero-ed out when allocating net_device.
    
    We may recreate netvsc_device w/o recreating net_device, so the private
    netdev data, including tx_table, are not zeroed. It may contain channel
    numbers for the older netvsc_device.
    
    This patch adds initialization of tx_table each time we recreate
    netvsc_device.
    
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3a303352e5142da2405d59d70aaf6aad04ef932
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Mon May 14 15:32:02 2018 -0700

    hv_netvsc: Rename tx_send_table to tx_table
    
    [ Commit 39e91cfbf6f5fb26ba64cc2e8874372baf1671e7 upstream. ]
    
    Simplify the variable name: tx_send_table
    
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5acc4d1e8fe23da9de9f82129c50cf5a3d6cc796
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Mon May 14 15:32:01 2018 -0700

    hv_netvsc: Rename ind_table to rx_table
    
    [ Commit 47371300dfc269dd8d150e5b872bdbbda98ba809 upstream. ]
    
    Rename this variable because it is the Receive indirection
    table.
    
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 836f8472f1bded05ea4c35b07009f4fd6fcd6bfa
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Mon May 14 15:32:00 2018 -0700

    hv_netvsc: Fix the real number of queues of non-vRSS cases
    
    [ Commit 6450f8f269a9271985e4a8c13920b7e4cf21c0f3 upstream. ]
    
    For older hosts without multi-channel (vRSS) support, and some error
    cases, we still need to set the real number of queues to one.
    This patch adds this missing setting.
    
    Fixes: 8195b1396ec8 ("hv_netvsc: fix deadlock on hotplug")
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 099612827aa3e09decce41f8a5cd1d473232eeb9
Author: hpreg@vmware.com <hpreg@vmware.com>
Date:   Mon May 14 08:14:49 2018 -0400

    vmxnet3: use DMA memory barriers where required
    
    [ Upstream commit f3002c1374fb2367c9d8dbb28852791ef90d2bac ]
    
    The gen bits must be read first from (resp. written last to) DMA memory.
    The proper way to enforce this on Linux is to call dma_rmb() (resp.
    dma_wmb()).
    
    Signed-off-by: Regis Duchesne <hpreg@vmware.com>
    Acked-by: Ronak Doshi <doshir@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74327eda43d039a47ff8d35e3524ab145f8cdbaf
Author: hpreg@vmware.com <hpreg@vmware.com>
Date:   Mon May 14 08:14:34 2018 -0400

    vmxnet3: set the DMA mask before the first DMA map operation
    
    [ Upstream commit 61aeecea40afb2b89933e27cd4adb10fc2e75cfd ]
    
    The DMA mask must be set before, not after, the first DMA map operation, or
    the first DMA map operation could in theory fail on some systems.
    
    Fixes: b0eb57cb97e78 ("VMXNET3: Add support for virtual IOMMU")
    Signed-off-by: Regis Duchesne <hpreg@vmware.com>
    Acked-by: Ronak Doshi <doshir@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c89d534301a028125432e7d9a39edb08cfd90480
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 14 21:14:26 2018 -0700

    tcp: purge write queue in tcp_connect_init()
    
    [ Upstream commit 7f582b248d0a86bae5788c548d7bb5bca6f7691a ]
    
    syzkaller found a reliable way to crash the host, hitting a BUG()
    in __tcp_retransmit_skb()
    
    Malicous MSG_FASTOPEN is the root cause. We need to purge write queue
    in tcp_connect_init() at the point we init snd_una/write_seq.
    
    This patch also replaces the BUG() by a less intrusive WARN_ON_ONCE()
    
    kernel BUG at net/ipv4/tcp_output.c:2837!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 0 PID: 5276 Comm: syz-executor0 Not tainted 4.17.0-rc3+ #51
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__tcp_retransmit_skb+0x2992/0x2eb0 net/ipv4/tcp_output.c:2837
    RSP: 0000:ffff8801dae06ff8 EFLAGS: 00010206
    RAX: ffff8801b9fe61c0 RBX: 00000000ffc18a16 RCX: ffffffff864e1a49
    RDX: 0000000000000100 RSI: ffffffff864e2e12 RDI: 0000000000000005
    RBP: ffff8801dae073a0 R08: ffff8801b9fe61c0 R09: ffffed0039c40dd2
    R10: ffffed0039c40dd2 R11: ffff8801ce206e93 R12: 00000000421eeaad
    R13: ffff8801ce206d4e R14: ffff8801ce206cc0 R15: ffff8801cd4f4a80
    FS:  0000000000000000(0000) GS:ffff8801dae00000(0063) knlGS:00000000096bc900
    CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
    CR2: 0000000020000000 CR3: 00000001c47b6000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <IRQ>
     tcp_retransmit_skb+0x2e/0x250 net/ipv4/tcp_output.c:2923
     tcp_retransmit_timer+0xc50/0x3060 net/ipv4/tcp_timer.c:488
     tcp_write_timer_handler+0x339/0x960 net/ipv4/tcp_timer.c:573
     tcp_write_timer+0x111/0x1d0 net/ipv4/tcp_timer.c:593
     call_timer_fn+0x230/0x940 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x79e/0xc50 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2e0/0xaf5 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1d1/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:525 [inline]
     smp_apic_timer_interrupt+0x17e/0x710 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:863
    
    Fixes: cf60af03ca4e ("net-tcp: Fast Open client - sendmsg(MSG_FASTOPEN)")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edabcd0f12ae3f4c1bfa7cc1bc655a6f722fd120
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri May 18 04:47:55 2018 -0700

    sock_diag: fix use-after-free read in __sk_free
    
    [ Upstream commit 9709020c86f6bf8439ca3effc58cfca49a5de192 ]
    
    We must not call sock_diag_has_destroy_listeners(sk) on a socket
    that has no reference on net structure.
    
    BUG: KASAN: use-after-free in sock_diag_has_destroy_listeners include/linux/sock_diag.h:75 [inline]
    BUG: KASAN: use-after-free in __sk_free+0x329/0x340 net/core/sock.c:1609
    Read of size 8 at addr ffff88018a02e3a0 by task swapper/1/0
    
    CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.17.0-rc5+ #54
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1b9/0x294 lib/dump_stack.c:113
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0x242/0x2fe mm/kasan/report.c:412
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:433
     sock_diag_has_destroy_listeners include/linux/sock_diag.h:75 [inline]
     __sk_free+0x329/0x340 net/core/sock.c:1609
     sk_free+0x42/0x50 net/core/sock.c:1623
     sock_put include/net/sock.h:1664 [inline]
     reqsk_free include/net/request_sock.h:116 [inline]
     reqsk_put include/net/request_sock.h:124 [inline]
     inet_csk_reqsk_queue_drop_and_put net/ipv4/inet_connection_sock.c:672 [inline]
     reqsk_timer_handler+0xe27/0x10e0 net/ipv4/inet_connection_sock.c:739
     call_timer_fn+0x230/0x940 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x79e/0xc50 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2e0/0xaf5 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1d1/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:525 [inline]
     smp_apic_timer_interrupt+0x17e/0x710 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:863
     </IRQ>
    RIP: 0010:native_safe_halt+0x6/0x10 arch/x86/include/asm/irqflags.h:54
    RSP: 0018:ffff8801d9ae7c38 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff13
    RAX: dffffc0000000000 RBX: 1ffff1003b35cf8a RCX: 0000000000000000
    RDX: 1ffffffff11a30d0 RSI: 0000000000000001 RDI: ffffffff88d18680
    RBP: ffff8801d9ae7c38 R08: ffffed003b5e46c3 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000001
    R13: ffff8801d9ae7cf0 R14: ffffffff897bef20 R15: 0000000000000000
     arch_safe_halt arch/x86/include/asm/paravirt.h:94 [inline]
     default_idle+0xc2/0x440 arch/x86/kernel/process.c:354
     arch_cpu_idle+0x10/0x20 arch/x86/kernel/process.c:345
     default_idle_call+0x6d/0x90 kernel/sched/idle.c:93
     cpuidle_idle_call kernel/sched/idle.c:153 [inline]
     do_idle+0x395/0x560 kernel/sched/idle.c:262
     cpu_startup_entry+0x104/0x120 kernel/sched/idle.c:368
     start_secondary+0x426/0x5b0 arch/x86/kernel/smpboot.c:269
     secondary_startup_64+0xa5/0xb0 arch/x86/kernel/head_64.S:242
    
    Allocated by task 4557:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc4/0xe0 mm/kasan/kasan.c:553
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:490
     kmem_cache_alloc+0x12e/0x760 mm/slab.c:3554
     kmem_cache_zalloc include/linux/slab.h:691 [inline]
     net_alloc net/core/net_namespace.c:383 [inline]
     copy_net_ns+0x159/0x4c0 net/core/net_namespace.c:423
     create_new_namespaces+0x69d/0x8f0 kernel/nsproxy.c:107
     unshare_nsproxy_namespaces+0xc3/0x1f0 kernel/nsproxy.c:206
     ksys_unshare+0x708/0xf90 kernel/fork.c:2408
     __do_sys_unshare kernel/fork.c:2476 [inline]
     __se_sys_unshare kernel/fork.c:2474 [inline]
     __x64_sys_unshare+0x31/0x40 kernel/fork.c:2474
     do_syscall_64+0x1b1/0x800 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Freed by task 69:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x11a/0x170 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kmem_cache_free+0x86/0x2d0 mm/slab.c:3756
     net_free net/core/net_namespace.c:399 [inline]
     net_drop_ns.part.14+0x11a/0x130 net/core/net_namespace.c:406
     net_drop_ns net/core/net_namespace.c:405 [inline]
     cleanup_net+0x6a1/0xb20 net/core/net_namespace.c:541
     process_one_work+0xc1e/0x1b50 kernel/workqueue.c:2145
     worker_thread+0x1cc/0x1440 kernel/workqueue.c:2279
     kthread+0x345/0x410 kernel/kthread.c:240
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:412
    
    The buggy address belongs to the object at ffff88018a02c140
     which belongs to the cache net_namespace of size 8832
    The buggy address is located 8800 bytes inside of
     8832-byte region [ffff88018a02c140, ffff88018a02e3c0)
    The buggy address belongs to the page:
    page:ffffea0006280b00 count:1 mapcount:0 mapping:ffff88018a02c140 index:0x0 compound_mapcount: 0
    flags: 0x2fffc0000008100(slab|head)
    raw: 02fffc0000008100 ffff88018a02c140 0000000000000000 0000000100000001
    raw: ffffea00062a1320 ffffea0006268020 ffff8801d9bdde40 0000000000000000
    page dumped because: kasan: bad access detected
    
    Fixes: b922622ec6ef ("sock_diag: don't broadcast kernel sockets")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Craig Gallek <kraig@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01a658c1b9d4b5393c38d5a92d9112ab1425382a
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri May 11 13:24:25 2018 -0400

    packet: in packet_snd start writing at link layer allocation
    
    [ Upstream commit b84bbaf7a6c8cca24f8acf25a2c8e46913a947ba ]
    
    Packet sockets allow construction of packets shorter than
    dev->hard_header_len to accommodate protocols with variable length
    link layer headers. These packets are padded to dev->hard_header_len,
    because some device drivers interpret that as a minimum packet size.
    
    packet_snd reserves dev->hard_header_len bytes on allocation.
    SOCK_DGRAM sockets call skb_push in dev_hard_header() to ensure that
    link layer headers are stored in the reserved range. SOCK_RAW sockets
    do the same in tpacket_snd, but not in packet_snd.
    
    Syzbot was able to send a zero byte packet to a device with massive
    116B link layer header, causing padding to cross over into skb_shinfo.
    Fix this by writing from the start of the llheader reserved range also
    in the case of packet_snd/SOCK_RAW.
    
    Update skb_set_network_header to the new offset. This also corrects
    it for SOCK_DGRAM, where it incorrectly double counted reserve due to
    the skb_push in dev_hard_header.
    
    Fixes: 9ed988cd5915 ("packet: validate variable length ll headers")
    Reported-by: syzbot+71d74a5406d02057d559@syzkaller.appspotmail.com
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c02756173e654eb4dade1dc01d9419e338cf0ffa
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu May 17 13:13:29 2018 -0400

    net: test tailroom before appending to linear skb
    
    [ Upstream commit 113f99c3358564a0647d444c2ae34e8b1abfd5b9 ]
    
    Device features may change during transmission. In particular with
    corking, a device may toggle scatter-gather in between allocating
    and writing to an skb.
    
    Do not unconditionally assume that !NETIF_F_SG at write time implies
    that the same held at alloc time and thus the skb has sufficient
    tailroom.
    
    This issue predates git history.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cedbdda01fe1926d4c7c3ee117d2855803d55a3
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun May 13 17:01:30 2018 -0700

    net/smc: check for missing nlattrs in SMC_PNETID messages
    
    [ Upstream commit d49baa7e12ee70c0a7b821d088a770c94c02e494 ]
    
    It's possible to crash the kernel in several different ways by sending
    messages to the SMC_PNETID generic netlink family that are missing the
    expected attributes:
    
    - Missing SMC_PNETID_NAME => null pointer dereference when comparing
      names.
    - Missing SMC_PNETID_ETHNAME => null pointer dereference accessing
      smc_pnetentry::ndev.
    - Missing SMC_PNETID_IBNAME => null pointer dereference accessing
      smc_pnetentry::smcibdev.
    - Missing SMC_PNETID_IBPORT => out of bounds array access to
      smc_ib_device::pattr[-1].
    
    Fix it by validating that all expected attributes are present and that
    SMC_PNETID_IBPORT is nonzero.
    
    Reported-by: syzbot+5cd61039dc9b8bfa6e47@syzkaller.appspotmail.com
    Fixes: 6812baabf24d ("smc: establish pnet table management")
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ffa5f9783941fa24f7c8ffc5d8a494bd26c5a47
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Fri May 18 14:51:44 2018 +0200

    net: sched: red: avoid hashing NULL child
    
    [ Upstream commit 44a63b137f7b6e4c7bd6c9cc21615941cb36509d ]
    
    Hangbin reported an Oops triggered by the syzkaller qdisc rules:
    
     kasan: GPF could be caused by NULL-ptr deref or user memory access
     general protection fault: 0000 [#1] SMP KASAN PTI
     Modules linked in: sch_red
     CPU: 0 PID: 28699 Comm: syz-executor5 Not tainted 4.17.0-rc4.kcov #1
     Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011
     RIP: 0010:qdisc_hash_add+0x26/0xa0
     RSP: 0018:ffff8800589cf470 EFLAGS: 00010203
     RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffffff824ad971
     RDX: 0000000000000007 RSI: ffffc9000ce9f000 RDI: 000000000000003c
     RBP: 0000000000000001 R08: ffffed000b139ea2 R09: ffff8800589cf4f0
     R10: ffff8800589cf50f R11: ffffed000b139ea2 R12: ffff880054019fc0
     R13: ffff880054019fb4 R14: ffff88005c0af600 R15: ffff880054019fb0
     FS:  00007fa6edcb1700(0000) GS:ffff88005ce00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000020000740 CR3: 000000000fc16000 CR4: 00000000000006f0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      red_change+0x2d2/0xed0 [sch_red]
      qdisc_create+0x57e/0xef0
      tc_modify_qdisc+0x47f/0x14e0
      rtnetlink_rcv_msg+0x6a8/0x920
      netlink_rcv_skb+0x2a2/0x3c0
      netlink_unicast+0x511/0x740
      netlink_sendmsg+0x825/0xc30
      sock_sendmsg+0xc5/0x100
      ___sys_sendmsg+0x778/0x8e0
      __sys_sendmsg+0xf5/0x1b0
      do_syscall_64+0xbd/0x3b0
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
     RIP: 0033:0x450869
     RSP: 002b:00007fa6edcb0c48 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
     RAX: ffffffffffffffda RBX: 00007fa6edcb16b4 RCX: 0000000000450869
     RDX: 0000000000000000 RSI: 00000000200000c0 RDI: 0000000000000013
     RBP: 000000000072bea0 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
     R13: 0000000000008778 R14: 0000000000702838 R15: 00007fa6edcb1700
     Code: e9 0b fe ff ff 0f 1f 44 00 00 55 53 48 89 fb 89 f5 e8 3f 07 f3 fe 48 8d 7b 3c 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 04 84 d2 75 51
     RIP: qdisc_hash_add+0x26/0xa0 RSP: ffff8800589cf470
    
    When a red qdisc is updated with a 0 limit, the child qdisc is left
    unmodified, no additional scheduler is created in red_change(),
    the 'child' local variable is rightfully NULL and must not add it
    to the hash table.
    
    This change addresses the above issue moving qdisc_hash_add() right
    after the child qdisc creation. It additionally removes unneeded checks
    for noop_qdisc.
    
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Fixes: 49b499718fa1 ("net: sched: make default fifo qdiscs appear in the dump")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Acked-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53b2dbbee18dc6bd94d73050eedb9ab4fa1120f6
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed May 16 12:54:29 2018 +0200

    net/sched: fix refcnt leak in the error path of tcf_vlan_init()
    
    [ Upstream commit 5a4931ae0193f8a4a97e8260fd0df1d705d83299 ]
    
    Similarly to what was done with commit a52956dfc503 ("net sched actions:
    fix refcnt leak in skbmod"), fix the error path of tcf_vlan_init() to avoid
    refcnt leaks when wrong value of TCA_VLAN_PUSH_VLAN_PROTOCOL is given.
    
    Fixes: 5026c9b1bafc ("net sched: vlan action fix late binding")
    CC: Roman Mashak <mrv@mojatatu.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ff45c86e90a493f8e332c9218026c183ce724e2
Author: Tarick Bedeir <tarick@google.com>
Date:   Sun May 13 16:38:45 2018 -0700

    net/mlx4_core: Fix error handling in mlx4_init_port_info.
    
    [ Upstream commit 57f6f99fdad9984801cde05c1db68fe39b474a10 ]
    
    Avoid exiting the function with a lingering sysfs file (if the first
    call to device_create_file() fails while the second succeeds), and avoid
    calling devlink_port_unregister() twice.
    
    In other words, either mlx4_init_port_info() succeeds and returns zero, or
    it fails, returns non-zero, and requires no cleanup.
    
    Fixes: 096335b3f983 ("mlx4_core: Allow dynamic MTU configuration for IB ports")
    Signed-off-by: Tarick Bedeir <tarick@google.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 047df46d6cef651e4a32637632a84916e24b054b
Author: Amritha Nambiar <amritha.nambiar@intel.com>
Date:   Thu May 17 14:50:44 2018 -0700

    net: Fix a bug in removing queues from XPS map
    
    [ Upstream commit 6358d49ac23995fdfe157cc8747ab0f274d3954b ]
    
    While removing queues from the XPS map, the individual CPU ID
    alone was used to index the CPUs map, this should be changed to also
    factor in the traffic class mapping for the CPU-to-queue lookup.
    
    Fixes: 184c449f91fe ("net: Add support for XPS with QoS via traffic classes")
    Signed-off-by: Amritha Nambiar <amritha.nambiar@intel.com>
    Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
