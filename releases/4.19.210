commit e34184f53363f6bb873c2fe0ce1a08ed7d16e94a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Oct 9 14:11:04 2021 +0200

    Linux 4.19.210
    
    Link: https://lore.kernel.org/r/20211008112714.601107695@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9a1ac8e7c03fd09992352c7fb1a61cbbb9ad52b
Author: Davidlohr Bueso <dave@stgolabs.net>
Date:   Wed Jul 24 08:23:23 2019 -0700

    lib/timerqueue: Rely on rbtree semantics for next timer
    
    commit 511885d7061eda3eb1faf3f57dcc936ff75863f1 upstream.
    
    Simplify the timerqueue code by using cached rbtrees and rely on the tree
    leftmost node semantics to get the timer with earliest expiration time.
    This is a drop in conversion, and therefore semantics remain untouched.
    
    The runtime overhead of cached rbtrees is be pretty much the same as the
    current head->next method, noting that when removing the leftmost node,
    a common operation for the timerqueue, the rb_next(leftmost) is O(1) as
    well, so the next timer will either be the right node or its parent.
    Therefore no extra pointer chasing. Finally, the size of the struct
    timerqueue_head remains the same.
    
    Passes several hours of rcutorture.
    
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20190724152323.bojciei3muvfxalm@linux-r8p5
    Reference: CVE-2021-20317
    Signed-off-by: Nobuhiro Iwamatsu (CIP) <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04f4cd7c0063a265cd25796d98f340d85bcab45d
Author: Kate Hsuan <hpa@redhat.com>
Date:   Fri Sep 3 17:44:11 2021 +0800

    libata: Add ATA_HORKAGE_NO_NCQ_ON_ATI for Samsung 860 and 870 SSD.
    
    commit 7a8526a5cd51cf5f070310c6c37dd7293334ac49 upstream.
    
    Many users are reporting that the Samsung 860 and 870 SSD are having
    various issues when combined with AMD/ATI (vendor ID 0x1002)  SATA
    controllers and only completely disabling NCQ helps to avoid these
    issues.
    
    Always disabling NCQ for Samsung 860/870 SSDs regardless of the host
    SATA adapter vendor will cause I/O performance degradation with well
    behaved adapters. To limit the performance impact to ATI adapters,
    introduce the ATA_HORKAGE_NO_NCQ_ON_ATI flag to force disable NCQ
    only for these adapters.
    
    Also, two libata.force parameters (noncqati and ncqati) are introduced
    to disable and enable the NCQ for the system which equipped with ATI
    SATA adapter and Samsung 860 and 870 SSDs. The user can determine NCQ
    function to be enabled or disabled according to the demand.
    
    After verifying the chipset from the user reports, the issue appears
    on AMD/ATI SB7x0/SB8x0/SB9x0 SATA Controllers and does not appear on
    recent AMD SATA adapters. The vendor ID of ATI should be 0x1002.
    Therefore, ATA_HORKAGE_NO_NCQ_ON_AMD was modified to
    ATA_HORKAGE_NO_NCQ_ON_ATI.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201693
    Signed-off-by: Kate Hsuan <hpa@redhat.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210903094411.58749-1-hpa@redhat.com
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Krzysztof Olędzki <ole@ans.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 236dc5397133fb7f94aa91c8d5029a5e278c4933
Author: Changbin Du <changbin.du@intel.com>
Date:   Fri Sep 24 15:43:41 2021 -0700

    tools/vm/page-types: remove dependency on opt_file for idle page tracking
    
    [ Upstream commit ebaeab2fe87987cef28eb5ab174c42cd28594387 ]
    
    Idle page tracking can also be used for process address space, not only
    file mappings.
    
    Without this change, using with '-i' option for process address space
    encounters below errors reported.
    
      $ sudo ./page-types -p $(pidof bash) -i
      mark page idle: Bad file descriptor
      mark page idle: Bad file descriptor
      mark page idle: Bad file descriptor
      mark page idle: Bad file descriptor
      ...
    
    Link: https://lkml.kernel.org/r/20210917032826.10669-1-changbin.du@gmail.com
    Signed-off-by: Changbin Du <changbin.du@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e750003693caba8c183ec96e3075cc322f0a6415
Author: Wen Xiong <wenxiong@linux.ibm.com>
Date:   Thu Sep 16 22:24:21 2021 -0500

    scsi: ses: Retry failed Send/Receive Diagnostic commands
    
    [ Upstream commit fbdac19e642899455b4e64c63aafe2325df7aafa ]
    
    Setting SCSI logging level with error=3, we saw some errors from enclosues:
    
    [108017.360833] ses 0:0:9:0: tag#641 Done: NEEDS_RETRY Result: hostbyte=DID_ERROR driverbyte=DRIVER_OK cmd_age=0s
    [108017.360838] ses 0:0:9:0: tag#641 CDB: Receive Diagnostic 1c 01 01 00 20 00
    [108017.427778] ses 0:0:9:0: Power-on or device reset occurred
    [108017.427784] ses 0:0:9:0: tag#641 Done: SUCCESS Result: hostbyte=DID_OK driverbyte=DRIVER_OK cmd_age=0s
    [108017.427788] ses 0:0:9:0: tag#641 CDB: Receive Diagnostic 1c 01 01 00 20 00
    [108017.427791] ses 0:0:9:0: tag#641 Sense Key : Unit Attention [current]
    [108017.427793] ses 0:0:9:0: tag#641 Add. Sense: Bus device reset function occurred
    [108017.427801] ses 0:0:9:0: Failed to get diagnostic page 0x1
    [108017.427804] ses 0:0:9:0: Failed to bind enclosure -19
    [108017.427895] ses 0:0:10:0: Attached Enclosure device
    [108017.427942] ses 0:0:10:0: Attached scsi generic sg18 type 13
    
    Retry if the Send/Receive Diagnostic commands complete with a transient
    error status (NOT_READY or UNIT_ATTENTION with ASC 0x29).
    
    Link: https://lore.kernel.org/r/1631849061-10210-2-git-send-email-wenxiong@linux.ibm.com
    Reviewed-by: Brian King <brking@linux.ibm.com>
    Reviewed-by: James Bottomley <jejb@linux.ibm.com>
    Signed-off-by: Wen Xiong <wenxiong@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2dd21984a0e3cb420712cd46bf2a69af24bf2b1
Author: Li Zhijian <lizhijian@cn.fujitsu.com>
Date:   Wed Sep 15 21:45:54 2021 +0800

    selftests: be sure to make khdr before other targets
    
    [ Upstream commit 8914a7a247e065438a0ec86a58c1c359223d2c9e ]
    
    LKP/0Day reported some building errors about kvm, and errors message
    are not always same:
    - lib/x86_64/processor.c:1083:31: error: ‘KVM_CAP_NESTED_STATE’ undeclared
    (first use in this function); did you mean ‘KVM_CAP_PIT_STATE2’?
    - lib/test_util.c:189:30: error: ‘MAP_HUGE_16KB’ undeclared (first use
    in this function); did you mean ‘MAP_HUGE_16GB’?
    
    Although kvm relies on the khdr, they still be built in parallel when -j
    is specified. In this case, it will cause compiling errors.
    
    Here we mark target khdr as NOTPARALLEL to make it be always built
    first.
    
    CC: Philip Li <philip.li@intel.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7182993dd8e09f96839ddc3ac54f9b37370d282
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Aug 31 16:42:36 2021 +0800

    usb: dwc2: check return value after calling platform_get_resource()
    
    [ Upstream commit 856e6e8e0f9300befa87dde09edb578555c99a82 ]
    
    It will cause null-ptr-deref if platform_get_resource() returns NULL,
    we need check the return value.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210831084236.1359677-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10fff12be53b0b90860bcafcecf779eb985df5c0
Author: Faizel K B <faizel.kb@dicortech.com>
Date:   Thu Sep 2 17:14:44 2021 +0530

    usb: testusb: Fix for showing the connection speed
    
    [ Upstream commit f81c08f897adafd2ed43f86f00207ff929f0b2eb ]
    
    testusb' application which uses 'usbtest' driver reports 'unknown speed'
    from the function 'find_testdev'. The variable 'entry->speed' was not
    updated from  the application. The IOCTL mentioned in the FIXME comment can
    only report whether the connection is low speed or not. Speed is read using
    the IOCTL USBDEVFS_GET_SPEED which reports the proper speed grade.  The
    call is implemented in the function 'handle_testdev' where the file
    descriptor was availble locally. Sample output is given below where 'high
    speed' is printed as the connected speed.
    
    sudo ./testusb -a
    high speed      /dev/bus/usb/001/011    0
    /dev/bus/usb/001/011 test 0,    0.000015 secs
    /dev/bus/usb/001/011 test 1,    0.194208 secs
    /dev/bus/usb/001/011 test 2,    0.077289 secs
    /dev/bus/usb/001/011 test 3,    0.170604 secs
    /dev/bus/usb/001/011 test 4,    0.108335 secs
    /dev/bus/usb/001/011 test 5,    2.788076 secs
    /dev/bus/usb/001/011 test 6,    2.594610 secs
    /dev/bus/usb/001/011 test 7,    2.905459 secs
    /dev/bus/usb/001/011 test 8,    2.795193 secs
    /dev/bus/usb/001/011 test 9,    8.372651 secs
    /dev/bus/usb/001/011 test 10,    6.919731 secs
    /dev/bus/usb/001/011 test 11,   16.372687 secs
    /dev/bus/usb/001/011 test 12,   16.375233 secs
    /dev/bus/usb/001/011 test 13,    2.977457 secs
    /dev/bus/usb/001/011 test 14 --> 22 (Invalid argument)
    /dev/bus/usb/001/011 test 17,    0.148826 secs
    /dev/bus/usb/001/011 test 18,    0.068718 secs
    /dev/bus/usb/001/011 test 19,    0.125992 secs
    /dev/bus/usb/001/011 test 20,    0.127477 secs
    /dev/bus/usb/001/011 test 21 --> 22 (Invalid argument)
    /dev/bus/usb/001/011 test 24,    4.133763 secs
    /dev/bus/usb/001/011 test 27,    2.140066 secs
    /dev/bus/usb/001/011 test 28,    2.120713 secs
    /dev/bus/usb/001/011 test 29,    0.507762 secs
    
    Signed-off-by: Faizel K B <faizel.kb@dicortech.com>
    Link: https://lore.kernel.org/r/20210902114444.15106-1-faizel.kb@dicortech.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eadb60bcc2005247d97dcb3becee57aba4024ff4
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Sep 6 17:01:12 2021 +0800

    scsi: sd: Free scsi_disk device via put_device()
    
    [ Upstream commit 265dfe8ebbabae7959060bd1c3f75c2473b697ed ]
    
    After a device is initialized via device_initialize() it should be freed
    via put_device(). sd_probe() currently gets this wrong, fix it up.
    
    Link: https://lore.kernel.org/r/20210906090112.531442-1-ming.lei@redhat.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21909f9e0995b80579a1fdc1e857ac2fe5067c4d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 21 23:32:33 2021 +0300

    ext2: fix sleeping in atomic bugs on error
    
    [ Upstream commit 372d1f3e1bfede719864d0d1fbf3146b1e638c88 ]
    
    The ext2_error() function syncs the filesystem so it sleeps.  The caller
    is holding a spinlock so it's not allowed to sleep.
    
       ext2_statfs() <- disables preempt
       -> ext2_count_free_blocks()
          -> ext2_get_group_desc()
    
    Fix this by using WARN() to print an error message and a stack trace
    instead of using ext2_error().
    
    Link: https://lore.kernel.org/r/20210921203233.GA16529@kili
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce53b91e974d7b87fe8a457c2431d050466de87e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 20 10:56:32 2021 -0700

    sparc64: fix pci_iounmap() when CONFIG_PCI is not set
    
    [ Upstream commit d8b1e10a2b8efaf71d151aa756052fbf2f3b6d57 ]
    
    Guenter reported [1] that the pci_iounmap() changes remain problematic,
    with sparc64 allnoconfig and tinyconfig still not building due to the
    header file changes and confusion with the arch-specific pci_iounmap()
    implementation.
    
    I'm pretty convinced that sparc should just use GENERIC_IOMAP instead of
    doing its own thing, since it turns out that the sparc64 version of
    pci_iounmap() is somewhat buggy (see [2]).  But in the meantime, this
    just fixes the build by avoiding the trivial re-definition of the empty
    case.
    
    Link: https://lore.kernel.org/lkml/20210920134424.GA346531@roeck-us.net/ [1]
    Link: https://lore.kernel.org/lkml/CAHk-=wgheheFx9myQyy5osh79BAazvmvYURAtub2gQtMvLrhqQ@mail.gmail.com/ [2]
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Cc: David Miller <davem@davemloft.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75b975ebffbb439729e08bce2675e0db539d3e45
Author: Jan Beulich <jbeulich@suse.com>
Date:   Fri Sep 17 08:27:10 2021 +0200

    xen-netback: correct success/error reporting for the SKB-with-fraglist case
    
    [ Upstream commit 3ede7f84c7c21f93c5eac611d60eba3f2c765e0f ]
    
    When re-entering the main loop of xenvif_tx_check_gop() a 2nd time, the
    special considerations for the head of the SKB no longer apply. Don't
    mistakenly report ERROR to the frontend for the first entry in the list,
    even if - from all I can tell - this shouldn't matter much as the overall
    transmit will need to be considered failed anyway.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Paul Durrant <paul@xen.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab3bbb6277caf0cb47d68200b1a38246c2a8bddb
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Fri Sep 17 16:34:32 2021 +0300

    net: mdio: introduce a shutdown method to mdio device drivers
    
    [ Upstream commit cf9579976f724ad517cc15b7caadea728c7e245c ]
    
    MDIO-attached devices might have interrupts and other things that might
    need quiesced when we kexec into a new kernel. Things are even more
    creepy when those interrupt lines are shared, and in that case it is
    absolutely mandatory to disable all interrupt sources.
    
    Moreover, MDIO devices might be DSA switches, and DSA needs its own
    shutdown method to unlink from the DSA master, which is a new
    requirement that appeared after commit 2f1e8ea726e9 ("net: dsa: link
    interfaces with the DSA master to get rid of lockdep warnings").
    
    So introduce a ->shutdown method in the MDIO device driver structure.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
