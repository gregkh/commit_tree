commit b9d7a53e4e7407166081463977edbbf026b3b727
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 20 10:18:35 2019 +0100

    Linux 4.9.159

commit 01f9a347b49f8d1aee600fe4cc6252da18b68b24
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Feb 19 10:31:07 2019 +0100

    Revert "scsi: aic94xx: fix module loading"
    
    This reverts commit d26358590bb2be063453412cfeec5afefe55d030 which is
    commit 42caa0edabd6a0a392ec36a5f0943924e4954311 upstream.
    
    It's not needed in the 4.9.y tree, my fault for backporting it that far.
    
    Reported-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 162a93c20de1342da783ea3b53e38ba3bab598aa
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Mon Feb 12 23:59:51 2018 +0100

    uapi/if_ether.h: move __UAPI_DEF_ETHHDR libc define
    
    commit da360299b6734135a5f66d7db458dcc7801c826a upstream.
    
    This fixes a compile problem of some user space applications by not
    including linux/libc-compat.h in uapi/if_ether.h.
    
    linux/libc-compat.h checks which "features" the header files, included
    from the libc, provide to make the Linux kernel uapi header files only
    provide no conflicting structures and enums. If a user application mixes
    kernel headers and libc headers it could happen that linux/libc-compat.h
    gets included too early where not all other libc headers are included
    yet. Then the linux/libc-compat.h would not prevent all the
    redefinitions and we run into compile problems.
    This patch removes the include of linux/libc-compat.h from
    uapi/if_ether.h to fix the recently introduced case, but not all as this
    is more or less impossible.
    
    It is no problem to do the check directly in the if_ether.h file and not
    in libc-compat.h as this does not need any fancy glibc header detection
    as glibc never provided struct ethhdr and should define
    __UAPI_DEF_ETHHDR by them self when they will provide this.
    
    The following test program did not compile correctly any more:
    
    #include <linux/if_ether.h>
    #include <netinet/in.h>
    #include <linux/in.h>
    
    int main(void)
    {
            return 0;
    }
    
    Fixes: 6926e041a892 ("uapi/if_ether.h: prevent redefinition of struct ethhdr")
    Reported-by: Guillaume Nault <g.nault@alphalink.fr>
    Cc: <stable@vger.kernel.org> # 4.15
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eede34e949df8eb511a690110543deb4eed5af8f
Author: Hugh Dickins <hughd@google.com>
Date:   Sat Jan 7 15:37:31 2017 -0800

    mm: stop leaking PageTables
    
    commit b0b9b3df27d100a975b4e8818f35382b64a5e35c upstream.
    
    4.10-rc loadtest (even on x86, and even without THPCache) fails with
    "fork: Cannot allocate memory" or some such; and /proc/meminfo shows
    PageTables growing.
    
    Commit 953c66c2b22a ("mm: THP page cache support for ppc64") that got
    merged in rc1 removed the freeing of an unused preallocated pagetable
    after do_fault_around() has called map_pages().
    
    This is usually a good optimization, so that the followup doesn't have
    to reallocate one; but it's not sufficient to shift the freeing into
    alloc_set_pte(), since there are failure cases (most commonly
    VM_FAULT_RETRY) which never reach finish_fault().
    
    Check and free it at the outer level in do_fault(), then we don't need
    to worry in alloc_set_pte(), and can restore that to how it was (I
    cannot find any reason to pte_free() under lock as it was doing).
    
    And fix a separate pagetable leak, or crash, introduced by the same
    change, that could only show up on some ppc64: why does do_set_pmd()'s
    failure case attempt to withdraw a pagetable when it never deposited
    one, at the same time overwriting (so leaking) the vmf->prealloc_pte?
    Residue of an earlier implementation, perhaps? Delete it.
    
    Fixes: 953c66c2b22a ("mm: THP page cache support for ppc64")
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Michael Neuling <mikey@neuling.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b0861aeee29440b70dfcb3fd6478c76933f928
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Mon May 21 22:57:37 2018 +0200

    pinctrl: msm: fix gpio-hog related boot issues
    
    commit a86caa9ba5d70696ceb35d1d39caa20d8b641387 upstream.
    
    Sven Eckelmann reported an issue with the current IPQ4019 pinctrl.
    Setting up any gpio-hog in the device-tree for his device would
    "kill the bootup completely":
    
    | [    0.477838] msm_serial 78af000.serial: could not find pctldev for node /soc/pinctrl@1000000/serial_pinmux, deferring probe
    | [    0.499828] spi_qup 78b5000.spi: could not find pctldev for node /soc/pinctrl@1000000/spi_0_pinmux, deferring probe
    | [    1.298883] requesting hog GPIO enable USB2 power (chip 1000000.pinctrl, offset 58) failed, -517
    | [    1.299609] gpiochip_add_data: GPIOs 0..99 (1000000.pinctrl) failed to register
    | [    1.308589] ipq4019-pinctrl 1000000.pinctrl: Failed register gpiochip
    | [    1.316586] msm_serial 78af000.serial: could not find pctldev for node /soc/pinctrl@1000000/serial_pinmux, deferring probe
    | [    1.322415] spi_qup 78b5000.spi: could not find pctldev for node /soc/pinctrl@1000000/spi_0_pinmux, deferri
    
    This was also verified on a RT-AC58U (IPQ4018) which would
    no longer boot, if a gpio-hog was specified. (Tried forcing
    the USB LED PIN (GPIO0) to high.).
    
    The problem is that Pinctrl+GPIO registration is currently
    peformed in the following order in pinctrl-msm.c:
            1. pinctrl_register()
            2. gpiochip_add()
            3. gpiochip_add_pin_range()
    
    The actual error code -517 == -EPROBE_DEFER is coming from
    pinctrl_get_device_gpio_range(), which is called through:
            gpiochip_add
                of_gpiochip_add
                    of_gpiochip_scan_gpios
                        gpiod_hog
                            gpiochip_request_own_desc
                                __gpiod_request
                                    chip->request
                                        gpiochip_generic_request
                                           pinctrl_gpio_request
                                              pinctrl_get_device_gpio_range
    
    pinctrl_get_device_gpio_range() is unable to find any valid
    pin ranges, since nothing has been added to the pinctrldev_list yet.
    so the range can't be found, and the operation fails with -EPROBE_DEFER.
    
    This patch fixes the issue by adding the "gpio-ranges" property to
    the pinctrl device node of all upstream Qcom SoC. The pin ranges are
    then added by the gpio core.
    
    In order to remain compatible with older, existing DTs (and ACPI)
    a check for the "gpio-ranges" property has been added to
    msm_gpio_init(). This prevents the driver of adding the same entry
    to the pinctrldev_list twice.
    
    Reported-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Tested-by: Sven Eckelmann <sven.eckelmann@openmesh.com> [ipq4019]
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1894d7cb6997c906ec3108e49944e35b084141fa
Author: Liping Zhang <zlpnobody@gmail.com>
Date:   Wed Mar 8 22:54:18 2017 +0800

    netfilter: nf_tables: fix mismatch in big-endian system
    
    commit 10596608c4d62cb8c1c2b806debcbd32fe657e71 upstream.
    
    Currently, there are two different methods to store an u16 integer to
    the u32 data register. For example:
      u32 *dest = &regs->data[priv->dreg];
      1. *dest = 0; *(u16 *) dest = val_u16;
      2. *dest = val_u16;
    
    For method 1, the u16 value will be stored like this, either in
    big-endian or little-endian system:
      0          15           31
      +-+-+-+-+-+-+-+-+-+-+-+-+
      |   Value   |     0     |
      +-+-+-+-+-+-+-+-+-+-+-+-+
    
    For method 2, in little-endian system, the u16 value will be the same
    as listed above. But in big-endian system, the u16 value will be stored
    like this:
      0          15           31
      +-+-+-+-+-+-+-+-+-+-+-+-+
      |     0     |   Value   |
      +-+-+-+-+-+-+-+-+-+-+-+-+
    
    So later we use "memcmp(&regs->data[priv->sreg], data, 2);" to do
    compare in nft_cmp, nft_lookup expr ..., method 2 will get the wrong
    result in big-endian system, as 0~15 bits will always be zero.
    
    For the similar reason, when loading an u16 value from the u32 data
    register, we should use "*(u16 *) sreg;" instead of "(u16)*sreg;",
    the 2nd method will get the wrong value in the big-endian system.
    
    So introduce some wrapper functions to store/load an u8 or u16
    integer to/from the u32 data register, and use them in the right
    place.
    
    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b42bdfa8bd2797605136bf83569c46a4f98c2c2
Author: John Youn <johnyoun@synopsys.com>
Date:   Thu Nov 3 17:55:45 2016 -0700

    usb: dwc2: Remove unnecessary kfree
    
    commit cd4b1e34655d46950c065d9284b596cd8d7b28cd upstream.
    
    This shouldn't be freed by the HCD as it is owned by the core and
    allocated with devm_kzalloc.
    
    Signed-off-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6db331eb294b7d782782acf5646faa75658cab25
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 19 09:59:26 2017 -0700

    kaweth: use skb_cow_head() to deal with cloned skbs
    
    commit 39fba7835aacda65284a86e611774cbba71dac20 upstream.
    
    We can use skb_cow_head() to properly deal with clones,
    especially the ones coming from TCP stack that allow their head being
    modified. This avoids a copy.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: James Hughes <james.hughes@raspberrypi.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af9ef8f6eb55ce5798de98a3078bc7492a2b1677
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 19 09:59:25 2017 -0700

    ch9200: use skb_cow_head() to deal with cloned skbs
    
    commit 6bc6895bdd6744e0136eaa4a11fbdb20a7db4e40 upstream.
    
    We need to ensure there is enough headroom to push extra header,
    but we also need to check if we are allowed to change headers.
    
    skb_cow_head() is the proper helper to deal with this.
    
    Fixes: 4a476bd6d1d9 ("usbnet: New driver for QinHeng CH9200 devices")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: James Hughes <james.hughes@raspberrypi.org>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ae3bc117c859c9956c0d6f1fb3c3a853c2f5f64
Author: James Hughes <james.hughes@raspberrypi.org>
Date:   Wed Apr 19 11:13:40 2017 +0100

    smsc95xx: Use skb_cow_head to deal with cloned skbs
    
    commit e9156cd26a495a18706e796f02a81fee41ec14f4 upstream.
    
    The driver was failing to check that the SKB wasn't cloned
    before adding checksum data.
    Replace existing handling to extend/copy the header buffer
    with skb_cow_head.
    
    Signed-off-by: James Hughes <james.hughes@raspberrypi.org>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Woojung Huh <Woojung.Huh@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b3b651fe952fd114b7cb151cee53c2aaaf1ab2c
Author: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Date:   Thu Feb 7 10:54:53 2019 +0200

    drm/i915: Prevent a race during I915_GEM_MMAP ioctl with WC set
    
    commit 2e7bd10e05afb866b5fb13eda25095c35d7a27cc upstream.
    
    Make sure the underlying VMA in the process address space is the
    same as it was during vm_mmap to avoid applying WC to wrong VMA.
    
    A more long-term solution would be to have vm_mmap_locked variant
    in linux/mmap.h for when caller wants to hold mmap_sem for an
    extended duration.
    
    v2:
    - Refactor the compare function
    
    Fixes: 1816f9236303 ("drm/i915: Support creation of unbound wc user mappings for objects")
    Reported-by: Adam Zabrocki <adamza@microsoft.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.0+
    Cc: Akash Goel <akash.goel@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Cc: Adam Zabrocki <adamza@microsoft.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com> #v1
    Link: https://patchwork.freedesktop.org/patch/msgid/20190207085454.10598-1-joonas.lahtinen@linux.intel.com
    (cherry picked from commit 5c4604e757ba9b193b09768d75a7d2105a5b883f)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8934c92efdbcb9bc167bd7b4d23a22470407d80c
Author: Nikos Tsironis <ntsironis@arrikto.com>
Date:   Thu Feb 14 20:38:47 2019 +0200

    dm thin: fix bug where bio that overwrites thin block ignores FUA
    
    commit 4ae280b4ee3463fa57bbe6eede26b97daff8a0f1 upstream.
    
    When provisioning a new data block for a virtual block, either because
    the block was previously unallocated or because we are breaking sharing,
    if the whole block of data is being overwritten the bio that triggered
    the provisioning is issued immediately, skipping copying or zeroing of
    the data block.
    
    When this bio completes the new mapping is inserted in to the pool's
    metadata by process_prepared_mapping(), where the bio completion is
    signaled to the upper layers.
    
    This completion is signaled without first committing the metadata.  If
    the bio in question has the REQ_FUA flag set and the system crashes
    right after its completion and before the next metadata commit, then the
    write is lost despite the REQ_FUA flag requiring that I/O completion for
    this request must only be signaled after the data has been committed to
    non-volatile storage.
    
    Fix this by deferring the completion of overwrite bios, with the REQ_FUA
    flag set, until after the metadata has been committed.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Nikos Tsironis <ntsironis@arrikto.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Acked-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 838c19cf03da8489b8baa44efe577b7e7c6bf5db
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Feb 12 14:28:03 2019 +0100

    x86/a.out: Clear the dump structure initially
    
    commit 10970e1b4be9c74fce8ab6e3c34a7d718f063f2c upstream.
    
    dump_thread32() in aout_core_dump() does not clear the user32 structure
    allocated on the stack as the first thing on function entry.
    
    As a result, the dump.u_comm, dump.u_ar0 and dump.signal which get
    assigned before the clearing, get overwritten.
    
    Rename that function to fill_dump() to make it clear what it does and
    call it first thing.
    
    This was caught while staring at a patch by Derek Robson
    <robsonde@gmail.com>.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Derek Robson <robsonde@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Michael Matz <matz@suse.de>
    Cc: x86@kernel.org
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20190202005512.3144-1-robsonde@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa74f266c064f10e05d65b2f2ea271787425f112
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Feb 11 23:27:42 2019 -0600

    signal: Restore the stop PTRACE_EVENT_EXIT
    
    commit cf43a757fd49442bc38f76088b70c2299eed2c2f upstream.
    
    In the middle of do_exit() there is there is a call
    "ptrace_event(PTRACE_EVENT_EXIT, code);" That call places the process
    in TACKED_TRACED aka "(TASK_WAKEKILL | __TASK_TRACED)" and waits for
    for the debugger to release the task or SIGKILL to be delivered.
    
    Skipping past dequeue_signal when we know a fatal signal has already
    been delivered resulted in SIGKILL remaining pending and
    TIF_SIGPENDING remaining set.  This in turn caused the
    scheduler to not sleep in PTACE_EVENT_EXIT as it figured
    a fatal signal was pending.  This also caused ptrace_freeze_traced
    in ptrace_check_attach to fail because it left a per thread
    SIGKILL pending which is what fatal_signal_pending tests for.
    
    This difference in signal state caused strace to report
    strace: Exit of unknown pid NNNNN ignored
    
    Therefore update the signal handling state like dequeue_signal
    would when removing a per thread SIGKILL, by removing SIGKILL
    from the per thread signal mask and clearing TIF_SIGPENDING.
    
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Ivan Delalande <colona@arista.com>
    Cc: stable@vger.kernel.org
    Fixes: 35634ffa1751 ("signal: Always notice exiting tasks")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 967859281fd18e54ff233393cdc15616d00a3453
Author: Hedi Berriche <hedi.berriche@hpe.com>
Date:   Wed Feb 13 19:34:13 2019 +0000

    x86/platform/UV: Use efi_runtime_lock to serialise BIOS calls
    
    commit f331e766c4be33f4338574f3c9f7f77e98ab4571 upstream.
    
    Calls into UV firmware must be protected against concurrency, expose the
    efi_runtime_lock to the UV platform, and use it to serialise UV BIOS
    calls.
    
    Signed-off-by: Hedi Berriche <hedi.berriche@hpe.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Russ Anderson <rja@hpe.com>
    Reviewed-by: Dimitri Sivanich <sivanich@hpe.com>
    Reviewed-by: Mike Travis <mike.travis@hpe.com>
    Cc: Andy Shevchenko <andy@infradead.org>
    Cc: Bhupesh Sharma <bhsharma@redhat.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: linux-efi <linux-efi@vger.kernel.org>
    Cc: platform-driver-x86@vger.kernel.org
    Cc: stable@vger.kernel.org # v4.9+
    Cc: Steve Wahl <steve.wahl@hpe.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20190213193413.25560-5-hedi.berriche@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61621b5008c0da6fa0b8e5f11969c77cb667a2ee
Author: Andreas Ziegler <andreas.ziegler@fau.de>
Date:   Wed Jan 16 15:16:29 2019 +0100

    tracing/uprobes: Fix output for multiple string arguments
    
    commit 0722069a5374b904ec1a67f91249f90e1cfae259 upstream.
    
    When printing multiple uprobe arguments as strings the output for the
    earlier arguments would also include all later string arguments.
    
    This is best explained in an example:
    
    Consider adding a uprobe to a function receiving two strings as
    parameters which is at offset 0xa0 in strlib.so and we want to print
    both parameters when the uprobe is hit (on x86_64):
    
    $ echo 'p:func /lib/strlib.so:0xa0 +0(%di):string +0(%si):string' > \
        /sys/kernel/debug/tracing/uprobe_events
    
    When the function is called as func("foo", "bar") and we hit the probe,
    the trace file shows a line like the following:
    
      [...] func: (0x7f7e683706a0) arg1="foobar" arg2="bar"
    
    Note the extra "bar" printed as part of arg1. This behaviour stacks up
    for additional string arguments.
    
    The strings are stored in a dynamically growing part of the uprobe
    buffer by fetch_store_string() after copying them from userspace via
    strncpy_from_user(). The return value of strncpy_from_user() is then
    directly used as the required size for the string. However, this does
    not take the terminating null byte into account as the documentation
    for strncpy_from_user() cleary states that it "[...] returns the
    length of the string (not including the trailing NUL)" even though the
    null byte will be copied to the destination.
    
    Therefore, subsequent calls to fetch_store_string() will overwrite
    the terminating null byte of the most recently fetched string with
    the first character of the current string, leading to the
    "accumulation" of strings in earlier arguments in the output.
    
    Fix this by incrementing the return value of strncpy_from_user() by
    one if we did not hit the maximum buffer size.
    
    Link: http://lkml.kernel.org/r/20190116141629.5752-1-andreas.ziegler@fau.de
    
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: 5baaa59ef09e ("tracing/probes: Implement 'memory' fetch method for uprobes")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Andreas Ziegler <andreas.ziegler@fau.de>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 597613d1bcb287251e729103d595c15c45d6d35c
Author: Meelis Roos <mroos@linux.ee>
Date:   Fri Oct 12 12:27:51 2018 +0300

    alpha: Fix Eiger NR_IRQS to 128
    
    commit bfc913682464f45bc4d6044084e370f9048de9d5 upstream.
    
    Eiger machine vector definition has nr_irqs 128, and working 2.6.26
    boot shows SCSI getting IRQ-s 64 and 65. Current kernel boot fails
    because Symbios SCSI fails to request IRQ-s and does not find the disks.
    It has been broken at least since 3.18 - the earliest I could test with
    my gcc-5.
    
    The headers have moved around and possibly another order of defines has
    worked in the past - but since 128 seems to be correct and used, fix
    arch/alpha/include/asm/irq.h to have NR_IRQS=128 for Eiger.
    
    This fixes 4.19-rc7 boot on my Force Flexor A264 (Eiger subarch).
    
    Cc: stable@vger.kernel.org # v3.18+
    Signed-off-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ef531f45fdb53ea34beb3800182cabc1e28dce2
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Mon Dec 31 11:53:55 2018 +0000

    alpha: fix page fault handling for r16-r18 targets
    
    commit 491af60ffb848b59e82f7c9145833222e0bf27a5 upstream.
    
    Fix page fault handling code to fixup r16-r18 registers.
    Before the patch code had off-by-two registers bug.
    This bug caused overwriting of ps,pc,gp registers instead
    of fixing intended r16,r17,r18 (see `struct pt_regs`).
    
    More details:
    
    Initially Dmitry noticed a kernel bug as a failure
    on strace test suite. Test passes unmapped userspace
    pointer to io_submit:
    
    ```c
        #include <err.h>
        #include <unistd.h>
        #include <sys/mman.h>
        #include <asm/unistd.h>
        int main(void)
        {
            unsigned long ctx = 0;
            if (syscall(__NR_io_setup, 1, &ctx))
                err(1, "io_setup");
            const size_t page_size = sysconf(_SC_PAGESIZE);
            const size_t size = page_size * 2;
            void *ptr = mmap(NULL, size, PROT_READ | PROT_WRITE,
                             MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
            if (MAP_FAILED == ptr)
                err(1, "mmap(%zu)", size);
            if (munmap(ptr, size))
                err(1, "munmap");
            syscall(__NR_io_submit, ctx, 1, ptr + page_size);
            syscall(__NR_io_destroy, ctx);
            return 0;
        }
    ```
    
    Running this test causes kernel to crash when handling page fault:
    
    ```
        Unable to handle kernel paging request at virtual address ffffffffffff9468
        CPU 3
        aio(26027): Oops 0
        pc = [<fffffc00004eddf8>]  ra = [<fffffc00004edd5c>]  ps = 0000    Not tainted
        pc is at sys_io_submit+0x108/0x200
        ra is at sys_io_submit+0x6c/0x200
        v0 = fffffc00c58e6300  t0 = fffffffffffffff2  t1 = 000002000025e000
        t2 = fffffc01f159fef8  t3 = fffffc0001009640  t4 = fffffc0000e0f6e0
        t5 = 0000020001002e9e  t6 = 4c41564e49452031  t7 = fffffc01f159c000
        s0 = 0000000000000002  s1 = 000002000025e000  s2 = 0000000000000000
        s3 = 0000000000000000  s4 = 0000000000000000  s5 = fffffffffffffff2
        s6 = fffffc00c58e6300
        a0 = fffffc00c58e6300  a1 = 0000000000000000  a2 = 000002000025e000
        a3 = 00000200001ac260  a4 = 00000200001ac1e8  a5 = 0000000000000001
        t8 = 0000000000000008  t9 = 000000011f8bce30  t10= 00000200001ac440
        t11= 0000000000000000  pv = fffffc00006fd320  at = 0000000000000000
        gp = 0000000000000000  sp = 00000000265fd174
        Disabling lock debugging due to kernel taint
        Trace:
        [<fffffc0000311404>] entSys+0xa4/0xc0
    ```
    
    Here `gp` has invalid value. `gp is s overwritten by a fixup for the
    following page fault handler in `io_submit` syscall handler:
    
    ```
        __se_sys_io_submit
        ...
            ldq     a1,0(t1)
            bne     t0,4280 <__se_sys_io_submit+0x180>
    ```
    
    After a page fault `t0` should contain -EFALUT and `a1` is 0.
    Instead `gp` was overwritten in place of `a1`.
    
    This happens due to a off-by-two bug in `dpf_reg()` for `r16-r18`
    (aka `a0-a2`).
    
    I think the bug went unnoticed for a long time as `gp` is one
    of scratch registers. Any kernel function call would re-calculate `gp`.
    
    Dmitry tracked down the bug origin back to 2.1.32 kernel version
    where trap_a{0,1,2} fields were inserted into struct pt_regs.
    And even before that `dpf_reg()` contained off-by-one error.
    
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: linux-alpha@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Reported-and-reviewed-by: "Dmitry V. Levin" <ldv@altlinux.org>
    Cc: stable@vger.kernel.org # v2.1.32+
    Bug: https://bugs.gentoo.org/672040
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89eae13404eb1d579d8af34453d11f80d26e8ab5
Author: Matti Kurkela <Matti.Kurkela@iki.fi>
Date:   Thu Feb 7 23:49:23 2019 -0800

    Input: elantech - enable 3rd button support on Fujitsu CELSIUS H780
    
    commit e8b22d0a329f0fb5c7ef95406872d268f01ee3b1 upstream.
    
    Like Fujitsu CELSIUS H760, the H780 also has a three-button Elantech
    touchpad, but the driver needs to be told so to enable the middle touchpad
    button.
    
    The elantech_dmi_force_crc_enabled quirk was not necessary with the H780.
    
    Also document the fw_version and caps values detected for both H760 and
    H780 models.
    
    Signed-off-by: Matti Kurkela <Matti.Kurkela@iki.fi>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45d401fb7168188c22944ff2052f1bb0caa4f501
Author: Jonathan Bakker <xc-racer2@live.ca>
Date:   Wed Feb 6 10:45:37 2019 -0800

    Input: bma150 - register input device after setting private data
    
    commit 90cc55f067f6ca0e64e5e52883ece47d8af7b67b upstream.
    
    Otherwise we introduce a race condition where userspace can request input
    before we're ready leading to null pointer dereference such as
    
    input: bma150 as /devices/platform/i2c-gpio-2/i2c-5/5-0038/input/input3
    Unable to handle kernel NULL pointer dereference at virtual address 00000018
    pgd = (ptrval)
    [00000018] *pgd=55dac831, *pte=00000000, *ppte=00000000
    Internal error: Oops: 17 [#1] PREEMPT ARM
    Modules linked in: bma150 input_polldev [last unloaded: bma150]
    CPU: 0 PID: 2870 Comm: accelerometer Not tainted 5.0.0-rc3-dirty #46
    Hardware name: Samsung S5PC110/S5PV210-based board
    PC is at input_event+0x8/0x60
    LR is at bma150_report_xyz+0x9c/0xe0 [bma150]
    pc : [<80450f70>]    lr : [<7f0a614c>]    psr: 800d0013
    sp : a4c1fd78  ip : 00000081  fp : 00020000
    r10: 00000000  r9 : a5e2944c  r8 : a7455000
    r7 : 00000016  r6 : 00000101  r5 : a7617940  r4 : 80909048
    r3 : fffffff2  r2 : 00000000  r1 : 00000003  r0 : 00000000
    Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 10c5387d  Table: 54e34019  DAC: 00000051
    Process accelerometer (pid: 2870, stack limit = 0x(ptrval))
    Stackck: (0xa4c1fd78 to 0xa4c20000)
    fd60:                                                       fffffff3 fc813f6c
    fd80: 40410581 d7530ce3 a5e2817c a7617f00 a5e29404 a5e2817c 00000000 7f008324
    fda0: a5e28000 8044f59c a5fdd9d0 a5e2945c a46a4a00 a5e29668 a7455000 80454f10
    fdc0: 80909048 a5e29668 a5fdd9d0 a46a4a00 806316d0 00000000 a46a4a00 801df5f0
    fde0: 00000000 d7530ce3 a4c1fec0 a46a4a00 00000000 a5fdd9d0 a46a4a08 801df53c
    fe00: 00000000 801d74bc a4c1fec0 00000000 a4c1ff70 00000000 a7038da8 00000000
    fe20: a46a4a00 801e91fc a411bbe0 801f2e88 00000004 00000000 80909048 00000041
    fe40: 00000000 00020000 00000000 dead4ead a6a88da0 00000000 ffffe000 806fcae8
    fe60: a4c1fec8 00000000 80909048 00000002 a5fdd9d0 a7660110 a411bab0 00000001
    fe80: dead4ead ffffffff ffffffff a4c1fe8c a4c1fe8c d7530ce3 20000013 80909048
    fea0: 80909048 a4c1ff70 00000001 fffff000 a4c1e000 00000005 00026038 801eabd8
    fec0: a7660110 a411bab0 b9394901 00000006 a696201b 76fb3000 00000000 a7039720
    fee0: a5fdd9d0 00000101 00000002 00000096 00000000 00000000 00000000 a4c1ff00
    ff00: a6b310f4 805cb174 a6b310f4 00000010 00000fe0 00000010 a4c1e000 d7530ce3
    ff20: 00000003 a5f41400 a5f41424 00000000 a6962000 00000000 00000003 00000002
    ff40: ffffff9c 000a0000 80909048 d7530ce3 a6962000 00000003 80909048 ffffff9c
    ff60: a6962000 801d890c 00000000 00000000 00020000 a7590000 00000004 00000100
    ff80: 00000001 d7530ce3 000288b8 00026320 000288b8 00000005 80101204 a4c1e000
    ffa0: 00000005 80101000 000288b8 00026320 000288b8 000a0000 00000000 00000000
    ffc0: 000288b8 00026320 000288b8 00000005 7eef3bac 000264e8 00028ad8 00026038
    ffe0: 00000005 7eef3300 76f76e91 76f78546 800d0030 000288b8 00000000 00000000
    [<80450f70>] (input_event) from [<a5e2817c>] (0xa5e2817c)
    Code: e1a08148 eaffffa8 e351001f 812fff1e (e590c018)
    ---[ end trace 1c691ee85f2ff243 ]---
    
    Signed-off-by: Jonathan Bakker <xc-racer2@live.ca>
    Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acd744b4d6cbb2bec09eae3350c1b7cf53a643bd
Author: Xiaoyao Li <xiaoyao.li@linux.intel.com>
Date:   Thu Feb 14 12:08:58 2019 +0800

    kvm: vmx: Fix entry number check for add_atomic_switch_msr()
    
    commit 98ae70cc476e833332a2c6bb72f941a25f0de226 upstream.
    
    Commit ca83b4a7f2d068da79a0 ("x86/KVM/VMX: Add find_msr() helper function")
    introduces the helper function find_msr(), which returns -ENOENT when
    not find the msr in vmx->msr_autoload.guest/host. Correct checking contion
    of no more available entry in vmx->msr_autoload.
    
    Fixes: ca83b4a7f2d0 ("x86/KVM/VMX: Add find_msr() helper function")
    Cc: stable@vger.kernel.org
    Signed-off-by: Xiaoyao Li <xiaoyao.li@linux.intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c504b84d7fecaa1f0864d4925a1c47ad24eac56f
Author: Manuel Reinhardt <manuel.rhdt@gmail.com>
Date:   Thu Jan 31 15:32:35 2019 +0100

    ALSA: usb-audio: Fix implicit fb endpoint setup by quirk
    
    commit 2bc16b9f3223d049b57202ee702fcb5b9b507019 upstream.
    
    The commit a60945fd08e4 ("ALSA: usb-audio: move implicit fb quirks to
    separate function") introduced an error in the handling of quirks for
    implicit feedback endpoints. This commit fixes this.
    
    If a quirk successfully sets up an implicit feedback endpoint, usb-audio
    no longer tries to find the implicit fb endpoint itself.
    
    Fixes: a60945fd08e4 ("ALSA: usb-audio: move implicit fb quirks to separate function")
    Signed-off-by: Manuel Reinhardt <manuel.rhdt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adeb5603aba091634974a07af535abff290c1d2e
Author: Jurica Vukadin <jurica.vukadin@rt-rk.com>
Date:   Thu Feb 7 16:29:37 2019 +0100

    ALSA: hda - Add quirk for HP EliteBook 840 G5
    
    commit 4cd3016ce996494f78fdfd87ea35c8ca5d0b413e upstream.
    
    This enables mute LED support and fixes switching jacks when the laptop
    is docked.
    
    Signed-off-by: Jurica Vukadin <jurica.vukadin@rt-rk.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e62e3b61e39dd217c3b9ea21dad85bb2f5b0ca9e
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Mon Feb 4 13:35:32 2019 +0100

    perf/x86: Add check_period PMU callback
    
    commit 81ec3f3c4c4d78f2d3b6689c9816bfbdf7417dbb upstream.
    
    Vince (and later on Ravi) reported crashes in the BTS code during
    fuzzing with the following backtrace:
    
      general protection fault: 0000 [#1] SMP PTI
      ...
      RIP: 0010:perf_prepare_sample+0x8f/0x510
      ...
      Call Trace:
       <IRQ>
       ? intel_pmu_drain_bts_buffer+0x194/0x230
       intel_pmu_drain_bts_buffer+0x160/0x230
       ? tick_nohz_irq_exit+0x31/0x40
       ? smp_call_function_single_interrupt+0x48/0xe0
       ? call_function_single_interrupt+0xf/0x20
       ? call_function_single_interrupt+0xa/0x20
       ? x86_schedule_events+0x1a0/0x2f0
       ? x86_pmu_commit_txn+0xb4/0x100
       ? find_busiest_group+0x47/0x5d0
       ? perf_event_set_state.part.42+0x12/0x50
       ? perf_mux_hrtimer_restart+0x40/0xb0
       intel_pmu_disable_event+0xae/0x100
       ? intel_pmu_disable_event+0xae/0x100
       x86_pmu_stop+0x7a/0xb0
       x86_pmu_del+0x57/0x120
       event_sched_out.isra.101+0x83/0x180
       group_sched_out.part.103+0x57/0xe0
       ctx_sched_out+0x188/0x240
       ctx_resched+0xa8/0xd0
       __perf_event_enable+0x193/0x1e0
       event_function+0x8e/0xc0
       remote_function+0x41/0x50
       flush_smp_call_function_queue+0x68/0x100
       generic_smp_call_function_single_interrupt+0x13/0x30
       smp_call_function_single_interrupt+0x3e/0xe0
       call_function_single_interrupt+0xf/0x20
       </IRQ>
    
    The reason is that while event init code does several checks
    for BTS events and prevents several unwanted config bits for
    BTS event (like precise_ip), the PERF_EVENT_IOC_PERIOD allows
    to create BTS event without those checks being done.
    
    Following sequence will cause the crash:
    
    If we create an 'almost' BTS event with precise_ip and callchains,
    and it into a BTS event it will crash the perf_prepare_sample()
    function because precise_ip events are expected to come
    in with callchain data initialized, but that's not the
    case for intel_pmu_drain_bts_buffer() caller.
    
    Adding a check_period callback to be called before the period
    is changed via PERF_EVENT_IOC_PERIOD. It will deny the change
    if the event would become BTS. Plus adding also the limit_period
    check as well.
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: <stable@vger.kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20190204123532.GA4794@krava
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01d16f0159ff27ccd92019a0d232260d6da01ad5
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 13 07:57:02 2019 +0100

    perf/core: Fix impossible ring-buffer sizes warning
    
    commit 528871b456026e6127d95b1b2bd8e3a003dc1614 upstream.
    
    The following commit:
    
      9dff0aa95a32 ("perf/core: Don't WARN() for impossible ring-buffer sizes")
    
    results in perf recording failures with larger mmap areas:
    
      root@skl:/tmp# perf record -g -a
      failed to mmap with 12 (Cannot allocate memory)
    
    The root cause is that the following condition is buggy:
    
            if (order_base_2(size) >= MAX_ORDER)
                    goto fail;
    
    The problem is that @size is in bytes and MAX_ORDER is in pages,
    so the right test is:
    
            if (order_base_2(size) >= PAGE_SHIFT+MAX_ORDER)
                    goto fail;
    
    Fix it.
    
    Reported-by: "Jin, Yao" <yao.jin@linux.intel.com>
    Bisected-by: Borislav Petkov <bp@alien8.de>
    Analyzed-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Julien Thierry <julien.thierry@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org>
    Fixes: 9dff0aa95a32 ("perf/core: Don't WARN() for impossible ring-buffer sizes")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23b4fb38fb04e84326184c68fa394256444d2522
Author: Mauro Ciancio <mauro@acadeu.com>
Date:   Mon Jan 14 10:24:53 2019 -0300

    Input: elan_i2c - add ACPI ID for touchpad in Lenovo V330-15ISK
    
    commit 7ad222b3aed350adfc27ee7eec4587ffe55dfdce upstream.
    
    This adds ELAN0617 to the ACPI table to support Elan touchpad found in
    Lenovo V330-15ISK.
    
    Signed-off-by: Mauro Ciancio <mauro@acadeu.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01c774bd6f05c847a4dff47f3d9a69f3c21b5b9d
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Feb 11 14:32:40 2019 -0800

    Revert "Input: elan_i2c - add ACPI ID for touchpad in ASUS Aspire F5-573G"
    
    commit f420c54e4b12c1361c6ed313002ee7bd7ac58362 upstream.
    
    This reverts commit 7db54c89f0b30a101584e09d3729144e6170059d as it
    breaks Acer Aspire V-371 and other devices. According to Elan:
    
    "Acer Aspire F5-573G is MS Precision touchpad which should use hid
     multitouch driver. ELAN0501 should not be added in elan_i2c."
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=202503
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 255ace32f2daa1c4455e7aada31b8f3d63ff98db
Author: Milian Wolff <milian.wolff@kdab.com>
Date:   Fri Feb 15 12:49:28 2019 +0000

    perf report: Include partial stacks unwound with libdw
    
    commit 5ea0416f51cc93436bbe497c62ab49fd9cb245b6 upstream.
    
    So far the whole stack was thrown away when any error occurred before
    the maximum stack depth was unwound. This is actually a very common
    scenario though. The stacks that got unwound so far are still
    interesting. This removes a large chunk of differences when comparing
    perf script output for libunwind and libdw perf unwinding.
    
    E.g. with libunwind:
    
    ~~~~~
    heaptrack_gui  2228 135073.388524:     479408 cycles:
            ffffffff811749ed perf_iterate_ctx ([kernel.kallsyms])
            ffffffff81181662 perf_event_mmap ([kernel.kallsyms])
            ffffffff811cf5ed mmap_region ([kernel.kallsyms])
            ffffffff811cfe6b do_mmap ([kernel.kallsyms])
            ffffffff811b0dca vm_mmap_pgoff ([kernel.kallsyms])
            ffffffff811cdb0c sys_mmap_pgoff ([kernel.kallsyms])
            ffffffff81033acb sys_mmap ([kernel.kallsyms])
            ffffffff81631d37 entry_SYSCALL_64_fastpath ([kernel.kallsyms])
                       192ca mmap64 (/usr/lib/ld-2.25.so)
                        59a9 _dl_map_object_from_fd (/usr/lib/ld-2.25.so)
                        83d0 _dl_map_object (/usr/lib/ld-2.25.so)
                        cda1 openaux (/usr/lib/ld-2.25.so)
                       1834f _dl_catch_error (/usr/lib/ld-2.25.so)
                        cfe2 _dl_map_object_deps (/usr/lib/ld-2.25.so)
                        3481 dl_main (/usr/lib/ld-2.25.so)
                       17387 _dl_sysdep_start (/usr/lib/ld-2.25.so)
                        4d37 _dl_start (/usr/lib/ld-2.25.so)
                         d87 _start (/usr/lib/ld-2.25.so)
    
    heaptrack_gui  2228 135073.388677:     611329 cycles:
                       1a3e0 strcmp (/usr/lib/ld-2.25.so)
                        82b2 _dl_map_object (/usr/lib/ld-2.25.so)
                        cda1 openaux (/usr/lib/ld-2.25.so)
                       1834f _dl_catch_error (/usr/lib/ld-2.25.so)
                        cfe2 _dl_map_object_deps (/usr/lib/ld-2.25.so)
                        3481 dl_main (/usr/lib/ld-2.25.so)
                       17387 _dl_sysdep_start (/usr/lib/ld-2.25.so)
                        4d37 _dl_start (/usr/lib/ld-2.25.so)
                         d87 _start (/usr/lib/ld-2.25.so)
    ~~~~~
    
    With libdw without this patch:
    
    ~~~~~
    heaptrack_gui  2228 135073.388524:     479408 cycles:
            ffffffff811749ed perf_iterate_ctx ([kernel.kallsyms])
            ffffffff81181662 perf_event_mmap ([kernel.kallsyms])
            ffffffff811cf5ed mmap_region ([kernel.kallsyms])
            ffffffff811cfe6b do_mmap ([kernel.kallsyms])
            ffffffff811b0dca vm_mmap_pgoff ([kernel.kallsyms])
            ffffffff811cdb0c sys_mmap_pgoff ([kernel.kallsyms])
            ffffffff81033acb sys_mmap ([kernel.kallsyms])
            ffffffff81631d37 entry_SYSCALL_64_fastpath ([kernel.kallsyms])
    
    heaptrack_gui  2228 135073.388677:     611329 cycles:
    ~~~~~
    
    With this patch applied, the libdw unwinder will produce the same
    output as the libunwind unwinder.
    
    Signed-off-by: Nikson Kanti Paul <nikson@amazon.com>
    Signed-off-by: Milian Wolff <milian.wolff@kdab.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lkml.kernel.org/r/20170601210021.20046-1-milian.wolff@kdab.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Amit Shah <aams@amazon.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org> # 4.9
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04d7680c0f8b45b0cfc18fd21c06ec84a22231bc
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 8 18:30:56 2019 +0000

    cifs: Limit memory used by lock request calls to a page
    
    [ Upstream commit 92a8109e4d3a34fb6b115c9098b51767dc933444 ]
    
    The code tries to allocate a contiguous buffer with a size supplied by
    the server (maxBuf). This could fail if memory is fragmented since it
    results in high order allocations for commonly used server
    implementations. It is also wasteful since there are probably
    few locks in the usual case. Limit the buffer to be no larger than a
    page to avoid memory allocation failures due to fragmentation.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 420070af36da0f76d0c9acbd1de1fb7d9761160f
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Sat Dec 1 12:57:18 2018 +0100

    gpio: pl061: handle failed allocations
    
    [ Upstream commit df209c43a0e8258e096fb722dfbdae4f0dd13fde ]
    
    devm_kzalloc(), devm_kstrdup() and devm_kasprintf() all can
    fail internal allocation and return NULL. Using any of the assigned
    objects without checking is not safe. As this is early in the boot
    phase and these allocations really should not fail, any failure here
    is probably an indication of a more serious issue so it makes little
    sense to try and rollback the previous allocated resources or try to
    continue;  but rather the probe function is simply exited with -ENOMEM.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Fixes: 684284b64aae ("ARM: integrator: add MMCI device to IM-PD1")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a119bf637f877f35bf89cffebfa482bbb7097eb5
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Jan 8 00:08:18 2019 +0100

    ARM: dts: kirkwood: Fix polarity of GPIO fan lines
    
    [ Upstream commit b5f034845e70916fd33e172fad5ad530a29c10ab ]
    
    These two lines are active high, not active low. The bug was
    found when we changed the kernel to respect the polarity defined
    in the device tree.
    
    Fixes: 1b90e06b1429 ("ARM: kirkwood: Use devicetree to define DNS-32[05] fan")
    Cc: Jamie Lentin <jm@lentin.co.uk>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Gregory Clement <gregory.clement@bootlin.com>
    Cc: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
    Cc: Julien D'Ascenzio <jdascenzio@posteo.net>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Jamie Lentin <jm@lentin.co.uk>
    Reported-by: Julien D'Ascenzio <jdascenzio@posteo.net>
    Tested-by: Julien D'Ascenzio <jdascenzio@posteo.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2293ddf691b4ef1de4b1eacd5f184057d18c13fe
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Dec 19 13:47:26 2018 +0200

    ARM: dts: da850-lcdk: Correct the sound card name
    
    [ Upstream commit c25748acc5c20786ecb7518bfeae8fcef93472d6 ]
    
    To avoid  the following error:
    asoc-simple-card sound: ASoC: Failed to create card debugfs directory
    
    Which is because the card name contains '/' character, which can not be
    used in file or directory names.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92ee00f6bb5fd2d14774cfc3abe24fe45678e842
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Dec 19 13:47:24 2018 +0200

    ARM: dts: da850-evm: Correct the sound card name
    
    [ Upstream commit 7fca69d4e43fa1ae9cb4f652772c132dc5a659c6 ]
    
    To avoid  the following error:
    asoc-simple-card sound: ASoC: Failed to create card debugfs directory
    
    Which is because the card name contains '/' character, which can not be
    used in file or directory names.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 946527149a0693c34bf970366b0c398878927749
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:53 2019 +0200

    drm/bridge: tc358767: fix output H/V syncs
    
    [ Upstream commit 7923e09c7a766e2d58de7fc395bb84c18e5bc625 ]
    
    The H and V syncs of the DP output are always set to active high. This
    patch fixes the syncs by configuring them according to the videomode.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-7-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09439d6427769c464d83f4e2378b5367c4d4eeae
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:52 2019 +0200

    drm/bridge: tc358767: reject modes which require too much BW
    
    [ Upstream commit 51b9e62eb6950c762162ab7eb8390990179be067 ]
    
    The current driver accepts any videomode with pclk < 154MHz. This is not
    correct, as with 1 lane and/or 1.62Mbps speed not all videomodes can be
    supported.
    
    Add code to reject modes that require more bandwidth that is available.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-6-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29bcecd9f4e6138887694ca63f51ee352836a3a5
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:51 2019 +0200

    drm/bridge: tc358767: fix initial DP0/1_SRCCTRL value
    
    [ Upstream commit 9a63bd6fe1b5590ffa42ae2ed22ee21363293e31 ]
    
    Initially DP0_SRCCTRL is set to a static value which includes
    DP0_SRCCTRL_LANES_2 and DP0_SRCCTRL_BW27, even when only 1 lane of
    1.62Gbps speed is used. DP1_SRCCTRL is configured to a magic number.
    
    This patch changes the configuration as follows:
    
    Configure DP0_SRCCTRL by using tc_srcctrl() which provides the correct
    value.
    
    DP1_SRCCTRL needs two bits to be set to the same value as DP0_SRCCTRL:
    SSCG and BW27. All other bits can be zero.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-5-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64cea428b151c84309cc861d20cf4e9b8617e886
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:50 2019 +0200

    drm/bridge: tc358767: fix single lane configuration
    
    [ Upstream commit 4d9d54a730434cc068dd3515ba6116697196f77b ]
    
    PHY_2LANE bit is always set in DP_PHY_CTRL, breaking 1 lane use.
    
    Set PHY_2LANE only when 2 lanes are used.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-4-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e82a795e99bb8c059507134fb915e83ea72c63ca
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:49 2019 +0200

    drm/bridge: tc358767: add defines for DP1_SRCCTRL & PHY_2LANE
    
    [ Upstream commit adf4109896bbee27fd2ac3b48d22d6a0062fe517 ]
    
    DP1_SRCCTRL register and PHY_2LANE field did not have matching defines.
    Add these.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-3-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbb43fb98a1c5296e909056bd8afe8eb45cb25c4
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Mon Jan 7 18:51:53 2019 +0000

    cpufreq: check if policy is inactive early in __cpufreq_get()
    
    [ Upstream commit 2f66196208c98b3d1b4294edffb2c5a8197be899 ]
    
    cpuinfo_cur_freq gets current CPU frequency as detected by hardware
    while scaling_cur_freq last known CPU frequency. Some platforms may not
    allow checking the CPU frequency of an offline CPU or the associated
    resources may have been released via cpufreq_exit when the CPU gets
    offlined, in which case the policy would have been invalidated already.
    If we attempt to get current frequency from the hardware, it may result
    in hang or crash.
    
    For example on Juno, I see:
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000188
    [0000000000000188] pgd=0000000000000000
    Internal error: Oops: 96000004 [#1] PREEMPT SMP
    Modules linked in:
    CPU: 5 PID: 4202 Comm: cat Not tainted 4.20.0-08251-ga0f2c0318a15-dirty #87
    Hardware name: ARM LTD ARM Juno Development Platform/ARM Juno Development Platform
    pstate: 40000005 (nZcv daif -PAN -UAO)
    pc : scmi_cpufreq_get_rate+0x34/0xb0
    lr : scmi_cpufreq_get_rate+0x34/0xb0
    Call trace:
     scmi_cpufreq_get_rate+0x34/0xb0
     __cpufreq_get+0x34/0xc0
     show_cpuinfo_cur_freq+0x24/0x78
     show+0x40/0x60
     sysfs_kf_seq_show+0xc0/0x148
     kernfs_seq_show+0x44/0x50
     seq_read+0xd4/0x480
     kernfs_fop_read+0x15c/0x208
     __vfs_read+0x60/0x188
     vfs_read+0x94/0x150
     ksys_read+0x6c/0xd8
     __arm64_sys_read+0x24/0x30
     el0_svc_common+0x78/0x100
     el0_svc_handler+0x38/0x78
     el0_svc+0x8/0xc
    ---[ end trace 3d1024e58f77f6b2 ]---
    
    So fix the issue by checking if the policy is invalid early in
    __cpufreq_get before attempting to get the current frequency.
    
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3555798a5dc1589fa9016feb0a0da2c92ff7183e
Author: Chao Fan <fanc.fnst@cn.fujitsu.com>
Date:   Wed Dec 26 11:34:50 2018 +0800

    ACPI: NUMA: Use correct type for printing addresses on i386-PAE
    
    [ Upstream commit b9ced18acf68dffebe6888c7ec765a2b1db7a039 ]
    
    The addresses of NUMA nodes are not printed correctly on i386-PAE
    which is misleading.
    
    Here is a debian9-32bit with PAE in a QEMU guest having more than 4G
    of memory:
    
    qemu-system-i386 \
    -hda /var/lib/libvirt/images/debian32.qcow2 \
    -m 5G \
    -enable-kvm \
    -smp 10 \
    -numa node,mem=512M,nodeid=0,cpus=0 \
    -numa node,mem=512M,nodeid=1,cpus=1 \
    -numa node,mem=512M,nodeid=2,cpus=2 \
    -numa node,mem=512M,nodeid=3,cpus=3 \
    -numa node,mem=512M,nodeid=4,cpus=4 \
    -numa node,mem=512M,nodeid=5,cpus=5 \
    -numa node,mem=512M,nodeid=6,cpus=6 \
    -numa node,mem=512M,nodeid=7,cpus=7 \
    -numa node,mem=512M,nodeid=8,cpus=8 \
    -numa node,mem=512M,nodeid=9,cpus=9 \
    -serial stdio
    
    Because of the wrong value type, it prints as below:
    
    [    0.021049] ACPI: SRAT Memory (0x0 length 0xa0000) in proximity domain 0 enabled
    [    0.021740] ACPI: SRAT Memory (0x100000 length 0x1ff00000) in proximity domain 0 enabled
    [    0.022425] ACPI: SRAT Memory (0x20000000 length 0x20000000) in proximity domain 1 enabled
    [    0.023092] ACPI: SRAT Memory (0x40000000 length 0x20000000) in proximity domain 2 enabled
    [    0.023764] ACPI: SRAT Memory (0x60000000 length 0x20000000) in proximity domain 3 enabled
    [    0.024431] ACPI: SRAT Memory (0x80000000 length 0x20000000) in proximity domain 4 enabled
    [    0.025104] ACPI: SRAT Memory (0xa0000000 length 0x20000000) in proximity domain 5 enabled
    [    0.025791] ACPI: SRAT Memory (0x0 length 0x20000000) in proximity domain 6 enabled
    [    0.026412] ACPI: SRAT Memory (0x20000000 length 0x20000000) in proximity domain 7 enabled
    [    0.027118] ACPI: SRAT Memory (0x40000000 length 0x20000000) in proximity domain 8 enabled
    [    0.027802] ACPI: SRAT Memory (0x60000000 length 0x20000000) in proximity domain 9 enabled
    
    The upper half of the start address of the NUMA domains between 6
    and 9 inclusive was cut, so the printed values are incorrect.
    
    Fix the value type, to get the correct values in the log as follows:
    
    [    0.023698] ACPI: SRAT Memory (0x0 length 0xa0000) in proximity domain 0 enabled
    [    0.024325] ACPI: SRAT Memory (0x100000 length 0x1ff00000) in proximity domain 0 enabled
    [    0.024981] ACPI: SRAT Memory (0x20000000 length 0x20000000) in proximity domain 1 enabled
    [    0.025659] ACPI: SRAT Memory (0x40000000 length 0x20000000) in proximity domain 2 enabled
    [    0.026317] ACPI: SRAT Memory (0x60000000 length 0x20000000) in proximity domain 3 enabled
    [    0.026980] ACPI: SRAT Memory (0x80000000 length 0x20000000) in proximity domain 4 enabled
    [    0.027635] ACPI: SRAT Memory (0xa0000000 length 0x20000000) in proximity domain 5 enabled
    [    0.028311] ACPI: SRAT Memory (0x100000000 length 0x20000000) in proximity domain 6 enabled
    [    0.028985] ACPI: SRAT Memory (0x120000000 length 0x20000000) in proximity domain 7 enabled
    [    0.029667] ACPI: SRAT Memory (0x140000000 length 0x20000000) in proximity domain 8 enabled
    [    0.030334] ACPI: SRAT Memory (0x160000000 length 0x20000000) in proximity domain 9 enabled
    
    Signed-off-by: Chao Fan <fanc.fnst@cn.fujitsu.com>
    [ rjw: Subject & changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3fe2c72a7b7361a306ca1b51387bb2f995216a2
Author: Daniel Axtens <dja@axtens.net>
Date:   Thu Feb 14 11:31:18 2019 +0100

    bnx2x: disable GSO where gso_size is too big for hardware
    
    commit 8914a595110a6eca69a5e275b323f5d09e18f4f9 upstream
    
    If a bnx2x card is passed a GSO packet with a gso_size larger than
    ~9700 bytes, it will cause a firmware error that will bring the card
    down:
    
    bnx2x: [bnx2x_attn_int_deasserted3:4323(enP24p1s0f0)]MC assert!
    bnx2x: [bnx2x_mc_assert:720(enP24p1s0f0)]XSTORM_ASSERT_LIST_INDEX 0x2
    bnx2x: [bnx2x_mc_assert:736(enP24p1s0f0)]XSTORM_ASSERT_INDEX 0x0 = 0x00000000 0x25e43e47 0x00463e01 0x00010052
    bnx2x: [bnx2x_mc_assert:750(enP24p1s0f0)]Chip Revision: everest3, FW Version: 7_13_1
    ... (dump of values continues) ...
    
    Detect when the mac length of a GSO packet is greater than the maximum
    packet size (9700 bytes) and disable GSO.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [jwang: cherry pick for CVE-2018-1000026]
    Signed-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84d8c3a7e1a48df8d21d100181b1d97a3adc50e5
Author: Daniel Axtens <dja@axtens.net>
Date:   Thu Feb 14 11:31:17 2019 +0100

    net: create skb_gso_validate_mac_len()
    
    commit 2b16f048729bf35e6c28a40cbfad07239f9dcd90 upstream
    
    If you take a GSO skb, and split it into packets, will the MAC
    length (L2 + L3 + L4 headers + payload) of those packets be small
    enough to fit within a given length?
    
    Move skb_gso_mac_seglen() to skbuff.h with other related functions
    like skb_gso_network_seglen() so we can use it, and then create
    skb_gso_validate_mac_len to do the full calculation.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [jwang: cherry pick for CVE-2018-1000026]
    Signed-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b788fedf38f5ac282e0b6761e034d1e43dda1665
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:30 2019 -0500

    ARM: fix the cockup in the previous patch
    
    Commit d6951f582cc50ba0ad22ef46b599740966599b14 upstream.
    
    The intention in the previous patch was to only place the processor
    tables in the .rodata section if big.Little was being built and we
    wanted the branch target hardening, but instead (due to the way it
    was tested) it ended up always placing the tables into the .rodata
    section.
    
    Although harmless, let's correct this anyway.
    
    Fixes: 3a4d0c2172bc ("ARM: ensure that processor vtables is not lost after boot")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2307923f865c500b3b05ff131f00a9388bd442dd
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:29 2019 -0500

    ARM: ensure that processor vtables is not lost after boot
    
    Commit 3a4d0c2172bcf15b7a3d9d498b2b355f9864286b upstream.
    
    Marek Szyprowski reported problems with CPU hotplug in current kernels.
    This was tracked down to the processor vtables being located in an
    init section, and therefore discarded after kernel boot, despite being
    required after boot to properly initialise the non-boot CPUs.
    
    Arrange for these tables to end up in .rodata when required.
    
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Krzysztof Kozlowski <krzk@kernel.org>
    Fixes: 383fb3ee8024 ("ARM: spectre-v2: per-CPU vtables to work around big.Little systems")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab6c39771d579350bcd9c46514831b05430bd51a
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:28 2019 -0500

    ARM: spectre-v2: per-CPU vtables to work around big.Little systems
    
    Commit 383fb3ee8024d596f488d2dbaf45e572897acbdb upstream.
    
    In big.Little systems, some CPUs require the Spectre workarounds in
    paths such as the context switch, but other CPUs do not.  In order
    to handle these differences, we need per-CPU vtables.
    
    We are unable to use the kernel's per-CPU variables to support this
    as per-CPU is not initialised at times when we need access to the
    vtables, so we have to use an array indexed by logical CPU number.
    
    We use an array-of-pointers to avoid having function pointers in
    the kernel's read/write .data section.
    
    Note: Added include of linux/slab.h in arch/arm/smp.c.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dbc7e3efe2ca2e9eb614c66ea725c2116103b56
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:27 2019 -0500

    ARM: add PROC_VTABLE and PROC_TABLE macros
    
    Commit e209950fdd065d2cc46e6338e47e52841b830cba upstream.
    
    Allow the way we access members of the processor vtable to be changed
    at compile time.  We will need to move to per-CPU vtables to fix the
    Spectre variant 2 issues on big.Little systems.
    
    However, we have a couple of calls that do not need the vtable
    treatment, and indeed cause a kernel warning due to the (later) use
    of smp_processor_id(), so also introduce the PROC_TABLE macro for
    these which always use CPU 0's function pointers.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15a669ff9b4c6ec66b2efed82428f596f2d19bbd
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:26 2019 -0500

    ARM: clean up per-processor check_bugs method call
    
    Commit 945aceb1db8885d3a35790cf2e810f681db52756 upstream.
    
    Call the per-processor type check_bugs() method in the same way as we
    do other per-processor functions - move the "processor." detail into
    proc-fns.h.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0525e4b808ccfaa1017872c5902b504d4991e95
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:25 2019 -0500

    ARM: split out processor lookup
    
    Commit 65987a8553061515b5851b472081aedb9837a391 upstream.
    
    Split out the lookup of the processor type and associated error handling
    from the rest of setup_processor() - we will need to use this in the
    secondary CPU bringup path for big.Little Spectre variant 2 mitigation.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d13b444f4eba07327ccd626282fb1048210cc1e
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 14 09:49:24 2019 -0500

    ARM: make lookup_processor_type() non-__init
    
    Commit 899a42f836678a595f7d2bc36a5a0c2b03d08cbc upstream.
    
    Move lookup_processor_type() out of the __init section so it is callable
    from (eg) the secondary startup code during hotplug.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3ef8953d83c8043dcfa496e241c5d01bb05fe6e
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:23 2019 -0500

    ARM: 8810/1: vfp: Fix wrong assignement to ufp_exc
    
    Commit 5df7a99bdd0de4a0480320264c44c04543c29d5a upstream.
    
    In vfp_preserve_user_clear_hwstate, ufp_exc->fpinst2 gets assigned to
    itself. It should actually be hwstate->fpinst2 that gets assigned to the
    ufp_exc field.
    
    Fixes commit 3aa2df6ec2ca6bc143a65351cca4266d03a8bc41 ("ARM: 8791/1:
    vfp: use __copy_to_user() when saving VFP state").
    
    Reported-by: David Binderman <dcb314@hotmail.com>
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4a6ea8a33301760580f17d1e2fd7789e20d1fe8
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:22 2019 -0500

    ARM: 8797/1: spectre-v1.1: harden __copy_to_user
    
    Commit a1d09e074250fad24f1b993f327b18cc6812eb7a upstream.
    
    Sanitize user pointer given to __copy_to_user, both for standard version
    and memcopy version of the user accessor.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5d788516d936b3eabaed9d2df492eac95ac7e17
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:21 2019 -0500

    ARM: 8796/1: spectre-v1,v1.1: provide helpers for address sanitization
    
    Commit afaf6838f4bc896a711180b702b388b8cfa638fc upstream.
    
    Introduce C and asm helpers to sanitize user address, taking the
    address range they target into account.
    
    Use asm helper for existing sanitization in __copy_from_user().
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17e3a84090784f814096f8c41cd21fbe40dcf565
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:20 2019 -0500

    ARM: 8795/1: spectre-v1.1: use put_user() for __put_user()
    
    Commit e3aa6243434fd9a82e84bb79ab1abd14f2d9a5a7 upstream.
    
    When Spectre mitigation is required, __put_user() needs to include
    check_uaccess. This is already the case for put_user(), so just make
    __put_user() an alias of put_user().
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cb3209d8819b58ff85bee7e4cf14a5367c00c1a
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:19 2019 -0500

    ARM: 8794/1: uaccess: Prevent speculative use of the current addr_limit
    
    Commit 621afc677465db231662ed126ae1f355bf8eac47 upstream.
    
    A mispredicted conditional call to set_fs could result in the wrong
    addr_limit being forwarded under speculation to a subsequent access_ok
    check, potentially forming part of a spectre-v1 attack using uaccess
    routines.
    
    This patch prevents this forwarding from taking place, but putting heavy
    barriers in set_fs after writing the addr_limit.
    
    Porting commit c2f0ad4fc089cff8 ("arm64: uaccess: Prevent speculative use
    of the current addr_limit").
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4fa56d36e8af8376bf6f1829a16a12e3cdfb284
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:18 2019 -0500

    ARM: 8793/1: signal: replace __put_user_error with __put_user
    
    Commit 18ea66bd6e7a95bdc598223d72757190916af28b upstream.
    
    With Spectre-v1.1 mitigations, __put_user_error is pointless. In an attempt
    to remove it, replace its references in frame setups with __put_user.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb35d3dcd5254999d688ed1dfc855acc6b4f1a18
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:17 2019 -0500

    ARM: 8792/1: oabi-compat: copy oabi events using __copy_to_user()
    
    Commit 319508902600c2688e057750148487996396e9ca upstream.
    
    Copy events to user using __copy_to_user() rather than copy members of
    individually with __put_user_error().
    This has the benefit of disabling/enabling PAN once per event intead of
    once per event member.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f86d531974af18e090969ab68a47d10b8895a72
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:16 2019 -0500

    ARM: 8791/1: vfp: use __copy_to_user() when saving VFP state
    
    Commit 3aa2df6ec2ca6bc143a65351cca4266d03a8bc41 upstream.
    
    Use __copy_to_user() rather than __put_user_error() for individual
    members when saving VFP state.
    This has the benefit of disabling/enabling PAN once per copied struct
    intead of once per write.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31ac7816a46854f3ac0d072dbcef91db5c14f490
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Thu Feb 14 09:49:15 2019 -0500

    ARM: 8789/1: signal: copy registers using __copy_to_user()
    
    Commit 5ca451cf6ed04443774bbb7ee45332dafa42e99f upstream.
    
    When saving the ARM integer registers, use __copy_to_user() to
    copy them into user signal frame, rather than __put_user_error().
    This has the benefit of disabling/enabling PAN once for the whole copy
    intead of once per write.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0432fed9f48d6671124e19bc1b783bab2783740d
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Thu Feb 14 14:18:00 2019 +0100

    uapi/if_ether.h: prevent redefinition of struct ethhdr
    
    commit 6926e041a8920c8ec27e4e155efa760aa01551fd upstream.
    
    Musl provides its own ethhdr struct definition. Add a guard to prevent
    its definition of the appropriate musl header has already been included.
    
    glibc does not implement this header, but when glibc will implement this
    they can just define __UAPI_DEF_ETHHDR 0 to make it work with the
    kernel.
    
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc6f7dc0b2e8bf9ad6f192d718c014e2c07ef2f1
Author: Adrian Bunk <bunk@kernel.org>
Date:   Sun Feb 17 13:14:52 2019 +0200

    eeprom: at24: add support for 24c2048
    
    commit 37cf28d3b5bca1b532a0b6aac722e7f2788a9294 upstream.
    
    Works with ST M24M02.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 852cd5cd0dfe2a3fd93414f32e4d6b41a5ec264a
Author: Adrian Bunk <bunk@kernel.org>
Date:   Sun Feb 17 13:14:51 2019 +0200

    dt-bindings: eeprom: at24: add "atmel,24c2048" compatible string
    
    commit 6c0c5dc33ff42af49243e94842d0ebdb153189ea upstream.
    
    Add new compatible to the device tree bindings.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
