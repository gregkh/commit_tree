commit 42b5f72fbe6b5f9c63207f3f6152673c6c9af451
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Sep 12 11:45:33 2020 +0200

    Linux 4.4.236
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fe69cc4436810cbbf07b1191af05bd3ca18837d
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Aug 26 12:40:06 2020 -0700

    net: disable netpoll on fresh napis
    
    [ Upstream commit 96e97bc07e90f175a8980a22827faf702ca4cb30 ]
    
    napi_disable() makes sure to set the NAPI_STATE_NPSVC bit to prevent
    netpoll from accessing rings before init is complete. However, the
    same is not done for fresh napi instances in netif_napi_add(),
    even though we expect NAPI instances to be added as disabled.
    
    This causes crashes during driver reconfiguration (enabling XDP,
    changing the channel count) - if there is any printk() after
    netif_napi_add() but before napi_enable().
    
    To ensure memory ordering is correct we need to use RCU accessors.
    
    Reported-by: Rob Sherwood <rsher@fb.com>
    Fixes: 2d8bff12699a ("netpoll: Close race condition between poll_one_napi and napi_disable")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32a8e4e2d10dee4030629e7c528f1d36f0004d16
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Aug 21 14:59:38 2020 +0800

    sctp: not disable bh in the whole sctp_get_port_local()
    
    [ Upstream commit 3106ecb43a05dc3e009779764b9da245a5d082de ]
    
    With disabling bh in the whole sctp_get_port_local(), when
    snum == 0 and too many ports have been used, the do-while
    loop will take the cpu for a long time and cause cpu stuck:
    
      [ ] watchdog: BUG: soft lockup - CPU#11 stuck for 22s!
      [ ] RIP: 0010:native_queued_spin_lock_slowpath+0x4de/0x940
      [ ] Call Trace:
      [ ]  _raw_spin_lock+0xc1/0xd0
      [ ]  sctp_get_port_local+0x527/0x650 [sctp]
      [ ]  sctp_do_bind+0x208/0x5e0 [sctp]
      [ ]  sctp_autobind+0x165/0x1e0 [sctp]
      [ ]  sctp_connect_new_asoc+0x355/0x480 [sctp]
      [ ]  __sctp_connect+0x360/0xb10 [sctp]
    
    There's no need to disable bh in the whole function of
    sctp_get_port_local. So fix this cpu stuck by removing
    local_bh_disable() called at the beginning, and using
    spin_lock_bh() instead.
    
    The same thing was actually done for inet_csk_get_port() in
    Commit ea8add2b1903 ("tcp/dccp: better use of ephemeral
    ports in bind()").
    
    Thanks to Marcelo for pointing the buggy code out.
    
    v1->v2:
      - use cond_resched() to yield cpu to other tasks if needed,
        as Eric noticed.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Ying Xu <yinxu@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe26a0f4b44bc4b56f0942e57c41c94c99d2fe3
Author: Kamil Lorenc <kamil@re-ws.pl>
Date:   Tue Sep 1 10:57:38 2020 +0200

    net: usb: dm9601: Add USB ID of Keenetic Plus DSL
    
    [ Upstream commit a609d0259183a841621f252e067f40f8cc25d6f6 ]
    
    Keenetic Plus DSL is a xDSL modem that uses dm9620 as its USB interface.
    
    Signed-off-by: Kamil Lorenc <kamil@re-ws.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65bac3709b1eb79ed4c0bb612947811504f0290f
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Aug 26 12:40:07 2020 -0700

    bnxt: don't enable NAPI until rings are ready
    
    commit 96ecdcc992eb7f468b2cf829b0f5408a1fad4668 upstream.
    
    Netpoll can try to poll napi as soon as napi_enable() is called.
    It crashes trying to access a doorbell which is still NULL:
    
     BUG: kernel NULL pointer dereference, address: 0000000000000000
     CPU: 59 PID: 6039 Comm: ethtool Kdump: loaded Tainted: G S                5.9.0-rc1-00469-g5fd99b5d9950-dirty #26
     RIP: 0010:bnxt_poll+0x121/0x1c0
     Code: c4 20 44 89 e0 5b 5d 41 5c 41 5d 41 5e 41 5f c3 41 8b 86 a0 01 00 00 41 23 85 18 01 00 00 49 8b 96 a8 01 00 00 0d 00 00 00 24 <89> 02
    41 f6 45 77 02 74 cb 49 8b ae d8 01 00 00 31 c0 c7 44 24 1a
      netpoll_poll_dev+0xbd/0x1a0
      __netpoll_send_skb+0x1b2/0x210
      netpoll_send_udp+0x2c9/0x406
      write_ext_msg+0x1d7/0x1f0
      console_unlock+0x23c/0x520
      vprintk_emit+0xe0/0x1d0
      printk+0x58/0x6f
      x86_vector_activate.cold+0xf/0x46
      __irq_domain_activate_irq+0x50/0x80
      __irq_domain_activate_irq+0x32/0x80
      __irq_domain_activate_irq+0x32/0x80
      irq_domain_activate_irq+0x25/0x40
      __setup_irq+0x2d2/0x700
      request_threaded_irq+0xfb/0x160
      __bnxt_open_nic+0x3b1/0x750
      bnxt_open_nic+0x19/0x30
      ethtool_set_channels+0x1ac/0x220
      dev_ethtool+0x11ba/0x2240
      dev_ioctl+0x1cf/0x390
      sock_do_ioctl+0x95/0x130
    
    Reported-by: Rob Sherwood <rsher@fb.com>
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee71006de0c154db7fe18af183444f5c4f264244
Author: Michael Chan <mchan@broadcom.com>
Date:   Fri Feb 19 19:43:21 2016 -0500

    bnxt_en: Failure to update PHY is not fatal condition.
    
    commit ba41d46fe03223279054e58d570069fdc62fb768 upstream.
    
    If we fail to update the PHY, we should print a warning and continue.
    The current code to exit is buggy as it has not freed up the NIC
    resources yet.
    
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c426d2c1cb9f6dde805b7592890194bedfc13f76
Author: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Date:   Mon Aug 31 22:37:09 2020 +0800

    net: ethernet: mlx4: Fix memory allocation in mlx4_buddy_init()
    
    commit cbedcb044e9cc4e14bbe6658111224bb923094f4 upstream.
    
    On machines with much memory (> 2 TByte) and log_mtts_per_seg == 0, a
    max_order of 31 will be passed to mlx_buddy_init(), which results in
    s = BITS_TO_LONGS(1 << 31) becoming a negative value, leading to
    kvmalloc_array() failure when it is converted to size_t.
    
      mlx4_core 0000:b1:00.0: Failed to initialize memory region table, aborting
      mlx4_core: probe of 0000:b1:00.0 failed with error -12
    
    Fix this issue by changing the left shifting operand from a signed literal to
    an unsigned one.
    
    Fixes: 225c7b1feef1 ("IB/mlx4: Add a driver Mellanox ConnectX InfiniBand adapters")
    Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38f2f49b7bf236fc4c23a5fb4b64761432e0120d
Author: Yuusuke Ashizuka <ashiduka@fujitsu.com>
Date:   Thu Aug 20 18:43:07 2020 +0900

    ravb: Fixed to be able to unload modules
    
    commit 1838d6c62f57836639bd3d83e7855e0ee4f6defc upstream.
    
    When this driver is built as a module, I cannot rmmod it after insmoding
    it.
    This is because that this driver calls ravb_mdio_init() at the time of
    probe, and module->refcnt is incremented by alloc_mdio_bitbang() called
    after that.
    Therefore, even if ifup is not performed, the driver is in use and rmmod
    cannot be performed.
    
    $ lsmod
    Module                  Size  Used by
    ravb                   40960  1
    $ rmmod ravb
    rmmod: ERROR: Module ravb is in use
    
    Call ravb_mdio_init() at open and free_mdio_bitbang() at close, thereby
    rmmod is possible in the ifdown state.
    
    Fixes: c156633f1353 ("Renesas Ethernet AVB driver proper")
    Signed-off-by: Yuusuke Ashizuka <ashiduka@fujitsu.com>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b4a82a834b43ccdc8599df0f1094577fe423af6
Author: Max Staudt <max@enpas.org>
Date:   Thu Aug 27 17:49:00 2020 +0200

    affs: fix basic permission bits to actually work
    
    [ Upstream commit d3a84a8d0dde4e26bc084b36ffcbdc5932ac85e2 ]
    
    The basic permission bits (protection bits in AmigaOS) have been broken
    in Linux' AFFS - it would only set bits, but never delete them.
    Also, contrary to the documentation, the Archived bit was not handled.
    
    Let's fix this for good, and set the bits such that Linux and classic
    AmigaOS can coexist in the most peaceful manner.
    
    Also, update the documentation to represent the current state of things.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Max Staudt <max@enpas.org>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be27114e58a88afab55ea963015595bb5936a940
Author: Fabian Frederick <fabf@skynet.be>
Date:   Mon Feb 27 14:27:52 2017 -0800

    fs/affs: use octal for permissions
    
    [ Upstream commit 1bafd6f164d9ec9bf2fa9829051fbeb36342be0b ]
    
    According to commit f90774e1fd27 ("checkpatch: look for symbolic
    permissions and suggest octal instead")
    
    Link: http://lkml.kernel.org/r/20170109191208.6085-5-fabf@skynet.be
    Signed-off-by: Fabian Frederick <fabf@skynet.be>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ca1092a725f54eb88bc7e1b55e718e218356e5a
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Aug 23 16:55:37 2020 +0900

    ALSA; firewire-tascam: exclude Tascam FE-8 from detection
    
    Tascam FE-8 is known to support communication by asynchronous transaction
    only. The support can be implemented in userspace application and
    snd-firewire-ctl-services project has the support. However, ALSA
    firewire-tascam driver is bound to the model.
    
    This commit changes device entries so that the model is excluded. In a
    commit 53b3ffee7885 ("ALSA: firewire-tascam: change device probing
    processing"), I addressed to the concern that version field in
    configuration differs depending on installed firmware. However, as long
    as I checked, the version number is fixed. It's safe to return version
    number back to modalias.
    
    Fixes: 53b3ffee7885 ("ALSA: firewire-tascam: change device probing processing")
    Cc: <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200823075537.56255-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 32075cf7e18fefd0a52be3366dcd19b8e8c3dc41
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Aug 23 16:55:45 2020 +0900

    ALSA: firewire-digi00x: exclude Avid Adrenaline from detection
    
    [ Upstream commit acd46a6b6de88569654567810acad2b0a0a25cea ]
    
    Avid Adrenaline is reported that ALSA firewire-digi00x driver is bound to.
    However, as long as he investigated, the design of this model is hardly
    similar to the one of Digi 00x family. It's better to exclude the model
    from modalias of ALSA firewire-digi00x driver.
    
    This commit changes device entries so that the model is excluded.
    
    $ python3 crpp < ~/git/am-config-rom/misc/avid-adrenaline.img
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04203a9c  bus_info_length 4, crc_length 32, crc 15004
    404  31333934  bus_name "1394"
    408  e064a002  irmc 1, cmc 1, isc 1, bmc 0, cyc_clk_acc 100, max_rec 10 (2048)
    40c  00a07e01  company_id 00a07e     |
    410  00085257  device_id 0100085257  | EUI-64 00a07e0100085257
    
                   root directory
                   -----------------------------------------------------------------
    414  0005d08c  directory_length 5, crc 53388
    418  0300a07e  vendor
    41c  8100000c  --> descriptor leaf at 44c
    420  0c008380  node capabilities
    424  8d000002  --> eui-64 leaf at 42c
    428  d1000004  --> unit directory at 438
    
                   eui-64 leaf at 42c
                   -----------------------------------------------------------------
    42c  0002410f  leaf_length 2, crc 16655
    430  00a07e01  company_id 00a07e     |
    434  00085257  device_id 0100085257  | EUI-64 00a07e0100085257
    
                   unit directory at 438
                   -----------------------------------------------------------------
    438  0004d6c9  directory_length 4, crc 54985
    43c  1200a02d  specifier id: 1394 TA
    440  13014001  version: Vender Unique and AV/C
    444  17000001  model
    448  81000009  --> descriptor leaf at 46c
    
                   descriptor leaf at 44c
                   -----------------------------------------------------------------
    44c  00077205  leaf_length 7, crc 29189
    450  00000000  textual descriptor
    454  00000000  minimal ASCII
    458  41766964  "Avid"
    45c  20546563  " Tec"
    460  686e6f6c  "hnol"
    464  6f677900  "ogy"
    468  00000000
    
                   descriptor leaf at 46c
                   -----------------------------------------------------------------
    46c  000599a5  leaf_length 5, crc 39333
    470  00000000  textual descriptor
    474  00000000  minimal ASCII
    478  41647265  "Adre"
    47c  6e616c69  "nali"
    480  6e650000  "ne"
    
    Reported-by: Simon Wood <simon@mungewell.org>
    Fixes: 9edf723fd858 ("ALSA: firewire-digi00x: add skeleton for Digi 002/003 family")
    Cc: <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200823075545.56305-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cfa2411238bdd0e25bfcb9ffa24610825872b98
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Apr 2 23:48:24 2017 +0900

    ALSA: firewire-digi00x: add support for console models of Digi00x series
    
    [ Upstream commit 13e005f9f933a35b5e55c9d36f151efe2a8383ec ]
    
    Digi00x series includes two types of unit; rack and console. As long as
    reading information on config rom of Digi 002 console, 'MODEL_ID' field
    has a different value from the one on Digi 002 rack.
    
    We've already got a test report from users with Digi 003 rack. We can
    assume that console type and rack type has different value in the field.
    
    This commit adds a device entry for console type. For following commits,
    this commit also adds a member to 'struct snd_digi00x' to identify console
    type.
    
    $ cd linux-firewire-utils/src
    $ python2 ./crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  0404f9d0  bus_info_length 4, crc_length 4, crc 63952
    404  31333934  bus_name "1394"
    408  60647002  irmc 0, cmc 1, isc 1, bmc 0, cyc_clk_acc 100, max_rec 7 (256)
    40c  00a07e00  company_id 00a07e     |
    410  00a30000  device_id 0000a30000  | EUI-64 00a07e0000a30000
    
                   root directory
                   -----------------------------------------------------------------
    414  00058a39  directory_length 5, crc 35385
    418  0c0043a0  node capabilities
    41c  04000001  hardware version
    420  0300a07e  vendor
    424  81000007  --> descriptor leaf at 440
    428  d1000001  --> unit directory at 42c
    
                   unit directory at 42c
                   -----------------------------------------------------------------
    42c  00046674  directory_length 4, crc 26228
    430  120000a3  specifier id
    434  13000001  version
    438  17000001  model
    43c  81000007  --> descriptor leaf at 458
    
                   descriptor leaf at 440
                   -----------------------------------------------------------------
    440  00055913  leaf_length 5, crc 22803
    444  000050f2  descriptor_type 00, specifier_ID 50f2
    448  80000000
    44c  44696769
    450  64657369
    454  676e0000
    
                   descriptor leaf at 458
                   -----------------------------------------------------------------
    458  0004a6fd  leaf_length 4, crc 42749
    45c  00000000  textual descriptor
    460  00000000  minimal ASCII
    464  44696769  "Digi"
    468  20303032  " 002"
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a5455cd886649e3bd39b0fbf93b0cd0e45d05cb
Author: Himadri Pandya <himadrispandya@gmail.com>
Date:   Thu Aug 27 12:23:55 2020 +0530

    net: usb: Fix uninit-was-stored issue in asix_read_phy_addr()
    
    commit a092b7233f0e000cc6f2c71a49e2ecc6f917a5fc upstream.
    
    The buffer size is 2 Bytes and we expect to receive the same amount of
    data. But sometimes we receive less data and run into uninit-was-stored
    issue upon read. Hence modify the error check on the return value to match
    with the buffer size as a prevention.
    
    Reported-and-tested by: syzbot+a7e220df5a81d1ab400e@syzkaller.appspotmail.com
    Signed-off-by: Himadri Pandya <himadrispandya@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abe3fa074dc48a4da6d1b030a16e521221e3bb54
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Aug 19 10:46:48 2020 +0200

    cfg80211: regulatory: reject invalid hints
    
    commit 47caf685a6854593348f216e0b489b71c10cbe03 upstream.
    
    Reject invalid hints early in order to not cause a kernel
    WARN later if they're restored to or similar.
    
    Reported-by: syzbot+d451401ffd00a60677ee@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=d451401ffd00a60677ee
    Link: https://lore.kernel.org/r/20200819084648.13956-1-johannes@sipsolutions.net
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c9757b4a2cd8039dddc01e8b589d9157f5d756a
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Fri Sep 4 16:36:13 2020 -0700

    mm/hugetlb: fix a race between hugetlb sysctl handlers
    
    commit 17743798d81238ab13050e8e2833699b54e15467 upstream.
    
    There is a race between the assignment of `table->data` and write value
    to the pointer of `table->data` in the __do_proc_doulongvec_minmax() on
    the other thread.
    
      CPU0:                                 CPU1:
                                            proc_sys_write
      hugetlb_sysctl_handler                  proc_sys_call_handler
      hugetlb_sysctl_handler_common             hugetlb_sysctl_handler
        table->data = &tmp;                       hugetlb_sysctl_handler_common
                                                    table->data = &tmp;
          proc_doulongvec_minmax
            do_proc_doulongvec_minmax           sysctl_head_finish
              __do_proc_doulongvec_minmax         unuse_table
                i = table->data;
                *i = val;  // corrupt CPU1's stack
    
    Fix this by duplicating the `table`, and only update the duplicate of
    it.  And introduce a helper of proc_hugetlb_doulongvec_minmax() to
    simplify the code.
    
    The following oops was seen:
    
        BUG: kernel NULL pointer dereference, address: 0000000000000000
        #PF: supervisor instruction fetch in kernel mode
        #PF: error_code(0x0010) - not-present page
        Code: Bad RIP value.
        ...
        Call Trace:
         ? set_max_huge_pages+0x3da/0x4f0
         ? alloc_pool_huge_page+0x150/0x150
         ? proc_doulongvec_minmax+0x46/0x60
         ? hugetlb_sysctl_handler_common+0x1c7/0x200
         ? nr_hugepages_store+0x20/0x20
         ? copy_fd_bitmaps+0x170/0x170
         ? hugetlb_sysctl_handler+0x1e/0x20
         ? proc_sys_call_handler+0x2f1/0x300
         ? unregister_sysctl_table+0xb0/0xb0
         ? __fd_install+0x78/0x100
         ? proc_sys_write+0x14/0x20
         ? __vfs_write+0x4d/0x90
         ? vfs_write+0xef/0x240
         ? ksys_write+0xc0/0x160
         ? __ia32_sys_read+0x50/0x50
         ? __close_fd+0x129/0x150
         ? __x64_sys_write+0x43/0x50
         ? do_syscall_64+0x6c/0x200
         ? entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: e5ff215941d5 ("hugetlb: multiple hstates for multiple page sizes")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Link: http://lkml.kernel.org/r/20200828031146.43035-1-songmuchun@bytedance.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c85a849623b3b04ca4f6802a53d08a7144c5d26e
Author: Mrinal Pandey <mrinalmni@gmail.com>
Date:   Fri Sep 4 16:35:52 2020 -0700

    checkpatch: fix the usage of capture group ( ... )
    
    commit 13e45417cedbfc44b1926124b1846f5ee8c6ba4a upstream.
    
    The usage of "capture group (...)" in the immediate condition after `&&`
    results in `$1` being uninitialized.  This issues a warning "Use of
    uninitialized value $1 in regexp compilation at ./scripts/checkpatch.pl
    line 2638".
    
    I noticed this bug while running checkpatch on the set of commits from
    v5.7 to v5.8-rc1 of the kernel on the commits with a diff content in
    their commit message.
    
    This bug was introduced in the script by commit e518e9a59ec3
    ("checkpatch: emit an error when there's a diff in a changelog").  It
    has been in the script since then.
    
    The author intended to store the match made by capture group in variable
    `$1`.  This should have contained the name of the file as `[\w/]+`
    matched.  However, this couldn't be accomplished due to usage of capture
    group and `$1` in the same regular expression.
    
    Fix this by placing the capture group in the condition before `&&`.
    Thus, `$1` can be initialized to the text that capture group matches
    thereby setting it to the desired and required value.
    
    Fixes: e518e9a59ec3 ("checkpatch: emit an error when there's a diff in a changelog")
    Signed-off-by: Mrinal Pandey <mrinalmni@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Tested-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Reviewed-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Cc: Joe Perches <joe@perches.com>
    Link: https://lkml.kernel.org/r/20200714032352.f476hanaj2dlmiot@mrinalpandey
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a02dacd30d2db1d000f46fb750d0e8e945163236
Author: Tim Froidcoeur <tim.froidcoeur@tessares.net>
Date:   Tue Aug 11 20:33:24 2020 +0200

    net: initialize fastreuse on inet_inherit_port
    
    commit d76f3351cea2d927fdf70dd7c06898235035e84e upstream.
    
    In the case of TPROXY, bind_conflict optimizations for SO_REUSEADDR or
    SO_REUSEPORT are broken, possibly resulting in O(n) instead of O(1) bind
    behaviour or in the incorrect reuse of a bind.
    
    the kernel keeps track for each bind_bucket if all sockets in the
    bind_bucket support SO_REUSEADDR or SO_REUSEPORT in two fastreuse flags.
    These flags allow skipping the costly bind_conflict check when possible
    (meaning when all sockets have the proper SO_REUSE option).
    
    For every socket added to a bind_bucket, these flags need to be updated.
    As soon as a socket that does not support reuse is added, the flag is
    set to false and will never go back to true, unless the bind_bucket is
    deleted.
    
    Note that there is no mechanism to re-evaluate these flags when a socket
    is removed (this might make sense when removing a socket that would not
    allow reuse; this leaves room for a future patch).
    
    For this optimization to work, it is mandatory that these flags are
    properly initialized and updated.
    
    When a child socket is created from a listen socket in
    __inet_inherit_port, the TPROXY case could create a new bind bucket
    without properly initializing these flags, thus preventing the
    optimization to work. Alternatively, a socket not allowing reuse could
    be added to an existing bind bucket without updating the flags, causing
    bind_conflict to never be called as it should.
    
    Call inet_csk_update_fastreuse when __inet_inherit_port decides to create
    a new bind_bucket or use a different bind_bucket than the one of the
    listen socket.
    
    Fixes: 093d282321da ("tproxy: fix hash locking issue when using port redirection in __inet_inherit_port()")
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37eee056ad551ae45c7d1f0ec3295499e47410bf
Author: Tim Froidcoeur <tim.froidcoeur@tessares.net>
Date:   Tue Aug 11 20:33:23 2020 +0200

    net: refactor bind_bucket fastreuse into helper
    
    commit 62ffc589abb176821662efc4525ee4ac0b9c3894 upstream.
    
    Refactor the fastreuse update code in inet_csk_get_port into a small
    helper function that can be called from other places.
    
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9466c4116852eb40380e3ffa9cfeae55c344c551
Author: Ye Bin <yebin10@huawei.com>
Date:   Tue Sep 1 14:25:43 2020 +0800

    dm thin metadata: Avoid returning cmd->bm wild pointer on error
    
    commit 219403d7e56f9b716ad80ab87db85d29547ee73e upstream.
    
    Maybe __create_persistent_data_objects() caller will use PTR_ERR as a
    pointer, it will lead to some strange things.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caf38213c01611c11aaa0ec7d2b7433a38552752
Author: Ye Bin <yebin10@huawei.com>
Date:   Tue Sep 1 14:25:42 2020 +0800

    dm cache metadata: Avoid returning cmd->bm wild pointer on error
    
    commit d16ff19e69ab57e08bf908faaacbceaf660249de upstream.
    
    Maybe __create_persistent_data_objects() caller will use PTR_ERR as a
    pointer, it will lead to some strange things.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b88dda70f38f2a4b170ddc5a954d7d11ab33d8ab
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Sep 1 15:18:02 2020 +0200

    ALSA: pcm: oss: Remove superfluous WARN_ON() for mulaw sanity check
    
    commit 949a1ebe8cea7b342085cb6a4946b498306b9493 upstream.
    
    The PCM OSS mulaw plugin has a check of the format of the counter part
    whether it's a linear format.  The check is with snd_BUG_ON() that
    emits WARN_ON() when the debug config is set, and it confuses
    syzkaller as if it were a serious issue.  Let's drop snd_BUG_ON() for
    avoiding that.
    
    While we're at it, correct the error code to a more suitable, EINVAL.
    
    Reported-by: syzbot+23b22dc2e0b81cbfcc95@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200901131802.18157-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0715ed8cabd55905f9e817600a73d56d7add3000
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Aug 24 18:45:41 2020 -0400

    ALSA: ca0106: fix error code handling
    
    commit ee0761d1d8222bcc5c86bf10849dc86cf008557c upstream.
    
    snd_ca0106_spi_write() returns 1 on error, snd_ca0106_pcm_power_dac()
    is returning the error code directly, and the caller is expecting an
    negative error code
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200824224541.1260307-1-ztong0001@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46e6bd5d8d498ecb3cfeeeaffd69be4e069cab17
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Wed Oct 9 11:07:18 2019 +0200

    net: usb: qmi_wwan: add Telit 0x1050 composition
    
    [ Upstream commit e0ae2c578d3909e60e9448207f5d83f785f1129f ]
    
    This patch adds support for Telit FN980 0x1050 composition
    
    0x1050: tty, adb, rmnet, tty, tty, tty, tty
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 442b8b70be5adfac8ff0d8ffaf377b76ef311d40
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Wed May 3 10:30:11 2017 +0200

    net: usb: qmi_wwan: add Telit ME910 support
    
    [ Upstream commit 4c54dc0277d0d55a9248c43aebd31858f926a056 ]
    
    This patch adds support for Telit ME910 PID 0x1100.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 688e7f9d0bb8e9a11c4d9492038907f98a10c543
Author: Rogan Dawes <rogan@dawes.za.net>
Date:   Wed Jul 17 11:14:33 2019 +0200

    usb: qmi_wwan: add D-Link DWM-222 A2 device ID
    
    [ Upstream commit 7d6053097311643545a8118100175a39bd6fa637 ]
    
    Signed-off-by: Rogan Dawes <rogan@dawes.za.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecf4b2b0344dfe7d7acbe85d7127bf604393db84
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Mon Apr 10 17:34:23 2017 +0200

    drivers: net: usb: qmi_wwan: add QMI_QUIRK_SET_DTR for Telit PID 0x1201
    
    [ Upstream commit 14cf4a771b3098e431d2677e3533bdd962e478d8 ]
    
    Telit LE920A4 uses the same pid 0x1201 of LE920, but modem
    implementation is different, since it requires DTR to be set for
    answering to qmi messages.
    
    This patch replaces QMI_FIXED_INTF with QMI_QUIRK_SET_DTR: tests on
    LE920 have been performed in order to verify backward compatibility.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7d5f9c5cf2de12177a4d46301e069d82d3ca044
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Dec 1 16:52:05 2016 +0100

    NET: usb: qmi_wwan: add support for Telit LE922A PID 0x1040
    
    [ Upstream commit 9bd813da24cd49d749911d7fdc0e9ae9a673d746 ]
    
    This patch adds support for PID 0x1040 of Telit LE922A.
    
    The qmi adapter requires to have DTR set for proper working,
    so QMI_WWAN_QUIRK_DTR has been enabled.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60be7700decd77c3e7253ef30a910961bb88e103
Author: Bjørn Mork <bjorn@mork.no>
Date:   Mon Oct 10 21:12:49 2016 +0200

    qmi_wwan: add support for Quectel EC21 and EC25
    
    [ Upstream commit 9a765881bf3dcd32847d7108cf48cb04a4ed993f ]
    
    The Quectel EC21 and EC25 need the same "set DTR" request as devices
    based on the MDM9230 chipset, but has no USB3 support. Our best guess
    is that the "set DTR" functionality depends on chipset and/or
    baseband firmware generation. But USB3 is still an optional feature.
    
    Since we cannot enable this unconditionally for all older devices, and
    there doesn't appear to be anything we can use in the USB descriptors
    to identify these chips, we are forced to use a device specific quirk
    flag.
    
    Reported-and-tested-by: Sebastian Sjoholm <sebastian.sjoholm@gmail.com>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 234d8f7d7fb76cbb3070a18b57e13689da29e618
Author: Schemmel Hans-Christoph <Hans-Christoph.Schemmel@gemalto.com>
Date:   Thu Mar 17 10:07:56 2016 +0000

    qmi_wwan: Added support for Gemalto's Cinterion PHxx WWAN interface
    
    [ Upstream commit bd9e33508c5e1eb5d807d11d7bfc52125fcdb04e ]
    
    Added support for Gemalto's Cinterion PHxx WWAN interfaces
    by adding QMI_FIXED_INTF with Cinterion's VID and PID.
    
    PHxx can have:
    2 RmNet Interfaces (PID 0x0082) or
    1 RmNet + 1 USB Audio interface (PID 0x0083).
    
    Signed-off-by: Hans-Christoph Schemmel <hans-christoph.schemmel@gemalto.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0161e45ce3e3326fcde8c46107aa3febeb3727af
Author: Patrik Halfar <patrik_halfar@halfarit.cz>
Date:   Sat Feb 20 18:49:40 2016 +0100

    Add Dell Wireless 5809e Gobi 4G HSPA+ Mobile Broadband Card (rev3) to qmi_wwan
    
    [ Upstream commit fb5eb24cdd5cdb83be77d3e4b2f16e92e06bd9e9 ]
    
    New revison of Dell Wireless 5809e Gobi 4G HSPA+ Mobile Broadband Card has new idProduct
    
    Bus 002 Device 006: ID 413c:81b3 Dell Computer Corp.
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass            0
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0        64
      idVendor           0x413c Dell Computer Corp.
      idProduct          0x81b3
      bcdDevice            0.06
      iManufacturer           1 Sierra Wireless, Incorporated
      iProduct                2 Dell Wireless 5809e Gobi™ 4G HSPA+ Mobile Broadband Card
      iSerial                 3
      bNumConfigurations      2
    
    Signed-off-by: Patrik Halfar <patrik_halfar@halfarit.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46d5efcfe21cc92be843aaf5229603a1d1a2bba3
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Dec 17 12:44:04 2015 +0100

    net: qmi_wwan: ignore bogus CDC Union descriptors
    
    [ Upstream commit 34a55d5e858e81a20d33fd9490149d6a1058be0c ]
    
    The CDC descriptors found on these vendor specific functions should
    not be considered authoritative.  They seem to be ignored by drivers
    for other systems, and the quality is therefore low.
    
    One device (1e0e:9001) has been reported to have such a bogus union
    descriptor on the QMI function, making it fail probing even if the
    device id was dynamically added.  The report was not complete enough
    to allow adding a device entry for this modem. But this should at
    least fix the dynamic id probing problem.
    
    Reported-by: Kanerva Topi <Topi.Kanerva@cinia.fi>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27d2a22cf72c6f12d880effab09421bcf5160906
Author: Bjørn Mork <bjorn@mork.no>
Date:   Sun Dec 6 21:25:50 2015 +0100

    net: qmi_wwan: should hold RTNL while changing netdev type
    
    [ Upstream commit 6c730080e663b1d629f8aa89348291fbcdc46cd9 ]
    
    The notifier calls were thrown in as a last-minute fix for an
    imagined "this device could be part of a bridge" problem. That
    revealed a certain lack of locking.  Not to mention testing...
    
    Avoid this splat:
    
    RTNL: assertion failed at net/core/dev.c (1639)
    CPU: 0 PID: 4293 Comm: bash Not tainted 4.4.0-rc3+ #358
    Hardware name: LENOVO 2776LEG/2776LEG, BIOS 6EET55WW (3.15 ) 12/19/2011
     0000000000000000 ffff8800ad253d60 ffffffff8122f7cf ffff8800ad253d98
     ffff8800ad253d88 ffffffff813833ab 0000000000000002 ffff880230f48560
     ffff880230a12900 ffff8800ad253da0 ffffffff813833da 0000000000000002
    Call Trace:
     [<ffffffff8122f7cf>] dump_stack+0x4b/0x63
     [<ffffffff813833ab>] call_netdevice_notifiers_info+0x3d/0x59
     [<ffffffff813833da>] call_netdevice_notifiers+0x13/0x15
     [<ffffffffa09be227>] raw_ip_store+0x81/0x193 [qmi_wwan]
     [<ffffffff8131e149>] dev_attr_store+0x20/0x22
     [<ffffffff811d858b>] sysfs_kf_write+0x49/0x50
     [<ffffffff811d8027>] kernfs_fop_write+0x10a/0x151
     [<ffffffff8117249a>] __vfs_write+0x26/0xa5
     [<ffffffff81085ed4>] ? percpu_down_read+0x53/0x7f
     [<ffffffff81174c9e>] ? __sb_start_write+0x5f/0xb0
     [<ffffffff81174c9e>] ? __sb_start_write+0x5f/0xb0
     [<ffffffff81172c37>] vfs_write+0xa3/0xe7
     [<ffffffff811734ad>] SyS_write+0x50/0x7e
     [<ffffffff8145c517>] entry_SYSCALL_64_fastpath+0x12/0x6f
    
    Fixes: 32f7adf633b9 ("net: qmi_wwan: support "raw IP" mode")
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dad0724ffc1413e20c15d95b8c298594ca32e359
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Dec 3 19:24:21 2015 +0100

    net: qmi_wwan: support "raw IP" mode
    
    [ Upstream commit 32f7adf633b9f99ad5089901bc7ebff57704aaa9 ]
    
    QMI wwan devices have traditionally emulated ethernet devices
    by default. But they have always had the capability of operating
    without any L2 header at all, transmitting and receiving "raw"
    IP packets over the USB link.  This firmware feature used to be
    configurable through the QMI management protocol.
    
    Traditionally there was no way to verify the firmware mode
    without attempting to change it.  And the firmware would often
    disallow changes anyway, i.e. due to a session already being
    established.  In some cases, this could be a hidden firmware
    internal session, completely outside host control.  For these
    reasons, sticking with the "well known" default mode was safest.
    
    But newer generations of QMI hardware and firmware have moved
    towards defaulting to "raw IP" mode instead, followed by an
    increasing number of bugs in the already buggy "802.3" firmware
    implementation. At the same time, the QMI management protocol
    gained the ability to detect the current mode.  This has enabled
    the userspace QMI management application to verify the current
    firmware mode without trying to modify it.
    
    Following this development, the latest QMI hardware and firmware
    (the MDM9x30 generation) has dropped support for "802.3" mode
    entirely. Support for "raw IP" framing in the driver is therefore
    necessary for these devices, and to a certain degree to work
    around problems with the previous generation,
    
    This patch adds support for "raw IP" framing for QMI devices,
    changing the netdev from an ethernet device to an ARPHRD_NONE
    p-t-p device when "raw IP" framing is enabled.
    
    The firmware setup is fully delegated to the QMI userspace
    management application, through simple tunneling of the QMI
    protocol. The driver will therefore not know which mode has been
    "negotiated" between firmware and userspace. Allowing userspace
    to inform the driver of the result through a sysfs switch is
    considered a better alternative than to change the well established
    clean delegation of firmware management to userspace.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85338431fcf945d785b414a1a234d986d4140666
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Dec 3 19:24:18 2015 +0100

    net: qmi_wwan: MDM9x30 specific power management
    
    [ Upstream commit 93725149794d3d418cf1eddcae60c7b536c5faa1 ]
    
    MDM9x30 based modems appear to go into a deeper sleep when
    suspended without "Remote Wakeup" enabled.  The QMI interface
    will not respond unless a "set DTR" control request is sent
    on resume. The effect is similar to a QMI_CTL SYNC request,
    resetting (some of) the firmware state.
    
    We allow userspace sessions to span multiple character device
    open/close sequences.  This means that userspace can depend
    on firmware state while both the netdev and the character
    device are closed.  We have disabled "needs_remote_wakeup" at
    this point to allow devices without remote wakeup support to
    be auto-suspended.
    
    To make sure the MDM9x30 keeps firmware state, we need to
    keep "needs_remote_wakeup" always set. We also need to
    issue a "set DTR" request to enable the QMI interface.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3f2b1f74779e98717cb4af4bda9b54576c9dd9a
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:27 2020 -0400

    btrfs: fix potential deadlock in the search ioctl
    
    [ Upstream commit a48b73eca4ceb9b8a4b97f290a065335dbcd8a04 ]
    
    With the conversion of the tree locks to rwsem I got the following
    lockdep splat:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc7-00165-g04ec4da5f45f-dirty #922 Not tainted
      ------------------------------------------------------
      compsize/11122 is trying to acquire lock:
      ffff889fabca8768 (&mm->mmap_lock#2){++++}-{3:3}, at: __might_fault+0x3e/0x90
    
      but task is already holding lock:
      ffff889fe720fe40 (btrfs-fs-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #2 (btrfs-fs-00){++++}-{3:3}:
             down_write_nested+0x3b/0x70
             __btrfs_tree_lock+0x24/0x120
             btrfs_search_slot+0x756/0x990
             btrfs_lookup_inode+0x3a/0xb4
             __btrfs_update_delayed_inode+0x93/0x270
             btrfs_async_run_delayed_root+0x168/0x230
             btrfs_work_helper+0xd4/0x570
             process_one_work+0x2ad/0x5f0
             worker_thread+0x3a/0x3d0
             kthread+0x133/0x150
             ret_from_fork+0x1f/0x30
    
      -> #1 (&delayed_node->mutex){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             btrfs_delayed_update_inode+0x50/0x440
             btrfs_update_inode+0x8a/0xf0
             btrfs_dirty_inode+0x5b/0xd0
             touch_atime+0xa1/0xd0
             btrfs_file_mmap+0x3f/0x60
             mmap_region+0x3a4/0x640
             do_mmap+0x376/0x580
             vm_mmap_pgoff+0xd5/0x120
             ksys_mmap_pgoff+0x193/0x230
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #0 (&mm->mmap_lock#2){++++}-{3:3}:
             __lock_acquire+0x1272/0x2310
             lock_acquire+0x9e/0x360
             __might_fault+0x68/0x90
             _copy_to_user+0x1e/0x80
             copy_to_sk.isra.32+0x121/0x300
             search_ioctl+0x106/0x200
             btrfs_ioctl_tree_search_v2+0x7b/0xf0
             btrfs_ioctl+0x106f/0x30a0
             ksys_ioctl+0x83/0xc0
             __x64_sys_ioctl+0x16/0x20
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      other info that might help us debug this:
    
      Chain exists of:
        &mm->mmap_lock#2 --> &delayed_node->mutex --> btrfs-fs-00
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(btrfs-fs-00);
                                     lock(&delayed_node->mutex);
                                     lock(btrfs-fs-00);
        lock(&mm->mmap_lock#2);
    
       *** DEADLOCK ***
    
      1 lock held by compsize/11122:
       #0: ffff889fe720fe40 (btrfs-fs-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      stack backtrace:
      CPU: 17 PID: 11122 Comm: compsize Kdump: loaded Not tainted 5.8.0-rc7-00165-g04ec4da5f45f-dirty #922
      Hardware name: Quanta Tioga Pass Single Side 01-0030993006/Tioga Pass Single Side, BIOS F08_3A18 12/20/2018
      Call Trace:
       dump_stack+0x78/0xa0
       check_noncircular+0x165/0x180
       __lock_acquire+0x1272/0x2310
       lock_acquire+0x9e/0x360
       ? __might_fault+0x3e/0x90
       ? find_held_lock+0x72/0x90
       __might_fault+0x68/0x90
       ? __might_fault+0x3e/0x90
       _copy_to_user+0x1e/0x80
       copy_to_sk.isra.32+0x121/0x300
       ? btrfs_search_forward+0x2a6/0x360
       search_ioctl+0x106/0x200
       btrfs_ioctl_tree_search_v2+0x7b/0xf0
       btrfs_ioctl+0x106f/0x30a0
       ? __do_sys_newfstat+0x5a/0x70
       ? ksys_ioctl+0x83/0xc0
       ksys_ioctl+0x83/0xc0
       __x64_sys_ioctl+0x16/0x20
       do_syscall_64+0x50/0x90
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The problem is we're doing a copy_to_user() while holding tree locks,
    which can deadlock if we have to do a page fault for the copy_to_user().
    This exists even without my locking changes, so it needs to be fixed.
    Rework the search ioctl to do the pre-fault and then
    copy_to_user_nofault for the copying.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f43434ee0f9c38214739e7d1f552cf9885d4cc71
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Sat Nov 2 00:17:56 2019 +0100

    uaccess: Add non-pagefault user-space write function
    
    [ Upstream commit 1d1585ca0f48fe7ed95c3571f3e4a82b2b5045dc ]
    
    Commit 3d7081822f7f ("uaccess: Add non-pagefault user-space read functions")
    missed to add probe write function, therefore factor out a probe_write_common()
    helper with most logic of probe_kernel_write() except setting KERNEL_DS, and
    add a new probe_user_write() helper so it can be used from BPF side.
    
    Again, on some archs, the user address space and kernel address space can
    co-exist and be overlapping, so in such case, setting KERNEL_DS would mean
    that the given address is treated as being in kernel address space.
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Link: https://lore.kernel.org/bpf/9df2542e68141bfa3addde631441ee45503856a8.1572649915.git.daniel@iogearbox.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36fd2e474b0b66b1f091ac9438578381807e26e2
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed May 15 14:38:18 2019 +0900

    uaccess: Add non-pagefault user-space read functions
    
    [ Upstream commit 3d7081822f7f9eab867d9bcc8fd635208ec438e0 ]
    
    Add probe_user_read(), strncpy_from_unsafe_user() and
    strnlen_unsafe_user() which allows caller to access user-space
    in IRQ context.
    
    Current probe_kernel_read() and strncpy_from_unsafe() are
    not available for user-space memory, because it sets
    KERNEL_DS while accessing data. On some arch, user address
    space and kernel address space can be co-exist, but others
    can not. In that case, setting KERNEL_DS means given
    address is treated as a kernel address space.
    Also strnlen_user() is only available from user context since
    it can sleep if pagefault is enabled.
    
    To access user-space memory without pagefault, we need
    these new functions which sets USER_DS while accessing
    the data.
    
    Link: http://lkml.kernel.org/r/155789869802.26965.4940338412595759063.stgit@devnote2
    
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39bb69d0617ef120b157b8f4f0563174bfc434a1
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:31 2020 -0400

    btrfs: set the lockdep class for log tree extent buffers
    
    [ Upstream commit d3beaa253fd6fa40b8b18a216398e6e5376a9d21 ]
    
    These are special extent buffers that get rewound in order to lookup
    the state of the tree at a specific point in time.  As such they do not
    go through the normal initialization paths that set their lockdep class,
    so handle them appropriately when they are created and before they are
    locked.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3bbdde20ef92046872e501a0c2e9390cf929470
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Wed Aug 15 18:26:54 2018 +0300

    btrfs: Remove extraneous extent_buffer_get from tree_mod_log_rewind
    
    [ Upstream commit 24cee18a1c1d7c731ea5987e0c99daea22ae7f4a ]
    
    When a rewound buffer is created it already has a ref count of 1 and the
    dummy flag set. Then another ref is taken bumping the count to 2.
    Finally when this buffer is released from btrfs_release_path the extra
    reference is decremented by the special handling code in
    free_extent_buffer.
    
    However, this special code is in fact redundant sinca ref count of 1 is
    still correct since the buffer is only accessed via btrfs_path struct.
    This paves the way forward of removing the special handling in
    free_extent_buffer.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 123597681e8928a8abe97e1f598e3ec6c6aeb2e5
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Wed Aug 15 18:26:53 2018 +0300

    btrfs: Remove redundant extent_buffer_get in get_old_root
    
    [ Upstream commit 6c122e2a0c515cfb3f3a9cefb5dad4cb62109c78 ]
    
    get_old_root used used only by btrfs_search_old_slot to initialise the
    path structure. The old root is always a cloned buffer (either via alloc
    dummy or via btrfs_clone_extent_buffer) and its reference count is 2: 1
    from allocation, 1 from extent_buffer_get call in get_old_root.
    
    This latter explicit ref count acquire operation is in fact unnecessary
    since the semantic is such that the newly allocated buffer is handed
    over to the btrfs_path for lifetime management. Considering this just
    remove the extra extent_buffer_get in get_old_root.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d39a5df70ab9a010ad0fc999e2888529e63bb2ee
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:26 2020 -0400

    btrfs: drop path before adding new uuid tree entry
    
    commit 9771a5cf937129307d9f58922d60484d58ababe7 upstream.
    
    With the conversion of the tree locks to rwsem I got the following
    lockdep splat:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc7-00167-g0d7ba0c5b375-dirty #925 Not tainted
      ------------------------------------------------------
      btrfs-uuid/7955 is trying to acquire lock:
      ffff88bfbafec0f8 (btrfs-root-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      but task is already holding lock:
      ffff88bfbafef2a8 (btrfs-uuid-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #1 (btrfs-uuid-00){++++}-{3:3}:
             down_read_nested+0x3e/0x140
             __btrfs_tree_read_lock+0x39/0x180
             __btrfs_read_lock_root_node+0x3a/0x50
             btrfs_search_slot+0x4bd/0x990
             btrfs_uuid_tree_add+0x89/0x2d0
             btrfs_uuid_scan_kthread+0x330/0x390
             kthread+0x133/0x150
             ret_from_fork+0x1f/0x30
    
      -> #0 (btrfs-root-00){++++}-{3:3}:
             __lock_acquire+0x1272/0x2310
             lock_acquire+0x9e/0x360
             down_read_nested+0x3e/0x140
             __btrfs_tree_read_lock+0x39/0x180
             __btrfs_read_lock_root_node+0x3a/0x50
             btrfs_search_slot+0x4bd/0x990
             btrfs_find_root+0x45/0x1b0
             btrfs_read_tree_root+0x61/0x100
             btrfs_get_root_ref.part.50+0x143/0x630
             btrfs_uuid_tree_iterate+0x207/0x314
             btrfs_uuid_rescan_kthread+0x12/0x50
             kthread+0x133/0x150
             ret_from_fork+0x1f/0x30
    
      other info that might help us debug this:
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(btrfs-uuid-00);
                                     lock(btrfs-root-00);
                                     lock(btrfs-uuid-00);
        lock(btrfs-root-00);
    
       *** DEADLOCK ***
    
      1 lock held by btrfs-uuid/7955:
       #0: ffff88bfbafef2a8 (btrfs-uuid-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      stack backtrace:
      CPU: 73 PID: 7955 Comm: btrfs-uuid Kdump: loaded Not tainted 5.8.0-rc7-00167-g0d7ba0c5b375-dirty #925
      Hardware name: Quanta Tioga Pass Single Side 01-0030993006/Tioga Pass Single Side, BIOS F08_3A18 12/20/2018
      Call Trace:
       dump_stack+0x78/0xa0
       check_noncircular+0x165/0x180
       __lock_acquire+0x1272/0x2310
       lock_acquire+0x9e/0x360
       ? __btrfs_tree_read_lock+0x39/0x180
       ? btrfs_root_node+0x1c/0x1d0
       down_read_nested+0x3e/0x140
       ? __btrfs_tree_read_lock+0x39/0x180
       __btrfs_tree_read_lock+0x39/0x180
       __btrfs_read_lock_root_node+0x3a/0x50
       btrfs_search_slot+0x4bd/0x990
       btrfs_find_root+0x45/0x1b0
       btrfs_read_tree_root+0x61/0x100
       btrfs_get_root_ref.part.50+0x143/0x630
       btrfs_uuid_tree_iterate+0x207/0x314
       ? btree_readpage+0x20/0x20
       btrfs_uuid_rescan_kthread+0x12/0x50
       kthread+0x133/0x150
       ? kthread_create_on_node+0x60/0x60
       ret_from_fork+0x1f/0x30
    
    This problem exists because we have two different rescan threads,
    btrfs_uuid_scan_kthread which creates the uuid tree, and
    btrfs_uuid_tree_iterate that goes through and updates or deletes any out
    of date roots.  The problem is they both do things in different order.
    btrfs_uuid_scan_kthread() reads the tree_root, and then inserts entries
    into the uuid_root.  btrfs_uuid_tree_iterate() scans the uuid_root, but
    then does a btrfs_get_fs_root() which can read from the tree_root.
    
    It's actually easy enough to not be holding the path in
    btrfs_uuid_scan_kthread() when we add a uuid entry, as we already drop
    it further down and re-start the search when we loop.  So simply move
    the path release before we add our entry to the uuid tree.
    
    This also fixes a problem where we're holding a path open after we do
    btrfs_end_transaction(), which has it's own problems.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61763c535b865693af88f739443706618f67df0b
Author: Jason Gunthorpe <jgg@nvidia.com>
Date:   Fri Sep 4 16:36:19 2020 -0700

    include/linux/log2.h: add missing () around n in roundup_pow_of_two()
    
    [ Upstream commit 428fc0aff4e59399ec719ffcc1f7a5d29a4ee476 ]
    
    Otherwise gcc generates warnings if the expression is complicated.
    
    Fixes: 312a0c170945 ("[PATCH] LOG2: Alter roundup_pow_of_two() so that it can use a ilog2() on a constant")
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Link: https://lkml.kernel.org/r/0-v1-8a2697e3c003+41165-log_brackets_jgg@nvidia.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d27c6bba8d86fce0264c71ca99fd304b15ddccc9
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jul 6 11:33:38 2020 -0700

    thermal: ti-soc-thermal: Fix bogus thermal shutdowns for omap4430
    
    [ Upstream commit 30d24faba0532d6972df79a1bf060601994b5873 ]
    
    We can sometimes get bogus thermal shutdowns on omap4430 at least with
    droid4 running idle with a battery charger connected:
    
    thermal thermal_zone0: critical temperature reached (143 C), shutting down
    
    Dumping out the register values shows we can occasionally get a 0x7f value
    that is outside the TRM listed values in the ADC conversion table. And then
    we get a normal value when reading again after that. Reading the register
    multiple times does not seem help avoiding the bogus values as they stay
    until the next sample is ready.
    
    Looking at the TRM chapter "18.4.10.2.3 ADC Codes Versus Temperature", we
    should have values from 13 to 107 listed with a total of 95 values. But
    looking at the omap4430_adc_to_temp array, the values are off, and the
    end values are missing. And it seems that the 4430 ADC table is similar
    to omap3630 rather than omap4460.
    
    Let's fix the issue by using values based on the omap3630 table and just
    ignoring invalid values. Compared to the 4430 TRM, the omap3630 table has
    the missing values added while the TRM table only shows every second
    value.
    
    Note that sometimes the ADC register values within the valid table can
    also be way off for about 1 out of 10 values. But it seems that those
    just show about 25 C too low values rather than too high values. So those
    do not cause a bogus thermal shutdown.
    
    Fixes: 1a31270e54d7 ("staging: omap-thermal: add OMAP4 data structures")
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200706183338.25622-1-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e60dada0c787efa3d1e6fe3a9f8bbc44e91d930b
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Fri Aug 28 08:06:15 2020 +0800

    iommu/vt-d: Serialize IOMMU GCMD register modifications
    
    [ Upstream commit 6e4e9ec65078093165463c13d4eb92b3e8d7b2e8 ]
    
    The VT-d spec requires (10.4.4 Global Command Register, GCMD_REG General
    Description) that:
    
    If multiple control fields in this register need to be modified, software
    must serialize the modifications through multiple writes to this register.
    
    However, in irq_remapping.c, modifications of IRE and CFI are done in one
    write. We need to do two separate writes with STS checking after each. It
    also checks the status register before writing command register to avoid
    unnecessary register write.
    
    Fixes: af8d102f999a4 ("x86/intel/irq_remapping: Clean up x2apic opt-out security warning mess")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Cc: Kevin Tian <kevin.tian@intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lore.kernel.org/r/20200828000615.8281-1-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a85ae99e74d1aa39eb28517cf212860720450e69
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Thu Sep 3 14:28:54 2020 -0400

    tg3: Fix soft lockup when tg3_reset_task() fails.
    
    [ Upstream commit 556699341efa98243e08e34401b3f601da91f5a3 ]
    
    If tg3_reset_task() fails, the device state is left in an inconsistent
    state with IFF_RUNNING still set but NAPI state not enabled.  A
    subsequent operation, such as ifdown or AER error can cause it to
    soft lock up when it tries to disable NAPI state.
    
    Fix it by bringing down the device to !IFF_RUNNING state when
    tg3_reset_task() fails.  tg3_reset_task() running from workqueue
    will now call tg3_close() when the reset fails.  We need to
    modify tg3_reset_task_cancel() slightly to avoid tg3_close()
    calling cancel_work_sync() to cancel tg3_reset_task().  Otherwise
    cancel_work_sync() will wait forever for tg3_reset_task() to
    finish.
    
    Reported-by: David Christensen <drc@linux.vnet.ibm.com>
    Reported-by: Baptiste Covolato <baptiste@arista.com>
    Fixes: db2199737990 ("tg3: Schedule at most one tg3_reset_task run")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6504c100804870911f074fd67f280756b6805958
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Sep 2 11:30:48 2020 -0400

    fix regression in "epoll: Keep a reference on files added to the check list"
    
    [ Upstream commit 77f4689de17c0887775bb77896f4cc11a39bf848 ]
    
    epoll_loop_check_proc() can run into a file already committed to destruction;
    we can't grab a reference on those and don't need to add them to the set for
    reverse path check anyway.
    
    Tested-by: Marc Zyngier <maz@kernel.org>
    Fixes: a9ed4a6560b8 ("epoll: Keep a reference on files added to the check list")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42178e15a1a3b6436d028f204d7434abadd644ce
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Wed Aug 26 01:08:33 2020 -0400

    bnxt_en: Check for zero dir entries in NVRAM.
    
    [ Upstream commit dbbfa96ad920c50d58bcaefa57f5f33ceef9d00e ]
    
    If firmware goes into unstable state, HWRM_NVM_GET_DIR_INFO firmware
    command may return zero dir entries. Return error in such case to
    avoid zero length dma buffer request.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 140502502552e60a8c9435c9fcfe1ae9b344bcc2
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Aug 25 08:46:17 2020 +0200

    dmaengine: pl330: Fix burst length if burst size is smaller than bus width
    
    [ Upstream commit 0661cef675d37e2c4b66a996389ebeae8568e49e ]
    
    Move the burst len fixup after setting the generic value for it. This
    finally enables the fixup introduced by commit 137bd11090d8 ("dmaengine:
    pl330: Align DMA memcpy operations to MFIFO width"), which otherwise was
    overwritten by the generic value.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 137bd11090d8 ("dmaengine: pl330: Align DMA memcpy operations to MFIFO width")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/20200825064617.16193-1-m.szyprowski@samsung.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2695e268d974769856b3eaa1d8344b8e86e843f
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Aug 20 21:05:50 2020 +0200

    netfilter: nf_tables: fix destination register zeroing
    
    [ Upstream commit 1e105e6afa6c3d32bfb52c00ffa393894a525c27 ]
    
    Following bug was reported via irc:
    nft list ruleset
       set knock_candidates_ipv4 {
          type ipv4_addr . inet_service
          size 65535
          elements = { 127.0.0.1 . 123,
                       127.0.0.1 . 123 }
          }
     ..
       udp dport 123 add @knock_candidates_ipv4 { ip saddr . 123 }
       udp dport 123 add @knock_candidates_ipv4 { ip saddr . udp dport }
    
    It should not have been possible to add a duplicate set entry.
    
    After some debugging it turned out that the problem is the immediate
    value (123) in the second-to-last rule.
    
    Concatenations use 32bit registers, i.e. the elements are 8 bytes each,
    not 6 and it turns out the kernel inserted
    
    inet firewall @knock_candidates_ipv4
            element 0100007f ffff7b00  : 0 [end]
            element 0100007f 00007b00  : 0 [end]
    
    Note the non-zero upper bits of the first element.  It turns out that
    nft_immediate doesn't zero the destination register, but this is needed
    when the length isn't a multiple of 4.
    
    Furthermore, the zeroing in nft_payload is broken.  We can't use
    [len / 4] = 0 -- if len is a multiple of 4, index is off by one.
    
    Skip zeroing in this case and use a conditional instead of (len -1) / 4.
    
    Fixes: 49499c3e6e18 ("netfilter: nf_tables: switch registers to 32 bit addressing")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d62ef1eadbaec8c60e3563a962429bb4c001cb0
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Thu Aug 20 14:12:55 2020 +0200

    netfilter: nf_tables: incorrect enum nft_list_attributes definition
    
    [ Upstream commit da9125df854ea48a6240c66e8a67be06e2c12c03 ]
    
    This should be NFTA_LIST_UNSPEC instead of NFTA_LIST_UNPEC, all other
    similar attribute definitions are postfixed with _UNSPEC.
    
    Fixes: 96518518cc41 ("netfilter: add nftables")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e515d7b260d2d115c03df02c51344818793f9720
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Mon Aug 17 19:57:26 2020 +0800

    dmaengine: at_hdmac: check return value of of_find_device_by_node() in at_dma_xlate()
    
    [ Upstream commit 0cef8e2c5a07d482ec907249dbd6687e8697677f ]
    
    The reurn value of of_find_device_by_node() is not checked, thus null
    pointer dereference will be triggered if of_find_device_by_node()
    failed.
    
    Fixes: bbe89c8e3d59 ("at_hdmac: move to generic DMA binding")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Link: https://lore.kernel.org/r/20200817115728.1706719-2-yukuai3@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1ff0effbf691a97bdcc45044f5ac33ee9d784a3
Author: Jussi Kivilinna <jussi.kivilinna@haltian.com>
Date:   Tue Aug 18 17:46:10 2020 +0300

    batman-adv: bla: use netif_rx_ni when not in interrupt context
    
    [ Upstream commit 279e89b2281af3b1a9f04906e157992c19c9f163 ]
    
    batadv_bla_send_claim() gets called from worker thread context through
    batadv_bla_periodic_work(), thus netif_rx_ni needs to be used in that
    case. This fixes "NOHZ: local_softirq_pending 08" log messages seen
    when batman-adv is enabled.
    
    Fixes: 23721387c409 ("batman-adv: add basic bridge loop avoidance code")
    Signed-off-by: Jussi Kivilinna <jussi.kivilinna@haltian.com>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8eecb67067fe50ef9640159f31ade9b478585a8
Author: Sven Eckelmann <sven@narfation.org>
Date:   Wed Jul 22 20:36:43 2020 +0200

    batman-adv: Avoid uninitialized chaddr when handling DHCP
    
    [ Upstream commit 303216e76dcab6049c9d42390b1032f0649a8206 ]
    
    The gateway client code can try to optimize the delivery of DHCP packets to
    avoid broadcasting them through the whole mesh. But also transmissions to
    the client can be optimized by looking up the destination via the chaddr of
    the DHCP packet.
    
    But the chaddr is currently only done when chaddr is fully inside the
    non-paged area of the skbuff. Otherwise it will not be initialized and the
    unoptimized path should have been taken.
    
    But the implementation didn't handle this correctly. It didn't retrieve the
    correct chaddr but still tried to perform the TT lookup with this
    uninitialized memory.
    
    Reported-by: syzbot+ab16e463b903f5a37036@syzkaller.appspotmail.com
    Fixes: 6c413b1c22a2 ("batman-adv: send every DHCP packet as bat-unicast")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Antonio Quartulli <a@unstable.cc>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a06affd50979751dadd6c0a6373b47c58b834889
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Thu Aug 6 13:49:28 2020 +0300

    dmaengine: of-dma: Fix of_dma_router_xlate's of_dma_xlate handling
    
    [ Upstream commit 5b2aa9f918f6837ae943557f8cec02c34fcf80e7 ]
    
    of_dma_xlate callback can return ERR_PTR as well NULL in case of failure.
    
    If error code is returned (not NULL) then the route should be released and
    the router should not be registered for the channel.
    
    Fixes: 56f13c0d9524c ("dmaengine: of_dma: Support for DMA routers")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lore.kernel.org/r/20200806104928.25975-1-peter.ujfalusi@ti.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c012951fa025d32abcc111cd420c3c42ee99cc75
Author: Simon Leiner <simon@leiner.me>
Date:   Tue Aug 25 11:31:52 2020 +0200

    xen/xenbus: Fix granting of vmalloc'd memory
    
    [ Upstream commit d742db70033c745e410523e00522ee0cfe2aa416 ]
    
    On some architectures (like ARM), virt_to_gfn cannot be used for
    vmalloc'd memory because of its reliance on virt_to_phys. This patch
    introduces a check for vmalloc'd addresses and obtains the PFN using
    vmalloc_to_pfn in that case.
    
    Signed-off-by: Simon Leiner <simon@leiner.me>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Link: https://lore.kernel.org/r/20200825093153.35500-1-simon@leiner.me
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1d027fc79035930ef838dc51b324a9a835809a3
Author: Sven Schnelle <svens@linux.ibm.com>
Date:   Thu Aug 20 09:48:23 2020 +0200

    s390: don't trace preemption in percpu macros
    
    [ Upstream commit 1196f12a2c960951d02262af25af0bb1775ebcc2 ]
    
    Since commit a21ee6055c30 ("lockdep: Change hardirq{s_enabled,_context}
    to per-cpu variables") the lockdep code itself uses percpu variables. This
    leads to recursions because the percpu macros are calling preempt_enable()
    which might call trace_preempt_on().
    
    Signed-off-by: Sven Schnelle <svens@linux.ibm.com>
    Reviewed-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c39edd53cddc3c91cbb6d086681a25f61840cecc
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Aug 20 11:00:26 2020 -0400

    ceph: don't allow setlease on cephfs
    
    [ Upstream commit 496ceaf12432b3d136dcdec48424312e71359ea7 ]
    
    Leases don't currently work correctly on kcephfs, as they are not broken
    when caps are revoked. They could eventually be implemented similarly to
    how we did them in libcephfs, but for now don't allow them.
    
    [ idryomov: no need for simple_nosetlease() in ceph_dir_fops and
      ceph_snapdir_fops ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed06601ce1088cf9fd2a6f86e7c3cf7e678ad6ea
Author: Tom Rix <trix@redhat.com>
Date:   Thu Aug 20 06:19:32 2020 -0700

    hwmon: (applesmc) check status earlier.
    
    [ Upstream commit cecf7560f00a8419396a2ed0f6e5d245ccb4feac ]
    
    clang static analysis reports this representative problem
    
    applesmc.c:758:10: warning: 1st function call argument is an
      uninitialized value
            left = be16_to_cpu(*(__be16 *)(buffer + 6)) >> 2;
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    buffer is filled by the earlier call
    
            ret = applesmc_read_key(LIGHT_SENSOR_LEFT_KEY, ...
    
    This problem is reported because a goto skips the status check.
    Other similar problems use data from applesmc_read_key before checking
    the status.  So move the checks to before the use.
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Henrik Rydberg <rydberg@bitmath.org>
    Link: https://lore.kernel.org/r/20200820131932.10590-1-trix@redhat.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b0d98d5a73d1d08c7029700111bfde3b94916a7
Author: Mel Gorman <mgorman@techsingularity.net>
Date:   Thu May 19 17:14:24 2016 -0700

    mm, page_alloc: remove unnecessary variable from free_pcppages_bulk
    
    commit e5b31ac2ca2cd0cf6bf2fcbb708ed01466c89aaa upstream.
    
    The original count is never reused so it can be removed.
    
    Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [dwagner: update context]
    Signed-off-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57fd071f3642f02a9e04f46861bdd58eec203124
Author: Kim Phillips <kim.phillips@amd.com>
Date:   Tue Sep 1 16:58:53 2020 -0500

    perf record/stat: Explicitly call out event modifiers in the documentation
    
    commit e48a73a312ebf19cc3d72aa74985db25c30757c1 upstream.
    
    Event modifiers are not mentioned in the perf record or perf stat
    manpages.  Add them to orient new users more effectively by pointing
    them to the perf list manpage for details.
    
    Fixes: 2055fdaf8703 ("perf list: Document precise event sampling for AMD IBS")
    Signed-off-by: Kim Phillips <kim.phillips@amd.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Paul Clarke <pc@us.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Tony Jones <tonyj@suse.de>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20200901215853.276234-1-kim.phillips@amd.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de801a7d3228aed8ea2bbfe36ccf3af7f9ef6f39
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Sep 1 10:52:33 2020 +0100

    HID: core: Sanitize event code and type when mapping input
    
    commit 35556bed836f8dc07ac55f69c8d17dce3e7f0e25 upstream.
    
    When calling into hid_map_usage(), the passed event code is
    blindly stored as is, even if it doesn't fit in the associated bitmap.
    
    This event code can come from a variety of sources, including devices
    masquerading as input devices, only a bit more "programmable".
    
    Instead of taking the event code at face value, check that it actually
    fits the corresponding bitmap, and if it doesn't:
    - spit out a warning so that we know which device is acting up
    - NULLify the bitmap pointer so that we catch unexpected uses
    
    Code paths that can make use of untrusted inputs can now check
    that the mapping was indeed correct and bail out if not.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12b27c445f2fd4a2e2c49136f26be26635cc1c73
Author: Marc Zyngier <maz@kernel.org>
Date:   Sat Aug 29 12:26:01 2020 +0100

    HID: core: Correctly handle ReportSize being zero
    
    commit bce1305c0ece3dc549663605e567655dd701752c upstream.
    
    It appears that a ReportSize value of zero is legal, even if a bit
    non-sensical. Most of the HID code seems to handle that gracefully,
    except when computing the total size in bytes. When fed as input to
    memset, this leads to some funky outcomes.
    
    Detect the corner case and correctly compute the size.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
