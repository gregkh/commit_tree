commit 904ad453baa0aae7189ebd07f0d43cb694fb2987
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jul 11 12:53:32 2021 +0200

    Linux 5.10.49
    
    Link: https://lore.kernel.org/r/20210709131537.035851348@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 064b57a8da995ee0b97b505ae8ca478eff87c331
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Jun 23 15:09:13 2021 +0200

    xen/events: reset active flag for lateeoi events later
    
    commit 3de218ff39b9e3f0d453fe3154f12a174de44b25 upstream.
    
    In order to avoid a race condition for user events when changing
    cpu affinity reset the active flag only when EOI-ing the event.
    
    This is working fine as all user events are lateeoi events. Note that
    lateeoi_ack_mask_dynirq() is not modified as there is no explicit call
    to xen_irq_lateeoi() expected later.
    
    Cc: stable@vger.kernel.org
    Reported-by: Julien Grall <julien@xen.org>
    Fixes: b6622798bc50b62 ("xen/events: avoid handling the same event on two cpus at the same time")
    Tested-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrvsky@oracle.com>
    Link: https://lore.kernel.org/r/20210623130913.9405-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a245f6842d212080a1dd95a6b99d7d4b0c005740
Author: Sid Manning <sidneym@codeaurora.org>
Date:   Mon Apr 26 13:51:53 2021 -0500

    Hexagon: change jumps to must-extend in futex_atomic_*
    
    commit 6fff7410f6befe5744d54f0418d65a6322998c09 upstream.
    
    Cross-section jumps from .fixup section must be extended.
    
    Signed-off-by: Sid Manning <sidneym@codeaurora.org>
    Signed-off-by: Brian Cain <bcain@codeaurora.org>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7f51048c5a85501e41af8538c24af845f1679f6
Author: Sid Manning <sidneym@codeaurora.org>
Date:   Tue Oct 13 16:17:50 2020 -0500

    Hexagon: add target builtins to kernel
    
    commit f1f99adf05f2138ff2646d756d4674e302e8d02d upstream.
    
    Add the compiler-rt builtins like memcpy to the hexagon kernel.
    
    Signed-off-by: Sid Manning <sidneym@codeaurora.org>
    Add SYM_FUNC_START/END, ksyms exports
    Signed-off-by: Brian Cain <bcain@codeaurora.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 243f325ecc902c9936d1edb838454f4a4dd75034
Author: Sid Manning <sidneym@codeaurora.org>
Date:   Fri Apr 23 15:06:58 2021 -0500

    Hexagon: fix build errors
    
    commit 788dcee0306e1bdbae1a76d1b3478bb899c5838e upstream.
    
    Fix type-o in ptrace.c.
    Add missing include: asm/hexagon_vm.h
    Remove superfluous cast.
    Replace 'p3_0' with 'preds'.
    
    Signed-off-by: Sid Manning <sidneym@codeaurora.org>
    Add -mlong-calls to build flags.
    Signed-off-by: Brian Cain <bcain@codeaurora.org>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8148665cb7fece4acb899f2e2dbbff7ed0720e1d
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Mar 8 11:31:28 2021 +0100

    media: uvcvideo: Support devices that report an OT as an entity source
    
    commit 4ca052b4ea621d0002a5e5feace51f60ad5e6b23 upstream.
    
    Some devices reference an output terminal as the source of extension
    units. This is incorrect, as output terminals only have an input pin,
    and thus can't be connected to any entity in the forward direction. The
    resulting topology would cause issues when registering the media
    controller graph. To avoid this problem, connect the extension unit to
    the source of the output terminal instead.
    
    While at it, and while no device has been reported to be affected by
    this issue, also handle forward scans where two output terminals would
    be connected together, and skip the terminals found through such an
    invalid connection.
    
    Reported-and-tested-by: John Nealy <jnealy3@yahoo.com>
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5737410d2ddbb63cf56e8a1b8028a8b19ec949c
Author: Fabiano Rosas <farosas@linux.ibm.com>
Date:   Thu Feb 4 17:05:17 2021 -0300

    KVM: PPC: Book3S HV: Save and restore FSCR in the P9 path
    
    commit 25edcc50d76c834479d11fcc7de46f3da4d95121 upstream.
    
    The Facility Status and Control Register is a privileged SPR that
    defines the availability of some features in problem state. Since it
    can be written by the guest, we must restore it to the previous host
    value after guest exit.
    
    This restoration is currently done by taking the value from
    current->thread.fscr, which in the P9 path is not enough anymore
    because the guest could context switch the QEMU thread, causing the
    guest-current value to be saved into the thread struct.
    
    The above situation manifested when running a QEMU linked against a
    libc with System Call Vectored support, which causes scv
    instructions to be run by QEMU early during the guest boot (during
    SLOF), at which point the FSCR is 0 due to guest entry. After a few
    scv calls (1 to a couple hundred), the context switching happens and
    the QEMU thread runs with the guest value, resulting in a Facility
    Unavailable interrupt.
    
    This patch saves and restores the host value of FSCR in the inner
    guest entry loop in a way independent of current->thread.fscr. The old
    way of doing it is still kept in place because it works for the old
    entry path.
    
    Signed-off-by: Fabiano Rosas <farosas@linux.ibm.com>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Cc: Georgy Yakovlev <gyakovlev@gentoo.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
