commit 1bd30958ec55d80ca72d2ca4e7e5c3d9fbf3173e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jun 17 06:40:54 2017 +0200

    Linux 4.4.73

commit 39e84dcd7876bdc81f555bae2be6209274700782
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Nov 25 14:03:55 2016 +0300

    sparc64: make string buffers large enough
    
    commit b5c3206190f1fddd100b3060eb15f0d775ffeab8 upstream.
    
    My static checker complains that if "lvl" is ULONG_MAX (this is 64 bit)
    then some of the strings will overflow.  I don't know if that's possible
    but it seems simple enough to make the buffers slightly larger.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Waldemar Brodkorb <wbx@openadk.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d80aa84235ff7b2b13cd204e23a5823770512690
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Mon May 15 14:11:03 2017 +0200

    s390/kvm: do not rely on the ILC on kvm host protection fauls
    
    commit c0e7bb38c07cbd8269549ee0a0566021a3c729de upstream.
    
    For most cases a protection exception in the host (e.g. copy
    on write or dirty tracking) on the sie instruction will indicate
    an instruction length of 4. Turns out that there are some corner
    cases (e.g. runtime instrumentation) where this is not necessarily
    true and the ILC is unpredictable.
    
    Let's replace our 4 byte rewind_pad with 3 byte nops to prepare for
    all possible ILCs.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afb415f72daa0d9d8169a20f3ea3efbf05f630ca
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Jun 5 02:43:51 2017 -0700

    xtensa: don't use linux IRQ #0
    
    commit e5c86679d5e864947a52fb31e45a425dea3e7fa9 upstream.
    
    Linux IRQ #0 is reserved for error reporting and may not be used.
    Increase NR_IRQS for one additional slot and increase
    irq_domain_add_legacy parameter first_irq value to 1, so that linux
    IRQ #0 is not associated with hardware IRQ #0 in legacy IRQ domains.
    Introduce macro XTENSA_PIC_LINUX_IRQ for static translation of xtensa
    PIC hardware IRQ # to linux IRQ #. Use this macro in XTFPGA platform
    data definitions.
    
    This fixes inability to use hardware IRQ #0 in configurations that don't
    use device tree and allows for non-identity mapping between linux IRQ #
    and hardware IRQ #.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b1aa267981223474cb5699b1c96eb7fa8eb08a8
Author: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
Date:   Tue Jan 24 13:00:47 2017 +0100

    tipc: ignore requests when the connection state is not CONNECTED
    
    
    [ Upstream commit 4c887aa65d38633885010277f3482400681be719 ]
    
    In tipc_conn_sendmsg(), we first queue the request to the outqueue
    followed by the connection state check. If the connection is not
    connected, we should not queue this message.
    
    In this commit, we reject the messages if the connection state is
    not CF_CONNECTED.
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Tested-by: John Thompson <thompa.atl@gmail.com>
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77d2b8dc959745f37605706c64c55bd80cfae660
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jan 24 15:18:07 2017 -0800

    proc: add a schedule point in proc_pid_readdir()
    
    
    [ Upstream commit 3ba4bceef23206349d4130ddf140819b365de7c8 ]
    
    We have seen proc_pid_readdir() invocations holding cpu for more than 50
    ms.  Add a cond_resched() to be gentle with other tasks.
    
    [akpm@linux-foundation.org: coding style fix]
    Link: http://lkml.kernel.org/r/1484238380.15816.42.camel@edumazet-glaptop3.roam.corp.google.com
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 202776694c2ae6b76e4e1d7b7f01d604f8d16089
Author: Coly Li <colyli@suse.de>
Date:   Tue Jan 24 15:18:46 2017 -0800

    romfs: use different way to generate fsid for BLOCK or MTD
    
    
    [ Upstream commit f598f82e204ec0b17797caaf1b0311c52d43fb9a ]
    
    Commit 8a59f5d25265 ("fs/romfs: return f_fsid for statfs(2)") generates
    a 64bit id from sb->s_bdev->bd_dev.  This is only correct when romfs is
    defined with CONFIG_ROMFS_ON_BLOCK.  If romfs is only defined with
    CONFIG_ROMFS_ON_MTD, sb->s_bdev is NULL, referencing sb->s_bdev->bd_dev
    will triger an oops.
    
    Richard Weinberger points out that when CONFIG_ROMFS_BACKED_BY_BOTH=y,
    both CONFIG_ROMFS_ON_BLOCK and CONFIG_ROMFS_ON_MTD are defined.
    Therefore when calling huge_encode_dev() to generate a 64bit id, I use
    the follow order to choose parameter,
    
    - CONFIG_ROMFS_ON_BLOCK defined
      use sb->s_bdev->bd_dev
    - CONFIG_ROMFS_ON_BLOCK undefined and CONFIG_ROMFS_ON_MTD defined
      use sb->s_dev when,
    - both CONFIG_ROMFS_ON_BLOCK and CONFIG_ROMFS_ON_MTD undefined
      leave id as 0
    
    When CONFIG_ROMFS_ON_MTD is defined and sb->s_mtd is not NULL, sb->s_dev
    is set to a device ID generated by MTD_BLOCK_MAJOR and mtd index,
    otherwise sb->s_dev is 0.
    
    This is a try-best effort to generate a uniq file system ID, if all the
    above conditions are not meet, f_fsid of this romfs instance will be 0.
    Generally only one romfs can be built on single MTD block device, this
    method is enough to identify multiple romfs instances in a computer.
    
    Link: http://lkml.kernel.org/r/1482928596-115155-1-git-send-email-colyli@suse.de
    Signed-off-by: Coly Li <colyli@suse.de>
    Reported-by: Nong Li <nongli1031@gmail.com>
    Tested-by: Nong Li <nongli1031@gmail.com>
    Cc: Richard Weinberger <richard.weinberger@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50ef0e2e9abe8dcaf9cbb54babec9134f4f0ca5f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jan 24 14:01:53 2017 +0800

    sctp: sctp_addr_id2transport should verify the addr before looking up assoc
    
    
    [ Upstream commit 6f29a130613191d3c6335169febe002cba00edf5 ]
    
    sctp_addr_id2transport is a function for sockopt to look up assoc by
    address. As the address is from userspace, it can be a v4-mapped v6
    address. But in sctp protocol stack, it always handles a v4-mapped
    v6 address as a v4 address. So it's necessary to convert it to a v4
    address before looking up assoc by address.
    
    This patch is to fix it by calling sctp_verify_addr in which it can do
    this conversion before calling sctp_endpoint_lookup_assoc, just like
    what sctp_sendmsg and __sctp_connect do for the address from users.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70752628521df94b45ed24287fdf216f9b587681
Author: hayeswang <hayeswang@realtek.com>
Date:   Thu Jan 26 09:38:32 2017 +0800

    r8152: avoid start_xmit to schedule napi when napi is disabled
    
    
    [ Upstream commit de9bf29dd6e4a8a874cb92f8901aed50a9d0b1d3 ]
    
    Stop the tx when the napi is disabled to prevent napi_schedule() is
    called.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5270bf63719c2c5e3a3d715ac78d394baea899d9
Author: hayeswang <hayeswang@realtek.com>
Date:   Fri Jan 20 14:33:55 2017 +0800

    r8152: fix rtl8152_post_reset function
    
    
    [ Upstream commit 2c561b2b728ca4013e76d6439bde2c137503745e ]
    
    The rtl8152_post_reset() should sumbit rx urb and interrupt transfer,
    otherwise the rx wouldn't work and the linking change couldn't be
    detected.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4877e5564a5306a38657fc25db721a6e558ce98
Author: hayeswang <hayeswang@realtek.com>
Date:   Thu Jan 26 09:38:33 2017 +0800

    r8152: re-schedule napi for tx
    
    
    [ Upstream commit 248b213ad908b88db15941202ef7cb7eb137c1a0 ]
    
    Re-schedule napi after napi_complete() for tx, if it is necessay.
    
    In r8152_poll(), if the tx is completed after tx_bottom() and before
    napi_complete(), the scheduling of napi would be lost. Then, no
    one handles the next tx until the next napi_schedule() is called.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10bfb4c76c941fface83bd4695f19ce84510dbe0
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Jan 26 15:14:52 2017 -0500

    nfs: Fix "Don't increment lock sequence ID after NFS4ERR_MOVED"
    
    
    [ Upstream commit 406dab8450ec76eca88a1af2fc15d18a2b36ca49 ]
    
    Lock sequence IDs are bumped in decode_lock by calling
    nfs_increment_seqid(). nfs_increment_sequid() does not use the
    seqid_mutating_err() function fixed in commit 059aa7348241 ("Don't
    increment lock sequence ID after NFS4ERR_MOVED").
    
    Fixes: 059aa7348241 ("Don't increment lock sequence ID after ...")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Xuan Qi <xuan.qi@oracle.com>
    Cc: stable@vger.kernel.org # v3.7+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82ce18b09bf1f788b1581da69f66c88f9d150aad
Author: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Date:   Thu Jan 26 14:29:27 2017 +0100

    ravb: unmap descriptors when freeing rings
    
    
    [ Upstream commit a47b70ea86bdeb3091341f5ae3ef580f1a1ad822 ]
    
    "swiotlb buffer is full" errors occur after repeated initialisation of a
    device - f.e. suspend/resume or ip link set up/down. This is because memory
    mapped using dma_map_single() in ravb_ring_format() and ravb_start_xmit()
    is not released.  Resolve this problem by unmapping descriptors when
    freeing rings.
    
    Fixes: c156633f1353 ("Renesas Ethernet AVB driver proper")
    Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
    [simon: reworked]
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3987a40362b7a20c0eed3967130b51f7f921ace2
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Thu Jan 26 09:45:40 2017 +0800

    drm/ast: Fixed system hanged if disable P2A
    
    
    [ Upstream commit 6c971c09f38704513c426ba6515f22fb3d6c87d5 ]
    
    The original ast driver will access some BMC configuration through P2A bridge
    that can be disabled since AST2300 and after.
    It will cause system hanged if P2A bridge is disabled.
    Here is the update to fix it.
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff20cc9a608609b107b5092f9a2852f2dfe3f50d
Author: Lyude Paul <lyude@redhat.com>
Date:   Wed Jan 11 21:25:23 2017 -0500

    drm/nouveau: Don't enabling polling twice on runtime resume
    
    
    [ Upstream commit cae9ff036eea577856d5b12860b4c79c5e71db4a ]
    
    As it turns out, on cards that actually have CRTCs on them we're already
    calling drm_kms_helper_poll_enable(drm_dev) from
    nouveau_display_resume() before we call it in
    nouveau_pmops_runtime_resume(). This leads us to accidentally trying to
    enable polling twice, which results in a potential deadlock between the
    RPM locks and drm_dev->mode_config.mutex if we end up trying to enable
    polling the second time while output_poll_execute is running and holding
    the mode_config lock. As such, make sure we only enable polling in
    nouveau_pmops_runtime_resume() if we need to.
    
    This fixes hangs observed on the ThinkPad W541
    
    Signed-off-by: Lyude <lyude@redhat.com>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Kilian Singer <kilian.singer@quantumtechnology.info>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: David Airlie <airlied@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 711f4797a339e27906e6f69b16a09543374551e8
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jan 3 22:55:50 2017 +0100

    parisc, parport_gsc: Fixes for printk continuation lines
    
    
    [ Upstream commit 83b5d1e3d3013dbf90645a5d07179d018c8243fa ]
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9343894a8b3d310ea580948835cc9e7ece537155
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Jan 28 01:07:30 2017 +0300

    net: adaptec: starfire: add checks for dma mapping errors
    
    
    [ Upstream commit d1156b489fa734d1af763d6a07b1637c01bb0aed ]
    
    init_ring(), refill_rx_ring() and start_tx() don't check
    if mapping dma memory succeed.
    The patch adds the checks and failure handling.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3926d04ddec241a503ad121e48b943ac773255ff
Author: Jisheng Zhang <jszhang@marvell.com>
Date:   Mon Jan 23 15:15:32 2017 +0800

    pinctrl: berlin-bg4ct: fix the value for "sd1a" of pin SCRD0_CRD_PRES
    
    
    [ Upstream commit e82d02580af45663fad6d3596e4344c606e81e10 ]
    
    This should be a typo.
    
    Signed-off-by: Jisheng Zhang <jszhang@marvell.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e3ea31dfb01574ac69461fa4dded97eb9238c93
Author: Arseny Solokha <asolokha@kb.kras.ru>
Date:   Sun Jan 29 19:52:20 2017 +0700

    gianfar: synchronize DMA API usage by free_skb_rx_queue w/ gfar_new_page
    
    
    [ Upstream commit 4af0e5bb95ee3ba5ea4bd7dbb94e1648a5279cc9 ]
    
    In spite of switching to paged allocation of Rx buffers, the driver still
    called dma_unmap_single() in the Rx queues tear-down path.
    
    The DMA region unmapping code in free_skb_rx_queue() basically predates
    the introduction of paged allocation to the driver. While being refactored,
    it apparently hasn't reflected the change in the DMA API usage by its
    counterpart gfar_new_page().
    
    As a result, setting an interface to the DOWN state now yields the following:
    
      # ip link set eth2 down
      fsl-gianfar ffe24000.ethernet: DMA-API: device driver frees DMA memory with wrong function [device address=0x000000001ecd0000] [size=40]
      ------------[ cut here ]------------
      WARNING: CPU: 1 PID: 189 at lib/dma-debug.c:1123 check_unmap+0x8e0/0xa28
      CPU: 1 PID: 189 Comm: ip Tainted: G           O    4.9.5 #1
      task: dee73400 task.stack: dede2000
      NIP: c02101e8 LR: c02101e8 CTR: c0260d74
      REGS: dede3bb0 TRAP: 0700   Tainted: G           O     (4.9.5)
      MSR: 00021000 <CE,ME>  CR: 28002222  XER: 00000000
    
      GPR00: c02101e8 dede3c60 dee73400 000000b6 dfbd033c dfbd36c4 1f622000 dede2000
      GPR08: 00000007 c05b1634 1f622000 00000000 22002484 100a9904 00000000 00000000
      GPR16: 00000000 db4c849c 00000002 db4c8480 00000001 df142240 db4c84bc 00000000
      GPR24: c0706148 c0700000 00029000 c07552e8 c07323b4 dede3cb8 c07605e0 db535540
      NIP [c02101e8] check_unmap+0x8e0/0xa28
      LR [c02101e8] check_unmap+0x8e0/0xa28
      Call Trace:
      [dede3c60] [c02101e8] check_unmap+0x8e0/0xa28 (unreliable)
      [dede3cb0] [c02103b8] debug_dma_unmap_page+0x88/0x9c
      [dede3d30] [c02dffbc] free_skb_resources+0x2c4/0x404
      [dede3d80] [c02e39b4] gfar_close+0x24/0xc8
      [dede3da0] [c0361550] __dev_close_many+0xa0/0xf8
      [dede3dd0] [c03616f0] __dev_close+0x2c/0x4c
      [dede3df0] [c036b1b8] __dev_change_flags+0xa0/0x174
      [dede3e10] [c036b2ac] dev_change_flags+0x20/0x60
      [dede3e30] [c03e130c] devinet_ioctl+0x540/0x824
      [dede3e90] [c0347dcc] sock_ioctl+0x134/0x298
      [dede3eb0] [c0111814] do_vfs_ioctl+0xac/0x854
      [dede3f20] [c0111ffc] SyS_ioctl+0x40/0x74
      [dede3f40] [c000f290] ret_from_syscall+0x0/0x3c
      --- interrupt: c01 at 0xff45da0
          LR = 0xff45cd0
      Instruction dump:
      811d001c 7c66482e 813d0020 9061000c 807f000c 5463103a 7cc6182e 3c60c052
      386309ac 90c10008 4cc63182 4826b845 <0fe00000> 4bfffa60 3c80c052 388402c4
      ---[ end trace 695ae6d7ac1d0c47 ]---
      Mapped at:
       [<c02e22a8>] gfar_alloc_rx_buffs+0x178/0x248
       [<c02e3ef0>] startup_gfar+0x368/0x570
       [<c036aeb4>] __dev_open+0xdc/0x150
       [<c036b1b8>] __dev_change_flags+0xa0/0x174
       [<c036b2ac>] dev_change_flags+0x20/0x60
    
    Even though the issue was discovered in 4.9 kernel, the code in question
    is identical in the current net and net-next trees.
    
    Fixes: 75354148ce69 ("gianfar: Add paged allocation and Rx S/G")
    Signed-off-by: Arseny Solokha <asolokha@kb.kras.ru>
    Acked-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b9f84ef46d85484eb63d370f674115d0843334e
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Mon Jan 30 15:11:45 2017 +0200

    net/mlx4_core: Avoid command timeouts during VF driver device shutdown
    
    
    [ Upstream commit d585df1c5ccf995fcee910705ad7a9cdd11d4152 ]
    
    Some Hypervisors detach VFs from VMs by instantly causing an FLR event
    to be generated for a VF.
    
    In the mlx4 case, this will cause that VF's comm channel to be disabled
    before the VM has an opportunity to invoke the VF device's "shutdown"
    method.
    
    The result is that the VF driver on the VM will experience a command
    timeout during the shutdown process when the Hypervisor does not deliver
    a command-completion event to the VM.
    
    To avoid FW command timeouts on the VM when the driver's shutdown method
    is invoked, we detect the absence of the VF's comm channel at the very
    start of the shutdown process. If the comm-channel has already been
    disabled, we cause all FW commands during the device shutdown process to
    immediately return success (and thus avoid all command timeouts).
    
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f0a81edb918608f26e7d1efb490674341586a10
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 23 21:54:09 2017 -0400

    drm/nouveau/fence/g84-: protect against concurrent access to semaphore buffers
    
    
    [ Upstream commit 96692b097ba76d0c637ae8af47b29c73da33c9d0 ]
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c7a11e6f994124432023b5a989ac08bcf40f516
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 23 21:54:08 2017 -0400

    drm/nouveau: prevent userspace from deleting client object
    
    
    [ Upstream commit c966b6279f610a24ac1d42dcbe30e10fa61220b2 ]
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1507ea6df42e75a1b846a0bda522cda4fd28a89c
Author: Dimitris Michailidis <dmichail@google.com>
Date:   Tue May 23 21:54:07 2017 -0400

    ipv6: fix flow labels when the traffic class is non-0
    
    
    [ Upstream commit 90427ef5d2a4b9a24079889bf16afdcdaebc4240 ]
    
    ip6_make_flowlabel() determines the flow label for IPv6 packets. It's
    supposed to be passed a flow label, which it returns as is if non-0 and
    in some other cases, otherwise it calculates a new value.
    
    The problem is callers often pass a flowi6.flowlabel, which may also
    contain traffic class bits. If the traffic class is non-0
    ip6_make_flowlabel() mistakes the non-0 it gets as a flow label and
    returns the whole thing. Thus it can return a 'flow label' longer than
    20b and the low 20b of that is typically 0 resulting in packets with 0
    label. Moreover, different packets of a flow may be labeled differently.
    For a TCP flow with ECN non-payload and payload packets get different
    labels as exemplified by this pair of consecutive packets:
    
    (pure ACK)
    Internet Protocol Version 6, Src: 2002:af5:11a3::, Dst: 2002:af5:11a2::
        0110 .... = Version: 6
        .... 0000 0000 .... .... .... .... .... = Traffic Class: 0x00 (DSCP: CS0, ECN: Not-ECT)
            .... 0000 00.. .... .... .... .... .... = Differentiated Services Codepoint: Default (0)
            .... .... ..00 .... .... .... .... .... = Explicit Congestion Notification: Not ECN-Capable Transport (0)
        .... .... .... 0001 1100 1110 0100 1001 = Flow Label: 0x1ce49
        Payload Length: 32
        Next Header: TCP (6)
    
    (payload)
    Internet Protocol Version 6, Src: 2002:af5:11a3::, Dst: 2002:af5:11a2::
        0110 .... = Version: 6
        .... 0000 0010 .... .... .... .... .... = Traffic Class: 0x02 (DSCP: CS0, ECN: ECT(0))
            .... 0000 00.. .... .... .... .... .... = Differentiated Services Codepoint: Default (0)
            .... .... ..10 .... .... .... .... .... = Explicit Congestion Notification: ECN-Capable Transport codepoint '10' (2)
        .... .... .... 0000 0000 0000 0000 0000 = Flow Label: 0x00000
        Payload Length: 688
        Next Header: TCP (6)
    
    This patch allows ip6_make_flowlabel() to be passed more than just a
    flow label and has it extract the part it really wants. This was simpler
    than modifying the callers. With this patch packets like the above become
    
    Internet Protocol Version 6, Src: 2002:af5:11a3::, Dst: 2002:af5:11a2::
        0110 .... = Version: 6
        .... 0000 0000 .... .... .... .... .... = Traffic Class: 0x00 (DSCP: CS0, ECN: Not-ECT)
            .... 0000 00.. .... .... .... .... .... = Differentiated Services Codepoint: Default (0)
            .... .... ..00 .... .... .... .... .... = Explicit Congestion Notification: Not ECN-Capable Transport (0)
        .... .... .... 1010 1111 1010 0101 1110 = Flow Label: 0xafa5e
        Payload Length: 32
        Next Header: TCP (6)
    
    Internet Protocol Version 6, Src: 2002:af5:11a3::, Dst: 2002:af5:11a2::
        0110 .... = Version: 6
        .... 0000 0010 .... .... .... .... .... = Traffic Class: 0x02 (DSCP: CS0, ECN: ECT(0))
            .... 0000 00.. .... .... .... .... .... = Differentiated Services Codepoint: Default (0)
            .... .... ..10 .... .... .... .... .... = Explicit Congestion Notification: ECN-Capable Transport codepoint '10' (2)
        .... .... .... 1010 1111 1010 0101 1110 = Flow Label: 0xafa5e
        Payload Length: 688
        Next Header: TCP (6)
    
    Signed-off-by: Dimitris Michailidis <dmichail@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95a4659ee8d00b68846071f9fdf312b0b788d541
Author: David Howells <dhowells@redhat.com>
Date:   Tue May 23 21:54:06 2017 -0400

    FS-Cache: Initialise stores_lock in netfs cookie
    
    
    [ Upstream commit 62deb8187d116581c88c69a2dd9b5c16588545d4 ]
    
    Initialise the stores_lock in fscache netfs cookies.  Technically, it
    shouldn't be necessary, since the netfs cookie is an index and stores no
    data, but initialising it anyway adds insignificant overhead.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Acked-by: Steve Dickson <steved@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38481d7d43dd633528841c7427d5c28d2b48bed5
Author: David Howells <dhowells@redhat.com>
Date:   Tue May 23 21:54:05 2017 -0400

    fscache: Clear outstanding writes when disabling a cookie
    
    
    [ Upstream commit 6bdded59c8933940ac7e5b416448276ac89d1144 ]
    
    fscache_disable_cookie() needs to clear the outstanding writes on the
    cookie it's disabling because they cannot be completed after.
    
    Without this, fscache_nfs_open_file() gets stuck because it disables the
    cookie when the file is opened for writing but can't uncache the pages till
    afterwards - otherwise there's a race between the open routine and anyone
    who already has it open R/O and is still reading from it.
    
    Looking in /proc/pid/stack of the offending process shows:
    
    [<ffffffffa0142883>] __fscache_wait_on_page_write+0x82/0x9b [fscache]
    [<ffffffffa014336e>] __fscache_uncache_all_inode_pages+0x91/0xe1 [fscache]
    [<ffffffffa01740fa>] nfs_fscache_open_file+0x59/0x9e [nfs]
    [<ffffffffa01ccf41>] nfs4_file_open+0x17f/0x1b8 [nfsv4]
    [<ffffffff8117350e>] do_dentry_open+0x16d/0x2b7
    [<ffffffff811743ac>] vfs_open+0x5c/0x65
    [<ffffffff81184185>] path_openat+0x785/0x8fb
    [<ffffffff81184343>] do_filp_open+0x48/0x9e
    [<ffffffff81174710>] do_sys_open+0x13b/0x1cb
    [<ffffffff811747b9>] SyS_open+0x19/0x1b
    [<ffffffff81001c44>] do_syscall_64+0x80/0x17a
    [<ffffffff8165c2da>] return_from_SYSCALL_64+0x0/0x7a
    [<ffffffffffffffff>] 0xffffffffffffffff
    
    Reported-by: Jianhong Yin <jiyin@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Jeff Layton <jlayton@redhat.com>
    Acked-by: Steve Dickson <steved@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b421d230dfa17ab13fd4d9a9ac3e7f899bb3b913
Author: David Howells <dhowells@redhat.com>
Date:   Tue May 23 21:54:04 2017 -0400

    fscache: Fix dead object requeue
    
    
    [ Upstream commit e26bfebdfc0d212d366de9990a096665d5c0209a ]
    
    Under some circumstances, an fscache object can become queued such that it
    fscache_object_work_func() can be called once the object is in the
    OBJECT_DEAD state.  This results in the kernel oopsing when it tries to
    invoke the handler for the state (which is hard coded to 0x2).
    
    The way this comes about is something like the following:
    
     (1) The object dispatcher is processing a work state for an object.  This
         is done in workqueue context.
    
     (2) An out-of-band event comes in that isn't masked, causing the object to
         be queued, say EV_KILL.
    
     (3) The object dispatcher finishes processing the current work state on
         that object and then sees there's another event to process, so,
         without returning to the workqueue core, it processes that event too.
         It then follows the chain of events that initiates until we reach
         OBJECT_DEAD without going through a wait state (such as
         WAIT_FOR_CLEARANCE).
    
         At this point, object->events may be 0, object->event_mask will be 0
         and oob_event_mask will be 0.
    
     (4) The object dispatcher returns to the workqueue processor, and in due
         course, this sees that the object's work item is still queued and
         invokes it again.
    
     (5) The current state is a work state (OBJECT_DEAD), so the dispatcher
         jumps to it - resulting in an OOPS.
    
    When I'm seeing this, the work state in (1) appears to have been either
    LOOK_UP_OBJECT or CREATE_OBJECT (object->oob_table is
    fscache_osm_lookup_oob).
    
    The window for (2) is very small:
    
     (A) object->event_mask is cleared whilst the event dispatch process is
         underway - though there's no memory barrier to force this to the top
         of the function.
    
         The window, therefore is from the time the object was selected by the
         workqueue processor and made requeueable to the time the mask was
         cleared.
    
     (B) fscache_raise_event() will only queue the object if it manages to set
         the event bit and the corresponding event_mask bit was set.
    
         The enqueuement is then deferred slightly whilst we get a ref on the
         object and get the per-CPU variable for workqueue congestion.  This
         slight deferral slightly increases the probability by allowing extra
         time for the workqueue to make the item requeueable.
    
    Handle this by giving the dead state a processor function and checking the
    for the dead state address rather than seeing if the processor function is
    address 0x2.  The dead state processor function can then set a flag to
    indicate that it's occurred and give a warning if it occurs more than once
    per object.
    
    If this race occurs, an oops similar to the following is seen (note the RIP
    value):
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000002
    IP: [<0000000000000002>] 0x1
    PGD 0
    Oops: 0010 [#1] SMP
    Modules linked in: ...
    CPU: 17 PID: 16077 Comm: kworker/u48:9 Not tainted 3.10.0-327.18.2.el7.x86_64 #1
    Hardware name: HP ProLiant DL380 Gen9/ProLiant DL380 Gen9, BIOS P89 12/27/2015
    Workqueue: fscache_object fscache_object_work_func [fscache]
    task: ffff880302b63980 ti: ffff880717544000 task.ti: ffff880717544000
    RIP: 0010:[<0000000000000002>]  [<0000000000000002>] 0x1
    RSP: 0018:ffff880717547df8  EFLAGS: 00010202
    RAX: ffffffffa0368640 RBX: ffff880edf7a4480 RCX: dead000000200200
    RDX: 0000000000000002 RSI: 00000000ffffffff RDI: ffff880edf7a4480
    RBP: ffff880717547e18 R08: 0000000000000000 R09: dfc40a25cb3a4510
    R10: dfc40a25cb3a4510 R11: 0000000000000400 R12: 0000000000000000
    R13: ffff880edf7a4510 R14: ffff8817f6153400 R15: 0000000000000600
    FS:  0000000000000000(0000) GS:ffff88181f420000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000002 CR3: 000000000194a000 CR4: 00000000001407e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Stack:
     ffffffffa0363695 ffff880edf7a4510 ffff88093f16f900 ffff8817faa4ec00
     ffff880717547e60 ffffffff8109d5db 00000000faa4ec18 0000000000000000
     ffff8817faa4ec18 ffff88093f16f930 ffff880302b63980 ffff88093f16f900
    Call Trace:
     [<ffffffffa0363695>] ? fscache_object_work_func+0xa5/0x200 [fscache]
     [<ffffffff8109d5db>] process_one_work+0x17b/0x470
     [<ffffffff8109e4ac>] worker_thread+0x21c/0x400
     [<ffffffff8109e290>] ? rescuer_thread+0x400/0x400
     [<ffffffff810a5acf>] kthread+0xcf/0xe0
     [<ffffffff810a5a00>] ? kthread_create_on_node+0x140/0x140
     [<ffffffff816460d8>] ret_from_fork+0x58/0x90
     [<ffffffff810a5a00>] ? kthread_create_on_node+0x140/0x140
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Acked-by: Jeremy McNicoll <jeremymc@redhat.com>
    Tested-by: Frank Sorenson <sorenson@redhat.com>
    Tested-by: Benjamin Coddington <bcodding@redhat.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6b15f0fc7a6f1fed9c0a1bca108e8772f7e6ad9
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Tue May 23 21:53:59 2017 -0400

    ethtool: do not vzalloc(0) on registers dump
    
    
    [ Upstream commit 3808d34838184fd29088d6b3a364ba2f1c018fb6 ]
    
    If ->get_regs_len() callback return 0, we allocate 0 bytes of memory,
    what print ugly warning in dmesg, which can be found further below.
    
    This happen on mac80211 devices where ieee80211_get_regs_len() just
    return 0 and driver only fills ethtool_regs structure and actually
    do not provide any dump. However I assume this can happen on other
    drivers i.e. when for some devices driver provide regs dump and for
    others do not. Hence preventing to to print warning in ethtool code
    seems to be reasonable.
    
    ethtool: vmalloc: allocation failure: 0 bytes, mode:0x24080c2(GFP_KERNEL|__GFP_HIGHMEM|__GFP_ZERO)
    <snip>
    Call Trace:
    [<ffffffff813bde47>] dump_stack+0x63/0x8c
    [<ffffffff811b0a1f>] warn_alloc+0x13f/0x170
    [<ffffffff811f0476>] __vmalloc_node_range+0x1e6/0x2c0
    [<ffffffff811f0874>] vzalloc+0x54/0x60
    [<ffffffff8169986c>] dev_ethtool+0xb4c/0x1b30
    [<ffffffff816adbb1>] dev_ioctl+0x181/0x520
    [<ffffffff816714d2>] sock_do_ioctl+0x42/0x50
    <snip>
    Mem-Info:
    active_anon:435809 inactive_anon:173951 isolated_anon:0
     active_file:835822 inactive_file:196932 isolated_file:0
     unevictable:0 dirty:8 writeback:0 unstable:0
     slab_reclaimable:157732 slab_unreclaimable:10022
     mapped:83042 shmem:306356 pagetables:9507 bounce:0
     free:130041 free_pcp:1080 free_cma:0
    Node 0 active_anon:1743236kB inactive_anon:695804kB active_file:3343288kB inactive_file:787728kB unevictable:0kB isolated(anon):0kB isolated(file):0kB mapped:332168kB dirty:32kB writeback:0kB shmem:0kB shmem_thp: 0kB shmem_pmdmapped: 0kB anon_thp: 1225424kB writeback_tmp:0kB unstable:0kB pages_scanned:0 all_unreclaimable? no
    Node 0 DMA free:15900kB min:136kB low:168kB high:200kB active_anon:0kB inactive_anon:0kB active_file:0kB inactive_file:0kB unevictable:0kB writepending:0kB present:15984kB managed:15900kB mlocked:0kB slab_reclaimable:0kB slab_unreclaimable:0kB kernel_stack:0kB pagetables:0kB bounce:0kB free_pcp:0kB local_pcp:0kB free_cma:0kB
    lowmem_reserve[]: 0 3187 7643 7643
    Node 0 DMA32 free:419732kB min:28124kB low:35152kB high:42180kB active_anon:541180kB inactive_anon:248988kB active_file:1466388kB inactive_file:389632kB unevictable:0kB writepending:0kB present:3370280kB managed:3290932kB mlocked:0kB slab_reclaimable:217184kB slab_unreclaimable:4180kB kernel_stack:160kB pagetables:984kB bounce:0kB free_pcp:2236kB local_pcp:660kB free_cma:0kB
    lowmem_reserve[]: 0 0 4456 4456
    
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 980660760aa7cee168435449236fa7133f240f3e
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Feb 2 18:05:26 2017 +0000

    log2: make order_base_2() behave correctly on const input value zero
    
    commit 29905b52fad0854351f57bab867647e4982285bf upstream.
    
    The function order_base_2() is defined (according to the comment block)
    as returning zero on input zero, but subsequently passes the input into
    roundup_pow_of_two(), which is explicitly undefined for input zero.
    
    This has gone unnoticed until now, but optimization passes in GCC 7 may
    produce constant folded function instances where a constant value of
    zero is passed into order_base_2(), resulting in link errors against the
    deliberately undefined '____ilog2_NaN'.
    
    So update order_base_2() to adhere to its own documented interface.
    
    [ See
    
         http://marc.info/?l=linux-kernel&m=147672952517795&w=2
    
      and follow-up discussion for more background. The gcc "optimization
      pass" is really just broken, but now the GCC trunk problem seems to
      have escaped out of just specially built daily images, so we need to
      work around it in mainline.    - Linus ]
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55d0f89a1a0cc6a38a078d69f6a1b1c294aa039e
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue May 23 21:53:57 2017 -0400

    kasan: respect /proc/sys/kernel/traceoff_on_warning
    
    
    [ Upstream commit 4f40c6e5627ea73b4e7c615c59631f38cc880885 ]
    
    After much waiting I finally reproduced a KASAN issue, only to find my
    trace-buffer empty of useful information because it got spooled out :/
    
    Make kasan_report honour the /proc/sys/kernel/traceoff_on_warning
    interface.
    
    Link: http://lkml.kernel.org/r/20170125164106.3514-1-aryabinin@virtuozzo.com
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Acked-by: Alexander Potapenko <glider@google.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1948d0afe43ec3792766b58d750e3ded88735929
Author: David Lin <dtwlin@google.com>
Date:   Tue May 23 21:53:55 2017 -0400

    jump label: pass kbuild_cflags when checking for asm goto support
    
    
    [ Upstream commit 35f860f9ba6aac56cc38e8b18916d833a83f1157 ]
    
    Some versions of ARM GCC compiler such as Android toolchain throws in a
    '-fpic' flag by default.  This causes the gcc-goto check script to fail
    although some config would have '-fno-pic' flag in the KBUILD_CFLAGS.
    
    This patch passes the KBUILD_CFLAGS to the check script so that the
    script does not rely on the default config from different compilers.
    
    Link: http://lkml.kernel.org/r/20170120234329.78868-1-dtwlin@google.com
    Signed-off-by: David Lin <dtwlin@google.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Michal Marek <mmarek@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 266e02bc69a2323901238272c880934438fb47ae
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue May 23 21:53:54 2017 -0400

    PM / runtime: Avoid false-positive warnings from might_sleep_if()
    
    
    [ Upstream commit a9306a63631493afc75893a4ac405d4e1cbae6aa ]
    
    The might_sleep_if() assertions in __pm_runtime_idle(),
    __pm_runtime_suspend() and __pm_runtime_resume() may generate
    false-positive warnings in some situations.  For example, that
    happens if a nested pm_runtime_get_sync()/pm_runtime_put() pair
    is executed with disabled interrupts within an outer
    pm_runtime_get_sync()/pm_runtime_put() section for the same device.
    [Generally, pm_runtime_get_sync() may sleep, so it should not be
    called with disabled interrupts, but in this particular case the
    previous pm_runtime_get_sync() guarantees that the device will not
    be suspended, so the inner pm_runtime_get_sync() will return
    immediately after incrementing the device's usage counter.]
    
    That started to happen in the i915 driver in 4.10-rc, leading to
    the following splat:
    
     BUG: sleeping function called from invalid context at drivers/base/power/runtime.c:1032
     in_atomic(): 1, irqs_disabled(): 0, pid: 1500, name: Xorg
     1 lock held by Xorg/1500:
      #0:  (&dev->struct_mutex){+.+.+.}, at:
      [<ffffffffa0680c13>] i915_mutex_lock_interruptible+0x43/0x140 [i915]
     CPU: 0 PID: 1500 Comm: Xorg Not tainted
     Call Trace:
      dump_stack+0x85/0xc2
      ___might_sleep+0x196/0x260
      __might_sleep+0x53/0xb0
      __pm_runtime_resume+0x7a/0x90
      intel_runtime_pm_get+0x25/0x90 [i915]
      aliasing_gtt_bind_vma+0xaa/0xf0 [i915]
      i915_vma_bind+0xaf/0x1e0 [i915]
      i915_gem_execbuffer_relocate_entry+0x513/0x6f0 [i915]
      i915_gem_execbuffer_relocate_vma.isra.34+0x188/0x250 [i915]
      ? trace_hardirqs_on+0xd/0x10
      ? i915_gem_execbuffer_reserve_vma.isra.31+0x152/0x1f0 [i915]
      ? i915_gem_execbuffer_reserve.isra.32+0x372/0x3a0 [i915]
      i915_gem_do_execbuffer.isra.38+0xa70/0x1a40 [i915]
      ? __might_fault+0x4e/0xb0
      i915_gem_execbuffer2+0xc5/0x260 [i915]
      ? __might_fault+0x4e/0xb0
      drm_ioctl+0x206/0x450 [drm]
      ? i915_gem_execbuffer+0x340/0x340 [i915]
      ? __fget+0x5/0x200
      do_vfs_ioctl+0x91/0x6f0
      ? __fget+0x111/0x200
      ? __fget+0x5/0x200
      SyS_ioctl+0x79/0x90
      entry_SYSCALL_64_fastpath+0x23/0xc6
    
    even though the code triggering it is correct.
    
    Unfortunately, the might_sleep_if() assertions in question are
    too coarse-grained to cover such cases correctly, so make them
    a bit less sensitive in order to avoid the false-positives.
    
    Reported-and-tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d228758f90f234d1c5c6696960a5bd6a392c751
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Tue May 23 21:53:52 2017 -0400

    ipv6: Fix IPv6 packet loss in scenarios involving roaming + snooping switches
    
    
    [ Upstream commit a088d1d73a4bcfd7bc482f8d08375b9b665dc3e5 ]
    
    When for instance a mobile Linux device roams from one access point to
    another with both APs sharing the same broadcast domain and a
    multicast snooping switch in between:
    
    1)    (c) <~~~> (AP1) <--[SSW]--> (AP2)
    
    2)              (AP1) <--[SSW]--> (AP2) <~~~> (c)
    
    Then currently IPv6 multicast packets will get lost for (c) until an
    MLD Querier sends its next query message. The packet loss occurs
    because upon roaming the Linux host so far stayed silent regarding
    MLD and the snooping switch will therefore be unaware of the
    multicast topology change for a while.
    
    This patch fixes this by always resending MLD reports when an interface
    change happens, for instance from NO-CARRIER to CARRIER state.
    
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee0cd47799dd63c38e3ae842be6693b53b315735
Author: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
Date:   Tue May 23 21:53:45 2017 -0400

    i2c: piix4: Fix request_region size
    
    
    [ Upstream commit f43128c75202f29ee71aa83e6c320a911137c189 ]
    
    Since '701dc207bf55 ("i2c: piix4: Avoid race conditions with IMC")' we
    are using the SMBSLVCNT register at offset 0x8. We need to request it.
    
    Fixes: 701dc207bf55 ("i2c: piix4: Avoid race conditions with IMC")
    Signed-off-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68cac074124615e24cd3ff6ca94ed7ef2e1cc0a2
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Tue May 23 21:53:43 2017 -0400

    sierra_net: Add support for IPv6 and Dual-Stack Link Sense Indications
    
    
    [ Upstream commit 5a70348e1187c5bf1cbd0ec51843f36befed1c2d ]
    
    If a context is configured as dualstack ("IPv4v6"), the modem indicates
    the context activation with a slightly different indication message.
    The dual-stack indication omits the link_type (IPv4/v6) and adds
    additional address fields.
    IPv6 LSIs are identical to IPv4 LSIs, but have a different link type.
    
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Reviewed-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d95ffdd395660eb83da6b14eb07ab1311b10df25
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Tue May 23 21:53:42 2017 -0400

    sierra_net: Skip validating irrelevant fields for IDLE LSIs
    
    
    [ Upstream commit 764895d3039e903dac3a70f219949efe43d036a0 ]
    
    When the context is deactivated, the link_type is set to 0xff, which
    triggers a warning message, and results in a wrong link status, as
    the LSI is ignored.
    
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 716cca0a67ec131295dbca477b0cc35e0bc5f81c
Author: Kejian Yan <yankejian@huawei.com>
Date:   Tue May 23 21:53:41 2017 -0400

    net: hns: Fix the device being used for dma mapping during TX
    
    
    [ Upstream commit b85ea006b6bebb692628f11882af41c3e12e1e09 ]
    
    This patch fixes the device being used to DMA map skb->data.
    Erroneous device assignment causes the crash when SMMU is enabled.
    This happens during TX since buffer gets DMA mapped with device
    correspondign to net_device and gets unmapped using the device
    related to DSAF.
    
    Signed-off-by: Kejian Yan <yankejian@huawei.com>
    Reviewed-by: Yisen Zhuang <yisen.zhuang@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aacf9de1e23910a04611f90f26ad66dc7a179343
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Tue May 23 21:53:40 2017 -0400

    NET: mkiss: Fix panic
    
    
    [ Upstream commit 7ba1b689038726d34e3244c1ac9e2e18c2ea4787 ]
    
    If a USB-to-serial adapter is unplugged, the driver re-initializes, with
    dev->hard_header_len and dev->addr_len set to zero, instead of the correct
    values.  If then a packet is sent through the half-dead interface, the
    kernel will panic due to running out of headroom in the skb when pushing
    for the AX.25 headers resulting in this panic:
    
    [<c0595468>] (skb_panic) from [<c0401f70>] (skb_push+0x4c/0x50)
    [<c0401f70>] (skb_push) from [<bf0bdad4>] (ax25_hard_header+0x34/0xf4 [ax25])
    [<bf0bdad4>] (ax25_hard_header [ax25]) from [<bf0d05d4>] (ax_header+0x38/0x40 [mkiss])
    [<bf0d05d4>] (ax_header [mkiss]) from [<c041b584>] (neigh_compat_output+0x8c/0xd8)
    [<c041b584>] (neigh_compat_output) from [<c043e7a8>] (ip_finish_output+0x2a0/0x914)
    [<c043e7a8>] (ip_finish_output) from [<c043f948>] (ip_output+0xd8/0xf0)
    [<c043f948>] (ip_output) from [<c043f04c>] (ip_local_out_sk+0x44/0x48)
    
    This patch makes mkiss behave like the 6pack driver. 6pack does not
    panic.  In 6pack.c sp_setup() (same function name here) the values for
    dev->hard_header_len and dev->addr_len are set to the same values as in
    my mkiss patch.
    
    [ralf@linux-mips.org: Massages original submission to conform to the usual
    standards for patch submissions.]
    
    Signed-off-by: Thomas Osterried <thomas@osterried.de>
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9e9045d5e6bd439d6b34833ef6007a6c56427d0
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Tue May 23 21:53:37 2017 -0400

    NET: Fix /proc/net/arp for AX.25
    
    
    [ Upstream commit 4872e57c812dd312bf8193b5933fa60585cda42f ]
    
    When sending ARP requests over AX.25 links the hwaddress in the neighbour
    cache are not getting initialized.  For such an incomplete arp entry
    ax2asc2 will generate an empty string resulting in /proc/net/arp output
    like the following:
    
    $ cat /proc/net/arp
    IP address       HW type     Flags       HW address            Mask     Device
    192.168.122.1    0x1         0x2         52:54:00:00:5d:5f     *        ens3
    172.20.1.99      0x3         0x0              *        bpq0
    
    The missing field will confuse the procfs parsing of arp(8) resulting in
    incorrect output for the device such as the following:
    
    $ arp
    Address                  HWtype  HWaddress           Flags Mask            Iface
    gateway                  ether   52:54:00:00:5d:5f   C                     ens3
    172.20.1.99                      (incomplete)                              ens3
    
    This changes the content of /proc/net/arp to:
    
    $ cat /proc/net/arp
    IP address       HW type     Flags       HW address            Mask     Device
    172.20.1.99      0x3         0x0         *                     *        bpq0
    192.168.122.1    0x1         0x2         52:54:00:00:5d:5f     *        ens3
    
    To do so it change ax2asc to put the string "*" in buf for a NULL address
    argument.  Finally the HW address field is left aligned in a 17 character
    field (the length of an ethernet HW address in the usual hex notation) for
    readability.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23287661af3e2fd5a6a5a7bbe2b8f066203456e0
Author: Jonathan T. Leighton <jtleight@udel.edu>
Date:   Tue May 23 21:53:34 2017 -0400

    ipv6: Inhibit IPv4-mapped src address on the wire.
    
    
    [ Upstream commit ec5e3b0a1d41fbda0cc33a45bc9e54e91d9d12c7 ]
    
    This patch adds a check for the problematic case of an IPv4-mapped IPv6
    source address and a destination address that is neither an IPv4-mapped
    IPv6 address nor in6addr_any, and returns an appropriate error. The
    check in done before returning from looking up the route.
    
    Signed-off-by: Jonathan T. Leighton <jtleight@udel.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8faccb2b944215e1ecb86989f22113db267397c5
Author: Jonathan T. Leighton <jtleight@udel.edu>
Date:   Tue May 23 21:53:33 2017 -0400

    ipv6: Handle IPv4-mapped src to in6addr_any dst.
    
    
    [ Upstream commit 052d2369d1b479cdbbe020fdd6d057d3c342db74 ]
    
    This patch adds a check on the type of the source address for the case
    where the destination address is in6addr_any. If the source is an
    IPv4-mapped IPv6 source address, the destination is changed to
    ::ffff:127.0.0.1, and otherwise the destination is changed to ::1. This
    is done in three locations to handle UDP calls to either connect() or
    sendmsg() and TCP calls to connect(). Note that udpv6_sendmsg() delays
    handling an in6addr_any destination until very late, so the patch only
    needs to handle the case where the source is an IPv4-mapped IPv6
    address.
    
    Signed-off-by: Jonathan T. Leighton <jtleight@udel.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10a7629772676694cb4da272df2b391f1963fc7d
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Tue May 23 21:53:29 2017 -0400

    net: xilinx_emaclite: fix receive buffer overflow
    
    
    [ Upstream commit cd224553641848dd17800fe559e4ff5d208553e8 ]
    
    xilinx_emaclite looks at the received data to try to determine the
    Ethernet packet length but does not properly clamp it if
    proto_type == ETH_P_IP or 1500 < proto_type <= 1518, causing a buffer
    overflow and a panic via skb_panic() as the length exceeds the allocated
    skb size.
    
    Fix those cases.
    
    Also add an additional unconditional check with WARN_ON() at the end.
    
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Fixes: bb81b2ddfa19 ("net: add Xilinx emac lite device driver")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f71f22a116f6fa834577ca4e57b1c81f730e1e5
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Tue May 23 21:53:28 2017 -0400

    net: xilinx_emaclite: fix freezes due to unordered I/O
    
    
    [ Upstream commit acf138f1b00bdd1b7cd9894562ed0c2a1670888e ]
    
    The xilinx_emaclite uses __raw_writel and __raw_readl for register
    accesses. Those functions do not imply any kind of memory barriers and
    they may be reordered.
    
    The driver does not seem to take that into account, though, and the
    driver does not satisfy the ordering requirements of the hardware.
    For clear examples, see xemaclite_mdio_write() and xemaclite_mdio_read()
    which try to set MDIO address before initiating the transaction.
    
    I'm seeing system freezes with the driver with GCC 5.4 and current
    Linux kernels on Zynq-7000 SoC immediately when trying to use the
    interface.
    
    In commit 123c1407af87 ("net: emaclite: Do not use microblaze and ppc
    IO functions") the driver was switched from non-generic
    in_be32/out_be32 (memory barriers, big endian) to
    __raw_readl/__raw_writel (no memory barriers, native endian), so
    apparently the device follows system endianness and the driver was
    originally written with the assumption of memory barriers.
    
    Rather than try to hunt for each case of missing barrier, just switch
    the driver to use iowrite32/ioread32/iowrite32be/ioread32be depending
    on endianness instead.
    
    Tested on little-endian Zynq-7000 ARM SoC FPGA.
    
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Fixes: 123c1407af87 ("net: emaclite: Do not use microblaze and ppc IO
    functions")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ba464a4b7488d3de658cb60f74010f8b4053e4c
Author: Sachin Prabhu <sprabhu@redhat.com>
Date:   Thu Oct 20 19:52:24 2016 -0400

    Call echo service immediately after socket reconnect
    
    commit b8c600120fc87d53642476f48c8055b38d6e14c7 upstream.
    
    Commit 4fcd1813e640 ("Fix reconnect to not defer smb3 session reconnect
    long after socket reconnect") changes the behaviour of the SMB2 echo
    service and causes it to renegotiate after a socket reconnect. However
    under default settings, the echo service could take up to 120 seconds to
    be scheduled.
    
    The patch forces the echo service to be called immediately resulting a
    negotiate call being made immediately on reconnect.
    
    Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Acked-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 691fe5610d580285af0d02bd5f62662bc50ed707
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Thu May 11 18:57:43 2017 +0100

    staging: rtl8192e: rtl92e_fill_tx_desc fix write to mapped out memory.
    
    commit baabd567f87be05330faa5140f72a91960e7405a upstream.
    
    The driver attempts to alter memory that is mapped to PCI device.
    
    This is because tx_fwinfo_8190pci points to skb->data
    
    Move the pci_map_single to when completed buffer is ready to be mapped with
    psdec is empty to drop on mapping error.
    
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fc4d70453ee4af1ac539e841e30d973a71edffb
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Mon Apr 25 17:37:17 2016 -0300

    ARM: dts: imx6dl: Fix the VDD_ARM_CAP voltage for 396MHz operation
    
    commit 46350b71a09ccf3573649e03db55d4b61d5da231 upstream.
    
    Table 8 from MX6DL datasheet (IMX6SDLCEC Rev. 5, 06/2015):
    http://cache.nxp.com/files/32bit/doc/data_sheet/IMX6SDLCEC.pdf
    
    states the following:
    
    "LDO Output Set Point (VDD_ARM_CAP) = 1.125 V minimum for operation
    up to 396 MHz."
    
    So fix the entry by adding the 25mV margin value as done in the other
    entries of the table, which results in 1.15V for 396MHz operation.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Cc: Stephane Fillod <f8cfe@free.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b28c21baf28a854011d0d896f861995843e7a72e
Author: Richard <richard@aaazen.com>
Date:   Sun May 21 12:27:00 2017 -0700

    partitions/msdos: FreeBSD UFS2 file systems are not recognized
    
    commit 223220356d5ebc05ead9a8d697abb0c0a906fc81 upstream.
    
    The code in block/partitions/msdos.c recognizes FreeBSD, OpenBSD
    and NetBSD partitions and does a reasonable job picking out OpenBSD
    and NetBSD UFS subpartitions.
    
    But for FreeBSD the subpartitions are always "bad".
    
        Kernel: <bsd:bad subpartition - ignored
    
    Though all 3 of these BSD systems use UFS as a file system, only
    FreeBSD uses relative start addresses in the subpartition
    declarations.
    
    The following patch fixes this for FreeBSD partitions and leaves
    the code for OpenBSD and NetBSD intact:
    
    Signed-off-by: Richard Narron <comet.berkeley@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fb2a1fe6155547d8a8234ad5f19e5fd53621c82
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue May 10 12:10:22 2016 +0200

    s390/vmem: fix identity mapping
    
    commit c34a69059d7876e0793eb410deedfb08ccb22b02 upstream.
    
    The identity mapping is suboptimal for the last 2GB frame. The mapping
    will be established with a mix of 4KB and 1MB mappings instead of a
    single 2GB mapping.
    
    This happens because of a off-by-one bug introduced with
    commit 50be63450728 ("s390/mm: Convert bootmem to memblock").
    
    Currently the identity mapping looks like this:
    
    0x0000000080000000-0x0000000180000000        4G PUD RW
    0x0000000180000000-0x00000001fff00000     2047M PMD RW
    0x00000001fff00000-0x0000000200000000        1M PTE RW
    
    With the bug fixed it looks like this:
    
    0x0000000080000000-0x0000000200000000        6G PUD RW
    
    Fixes: 50be63450728 ("s390/mm: Convert bootmem to memblock")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
