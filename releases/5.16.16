commit 9aed648340400df7f403d41d8558244afd6d69d3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 19 13:48:46 2022 +0100

    Linux 5.16.16
    
    Link: https://lore.kernel.org/r/20220317124526.768423926@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Ron Economos <re@w6rz.net>
    Tested-by: Rudi Heitbaum <rudi@heitbaum.com>
    Tested-by: Luna Jernberg <droidbittin@gmail.com>
    Tested-by: Justin M. Forbes <jforbes@fedoraproject.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1014fc5572375658fa421531cedb6e084f477dc
Author: Ivan Vecera <ivecera@redhat.com>
Date:   Thu Mar 10 18:16:41 2022 +0100

    ice: Fix race condition during interface enslave
    
    commit 5cb1ebdbc4342b1c2ce89516e19808d64417bdbc upstream.
    
    Commit 5dbbbd01cbba83 ("ice: Avoid RTNL lock when re-creating
    auxiliary device") changes a process of re-creation of aux device
    so ice_plug_aux_dev() is called from ice_service_task() context.
    This unfortunately opens a race window that can result in dead-lock
    when interface has left LAG and immediately enters LAG again.
    
    Reproducer:
    ```
    #!/bin/sh
    
    ip link add lag0 type bond mode 1 miimon 100
    ip link set lag0
    
    for n in {1..10}; do
            echo Cycle: $n
            ip link set ens7f0 master lag0
            sleep 1
            ip link set ens7f0 nomaster
    done
    ```
    
    This results in:
    [20976.208697] Workqueue: ice ice_service_task [ice]
    [20976.213422] Call Trace:
    [20976.215871]  __schedule+0x2d1/0x830
    [20976.219364]  schedule+0x35/0xa0
    [20976.222510]  schedule_preempt_disabled+0xa/0x10
    [20976.227043]  __mutex_lock.isra.7+0x310/0x420
    [20976.235071]  enum_all_gids_of_dev_cb+0x1c/0x100 [ib_core]
    [20976.251215]  ib_enum_roce_netdev+0xa4/0xe0 [ib_core]
    [20976.256192]  ib_cache_setup_one+0x33/0xa0 [ib_core]
    [20976.261079]  ib_register_device+0x40d/0x580 [ib_core]
    [20976.266139]  irdma_ib_register_device+0x129/0x250 [irdma]
    [20976.281409]  irdma_probe+0x2c1/0x360 [irdma]
    [20976.285691]  auxiliary_bus_probe+0x45/0x70
    [20976.289790]  really_probe+0x1f2/0x480
    [20976.298509]  driver_probe_device+0x49/0xc0
    [20976.302609]  bus_for_each_drv+0x79/0xc0
    [20976.306448]  __device_attach+0xdc/0x160
    [20976.310286]  bus_probe_device+0x9d/0xb0
    [20976.314128]  device_add+0x43c/0x890
    [20976.321287]  __auxiliary_device_add+0x43/0x60
    [20976.325644]  ice_plug_aux_dev+0xb2/0x100 [ice]
    [20976.330109]  ice_service_task+0xd0c/0xed0 [ice]
    [20976.342591]  process_one_work+0x1a7/0x360
    [20976.350536]  worker_thread+0x30/0x390
    [20976.358128]  kthread+0x10a/0x120
    [20976.365547]  ret_from_fork+0x1f/0x40
    ...
    [20976.438030] task:ip              state:D stack:    0 pid:213658 ppid:213627 flags:0x00004084
    [20976.446469] Call Trace:
    [20976.448921]  __schedule+0x2d1/0x830
    [20976.452414]  schedule+0x35/0xa0
    [20976.455559]  schedule_preempt_disabled+0xa/0x10
    [20976.460090]  __mutex_lock.isra.7+0x310/0x420
    [20976.464364]  device_del+0x36/0x3c0
    [20976.467772]  ice_unplug_aux_dev+0x1a/0x40 [ice]
    [20976.472313]  ice_lag_event_handler+0x2a2/0x520 [ice]
    [20976.477288]  notifier_call_chain+0x47/0x70
    [20976.481386]  __netdev_upper_dev_link+0x18b/0x280
    [20976.489845]  bond_enslave+0xe05/0x1790 [bonding]
    [20976.494475]  do_setlink+0x336/0xf50
    [20976.502517]  __rtnl_newlink+0x529/0x8b0
    [20976.543441]  rtnl_newlink+0x43/0x60
    [20976.546934]  rtnetlink_rcv_msg+0x2b1/0x360
    [20976.559238]  netlink_rcv_skb+0x4c/0x120
    [20976.563079]  netlink_unicast+0x196/0x230
    [20976.567005]  netlink_sendmsg+0x204/0x3d0
    [20976.570930]  sock_sendmsg+0x4c/0x50
    [20976.574423]  ____sys_sendmsg+0x1eb/0x250
    [20976.586807]  ___sys_sendmsg+0x7c/0xc0
    [20976.606353]  __sys_sendmsg+0x57/0xa0
    [20976.609930]  do_syscall_64+0x5b/0x1a0
    [20976.613598]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    1. Command 'ip link ... set nomaster' causes that ice_plug_aux_dev()
       is called from ice_service_task() context, aux device is created
       and associated device->lock is taken.
    2. Command 'ip link ... set master...' calls ice's notifier under
       RTNL lock and that notifier calls ice_unplug_aux_dev(). That
       function tries to take aux device->lock but this is already taken
       by ice_plug_aux_dev() in step 1
    3. Later ice_plug_aux_dev() tries to take RTNL lock but this is already
       taken in step 2
    4. Dead-lock
    
    The patch fixes this issue by following changes:
    - Bit ICE_FLAG_PLUG_AUX_DEV is kept to be set during ice_plug_aux_dev()
      call in ice_service_task()
    - The bit is checked in ice_clear_rdma_cap() and only if it is not set
      then ice_unplug_aux_dev() is called. If it is set (in other words
      plugging of aux device was requested and ice_plug_aux_dev() is
      potentially running) then the function only clears the bit
    - Once ice_plug_aux_dev() call (in ice_service_task) is finished
      the bit ICE_FLAG_PLUG_AUX_DEV is cleared but it is also checked
      whether it was already cleared by ice_clear_rdma_cap(). If so then
      aux device is unplugged.
    
    Signed-off-by: Ivan Vecera <ivecera@redhat.com>
    Co-developed-by: Petr Oros <poros@redhat.com>
    Signed-off-by: Petr Oros <poros@redhat.com>
    Reviewed-by: Dave Ertman <david.m.ertman@intel.com>
    Link: https://lore.kernel.org/r/20220310171641.3863659-1-ivecera@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77f2a54105b46c32ae5e966d0c576927a8db12a4
Author: Chengming Zhou <zhouchengming@bytedance.com>
Date:   Fri Mar 4 20:29:04 2022 -0800

    kselftest/vm: fix tests build with old libc
    
    [ Upstream commit b773827e361952b3f53ac6fa4c4e39ccd632102e ]
    
    The error message when I build vm tests on debian10 (GLIBC 2.28):
    
        userfaultfd.c: In function `userfaultfd_pagemap_test':
        userfaultfd.c:1393:37: error: `MADV_PAGEOUT' undeclared (first use
        in this function); did you mean `MADV_RANDOM'?
          if (madvise(area_dst, test_pgsize, MADV_PAGEOUT))
                                             ^~~~~~~~~~~~
                                             MADV_RANDOM
    
    This patch includes these newer definitions from UAPI linux/mman.h, is
    useful to fix tests build on systems without these definitions in glibc
    sys/mman.h.
    
    Link: https://lkml.kernel.org/r/20220227055330.43087-2-zhouchengming@bytedance.com
    Signed-off-by: Chengming Zhou <zhouchengming@bytedance.com>
    Reviewed-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0419fec09d17a3bded5867dcc2e6d73344cadd4b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Mar 2 21:21:15 2022 +0100

    bnx2: Fix an error message
    
    [ Upstream commit 8ccffe9ac3239e549beaa0a9d5e1a1eac94e866c ]
    
    Fix an error message and report the correct failing function.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c30164f68c25e004a631a7bf4fbac3e2ae43596
Author: Niels Dossche <dossche.niels@gmail.com>
Date:   Tue Mar 1 23:28:22 2022 +0100

    sfc: extend the locking on mcdi->seqno
    
    [ Upstream commit f1fb205efb0ccca55626fd4ef38570dd16b44719 ]
    
    seqno could be read as a stale value outside of the lock. The lock is
    already acquired to protect the modification of seqno against a possible
    race condition. Place the reading of this value also inside this locking
    to protect it against a possible race condition.
    
    Signed-off-by: Niels Dossche <dossche.niels@gmail.com>
    Acked-by: Martin Habets <habetsm.xilinx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09253fa62941296f0522fe72664395e3ae2445e2
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 2 08:17:23 2022 -0800

    tcp: make tcp_read_sock() more robust
    
    [ Upstream commit e3d5ea2c011ecb16fb94c56a659364e6b30fac94 ]
    
    If recv_actor() returns an incorrect value, tcp_read_sock()
    might loop forever.
    
    Instead, issue a one time warning and make sure to make progress.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/r/20220302161723.3910001-2-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 020419ea614b2eefbbcbd309ee0a4ececf87002d
Author: Sreeramya Soratkal <quic_ssramya@quicinc.com>
Date:   Tue Mar 1 11:33:20 2022 +0530

    nl80211: Update bss channel on channel switch for P2P_CLIENT
    
    [ Upstream commit e50b88c4f076242358b66ddb67482b96947438f2 ]
    
    The wdev channel information is updated post channel switch only for
    the station mode and not for the other modes. Due to this, the P2P client
    still points to the old value though it moved to the new channel
    when the channel change is induced from the P2P GO.
    
    Update the bss channel after CSA channel switch completion for P2P client
    interface as well.
    
    Signed-off-by: Sreeramya Soratkal <quic_ssramya@quicinc.com>
    Link: https://lore.kernel.org/r/1646114600-31479-1-git-send-email-quic_ssramya@quicinc.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85271e92ae4f13aa679acaa6cf76b3c36bcb7bab
Author: Manasi Navare <manasi.d.navare@intel.com>
Date:   Thu Feb 24 17:30:54 2022 -0800

    drm/vrr: Set VRR capable prop only if it is attached to connector
    
    [ Upstream commit 62929726ef0ec72cbbe9440c5d125d4278b99894 ]
    
    VRR capable property is not attached by default to the connector
    It is attached only if VRR is supported.
    So if the driver tries to call drm core set prop function without
    it being attached that causes NULL dereference.
    
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: dri-devel@lists.freedesktop.org
    Signed-off-by: Manasi Navare <manasi.d.navare@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220225013055.9282-1-manasi.d.navare@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1cb634f2d9b47a350359035e11ba095394f1d95
Author: Golan Ben Ami <golan.ben.ami@intel.com>
Date:   Tue Mar 1 09:29:26 2022 +0200

    iwlwifi: don't advertise TWT support
    
    [ Upstream commit 1db5fcbba2631277b78d7f8aff99c9607d29f6d8 ]
    
    Some APs misbehave when TWT is used and cause our firmware to crash.
    We don't know a reasonable way to detect and work around this problem
    in the FW yet.  To prevent these crashes, disable TWT in the driver by
    stopping to advertise TWT support.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215523
    Signed-off-by: Golan Ben Ami <golan.ben.ami@intel.com>
    [reworded the commit message]
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20220301072926.153969-1-luca@coelho.fi
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 720d3f6c2d3f05ebccfe44552919a99221d6d497
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Feb 28 22:53:12 2022 -0800

    Input: goodix - workaround Cherry Trail devices with a bogus ACPI Interrupt() resource
    
    [ Upstream commit d982992669733dd75520000c6057d8ee0725a363 ]
    
    ACPI/x86 devices with a Cherry Trail SoC should have a GpioInt + a regular
    GPIO ACPI resource in their ACPI tables.
    
    Some CHT devices have a bug, where the also is bogus interrupt resource
    (likely copied from a previous Bay Trail based generation of the device).
    
    The i2c-core-acpi code will assign the bogus, non-working, interrupt
    resource to client->irq. Add a workaround to fix this up.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=2043960
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220228111613.363336-1-hdegoede@redhat.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 547549b25aea59b4a60c3244a4834e3382ef366d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Feb 28 22:52:31 2022 -0800

    Input: goodix - use the new soc_intel_is_byt() helper
    
    [ Upstream commit d176708ffc20332d1c730098d2b111e0b77ece82 ]
    
    Use the new soc_intel_is_byt() helper from linux/platform_data/x86/soc.h.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20220131143539.109142-5-hdegoede@redhat.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ddd4196c86a3b7112b0fcf9a33c61f975946edb
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 28 04:18:05 2022 +0100

    netfilter: egress: silence egress hook lockdep splats
    
    [ Upstream commit 17a8f31bba7bac8cce4bd12bab50697da96e7710 ]
    
    Netfilter assumes its called with rcu_read_lock held, but in egress
    hook case it may be called with BH readlock.
    
    This triggers lockdep splat.
    
    In order to avoid to change all rcu_dereference() to
    rcu_dereference_check(..., rcu_read_lock_bh_held()), wrap nf_hook_slow
    with read lock/unlock pair.
    
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1cbbe4104af01f0afa542d0ca99cd324e05f633
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Feb 25 04:52:30 2022 -0800

    atm: firestream: check the return value of ioremap() in fs_init()
    
    [ Upstream commit d4e26aaea7f82ba884dcb4acfe689406bc092dc3 ]
    
    The function ioremap() in fs_init() can fail, so its return value should
    be checked.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 508216f9fd1584249eeedcad98c15745f8c0e06b
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Feb 21 22:59:35 2022 +0000

    can: rcar_canfd: rcar_canfd_channel_probe(): register the CAN device when fully ready
    
    [ Upstream commit c5048a7b2c23ab589f3476a783bd586b663eda5b ]
    
    Register the CAN device only when all the necessary initialization is
    completed. This patch makes sure all the data structures and locks are
    initialized before registering the CAN device.
    
    Link: https://lore.kernel.org/all/20220221225935.12300-1-prabhakar.mahadev-lad.rj@bp.renesas.com
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Pavel Machek <pavel@denx.de>
    Reviewed-by: Ulrich Hecht <uli+renesas@fpond.eu>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9473d06bd1c8da49eafb685aa95a290290c672dd
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Fri Feb 4 13:12:35 2022 -0800

    Bluetooth: hci_core: Fix leaking sent_cmd skb
    
    [ Upstream commit dd3b1dc3dd050f1f47cd13e300732852414270f8 ]
    
    sent_cmd memory is not freed before freeing hci_dev causing it to leak
    it contents.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 107e8e719e93895da5af39542f1cac73277cdabe
Author: Julian Braha <julianbraha@gmail.com>
Date:   Mon Jan 17 05:09:40 2022 +0100

    ARM: 9178/1: fix unmet dependency on BITREVERSE for HAVE_ARCH_BITREVERSE
    
    [ Upstream commit 11c57c3ba94da74c3446924260e34e0b1950b5d7 ]
    
    Resending this to properly add it to the patch tracker - thanks for letting
    me know, Arnd :)
    
    When ARM is enabled, and BITREVERSE is disabled,
    Kbuild gives the following warning:
    
    WARNING: unmet direct dependencies detected for HAVE_ARCH_BITREVERSE
      Depends on [n]: BITREVERSE [=n]
      Selected by [y]:
      - ARM [=y] && (CPU_32v7M [=n] || CPU_32v7 [=y]) && !CPU_32v6 [=n]
    
    This is because ARM selects HAVE_ARCH_BITREVERSE
    without selecting BITREVERSE, despite
    HAVE_ARCH_BITREVERSE depending on BITREVERSE.
    
    This unmet dependency bug was found by Kismet,
    a static analysis tool for Kconfig. Please advise if this
    is not the appropriate solution.
    
    Signed-off-by: Julian Braha <julianbraha@gmail.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94647aec80d03d6914aa664b7b8e103cd9d63239
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Sat Feb 12 22:21:11 2022 +0000

    MIPS: smp: fill in sibling and core maps earlier
    
    [ Upstream commit f2703def339c793674010cc9f01bfe4980231808 ]
    
    After enabling CONFIG_SCHED_CORE (landed during 5.14 cycle),
    2-core 2-thread-per-core interAptiv (CPS-driven) started emitting
    the following:
    
    [    0.025698] CPU1 revision is: 0001a120 (MIPS interAptiv (multi))
    [    0.048183] ------------[ cut here ]------------
    [    0.048187] WARNING: CPU: 1 PID: 0 at kernel/sched/core.c:6025 sched_core_cpu_starting+0x198/0x240
    [    0.048220] Modules linked in:
    [    0.048233] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.17.0-rc3+ #35 b7b319f24073fd9a3c2aa7ad15fb7993eec0b26f
    [    0.048247] Stack : 817f0000 00000004 327804c8 810eb050 00000000 00000004 00000000 c314fdd1
    [    0.048278]         830cbd64 819c0000 81800000 817f0000 83070bf4 00000001 830cbd08 00000000
    [    0.048307]         00000000 00000000 815fcbc4 00000000 00000000 00000000 00000000 00000000
    [    0.048334]         00000000 00000000 00000000 00000000 817f0000 00000000 00000000 817f6f34
    [    0.048361]         817f0000 818a3c00 817f0000 00000004 00000000 00000000 4dc33260 0018c933
    [    0.048389]         ...
    [    0.048396] Call Trace:
    [    0.048399] [<8105a7bc>] show_stack+0x3c/0x140
    [    0.048424] [<8131c2a0>] dump_stack_lvl+0x60/0x80
    [    0.048440] [<8108b5c0>] __warn+0xc0/0xf4
    [    0.048454] [<8108b658>] warn_slowpath_fmt+0x64/0x10c
    [    0.048467] [<810bd418>] sched_core_cpu_starting+0x198/0x240
    [    0.048483] [<810c6514>] sched_cpu_starting+0x14/0x80
    [    0.048497] [<8108c0f8>] cpuhp_invoke_callback_range+0x78/0x140
    [    0.048510] [<8108d914>] notify_cpu_starting+0x94/0x140
    [    0.048523] [<8106593c>] start_secondary+0xbc/0x280
    [    0.048539]
    [    0.048543] ---[ end trace 0000000000000000 ]---
    [    0.048636] Synchronize counters for CPU 1: done.
    
    ...for each but CPU 0/boot.
    Basic debug printks right before the mentioned line say:
    
    [    0.048170] CPU: 1, smt_mask:
    
    So smt_mask, which is sibling mask obviously, is empty when entering
    the function.
    This is critical, as sched_core_cpu_starting() calculates
    core-scheduling parameters only once per CPU start, and it's crucial
    to have all the parameters filled in at that moment (at least it
    uses cpu_smt_mask() which in fact is `&cpu_sibling_map[cpu]` on
    MIPS).
    
    A bit of debugging led me to that set_cpu_sibling_map() performing
    the actual map calculation, was being invocated after
    notify_cpu_start(), and exactly the latter function starts CPU HP
    callback round (sched_core_cpu_starting() is basically a CPU HP
    callback).
    While the flow is same on ARM64 (maps after the notifier, although
    before calling set_cpu_online()), x86 started calculating sibling
    maps earlier than starting the CPU HP callbacks in Linux 4.14 (see
    [0] for the reference). Neither me nor my brief tests couldn't find
    any potential caveats in calculating the maps right after performing
    delay calibration, but the WARN splat is now gone.
    The very same debug prints now yield exactly what I expected from
    them:
    
    [    0.048433] CPU: 1, smt_mask: 0-1
    
    [0] https://git.kernel.org/pub/scm/linux/kernel/git/mips/linux.git/commit/?id=76ce7cfe35ef
    
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c448076f2b3426e5ff6fefaf09e29aeaf1ec131
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Feb 3 20:15:29 2022 +0100

    mac80211: refuse aggregations sessions before authorized
    
    [ Upstream commit a6bce78262f5dd4b50510f0aa47f3995f7b185f3 ]
    
    If an MFP station isn't authorized, the receiver will (or
    at least should) drop the action frame since it's a robust
    management frame, but if we're not authorized we haven't
    installed keys yet. Refuse attempts to start a session as
    they'd just time out.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://lore.kernel.org/r/20220203201528.ff4d5679dce9.I34bb1f2bc341e161af2d6faf74f91b332ba11285@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d4b07780100706ecb418c05aa3ecc5a0f3383b8
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Feb 9 12:03:55 2022 +0000

    ARM: dts: rockchip: fix a typo on rk3288 crypto-controller
    
    [ Upstream commit 3916c3619599a3970d3e6f98fb430b7c46266ada ]
    
    crypto-controller had a typo, fix it.
    In the same time, rename it to just crypto
    
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20220209120355.1985707-1-clabbe@baylibre.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5523fef2321804eaca671eb07dde55baf028c077
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Thu Feb 10 15:23:53 2022 +0100

    ARM: dts: rockchip: reorder rk322x hmdi clocks
    
    [ Upstream commit be4e65bdffab5f588044325117df77dad7e9c45a ]
    
    The binding specifies the clock order to "iahb", "isfr", "cec". Reorder
    the clocks accordingly.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Link: https://lore.kernel.org/r/20220210142353.3420859-1-s.hauer@pengutronix.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71239c2585f4f64fcc0851c57ab5454ffcee6f58
Author: Dinh Nguyen <dinguyen@kernel.org>
Date:   Thu Jan 6 17:53:31 2022 -0600

    arm64: dts: agilex: use the compatible "intel,socfpga-agilex-hsotg"
    
    [ Upstream commit 268a491aebc25e6dc7c618903b09ac3a2e8af530 ]
    
    The DWC2 USB controller on the Agilex platform does not support clock
    gating, so use the chip specific "intel,socfpga-agilex-hsotg"
    compatible.
    
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 921b65963bf1ca2b8a337dc6b4b09af354670f2e
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Wed Jan 26 15:55:40 2022 +0100

    arm64: dts: rockchip: reorder rk3399 hdmi clocks
    
    [ Upstream commit 2e8a8b5955a000cc655f7e368670518cbb77fe58 ]
    
    The binding specifies the clock order to "cec", "grf", "vpll". Reorder
    the clocks accordingly.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Link: https://lore.kernel.org/r/20220126145549.617165-19-s.hauer@pengutronix.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f53ad800f262924b661796dadd5f6f0a7d885cec
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Sat Jan 29 18:54:29 2022 +0100

    arm64: dts: rockchip: align pl330 node name with dtschema
    
    [ Upstream commit 8fd9415042826c7609c588e5ef45f3e84237785f ]
    
    Fixes dtbs_check warnings like:
    
      dmac@ff240000: $nodename:0: 'dmac@ff240000' does not match '^dma-controller(@.*)?$'
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20220129175429.298836-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98296a62220c0bb5dfb58bb3ca533394b7cd8472
Author: Jakob Unterwurzacher <jakob.unterwurzacher@theobroma-systems.com>
Date:   Wed Jan 19 14:49:48 2022 +0100

    arm64: dts: rockchip: fix rk3399-puma eMMC HS400 signal integrity
    
    [ Upstream commit 62966cbdda8a92f82d966a45aa671e788b2006f7 ]
    
    There are signal integrity issues running the eMMC at 200MHz on Puma
    RK3399-Q7.
    
    Similar to the work-around found for RK3399 Gru boards, lowering the
    frequency to 100MHz made the eMMC much more stable, so let's lower the
    frequency to 100MHz.
    
    It might be possible to run at 150MHz as on RK3399 Gru boards but only
    100MHz was extensively tested.
    
    Cc: Quentin Schulz <foss+kernel@0leil.net>
    Signed-off-by: Jakob Unterwurzacher <jakob.unterwurzacher@theobroma-systems.com>
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20220119134948.1444965-1-quentin.schulz@theobroma-systems.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3246f7dd51ca16713607a02d66bf7fd0dfedffc0
Author: Yan Yan <evitayan@google.com>
Date:   Tue Jan 18 16:00:14 2022 -0800

    xfrm: Fix xfrm migrate issues when address family changes
    
    [ Upstream commit e03c3bba351f99ad932e8f06baa9da1afc418e02 ]
    
    xfrm_migrate cannot handle address family change of an xfrm_state.
    The symptons are the xfrm_state will be migrated to a wrong address,
    and sending as well as receiving packets wil be broken.
    
    This commit fixes it by breaking the original xfrm_state_clone
    method into two steps so as to update the props.family before
    running xfrm_init_state. As the result, xfrm_state's inner mode,
    outer mode, type and IP header length in xfrm_state_migrate can
    be updated with the new address family.
    
    Tested with additions to Android's kernel unit test suite:
    https://android-review.googlesource.com/c/kernel/tests/+/1885354
    
    Signed-off-by: Yan Yan <evitayan@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42c9af6a6db7473580bd604445295b28d8b2d354
Author: Yan Yan <evitayan@google.com>
Date:   Tue Jan 18 16:00:13 2022 -0800

    xfrm: Check if_id in xfrm_migrate
    
    [ Upstream commit c1aca3080e382886e2e58e809787441984a2f89b ]
    
    This patch enables distinguishing SAs and SPs based on if_id during
    the xfrm_migrate flow. This ensures support for xfrm interfaces
    throughout the SA/SP lifecycle.
    
    When there are multiple existing SPs with the same direction,
    the same xfrm_selector and different endpoint addresses,
    xfrm_migrate might fail with ENODATA.
    
    Specifically, the code path for performing xfrm_migrate is:
      Stage 1: find policy to migrate with
        xfrm_migrate_policy_find(sel, dir, type, net)
      Stage 2: find and update state(s) with
        xfrm_migrate_state_find(mp, net)
      Stage 3: update endpoint address(es) of template(s) with
        xfrm_policy_migrate(pol, m, num_migrate)
    
    Currently "Stage 1" always returns the first xfrm_policy that
    matches, and "Stage 3" looks for the xfrm_tmpl that matches the
    old endpoint address. Thus if there are multiple xfrm_policy
    with same selector, direction, type and net, "Stage 1" might
    rertun a wrong xfrm_policy and "Stage 3" will fail with ENODATA
    because it cannot find a xfrm_tmpl with the matching endpoint
    address.
    
    The fix is to allow userspace to pass an if_id and add if_id
    to the matching rule in Stage 1 and Stage 2 since if_id is a
    unique ID for xfrm_policy and xfrm_state. For compatibility,
    if_id will only be checked if the attribute is set.
    
    Tested with additions to Android's kernel unit test suite:
    https://android-review.googlesource.com/c/kernel/tests/+/1668886
    
    Signed-off-by: Yan Yan <evitayan@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 315b0dd8ef2d721db3e0d2b839c830e57a1e823e
Author: Quentin Schulz <quentin.schulz@theobroma-systems.com>
Date:   Thu Jan 20 13:51:56 2022 +0100

    arm64: dts: rockchip: fix rk3399-puma-haikou USB OTG mode
    
    [ Upstream commit ed2c66a95c0c5669880aa93d0d34c6e9694b4cbd ]
    
    The micro USB3.0 port available on the Haikou evaluation kit for Puma
    RK3399-Q7 SoM supports dual-role model (aka drd or OTG) but its support
    was broken until now because of missing logic around the ID pin.
    
    This adds proper support for USB OTG on Puma Haikou by "connecting" the
    GPIO used for USB ID to the USB3 controller device.
    
    Cc: Quentin Schulz <foss+kernel@0leil.net>
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20220120125156.16217-1-quentin.schulz@theobroma-systems.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb57eb34d754d3c8532a12de695c8a68540838a2
Author: Frank Wunderlich <frank-w@public-files.de>
Date:   Sun Jan 23 14:36:15 2022 +0100

    arm64: dts: rockchip: fix dma-controller node names on rk356x
    
    [ Upstream commit 2ddd96aadbd0412040ef49eda94549c32de6c92c ]
    
    DMA-Cotrollers defined in rk356x.dtsi do not match the pattern in bindings.
    
    arch/arm64/boot/dts/rockchip/rk3568-evb1-v10.dt.yaml:
      dmac@fe530000: $nodename:0: 'dmac@fe530000' does not match '^dma-controller(@.*)?$'
            From schema: Documentation/devicetree/bindings/dma/arm,pl330.yaml
    arch/arm64/boot/dts/rockchip/rk3568-evb1-v10.dt.yaml:
      dmac@fe550000: $nodename:0: 'dmac@fe550000' does not match '^dma-controller(@.*)?$'
            From schema: Documentation/devicetree/bindings/dma/arm,pl330.yaml
    
    This Patch fixes it.
    
    Signed-off-by: Frank Wunderlich <frank-w@public-files.de>
    Link: https://lore.kernel.org/r/20220123133615.135789-1-linux@fw-web.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ceeeb36eeb3af79e047b98db6b1019d88aebdc68
Author: Kai Lueke <kailueke@linux.microsoft.com>
Date:   Thu Mar 3 15:55:10 2022 +0100

    Revert "xfrm: state and policy should fail if XFRMA_IF_ID 0"
    
    commit a3d9001b4e287fc043e5539d03d71a32ab114bcb upstream.
    
    This reverts commit 68ac0f3810e76a853b5f7b90601a05c3048b8b54 because ID
    0 was meant to be used for configuring the policy/state without
    matching for a specific interface (e.g., Cilium is affected, see
    https://github.com/cilium/cilium/pull/18789 and
    https://github.com/cilium/cilium/pull/19019).
    
    Signed-off-by: Kai Lueke <kailueke@linux.microsoft.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
