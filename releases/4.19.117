commit 8e2406c851877516f12b7ab4e975d033a6d58ebb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Apr 21 09:03:13 2020 +0200

    Linux 4.19.117

commit 1c6c19bda280d323c57a6f824111efbb339dee11
Author: Austin Kim <austindh.kim@gmail.com>
Date:   Mon Sep 23 15:36:42 2019 -0700

    mm/vmalloc.c: move 'area->pages' after if statement
    
    commit 7ea362427c170061b8822dd41bafaa72b3bcb9ad upstream.
    
    If !area->pages statement is true where memory allocation fails, area is
    freed.
    
    In this case 'area->pages = pages' should not executed.  So move
    'area->pages = pages' after if statement.
    
    [akpm@linux-foundation.org: give area->pages the same treatment]
    Link: http://lkml.kernel.org/r/20190830035716.GA190684@LGEARND20B15
    Signed-off-by: Austin Kim <austindh.kim@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Uladzislau Rezki (Sony) <urezki@gmail.com>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Roman Penyaev <rpenyaev@suse.de>
    Cc: Rick Edgecombe <rick.p.edgecombe@intel.com>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4994cc67857cd22d31d7e1f66c093ac676966579
Author: Karthick Gopalasubramanian <kargop@codeaurora.org>
Date:   Thu Aug 23 14:47:05 2018 +0300

    wil6210: remove reset file from debugfs
    
    commit 32dcfe8316cdbd885542967c0c85f5b9de78874b upstream.
    
    Reset file is not used and may cause race conditions
    with operational driver if used.
    
    Signed-off-by: Karthick Gopalasubramanian <kargop@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e541f4b1d8363d8a829a1d42afef6f47a92fc73a
Author: Dedy Lansky <dlansky@codeaurora.org>
Date:   Wed Oct 31 10:52:12 2018 +0200

    wil6210: make sure Rx ring sizes are correlated
    
    commit 61e5ec044748486f06dec760a19dce78247b3ad8 upstream.
    
    When enlarging rx_ring_order module param, wil6210 fails to load
    because there are not enough Rx buffers.
    Fix this by enlarging number of Rx buffers at startup, if needed based
    on rx_ring_order.
    
    Signed-off-by: Dedy Lansky <dlansky@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2068090709000758c933ccd05a8b3d0067019a75
Author: Alexei Avshalom Lazar <ailizaro@codeaurora.org>
Date:   Wed Oct 31 10:52:17 2018 +0200

    wil6210: add general initialization/size checks
    
    commit ac0e541ab2f2951845acee784ef487be40fb4c77 upstream.
    
    Initialize unset variable, and verify that mid is valid.
    
    Signed-off-by: Alexei Avshalom Lazar <ailizaro@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ced3402c366eef8e400faa5646186a36d5932c12
Author: Maya Erez <merez@codeaurora.org>
Date:   Fri Feb 22 16:21:04 2019 +0200

    wil6210: ignore HALP ICR if already handled
    
    commit 979c9d8d01c482b1befb44dc639ecb907b5a37bd upstream.
    
    HALP ICR is set as long as the FW should stay awake.
    To prevent its multiple handling the driver masks this IRQ bit.
    However, if there is a different MISC ICR before the driver clears
    this bit, there is a risk of race condition between HALP mask and
    unmask. This race leads to HALP timeout, in case it is mistakenly
    masked.
    Add an atomic flag to indicate if HALP ICR should be handled.
    
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d9cb5efdc4c9a690bff5cf63b021c47e19f0238
Author: Dedy Lansky <dlansky@codeaurora.org>
Date:   Fri Apr 26 18:43:36 2019 +0300

    wil6210: check rx_buff_mgmt before accessing it
    
    commit d6a553c0c61b0b0219764e4d4fc14e385085f374 upstream.
    
    Make sure rx_buff_mgmt is initialized before accessing it.
    
    Signed-off-by: Dedy Lansky <dlansky@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 570fbaeac923d25b31a09dca534a604f9552d77a
Author: Reinette Chatre <reinette.chatre@intel.com>
Date:   Tue Mar 17 09:26:45 2020 -0700

    x86/resctrl: Fix invalid attempt at removing the default resource group
    
    commit b0151da52a6d4f3951ea24c083e7a95977621436 upstream.
    
    The default resource group ("rdtgroup_default") is associated with the
    root of the resctrl filesystem and should never be removed. New resource
    groups can be created as subdirectories of the resctrl filesystem and
    they can be removed from user space.
    
    There exists a safeguard in the directory removal code
    (rdtgroup_rmdir()) that ensures that only subdirectories can be removed
    by testing that the directory to be removed has to be a child of the
    root directory.
    
    A possible deadlock was recently fixed with
    
      334b0f4e9b1b ("x86/resctrl: Fix a deadlock due to inaccurate reference").
    
    This fix involved associating the private data of the "mon_groups"
    and "mon_data" directories to the resource group to which they belong
    instead of NULL as before. A consequence of this change was that
    the original safeguard code preventing removal of "mon_groups" and
    "mon_data" found in the root directory failed resulting in attempts to
    remove the default resource group that ends in a BUG:
    
      kernel BUG at mm/slub.c:3969!
      invalid opcode: 0000 [#1] SMP PTI
    
      Call Trace:
      rdtgroup_rmdir+0x16b/0x2c0
      kernfs_iop_rmdir+0x5c/0x90
      vfs_rmdir+0x7a/0x160
      do_rmdir+0x17d/0x1e0
      do_syscall_64+0x55/0x1d0
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fix this by improving the directory removal safeguard to ensure that
    subdirectories of the resctrl root directory can only be removed if they
    are a child of the resctrl filesystem's root _and_ not associated with
    the default resource group.
    
    Fixes: 334b0f4e9b1b ("x86/resctrl: Fix a deadlock due to inaccurate reference")
    Reported-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Signed-off-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/884cbe1773496b5dbec1b6bd11bb50cffa83603d.1584461853.git.reinette.chatre@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7e08add4be230ebd81569efa1307988d48916d9
Author: James Morse <james.morse@arm.com>
Date:   Fri Feb 21 16:21:05 2020 +0000

    x86/resctrl: Preserve CDP enable over CPU hotplug
    
    commit 9fe0450785abbc04b0ed5d3cf61fcdb8ab656b4b upstream.
    
    Resctrl assumes that all CPUs are online when the filesystem is mounted,
    and that CPUs remember their CDP-enabled state over CPU hotplug.
    
    This goes wrong when resctrl's CDP-enabled state changes while all the
    CPUs in a domain are offline.
    
    When a domain comes online, enable (or disable!) CDP to match resctrl's
    current setting.
    
    Fixes: 5ff193fbde20 ("x86/intel_rdt: Add basic resctrl filesystem support")
    Suggested-by: Reinette Chatre <reinette.chatre@intel.com>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20200221162105.154163-1-james.morse@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9da6458d7f4c24657e8fd5910aad20f4be5acac3
Author: John Allen <john.allen@amd.com>
Date:   Thu Apr 9 10:34:29 2020 -0500

    x86/microcode/AMD: Increase microcode PATCH_MAX_SIZE
    
    commit bdf89df3c54518eed879d8fac7577fcfb220c67e upstream.
    
    Future AMD CPUs will have microcode patches that exceed the default 4K
    patch size. Raise our limit.
    
    Signed-off-by: John Allen <john.allen@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: stable@vger.kernel.org # v4.14..
    Link: https://lkml.kernel.org/r/20200409152931.GA685273@mojo.amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b0d0d8c725e67dc9607bdf38472c154250e7355
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Fri Mar 13 18:06:55 2020 +0100

    scsi: target: fix hang when multiple threads try to destroy the same iscsi session
    
    [ Upstream commit 57c46e9f33da530a2485fa01aa27b6d18c28c796 ]
    
    A number of hangs have been reported against the target driver; they are
    due to the fact that multiple threads may try to destroy the iscsi session
    at the same time. This may be reproduced for example when a "targetcli
    iscsi/iqn.../tpg1 disable" command is executed while a logout operation is
    underway.
    
    When this happens, two or more threads may end up sleeping and waiting for
    iscsit_close_connection() to execute "complete(session_wait_comp)".  Only
    one of the threads will wake up and proceed to destroy the session
    structure, the remaining threads will hang forever.
    
    Note that if the blocked threads are somehow forced to wake up with
    complete_all(), they will try to free the same iscsi session structure
    destroyed by the first thread, causing double frees, memory corruptions
    etc...
    
    With this patch, the threads that want to destroy the iscsi session will
    increase the session refcount and will set the "session_close" flag to 1;
    then they wait for the driver to close the remaining active connections.
    When the last connection is closed, iscsit_close_connection() will wake up
    all the threads and will wait for the session's refcount to reach zero;
    when this happens, iscsit_close_connection() will destroy the session
    structure because no one is referencing it anymore.
    
     INFO: task targetcli:5971 blocked for more than 120 seconds.
           Tainted: P           OE    4.15.0-72-generic #81~16.04.1
     "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
     targetcli       D    0  5971      1 0x00000080
     Call Trace:
      __schedule+0x3d6/0x8b0
      ? vprintk_func+0x44/0xe0
      schedule+0x36/0x80
      schedule_timeout+0x1db/0x370
      ? __dynamic_pr_debug+0x8a/0xb0
      wait_for_completion+0xb4/0x140
      ? wake_up_q+0x70/0x70
      iscsit_free_session+0x13d/0x1a0 [iscsi_target_mod]
      iscsit_release_sessions_for_tpg+0x16b/0x1e0 [iscsi_target_mod]
      iscsit_tpg_disable_portal_group+0xca/0x1c0 [iscsi_target_mod]
      lio_target_tpg_enable_store+0x66/0xe0 [iscsi_target_mod]
      configfs_write_file+0xb9/0x120
      __vfs_write+0x1b/0x40
      vfs_write+0xb8/0x1b0
      SyS_write+0x5c/0xe0
      do_syscall_64+0x73/0x130
      entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    Link: https://lore.kernel.org/r/20200313170656.9716-3-mlombard@redhat.com
    Reported-by: Matt Coleman <mcoleman@datto.com>
    Tested-by: Matt Coleman <mcoleman@datto.com>
    Tested-by: Rahul Kundu <rahul.kundu@chelsio.com>
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b05ecfee5d7f294db728a7f552b11f7e02eb612
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Fri Mar 13 18:06:54 2020 +0100

    scsi: target: remove boilerplate code
    
    [ Upstream commit e49a7d994379278d3353d7ffc7994672752fb0ad ]
    
    iscsit_free_session() is equivalent to iscsit_stop_session() followed by a
    call to iscsit_close_session().
    
    Link: https://lore.kernel.org/r/20200313170656.9716-2-mlombard@redhat.com
    Tested-by: Rahul Kundu <rahul.kundu@chelsio.com>
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe61af1cecbc676d692294f7a2ae41d461cbfa0d
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Dec 13 16:15:15 2019 -0800

    kvm: x86: Host feature SSBD doesn't imply guest feature SPEC_CTRL_SSBD
    
    commit 396d2e878f92ec108e4293f1c77ea3bc90b414ff upstream.
    
    The host reports support for the synthetic feature X86_FEATURE_SSBD
    when any of the three following hardware features are set:
      CPUID.(EAX=7,ECX=0):EDX.SSBD[bit 31]
      CPUID.80000008H:EBX.AMD_SSBD[bit 24]
      CPUID.80000008H:EBX.VIRT_SSBD[bit 25]
    
    Either of the first two hardware features implies the existence of the
    IA32_SPEC_CTRL MSR, but CPUID.80000008H:EBX.VIRT_SSBD[bit 25] does
    not. Therefore, CPUID.(EAX=7,ECX=0):EDX.SSBD[bit 31] should only be
    set in the guest if CPUID.(EAX=7,ECX=0):EDX.SSBD[bit 31] or
    CPUID.80000008H:EBX.AMD_SSBD[bit 24] is set on the host.
    
    Fixes: 0c54914d0c52a ("KVM: x86: use Intel speculation bugs and features as derived in generic x86 code")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Jacob Xu <jacobhxu@google.com>
    Reviewed-by: Peter Shier <pshier@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Reported-by: Eric Biggers <ebiggers@kernel.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 4.x: adjust indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9fc93e7a96c01bafe8345fa95217b80cc40452c
Author: Jan Kara <jack@suse.cz>
Date:   Tue Mar 31 12:50:16 2020 +0200

    ext4: do not zeroout extents beyond i_disksize
    
    commit 801674f34ecfed033b062a0f217506b93c8d5e8a upstream.
    
    We do not want to create initialized extents beyond end of file because
    for e2fsck it is impossible to distinguish them from a case of corrupted
    file size / extent tree and so it complains like:
    
    Inode 12, i_size is 147456, should be 163840.  Fix? no
    
    Code in ext4_ext_convert_to_initialized() and
    ext4_split_convert_extents() try to make sure it does not create
    initialized extents beyond inode size however they check against
    inode->i_size which is wrong. They should instead check against
    EXT4_I(inode)->i_disksize which is the current inode size on disk.
    That's what e2fsck is going to see in case of crash before all dirty
    data is written. This bug manifests as generic/456 test failure (with
    recent enough fstests where fsx got fixed to properly pass
    FALLOC_KEEP_SIZE_FL flags to the kernel) when run with dioread_lock
    mount option.
    
    CC: stable@vger.kernel.org
    Fixes: 21ca087a3891 ("ext4: Do not zero out uninitialized extents beyond i_size")
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20200331105016.8674-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9959d615b715972002ed1ec9961486ded26e2ef4
Author: Sergei Lopatin <magist3r@gmail.com>
Date:   Wed Jun 26 14:56:59 2019 +0500

    drm/amd/powerplay: force the trim of the mclk dpm_levels if OD is enabled
    
    commit 8c7f0a44b4b4ef16df8f44fbaee6d1f5d1593c83 upstream.
    
    Should prevent flicker if PP_OVERDRIVE_MASK is set.
    
    bug: https://bugs.freedesktop.org/show_bug.cgi?id=102646
    bug: https://bugs.freedesktop.org/show_bug.cgi?id=108941
    bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1088
    bug: https://gitlab.freedesktop.org/drm/amd/-/issues/628
    
    Signed-off-by: Sergei Lopatin <magist3r@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c521b7001c2287ddcc192c5babb6264b4a66302c
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Thu Mar 5 13:23:49 2020 -0800

    usb: dwc3: gadget: Don't clear flags before transfer ended
    
    [ Upstream commit a114c4ca64bd522aec1790c7e5c60c882f699d8f ]
    
    We track END_TRANSFER command completion. Don't clear transfer
    started/ended flag prematurely. Otherwise, we'd run into the problem
    with restarting transfer before END_TRANSFER command finishes.
    
    Fixes: 6d8a019614f3 ("usb: dwc3: gadget: check for Missed Isoc from event status")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1eded7ad4d75529d083626719c581282bbaa6c3
Author: Sasha Levin <sashal@kernel.org>
Date:   Sat Apr 18 12:11:16 2020 -0400

    usb: dwc3: gadget: don't enable interrupt when disabling endpoint
    
    [ Upstream commit c5353b225df9b2d0cf881873eef6f680e43c9aa2 ]
    
    Since we're disabling the endpoint anyway, we don't worry about
    getting endpoint command completion interrupt.
    
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit faed49eaa53daa65b4b82e40e2c374774a349211
Author: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
Date:   Fri Apr 10 15:32:57 2020 +0300

    mac80211_hwsim: Use kstrndup() in place of kasprintf()
    
    commit 7ea862048317aa76d0f22334202779a25530980c upstream.
    
    syzbot reports a warning:
    
    precision 33020 too large
    WARNING: CPU: 0 PID: 9618 at lib/vsprintf.c:2471 set_precision+0x150/0x180 lib/vsprintf.c:2471
     vsnprintf+0xa7b/0x19a0 lib/vsprintf.c:2547
     kvasprintf+0xb2/0x170 lib/kasprintf.c:22
     kasprintf+0xbb/0xf0 lib/kasprintf.c:59
     hwsim_del_radio_nl+0x63a/0x7e0 drivers/net/wireless/mac80211_hwsim.c:3625
     genl_family_rcv_msg_doit net/netlink/genetlink.c:672 [inline]
     ...
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Thus it seems that kasprintf() with "%.*s" format can not be used for
    duplicating a string with arbitrary length. Replace it with kstrndup().
    
    Note that later this string is limited to NL80211_WIPHY_NAME_MAXLEN == 64,
    but the code is simpler this way.
    
    Reported-by: syzbot+6693adf1698864d21734@syzkaller.appspotmail.com
    Reported-by: syzbot+a4aee3f42d7584d76761@syzkaller.appspotmail.com
    Cc: stable@kernel.org
    Signed-off-by: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
    Link: https://lore.kernel.org/r/20200410123257.14559-1-tuomas.tynkkynen@iki.fi
    [johannes: add note about length limit]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49d349dddb7e2c253de69246e67cd1671e345d2c
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Apr 2 15:51:18 2020 -0400

    btrfs: check commit root generation in should_ignore_root
    
    commit 4d4225fc228e46948486d8b8207955f0c031b92e upstream.
    
    Previously we would set the reloc root's last snapshot to transid - 1.
    However there was a problem with doing this, and we changed it to
    setting the last snapshot to the generation of the commit node of the fs
    root.
    
    This however broke should_ignore_root().  The assumption is that if we
    are in a generation newer than when the reloc root was created, then we
    would find the reloc root through normal backref lookups, and thus can
    ignore any fs roots we find with an old enough reloc root.
    
    Now that the last snapshot could be considerably further in the past
    than before, we'd end up incorrectly ignoring an fs root.  Thus we'd
    find no nodes for the bytenr we were searching for, and we'd fail to
    relocate anything.  We'd loop through the relocate code again and see
    that there were still used space in that block group, attempt to
    relocate those bytenr's again, fail in the same way, and just loop like
    this forever.  This is tricky in that we have to not modify the fs root
    at all during this time, so we need to have a block group that has data
    in this fs root that is not shared by any other root, which is why this
    has been difficult to reproduce.
    
    Fixes: 054570a1dc94 ("Btrfs: fix relocation incorrectly dropping data references")
    CC: stable@vger.kernel.org # 4.9+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57f2a2ad73e99a7594515848f4da987326a15981
Author: Xiao Yang <yangx.jy@cn.fujitsu.com>
Date:   Tue Apr 14 09:51:45 2020 +0800

    tracing: Fix the race between registering 'snapshot' event trigger and triggering 'snapshot' operation
    
    commit 0bbe7f719985efd9adb3454679ecef0984cb6800 upstream.
    
    Traced event can trigger 'snapshot' operation(i.e. calls snapshot_trigger()
    or snapshot_count_trigger()) when register_snapshot_trigger() has completed
    registration but doesn't allocate buffer for 'snapshot' event trigger.  In
    the rare case, 'snapshot' operation always detects the lack of allocated
    buffer so make register_snapshot_trigger() allocate buffer first.
    
    trigger-snapshot.tc in kselftest reproduces the issue on slow vm:
    -----------------------------------------------------------
    cat trace
    ...
    ftracetest-3028  [002] ....   236.784290: sched_process_fork: comm=ftracetest pid=3028 child_comm=ftracetest child_pid=3036
         <...>-2875  [003] ....   240.460335: tracing_snapshot_instance_cond: *** SNAPSHOT NOT ALLOCATED ***
         <...>-2875  [003] ....   240.460338: tracing_snapshot_instance_cond: *** stopping trace here!   ***
    -----------------------------------------------------------
    
    Link: http://lkml.kernel.org/r/20200414015145.66236-1-yangx.jy@cn.fujitsu.com
    
    Cc: stable@vger.kernel.org
    Fixes: 93e31ffbf417a ("tracing: Add 'snapshot' event trigger command")
    Signed-off-by: Xiao Yang <yangx.jy@cn.fujitsu.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aadc67c974445075a9d0fa525b28eea48aa6220
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Tue Apr 14 21:33:16 2020 +0100

    keys: Fix proc_keys_next to increase position index
    
    commit 86d32f9a7c54ad74f4514d7fef7c847883207291 upstream.
    
    If seq_file .next function does not change position index,
    read after some lseek can generate unexpected output:
    
        $ dd if=/proc/keys bs=1  # full usual output
        0f6bfdf5 I--Q---     2 perm 3f010000  1000  1000 user      4af2f79ab8848d0a: 740
        1fb91b32 I--Q---     3 perm 1f3f0000  1000 65534 keyring   _uid.1000: 2
        27589480 I--Q---     1 perm 0b0b0000     0     0 user      invocation_id: 16
        2f33ab67 I--Q---   152 perm 3f030000     0     0 keyring   _ses: 2
        33f1d8fa I--Q---     4 perm 3f030000  1000  1000 keyring   _ses: 1
        3d427fda I--Q---     2 perm 3f010000  1000  1000 user      69ec44aec7678e5a: 740
        3ead4096 I--Q---     1 perm 1f3f0000  1000 65534 keyring   _uid_ses.1000: 1
        521+0 records in
        521+0 records out
        521 bytes copied, 0,00123769 s, 421 kB/s
    
    But a read after lseek in middle of last line results in the partial
    last line and then a repeat of the final line:
    
        $ dd if=/proc/keys bs=500 skip=1
        dd: /proc/keys: cannot skip to specified offset
        g   _uid_ses.1000: 1
        3ead4096 I--Q---     1 perm 1f3f0000  1000 65534 keyring   _uid_ses.1000: 1
        0+1 records in
        0+1 records out
        97 bytes copied, 0,000135035 s, 718 kB/s
    
    and a read after lseek beyond end of file results in the last line being
    shown:
    
        $ dd if=/proc/keys bs=1000 skip=1   # read after lseek beyond end of file
        dd: /proc/keys: cannot skip to specified offset
        3ead4096 I--Q---     1 perm 1f3f0000  1000 65534 keyring   _uid_ses.1000: 1
        0+1 records in
        0+1 records out
        76 bytes copied, 0,000119981 s, 633 kB/s
    
    See https://bugzilla.kernel.org/show_bug.cgi?id=206283
    
    Fixes: 1f4aace60b0e ("fs/seq_file.c: simplify seq_file iteration code ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44694b4b7f617734fc4f8d8064895408b8af88d1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Apr 12 10:13:31 2020 +0200

    ALSA: usb-audio: Check mapping at creating connector controls, too
    
    commit 934b96594ed66b07dbc7e576d28814466df3a494 upstream.
    
    Add the mapping check to build_connector_control() so that the device
    specific quirk can provide the node to skip for the badly behaving
    connector controls.  As an example, ALC1220-VB-based codec implements
    the skip entry for the broken SPDIF connector detection.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=206873
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200412081331.4742-5-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf998fcff7646cb09c7f88747ccc2507c932a163
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Apr 12 10:13:30 2020 +0200

    ALSA: usb-audio: Don't create jack controls for PCM terminals
    
    commit 7dc3c5a0172e6c0449502103356c3628d05bc0e0 upstream.
    
    Some funky firmwares set the connector flag even on PCM terminals
    although it doesn't make sense (and even actually the firmware doesn't
    react properly!).  Let's skip creation of jack controls in such a
    case.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=206873
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200412081331.4742-4-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de12ffd5bd2ac41e3b76d8f62b4e2a26104a8882
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Apr 12 10:13:29 2020 +0200

    ALSA: usb-audio: Don't override ignore_ctl_error value from the map
    
    commit 3507245b82b4362dc9721cbc328644905a3efa22 upstream.
    
    The mapping table may contain also ignore_ctl_error flag for devices
    that are known to behave wild.  Since this flag always writes the
    card's own ignore_ctl_error flag, it overrides the value already set
    by the module option, so it doesn't follow user's expectation.
    Let's fix the code not to clear the flag that has been set by user.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=206873
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200412081331.4742-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92020913351bee5f9f9daf26e6d296ffacbfc3d0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Apr 12 10:13:28 2020 +0200

    ALSA: usb-audio: Filter error from connector kctl ops, too
    
    commit 48cc42973509afac24e83d6edc23901d102872d1 upstream.
    
    The ignore_ctl_error option should filter the error at kctl accesses,
    but there was an overlook: mixer_ctl_connector_get() returns an error
    from the request.
    
    This patch covers the forgotten code path and apply filter_error()
    properly.  The locking error is still returned since this is a fatal
    error that has to be reported even with ignore_ctl_error option.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=206873
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200412081331.4742-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dc694faafc65b9419c08c76153b6b7e14f2c2e1
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Feb 8 22:07:20 2020 +0000

    ASoC: Intel: mrfld: return error codes when an error occurs
    
    commit 3025571edd9df653e1ad649f0638368a39d1bbb5 upstream.
    
    Currently function sst_platform_get_resources always returns zero and
    error return codes set by the function are never returned. Fix this
    by returning the error return code in variable ret rather than the
    hard coded zero.
    
    Addresses-Coverity: ("Unused value")
    Fixes: f533a035e4da ("ASoC: Intel: mrfld - create separate module for pci part")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20200208220720.36657-1-colin.king@canonical.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b4652dc98abd7ff2c91b263ae6e4ff16463c103
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 19 11:36:40 2019 +0000

    ASoC: Intel: mrfld: fix incorrect check on p->sink
    
    commit f5e056e1e46fcbb5f74ce560792aeb7d57ce79e6 upstream.
    
    The check on p->sink looks bogus, I believe it should be p->source
    since the following code blocks are related to p->source. Fix
    this by replacing p->sink with p->source.
    
    Fixes: 24c8d14192cc ("ASoC: Intel: mrfld: add DSP core controls")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Addresses-Coverity: ("Copy-paste error")
    Link: https://lore.kernel.org/r/20191119113640.166940-1-colin.king@canonical.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c2277dec56e9db317aa33f672e1b5815c008cda
Author: Josh Triplett <josh@joshtriplett.org>
Date:   Sat Mar 28 15:34:15 2020 -0700

    ext4: fix incorrect inodes per group in error message
    
    commit b9c538da4e52a7b79dfcf4cfa487c46125066dfb upstream.
    
    If ext4_fill_super detects an invalid number of inodes per group, the
    resulting error message printed the number of blocks per group, rather
    than the number of inodes per group. Fix it to print the correct value.
    
    Fixes: cd6bb35bf7f6d ("ext4: use more strict checks for inodes_per_block on mount")
    Link: https://lore.kernel.org/r/8be03355983a08e5d4eed480944613454d7e2550.1585434649.git.josh@joshtriplett.org
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Josh Triplett <josh@joshtriplett.org>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba7e6ac99a41acbfba11aa1cc8139216154564dd
Author: Josh Triplett <josh@joshtriplett.org>
Date:   Sat Mar 28 14:54:01 2020 -0700

    ext4: fix incorrect group count in ext4_fill_super error message
    
    commit df41460a21b06a76437af040d90ccee03888e8e5 upstream.
    
    ext4_fill_super doublechecks the number of groups before mounting; if
    that check fails, the resulting error message prints the group count
    from the ext4_sb_info sbi, which hasn't been set yet. Print the freshly
    computed group count instead (which at that point has just been computed
    in "blocks_count").
    
    Signed-off-by: Josh Triplett <josh@joshtriplett.org>
    Fixes: 4ec1102813798 ("ext4: Add sanity checks for the superblock before mounting the filesystem")
    Link: https://lore.kernel.org/r/8b957cd1513fcc4550fe675c10bcce2175c33a49.1585431964.git.josh@joshtriplett.org
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90e5b27cebf8aa65550d6abfbfe1a83962aa68c2
Author: Sven Van Asbroeck <TheSven73@gmail.com>
Date:   Wed Apr 1 19:01:06 2020 +0200

    pwm: pca9685: Fix PWM/GPIO inter-operation
    
    commit 9cc5f232a4b6a0ef6e9b57876d61b88f61bdd7c2 upstream.
    
    This driver allows pwms to be requested as gpios via gpiolib. Obviously,
    it should not be allowed to request a GPIO when its corresponding PWM is
    already requested (and vice versa). So it requires some exclusion code.
    
    Given that the PWMm and GPIO cores are not synchronized with respect to
    each other, this exclusion code will also require proper
    synchronization.
    
    Such a mechanism was in place, but was inadvertently removed by Uwe's
    clean-up in commit e926b12c611c ("pwm: Clear chip_data in pwm_put()").
    
    Upon revisiting the synchronization mechanism, we found that
    theoretically, it could allow two threads to successfully request
    conflicting PWMs/GPIOs.
    
    Replace with a bitmap which tracks PWMs in-use, plus a mutex. As long as
    PWM and GPIO's respective request/free functions modify the in-use
    bitmap while holding the mutex, proper synchronization will be
    guaranteed.
    
    Reported-by: YueHaibing <yuehaibing@huawei.com>
    Fixes: e926b12c611c ("pwm: Clear chip_data in pwm_put()")
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Cc: YueHaibing <yuehaibing@huawei.com>
    Link: https://lkml.org/lkml/2019/5/31/963
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    [cg: Tested on an i.MX6Q board with two NXP PCA9685 chips]
    Tested-by: Clemens Gruber <clemens.gruber@pqgruber.com>
    Reviewed-by: Sven Van Asbroeck <TheSven73@gmail.com> # cg's rebase
    Link: https://lore.kernel.org/lkml/20200330160238.GD2817345@ulmo/
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 468b2ae919fb65aabe6343b6f994a45155ad3a81
Author: zhangyi (F) <yi.zhang@huawei.com>
Date:   Mon Feb 17 19:27:06 2020 +0800

    jbd2: improve comments about freeing data buffers whose page mapping is NULL
    
    commit 780f66e59231fcf882f36c63f287252ee47cc75a upstream.
    
    Improve comments in jbd2_journal_commit_transaction() to describe why
    we don't need to clear the buffer_mapped bit for freeing file mapping
    buffers whose page mapping is NULL.
    
    Link: https://lore.kernel.org/r/20200217112706.20085-1-yi.zhang@huawei.com
    Fixes: c96dceeabf76 ("jbd2: do not clear the BH_Mapped flag when forgetting a metadata buffer")
    Suggested-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: zhangyi (F) <yi.zhang@huawei.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d1a9c08b0101a388197e788e5e5ee4e01f34a25
Author: Can Guo <cang@codeaurora.org>
Date:   Mon Feb 10 19:40:48 2020 -0800

    scsi: ufs: Fix ufshcd_hold() caused scheduling while atomic
    
    commit c63d6099a7959ecc919b2549dc6b71f53521f819 upstream.
    
    The async version of ufshcd_hold(async == true), which is only called in
    queuecommand path as for now, is expected to work in atomic context, thus
    it should not sleep or schedule out. When it runs into the condition that
    clocks are ON but link is still in hibern8 state, it should bail out
    without flushing the clock ungate work.
    
    Fixes: f2a785ac2312 ("scsi: ufshcd: Fix race between clk scaling and ungate work")
    Link: https://lore.kernel.org/r/1581392451-28743-6-git-send-email-cang@codeaurora.org
    Reviewed-by: Hongwu Su <hongwus@codeaurora.org>
    Reviewed-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93ae5fdf21cd89a48c0cf8cf03cc9bb1c6790aa6
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Tue Nov 19 15:36:14 2019 +0200

    ovl: fix value of i_ino for lower hardlink corner case
    
    commit 300b124fcf6ad2cd99a7b721e0f096785e0a3134 upstream.
    
    Commit 6dde1e42f497 ("ovl: make i_ino consistent with st_ino in more
    cases"), relaxed the condition nfs_export=on in order to set the value of
    i_ino to xino map of real ino.
    
    Specifically, it also relaxed the pre-condition that index=on for
    consistent i_ino. This opened the corner case of lower hardlink in
    ovl_get_inode(), which calls ovl_fill_inode() with ino=0 and then
    ovl_init_inode() is called to set i_ino to lower real ino without the xino
    mapping.
    
    Pass the correct values of ino;fsid in this case to ovl_fill_inode(), so it
    can initialize i_ino correctly.
    
    Fixes: 6dde1e42f497 ("ovl: make i_ino consistent with st_ino in more ...")
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2624363ef0e16afa9f8f618f6744ec6883b76c3
Author: DENG Qingfang <dqfext@gmail.com>
Date:   Tue Apr 14 14:34:08 2020 +0800

    net: dsa: mt7530: fix tagged frames pass-through in VLAN-unaware mode
    
    [ Upstream commit e045124e93995fe01e42ed530003ddba5d55db4f ]
    
    In VLAN-unaware mode, the Egress Tag (EG_TAG) field in Port VLAN
    Control register must be set to Consistent to let tagged frames pass
    through as is, otherwise their tags will be stripped.
    
    Fixes: 83163f7dca56 ("net: dsa: mediatek: add VLAN support for MT7530")
    Signed-off-by: DENG Qingfang <dqfext@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: René van Dorst <opensource@vdorst.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffc2d31f22c94b02c0cb86e5866c6e0ae7ecc49b
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Apr 14 15:39:52 2020 -0700

    net: stmmac: dwmac-sunxi: Provide TX and RX fifo sizes
    
    [ Upstream commit 806fd188ce2a4f8b587e83e73c478e6484fbfa55 ]
    
    After commit bfcb813203e619a8960a819bf533ad2a108d8105 ("net: dsa:
    configure the MTU for switch ports") my Lamobo R1 platform which uses
    an allwinner,sun7i-a20-gmac compatible Ethernet MAC started to fail
    by rejecting a MTU of 1536. The reason for that is that the DMA
    capabilities are not readable on this version of the IP, and there
    is also no 'tx-fifo-depth' property being provided in Device Tree. The
    property is documented as optional, and is not provided.
    
    Chen-Yu indicated that the FIFO sizes are 4KB for TX and 16KB for RX, so
    provide these values through platform data as an immediate fix until
    various Device Tree sources get updated accordingly.
    
    Fixes: eaf4fac47807 ("net: stmmac: Do not accept invalid MTU values")
    Suggested-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7379c0050d2bfb65e44b340f1d667254dcc3058
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Mon Apr 6 14:39:32 2020 +0300

    net: revert default NAPI poll timeout to 2 jiffies
    
    [ Upstream commit a4837980fd9fa4c70a821d11831698901baef56b ]
    
    For HZ < 1000 timeout 2000us rounds up to 1 jiffy but expires randomly
    because next timer interrupt could come shortly after starting softirq.
    
    For commonly used CONFIG_HZ=1000 nothing changes.
    
    Fixes: 7acf8a1e8a28 ("Replace 2 jiffies with sysctl netdev_budget_usecs to enable softirq tuning")
    Reported-by: Dmitry Yakunin <zeil@yandex-team.ru>
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c08e523e1507824733f4d5670e1717b52b3d8255
Author: Wang Wenhu <wenhu.wang@vivo.com>
Date:   Wed Apr 8 19:53:53 2020 -0700

    net: qrtr: send msgs from local of same id as broadcast
    
    [ Upstream commit 6dbf02acef69b0742c238574583b3068afbd227c ]
    
    If the local node id(qrtr_local_nid) is not modified after its
    initialization, it equals to the broadcast node id(QRTR_NODE_BCAST).
    So the messages from local node should not be taken as broadcast
    and keep the process going to send them out anyway.
    
    The definitions are as follow:
    static unsigned int qrtr_local_nid = NUMA_NO_NODE;
    
    Fixes: fdf5fd397566 ("net: qrtr: Broadcast messages only from control port")
    Signed-off-by: Wang Wenhu <wenhu.wang@vivo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fdf8a84ea68fff914f137169e20aba95978a7af
Author: Tim Stallard <code@timstallard.me.uk>
Date:   Fri Apr 3 21:26:21 2020 +0100

    net: ipv6: do not consider routes via gateways for anycast address check
    
    [ Upstream commit 03e2a984b6165621f287fadf5f4b5cd8b58dcaba ]
    
    The behaviour for what is considered an anycast address changed in
    commit 45e4fd26683c ("ipv6: Only create RTF_CACHE routes after
    encountering pmtu exception"). This now considers the first
    address in a subnet where there is a route via a gateway
    to be an anycast address.
    
    This breaks path MTU discovery and traceroutes when a host in a
    remote network uses the address at the start of a prefix
    (eg 2600:: advertised as 2600::/48 in the DFZ) as ICMP errors
    will not be sent to anycast addresses.
    
    This patch excludes any routes with a gateway, or via point to
    point links, like the behaviour previously from
    rt6_is_gw_or_nonexthop in net/ipv6/route.c.
    
    This can be tested with:
    ip link add v1 type veth peer name v2
    ip netns add test
    ip netns exec test ip link set lo up
    ip link set v2 netns test
    ip link set v1 up
    ip netns exec test ip link set v2 up
    ip addr add 2001:db8::1/64 dev v1 nodad
    ip addr add 2001:db8:100:: dev lo nodad
    ip netns exec test ip addr add 2001:db8::2/64 dev v2 nodad
    ip netns exec test ip route add unreachable 2001:db8:1::1
    ip netns exec test ip route add 2001:db8:100::/64 via 2001:db8::1
    ip netns exec test sysctl net.ipv6.conf.all.forwarding=1
    ip route add 2001:db8:1::1 via 2001:db8::2
    ping -I 2001:db8::1 2001:db8:1::1 -c1
    ping -I 2001:db8:100:: 2001:db8:1::1 -c1
    ip addr delete 2001:db8:100:: dev lo
    ip netns delete test
    
    Currently the first ping will get back a destination unreachable ICMP
    error, but the second will never get a response, with "icmp6_send:
    acast source" logged. After this patch, both get destination
    unreachable ICMP replies.
    
    Fixes: 45e4fd26683c ("ipv6: Only create RTF_CACHE routes after encountering pmtu exception")
    Signed-off-by: Tim Stallard <code@timstallard.me.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80dd8146df680b8982b659341b8ecd3361f032ca
Author: Taras Chornyi <taras.chornyi@plvision.eu>
Date:   Thu Apr 9 20:25:24 2020 +0300

    net: ipv4: devinet: Fix crash when add/del multicast IP with autojoin
    
    [ Upstream commit 690cc86321eb9bcee371710252742fb16fe96824 ]
    
    When CONFIG_IP_MULTICAST is not set and multicast ip is added to the device
    with autojoin flag or when multicast ip is deleted kernel will crash.
    
    steps to reproduce:
    
    ip addr add 224.0.0.0/32 dev eth0
    ip addr del 224.0.0.0/32 dev eth0
    
    or
    
    ip addr add 224.0.0.0/32 dev eth0 autojoin
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000088
     pc : _raw_write_lock_irqsave+0x1e0/0x2ac
     lr : lock_sock_nested+0x1c/0x60
     Call trace:
      _raw_write_lock_irqsave+0x1e0/0x2ac
      lock_sock_nested+0x1c/0x60
      ip_mc_config.isra.28+0x50/0xe0
      inet_rtm_deladdr+0x1a8/0x1f0
      rtnetlink_rcv_msg+0x120/0x350
      netlink_rcv_skb+0x58/0x120
      rtnetlink_rcv+0x14/0x20
      netlink_unicast+0x1b8/0x270
      netlink_sendmsg+0x1a0/0x3b0
      ____sys_sendmsg+0x248/0x290
      ___sys_sendmsg+0x80/0xc0
      __sys_sendmsg+0x68/0xc0
      __arm64_sys_sendmsg+0x20/0x30
      el0_svc_common.constprop.2+0x88/0x150
      do_el0_svc+0x20/0x80
     el0_sync_handler+0x118/0x190
      el0_sync+0x140/0x180
    
    Fixes: 93a714d6b53d ("multicast: Extend ip address command to enable multicast group join/leave on")
    Signed-off-by: Taras Chornyi <taras.chornyi@plvision.eu>
    Signed-off-by: Vadym Kochan <vadym.kochan@plvision.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32759da24e5e420bb7cfbdd4833d0e4b278dbbf3
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Tue Apr 7 13:23:21 2020 +0000

    hsr: check protocol version in hsr_newlink()
    
    [ Upstream commit 4faab8c446def7667adf1f722456c2f4c304069c ]
    
    In the current hsr code, only 0 and 1 protocol versions are valid.
    But current hsr code doesn't check the version, which is received by
    userspace.
    
    Test commands:
        ip link add dummy0 type dummy
        ip link add dummy1 type dummy
        ip link add hsr0 type hsr slave1 dummy0 slave2 dummy1 version 4
    
    In the test commands, version 4 is invalid.
    So, the command should be failed.
    
    After this patch, following error will occur.
    "Error: hsr: Only versions 0..1 are supported."
    
    Fixes: ee1c27977284 ("net/hsr: Added support for HSR v1")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10cea886f08910092732bc580e2319557fd8bef3
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Apr 16 17:57:40 2020 +0200

    amd-xgbe: Use __napi_schedule() in BH context
    
    [ Upstream commit d518691cbd3be3dae218e05cca3f3fc9b2f1aa77 ]
    
    The driver uses __napi_schedule_irqoff() which is fine as long as it is
    invoked with disabled interrupts by everybody. Since the commit
    mentioned below the driver may invoke xgbe_isr_task() in tasklet/softirq
    context. This may lead to list corruption if another driver uses
    __napi_schedule_irqoff() in IRQ context.
    
    Use __napi_schedule() which safe to use from IRQ and softirq context.
    
    Fixes: 85b85c853401d ("amd-xgbe: Re-issue interrupt if interrupt status not cleared")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
