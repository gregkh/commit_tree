commit 6a83eb2354543e3263b880eb822c4b0993a2236b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 3 10:23:29 2018 +0100

    Linux 4.9.86

commit b5075ee58c788c14697993e21af9ef87a524e0e7
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Dec 7 07:20:46 2017 +0000

    MIPS: Implement __multi3 for GCC7 MIPS64r6 builds
    
    commit ebabcf17bcd7ce968b1631ebe08236275698f39b upstream.
    
    GCC7 is a bit too eager to generate suboptimal __multi3 calls (128bit
    multiply with 128bit result) for MIPS64r6 builds, even in code which
    doesn't explicitly use 128bit types, such as the following:
    
    unsigned long func(unsigned long a, unsigned long b)
    {
            return a > (~0UL) / b;
    }
    
    Which GCC rearanges to:
    
    return (unsigned __int128)a * (unsigned __int128)b > 0xffffffffffffffff;
    
    Therefore implement __multi3, but only for MIPS64r6 with GCC7 as under
    normal circumstances we wouldn't expect any calls to __multi3 to be
    generated from kernel code.
    
    Reported-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Tested-by: Waldemar Brodkorb <wbx@openadk.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Maciej W. Rozycki <macro@mips.com>
    Cc: Matthew Fortune <matthew.fortune@mips.com>
    Cc: Florian Fainelli <florian@openwrt.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17890/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25039c139fdefd660b3a8ecfd001919fc3ced92d
Author: Punit Agrawal <punitagrawal@gmail.com>
Date:   Wed Feb 28 16:40:09 2018 +0000

    KVM: arm/arm64: Fix check for hugepage size when allocating at Stage 2
    
    Commit 45ee9d5e97a4 ("KVM: arm/arm64: Check pagesize when allocating a
    hugepage at Stage 2") lost the check for PMD_SIZE during the backport
    to 4.9.
    
    Fix this by correcting the condition to detect hugepages during stage
    2 allocation.
    
    Fixes: 45ee9d5e97a4 ("KVM: arm/arm64: Check pagesize when allocating a hugepage at Stage 2")
    Reported-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eb222174ee8b6280e552f71ed68f890bbbdc437
Author: Yangbo Lu <yangbo.lu@nxp.com>
Date:   Tue Jan 9 11:02:33 2018 +0800

    net: gianfar_ptp: move set_fipers() to spinlock protecting area
    
    
    [ Upstream commit 11d827a993a969c3c6ec56758ff63a44ba19b466 ]
    
    set_fipers() calling should be protected by spinlock in
    case that any interrupt breaks related registers setting
    and the function we expect. This patch is to move set_fipers()
    to spinlock protecting area in ptp_gianfar_adjtime().
    
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b923c86a7c6b63c0bdb410c667038e906a6c3e24
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jan 8 19:02:29 2018 -0200

    sctp: make use of pre-calculated len
    
    
    [ Upstream commit c76f97c99ae6d26d14c7f0e50e074382bfbc9f98 ]
    
    Some sockopt handling functions were calculating the length of the
    buffer to be written to userspace and then calculating it again when
    actually writing the buffer, which could lead to some write not using
    an up-to-date length.
    
    This patch updates such places to just make use of the len variable.
    
    Also, replace some sizeof(type) to sizeof(var).
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c65c0dfb27914e141be8193d509fcd4e6387d13c
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:22 2018 +0000

    xen/gntdev: Fix partial gntdev_mmap() cleanup
    
    
    [ Upstream commit cf2acf66ad43abb39735568f55e1f85f9844e990 ]
    
    When cleaning up after a partially successful gntdev_mmap(), unmap the
    successfully mapped grant pages otherwise Xen will kill the domain if
    in debug mode (Attempt to implicitly unmap a granted PTE) or Linux will
    kill the process and emit "BUG: Bad page map in process" if Xen is in
    release mode.
    
    This is only needed when use_ptemod is true because gntdev_put_map()
    will unmap grant pages itself when use_ptemod is false.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beaa7d1cea2debe0882c51639d463d3eb987804a
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:21 2018 +0000

    xen/gntdev: Fix off-by-one error when unmapping with holes
    
    
    [ Upstream commit 951a010233625b77cde3430b4b8785a9a22968d1 ]
    
    If the requested range has a hole, the calculation of the number of
    pages to unmap is off by one. Fix it.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bb81106a113b202e843ffb7d572033eb36cfe01
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Jan 6 21:53:26 2018 +0300

    SolutionEngine771x: fix Ether platform data
    
    
    [ Upstream commit 195e2addbce09e5afbc766efc1e6567c9ce840d3 ]
    
    The 'sh_eth' driver's probe() method would fail  on the SolutionEngine7710
    board and crash on SolutionEngine7712 board  as the platform code is
    hopelessly behind the driver's platform data --  it passes the PHY address
    instead of 'struct sh_eth_plat_data *'; pass the latter to the driver in
    order to fix the bug...
    
    Fixes: 71557a37adb5 ("[netdrvr] sh_eth: Add SH7619 support")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7086ec8f0e63792ed25398d165a9f603b64e9853
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 6 09:00:09 2018 +0100

    mdio-sun4i: Fix a memory leak
    
    
    [ Upstream commit 56c0290202ab94a2f2780c449395d4ae8495fab4 ]
    
    If the probing of the regulator is deferred, the memory allocated by
    'mdiobus_alloc_size()' will be leaking.
    It should be freed before the next call to 'sun4i_mdio_probe()' which will
    reallocate it.
    
    Fixes: 4bdcb1dd9feb ("net: Add MDIO bus driver for the Allwinner EMAC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cded2e6f1660449e34c8bd6740614ee35e6ebf23
Author: Eduardo Otubo <otubo@redhat.com>
Date:   Fri Jan 5 09:42:16 2018 +0100

    xen-netfront: enable device after manual module load
    
    
    [ Upstream commit b707fda2df4070785d0fa8a278aa13944c5f51f8 ]
    
    When loading the module after unloading it, the network interface would
    not be enabled and thus wouldn't have a backend counterpart and unable
    to be used by the guest.
    
    The guest would face errors like:
    
      [root@guest ~]# ethtool -i eth0
      Cannot get driver information: No such device
    
      [root@guest ~]# ifconfig eth0
      eth0: error fetching interface information: Device not found
    
    This patch initializes the state of the netfront device whenever it is
    loaded manually, this state would communicate the netback to create its
    device and establish the connection between them.
    
    Signed-off-by: Eduardo Otubo <otubo@redhat.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fd874142d3091d3116f5015753ca4fe4c078a06
Author: Venkat Duvvuru <venkatkumar.duvvuru@broadcom.com>
Date:   Thu Jan 4 18:46:55 2018 -0500

    bnxt_en: Fix the 'Invalid VF' id check in bnxt_vf_ndo_prep routine.
    
    
    [ Upstream commit 78f300049335ae81a5cc6b4b232481dc5e1f9d41 ]
    
    In bnxt_vf_ndo_prep (which is called by bnxt_get_vf_config ndo), there is a
    check for "Invalid VF id". Currently, the check is done against max_vfs.
    However, the user doesn't always create max_vfs. So, the check should be
    against the created number of VFs. The number of bnxt_vf_info structures
    that are allocated in bnxt_alloc_vf_resources routine is the "number of
    requested VFs". So, if an "invalid VF id" falls between the requested
    number of VFs and the max_vfs, the driver will be dereferencing an invalid
    pointer.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Venkat Devvuru <venkatkumar.duvvuru@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9137deb6cf4829194c9a01b272a17ff3fd1ddfe8
Author: Luu An Phu <phu.luuan@nxp.com>
Date:   Tue Jan 2 10:44:18 2018 +0700

    can: flex_can: Correct the checking for frame length in flexcan_start_xmit()
    
    
    [ Upstream commit 13454c14550065fcc1705d6bd4ee6d40e057099f ]
    
    The flexcan_start_xmit() function compares the frame length with data
    register length to write frame content into data[0] and data[1]
    register. Data register length is 4 bytes and frame maximum length is 8
    bytes.
    
    Fix the check that compares frame length with 3. Because the register
    length is 4.
    
    Signed-off-by: Luu An Phu <phu.luuan@nxp.com>
    Reviewed-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58c4ee842b30b7d6feac4c098949a11f42706579
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Jan 4 15:51:53 2018 +0100

    mac80211: mesh: drop frames appearing to be from us
    
    
    [ Upstream commit 736a80bbfda709fb3631f5f62056f250a38e5804 ]
    
    If there are multiple mesh stations with the same MAC address,
    they will both get confused and start throwing warnings.
    
    Obviously in this case nothing can actually work anyway, so just
    drop frames that look like they're from ourselves early on.
    
    Reported-by: Gui Iribarren <gui@altermundi.net>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ec2b1ca93d8cd1b1ea7cc6fd4eb5c5a362e127e
Author: Hao Chen <flank3rsky@gmail.com>
Date:   Wed Jan 3 11:00:31 2018 +0800

    nl80211: Check for the required netlink attribute presence
    
    
    [ Upstream commit 3ea15452ee85754f70f3b9fa1f23165ef2e77ba7 ]
    
    nl80211_nan_add_func() does not check if the required attribute
    NL80211_NAN_FUNC_FOLLOW_UP_DEST is present when processing
    NL80211_CMD_ADD_NAN_FUNCTION request. This request can be issued
    by users with CAP_NET_ADMIN privilege and may result in NULL dereference
    and a system crash. Add a check for the required attribute presence.
    
    Signed-off-by: Hao Chen <flank3rsky@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd80cb0be131daee2f9fd7862de52fa430f01370
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Fri Dec 8 10:55:04 2017 -0800

    i40e/i40evf: Account for frags split over multiple descriptors in check linearize
    
    
    [ Upstream commit 248de22e638f10bd5bfc7624a357f940f66ba137 ]
    
    The original code for __i40e_chk_linearize didn't take into account the
    fact that if a fragment is 16K in size or larger it has to be split over 2
    descriptors and the smaller of those 2 descriptors will be on the trailing
    edge of the transmit. As a result we can get into situations where we didn't
    catch requests that could result in a Tx hang.
    
    This patch takes care of that by subtracting the length of all but the
    trailing edge of the stale fragment before we test for sum. By doing this
    we can guarantee that we have all cases covered, including the case of a
    fragment that spans multiple descriptors. We don't need to worry about
    checking the inner portions of this since 12K is the maximum aligned DMA
    size and that is larger than any MSS will ever be since the MTU limit for
    jumbos is something on the order of 9K.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26f6873540606daf83536130714471155bcede38
Author: Felix Janda <felix.janda@posteo.de>
Date:   Mon Jan 1 19:33:20 2018 +0100

    uapi libc compat: add fallback for unsupported libcs
    
    
    [ Upstream commit c0bace798436bca0fdc221ff61143f1376a9c3de ]
    
    libc-compat.h aims to prevent symbol collisions between uapi and libc
    headers for each supported libc. This requires continuous coordination
    between them.
    
    The goal of this commit is to improve the situation for libcs (such as
    musl) which are not yet supported and/or do not wish to be explicitly
    supported, while not affecting supported libcs. More precisely, with
    this commit, unsupported libcs can request the suppression of any
    specific uapi definition by defining the correspondings _UAPI_DEF_*
    macro as 0. This can fix symbol collisions for them, as long as the
    libc headers are included before the uapi headers. Inclusion in the
    other order is outside the scope of this commit.
    
    All infrastructure in order to enable this fallback for unsupported
    libcs is already in place, except that libc-compat.h unconditionally
    defines all _UAPI_DEF_* macros to 1 for all unsupported libcs so that
    any previous definitions are ignored. In order to fix this, this commit
    merely makes these definitions conditional.
    
    This commit together with the musl libc commit
    
    http://git.musl-libc.org/cgit/musl/commit/?id=04983f2272382af92eb8f8838964ff944fbb8258
    
    fixes for example the following compiler errors when <linux/in6.h> is
    included after musl's <netinet/in.h>:
    
    ./linux/in6.h:32:8: error: redefinition of 'struct in6_addr'
    ./linux/in6.h:49:8: error: redefinition of 'struct sockaddr_in6'
    ./linux/in6.h:59:8: error: redefinition of 'struct ipv6_mreq'
    
    The comments referencing glibc are still correct, but this file is not
    only used for glibc any more.
    
    Signed-off-by: Felix Janda <felix.janda@posteo.de>
    Reviewed-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a26db8cf2e952016dd470d02cbf2fa7f886ff29
Author: Xiongwei Song <sxwjean@gmail.com>
Date:   Tue Jan 2 21:24:55 2018 +0800

    drm/ttm: check the return value of kzalloc
    
    
    [ Upstream commit 19d859a7205bc59ffc38303eb25ae394f61d21dc ]
    
    In the function ttm_page_alloc_init, kzalloc call is made for variable
    _manager, we need to check its return value, it may return NULL.
    
    Signed-off-by: Xiongwei Song <sxwjean@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4b73c1224de87d677dd5dc6fae8bc9e5b4849b3
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Fri Dec 29 17:02:17 2017 +0800

    NET: usb: qmi_wwan: add support for YUGA CLM920-NC5 PID 0x9625
    
    
    [ Upstream commit bd30ffc414e55194ed6149fad69a145550cb7c18 ]
    
    This patch adds support for PID 0x9625 of YUGA CLM920-NC5.
    
    YUGA CLM920-NC5 needs to enable QMI_WWAN_QUIRK_DTR before QMI operation.
    
    qmicli -d /dev/cdc-wdm0 -p --dms-get-revision
    [/dev/cdc-wdm0] Device revision retrieved:
            Revision: 'CLM920_NC5-V1  1  [Oct 23 2016 19:00:00]'
    
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 125ca9316b2bdc4c6a1b07751211e1b56683ad89
Author: Tushar Dave <tushar.n.dave@oracle.com>
Date:   Wed Dec 6 02:26:29 2017 +0530

    e1000: fix disabling already-disabled warning
    
    
    [ Upstream commit 0b76aae741abb9d16d2c0e67f8b1e766576f897d ]
    
    This patch adds check so that driver does not disable already
    disabled device.
    
    [   44.637743] advantechwdt: Unexpected close, not stopping watchdog!
    [   44.997548] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input6
    [   45.013419] e1000 0000:00:03.0: disabling already-disabled device
    [   45.013447] ------------[ cut here ]------------
    [   45.014868] WARNING: CPU: 1 PID: 71 at drivers/pci/pci.c:1641 pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.016171] CPU: 1 PID: 71 Comm: rcu_perf_shutdo Not tainted 4.14.0-01330-g3c07399 #1
    [   45.017197] task: ffff88011bee9e40 task.stack: ffffc90000860000
    [   45.017987] RIP: 0010:pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.018603] RSP: 0000:ffffc90000863e30 EFLAGS: 00010286
    [   45.019282] RAX: 0000000000000035 RBX: ffff88013a230008 RCX: 0000000000000000
    [   45.020182] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000203
    [   45.021084] RBP: ffff88013a3f31e8 R08: 0000000000000001 R09: 0000000000000000
    [   45.021986] R10: ffffffff827ec29c R11: 0000000000000002 R12: 0000000000000001
    [   45.022946] R13: ffff88013a230008 R14: ffff880117802b20 R15: ffffc90000863e8f
    [   45.023842] FS:  0000000000000000(0000) GS:ffff88013fd00000(0000) knlGS:0000000000000000
    [   45.024863] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   45.025583] CR2: ffffc900006d4000 CR3: 000000000220f000 CR4: 00000000000006a0
    [   45.026478] Call Trace:
    [   45.026811]  __e1000_shutdown+0x1d4/0x1e2:
                                                    __e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5162
    [   45.027344]  ? rcu_perf_cleanup+0x2a1/0x2a1:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:627
    [   45.027883]  e1000_shutdown+0x14/0x3a:
                                                    e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5235
    [   45.028351]  device_shutdown+0x110/0x1aa:
                                                    device_shutdown at drivers/base/core.c:2807
    [   45.028858]  kernel_power_off+0x31/0x64:
                                                    kernel_power_off at kernel/reboot.c:260
    [   45.029343]  rcu_perf_shutdown+0x9b/0xa7:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:637
    [   45.029852]  ? __wake_up_common_lock+0xa2/0xa2:
                                                    autoremove_wake_function at kernel/sched/wait.c:376
    [   45.030414]  kthread+0x126/0x12e:
                                                    kthread at kernel/kthread.c:233
    [   45.030834]  ? __kthread_bind_mask+0x8e/0x8e:
                                                    kthread at kernel/kthread.c:190
    [   45.031399]  ? ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.031883]  ? kernel_init+0xa/0xf5:
                                                    kernel_init at init/main.c:997
    [   45.032325]  ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.032777] Code: 00 48 85 ed 75 07 48 8b ab a8 00 00 00 48 8d bb 98 00 00 00 e8 aa d1 11 00 48 89 ea 48 89 c6 48 c7 c7 d8 e4 0b 82 e8 55 7d da ff <0f> ff b9 01 00 00 00 31 d2 be 01 00 00 00 48 c7 c7 f0 b1 61 82
    [   45.035222] ---[ end trace c257137b1b1976ef ]---
    [   45.037838] ACPI: Preparing to enter system sleep state S5
    
    Signed-off-by: Tushar Dave <tushar.n.dave@oracle.com>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88f72bd9f99fc2315acfde7a15a1a8eecb154bcb
Author: Gao Feng <gfree.wind@vip.163.com>
Date:   Tue Dec 26 21:44:32 2017 +0800

    macvlan: Fix one possible double free
    
    
    [ Upstream commit d02fd6e7d2933ede6478a15f9e4ce8a93845824e ]
    
    Because the macvlan_uninit would free the macvlan port, so there is one
    double free case in macvlan_common_newlink. When the macvlan port is just
    created, then register_netdevice or netdev_upper_dev_link failed and they
    would invoke macvlan_uninit. Then it would reach the macvlan_port_destroy
    which triggers the double free.
    
    Signed-off-by: Gao Feng <gfree.wind@vip.163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c33d49420c5cdab3420a9516a04b988cb65ee9ad
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: check result of register_shrinker()
    
    
    [ Upstream commit 3a3882ff26fbdbaf5f7e13f6a0bccfbf7121041d ]
    
    xfs_qm_init_quotainfo() does not check result of register_shrinker()
    which was tagged as __must_check recently, reported by sparse.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    [darrick: move xfs_qm_destroy_quotainos nearer xfs_qm_init_quotainos]
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 799948750c137513c2976f62a7345f424245234b
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: fix missed destroy of qi_tree_lock
    
    
    [ Upstream commit 2196881566225f3c3428d1a5f847a992944daa5b ]
    
    xfs_qm_destroy_quotainfo() does not destroy quotainfo->qi_tree_lock
    while destroys quotainfo->qi_quotaofflock.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab43aaa00d52d644957a8e1e9b89d94ee304a6c8
Author: Erez Shitrit <erezsh@mellanox.com>
Date:   Sun Dec 31 15:33:15 2017 +0200

    IB/ipoib: Fix race condition in neigh creation
    
    
    [ Upstream commit 16ba3defb8bd01a9464ba4820a487f5b196b455b ]
    
    When using enhanced mode for IPoIB, two threads may execute xmit in
    parallel to two different TX queues while the target is the same.
    In this case, both of them will add the same neighbor to the path's
    neigh link list and we might see the following message:
    
      list_add double add: new=ffff88024767a348, prev=ffff88024767a348...
      WARNING: lib/list_debug.c:31__list_add_valid+0x4e/0x70
      ipoib_start_xmit+0x477/0x680 [ib_ipoib]
      dev_hard_start_xmit+0xb9/0x3e0
      sch_direct_xmit+0xf9/0x250
      __qdisc_run+0x176/0x5d0
      __dev_queue_xmit+0x1f5/0xb10
      __dev_queue_xmit+0x55/0xb10
    
    Analysis:
    Two SKB are scheduled to be transmitted from two cores.
    In ipoib_start_xmit, both gets NULL when calling ipoib_neigh_get.
    Two calls to neigh_add_path are made. One thread takes the spin-lock
    and calls ipoib_neigh_alloc which creates the neigh structure,
    then (after the __path_find) the neigh is added to the path's neigh
    link list. When the second thread enters the critical section it also
    calls ipoib_neigh_alloc but in this case it gets the already allocated
    ipoib_neigh structure, which is already linked to the path's neigh
    link list and adds it again to the list. Which beside of triggering
    the list, it creates a loop in the linked list. This loop leads to
    endless loop inside path_rec_completion.
    
    Solution:
    Check list_empty(&neigh->list) before adding to the list.
    Add a similar fix in "ipoib_multicast.c::ipoib_mcast_send"
    
    Fixes: b63b70d87741 ('IPoIB: Use a private hash table for path lookup in xmit path')
    Signed-off-by: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb426a4888216e9fadc75f7fc7f5a560c885aa0d
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Dec 31 15:33:14 2017 +0200

    IB/mlx4: Fix mlx4_ib_alloc_mr error flow
    
    
    [ Upstream commit 5a371cf87e145b86efd32007e46146e78c1eff6d ]
    
    ibmr.device is being set only after ib_alloc_mr() is successfully complete.
    Therefore, in case imlx4_mr_enable() returns with error, the error flow
    unwinder calls to mlx4_free_priv_pages(), which uses ibmr.device.
    
    Such usage causes to NULL dereference oops and to fix it, the IB device
    should be set in the mr struct earlier stage (e.g. prior to calling
    mlx4_free_priv_pages()).
    
    Fixes: 1b2cd0fc673c ("IB/mlx4: Support the new memory registration API")
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 336c28a1228f11a6a4a3c6cc267cc45d7ce94daa
Author: Stefan Haberland <sth@linux.vnet.ibm.com>
Date:   Wed Dec 6 10:30:39 2017 +0100

    s390/dasd: fix wrongly assigned configuration data
    
    
    [ Upstream commit 8a9bd4f8ebc6800bfc0596e28631ff6809a2f615 ]
    
    We store per path and per device configuration data to identify the
    path or device correctly. The per path configuration data might get
    mixed up if the original request gets into error recovery and is
    started with a random path mask.
    
    This would lead to a wrong identification of a path in case of a CUIR
    event for example.
    
    Fix by copying the path mask from the original request to the error
    recovery request in case it is a path verification request.
    
    Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff5544ddfdaa3ab3cf737e2829d876ff4c537378
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Dec 2 09:13:04 2017 -0800

    genirq: Guard handle_bad_irq log messages
    
    
    [ Upstream commit 11bca0a83f83f6093d816295668e74ef24595944 ]
    
    An interrupt storm on a bad interrupt will cause the kernel
    log to be clogged.
    
    [   60.089234] ->handle_irq():  ffffffffbe2f803f,
    [   60.090455] 0xffffffffbf2af380
    [   60.090510] handle_bad_irq+0x0/0x2e5
    [   60.090522] ->irq_data.chip(): ffffffffbf2af380,
    [   60.090553]    IRQ_NOPROBE set
    [   60.090584] ->handle_irq():  ffffffffbe2f803f,
    [   60.090590] handle_bad_irq+0x0/0x2e5
    [   60.090596] ->irq_data.chip(): ffffffffbf2af380,
    [   60.090602] 0xffffffffbf2af380
    [   60.090608] ->action():           (null)
    [   60.090779] handle_bad_irq+0x0/0x2e5
    
    This was seen when running an upstream kernel on Acer Chromebook R11.  The
    system was unstable as result.
    
    Guard the log message with __printk_ratelimit to reduce the impact.  This
    won't prevent the interrupt storm from happening, but at least the system
    remains stable.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dmitry Torokhov <dtor@chromium.org>
    Cc: Joe Perches <joe@perches.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197953
    Link: https://lkml.kernel.org/r/1512234784-21038-1-git-send-email-linux@roeck-us.net
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64fb18c837c79d6c98985e57ae2b6a8420a616b2
Author: Nitzan Carmi <nitzanc@mellanox.com>
Date:   Tue Dec 26 11:20:20 2017 +0200

    IB/mlx5: Fix mlx5_ib_alloc_mr error flow
    
    
    [ Upstream commit 45e6ae7ef21b907dacb18da62d5787d74a31d860 ]
    
    ibmr.device is being set only after ib_alloc_mr() is
    (successfully) complete. Therefore, in case mlx5_core_create_mkey()
    return with error, the error flow calls mlx5_free_priv_descs()
    which uses ibmr.device (which doesn't exist yet), causing
    a NULL dereference oops.
    
    To fix this, the IB device should be set in the mr struct earlier
    stage (e.g. prior to calling mlx5_core_create_mkey()).
    
    Fixes: 8a187ee52b04 ("IB/mlx5: Support the new memory registration API")
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86b9fa2190907f4f550d9d6bf490c5f89ca33836
Author: Matthieu CASTET <matthieu.castet@parrot.com>
Date:   Tue Dec 12 11:10:44 2017 +0100

    led: core: Fix brightness setting when setting delay_off=0
    
    
    [ Upstream commit 2b83ff96f51d0b039c4561b9f95c824d7bddb85c ]
    
    With the current code, the following sequence won't work :
    echo timer > trigger
    
    echo 0 >  delay_off
    * at this point we call
    ** led_delay_off_store
    ** led_blink_set

commit af60c3822a721f9c2bf511ed1234e59ee4135010
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Fri Dec 22 13:01:39 2017 -0200

    bnx2x: Improve reliability in case of nested PCI errors
    
    
    [ Upstream commit f7084059a9cb9e56a186e1677b1dcffd76c2cd24 ]
    
    While in recovery process of PCI error (called EEH on PowerPC arch),
    another PCI transaction could be corrupted causing a situation of
    nested PCI errors. Also, this scenario could be reproduced with
    error injection mechanisms (for debug purposes).
    
    We observe that in case of nested PCI errors, bnx2x might attempt to
    initialize its shmem and cause a kernel crash due to bad addresses
    read from MCP. Multiple different stack traces were observed depending
    on the point the second PCI error happens.
    
    This patch avoids the crashes by:
    
     * failing PCI recovery in case of nested errors (since multiple
     PCI errors in a row are not expected to lead to a functional
     adapter anyway), and by,
    
     * preventing access to adapter FW when MCP is failed (we mark it as
     failed when shmem cannot get initialized properly).
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Acked-by: Shahed Shaikh <Shahed.Shaikh@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78cc448e0882abffdc0c50309127d39bc2523146
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:29 2017 +0530

    tg3: Enable PHY reset in MTU change path for 5720
    
    
    [ Upstream commit e60ee41aaf898584205a6af5c996860d0fe6a836 ]
    
    A customer noticed RX path hang when MTU is changed on the fly while
    running heavy traffic with NCSI enabled for 5717 and 5719. Since 5720
    belongs to same ASIC family, we observed same issue and same fix
    could solve this problem for 5720.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d6becbc8063bda30a84527039fac9cf449a1e56
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:28 2017 +0530

    tg3: Add workaround to restrict 5762 MRRS to 2048
    
    
    [ Upstream commit 4419bb1cedcda0272e1dc410345c5a1d1da0e367 ]
    
    One of AMD based server with 5762 hangs with jumbo frame traffic.
    This AMD platform has southbridge limitation which is restricting MRRS
    to 4000. As a work around, driver to restricts the MRRS to 2048 for
    this particular 5762 NX1 card.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edaf4ff0a2552da4d811fa82ec4cfc7fd4480871
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Fri Dec 22 09:35:17 2017 +0200

    tipc: fix tipc_mon_delete() oops in tipc_enable_bearer() error path
    
    
    [ Upstream commit 642a8439ddd8423b92f2e71960afe21ee1f66bb6 ]
    
    Calling tipc_mon_delete() before the monitor has been created will oops.
    This can happen in tipc_enable_bearer() error path if tipc_disc_create()
    fails.
    
    [   48.589074] BUG: unable to handle kernel paging request at 0000000000001008
    [   48.590266] IP: tipc_mon_delete+0xea/0x270 [tipc]
    [   48.591223] PGD 1e60c5067 P4D 1e60c5067 PUD 1eb0cf067 PMD 0
    [   48.592230] Oops: 0000 [#1] SMP KASAN
    [   48.595610] CPU: 5 PID: 1199 Comm: tipc Tainted: G    B            4.15.0-rc4-pc64-dirty #5
    [   48.597176] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-2.fc27 04/01/2014
    [   48.598489] RIP: 0010:tipc_mon_delete+0xea/0x270 [tipc]
    [   48.599347] RSP: 0018:ffff8801d827f668 EFLAGS: 00010282
    [   48.600705] RAX: ffff8801ee813f00 RBX: 0000000000000204 RCX: 0000000000000000
    [   48.602183] RDX: 1ffffffff1de6a75 RSI: 0000000000000297 RDI: 0000000000000297
    [   48.604373] RBP: 0000000000000000 R08: 0000000000000000 R09: fffffbfff1dd1533
    [   48.605607] R10: ffffffff8eafbb05 R11: fffffbfff1dd1534 R12: 0000000000000050
    [   48.607082] R13: dead000000000200 R14: ffffffff8e73f310 R15: 0000000000001020
    [   48.608228] FS:  00007fc686484800(0000) GS:ffff8801f5540000(0000) knlGS:0000000000000000
    [   48.610189] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   48.611459] CR2: 0000000000001008 CR3: 00000001dda70002 CR4: 00000000003606e0
    [   48.612759] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   48.613831] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   48.615038] Call Trace:
    [   48.615635]  tipc_enable_bearer+0x415/0x5e0 [tipc]
    [   48.620623]  tipc_nl_bearer_enable+0x1ab/0x200 [tipc]
    [   48.625118]  genl_family_rcv_msg+0x36b/0x570
    [   48.631233]  genl_rcv_msg+0x5a/0xa0
    [   48.631867]  netlink_rcv_skb+0x1cc/0x220
    [   48.636373]  genl_rcv+0x24/0x40
    [   48.637306]  netlink_unicast+0x29c/0x350
    [   48.639664]  netlink_sendmsg+0x439/0x590
    [   48.642014]  SYSC_sendto+0x199/0x250
    [   48.649912]  do_syscall_64+0xfd/0x2c0
    [   48.650651]  entry_SYSCALL64_slow_path+0x25/0x25
    [   48.651843] RIP: 0033:0x7fc6859848e3
    [   48.652539] RSP: 002b:00007ffd25dff938 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    [   48.654003] RAX: ffffffffffffffda RBX: 00007ffd25dff990 RCX: 00007fc6859848e3
    [   48.655303] RDX: 0000000000000054 RSI: 00007ffd25dff990 RDI: 0000000000000003
    [   48.656512] RBP: 00007ffd25dff980 R08: 00007fc685c35fc0 R09: 000000000000000c
    [   48.657697] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000d13010
    [   48.658840] R13: 00007ffd25e009c0 R14: 0000000000000000 R15: 0000000000000000
    [   48.662972] RIP: tipc_mon_delete+0xea/0x270 [tipc] RSP: ffff8801d827f668
    [   48.664073] CR2: 0000000000001008
    [   48.664576] ---[ end trace e811818d54d5ce88 ]---
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f60f577f18c23db299072682ead2f357b282d01c
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Fri Dec 22 09:35:16 2017 +0200

    tipc: error path leak fixes in tipc_enable_bearer()
    
    
    [ Upstream commit 19142551b2be4a9e13838099fde1351386e5e007 ]
    
    Fix memory leak in tipc_enable_bearer() if enable_media() fails, and
    cleanup with bearer_disable() if tipc_mon_create() fails.
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9868db6588f587266d9c112ea14a6c2f89f0f67
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Dec 5 23:31:35 2017 +0000

    lib/mpi: Fix umul_ppmm() for MIPS64r6
    
    
    [ Upstream commit bbc25bee37d2b32cf3a1fab9195b6da3a185614a ]
    
    Current MIPS64r6 toolchains aren't able to generate efficient
    DMULU/DMUHU based code for the C implementation of umul_ppmm(), which
    performs an unsigned 64 x 64 bit multiply and returns the upper and
    lower 64-bit halves of the 128-bit result. Instead it widens the 64-bit
    inputs to 128-bits and emits a __multi3 intrinsic call to perform a 128
    x 128 multiply. This is both inefficient, and it results in a link error
    since we don't include __multi3 in MIPS linux.
    
    For example commit 90a53e4432b1 ("cfg80211: implement regdb signature
    checking") merged in v4.15-rc1 recently broke the 64r6_defconfig and
    64r6el_defconfig builds by indirectly selecting MPILIB. The same build
    errors can be reproduced on older kernels by enabling e.g. CRYPTO_RSA:
    
    lib/mpi/generic_mpih-mul1.o: In function `mpihelp_mul_1':
    lib/mpi/generic_mpih-mul1.c:50: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul2.o: In function `mpihelp_addmul_1':
    lib/mpi/generic_mpih-mul2.c:49: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul3.o: In function `mpihelp_submul_1':
    lib/mpi/generic_mpih-mul3.c:49: undefined reference to `__multi3'
    lib/mpi/mpih-div.o In function `mpihelp_divrem':
    lib/mpi/mpih-div.c:205: undefined reference to `__multi3'
    lib/mpi/mpih-div.c:142: undefined reference to `__multi3'
    
    Therefore add an efficient MIPS64r6 implementation of umul_ppmm() using
    inline assembly and the DMULU/DMUHU instructions, to prevent __multi3
    calls being emitted.
    
    Fixes: 7fd08ca58ae6 ("MIPS: Add build support for the MIPS R6 ISA")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: linux-mips@linux-mips.org
    Cc: linux-crypto@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a1b1ee6a73bead5f3da08f60f92fdacbedfd008
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 21 22:35:19 2017 +0100

    ARM: dts: ls1021a: fix incorrect clock references
    
    
    [ Upstream commit 506e8a912661c97b41adc8a286b875d01323ec45 ]
    
    dtc warns about two 'clocks' properties that have an extraneous '1'
    at the end:
    
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a:clocks[1])
    Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2190000/sgtl5000@a
    arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2190000/sgtl5000@a:clocks[1])
    
    The clocks that get referenced here are fixed-rate, so they do not
    take any argument, and dtc interprets the next cell as a phandle, which
    is invalid.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6358cb4c5b273cd8ddcd7c850084fae721566523
Author: Cathy Avery <cavery@redhat.com>
Date:   Tue Dec 19 13:32:48 2017 -0500

    scsi: storvsc: Fix scsi_cmd error assignments in storvsc_handle_error
    
    
    [ Upstream commit d1b8b2391c24751e44f618fcf86fb55d9a9247fd ]
    
    When an I/O is returned with an srb_status of SRB_STATUS_INVALID_LUN
    which has zero good_bytes it must be assigned an error. Otherwise the
    I/O will be continuously requeued and will cause a deadlock in the case
    where disks are being hot added and removed. sd_probe_async will wait
    forever for its I/O to complete while holding scsi_sd_probe_domain.
    
    Also returning the default error of DID_TARGET_FAILURE causes multipath
    to not retry the I/O resulting in applications receiving I/O errors
    before a failover can occur.
    
    Signed-off-by: Cathy Avery <cavery@redhat.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d0858e71219ca4657ebeff7eea92067fbaf9b77
Author: Fredrik Hallenberg <megahallon@gmail.com>
Date:   Mon Dec 18 23:33:59 2017 +0100

    net: stmmac: Fix TX timestamp calculation
    
    
    [ Upstream commit 200922c93f008e03ddc804c6dacdf26ca1ba86d7 ]
    
    When using GMAC4 the value written in PTP_SSIR should be shifted however
    the shifted value is also used in subsequent calculations which results
    in a bad timestamp value.
    
    Signed-off-by: Fredrik Hallenberg <megahallon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1148fee2173c03718b1f3ce47d67eb09c165368f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 18 14:26:21 2017 +0800

    ip6_tunnel: get the min mtu properly in ip6_tnl_xmit
    
    
    [ Upstream commit c9fefa08190fc879fb2e681035d7774e0a8c5170 ]
    
    Now it's using IPV6_MIN_MTU as the min mtu in ip6_tnl_xmit, but
    IPV6_MIN_MTU actually only works when the inner packet is ipv6.
    
    With IPV6_MIN_MTU for ipv4 packets, the new pmtu for inner dst
    couldn't be set less than 1280. It would cause tx_err and the
    packet to be dropped when the outer dst pmtu is close to 1280.
    
    Jianlin found it by running ipv4 traffic with the topo:
    
      (client) gre6 <---> eth1 (route) eth2 <---> gre6 (server)
    
    After changing eth2 mtu to 1300, the performance became very
    low, or the connection was even broken. The issue also affects
    ip4ip6 and ip6ip6 tunnels.
    
    So if the inner packet is ipv4, 576 should be considered as the
    min mtu.
    
    Note that for ip4ip6 and ip6ip6 tunnels, the inner packet can
    only be ipv4 or ipv6, but for gre6 tunnel, it may also be ARP.
    This patch using 576 as the min mtu for non-ipv6 packet works
    for all those cases.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95e094a709eabaede6c53272b2d90925c55c02e0
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Fri Dec 15 20:20:06 2017 +0300

    net: arc_emac: fix arc_emac_rx() error paths
    
    
    [ Upstream commit e688822d035b494071ecbadcccbd6f3325fb0f59 ]
    
    arc_emac_rx() has some issues found by code review.
    
    In case netdev_alloc_skb_ip_align() or dma_map_single() failure
    rx fifo entry will not be returned to EMAC.
    
    In case dma_map_single() failure previously allocated skb became
    lost to driver. At the same time address of newly allocated skb
    will not be provided to EMAC.
    
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 757677d0da516f9f60b7a855ecbf10b73263e006
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Mon Dec 18 17:00:17 2017 +0800

    net: mediatek: setup proper state for disabled GMAC on the default
    
    
    [ Upstream commit 7352e252b5bf40d59342494a70354a2d436fd0cd ]
    
    The current solution would setup fixed and force link of 1Gbps to the both
    GMAC on the default. However, The GMAC should always be put to link down
    state when the GMAC is disabled on certain target boards. Otherwise,
    the driver possibly receives unexpected data from the floating hardware
    connection through the unused GMAC. Although the driver had been added
    certain protection in RX path to get rid of such kind of unexpected data
    sent to the upper stack.
    
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ec97b2a4475e6157ec84b2a5d14530861badd0c
Author: Abhijeet Kumar <abhijeet.kumar@intel.com>
Date:   Tue Dec 12 00:40:25 2017 +0530

    ASoC: nau8825: fix issue that pop noise when start capture
    
    
    [ Upstream commit d070f7c703ef26e3db613f24206823f916272fc6 ]
    
    In skylake platform, we hear a loud pop noise(0 dB) at start of
    audio capture power up sequence. This patch removes the pop noise
    from the recording by adding a delay before enabling ADC.
    
    Signed-off-by: Abhijeet Kumar <abhijeet.kumar@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90f7d14cef9bd30214dd7e56fc3c7a468cef6228
Author: Radu Pirea <radu.pirea@microchip.com>
Date:   Fri Dec 15 17:40:17 2017 +0200

    spi: atmel: fixed spin_lock usage inside atmel_spi_remove
    
    
    [ Upstream commit 66e900a3d225575c8b48b59ae1fe74bb6e5a65cc ]
    
    The only part of atmel_spi_remove which needs to be atomic is hardware
    reset.
    
    atmel_spi_stop_dma calls dma_terminate_all and this needs interrupts
    enabled.
    atmel_spi_release_dma calls dma_release_channel and dma_release_channel
    locks a mutex inside of spin_lock.
    
    So the call of these functions can't be inside a spin_lock.
    
    Reported-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Radu Pirea <radu.pirea@microchip.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad176934842636d8b1d23298fb90d10a97e4c6f7
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Tue Dec 12 17:26:36 2017 +0800

    mac80211_hwsim: Fix a possible sleep-in-atomic bug in hwsim_get_radio_nl
    
    
    [ Upstream commit 162bd5e5fd921785077b5862d8f2ffabe2fe11e5 ]
    
    The driver may sleep under a spinlock.
    The function call path is:
    hwsim_get_radio_nl (acquire the spinlock)
      nlmsg_new(GFP_KERNEL) --> may sleep
    
    To fix it, GFP_KERNEL is replaced with GFP_ATOMIC.
    
    This bug is found by my static analysis tool(DSAC) and checked by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5330add6da101da85ef4d1dcf31bf2e1b3252fc8
Author: Karol Herbst <kherbst@redhat.com>
Date:   Fri Nov 24 03:56:26 2017 +0100

    drm/nouveau/pci: do a msi rearm on init
    
    
    [ Upstream commit a121027d2747168df0aac0c3da35509eea39f61c ]
    
    On my GP107 when I load nouveau after unloading it, for some reason the
    GPU stopped sending or the CPU stopped receiving interrupts if MSI was
    enabled.
    
    Doing a rearm once before getting any interrupts fixes this.
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 396927052bad2f8228c98d3eab34c097823fd089
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Dec 16 00:52:39 2017 +0300

    net: phy: xgene: disable clk on error paths
    
    
    [ Upstream commit ab14436065c8066c265540312742390d6d07ddd2 ]
    
    There are several error paths in xgene_mdio_probe(),
    where clk is left undisabled. The patch fixes them.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd7cbb5ad8e8b222eff3401089e3244a7a8cb32e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Dec 18 15:05:07 2017 -0500

    sget(): handle failures of register_shrinker()
    
    
    [ Upstream commit 9ee332d99e4d5a97548943b81c54668450ce641b ]
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a5bd36c0bb036def9ce7d2300f350a0db36a622
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Dec 4 13:08:47 2017 -0300

    x86/asm: Allow again using asm.h when building for the 'bpf' clang target
    
    
    [ Upstream commit ca26cffa4e4aaeb09bb9e308f95c7835cb149248 ]
    
    Up to f5caf621ee35 ("x86/asm: Fix inline asm call constraints for Clang")
    we were able to use x86 headers to build to the 'bpf' clang target, as
    done by the BPF code in tools/perf/.
    
    With that commit, we ended up with following failure for 'perf test LLVM', this
    is because "clang ... -target bpf ..." fails since 4.0 does not have bpf inline
    asm support and 6.0 does not recognize the register 'esp', fix it by guarding
    that part with an #ifndef __BPF__, that is defined by clang when building to
    the "bpf" target.
    
      # perf test -v LLVM
      37: LLVM search and compile                               :
      37.1: Basic BPF llvm compile                              :
      --- start ---
      test child forked, pid 25526
      Kernel build dir is set to /lib/modules/4.14.0+/build
      set env: KBUILD_DIR=/lib/modules/4.14.0+/build
      unset env: KBUILD_OPTS
      include option is set to  -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: NR_CPUS=4
      set env: LINUX_VERSION_CODE=0x40e00
      set env: CLANG_EXEC=/usr/local/bin/clang
      set env: CLANG_OPTIONS=-xc
      set env: KERNEL_INC_OPTIONS= -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: WORKING_DIR=/lib/modules/4.14.0+/build
      set env: CLANG_SOURCE=-
      llvm compiling command template: echo '/*
       * bpf-script-example.c
       * Test basic LLVM building
       */
      #ifndef LINUX_VERSION_CODE
      # error Need LINUX_VERSION_CODE
      # error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
      #endif
      #define BPF_ANY 0
      #define BPF_MAP_TYPE_ARRAY 2
      #define BPF_FUNC_map_lookup_elem 1
      #define BPF_FUNC_map_update_elem 2
    
      static void *(*bpf_map_lookup_elem)(void *map, void *key) =
              (void *) BPF_FUNC_map_lookup_elem;
      static void *(*bpf_map_update_elem)(void *map, void *key, void *value, int flags) =
              (void *) BPF_FUNC_map_update_elem;
    
      struct bpf_map_def {
              unsigned int type;
              unsigned int key_size;
              unsigned int value_size;
              unsigned int max_entries;
      };
    
      #define SEC(NAME) __attribute__((section(NAME), used))
      struct bpf_map_def SEC("maps") flip_table = {
              .type = BPF_MAP_TYPE_ARRAY,
              .key_size = sizeof(int),
              .value_size = sizeof(int),
              .max_entries = 1,
      };
    
      SEC("func=SyS_epoll_wait")
      int bpf_func__SyS_epoll_wait(void *ctx)
      {
              int ind =0;
              int *flag = bpf_map_lookup_elem(&flip_table, &ind);
              int new_flag;
              if (!flag)
                      return 0;
              /* flip flag and store back */
              new_flag = !*flag;
              bpf_map_update_elem(&flip_table, &ind, &new_flag, BPF_ANY);
              return new_flag;
      }
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      ' | $CLANG_EXEC -D__KERNEL__ -D__NR_CPUS__=$NR_CPUS -DLINUX_VERSION_CODE=$LINUX_VERSION_CODE $CLANG_OPTIONS $KERNEL_INC_OPTIONS -Wno-unused-value -Wno-pointer-sign -working-directory $WORKING_DIR -c "$CLANG_SOURCE" -target bpf -O2 -o -
      test child finished with 0
      ---- end ----
      LLVM search and compile subtest 0: Ok
      37.2: kbuild searching                                    :
      --- start ---
      test child forked, pid 25950
      Kernel build dir is set to /lib/modules/4.14.0+/build
      set env: KBUILD_DIR=/lib/modules/4.14.0+/build
      unset env: KBUILD_OPTS
      include option is set to  -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: NR_CPUS=4
      set env: LINUX_VERSION_CODE=0x40e00
      set env: CLANG_EXEC=/usr/local/bin/clang
      set env: CLANG_OPTIONS=-xc
      set env: KERNEL_INC_OPTIONS= -nostdinc -isystem /usr/lib/gcc/x86_64-redhat-linux/7/include -I/home/acme/git/linux/arch/x86/include -I./arch/x86/include/generated  -I/home/acme/git/linux/include -I./include -I/home/acme/git/linux/arch/x86/include/uapi -I./arch/x86/include/generated/uapi -I/home/acme/git/linux/include/uapi -I./include/generated/uapi -include /home/acme/git/linux/include/linux/kconfig.h
      set env: WORKING_DIR=/lib/modules/4.14.0+/build
      set env: CLANG_SOURCE=-
      llvm compiling command template: echo '/*
       * bpf-script-test-kbuild.c
       * Test include from kernel header
       */
      #ifndef LINUX_VERSION_CODE
      # error Need LINUX_VERSION_CODE
      # error Example: for 4.2 kernel, put 'clang-opt="-DLINUX_VERSION_CODE=0x40200" into llvm section of ~/.perfconfig'
      #endif
      #define SEC(NAME) __attribute__((section(NAME), used))
    
      #include <uapi/linux/fs.h>
      #include <uapi/asm/ptrace.h>
    
      SEC("func=vfs_llseek")
      int bpf_func__vfs_llseek(void *ctx)
      {
              return 0;
      }
    
      char _license[] SEC("license") = "GPL";
      int _version SEC("version") = LINUX_VERSION_CODE;
      ' | $CLANG_EXEC -D__KERNEL__ -D__NR_CPUS__=$NR_CPUS -DLINUX_VERSION_CODE=$LINUX_VERSION_CODE $CLANG_OPTIONS $KERNEL_INC_OPTIONS -Wno-unused-value -Wno-pointer-sign -working-directory $WORKING_DIR -c "$CLANG_SOURCE" -target bpf -O2 -o -
      In file included from <stdin>:12:
      In file included from /home/acme/git/linux/arch/x86/include/uapi/asm/ptrace.h:5:
      In file included from /home/acme/git/linux/include/linux/compiler.h:242:
      In file included from /home/acme/git/linux/arch/x86/include/asm/barrier.h:5:
      In file included from /home/acme/git/linux/arch/x86/include/asm/alternative.h:10:
      /home/acme/git/linux/arch/x86/include/asm/asm.h:145:50: error: unknown register name 'esp' in asm
      register unsigned long current_stack_pointer asm(_ASM_SP);
                                                       ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:44:18: note: expanded from macro '_ASM_SP'
      #define _ASM_SP         __ASM_REG(sp)
                              ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:27:32: note: expanded from macro '__ASM_REG'
      #define __ASM_REG(reg)         __ASM_SEL_RAW(e##reg, r##reg)
                                     ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:18:29: note: expanded from macro '__ASM_SEL_RAW'
      # define __ASM_SEL_RAW(a,b) __ASM_FORM_RAW(a)
                                  ^
      /home/acme/git/linux/arch/x86/include/asm/asm.h:11:32: note: expanded from macro '__ASM_FORM_RAW'
      # define __ASM_FORM_RAW(x)     #x
                                     ^
      <scratch space>:4:1: note: expanded from here
      "esp"
      ^
      1 error generated.
      ERROR:        unable to compile -
      Hint: Check error message shown above.
      Hint: You can also pre-compile it into .o using:
                      clang -target bpf -O2 -c -
              with proper -I and -D options.
      Failed to compile test case: 'kbuild searching'
      test child finished with -1
      ---- end ----
      LLVM search and compile subtest 1: FAILED!
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Dmitriy Vyukov <dvyukov@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Cc: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: Yonghong Song <yhs@fb.com>
    Link: https://lkml.kernel.org/r/20171128175948.GL3298@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db1e8814be999976ea901e9cf7d2e0134e938b31
Author: Chunyan Zhang <zhang.lyra@gmail.com>
Date:   Fri Dec 1 03:51:04 2017 +0100

    ARM: 8731/1: Fix csum_partial_copy_from_user() stack mismatch
    
    
    [ Upstream commit 36b0cb84ee858f02c256d26f0cb4229c78e3399e ]
    
    An additional 'ip' will be pushed to the stack, for restoring the
    DACR later, if CONFIG_CPU_SW_DOMAIN_PAN defined.
    
    However, the fixup still get the err_ptr by add #8*4 to sp, which
    results in the fact that the code area pointed by the LR will be
    overwritten, or the kernel will crash if CONFIG_DEBUG_RODATA is enabled.
    
    This patch fixes the stack mismatch.
    
    Fixes: a5e090acbf54 ("ARM: software-based priviledged-no-access support")
    Signed-off-by: Lvqiang Huang <Lvqiang.Huang@spreadtrum.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cf31f5b38ed1d78d39e9fb1d460c4684690ec1e
Author: Brendan McGrath <redmcg@redmandi.dyndns.org>
Date:   Wed Dec 13 22:14:57 2017 +1100

    ipv6: icmp6: Allow icmp messages to be looped back
    
    
    [ Upstream commit 588753f1eb18978512b1c9b85fddb457d46f9033 ]
    
    One example of when an ICMPv6 packet is required to be looped back is
    when a host acts as both a Multicast Listener and a Multicast Router.
    
    A Multicast Router will listen on address ff02::16 for MLDv2 messages.
    
    Currently, MLDv2 messages originating from a Multicast Listener running
    on the same host as the Multicast Router are not being delivered to the
    Multicast Router. This is due to dst.input being assigned the default
    value of dst_discard.
    
    This results in the packet being looped back but discarded before being
    delivered to the Multicast Router.
    
    This patch sets dst.input to ip6_input to ensure a looped back packet
    is delivered to the Multicast Router.
    
    Signed-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e88872ef990c8c0692963d916c9585b9b65254c6
Author: Albert Hsieh <wen.hsieh@broadcom.com>
Date:   Mon Nov 20 11:26:26 2017 +0800

    mtd: nand: brcmnand: Zero bitflip is not an error
    
    
    [ Upstream commit e44b9a9c135727f3410e029910275f40681dc8bc ]
    
    A negative return value of brcmstb_nand_verify_erased_page() indicates a
    real bitflip error of an erased page, and other return values (>= 0) show
    the corrected bitflip number. Zero return value means no bitflip, but the
    current driver code treats it as an error, and eventually leads to
    falsely reported ECC error.
    
    Fixes: 02b88eea9f9c ("mtd: brcmnand: Add check for erased page bitflip")
    Signed-off-by: Albert Hsieh <wen.hsieh@broadcom.com>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd1e39f4b3a81706571f03807381a21949655898
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Dec 5 11:51:40 2017 +0100

    mtd: nand: gpmi: Fix failure when a erased page has a bitflip at BBM
    
    
    [ Upstream commit fdf2e821052958a114618a95ab18a300d0b080cb ]
    
    When erased subpages are read then the BCH decoder returns STATUS_ERASED
    if they are all empty, or STATUS_UNCORRECTABLE if there are bitflips.
    When there are bitflips, we have to set these bits again to show the
    upper layers a completely erased page. When a bitflip happens in the
    exact byte where the bad block marker is, then this byte is swapped
    with another byte in block_mark_swapping(). The correction code then
    detects a bitflip in another subpage and no longer corrects the bitflip
    where it really happens.
    
    Correct this behaviour by calling block_mark_swapping() after the
    bitflips have been corrected.
    
    In our case UBIFS failed with this bug because it expects erased
    pages to be really empty:
    
    UBIFS error (pid 187): ubifs_scan: corrupt empty space at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: corruption at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: first 8192 bytes from LEB 36:118735
    UBIFS error (pid 187): ubifs_scan: LEB 36 scanning failed
    UBIFS error (pid 187): do_commit: commit failed, error -117
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83c5a93514c7404c94d1de94a4c8aa5d5684fc95
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Dec 14 16:56:14 2017 +0100

    net: usb: qmi_wwan: add Telit ME910 PID 0x1101 support
    
    
    [ Upstream commit c647c0d62c82eb3ddf78a0d8b3d58819d9f552aa ]
    
    This patch adds support for Telit ME910 PID 0x1101.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4ea6118d3e36ea87b02607aea8f173b4c69f808
Author: Keith Busch <keith.busch@intel.com>
Date:   Thu Dec 14 11:20:14 2017 -0700

    nvme: check hw sectors before setting chunk sectors
    
    
    [ Upstream commit 249159c5f15812140fa216f9997d799ac0023a1f ]
    
    Some devices with IDs matching the "stripe" quirk don't actually have
    this quirk, and don't have an MDTS value. When MDTS is not set, the
    driver sets the max sectors to UINT_MAX, which is not a power of 2,
    hitting a BUG_ON from blk_queue_chunk_sectors. This patch skips setting
    chunk sectors for such devices.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051337a8993a5481046209ec167eb6e821b6d922
Author: Andreas Platschek <andreas.platschek@opentech.at>
Date:   Thu Dec 14 12:50:51 2017 +0100

    dmaengine: fsl-edma: disable clks on all error paths
    
    
    [ Upstream commit 2610acf46b9ed528ec2cacd717bc9d354e452b73 ]
    
    Previously enabled clks are only disabled if clk_prepare_enable() fails.
    However, there are other error paths were the previously enabled
    clocks are not disabled.
    
    To fix the problem, fsl_disable_clocks() now takes the number of clocks
    that shall be disabled + unprepared. For existing calls were all clocks
    were already successfully prepared + enabled, DMAMUX_NR is passed to
    disable + unprepare all clocks.
    
    In error paths were only some clocks were successfully prepared +
    enabled the loop counter is passed, in order to disable + unprepare
    all successfully prepared + enabled clocks.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Andreas Platschek <andreas.platschek@opentech.at>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a97b2d09d332c43612f489c99b97d691002b6d4
Author: Yunlei He <heyunlei@huawei.com>
Date:   Fri May 19 15:06:12 2017 +0800

    f2fs: fix a bug caused by NULL extent tree
    
    commit dad48e73127ba10279ea33e6dbc8d3905c4d31c0 upstream.
    
    Thread A:                                       Thread B:
    
    -f2fs_remount
        -sbi->mount_opt.opt = 0;
                                                    <--- -f2fs_iget
                                                             -do_read_inode
                                                                 -f2fs_init_extent_tree
                                                                     -F2FS_I(inode)->extent_tree is NULL
            -default_options && parse_options
                -remount return
                                                    <---  -f2fs_map_blocks
                                                              -f2fs_lookup_extent_tree
                                                                  -f2fs_bug_on(sbi, !et);
    
    The same problem with f2fs_new_inode.
    
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4e0649eeb65c556d01de986a589da2ffd5c2029
Author: Ben Gardner <gardner.ben@gmail.com>
Date:   Wed Feb 14 09:29:52 2018 -0600

    i2c: designware: must wait for enable
    
    commit fba4adbbf670577e605f9ad306629db6031cd48b upstream.
    
    One I2C bus on my Atom E3845 board has been broken since 4.9.
    It has two devices, both declared by ACPI and with built-in drivers.
    
    There are two back-to-back transactions originating from the kernel, one
    targeting each device. The first transaction works, the second one locks
    up the I2C controller. The controller never recovers.
    
    These kernel logs show up whenever an I2C transaction is attempted after
    this failure.
    i2c-designware-pci 0000:00:18.3: timeout in disabling adapter
    i2c-designware-pci 0000:00:18.3: timeout waiting for bus ready
    
    Waiting for the I2C controller status to indicate that it is enabled
    before programming it fixes the issue.
    
    I have tested this patch on 4.14 and 4.15.
    
    Fixes: commit 2702ea7dbec5 ("i2c: designware: wait for disable/enable only if necessary")
    Cc: linux-stable <stable@vger.kernel.org> #4.13+
    Signed-off-by: Ben Gardner <gardner.ben@gmail.com>
    Acked-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Ben Gardner <gardner.ben@gmail.com>
    [Jarkko: Backported to v4.9..v4.12 before i2c-designware-core.c was renamed to i2c-designware-master.c]
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a9f69b2c11bee48b1884165e4e1473f7672dc28
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Thu Dec 21 11:41:35 2017 +0100

    hrtimer: Ensure POSIX compliance (relative CLOCK_REALTIME hrtimers)
    
    commit 48d0c9becc7f3c66874c100c126459a9da0fdced upstream.
    
    The POSIX specification defines that relative CLOCK_REALTIME timers are not
    affected by clock modifications. Those timers have to use CLOCK_MONOTONIC
    to ensure POSIX compliance.
    
    The introduction of the additional HRTIMER_MODE_PINNED mode broke this
    requirement for pinned timers.
    
    There is no user space visible impact because user space timers are not
    using pinned mode, but for consistency reasons this needs to be fixed.
    
    Check whether the mode has the HRTIMER_MODE_REL bit set instead of
    comparing with HRTIMER_MODE_ABS.
    
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: keescook@chromium.org
    Fixes: 597d0275736d ("timers: Framework for identifying pinned timers")
    Link: http://lkml.kernel.org/r/20171221104205.7269-7-anna-maria@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
