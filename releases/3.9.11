commit 896f5009ed1fbaec43f360c4ebf022639cd61d5f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jul 20 17:16:17 2013 -0700

    Linux 3.9.11

commit 0b2bf3e6dae86b256f6ee0fb428166e111278aa8
Author: Steve French <smfrench@us.ibm.com>
Date:   Tue Jun 25 14:03:16 2013 -0500

    Handle big endianness in NTLM (ntlmv2) authentication
    
    commit fdf96a907c1fbb93c633e2b7ede3b8df26d6a4c0 upstream.
    
    This is RH bug 970891
    Uppercasing of username during calculation of ntlmv2 hash fails
    because UniStrupr function does not handle big endian wchars.
    
    Also fix a comment in the same code to reflect its correct usage.
    
    [To make it easier for stable (rather than require 2nd patch) fixed
    this patch of Shirish's to remove endian warning generated
    by sparse -- steve f.]
    
    Reported-by: steve <sanpatr1@in.ibm.com>
    Signed-off-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6518e4a0e7ec6e0214041c8d30ee8c7b04db534d
Author: Wanpeng Li <liwanp@linux.vnet.ibm.com>
Date:   Wed Jul 3 15:02:40 2013 -0700

    mm/memory-hotplug: fix lowmem count overflow when offline pages
    
    commit cea27eb2a202959783f81254c48c250ddd80e129 upstream.
    
    The logic for the memory-remove code fails to correctly account the
    Total High Memory when a memory block which contains High Memory is
    offlined as shown in the example below.  The following patch fixes it.
    
    Before logic memory remove:
    
    MemTotal:        7603740 kB
    MemFree:         6329612 kB
    Buffers:           94352 kB
    Cached:           872008 kB
    SwapCached:            0 kB
    Active:           626932 kB
    Inactive:         519216 kB
    Active(anon):     180776 kB
    Inactive(anon):   222944 kB
    Active(file):     446156 kB
    Inactive(file):   296272 kB
    Unevictable:           0 kB
    Mlocked:               0 kB
    HighTotal:       7294672 kB
    HighFree:        5704696 kB
    LowTotal:         309068 kB
    LowFree:          624916 kB
    
    After logic memory remove:
    
    MemTotal:        7079452 kB
    MemFree:         5805976 kB
    Buffers:           94372 kB
    Cached:           872000 kB
    SwapCached:            0 kB
    Active:           626936 kB
    Inactive:         519236 kB
    Active(anon):     180780 kB
    Inactive(anon):   222944 kB
    Active(file):     446156 kB
    Inactive(file):   296292 kB
    Unevictable:           0 kB
    Mlocked:               0 kB
    HighTotal:       7294672 kB
    HighFree:        5181024 kB
    LowTotal:       4294752076 kB
    LowFree:          624952 kB
    
    [mhocko@suse.cz: fix CONFIG_HIGHMEM=n build]
    Signed-off-by: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Reviewed-by: Michal Hocko <mhocko@suse.cz>
    Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19ef554b3bd4ceb27884b528e17bee4ec107eba7
Author: Michal Hocko <mhocko@suse.cz>
Date:   Mon Jul 8 16:00:29 2013 -0700

    memcg, kmem: fix reference count handling on the error path
    
    commit f37a96914d1aea10fed8d9af10251f0b9caea31b upstream.
    
    mem_cgroup_css_online calls mem_cgroup_put if memcg_init_kmem fails.
    This is not correct because only memcg_propagate_kmem takes an
    additional reference while mem_cgroup_sockets_init is allowed to fail as
    well (although no current implementation fails) but it doesn't take any
    reference.  This all suggests that it should be memcg_propagate_kmem
    that should clean up after itself so this patch moves mem_cgroup_put
    over there.
    
    Unfortunately this is not that easy (as pointed out by Li Zefan) because
    memcg_kmem_mark_dead marks the group dead (KMEM_ACCOUNTED_DEAD) if it is
    marked active (KMEM_ACCOUNTED_ACTIVE) which is the case even if
    memcg_propagate_kmem fails so the additional reference is dropped in
    that case in kmem_cgroup_destroy which means that the reference would be
    dropped two times.
    
    The easiest way then would be to simply remove mem_cgrroup_put from
    mem_cgroup_css_online and rely on kmem_cgroup_destroy doing the right
    thing.
    
    Signed-off-by: Michal Hocko <mhocko@suse.cz>
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Glauber Costa <glommer@openvz.org>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1baa278f867ba7a5f6212c97c64b56f72ad2c68
Author: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Date:   Wed Jul 3 15:00:43 2013 -0700

    drivers/dma/pl330.c: fix locking in pl330_free_chan_resources()
    
    commit da331ba8e9c5de72a27e50f71105395bba6eebe0 upstream.
    
    tasklet_kill() may sleep so call it before taking pch->lock.
    
    Fixes following lockup:
    
      BUG: scheduling while atomic: cat/2383/0x00000002
      Modules linked in:
        unwind_backtrace+0x0/0xfc
        __schedule_bug+0x4c/0x58
        __schedule+0x690/0x6e0
        sys_sched_yield+0x70/0x78
        tasklet_kill+0x34/0x8c
        pl330_free_chan_resources+0x24/0x88
        dma_chan_put+0x4c/0x50
      [...]
      BUG: spinlock lockup suspected on CPU#0, swapper/0/0
       lock: 0xe52aa04c, .magic: dead4ead, .owner: cat/2383, .owner_cpu: 1
        unwind_backtrace+0x0/0xfc
        do_raw_spin_lock+0x194/0x204
        _raw_spin_lock_irqsave+0x20/0x28
        pl330_tasklet+0x2c/0x5a8
        tasklet_action+0xfc/0x114
        __do_softirq+0xe4/0x19c
        irq_exit+0x98/0x9c
        handle_IPI+0x124/0x16c
        gic_handle_irq+0x64/0x68
        __irq_svc+0x40/0x70
        cpuidle_wrap_enter+0x4c/0xa0
        cpuidle_enter_state+0x18/0x68
        cpuidle_idle_call+0xac/0xe0
        cpu_idle+0xac/0xf0
    
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Acked-by: Jassi Brar <jassisinghbrar@gmail.com>
    Cc: Vinod Koul <vinod.koul@linux.intel.com>
    Cc: Tomasz Figa <t.figa@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1acc8ffbac40dfed3084d76d820f2dcbd8bc8d7d
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Jul 13 00:40:35 2013 -0400

    ext4: don't allow ext4_free_blocks() to fail due to ENOMEM
    
    commit e7676a704ee0a1ef71a6b23760b5a8f6896cb1a1 upstream.
    
    The filesystem should not be marked inconsistent if ext4_free_blocks()
    is not able to allocate memory.  Unfortunately some callers (most
    notably ext4_truncate) don't have a way to reflect an error back up to
    the VFS.  And even if we did, most userspace applications won't deal
    with most system calls returning ENOMEM anyway.
    
    Reported-by: Nagachandra P <nagachandra@gmail.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 052a17d4964f869c3dd62ece4e16b1954452f66b
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 31 19:39:56 2013 -0400

    ext4: fix overflow when counting used blocks on 32-bit architectures
    
    commit 8af8eecc1331dbf5e8c662022272cf667e213da5 upstream.
    
    The arithmetics adding delalloc blocks to the number of used blocks in
    ext4_getattr() can easily overflow on 32-bit archs as we first multiply
    number of blocks by blocksize and then divide back by 512. Make the
    arithmetics more clever and also use proper type (unsigned long long
    instead of unsigned long).
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c095cc65e4d71b0d761d6e6d58b07b4641d17876
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 31 19:38:56 2013 -0400

    ext4: fix data offset overflow in ext4_xattr_fiemap() on 32-bit archs
    
    commit a60697f411eb365fb09e639e6f183fe33d1eb796 upstream.
    
    On 32-bit architectures with 32-bit sector_t computation of data offset
    in ext4_xattr_fiemap() can overflow resulting in reporting bogus data
    location. Fix the problem by typing block number to proper type before
    shifting.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60e415266ce30fe446796e9718a10ee3b881086d
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 31 19:37:56 2013 -0400

    ext4: fix overflows in SEEK_HOLE, SEEK_DATA implementations
    
    commit e7293fd146846e2a44d29e0477e0860c60fb856b upstream.
    
    ext4_lblk_t is just u32 so multiplying it by blocksize can easily
    overflow for files larger than 4 GB. Fix that by properly typing the
    block offsets before shifting.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Zheng Liu <wenqing.lz@taobao.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df8b4d47fceb1f64ddea20c233e7bb987cbbce19
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 31 19:33:42 2013 -0400

    ext4: fix data offset overflow on 32-bit archs in ext4_inline_data_fiemap()
    
    commit eaf3793728d07d995f1e74250b2d0005f7ae98b5 upstream.
    
    On 32-bit archs when sector_t is defined as 32-bit the logic computing
    data offset in ext4_inline_data_fiemap(). Fix that by properly typing
    the shifted value.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da94067deee6e073129061575d1a3e437232a6c5
Author: Josef Bacik <jbacik@fusionio.com>
Date:   Mon Jul 1 16:10:16 2013 -0400

    Btrfs: only do the tree_mod_log_free_eb if this is our last ref
    
    commit 7fb7d76f96bfcbea25007d190ba828b18e13d29d upstream.
    
    There is another bug in the tree mod log stuff in that we're calling
    tree_mod_log_free_eb every single time a block is cow'ed.  The problem with this
    is that if this block is shared by multiple snapshots we will call this multiple
    times per block, so if we go to rewind the mod log for this block we'll BUG_ON()
    in __tree_mod_log_rewind because we try to rewind a free twice.  We only want to
    call tree_mod_log_free_eb if we are actually freeing the block.  With this patch
    I no longer hit the panic in __tree_mod_log_rewind.  Thanks,
    
    Reviewed-by: Jan Schmidt <list.btrfs@jan-o-sch.net>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83bcee5c1c067de22f4830382cbe9483f01ffeaf
Author: Josef Bacik <jbacik@fusionio.com>
Date:   Mon May 20 11:26:50 2013 -0400

    Btrfs: fix estale with btrfs send
    
    commit 139f807a1eba1e484941a98fb93ee32ad859a6a1 upstream.
    
    This fixes bugzilla 57491.  If we take a snapshot of a fs with a unlink ongoing
    and then try to send that root we will run into problems.  When comparing with a
    parent root we will search the parents and the send roots commit_root, which if
    we've just created the snapshot will include the file that needs to be evicted
    by the orphan cleanup.  So when we find a changed extent we will try and copy
    that info into the send stream, but when we lookup the inode we use the normal
    root, which no longer has the inode because the orphan cleanup deleted it.  The
    best solution I have for this is to check our otransid with the generation of
    the commit root and if they match just commit the transaction again, that way we
    get the changes from the orphan cleanup.  With this patch the reproducer I made
    for this bugzilla no longer returns ESTALE when trying to do the send.  Thanks,
    
    Reported-by: Chris Wilson <jakdaw@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3d56dfedb4ac5e8cdc6e6a0a54ed33ae2253c83
Author: Bart Van Assche <bart.vanassche@gmail.com>
Date:   Tue May 21 20:43:50 2013 +0200

    timer: Fix jiffies wrap behavior of round_jiffies_common()
    
    commit 9e04d3804d3ac97d8c03a41d78d0f0674b5d01e1 upstream.
    
    Direct compare of jiffies related values does not work in the wrap
    around case. Replace it with time_is_after_jiffies().
    
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Cc: Arjan van de Ven <arjan@infradead.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Link: http://lkml.kernel.org/r/519BC066.5080600@acm.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95a5e329938d9a57365ff6d84de17772910ea9a6
Author: Shane Huang <shane.huang@amd.com>
Date:   Sat Jun 8 16:00:16 2013 +0800

    ahci: remove pmp link online check in FBS EH
    
    commit 912b9ac683b112615d5605686f1dc086402ce9f7 upstream.
    
    ata_link_online() check in ahci_error_intr() is unnecessary, it should
    be removed otherwise may lead to lockup with FBS enabled PMP.
    http://marc.info/?l=linux-ide&m=137050421603272&w=2
    
    Reported-by: Yu Liu <liuyu.ac@gmail.com>
    Signed-off-by: Shane Huang <shane.huang@amd.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fe6b2b4994fcdede2274c23ad0886f2cb3549f3
Author: Jiang Liu <liuj97@gmail.com>
Date:   Fri Jun 7 01:10:08 2013 +0800

    PCI: Fix refcount issue in pci_create_root_bus() error recovery path
    
    commit 343df771e671d821478dd3ef525a0610b808dbf8 upstream.
    
    After calling device_register(&bridge->dev), the bridge is reference-
    counted, and it is illegal to call kfree() on it except in the release
    function.
    
    [bhelgaas: changelog, use put_device() after device_register() failure]
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eadb07a8d01b5c2ae323cef29276440627fc7f1
Author: Xudong Hao <xudong.hao@intel.com>
Date:   Fri May 31 12:21:29 2013 +0800

    PCI: Finish SR-IOV VF setup before adding the device
    
    commit fbf33f516bdbcc2ab1ba1e54dfb720b0cfaa6874 upstream.
    
    Commit 4f535093cf "PCI: Put pci_dev in device tree as early as possible"
    moves device registering from pci_bus_add_devices() to pci_device_add().
    That causes problems for virtual functions because device_add(&virtfn->dev)
    is called before setting the virtfn->is_virtfn flag, which then causes Xen
    to report PCI virtual functions as PCI physical functions.
    
    Fix it by setting virtfn->is_virtfn before calling pci_device_add().
    
    [Jiang Liu]: Move the setting of virtfn->is_virtfn ahead further for better
    readability and modify changelog.
    
    Signed-off-by: Xudong Hao <xudong.hao@intel.com>
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fa759d293854180e00571def0752eeda880c72e
Author: Paul Clements <paul.clements@steeleye.com>
Date:   Wed Jul 3 15:09:04 2013 -0700

    nbd: correct disconnect behavior
    
    commit c378f70adbc1bbecd9e6db145019f14b2f688c7c upstream.
    
    Currently, when a disconnect is requested by the user (via NBD_DISCONNECT
    ioctl) the return from NBD_DO_IT is undefined (it is usually one of
    several error codes).  This means that nbd-client does not know if a
    manual disconnect was performed or whether a network error occurred.
    Because of this, nbd-client's persist mode (which tries to reconnect after
    error, but not after manual disconnect) does not always work correctly.
    
    This change fixes this by causing NBD_DO_IT to always return 0 if a user
    requests a disconnect.  This means that nbd-client can correctly either
    persist the connection (if an error occurred) or disconnect (if the user
    requested it).
    
    Signed-off-by: Paul Clements <paul.clements@steeleye.com>
    Acked-by: Rob Landley <rob@landley.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e7e4c9ae2a78a6791a2ca91a6a400f94855f01e
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Wed Jul 3 15:01:03 2013 -0700

    ocfs2: xattr: fix inlined xattr reflink
    
    commit ef962df057aaafd714f5c22ba3de1be459571fdf upstream.
    
    Inlined xattr shared free space of inode block with inlined data or data
    extent record, so the size of the later two should be adjusted when
    inlined xattr is enabled.  See ocfs2_xattr_ibody_init().  But this isn't
    done well when reflink.  For inode with inlined data, its max inlined
    data size is adjusted in ocfs2_duplicate_inline_data(), no problem.  But
    for inode with data extent record, its record count isn't adjusted.  Fix
    it, or data extent record and inlined xattr may overwrite each other,
    then cause data corruption or xattr failure.
    
    One panic caused by this bug in our test environment is the following:
    
      kernel BUG at fs/ocfs2/xattr.c:1435!
      invalid opcode: 0000 [#1] SMP
      Pid: 10871, comm: multi_reflink_t Not tainted 2.6.39-300.17.1.el5uek #1
      RIP: ocfs2_xa_offset_pointer+0x17/0x20 [ocfs2]
      RSP: e02b:ffff88007a587948  EFLAGS: 00010283
      RAX: 0000000000000000 RBX: 0000000000000010 RCX: 00000000000051e4
      RDX: ffff880057092060 RSI: 0000000000000f80 RDI: ffff88007a587a68
      RBP: ffff88007a587948 R08: 00000000000062f4 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000010
      R13: ffff88007a587a68 R14: 0000000000000001 R15: ffff88007a587c68
      FS:  00007fccff7f06e0(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000
      CS:  e033 DS: 0000 ES: 0000 CR0: 000000008005003b
      CR2: 00000000015cf000 CR3: 000000007aa76000 CR4: 0000000000000660
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
      Process multi_reflink_t
      Call Trace:
        ocfs2_xa_reuse_entry+0x60/0x280 [ocfs2]
        ocfs2_xa_prepare_entry+0x17e/0x2a0 [ocfs2]
        ocfs2_xa_set+0xcc/0x250 [ocfs2]
        ocfs2_xattr_ibody_set+0x98/0x230 [ocfs2]
        __ocfs2_xattr_set_handle+0x4f/0x700 [ocfs2]
        ocfs2_xattr_set+0x6c6/0x890 [ocfs2]
        ocfs2_xattr_user_set+0x46/0x50 [ocfs2]
        generic_setxattr+0x70/0x90
        __vfs_setxattr_noperm+0x80/0x1a0
        vfs_setxattr+0xa9/0xb0
        setxattr+0xc3/0x120
        sys_fsetxattr+0xa8/0xd0
        system_call_fastpath+0x16/0x1b
    
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Reviewed-by: Jie Liu <jeff.liu@oracle.com>
    Acked-by: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Sunil Mushran <sunil.mushran@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acfd528b942f7dc9e7f52e6ba93c35e53dd98b52
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jul 4 13:22:11 2013 +0200

    ACPI / PM: Fix corner case in acpi_bus_update_power()
    
    commit 91bdad0b6237c25a7bf8fd4604d0cc64a2005a23 upstream.
    
    The role of acpi_bus_update_power() is to update the given ACPI
    device object's power.state field to reflect the current physical
    state of the device (as inferred from the configuration of power
    resources and _PSC, if available).  For this purpose it calls
    acpi_device_set_power() that should update the power resources'
    reference counters and set power.state as appropriate.  However,
    that doesn't work if the "new" state is D1, D2 or D3hot and the
    the current value of power.state means D3cold, because in that
    case acpi_device_set_power() will refuse to transition the device
    from D3cold to non-D0.
    
    To address this problem, make acpi_bus_update_power() call
    acpi_power_transition() directly to update the power resources'
    reference counters and only use acpi_device_set_power() to put
    the device into D0 if the current physical state of it cannot
    be determined.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7734cd8caba9f06fbb0bff0c80b60575b86007f9
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Sat Jun 8 00:59:18 2013 +0000

    ACPICA: Do not use extended sleep registers unless HW-reduced bit is set
    
    commit 7cec7048fe22e3e92389da2cd67098f6c4284e7f upstream.
    
    Previous implementation incorrectly used the ACPI 5.0 extended
    sleep registers if they were simply populated. This caused
    problems on some non-HW-reduced machines. As per the ACPI spec,
    they should only be used if the HW-reduced bit is set.  Lv Zheng,
    ACPICA BZ 1020.
    
    Reported-by: Daniel Rowe <bart@fathom13.com>
    References: https://bugzilla.kernel.org/show_bug.cgi?id=54181
    References: https://bugs.acpica.org/show_bug.cgi?id=1020
    Bisected-by: Brint E. Kriebel <kernel@bekit.net>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15ab3f9cd8231e76ece48b717ce0fb90a50c072e
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Wed Jun 5 02:27:51 2013 +0000

    ACPI / EC: Add HP Folio 13 to ec_dmi_table in order to skip DSDT scan
    
    commit eff9a4b62b14cf0d9913e3caf1f26f8b7a6105c9 upstream.
    
    HP Folio 13's BIOS defines CMOS RTC Operation Region and the EC's
    _REG method will access that region.  To allow the CMOS RTC region
    handler to be installed before the EC _REG method is first invoked,
    add ec_skip_dsdt_scan() as HP Folio 13's callback to ec_dmi_table.
    
    References: https://bugzilla.kernel.org/show_bug.cgi?id=54621
    Reported-and-tested-by: Stefan Nagy <public@stefan-nagy.at>
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b7096ce70faa1d198af6d5959499ed4390976fd
Author: Axel Lin <axel.lin@ingics.com>
Date:   Wed Jul 3 15:06:45 2013 -0700

    drivers/rtc/rtc-rv3029c2.c: fix disabling AIE irq
    
    commit 29ecd78c0fd6ee05f2c6b07b23823a6ae43c13ff upstream.
    
    In the disable AIE irq code path, current code passes "1" to enable
    parameter of rv3029c2_rtc_i2c_alarm_set_irq().  Thus it does not disable
    AIE irq.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Heiko Schocher <hs@denx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87830f6fd4baeb19578ec36cfaab1295edb53f4b
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Fri Jun 28 02:40:30 2013 +0100

    genirq: Fix can_request_irq() for IRQs without an action
    
    commit 2779db8d37d4b542d9ca2575f5f178dbeaca6c86 upstream.
    
    Commit 02725e7471b8 ('genirq: Use irq_get/put functions'),
    inadvertently changed can_request_irq() to return 0 for IRQs that have
    no action.  This causes pcibios_lookup_irq() to select only IRQs that
    already have an action with IRQF_SHARED set, or to fail if there are
    none.  Change can_request_irq() to return 1 for IRQs that have no
    action (if the first two conditions are met).
    
    Reported-by: Bjarni Ingi Gislason <bjarniig@rhi.hi.is>
    Tested-by: Bjarni Ingi Gislason <bjarniig@rhi.hi.is> (against 3.2)
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: 709647@bugs.debian.org
    Link: http://bugs.debian.org/709647
    Link: http://lkml.kernel.org/r/1372383630.23847.40.camel@deadeye.wl.decadent.org.uk
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 488fa186046c76f96a59f4bac2e3209cde27eab4
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Jun 10 16:48:09 2013 -0400

    xen/pcifront: Deal with toolstack missing 'XenbusStateClosing' state.
    
    commit 098b1aeaf4d6149953b8f1f8d55c21d85536fbff upstream.
    
    There are two tool-stack that can instruct the Xen PCI frontend
    and backend to change states: 'xm' (Python code with a daemon),
    and 'xl' (C library - does not keep state changes).
    
    With the 'xm', the path to disconnect a single PCI device (xm pci-detach
    <guest> <BDF>) is:
    
    4(Connected)->7(Reconfiguring*)-> 8(Reconfigured)-> 4(Connected)->5(Closing*).
    
    The * is for states that the tool-stack sets. For 'xl', it is similar:
    
    4(Connected)->7(Reconfiguring*)-> 8(Reconfigured)-> 4(Connected)
    
    Both of them also tear down the XenBus structure, so the backend
    state ends up going in the 3(Initialised) and calls pcifront_xenbus_remove.
    
    When a PCI device is plugged back in (xm pci-attach <guest> <BDF>)
    both of them follow the same pattern:
    
    2(InitWait*), 3(Initialized*), 4(Connected*)->4(Connected).
    
    [xen-pcifront ignores the 2,3 state changes and only acts when
    4 (Connected) has been reached]
    
    Note that this is for a _single_ PCI device. If there were two
    PCI devices and only one was disconnected 'xm' would show the same
    state changes.
    
    The problem is that git commit 3d925320e9e2de162bd138bf97816bda8c3f71be
    ("xen/pcifront: Use Xen-SWIOTLB when initting if required") introduced
    a mechanism to initialize the SWIOTLB when the Xen PCI front moves to
    Connected state. It also had some aggressive seatbelt code check that
    would warn the user if one tried to change to Connected state without
    hitting first the Closing state:
    
     pcifront pci-0: PCI frontend already installed!
    
    However, that code can be relaxed and we can continue on working
    even if the frontend is instructed to be the 'Connected' state with
    no devices and then gets tickled to be in 'Connected' state again.
    
    In other words, this 4(Connected)->5(Closing)->4(Connected) state
    was expected, while 4(Connected)->.... anything but 5(Closing)->4(Connected)
    was not. This patch removes that aggressive check and allows
    Xen pcifront to work with the 'xl' toolstack (for one or more
    PCI devices) and with 'xm' toolstack (for more than two PCI
    devices).
    
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: linux-pci@vger.kernel.org
    [v2: Added in the description about two PCI devices]
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb70918017772f2bee9eae1fdbc23e22346b6231
Author: Laszlo Ersek <lersek@redhat.com>
Date:   Tue Oct 18 22:42:59 2011 +0200

    xen/time: remove blocked time accounting from xen "clockchip"
    
    commit 0b0c002c340e78173789f8afaa508070d838cf3d upstream.
    
    ... because the "clock_event_device framework" already accounts for idle
    time through the "event_handler" function pointer in
    xen_timer_interrupt().
    
    The patch is intended as the completion of [1]. It should fix the double
    idle times seen in PV guests' /proc/stat [2]. It should be orthogonal to
    stolen time accounting (the removed code seems to be isolated).
    
    The approach may be completely misguided.
    
    [1] https://lkml.org/lkml/2011/10/6/10
    [2] http://lists.xensource.com/archives/html/xen-devel/2010-08/msg01068.html
    
    John took the time to retest this patch on top of v3.10 and reported:
    "idle time is correctly incremented for pv and hvm for the normal
    case, nohz=off and nohz=idle." so lets put this patch in.
    
    Signed-off-by: Laszlo Ersek <lersek@redhat.com>
    Signed-off-by: John Haxby <john.haxby@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 638fab6cabe1dd9da68b8da6bbd62c0b969f73a6
Author: Li Zefan <lizefan@huawei.com>
Date:   Tue Jun 18 18:41:10 2013 +0800

    cgroup: fix umount vs cgroup_event_remove() race
    
    commit 1c8158eeae0f37d0eee9f1fbe68080df6a408df2 upstream.
    
     commit 5db9a4d99b0157a513944e9a44d29c9cec2e91dc
     Author: Tejun Heo <tj@kernel.org>
     Date:   Sat Jul 7 16:08:18 2012 -0700
    
         cgroup: fix cgroup hierarchy umount race
    
    This commit fixed a race caused by the dput() in css_dput_fn(), but
    the dput() in cgroup_event_remove() can also lead to the same BUG().
    
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22b8276166bdb3daf7858f6cca7d315fdcced175
Author: Joachim Eastwood <manabian@gmail.com>
Date:   Thu Jun 6 10:24:14 2013 +0200

    pcmcia: at91_cf: fix gpio_get_value in at91_cf_get_status
    
    commit e39506b466edcda2a7e9d0174d7987ae654137b7 upstream.
    
    Commit 80af9e6d (pcmcia at91_cf: fix raw gpio number usage) forgot
    to change the parameter in gpio_get_value after adding gpio
    validation.
    
    Signed-off-by: Joachim Eastwood <manabian@gmail.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Acked-by: Jean-Christophe PLAGNIOL-VILLARD <plagnioj@jcrosoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa59121e7fdf1da4794fa0cd62add42c7979028e
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Jun 18 13:04:23 2013 +0800

    drivers: hv: switch to use mb() instead of smp_mb()
    
    commit 35848f68b07df3f917cb13fc3c134718669f569b upstream.
    
    Even if guest were compiled without SMP support, it could not assume that host
    wasn't. So switch to use mb() instead of smp_mb() to force memory barriers for
    UP guest.
    
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0eadaa9e3707fe8a5afa35bbff65b947c7fce24c
Author: George Cherian <george.cherian@ti.com>
Date:   Fri Jun 21 13:59:08 2013 +0530

    usb: host: xhci-plat: release mem region while removing module
    
    commit 5388a3a5faba8dfa69e5f06c3a415d373c1a4316 upstream.
    
    Do a release_mem_region of the hcd resource. Without this the
    subsequent insertion of module fails in request_mem_region.
    
    Signed-off-by: George Cherian <george.cherian@ti.com>
    Acked-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab8a26163ce188b1264d23deacc7a8f43ec6fd5b
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Mon Jun 17 09:56:33 2013 -0700

    xhci: check for failed dma pool allocation
    
    commit 025f880cb2e4d7218d0422d4b07bea1a68959c38 upstream.
    
    Fail and free the container context in case dma_pool_alloc() can't allocate
    the raw context data part of it
    
    This patch should be backported to kernels as old as 2.6.31, that
    contain the commit d115b04818e57bdbc7ccde4d0660b15e33013dc8 "USB: xhci:
    Support for 64-byte contexts".
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Cc: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f259c12520c94fb4ecf68c33fe6d2d3c9deae92e
Author: UCHINO Satoshi <satoshi.uchino@toshiba.co.jp>
Date:   Thu May 23 11:10:11 2013 +0900

    usb: gadget: f_mass_storage: add missing memory barrier for thread_wakeup_needed
    
    commit d68c277b501889b3a50c179d1c3d704db7947b83 upstream.
    
    Without this memory barrier, the file-storage thread may fail to
    escape from the following while loop, because it may observe new
    common->thread_wakeup_needed and old bh->state which are updated by
    the callback functions.
    
            /* Wait for the CBW to arrive */
            while (bh->state != BUF_STATE_FULL) {
                    rc = sleep_thread(common);
                    if (rc)
                            return rc;
            }
    
    Signed-off-by: UCHINO Satoshi <satoshi.uchino@toshiba.co.jp>
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4339e7f446eeced1914617fa50f402244b7a36d
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Mon Jul 1 08:12:38 2013 -0400

    ext3,ext4: don't mess with dir_file->f_pos in htree_dirblock_to_tree()
    
    commit 64cb927371cd2ec43758d8a094a003d27bc3d0dc upstream.
    
    Both ext3 and ext4 htree_dirblock_to_tree() is just filling the
    in-core rbtree for use by call_filldir().  All updates of ->f_pos are
    done by the latter; bumping it here (on error) is obviously wrong - we
    might very well have it nowhere near the block we'd found an error in.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d9595ffd53baf1e9313d14d6670eb32370617a9
Author: Maarten ter Huurne <maarten@treewalker.org>
Date:   Mon Jul 1 08:12:08 2013 -0400

    ext4: fix corruption when online resizing a fs with 1K block size
    
    commit 6ca792edc13c409e8d4eb9001e048264c6a2eb64 upstream.
    
    Subtracting the number of the first data block places the superblock
    backups one block too early, corrupting the file system. When the block
    size is larger than 1K, the first data block is 0, so the subtraction
    has no effect and no corruption occurs.
    
    Signed-off-by: Maarten ter Huurne <maarten@treewalker.org>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c12c4b5612d4410f99a1b204c7dc2e6fbbc906f6
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jul 1 08:12:40 2013 -0400

    jbd2: fix theoretical race in jbd2__journal_restart
    
    commit 39c04153fda8c32e85b51c96eb5511a326ad7609 upstream.
    
    Once we decrement transaction->t_updates, if this is the last handle
    holding the transaction from closing, and once we release the
    t_handle_lock spinlock, it's possible for the transaction to commit
    and be released.  In practice with normal kernels, this probably won't
    happen, since the commit happens in a separate kernel thread and it's
    unlikely this could all happen within the space of a few CPU cycles.
    
    On the other hand, with a real-time kernel, this could potentially
    happen, so save the tid found in transaction->t_tid before we release
    t_handle_lock.  It would require an insane configuration, such as one
    where the jbd2 thread was set to a very high real-time priority,
    perhaps because a high priority real-time thread is trying to read or
    write to a file system.  But some people who use real-time kernels
    have been known to do insane things, including controlling
    laser-wielding industrial robots.  :-)
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1582fec20b0ca141667523a2a0e2cb488712087
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jul 1 08:12:38 2013 -0400

    jbd2: move superblock checksum calculation to jbd2_write_superblock()
    
    commit fe52d17cdd343ac43c85cf72940a58865b9d3bfb upstream.
    
    Some of the functions which modify the jbd2 superblock were not
    updating the checksum before calling jbd2_write_superblock().  Move
    the call to jbd2_superblock_csum_set() to jbd2_write_superblock(), so
    that the checksum is calculated consistently.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Cc: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5e43b9f02d5f4e57d8cda1d0ece194e595027ab
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Jun 18 13:25:05 2013 -0500

    rtlwifi: rtl8192cu: Fix duplicate if test
    
    commit 10d0b9030a3f86e1e26c710c7580524d7787d688 upstream.
    
    A typo causes routine rtl92cu_phy_rf6052_set_cck_txpower() to test the
    same condition twice. The problem was found using cppcheck-1.49, and the
    proper fix was verified against the pre-mac80211 version of the code.
    
    This patch was originally included as commit 1288aa4, but was accidentally
    reverted in a later patch.
    
    Reported-by: David Binderman <dcb314@hotmail.com> [original report]
    Reported-by: Andrea Morello <andrea.merello@gmail.com> [report of accidental reversion]
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 962df9bb2736ed677aa2f5f5453c0c61aef06187
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sun Jun 23 18:14:43 2013 -0500

    rtlwifi: rtl8723ae: Fix typo in firmware names
    
    commit 73e088ed17c2880a963cc760a78af8a06d4a4d9d upstream.
    
    The driver loads its firmware from files rtlwifi/rtl8723fw*.bin, but the
    MODULE_FIRMWARE macros refer to rtlwifi/RTL8723aefw*.bin.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Reported-by: Axel Köllhofer <AxelKoellhofer@web.de>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 900b565e72018dfa7f4c95dacdb3a3b5a0e4174e
Author: Pavel Shilovsky <pshilovsky@samba.org>
Date:   Thu Jul 11 11:17:45 2013 +0400

    CIFS: Fix a deadlock when a file is reopened
    
    commit 689c3db4d57a73bee6c5ad7797fce7b54d32a87c upstream.
    
    If we request reading or writing on a file that needs to be
    reopened, it causes the deadlock: we are already holding rw
    semaphore for reading and then we try to acquire it for writing
    in cifs_relock_file. Fix this by acquiring the semaphore for
    reading in cifs_relock_file due to we don't make any changes in
    locks and don't need a write access.
    
    Signed-off-by: Pavel Shilovsky <pshilovsky@samba.org>
    Acked-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44d244a13a27f0eb7b33bb152aa173c0e875df76
Author: Steve French <smfrench@gmail.com>
Date:   Thu Jul 4 14:38:48 2013 -0500

    CIFS use sensible file nlink values if unprovided
    
    commit 6658b9f70ebca5fc0795b1d6d733996af1e2caa7 upstream.
    
    Certain servers may not set the NumberOfLinks field in query file/path
    info responses. In such a case, cifs_inode_needs_reval() assumes that
    all regular files are hardlinks and triggers revalidation, leading to
    excessive and unnecessary network traffic.
    
    This change hardcodes cf_nlink (and subsequently i_nlink) when not
    returned by the server, similar to what already occurs in cifs_mkdir().
    
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
