commit 85184740541c2b80b72ebfa46cfe065ec1d1058f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Aug 20 18:09:38 2016 +0200

    Linux 4.4.19

commit cc4860773f6f8f35a178bc9615ec52c3fbc86ca4
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu Apr 28 09:24:05 2016 +0930

    Documentation/module-signing.txt: Note need for version info if reusing a key
    
    commit b8612e517c3c9809e1200b72c474dbfd969e5a83 upstream.
    
    Signing a module should only make it trusted by the specific kernel it
    was built for, not anything else.  If a module signing key is used for
    multiple ABI-incompatible kernels, the modules need to include enough
    version information to distinguish them.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc2318cc76df4fb80c3b5b9ec0e1633627dabb54
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu Apr 28 09:24:01 2016 +0930

    module: Invalidate signatures on force-loaded modules
    
    commit bca014caaa6130e57f69b5bf527967aa8ee70fdd upstream.
    
    Signing a module should only make it trusted by the specific kernel it
    was built for, not anything else.  Loading a signed module meant for a
    kernel with a different ABI could have interesting effects.
    Therefore, treat all signatures as invalid when a module is
    force-loaded.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6ec712c44c9f12cded15bff56ab045e844d503b
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Fri Jul 29 13:19:55 2016 -0400

    dm flakey: error READ bios during the down_interval
    
    commit 99f3c90d0d85708e7401a81ce3314e50bf7f2819 upstream.
    
    When the corrupt_bio_byte feature was introduced it caused READ bios to
    no longer be errored with -EIO during the down_interval.  This had to do
    with the complexity of needing to submit READs if the corrupt_bio_byte
    feature was used.
    
    Fix it so READ bios are properly errored with -EIO; doing so early in
    flakey_map() as long as there isn't a match for the corrupt_bio_byte
    feature.
    
    Fixes: a3998799fb4df ("dm flakey: add corrupt_bio_byte feature")
    Reported-by: Akira Hayakawa <ruby.wktk@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef60c9aa980b59a61c5464cc38fdfaecdec61e47
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Jul 5 15:28:53 2016 +0530

    rtc: s3c: Add s3c_rtc_{enable/disable}_clk in s3c_rtc_setfreq()
    
    commit 70c96dfac0e231424e17743bd52f6cd2ff1f2439 upstream.
    
    As per code flow s3c_rtc_setfreq() will get called with rtc clock disabled
    and in set_freq we perform h/w registers read/write, which results in a
    kernel crash on exynos7 platform while probing rtc driver.
    Below is code flow:
    s3c_rtc_probe()
        clk_prepare_enable(info->rtc_clk) // rtc clock enabled
        s3c_rtc_gettime() // will enable clk if not done, and disable it upon exit
        s3c_rtc_setfreq() //then this will be called with clk disabled
    
    This patch take cares of such issue by adding s3c_rtc_{enable/disable}_clk in
    s3c_rtc_setfreq().
    
    Fixes: 24e1455493da ("drivers/rtc/rtc-s3c.c: delete duplicate clock control")
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Reviewed-by: Pankaj Dubey <pankaj.dubey@samsung.com>
    Tested-by: Pankaj Dubey <pankaj.dubey@samsung.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74d55e5d96aaecbff198b3f7bcdc10c1c865ce71
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Tue Jun 7 20:13:08 2016 -0300

    lpfc: fix oops in lpfc_sli4_scmd_to_wqidx_distr() from lpfc_send_taskmgmt()
    
    commit 05a05872c8d4b4357c9d913e6d73ae64882bddf5 upstream.
    
    The lpfc_sli4_scmd_to_wqidx_distr() function expects the scsi_cmnd
    'lpfc_cmd->pCmd' not to be null, and point to the midlayer command.
    
    That's not true in the .eh_(device|target|bus)_reset_handler path,
    because lpfc_send_taskmgmt() sends commands not from the midlayer, so
    does not set 'lpfc_cmd->pCmd'.
    
    That is true in the .queuecommand path because lpfc_queuecommand()
    stores the scsi_cmnd from midlayer in lpfc_cmd->pCmd; and lpfc_cmd is
    stored by lpfc_scsi_prep_cmnd() in piocbq->context1 -- which is passed
    to lpfc_sli4_scmd_to_wqidx_distr() as lpfc_cmd parameter.
    
    This problem can be hit on SCSI EH, and immediately with sg_reset.
    These 2 test-cases demonstrate the problem/fix with next-20160601.
    
    Test-case 1) sg_reset
    
        # strace sg_reset --device /dev/sdm
        <...>
        open("/dev/sdm", O_RDWR|O_NONBLOCK)     = 3
        ioctl(3, SG_SCSI_RESET, 0x3fffde6d0994 <unfinished ...>
        +++ killed by SIGSEGV +++
        Segmentation fault
    
        # dmesg
        Unable to handle kernel paging request for data at address 0x00000000
        Faulting instruction address: 0xd00000001c88442c
        Oops: Kernel access of bad area, sig: 11 [#1]
        <...>
        CPU: 104 PID: 16333 Comm: sg_reset Tainted: G        W       4.7.0-rc1-next-20160601-00004-g95b89dc #6
        <...>
        NIP [d00000001c88442c] lpfc_sli4_scmd_to_wqidx_distr+0xc/0xd0 [lpfc]
        LR [d00000001c826fe8] lpfc_sli_calc_ring.part.27+0x98/0xd0 [lpfc]
        Call Trace:
        [c000003c9ec876f0] [c000003c9ec87770] 0xc000003c9ec87770 (unreliable)
        [c000003c9ec87720] [d00000001c82e004] lpfc_sli_issue_iocb+0xd4/0x260 [lpfc]
        [c000003c9ec87780] [d00000001c831a3c] lpfc_sli_issue_iocb_wait+0x15c/0x5b0 [lpfc]
        [c000003c9ec87880] [d00000001c87f27c] lpfc_send_taskmgmt+0x24c/0x650 [lpfc]
        [c000003c9ec87950] [d00000001c87fd7c] lpfc_device_reset_handler+0x10c/0x200 [lpfc]
        [c000003c9ec87a10] [c000000000610694] scsi_try_bus_device_reset+0x44/0xc0
        [c000003c9ec87a40] [c0000000006113e8] scsi_ioctl_reset+0x198/0x2c0
        [c000003c9ec87bf0] [c00000000060fe5c] scsi_ioctl+0x13c/0x4b0
        [c000003c9ec87c80] [c0000000006629b0] sd_ioctl+0xf0/0x120
        [c000003c9ec87cd0] [c00000000046e4f8] blkdev_ioctl+0x248/0xb70
        [c000003c9ec87d30] [c0000000002a1f60] block_ioctl+0x70/0x90
        [c000003c9ec87d50] [c00000000026d334] do_vfs_ioctl+0xc4/0x890
        [c000003c9ec87de0] [c00000000026db60] SyS_ioctl+0x60/0xc0
        [c000003c9ec87e30] [c000000000009120] system_call+0x38/0x108
        Instruction dump:
        <...>
    
        With fix:
    
        # strace sg_reset --device /dev/sdm
        <...>
        open("/dev/sdm", O_RDWR|O_NONBLOCK)     = 3
        ioctl(3, SG_SCSI_RESET, 0x3fffe103c554) = 0
        close(3)                                = 0
        exit_group(0)                           = ?
        +++ exited with 0 +++
    
        # dmesg
        [  424.658649] lpfc 0006:01:00.4: 4:(0):0713 SCSI layer issued Device Reset (1, 0) return x2002
    
    Test-case 2) SCSI EH
    
        Using this debug patch to wire an SCSI EH trigger, for lpfc_scsi_cmd_iocb_cmpl():
        -       cmd->scsi_done(cmd);
        +       if ((phba->pport ? phba->pport->cfg_log_verbose : phba->cfg_log_verbose) == 0x32100000)
        +               printk(KERN_ALERT "lpfc: skip scsi_done()\n");
        +       else
        +               cmd->scsi_done(cmd);
    
        # echo 0x32100000 > /sys/class/scsi_host/host11/lpfc_log_verbose
    
        # dd if=/dev/sdm of=/dev/null iflag=direct &
        <...>
    
        After a while:
    
        # dmesg
        lpfc 0006:01:00.4: 4:(0):3053 lpfc_log_verbose changed from 0 (x0) to 839909376 (x32100000)
        lpfc: skip scsi_done()
        <...>
        Unable to handle kernel paging request for data at address 0x00000000
        Faulting instruction address: 0xd0000000199e448c
        Oops: Kernel access of bad area, sig: 11 [#1]
        <...>
        CPU: 96 PID: 28556 Comm: scsi_eh_11 Tainted: G        W       4.7.0-rc1-next-20160601-00004-g95b89dc #6
        <...>
        NIP [d0000000199e448c] lpfc_sli4_scmd_to_wqidx_distr+0xc/0xd0 [lpfc]
        LR [d000000019986fe8] lpfc_sli_calc_ring.part.27+0x98/0xd0 [lpfc]
        Call Trace:
        [c000000ff0d0b890] [c000000ff0d0b900] 0xc000000ff0d0b900 (unreliable)
        [c000000ff0d0b8c0] [d00000001998e004] lpfc_sli_issue_iocb+0xd4/0x260 [lpfc]
        [c000000ff0d0b920] [d000000019991a3c] lpfc_sli_issue_iocb_wait+0x15c/0x5b0 [lpfc]
        [c000000ff0d0ba20] [d0000000199df27c] lpfc_send_taskmgmt+0x24c/0x650 [lpfc]
        [c000000ff0d0baf0] [d0000000199dfd7c] lpfc_device_reset_handler+0x10c/0x200 [lpfc]
        [c000000ff0d0bbb0] [c000000000610694] scsi_try_bus_device_reset+0x44/0xc0
        [c000000ff0d0bbe0] [c0000000006126cc] scsi_eh_ready_devs+0x49c/0x9c0
        [c000000ff0d0bcb0] [c000000000614160] scsi_error_handler+0x580/0x680
        [c000000ff0d0bd80] [c0000000000ae848] kthread+0x108/0x130
        [c000000ff0d0be30] [c0000000000094a8] ret_from_kernel_thread+0x5c/0xb4
        Instruction dump:
        <...>
    
        With fix:
    
        # dmesg
        lpfc 0006:01:00.4: 4:(0):3053 lpfc_log_verbose changed from 0 (x0) to 839909376 (x32100000)
        lpfc: skip scsi_done()
        <...>
        lpfc 0006:01:00.4: 4:(0):0713 SCSI layer issued Device Reset (0, 0) return x2002
        <...>
        lpfc 0006:01:00.4: 4:(0):0723 SCSI layer issued Target Reset (1, 0) return x2002
        <...>
        lpfc 0006:01:00.4: 4:(0):0714 SCSI layer issued Bus Reset Data: x2002
        <...>
        lpfc 0006:01:00.4: 4:(0):3172 SCSI layer issued Host Reset Data:
        <...>
    
    Fixes: 8b0dff14164d ("lpfc: Add support for using block multi-queue")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Acked-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b1f21a1112e96e419b075406e54dc915b4eade6
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Wed Aug 3 09:00:14 2016 +0800

    ACPI / EC: Work around method reentrancy limit in ACPICA for _Qxx
    
    commit e1191bd4f62d9086a1a47adc286e7fcffc1fa55c upstream.
    
    A regression is caused by the following commit:
    
      Commit: 02b771b64b73226052d6e731a0987db3b47281e9
      Subject: ACPI / EC: Fix an issue caused by the serialized _Qxx evaluations
    
    In this commit, using system workqueue causes that the maximum parallel
    executions of _Qxx can exceed 255. This violates the method reentrancy
    limit in ACPICA and generates the following error log:
    
      ACPI Error: Method reached maximum reentrancy limit (255) (20150818/dsmethod-341)
    
    This patch creates a seperate workqueue and limits the number of parallel
    _Qxx evaluations down to a configurable value (can be tuned against number
    of online CPUs).
    
    Since EC events are handled after driver probe, we can create the workqueue
    in acpi_ec_init().
    
    Fixes: 02b771b64b73 (ACPI / EC: Fix an issue caused by the serialized _Qxx evaluations)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=135691
    Reported-and-tested-by: Helen Buus <ubuntu@hbuus.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32b04db4f2565382a3cded17290068a4691880a4
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Jun 13 21:28:00 2016 +0300

    x86/platform/intel_mid_pci: Rework IRQ0 workaround
    
    commit bb27570525a71f48347ed0e0c265063e7952bb61 upstream.
    
    On Intel Merrifield platform several PCI devices have a bogus configuration,
    i.e. the IRQ0 had been assigned to few of them. These are PCI root bridge,
    eMMC0, HS UART common registers, PWM, and HDMI. The actual interrupt line can
    be allocated to one device exclusively, in our case to eMMC0, the rest should
    cope without it and basically known drivers for them are not using interrupt
    line at all.
    
    Rework IRQ0 workaround, which was previously done to avoid conflict between
    eMMC0 and HS UART common registers, to behave differently based on the device
    in question, i.e. allocate interrupt line to eMMC0, but silently skip interrupt
    allocation for the rest except HS UART common registers which are not used
    anyway. With this rework IOSF MBI driver in particular would be used.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: 39d9b77b8deb ("x86/pci/intel_mid_pci: Work around for IRQ0 assignment")
    Link: http://lkml.kernel.org/r/1465842481-136852-1-git-send-email-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a57a55b50558b6134a6465e61655f3d67bfa395c
Author: Chris Blake <chrisrblake93@gmail.com>
Date:   Mon May 30 07:26:37 2016 -0500

    PCI: Mark Atheros AR9485 and QCA9882 to avoid bus reset
    
    commit 9ac0108c2bac3f1d0255f64fb89fc27e71131b24 upstream.
    
    Similar to the AR93xx series, the AR94xx and the Qualcomm QCA988x also have
    the same quirk for the Bus Reset.
    
    Fixes: c3e59ee4e766 ("PCI: Mark Atheros AR93xx to avoid bus reset")
    Signed-off-by: Chris Blake <chrisrblake93@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23e0fce7b2e31a9672137e0887d521068f467b04
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Jul 21 14:27:51 2016 +0800

    MIPS: hpet: Increase HPET_MIN_PROG_DELTA and decrease HPET_MIN_CYCLES
    
    commit 3ef06653987d4c4536b408321edf0e5caa2a317f upstream.
    
    At first, we prefer to use mips clockevent device, so we decrease the
    rating of hpet clockevent device.
    
    For hpet, if HPET_MIN_PROG_DELTA (minimum delta of hpet programming) is
    too small and HPET_MIN_CYCLES (threshold of -ETIME checking) is too
    large, then hpet_next_event() can easily return -ETIME. After commit
    c6eb3f70d44828 ("hrtimer: Get rid of hrtimer softirq") this will cause
    a RCU stall.
    
    So, HPET_MIN_PROG_DELTA must be sufficient that we don't re-trip the
    -ETIME check -- if we do, we will return -ETIME, forward the next event
    time, try to set it, return -ETIME again, and basically lock the system
    up. Meanwhile, HPET_MIN_CYCLES doesn't need to be too large, 16 cycles
    is enough.
    
    This solution is similar to commit f9eccf24615672 ("clocksource/drivers
    /vt8500: Increase the minimum delta").
    
    By the way, this patch ensures hpet count/compare to be 32-bit long.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J . Hill <Steven.Hill@imgtec.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13819/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b37e9799616c34e2cd9eb8c9174e952e2825b64
Author: Huacai Chen <chenhc@lemote.com>
Date:   Fri Jul 22 11:46:31 2016 +0800

    MIPS: Don't register r4k sched clock when CPUFREQ enabled
    
    commit 07d69579e7fec27e371296d8ca9d6076fc401b5c upstream.
    
    Don't register r4k sched clock when CPUFREQ enabled because sched clock
    need a constant frequency.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J . Hill <Steven.Hill@caviumnetworks.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13820/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e86d99f90b6fe8beb72f024e99c107fd42b65235
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Jun 14 14:59:38 2016 +0100

    MIPS: mm: Fix definition of R6 cache instruction
    
    commit 4f53989b0652ffe2605221c81ca8ffcfc90aed2a upstream.
    
    Commit a168b8f1cde6 ("MIPS: mm: Add MIPS R6 instruction encodings") added
    an incorrect definition of the redefined MIPSr6 cache instruction.
    
    Executing any kernel code including this instuction results in a
    reserved instruction exception and kernel panic.
    
    Fix the instruction definition.
    
    Fixes: a168b8f1cde6588ff7a67699fa11e01bc77a5ddd
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/13663/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bda3b121a7f44f34b0470c1ac3496a78769d019
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Jun 24 10:55:44 2016 -0400

    SUNRPC: Don't allocate a full sockaddr_storage for tracing
    
    commit db1bb44c4c7e8d49ed674dc59e5222d99c698088 upstream.
    
    We're always tracing IPv4 or IPv6 addresses, so we can save a lot
    of space on the ringbuffer by allocating the correct sockaddr size.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Fixes: 83a712e0afef "sunrpc: add some tracepoints around ..."
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7484fbecff63dd81e396565cdbe28ba598219fdd
Author: KT Liao <kt.liao@emc.com.tw>
Date:   Wed Jul 13 11:12:12 2016 -0700

    Input: elan_i2c - properly wake up touchpad on ASUS laptops
    
    commit 2de4fcc64685def3e586856a2dc636df44532395 upstream.
    
    Some ASUS laptops were shipped with touchpads that require to be woken up
    first, before trying to switch them into absolute reporting mode, otherwise
    touchpad would fail to work while flooding the logs with:
    
            elan_i2c i2c-ELAN1000:00: invalid report id data (1)
    
    Among affected devices are Asus E202SA, N552VW, X456UF, UX305CA, and
    others. We detect such devices by checking the IC type and product ID
    numbers and adjusting order of operations accordingly.
    
    Signed-off-by: KT Liao <kt.liao@emc.com.tw>
    Reported-by: Chris Chiu <chiu@endlessm.com>
    Reported-by: Vlad Glagolev <stealth@vaygr.net>
    Tested-by: Vlad Glagolev <stealth@vaygr.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ba9a6e48bfb2b00a912a648b69063501637ed3
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Jun 13 22:58:09 2016 -0700

    target: Fix ordered task CHECK_CONDITION early exception handling
    
    commit 410c29dfbfdf73d0d0b5d14a21868ab038eca703 upstream.
    
    If a Simple command is sent with a failure, target_setup_cmd_from_cdb
    returns with TCM_UNSUPPORTED_SCSI_OPCODE or TCM_INVALID_CDB_FIELD.
    
    So in the cases where target_setup_cmd_from_cdb returns an error, we
    never get far enough to call target_execute_cmd to increment simple_cmds.
    Since simple_cmds isn't incremented, the result of the failure from
    target_setup_cmd_from_cdb causes transport_generic_request_failure to
    decrement simple_cmds, due to call to transport_complete_task_attr.
    
    With this dev->simple_cmds or dev->dev_ordered_sync is now -1, not 0.
    So when a subsequent command with an Ordered Task is sent, it causes
    a hang, since dev->simple_cmds is at -1.
    
    Tested-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Signed-off-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Tested-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Signed-off-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51d841908029ff6b892a93e4df8175162ca8dcc8
Author: Mike Christie <mchristi@redhat.com>
Date:   Thu Jun 2 20:12:37 2016 -0500

    target: Fix max_unmap_lba_count calc overflow
    
    commit ea263c7fada4af8ec7fe5fcfd6e7d7705a89351b upstream.
    
    max_discard_sectors only 32bits, and some non scsi backend
    devices will set this to the max 0xffffffff, so we can end up
    overflowing during the max_unmap_lba_count calculation.
    
    This fixes a regression caused by my patch:
    
    commit 8a9ebe717a133ba7bc90b06047f43cc6b8bcb8b3
    Author: Mike Christie <mchristi@redhat.com>
    Date:   Mon Jan 18 14:09:27 2016 -0600
    
        target: Fix WRITE_SAME/DISCARD conversion to linux 512b sectors
    
    which can result in extra discards being sent to due the overflow
    causing max_unmap_lba_count to be smaller than what the backing
    device can actually support.
    
    Signed-off-by: Mike Christie <mchristi@redhat.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f318588b758514c35f0a9227195178a3b2b4b733
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Thu Jun 2 14:56:45 2016 -0700

    target: Fix race between iscsi-target connection shutdown + ABORT_TASK
    
    commit 064cdd2d91c2805d788876082f31cc63506f22c3 upstream.
    
    This patch fixes a race in iscsit_release_commands_from_conn() ->
    iscsit_free_cmd() -> transport_generic_free_cmd() + wait_for_tasks=1,
    where CMD_T_FABRIC_STOP could end up being set after the final
    kref_put() is called from core_tmr_abort_task() context.
    
    This results in transport_generic_free_cmd() blocking indefinately
    on se_cmd->cmd_wait_comp, because the target_release_cmd_kref()
    check for CMD_T_FABRIC_STOP returns false.
    
    To address this bug, make iscsit_release_commands_from_conn()
    do list_splice and set CMD_T_FABRIC_STOP early while holding
    iscsi_conn->cmd_lock.  Also make iscsit_aborted_task() only
    remove iscsi_cmd_t if CMD_T_FABRIC_STOP has not already been
    set.
    
    Finally in target_release_cmd_kref(), only honor fabric_stop
    if CMD_T_ABORTED has been set.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Quinn Tran <quinn.tran@qlogic.com>
    Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.de>
    Tested-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60ba156dda2c11ff7a44d78ec64abd21b9813115
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Wed May 25 12:25:04 2016 -0700

    target: Fix missing complete during ABORT_TASK + CMD_T_FABRIC_STOP
    
    commit 5e2c956b8aa24d4f33ff7afef92d409eed164746 upstream.
    
    During transport_generic_free_cmd() with a concurrent TMR
    ABORT_TASK and shutdown CMD_T_FABRIC_STOP bit set, the
    caller will be blocked on se_cmd->cmd_wait_stop completion
    until the final kref_put() -> target_release_cmd_kref()
    has been invoked to call complete().
    
    However, when ABORT_TASK is completed with FUNCTION_COMPLETE
    in core_tmr_abort_task(), the aborted se_cmd will have already
    been removed from se_sess->sess_cmd_list via list_del_init().
    
    This results in target_release_cmd_kref() hitting the
    legacy list_empty() == true check, invoking ->release_cmd()
    but skipping complete() to wakeup se_cmd->cmd_wait_stop
    blocked earlier in transport_generic_free_cmd() code.
    
    To address this bug, it's safe to go ahead and drop the
    original list_empty() check so that fabric_stop invokes
    the complete() as expected, since list_del_init() can
    safely be used on a empty list.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Quinn Tran <quinn.tran@qlogic.com>
    Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.de>
    Tested-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6492c1c5b95658bc070d5d231bc32568b84b49bb
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Tue May 17 22:19:10 2016 -0700

    target: Fix ordered task target_setup_cmd_from_cdb exception hang
    
    commit dff0ca9ea7dc8be2181a62df4a722c32ce68ff4a upstream.
    
    If a command with a Simple task attribute is failed due to a Unit
    Attention, then a subsequent command with an Ordered task attribute
    will hang forever.  The reason for this is that the Unit Attention
    status is checked for in target_setup_cmd_from_cdb, before the call
    to target_execute_cmd, which calls target_handle_task_attr, which
    in turn increments dev->simple_cmds.
    
    However, transport_generic_request_failure still calls
    transport_complete_task_attr, which will decrement dev->simple_cmds.
    In this case, simple_cmds is now -1.  So when a command with the
    Ordered task attribute is sent, target_handle_task_attr sees that
    dev->simple_cmds is not 0, so it decides it can't execute the
    command until all the (nonexistent) Simple commands have completed.
    
    Reported-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Tested-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Reported-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Tested-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 862312014cfd0770418760d24f980b2f45095e93
Author: Feng Li <lifeng1519@gmail.com>
Date:   Tue Jul 12 06:15:44 2016 +0800

    iscsi-target: Fix panic when adding second TCP connection to iSCSI session
    
    commit 8abc718de6e9e52d8a6bfdb735060554aeae25e4 upstream.
    
    In MC/S scenario, the conn->sess has been set NULL in
    iscsi_login_non_zero_tsih_s1 when the second connection comes here,
    then kernel panic.
    
    The conn->sess will be assigned in iscsi_login_non_zero_tsih_s2. So
    we should check whether it's NULL before calling.
    
    Signed-off-by: Feng Li <lifeng1519@gmail.com>
    Tested-by: Sumit Rai <sumit.rai@calsoftinc.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4056337b1e81a1b137aa562133dc5430cd2fd19e
Author: Iosif Harutyunov <iharutyunov@SonicWALL.com>
Date:   Fri Jul 22 23:22:42 2016 +0000

    ubi: Fix race condition between ubi device creation and udev
    
    commit 714fb87e8bc05ff78255afc0dca981e8c5242785 upstream.
    
    Install the UBI device object before we arm sysfs.
    Otherwise udev tries to read sysfs attributes before UBI is ready and
    udev rules will not match.
    
    Signed-off-by: Iosif Harutyunov <iharutyunov@sonicwall.com>
    [rw: massaged commit message]
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79d6bc128c0b3370acbfedf7da44e64678c25c27
Author: Richard Weinberger <richard@nod.at>
Date:   Mon Jul 4 22:06:51 2016 +0200

    ubi: Fix early logging
    
    commit bc743f34dfa011e62edd0ea4ae8455be06c083b5 upstream.
    
    We cannot use ubi_* logging functions before the UBI
    object is initialized.
    
    Fixes: 3260870331 ("UBI: Extend UBI layer debug/messaging capabilities")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 752aaae53df7cf134f02285505174a74a2215e3e
Author: Richard Weinberger <richard@nod.at>
Date:   Thu Jun 23 19:30:38 2016 +0200

    ubi: Make volume resize power cut aware
    
    commit 4946784bd3924b1374f05eebff2fd68660bae866 upstream.
    
    When the volume resize operation shrinks a volume,
    LEBs will be unmapped. Since unmapping will not erase these
    LEBs immediately we have to wait for that operation to finish.
    Otherwise in case of a power cut right after writing the new
    volume table the UBI attach process can find more LEBs than the
    volume table knows. This will render the UBI image unattachable.
    
    Fix this issue by waiting for erase to complete and write the new
    volume table afterward.
    
    Reported-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c00c2171c0d525f49e8c36d79082ee33fba8b10
Author: Frank Rowand <frowand.list@gmail.com>
Date:   Thu Jun 16 10:51:46 2016 -0700

    of: fix memory leak related to safe_name()
    
    commit d9fc880723321dbf16b2981e3f3e916b73942210 upstream.
    
    Fix a memory leak resulting from memory allocation in safe_name().
    This patch fixes all call sites of safe_name().
    
    Mathieu Malaterre reported the memory leak on boot:
    
    On my PowerMac device-tree would generate a duplicate name:
    
    [    0.023043] device-tree: Duplicate name in PowerPC,G4@0, renamed to "l2-cache#1"
    
    in this case a newly allocated name is generated by `safe_name`. However
    in this case it is never deallocated.
    
    The bug was found using kmemleak reported as:
    
    unreferenced object 0xdf532e60 (size 32):
      comm "swapper", pid 1, jiffies 4294892300 (age 1993.532s)
      hex dump (first 32 bytes):
        6c 32 2d 63 61 63 68 65 23 31 00 dd e4 dd 1e c2  l2-cache#1......
        ec d4 ba ce 04 ec cc de 8e 85 e9 ca c4 ec cc 9e  ................
      backtrace:
        [<c02d3350>] kvasprintf+0x64/0xc8
        [<c02d3400>] kasprintf+0x4c/0x5c
        [<c0453814>] safe_name.isra.1+0x80/0xc4
        [<c04545d8>] __of_attach_node_sysfs+0x6c/0x11c
        [<c075f21c>] of_core_init+0x8c/0xf8
        [<c0729594>] kernel_init_freeable+0xd4/0x208
        [<c00047e8>] kernel_init+0x24/0x11c
        [<c00158ec>] ret_from_kernel_thread+0x5c/0x64
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=120331
    
    Signed-off-by: Frank Rowand <frank.rowand@am.sony.com>
    Reported-by: mathieu.malaterre@gmail.com
    Tested-by: Mathieu Malaterre <mathieu.malaterre@gmail.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd8c10a80ee746348a59c9a98dd6a7eeec73fc28
Author: Dotan Barak <dotanb@dev.mellanox.co.il>
Date:   Wed Jun 22 17:27:31 2016 +0300

    IB/mlx4: Fix memory leak if QP creation failed
    
    commit 5b420d9cf7382c6e1512e96e02d18842d272049c upstream.
    
    When RC, UC, or RAW QPs are created, a qp object is allocated (kzalloc).
    If at a later point (in procedure create_qp_common) the qp creation fails,
    this qp object must be freed.
    
    Fixes: 1ffeb2eb8be99 ("IB/mlx4: SR-IOV IB context objects and proxy/tunnel SQP support")
    Signed-off-by: Dotan Barak <dotanb@dev.mellanox.co.il>
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d057209617da2af6e2d40dc1473c85813fb443f8
Author: Yishai Hadas <yishaih@mellanox.com>
Date:   Wed Jun 22 17:27:29 2016 +0300

    IB/mlx4: Fix error flow when sending mads under SRIOV
    
    commit a6100603a4a87fc436199362bdb81cb849faaf6e upstream.
    
    Fix mad send error flow to prevent double freeing address handles,
    and leaking tx_ring entries when SRIOV is active.
    
    If ib_mad_post_send fails, the address handle pointer in the tx_ring entry
    must be set to NULL (or there will be a double-free) and tx_tail must be
    incremented (or there will be a leak of tx_ring entries).
    The tx_ring is handled the same way in the send-completion handler.
    
    Fixes: 37bfc7c1e83f ("IB/mlx4: SR-IOV multiplex and demultiplex MADs")
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Reviewed-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 155c27dd5575e9a5466587ece499c61d9089615a
Author: Yishai Hadas <yishaih@mellanox.com>
Date:   Wed Jun 22 17:27:28 2016 +0300

    IB/mlx4: Fix the SQ size of an RC QP
    
    commit f2940e2c76bb554a7fbdd28ca5b90904117a9e96 upstream.
    
    When calculating the required size of an RC QP send queue, leave
    enough space for masked atomic operations, which require more space than
    "regular" atomic operation.
    
    Fixes: 6fa8f719844b ("IB/mlx4: Add support for masked atomic operations")
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Reviewed-by: Jack Morgenstein <jackm@mellanox.co.il>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d13a91a689fc8b7f6bdbc00adc5322dc9e338d0
Author: Mark Bloch <markb@mellanox.com>
Date:   Fri May 6 22:45:24 2016 +0300

    IB/IWPM: Fix a potential skb leak
    
    commit 5ed935e861a4cbf2158ad3386d6d26edd60d2658 upstream.
    
    In case ibnl_put_msg fails in send_nlmsg_done,
    the function returns with -ENOMEM without freeing.
    
    This patch fixes this behavior.
    
    Fixes: 30dc5e63d6a5 ("RDMA/core: Add support for iWARP Port Mapper user space service")
    Signed-off-by: Mark Bloch <markb@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bb807338af3c4dcef05ad979394ec4effffeb56
Author: Erez Shitrit <erezsh@mellanox.com>
Date:   Sat Jun 4 15:15:19 2016 +0300

    IB/IPoIB: Don't update neigh validity for unresolved entries
    
    commit 61c78eea9516a921799c17b4c20558e2aa780fd3 upstream.
    
    ipoib_neigh_get unconditionally updates the "alive" variable member on
    any packet send.  This prevents the neighbor garbage collection from
    cleaning out a dead neighbor entry if we are still queueing packets
    for it.  If the queue for this neighbor is full, then don't update the
    alive timestamp.  That way the neighbor can time out even if packets
    are still being queued as long as none of them are being sent.
    
    Fixes: b63b70d87741 ("IPoIB: Use a private hash table for path lookup in xmit path")
    Signed-off-by: Erez Shitrit <erezsh@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 041a8254284b766ba90425b1576f86f72b7dfbf2
Author: Mark Bloch <markb@mellanox.com>
Date:   Fri May 6 22:45:27 2016 +0300

    IB/SA: Use correct free function
    
    commit 0f377d86252d11bfea941852785e3094b93601a7 upstream.
    
    Fixes a direct call to kfree_skb when nlmsg_free should be used.
    
    Fixes: 2ca546b92a02 ('IB/sa: Route SA pathrecord query through netlink')
    Signed-off-by: Mark Bloch <markb@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1859e0e73e50397d958cc27d53129c2a33e6880
Author: Noa Osherovich <noaos@mellanox.com>
Date:   Sat Jun 4 15:15:29 2016 +0300

    IB/mlx5: Return PORT_ERR in Active to Initializing tranisition
    
    commit 2788cf3bd90af3791c3195c52391bcf34fa67b40 upstream.
    
    FW port-change events are fired on Active <-> non Active port state
    transitions only.
    When the port state changes from Active to Initializing (Active ->
    Down -> Initializing), a single event is fired.
    The HCA transitions from Down to Initializing unless prevented from
    doing so, hence the driver should also propagate events when the port
    state is Initializing to consumers so they'll be aware that the port
    is no longer Active and act accordingly.
    
    Fixes: e126ba97dba9e ('mlx5: Add driver for Mellanox Connect-IB...')
    Signed-off-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f868cae619b0b6e56afca0d6ee5377d5855f64f1
Author: Eli Cohen <eli@mellanox.com>
Date:   Wed Jun 22 17:27:26 2016 +0300

    IB/mlx5: Fix post send fence logic
    
    commit c9b254955b9f8814966f5dabd34c39d0e0a2b437 upstream.
    
    If the caller specified IB_SEND_FENCE in the send flags of the work
    request and no previous work request stated that the successive one
    should be fenced, the work request would be executed without a fence.
    This could result in RDMA read or atomic operations failure due to a MR
    being invalidated. Fix this by adding the mlx5 enumeration for fencing
    RDMA/atomic operations and fix the logic to apply this.
    
    Fixes: e126ba97dba9 ('mlx5: Add driver for Mellanox Connect-IB adapters')
    Signed-off-by: Eli Cohen <eli@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a25be0f972d74aa4bd3efe8951eb3c66d605c650
Author: Noa Osherovich <noaos@mellanox.com>
Date:   Sat Jun 4 15:15:35 2016 +0300

    IB/mlx5: Fix entries check in mlx5_ib_resize_cq
    
    commit 3c4c37746c919c983e439ac6a7328cd2d48c10ed upstream.
    
    Verify that number of entries is less than device capability.
    Add an appropriate warning message for error flow.
    
    Fixes: bde51583f49b ('IB/mlx5: Add support for resize CQ')
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbbfde038e42029e4dfbb303ab5f825fd743973e
Author: Noa Osherovich <noaos@mellanox.com>
Date:   Sat Jun 4 15:15:32 2016 +0300

    IB/mlx5: Fix returned values of query QP
    
    commit 0540d8148d419bf769e5aa99c77027febd8922f0 upstream.
    
    Some variables were not initialized properly: max_recv_wr,
    max_recv_sge, max_send_wr, qp_context and max_inline_data.
    
    Fixes: e126ba97dba9 ('mlx5: Add driver for Mellanox Connect-IB...')
    Signed-off-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bae7400e1e13b1ce617eae73227218d7bff3d829
Author: Noa Osherovich <noaos@mellanox.com>
Date:   Sat Jun 4 15:15:34 2016 +0300

    IB/mlx5: Fix entries checks in mlx5_ib_create_cq
    
    commit 9ea578528656e191c1097798a771ff08bab6f323 upstream.
    
    Number of entries shouldn't be greater than the device's max
    capability. This should be checked before rounding the entries number
    to power of two.
    
    Fixes: 51ee86a4af639 ('IB/mlx5: Fix check of number of entries...')
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02773ea7eddad4b35bc2812d3e7743ee48430d4b
Author: Artemy Kovalyov <artemyko@mellanox.com>
Date:   Fri Jun 17 15:33:31 2016 +0300

    IB/mlx5: Fix MODIFY_QP command input structure
    
    commit e3353c268b06236d6c40fa1714c114f21f44451c upstream.
    
    Make MODIFY_QP command input structure compliant to specification
    
    Fixes: e126ba97dba9 ('mlx5: Add driver for Mellanox Connect-IB adapters')
    Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 148a19e60566ac9a72381bbfd51d00a8c264949b
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Aug 4 15:28:04 2016 +0800

    ALSA: hda - Fix headset mic detection problem for two dell machines
    
    commit 59ec4b57bcaede46546d54d037a21004b9aa5cef upstream.
    
    One of the machines has ALC255 on it, another one has ALC298 on it.
    
    On the machine with the codec ALC298, it also has the speaker volume
    problem, so we add the fixup chained to ALC298_FIXUP_SPK_VOLUME rather
    than adding a group of pin definition in the pin quirk table, since
    the speak volume problem does not happen on other machines yet.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f39db7fb96a0f2ab9d0fb34b9cc64c272abd6c21
Author: Maruthi Srinivas Bayyavarapu <Maruthi.Bayyavarapu@amd.com>
Date:   Wed Aug 3 16:46:39 2016 +0530

    ALSA: hda: add AMD Bonaire AZ PCI ID with proper driver caps
    
    commit fd48331f9b71d2add941adaee3619f5b8527182d upstream.
    
    This commit fixes garbled audio on Bonaire HDMI
    
    Signed-off-by: Maruthi Bayyavarapu <maruthi.bayyavarapu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39d505450f84aef77377c1fe0757e6b906132112
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Aug 1 10:20:32 2016 +0800

    ALSA: hda/realtek - Can't adjust speaker's volume on a Dell AIO
    
    commit dd9aa335c88003d131ac874e7f6809902de0b847 upstream.
    
    We have a Dell AIO on which we can't adjust its speaker's volume.
    The problem is it is connected to a Audio Output node without Amp-out
    capability. To fix it, we change it to be connnected to a node with
    Amp-out capability.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e4a2f979dd707742352dce6409916bc5788d7f8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Aug 3 15:13:00 2016 +0200

    ALSA: hda: Fix krealloc() with __GFP_ZERO usage
    
    commit 33baefe5e72f17a6df378e48196cd8cada11deec upstream.
    
    krealloc() doesn't work always properly with __GFP_ZERO flag as
    expected.  For clearing the reallocated area, we need to clear
    explicitly instead.
    
    Reported-by: Joe Perches <joe@perches.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4733b66d45d4452155a123b12dfeba3edba0facd
Author: Jia He <hejianet@gmail.com>
Date:   Tue Aug 2 14:02:31 2016 -0700

    mm/hugetlb: avoid soft lockup in set_max_huge_pages()
    
    commit 649920c6ab93429b94bc7c1aa7c0e8395351be32 upstream.
    
    In powerpc servers with large memory(32TB), we watched several soft
    lockups for hugepage under stress tests.
    
    The call traces are as follows:
    1.
    get_page_from_freelist+0x2d8/0xd50
    __alloc_pages_nodemask+0x180/0xc20
    alloc_fresh_huge_page+0xb0/0x190
    set_max_huge_pages+0x164/0x3b0
    
    2.
    prep_new_huge_page+0x5c/0x100
    alloc_fresh_huge_page+0xc8/0x190
    set_max_huge_pages+0x164/0x3b0
    
    This patch fixes such soft lockups.  It is safe to call cond_resched()
    there because it is out of spin_lock/unlock section.
    
    Link: http://lkml.kernel.org/r/1469674442-14848-1-git-send-email-hejianet@gmail.com
    Signed-off-by: Jia He <hejianet@gmail.com>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7928de5185f04b970dc9505cb8caa1cb5e46fa07
Author: Hector Palacios <hector.palacios@digi.com>
Date:   Mon Jul 18 10:39:18 2016 +0200

    mtd: nand: fix bug writing 1 byte less than page size
    
    commit 144f4c98399e2c0ca60eb414c15a2c68125c18b8 upstream.
    
    nand_do_write_ops() determines if it is writing a partial page with the
    formula:
            part_pagewr = (column || writelen < (mtd->writesize - 1))
    
    When 'writelen' is exactly 1 byte less than the NAND page size the formula
    equates to zero, so the code doesn't process it as a partial write,
    although it should.
    As a consequence the function remains in the while(1) loop with 'writelen'
    becoming 0xffffffff and iterating endlessly.
    
    The bug may not be easy to reproduce in Linux since user space tools
    usually force the padding or round-up the write size to a page-size
    multiple.
    This was discovered in U-Boot where the issue can be reproduced by
    writing any size that is 1 byte less than a page-size multiple.
    For example, on a NAND with 2K page (0x800):
            => nand erase.part <partition>
            => nand write $loadaddr <partition> 7ff
    
    [Editor's note: the bug was added in commit 29072b96078f, but moved
    around in commit 66507c7bc8895 ("mtd: nand: Add support to use nand_base
    poi databuf as bounce buffer")]
    
    Fixes: 29072b96078f ("[MTD] NAND: add subpage write support")
    Signed-off-by: Hector Palacios <hector.palacios@digi.com>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d301856de347a43fa87833dba61d3239211429f
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Sun Jul 31 11:15:13 2016 -0700

    block: fix bdi vs gendisk lifetime mismatch
    
    commit df08c32ce3be5be138c1dbfcba203314a3a7cd6f upstream.
    
    The name for a bdi of a gendisk is derived from the gendisk's devt.
    However, since the gendisk is destroyed before the bdi it leaves a
    window where a new gendisk could dynamically reuse the same devt while a
    bdi with the same name is still live.  Arrange for the bdi to hold a
    reference against its "owner" disk device while it is registered.
    Otherwise we can hit sysfs duplicate name collisions like the following:
    
     WARNING: CPU: 10 PID: 2078 at fs/sysfs/dir.c:31 sysfs_warn_dup+0x64/0x80
     sysfs: cannot create duplicate filename '/devices/virtual/bdi/259:1'
    
     Hardware name: HP ProLiant DL580 Gen8, BIOS P79 05/06/2015
      0000000000000286 0000000002c04ad5 ffff88006f24f970 ffffffff8134caec
      ffff88006f24f9c0 0000000000000000 ffff88006f24f9b0 ffffffff8108c351
      0000001f0000000c ffff88105d236000 ffff88105d1031e0 ffff8800357427f8
     Call Trace:
      [<ffffffff8134caec>] dump_stack+0x63/0x87
      [<ffffffff8108c351>] __warn+0xd1/0xf0
      [<ffffffff8108c3cf>] warn_slowpath_fmt+0x5f/0x80
      [<ffffffff812a0d34>] sysfs_warn_dup+0x64/0x80
      [<ffffffff812a0e1e>] sysfs_create_dir_ns+0x7e/0x90
      [<ffffffff8134faaa>] kobject_add_internal+0xaa/0x320
      [<ffffffff81358d4e>] ? vsnprintf+0x34e/0x4d0
      [<ffffffff8134ff55>] kobject_add+0x75/0xd0
      [<ffffffff816e66b2>] ? mutex_lock+0x12/0x2f
      [<ffffffff8148b0a5>] device_add+0x125/0x610
      [<ffffffff8148b788>] device_create_groups_vargs+0xd8/0x100
      [<ffffffff8148b7cc>] device_create_vargs+0x1c/0x20
      [<ffffffff811b775c>] bdi_register+0x8c/0x180
      [<ffffffff811b7877>] bdi_register_dev+0x27/0x30
      [<ffffffff813317f5>] add_disk+0x175/0x4a0
    
    Reported-by: Yi Zhang <yizhan@redhat.com>
    Tested-by: Yi Zhang <yizhan@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Fixed up missing 0 return in bdi_register_owner().
    
    Signed-off-by: Jens Axboe <axboe@fb.com>

commit 01daea925d04909561bf7c39c76e71d13ddcb2ec
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Wed Jul 27 07:22:05 2016 +0200

    block: add missing group association in bio-cloning functions
    
    commit 20bd723ec6a3261df5e02250cd3a1fbb09a343f2 upstream.
    
    When a bio is cloned, the newly created bio must be associated with
    the same blkcg as the original bio (if BLK_CGROUP is enabled). If
    this operation is not performed, then the new bio is not associated
    with any group, and the group of the current task is returned when
    the group of the bio is requested.
    
    Depending on the cloning frequency, this may cause a large
    percentage of the bios belonging to a given group to be treated
    as if belonging to other groups (in most cases as if belonging to
    the root group). The expected group isolation may thereby be broken.
    
    This commit adds the missing association in bio-cloning functions.
    
    Fixes: da2f0f74cf7d ("Btrfs: add support for blkio controllers")
    
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Reviewed-by: Nikolay Borisov <kernel@kyup.com>
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8660eadce2bafd16b2b2d0100190c5ac76519caf
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 4 17:36:08 2016 +0100

    metag: Fix __cmpxchg_u32 asm constraint for CMP
    
    commit 6154c187b97ee7513046bb4eb317a89f738f13ef upstream.
    
    The LNKGET based atomic sequence in __cmpxchg_u32 has slightly incorrect
    constraints for the return value which under certain circumstances can
    allow an address unit register to be used as the first operand of a CMP
    instruction. This isn't a valid instruction however as the encodings
    only allow a data unit to be specified. This would result in an
    assembler error like the following:
    
      Error: failed to assemble instruction: "CMP A0.2,D0Ar6"
    
    Fix by changing the constraint from "=&da" (assigned, early clobbered,
    data or address unit register) to "=&d" (data unit register only).
    
    The constraint for the second operand, "bd" (an op2 register where op1
    is a data unit register and the instruction supports O2R) is already
    correct assuming the first operand is a data unit register.
    
    Other cases of CMP in inline asm have had their constraints checked, and
    appear to all be fine.
    
    Fixes: 6006c0d8ce94 ("metag: Atomics, locks and bitops")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: linux-metag@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84f8a24ade96a8c1499823b160a0591199cf9d12
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Jul 8 12:18:50 2016 -0700

    ftrace/recordmcount: Work around for addition of metag magic but not relocations
    
    commit b2e1c26f0b62531636509fbcb6dab65617ed8331 upstream.
    
    glibc recently did a sync up (94e73c95d9b5 "elf.h: Sync with the gabi
    webpage") that added a #define for EM_METAG but did not add relocations
    
    This triggers build errors:
    
    scripts/recordmcount.c: In function 'do_file':
    scripts/recordmcount.c:466:28: error: 'R_METAG_ADDR32' undeclared (first use in this function)
      case EM_METAG:  reltype = R_METAG_ADDR32;
                                ^~~~~~~~~~~~~~
    scripts/recordmcount.c:466:28: note: each undeclared identifier is reported only once for each function it appears in
    scripts/recordmcount.c:468:20: error: 'R_METAG_NONE' undeclared (first use in this function)
         rel_type_nop = R_METAG_NONE;
                        ^~~~~~~~~~~~
    
    Work around this change with some more #ifdefery for the relocations.
    
    Fedora Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1354034
    
    Link: http://lkml.kernel.org/r/1468005530-14757-1-git-send-email-labbott@redhat.com
    
    Cc: James Hogan <james.hogan@imgtec.com>
    Fixes: 00512bdd4573 ("metag: ftrace support")
    Reported-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfb466bd40d7822446ca0abbac263ed6be7306d7
Author: Konstantin Neumoin <kneumoin@virtuozzo.com>
Date:   Mon Jul 11 15:28:59 2016 +0300

    balloon: check the number of available pages in leak balloon
    
    commit 37cf99e08c6fb4dcea0f9ad2b13b6daa8c76a711 upstream.
    
    The balloon has a special mechanism that is subscribed to the oom
    notification which leads to deflation for a fixed number of pages.
    The number is always fixed even when the balloon is fully deflated.
    But leak_balloon did not expect that the pages to deflate will be more
    than taken, and raise a "BUG" in balloon_page_dequeue when page list
    will be empty.
    
    So, the simplest solution would be to check that the number of releases
    pages is less or equal to the number taken pages.
    
    Signed-off-by: Konstantin Neumoin <kneumoin@virtuozzo.com>
    Signed-off-by: Denis V. Lunev <den@openvz.org>
    CC: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24cdeed2d3b2c66d3846a74707a9a829dcd2e880
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Wed Jul 6 12:05:45 2016 +0200

    drm/i915/dp: Revert "drm/i915/dp: fall back to 18 bpp when sink capability is unknown"
    
    commit 196f954e250943df414efd3d632254c29be38e59 upstream.
    
    This reverts commit 013dd9e03872
    ("drm/i915/dp: fall back to 18 bpp when sink capability is unknown")
    
    This commit introduced a regression into stable kernels,
    as it reduces output color depth to 6 bpc for any video
    sink connected to a Displayport connector if that sink
    doesn't report a specific color depth via EDID, or if
    our EDID parser doesn't actually recognize the proper
    bpc from EDID.
    
    Affected are active DisplayPort->VGA converters and
    active DisplayPort->DVI converters. Both should be
    able to handle 8 bpc, but are degraded to 6 bpc with
    this patch.
    
    The reverted commit was meant to fix
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=105331
    
    A followup patch implements a fix for that specific bug,
    which is caused by a faulty EDID of the affected DP panel
    by adding a new EDID quirk for that panel.
    
    DP 18 bpp fallback handling and other improvements to
    DP sink bpc detection will be handled for future
    kernels in a separate series of patches.
    
    Please backport to stable.
    
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b30197a63f93c0c315b46d73120cca0d55e4973
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon May 23 17:42:48 2016 +0300

    drm/i915: Never fully mask the the EI up rps interrupt on SNB/IVB
    
    commit a7b4667a00025ac28300737c868bd4818b6d8c4d upstream.
    
    SNB (and IVB too I suppose) starts to misbehave if the GPU gets stuck
    in an infinite batch buffer loop. The GPU apparently hogs something
    critical and CPUs start to lose interrupts and whatnot. We can keep
    the system limping along by unmasking some interrupts in
    GEN6_PMINTRMSK. The EI up interrupt has been previously chosen for
    that task, so let's never mask it.
    
    v2: s/gen6_rps_pm_mask/gen6_sanitize_rps_pm_mask/ (Chris)
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=93122
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: http://patchwork.freedesktop.org/patch/msgid/1464014568-4529-1-git-send-email-ville.syrjala@linux.intel.com
    (cherry picked from commit 12c100bfa5d9103b6c4d43636fee09c31e75605a)
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 794c90b25b332391517e3fe131cf0b8e8db87be9
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Wed Jul 6 12:05:44 2016 +0200

    drm/edid: Add 6 bpc quirk for display AEO model 0.
    
    commit e10aec652f31ec61d6a0b4d00d8ef8d2b66fa0fd upstream.
    
    Bugzilla https://bugzilla.kernel.org/show_bug.cgi?id=105331
    reports that the "AEO model 0" display is driven with 8 bpc
    without dithering by default, which looks bad because that
    panel is apparently a 6 bpc DP panel with faulty EDID.
    
    A fix for this was made by commit 013dd9e03872
    ("drm/i915/dp: fall back to 18 bpp when sink capability is unknown").
    
    That commit triggers new regressions in precision for DP->DVI and
    DP->VGA displays. A patch is out to revert that commit, but it will
    revert video output for the AEO model 0 panel to 8 bpc without
    dithering.
    
    The EDID 1.3 of that panel, as decoded from the xrandr output
    attached to that bugzilla bug report, is somewhat faulty, and beyond
    other problems also sets the "DFP 1.x compliant TMDS" bit, which
    according to DFP spec means to drive the panel with 8 bpc and
    no dithering in absence of other colorimetry information.
    
    Try to make the original bug reporter happy despite the
    faulty EDID by adding a quirk to mark that panel as 6 bpc,
    so 6 bpc output with dithering creates a nice picture.
    
    Tested by injecting the edid from the fdo bug into a DP connector
    via drm_kms_helper.edid_firmware and verifying the 6 bpc + dithering
    is selected.
    
    This patch should be backported to stable.
    
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1df3e60664af6e494119509e740b074630902f8c
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jul 7 09:41:12 2016 +0100

    drm: Restore double clflush on the last partial cacheline
    
    commit 396f5d62d1a5fd99421855a08ffdef8edb43c76e upstream.
    
    This effectively reverts
    
    commit afcd950cafea6e27b739fe7772cbbeed37d05b8b
    Author: Chris Wilson <chris@chris-wilson.co.uk>
    Date:   Wed Jun 10 15:58:01 2015 +0100
    
        drm: Avoid the double clflush on the last cache line in drm_clflush_virt_range()
    
    as we have observed issues with serialisation of the clflush operations
    on Baytrail+ Atoms with partial updates. Applying the double flush on the
    last cacheline forces that clflush to be ordered with respect to the
    previous clflush, and the mfence then protects against prefetches crossing
    the clflush boundary.
    
    The same issue can be demonstrated in userspace with igt/gem_exec_flush.
    
    Fixes: afcd950cafea6 (drm: Avoid the double clflush on the last cache...)
    Testcase: igt/gem_concurrent_blit
    Testcase: igt/gem_partial_pread_pwrite
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=92845
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: dri-devel@lists.freedesktop.org
    Cc: Akash Goel <akash.goel@intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jason Ekstrand <jason.ekstrand@intel.com>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1467880930-23082-6-git-send-email-chris@chris-wilson.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 702117fe1ecde2bef728146e0a5fff689731c8c5
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jul 28 18:56:13 2016 -0400

    drm/nouveau/fbcon: fix font width not divisible by 8
    
    commit 28668f43b8e421634e1623f72a879812288dd06b upstream.
    
    The patch f045f459d925 ("drm/nouveau/fbcon: fix out-of-bounds memory accesses")
    tries to fix some out of memory accesses. Unfortunatelly, the patch breaks the
    display when using fonts with width that is not divisiable by 8.
    
    The monochrome bitmap for each character is stored in memory by lines from top
    to bottom. Each line is padded to a full byte.
    
    For example, for 22x11 font, each line is padded to 16 bits, so each
    character is consuming 44 bytes total, that is 11 32-bit words. The patch
    f045f459d925 changed the logic to "dsize = ALIGN(image->width *
    image->height, 32) >> 5", that is just 8 words - this is incorrect and it
    causes display corruption.
    
    This patch adds the necesary padding of lines to 8 bytes.
    
    This patch should be backported to stable kernels where f045f459d925 was
    backported.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Fixes: f045f459d925 ("drm/nouveau/fbcon: fix out-of-bounds memory accesses")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77f424903037180d485b6ed40273f5d8f9dccb1a
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Wed Jul 27 19:16:39 2016 -0400

    drm/nouveau/gr/nv3x: fix instobj write offsets in gr setup
    
    commit d0e62ef6ed257715a88d0e5d7cd850a1695429e2 upstream.
    
    This should fix some unaligned access warnings. This is also likely to
    fix non-descript issues on nv30/nv34 as a result of incorrect channel
    setup.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=96836
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21f36ec95dcd59365ea8ab1c49739bc2abcff32e
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Jul 12 11:57:07 2016 +1000

    drm/nouveau: check for supported chipset before booting fbdev off the hw
    
    commit 0e67bed2c765ff0fdaec62c963881f5416fe3692 upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cb688506f91f53a7f1a6864524e088fb4992a65
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jul 8 17:27:04 2016 -0400

    drm/radeon: support backlight control for UNIPHY3
    
    commit d3200be6c423afa1c34f7e39e9f6d04dd5b0af9d upstream.
    
    Same interface as other UNIPHY blocks
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1cb5eb8ff01c79d8c022a1d6fce68bc28638bce
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jul 27 15:28:56 2016 -0400

    drm/radeon: fix firmware info version checks
    
    commit 3edc38a0facef45ee22af8afdce3737f421f36ab upstream.
    
    Some of the checks didn't handle frev 2 tables properly.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 943682861f55e9b979aaca4be3a2d75afe7831d9
Author: Lyude <cpaul@redhat.com>
Date:   Fri Jun 24 17:54:31 2016 -0400

    drm/radeon: Poll for both connect/disconnect on analog connectors
    
    commit 14ff8d48f2235295dfb3117693008e367b49cdb5 upstream.
    
    DRM_CONNECTOR_POLL_CONNECT only enables polling for connections, not
    disconnections. Because of this, we end up losing hotplug polling for
    analog connectors once they get connected.
    
    Easy way to reproduce:
     - Grab a machine with a radeon GPU and a VGA port
     - Plug a monitor into the VGA port, wait for it to update the connector
       from disconnected to connected
     - Disconnect the monitor on VGA, a hotplug event is never sent for the
       removal of the connector.
    
    Originally, only using DRM_CONNECTOR_POLL_CONNECT might have been a good
    idea since doing VGA polling can sometimes result in having to mess with
    the DAC voltages to figure out whether or not there's actually something
    there since VGA doesn't have HPD. Doing this would have the potential of
    showing visible artifacts on the screen every time we ran a poll while a
    VGA display was connected. Luckily, radeon_vga_detect() only resorts to
    this sort of polling if the poll is forced, and DRM's polling helper
    doesn't force it's polls.
    
    Additionally, this removes some assignments to connector->polled that
    weren't actually doing anything.
    
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ada3815fab5191d1c96ff07ed6c0c77ecd34dfd0
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 1 12:58:36 2016 -0400

    drm/radeon: add a delay after ATPX dGPU power off
    
    commit d814b24fb74cb9797d70cb8053961447c5879a5c upstream.
    
    ATPX dGPU power control requires a 200ms delay between
    power off and on.  This should fix dGPU failures on
    resume from power off.
    
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4925cf140ff6208894feb0e81984c7f320025f2e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jul 29 18:03:42 2016 -0400

    drm/amdgpu/gmc7: add missing mullins case
    
    commit 7f555c8e5a84b348c2b76f4ca78eae7222354c03 upstream.
    
    Looks like this got missed when we ported the code from radeon.
    
    Reviewed-by: Edward O'Callaghan <funfunctor@folklore1984.net>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 672138e0ce66e47b33171096dddfe296e948de37
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jul 27 15:31:59 2016 -0400

    drm/amdgpu: fix firmware info version checks
    
    commit a8a04c994d41a489eb0f2899893209e04e030153 upstream.
    
    Some of the checks didn't handle frev 2 tables properly.
    amdgpu doesn't support any tables pre-frev 2, so drop
    the checks.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3281d1055ca82a240e6f38c5b011bc1f3f28d4b6
Author: Lyude <cpaul@redhat.com>
Date:   Mon Jul 18 11:41:37 2016 -0400

    drm/amdgpu: Disable RPM helpers while reprobing connectors on resume
    
    commit 23a1a9e54e71593fe5657e883662995d181d2d6b upstream.
    
    Just about all of amdgpu's connector probing functions try to acquire
    runtime PM refs. If we try to do this in the context of
    amdgpu_resume_kms by calling drm_helper_hpd_irq_event(), we end up
    deadlocking the system.
    
    Since we're guaranteed to be holding the spinlock for RPM in
    amdgpu_resume_kms, and we already know the GPU is in working order, we
    need to prevent the RPM helpers from trying to run during the initial
    connector reprobe on resume.
    
    There's a couple of solutions I've explored for fixing this, but this
    one by far seems to be the simplest and most reliable (plus I'm pretty
    sure that's what disable_depth is there for anyway).
    
    Reproduction recipe:
      - Get any laptop dual GPUs using PRIME
      - Make sure runtime PM is enabled for amdgpu
      - Boot the machine
      - If the machine managed to boot without hanging, switch out of X to
        another VT. This should definitely cause X to hang infinitely.
    
    Changes since v1:
      - add appropriate #ifdef checks for CONFIG_PM. This is not very
        useful, but it appears some kernel test suites test compiling amdgpu
        with CONFIG_PM disabled, which results in this patch breaking the builds
        if we don't include this #ifdef
    
    Cc: Alex Deucher <alexdeucher@gmail.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca7eb0c3080cc3e1b6e04e04ed60ed63e6fb5667
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jul 8 17:19:59 2016 -0400

    drm/amdgpu: support backlight control for UNIPHY3
    
    commit dba6c4fa26ccf47661be5b68dba87e746fa137d8 upstream.
    
    Same interface as other UNIPHY blocks
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c10a2c5cef3f3ae7dd7cd931398014c2b4c290f
Author: Lyude <cpaul@redhat.com>
Date:   Fri Jun 24 17:54:32 2016 -0400

    drm/amdgpu: Poll for both connect/disconnect on analog connectors
    
    commit b636a1b3d624b49b23cc1be2f9f6bcbb89aca855 upstream.
    
    DRM_CONNECTOR_POLL_CONNECT only enables polling for connections, not
    disconnections. Because of this, we end up losing hotplug polling for
    analog connectors once they get connected.
    
    Easy way to reproduce:
     - Grab a machine with an AMD GPU and a VGA port
     - Plug a monitor into the VGA port, wait for it to update the connector
       from disconnected to connected
     - Disconnect the monitor on VGA, a hotplug event is never sent for the
       removal of the connector.
    
    Originally, only using DRM_CONNECTOR_POLL_CONNECT might have been a good
    idea since doing VGA polling can sometimes result in having to mess with
    the DAC voltages to figure out whether or not there's actually something
    there since VGA doesn't have HPD. Doing this would have the potential of
    showing visible artifacts on the screen every time we ran a poll while a
    VGA display was connected. Luckily, amdgpu_vga_detect() only resorts to
    this sort of polling if the poll is forced, and DRM's polling helper
    doesn't force it's polls.
    
    Additionally, this removes some assignments to connector->polled that
    weren't actually doing anything.
    
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f811d101bd2b1c606b5ee1c3a8bd59a4f48cb8d
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 1 12:54:33 2016 -0400

    drm/amdgpu: add a delay after ATPX dGPU power off
    
    commit f81eb1a349d47694fe1e688336ca1b40ea3e248a upstream.
    
    ATPX dGPU power control requires a 200ms delay between
    power off and on.  This should fix dGPU failures on
    resume from power off.
    
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bedd8d6037247002091d85d8abf4aa7e6c92ff24
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Tue Aug 2 14:07:12 2016 -0700

    w1:omap_hdq: fix regression
    
    commit ecfaf0c42fc4306b5ec4bf6be01b66f8fe9a9733 upstream.
    
    Commit e93762bbf681 ("w1: masters: omap_hdq: add support for 1-wire
    mode") added a statement to clear the hdq_irqstatus flags in
    hdq_read_byte().
    
    If the hdq reading process is scheduled slowly or interrupts are
    disabled for a while the hardware read activity might already be
    finished on entry of hdq_read_byte().  And hdq_isr() already has set the
    hdq_irqstatus to 0x6 (can be seen in debug mode) denoting that both, the
    TXCOMPLETE and RXCOMPLETE interrupts occurred in parallel.
    
    This means there is no need to wait and the hdq_read_byte() can just
    read the byte from the hdq controller.
    
    By resetting hdq_irqstatus to 0 the read process is forced to be always
    waiting again (because the if statement always succeeds) but the
    hardware will not issue another RXCOMPLETE interrupt.  This results in a
    false timeout.
    
    After such a situation the hdq bus hangs.
    
    Link: http://lkml.kernel.org/r/b724765f87ad276a69625bc19806c8c8844c4590.1469513669.git.hns@goldelico.com
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: Evgeniy Polyakov <zbr@ioremap.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a3e88a02e71cbc1dacfb958d8bffe0547d8fa2e
Author: Paul Moore <paul@paul-moore.com>
Date:   Mon Jun 6 15:17:20 2016 -0400

    netlabel: add address family checks to netlbl_{sock,req}_delattr()
    
    commit 0e0e36774081534783aa8eeb9f6fbddf98d3c061 upstream.
    
    It seems risky to always rely on the caller to ensure the socket's
    address family is correct before passing it to the NetLabel kAPI,
    especially since we see at least one LSM which didn't. Add address
    family checks to the *_delattr() functions to help prevent future
    problems.
    
    Reported-by: Maninder Singh <maninder1.s@samsung.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 225ecdbca37ab7b8a6ec38e72739980c80c218e7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Jun 4 12:58:39 2016 +0200

    ARM: dts: sunxi: Add a startup delay for fixed regulator enabled phys
    
    commit fc51b632c7b047c25807023b76f3877aed19c770 upstream.
    
    It seems that recent kernels have a shorter timeout when scanning for
    ethernet phys causing us to hit a timeout on boards where the phy's
    regulator gets enabled just before scanning, which leads to non working
    ethernet.
    
    A 10ms startup delay seems to be enough to fix it, this commit adds a
    20ms startup delay just to be safe.
    
    This has been tested on a sun4i-a10-a1000 and sun5i-a10s-wobo-i5 board,
    both of which have non-working ethernet on recent kernels without this
    fix.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53eaa3910ae67e497fb33188d515c14ed17a7a0e
Author: Paul Moore <paul@paul-moore.com>
Date:   Tue Jul 19 17:42:57 2016 -0400

    audit: fix a double fetch in audit_log_single_execve_arg()
    
    commit 43761473c254b45883a64441dd0bc85a42f3645c upstream.
    
    There is a double fetch problem in audit_log_single_execve_arg()
    where we first check the execve(2) argumnets for any "bad" characters
    which would require hex encoding and then re-fetch the arguments for
    logging in the audit record[1].  Of course this leaves a window of
    opportunity for an unsavory application to munge with the data.
    
    This patch reworks things by only fetching the argument data once[2]
    into a buffer where it is scanned and logged into the audit
    records(s).  In addition to fixing the double fetch, this patch
    improves on the original code in a few other ways: better handling
    of large arguments which require encoding, stricter record length
    checking, and some performance improvements (completely unverified,
    but we got rid of some strlen() calls, that's got to be a good
    thing).
    
    As part of the development of this patch, I've also created a basic
    regression test for the audit-testsuite, the test can be tracked on
    GitHub at the following link:
    
     * https://github.com/linux-audit/audit-testsuite/issues/25
    
    [1] If you pay careful attention, there is actually a triple fetch
    problem due to a strnlen_user() call at the top of the function.
    
    [2] This is a tiny white lie, we do make a call to strnlen_user()
    prior to fetching the argument data.  I don't like it, but due to the
    way the audit record is structured we really have no choice unless we
    copy the entire argument at once (which would require a rather
    wasteful allocation).  The good news is that with this patch the
    kernel no longer relies on this strnlen_user() value for anything
    beyond recording it in the log, we also update it with a trustworthy
    value whenever possible.
    
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5612d4370098aa0528dfe20cc5698acaf94c4af
Author: Joerg Roedel <jroedel@suse.de>
Date:   Tue Jul 26 15:18:54 2016 +0200

    iommu/amd: Update Alias-DTE in update_device_table()
    
    commit 3254de6bf74fe94c197c9f819fe62a3a3c36f073 upstream.
    
    Not doing so might cause IO-Page-Faults when a device uses
    an alias request-id and the alias-dte is left in a lower
    page-mode which does not cover the address allocated from
    the iova-allocator.
    
    Fixes: 492667dacc0a ('x86/amd-iommu: Remove amd_iommu_pd_table')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df8eaed22590a484a64e4a6f2af266f59a692aed
Author: Joerg Roedel <jroedel@suse.de>
Date:   Wed Jul 13 12:35:24 2016 +0200

    iommu/amd: Init unity mappings only for dma_ops domains
    
    commit b548e786ce47017107765bbeb0f100202525ea83 upstream.
    
    The default domain for a device might also be
    identity-mapped. In this case the kernel would crash when
    unity mappings are defined for the device. Fix that by
    making sure the domain is a dma_ops domain.
    
    Fixes: 0bb6e243d7fb ('iommu/amd: Support IOMMU_DOMAIN_DMA type allocation')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51e94ff8d90804ec1912fd71b2c7e22902a61585
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Jul 7 15:57:04 2016 +0200

    iommu/amd: Handle IOMMU_DOMAIN_DMA in ops->domain_free call-back
    
    commit cda7005ba2cbd0744fea343dd5b2aa637eba5b9e upstream.
    
    This domain type is not yet handled in the
    iommu_ops->domain_free() call-back. Fix that.
    
    Fixes: 0bb6e243d7fb ('iommu/amd: Support IOMMU_DOMAIN_DMA type allocation')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28a5f4cbb18b86ad40be5da53263bc1704dbdb6f
Author: Wei Yang <richard.weiyang@gmail.com>
Date:   Wed Jul 13 13:53:21 2016 +0000

    iommu/vt-d: Return error code in domain_context_mapping_one()
    
    commit 5c365d18a73d3979db37006eaacefc0008869c0f upstream.
    
    In 'commit <55d940430ab9> ("iommu/vt-d: Get rid of domain->iommu_lock")',
    the error handling path is changed a little, which makes the function
    always return 0.
    
    This path fixes this.
    
    Signed-off-by: Wei Yang <richard.weiyang@gmail.com>
    Fixes: 55d940430ab9 ('iommu/vt-d: Get rid of domain->iommu_lock')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd78d819b4abaf1b471ea6da8b440730d24ac897
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri May 20 15:48:21 2016 +0200

    iommu/exynos: Suppress unbinding to prevent system failure
    
    commit b54b874fbaf5e024723e50dfb035a9916d6752b4 upstream.
    
    Removal of IOMMU driver cannot be done reliably, so Exynos IOMMU driver
    doesn't support this operation. It is essential for system operation, so
    it makes sense to prevent unbinding by disabling bind/unbind sysfs
    feature for SYSMMU controller driver to avoid kernel ops or trashing
    memory caused by such operation.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa89ad55304a0053d6e9900bc76599d77b8abb50
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Fri Oct 23 11:00:06 2015 +0200

    drm/i915: Don't complain about lack of ACPI video bios
    
    commit 78c3d5fa7354774b7c8638033d46c042ebae41fb upstream.
    
    Another CI fail we have for no reason. Totally unjustified since
    nothing fails at all.
    
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1445590806-23886-1-git-send-email-daniel.vetter@ffwll.ch
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37cbe5b6d12580c6bb189dc3be418b681ce7d5a1
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Aug 11 10:37:39 2016 -0400

    nfsd: don't return an unhashed lock stateid after taking mutex
    
    commit dd257933fa4b9fea66a1195f8a15111029810abc upstream.
    
    nfsd4_lock will take the st_mutex before working with the stateid it
    gets, but between the time when we drop the cl_lock and take the mutex,
    the stateid could become unhashed (a'la FREE_STATEID). If that happens
    the lock stateid returned to the client will be forgotten.
    
    Fix this by first moving the st_mutex acquisition into
    lookup_or_create_lock_state. Then, have it check to see if the lock
    stateid is still hashed after taking the mutex. If it's not, then put
    the stateid and try the find/create again.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Tested-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dfc20babd386b8990c9ad99fa9e3afe875cba1f
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Aug 11 10:37:30 2016 -0400

    nfsd: Fix race between FREE_STATEID and LOCK
    
    commit 42691398be08bd1fe99326911a0aa31f2c041d53 upstream.
    
    When running LTP's nfslock01 test, the Linux client can send a LOCK
    and a FREE_STATEID request at the same time. The outcome is:
    
    Frame 324    R OPEN stateid [2,O]
    
    Frame 115004 C LOCK lockowner_is_new stateid [2,O] offset 672000 len 64
    Frame 115008 R LOCK stateid [1,L]
    Frame 115012 C WRITE stateid [0,L] offset 672000 len 64
    Frame 115016 R WRITE NFS4_OK
    Frame 115019 C LOCKU stateid [1,L] offset 672000 len 64
    Frame 115022 R LOCKU NFS4_OK
    Frame 115025 C FREE_STATEID stateid [2,L]
    Frame 115026 C LOCK lockowner_is_new stateid [2,O] offset 672128 len 64
    Frame 115029 R FREE_STATEID NFS4_OK
    Frame 115030 R LOCK stateid [3,L]
    Frame 115034 C WRITE stateid [0,L] offset 672128 len 64
    Frame 115038 R WRITE NFS4ERR_BAD_STATEID
    
    In other words, the server returns stateid L in a successful LOCK
    reply, but it has already released it. Subsequent uses of stateid L
    fail.
    
    To address this, protect the generation check in nfsd4_free_stateid
    with the st_mutex. This should guarantee that only one of two
    outcomes occurs: either LOCK returns a fresh valid stateid, or
    FREE_STATEID returns NFS4ERR_LOCKS_HELD.
    
    Reported-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Fix-suggested-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d6562fded3ce875b8a7fc30eeed73b16366d77e
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Mon Jul 18 10:41:57 2016 -0400

    nfs: don't create zero-length requests
    
    commit 149a4fddd0a72d526abbeac0c8deaab03559836a upstream.
    
    NFS doesn't expect requests with wb_bytes set to zero and may make
    unexpected decisions about how to handle that request at the page IO layer.
    Skip request creation if we won't have any wb_bytes in the request.
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Reviewed-by: Weston Andros Adamson <dros@primarydata.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fa571ebe60f311c885b37a3dcfbf961e5fbd57d
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 18 10:05:32 2016 +0100

    MIPS: KVM: Propagate kseg0/mapped tlb fault errors
    
    commit 9b731bcfdec4c159ad2e4312e25d69221709b96a upstream.
    
    Propagate errors from kvm_mips_handle_kseg0_tlb_fault() and
    kvm_mips_handle_mapped_seg_tlb_fault(), usually triggering an internal
    error since they normally indicate the guest accessed bad physical
    memory or the commpage in an unexpected way.
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Fixes: e685c689f3a8 ("KVM/MIPS32: Privileged instruction/target branch emulation.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v3.17.y - v4.4.y]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e93dbb1cb6a1ed00c020f257780aac4750ef1c8e
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 18 10:05:31 2016 +0100

    MIPS: KVM: Fix gfn range check in kseg0 tlb faults
    
    commit 0741f52d1b980dbeb290afe67d88fc2928edd8ab upstream.
    
    Two consecutive gfns are loaded into host TLB, so ensure the range check
    isn't off by one if guest_pmap_npages is odd.
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v3.17.y - v4.4.y]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f26fac101c44492ca80d7ec65d484589299d8c99
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 18 10:05:30 2016 +0100

    MIPS: KVM: Add missing gfn range check
    
    commit 8985d50382359e5bf118fdbefc859d0dbf6cebc7 upstream.
    
    kvm_mips_handle_mapped_seg_tlb_fault() calculates the guest frame number
    based on the guest TLB EntryLo values, however it is not range checked
    to ensure it lies within the guest_pmap. If the physical memory the
    guest refers to is out of range then dump the guest TLB and emit an
    internal error.
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v3.17.y - v4.4.y]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed7e1dd5abb39e0d6ce71e4914be365062bb1711
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 18 10:05:29 2016 +0100

    MIPS: KVM: Fix mapped fault broken commpage handling
    
    commit c604cffa93478f8888bec62b23d6073dad03d43a upstream.
    
    kvm_mips_handle_mapped_seg_tlb_fault() appears to map the guest page at
    virtual address 0 to PFN 0 if the guest has created its own mapping
    there. The intention is unclear, but it may have been an attempt to
    protect the zero page from being mapped to anything but the comm page in
    code paths you wouldn't expect from genuine commpage accesses (guest
    kernel mode cache instructions on that address, hitting trapping
    instructions when executing from that address with a coincidental TLB
    eviction during the KVM handling, and guest user mode accesses to that
    address).
    
    Fix this to check for mappings exactly at KVM_GUEST_COMMPAGE_ADDR (it
    may not be at address 0 since commit 42aa12e74e91 ("MIPS: KVM: Move
    commpage so 0x0 is unmapped")), and set the corresponding EntryLo to be
    interpreted as 0 (invalid).
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v3.17.y - v4.4.y]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f48dd2d0a75c6facd044c36fe86251027c12f0eb
Author: Stephan Mueller <smueller@chronox.de>
Date:   Mon May 2 02:14:34 2016 -0400

    random: add interrupt callback to VMBus IRQ handler
    
    commit 4b44f2d18a330565227a7348844493c59366171e upstream.
    
    The Hyper-V Linux Integration Services use the VMBus implementation for
    communication with the Hypervisor. VMBus registers its own interrupt
    handler that completely bypasses the common Linux interrupt handling.
    This implies that the interrupt entropy collector is not triggered.
    
    This patch adds the interrupt entropy collection callback into the VMBus
    interrupt handler function.
    
    Signed-off-by: Stephan Mueller <stephan.mueller@atsec.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 529025b1293b2af844348d700cf22fa585c1f2b6
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jun 13 10:10:51 2016 -0400

    random: print a warning for the first ten uninitialized random users
    
    commit 9b4d008787f864f17d008c9c15bbe8a0f7e2fc24 upstream.
    
    Since systemd is consistently using /dev/urandom before it is
    initialized, we can't see the other potentially dangerous users of
    /dev/urandom immediately after boot.  So print the first ten such
    complaints instead.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f41fc0bfede5bbeca4f09d75c76c4db5d6c0d2ee
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Jun 12 18:11:51 2016 -0400

    random: initialize the non-blocking pool via add_hwgenerator_randomness()
    
    commit 3371f3da08cff4b75c1f2dce742d460539d6566d upstream.
    
    If we have a hardware RNG and are using the in-kernel rngd, we should
    use this to initialize the non-blocking pool so that getrandom(2)
    doesn't block unnecessarily.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adc58bfd4d75183a65f806b1b5354d1b65f832c6
Author: Pavel Shilovsky <pshilovsky@samba.org>
Date:   Sun Jul 24 10:37:38 2016 +0300

    CIFS: Fix a possible invalid memory access in smb2_query_symlink()
    
    commit 7893242e2465aea6f2cbc2639da8fa5ce96e8cc2 upstream.
    
    During following a symbolic link we received err_buf from SMB2_open().
    While the validity of SMB2 error response is checked previously
    in smb2_check_message() a symbolic link payload is not checked at all.
    Fix it by adding such checks.
    
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 047617448daecf05e57498d8697acd3dbd38672d
Author: Rabin Vincent <rabinv@axis.com>
Date:   Tue Jul 19 09:26:21 2016 +0200

    cifs: fix crash due to race in hmac(md5) handling
    
    commit bd975d1eead2558b76e1079e861eacf1f678b73b upstream.
    
    The secmech hmac(md5) structures are present in the TCP_Server_Info
    struct and can be shared among multiple CIFS sessions.  However, the
    server mutex is not currently held when these structures are allocated
    and used, which can lead to a kernel crashes, as in the scenario below:
    
    mount.cifs(8) #1                                mount.cifs(8) #2
    
    Is secmech.sdeschmaccmd5 allocated?
    // false
    
                                                    Is secmech.sdeschmaccmd5 allocated?
                                                    // false
    
    secmech.hmacmd = crypto_alloc_shash..
    secmech.sdeschmaccmd5 = kzalloc..
    sdeschmaccmd5->shash.tfm = &secmec.hmacmd;
    
                                                    secmech.sdeschmaccmd5 = kzalloc
                                                    // sdeschmaccmd5->shash.tfm
                                                    // not yet assigned
    
    crypto_shash_update()
     deref NULL sdeschmaccmd5->shash.tfm
    
     Unable to handle kernel paging request at virtual address 00000030
     epc   : 8027ba34 crypto_shash_update+0x38/0x158
     ra    : 8020f2e8 setup_ntlmv2_rsp+0x4bc/0xa84
     Call Trace:
      crypto_shash_update+0x38/0x158
      setup_ntlmv2_rsp+0x4bc/0xa84
      build_ntlmssp_auth_blob+0xbc/0x34c
      sess_auth_rawntlmssp_authenticate+0xac/0x248
      CIFS_SessSetup+0xf0/0x178
      cifs_setup_session+0x4c/0x84
      cifs_get_smb_ses+0x2c8/0x314
      cifs_mount+0x38c/0x76c
      cifs_do_mount+0x98/0x440
      mount_fs+0x20/0xc0
      vfs_kern_mount+0x58/0x138
      do_mount+0x1e8/0xccc
      SyS_mount+0x88/0xd4
      syscall_common+0x30/0x54
    
    Fix this by locking the srv_mutex around the code which uses these
    hmac(md5) structures.  All the other secmech algos already have similar
    locking.
    
    Fixes: 95dc8dd14e2e84cc ("Limit allocation of crypto mechanisms to dialect which requires")
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Acked-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36e6321056ba24f004bfc16d4398e65a6651f843
Author: Sachin Prabhu <sprabhu@redhat.com>
Date:   Thu Jul 7 21:28:27 2016 +0100

    cifs: Check for existing directory when opening file with O_CREAT
    
    commit 8d9535b6efd86e6c07da59f97e68f44efb7fe080 upstream.
    
    When opening a file with O_CREAT flag, check to see if the file opened
    is an existing directory.
    
    This prevents the directory from being opened which subsequently causes
    a crash when the close function for directories cifs_closedir() is called
    which frees up the file->private_data memory while the file is still
    listed on the open file list for the tcon.
    
    Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Reported-by: Xiaoli Feng <xifeng@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a636a9b1306587bbfab54b1e435461289a4c2c35
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Wed May 25 19:59:09 2016 +0200

    fs/cifs: make share unaccessible at root level mountable
    
    commit a6b5058fafdf508904bbf16c29b24042cef3c496 upstream.
    
    if, when mounting //HOST/share/sub/dir/foo we can query /sub/dir/foo but
    not any of the path components above:
    
    - store the /sub/dir/foo prefix in the cifs super_block info
    - in the superblock, set root dentry to the subpath dentry (instead of
      the share root)
    - set a flag in the superblock to remember it
    - use prefixpath when building path from a dentry
    
    fixes bso#8950
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 564e0f8b22814e1b811bbc77953c9554e2a08328
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jun 30 11:49:01 2016 -0400

    jbd2: make journal y2038 safe
    
    commit abcfb5d979892fc8b12574551fc907c05fe1b11b upstream.
    
    The jbd2 journal stores the commit time in 64-bit seconds and 32-bit
    nanoseconds, which avoids an overflow in 2038, but it gets the numbers
    from current_kernel_time(), which uses 'long' seconds on 32-bit
    architectures.
    
    This simply changes the code to call current_kernel_time64() so
    we use 64-bit seconds consistently.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2aa5d3771351ed45cf9f5ce73bc4695a09318be
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Thu Jul 28 11:35:50 2016 -0700

    ARC: mm: don't loose PTE_SPECIAL in pte_modify()
    
    commit 3925a16ae980c79d1a8fd182d7f9487da1edd4dc upstream.
    
    LTP madvise05 was generating mm splat
    
    | [ARCLinux]# /sd/ltp/testcases/bin/madvise05
    | BUG: Bad page map in process madvise05  pte:80e08211 pmd:9f7d4000
    | page:9fdcfc90 count:1 mapcount:-1 mapping:  (null) index:0x0 flags: 0x404(referenced|reserved)
    | page dumped because: bad pte
    | addr:200b8000 vm_flags:00000070 anon_vma:  (null) mapping:  (null) index:1005c
    | file:  (null) fault:  (null) mmap:  (null) readpage:  (null)
    | CPU: 2 PID: 6707 Comm: madvise05
    
    And for newer kernels, the system was rendered unusable afterwards.
    
    The problem was mprotect->pte_modify() clearing PTE_SPECIAL (which is
    set to identify the special zero page wired to the pte).
    When pte was finally unmapped, special casing for zero page was not
    done, and instead it was treated as a "normal" page, tripping on the
    map counts etc.
    
    This fixes ARC STAR 9001053308
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3633bd8220a778e41de3e75930aa21f8a51a1629
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Wed May 25 15:41:28 2016 -0500

    remoteproc: Fix potential race condition in rproc_add
    
    commit d2e12e66a939c54ed84e5f1b6947f0c45f6c56eb upstream.
    
    rproc_add adds the newly created remoteproc to a list for use by
    rproc_get_by_phandle and then does some additional processing to finish
    adding the remoteproc. This leaves a small window of time in which the
    rproc is available in the list but not yet fully initialized, so if
    another driver comes along and gets a handle to the rproc, it will be
    invalid. Rearrange the code in rproc_add to make sure the rproc is added
    to the list only after it has been successfuly initialized.
    
    Fixes: fec47d863587 ("remoteproc: introduce rproc_get_by_phandle API")
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54c4ddcbab7396c58e1fc745663417ad7e872137
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri Jul 29 12:05:24 2016 +0200

    ovl: disallow overlayfs as upperdir
    
    commit 76bc8e2843b66f8205026365966b49ec6da39ae7 upstream.
    
    This does not work and does not make sense.  So instead of fixing it
    (probably not hard) just disallow.
    
    Reported-by: Andrei Vagin <avagin@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a2cfda740e60097c1369c274d2772af9d073b76
Author: Roderick Colenbrander <roderick.colenbrander@sony.com>
Date:   Wed May 18 13:11:09 2016 -0700

    HID: uhid: fix timeout when probe races with IO
    
    commit 67f8ecc550b5bda03335f845dc869b8501d25fd0 upstream.
    
    Many devices use userspace bluetooth stacks like BlueZ or Bluedroid in combination
    with uhid. If any of these stacks is used with a HID device for which the driver
    performs a HID request as part .probe (or technically another HID operation),
    this results in a deadlock situation. The deadlock results in a 5 second timeout
    for I/O operations in HID drivers, so isn't fatal, but none of the I/O operations
    have a chance of succeeding.
    
    The root cause for the problem is that uhid only allows for one request to be
    processed at a time per uhid instance and locks out other operations. This means
    that if a user space is creating a new HID device through 'UHID_CREATE', which
    ultimately triggers '.probe' through the HID layer. Then any HID request e.g. a
    read for calibration data would trigger a HID operation on uhid again, but it
    won't go out to userspace, because it is still stuck in UHID_CREATE.
    In addition bluetooth stacks are typically single threaded, so they wouldn't be
    able to handle any requests while waiting on uhid.
    
    Lucikly the UHID spec is somewhat flexible and allows for fixing the issue,
    without breaking user space. The idea which the patch implements as discussed
    with David Herrmann is to decouple adding of a hid device (which triggers .probe)
    from UHID_CREATE. The work will kick off roughly once UHID_CREATE completed (or
    else will wait a tiny bit of time in .probe for a lock). A HID driver has to call
    HID to call 'hid_hw_start()' as part of .probe once it is ready for I/O, which
    triggers UHID_START to user space. Any HID operations should function now within
    .probe and won't deadlock because userspace is stuck on UHID_CREATE.
    
    We verified this patch on Bluedroid with Android 6.0 and on desktop Linux with
    BlueZ stacks. Prior to the patch they had the deadlock issue.
    
    [jkosina@suse.cz: reword subject]
    Signed-off-by: Roderick Colenbrander <roderick.colenbrander@sony.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02808fd9e78d31e8e3e41cab06acc0a1153b0ef6
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Jun 10 10:28:38 2016 +0200

    EDAC: Correct channel count limit
    
    commit bba142957e04c400440d2df83c1b3b2dfc42e220 upstream.
    
    c44696fff04f ("EDAC: Remove arbitrary limit on number of channels")
    lifted the arbitrary limit on memory controller channels in EDAC.
    However, the dynamic channel attributes dynamic_csrow_dimm_attr and
    dynamic_csrow_ce_count_attr remained 6.
    
    This wasn't a problem except channels 6 and 7 weren't visible in sysfs
    on machines with more than 6 channels after the conversion to static
    attr groups with
    
      2c1946b6d629 ("EDAC: Use static attribute groups for managing sysfs entries")
    
     [ without that, we're exploding in edac_create_sysfs_mci_device()
       because we're dereferencing out of the bounds of the
       dynamic_csrow_dimm_attr array. ]
    
    Add attributes for channels 6 and 7 along with a guard for the
    future, should more channels be required and/or to sanity check for
    misconfigured machines.
    
    We still need to check against the number of channels present on the MC
    first, as Thor reported.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reported-by: Hironobu Ishii <ishii.hironobu@jp.fujitsu.com>
    Tested-by: Thor Thayer <tthayer@opensource.altera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c93b99d27ffe7d1a3c6d43429bd1966b4c353dc
Author: Amadeusz Sławiński <amadeusz.slawinski@tieto.com>
Date:   Thu Jul 14 10:50:23 2016 +0200

    Bluetooth: Fix l2cap_sock_setsockopt() with optname BT_RCVMTU
    
    commit 23bc6ab0a0912146fd674a0becc758c3162baabc upstream.
    
    When we retrieve imtu value from userspace we should use 16 bit pointer
    cast instead of 32 as it's defined that way in headers. Fixes setsockopt
    calls on big-endian platforms.
    
    Signed-off-by: Amadeusz Sławiński <amadeusz.slawinski@tieto.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 663c26074f48d08683877dc8b4256dc12ffcfe0e
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Jul 6 12:08:11 2016 +0300

    spi: pxa2xx: Clear all RFT bits in reset_sccr1() on Intel Quark
    
    commit 152bc19e2fc2b7fce7ffbc2a9cea94b147223702 upstream.
    
    It seems the commit e5262d0568dc ("spi: spi-pxa2xx: SPI support for Intel Quark
    X1000") misses one place to be adapted for Intel Quark, i.e. in reset_sccr1().
    
    Clear all RFT bits when call reset_sccr1() on Intel Quark.
    
    Fixes: e5262d0568dc ("spi: spi-pxa2xx: SPI support for Intel Quark X1000")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f32fd3a3a49780994d4f1b32816adfba75777cb
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Jul 16 02:36:38 2016 +0300

    i2c: efm32: fix a failure path in efm32_i2c_probe()
    
    commit 7dd91d52a813f99a95d20f539b777e9e6198b931 upstream.
    
    There is the only failure path in efm32_i2c_probe(),
    where clk_disable_unprepare() is missed.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Fixes: 1b5b23718b84 ("i2c: efm32: new bus driver")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31edf03971c2dd1189024f87b349f66a473aeb4b
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Tue May 3 16:27:17 2016 -0400

    s5p-mfc: Add release callback for memory region devs
    
    commit 6311f1261f59ce5e51fbe5cc3b5e7737197316ac upstream.
    
    When s5p_mfc_remove() calls put_device() for the reserved memory region
    devs, the driver core warns that the dev doesn't have a release callback:
    
    WARNING: CPU: 0 PID: 591 at drivers/base/core.c:251 device_release+0x8c/0x90
    Device 's5p-mfc-l' does not have a release() function, it is broken and must be fixed.
    
    Also, the declared DMA memory using dma_declare_coherent_memory() isn't
    relased so add a dev .release that calls dma_release_declared_memory().
    
    Fixes: 6e83e6e25eb4 ("[media] s5p-mfc: Fix kernel warning on memory init")
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bddb6876b6e40d9c787b04087bcb2de2cf044fb6
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Tue May 3 16:27:16 2016 -0400

    s5p-mfc: Set device name for reserved memory region devs
    
    commit 29debab0a94035a390801d1f177d171d014b7765 upstream.
    
    The devices don't have a name set, so makes dev_name() returns NULL which
    makes harder to identify the devices that are causing issues, for example:
    
    WARNING: CPU: 2 PID: 616 at drivers/base/core.c:251 device_release+0x8c/0x90
    Device '(null)' does not have a release() function, it is broken and must be fixed.
    
    And after setting the device name:
    
    WARNING: CPU: 0 PID: 591 at drivers/base/core.c:251 device_release+0x8c/0x90
    Device 's5p-mfc-l' does not have a release() function, it is broken and must be fixed.
    
    Fixes: 6e83e6e25eb4 ("[media] s5p-mfc: Fix kernel warning on memory init")
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdec508104e768a64ac0a7d8571ceb52689deed2
Author: Alex Hung <alex.hung@canonical.com>
Date:   Mon Jun 13 19:44:00 2016 +0800

    hp-wmi: Fix wifi cannot be hard-unblocked
    
    commit fc8a601e1175ae351f662506030f9939cb7fdbfe upstream.
    
    Several users reported wifi cannot be unblocked as discussed in [1].
    This patch removes the use of the 2009 flag by BIOS but uses the actual
    WMI function calls - it will be skipped if WMI reports unsupported.
    
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=69131
    
    Signed-off-by: Alex Hung <alex.hung@canonical.com>
    Tested-by: Evgenii Shatokhin <eugene.shatokhin@yandex.ru>
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb76628b66f88b6c8206fa906f524362869b5c03
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Aug 2 13:07:20 2016 -0400

    dm: set DMF_SUSPENDED* _before_ clearing DMF_NOFLUSH_SUSPENDING
    
    commit eaf9a7361f47727b166688a9f2096854eef60fbe upstream.
    
    Otherwise, there is potential for both DMF_SUSPENDED* and
    DMF_NOFLUSH_SUSPENDING to not be set during dm_suspend() -- which is
    definitely _not_ a valid state.
    
    This fix, in conjuction with "dm rq: fix the starting and stopping of
    blk-mq queues", addresses the potential for request-based DM multipath's
    __multipath_map() to see !dm_noflush_suspending() during suspend.
    
    Reported-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fe16eaeb94068fbe002ec75cb4799a2474108fd
Author: Florian Echtler <floe@butterbrot.org>
Date:   Tue May 31 17:15:33 2016 -0300

    sur40: fix occasional oopses on device close
    
    commit 6a8588156657e607fcfdffd46c1daae8ba88a1e5 upstream.
    
    Closing the V4L2 device sometimes triggers a kernel oops.
    Present patch fixes this.
    
    Signed-off-by: Martin Kaltenbrunner <modin@yuri.at>
    Signed-off-by: Florian Echtler <floe@butterbrot.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8ad7cb60062a5a0514eb720b44f164276ebc4e0
Author: Florian Echtler <floe@butterbrot.org>
Date:   Tue May 31 17:15:32 2016 -0300

    sur40: lower poll interval to fix occasional FPS drops to ~56 FPS
    
    commit af766ee005c496b8567976dc3eed7676443ed6de upstream.
    
    The framerate sometimes drops below 60 Hz if the poll interval is too high.
    Lowering it to the minimum of 1 ms fixes this.
    
    Signed-off-by: Martin Kaltenbrunner <modin@yuri.at>
    Signed-off-by: Florian Echtler <floe@butterbrot.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dbd7a3684fa0c33ed9448a237e1b0ac2cb3d52e
Author: Jonathan McDowell <noodles@earth.li>
Date:   Sat May 14 14:01:26 2016 -0300

    Fix RC5 decoding with Fintek CIR chipset
    
    commit bbdb34c90aeb8b2253eae88029788ebe1d7f2fd4 upstream.
    
    Fix RC5 decoding with Fintek CIR chipset
    
    Commit e87b540be2dd02552fb9244d50ae8b4e4619a34b tightened up the RC5
    decoding by adding a check for trailing silence to ensure a valid RC5
    command had been received. Unfortunately the trailer length checked was
    10 units and the Fintek CIR device does not want to provide details of a
    space longer than 6350us. This meant that RC5 remotes working on a
    Fintek setup on 3.16 failed on 3.17 and later. Fix this by shortening
    the trailer check to 6 units (allowing for a previous space in the
    received remote command).
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=117221
    
    Signed-off-by: Jonathan McDowell <noodles@earth.li>
    Signed-off-by: David Härdeman <david@hardeman.nu>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33201bcbc309af1d90372b078b8cc5017e5fff33
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed May 11 18:44:32 2016 -0300

    vb2: core: Skip planes array verification if pb is NULL
    
    commit 126f40298446a82116e1f92a1aaf72b8c8228fae upstream.
    
    An earlier patch fixing an input validation issue introduced another
    issue: vb2_core_dqbuf() is called with pb argument value NULL in some
    cases, causing a NULL pointer dereference. Fix this by skipping the
    verification as there's nothing to verify.
    
    Fixes: e7e0c3e26587 ("[media] videobuf2-core: Check user space planes array in dqbuf")
    
    Signed-off-by: David R <david@unsolicited.net>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 175845952ef0b36f89032fe4bad455e898571f52
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sun Apr 3 16:31:03 2016 -0300

    videobuf2-v4l2: Verify planes array in buffer dequeueing
    
    commit 83934b75c368f529d084815c463a7ef781dc9751 upstream.
    
    When a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact buffer
    which will be dequeued is not known until the buffer has been removed from
    the queue. The number of planes is specific to a buffer, not to the queue.
    
    This does lead to the situation where multi-plane buffers may be requested
    and queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argument
    struct with fewer planes.
    
    __fill_v4l2_buffer() however uses the number of planes from the dequeued
    videobuf2 buffer, overwriting kernel memory (the m.planes array allocated
    in video_usercopy() in v4l2-ioctl.c)  if the user provided fewer
    planes than the dequeued buffer had. Oops!
    
    Fixes: b0e0e1f83de3 ("[media] media: videobuf2: Prepare to divide videobuf2")
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e416faea82dd9231228ba5025c9d62f041e7726
Author: Soeren Moch <smoch@web.de>
Date:   Wed May 11 13:49:11 2016 -0300

    media: dvb_ringbuffer: Add memory barriers
    
    commit ca6e6126db5494f18c6c6615060d4d803b528bff upstream.
    
    Implement memory barriers according to Documentation/circular-buffers.txt:
    - use smp_store_release() to update ringbuffer read/write pointers
    - use smp_load_acquire() to load write pointer on reader side
    - use ACCESS_ONCE() to load read pointer on writer side
    
    This fixes data stream corruptions observed e.g. on an ARM Cortex-A9
    quad core system with different types (PCI, USB) of DVB tuners.
    
    Signed-off-by: Soeren Moch <smoch@web.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddc35199f2ad8e30c3a018e5a71c56dc60a791cd
Author: Matthew Leach <matthew@mattleach.net>
Date:   Fri Jul 8 09:04:27 2016 -0300

    media: usbtv: prevent access to free'd resources
    
    commit 2a00932f082aff93c3a55426e0c7af6d0ec03997 upstream.
    
    When disconnecting the usbtv device, the sound card is unregistered
    from ALSA and the snd member of the usbtv struct is set to NULL.  If
    the usbtv snd_trigger work is running, this can cause a race condition
    where the kernel will attempt to access free'd resources, shown in
    [1].
    
    This patch fixes the disconnection code by cancelling any snd_trigger
    work before unregistering the sound card from ALSA and checking that
    the snd member still exists in the work function.
    
    [1]:
     usb 3-1.2: USB disconnect, device number 6
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
     IP: [<ffffffff81093850>] process_one_work+0x30/0x480
     PGD 405bbf067 PUD 405bbe067 PMD 0
     Call Trace:
      [<ffffffff81093ce8>] worker_thread+0x48/0x4e0
      [<ffffffff81093ca0>] ? process_one_work+0x480/0x480
      [<ffffffff81093ca0>] ? process_one_work+0x480/0x480
      [<ffffffff81099998>] kthread+0xd8/0xf0
      [<ffffffff815c73c2>] ret_from_fork+0x22/0x40
      [<ffffffff810998c0>] ? kthread_worker_fn+0x170/0x170
     ---[ end trace 0f3dac5c1a38e610 ]---
    
    Signed-off-by: Matthew Leach <matthew@mattleach.net>
    Tested-by: Peter Sutton <foxxy@foxdogstudios.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43ef3b69698bfcd23c6608b511cd055bee491df1
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Jun 22 08:27:17 2016 +0200

    mfd: qcom_rpm: Parametrize also ack selector size
    
    commit f37be01e6dc606f2fcc5e95c9933d948ce19bd35 upstream.
    
    The RPM has two sets of selectors (IPC bit fields): request and
    acknowledge. Apparently, some models use 4*32 bit words for select
    and some use 7*32 bit words for request, but all use 7*32 words
    for acknowledge bits.
    
    So apparently you can on the models with requests of 4*32 select
    bits send 4*32 messages and get 7*32 different replies, so on ACK
    interrupt, 7*32 bit words need to be read. This is how the vendor
    code apparently works.
    
    Reported-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f984405d09114d07886850868a2a17232ab0f32
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Jun 15 01:02:26 2016 +0200

    mfd: qcom_rpm: Fix offset error for msm8660
    
    commit 9835f1b70bb3890d38308b9be4fb9d7451ba67f1 upstream.
    
    The RPM in MSM8660/APQ8060 has different offsets to the selector
    ACK and request context ACK registers. Make all these register
    offsets part of the per-SoC data and assign the right values.
    
    The bug was found by verifying backwards to the vendor tree in
    the out-of-tree files <mach/rpm-[8660|8064|8960]>: all were using
    offsets 3,11,15,23 and a select size of 4, except the MSM8660/APQ8060
    which was using offsets 3,11,19,27 and a select size of 7.
    
    All other platforms apart from msm8660 were affected by reading
    excess registers, since 7 was hardcoded as the number of select
    words, this patch makes also this part dynamic so we only write/read
    as many select words as the platform actually use.
    
    Symptoms of this bug when using msm8660: the first RPM transaction
    would work, but the next would stall or raise an error since the
    previous transaction was not properly ACKed as the ACK words were
    read at the wrong offset.
    
    Fixes: 58e214382bdd ("mfd: qcom-rpm: Driver for the Qualcomm RPM")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Björn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 695c69bf304d7874e0b918684818711f0d7830f9
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Fri Jul 8 20:42:04 2016 +0200

    intel_pstate: Fix MSR_CONFIG_TDP_x addressing in core_get_max_pstate()
    
    commit 5fc8f707a2aa40c767c3a338738b9b6fcd151ac1 upstream.
    
    If MSR_CONFIG_TDP_CONTROL is locked, we currently try to address some
    MSR 0x80000648 or so. Mask out the relevant level bits 0 and 1.
    
    Found while running over the Jailhouse hypervisor which became upset
    about this strange MSR index.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e990e8ba92c63136f7678a8bbd656af53318343b
Author: Sebastian Ott <sebott@linux.vnet.ibm.com>
Date:   Tue Jul 12 19:57:57 2016 +0200

    s390/cio: allow to reset channel measurement block
    
    commit 0f5d050ceaa31b2229102211d60c149f920df3aa upstream.
    
    Prior to commit 1bc6664bdfb949bc69a08113801e7d6acbf6bc3f a call to
    enable_cmf for a device for which channel measurement was already
    enabled resulted in a reset of the measurement data.
    
    What looked like bugs at the time (a 2nd allocation was triggered
    but failed, reset was called regardless of previous failures, and
    errors have not been reported to userspace) was actually something
    at least one userspace tool depended on. Restore that behavior in
    a sane way.
    
    Fixes: 1bc6664bdfb ("s390/cio: use device_lock during cmb activation")
    Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 144941bd9907d0e616229f0b6dddcad512030407
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Jul 8 15:36:06 2016 -0700

    KVM: nVMX: Fix memory corruption when using VMCS shadowing
    
    commit 2f1fe81123f59271bddda673b60116bde9660385 upstream.
    
    When freeing the nested resources of a vcpu, there is an assumption that
    the vcpu's vmcs01 is the current VMCS on the CPU that executes
    nested_release_vmcs12(). If this assumption is violated, the vcpu's
    vmcs01 may be made active on multiple CPUs at the same time, in
    violation of Intel's specification. Moreover, since the vcpu's vmcs01 is
    not VMCLEARed on every CPU on which it is active, it can linger in a
    CPU's VMCS cache after it has been freed and potentially
    repurposed. Subsequent eviction from the CPU's VMCS cache on a capacity
    miss can result in memory corruption.
    
    It is not sufficient for vmx_free_vcpu() to call vmx_load_vmcs01(). If
    the vcpu in question was last loaded on a different CPU, it must be
    migrated to the current CPU before calling vmx_load_vmcs01().
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bd2820f906f75c4a05484a5b446e50a1f1b0e34
Author: Cao, Lei <Lei.Cao@stratus.com>
Date:   Fri Jul 15 13:54:04 2016 +0000

    KVM: VMX: handle PML full VMEXIT that occurs during event delivery
    
    commit b244c9fc251e14a083a1cbf04bef10bd99303a76 upstream.
    
    With PML enabled, guest will shut down if a PML full VMEXIT occurs during
    event delivery. According to Intel SDM 27.2.3, PML full VMEXIT can occur when
    event is being delivered through IDT, so KVM should not exit to user space
    with error. Instead, it should let EXIT_REASON_PML_FULL go through and the
    event will be re-injected on the next VMENTRY.
    
    Signed-off-by: Lei Cao <lei.cao@stratus.com>
    Fixes: 843e4330573c ("KVM: VMX: Add PML support in VMX")
    [Shortened the summary and Cc'd stable.]
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9ab0b3614fca6b363b2f2cfa918e7b7f74592ea
Author: Alexis Dambricourt <alexis.dambricourt@gmail.com>
Date:   Mon Jul 4 21:05:15 2016 +0200

    KVM: MTRR: fix kvm_mtrr_check_gfn_range_consistency page fault
    
    commit 30b072ce0356e8b141f4ca6da7220486fa3641d9 upstream.
    
    The following #PF may occurs:
    [ 1403.317041] BUG: unable to handle kernel paging request at 0000000200000068
    [ 1403.317045] IP: [<ffffffffc04c20b0>] __mtrr_lookup_var_next+0x10/0xa0 [kvm]
    
    [ 1403.317123] Call Trace:
    [ 1403.317134]  [<ffffffffc04c2a65>] ? kvm_mtrr_check_gfn_range_consistency+0xc5/0x120 [kvm]
    [ 1403.317143]  [<ffffffffc04ac11f>] ? tdp_page_fault+0x9f/0x2c0 [kvm]
    [ 1403.317152]  [<ffffffffc0498128>] ? kvm_set_msr_common+0x858/0xc00 [kvm]
    [ 1403.317161]  [<ffffffffc04b8883>] ? x86_emulate_insn+0x273/0xd30 [kvm]
    [ 1403.317171]  [<ffffffffc04c04e4>] ? kvm_cpuid+0x34/0x190 [kvm]
    [ 1403.317180]  [<ffffffffc04a5bb9>] ? kvm_mmu_page_fault+0x59/0xe0 [kvm]
    [ 1403.317183]  [<ffffffffc0d729e1>] ? vmx_handle_exit+0x1d1/0x14a0 [kvm_intel]
    [ 1403.317185]  [<ffffffffc0d75f3f>] ? atomic_switch_perf_msrs+0x6f/0xa0 [kvm_intel]
    [ 1403.317187]  [<ffffffffc0d7621d>] ? vmx_vcpu_run+0x2ad/0x420 [kvm_intel]
    [ 1403.317196]  [<ffffffffc04a0962>] ? kvm_arch_vcpu_ioctl_run+0x622/0x1550 [kvm]
    [ 1403.317204]  [<ffffffffc049abb9>] ? kvm_arch_vcpu_load+0x59/0x210 [kvm]
    [ 1403.317206]  [<ffffffff81036245>] ? __kernel_fpu_end+0x35/0x100
    [ 1403.317213]  [<ffffffffc0487eb6>] ? kvm_vcpu_ioctl+0x316/0x5d0 [kvm]
    [ 1403.317215]  [<ffffffff81088225>] ? do_sigtimedwait+0xd5/0x220
    [ 1403.317217]  [<ffffffff811f84dd>] ? do_vfs_ioctl+0x9d/0x5c0
    [ 1403.317224]  [<ffffffffc04928ae>] ? kvm_on_user_return+0x3e/0x70 [kvm]
    [ 1403.317225]  [<ffffffff811f8a74>] ? SyS_ioctl+0x74/0x80
    [ 1403.317227]  [<ffffffff815bf0b6>] ? entry_SYSCALL_64_fastpath+0x1e/0xa8
    [ 1403.317242] RIP  [<ffffffffc04c20b0>] __mtrr_lookup_var_next+0x10/0xa0 [kvm]
    
    At mtrr_lookup_fixed_next(), when the condition
    'if (iter->index >= ARRAY_SIZE(iter->mtrr_state->fixed_ranges))' becomes true,
    mtrr_lookup_var_start() is called with iter->range with gargabe values from the
    fixed MTRR union field. Then, list_prepare_entry() do not call list_entry()
    initialization, keeping a garbage pointer in iter->range which is accessed in
    the following __mtrr_lookup_var_next() call.
    
    Fixes: f571c0973e4b8c888e049b6842e4b4f93b5c609c
    Signed-off-by: Alexis Dambricourt <alexis@blade-group.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41490064ad279e8364d993e0cb1117209799fd80
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Jun 22 15:52:55 2016 +1000

    KVM: PPC: Book3S HV: Save/restore TM state in H_CEDE
    
    commit 93d17397e4e2182fdaad503e2f9da46202c0f1c3 upstream.
    
    It turns out that if the guest does a H_CEDE while the CPU is in
    a transactional state, and the H_CEDE does a nap, and the nap
    loses the architected state of the CPU (which is is allowed to do),
    then we lose the checkpointed state of the virtual CPU.  In addition,
    the transactional-memory state recorded in the MSR gets reset back
    to non-transactional, and when we try to return to the guest, we take
    a TM bad thing type of program interrupt because we are trying to
    transition from non-transactional to transactional with a hrfid
    instruction, which is not permitted.
    
    The result of the program interrupt occurring at that point is that
    the host CPU will hang in an infinite loop with interrupts disabled.
    Thus this is a denial of service vulnerability in the host which can
    be triggered by any guest (and depending on the guest kernel, it can
    potentially triggered by unprivileged userspace in the guest).
    
    This vulnerability has been assigned the ID CVE-2016-5412.
    
    To fix this, we save the TM state before napping and restore it
    on exit from the nap, when handling a H_CEDE in real mode.  The
    case where H_CEDE exits to host virtual mode is already OK (as are
    other hcalls which exit to host virtual mode) because the exit
    path saves the TM state.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1a90eb8afa42b02f46897b881b9e19d3594159c
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Jun 22 14:21:59 2016 +1000

    KVM: PPC: Book3S HV: Pull out TM state save/restore into separate procedures
    
    commit f024ee098476a3e620232e4a78cfac505f121245 upstream.
    
    This moves the transactional memory state save and restore sequences
    out of the guest entry/exit paths into separate procedures.  This is
    so that these sequences can be used in going into and out of nap
    in a subsequent patch.
    
    The only code changes here are (a) saving and restore LR on the
    stack, since these new procedures get called with a bl instruction,
    (b) explicitly saving r1 into the PACA instead of assuming that
    HSTATE_HOST_R1(r13) is already set, and (c) removing an unnecessary
    and redundant setting of MSR[TM] that should have been removed by
    commit 9d4d0bdd9e0a ("KVM: PPC: Book3S HV: Add transactional memory
    support", 2013-09-24) but wasn't.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be7acd281e5ab34c87f4cc930f42c3fdf49ee33d
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Aug 1 13:29:31 2016 +0200

    arm64: mm: avoid fdt_check_header() before the FDT is fully mapped
    
    commit 04a848106193b134741672f7e4e444b50c70b631 upstream.
    
    As reported by Zijun, the fdt_check_header() call in __fixmap_remap_fdt()
    is not safe since it is not guaranteed that the FDT header is mapped
    completely. Due to the minimum alignment of 8 bytes, the only fields we
    can assume to be mapped are 'magic' and 'totalsize'.
    
    Since the OF layer is in charge of validating the FDT image, and we are
    only interested in making reasonably sure that the size field contains
    a meaningful value, replace the fdt_check_header() call with an explicit
    comparison of the magic field's value against the expected value.
    
    Reported-by: Zijun Hu <zijun_hu@htc.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d894c3f0f1cadd5649364556a9de30a9e8c0f74
Author: Caesar Wang <wxt@rock-chips.com>
Date:   Wed May 18 22:41:50 2016 +0800

    arm64: dts: rockchip: fixes the gic400 2nd region size for rk3368
    
    commit ad1cfdf518976447e6b0d31517bad4e3ebbce6bb upstream.
    
    The 2nd additional region is the GIC virtual cpu interface register
    base and size.
    
    As the gic400 of rk3368 says, the cpu interface register map as below
    
    :
    
    -0x0000 GICC_CTRL
    .
    .
    .
    -0x00fc GICC_IIDR
    -0x1000 GICC_IDR
    
    Obviously, the region size should be greater than 0x1000.
    So we should make sure to include the GICC_IDR since the kernel will access
    it in some cases.
    
    Fixes: b790c2cab5ca ("arm64: dts: add Rockchip rk3368 core dtsi and board dts for the r88 board")
    Signed-off-by: Caesar Wang <wxt@rock-chips.com>
    Reviewed-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    [added Fixes and stable-cc]
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>

commit 4c3b381fadc08342a2f4b1182c9f710983ab299c
Author: Dan O'Donovan <dan@emutex.com>
Date:   Fri Jun 10 13:23:34 2016 +0100

    pinctrl: cherryview: prevent concurrent access to GPIO controllers
    
    commit 0bd50d719b004110e791800450ad204399100a86 upstream.
    
    Due to a silicon issue on the Atom X5-Z8000 "Cherry Trail" processor
    series, a common lock must be used to prevent concurrent accesses
    across the 4 GPIO controllers managed by this driver.
    
    See Intel Atom Z8000 Processor Series Specification Update
    (Rev. 005), errata #CHT34, for further information.
    
    Signed-off-by: Dan O'Donovan <dan@emutex.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5cf298670b360550a9b772b02aaafd13652fe74
Author: Loic Poulain <loic.poulain@intel.com>
Date:   Thu Apr 28 18:48:25 2016 +0200

    Bluetooth: hci_intel: Fix null gpio desc pointer dereference
    
    commit 32b9ccbc3522811c0e483637b85ae25f5491296f upstream.
    
    gpiod_get_optional can return either ERR_PTR or NULL pointer.
    NULL case is not tested and then dereferenced later in desc_to_gpio.
    Fix this by using non optional version which returns ERR_PTR in any
    error case (this is not an optional gpio).
    Use the same non optional version for the host-wake gpio.
    
    Fixes: 765ea3abd116 ("Bluetooth: hci_intel: Retrieve host-wake IRQ")
    Signed-off-by: Loic Poulain <loic.poulain@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b3ff17cabc6b06226f45b63c1d62fc186f3080d
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Jul 6 12:50:12 2016 +0300

    gpio: intel-mid: Remove potentially harmful code
    
    commit 3dbd3212f81b2b410a34a922055e2da792864829 upstream.
    
    The commit d56d6b3d7d69 ("gpio: langwell: add Intel Merrifield support")
    doesn't look at all as a proper support for Intel Merrifield and I dare to say
    that it distorts the behaviour of the hardware.
    
    The register map is different on Intel Merrifield, i.e. only 6 out of 8
    register have the same purpose but none of them has same location in the
    address space. The current case potentially harmful to existing hardware since
    it's poking registers on wrong offsets and may set some pin to be GPIO output
    when connected hardware doesn't expect such.
    
    Besides the above GPIO and pinctrl on Intel Merrifield have been located in
    different IP blocks. The functionality has been extended as well, i.e. added
    support of level interrupts, special registers for wake capable sources and
    thus, in my opinion, requires a completele separate driver.
    
    If someone wondering the existing gpio-intel-mid.c would be converted to actual
    pinctrl (which by the fact it is now), though I wouldn't be a volunteer to do
    that.
    
    Fixes: d56d6b3d7d69 ("gpio: langwell: add Intel Merrifield support")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a2773383ff778fc050e45f975adbcdc79df003d
Author: Vignesh R <vigneshr@ti.com>
Date:   Thu Jun 9 11:02:04 2016 +0530

    gpio: pca953x: Fix NBANK calculation for PCA9536
    
    commit a246b8198f776a16d1d3a3bbfc2d437bad766b29 upstream.
    
    NBANK() macro assumes that ngpios is a multiple of 8(BANK_SZ) and
    hence results in 0 banks for PCA9536 which has just 4 gpios. This is
    wrong as PCA9356 has 1 bank with 4 gpios. This results in uninitialized
    PCA953X_INVERT register. Fix this by using DIV_ROUND_UP macro in
    NBANK().
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 580b1bbcc94e37d24e7469b3778338e4e988b190
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sat May 28 00:54:08 2016 +0200

    tty/serial: atmel: fix RS485 half duplex with DMA
    
    commit 0058f0871efe7b01c6f2b3046c68196ab73e96da upstream.
    
    When using DMA, half duplex doesn't work properly because rx is not stopped
    before starting tx. Ensure we call atmel_stop_rx() in the DMA case.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8af97d26ce2054f4914eb382be2ab1d7c994b190
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Jun 16 08:27:35 2016 +0200

    serial: samsung: Fix ERR pointer dereference on deferred probe
    
    commit e51e4d8a185de90424b03f30181b35f29c46a25a upstream.
    
    When the clk_get() of "uart" clock returns EPROBE_DEFER, the next re-probe
    finishes with success but uses invalid (ERR_PTR) values.  This leads to
    dereferencing of ERR_PTR stored under ourport->clk:
    
            12c30000.serial: Controller clock not found
            (...)
            12c30000.serial: ttySAC3 at MMIO 0x12c30000 (irq = 61, base_baud = 0) is a S3C6400/10
            Unable to handle kernel paging request at virtual address fffffdfb
    
            (clk_prepare) from [<c039f7d0>] (s3c24xx_serial_pm+0x20/0x128)
            (s3c24xx_serial_pm) from [<c0395414>] (uart_change_pm+0x38/0x40)
            (uart_change_pm) from [<c039689c>] (uart_add_one_port+0x31c/0x44c)
            (uart_add_one_port) from [<c03a035c>] (s3c24xx_serial_probe+0x2a8/0x418)
            (s3c24xx_serial_probe) from [<c03ee110>] (platform_drv_probe+0x50/0xb0)
            (platform_drv_probe) from [<c03ecb44>] (driver_probe_device+0x1f4/0x2b0)
            (driver_probe_device) from [<c03eb0c0>] (bus_for_each_drv+0x44/0x8c)
            (bus_for_each_drv) from [<c03ec8c8>] (__device_attach+0x9c/0x100)
            (__device_attach) from [<c03ebf54>] (bus_probe_device+0x84/0x8c)
            (bus_probe_device) from [<c03ec388>] (deferred_probe_work_func+0x60/0x8c)
            (deferred_probe_work_func) from [<c012fee4>] (process_one_work+0x120/0x328)
            (process_one_work) from [<c0130150>] (worker_thread+0x2c/0x4ac)
            (worker_thread) from [<c0135320>] (kthread+0xd8/0xf4)
            (kthread) from [<c0107978>] (ret_from_fork+0x14/0x3c)
    
    The first unsuccessful clk_get() causes s3c24xx_serial_init_port() to
    exit with failure but the s3c24xx_uart_port is left half-configured
    (e.g. port->mapbase is set, clk contains ERR_PTR).  On next re-probe,
    the function s3c24xx_serial_init_port() will exit early with success
    because of configured port->mapbase and driver will use old values,
    including the ERR_PTR as clock.
    
    Fix this by cleaning the port->mapbase on error path so each re-probe
    will initialize all of the port settings.
    
    Fixes: 60e93575476f ("serial: samsung: enable clock before clearing pending interrupts during init")
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Reviewed-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79b8ddbebf7420fa71c76d4f5f892b21ef1e4456
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Jun 2 17:48:28 2016 -0700

    tty: serial: msm: Don't read off end of tx fifo
    
    commit 30acf549ca1e81859a67590ab9ecfce3d1050a0b upstream.
    
    For dm uarts in pio mode tx data is transferred to the fifo register 4
    bytes at a time, but care is not taken when these 4 bytes spans the end
    of the xmit buffer so the loop might read up to 3 bytes past the buffer
    and then skip the actual data at the beginning of the buffer.
    
    Fix this by, analogous to the DMA case, make sure the chunk doesn't
    wrap the xmit buffer.
    
    Fixes: 3a878c430fd6 ("tty: serial: msm: Add TX DMA support")
    Cc: Ivan Ivanov <iivanov.xz@gmail.com>
    Reported-by: Frank Rowand <frowand.list@gmail.com>
    Reported-by: Nicolas Dechesne <nicolas.dechesne@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Acked-by: Andy Gross <andy.gross@linaro.org>
    Tested-by: Frank Rowand <frank.rowand@am.sony.com>
    Reviewed-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec2fdbebceb9d98fcf2f94a6d5a6f644491f2f76
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Jul 21 11:12:55 2016 +0100

    arm64: Fix incorrect per-cpu usage for boot CPU
    
    commit 9113c2aa05e9848cd4f1154abee17d4f265f012d upstream.
    
    In smp_prepare_boot_cpu(), we invoke cpuinfo_store_boot_cpu to  store
    the cpuinfo in a per-cpu ptr, before initialising the per-cpu offset for
    the boot CPU. This patch reorders the sequence to make sure we initialise
    the per-cpu offset before accessing the per-cpu area.
    
    Commit 4b998ff1885eec ("arm64: Delay cpuinfo_store_boot_cpu") fixed the
    issue where we modified the per-cpu area even before the kernel initialises
    the per-cpu areas, but failed to wait until the boot cpu updated it's
    offset.
    
    Fixes: 4b998ff1885e ("arm64: Delay cpuinfo_store_boot_cpu")
    Cc: <stable@vger.kernel.org> # 4.4+
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4a65209ddfce90381787859b97034f405820d63
Author: Will Deacon <will@kernel.org>
Date:   Tue Jul 19 15:07:37 2016 +0100

    arm64: debug: unmask PSTATE.D earlier
    
    commit 2ce39ad15182604beb6c8fa8bed5e46b59fd1082 upstream.
    
    Clearing PSTATE.D is one of the requirements for generating a debug
    exception. The arm64 booting protocol requires that PSTATE.D is set,
    since many of the debug registers (for example, the hw_breakpoint
    registers) are UNKNOWN out of reset and could potentially generate
    spurious, fatal debug exceptions in early boot code if PSTATE.D was
    clear. Once the debug registers have been safely initialised, PSTATE.D
    is cleared, however this is currently broken for two reasons:
    
    (1) The boot CPU clears PSTATE.D in a postcore_initcall and secondary
        CPUs clear PSTATE.D in secondary_start_kernel. Since the initcall
        runs after SMP (and the scheduler) have been initialised, there is
        no guarantee that it is actually running on the boot CPU. In this
        case, the boot CPU is left with PSTATE.D set and is not capable of
        generating debug exceptions.
    
    (2) In a preemptible kernel, we may explicitly schedule on the IRQ
        return path to EL1. If an IRQ occurs with PSTATE.D set in the idle
        thread, then we may schedule the kthread_init thread, run the
        postcore_initcall to clear PSTATE.D and then context switch back
        to the idle thread before returning from the IRQ. The exception
        return path will then restore PSTATE.D from the stack, and set it
        again.
    
    This patch fixes the problem by moving the clearing of PSTATE.D earlier
    to proc.S. This has the desirable effect of clearing it in one place for
    all CPUs, long before we have to worry about the scheduler or any
    exception handling. We ensure that the previous reset of MDSCR_EL1 has
    completed before unmasking the exception, so that any spurious
    exceptions resulting from UNKNOWN debug registers are not generated.
    
    Without this patch applied, the kprobes selftests have been seen to fail
    under KVM, where we end up attempting to step the OOL instruction buffer
    with PSTATE.D set and therefore fail to complete the step.
    
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reported-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5a095803c2469cd3d1fc5a11acc1a8150b7c9f4
Author: James Morse <james.morse@arm.com>
Date:   Mon Jun 20 18:28:01 2016 +0100

    arm64: kernel: Save and restore UAO and addr_limit on exception entry
    
    commit e19a6ee2460bdd0d0055a6029383422773f9999a upstream.
    
    If we take an exception while at EL1, the exception handler inherits
    the original context's addr_limit and PSTATE.UAO values. To be consistent
    always reset addr_limit and PSTATE.UAO on (re-)entry to EL1. This
    prevents accidental re-use of the original context's addr_limit.
    
    Based on a similar patch for arm from Russell King.
    
    Cc: <stable@vger.kernel.org> # 4.6-
    Acked-by: Will Deacon <will.deacon@arm.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    [ backport to stop perf misusing inherited addr_limit.
      Removed code interacting with UAO and the irqstack ]
    Link: https://bugs.chromium.org/p/project-zero/issues/detail?id=822
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4077ef4797a8ff007a2de091c9befee4882c4790
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:32:16 2016 -0400

    USB: usbfs: fix potential infoleak in devio
    
    commit 681fef8380eb818c0b845fca5d2ab1dcbab114ee upstream.
    
    The stack object “ci” has a total size of 8 bytes. Its last 3 bytes
    are padding bytes which are not initialized and leaked to userland
    via “copy_to_user”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: Chas Williams <ciwillia@brocade.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97917f45211d7e5c0afd5f4dc33982c096a26722
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Jun 8 16:32:49 2016 +0900

    usb: renesas_usbhs: fix NULL pointer dereference in xfer_work()
    
    commit 4fdef698383db07d829da567e0e405fc41ff3a89 upstream.
    
    This patch fixes an issue that the xfer_work() is possible to cause
    NULL pointer dereference if the usb cable is disconnected while data
    transfer is running.
    
    In such case, a gadget driver may call usb_ep_disable()) before
    xfer_work() is actually called. In this case, the usbhs_pkt_pop()
    will call usbhsf_fifo_unselect(), and then usbhs_pipe_to_fifo()
    in xfer_work() will return NULL.
    
    Fixes: e73a989 ("usb: renesas_usbhs: add DMAEngine support")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ab02b35d5ce7a161ff8ad141db207837015ad6c
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Mon Jun 6 12:38:17 2016 +0200

    USB: serial: option: add support for Telit LE910 PID 0x1206
    
    commit 3c0415fa08548e3bc63ef741762664497ab187ed upstream.
    
    This patch adds support for 0x1206 PID of Telit LE910.
    
    Since the interfaces positions are the same than the ones for
    0x1043 PID of Telit LE922, telit_le922_blacklist_usbcfg3 is used.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 558b4adac08dc14106af03b87216723f1f98d08c
Author: Konrad Leszczynski <konrad.leszczynski@intel.com>
Date:   Mon Feb 8 16:13:12 2016 +0100

    usb: dwc3: fix for the isoc transfer EP_BUSY flag
    
    commit 9cad39fe4e4a4fe95d8ea5a7b0692b0a6e89e38b upstream.
    
    commit f3af36511e60 ("usb: dwc3: gadget: always
    enable IOC on bulk/interrupt transfers") ended up
    regressing Isochronous endpoints by clearing
    DWC3_EP_BUSY flag too early, which resulted in
    choppy audio playback over USB.
    
    Fix that by partially reverting original commit and
    making sure that we check for isochronous endpoints.
    
    Fixes: f3af36511e60 ("usb: dwc3: gadget: always enable IOC
                    on bulk/interrupt transfers")
    Signed-off-by: Konrad Leszczynski <konrad.leszczynski@intel.com>
    Signed-off-by: Rafal Redzimski <rafal.f.redzimski@intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09796e2cfa937e7c8a0c8f87cdae21a7168477c8
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Wed Jul 6 21:18:51 2016 -0400

    usb: quirks: Add no-lpm quirk for Elan
    
    commit 25b1f9acc452209ae0fcc8c1332be852b5c52f53 upstream.
    
    BugLink: http://bugs.launchpad.net/bugs/1498667
    
    As reported in BugLink, this device has an issue with Linux Power
    Management so adding a quirk.  This quirk was reccomended by Alan Stern:
    
    http://lkml.iu.edu/hypermail/linux/kernel/1606.2/05590.html
    
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0927c5f9515278458c1b0d93ed7aa8fea66d798b
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Jun 8 16:32:50 2016 +0900

    usb: renesas_usbhs: protect the CFIFOSEL setting in usbhsg_ep_enable()
    
    commit 15e4292a2d21e9997fdb2b8c014cc461b3f268f0 upstream.
    
    This patch fixes an issue that the CFIFOSEL register value is possible
    to be changed by usbhsg_ep_enable() wrongly. And then, a data transfer
    using CFIFO may not work correctly.
    
    For example:
     # modprobe g_multi file=usb-storage.bin
     # ifconfig usb0 192.168.1.1 up
     (During the USB host is sending file to the mass storage)
     # ifconfig usb0 down
    
    In this case, since the u_ether.c may call usb_ep_enable() in
    eth_stop(), if the renesas_usbhs driver is also using CFIFO for
    mass storage, the mass storage may not work correctly.
    
    So, this patch adds usbhs_lock() and usbhs_unlock() calling in
    usbhsg_ep_enable() to protect CFIFOSEL register. This is because:
     - CFIFOSEL.CURPIPE = 0 is also needed for the pipe configuration
     - The CFIFOSEL (fifo->sel) is already protected by usbhs_lock()
    
    Fixes: 97664a207bc2 ("usb: renesas_usbhs: shrink spin lock area")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1d7992894fafb62b790b5112630b4f081b3b454
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat May 28 07:48:10 2016 +0300

    usb: f_fs: off by one bug in _ffs_func_bind()
    
    commit 0015f9156092d07b3ec06d37d014328419d5832e upstream.
    
    This loop is supposed to set all the .num[] values to -1 but it's off by
    one so it skips the first element and sets one element past the end of
    the array.
    
    I've cleaned up the loop a little as well.
    
    Fixes: ddf8abd25994 ('USB: f_fs: the FunctionFS driver')
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbd7cf3d188c2cae5784703d767900c0a9740db7
Author: Heinrich Schuchardt <xypron.glpk@gmx.de>
Date:   Sun May 8 23:20:59 2016 +0200

    usb: gadget: avoid exposing kernel stack
    
    commit ffeee83aa0461992e8a99a59db2df31933e60362 upstream.
    
    Function in_rq_cur copies random bytes from the stack.
    Zero the memory instead.
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
