commit 5d53369ea537c7e13e151c157003c399d1d928c3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jan 27 07:52:51 2015 -0800

    Linux 3.10.66

commit 10baac916052c3e2e914f0f582fa0deadfb5728a
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed Aug 13 12:01:30 2014 +0200

    s390/3215: fix tty output containing tabs
    
    commit e512d56c799517f33b301d81e9a5e0ebf30c2d1e upstream.
    
    git commit 37f81fa1f63ad38e16125526bb2769ae0ea8d332
    "n_tty: do O_ONLCR translation as a single write"
    surfaced a bug in the 3215 device driver. In combination this
    broke tab expansion for tty ouput.
    
    The cause is an asymmetry in the behaviour of tty3215_ops->write
    vs tty3215_ops->put_char. The put_char function scans for '\t'
    but the write function does not.
    
    As the driver has logic for the '\t' expansion remove XTABS
    from c_oflag of the initial termios as well.
    
    Reported-by: Stephen Powell <zlinuxman@wowway.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 214a899e44b238787c5893ed5e34d2f5c62eb048
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Tue Jul 15 17:53:12 2014 +0200

    s390/3215: fix hanging console issue
    
    commit 26d766c60f4ea08cd14f0f3435a6db3d6cc2ae96 upstream.
    
    The ccw_device_start in raw3215_start_io can fail. raw3215_try_io
    does not check if the request could be started and removes any
    pending timer. This can leave the system in a hanging state.
    Check for pending request after raw3215_start_io and start a
    timer if necessary.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1784d4766a68e0185b1aac207f409fa948c943ce
Author: Jerry Hoemann <jerry.hoemann@hp.com>
Date:   Wed Oct 29 14:50:22 2014 -0700

    fsnotify: next_i is freed during fsnotify_unmount_inodes.
    
    commit 6424babfd68dd8a83d9c60a5242d27038856599f upstream.
    
    During file system stress testing on 3.10 and 3.12 based kernels, the
    umount command occasionally hung in fsnotify_unmount_inodes in the
    section of code:
    
                    spin_lock(&inode->i_lock);
                    if (inode->i_state & (I_FREEING|I_WILL_FREE|I_NEW)) {
                            spin_unlock(&inode->i_lock);
                            continue;
                    }
    
    As this section of code holds the global inode_sb_list_lock, eventually
    the system hangs trying to acquire the lock.
    
    Multiple crash dumps showed:
    
    The inode->i_state == 0x60 and i_count == 0 and i_sb_list would point
    back at itself.  As this is not the value of list upon entry to the
    function, the kernel never exits the loop.
    
    To help narrow down problem, the call to list_del_init in
    inode_sb_list_del was changed to list_del.  This poisons the pointers in
    the i_sb_list and causes a kernel to panic if it transverse a freed
    inode.
    
    Subsequent stress testing paniced in fsnotify_unmount_inodes at the
    bottom of the list_for_each_entry_safe loop showing next_i had become
    free.
    
    We believe the root cause of the problem is that next_i is being freed
    during the window of time that the list_for_each_entry_safe loop
    temporarily releases inode_sb_list_lock to call fsnotify and
    fsnotify_inode_delete.
    
    The code in fsnotify_unmount_inodes attempts to prevent the freeing of
    inode and next_i by calling __iget.  However, the code doesn't do the
    __iget call on next_i
    
            if i_count == 0 or
            if i_state & (I_FREEING | I_WILL_FREE)
    
    The patch addresses this issue by advancing next_i in the above two cases
    until we either find a next_i which we can __iget or we reach the end of
    the list.  This makes the handling of next_i more closely match the
    handling of the variable "inode."
    
    The time to reproduce the hang is highly variable (from hours to days.) We
    ran the stress test on a 3.10 kernel with the proposed patch for a week
    without failure.
    
    During list_for_each_entry_safe, next_i is becoming free causing
    the loop to never terminate.  Advance next_i in those cases where
    __iget is not done.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hp.com>
    Cc: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Cc: Ken Helias <kenhelias@firemail.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcdba992c29bd54f94a90d531d6d48a45ef23b9f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Nov 10 17:11:21 2014 +0100

    netfilter: ipset: small potential read beyond the end of buffer
    
    commit 2196937e12b1b4ba139806d132647e1651d655df upstream.
    
    We could be reading 8 bytes into a 4 byte buffer here.  It seems
    harmless but adding a check is the right thing to do and it silences a
    static checker warning.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34a322c73ac589947e5daf84375da23e1babd657
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jan 5 10:50:15 2015 +0100

    mmc: sdhci: Fix sleep in atomic after inserting SD card
    
    commit 2836766a9d0bd02c66073f8dd44796e6cc23848d upstream.
    
    Sleep in atomic context happened on Trats2 board after inserting or
    removing SD card because mmc_gpio_get_cd() was called under spin lock.
    
    Fix this by moving card detection earlier, before acquiring spin lock.
    The mmc_gpio_get_cd() call does not have to be protected by spin lock
    because it does not access any sdhci internal data.
    The sdhci_do_get_cd() call access host flags (SDHCI_DEVICE_DEAD). After
    moving it out side of spin lock it could theoretically race with driver
    removal but still there is no actual protection against manual card
    eject.
    
    Dmesg after inserting SD card:
    [   41.663414] BUG: sleeping function called from invalid context at drivers/gpio/gpiolib.c:1511
    [   41.670469] in_atomic(): 1, irqs_disabled(): 128, pid: 30, name: kworker/u8:1
    [   41.677580] INFO: lockdep is turned off.
    [   41.681486] irq event stamp: 61972
    [   41.684872] hardirqs last  enabled at (61971): [<c0490ee0>] _raw_spin_unlock_irq+0x24/0x5c
    [   41.693118] hardirqs last disabled at (61972): [<c04907ac>] _raw_spin_lock_irq+0x18/0x54
    [   41.701190] softirqs last  enabled at (61648): [<c0026fd4>] __do_softirq+0x234/0x2c8
    [   41.708914] softirqs last disabled at (61631): [<c00273a0>] irq_exit+0xd0/0x114
    [   41.716206] Preemption disabled at:[<  (null)>]   (null)
    [   41.721500]
    [   41.722985] CPU: 3 PID: 30 Comm: kworker/u8:1 Tainted: G        W      3.18.0-rc5-next-20141121 #883
    [   41.732111] Workqueue: kmmcd mmc_rescan
    [   41.735945] [<c0014d2c>] (unwind_backtrace) from [<c0011c80>] (show_stack+0x10/0x14)
    [   41.743661] [<c0011c80>] (show_stack) from [<c0489d14>] (dump_stack+0x70/0xbc)
    [   41.750867] [<c0489d14>] (dump_stack) from [<c0228b74>] (gpiod_get_raw_value_cansleep+0x18/0x30)
    [   41.759628] [<c0228b74>] (gpiod_get_raw_value_cansleep) from [<c03646e8>] (mmc_gpio_get_cd+0x38/0x58)
    [   41.768821] [<c03646e8>] (mmc_gpio_get_cd) from [<c036d378>] (sdhci_request+0x50/0x1a4)
    [   41.776808] [<c036d378>] (sdhci_request) from [<c0357934>] (mmc_start_request+0x138/0x268)
    [   41.785051] [<c0357934>] (mmc_start_request) from [<c0357cc8>] (mmc_wait_for_req+0x58/0x1a0)
    [   41.793469] [<c0357cc8>] (mmc_wait_for_req) from [<c0357e68>] (mmc_wait_for_cmd+0x58/0x78)
    [   41.801714] [<c0357e68>] (mmc_wait_for_cmd) from [<c0361c00>] (mmc_io_rw_direct_host+0x98/0x124)
    [   41.810480] [<c0361c00>] (mmc_io_rw_direct_host) from [<c03620f8>] (sdio_reset+0x2c/0x64)
    [   41.818641] [<c03620f8>] (sdio_reset) from [<c035a3d8>] (mmc_rescan+0x254/0x2e4)
    [   41.826028] [<c035a3d8>] (mmc_rescan) from [<c003a0e0>] (process_one_work+0x180/0x3f4)
    [   41.833920] [<c003a0e0>] (process_one_work) from [<c003a3bc>] (worker_thread+0x34/0x4b0)
    [   41.841991] [<c003a3bc>] (worker_thread) from [<c003fed8>] (kthread+0xe4/0x104)
    [   41.849285] [<c003fed8>] (kthread) from [<c000f268>] (ret_from_fork+0x14/0x2c)
    [   42.038276] mmc0: new high speed SDHC card at address 1234
    
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Fixes: 94144a465dd0 ("mmc: sdhci: add get_cd() implementation")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5381655aa506b9298a49c424ee9cb14c44560dfb
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Jan 2 15:05:25 2015 -0500

    LOCKD: Fix a race when initialising nlmsvc_timeout
    
    commit 06bed7d18c2c07b3e3eeadf4bd357f6e806618cc upstream.
    
    This commit fixes a race whereby nlmclnt_init() first starts the lockd
    daemon, and then calls nlm_bind_host() with the expectation that
    nlmsvc_timeout has already been initialised. Unfortunately, there is no
    no synchronisation between lockd() and lockd_up() to guarantee that this
    is the case.
    
    Fix is to move the initialisation of nlmsvc_timeout into lockd_create_svc
    
    Fixes: 9a1b6bf818e74 ("LOCKD: Don't call utsname()->nodename...")
    Cc: Bruce Fields <bfields@fieldses.org>
    Cc: stable@vger.kernel.org # 3.10.x
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 449309c84747918aa9e84282a918d11ee79c9b4a
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Sat Jan 3 13:11:10 2015 +0100

    x86, um: actually mark system call tables readonly
    
    commit b485342bd79af363c77ef1a421c4a0aef2de9812 upstream.
    
    Commit a074335a370e ("x86, um: Mark system call tables readonly") was
    supposed to mark the sys_call_table in UML as RO by adding the const,
    but it doesn't have the desired effect as it's nevertheless being placed
    into the data section since __cacheline_aligned enforces sys_call_table
    being placed into .data..cacheline_aligned instead. We need to use
    the ____cacheline_aligned version instead to fix this issue.
    
    Before:
    
    $ nm -v arch/x86/um/sys_call_table_64.o | grep -1 "sys_call_table"
                     U sys_writev
    0000000000000000 D sys_call_table
    0000000000000000 D syscall_table_size
    
    After:
    
    $ nm -v arch/x86/um/sys_call_table_64.o | grep -1 "sys_call_table"
                     U sys_writev
    0000000000000000 R sys_call_table
    0000000000000000 D syscall_table_size
    
    Fixes: a074335a370e ("x86, um: Mark system call tables readonly")
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 914f02cd94750cfdf70004d9e086ee51abd84c7b
Author: Richard Weinberger <richard@nod.at>
Date:   Wed Dec 10 13:53:51 2014 +0100

    um: Skip futex_atomic_cmpxchg_inatomic() test
    
    commit f911d731054ab3d82ee72a16b889e17ca3a2332a upstream.
    
    futex_atomic_cmpxchg_inatomic() does not work on UML because
    it triggers a copy_from_user() in kernel context.
    On UML copy_from_user() can only be used if the kernel was called
    by a real user space process such that UML can use ptrace()
    to fetch the value.
    
    Reported-by: Miklos Szeredi <miklos@szeredi.hu>
    Suggested-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Tested-by: Daniel Walter <d.walter@0x90.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42ddd03e8044fdf101ded7a56b73dd5b4b3436a6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 12 16:58:05 2014 -0800

    decompress_bunzip2: off by one in get_next_block()
    
    commit b5c8afe5be51078a979d86ae5ae78c4ac948063d upstream.
    
    "origPtr" is used as an offset into the bd->dbuf[] array.  That array is
    allocated in start_bunzip() and has "bd->dbufSize" number of elements so
    the test here should be >= instead of >.
    
    Later we check "origPtr" again before using it as an offset so I don't
    know if this bug can be triggered in real life.
    
    Fixes: bc22c17e12c1 ('bzip2/lzma: library support for gzip, bzip2 and lzma decompression')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Alain Knaff <alain@knaff.lu>
    Cc: Yinghai Lu <yinghai@kernel.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77287a2cabfcd06af888ae22623b5c92ffcafdfb
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Jan 6 14:39:10 2015 +0100

    ARM: shmobile: sh73a0 legacy: Set .control_parent for all irqpin instances
    
    commit b0ddb319db3d7a1943445f0de0a45c07a7f3457a upstream.
    
    The sh73a0 INTC can't mask interrupts properly most likely due to a
    hardware bug. Set the .control_parent flag to delegate masking to the
    parent interrupt controller, like was already done for irqpin1.
    
    Without this, accessing the three-axis digital accelerometer ADXL345
    on kzm9g through /dev/input/event1 causes an interrupt storm, which
    requires a power-cycle to recover from.
    
    This was inspired by a patch for arch/arm/boot/dts/sh73a0.dtsi from
    Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Fixes: 341eb5465f67437a ("ARM: shmobile: INTC External IRQ pin driver on sh73a0")
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 974b23880256ddd7a0baa03ffd7f7729535589c0
Author: Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
Date:   Mon Jan 5 15:45:45 2015 -0800

    ARM: omap5/dra7xx: Fix frequency typos
    
    commit 572b24e6d85d98cdc552f07e9fb9870d9460d81b upstream.
    
    The switch statement of the possible list of SYSCLK1 frequencies is
    missing a 0 in 4 out of the 7 frequencies.
    
    Fixes: fa6d79d27614 ("ARM: OMAP: Add initialisation for the real-time counter")
    Signed-off-by: Len Sorensen <lsorense@csclub.uwaterloo.ca>
    Reviewed-by: Lokesh Vutla <lokeshvutla@ti.com>
    Acked-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5d7c94c7cd9c6e4624dd4d2394ac5b407134dab
Author: Gary Bisson <bisson.gary@gmail.com>
Date:   Wed Dec 3 15:03:51 2014 -0800

    ARM: clk-imx6q: fix video divider for rev T0 1.0
    
    commit 81ef447950bf0955aca46f4a7617d8ce435cf0ce upstream.
    
    The post dividers do not work on i.MX6Q rev T0 1.0 so they must be fixed
    to 1. As the table index was wrong, a divider a of 4 could still be
    requested which implied the clock not to be set properly. This is the
    root cause of the HDMI not working at high resolution on rev T0 1.0 of
    the SoC.
    
    Signed-off-by: Gary Bisson <bisson.gary@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f172a02eeb0725091dba5931889f6d151ee7006
Author: Dmitry Voytik <voytikd@gmail.com>
Date:   Thu Nov 6 22:46:20 2014 +0400

    ARM: imx6q: drop unnecessary semicolon
    
    commit d2a10a1727b3948019128e83162f22c65859f1fd upstream.
    
    Drop unnecessary semicolon after closing curly bracket.
    
    Signed-off-by: Dmitry Voytik <voytikd@gmail.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4be4bc6275912bdb562f3196cb2858f747f1ab1
Author: Fabio Estevam <fabio.estevam@freescale.com>
Date:   Fri Dec 5 16:16:07 2014 -0200

    ARM: dts: imx25: Fix the SPI1 clocks
    
    commit 7a87e9cbc3a2f0ff0955815335e08c9862359130 upstream.
    
    From Documentation/devicetree/bindings/clock/imx25-clock.txt:
    
            cspi1_ipg               78
            cspi2_ipg               79
            cspi3_ipg               80
    
    , so fix the SPI1 clocks accordingly to avoid a kernel hang when trying to
    access SPI1.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beca3ef9283f3dd2e00f34f42e068fbdb96619df
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Thu Jan 8 14:53:23 2015 -0800

    Input: I8042 - add Acer Aspire 7738 to the nomux list
    
    commit 9333caeaeae4f831054e0e127a6ed3948b604d3e upstream.
    
    When KBC is in active multiplexing mode the touchpad on this laptop does
    not work.
    
    Reported-by: Bilal Koc <koc.bilo@googlemail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdf5d03391206438cb73d7622d5bf42014241487
Author: Srihari Vijayaraghavan <linux.bug.reporting@gmail.com>
Date:   Wed Jan 7 16:25:53 2015 -0800

    Input: i8042 - reset keyboard to fix Elantech touchpad detection
    
    commit 148e9a711e034e06310a8c36b64957934ebe30f2 upstream.
    
    On some laptops, keyboard needs to be reset in order to successfully detect
    touchpad (e.g., some Gigabyte laptop models with Elantech touchpads).
    Without resettin keyboard touchpad pretends to be completely dead.
    
    Based on the original patch by Mateusz Jończyk this version has been
    expanded to include DMI based detection & application of the fix
    automatically on the affected models of laptops. This has been confirmed to
    fix problem by three users already on three different models of laptops.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=81331
    Signed-off-by: Srihari Vijayaraghavan <linux.bug.reporting@gmail.com>
    Acked-by: Mateusz Jończyk <mat.jonczyk@o2.pl>
    Tested-by: Srihari Vijayaraghavan <linux.bug.reporting@gmail.com>
    Tested by: Zakariya Dehlawi <zdehlawi@gmail.com>
    Tested-by: Guillaum Bouchard <guillaum.bouchard@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74f52d3e778e424329276414dfa3ff18940ad3bc
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 5 12:57:13 2015 -0500

    can: kvaser_usb: Don't send a RESET_CHIP for non-existing channels
    
    commit 5e7e6e0c9b47a45576c38b4a72d67927a5e049f7 upstream.
    
    Recent Leaf firmware versions (>= 3.1.557) do not allow to send
    commands for non-existing channels.  If a command is sent for a
    non-existing channel, the firmware crashes.
    
    Reported-by: Christopher Storah <Christopher.Storah@invetech.com.au>
    Signed-off-by: Olivier Sobrie <olivier@sobrie.be>
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a642edcae9ed114ea0d1dd33046d17422728b131
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 5 12:52:06 2015 -0500

    can: kvaser_usb: Reset all URB tx contexts upon channel close
    
    commit 889b77f7fd2bcc922493d73a4c51d8a851505815 upstream.
    
    Flooding the Kvaser CAN to USB dongle with multiple reads and
    writes in very high frequency (*), closing the CAN channel while
    all the transmissions are on (#), opening the device again (@),
    then sending a small number of packets would make the driver
    enter an almost infinite loop of:
    
    [....]
    [15959.853988] kvaser_usb 4-3:1.0 can0: cannot find free context
    [15959.853990] kvaser_usb 4-3:1.0 can0: cannot find free context
    [15959.853991] kvaser_usb 4-3:1.0 can0: cannot find free context
    [15959.853993] kvaser_usb 4-3:1.0 can0: cannot find free context
    [15959.853994] kvaser_usb 4-3:1.0 can0: cannot find free context
    [15959.853995] kvaser_usb 4-3:1.0 can0: cannot find free context
    [....]
    
    _dragging the whole system down_ in the process due to the
    excessive logging output.
    
    Initially, this has caused random panics in the kernel due to a
    buggy error recovery path.  That got fixed in an earlier commit.(%)
    This patch aims at solving the root cause. -->
    
    16 tx URBs and contexts are allocated per CAN channel per USB
    device. Such URBs are protected by:
    
    a) A simple atomic counter, up to a value of MAX_TX_URBS (16)
    b) A flag in each URB context, stating if it's free
    c) The fact that ndo_start_xmit calls are themselves protected
       by the networking layers higher above
    
    After grabbing one of the tx URBs, if the driver noticed that all
    of them are now taken, it stops the netif transmission queue.
    Such queue is worken up again only if an acknowedgment was received
    from the firmware on one of our earlier-sent frames.
    
    Meanwhile, upon channel close (#), the driver sends a CMD_STOP_CHIP
    to the firmware, effectively closing all further communication.  In
    the high traffic case, the atomic counter remains at MAX_TX_URBS,
    and all the URB contexts remain marked as active.  While opening
    the channel again (@), it cannot send any further frames since no
    more free tx URB contexts are available.
    
    Reset all tx URB contexts upon CAN channel close.
    
    (*) 50 parallel instances of `cangen0 -g 0 -ix`
    (#) `ifconfig can0 down`
    (@) `ifconfig can0 up`
    (%) "can: kvaser_usb: Don't free packets when tight on URBs"
    
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 853a4bc8853520f75d0b35fc0b0951eb6999b58a
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 5 12:49:10 2015 -0500

    can: kvaser_usb: Don't free packets when tight on URBs
    
    commit b442723fcec445fb0ae1104888dd22cd285e0a91 upstream.
    
    Flooding the Kvaser CAN to USB dongle with multiple reads and
    writes in high frequency caused seemingly-random panics in the
    kernel.
    
    On further inspection, it seems the driver erroneously freed the
    to-be-transmitted packet upon getting tight on URBs and returning
    NETDEV_TX_BUSY, leading to invalid memory writes and double frees
    at a later point in time.
    
    Note:
    
    Finding no more URBs/transmit-contexts and returning NETDEV_TX_BUSY
    is a driver bug in and out of itself: it means that our start/stop
    queue flow control is broken.
    
    This patch only fixes the (buggy) error handling code; the root
    cause shall be fixed in a later commit.
    
    Acked-by: Olivier Sobrie <olivier@sobrie.be>
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9e33b264083ffd7d9d2ad301c3c336e7519a99f
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Dec 22 18:39:39 2014 +0100

    USB: keyspan: fix null-deref at probe
    
    commit b5122236bba8d7ef62153da5b55cc65d0944c61e upstream.
    
    Fix null-pointer dereference during probe if the interface-status
    completion handler is called before the individual ports have been set
    up.
    
    Fixes: f79b2d0fe81e ("USB: keyspan: fix NULL-pointer dereferences and
    memory leaks")
    Reported-by: Richard <richjunk@pacbell.net>
    Tested-by: Richard <richjunk@pacbell.net>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11959cfbb097164fc01fdcb0d9a4fa47628a91fd
Author: David Peterson <david.peterson@cel.com>
Date:   Tue Jan 6 15:00:52 2015 +0000

    USB: cp210x: add IDs for CEL USB sticks and MeshWorks devices
    
    commit 1ae78a4870989a354028cb17dabf819b595e70e3 upstream.
    
    Added virtual com port VID/PID entries for CEL USB sticks and MeshWorks
    devices.
    
    Signed-off-by: David Peterson <david.peterson@cel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 131acd8e2f4124dd9069ec4b4f964d0de92119f6
Author: Preston Fick <pffick@gmail.com>
Date:   Sat Dec 27 01:32:41 2014 -0600

    USB: cp210x: fix ID for production CEL MeshConnect USB Stick
    
    commit 90441b4dbe90ba0c38111ea89fa093a8c9627801 upstream.
    
    Fixing typo for MeshConnect IDs. The original PID (0x8875) is not in
    production and is not needed. Instead it has been changed to the
    official production PID (0x8857).
    
    Signed-off-by: Preston Fick <pffick@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3664806789653adc4d484eb198d927c7eca2283
Author: Amit Virdi <amit.virdi@st.com>
Date:   Tue Jan 13 14:27:21 2015 +0530

    usb: dwc3: gadget: Stop TRB preparation after limit is reached
    
    commit 39e60635a01520e8c8ed3946a28c2b98e6a46f79 upstream.
    
    DWC3 gadget sets up a pool of 32 TRBs for each EP during initialization. This
    means, the max TRBs that can be submitted for an EP is fixed to 32. Since the
    request queue for an EP is a linked list, any number of requests can be queued
    to it by the gadget layer.  However, the dwc3 driver must not submit TRBs more
    than the pool it has created for. This limit wasn't respected when SG was used
    resulting in submitting more than the max TRBs, eventually leading to
    non-transfer of the TRBs submitted over the max limit.
    
    Root cause:
    When SG is used, there are two loops iterating to prepare TRBs:
     - Outer loop over the request_list
     - Inner loop over the SG list
    The code was missing break to get out of the outer loop.
    
    Fixes: eeb720fb21d6 (usb: dwc3: gadget: add support for SG lists)
    Signed-off-by: Amit Virdi <amit.virdi@st.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94b762f0128bb14c2bb284e9ce1f5400a458a0c1
Author: Amit Virdi <amit.virdi@st.com>
Date:   Tue Jan 13 14:27:20 2015 +0530

    usb: dwc3: gadget: Fix TRB preparation during SG
    
    commit ec512fb8e5611fed1df2895f90317ce6797d6b32 upstream.
    
    When scatter gather (SG) is used, multiple TRBs are prepared from one DWC3
    request (dwc3_request). So while preparing TRBs, the 'last' flag should be set
    only when it is the last TRB being prepared from the last dwc3_request entry.
    
    The current implementation uses list_is_last to check if the dwc3_request is the
    last entry from the request_list. However, list_is_last returns false for the
    last entry too. This is because, while preparing the first TRB from a request,
    the function dwc3_prepare_one_trb modifies the request's next and prev pointers
    while moving the URB to req_queued. Hence, list_is_last always returns false no
    matter what.
    
    The correct way is not to access the modified pointers of dwc3_request but to
    use list_empty macro instead.
    
    Fixes: e5ba5ec833aa (usb: dwc3: gadget: fix scatter gather implementation)
    Signed-off-by: Amit Virdi <amit.virdi@st.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 911d93746fec9885987065e0c72ad30cf7a20922
Author: Arseny Solokha <asolokha@kb.kras.ru>
Date:   Sat Dec 6 09:54:06 2014 +0700

    OHCI: add a quirk for ULi M5237 blocking on reset
    
    commit 56abcab833fafcfaeb2f5b25e0364c1dec45f53e upstream.
    
    Commit 8dccddbc2368 ("OHCI: final fix for NVIDIA problems (I hope)")
    introduced into 3.1.9 broke boot on e.g. Freescale P2020DS development
    board. The code path that was previously specific to NVIDIA controllers
    had then become taken for all chips.
    
    However, the M5237 installed on the board wedges solid when accessing
    its base+OHCI_FMINTERVAL register, making it impossible to boot any
    kernel newer than 3.1.8 on this particular and apparently other similar
    machines.
    
    Don't readl() and writel() base+OHCI_FMINTERVAL on PCI ID 10b9:5237.
    
    The patch is suitable for the -next tree as well as all maintained
    kernels up to 3.2 inclusive.
    
    Signed-off-by: Arseny Solokha <asolokha@kb.kras.ru>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1c3449160df60fac4abb56f0ba0a3784305e43e
Author: Hans Holmberg <hans.holmberg@intel.com>
Date:   Fri Jan 9 09:40:43 2015 +0100

    gpiolib: of: Correct error handling in of_get_named_gpiod_flags
    
    commit 7b8792bbdffdff3abda704f89c6a45ea97afdc62 upstream.
    
    of_get_named_gpiod_flags fails with -EPROBE_DEFER in cases
    where the gpio chip is available and the GPIO translation fails.
    
    This causes drivers to be re-probed erroneusly, and hides the
    real problem(i.e. the GPIO number being out of range).
    
    Signed-off-by: Hans Holmberg <hans.holmberg@intel.com>
    Reviewed-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8c44ea097e3a4eb9ca26f2f592a2873bb4144ff
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Jan 2 16:25:08 2015 -0500

    NFSv4.1: Fix client id trunking on Linux
    
    commit 1fc0703af3143914a389bfa081c7acb09502ed5d upstream.
    
    Currently, our trunking code will check for session trunking, but will
    fail to detect client id trunking. This is a problem, because it means
    that the client will fail to recognise that the two connections represent
    shared state, even if they do not permit a shared session.
    By removing the check for the server minor id, and only checking the
    major id, we will end up doing the right thing in both cases: we close
    down the new nfs_client and fall back to using the existing one.
    
    Fixes: 05f4c350ee02e ("NFS: Discover NFSv4 server trunking when mounting")
    Cc: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bd60326bf850ad56f000c0a66e00c2d3f692ad8
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Mon Jan 12 12:12:03 2015 -0500

    ftrace/jprobes/x86: Fix conflict between jprobes and function graph tracing
    
    commit 237d28db036e411f22c03cfd5b0f6dc2aa9bf3bc upstream.
    
    If the function graph tracer traces a jprobe callback, the system will
    crash. This can easily be demonstrated by compiling the jprobe
    sample module that is in the kernel tree, loading it and running the
    function graph tracer.
    
     # modprobe jprobe_example.ko
     # echo function_graph > /sys/kernel/debug/tracing/current_tracer
     # ls
    
    The first two commands end up in a nice crash after the first fork.
    (do_fork has a jprobe attached to it, so "ls" just triggers that fork)
    
    The problem is caused by the jprobe_return() that all jprobe callbacks
    must end with. The way jprobes works is that the function a jprobe
    is attached to has a breakpoint placed at the start of it (or it uses
    ftrace if fentry is supported). The breakpoint handler (or ftrace callback)
    will copy the stack frame and change the ip address to return to the
    jprobe handler instead of the function. The jprobe handler must end
    with jprobe_return() which swaps the stack and does an int3 (breakpoint).
    This breakpoint handler will then put back the saved stack frame,
    simulate the instruction at the beginning of the function it added
    a breakpoint to, and then continue on.
    
    For function tracing to work, it hijakes the return address from the
    stack frame, and replaces it with a hook function that will trace
    the end of the call. This hook function will restore the return
    address of the function call.
    
    If the function tracer traces the jprobe handler, the hook function
    for that handler will not be called, and its saved return address
    will be used for the next function. This will result in a kernel crash.
    
    To solve this, pause function tracing before the jprobe handler is called
    and unpause it before it returns back to the function it probed.
    
    Some other updates:
    
    Used a variable "saved_sp" to hold kcb->jprobe_saved_sp. This makes the
    code look a bit cleaner and easier to understand (various tries to fix
    this bug required this change).
    
    Note, if fentry is being used, jprobes will change the ip address before
    the function graph tracer runs and it will not be able to trace the
    function that the jprobe is probing.
    
    Link: http://lkml.kernel.org/r/20150114154329.552437962@goodmis.org
    
    Acked-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 381a4fec046bebb460cb8d1ec8c4e01a7de9dce3
Author: Wei Yang <weiyang@linux.vnet.ibm.com>
Date:   Wed Jan 7 10:29:11 2015 -0700

    vfio-pci: Fix the check on pci device type in vfio_pci_probe()
    
    commit 7c2e211f3c95b91912a92a8c6736343690042e2e upstream.
    
    Current vfio-pci just supports normal pci device, so vfio_pci_probe() will
    return if the pci device is not a normal device. While current code makes a
    mistake. PCI_HEADER_TYPE is the offset in configuration space of the device
    type, but we use this value to mask the type value.
    
    This patch fixs this by do the check directly on the pci_dev->hdr_type.
    
    Signed-off-by: Wei Yang <weiyang@linux.vnet.ibm.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 555d980eb3e6b0b49e11d475be4d356346eda099
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Oct 24 05:10:20 2014 -0300

    uvcvideo: Fix destruction order in uvc_delete()
    
    commit 2228d80dd05a4fc5a410fde847677b8fb3eb23d7 upstream.
    
    We've got a bug report at disconnecting a Webcam, where the kernel
    spews warnings like below:
      WARNING: CPU: 0 PID: 8385 at ../fs/sysfs/group.c:219 sysfs_remove_group+0x87/0x90()
      sysfs group c0b2350c not found for kobject 'event3'
      CPU: 0 PID: 8385 Comm: queue2:src Not tainted 3.16.2-1.gdcee397-default #1
      Hardware name: ASUSTeK Computer INC. A7N8X-E/A7N8X-E, BIOS ASUS A7N8X-E Deluxe ACPI BIOS Rev 1013  11/12/2004
        c08d0705 ddc75cbc c0718c5b ddc75ccc c024b654 c08c6d44 ddc75ce8 000020c1
        c08d0705 000000db c03d1ec7 c03d1ec7 00000009 00000000 c0b2350c d62c9064
        ddc75cd4 c024b6a3 00000009 ddc75ccc c08c6d44 ddc75ce8 ddc75cfc c03d1ec7
      Call Trace:
        [<c0205ba6>] try_stack_unwind+0x156/0x170
        [<c02046f3>] dump_trace+0x53/0x180
        [<c0205c06>] show_trace_log_lvl+0x46/0x50
        [<c0204871>] show_stack_log_lvl+0x51/0xe0
        [<c0205c67>] show_stack+0x27/0x50
        [<c0718c5b>] dump_stack+0x3e/0x4e
        [<c024b654>] warn_slowpath_common+0x84/0xa0
        [<c024b6a3>] warn_slowpath_fmt+0x33/0x40
        [<c03d1ec7>] sysfs_remove_group+0x87/0x90
        [<c05a2c54>] device_del+0x34/0x180
        [<c05e3989>] evdev_disconnect+0x19/0x50
        [<c05e06fa>] __input_unregister_device+0x9a/0x140
        [<c05e0845>] input_unregister_device+0x45/0x80
        [<f854b1d6>] uvc_delete+0x26/0x110 [uvcvideo]
        [<f84d66f8>] v4l2_device_release+0x98/0xc0 [videodev]
        [<c05a25bb>] device_release+0x2b/0x90
        [<c04ad8bf>] kobject_cleanup+0x6f/0x1a0
        [<f84d5453>] v4l2_release+0x43/0x70 [videodev]
        [<c0372f31>] __fput+0xb1/0x1b0
        [<c02650c1>] task_work_run+0x91/0xb0
        [<c024d845>] do_exit+0x265/0x910
        [<c024df64>] do_group_exit+0x34/0xa0
        [<c025a76f>] get_signal_to_deliver+0x17f/0x590
        [<c0201b6a>] do_signal+0x3a/0x960
        [<c02024f7>] do_notify_resume+0x67/0x90
        [<c071ebb5>] work_notifysig+0x30/0x3b
        [<b7739e60>] 0xb7739e5f
       ---[ end trace b1e56095a485b631 ]---
    
    The cause is that uvc_status_cleanup() is called after usb_put_*() in
    uvc_delete().  usb_put_*() removes the sysfs parent and eventually
    removes the children recursively, so the later device_del() can't find
    its sysfs.  The fix is simply rearrange the call orders in
    uvc_delete() so that the child is removed before the parent.
    
    Bugzilla: https://bugzilla.suse.com/show_bug.cgi?id=897736
    Reported-and-tested-by: Martin Pluskal <mpluskal@suse.com>
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 237a64401932d2790eb2d688322de04b1587e95e
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Tue Sep 16 15:57:07 2014 -0300

    smiapp: Take mutex during PLL update in sensor initialisation
    
    commit f85698cd296f08218a7750f321e94607da128600 upstream.
    
    The mutex does not serialise anything in this case but avoids a lockdep
    warning from the control framework.
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76a30550a36d565c6548a352a5a2e6501f4534f4
Author: Frank Schaefer <fschaefer.oss@googlemail.com>
Date:   Mon Sep 29 15:17:35 2014 -0300

    af9005: fix kernel panic on init if compiled without IR
    
    commit 2279948735609d0d17d7384e776b674619f792ef upstream.
    
    This patches fixes an ancient bug in the dvb_usb_af9005 driver, which
    has been reported at least in the following threads:
    https://lkml.org/lkml/2009/2/4/350
    https://lkml.org/lkml/2014/9/18/558
    
    If the driver is compiled in without any IR support (neither
    DVB_USB_AF9005_REMOTE nor custom symbols), the symbol_request calls in
    af9005_usb_module_init() return pointers != NULL although the IR
    symbols are not available.
    
    This leads to the following oops:
    ...
    [    8.529751] usbcore: registered new interface driver dvb_usb_af9005
    [    8.531584] BUG: unable to handle kernel paging request at 02e00000
    [    8.533385] IP: [<7d9d67c6>] af9005_usb_module_init+0x6b/0x9d
    [    8.535613] *pde = 00000000
    [    8.536416] Oops: 0000 [#1] PREEMPT PREEMPT DEBUG_PAGEALLOCDEBUG_PAGEALLOC
    [    8.537863] CPU: 0 PID: 1 Comm: swapper Not tainted 3.15.0-rc6-00151-ga5c075c #1
    [    8.539827] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140531_083030-gandalf 04/01/2014
    [    8.541519] task: 89c9a670 ti: 89c9c000 task.ti: 89c9c000
    [    8.541519] EIP: 0060:[<7d9d67c6>] EFLAGS: 00010206 CPU: 0
    [    8.541519] EIP is at af9005_usb_module_init+0x6b/0x9d
    [    8.541519] EAX: 02e00000 EBX: 00000000 ECX: 00000006 EDX: 00000000
    [    8.541519] ESI: 00000000 EDI: 7da33ec8 EBP: 89c9df30 ESP: 89c9df2c
    [    8.541519]  DS: 007b ES: 007b FS: 0000 GS: 00e0 SS: 0068
    [    8.541519] CR0: 8005003b CR2: 02e00000 CR3: 05a54000 CR4: 00000690
    [    8.541519] Stack:
    [    8.541519]  7d9d675b 89c9df90 7d992a49 7d7d5914 89c9df4c 7be3a800 7d08c58c 8a4c3968
    [    8.541519]  89c9df80 7be3a966 00000192 00000006 00000006 7d7d3ff4 8a4c397a 00000200
    [    8.541519]  7d6b1280 8a4c3979 00000006 000009a6 7da32db8 b13eec81 00000006 000009a6
    [    8.541519] Call Trace:
    [    8.541519]  [<7d9d675b>] ? ttusb2_driver_init+0x16/0x16
    [    8.541519]  [<7d992a49>] do_one_initcall+0x77/0x106
    [    8.541519]  [<7be3a800>] ? parameqn+0x2/0x35
    [    8.541519]  [<7be3a966>] ? parse_args+0x113/0x25c
    [    8.541519]  [<7d992bc2>] kernel_init_freeable+0xea/0x167
    [    8.541519]  [<7cf01070>] kernel_init+0x8/0xb8
    [    8.541519]  [<7cf27ec0>] ret_from_kernel_thread+0x20/0x30
    [    8.541519]  [<7cf01068>] ? rest_init+0x10c/0x10c
    [    8.541519] Code: 08 c2 c7 05 44 ed f9 7d 00 00 e0 02 c7 05 40 ed f9 7d 00 00 e0 02 c7 05 3c ed f9 7d 00 00 e0 02 75 1f b8 00 00 e0 02 85 c0 74 16 <a1> 00 00 e0 02 c7 05 54 84 8e 7d 00 00 e0 02 a3 58 84 8e 7d eb
    [    8.541519] EIP: [<7d9d67c6>] af9005_usb_module_init+0x6b/0x9d SS:ESP 0068:89c9df2c
    [    8.541519] CR2: 0000000002e00000
    [    8.541519] ---[ end trace 768b6faf51370fc7 ]---
    
    The prefered fix would be to convert the whole IR code to use the kernel IR
    infrastructure (which wasn't available at the time this driver had been created).
    
    Until anyone who still has this old hardware steps up an does the conversion,
    fix it by not calling the symbol_request calls if the driver is compiled in
    without the default IR symbols (CONFIG_DVB_USB_AF9005_REMOTE).
    Due to the IR related pointers beeing NULL by default, IR support will then be disabled.
    
    The downside of this solution is, that it will no longer be possible to
    compile custom IR symbols (not using CONFIG_DVB_USB_AF9005_REMOTE) in.
    
    Please note that this patch has NOT been tested with all possible cases.
    I don't have the hardware and could only verify that it fixes the reported
    bug.
    
    Reported-by: Fengguag Wu <fengguang.wu@intel.com>
    Signed-off-by: Frank Schäfer <fschaefer.oss@googlemail.com>
    Acked-by: Luca Olivetti <luca@ventoso.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26bcb21423d9a6ba2548306db4eaa9fd1093bb66
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Tue Apr 1 10:22:46 2014 -0300

    smiapp-pll: Correct clock debug prints
    
    commit bc47150ab93988714d1fab7bc82fe5f505a107ad upstream.
    
    The PLL flags were not used correctly.
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 229d5b12c96abaa2832c1ae425f09b54bc2019e4
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Dec 18 13:40:06 2014 +0200

    video/logo: prevent use of logos after they have been freed
    
    commit 92b004d1aa9f367c372511ca0330f58216b25703 upstream.
    
    If the probe of an fb driver has been deferred due to missing
    dependencies, and the probe is later ran when a module is loaded, the
    fbdev framework will try to find a logo to use.
    
    However, the logos are __initdata, and have already been freed. This
    causes sometimes page faults, if the logo memory is not mapped,
    sometimes other random crashes as the logo data is invalid, and
    sometimes nothing, if the fbdev decides to reject the logo (e.g. the
    random value depicting the logo's height is too big).
    
    This patch adds a late_initcall function to mark the logos as freed. In
    reality the logos are freed later, and fbdev probe may be ran between
    this late_initcall and the freeing of the logos. In that case we will
    miss drawing the logo, even if it would be possible.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14059bc87020561b0e10d5472666f84712474eb3
Author: Long Li <longli@microsoft.com>
Date:   Fri Dec 5 19:38:18 2014 -0800

    storvsc: ring buffer failures may result in I/O freeze
    
    commit e86fb5e8ab95f10ec5f2e9430119d5d35020c951 upstream.
    
    When ring buffer returns an error indicating retry, storvsc may not
    return a proper error code to SCSI when bounce buffer is not used.
    This has introduced I/O freeze on RAID running atop storvsc devices.
    This patch fixes it by always returning a proper error code.
    
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d59bebb4910c665db8483a67a51e18cb5ebbed26
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Thu Nov 20 20:50:07 2014 -0800

    iscsi-target: Fail connection on short sendmsg writes
    
    commit 6bf6ca7515c1df06f5c03737537f5e0eb191e29e upstream.
    
    This patch changes iscsit_do_tx_data() to fail on short writes
    when kernel_sendmsg() returns a value different than requested
    transfer length, returning -EPIPE and thus causing a connection
    reset to occur.
    
    This avoids a potential bug in the original code where a short
    write would result in kernel_sendmsg() being called again with
    the original iovec base + length.
    
    In practice this has not been an issue because iscsit_do_tx_data()
    is only used for transferring 48 byte headers + 4 byte digests,
    along with seldom used control payloads from NOPIN + TEXT_RSP +
    REJECT with less than 32k of data.
    
    So following Al's audit of iovec consumers, go ahead and fail
    the connection on short writes for now, and remove the bogus
    logic ahead of his proper upstream fix.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 322236a4f2da2da95a0f1ab75b006d540cfe3f9c
Author: Dominique Leuenberger <dimstar@opensuse.org>
Date:   Thu Nov 13 20:57:37 2014 +0100

    hp_accel: Add support for HP ZBook 15
    
    commit 6583659e0f92e38079a8dd081e0a1181a0f37747 upstream.
    
    HP ZBook 15 laptop needs a non-standard mapping (x_inverted).
    
    BugLink: http://bugzilla.opensuse.org/show_bug.cgi?id=905329
    Signed-off-by: Dominique Leuenberger <dimstar@opensuse.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1039f726b3e71de4765a93ac322f01762a24e92
Author: Jouni Malinen <jouni@qca.qualcomm.com>
Date:   Thu Dec 11 23:48:55 2014 +0200

    cfg80211: Fix 160 MHz channels with 80+80 and 160 MHz drivers
    
    commit 08f6f147773b23b765b94633a8eaa82e7defcf4c upstream.
    
    The VHT supported channel width field is a two bit integer, not a
    bitfield. cfg80211_chandef_usable() was interpreting it incorrectly and
    ended up rejecting 160 MHz channel width if the driver indicated support
    for both 160 and 80+80 MHz channels.
    
    Fixes: 3d9d1d6656a73 ("nl80211/cfg80211: support VHT channel configuration")
           (however, no real drivers had 160 MHz support it until 3.16)
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecdf1f4e8a19fbb398eeac8705e9209d93cd89ac
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Wed Oct 1 14:28:36 2014 +0530

    ARC: [nsimosci] move peripherals to match model to FPGA
    
    commit e8ef060b37c2d3cc5fd0c0edbe4e42ec1cb9768b upstream.
    
    This allows the sdplite/Zebu images to run on OSCI simulation platform
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b161ad9518757ee5e968582c93724359ea9c6894
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Dec 16 08:44:32 2014 +0000

    drm/i915: Force the CS stall for invalidate flushes
    
    commit add284a3a2481e759d6bec35f6444c32c8ddc383 upstream.
    
    In order to act as a full command barrier by itself, we need to tell the
    pipecontrol to actually stall the command streamer while the flush runs.
    We require the full command barrier before operations like
    MI_SET_CONTEXT, which currently rely on a prior invalidate flush.
    
    References: https://bugs.freedesktop.org/show_bug.cgi?id=83677
    Cc: Simon Farnsworth <simon@farnz.org.uk>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74a9c854c630bd81df3414c1c3f46b90bd51cadc
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Tue Dec 16 08:44:31 2014 +0000

    drm/i915: Invalidate media caches on gen7
    
    commit 148b83d0815a3778c8949e6a97cb798cbaa0efb3 upstream.
    
    In the gen7 pipe control there is an extra bit to flush the media
    caches, so let's set it during cache invalidation flushes.
    
    v2: Rename to MEDIA_STATE_CLEAR to be more inline with spec.
    
    Cc: Simon Farnsworth <simon@farnz.org.uk>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d7af8bb7c6530349581c5fb0884ea6145de43fe
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Dec 10 09:42:10 2014 -0500

    drm/radeon: properly filter DP1.2 4k modes on non-DP1.2 hw
    
    commit 410cce2a6b82299b46ff316c6384e789ce275ecb upstream.
    
    The check was already in place in the dp mode_valid check, but
    radeon_dp_get_dp_link_clock() never returned the high clock
    mode_valid was checking for because that function clipped the
    clock based on the hw capabilities.  Add an explicit check
    in the mode_valid function.
    
    bug:
    https://bugs.freedesktop.org/show_bug.cgi?id=87172
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13742208aade52e160dae03c51008cfb3432c45c
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Dec 3 00:03:49 2014 -0500

    drm/radeon: check the right ring in radeon_evict_flags()
    
    commit 5e5c21cac1001089007260c48b0c89ebaace0e71 upstream.
    
    Check the that ring we are using for copies is functional
    rather than the GFX ring.  On newer asics we use the DMA
    ring for bo moves.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07e25671d74543ec944aa84274457d8a59e0e605
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Tue Dec 2 03:36:57 2014 -0800

    drm/vmwgfx: Fix fence event code
    
    commit 89669e7a7f96be3ee8d9a22a071d7c0d3b4428fc upstream.
    
    The commit "vmwgfx: Rework fence event action" introduced a number of bugs
    that are fixed with this commit:
    
    a) A forgotten return stateemnt.
    b) An if statement with identical branches.
    
    Reported-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Jakob Bornecrantz <jakob@vmware.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cbec5d61aaf9564fcfe0dedccebdbeb4d26696d
Author: Govindarajulu Varadarajan <_govind@gmx.com>
Date:   Thu Dec 18 15:58:42 2014 +0530

    enic: fix rx skb checksum
    
    [ Upstream commit 17e96834fd35997ca7cdfbf15413bcd5a36ad448 ]
    
    Hardware always provides compliment of IP pseudo checksum. Stack expects
    whole packet checksum without pseudo checksum if CHECKSUM_COMPLETE is set.
    
    This causes checksum error in nf & ovs.
    
    kernel: qg-19546f09-f2: hw csum failure
    kernel: CPU: 9 PID: 0 Comm: swapper/9 Tainted: GF          O--------------   3.10.0-123.8.1.el7.x86_64 #1
    kernel: Hardware name: Cisco Systems Inc UCSB-B200-M3/UCSB-B200-M3, BIOS B200M3.2.2.3.0.080820141339 08/08/2014
    kernel: ffff881218f40000 df68243feb35e3a8 ffff881237a43ab8 ffffffff815e237b
    kernel: ffff881237a43ad0 ffffffff814cd4ca ffff8829ec71eb00 ffff881237a43af0
    kernel: ffffffff814c6232 0000000000000286 ffff8829ec71eb00 ffff881237a43b00
    kernel: Call Trace:
    kernel: <IRQ>  [<ffffffff815e237b>] dump_stack+0x19/0x1b
    kernel: [<ffffffff814cd4ca>] netdev_rx_csum_fault+0x3a/0x40
    kernel: [<ffffffff814c6232>] __skb_checksum_complete_head+0x62/0x70
    kernel: [<ffffffff814c6251>] __skb_checksum_complete+0x11/0x20
    kernel: [<ffffffff8155a20c>] nf_ip_checksum+0xcc/0x100
    kernel: [<ffffffffa049edc7>] icmp_error+0x1f7/0x35c [nf_conntrack_ipv4]
    kernel: [<ffffffff814cf419>] ? netif_rx+0xb9/0x1d0
    kernel: [<ffffffffa040eb7b>] ? internal_dev_recv+0xdb/0x130 [openvswitch]
    kernel: [<ffffffffa04c8330>] nf_conntrack_in+0xf0/0xa80 [nf_conntrack]
    kernel: [<ffffffff81509380>] ? inet_del_offload+0x40/0x40
    kernel: [<ffffffffa049e302>] ipv4_conntrack_in+0x22/0x30 [nf_conntrack_ipv4]
    kernel: [<ffffffff815005ca>] nf_iterate+0xaa/0xc0
    kernel: [<ffffffff81509380>] ? inet_del_offload+0x40/0x40
    kernel: [<ffffffff81500664>] nf_hook_slow+0x84/0x140
    kernel: [<ffffffff81509380>] ? inet_del_offload+0x40/0x40
    kernel: [<ffffffff81509dd4>] ip_rcv+0x344/0x380
    
    Hardware verifies IP & tcp/udp header checksum but does not provide payload
    checksum, use CHECKSUM_UNNECESSARY. Set it only if its valid IP tcp/udp packet.
    
    Cc: Jiri Benc <jbenc@redhat.com>
    Cc: Stefan Assmann <sassmann@redhat.com>
    Reported-by: Sunil Choudhary <schoudha@redhat.com>
    Signed-off-by: Govindarajulu Varadarajan <_govind@gmx.com>
    Reviewed-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 416b16c110b37311c85129fb2cec8f5200aa0ea8
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Jan 11 10:32:18 2015 -0800

    alx: fix alx_poll()
    
    [ Upstream commit 7a05dc64e2e4c611d89007b125b20c0d2a4d31a5 ]
    
    Commit d75b1ade567f ("net: less interrupt masking in NAPI") uncovered
    wrong alx_poll() behavior.
    
    A NAPI poll() handler is supposed to return exactly the budget when/if
    napi_complete() has not been called.
    
    It is also supposed to return number of frames that were received, so
    that netdev_budget can have a meaning.
    
    Also, in case of TX pressure, we still have to dequeue received
    packets : alx_clean_rx_irq() has to be called even if
    alx_clean_tx_irq(alx) returns false, otherwise device is half duplex.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Fixes: d75b1ade567f ("net: less interrupt masking in NAPI")
    Reported-by: Oded Gabbay <oded.gabbay@amd.com>
    Bisected-by: Oded Gabbay <oded.gabbay@amd.com>
    Tested-by: Oded Gabbay <oded.gabbay@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afd67b681c8281cf91616bfa50cd140fd8bb1397
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu Jan 1 00:39:23 2015 +1100

    tcp: Do not apply TSO segment limit to non-TSO packets
    
    [ Upstream commit 843925f33fcc293d80acf2c5c8a78adf3344d49b ]
    
    Thomas Jarosch reported IPsec TCP stalls when a PMTU event occurs.
    
    In fact the problem was completely unrelated to IPsec.  The bug is
    also reproducible if you just disable TSO/GSO.
    
    The problem is that when the MSS goes down, existing queued packet
    on the TX queue that have not been transmitted yet all look like
    TSO packets and get treated as such.
    
    This then triggers a bug where tcp_mss_split_point tells us to
    generate a zero-sized packet on the TX queue.  Once that happens
    we're screwed because the zero-sized packet can never be removed
    by ACKs.
    
    Fixes: 1485348d242 ("tcp: Apply device TSO segment limit earlier")
    Reported-by: Thomas Jarosch <thomas.jarosch@intra2net.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    
    Cheers,
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9958544b60dc04d9b51aab5a39b3e07e0983b5ae
Author: Prashant Sreedharan <prashant@broadcom.com>
Date:   Sat Dec 20 12:16:17 2014 -0800

    tg3: tg3_disable_ints using uninitialized mailbox value to disable interrupts
    
    [ Upstream commit 05b0aa579397b734f127af58e401a30784a1e315 ]
    
    During driver load in tg3_init_one, if the driver detects DMA activity before
    intializing the chip tg3_halt is called. As part of tg3_halt interrupts are
    disabled using routine tg3_disable_ints. This routine was using mailbox value
    which was not initialized (default value is 0). As a result driver was writing
    0x00000001 to pci config space register 0, which is the vendor id / device id.
    
    This driver bug was exposed because of the commit a7877b17a667 (PCI: Check only
    the Vendor ID to identify Configuration Request Retry). Also this issue is only
    seen in older generation chipsets like 5722 because config space write to offset
    0 from driver is possible. The newer generation chips ignore writes to offset 0.
    Also without commit a7877b17a667, for these older chips when a GRC reset is
    issued the Bootcode would reprogram the vendor id/device id, which is the reason
    this bug was masked earlier.
    
    Fixed by initializing the interrupt mailbox registers before calling tg3_halt.
    
    Please queue for -stable.
    
    Reported-by: Nils Holland <nholland@tisys.org>
    Reported-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Prashant Sreedharan <prashant@broadcom.com>
    Signed-off-by: Michael Chan <mchan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57c374d382b4640eb5a95d8702ef1dec93970c4c
Author: Thomas Graf <tgraf@suug.ch>
Date:   Thu Dec 18 10:30:26 2014 +0000

    netlink: Don't reorder loads/stores before marking mmap netlink frame as available
    
    [ Upstream commit a18e6a186f53af06937a2c268c72443336f4ab56 ]
    
    Each mmap Netlink frame contains a status field which indicates
    whether the frame is unused, reserved, contains data or needs to
    be skipped. Both loads and stores may not be reordeded and must
    complete before the status field is changed and another CPU might
    pick up the frame for use. Use an smp_mb() to cover needs of both
    types of callers to netlink_set_status(), callers which have been
    reading data frame from the frame, and callers which have been
    filling or releasing and thus writing to the frame.
    
    - Example code path requiring a smp_rmb():
      memcpy(skb->data, (void *)hdr + NL_MMAP_HDRLEN, hdr->nm_len);
      netlink_set_status(hdr, NL_MMAP_STATUS_UNUSED);
    
    - Example code path requiring a smp_wmb():
      hdr->nm_uid   = from_kuid(sk_user_ns(sk), NETLINK_CB(skb).creds.uid);
      hdr->nm_gid   = from_kgid(sk_user_ns(sk), NETLINK_CB(skb).creds.gid);
      netlink_frame_flush_dcache(hdr);
      netlink_set_status(hdr, NL_MMAP_STATUS_VALID);
    
    Fixes: f9c228 ("netlink: implement memory mapped recvmsg()")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Thomas Graf <tgraf@suug.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5035c9a94424e4ca717a630a1dc052ba600753f4
Author: David Miller <davem@davemloft.net>
Date:   Tue Dec 16 17:58:17 2014 -0500

    netlink: Always copy on mmap TX.
    
    [ Upstream commit 4682a0358639b29cf69437ed909c6221f8c89847 ]
    
    Checking the file f_count and the nlk->mapped count is not completely
    sufficient to prevent the mmap'd area contents from changing from
    under us during netlink mmap sendmsg() operations.
    
    Be careful to sample the header's length field only once, because this
    could change from under us as well.
    
    Fixes: 5fd96123ee19 ("netlink: implement memory mapped sendmsg()")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Acked-by: Daniel Borkmann <dborkman@redhat.com>
    Acked-by: Thomas Graf <tgraf@suug.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
