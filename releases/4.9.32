commit 05afd4c0af6a43f6bda7caaacb01bc0116d50d3b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jun 14 15:06:16 2017 +0200

    Linux 4.9.32

commit 3eb235a1af142e09f48d022970cfbde20603af9e
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun May 21 00:37:10 2017 +0200

    netfilter: nft_set_rbtree: handle element re-addition after deletion
    
    commit d2df92e98a34a5619dadd29c6291113c009181e7 upstream.
    
    The existing code selects no next branch to be inspected when
    re-inserting an inactive element into the rb-tree, looping endlessly.
    This patch restricts the check for active elements to the EEXIST case
    only.
    
    Fixes: e701001e7cbe ("netfilter: nft_rbtree: allow adjacent intervals with dynamic updates")
    Reported-by: Wolfgang Bumiller <w.bumiller@proxmox.com>
    Tested-by: Wolfgang Bumiller <w.bumiller@proxmox.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8fc3159ee2c5aa0f557bc4581f8a32461f74407
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Sun Mar 19 14:30:02 2017 +0100

    cpufreq: schedutil: Fix per-CPU structure initialization in sugov_start()
    
    commit 4296f23ed49a15d36949458adcc66ff993dee2a8 upstream.
    
    sugov_start() only initializes struct sugov_cpu per-CPU structures
    for shared policies, but it should do that for single-CPU policies too.
    
    That in particular makes the IO-wait boost mechanism work in the
    cases when cpufreq policies correspond to individual CPUs.
    
    Fixes: 21ca6d2c52f8 (cpufreq: schedutil: Add iowait boosting)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afe8d4a51c763b9da32c993295af71252bbb7a2c
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Mar 2 14:03:20 2017 +0530

    cpufreq: schedutil: move cached_raw_freq to struct sugov_policy
    
    commit 6c4f0fa643cb9e775dcc976e3db00d649468ff1d upstream.
    
    cached_raw_freq applies to the entire cpufreq policy and not individual
    CPUs. Apart from wasting per-cpu memory, it is actually wrong to keep it
    in struct sugov_cpu as we may end up comparing next_freq with a stale
    cached_raw_freq of a random CPU.
    
    Move cached_raw_freq to struct sugov_policy.
    
    Fixes: 5cbea46984d6 (cpufreq: schedutil: map raw required frequency to driver frequency)
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09fcb3561d9ede40610d8f7b7fd64d2651179403
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 10 15:27:58 2017 +0200

    drm/i915/vbt: split out defaults that are set when there is no VBT
    
    commit bb1d132935c2f87cd261eb559759fe49d5e5dc43 upstream.
    
    The main thing are the DDI ports. If there's a VBT that says there are
    no outputs, we should trust that, and not have semi-random
    defaults. Unfortunately, the defaults have resulted in some Chromebooks
    without VBT to rely on this behaviour, so we split out the defaults for
    the missing VBT case.
    
    Reviewed-by: Manasi Navare <manasi.d.navare@intel.com>
    Cc: Manasi Navare <manasi.d.navare@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/95c26079ff640d43f53b944f17e9fc356b36daec.1489152288.git.jani.nikula@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 555c443a1ab9f6f6935ad23fa24a795d64220730
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Mar 10 15:27:57 2017 +0200

    drm/i915/vbt: don't propagate errors from intel_bios_init()
    
    commit 665788572c6410b7efadc2e3009c5d830b6d8ef9 upstream.
    
    We don't use the error return for anything other than reporting and
    logging that there is no VBT. We can pull the logging in the function,
    and remove the error status return. Moreover, if we needed the
    information for something later on, we'd probably be better off storing
    the bit in dev_priv, and using it where it's needed, instead of using
    the error return.
    
    While at it, improve the comments.
    
    Cc: Manasi Navare <manasi.d.navare@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/438ebbb0d5f0d321c625065b9cc78532a1dab24f.1489152288.git.jani.nikula@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6a7d8ade88ce634f7ff14143714a1301d171001
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Feb 13 11:25:26 2017 -0800

    usercopy: Adjust tests to deal with SMAP/PAN
    
    commit f5f893c57e37ca730808cb2eee3820abd05e7507 upstream.
    
    Under SMAP/PAN/etc, we cannot write directly to userspace memory, so
    this rearranges the test bytes to get written through copy_to_user().
    Additionally drops the bad copy_from_user() test that would trigger a
    memcpy() against userspace on failure.
    
    [arnd: the test module was added in 3.14, and this backported patch
           should apply cleanly on all version from 3.14 to 4.10.
           The original patch was in 4.11 on top of a context change
           I saw the bug triggered with kselftest on a 4.4.y stable kernel]
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eefa5e13dff94000af79a6ec173376f6eb629bc1
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Jan 13 22:51:45 2017 +0100

    ARM: 8637/1: Adjust memory boundaries after reservations
    
    commit 985626564eedc470ce2866e53938303368ad41b7 upstream.
    
    adjust_lowmem_bounds is responsible for setting up the boundary for
    lowmem/highmem. This needs to be setup before memblock reservations can
    occur. At the time memblock reservations can occur, memory can also be
    removed from the system. The lowmem/highmem boundary and end of memory
    may be affected by this but it is currently not recalculated. On some
    systems this may be harmless, on others this may result in incorrect
    ranges being passed to the main memory allocator. Correct this by
    recalculating the lowmem/highmem boundary after all reservations have
    been made.
    
    Tested-by: Magnus Lilja <lilja.magnus@gmail.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Julien Grall <julien.grall@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1df21f45fd55274128c61908765d65837a30f199
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Jan 13 22:51:08 2017 +0100

    ARM: 8636/1: Cleanup sanity_check_meminfo
    
    commit 374d446d25d6271ee615952a3b7f123ba4983c35 upstream.
    
    The logic for sanity_check_meminfo has become difficult to
    follow. Clean up the code so it's more obvious what the code
    is actually trying to do. Additionally, meminfo is now removed
    so rename the function to better describe its purpose.
    
    Tested-by: Magnus Lilja <lilja.magnus@gmail.com>
    Reviewed-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Laura Abbott <lauraa@codeaurora.org>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Julien Grall <julien.grall@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e09d90ac5ac929ab0f817f81f958dfa817d5bfb
Author: Kristina Martsenko <kristina.martsenko@arm.com>
Date:   Tue Jun 6 20:14:10 2017 +0100

    arm64: entry: improve data abort handling of tagged pointers
    
    commit 276e93279a630657fff4b086ba14c95955912dfa upstream.
    
    This backport has a minor difference from the upstream commit: it adds
    the asm-uaccess.h file, which is not present in 4.9, because 4.9 does
    not have commit b4b8664d291a ("arm64: don't pull uaccess.h into *.S").
    
    Original patch description:
    
    When handling a data abort from EL0, we currently zero the top byte of
    the faulting address, as we assume the address is a TTBR0 address, which
    may contain a non-zero address tag. However, the address may be a TTBR1
    address, in which case we should not zero the top byte. This patch fixes
    that. The effect is that the full TTBR1 address is passed to the task's
    signal handler (or printed out in the kernel log).
    
    When handling a data abort from EL1, we leave the faulting address
    intact, as we assume it's either a TTBR1 address or a TTBR0 address with
    tag 0x00. This is true as far as I'm aware, we don't seem to access a
    tagged TTBR0 address anywhere in the kernel. Regardless, it's easy to
    forget about address tags, and code added in the future may not always
    remember to remove tags from addresses before accessing them. So add tag
    handling to the EL1 data abort handler as well. This also makes it
    consistent with the EL0 data abort handler.
    
    Fixes: d50240a5f6ce ("arm64: mm: permit use of tagged pointers at EL0")
    Reviewed-by: Dave Martin <Dave.Martin@arm.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d61ccb5ac272b6cddc50c542646d2b35f87de8d
Author: Kristina Martsenko <kristina.martsenko@arm.com>
Date:   Tue Jun 6 20:14:09 2017 +0100

    arm64: hw_breakpoint: fix watchpoint matching for tagged pointers
    
    commit 7dcd9dd8cebe9fa626af7e2358d03a37041a70fb upstream.
    
    This backport has a small difference from the upstream commit:
     - The address tag is removed in watchpoint_handler() instead of
       get_distance_from_watchpoint(), because 4.9 does not have commit
       fdfeff0f9e3d ("arm64: hw_breakpoint: Handle inexact watchpoint
       addresses").
    
    Original patch description:
    
    When we take a watchpoint exception, the address that triggered the
    watchpoint is found in FAR_EL1. We compare it to the address of each
    configured watchpoint to see which one was hit.
    
    The configured watchpoint addresses are untagged, while the address in
    FAR_EL1 will have an address tag if the data access was done using a
    tagged address. The tag needs to be removed to compare the address to
    the watchpoints.
    
    Currently we don't remove it, and as a result can report the wrong
    watchpoint as being hit (specifically, always either the highest TTBR0
    watchpoint or lowest TTBR1 watchpoint). This patch removes the tag.
    
    Fixes: d50240a5f6ce ("arm64: mm: permit use of tagged pointers at EL0")
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 791d94ef40f6b9c2e809bd118d1b3423e7514d37
Author: Kristina Martsenko <kristina.martsenko@arm.com>
Date:   Tue Jun 6 20:14:08 2017 +0100

    arm64: traps: fix userspace cache maintenance emulation on a tagged pointer
    
    commit 81cddd65b5c82758ea5571a25e31ff6f1f89ff02 upstream.
    
    This backport has a minor difference from the upstream commit, as v4.9
    did not yet have the refactoring done by commit 8b6e70fccff2 ("arm64:
    traps: correctly handle MRS/MSR with XZR").
    
    Original patch description:
    
    When we emulate userspace cache maintenance in the kernel, we can
    currently send the task a SIGSEGV even though the maintenance was done
    on a valid address. This happens if the address has a non-zero address
    tag, and happens to not be mapped in.
    
    When we get the address from a user register, we don't currently remove
    the address tag before performing cache maintenance on it. If the
    maintenance faults, we end up in either __do_page_fault, where find_vma
    can't find the VMA if the address has a tag, or in do_translation_fault,
    where the tagged address will appear to be above TASK_SIZE. In both
    cases, the address is not mapped in, and the task is sent a SIGSEGV.
    
    This patch removes the tag from the address before using it. With this
    patch, the fault is handled correctly, the address gets mapped in, and
    the cache maintenance succeeds.
    
    As a second bug, if cache maintenance (correctly) fails on an invalid
    tagged address, the address gets passed into arm64_notify_segfault,
    where find_vma fails to find the VMA due to the tag, and the wrong
    si_code may be sent as part of the siginfo_t of the segfault. With this
    patch, the correct si_code is sent.
    
    Fixes: 7dd01aef0557 ("arm64: trap userspace "dc cvau" cache operation on errata-affected core")
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9520248733414e96fb534b99534ef1e761eda6e
Author: Takatoshi Akiyama <takatoshi.akiyama.kj@ps.hitachi-solutions.com>
Date:   Mon Feb 27 15:56:31 2017 +0900

    serial: sh-sci: Fix panic when serial console and DMA are enabled
    
    commit 3c9101766b502a0163d1d437fada5801cf616be2 upstream.
    
    This patch fixes an issue that kernel panic happens when DMA is enabled
    and we press enter key while the kernel booting on the serial console.
    
    * An interrupt may occur after sci_request_irq().
    * DMA transfer area is initialized by setup_timer() in sci_request_dma()
      and used in interrupt.
    
    If an interrupt occurred between sci_request_irq() and setup_timer() in
    sci_request_dma(), DMA transfer area has not been initialized yet.
    So, this patch changes the order of sci_request_irq() and
    sci_request_dma().
    
    Fixes: 73a19e4c0301 ("serial: sh-sci: Add DMA support.")
    Signed-off-by: Takatoshi Akiyama <takatoshi.akiyama.kj@ps.hitachi-solutions.com>
    [Shimoda changes the commit log]
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ff4a1a36a587b0343a02518dbc1d5bf4c0c99e8
Author: Julius Werner <jwerner@chromium.org>
Date:   Fri Jun 2 15:36:39 2017 -0700

    drivers: char: mem: Fix wraparound check to allow mappings up to the end
    
    commit 32829da54d9368103a2f03269a5120aa9ee4d5da upstream.
    
    A recent fix to /dev/mem prevents mappings from wrapping around the end
    of physical address space. However, the check was written in a way that
    also prevents a mapping reaching just up to the end of physical address
    space, which may be a valid use case (especially on 32-bit systems).
    This patch fixes it by checking the last mapped address (instead of the
    first address behind that) for overflow.
    
    Fixes: b299cde245 ("drivers: char: mem: Check for address space wraparound with mmap()")
    Reported-by: Nico Huber <nico.h@gmx.de>
    Signed-off-by: Julius Werner <jwerner@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 106c77e82572921fa53483235a55adb7cb9452c0
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Jun 2 16:27:14 2017 +0200

    cpu/hotplug: Drop the device lock on error
    
    commit 40da1b11f01e43aad1aa6cea64681b6125e8a2a7 upstream.
    
    If a custom CPU target is specified and that one is not available _or_
    can't be interrupted then the code returns to userland without dropping a
    lock as notices by lockdep:
    
    |echo 133 > /sys/devices/system/cpu/cpu7/hotplug/target
    | ================================================
    | [ BUG: lock held when returning to user space! ]
    | ------------------------------------------------
    | bash/503 is leaving the kernel with locks still held!
    | 1 lock held by bash/503:
    |  #0:  (device_hotplug_lock){+.+...}, at: [<ffffffff815b5650>] lock_device_hotplug_sysfs+0x10/0x40
    
    So release the lock then.
    
    Fixes: 757c989b9994 ("cpu/hotplug: Make target state writeable")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170602142714.3ogo25f2wbq6fjpj@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb8fa317cb0184f5179e29bab8c62a4a4087cd4a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed May 24 10:19:45 2017 +0200

    ASoC: Fix use-after-free at card unregistration
    
    commit 4efda5f2130da033aeedc5b3205569893b910de2 upstream.
    
    soc_cleanup_card_resources() call snd_card_free() at the last of its
    procedure.  This turned out to lead to a use-after-free.
    PCM runtimes have been already removed via soc_remove_pcm_runtimes(),
    while it's dereferenced later in soc_pcm_free() called via
    snd_card_free().
    
    The fix is simple: just move the snd_card_free() call to the beginning
    of the whole procedure.  This also gives another benefit: it
    guarantees that all operations have been shut down before actually
    releasing the resources, which was racy until now.
    
    Reported-and-tested-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82ecd2f054bd778eeb97c775c915b052e2941c79
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jun 2 17:26:56 2017 +0200

    ALSA: timer: Fix missing queue indices reset at SNDRV_TIMER_IOCTL_SELECT
    
    commit ba3021b2c79b2fa9114f92790a99deb27a65b728 upstream.
    
    snd_timer_user_tselect() reallocates the queue buffer dynamically, but
    it forgot to reset its indices.  Since the read may happen
    concurrently with ioctl and snd_timer_user_tselect() allocates the
    buffer via kmalloc(), this may lead to the leak of uninitialized
    kernel-space data, as spotted via KMSAN:
    
      BUG: KMSAN: use of unitialized memory in snd_timer_user_read+0x6c4/0xa10
      CPU: 0 PID: 1037 Comm: probe Not tainted 4.11.0-rc5+ #2739
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Call Trace:
       __dump_stack lib/dump_stack.c:16
       dump_stack+0x143/0x1b0 lib/dump_stack.c:52
       kmsan_report+0x12a/0x180 mm/kmsan/kmsan.c:1007
       kmsan_check_memory+0xc2/0x140 mm/kmsan/kmsan.c:1086
       copy_to_user ./arch/x86/include/asm/uaccess.h:725
       snd_timer_user_read+0x6c4/0xa10 sound/core/timer.c:2004
       do_loop_readv_writev fs/read_write.c:716
       __do_readv_writev+0x94c/0x1380 fs/read_write.c:864
       do_readv_writev fs/read_write.c:894
       vfs_readv fs/read_write.c:908
       do_readv+0x52a/0x5d0 fs/read_write.c:934
       SYSC_readv+0xb6/0xd0 fs/read_write.c:1021
       SyS_readv+0x87/0xb0 fs/read_write.c:1018
    
    This patch adds the missing reset of queue indices.  Together with the
    previous fix for the ioctl/read race, we cover the whole problem.
    
    Reported-by: Alexander Potapenko <glider@google.com>
    Tested-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66e982d8f1a1f5e151377fe37612e9151e552dc9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jun 2 15:03:38 2017 +0200

    ALSA: timer: Fix race between read and ioctl
    
    commit d11662f4f798b50d8c8743f433842c3e40fe3378 upstream.
    
    The read from ALSA timer device, the function snd_timer_user_tread(),
    may access to an uninitialized struct snd_timer_user fields when the
    read is concurrently performed while the ioctl like
    snd_timer_user_tselect() is invoked.  We have already fixed the races
    among ioctls via a mutex, but we seem to have forgotten the race
    between read vs ioctl.
    
    This patch simply applies (more exactly extends the already applied
    range of) tu->ioctl_lock in snd_timer_user_tread() for closing the
    race window.
    
    Reported-by: Alexander Potapenko <glider@google.com>
    Tested-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aae14f569f5dbd13f9a7f34db8110e1658ef2c48
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon Jun 5 17:23:32 2017 +1000

    drm/nouveau/tmr: fully separate alarm execution/pending lists
    
    commit b4e382ca7586a63b6c1e5221ce0863ff867c2df6 upstream.
    
    Reusing the list_head for both is a bad idea.  Callback execution is done
    with the lock dropped so that alarms can be rescheduled from the callback,
    which means that with some unfortunate timing, lists can get corrupted.
    
    The execution list should not require its own locking, the single function
    that uses it can only be called from a single context.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7860d0e5e2bf986d4bd06e7b029786747b5dc766
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Fri Jun 2 07:50:57 2017 +0200

    drm/vmwgfx: Make sure backup_handle is always valid
    
    commit 07678eca2cf9c9a18584e546c2b2a0d0c9a3150c upstream.
    
    When vmw_gb_surface_define_ioctl() is called with an existing buffer,
    we end up returning an uninitialized variable in the backup_handle.
    
    The fix is to first initialize backup_handle to 0 just to be sure, and
    second, when a user-provided buffer is found, we will use the
    req->buffer_handle as the backup_handle.
    
    Reported-by: Murray McAllister <murray.mcallister@insomniasec.com>
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Deepak Rawat <drawat@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a76ff847013a7f6b1cd328381ca263ddcca12061
Author: Vladis Dronov <vdronov@redhat.com>
Date:   Fri Jun 2 07:42:09 2017 +0200

    drm/vmwgfx: limit the number of mip levels in vmw_gb_surface_define_ioctl()
    
    commit ee9c4e681ec4f58e42a83cb0c22a0289ade1aacf upstream.
    
    The 'req->mip_levels' parameter in vmw_gb_surface_define_ioctl() is
    a user-controlled 'uint32_t' value which is used as a loop count limit.
    This can lead to a kernel lockup and DoS. Add check for 'req->mip_levels'.
    
    References:
    https://bugzilla.redhat.com/show_bug.cgi?id=1437431
    
    Signed-off-by: Vladis Dronov <vdronov@redhat.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64c21af51d719b41b8c43203fed650f3de4fc4bf
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Apr 27 12:12:08 2017 +0300

    drm/vmwgfx: Handle vmalloc() failure in vmw_local_fifo_reserve()
    
    commit f0c62e9878024300319ba2438adc7b06c6b9c448 upstream.
    
    If vmalloc() fails then we need to a bit of cleanup before returning.
    
    Fixes: fb1d9738ca05 ("drm/vmwgfx: Add DRM driver for VMware Virtual GPU")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3743c0e1276d73351e5764a0b6ef006039b65235
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Thu May 25 18:09:07 2017 +0800

    perf/core: Drop kernel samples even though :u is specified
    
    commit cc1582c231ea041fbc68861dfaf957eaf902b829 upstream.
    
    When doing sampling, for example:
    
      perf record -e cycles:u ...
    
    On workloads that do a lot of kernel entry/exits we see kernel
    samples, even though :u is specified. This is due to skid existing.
    
    This might be a security issue because it can leak kernel addresses even
    though kernel sampling support is disabled.
    
    The patch drops the kernel samples if exclude_kernel is specified.
    
    For example, test on Haswell desktop:
    
      perf record -e cycles:u <mgen>
      perf report --stdio
    
    Before patch applied:
    
        99.77%  mgen     mgen              [.] buf_read
         0.20%  mgen     mgen              [.] rand_buf_init
         0.01%  mgen     [kernel.vmlinux]  [k] apic_timer_interrupt
         0.00%  mgen     mgen              [.] last_free_elem
         0.00%  mgen     libc-2.23.so      [.] __random_r
         0.00%  mgen     libc-2.23.so      [.] _int_malloc
         0.00%  mgen     mgen              [.] rand_array_init
         0.00%  mgen     [kernel.vmlinux]  [k] page_fault
         0.00%  mgen     libc-2.23.so      [.] __random
         0.00%  mgen     libc-2.23.so      [.] __strcasestr
         0.00%  mgen     ld-2.23.so        [.] strcmp
         0.00%  mgen     ld-2.23.so        [.] _dl_start
         0.00%  mgen     libc-2.23.so      [.] sched_setaffinity@@GLIBC_2.3.4
         0.00%  mgen     ld-2.23.so        [.] _start
    
    We can see kernel symbols apic_timer_interrupt and page_fault.
    
    After patch applied:
    
        99.79%  mgen     mgen           [.] buf_read
         0.19%  mgen     mgen           [.] rand_buf_init
         0.00%  mgen     libc-2.23.so   [.] __random_r
         0.00%  mgen     mgen           [.] rand_array_init
         0.00%  mgen     mgen           [.] last_free_elem
         0.00%  mgen     libc-2.23.so   [.] vfprintf
         0.00%  mgen     libc-2.23.so   [.] rand
         0.00%  mgen     libc-2.23.so   [.] __random
         0.00%  mgen     libc-2.23.so   [.] _int_malloc
         0.00%  mgen     libc-2.23.so   [.] _IO_doallocbuf
         0.00%  mgen     ld-2.23.so     [.] do_lookup_x
         0.00%  mgen     ld-2.23.so     [.] open_verify.constprop.7
         0.00%  mgen     ld-2.23.so     [.] _dl_important_hwcaps
         0.00%  mgen     libc-2.23.so   [.] sched_setaffinity@@GLIBC_2.3.4
         0.00%  mgen     ld-2.23.so     [.] _start
    
    There are only userspace symbols.
    
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: acme@kernel.org
    Cc: jolsa@kernel.org
    Cc: kan.liang@intel.com
    Cc: mark.rutland@arm.com
    Cc: will.deacon@arm.com
    Cc: yao.jin@intel.com
    Link: http://lkml.kernel.org/r/1495706947-3744-1-git-send-email-yao.jin@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e6d89e18e53062987b2d14223f34abf64046ab7
Author: Breno Leitao <leitao@debian.org>
Date:   Mon Jun 5 11:40:59 2017 -0300

    powerpc/kernel: Initialize load_tm on task creation
    
    commit 7f22ced4377628074e2ac25f41a88f98eb3b03f1 upstream.
    
    Currently tsk->thread.load_tm is not initialized in the task creation
    and can contain garbage on a new task.
    
    This is an undesired behaviour, since it affects the timing to enable
    and disable the transactional memory laziness (disabling and enabling
    the MSR TM bit, which affects TM reclaim and recheckpoint in the
    scheduling process).
    
    Fixes: 5d176f751ee3 ("powerpc: tm: Enable transactional memory (TM) lazily for userspace")
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cfdf4fd3292d05eeca5d59307bf231b94df1d4b
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Jun 2 18:43:30 2017 -0300

    powerpc/kernel: Fix FP and vector register restoration
    
    commit 1195892c091a15cc862f4e202482a36adc924e12 upstream.
    
    Currently tsk->thread->load_vec and load_fp are not initialized during
    task creation, which can lead to garbage values in these variables (non-zero
    values).
    
    These variables will be checked later in restore_math() to validate if the
    FP and vector registers are being utilized. Since these values might be
    non-zero, the restore_math() will continue to save the FP and vectors even if
    they were never utilized by the userspace application. load_fp and load_vec
    counters will then overflow (they wrap at 255) and the FP and Altivec will be
    finally disabled, but before that condition is reached (counter overflow)
    several context switches will have restored FP and vector registers without
    need, causing a performance degradation.
    
    Fixes: 70fe3d980f5f ("powerpc: Restore FPU/VEC/VSX if previously used")
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Gustavo Romero <gusbromero@gmail.com>
    Acked-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbf687acc1e132bece665bc284d9abd32f1bdc11
Author: Michael Bringmann <mwb@linux.vnet.ibm.com>
Date:   Mon May 22 15:44:37 2017 -0500

    powerpc/hotplug-mem: Fix missing endian conversion of aa_index
    
    commit dc421b200f91930c9c6a9586810ff8c232cf10fc upstream.
    
    When adding or removing memory, the aa_index (affinity value) for the
    memblock must also be converted to match the endianness of the rest
    of the 'ibm,dynamic-memory' property.  Otherwise, subsequent retrieval
    of the attribute will likely lead to non-existent nodes, followed by
    using the default node in the code inappropriately.
    
    Fixes: 5f97b2a0d176 ("powerpc/pseries: Implement memory hotplug add in the kernel")
    Signed-off-by: Michael Bringmann <mwb@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4624ff952ec7d268a9651cd9184a1995befc271
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jun 6 20:23:57 2017 +1000

    powerpc/numa: Fix percpu allocations to be NUMA aware
    
    commit ba4a648f12f4cd0a8003dd229b6ca8a53348ee4b upstream.
    
    In commit 8c272261194d ("powerpc/numa: Enable USE_PERCPU_NUMA_NODE_ID"), we
    switched to the generic implementation of cpu_to_node(), which uses a percpu
    variable to hold the NUMA node for each CPU.
    
    Unfortunately we neglected to notice that we use cpu_to_node() in the allocation
    of our percpu areas, leading to a chicken and egg problem. In practice what
    happens is when we are setting up the percpu areas, cpu_to_node() reports that
    all CPUs are on node 0, so we allocate all percpu areas on node 0.
    
    This is visible in the dmesg output, as all pcpu allocs being in group 0:
    
      pcpu-alloc: [0] 00 01 02 03 [0] 04 05 06 07
      pcpu-alloc: [0] 08 09 10 11 [0] 12 13 14 15
      pcpu-alloc: [0] 16 17 18 19 [0] 20 21 22 23
      pcpu-alloc: [0] 24 25 26 27 [0] 28 29 30 31
      pcpu-alloc: [0] 32 33 34 35 [0] 36 37 38 39
      pcpu-alloc: [0] 40 41 42 43 [0] 44 45 46 47
    
    To fix it we need an early_cpu_to_node() which can run prior to percpu being
    setup. We already have the numa_cpu_lookup_table we can use, so just plumb it
    in. With the patch dmesg output shows two groups, 0 and 1:
    
      pcpu-alloc: [0] 00 01 02 03 [0] 04 05 06 07
      pcpu-alloc: [0] 08 09 10 11 [0] 12 13 14 15
      pcpu-alloc: [0] 16 17 18 19 [0] 20 21 22 23
      pcpu-alloc: [1] 24 25 26 27 [1] 28 29 30 31
      pcpu-alloc: [1] 32 33 34 35 [1] 36 37 38 39
      pcpu-alloc: [1] 40 41 42 43 [1] 44 45 46 47
    
    We can also check the data_offset in the paca of various CPUs, with the fix we
    see:
    
      CPU 0:  data_offset = 0x0ffe8b0000
      CPU 24: data_offset = 0x1ffe5b0000
    
    And we can see from dmesg that CPU 24 has an allocation on node 1:
    
      node   0: [mem 0x0000000000000000-0x0000000fffffffff]
      node   1: [mem 0x0000001000000000-0x0000001fffffffff]
    
    Fixes: 8c272261194d ("powerpc/numa: Enable USE_PERCPU_NUMA_NODE_ID")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb0a300f18cef240373fc2820e2114331c5e9773
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Wed May 24 10:01:55 2017 +0200

    powerpc/sysdev/simple_gpio: Fix oops in gpio save_regs function
    
    commit 6f553912eedafae13ff20b322a65e471fe7f5236 upstream.
    
    of_mm_gpiochip_add_data() generates an oops for NULL pointer dereference.
    
    of_mm_gpiochip_add_data() calls mm_gc->save_regs() before
    setting the data, therefore ->save_regs() cannot use gpiochip_get_data()
    
    Fixes: 937daafca774 ("powerpc: simple-gpio: use gpiochip data pointer")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59d9a40b5839d98e324cc78aab89d74bc4c7276f
Author: Joe Carnuccio <joe.carnuccio@qlogic.com>
Date:   Wed May 24 18:06:23 2017 -0700

    scsi: qla2xxx: Fix mailbox pointer error in fwdump capture
    
    commit 74939a0bc772d642b1c12827966c4c3a3c90ea2c upstream.
    
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64dc431432ec43c9b5da931dbcd2e55754988ea9
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Wed May 24 18:06:22 2017 -0700

    scsi: qla2xxx: Set bit 15 for DIAG_ECHO_TEST MBC
    
    commit 1d63496516c61e2e1351f10e6becbfc9ee511395 upstream.
    
    Set bit (BIT_15) to send right ECHO payload information for Diagnostic
    Echo Test command.
    
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab2b484e80388726a1810f9525a078427f5da6d0
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Wed May 24 18:06:21 2017 -0700

    scsi: qla2xxx: Modify T262 FW dump template to specify same start/end to debug customer issues
    
    commit ce6c668b146cc4f4442111e2bcee4c3af94e1ddf upstream.
    
    Firmware dump allows for debugging customer issues. This patch fixes
    start/end pointer calculation to capture T262 template entry for dump
    tool.
    
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe42472e53ebceec5fbb8611a4b4946c1a2e5c01
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Tue May 23 16:50:47 2017 +0200

    scsi: qla2xxx: don't disable a not previously enabled PCI device
    
    commit ddff7ed45edce4a4c92949d3c61cd25d229c4a14 upstream.
    
    When pci_enable_device() or pci_enable_device_mem() fail in
    qla2x00_probe_one() we bail out but do a call to
    pci_disable_device(). This causes the dev_WARN_ON() in
    pci_disable_device() to trigger, as the device wasn't enabled
    previously.
    
    So instead of taking the 'probe_out' error path we can directly return
    *iff* one of the pci_enable_device() calls fails.
    
    Additionally rename the 'probe_out' goto label's name to the more
    descriptive 'disable_device'.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: e315cd28b9ef ("[SCSI] qla2xxx: Code changes for qla data structure refactoring")
    Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Giridhar Malavali <giridhar.malavali@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f75e09ebd3e414e3a1be5a11492702346d102489
Author: Marc Zyngier <maz@kernel.org>
Date:   Mon Jun 5 19:17:18 2017 +0100

    KVM: arm/arm64: Handle possible NULL stage2 pud when ageing pages
    
    commit d6dbdd3c8558cad3b6d74cc357b408622d122331 upstream.
    
    Under memory pressure, we start ageing pages, which amounts to parsing
    the page tables. Since we don't want to allocate any extra level,
    we pass NULL for our private allocation cache. Which means that
    stage2_get_pud() is allowed to fail. This results in the following
    splat:
    
    [ 1520.409577] Unable to handle kernel NULL pointer dereference at virtual address 00000008
    [ 1520.417741] pgd = ffff810f52fef000
    [ 1520.421201] [00000008] *pgd=0000010f636c5003, *pud=0000010f56f48003, *pmd=0000000000000000
    [ 1520.429546] Internal error: Oops: 96000006 [#1] PREEMPT SMP
    [ 1520.435156] Modules linked in:
    [ 1520.438246] CPU: 15 PID: 53550 Comm: qemu-system-aar Tainted: G        W       4.12.0-rc4-00027-g1885c397eaec #7205
    [ 1520.448705] Hardware name: FOXCONN R2-1221R-A4/C2U4N_MB, BIOS G31FB12A 10/26/2016
    [ 1520.463726] task: ffff800ac5fb4e00 task.stack: ffff800ce04e0000
    [ 1520.469666] PC is at stage2_get_pmd+0x34/0x110
    [ 1520.474119] LR is at kvm_age_hva_handler+0x44/0xf0
    [ 1520.478917] pc : [<ffff0000080b137c>] lr : [<ffff0000080b149c>] pstate: 40000145
    [ 1520.486325] sp : ffff800ce04e33d0
    [ 1520.489644] x29: ffff800ce04e33d0 x28: 0000000ffff40064
    [ 1520.494967] x27: 0000ffff27e00000 x26: 0000000000000000
    [ 1520.500289] x25: ffff81051ba65008 x24: 0000ffff40065000
    [ 1520.505618] x23: 0000ffff40064000 x22: 0000000000000000
    [ 1520.510947] x21: ffff810f52b20000 x20: 0000000000000000
    [ 1520.516274] x19: 0000000058264000 x18: 0000000000000000
    [ 1520.521603] x17: 0000ffffa6fe7438 x16: ffff000008278b70
    [ 1520.526940] x15: 000028ccd8000000 x14: 0000000000000008
    [ 1520.532264] x13: ffff7e0018298000 x12: 0000000000000002
    [ 1520.537582] x11: ffff000009241b93 x10: 0000000000000940
    [ 1520.542908] x9 : ffff0000092ef800 x8 : 0000000000000200
    [ 1520.548229] x7 : ffff800ce04e36a8 x6 : 0000000000000000
    [ 1520.553552] x5 : 0000000000000001 x4 : 0000000000000000
    [ 1520.558873] x3 : 0000000000000000 x2 : 0000000000000008
    [ 1520.571696] x1 : ffff000008fd5000 x0 : ffff0000080b149c
    [ 1520.577039] Process qemu-system-aar (pid: 53550, stack limit = 0xffff800ce04e0000)
    [...]
    [ 1521.510735] [<ffff0000080b137c>] stage2_get_pmd+0x34/0x110
    [ 1521.516221] [<ffff0000080b149c>] kvm_age_hva_handler+0x44/0xf0
    [ 1521.522054] [<ffff0000080b0610>] handle_hva_to_gpa+0xb8/0xe8
    [ 1521.527716] [<ffff0000080b3434>] kvm_age_hva+0x44/0xf0
    [ 1521.532854] [<ffff0000080a58b0>] kvm_mmu_notifier_clear_flush_young+0x70/0xc0
    [ 1521.539992] [<ffff000008238378>] __mmu_notifier_clear_flush_young+0x88/0xd0
    [ 1521.546958] [<ffff00000821eca0>] page_referenced_one+0xf0/0x188
    [ 1521.552881] [<ffff00000821f36c>] rmap_walk_anon+0xec/0x250
    [ 1521.558370] [<ffff000008220f78>] rmap_walk+0x78/0xa0
    [ 1521.563337] [<ffff000008221104>] page_referenced+0x164/0x180
    [ 1521.569002] [<ffff0000081f1af0>] shrink_active_list+0x178/0x3b8
    [ 1521.574922] [<ffff0000081f2058>] shrink_node_memcg+0x328/0x600
    [ 1521.580758] [<ffff0000081f23f4>] shrink_node+0xc4/0x328
    [ 1521.585986] [<ffff0000081f2718>] do_try_to_free_pages+0xc0/0x340
    [ 1521.592000] [<ffff0000081f2a64>] try_to_free_pages+0xcc/0x240
    [...]
    
    The trivial fix is to handle this NULL pud value early, rather than
    dereferencing it blindly.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66d6448475c682099e4dd3c6b4ef6e94248c0b2e
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Wed May 17 09:49:37 2017 -0400

    btrfs: fix memory leak in update_space_info failure path
    
    commit 896533a7da929136d0432713f02a3edffece2826 upstream.
    
    If we fail to add the space_info kobject, we'll leak the memory
    for the percpu counter.
    
    Fixes: 6ab0a2029c (btrfs: publish allocation data in sysfs)
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d15ab90ec2bece7361b6afebebfbf83a381a529
Author: David Sterba <dsterba@suse.com>
Date:   Fri May 12 01:03:52 2017 +0200

    btrfs: use correct types for page indices in btrfs_page_exists_in_range
    
    commit cc2b702c52094b637a351d7491ac5200331d0445 upstream.
    
    Variables start_idx and end_idx are supposed to hold a page index
    derived from the file offsets. The int type is not the right one though,
    offsets larger than 1 << 44 will get silently trimmed off the high bits.
    (1 << 44 is 16TiB)
    
    What can go wrong, if start is below the boundary and end gets trimmed:
    - if there's a page after start, we'll find it (radix_tree_gang_lookup_slot)
    - the final check "if (page->index <= end_idx)" will unexpectedly fail
    
    The function will return false, ie. "there's no page in the range",
    although there is at least one.
    
    btrfs_page_exists_in_range is used to prevent races in:
    
    * in hole punching, where we make sure there are not pages in the
      truncated range, otherwise we'll wait for them to finish and redo
      truncation, but we're going to replace the pages with holes anyway so
      the only problem is the intermediate state
    
    * lock_extent_direct: we want to make sure there are no pages before we
      lock and start DIO, to prevent stale data reads
    
    For practical occurence of the bug, there are several constaints.  The
    file must be quite large, the affected range must cross the 16TiB
    boundary and the internal state of the file pages and pending operations
    must match.  Also, we must not have started any ordered data in the
    range, otherwise we don't even reach the buggy function check.
    
    DIO locking tries hard in several places to avoid deadlocks with
    buffered IO and avoids waiting for ranges. The worst consequence seems
    to be stale data read.
    
    CC: Liu Bo <bo.li.liu@oracle.com>
    Fixes: fc4adbff823f7 ("btrfs: Drop EXTENT_UPTODATE check in hole punching and direct locking")
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fd1233dabd5dc6d997b654552205d153f3caac4
Author: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
Date:   Fri Jun 2 22:26:48 2017 +0530

    cxl: Avoid double free_irq() for psl,slice interrupts
    
    commit b3aa20ba2ba8072b73bd799605b8c98927b7056c upstream.
    
    During an eeh call to cxl_remove can result in double free_irq of
    psl,slice interrupts. This can happen if perst_reloads_same_image == 1
    and call to cxl_configure_adapter() fails during slot_reset
    callback. In such a case we see a kernel oops with following back-trace:
    
    Oops: Kernel access of bad area, sig: 11 [#1]
    Call Trace:
      free_irq+0x88/0xd0 (unreliable)
      cxl_unmap_irq+0x20/0x40 [cxl]
      cxl_native_release_psl_irq+0x78/0xd8 [cxl]
      pci_deconfigure_afu+0xac/0x110 [cxl]
      cxl_remove+0x104/0x210 [cxl]
      pci_device_remove+0x6c/0x110
      device_release_driver_internal+0x204/0x2e0
      pci_stop_bus_device+0xa0/0xd0
      pci_stop_and_remove_bus_device+0x28/0x40
      pci_hp_remove_devices+0xb0/0x150
      pci_hp_remove_devices+0x68/0x150
      eeh_handle_normal_event+0x140/0x580
      eeh_handle_event+0x174/0x360
      eeh_event_handler+0x1e8/0x1f0
    
    This patch fixes the issue of double free_irq by checking that
    variables that hold the virqs (err_hwirq, serr_hwirq, psl_virq) are
    not '0' before un-mapping and resetting these variables to '0' when
    they are un-mapped.
    
    Signed-off-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 172c70d1cd82545fdef4717eb3fc8605af2ae749
Author: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
Date:   Tue Jun 6 11:43:41 2017 +0200

    cxl: Fix error path on bad ioctl
    
    commit cec422c11caeeccae709e9942058b6b644ce434c upstream.
    
    Fix error path if we can't copy user structure on CXL_IOCTL_START_WORK
    ioctl. We shouldn't unlock the context status mutex as it was not
    locked (yet).
    
    Fixes: 0712dc7e73e5 ("cxl: Fix issues when unmapping contexts")
    Signed-off-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Reviewed-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84bef90a454f818edd1abbe6b18d5238e6614971
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Jun 8 23:28:53 2017 -0400

    ufs_getfrag_block(): we only grab ->truncate_mutex on block creation path
    
    commit 006351ac8ead0d4a67dd3845e3ceffe650a23212 upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d4922b5bb5b8fdc4c57768312bab47450324a00
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Jun 8 23:27:12 2017 -0400

    ufs_extend_tail(): fix the braino in calling conventions of ufs_new_fragments()
    
    commit 940ef1a0ed939c2ca029fca715e25e7778ce1e34 upstream.
    
    ... and it really needs splitting into "new" and "extend" cases, but that's for
    later
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55a00f816bd7def1af57961170510edb929db40f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Jun 8 21:15:45 2017 -0400

    ufs: set correct ->s_maxsize
    
    commit 6b0d144fa758869bdd652c50aa41aaf601232550 upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aed005fb79560cd84369461252112ce465c86d76
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Jun 8 21:15:03 2017 -0400

    ufs: restore maintaining ->i_blocks
    
    commit eb315d2ae614493fd1ebb026c75a80573d84f7ad upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf7bfef3eee3ce45a801678817c06476036f5c6d
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Jun 8 18:15:18 2017 -0400

    fix ufs_isblockset()
    
    commit 414cf7186dbec29bd946c138d6b5c09da5955a08 upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4896c87d246423b0c18e69594115af2db3d956f0
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Jun 8 02:42:03 2017 -0400

    ufs: restore proper tail allocation
    
    commit 8785d84d002c2ce0f68fbcd6c2c86be859802c7e upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61604a2626a3eb1c4f5617fda81d2ff90e409342
Author: Fabian Frederick <fabf@skynet.be>
Date:   Mon Feb 27 14:28:32 2017 -0800

    fs: add i_blocksize()
    
    commit 93407472a21b82f39c955ea7787e5bc7da100642 upstream.
    
    Replace all 1 << inode->i_blkbits and (1 << inode->i_blkbits) in fs
    branch.
    
    This patch also fixes multiple checkpatch warnings: WARNING: Prefer
    'unsigned int' to bare use of 'unsigned'
    
    Thanks to Andrew Morton for suggesting more appropriate function instead
    of macro.
    
    [geliangtang@gmail.com: truncate: use i_blocksize()]
      Link: http://lkml.kernel.org/r/9c8b2cd83c8f5653805d43debde9fa8817e02fc4.1484895804.git.geliangtang@gmail.com
    Link: http://lkml.kernel.org/r/1481319905-10126-1-git-send-email-fabf@skynet.be
    Signed-off-by: Fabian Frederick <fabf@skynet.be>
    Signed-off-by: Geliang Tang <geliangtang@gmail.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829a1cab22c4731489673e4a538a0c6d999af5ac
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 24 12:03:48 2017 -0400

    cpuset: consider dying css as offline
    
    commit 41c25707d21716826e3c1f60967f5550610ec1c9 upstream.
    
    In most cases, a cgroup controller don't care about the liftimes of
    cgroups.  For the controller, a css becomes online when ->css_online()
    is called on it and offline when ->css_offline() is called.
    
    However, cpuset is special in that the user interface it exposes cares
    whether certain cgroups exist or not.  Combined with the RCU delay
    between cgroup removal and css offlining, this can lead to user
    visible behavior oddities where operations which should succeed after
    cgroup removals fail for some time period.  The effects of cgroup
    removals are delayed when seen from userland.
    
    This patch adds css_is_dying() which tests whether offline is pending
    and updates is_cpuset_online() so that the function returns false also
    while offline is pending.  This gets rid of the userland visible
    delays.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Link: http://lkml.kernel.org/r/327ca1f5-7957-fbb9-9e5f-9ba149d40ba2@oracle.com
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aa8f833ca7880d1f8a03516e6e5ccb45eca7019
Author: Ulrik De Bie <ulrik.debie-os@e2big.org>
Date:   Wed Jun 7 10:30:57 2017 -0700

    Input: elantech - add Fujitsu Lifebook E546/E557 to force crc_enabled
    
    commit 47eb0c8b4d9eb6368941c6a9bb443f00847a46d7 upstream.
    
    The Lifebook E546 and E557 touchpad were also not functioning and
    worked after running:
    
            echo "1" > /sys/devices/platform/i8042/serio2/crc_enabled
    
    Add them to the list of machines that need this workaround.
    
    Signed-off-by: Ulrik De Bie <ulrik.debie-os@e2big.org>
    Reviewed-by: Arjan Opmeer <arjan@opmeer.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dff4c8bb1397337bc7663447d7f6ccbb3a52f8d9
Author: Waiman Long <longman@redhat.com>
Date:   Mon May 15 09:34:06 2017 -0400

    cgroup: Prevent kill_css() from being called more than once
    
    commit 33c35aa4817864e056fd772230b0c6b552e36ea2 upstream.
    
    The kill_css() function may be called more than once under the condition
    that the css was killed but not physically removed yet followed by the
    removal of the cgroup that is hosting the css. This patch prevents any
    harmm from being done when that happens.
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b59ec7072c84c09461d98376a3358879d0034098
Author: Sui Chen <suichen6@gmail.com>
Date:   Tue May 9 07:47:22 2017 -0500

    ahci: Acer SA5-271 SSD Not Detected Fix
    
    commit 8bfd174312629866efa535193d9e563768ff4307 upstream.
    
    (Correction in this resend: fixed function name acer_sa5_271_workaround; fixed
     the always-true condition in the function; fixed description.)
    
    On the Acer Switch Alpha 12 (model number: SA5-271), the internal SSD may not
    get detected because the port_map and CAP.nr_ports combination causes the driver
    to skip the port that is actually connected to the SSD. More specifically,
    either all SATA ports are identified as DUMMY, or all ports get ``link down''
    and never get up again.
    
    This problem occurs occasionally. When this problem occurs, CAP may hold a
    value of 0xC734FF00 or 0xC734FF01 and port_map may hold a value of 0x00 or 0x01.
    When this problem does not occur, CAP holds a value of 0xC734FF02 and port_map
    may hold a value of 0x07. Overriding the CAP value to 0xC734FF02 and port_map to
    0x7 significantly reduces the occurrence of this problem.
    
    Link: https://bugzilla.kernel.org/attachment.cgi?id=253091
    Signed-off-by: Sui Chen <suichen6@gmail.com>
    Tested-by: Damian Ivanov <damianatorrpm@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3a42bb630bd52c583f4cd0c11f2948eb766b16e
Author: Eric Anholt <eric@anholt.net>
Date:   Wed Apr 12 12:11:58 2017 -0700

    drm/msm: Expose our reservation object when exporting a dmabuf.
    
    commit 43523eba79bda8f5b4c27f8ffe20ea078d20113a upstream.
    
    Without this, polling on the dma-buf (and presumably other devices
    synchronizing against our rendering) would return immediately, even
    while the BO was busy.
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Rob Clark <robdclark@gmail.com>
    Cc: linux-arm-msm@vger.kernel.org
    Cc: freedreno@lists.freedesktop.org
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 974a4eb16e8442cd2d8c856c799a9043d86aba05
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Thu May 11 01:07:24 2017 -0700

    target: Re-add check to reject control WRITEs with overflow data
    
    commit 4ff83daa0200affe1894bd33d17bac404e3d78d4 upstream.
    
    During v4.3 when the overflow/underflow check was relaxed by
    commit c72c525022:
    
      commit c72c5250224d475614a00c1d7e54a67f77cd3410
      Author: Roland Dreier <roland@purestorage.com>
      Date:   Wed Jul 22 15:08:18 2015 -0700
    
           target: allow underflow/overflow for PR OUT etc. commands
    
    to allow underflow/overflow for Windows compliance + FCP, a
    consequence was to allow control CDBs to process overflow
    data for iscsi-target with immediate data as well.
    
    As per Roland's original change, continue to allow underflow
    cases for control CDBs to make Windows compliance + FCP happy,
    but until overflow for control CDBs is supported tree-wide,
    explicitly reject all control WRITEs with overflow following
    pre v4.3.y logic.
    
    Reported-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96d7b43b42ba55c55da2e45c9926f105565ab2d8
Author: David Arcari <darcari@redhat.com>
Date:   Fri May 26 11:37:31 2017 -0400

    cpufreq: cpufreq_register_driver() should return -ENODEV if init fails
    
    commit 6c77003677d5f1ce15f26d24360cb66c0bc07bb3 upstream.
    
    For a driver that does not set the CPUFREQ_STICKY flag, if all of the
    ->init() calls fail, cpufreq_register_driver() should return an error.
    This will prevent the driver from loading.
    
    Fixes: ce1bcfe94db8 (cpufreq: check cpufreq_policy_list instead of scanning policies for all CPUs)
    Signed-off-by: David Arcari <darcari@redhat.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acd8f917396071e9c13d2136b511b0ac4969cda8
Author: Pratyush Anand <panand@redhat.com>
Date:   Mon May 29 22:08:24 2017 +0300

    mei: make sysfs modalias format similar as uevent modalias
    
    commit 6f9193ec044a8f72d8b6ae94a5c4ab6e8b0f00ca upstream.
    
    modprobe is not able to resolve sysfs modalias for mei devices.
    
     # cat
    /sys/class/watchdog/watchdog0/device/watchdog/watchdog0/device/modalias
    mei::05b79a6f-4628-4d7f-899d-a91514cb32ab:
     # modprobe --set-version 4.9.6-200.fc25.x86_64 -R
    mei::05b79a6f-4628-4d7f-899d-a91514cb32ab:
    modprobe: FATAL: Module mei::05b79a6f-4628-4d7f-899d-a91514cb32ab: not
    found in directory /lib/modules/4.9.6-200.fc25.x86_64
     # cat /lib/modules/4.9.6-200.fc25.x86_64/modules.alias | grep
    05b79a6f-4628-4d7f-899d-a91514cb32ab
    alias mei:*:05b79a6f-4628-4d7f-899d-a91514cb32ab:*:* mei_wdt
    
    commit b26864cad1c9 ("mei: bus: add client protocol
    version to the device alias"), however sysfs modalias
    is still in formmat mei:S:uuid:*.
    
    This patch equates format of uevent and sysfs modalias so that modprobe
    is able to resolve the aliases.
    
    Fixes: commit b26864cad1c9 ("mei: bus: add client protocol version to the device alias")
    Signed-off-by: Pratyush Anand <panand@redhat.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 716dd37398adf082a153e2362d7237d8fcb3616f
Author: Matt Ranostay <matt.ranostay@konsulko.com>
Date:   Thu May 4 17:32:19 2017 -0700

    iio: proximity: as3935: fix iio_trigger_poll issue
    
    commit 9122b54f266ddee09654fe3fbc503c1a60f4a01c upstream.
    
    Using iio_trigger_poll() can oops when multiple interrupts
    happen before the first is handled.
    
    Use iio_trigger_poll_chained() instead and use the timestamp
    when processed, since it will be in theory be 2 ms max latency.
    
    Fixes: 24ddb0e4bba4 ("iio: Add AS3935 lightning sensor support")
    Signed-off-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bad3b49b01aaafc000f2ffe1302d86ca397491ed
Author: Matt Ranostay <matt.ranostay@konsulko.com>
Date:   Thu Apr 27 00:52:32 2017 -0700

    iio: proximity: as3935: fix AS3935_INT mask
    
    commit 275292d3a3d62670b1b13484707b74e5239b4bb0 upstream.
    
    AS3935 interrupt mask has been incorrect so valid lightning events
    would never trigger an buffer event. Also noise interrupt should be
    BIT(0).
    
    Fixes: 24ddb0e4bba4 ("iio: Add AS3935 lightning sensor support")
    Signed-off-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8067c911c5e9025a3beaed225d0498edfdbbf8d3
Author: Franziska Naepelt <franziska.naepelt@idt.com>
Date:   Wed May 17 12:41:19 2017 +0200

    iio: light: ltr501 Fix interchanged als/ps register field
    
    commit 7cc3bff4efe6164a0c8163331c8aa55454799f42 upstream.
    
    The register mapping for the IIO driver for the Liteon Light and Proximity
    sensor LTR501 interrupt mode is interchanged (ALS/PS).
    There is a register called INTERRUPT register (address 0x8F)
    Bit 0 represents PS measurement trigger.
    Bit 1 represents ALS measurement trigger.
    This two bit fields are interchanged within the driver.
    see datasheet page 24:
    http://optoelectronics.liteon.com/upload/download/DS86-2012-0006/S_110_LTR-501ALS-01_PrelimDS_ver1%5B1%5D.pdf
    
    Signed-off-by: Franziska Naepelt <franziska.naepelt@idt.com>
    Fixes: 7ac702b3144b6 ("iio: ltr501: Add interrupt support")
    Acked-by: Peter Meerwald-Stadler <pmeerw@pmeerw.net>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e33679f994db7bf17535fd0179db3dca26ca8bda
Author: Raveendra Padasalagi <raveendra.padasalagi@broadcom.com>
Date:   Tue May 16 12:22:42 2017 +0530

    iio: adc: bcm_iproc_adc: swap primary and secondary isr handler's
    
    commit f7d86ecf83cb66d3c4c6ac4edb1dd50c0919aa2b upstream.
    
    The third argument of devm_request_threaded_irq() is the primary
    handler. It is called in hardirq context and checks whether the
    interrupt is relevant to the device. If the primary handler returns
    IRQ_WAKE_THREAD, the secondary handler (a.k.a. handler thread) is
    scheduled to run in process context.
    
    bcm_iproc_adc.c uses the secondary handler as the primary one
    and the other way around. So this patch fixes the same, along with
    re-naming the secondary handler and primary handler names properly.
    
    Tested on the BCM9583XX iProc SoC based boards.
    
    Fixes: 4324c97ecedc ("iio: Add driver for Broadcom iproc-static-adc")
    Reported-by: Pavel Roskin <plroskin@gmail.com>
    Signed-off-by: Raveendra Padasalagi <raveendra.padasalagi@broadcom.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5a8004434f0fba8010c38129e82964dd06d06b2
Author: Oleg Drokin <green@linuxhacker.ru>
Date:   Fri May 26 23:40:33 2017 -0400

    staging/lustre/lov: remove set_fs() call from lov_getstripe()
    
    commit 0a33252e060e97ed3fbdcec9517672f1e91aaef3 upstream.
    
    lov_getstripe() calls set_fs(KERNEL_DS) so that it can handle a struct
    lov_user_md pointer from user- or kernel-space.  This changes the
    behavior of copy_from_user() on SPARC and may result in a misaligned
    access exception which in turn oopses the kernel.  In fact the
    relevant argument to lov_getstripe() is never called with a
    kernel-space pointer and so changing the address limits is unnecessary
    and so we remove the calls to save, set, and restore the address
    limits.
    
    Signed-off-by: John L. Hammond <john.hammond@intel.com>
    Reviewed-on: http://review.whamcloud.com/6150
    Intel-bug-id: https://jira.hpdd.intel.com/browse/LU-3221
    Reviewed-by: Andreas Dilger <andreas.dilger@intel.com>
    Reviewed-by: Li Wei <wei.g.li@intel.com>
    Signed-off-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5404b0c0ea852c8982a3f7ff2c4a86a80e25e840
Author: Michael Thalmeier <michael.thalmeier@hale.at>
Date:   Thu May 18 16:14:14 2017 +0200

    usb: chipidea: debug: check before accessing ci_role
    
    commit 0340ff83cd4475261e7474033a381bc125b45244 upstream.
    
    ci_role BUGs when the role is >= CI_ROLE_END.
    
    Signed-off-by: Michael Thalmeier <michael.thalmeier@hale.at>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59db536f5812707e8e035b2c68590b449c7a0cec
Author: Jisheng Zhang <jszhang@marvell.com>
Date:   Mon Apr 24 12:35:51 2017 +0000

    usb: chipidea: udc: fix NULL pointer dereference if udc_start failed
    
    commit aa1f058d7d9244423b8c5a75b9484b1115df7f02 upstream.
    
    Fix below NULL pointer dereference. we set ci->roles[CI_ROLE_GADGET]
    too early in ci_hdrc_gadget_init(), if udc_start() fails due to some
    reason, the ci->roles[CI_ROLE_GADGET] check in  ci_hdrc_gadget_destroy
    can't protect us.
    
    We fix this issue by only setting ci->roles[CI_ROLE_GADGET] if
    udc_start() succeed.
    
    [    1.398550] Unable to handle kernel NULL pointer dereference at
    virtual address 00000000
    ...
    [    1.448600] PC is at dma_pool_free+0xb8/0xf0
    [    1.453012] LR is at dma_pool_free+0x28/0xf0
    [    2.113369] [<ffffff80081817d8>] dma_pool_free+0xb8/0xf0
    [    2.118857] [<ffffff800841209c>] destroy_eps+0x4c/0x68
    [    2.124165] [<ffffff8008413770>] ci_hdrc_gadget_destroy+0x28/0x50
    [    2.130461] [<ffffff800840fa30>] ci_hdrc_probe+0x588/0x7e8
    [    2.136129] [<ffffff8008380fb8>] platform_drv_probe+0x50/0xb8
    [    2.142066] [<ffffff800837f494>] driver_probe_device+0x1fc/0x2a8
    [    2.148270] [<ffffff800837f68c>] __device_attach_driver+0x9c/0xf8
    [    2.154563] [<ffffff800837d570>] bus_for_each_drv+0x58/0x98
    [    2.160317] [<ffffff800837f174>] __device_attach+0xc4/0x138
    [    2.166072] [<ffffff800837f738>] device_initial_probe+0x10/0x18
    [    2.172185] [<ffffff800837e58c>] bus_probe_device+0x94/0xa0
    [    2.177940] [<ffffff800837c560>] device_add+0x3f0/0x560
    [    2.183337] [<ffffff8008380d20>] platform_device_add+0x180/0x240
    [    2.189541] [<ffffff800840f0e8>] ci_hdrc_add_device+0x440/0x4f8
    [    2.195654] [<ffffff8008414194>] ci_hdrc_usb2_probe+0x13c/0x2d8
    [    2.201769] [<ffffff8008380fb8>] platform_drv_probe+0x50/0xb8
    [    2.207705] [<ffffff800837f494>] driver_probe_device+0x1fc/0x2a8
    [    2.213910] [<ffffff800837f5ec>] __driver_attach+0xac/0xb0
    [    2.219575] [<ffffff800837d4b0>] bus_for_each_dev+0x60/0xa0
    [    2.225329] [<ffffff800837ec80>] driver_attach+0x20/0x28
    [    2.230816] [<ffffff800837e880>] bus_add_driver+0x1d0/0x238
    [    2.236571] [<ffffff800837fdb0>] driver_register+0x60/0xf8
    [    2.242237] [<ffffff8008380ef4>] __platform_driver_register+0x44/0x50
    [    2.248891] [<ffffff80086fd440>] ci_hdrc_usb2_driver_init+0x18/0x20
    [    2.255365] [<ffffff8008082950>] do_one_initcall+0x38/0x128
    [    2.261121] [<ffffff80086e0d00>] kernel_init_freeable+0x1ac/0x250
    [    2.267414] [<ffffff800852f0b8>] kernel_init+0x10/0x100
    [    2.272810] [<ffffff8008082680>] ret_from_fork+0x10/0x50
    
    Fixes: 3f124d233e97 ("usb: chipidea: add role init and destroy APIs")
    Signed-off-by: Jisheng Zhang <jszhang@marvell.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 405ac24a0aecc6c60134900dcb5fa46322b9a9a4
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Thu May 11 17:26:48 2017 -0700

    usb: gadget: f_mass_storage: Serialize wake and sleep execution
    
    commit dc9217b69dd6089dcfeb86ed4b3c671504326087 upstream.
    
    f_mass_storage has a memorry barrier issue with the sleep and wake
    functions that can cause a deadlock. This results in intermittent hangs
    during MSC file transfer. The host will reset the device after receiving
    no response to resume the transfer. This issue is seen when dwc3 is
    processing 2 transfer-in-progress events at the same time, invoking
    completion handlers for CSW and CBW. Also this issue occurs depending on
    the system timing and latency.
    
    To increase the chance to hit this issue, you can force dwc3 driver to
    wait and process those 2 events at once by adding a small delay (~100us)
    in dwc3_check_event_buf() whenever the request is for CSW and read the
    event count again. Avoid debugging with printk and ftrace as extra
    delays and memory barrier will mask this issue.
    
    Scenario which can lead to failure:
    -----------------------------------
    1) The main thread sleeps and waits for the next command in
       get_next_command().
    2) bulk_in_complete() wakes up main thread for CSW.
    3) bulk_out_complete() tries to wake up the running main thread for CBW.
    4) thread_wakeup_needed is not loaded with correct value in
       sleep_thread().
    5) Main thread goes to sleep again.
    
    The pattern is shown below. Note the 2 critical variables.
     * common->thread_wakeup_needed
     * bh->state
    
            CPU 0 (sleep_thread)            CPU 1 (wakeup_thread)
            ==============================  ===============================
    
                                            bh->state = BH_STATE_FULL;
                                            smp_wmb();
            thread_wakeup_needed = 0;       thread_wakeup_needed = 1;
            smp_rmb();
            if (bh->state != BH_STATE_FULL)
                    sleep again ...
    
    As pointed out by Alan Stern, this is an R-pattern issue. The issue can
    be seen when there are two wakeups in quick succession. The
    thread_wakeup_needed can be overwritten in sleep_thread, and the read of
    the bh->state maybe reordered before the write to thread_wakeup_needed.
    
    This patch applies full memory barrier smp_mb() in both sleep_thread()
    and wakeup_thread() to ensure the order which the thread_wakeup_needed
    and bh->state are written and loaded.
    
    However, a better solution in the future would be to use wait_queue
    method that takes care of managing memory barrier between waker and
    waiter.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1308eeec2fc5608370a469d96795982a6712b22b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Jun 1 13:54:30 2017 +0200

    drm: Fix oops + Xserver hang when unplugging USB drm devices
    
    commit 75fb636324a839c2c31be9f81644034c6142e469 upstream.
    
    commit a39be606f99d ("drm: Do a full device unregister when unplugging")
    causes backtraces like this one when unplugging an usb drm device while
    it is in use:
    
    usb 2-3: USB disconnect, device number 25
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 242 at drivers/gpu/drm/drm_mode_config.c:424
       drm_mode_config_cleanup+0x220/0x280 [drm]
    ...
    RIP: 0010:drm_mode_config_cleanup+0x220/0x280 [drm]
    ...
    Call Trace:
     gm12u320_modeset_cleanup+0xe/0x10 [gm12u320]
     gm12u320_driver_unload+0x35/0x70 [gm12u320]
     drm_dev_unregister+0x3c/0xe0 [drm]
     drm_unplug_dev+0x12/0x60 [drm]
     gm12u320_usb_disconnect+0x36/0x40 [gm12u320]
     usb_unbind_interface+0x72/0x280
     device_release_driver_internal+0x158/0x210
     device_release_driver+0x12/0x20
     bus_remove_device+0x104/0x180
     device_del+0x1d2/0x350
     usb_disable_device+0x9f/0x270
     usb_disconnect+0xc6/0x260
    ...
    [drm:drm_mode_config_cleanup [drm]] *ERROR* connector Unknown-1 leaked!
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 242 at drivers/gpu/drm/drm_mode_config.c:458
       drm_mode_config_cleanup+0x268/0x280 [drm]
    ...
    <same Call Trace>
    ---[ end trace 80df975dae439ed6 ]---
    general protection fault: 0000 [#1] SMP
    ...
    Call Trace:
     ? __switch_to+0x225/0x450
     drm_mode_rmfb_work_fn+0x55/0x70 [drm]
     process_one_work+0x193/0x3c0
     worker_thread+0x4a/0x3a0
    ...
    RIP: drm_framebuffer_remove+0x62/0x3f0 [drm] RSP: ffffb776c39dfd98
    ---[ end trace 80df975dae439ed7 ]---
    
    After which the system is unusable this is caused by drm_dev_unregister
    getting called immediately on unplug, which calls the drivers unload
    function which calls drm_mode_config_cleanup which removes the framebuffer
    object while userspace is still holding a reference to it.
    
    Reverting commit a39be606f99d ("drm: Do a full device unregister
    when unplugging") leads to the following oops on unplug instead,
    when userspace closes the last fd referencing the drm_dev:
    
    sysfs group 'power' not found for kobject 'card1-Unknown-1'
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 2459 at fs/sysfs/group.c:237
       sysfs_remove_group+0x80/0x90
    ...
    RIP: 0010:sysfs_remove_group+0x80/0x90
    ...
    Call Trace:
     dpm_sysfs_remove+0x57/0x60
     device_del+0xfd/0x350
     device_unregister+0x1a/0x60
     drm_sysfs_connector_remove+0x39/0x50 [drm]
     drm_connector_unregister+0x5a/0x70 [drm]
     drm_connector_unregister_all+0x45/0xa0 [drm]
     drm_modeset_unregister_all+0x12/0x30 [drm]
     drm_dev_unregister+0xca/0xe0 [drm]
     drm_put_dev+0x32/0x60 [drm]
     drm_release+0x2f3/0x380 [drm]
     __fput+0xdf/0x1e0
    ...
    ---[ end trace ecfb91ac85688bbe ]---
    BUG: unable to handle kernel NULL pointer dereference at 00000000000000a8
    IP: down_write+0x1f/0x40
    ...
    Call Trace:
     debugfs_remove_recursive+0x55/0x1b0
     drm_debugfs_connector_remove+0x21/0x40 [drm]
     drm_connector_unregister+0x62/0x70 [drm]
     drm_connector_unregister_all+0x45/0xa0 [drm]
     drm_modeset_unregister_all+0x12/0x30 [drm]
     drm_dev_unregister+0xca/0xe0 [drm]
     drm_put_dev+0x32/0x60 [drm]
     drm_release+0x2f3/0x380 [drm]
     __fput+0xdf/0x1e0
    ...
    ---[ end trace ecfb91ac85688bbf ]---
    
    This is caused by the revert moving back to drm_unplug_dev calling
    drm_minor_unregister which does:
    
            device_del(minor->kdev);
            dev_set_drvdata(minor->kdev, NULL); /* safety belt */
            drm_debugfs_cleanup(minor);
    
    Causing the sysfs entries to already be removed even though we still
    have references to them in e.g. drm_connector.
    
    Note we must call drm_minor_unregister to notify userspace of the unplug
    of the device, so calling drm_dev_unregister is not completely wrong the
    problem is that drm_dev_unregister does too much.
    
    This commit fixes drm_unplug_dev by not only reverting
    commit a39be606f99d ("drm: Do a full device unregister when unplugging")
    but by also adding a call to drm_modeset_unregister_all before the
    drm_minor_unregister calls to make sure all sysfs entries are removed
    before calling device_del(minor->kdev) thereby also fixing the second
    set of oopses caused by just reverting the commit.
    
    Fixes: a39be606f99d ("drm: Do a full device unregister when unplugging")
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Jeffy <jeffy.chen@rock-chips.com>
    Cc: Marco Diego Aurélio Mesquita <marcodiegomesquita@gmail.com>
    Reported-by: Marco Diego Aurélio Mesquita <marcodiegomesquita@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170601115430.4113-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c404f0dee7a82c08eda68aa14350072ae189a5ed
Author: Jan Kara <jack@suse.cz>
Date:   Mon May 29 13:24:55 2017 -0400

    ext4: fix fdatasync(2) after extent manipulation operations
    
    commit 67a7d5f561f469ad2fa5154d2888258ab8e6df7c upstream.
    
    Currently, extent manipulation operations such as hole punch, range
    zeroing, or extent shifting do not record the fact that file data has
    changed and thus fdatasync(2) has a work to do. As a result if we crash
    e.g. after a punch hole and fdatasync, user can still possibly see the
    punched out data after journal replay. Test generic/392 fails due to
    these problems.
    
    Fix the problem by properly marking that file data has changed in these
    operations.
    
    Fixes: a4bb6b64e39abc0e41ca077725f2a72c868e7622
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e16921d1743db8661d206cdc09af23fdaa1a1a7
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 26 17:40:52 2017 -0400

    ext4: fix data corruption with EXT4_GET_BLOCKS_ZERO
    
    commit 4f8caa60a5a13a78f26198618f21774bd6aa6498 upstream.
    
    When ext4_map_blocks() is called with EXT4_GET_BLOCKS_ZERO to zero-out
    allocated blocks and these blocks are actually converted from unwritten
    extent the following race can happen:
    
    CPU0                                    CPU1
    
    page fault                              page fault
    ...                                     ...
    ext4_map_blocks()
      ext4_ext_map_blocks()
        ext4_ext_handle_unwritten_extents()
          ext4_ext_convert_to_initialized()
            - zero out converted extent
            ext4_zeroout_es()
              - inserts extent as initialized in status tree
    
                                            ext4_map_blocks()
                                              ext4_es_lookup_extent()
                                                - finds initialized extent
                                            write data
      ext4_issue_zeroout()
        - zeroes out new extent overwriting data
    
    This problem can be reproduced by generic/340 for the fallocated case
    for the last block in the file.
    
    Fix the problem by avoiding zeroing out the area we are mapping with
    ext4_map_blocks() in ext4_ext_convert_to_initialized(). It is pointless
    to zero out this area in the first place as the caller asked us to
    convert the area to initialized because he is just going to write data
    there before the transaction finishes. To achieve this we delete the
    special case of zeroing out full extent as that will be handled by the
    cases below zeroing only the part of the extent that needs it. We also
    instruct ext4_split_extent() that the middle of extent being split
    contains data so that ext4_split_extent_at() cannot zero out full extent
    in case of ENOSPC.
    
    Fixes: 12735f881952c32b31bc4e433768f18489f79ec9
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9890b9cb75c9f661546c81098ec49fbfc24abc9c
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sun May 21 22:36:23 2017 -0400

    ext4: keep existing extra fields when inode expands
    
    commit 887a9730614727c4fff7cb756711b190593fc1df upstream.
    
    ext4_expand_extra_isize() should clear only space between old and new
    size.
    
    Fixes: 6dd4ee7cab7e # v2.6.23
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9850844e0a0e6a7e419097aa545cc1f4e849d5ea
Author: Jan Kara <jack@suse.cz>
Date:   Sun May 21 22:33:23 2017 -0400

    ext4: fix SEEK_HOLE
    
    commit 7d95eddf313c88b24f99d4ca9c2411a4b82fef33 upstream.
    
    Currently, SEEK_HOLE implementation in ext4 may both return that there's
    a hole at some offset although that offset already has data and skip
    some holes during a search for the next hole. The first problem is
    demostrated by:
    
    xfs_io -c "falloc 0 256k" -c "pwrite 0 56k" -c "seek -h 0" file
    wrote 57344/57344 bytes at offset 0
    56 KiB, 14 ops; 0.0000 sec (2.054 GiB/sec and 538461.5385 ops/sec)
    Whence  Result
    HOLE    0
    
    Where we can see that SEEK_HOLE wrongly returned offset 0 as containing
    a hole although we have written data there. The second problem can be
    demonstrated by:
    
    xfs_io -c "falloc 0 256k" -c "pwrite 0 56k" -c "pwrite 128k 8k"
           -c "seek -h 0" file
    
    wrote 57344/57344 bytes at offset 0
    56 KiB, 14 ops; 0.0000 sec (1.978 GiB/sec and 518518.5185 ops/sec)
    wrote 8192/8192 bytes at offset 131072
    8 KiB, 2 ops; 0.0000 sec (2 GiB/sec and 500000.0000 ops/sec)
    Whence  Result
    HOLE    139264
    
    Where we can see that hole at offsets 56k..128k has been ignored by the
    SEEK_HOLE call.
    
    The underlying problem is in the ext4_find_unwritten_pgoff() which is
    just buggy. In some cases it fails to update returned offset when it
    finds a hole (when no pages are found or when the first found page has
    higher index than expected), in some cases conditions for detecting hole
    are just missing (we fail to detect a situation where indices of
    returned pages are not contiguous).
    
    Fix ext4_find_unwritten_pgoff() to properly detect non-contiguous page
    indices and also handle all cases where we got less pages then expected
    in one place and handle it properly there.
    
    Fixes: c8c0df241cc2719b1262e627f999638411934f60
    CC: Zheng Liu <wenqing.lz@taobao.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9636c086532baf9b042b7b7af809cb79e7d46e92
Author: Julien Grall <julien.grall@arm.com>
Date:   Wed May 31 14:03:57 2017 +0100

    xen/privcmd: Support correctly 64KB page granularity when mapping memory
    
    commit 753c09b5652bb4fe53e2db648002ec64b32b8827 upstream.
    
    Commit 5995a68 "xen/privcmd: Add support for Linux 64KB page granularity" did
    not go far enough to support 64KB in mmap_batch_fn.
    
    The variable 'nr' is the number of 4KB chunk to map. However, when Linux
    is using 64KB page granularity the array of pages (vma->vm_private_data)
    contain one page per 64KB. Fix it by incrementing st->index correctly.
    
    Furthermore, st->va is not correctly incremented as PAGE_SIZE !=
    XEN_PAGE_SIZE.
    
    Fixes: 5995a68 ("xen/privcmd: Add support for Linux 64KB page granularity")
    Reported-by: Feng Kan <fkan@apm.com>
    Signed-off-by: Julien Grall <julien.grall@arm.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08229c119c426fc8666f1dc2822a8c38fc77fa6a
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Mar 1 09:02:33 2017 +0800

    cfq-iosched: fix the delay of cfq_group's vdisktime under iops mode
    
    commit 5be6b75610cefd1e21b98a218211922c2feb6e08 upstream.
    
    When adding a cfq_group into the cfq service tree, we use CFQ_IDLE_DELAY
    as the delay of cfq_group's vdisktime if there have been other cfq_groups
    already.
    
    When cfq is under iops mode, commit 9a7f38c42c2b ("cfq-iosched: Convert
    from jiffies to nanoseconds") could result in a large iops delay and
    lead to an abnormal io schedule delay for the added cfq_group. To fix
    it, we just need to revert to the old CFQ_IDLE_DELAY value: HZ / 5
    when iops mode is enabled.
    
    Despite having the same value, the delay of a cfq_queue in idle class
    and the delay of cfq_group are different things, so I define two new
    macros for the delay of a cfq_group under time-slice mode and iops mode.
    
    Fixes: 9a7f38c42c2b ("cfq-iosched: Convert from jiffies to nanoseconds")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Acked-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f67d28d2707dc1da24c7f94b0a80721ea89abac
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri May 5 11:57:50 2017 +0200

    dmaengine: mv_xor_v2: set DMA mask to 40 bits
    
    commit b2d3c270f9f2fb82518ac500a9849c3aaf503852 upstream.
    
    The XORv2 engine on Armada 7K/8K can only access the first 40 bits of
    the physical address space, so the DMA mask must be set accordingly.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb5afaba617739df3fea2d6312cf493822d14934
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri May 5 11:57:49 2017 +0200

    dmaengine: mv_xor_v2: remove interrupt coalescing
    
    commit 9dd4f319bac25334a869d9276b19eac9e478fd33 upstream.
    
    The current implementation of interrupt coalescing doesn't work, because
    it doesn't configure the coalescing timer, which is needed to make sure
    we get an interrupt at some point.
    
    As a fix for stable, we simply remove the interrupt coalescing
    functionality. It will be re-introduced properly in a future commit.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2c8bb06bc8322951e426cbafe45deae36a124da
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri May 5 11:57:48 2017 +0200

    dmaengine: mv_xor_v2: fix tx_submit() implementation
    
    commit 44d5887a8bf1e86915c8ff647337cb138149da82 upstream.
    
    The mv_xor_v2_tx_submit() gets the next available HW descriptor by
    calling mv_xor_v2_get_desq_write_ptr(), which reads a HW register
    telling the next available HW descriptor. This was working fine when HW
    descriptors were issued for processing directly in tx_submit().
    
    However, as part of the review process of the driver, a change was
    requested to move the actual kick-off of HW descriptors processing to
    ->issue_pending(). Due to this, reading the HW register to know the next
    available HW descriptor no longer works.
    
    So instead of using this HW register, we implemented a software index
    pointing to the next available HW descriptor.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d0918504a96d406d1a8beedab47bfb93c01ee67
Author: Hanna Hawa <hannah@marvell.com>
Date:   Fri May 5 11:57:47 2017 +0200

    dmaengine: mv_xor_v2: enable XOR engine after its configuration
    
    commit ab2c5f0a77fe49bdb6e307b397496373cb47d2c2 upstream.
    
    The engine was enabled prior to its configuration, which isn't
    correct. This patch relocates the activation of the XOR engine, to be
    after the configuration of the XOR engine.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Hanna Hawa <hannah@marvell.com>
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2a092eab8a5b0390e48c04b5d35c85d1c8900be
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri May 5 11:57:46 2017 +0200

    dmaengine: mv_xor_v2: do not use descriptors not acked by async_tx
    
    commit bc473da1ed726c975ad47f8d7d27631de11356d8 upstream.
    
    Descriptors that have not been acknowledged by the async_tx layer
    should not be re-used, so this commit adjusts the implementation of
    mv_xor_v2_prep_sw_desc() to skip descriptors for which
    async_tx_test_ack() is false.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67b1684c4a5e092263b2b9fc3670450eedb620cf
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri May 5 11:57:45 2017 +0200

    dmaengine: mv_xor_v2: properly handle wrapping in the array of HW descriptors
    
    commit 2aab4e18152cd30cb5d2f4c27629fc8a04aed979 upstream.
    
    mv_xor_v2_tasklet() is looping over completed HW descriptors. Before the
    loop, it initializes 'next_pending_hw_desc' to the first HW descriptor
    to handle, and then the loop simply increments this point, without
    taking care of wrapping when we reach the last HW descriptor. The
    'pending_ptr' index was being wrapped back to 0 at the end, but it
    wasn't used in each iteration of the loop to calculate
    next_pending_hw_desc.
    
    This commit fixes that, and makes next_pending_hw_desc a variable local
    to the loop itself.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f08c84d4c7450135ccd90e7d4ce10335d998ea6f
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Fri May 5 11:57:44 2017 +0200

    dmaengine: mv_xor_v2: handle mv_xor_v2_prep_sw_desc() error properly
    
    commit eb8df543e444492328f506adffc7dfe94111f1bd upstream.
    
    The mv_xor_v2_prep_sw_desc() is called from a few different places in
    the driver, but we never take into account the fact that it might
    return NULL. This commit fixes that, ensuring that we don't panic if
    there are no more descriptors available.
    
    Fixes: 19a340b1a820 ("dmaengine: mv_xor_v2: new driver")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2e9d10bf1a21a982ee179bab798e3801eb410af
Author: Alexander Sverdlin <alexander.sverdlin@gmail.com>
Date:   Mon May 22 16:05:23 2017 +0200

    dmaengine: ep93xx: Don't drain the transfers in terminate_all()
    
    commit 98f9de366fccee7572c646af226b2d4b4841e3b5 upstream.
    
    Draining the transfers in terminate_all callback happens with IRQs disabled,
    therefore induces huge latency:
    
     irqsoff latency trace v1.1.5 on 4.11.0
     --------------------------------------------------------------------
     latency: 39770 us, #57/57, CPU#0 | (M:preempt VP:0, KP:0, SP:0 HP:0)
        -----------------
        | task: process-129 (uid:0 nice:0 policy:2 rt_prio:50)
        -----------------
      => started at: _snd_pcm_stream_lock_irqsave
      => ended at:   snd_pcm_stream_unlock_irqrestore
    
                      _------=> CPU#
                     / _-----=> irqs-off
                    | / _----=> need-resched
                    || / _---=> hardirq/softirq
                    ||| / _--=> preempt-depth
                    |||| /     delay
      cmd     pid   ||||| time  |   caller
         \   /      |||||  \    |   /
    process-129     0d.s.    3us : _snd_pcm_stream_lock_irqsave
    process-129     0d.s1    9us : snd_pcm_stream_lock <-_snd_pcm_stream_lock_irqsave
    process-129     0d.s1   15us : preempt_count_add <-snd_pcm_stream_lock
    process-129     0d.s2   22us : preempt_count_add <-snd_pcm_stream_lock
    process-129     0d.s3   32us : snd_pcm_update_hw_ptr0 <-snd_pcm_period_elapsed
    process-129     0d.s3   41us : soc_pcm_pointer <-snd_pcm_update_hw_ptr0
    process-129     0d.s3   50us : dmaengine_pcm_pointer <-soc_pcm_pointer
    process-129     0d.s3   58us+: snd_dmaengine_pcm_pointer_no_residue <-dmaengine_pcm_pointer
    process-129     0d.s3   96us : update_audio_tstamp <-snd_pcm_update_hw_ptr0
    process-129     0d.s3  103us : snd_pcm_update_state <-snd_pcm_update_hw_ptr0
    process-129     0d.s3  112us : xrun <-snd_pcm_update_state
    process-129     0d.s3  119us : snd_pcm_stop <-xrun
    process-129     0d.s3  126us : snd_pcm_action <-snd_pcm_stop
    process-129     0d.s3  134us : snd_pcm_action_single <-snd_pcm_action
    process-129     0d.s3  141us : snd_pcm_pre_stop <-snd_pcm_action_single
    process-129     0d.s3  150us : snd_pcm_do_stop <-snd_pcm_action_single
    process-129     0d.s3  157us : soc_pcm_trigger <-snd_pcm_do_stop
    process-129     0d.s3  166us : snd_dmaengine_pcm_trigger <-soc_pcm_trigger
    process-129     0d.s3  175us : ep93xx_dma_terminate_all <-snd_dmaengine_pcm_trigger
    process-129     0d.s3  182us : preempt_count_add <-ep93xx_dma_terminate_all
    process-129     0d.s4  189us*: m2p_hw_shutdown <-ep93xx_dma_terminate_all
    process-129     0d.s4 39472us : m2p_hw_setup <-ep93xx_dma_terminate_all
    
     ... rest skipped...
    
    process-129     0d.s. 40080us : <stack trace>
     => ep93xx_dma_tasklet
     => tasklet_action
     => __do_softirq
     => irq_exit
     => __handle_domain_irq
     => vic_handle_irq
     => __irq_usr
     => 0xb66c6668
    
    Just abort the transfers and warn if the HW state is not what we expect.
    Move draining into device_synchronize callback.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7e7a4d52a95976093edea6e13bd1c09ef86665d
Author: Alexander Sverdlin <alexander.sverdlin@gmail.com>
Date:   Mon May 22 16:05:22 2017 +0200

    dmaengine: ep93xx: Always start from BASE0
    
    commit 0037ae47812b1f431cc602100d1d51f37d77b61e upstream.
    
    The current buffer is being reset to zero on device_free_chan_resources()
    but not on device_terminate_all(). It could happen that HW is restarted and
    expects BASE0 to be used, but the driver is not synchronized and will start
    from BASE1. One solution is to reset the buffer explicitly in
    m2p_hw_setup().
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd0ef520aa705475184b4639d4b7c14e36b520bb
Author: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
Date:   Mon May 15 17:49:52 2017 +0900

    dmaengine: usb-dmac: Fix DMAOR AE bit definition
    
    commit 9a445bbb1607d9f14556a532453dd86d1b7e381e upstream.
    
    This patch fixes the register definition of AE (Address Error flag) bit.
    
    Fixes: 0c1c8ff32fa2 ("dmaengine: usb-dmac: Add Renesas USB DMA Controller (USB-DMAC) driver")
    Signed-off-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
    [Shimoda: add Fixes and Cc tags in the commit log]
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e7a76b290f12668e5a57d2f7796f789d4317bc3
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue May 2 14:30:39 2017 +0100

    KVM: arm/arm64: vgic-v2: Do not use Active+Pending state for a HW interrupt
    
    commit ddf42d068f8802de122bb7efdfcb3179336053f1 upstream.
    
    When an interrupt is injected with the HW bit set (indicating that
    deactivation should be propagated to the physical distributor),
    special care must be taken so that we never mark the corresponding
    LR with the Active+Pending state (as the pending state is kept in
    the physycal distributor).
    
    Cc: stable@vger.kernel.org
    Fixes: 140b086dd197 ("KVM: arm/arm64: vgic-new: Add GICv2 world switch backend")
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a5c08a4d3fef6bc645c2ae0607f00672e367f75
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue May 2 14:30:40 2017 +0100

    KVM: arm/arm64: vgic-v3: Do not use Active+Pending state for a HW interrupt
    
    commit 3d6e77ad1489650afa20da92bb589c8778baa8da upstream.
    
    When an interrupt is injected with the HW bit set (indicating that
    deactivation should be propagated to the physical distributor),
    special care must be taken so that we never mark the corresponding
    LR with the Active+Pending state (as the pending state is kept in
    the physycal distributor).
    
    Fixes: 59529f69f504 ("KVM: arm/arm64: vgic-new: Add GICv3 world switch backend")
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81555e45852a69389a71167e913722714c91fd3f
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Jun 8 20:13:40 2017 -0700

    KVM: async_pf: avoid async pf injection when in guest mode
    
    commit 9bc1f09f6fa76fdf31eb7d6a4a4df43574725f93 upstream.
    
     INFO: task gnome-terminal-:1734 blocked for more than 120 seconds.
           Not tainted 4.12.0-rc4+ #8
     "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
     gnome-terminal- D    0  1734   1015 0x00000000
     Call Trace:
      __schedule+0x3cd/0xb30
      schedule+0x40/0x90
      kvm_async_pf_task_wait+0x1cc/0x270
      ? __vfs_read+0x37/0x150
      ? prepare_to_swait+0x22/0x70
      do_async_page_fault+0x77/0xb0
      ? do_async_page_fault+0x77/0xb0
      async_page_fault+0x28/0x30
    
    This is triggered by running both win7 and win2016 on L1 KVM simultaneously,
    and then gives stress to memory on L1, I can observed this hang on L1 when
    at least ~70% swap area is occupied on L0.
    
    This is due to async pf was injected to L2 which should be injected to L1,
    L2 guest starts receiving pagefault w/ bogus %cr2(apf token from the host
    actually), and L1 guest starts accumulating tasks stuck in D state in
    kvm_async_pf_task_wait() since missing PAGE_READY async_pfs.
    
    This patch fixes the hang by doing async pf when executing L1 guest.
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85c19308cb374be14fcd24a8c317d5d48f325f24
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jun 6 19:08:35 2017 +0100

    arm: KVM: Allow unaligned accesses at HYP
    
    commit 33b5c38852b29736f3b472dd095c9a18ec22746f upstream.
    
    We currently have the HSCTLR.A bit set, trapping unaligned accesses
    at HYP, but we're not really prepared to deal with it.
    
    Since the rest of the kernel is pretty happy about that, let's follow
    its example and set HSCTLR.A to zero. Modern CPUs don't really care.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8abce1e49c82599e6c8ced2d3276247b06148526
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jun 6 19:08:34 2017 +0100

    arm64: KVM: Allow unaligned accesses at EL2
    
    commit 78fd6dcf11468a5a131b8365580d0c613bcc02cb upstream.
    
    We currently have the SCTLR_EL2.A bit set, trapping unaligned accesses
    at EL2, but we're not really prepared to deal with it. So far, this
    has been unnoticed, until GCC 7 started emitting those (in particular
    64bit writes on a 32bit boundary).
    
    Since the rest of the kernel is pretty happy about that, let's follow
    its example and set SCTLR_EL2.A to zero. Modern CPUs don't really
    care.
    
    Reported-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9824dd75fcf6d9f10e8df08b237948d1802d5fe
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jun 6 19:08:33 2017 +0100

    arm64: KVM: Preserve RES1 bits in SCTLR_EL2
    
    commit d68c1f7fd1b7148dab5fe658321d511998969f2d upstream.
    
    __do_hyp_init has the rather bad habit of ignoring RES1 bits and
    writing them back as zero. On a v8.0-8.2 CPU, this doesn't do anything
    bad, but may end-up being pretty nasty on future revisions of the
    architecture.
    
    Let's preserve those bits so that we don't have to fix this later on.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19c9a115085edc6e2f1ee8e7c30600ba2fa932f4
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Jun 8 01:22:07 2017 -0700

    KVM: cpuid: Fix read/write out-of-bounds vulnerability in cpuid emulation
    
    commit a3641631d14571242eec0d30c9faa786cbf52d44 upstream.
    
    If "i" is the last element in the vcpu->arch.cpuid_entries[] array, it
    potentially can be exploited the vulnerability. this will out-of-bounds
    read and write.  Luckily, the effect is small:
    
            /* when no next entry is found, the current entry[i] is reselected */
            for (j = i + 1; ; j = (j + 1) % nent) {
                    struct kvm_cpuid_entry2 *ej = &vcpu->arch.cpuid_entries[j];
                    if (ej->function == e->function) {
    
    It reads ej->maxphyaddr, which is user controlled.  However...
    
                            ej->flags |= KVM_CPUID_FLAG_STATE_READ_NEXT;
    
    After cpuid_entries there is
    
            int maxphyaddr;
            struct x86_emulate_ctxt emulate_ctxt;  /* 16-byte aligned */
    
    So we have:
    
    - cpuid_entries at offset 1B50 (6992)
    - maxphyaddr at offset 27D0 (6992 + 3200 = 10192)
    - padding at 27D4...27DF
    - emulate_ctxt at 27E0
    
    And it writes in the padding.  Pfew, writing the ops field of emulate_ctxt
    would have been much worse.
    
    This patch fixes it by modding the index to avoid the out-of-bounds
    access. Worst case, i == j and ej->function == e->function,
    the loop can bail out.
    
    Reported-by: Moguofang <moguofang@huawei.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Guofang Mo <moguofang@huawei.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78f87ce2a17f0aa625451835ffaceb6b607b4a9a
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Apr 26 16:56:26 2017 +0200

    kvm: async_pf: fix rcu_irq_enter() with irqs enabled
    
    commit bbaf0e2b1c1b4f88abd6ef49576f0efb1734eae5 upstream.
    
    native_safe_halt enables interrupts, and you just shouldn't
    call rcu_irq_enter() with interrupts enabled.  Reorder the
    call with the following local_irq_disable() to respect the
    invariant.
    
    Reported-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Tested-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4809f0e56d98a64dce68b98a403b51d384fce617
Author: Juergen Gross <jgross@suse.com>
Date:   Fri May 26 12:36:47 2017 +0100

    efi: Don't issue error message when booted under Xen
    
    commit 1ea34adb87c969b89dfd83f1905a79161e9ada26 upstream.
    
    When booted as Xen dom0 there won't be an EFI memmap allocated. Avoid
    issuing an error message in this case:
    
      [    0.144079] efi: Failed to allocate new EFI memmap
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20170526113652.21339-2-matt@codeblueprint.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e273ed246617a178851f1e761dbef1716f1b34da
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Tue May 9 16:24:59 2017 -0400

    nfsd: Fix up the "supattr_exclcreat" attributes
    
    commit b26b78cb726007533d81fdf90a62e915002ef5c8 upstream.
    
    If an NFSv4 client asks us for the supattr_exclcreat, then we must
    not return attributes that are unsupported by this minor version.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Fixes: 75976de6556f ("NFSD: Return word2 bitmask if setting security..,")
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfeac838043ff964dda57c1522b502860513ca01
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue May 23 12:24:40 2017 -0400

    nfsd4: fix null dereference on replay
    
    commit 9a307403d374b993061f5992a6e260c944920d0b upstream.
    
    if we receive a compound such that:
    
            - the sessionid, slot, and sequence number in the SEQUENCE op
              match a cached succesful reply with N ops, and
            - the Nth operation of the compound is a PUTFH, PUTPUBFH,
              PUTROOTFH, or RESTOREFH,
    
    then nfsd4_sequence will return 0 and set cstate->status to
    nfserr_replay_cache.  The current filehandle will not be set.  This will
    cause us to call check_nfsd_access with first argument NULL.
    
    To nfsd4_compound it looks like we just succesfully executed an
    operation that set a filehandle, but the current filehandle is not set.
    
    Fix this by moving the nfserr_replay_cache earlier.  There was never any
    reason to have it after the encode_op label, since the only case where
    he hit that is when opdesc->op_func sets it.
    
    Note that there are two ways we could hit this case:
    
            - a client is resending a previously sent compound that ended
              with one of the four PUTFH-like operations, or
            - a client is sending a *new* compound that (incorrectly) shares
              sessionid, slot, and sequence number with a previously sent
              compound, and the length of the previously sent compound
              happens to match the position of a PUTFH-like operation in the
              new compound.
    
    The second is obviously incorrect client behavior.  The first is also
    very strange--the only purpose of a PUTFH-like operation is to set the
    current filehandle to be used by the following operation, so there's no
    point in having it as the last in a compound.
    
    So it's likely this requires a buggy or malicious client to reproduce.
    
    Reported-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34bae9b3ba98fd4c4a2658d418936452e82f3a24
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu May 11 13:10:02 2017 -0400

    drm/amdgpu/ci: disable mclk switching for high refresh rates (v2)
    
    commit 0a646f331db0eb9efc8d3a95a44872036d441d58 upstream.
    
    Even if the vblank period would allow it, it still seems to
    be problematic on some cards.
    
    v2: fix logic inversion (Nils)
    
    bug: https://bugs.freedesktop.org/show_bug.cgi?id=96868
    
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4783eb9f0828cfc439e7deeaaa19b08b7665932
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu May 18 16:29:25 2017 +0300

    crypto: gcm - wait for crypto op not signal safe
    
    commit f3ad587070d6bd961ab942b3fd7a85d00dfc934b upstream.
    
    crypto_gcm_setkey() was using wait_for_completion_interruptible() to
    wait for completion of async crypto op but if a signal occurs it
    may return before DMA ops of HW crypto provider finish, thus
    corrupting the data buffer that is kfree'ed in this case.
    
    Resolve this by using wait_for_completion() instead.
    
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d0280070e6c3f0028ca462b59db5c0a45d36299
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu May 18 16:29:24 2017 +0300

    crypto: drbg - wait for crypto op not signal safe
    
    commit a5dfefb1c3f3db81662556393fd9283511e08430 upstream.
    
    drbg_kcapi_sym_ctr() was using wait_for_completion_interruptible() to
    wait for completion of async crypto op but if a signal occurs it
    may return before DMA ops of HW crypto provider finish, thus
    corrupting the output buffer.
    
    Resolve this by using wait_for_completion() instead.
    
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d24c1c1977d80dcedf4e469be62f71644bf3383e
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jun 8 14:48:10 2017 +0100

    KEYS: encrypted: avoid encrypting/decrypting stack buffers
    
    commit e9ff56ac352446f55141aaef1553cee662b2e310 upstream.
    
    Since v4.9, the crypto API cannot (normally) be used to encrypt/decrypt
    stack buffers because the stack may be virtually mapped.  Fix this for
    the padding buffers in encrypted-keys by using ZERO_PAGE for the
    encryption padding and by allocating a temporary heap buffer for the
    decryption padding.
    
    Tested with CONFIG_DEBUG_SG=y:
            keyctl new_session
            keyctl add user master "abcdefghijklmnop" @s
            keyid=$(keyctl add encrypted desc "new user:master 25" @s)
            datablob="$(keyctl pipe $keyid)"
            keyctl unlink $keyid
            keyid=$(keyctl add encrypted desc "load $datablob" @s)
            datablob2="$(keyctl pipe $keyid)"
            [ "$datablob" = "$datablob2" ] && echo "Success!"
    
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24369761029a791388cf197f4678f8ee37b2a72f
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jun 8 14:48:47 2017 +0100

    KEYS: fix freeing uninitialized memory in key_update()
    
    commit 63a0b0509e700717a59f049ec6e4e04e903c7fe2 upstream.
    
    key_update() freed the key_preparsed_payload even if it was not
    initialized first.  This would cause a crash if userspace called
    keyctl_update() on a key with type like "asymmetric" that has a
    ->preparse() method but not an ->update() method.  Possibly it could
    even be triggered for other key types by racing with keyctl_setperm() to
    make the KEY_NEED_WRITE check fail (the permission was already checked,
    so normally it wouldn't fail there).
    
    Reproducer with key type "asymmetric", given a valid cert.der:
    
    keyctl new_session
    keyid=$(keyctl padd asymmetric desc @s < cert.der)
    keyctl setperm $keyid 0x3f000000
    keyctl update $keyid data
    
    [  150.686666] BUG: unable to handle kernel NULL pointer dereference at 0000000000000001
    [  150.687601] IP: asymmetric_key_free_kids+0x12/0x30
    [  150.688139] PGD 38a3d067
    [  150.688141] PUD 3b3de067
    [  150.688447] PMD 0
    [  150.688745]
    [  150.689160] Oops: 0000 [#1] SMP
    [  150.689455] Modules linked in:
    [  150.689769] CPU: 1 PID: 2478 Comm: keyctl Not tainted 4.11.0-rc4-xfstests-00187-ga9f6b6b8cd2f #742
    [  150.690916] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-20170228_101828-anatol 04/01/2014
    [  150.692199] task: ffff88003b30c480 task.stack: ffffc90000350000
    [  150.692952] RIP: 0010:asymmetric_key_free_kids+0x12/0x30
    [  150.693556] RSP: 0018:ffffc90000353e58 EFLAGS: 00010202
    [  150.694142] RAX: 0000000000000000 RBX: 0000000000000001 RCX: 0000000000000004
    [  150.694845] RDX: ffffffff81ee3920 RSI: ffff88003d4b0700 RDI: 0000000000000001
    [  150.697569] RBP: ffffc90000353e60 R08: ffff88003d5d2140 R09: 0000000000000000
    [  150.702483] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000001
    [  150.707393] R13: 0000000000000004 R14: ffff880038a4d2d8 R15: 000000000040411f
    [  150.709720] FS:  00007fcbcee35700(0000) GS:ffff88003fd00000(0000) knlGS:0000000000000000
    [  150.711504] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  150.712733] CR2: 0000000000000001 CR3: 0000000039eab000 CR4: 00000000003406e0
    [  150.714487] Call Trace:
    [  150.714975]  asymmetric_key_free_preparse+0x2f/0x40
    [  150.715907]  key_update+0xf7/0x140
    [  150.716560]  ? key_default_cmp+0x20/0x20
    [  150.717319]  keyctl_update_key+0xb0/0xe0
    [  150.718066]  SyS_keyctl+0x109/0x130
    [  150.718663]  entry_SYSCALL_64_fastpath+0x1f/0xc2
    [  150.719440] RIP: 0033:0x7fcbce75ff19
    [  150.719926] RSP: 002b:00007ffd5d167088 EFLAGS: 00000206 ORIG_RAX: 00000000000000fa
    [  150.720918] RAX: ffffffffffffffda RBX: 0000000000404d80 RCX: 00007fcbce75ff19
    [  150.721874] RDX: 00007ffd5d16785e RSI: 000000002866cd36 RDI: 0000000000000002
    [  150.722827] RBP: 0000000000000006 R08: 000000002866cd36 R09: 00007ffd5d16785e
    [  150.723781] R10: 0000000000000004 R11: 0000000000000206 R12: 0000000000404d80
    [  150.724650] R13: 00007ffd5d16784d R14: 00007ffd5d167238 R15: 000000000040411f
    [  150.725447] Code: 83 c4 08 31 c0 5b 41 5c 41 5d 41 5e 41 5f 5d c3 66 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 85 ff 74 23 55 48 89 e5 53 48 89 fb <48> 8b 3f e8 06 21 c5 ff 48 8b 7b 08 e8 fd 20 c5 ff 48 89 df e8
    [  150.727489] RIP: asymmetric_key_free_kids+0x12/0x30 RSP: ffffc90000353e58
    [  150.728117] CR2: 0000000000000001
    [  150.728430] ---[ end trace f7f8fe1da2d5ae8d ]---
    
    Fixes: 4d8c0250b841 ("KEYS: Call ->free_preparse() even after ->preparse() returns an error")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b253e023f8f75b109564a61d2050d818f75b4f3
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jun 8 14:48:40 2017 +0100

    KEYS: fix dereferencing NULL payload with nonzero length
    
    commit 5649645d725c73df4302428ee4e02c869248b4c5 upstream.
    
    sys_add_key() and the KEYCTL_UPDATE operation of sys_keyctl() allowed a
    NULL payload with nonzero length to be passed to the key type's
    ->preparse(), ->instantiate(), and/or ->update() methods.  Various key
    types including asymmetric, cifs.idmap, cifs.spnego, and pkcs7_test did
    not handle this case, allowing an unprivileged user to trivially cause a
    NULL pointer dereference (kernel oops) if one of these key types was
    present.  Fix it by doing the copy_from_user() when 'plen' is nonzero
    rather than when '_payload' is non-NULL, causing the syscall to fail
    with EFAULT as expected when an invalid buffer is specified.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e479742e8d195b57d63a5acbb53df04929d603c
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu May 18 16:29:23 2017 +0300

    crypto: asymmetric_keys - handle EBUSY due to backlog correctly
    
    commit e68368aed56324e2e38d4f6b044bb8cf82077fc2 upstream.
    
    public_key_verify_signature() was passing the CRYPTO_TFM_REQ_MAY_BACKLOG
    flag to akcipher_request_set_callback() but was not handling correctly
    the case where a -EBUSY error could be returned from the call to
    crypto_akcipher_verify() if backlog was used, possibly casuing
    data corruption due to use-after-free of buffers.
    
    Resolve this by handling -EBUSY correctly.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c24a70c70b7a1ff71cbf410358c6c45daccdc74
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon May 22 15:40:12 2017 -0500

    ptrace: Properly initialize ptracer_cred on fork
    
    commit c70d9d809fdeecedb96972457ee45c49a232d97f upstream.
    
    When I introduced ptracer_cred I failed to consider the weirdness of
    fork where the task_struct copies the old value by default.  This
    winds up leaving ptracer_cred set even when a process forks and
    the child process does not wind up being ptraced.
    
    Because ptracer_cred is not set on non-ptraced processes whose
    parents were ptraced this has broken the ability of the enlightenment
    window manager to start setuid children.
    
    Fix this by properly initializing ptracer_cred in ptrace_init_task
    
    This must be done with a little bit of care to preserve the current value
    of ptracer_cred when ptrace carries through fork.  Re-reading the
    ptracer_cred from the ptracing process at this point is inconsistent
    with how PT_PTRACE_CAP has been maintained all of these years.
    
    Tested-by: Takashi Iwai <tiwai@suse.de>
    Fixes: 64b875f7ac8a ("ptrace: Capture the ptracer's creds not PT_PTRACE_CAP")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3802abc6e0dfa892d7205fac199b0e2d68cec056
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 26 12:24:21 2017 +0200

    serial: ifx6x60: fix use-after-free on module unload
    
    commit 1e948479b3d63e3ac0ecca13cbf4921c7d17c168 upstream.
    
    Make sure to deregister the SPI driver before releasing the tty driver
    to avoid use-after-free in the SPI remove callback where the tty
    devices are deregistered.
    
    Fixes: 72d4724ea54c ("serial: ifx6x60: Add modem power off function in the platform reboot process")
    Cc: Jun Chen <jun.d.chen@intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04ac452dadbf2eb8cc0fba82929e94c042f7ba38
Author: Jane Chu <jane.chu@oracle.com>
Date:   Tue Jun 6 14:32:29 2017 -0600

    arch/sparc: support NR_CPUS = 4096
    
    
    [ Upstream commit c79a13734d104b5b147d7cb0870276ccdd660dae ]
    
    Linux SPARC64 limits NR_CPUS to 4064 because init_cpu_send_mondo_info()
    only allocates a single page for NR_CPUS mondo entries. Thus we cannot
    use all 4096 CPUs on some SPARC platforms.
    
    To fix, allocate (2^order) pages where order is set according to the size
    of cpu_list for possible cpus. Since cpu_list_pa and cpu_mondo_block_pa
    are not used in asm code, there are no imm13 offsets from the base PA
    that will break because they can only reach one page.
    
    Orabug: 25505750
    
    Signed-off-by: Jane Chu <jane.chu@oracle.com>
    
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Atish Patra <atish.patra@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 433a50e681df28353d63bf91881cd2bf6a0ba172
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed May 31 11:25:25 2017 -0400

    sparc64: delete old wrap code
    
    
    [ Upstream commit 0197e41ce70511dc3b71f7fefa1a676e2b5cd60b ]
    
    The old method that is using xcall and softint to get new context id is
    deleted, as it is replaced by a method of using per_cpu_secondary_mm
    without xcall to perform the context wrap.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6bb22de0c9ee64926af8509d4d32a5c4b26b5bd
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed May 31 11:25:24 2017 -0400

    sparc64: new context wrap
    
    
    [ Upstream commit a0582f26ec9dfd5360ea2f35dd9a1b026f8adda0 ]
    
    The current wrap implementation has a race issue: it is called outside of
    the ctx_alloc_lock, and also does not wait for all CPUs to complete the
    wrap.  This means that a thread can get a new context with a new version
    and another thread might still be running with the same context. The
    problem is especially severe on CPUs with shared TLBs, like sun4v. I used
    the following test to very quickly reproduce the problem:
    - start over 8K processes (must be more than context IDs)
    - write and read values at a  memory location in every process.
    
    Very quickly memory corruptions start happening, and what we read back
    does not equal what we wrote.
    
    Several approaches were explored before settling on this one:
    
    Approach 1:
    Move smp_new_mmu_context_version() inside ctx_alloc_lock, and wait for
    every process to complete the wrap. (Note: every CPU must WAIT before
    leaving smp_new_mmu_context_version_client() until every one arrives).
    
    This approach ends up with deadlocks, as some threads own locks which other
    threads are waiting for, and they never receive softint until these threads
    exit smp_new_mmu_context_version_client(). Since we do not allow the exit,
    deadlock happens.
    
    Approach 2:
    Handle wrap right during mondo interrupt. Use etrap/rtrap to enter into
    into C code, and issue new versions to every CPU.
    This approach adds some overhead to runtime: in switch_mm() we must add
    some checks to make sure that versions have not changed due to wrap while
    we were loading the new secondary context. (could be protected by PSTATE_IE
    but that degrades performance as on M7 and older CPUs as it takes 50 cycles
    for each access). Also, we still need a global per-cpu array of MMs to know
    where we need to load new contexts, otherwise we can change context to a
    thread that is going way (if we received mondo between switch_mm() and
    switch_to() time). Finally, there are some issues with window registers in
    rtrap() when context IDs are changed during CPU mondo time.
    
    The approach in this patch is the simplest and has almost no impact on
    runtime.  We use the array with mm's where last secondary contexts were
    loaded onto CPUs and bump their versions to the new generation without
    changing context IDs. If a new process comes in to get a context ID, it
    will go through get_new_mmu_context() because of version mismatch. But the
    running processes do not need to be interrupted. And wrap is quicker as we
    do not need to xcall and wait for everyone to receive and complete wrap.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 975f3cdc39154ccf7f339185883ef55933b85a77
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed May 31 11:25:23 2017 -0400

    sparc64: add per-cpu mm of secondary contexts
    
    
    [ Upstream commit 7a5b4bbf49fe86ce77488a70c5dccfe2d50d7a2d ]
    
    The new wrap is going to use information from this array to figure out
    mm's that currently have valid secondary contexts setup.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7932bfad0e826c03dfef488cda89143697c81dfe
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed May 31 11:25:22 2017 -0400

    sparc64: redefine first version
    
    
    [ Upstream commit c4415235b2be0cc791572e8e7f7466ab8f73a2bf ]
    
    CTX_FIRST_VERSION defines the first context version, but also it defines
    first context. This patch redefines it to only include the first context
    version.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65e3443b61a889b02e33537f4bd94efb23c31592
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed May 31 11:25:21 2017 -0400

    sparc64: combine activate_mm and switch_mm
    
    
    [ Upstream commit 14d0334c6748ff2aedb3f2f7fdc51ee90a9b54e7 ]
    
    The only difference between these two functions is that in activate_mm we
    unconditionally flush context. However, there is no need to keep this
    difference after fixing a bug where cpumask was not reset on a wrap. So, in
    this patch we combine these.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7590a1b15c816db318d941eee24111798d655fd
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed May 31 11:25:20 2017 -0400

    sparc64: reset mm cpumask after wrap
    
    
    [ Upstream commit 588974857359861891f478a070b1dc7ae04a3880 ]
    
    After a wrap (getting a new context version) a process must get a new
    context id, which means that we would need to flush the context id from
    the TLB before running for the first time with this ID on every CPU. But,
    we use mm_cpumask to determine if this process has been running on this CPU
    before, and this mask is not reset after a wrap. So, there are two possible
    fixes for this issue:
    
    1. Clear mm cpumask whenever mm gets a new context id
    2. Unconditionally flush context every time process is running on a CPU
    
    This patch implements the first solution
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3ad7a3e57b3c1af5c15a16b3f6c05f943035f1d
Author: James Clarke <jrtc27@jrtc27.com>
Date:   Mon May 29 20:17:56 2017 +0100

    sparc: Machine description indices can vary
    
    
    [ Upstream commit c982aa9c304bf0b9a7522fd118fed4afa5a0263c ]
    
    VIO devices were being looked up by their index in the machine
    description node block, but this often varies over time as devices are
    added and removed. Instead, store the ID and look up using the type,
    config handle and ID.
    
    Signed-off-by: James Clarke <jrtc27@jrtc27.com>
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=112541
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d665e039e6621aa9449f22d74f81ca803a748c9
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Jun 2 14:51:12 2017 -0700

    sparc64: mm: fix copy_tsb to correctly copy huge page TSBs
    
    
    [ Upstream commit 654f4807624a657f364417c2a7454f0df9961734 ]
    
    When a TSB grows beyond its current capacity, a new TSB is allocated
    and copy_tsb is called to copy entries from the old TSB to the new.
    A hash shift based on page size is used to calculate the index of an
    entry in the TSB.  copy_tsb has hard coded PAGE_SHIFT in these
    calculations.  However, for huge page TSBs the value REAL_HPAGE_SHIFT
    should be used.  As a result, when copy_tsb is called for a huge page
    TSB the entries are placed at the incorrect index in the newly
    allocated TSB.  When doing hardware table walk, the MMU does not
    match these entries and we end up in the TSB miss handling code.
    This code will then create and write an entry to the correct index
    in the TSB.  We take a performance hit for the table walk miss and
    recreation of these entries.
    
    Pass a new parameter to copy_tsb that is the page size shift to be
    used when copying the TSB.
    
    Suggested-by: Anthony Yznaga <anthony.yznaga@oracle.com>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b684e6474d0137d00c555b51f9bb4299f3e29bb
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Jun 5 11:28:57 2017 -0700

    sparc64: Add __multi3 for gcc 7.x and later.
    
    
    [ Upstream commit 1b4af13ff2cc6897557bb0b8d9e2fad4fa4d67aa ]
    
    Reported-by: Waldemar Brodkorb <wbx@openadk.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0255284edddcfbba86c8997da2836a9bafc0354a
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Thu Jun 1 18:07:55 2017 +0300

    net: bridge: start hello timer only if device is up
    
    
    [ Upstream commit aeb073241fe7a2b932e04e20c60e47718332877f ]
    
    When the transition of NO_STP -> KERNEL_STP was fixed by always calling
    mod_timer in br_stp_start, it introduced a new regression which causes
    the timer to be armed even when the bridge is down, and since we stop
    the timers in its ndo_stop() function, they never get disabled if the
    device is destroyed before it's upped.
    
    To reproduce:
    $ while :; do ip l add br0 type bridge hello_time 100; brctl stp br0 on;
    ip l del br0; done;
    
    CC: Xin Long <lucien.xin@gmail.com>
    CC: Ivan Vecera <cera@cera.cz>
    CC: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Reported-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Fixes: 6d18c732b95c ("bridge: start hello_timer when enabling KERNEL_STP in br_stp_start")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dd4daf112fd0c29e35b5f08af25ad93920e61aa
Author: Niklas Cassel <niklas.cassel@axis.com>
Date:   Tue Jun 6 09:25:00 2017 +0200

    net: stmmac: fix completely hung TX when using TSO
    
    
    [ Upstream commit 426849e6611f2092553f8d53372ae310818a6292 ]
    
    stmmac_tso_allocator can fail to set the Last Descriptor bit
    on a descriptor that actually was the last descriptor.
    
    This happens when the buffer of the last descriptor ends
    up having a size of exactly TSO_MAX_BUFF_SIZE.
    
    When the IP eventually reaches the next last descriptor,
    which actually has the bit set, the DMA will hang.
    
    When the DMA hangs, we get a tx timeout, however,
    since stmmac does not do a complete reset of the IP
    in stmmac_tx_timeout, we end up in a state with
    completely hung TX.
    
    Signed-off-by: Niklas Cassel <niklas.cassel@axis.com>
    Acked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>
    Acked-by: Alexandre TORGUE <alexandre.torgue@st.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a83564d128637c99d454cc1918b69ca84b9ce688
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Jun 5 18:31:16 2017 -0700

    net: ethoc: enable NAPI before poll may be scheduled
    
    
    [ Upstream commit d220b942a4b6a0640aee78841608f4aa5e8e185e ]
    
    ethoc_reset enables device interrupts, ethoc_interrupt may schedule a
    NAPI poll before NAPI is enabled in the ethoc_open, which results in
    device being unable to send or receive anything until it's closed and
    reopened. In case the device is flooded with ingress packets it may be
    unable to recover at all.
    Move napi_enable above ethoc_reset in the ethoc_open to fix that.
    
    Fixes: a1702857724f ("net: Add support for the OpenCores 10/100 Mbps Ethernet MAC.")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Reviewed-by: Tobias Klauser <tklauser@distanz.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a97f807363d4f3c8c849a0e12064305d5bb5a6dc
Author: Richard Haines <richard_c_haines@btinternet.com>
Date:   Mon Jun 5 16:44:40 2017 +0100

    net/ipv6: Fix CALIPSO causing GPF with datagram support
    
    
    [ Upstream commit e3ebdb20fddacded2740a333ff66781e0d28b05c ]
    
    When using CALIPSO with IPPROTO_UDP it is possible to trigger a GPF as the
    IP header may have moved.
    
    Also update the payload length after adding the CALIPSO option.
    
    Signed-off-by: Richard Haines <richard_c_haines@btinternet.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Huw Davies <huw@codeweavers.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aa89f1b07de1e8a54f9073b0a48266e864c647e
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Jun 3 09:29:25 2017 -0700

    net: ping: do not abuse udp_poll()
    
    
    [ Upstream commit 77d4b1d36926a9b8387c6b53eeba42bcaaffcea3 ]
    
    Alexander reported various KASAN messages triggered in recent kernels
    
    The problem is that ping sockets should not use udp_poll() in the first
    place, and recent changes in UDP stack finally exposed this old bug.
    
    Fixes: c319b4d76b9e ("net: ipv4: add IPPROTO_ICMP socket kind")
    Fixes: 6d0bfe226116 ("net: ipv6: Add IPv6 support to the ping socket.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Sasha Levin <alexander.levin@verizon.com>
    Cc: Solar Designer <solar@openwall.com>
    Cc: Vasiliy Kulikov <segoon@openwall.com>
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Acked-By: Lorenzo Colitti <lorenzo@google.com>
    Tested-By: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 599a4478d8cb7ad19bd946c878d59860c5df7875
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Jun 4 21:41:10 2017 -0400

    ipv6: Fix leak in ipv6_gso_segment().
    
    
    [ Upstream commit e3e86b5119f81e5e2499bea7ea1ebe8ac6aab789 ]
    
    If ip6_find_1stfragopt() fails and we return an error we have to free
    up 'segs' because nobody else is going to.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c242e1a8140e56ff0f673ff82c4c5db3df7d4d4a
Author: Mark Bloch <markb@mellanox.com>
Date:   Fri Jun 2 03:24:08 2017 +0300

    vxlan: fix use-after-free on deletion
    
    
    [ Upstream commit a53cb29b0af346af44e4abf13d7e59f807fba690 ]
    
    Adding a vxlan interface to a socket isn't symmetrical, while adding
    is done in vxlan_open() the deletion is done in vxlan_dellink().
    This can cause a use-after-free error when we close the vxlan
    interface before deleting it.
    
    We add vxlan_vs_del_dev() to match vxlan_vs_add_dev() and call
    it from vxlan_stop() to match the call from vxlan_open().
    
    Fixes: 56ef9c909b40 ("vxlan: Move socket initialization to within rtnl scope")
    Acked-by: Jiri Benc <jbenc@redhat.com>
    Tested-by: Roi Dayan <roid@mellanox.com>
    Signed-off-by: Mark Bloch <markb@mellanox.com>
    Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ee35b96825e063defe6eb333ffd3124aab5061b
Author: Yuchung Cheng <ycheng@google.com>
Date:   Wed May 31 11:21:27 2017 -0700

    tcp: disallow cwnd undo when switching congestion control
    
    
    [ Upstream commit 44abafc4cc094214a99f860f778c48ecb23422fc ]
    
    When the sender switches its congestion control during loss
    recovery, if the recovery is spurious then it may incorrectly
    revert cwnd and ssthresh to the older values set by a previous
    congestion control. Consider a congestion control (like BBR)
    that does not use ssthresh and keeps it infinite: the connection
    may incorrectly revert cwnd to an infinite value when switching
    from BBR to another congestion control.
    
    This patch fixes it by disallowing such cwnd undo operation
    upon switching congestion control.  Note that undo_marker
    is not reset s.t. the packets that were incorrectly marked
    lost would be corrected. We only avoid undoing the cwnd in
    tcp_undo_cwnd_reduction().
    
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61c92d5a533c884d93b129cd4ad412a9128db9b7
Author: Ganesh Goudar <ganeshgr@chelsio.com>
Date:   Wed May 31 18:26:28 2017 +0530

    cxgb4: avoid enabling napi twice to the same queue
    
    
    [ Upstream commit e7519f9926f1d0d11c776eb0475eb098c7760f68 ]
    
    Take uld mutex to avoid race between cxgb_up() and
    cxgb4_register_uld() to enable napi for the same uld
    queue.
    
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abbcb731d69cfa7fbcd7b77514ae04764827fdbf
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed May 31 13:15:41 2017 +0100

    ipv6: xfrm: Handle errors reported by xfrm6_find_1stfragopt()
    
    
    [ Upstream commit 6e80ac5cc992ab6256c3dae87f7e57db15e1a58c ]
    
    xfrm6_find_1stfragopt() may now return an error code and we must
    not treat it as a length.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Craig Gallek <kraig@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5e9b7ad0dd449b9296e16f4c0da9d4bb3d36d6d
Author: Lance Richardson <lrichard@redhat.com>
Date:   Mon May 29 13:25:57 2017 -0400

    vxlan: eliminate cached dst leak
    
    
    [ Upstream commit 35cf2845563c1aaa01d27bd34d64795c4ae72700 ]
    
    After commit 0c1d70af924b ("net: use dst_cache for vxlan device"),
    cached dst entries could be leaked when more than one remote was
    present for a given vxlan_fdb entry, causing subsequent netns
    operations to block indefinitely and "unregister_netdevice: waiting
    for lo to become free." messages to appear in the kernel log.
    
    Fix by properly releasing cached dst and freeing resources in this
    case.
    
    Fixes: 0c1d70af924b ("net: use dst_cache for vxlan device")
    Signed-off-by: Lance Richardson <lrichard@redhat.com>
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96d145216b5884c3ba3003b2ccd6eb2da625a77d
Author: Mintz, Yuval <Yuval.Mintz@cavium.com>
Date:   Thu Jun 1 15:57:56 2017 +0300

    bnx2x: Fix Multi-Cos
    
    
    [ Upstream commit 3968d38917eb9bd0cd391265f6c9c538d9b33ffa ]
    
    Apparently multi-cos isn't working for bnx2x quite some time -
    driver implements ndo_select_queue() to allow queue-selection
    for FCoE, but the regular L2 flow would cause it to modulo the
    fallback's result by the number of queues.
    The fallback would return a queue matching the needed tc
    [via __skb_tx_hash()], but since the modulo is by the number of TSS
    queues where number of TCs is not accounted, transmission would always
    be done by a queue configured into using TC0.
    
    Fixes: ada7c19e6d27 ("bnx2x: use XPS if possible for bnx2x_select_queue instead of pure hash")
    Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
