commit 96db90800c06d3fe3fa08eb6222fe201286bb778
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Dec 1 09:37:35 2018 +0100

    Linux 4.19.6

commit d873e63e0a01906e7a3610201c3162d694c72740
Author: Hugues Fruchet <hugues.fruchet@st.com>
Date:   Tue Sep 11 09:48:20 2018 -0400

    media: ov5640: fix auto controls values when switching to manual mode
    
    commit a8f438c684eaa4cbe6c98828eb996d5ec53e24fb upstream.
    
    When switching from auto to manual mode, V4L2 core is calling
    g_volatile_ctrl() in manual mode in order to get the manual initial value.
    Remove the manual mode check/return to not break this behaviour.
    
    Signed-off-by: Hugues Fruchet <hugues.fruchet@st.com>
    Tested-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5724c6ad1c4ca8396144e16342a356e61d837c3f
Author: Hugues Fruchet <hugues.fruchet@st.com>
Date:   Tue Sep 11 09:48:19 2018 -0400

    media: ov5640: fix wrong binning value in exposure calculation
    
    commit c2c3f42df4dd9bb231d756bacb0c897f662c6d3c upstream.
    
    ov5640_set_mode_exposure_calc() is checking binning value but
    binning value read is buggy, fix this.
    Rename ov5640_binning_on() to ov5640_get_binning() as per other
    similar functions.
    
    Signed-off-by: Hugues Fruchet <hugues.fruchet@st.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 644fefe4c6a7c892f85948b5c134c72cec4c76e4
Author: Hugues Fruchet <hugues.fruchet@st.com>
Date:   Tue Sep 11 09:48:18 2018 -0400

    media: ov5640: fix auto gain & exposure when changing mode
    
    commit 3cca8ef5f774cbd61c8db05d9aa401de9bb59c66 upstream.
    
    Ensure that auto gain and auto exposure are well restored
    when changing mode.
    
    Signed-off-by: Hugues Fruchet <hugues.fruchet@st.com>
    Reviewed-by: Jacopo Mondi <jacopo@jmondi.org>
    Tested-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8248ad512b61bef934f0c4be3a7983b85f4bf08
Author: Hugues Fruchet <hugues.fruchet@st.com>
Date:   Tue Sep 11 09:48:17 2018 -0400

    media: ov5640: fix exposure regression
    
    commit dc29a1c187eedc1d498cb567c44bbbc832b009cb upstream.
    
    Symptom was black image when capturing HD or 5Mp picture
    due to manual exposure set to 1 while it was intended to
    set autoexposure to "manual", fix this.
    
    Fixes: bf4a4b518c20 ("media: ov5640: Don't force the auto exposure state at start time").
    
    Signed-off-by: Hugues Fruchet <hugues.fruchet@st.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Tested-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905fa2f2ffad7186df9c4997b473a6376f680f99
Author: Jacopo Mondi <jacopo@jmondi.org>
Date:   Wed Jul 18 06:06:23 2018 -0400

    media: ov5640: Fix timings setup code
    
    commit bad1774ed41e98a43074e50e7d5ac9e1e848d99a upstream.
    
    As of: commit 476dec012f4c ("media: ov5640: Add horizontal and vertical
    totals") the timings parameters gets programmed separately from the
    static register values array.
    
    When changing capture mode, the vertical and horizontal totals gets
    inspected by the set_mode_exposure_calc() functions, and only later
    programmed with the new values. This means exposure, light banding
    filter and shutter gain are calculated using the previous timings, and
    are thus not correct.
    
    Fix this by programming timings right after the static register value
    table has been sent to the sensor in the ov5640_load_regs() function.
    
    Fixes: 476dec012f4c ("media: ov5640: Add horizontal and vertical totals")
    
    Tested-by: Steve Longerbeam <slongerbeam@gmail.com> # i.MX6q SabreSD, CSI-2
    Tested-by: Loic Poulain <loic.poulain@linaro.org> # Dragonboard-410c, CSI-2
    Signed-off-by: Samuel Bobrowicz <sam@elite-embedded.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c59dc6cf4fd98c8a9ebf6f807167550eb2e029fb
Author: Jacopo Mondi <jacopo@jmondi.org>
Date:   Fri Jul 6 05:51:52 2018 -0400

    media: ov5640: Re-work MIPI startup sequence
    
    commit aa4bb8b8838ffcc776a79f49a4d7476b82405349 upstream.
    
    Rework the MIPI interface startup sequence with the following changes:
    
    - Remove MIPI bus initialization from the initial settings blob
    - At set_power(1) time power up MIPI Tx/Rx and set data and clock lanes in
      LP11 during 'sleep' and 'idle' with MIPI clock in non-continuous mode.
    - At s_stream time enable/disable the MIPI interface output.
    - Restore default settings at set_power(0) time.
    
    Before this commit the sensor MIPI interface was initialized with settings
    that require a start/stop sequence at power-up time in order to force lanes
    into LP11 state, as they were initialized in LP00 when in 'sleep mode',
    which is assumed to be the sensor manual definition for the D-PHY defined
    stop mode.
    
    The stream start/stop was performed by enabling disabling clock gating,
    and had the side effect to change the lanes sleep mode configuration when
    stream was stopped.
    
    Clock gating/ungating:
    -       ret = ov5640_mod_reg(sensor, OV5640_REG_MIPI_CTRL00, BIT(5),
    -                            on ? 0 : BIT(5));
    -       if (ret)
    
    Set lanes in LP11 when in 'sleep mode':
    -       ret = ov5640_write_reg(sensor, OV5640_REG_PAD_OUTPUT00,
    -                              on ? 0x00 : 0x70);
    
    This commit fixes an issue reported by Jagan Teki on i.MX6 platforms that
    prevents the host interface from powering up correctly:
    https://lkml.org/lkml/2018/6/1/38
    
    It also improves MIPI capture operations stability on my testing platform
    where MIPI capture often failed and returned all-purple frames.
    
    Fixes: f22996db44e2 ("media: ov5640: add support of DVP parallel interface")
    
    Tested-by: Steve Longerbeam <slongerbeam@gmail.com> (i.MX6q SabreSD, CSI-2)
    Tested-by: Loic Poulain <loic.poulain@linaro.org> (Dragonboard-410c, CSI-2)
    Reported-by: Jagan Teki <jagan@amarulasolutions.com>
    Signed-off-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 016a8fc59d14c8b6aebb0ef1405b1cb5275192a3
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Mon Jul 9 13:47:30 2018 -0700

    rcu: Make need_resched() respond to urgent RCU-QS needs
    
    commit 92aa39e9dc77481b90cbef25e547d66cab901496 upstream.
    
    The per-CPU rcu_dynticks.rcu_urgent_qs variable communicates an urgent
    need for an RCU quiescent state from the force-quiescent-state processing
    within the grace-period kthread to context switches and to cond_resched().
    Unfortunately, such urgent needs are not communicated to need_resched(),
    which is sometimes used to decide when to invoke cond_resched(), for
    but one example, within the KVM vcpu_run() function.  As of v4.15, this
    can result in synchronize_sched() being delayed by up to ten seconds,
    which can be problematic, to say nothing of annoying.
    
    This commit therefore checks rcu_dynticks.rcu_urgent_qs from within
    rcu_check_callbacks(), which is invoked from the scheduling-clock
    interrupt handler.  If the current task is not an idle task and is
    not executing in usermode, a context switch is forced, and either way,
    the rcu_dynticks.rcu_urgent_qs variable is set to false.  If the current
    task is an idle task, then RCU's dyntick-idle code will detect the
    quiescent state, so no further action is required.  Similarly, if the
    task is executing in usermode, other code in rcu_check_callbacks() and
    its called functions will report the corresponding quiescent state.
    
    Reported-by: Marius Hillenbrand <mhillenb@amazon.de>
    Reported-by: David Woodhouse <dwmw2@infradead.org>
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    [ paulmck: Backported to make patch apply cleanly on older versions. ]
    Tested-by: Marius Hillenbrand <mhillenb@amazon.de>
    Cc: <stable@vger.kernel.org> # 4.12.x - 4.19.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38084377af4fc8093f02a47e43124579affa7b16
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Sun Nov 11 11:15:21 2018 +0000

    gfs2: Fix iomap buffer head reference counting bug
    
    commit c26b5aa8ef0d46035060fded475e6ab957b9f69f upstream.
    
    GFS2 passes the inode buffer head (dibh) from gfs2_iomap_begin to
    gfs2_iomap_end in iomap->private.  It sets that private pointer in
    gfs2_iomap_get.  Users of gfs2_iomap_get other than gfs2_iomap_begin
    would have to release iomap->private, but this isn't done correctly,
    leading to a leak of buffer head references.
    
    To fix this, move the code for setting iomap->private from
    gfs2_iomap_get to gfs2_iomap_begin.
    
    Fixes: 64bc06bb32 ("gfs2: iomap buffered write support")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9365cdf8db5139f63ffd51fc2743c90cb95fd991
Author: Greg Kroah-Hartman <greg@kroah.com>
Date:   Thu Oct 4 11:06:14 2018 -0700

    tty: wipe buffer if not echoing data
    
    commit b97b3d9fb57860a60592859e332de7759fd54c2e upstream.
    
    If we are not echoing the data to userspace or the console is in icanon
    mode, then perhaps it is a "secret" so we should wipe it once we are
    done with it.
    
    This mirrors the logic that the audit code has.
    
    Reported-by: aszlig <aszlig@nix.build>
    Tested-by: Milan Broz <gmazyland@gmail.com>
    Tested-by: Daniel Zatovic <daniel.zatovic@gmail.com>
    Tested-by: aszlig <aszlig@nix.build>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a2261ed3a29a180e006526718acb5712cf5bcc7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 4 11:06:13 2018 -0700

    tty: wipe buffer.
    
    commit c9a8e5fce009e3c601a43c49ea9dbcb25d1ffac5 upstream.
    
    After we are done with the tty buffer, zero it out.
    
    Reported-by: aszlig <aszlig@nix.build>
    Tested-by: Milan Broz <gmazyland@gmail.com>
    Tested-by: Daniel Zatovic <daniel.zatovic@gmail.com>
    Tested-by: aszlig <aszlig@nix.build>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e8c28f4fd641fbc9b1f13448ed7e72019c673f6
Author: Sebastien Boisvert <sebhtml@videotron.qc.ca>
Date:   Fri Oct 26 15:02:23 2018 -0700

    include/linux/pfn_t.h: force '~' to be parsed as an unary operator
    
    commit 4d54954a197175c0dcb3c82af0c0740d0c5f827a upstream.
    
    Tracing the event "fs_dax:dax_pmd_insert_mapping" with perf produces this
    warning:
    
          [fs_dax:dax_pmd_insert_mapping] unknown op '~'
    
    It is printed in process_op (tools/lib/traceevent/event-parse.c) because
    '~' is parsed as a binary operator.
    
    perf reads the format of fs_dax:dax_pmd_insert_mapping ("print fmt") from
    /sys/kernel/debug/tracing/events/fs_dax/dax_pmd_insert_mapping/format .
    
    The format contains:
    
    ~(((u64) ~(~(((1UL) << 12)-1)))
             ^
             \ interpreted as a binary operator by process_op().
    
    This part is generated in the declaration of the event class
    dax_pmd_insert_mapping_class in include/trace/events/fs_dax.h :
    
                    __print_flags_u64(__entry->pfn_val & PFN_FLAGS_MASK, "|",
                            PFN_FLAGS_TRACE),
    
    This patch adds a pair of parentheses in the declaration of PFN_FLAGS_MASK
    to make sure that '~' is parsed as a unary operator by perf.
    
    The part of the format that was problematic is now:
    
    ~(((u64) (~(~(((1UL) << 12)-1))))
    
    Now, all the '~' are parsed as unary operators.
    
    Link: http://lkml.kernel.org/r/20181021145939.8760-1-sebhtml@videotron.qc.ca
    Signed-off-by: Sebastien Boisvert <sebhtml@videotron.qc.ca>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Cc: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: "Tzvetomir Stoyanov (VMware)" <tz.stoyanov@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Ross Zwisler <zwisler@kernel.org>
    Cc: Elenie Godzaridis <arangradient@gmail.com>
    Cc: <stable@vger.kerenl.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7a121e34c79bca171e5076a4c30a17d9966e88f
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Nov 16 15:50:02 2018 -0500

    dax: Avoid losing wakeup in dax_lock_mapping_entry
    
    commit 25bbe21bf427a81b8e3ccd480ea0e1d940256156 upstream.
    
    After calling get_unlocked_entry(), you have to call
    put_unlocked_entry() to avoid subsequent waiters losing wakeups.
    
    Fixes: c2a7d2a11552 ("filesystem-dax: Introduce dax_lock_mapping_entry()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dec38554aa876700acb851b35ee0c5e28841e03
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Nov 16 15:08:53 2018 -0800

    mm, page_alloc: check for max order in hot path
    
    [ Upstream commit c63ae43ba53bc432b414fd73dd5f4b01fcb1ab43 ]
    
    Konstantin has noticed that kvmalloc might trigger the following
    warning:
    
      WARNING: CPU: 0 PID: 6676 at mm/vmstat.c:986 __fragmentation_index+0x54/0x60
      [...]
      Call Trace:
       fragmentation_index+0x76/0x90
       compaction_suitable+0x4f/0xf0
       shrink_node+0x295/0x310
       node_reclaim+0x205/0x250
       get_page_from_freelist+0x649/0xad0
       __alloc_pages_nodemask+0x12a/0x2a0
       kmalloc_large_node+0x47/0x90
       __kmalloc_node+0x22b/0x2e0
       kvmalloc_node+0x3e/0x70
       xt_alloc_table_info+0x3a/0x80 [x_tables]
       do_ip6t_set_ctl+0xcd/0x1c0 [ip6_tables]
       nf_setsockopt+0x44/0x60
       SyS_setsockopt+0x6f/0xc0
       do_syscall_64+0x67/0x120
       entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    the problem is that we only check for an out of bound order in the slow
    path and the node reclaim might happen from the fast path already.  This
    is fixable by making sure that kvmalloc doesn't ever use kmalloc for
    requests that are larger than KMALLOC_MAX_SIZE but this also shows that
    the code is rather fragile.  A recent UBSAN report just underlines that
    by the following report
    
      UBSAN: Undefined behaviour in mm/page_alloc.c:3117:19
      shift exponent 51 is too large for 32-bit type 'int'
      CPU: 0 PID: 6520 Comm: syz-executor1 Not tainted 4.19.0-rc2 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Call Trace:
       __dump_stack lib/dump_stack.c:77 [inline]
       dump_stack+0xd2/0x148 lib/dump_stack.c:113
       ubsan_epilogue+0x12/0x94 lib/ubsan.c:159
       __ubsan_handle_shift_out_of_bounds+0x2b6/0x30b lib/ubsan.c:425
       __zone_watermark_ok+0x2c7/0x400 mm/page_alloc.c:3117
       zone_watermark_fast mm/page_alloc.c:3216 [inline]
       get_page_from_freelist+0xc49/0x44c0 mm/page_alloc.c:3300
       __alloc_pages_nodemask+0x21e/0x640 mm/page_alloc.c:4370
       alloc_pages_current+0xcc/0x210 mm/mempolicy.c:2093
       alloc_pages include/linux/gfp.h:509 [inline]
       __get_free_pages+0x12/0x60 mm/page_alloc.c:4414
       dma_mem_alloc+0x36/0x50 arch/x86/include/asm/floppy.h:156
       raw_cmd_copyin drivers/block/floppy.c:3159 [inline]
       raw_cmd_ioctl drivers/block/floppy.c:3206 [inline]
       fd_locked_ioctl+0xa00/0x2c10 drivers/block/floppy.c:3544
       fd_ioctl+0x40/0x60 drivers/block/floppy.c:3571
       __blkdev_driver_ioctl block/ioctl.c:303 [inline]
       blkdev_ioctl+0xb3c/0x1a30 block/ioctl.c:601
       block_ioctl+0x105/0x150 fs/block_dev.c:1883
       vfs_ioctl fs/ioctl.c:46 [inline]
       do_vfs_ioctl+0x1c0/0x1150 fs/ioctl.c:687
       ksys_ioctl+0x9e/0xb0 fs/ioctl.c:702
       __do_sys_ioctl fs/ioctl.c:709 [inline]
       __se_sys_ioctl fs/ioctl.c:707 [inline]
       __x64_sys_ioctl+0x7e/0xc0 fs/ioctl.c:707
       do_syscall_64+0xc4/0x510 arch/x86/entry/common.c:290
       entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Note that this is not a kvmalloc path.  It is just that the fast path
    really depends on having sanitzed order as well.  Therefore move the
    order check to the fast path.
    
    Link: http://lkml.kernel.org/r/20181113094305.GM15120@dhcp22.suse.cz
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reported-by: Kyungtae Kim <kt0755@gmail.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Pavel Tatashin <pavel.tatashin@microsoft.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Aaron Lu <aaron.lu@intel.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Byoungyoung Lee <lifeasageek@gmail.com>
    Cc: "Dae R. Jeong" <threeearcat@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db89fc007b2338ba80336c4ae70687c968267b5b
Author: Yufen Yu <yuyufen@huawei.com>
Date:   Fri Nov 16 15:08:39 2018 -0800

    tmpfs: make lseek(SEEK_DATA/SEK_HOLE) return ENXIO with a negative offset
    
    [ Upstream commit 1a413646931cb14442065cfc17561e50f5b5bb44 ]
    
    Other filesystems such as ext4, f2fs and ubifs all return ENXIO when
    lseek (SEEK_DATA or SEEK_HOLE) requests a negative offset.
    
    man 2 lseek says
    
    :      EINVAL whence  is  not  valid.   Or: the resulting file offset would be
    :             negative, or beyond the end of a seekable device.
    :
    :      ENXIO  whence is SEEK_DATA or SEEK_HOLE, and the file offset is  beyond
    :             the end of the file.
    
    Make tmpfs return ENXIO under these circumstances as well.  After this,
    tmpfs also passes xfstests's generic/448.
    
    [akpm@linux-foundation.org: rewrite changelog]
    Link: http://lkml.kernel.org/r/1540434176-14349-1-git-send-email-yuyufen@huawei.com
    Signed-off-by: Yufen Yu <yuyufen@huawei.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: William Kucharski <william.kucharski@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b44fd1268bd2ffa0ae72b647c96fea44eac9cd98
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Nov 16 15:08:15 2018 -0800

    mm, memory_hotplug: check zone_movable in has_unmovable_pages
    
    [ Upstream commit 9d7899999c62c1a81129b76d2a6ecbc4655e1597 ]
    
    Page state checks are racy.  Under a heavy memory workload (e.g.  stress
    -m 200 -t 2h) it is quite easy to hit a race window when the page is
    allocated but its state is not fully populated yet.  A debugging patch to
    dump the struct page state shows
    
      has_unmovable_pages: pfn:0x10dfec00, found:0x1, count:0x0
      page:ffffea0437fb0000 count:1 mapcount:1 mapping:ffff880e05239841 index:0x7f26e5000 compound_mapcount: 1
      flags: 0x5fffffc0090034(uptodate|lru|active|head|swapbacked)
    
    Note that the state has been checked for both PageLRU and PageSwapBacked
    already.  Closing this race completely would require some sort of retry
    logic.  This can be tricky and error prone (think of potential endless
    or long taking loops).
    
    Workaround this problem for movable zones at least.  Such a zone should
    only contain movable pages.  Commit 15c30bc09085 ("mm, memory_hotplug:
    make has_unmovable_pages more robust") has told us that this is not
    strictly true though.  Bootmem pages should be marked reserved though so
    we can move the original check after the PageReserved check.  Pages from
    other zones are still prone to races but we even do not pretend that
    memory hotremove works for those so pre-mature failure doesn't hurt that
    much.
    
    Link: http://lkml.kernel.org/r/20181106095524.14629-1-mhocko@kernel.org
    Fixes: 15c30bc09085 ("mm, memory_hotplug: make has_unmovable_pages more robust")
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Baoquan He <bhe@redhat.com>
    Tested-by: Baoquan He <bhe@redhat.com>
    Acked-by: Baoquan He <bhe@redhat.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 510066729ba42381c033e4cf4492f5055cc56880
Author: Vitaly Wool <vitalywool@gmail.com>
Date:   Fri Nov 16 15:07:56 2018 -0800

    z3fold: fix possible reclaim races
    
    [ Upstream commit ca0246bb97c23da9d267c2107c07fb77e38205c9 ]
    
    Reclaim and free can race on an object which is basically fine but in
    order for reclaim to be able to map "freed" object we need to encode
    object length in the handle.  handle_to_chunks() is then introduced to
    extract object length from a handle and use it during mapping.
    
    Moreover, to avoid racing on a z3fold "headless" page release, we should
    not try to free that page in z3fold_free() if the reclaim bit is set.
    Also, in the unlikely case of trying to reclaim a page being freed, we
    should not proceed with that page.
    
    While at it, fix the page accounting in reclaim function.
    
    This patch supersedes "[PATCH] z3fold: fix reclaim lock-ups".
    
    Link: http://lkml.kernel.org/r/20181105162225.74e8837d03583a9b707cf559@gmail.com
    Signed-off-by: Vitaly Wool <vitaly.vul@sony.com>
    Signed-off-by: Jongseok Kim <ks77sj@gmail.com>
    Reported-by-by: Jongseok Kim <ks77sj@gmail.com>
    Reviewed-by: Snild Dolkow <snild@sony.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43b2ceb0d4e0147b114cb1d0112a988cbb81ecbc
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Nov 14 09:55:41 2018 -0800

    efi/arm: Revert deferred unmap of early memmap mapping
    
    [ Upstream commit 33412b8673135b18ea42beb7f5117ed0091798b6 ]
    
    Commit:
    
      3ea86495aef2 ("efi/arm: preserve early mapping of UEFI memory map longer for BGRT")
    
    deferred the unmap of the early mapping of the UEFI memory map to
    accommodate the ACPI BGRT code, which looks up the memory type that
    backs the BGRT table to validate it against the requirements of the UEFI spec.
    
    Unfortunately, this causes problems on ARM, which does not permit
    early mappings to persist after paging_init() is called, resulting
    in a WARN() splat. Since we don't support the BGRT table on ARM anway,
    let's revert ARM to the old behaviour, which is to take down the
    early mapping at the end of efi_init().
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 3ea86495aef2 ("efi/arm: preserve early mapping of UEFI memory ...")
    Link: http://lkml.kernel.org/r/20181114175544.12860-3-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5c632cfc4240a3df15b0cefed12961f4422b329
Author: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
Date:   Thu Nov 8 10:47:56 2018 +0530

    powerpc/numa: Suppress "VPHN is not supported" messages
    
    [ Upstream commit 437ccdc8ce629470babdda1a7086e2f477048cbd ]
    
    When VPHN function is not supported and during cpu hotplug event,
    kernel prints message 'VPHN function not supported. Disabling
    polling...'. Currently it prints on every hotplug event, it floods
    dmesg when a KVM guest tries to hotplug huge number of vcpus, let's
    just print once and suppress further kernel prints.
    
    Signed-off-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5ccf0038f34a5a207d9c33d8cc1e40b2faf6725
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Nov 13 16:37:54 2018 -0500

    NFSv4: Fix an Oops during delegation callbacks
    
    [ Upstream commit e39d8a186ed002854196668cb7562ffdfbc6d379 ]
    
    If the server sends a CB_GETATTR or a CB_RECALL while the filesystem is
    being unmounted, then we can Oops when releasing the inode in
    nfs4_callback_getattr() and nfs4_callback_recall().
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bc40f89f47e3b6fb63a2b186073ef1ce75dca53
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Thu Sep 20 08:59:14 2018 -0400

    kdb: Use strscpy with destination buffer size
    
    [ Upstream commit c2b94c72d93d0929f48157eef128c4f9d2e603ce ]
    
    gcc 8.1.0 warns with:
    
    kernel/debug/kdb/kdb_support.c: In function ‘kallsyms_symbol_next’:
    kernel/debug/kdb/kdb_support.c:239:4: warning: ‘strncpy’ specified bound depends on the length of the source argument [-Wstringop-overflow=]
         strncpy(prefix_name, name, strlen(name)+1);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    kernel/debug/kdb/kdb_support.c:239:31: note: length computed here
    
    Use strscpy() with the destination buffer size, and use ellipses when
    displaying truncated symbols.
    
    v2: Use strscpy()
    
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Jonathan Toppins <jtoppins@redhat.com>
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: kgdb-bugreport@lists.sourceforge.net
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4dc8439068731e22ba02cebb4fdd0d1ce3b362f6
Author: Philip Yang <Philip.Yang@amd.com>
Date:   Mon Nov 12 14:00:45 2018 -0500

    drm/amdgpu: fix bug with IH ring setup
    
    [ Upstream commit c837243ff4017f493c7d6f4ab57278d812a86859 ]
    
    The bug limits the IH ring wptr address to 40bit. When the system memory
    is bigger than 1TB, the bus address is more than 40bit, this causes the
    interrupt cannot be handled and cleared correctly.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Philip Yang <Philip.Yang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 021e2f3fc985842d756e292b7aaa1a44a8d41fd9
Author: Olof Johansson <olof@lixom.net>
Date:   Tue Oct 30 23:47:09 2018 -0700

    RISC-V: Silence some module warnings on 32-bit
    
    [ Upstream commit ef3a61406618291c46da168ff91acaa28d85944c ]
    
    Fixes:
    
    arch/riscv/kernel/module.c: In function 'apply_r_riscv_32_rela':
    ./include/linux/kern_levels.h:5:18: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'Elf32_Addr' {aka 'unsigned int'} [-Wformat=]
    arch/riscv/kernel/module.c:23:27: note: format string is defined here
    arch/riscv/kernel/module.c: In function 'apply_r_riscv_pcrel_hi20_rela':
    ./include/linux/kern_levels.h:5:18: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'Elf32_Addr' {aka 'unsigned int'} [-Wformat=]
    arch/riscv/kernel/module.c:104:23: note: format string is defined here
    arch/riscv/kernel/module.c: In function 'apply_r_riscv_hi20_rela':
    ./include/linux/kern_levels.h:5:18: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'Elf32_Addr' {aka 'unsigned int'} [-Wformat=]
    arch/riscv/kernel/module.c:146:23: note: format string is defined here
    arch/riscv/kernel/module.c: In function 'apply_r_riscv_got_hi20_rela':
    ./include/linux/kern_levels.h:5:18: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'Elf32_Addr' {aka 'unsigned int'} [-Wformat=]
    arch/riscv/kernel/module.c:190:60: note: format string is defined here
    arch/riscv/kernel/module.c: In function 'apply_r_riscv_call_plt_rela':
    ./include/linux/kern_levels.h:5:18: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'Elf32_Addr' {aka 'unsigned int'} [-Wformat=]
    arch/riscv/kernel/module.c:214:24: note: format string is defined here
    arch/riscv/kernel/module.c: In function 'apply_r_riscv_call_rela':
    ./include/linux/kern_levels.h:5:18: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'Elf32_Addr' {aka 'unsigned int'} [-Wformat=]
    arch/riscv/kernel/module.c:236:23: note: format string is defined here
    
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc9b1d7f791f4975f196e60280dd0524b31cb98a
Author: David Abdurachmanov <david.abdurachmanov@gmail.com>
Date:   Mon Nov 5 15:35:37 2018 +0100

    riscv: add missing vdso_install target
    
    [ Upstream commit f157d411a9eb170d2ee6b766da7a381962017cc9 ]
    
    Building kernel 4.20 for Fedora as RPM fails, because riscv is missing
    vdso_install target in arch/riscv/Makefile.
    
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab1a520669381c68b542f5c110a01a514ac28950
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Nov 12 16:06:51 2018 -0500

    SUNRPC: Fix a bogus get/put in generic_key_to_expire()
    
    [ Upstream commit e3d5e573a54dabdc0f9f3cb039d799323372b251 ]
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 487d58a9c3e5b2357b8bef6461ae228ad8e73f83
Author: Hannes Reinecke <hare@suse.com>
Date:   Mon Nov 12 10:35:25 2018 -0700

    block: copy ioprio in __bio_clone_fast() and bounce
    
    [ Upstream commit ca474b73896bf6e0c1eb8787eb217b0f80221610 ]
    
    We need to copy the io priority, too; otherwise the clone will run
    with a different priority than the original one.
    
    Fixes: 43b62ce3ff0a ("block: move bio io prio to a new field")
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    
    Fixed up subject, and ordered stores.
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08f94d0628c361937d463061cef8d0b9b0a1c718
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Oct 19 10:04:18 2018 -0700

    perf/x86/intel/uncore: Add more IMC PCI IDs for KabyLake and CoffeeLake CPUs
    
    [ Upstream commit c10a8de0d32e95b0b8c7c17b6dc09baea5a5a899 ]
    
    KabyLake and CoffeeLake CPUs have the same client uncore events as SkyLake.
    
    Add the PCI IDs for the KabyLake Y, U, S processor lines and CoffeeLake U,
    H, S processor lines.
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/20181019170419.378-1-kan.liang@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08fbd4e011ef27e662f26a5ee34ccc54e4eff6bf
Author: Patrick Bellasi <patrick.bellasi@arm.com>
Date:   Mon Nov 5 14:53:58 2018 +0000

    sched/fair: Fix cpu_util_wake() for 'execl' type workloads
    
    [ Upstream commit c469933e772132aad040bd6a2adc8edf9ad6f825 ]
    
    A ~10% regression has been reported for UnixBench's execl throughput
    test by Aaron Lu and Ye Xiaolong:
    
      https://lkml.org/lkml/2018/10/30/765
    
    That test is pretty simple, it does a "recursive" execve() syscall on the
    same binary. Starting from the syscall, this sequence is possible:
    
       do_execve()
         do_execveat_common()
           __do_execve_file()
             sched_exec()
               select_task_rq_fair()          <==| Task already enqueued
                 find_idlest_cpu()
                   find_idlest_group()
                     capacity_spare_wake()    <==| Functions not called from
                       cpu_util_wake()           | the wakeup path
    
    which means we can end up calling cpu_util_wake() not only from the
    "wakeup path", as its name would suggest. Indeed, the task doing an
    execve() syscall is already enqueued on the CPU we want to get the
    cpu_util_wake() for.
    
    The estimated utilization for a CPU computed in cpu_util_wake() was
    written under the assumption that function can be called only from the
    wakeup path. If instead the task is already enqueued, we end up with a
    utilization which does not remove the current task's contribution from
    the estimated utilization of the CPU.
    This will wrongly assume a reduced spare capacity on the current CPU and
    increase the chances to migrate the task on execve.
    
    The regression is tracked down to:
    
     commit d519329f72a6 ("sched/fair: Update util_est only on util_avg updates")
    
    because in that patch we turn on by default the UTIL_EST sched feature.
    However, the real issue is introduced by:
    
     commit f9be3e5961c5 ("sched/fair: Use util_est in LB and WU paths")
    
    Let's fix this by ensuring to always discount the task estimated
    utilization from the CPU's estimated utilization when the task is also
    the current one. The same benchmark of the bug report, executed on a
    dual socket 40 CPUs Intel(R) Xeon(R) CPU E5-2690 v2 @ 3.00GHz machine,
    reports these "Execl Throughput" figures (higher the better):
    
       mainline     : 48136.5 lps
       mainline+fix : 55376.5 lps
    
    which correspond to a 15% speedup.
    
    Moreover, since {cpu_util,capacity_spare}_wake() are not really only
    used from the wakeup path, let's remove this ambiguity by using a better
    matching name: {cpu_util,capacity_spare}_without().
    
    Since we are at that, let's also improve the existing documentation.
    
    Reported-by: Aaron Lu <aaron.lu@intel.com>
    Reported-by: Ye Xiaolong <xiaolong.ye@intel.com>
    Tested-by: Aaron Lu <aaron.lu@intel.com>
    Signed-off-by: Patrick Bellasi <patrick.bellasi@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Cc: Juri Lelli <juri.lelli@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Morten Rasmussen <morten.rasmussen@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Quentin Perret <quentin.perret@arm.com>
    Cc: Steve Muckle <smuckle@google.com>
    Cc: Suren Baghdasaryan <surenb@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Vincent Guittot <vincent.guittot@linaro.org>
    Fixes: f9be3e5961c5 (sched/fair: Use util_est in LB and WU paths)
    Link: https://lore.kernel.org/lkml/20181025093100.GB13236@e110439-lin/
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b771863247e812b1564d852190d61472f603181f
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Nov 6 23:37:58 2018 +1100

    powerpc/io: Fix the IO workarounds code to work with Radix
    
    [ Upstream commit 43c6494fa1499912c8177e71450c0279041152a6 ]
    
    Back in 2006 Ben added some workarounds for a misbehaviour in the
    Spider IO bridge used on early Cell machines, see commit
    014da7ff47b5 ("[POWERPC] Cell "Spider" MMIO workarounds"). Later these
    were made to be generic, ie. not tied specifically to Spider.
    
    The code stashes a token in the high bits (59-48) of virtual addresses
    used for IO (eg. returned from ioremap()). This works fine when using
    the Hash MMU, but when we're using the Radix MMU the bits used for the
    token overlap with some of the bits of the virtual address.
    
    This is because the maximum virtual address is larger with Radix, up
    to c00fffffffffffff, and in fact we use that high part of the address
    range for ioremap(), see RADIX_KERN_IO_START.
    
    As it happens the bits that are used overlap with the bits that
    differentiate an IO address vs a linear map address. If the resulting
    address lies outside the linear mapping we will crash (see below), if
    not we just corrupt memory.
    
      virtio-pci 0000:00:00.0: Using 64-bit direct DMA at offset 800000000000000
      Unable to handle kernel paging request for data at address 0xc000000080000014
      ...
      CFAR: c000000000626b98 DAR: c000000080000014 DSISR: 42000000 IRQMASK: 0
      GPR00: c0000000006c54fc c00000003e523378 c0000000016de600 0000000000000000
      GPR04: c00c000080000014 0000000000000007 0fffffff000affff 0000000000000030
             ^^^^
      ...
      NIP [c000000000626c5c] .iowrite8+0xec/0x100
      LR [c0000000006c992c] .vp_reset+0x2c/0x90
      Call Trace:
        .pci_bus_read_config_dword+0xc4/0x120 (unreliable)
        .register_virtio_device+0x13c/0x1c0
        .virtio_pci_probe+0x148/0x1f0
        .local_pci_probe+0x68/0x140
        .pci_device_probe+0x164/0x220
        .really_probe+0x274/0x3b0
        .driver_probe_device+0x80/0x170
        .__driver_attach+0x14c/0x150
        .bus_for_each_dev+0xb8/0x130
        .driver_attach+0x34/0x50
        .bus_add_driver+0x178/0x2f0
        .driver_register+0x90/0x1a0
        .__pci_register_driver+0x6c/0x90
        .virtio_pci_driver_init+0x2c/0x40
        .do_one_initcall+0x64/0x280
        .kernel_init_freeable+0x36c/0x474
        .kernel_init+0x24/0x160
        .ret_from_kernel_thread+0x58/0x7c
    
    This hasn't been a problem because CONFIG_PPC_IO_WORKAROUNDS which
    enables this code is usually not enabled. It is only enabled when it's
    selected by PPC_CELL_NATIVE which is only selected by
    PPC_IBM_CELL_BLADE and that in turn depends on BIG_ENDIAN. So in order
    to hit the bug you need to build a big endian kernel, with IBM Cell
    Blade support enabled, as well as Radix MMU support, and then boot
    that on Power9 using Radix MMU.
    
    Still we can fix the bug, so let's do that. We simply use fewer bits
    for the token, taking the union of the restrictions on the address
    from both Hash and Radix, we end up with 8 bits we can use for the
    token. The only user of the token is iowa_mem_find_bus() which only
    supports 8 token values, so 8 bits is plenty for that.
    
    Fixes: 566ca99af026 ("powerpc/mm/radix: Add dummy radix_enabled()")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73fd491d770865df4ef34232fce28db8afcb13be
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Nov 9 15:58:40 2018 -0700

    floppy: fix race condition in __floppy_read_block_0()
    
    [ Upstream commit de7b75d82f70c5469675b99ad632983c50b6f7e7 ]
    
    LKP recently reported a hang at bootup in the floppy code:
    
    [  245.678853] INFO: task mount:580 blocked for more than 120 seconds.
    [  245.679906]       Tainted: G                T 4.19.0-rc6-00172-ga9f38e1 #1
    [  245.680959] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [  245.682181] mount           D 6372   580      1 0x00000004
    [  245.683023] Call Trace:
    [  245.683425]  __schedule+0x2df/0x570
    [  245.683975]  schedule+0x2d/0x80
    [  245.684476]  schedule_timeout+0x19d/0x330
    [  245.685090]  ? wait_for_common+0xa5/0x170
    [  245.685735]  wait_for_common+0xac/0x170
    [  245.686339]  ? do_sched_yield+0x90/0x90
    [  245.686935]  wait_for_completion+0x12/0x20
    [  245.687571]  __floppy_read_block_0+0xfb/0x150
    [  245.688244]  ? floppy_resume+0x40/0x40
    [  245.688844]  floppy_revalidate+0x20f/0x240
    [  245.689486]  check_disk_change+0x43/0x60
    [  245.690087]  floppy_open+0x1ea/0x360
    [  245.690653]  __blkdev_get+0xb4/0x4d0
    [  245.691212]  ? blkdev_get+0x1db/0x370
    [  245.691777]  blkdev_get+0x1f3/0x370
    [  245.692351]  ? path_put+0x15/0x20
    [  245.692871]  ? lookup_bdev+0x4b/0x90
    [  245.693539]  blkdev_get_by_path+0x3d/0x80
    [  245.694165]  mount_bdev+0x2a/0x190
    [  245.694695]  squashfs_mount+0x10/0x20
    [  245.695271]  ? squashfs_alloc_inode+0x30/0x30
    [  245.695960]  mount_fs+0xf/0x90
    [  245.696451]  vfs_kern_mount+0x43/0x130
    [  245.697036]  do_mount+0x187/0xc40
    [  245.697563]  ? memdup_user+0x28/0x50
    [  245.698124]  ksys_mount+0x60/0xc0
    [  245.698639]  sys_mount+0x19/0x20
    [  245.699167]  do_int80_syscall_32+0x61/0x130
    [  245.699813]  entry_INT80_32+0xc7/0xc7
    
    showing that we never complete that read request. The reason is that
    the completion setup is racy - it initializes the completion event
    AFTER submitting the IO, which means that the IO could complete
    before/during the init. If it does, we are passing garbage to
    complete() and we may sleep forever waiting for the event to
    occur.
    
    Fixes: 7b7b68bba5ef ("floppy: bail out in open() if drive is not responding to block0 read")
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c587ba480e12c6efdd81622fa1a3f865093dcbf5
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Nov 8 23:55:16 2018 +0100

    crypto: simd - correctly take reqsize of wrapped skcipher into account
    
    [ Upstream commit 508a1c4df085a547187eed346f1bfe5e381797f1 ]
    
    The simd wrapper's skcipher request context structure consists
    of a single subrequest whose size is taken from the subordinate
    skcipher. However, in simd_skcipher_init(), the reqsize that is
    retrieved is not from the subordinate skcipher but from the
    cryptd request structure, whose size is completely unrelated to
    the actual wrapped skcipher.
    
    Reported-by: Qian Cai <cai@gmx.us>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Qian Cai <cai@gmx.us>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49bcb0415da9112a60f30e6a94b7cc78c6c97257
Author: Xulin Sun <xulin.sun@windriver.com>
Date:   Tue Nov 6 16:42:19 2018 +0800

    rtc: pcf2127: fix a kmemleak caused in pcf2127_i2c_gather_write
    
    [ Upstream commit 9bde0afb7a906f1dabdba37162551565740b862d ]
    
    pcf2127_i2c_gather_write() allocates memory as local variable
    for i2c_master_send(), after finishing the master transfer,
    the allocated memory should be freed. The kmemleak is reported:
    
    unreferenced object 0xffff80231e7dba80 (size 64):
      comm "hwclock", pid 27762, jiffies 4296880075 (age 356.944s)
      hex dump (first 32 bytes):
        03 00 12 03 19 02 11 13 00 80 98 18 00 00 ff ff ................
        00 50 00 00 00 00 00 00 02 00 00 00 00 00 00 00 .P..............
      backtrace:
        [<ffff000008221398>] create_object+0xf8/0x278
        [<ffff000008a96264>] kmemleak_alloc+0x74/0xa0
        [<ffff00000821070c>] __kmalloc+0x1ac/0x348
        [<ffff0000087ed1dc>] pcf2127_i2c_gather_write+0x54/0xf8
        [<ffff0000085fd9d4>] _regmap_raw_write+0x464/0x850
        [<ffff0000085fe3f4>] regmap_bulk_write+0x1a4/0x348
        [<ffff0000087ed32c>] pcf2127_rtc_set_time+0xac/0xe8
        [<ffff0000087eaad8>] rtc_set_time+0x80/0x138
        [<ffff0000087ebfb0>] rtc_dev_ioctl+0x398/0x610
        [<ffff00000823f2c0>] do_vfs_ioctl+0xb0/0x848
        [<ffff00000823fae4>] SyS_ioctl+0x8c/0xa8
        [<ffff000008083ac0>] el0_svc_naked+0x34/0x38
        [<ffffffffffffffff>] 0xffffffffffffffff
    
    Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b411f9463a781a702246514402b897c9cd87f5f0
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Sep 4 16:51:29 2018 +0200

    rtc: cmos: Do not export alarm rtc_ops when we do not support alarms
    
    [ Upstream commit fbb974ba693bbfb4e24a62181ef16d4e45febc37 ]
    
    When there is no IRQ configured for the RTC, the rtc-cmos code does not
    support alarms, all alarm rtc_ops fail with -EIO / -EINVAL.
    
    The rtc-core expects a rtc driver which does not support rtc alarms to
    not have alarm ops at all. Otherwise the wakealarm sysfs attr will read
    as empty rather then returning an error, making it impossible for
    userspace to find out beforehand if alarms are supported.
    
    A system without an IRQ for the RTC before this patch:
    [root@localhost ~]# cat /sys/class/rtc/rtc0/wakealarm
    [root@localhost ~]#
    
    After this patch:
    [root@localhost ~]# cat /sys/class/rtc/rtc0/wakealarm
    cat: /sys/class/rtc/rtc0/wakealarm: No such file or directory
    [root@localhost ~]#
    
    This fixes gnome-session + systemd trying to use suspend-then-hibernate,
    which causes systemd to abort the suspend when writing the RTC alarm fails.
    
    BugLink: https://github.com/systemd/systemd/issues/9988
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 121f89dd7024bd90e5b1ee25258345a45075a849
Author: Anson Huang <anson.huang@nxp.com>
Date:   Mon Nov 5 00:59:28 2018 +0000

    cpufreq: imx6q: add return value check for voltage scale
    
    [ Upstream commit 6ef28a04d1ccf718eee069b72132ce4aa1e52ab9 ]
    
    Add return value check for voltage scale when ARM clock
    rate change fail.
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d976d7a883cfc6bdb1199e6b6af20c211facbba
Author: Scott Wood <oss@buserror.net>
Date:   Tue Nov 6 19:49:34 2018 -0600

    KVM: PPC: Move and undef TRACE_INCLUDE_PATH/FILE
    
    [ Upstream commit 28c5bcf74fa07c25d5bd118d1271920f51ce2a98 ]
    
    TRACE_INCLUDE_PATH and TRACE_INCLUDE_FILE are used by
    <trace/define_trace.h>, so like that #include, they should
    be outside #ifdef protection.
    
    They also need to be #undefed before defining, in case multiple trace
    headers are included by the same C file.  This became the case on
    book3e after commit cf4a6085151a ("powerpc/mm: Add missing tracepoint for
    tlbie"), leading to the following build error:
    
       CC      arch/powerpc/kvm/powerpc.o
    In file included from arch/powerpc/kvm/powerpc.c:51:0:
    arch/powerpc/kvm/trace.h:9:0: error: "TRACE_INCLUDE_PATH" redefined
    [-Werror]
      #define TRACE_INCLUDE_PATH .
      ^
    In file included from arch/powerpc/kvm/../mm/mmu_decl.h:25:0,
                      from arch/powerpc/kvm/powerpc.c:48:
    ./arch/powerpc/include/asm/trace.h:224:0: note: this is the location of
    the previous definition
      #define TRACE_INCLUDE_PATH asm
      ^
    cc1: all warnings being treated as errors
    
    Reported-by: Christian Zigotzky <chzigotzky@xenosoft.de>
    Signed-off-by: Scott Wood <oss@buserror.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7ae5115e32a4ae968291eb55e710f9d3c90793f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Oct 26 15:07:31 2018 +0800

    scsi: hisi_sas: Remove set but not used variable 'dq_list'
    
    [ Upstream commit e34ff8edcae89922d187425ab0b82e6a039aa371 ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    drivers/scsi/hisi_sas/hisi_sas_v1_hw.c: In function 'start_delivery_v1_hw':
    drivers/scsi/hisi_sas/hisi_sas_v1_hw.c:907:20: warning:
     variable 'dq_list' set but not used [-Wunused-but-set-variable]
    
    drivers/scsi/hisi_sas/hisi_sas_v2_hw.c: In function 'start_delivery_v2_hw':
    drivers/scsi/hisi_sas/hisi_sas_v2_hw.c:1671:20: warning:
     variable 'dq_list' set but not used [-Wunused-but-set-variable]
    
    drivers/scsi/hisi_sas/hisi_sas_v3_hw.c: In function 'start_delivery_v3_hw':
    drivers/scsi/hisi_sas/hisi_sas_v3_hw.c:889:20: warning:
     variable 'dq_list' set but not used [-Wunused-but-set-variable]
    
    It never used since introduction in commit
    fa222db0b036 ("scsi: hisi_sas: Don't lock DQ for complete task sending")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d57a04fbd6d97a921030fdee7857485e34a94d0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Nov 2 16:35:48 2018 +0100

    scsi: lpfc: fix remoteport access
    
    [ Upstream commit f8d294324598ec85bea2779512e48c94cbe4d7c6 ]
    
    The addition of a spinlock in lpfc_debugfs_nodelist_data() introduced
    a bug that lets us not skip NULL pointers correctly, as noticed by
    gcc-8:
    
    drivers/scsi/lpfc/lpfc_debugfs.c: In function 'lpfc_debugfs_nodelist_data.constprop':
    drivers/scsi/lpfc/lpfc_debugfs.c:728:13: error: 'nrport' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (nrport->port_role & FC_PORT_ROLE_NVME_INITIATOR)
    
    This changes the logic back to what it was, while keeping the added
    spinlock.
    
    Fixes: 9e210178267b ("scsi: lpfc: Synchronize access to remoteport via rport")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08609aace6bb0a9604bcffeff621d8830d5250a1
Author: Masayoshi Mizuma <m.mizuma@jp.fujitsu.com>
Date:   Tue Oct 30 21:50:25 2018 -0400

    tools/testing/nvdimm: Fix the array size for dimm devices.
    
    [ Upstream commit af31b04b67f4fd7f639fd465a507c154c46fc9fb ]
    
    KASAN reports following global out of bounds access while
    nfit_test is being loaded. The out of bound access happens
    the following reference to dimm_fail_cmd_flags[dimm]. 'dimm' is
    over than the index value, NUM_DCR (==5).
    
      static int override_return_code(int dimm, unsigned int func, int rc)
      {
              if ((1 << func) & dimm_fail_cmd_flags[dimm]) {
    
    dimm_fail_cmd_flags[] definition:
      static unsigned long dimm_fail_cmd_flags[NUM_DCR];
    
    'dimm' is the return value of get_dimm(), and get_dimm() returns
    the index of handle[] array. The handle[] has 7 index. Let's use
    ARRAY_SIZE(handle) as the array size.
    
    KASAN report:
    
    ==================================================================
    BUG: KASAN: global-out-of-bounds in nfit_test_ctl+0x47bb/0x55b0 [nfit_test]
    Read of size 8 at addr ffffffffc10cbbe8 by task kworker/u41:0/8
    ...
    Call Trace:
     dump_stack+0xea/0x1b0
     ? dump_stack_print_info.cold.0+0x1b/0x1b
     ? kmsg_dump_rewind_nolock+0xd9/0xd9
     print_address_description+0x65/0x22e
     ? nfit_test_ctl+0x47bb/0x55b0 [nfit_test]
     kasan_report.cold.6+0x92/0x1a6
     nfit_test_ctl+0x47bb/0x55b0 [nfit_test]
    ...
    The buggy address belongs to the variable:
     dimm_fail_cmd_flags+0x28/0xffffffffffffa440 [nfit_test]
    ==================================================================
    
    Fixes: 39611e83a28c ("tools/testing/nvdimm: Make DSM failure code injection...")
    Signed-off-by: Masayoshi Mizuma <m.mizuma@jp.fujitsu.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4b25ef590f5bc8e4763612e249be67383432064
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Oct 29 16:13:40 2018 +0100

    pinctrl: meson: fix meson8b ao pull register bits
    
    [ Upstream commit a1705f02704cd8a24d434bfd0141ee8142ad277a ]
    
    AO pull register definition is inverted between pull (up/down) and
    pull enable. Fixing this allows to properly apply bias setting
    through pinconf
    
    Fixes: 0fefcb6876d0 ("pinctrl: Add support for Meson8b")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93620bc4de8a00aedc08c34728ea5a472989d6ef
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Oct 29 16:13:39 2018 +0100

    pinctrl: meson: fix meson8 ao pull register bits
    
    [ Upstream commit e91b162d2868672d06010f34aa83d408db13d3c6 ]
    
    AO pull register definition is inverted between pull (up/down) and
    pull enable. Fixing this allows to properly apply bias setting
    through pinconf
    
    Fixes: 6ac730951104 ("pinctrl: add driver for Amlogic Meson SoCs")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c74e3fc6d0c3dc22a4022c9729cf269278fcdde5
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Oct 29 16:13:38 2018 +0100

    pinctrl: meson: fix gxl ao pull register bits
    
    [ Upstream commit ed3a2b74f3eb34c84c8377353f4730f05acdfd05 ]
    
    AO pull register definition is inverted between pull (up/down) and
    pull enable. Fixing this allows to properly apply bias setting
    through pinconf
    
    Fixes: 0f15f500ff2c ("pinctrl: meson: Add GXL pinctrl definitions")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5922ab4adc13203f745bb82557e0ffd49c4a1cbb
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Oct 29 16:13:37 2018 +0100

    pinctrl: meson: fix gxbb ao pull register bits
    
    [ Upstream commit 4bc51e1e350cd4707ce6e551a93eae26d40b9889 ]
    
    AO pull register definition is inverted between pull (up/down) and
    pull enable. Fixing this allows to properly apply bias setting
    through pinconf
    
    Fixes: 468c234f9ed7 ("pinctrl: amlogic: Add support for Amlogic Meson GXBB SoC")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71ab26e917de919b0120738955d5734d02e58d73
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Oct 23 18:03:19 2018 +0200

    pinctrl: meson: fix pinconf bias disable
    
    [ Upstream commit e39f9dd8206ad66992ac0e6218ef1ba746f2cce9 ]
    
    If a bias is enabled on a pin of an Amlogic SoC, calling .pin_config_set()
    with PIN_CONFIG_BIAS_DISABLE will not disable the bias. Instead it will
    force a pull-down bias on the pin.
    
    Instead of the pull type register bank, the driver should access the pull
    enable register bank.
    
    Fixes: 6ac730951104 ("pinctrl: add driver for Amlogic Meson SoCs")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20663629f6ae7bc072a8bbc658721bd99626a26d
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Tue Oct 30 20:29:53 2018 +0200

    fanotify: fix handling of events on child sub-directory
    
    commit b469e7e47c8a075cc08bcd1e85d4365134bdcdd5 upstream.
    
    When an event is reported on a sub-directory and the parent inode has
    a mark mask with FS_EVENT_ON_CHILD|FS_ISDIR, the event will be sent to
    fsnotify() even if the event type is not in the parent mark mask
    (e.g. FS_OPEN).
    
    Further more, if that event happened on a mount or a filesystem with
    a mount/sb mark that does have that event type in their mask, the "on
    child" event will be reported on the mount/sb mark.  That is not
    desired, because user will get a duplicate event for the same action.
    
    Note that the event reported on the victim inode is never merged with
    the event reported on the parent inode, because of the check in
    should_merge(): old_fsn->inode == new_fsn->inode.
    
    Fix this by looking for a match of an actual event type (i.e. not just
    FS_ISDIR) in parent's inode mark mask and by not reporting an "on child"
    event to group if event type is only found on mount/sb marks.
    
    [backport hint: The bug seems to have always been in fanotify, but this
                    patch will only apply cleanly to v4.19.y]
    
    Cc: <stable@vger.kernel.org> # v4.19
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    [amir: backport to v4.19]
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dc3c17cdb9fb1dd9ff95c6696f7c13821836cd2
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Thu Oct 4 00:25:33 2018 +0300

    fsnotify: generalize handling of extra event flags
    
    commit 007d1e8395eaa59b0e7ad9eb2b53a40859446a88 upstream.
    
    FS_EVENT_ON_CHILD gets a special treatment in fsnotify() because it is
    not a flag specifying an event type, but rather an extra flags that may
    be reported along with another event and control the handling of the
    event by the backend.
    
    FS_ISDIR is also an "extra flag" and not an "event type" and therefore
    desrves the same treatment. With inotify/dnotify backends it was never
    possible to set FS_ISDIR in mark masks, so it did not matter.
    With fanotify backend, mark adding code jumps through hoops to avoid
    setting the FS_ISDIR in the commulative object mask.
    
    Separate the constant ALL_FSNOTIFY_EVENTS to ALL_FSNOTIFY_FLAGS and
    ALL_FSNOTIFY_EVENTS, so the latter can be used to test for specific
    event types.
    
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6763372b816c4bf98f6f103bba4c4bf47e3ae0d8
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Mon Sep 10 09:39:03 2018 -0700

    IB/hfi1: Eliminate races in the SDMA send error path
    
    commit a0e0cb82804a6a21d9067022c2dfdf80d11da429 upstream.
    
    pq_update() can only be called in two places: from the completion
    function when the complete (npkts) sequence of packets has been
    submitted and processed, or from setup function if a subset of the
    packets were submitted (i.e. the error path).
    
    Currently both paths can call pq_update() if an error occurrs.  This
    race will cause the n_req value to go negative, hanging file_close(),
    or cause a crash by freeing the txlist more than once.
    
    Several variables are used to determine SDMA send state.  Most of
    these are unnecessary, and have code inspectible races between the
    setup function and the completion function, in both the send path and
    the error path.
    
    The request 'status' value can be set by the setup or by the
    completion function.  This is code inspectibly racy.  Since the status
    is not needed in the completion code or by the caller it has been
    removed.
    
    The request 'done' value races between usage by the setup and the
    completion function.  The completion function does not need this.
    When the number of processed packets matches npkts, it is done.
    
    The 'has_error' value races between usage of the setup and the
    completion function.  This can cause incorrect error handling and leave
    the n_req in an incorrect value (i.e. negative).
    
    Simplify the code by removing all of the unneeded state checks and
    variables.
    
    Clean up iovs node when it is freed.
    
    Eliminate race conditions in the error path:
    
    If all packets are submitted, the completion handler will set the
    completion status correctly (ok or aborted).
    
    If all packets are not submitted, the caller must wait until the
    submitted packets have completed, and then set the completion status.
    
    These two change eliminate the race condition in the error path.
    
    Reviewed-by: Mitko Haralanov <mitko.haralanov@intel.com>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87403e35bc56d3c7fa626c1ce1eaeda30763347c
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Wed Oct 17 14:09:35 2018 -0700

    ACPICA: AML interpreter: add region addresses in global list during initialization
    
    commit 4abb951b73ff0a8a979113ef185651aa3c8da19b upstream.
    
    The table load process omitted adding the operation region address
    range to the global list. This omission is problematic because the OS
    queries the global list to check for address range conflicts before
    deciding which drivers to load. This commit may result in warning
    messages that look like the following:
    
    [    7.871761] ACPI Warning: system_IO range 0x00000428-0x0000042F conflicts with op_region 0x00000400-0x0000047F (\PMIO) (20180531/utaddress-213)
    [    7.871769] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
    
    However, these messages do not signify regressions. It is a result of
    properly adding address ranges within the global address list.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200011
    Tested-by: Jean-Marc Lenoir <archlinux@jihemel.com>
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5a9ba4324d5263b7b86cb8fd4779d3f159663db
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Fri Nov 9 15:01:50 2018 +0100

    can: flexcan: remove not needed struct flexcan_priv::tx_mb and struct flexcan_priv::tx_mb_idx
    
    commit e05237f9da42ee52e73acea0bb082d788e111229 upstream.
    
    The previous patch changes the TX path to always use the last mailbox
    regardless of the used offload scheme (rx-fifo or timestamp based). This
    means members "tx_mb" and "tx_mb_idx" of the struct flexcan_priv don't
    depend on the offload scheme, so replace them by compile time constants.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24e5589791d09214e31335ae2b581c668d4803b7
Author: Alexander Stein <alexander.stein@systec-electronic.com>
Date:   Thu Oct 11 17:01:25 2018 +0200

    can: flexcan: Always use last mailbox for TX
    
    commit cbffaf7aa09edbaea2bc7dc440c945297095e2fd upstream.
    
    Essentially this patch moves the TX mailbox to position 63, regardless
    of timestamp based offloading or RX FIFO. So mainly the iflag register
    usage regarding TX has changed. The rest is consolidating RX FIFO and
    timestamp offloading as they now use both the same TX mailbox.
    
    The reason is a very annoying behavior regarding sending RTR frames when
    _not_ using RX FIFO:
    
    If a TX mailbox sent a RTR frame it becomes a RX mailbox. For that
    reason flexcan_irq disables the TX mailbox again. But if during the time
    the RTR was sent and the TX mailbox is disabled a new CAN frames is
    received, it is lost without notice. The reason is that so-called
    "Move-in" process starts from the lowest mailbox which happen to be a TX
    mailbox set to EMPTY.
    
    Steps to reproduce (I used an imx7d):
    1. generate regular bursts of messages
    2. send a RTR from flexcan with higher priority than burst messages every
       1ms, e.g. cangen -I 0x100 -L 0 -g 1 -R can0
    3. notice a lost message without notification after some seconds
    
    When running an iperf in parallel this problem is occurring even more
    frequently. Using filters is not possible as at least one single CAN-ID
    is allowed. Handling the TX MB during RX is also not possible as there
    is no race-free disable of RX MB.
    
    There is still a slight window when the described problem can occur. But
    for that all RX MB must be in use which is essentially next to an
    overrun. Still there will be no indication if it ever occurs.
    
    Signed-off-by: Alexander Stein <alexander.stein@systec-electronic.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50d94ac1da7457ac66cc6e4dd4e0d804a9bfdd0e
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Oct 27 10:36:54 2018 +0200

    can: hi311x: Use level-triggered interrupt
    
    commit f164d0204b1156a7e0d8d1622c1a8d25752befec upstream.
    
    If the hi3110 shares the SPI bus with another traffic-intensive device
    and packets are received in high volume (by a separate machine sending
    with "cangen -g 0 -i -x"), reception stops after a few minutes and the
    counter in /proc/interrupts stops incrementing.  Bus state is "active".
    Bringing the interface down and back up reconvenes the reception.  The
    issue is not observed when the hi3110 is the sole device on the SPI bus.
    
    Using a level-triggered interrupt makes the issue go away and lets the
    hi3110 successfully receive 2 GByte over the course of 5 days while a
    ks8851 Ethernet chip on the same SPI bus handles 6 GByte of traffic.
    
    Unfortunately the hi3110 datasheet is mum on the trigger type.  The pin
    description on page 3 only specifies the polarity (active high):
    http://www.holtic.com/documents/371-hi-3110_v-rev-kpdf.do
    
    Cc: Mathias Duckeck <m.duckeck@kunbus.de>
    Cc: Akshay Bhat <akshay.bhat@timesys.com>
    Cc: Casey Fitzpatrick <casey.fitzpatrick@timesys.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf8295faed733debbe5625ec1a0c137f1170ac2f
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Oct 24 10:27:12 2018 +0200

    can: raw: check for CAN FD capable netdev in raw_sendmsg()
    
    commit a43608fa77213ad5ac5f75994254b9f65d57cfa0 upstream.
    
    When the socket is CAN FD enabled it can handle CAN FD frame
    transmissions.  Add an additional check in raw_sendmsg() as a CAN2.0 CAN
    driver (non CAN FD) should never see a CAN FD frame. Due to the commonly
    used can_dropped_invalid_skb() function the CAN 2.0 driver would drop
    that CAN FD frame anyway - but with this patch the user gets a proper
    -EINVAL return code.
    
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04f985776f0428a39cc6a68be5c74c3cf2d8cf83
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 18 11:40:39 2018 +0200

    can: flexcan: handle tx-complete CAN frames via rx-offload infrastructure
    
    commit ed72bc8bcb9277061e753faf300b20f97323761c upstream.
    
    Current flexcan driver will put TX-ECHO in regular unsorted way, in
    this case TX-ECHO can come after the response to the same TXed message.
    In some cases, for example for J1939 stack, things will break.
    This patch is using new rx-offload API to put the messages just in the
    right place.
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f699c3222635eaf919f3d4716fe0e0565cd4afad
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 18 11:40:41 2018 +0200

    can: flexcan: use can_rx_offload_queue_sorted() for flexcan_irq_bus_*()
    
    commit d788905f68fd4714c82936f6f7f1d3644d7ae7ef upstream.
    
    Currently, in case of bus error, driver will generate error message and put
    in the tail of the message queue. To avoid confusions, this change should
    place the bus related messages in proper order.
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ce9d61a65373d99ad310bf5d1d3786a3d637c72
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 18 11:40:40 2018 +0200

    can: rx-offload: rename can_rx_offload_irq_queue_err_skb() to can_rx_offload_queue_tail()
    
    commit 4530ec36bb1e0d24f41c33229694adacda3d5d89 upstream.
    
    This function has nothing todo with error.
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 169130c87a88c1d85433cb0ef469c826dbe2f2d1
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 18 11:40:38 2018 +0200

    can: rx-offload: introduce can_rx_offload_get_echo_skb() and can_rx_offload_queue_sorted() functions
    
    commit 55059f2b7f868cd43b3ad30e28e18347e1b46ace upstream.
    
    Current CAN framework can't guarantee proper/chronological order
    of RX and TX-ECHO messages. To make this possible, drivers should use
    this functions instead of can_get_echo_skb().
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 474673a94f1758a64b22c0c012eaae2ecdcf9810
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 14:15:13 2018 +0100

    can: dev: __can_get_echo_skb(): print error message, if trying to echo non existing skb
    
    commit 7da11ba5c5066dadc2e96835a6233d56d7b7764a upstream.
    
    Prior to echoing a successfully transmitted CAN frame (by calling
    can_get_echo_skb()), CAN drivers have to put the CAN frame (by calling
    can_put_echo_skb() in the transmit function). These put and get function
    take an index as parameter, which is used to identify the CAN frame.
    
    A driver calling can_get_echo_skb() with a index not pointing to a skb
    is a BUG, so add an appropriate error message.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3b8d98e3758514443b39f9e719df03369f18d2b
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 14:05:26 2018 +0100

    can: dev: __can_get_echo_skb(): Don't crash the kernel if can_priv::echo_skb is accessed out of bounds
    
    commit e7a6994d043a1e31d5b17706a22ce33d2a3e4cdc upstream.
    
    If the "struct can_priv::echo_skb" is accessed out of bounds would lead
    to a kernel crash. Better print a sensible warning message instead and
    try to recover.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfc8ed910312c97fbf7ddf3fca8e65cb76894fa5
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 11:08:21 2018 +0100

    can: dev: __can_get_echo_skb(): replace struct can_frame by canfd_frame to access frame length
    
    commit 200f5c49f7a2cd694436bfc6cb0662b794c96736 upstream.
    
    This patch replaces the use of "struct can_frame::can_dlc" by "struct
    canfd_frame::len" to access the frame's length. As it is ensured that
    both structures have a compatible memory layout for this member this is
    no functional change. Futher, this compatibility is documented in a
    comment.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5877d2c0eac8f19ff8f4a8814708feb71b0fab27
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 10:37:46 2018 +0100

    can: dev: can_get_echo_skb(): factor out non sending code to __can_get_echo_skb()
    
    commit a4310fa2f24687888ce80fdb0e88583561a23700 upstream.
    
    This patch factors out all non sending parts of can_get_echo_skb() into
    a seperate function __can_get_echo_skb(), so that it can be re-used in
    an upcoming patch.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d2aed6439cf41bcaee3d44eff5bfacb2bfb3039
Author: Pankaj Bansal <pankaj.bansal@nxp.com>
Date:   Wed Aug 1 19:36:46 2018 +0530

    can: flexcan: Unlock the MB unconditionally
    
    commit 5178b7cd8e42448b1041716f124734eaaa36ca50 upstream.
    
    Unlock the MB irrespective of reception method being FIFO or timestamp
    based. It is optional but recommended to unlock Mailbox as soon as
    possible and make it available for reception.
    
    Reported-by: Alexander Stein <alexander.stein@systec-electronic.com>
    Signed-off-by: Pankaj Bansal <pankaj.bansal@nxp.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09132a6b01a75c5501aa05b388c91b4449459998
Author: Thomas Zimmermann <tzimmermann@suse.de>
Date:   Thu Nov 15 11:42:16 2018 +0100

    drm/ast: Remove existing framebuffers before loading driver
    
    commit 5478ad10e7850ce3d8b7056db05ddfa3c9ddad9a upstream.
    
    If vesafb attaches to the AST device, it configures the framebuffer memory
    for uncached access by default. When ast.ko later tries to attach itself to
    the device, it wants to use write-combining on the framebuffer memory, but
    vesefb's existing configuration for uncached access takes precedence. This
    results in reduced performance.
    
    Removing the framebuffer's configuration before loding the AST driver fixes
    the problem. Other DRM drivers already contain equivalent code.
    
    Link: https://bugzilla.opensuse.org/show_bug.cgi?id=1112963
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: <stable@vger.kernel.org>
    Tested-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Tested-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80142af39bd9e403d02d0595736664f6944f1a57
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Tue Oct 30 11:34:46 2018 +0800

    drm/ast: fixed cursor may disappear sometimes
    
    commit 7989b9ee8bafe5cc625381dd0c3c4586de27ca26 upstream.
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9d2c0fbe161e3ca77e041cfc72f09a8f69fdbda
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Wed Oct 3 14:57:47 2018 +0800

    drm/ast: change resolution may cause screen blurred
    
    commit 1a37bd823891568f8721989aed0615835632d81a upstream.
    
    The value of pitches is not correct while calling mode_set.
    The issue we found so far on following system:
    - Debian8 with XFCE Desktop
    - Ubuntu with KDE Desktop
    - SUSE15 with KDE Desktop
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Cc: <stable@vger.kernel.org>
    Tested-by: Jean Delvare <jdelvare@suse.de>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 382debd2fe42f3b6ffbfc089450980411bdfd699
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Nov 14 19:34:40 2018 +0200

    drm/i915: Disable LP3 watermarks on all SNB machines
    
    commit 21556350ade3cb5d7afecc8b3544e56431d21695 upstream.
    
    I have a Thinkpad X220 Tablet in my hands that is losing vblank
    interrupts whenever LP3 watermarks are used.
    
    If I nudge the latency value written to the WM3 register just
    by one in either direction the problem disappears. That to me
    suggests that the punit will not enter the corrsponding
    powersave mode (MPLL shutdown IIRC) unless the latency value
    in the register matches exactly what we read from SSKPD. Ie.
    it's not really a latency value but rather just a cookie
    by which the punit can identify the desired power saving state.
    On HSW/BDW this was changed such that we actually just write
    the WM level number into those bits, which makes much more
    sense given the observed behaviour.
    
    We could try to handle this by disallowing LP3 watermarks
    only when vblank interrupts are enabled but we'd first have
    to prove that only vblank interrupts are affected, which
    seems unlikely. Also we can't grab the wm mutex from the
    vblank enable/disable hooks because those are called with
    various spinlocks held. Thus we'd have to redesigne the
    watermark locking. So to play it safe and keep the code
    simple we simply disable LP3 watermarks on all SNB machines.
    
    To do that we simply zero out the latency values for
    watermark level 3, and we adjust the watermark computation
    to check for that. The behaviour now matches that of the
    g4x/vlv/skl wm code in the presence of a zeroed latency
    value.
    
    v2: s/USHRT_MAX/U32_MAX/ for consistency with the types (Chris)
    
    Cc: stable@vger.kernel.org
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Acked-by: Chris Wilson <chris@chris-wilson.co.uk>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101269
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103713
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181114173440.6730-1-ville.syrjala@linux.intel.com
    (cherry picked from commit 03981c6ebec4fc7056b9b45f847393aeac90d060)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3290a5e24df81bf2cdb603f0a897725d3eb3ea5
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Fri Jul 20 11:37:25 2018 -0400

    drm/amdgpu: Fix oops when pp_funcs->switch_power_profile is unset
    
    commit 919a52fc4ca137c871f295224507fa3401e08472 upstream.
    
    On Vega20 and other pre-production GPUs, powerplay is not enabled yet.
    Check for NULL pointers before calling pp_funcs function pointers.
    
    Also affects Kaveri.
    
    CC: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Tested-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9ea911e2b90478b29fd6b2325723099a55f6171
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Thu Nov 15 11:58:52 2018 +0100

    drm/vc4: Set ->legacy_cursor_update to false when doing non-async updates
    
    commit fcc86cb45d38ca2f24bcea9c29c7f4742041caed upstream.
    
    drm_atomic_helper_setup_commit() auto-completes commit->flip_done when
    state->legacy_cursor_update is true, but we know for sure that we want
    a sync update when we call drm_atomic_helper_setup_commit() from
    vc4_atomic_commit().
    
    Explicitly set state->legacy_cursor_update to false to prevent this
    auto-completion.
    
    Fixes: 184d3cf4f738 ("drm/vc4: Use wait_for_flip_done() instead of wait_for_vblanks()")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181115105852.9844-2-boris.brezillon@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7841a545f8bd66567edc21669531116caf1daeb1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 19 12:55:12 2018 +0100

    drm/amdgpu: Add missing firmware entry for HAINAN
    
    commit 8d4d7c58994759bbd9f4fec32d88bf0e0b89302e upstream.
    
    Due to lack of MODULE_FIRMWARE() with hainan_mc.bin, the driver
    doesn't work properly in initrd.  Let's add it.
    
    Bugzilla: https://bugzilla.suse.com/show_bug.cgi?id=1116239
    Fixes: 8eaf2b1faaf4 ("drm/amdgpu: switch firmware path for SI parts")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d543f583e3af75ab4c9d5737273614fadcec9d35
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Thu Nov 15 17:32:48 2018 +0100

    drm/fb-helper: Blacklist writeback when adding connectors to fbdev
    
    commit 8fd3b90300bec541806dac271de2fd44e2e4e2d2 upstream.
    
    Writeback connectors do not produce any on-screen output and require
    special care for use. Such connectors are hidden from enumeration in
    DRM resources by default, but they are still picked-up by fbdev.
    This makes rather little sense since fbdev is not really adapted for
    dealing with writeback.
    
    Moreover, this is also a source of issues when userspace disables the
    CRTC (and associated plane) without detaching the CRTC from the
    connector (which is hidden by default). In this case, the connector is
    still using the CRTC, leading to am "enabled/connectors mismatch" and
    eventually the failure of the associated atomic commit. This situation
    happens with VC4 testing under IGT GPU Tools.
    
    Filter out writeback connectors in the fbdev helper to solve this.
    
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Reviewed-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Tested-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Fixes: 935774cd71fe ("drm: Add writeback connector type")
    Cc: <stable@vger.kernel.org> # v4.19+
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181115163248.21168-1-paul.kocialkowski@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cddcc9959a32999ce2d38018900595a5ab453eb2
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 1 23:24:26 2018 -0700

    tcp: do not release socket ownership in tcp_close()
    
    commit 8873c064d1de579ea23412a6d3eee972593f142b upstream.
    
    syzkaller was able to hit the WARN_ON(sock_owned_by_user(sk));
    in tcp_close()
    
    While a socket is being closed, it is very possible other
    threads find it in rtnetlink dump.
    
    tcp_get_info() will acquire the socket lock for a short amount
    of time (slow = lock_sock_fast(sk)/unlock_sock_fast(sk, slow);),
    enough to trigger the warning.
    
    Fixes: 67db3e4bfbc9 ("tcp: no longer hold ehash lock while calling tcp_get_info()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5999609a93a4eb4956b6548159ce69295b1557b2
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Fri Oct 26 15:09:01 2018 -0700

    mm/memory.c: recheck page table entry with page table lock held
    
    commit ff09d7ec9786be4ad7589aa987d7dc66e2dd9160 upstream.
    
    We clear the pte temporarily during read/modify/write update of the pte.
    If we take a page fault while the pte is cleared, the application can get
    SIGBUS.  One such case is with remap_pfn_range without a backing
    vm_ops->fault callback.  do_fault will return SIGBUS in that case.
    
    cpu 0                                           cpu1
    mprotect()
    ptep_modify_prot_start()/pte cleared.
    .
    .                                               page fault.
    .
    .
    prep_modify_prot_commit()
    
    Fix this by taking page table lock and rechecking for pte_none.
    
    [aneesh.kumar@linux.ibm.com: fix crash observed with syzkaller run]
      Link: http://lkml.kernel.org/r/87va6bwlfg.fsf@linux.ibm.com
    Link: http://lkml.kernel.org/r/20180926031858.9692-1-aneesh.kumar@linux.ibm.com
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Ido Schimmel <idosch@idosch.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3996e891ec97c9c5f66ed3a2a450e3621ec32c50
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Fri Oct 26 15:03:12 2018 -0700

    mm: don't warn about large allocations for slab
    
    commit 61448479a9f2c954cde0cfe778cb6bec5d0a748d upstream.
    
    Slub does not call kmalloc_slab() for sizes > KMALLOC_MAX_CACHE_SIZE,
    instead it falls back to kmalloc_large().
    
    For slab KMALLOC_MAX_CACHE_SIZE == KMALLOC_MAX_SIZE and it calls
    kmalloc_slab() for all allocations relying on NULL return value for
    over-sized allocations.
    
    This inconsistency leads to unwanted warnings from kmalloc_slab() for
    over-sized allocations for slab.  Returning NULL for failed allocations is
    the expected behavior.
    
    Make slub and slab code consistent by checking size >
    KMALLOC_MAX_CACHE_SIZE in slab before calling kmalloc_slab().
    
    While we are here also fix the check in kmalloc_slab().  We should check
    against KMALLOC_MAX_CACHE_SIZE rather than KMALLOC_MAX_SIZE.  It all kinda
    worked because for slab the constants are the same, and slub always checks
    the size against KMALLOC_MAX_CACHE_SIZE before kmalloc_slab().  But if we
    get there with size > KMALLOC_MAX_CACHE_SIZE anyhow bad things will
    happen.  For example, in case of a newly introduced bug in slub code.
    
    Also move the check in kmalloc_slab() from function entry to the size >
    192 case.  This partially compensates for the additional check in slab
    code and makes slub code a bit faster (at least theoretically).
    
    Also drop __GFP_NOWARN in the warning check.  This warning means a bug in
    slab code itself, user-passed flags have nothing to do with it.
    
    Nothing of this affects slob.
    
    Link: http://lkml.kernel.org/r/20180927171502.226522-1-dvyukov@gmail.com
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: syzbot+87829a10073277282ad1@syzkaller.appspotmail.com
    Reported-by: syzbot+ef4e8fc3a06e9019bb40@syzkaller.appspotmail.com
    Reported-by: syzbot+6e438f4036df52cbb863@syzkaller.appspotmail.com
    Reported-by: syzbot+8574471d8734457d98aa@syzkaller.appspotmail.com
    Reported-by: syzbot+af1504df0807a083dbd9@syzkaller.appspotmail.com
    Acked-by: Christoph Lameter <cl@linux.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 292c48e2971e7fda592b8e23567c63b7efb267ae
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 22 09:24:27 2018 -0700

    llc: do not use sk_eat_skb()
    
    commit 604d415e2bd642b7e02c80e719e0396b9d4a77a6 upstream.
    
    syzkaller triggered a use-after-free [1], caused by a combination of
    skb_get() in llc_conn_state_process() and usage of sk_eat_skb()
    
    sk_eat_skb() is assuming the skb about to be freed is only used by
    the current thread. TCP/DCCP stacks enforce this because current
    thread holds the socket lock.
    
    llc_conn_state_process() wants to make sure skb does not disappear,
    and holds a reference on the skb it manipulates. But as soon as this
    skb is added to socket receive queue, another thread can consume it.
    
    This means that llc must use regular skb_unlink() and kfree_skb()
    so that both producer and consumer can safely work on the same skb.
    
    [1]
    BUG: KASAN: use-after-free in atomic_read include/asm-generic/atomic-instrumented.h:21 [inline]
    BUG: KASAN: use-after-free in refcount_read include/linux/refcount.h:43 [inline]
    BUG: KASAN: use-after-free in skb_unref include/linux/skbuff.h:967 [inline]
    BUG: KASAN: use-after-free in kfree_skb+0xb7/0x580 net/core/skbuff.c:655
    Read of size 4 at addr ffff8801d1f6fba4 by task ksoftirqd/1/18
    
    CPU: 1 PID: 18 Comm: ksoftirqd/1 Not tainted 4.19.0-rc8+ #295
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c4/0x2b6 lib/dump_stack.c:113
     print_address_description.cold.8+0x9/0x1ff mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.9+0x242/0x309 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     kasan_check_read+0x11/0x20 mm/kasan/kasan.c:272
     atomic_read include/asm-generic/atomic-instrumented.h:21 [inline]
     refcount_read include/linux/refcount.h:43 [inline]
     skb_unref include/linux/skbuff.h:967 [inline]
     kfree_skb+0xb7/0x580 net/core/skbuff.c:655
     llc_sap_state_process+0x9b/0x550 net/llc/llc_sap.c:224
     llc_sap_rcv+0x156/0x1f0 net/llc/llc_sap.c:297
     llc_sap_handler+0x65e/0xf80 net/llc/llc_sap.c:438
     llc_rcv+0x79e/0xe20 net/llc/llc_input.c:208
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     process_backlog+0x218/0x6f0 net/core/dev.c:5829
     napi_poll net/core/dev.c:6249 [inline]
     net_rx_action+0x7c5/0x1950 net/core/dev.c:6315
     __do_softirq+0x30c/0xb03 kernel/softirq.c:292
     run_ksoftirqd+0x94/0x100 kernel/softirq.c:653
     smpboot_thread_fn+0x68b/0xa00 kernel/smpboot.c:164
     kthread+0x35a/0x420 kernel/kthread.c:246
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:413
    
    Allocated by task 18:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc7/0xe0 mm/kasan/kasan.c:553
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:490
     kmem_cache_alloc_node+0x144/0x730 mm/slab.c:3644
     __alloc_skb+0x119/0x770 net/core/skbuff.c:193
     alloc_skb include/linux/skbuff.h:995 [inline]
     llc_alloc_frame+0xbc/0x370 net/llc/llc_sap.c:54
     llc_station_ac_send_xid_r net/llc/llc_station.c:52 [inline]
     llc_station_rcv+0x1dc/0x1420 net/llc/llc_station.c:111
     llc_rcv+0xc32/0xe20 net/llc/llc_input.c:220
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     process_backlog+0x218/0x6f0 net/core/dev.c:5829
     napi_poll net/core/dev.c:6249 [inline]
     net_rx_action+0x7c5/0x1950 net/core/dev.c:6315
     __do_softirq+0x30c/0xb03 kernel/softirq.c:292
    
    Freed by task 16383:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x102/0x150 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kmem_cache_free+0x83/0x290 mm/slab.c:3756
     kfree_skbmem+0x154/0x230 net/core/skbuff.c:582
     __kfree_skb+0x1d/0x20 net/core/skbuff.c:642
     sk_eat_skb include/net/sock.h:2366 [inline]
     llc_ui_recvmsg+0xec2/0x1610 net/llc/af_llc.c:882
     sock_recvmsg_nosec net/socket.c:794 [inline]
     sock_recvmsg+0xd0/0x110 net/socket.c:801
     ___sys_recvmsg+0x2b6/0x680 net/socket.c:2278
     __sys_recvmmsg+0x303/0xb90 net/socket.c:2390
     do_sys_recvmmsg+0x181/0x1a0 net/socket.c:2466
     __do_sys_recvmmsg net/socket.c:2484 [inline]
     __se_sys_recvmmsg net/socket.c:2480 [inline]
     __x64_sys_recvmmsg+0xbe/0x150 net/socket.c:2480
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The buggy address belongs to the object at ffff8801d1f6fac0
     which belongs to the cache skbuff_head_cache of size 232
    The buggy address is located 228 bytes inside of
     232-byte region [ffff8801d1f6fac0, ffff8801d1f6fba8)
    The buggy address belongs to the page:
    page:ffffea000747dbc0 count:1 mapcount:0 mapping:ffff8801d9be7680 index:0xffff8801d1f6fe80
    flags: 0x2fffc0000000100(slab)
    raw: 02fffc0000000100 ffffea0007346e88 ffffea000705b108 ffff8801d9be7680
    raw: ffff8801d1f6fe80 ffff8801d1f6f0c0 000000010000000b 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8801d1f6fa80: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
     ffff8801d1f6fb00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff8801d1f6fb80: fb fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc
                                   ^
     ffff8801d1f6fc00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff8801d1f6fc80: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 331bd738eb17903edf6b87e70224395532241650
Author: Andrew Price <anprice@redhat.com>
Date:   Mon Oct 8 07:52:43 2018 -0500

    gfs2: Don't leave s_fs_info pointing to freed memory in init_sbd
    
    commit 4c62bd9cea7bcf10292f7e4c57a2bca332942697 upstream.
    
    When alloc_percpu() fails, sdp gets freed but sb->s_fs_info still points
    to the same address. Move the assignment after that error check so that
    s_fs_info can only point to a valid sdp or NULL, which is checked for
    later in the error path, in gfs2_kill_super().
    
    Reported-by: syzbot+dcb8b3587445007f5808@syzkaller.appspotmail.com
    Signed-off-by: Andrew Price <anprice@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd947138e8c31e8cfcd489c12e9b97271beb6e79
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Oct 29 23:10:29 2018 +0800

    sctp: clear the transport of some out_chunk_list chunks in sctp_assoc_rm_peer
    
    commit df132eff463873e14e019a07f387b4d577d6d1f9 upstream.
    
    If a transport is removed by asconf but there still are some chunks with
    this transport queuing on out_chunk_list, later an use-after-free issue
    will be caused when accessing this transport from these chunks in
    sctp_outq_flush().
    
    This is an old bug, we fix it by clearing the transport of these chunks
    in out_chunk_list when removing a transport in sctp_assoc_rm_peer().
    
    Reported-by: syzbot+56a40ceee5fb35932f4d@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8380cbfe4eab437309da558ceb5404b7be4dfc7a
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Nov 2 15:48:42 2018 -0700

    bfs: add sanity check at bfs_fill_super()
    
    commit 9f2df09a33aa2c76ce6385d382693f98d7f2f07e upstream.
    
    syzbot is reporting too large memory allocation at bfs_fill_super() [1].
    Since file system image is corrupted such that bfs_sb->s_start == 0,
    bfs_fill_super() is trying to allocate 8MB of continuous memory. Fix
    this by adding a sanity check on bfs_sb->s_start, __GFP_NOWARN and
    printf().
    
    [1] https://syzkaller.appspot.com/bug?id=16a87c236b951351374a84c8a32f40edbc034e96
    
    Link: http://lkml.kernel.org/r/1525862104-3407-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tigran Aivazian <aivazian.tigran@gmail.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9891b528f91d57027c1ce7d9f8165f781c1b532c
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Oct 16 17:07:35 2018 -0700

    Input: synaptics - avoid using uninitialized variable when probing
    
    commit f39f8688888ae74fa8deae2d01289b69b4727394 upstream.
    
    synaptics_detect() does not check whether sending commands to the
    device succeeds and instead relies on getting unique data from the
    device. Let's make sure we seed entire buffer with zeroes to make sure
    we will not use garbage on stack that just happen to be 0x47.
    
    Reported-by: syzbot+13cb3b01d0784e4ffc3f@syzkaller.appspotmail.com
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3962e78a9fcb881d3865eba7faf51536e062ccf8
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Sat Sep 8 01:42:58 2018 +0900

    selinux: Add __GFP_NOWARN to allocation at str_read()
    
    commit 4458bba09788e70e8fb39ad003f087cd9dfbd6ac upstream.
    
    syzbot is hitting warning at str_read() [1] because len parameter can
    become larger than KMALLOC_MAX_SIZE. We don't need to emit warning for
    this case.
    
    [1] https://syzkaller.appspot.com/bug?id=7f2f5aad79ea8663c296a2eedb81978401a908f0
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+ac488b9811036cea7ea0@syzkaller.appspotmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829567dd9196a32951c7e4de91d590e684ce3b00
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Mon Aug 27 15:12:05 2018 +0900

    v9fs_dir_readdir: fix double-free on p9stat_read error
    
    commit 81c99089bce693b94b775b6eb888115d2d540086 upstream.
    
    p9stat_read will call p9stat_free on error, we should only free the
    struct content on success.
    
    There also is no need to "p9stat_init" st as the read function will
    zero the whole struct for us anyway, so clean up the code a bit while
    we are here.
    
    Link: http://lkml.kernel.org/r/1535410108-20650-1-git-send-email-asmadeus@codewreck.org
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Reported-by: syzbot+d4252148d198410b864f@syzkaller.appspotmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f9e2bd0bbcf787c90c28bda082b6287b5c5661e
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Tue Oct 16 11:56:26 2018 +0300

    tools/power/cpupower: fix compilation with STATIC=true
    
    commit 9de9aa45e9bd67232e000cca42ceb134b8ae51b6 upstream.
    
    Rename duplicate sysfs_read_file into cpupower_read_sysfs and fix linking.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Thomas Renninger <trenn@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7d5ef6af8eb1da163bcec2723c6bec87e95faed
Author: Keerthy <j-keerthy@ti.com>
Date:   Wed Nov 7 10:04:23 2018 +0530

    opp: ti-opp-supply: Correct the supply in _get_optimal_vdd_voltage call
    
    commit 622fecbccfe86a8052dea6b512d3821dcce29994 upstream.
    
    _get_optimal_vdd_voltage call provides new_supply_vbb->u_volt
    as the reference voltage while it should be really new_supply_vdd->u_volt.
    
    Cc: 4.16+ <stable@vger.kernel.org> # v4.16+
    Fixes: 9a835fa6e47 ("PM / OPP: Add ti-opp-supply driver")
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50f4a3b8eb62a4ff8fbf23a6e8b9fde147ed0202
Author: Keerthy <j-keerthy@ti.com>
Date:   Wed Nov 7 10:04:22 2018 +0530

    opp: ti-opp-supply: Dynamically update u_volt_min
    
    commit ba038546ff9e15d54d1134b5c5d2355648c00dec upstream.
    
    The voltage range (min, max) provided in the device tree is from
    the data manual and is pretty big, catering to a wide range of devices.
    On a i2c read/write failure the regulator_set_voltage_triplet function
    falls back to set voltage between min and max. The min value from Device
    Tree can be lesser than the optimal value and in that case that can lead
    to a hang or crash. Hence set the u_volt_min dynamically to the optimal
    voltage value.
    
    Cc: 4.16+ <stable@vger.kernel.org> # v4.16+
    Fixes: 9a835fa6e47 ("PM / OPP: Add ti-opp-supply driver")
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54923bc74bebbd93a44380bce87006efdce3a8fe
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Nov 8 16:08:29 2018 +0100

    brcmfmac: fix reporting support for 160 MHz channels
    
    commit d1fe6ad6f6bd61c84788d3a7b11e459a439c6169 upstream.
    
    Driver can report IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160MHZ so it's
    important to provide valid & complete info about supported bands for
    each channel. By default no support for 160 MHz should be assumed unless
    firmware reports it for a given channel later.
    
    This fixes info passed to the userspace. Without that change userspace
    could try to use invalid channel and fail to start an interface.
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Cc: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c74c926ffa0a1eb5b430255d35e2336b2f67c921
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Oct 17 08:35:15 2018 +0300

    iwlwifi: mvm: don't use SAR Geo if basic SAR is not used
    
    commit 5d041c46ccb9b48acc110e214beff5e2789311df upstream.
    
    We can't use SAR Geo if basic SAR is not enabled, since the SAR Geo
    tables define offsets in relation to the basic SAR table in use.
    
    To fix this, make iwl_mvm_sar_init() return one in case WRDS is not
    available, so we can skip reading WGDS entirely.
    
    Fixes: a6bff3cb19b7 ("iwlwifi: mvm: add GEO_TX_POWER_LIMIT cmd for geographic tx power table")
    Cc: stable@vger.kernel.org # 4.12+
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4969751575c819d7be50b28f63b7ce1ab933b24e
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Oct 3 11:16:54 2018 +0300

    iwlwifi: mvm: fix regulatory domain update when the firmware starts
    
    commit 82715ac71e6b94a2c2136e31f3a8e6748e33aa8c upstream.
    
    When the firmware starts, it doesn't have any regulatory
    information, hence it uses the world wide limitations. The
    driver can feed the firmware with previous knowledge that
    was kept in the driver, but the firmware may still not
    update its internal tables.
    
    This happens when we start a BSS interface, and then the
    firmware can change the regulatory tables based on our
    location and it'll use more lenient, location specific
    rules. Then, if the firmware is shut down (when the
    interface is brought down), and then an AP interface is
    created, the firmware will forget the country specific
    rules.
    
    The host will think that we are in a certain country that
    may allow channels and will try to teach the firmware about
    our location, but the firmware may still not allow to drop
    the world wide limitations and apply country specific rules
    because it was just re-started.
    
    In this case, the firmware will reply with MCC_RESP_ILLEGAL
    to the MCC_UPDATE_CMD. In that case, iwlwifi needs to let
    the upper layers (cfg80211 / hostapd) know that the channel
    list they know about has been updated.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=201105
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b643d705441c734feeb9e040c3a0ddcc896b58aa
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Thu Aug 16 13:25:48 2018 +0300

    iwlwifi: mvm: support sta_statistics() even on older firmware
    
    commit ec484d03ef0df8d34086b95710e355a259cbe1f2 upstream.
    
    The oldest firmware supported by iwlmvm do support getting
    the average beacon RSSI. Enable the sta_statistics() call
    from mac80211 even on older firmware versions.
    
    Fixes: 33cef9256342 ("iwlwifi: mvm: support beacon statistics for BSS client")
    Cc: stable@vger.kernel.org # 4.2+
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29d920ba59c30caf9cd8e829f47124de3d200618
Author: Matt Chen <matt.chen@intel.com>
Date:   Fri Aug 3 14:29:20 2018 +0800

    iwlwifi: fix wrong WGDS_WIFI_DATA_SIZE
    
    commit 66e839030fd698586734e017fd55c4f2a89dba0b upstream.
    
    From coreboot/BIOS:
    Name ("WGDS", Package() {
     Revision,
     Package() {
         DomainType,                         // 0x7:WiFi ==> We miss this one.
         WgdsWiFiSarDeltaGroup1PowerMax1,    // Group 1 FCC 2400 Max
         WgdsWiFiSarDeltaGroup1PowerChainA1, // Group 1 FCC 2400 A Offset
         WgdsWiFiSarDeltaGroup1PowerChainB1, // Group 1 FCC 2400 B Offset
         WgdsWiFiSarDeltaGroup1PowerMax2,    // Group 1 FCC 5200 Max
         WgdsWiFiSarDeltaGroup1PowerChainA2, // Group 1 FCC 5200 A Offset
         WgdsWiFiSarDeltaGroup1PowerChainB2, // Group 1 FCC 5200 B Offset
         WgdsWiFiSarDeltaGroup2PowerMax1,    // Group 2 EC Jap 2400 Max
         WgdsWiFiSarDeltaGroup2PowerChainA1, // Group 2 EC Jap 2400 A Offset
         WgdsWiFiSarDeltaGroup2PowerChainB1, // Group 2 EC Jap 2400 B Offset
         WgdsWiFiSarDeltaGroup2PowerMax2,    // Group 2 EC Jap 5200 Max
         WgdsWiFiSarDeltaGroup2PowerChainA2, // Group 2 EC Jap 5200 A Offset
         WgdsWiFiSarDeltaGroup2PowerChainB2, // Group 2 EC Jap 5200 B Offset
         WgdsWiFiSarDeltaGroup3PowerMax1,    // Group 3 ROW 2400 Max
         WgdsWiFiSarDeltaGroup3PowerChainA1, // Group 3 ROW 2400 A Offset
         WgdsWiFiSarDeltaGroup3PowerChainB1, // Group 3 ROW 2400 B Offset
         WgdsWiFiSarDeltaGroup3PowerMax2,    // Group 3 ROW 5200 Max
         WgdsWiFiSarDeltaGroup3PowerChainA2, // Group 3 ROW 5200 A Offset
         WgdsWiFiSarDeltaGroup3PowerChainB2, // Group 3 ROW 5200 B Offset
     }
    })
    
    When read the ACPI data to find out the WGDS, the DATA_SIZE is never
    matched.
    From the above format, it gives 19 numbers, but our driver is hardcode
    as 18.
    Fix it to pass then can parse the data into our wgds table.
    Then we will see:
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init Sending GEO_TX_POWER_LIMIT
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[0]
    Band[0]: chain A = 68 chain B = 69 max_tx_power = 54
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[0]
    Band[1]: chain A = 48 chain B = 49 max_tx_power = 70
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[1]
    Band[0]: chain A = 51 chain B = 67 max_tx_power = 50
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[1]
    Band[1]: chain A = 69 chain B = 70 max_tx_power = 68
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[2]
    Band[0]: chain A = 49 chain B = 50 max_tx_power = 48
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[2]
    Band[1]: chain A = 52 chain B = 53 max_tx_power = 51
    
    Cc: stable@vger.kernel.org # 4.12+
    Fixes: a6bff3cb19b7 ("iwlwifi: mvm: add GEO_TX_POWER_LIMIT cmd for geographic tx power table")
    Signed-off-by: Matt Chen <matt.chen@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 602162dce8a4cb61686226588161ded7b7ea604c
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Fri Nov 2 15:39:43 2018 +0200

    gpio: don't free unallocated ida on gpiochip_add_data_with_key() error path
    
    commit a05a14049999598a3bb6fab12db6b768a0215522 upstream.
    
    The change corrects the error path in gpiochip_add_data_with_key()
    by avoiding to call ida_simple_remove(), if ida_simple_get() returns
    an error.
    
    Note that ida_simple_remove()/ida_free() throws a BUG(), if id argument
    is negative, it allows to easily check the correctness of the fix by
    fuzzing the return value from ida_simple_get().
    
    Fixes: ff2b13592299 ("gpio: make the gpiochip a real device")
    Cc: stable@vger.kernel.org # v4.6+
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d24302acc10279d6e4a02590b4ea06475b1f744
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Nov 19 14:53:07 2018 +0200

    mmc: sdhci-pci: Workaround GLK firmware failing to restore the tuning value
    
    commit 5305ec6a27b2dc7398a689e661a4a2e951026f09 upstream.
    
    GLK firmware can indicate that the tuning value will be restored after
    runtime suspend, but not actually do that. Add a workaround that detects
    such cases, and lets the driver do re-tuning instead.
    
    Reported-by: Anisse Astier <anisse@astier.eu>
    Tested-by: Anisse Astier <anisse@astier.eu>
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52f4036282f79c93447c9eed734610a31ed933da
Author: Rajat Jain <rajatja@google.com>
Date:   Mon Oct 29 15:17:01 2018 -0700

    mmc: sdhci-pci: Try "cd" for card-detect lookup before using NULL
    
    commit cdcefe6bd9df754f528ffc339d3cc143cea4ddf6 upstream.
    
    Problem:
    
    The card detect IRQ does not work with modern BIOS (that want
    to use _DSD to provide the card detect GPIO to the driver).
    
    Details:
    
    The mmc core provides the mmc_gpiod_request_cd() API to let host drivers
    request the gpio descriptor for the "card detect" pin.
    This pin is specified in the ACPI for the SDHC device:
    
     * Either as a resource using _CRS. This is a method used by legacy BIOS.
       (The driver needs to tell which resource index).
    
     * Or as a named property ("cd-gpios"/"cd-gpio") in _DSD (which internally
       points to an entry in _CRS). This way, the driver can lookup using a
       string. This is what modern BIOS prefer to use.
    
    This API finally results in a call to the following code:
    
    struct gpio_desc *acpi_find_gpio(..., const char *con_id,...)
    {
    ...
       /* Lookup gpio (using "<con_id>-gpio") in the _DSD */
    ...
       if (!acpi_can_fallback_to_crs(adev, con_id))
              return ERR_PTR(-ENOENT);
    ...
       /* Falling back to _CRS is allowed, Lookup gpio in the _CRS */
    ...
    }
    
    Note that this means that if the ACPI has _DSD properties, the kernel
    will never use _CRS for the lookup (Because acpi_can_fallback_to_crs()
    will always be false for any device hat has _DSD entries).
    
    The SDHCI driver is thus currently broken on a modern BIOS, even if
    BIOS provides both _CRS (for index based lookup) and _DSD entries (for
    string based lookup). Ironically, none of these will be used for the
    lookup currently because:
    
    * Since the con_id is NULL, acpi_find_gpio() does not find a matching
      entry in DSDT. (The _DSDT entry has the property name = "cd-gpios")
    
    * Because ACPI contains DSDT entries, thus acpi_can_fallback_to_crs()
      returns false (because device properties have been populated from
      _DSD), thus the _CRS is never used for the lookup.
    
    Fix:
    
    Try "cd" for lookup in the _DSD before falling back to using NULL so
    as to try looking up in the _CRS.
    
    I've tested this patch successfully with both Legacy BIOS (that
    provide only _CRS method) as well as modern BIOS (that provide both
    _CRS and _DSD). Also the use of "cd" appears to be fairly consistent
    across other users of this API (other MMC host controller drivers).
    
    Link: https://lkml.org/lkml/2018/9/25/1113
    Signed-off-by: Rajat Jain <rajatja@google.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: f10e4bf6632b ("gpio: acpi: Even more tighten up ACPI GPIO lookups")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcec3b858057dfe6dfd05d6ba803e81af8d5adff
Author: Will Deacon <will@kernel.org>
Date:   Mon Nov 19 11:07:18 2018 +0000

    Documentation/security-bugs: Postpone fix publication in exceptional cases
    
    commit 544b03da39e2d7b4961d3163976ed4bfb1fac509 upstream.
    
    At the request of the reporter, the Linux kernel security team offers to
    postpone the publishing of a fix for up to 5 business days from the date
    of a report.
    
    While it is generally undesirable to keep a fix private after it has
    been developed, this short window is intended to allow distributions to
    package the fix into their kernel builds and permits early inclusion of
    the security team in the case of a co-ordinated disclosure with other
    parties. Unfortunately, discussions with major Linux distributions and
    cloud providers has revealed that 5 business days is not sufficient to
    achieve either of these two goals.
    
    As an example, cloud providers need to roll out KVM security fixes to a
    global fleet of hosts with sufficient early ramp-up and monitoring. An
    end-to-end timeline of less than two weeks dramatically cuts into the
    amount of early validation and increases the chance of guest-visible
    regressions.
    
    The consequence of this timeline mismatch is that security issues are
    commonly fixed without the involvement of the Linux kernel security team
    and are instead analysed and addressed by an ad-hoc group of developers
    across companies contributing to Linux. In some cases, mainline (and
    therefore the official stable kernels) can be left to languish for
    extended periods of time. This undermines the Linux kernel security
    process and puts upstream developers in a difficult position should they
    find themselves involved with an undisclosed security problem that they
    are unable to report due to restrictions from their employer.
    
    To accommodate the needs of these users of the Linux kernel and
    encourage them to engage with the Linux security team when security
    issues are first uncovered, extend the maximum period for which fixes
    may be delayed to 7 calendar days, or 14 calendar days in exceptional
    cases, where the logistics of QA and large scale rollouts specifically
    need to be accommodated. This brings parity with the linux-distros@
    maximum embargo period of 14 calendar days.
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Amit Shah <aams@amazon.com>
    Cc: Laura Abbott <labbott@redhat.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Co-developed-by: Thomas Gleixner <tglx@linutronix.de>
    Co-developed-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Reviewed-by: Tyler Hicks <tyhicks@canonical.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 160a390a9d5354caf7bddab4a70c307b8c4f9b17
Author: Will Deacon <will@kernel.org>
Date:   Mon Oct 22 16:39:01 2018 +0100

    Documentation/security-bugs: Clarify treatment of embargoed information
    
    commit 14fdc2c5318ae420e68496975f48dc1dbef52649 upstream.
    
    The Linux kernel security team has been accused of rejecting the idea of
    security embargoes. This is incorrect, and could dissuade people from
    reporting security issues to us under the false assumption that the
    issue would leak prematurely.
    
    Clarify the handling of embargoed information in our process
    documentation.
    
    Co-developed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Acked-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc0f90849a45eb1844116debc5380d9429a3d09b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 15 15:03:24 2018 -0800

    MAINTAINERS: Add Sasha as a stable branch maintainer
    
    commit cb5d21946d2a2f4687c482ab4604af1d29dac35a upstream.
    
    Sasha has somehow been convinced into helping me with the stable kernel
    maintenance.  Codify this slip in good judgement before he realizes what
    he really signed up for :)
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27d6abfb99c871b7c0179b52b6a23acc6c7c005b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 9 11:59:45 2018 +0100

    ALSA: oss: Use kvzalloc() for local buffer allocations
    
    commit 65766ee0bf7fe8b3be80e2e1c3ef54ad59b29476 upstream.
    
    PCM OSS layer may allocate a few temporary buffers, one for the core
    read/write and another for the conversions via plugins.  Currently
    both are allocated via vmalloc().  But as the allocation size is
    equivalent with the PCM period size, the required size might be quite
    small, depending on the application.
    
    This patch replaces these vmalloc() calls with kvzalloc() for covering
    small period sizes better.  Also, we use "z"-alloc variant here for
    addressing the possible uninitialized access reported by syzkaller.
    
    Reported-by: syzbot+1cb36954e127c98dd037@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc8b329fef53c74a4abf98b0755b3832d572d6ce
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Nov 15 11:38:41 2018 +0200

    usb: xhci: Prevent bus suspend if a port connect change or polling state is detected
    
    commit 2f31a67f01a8beb22cae754c53522cb61a005750 upstream.
    
    USB3 roothub might autosuspend before a plugged USB3 device is detected,
    causing USB3 device enumeration failure.
    
    USB3 devices don't show up as connected and enabled until USB3 link trainig
    completes. On a fast booting platform with a slow USB3 link training the
    link might reach the connected enabled state just as the bus is suspending.
    
    If this device is discovered first time by the xhci_bus_suspend() routine
    it will be put to U3 suspended state like the other ports which failed to
    suspend earlier.
    
    The hub thread will notice the connect change and resume the bus,
    moving the port back to U0
    
    This U0 -> U3 -> U0 transition right after being connected seems to be
    too much for some devices, causing them to first go to SS.Inactive state,
    and finally end up stuck in a polling state with reset asserted
    
    Fix this by failing the bus suspend if a port has a connect change or is
    in a polling state in xhci_bus_suspend().
    
    Don't do any port changes until all ports are checked, buffer all port
    changes and only write them in the end if suspend can proceed
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6cc7f9c6461a3d23bc1e8ad47eacb0a2188168a
Author: Cherian, George <George.Cherian@cavium.com>
Date:   Fri Nov 9 17:21:22 2018 +0200

    xhci: Add quirk to workaround the errata seen on Cavium Thunder-X2 Soc
    
    commit 11644a7659529730eaf2f166efaabe7c3dc7af8c upstream.
    
    Implement workaround for ThunderX2 Errata-129 (documented in
    CN99XX Known Issues" available at Cavium support site).
    As per ThunderX2errata-129, USB 2 device may come up as USB 1
    if a connection to a USB 1 device is followed by another connection to
    a USB 2 device, the link will come up as USB 1 for the USB 2 device.
    
    Resolution: Reset the PHY after the USB 1 device is disconnected.
    The PHY reset sequence is done using private registers in XHCI register
    space. After the PHY is reset we check for the PLL lock status and retry
    the operation if it fails. From our tests, retrying 4 times is sufficient.
    
    Add a new quirk flag XHCI_RESET_PLL_ON_DISCONNECT to invoke the workaround
    in handle_xhci_port_status().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: George Cherian <george.cherian@cavium.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cad3876cd23d63e818c3112e885767a09b249905
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Nov 9 17:21:21 2018 +0200

    usb: xhci: fix timeout for transition from RExit to U0
    
    commit a5baeaeabcca3244782a9b6382ebab6f8a58f583 upstream.
    
    This definition is used by msecs_to_jiffies in milliseconds.
    According to the comments, max rexit timeout should be 20ms.
    Align with the comments to properly calculate the delay.
    
    Verified on Sunrise Point-LP and Cannon Lake.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60ac01c60ba94d8a17016ede99789207a5b93856
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Nov 9 17:21:20 2018 +0200

    usb: xhci: fix uninitialized completion when USB3 port got wrong status
    
    commit 958c0bd86075d4ef1c936998deefe1947e539240 upstream.
    
    Realtek USB3.0 Card Reader [0bda:0328] reports wrong port status on
    Cannon lake PCH USB3.1 xHCI [8086:a36d] after resume from S3,
    after clear port reset it works fine.
    
    Since this device is registered on USB3 roothub at boot,
    when port status reports not superspeed, xhci_get_port_status will call
    an uninitialized completion in bus_state[0].
    Kernel will hang because of NULL pointer.
    
    Restrict the USB2 resume status check in USB2 roothub to fix hang issue.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e8886bd158fc34efad491176b8899417736dc1f
Author: Sandeep Singh <sandeep.singh@amd.com>
Date:   Fri Nov 9 17:21:19 2018 +0200

    xhci: Add check for invalid byte size error when UAS devices are connected.
    
    commit d9193efba84fe4c4aa22a569fade5e6ca971f8af upstream.
    
    Observed "TRB completion code (27)" error which corresponds to Stopped -
    Length Invalid error(xhci spec section 4.17.4) while connecting USB to
    SATA bridge.
    
    Looks like this case was not considered when the following patch[1] was
    committed. Hence adding this new check which can prevent
    the invalid byte size error.
    
    [1] ade2e3a xhci: handle transfer events without TRB pointer
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sandeep Singh <sandeep.singh@amd.com>
    cc: Nehal Shah <Nehal-bakulchandra.Shah@amd.com>
    cc: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a237717dfdbc5e6f7cd9d5b2d66627ad793bb8cf
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Nov 9 17:21:18 2018 +0200

    xhci: handle port status events for removed USB3 hcd
    
    commit 1245374e9b8340fc255fd51b2015173a83050d03 upstream.
    
    At xhci removal the USB3 hcd (shared_hcd) is removed before the primary
    USB2 hcd. Interrupts for port status changes may still occur for USB3
    ports after the shared_hcd is freed, causing  NULL pointer dereference.
    
    Check if xhci->shared_hcd is still valid before handing USB3 port events
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Peter Chen <peter.chen@nxp.com>
    Tested-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82c1b66894fd3b81af823861a39d532af4337f4e
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Nov 9 17:21:17 2018 +0200

    xhci: Fix leaking USB3 shared_hcd at xhci removal
    
    commit f068090426ea8d72c408ebd42953a82a88e2282c upstream.
    
    Ensure that the shared_hcd pointer is valid when calling usb_put_hcd()
    
    The shared_hcd is removed and freed in xhci by first calling
    usb_remove_hcd(xhci->shared_hcd), and later
    usb_put_hcd(xhci->shared_hcd)
    
    Afer commit fe190ed0d602 ("xhci: Do not halt the host until both HCD have
    disconnected their devices.") the shared_hcd was never properly put as
    xhci->shared_hcd was set to NULL before usb_put_hcd(xhci->shared_hcd) was
    called.
    
    shared_hcd (USB3) is removed before primary hcd (USB2).
    While removing the primary hcd we might need to handle xhci interrupts
    to cleanly remove last USB2 devices, therefore we need to set
    xhci->shared_hcd to NULL before removing the primary hcd to let xhci
    interrupt handler know shared_hcd is no longer available.
    
    xhci-plat.c, xhci-histb.c and xhci-mtk first create both their hcd's before
    adding them. so to keep the correct reverse removal order use a temporary
    shared_hcd variable for them.
    For more details see commit 4ac53087d6d4 ("usb: xhci: plat: Create both
    HCDs before adding them")
    
    Fixes: fe190ed0d602 ("xhci: Do not halt the host until both HCD have disconnected their devices.")
    Cc: Joel Stanley <joel@jms.id.au>
    Cc: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: Jianguo Sun <sunjianguo1@huawei.com>
    Cc: <stable@vger.kernel.org>
    Reported-by: Jack Pham <jackp@codeaurora.org>
    Tested-by: Jack Pham <jackp@codeaurora.org>
    Tested-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ff85eaf165f57c668eee613e9570d94d4b7f4cf
Author: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
Date:   Wed Oct 17 11:40:26 2018 -0700

    usb: dwc3: Fix NULL pointer exception in dwc3_pci_remove()
    
    commit 7b412b04a0c7000293008231ce8413056abb1982 upstream.
    
    In dwc3_pci_quirks() function, gpiod lookup table is only registered for
    baytrail SOC. But in dwc3_pci_remove(), we try to unregistered it
    without any checks. This leads to NULL pointer de-reference exception in
    gpiod_remove_lookup_table() when unloading the module for non baytrail
    SOCs. This patch fixes this issue.
    
    Fixes: 5741022cbdf3 ("usb: dwc3: pci: Add GPIO lookup table on platforms
    without ACPI GPIO resources")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4d1e71e56135dcd4f309bf1d3cd9bff36fce2c9
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Aug 27 18:30:16 2018 +0300

    usb: dwc3: core: Clean up ULPI device
    
    commit 08fd9a82fda86529bb2f2af3c2f7cb657b4d3066 upstream.
    
    If dwc3_core_init_mode() fails with deferred probe,
    next probe fails on sysfs with
    
    sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:11.0/dwc3.0.auto/dwc3.0.auto.ulpi'
    
    To avoid this failure, clean up ULPI device.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b977515da489f5c33762f1475a0fcfaec525704
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Thu Aug 2 20:17:16 2018 -0700

    usb: dwc3: gadget: Properly check last unaligned/zero chain TRB
    
    commit ba3a51ac32ebcf8d0a54b37f1af268ad8a31c52f upstream.
    
    Current check for the last extra TRB for zero and unaligned transfers
    does not account for isoc OUT. The last TRB of the Buffer Descriptor for
    isoc OUT transfers will be retired with HWO=0. As a result, we won't
    return early. The req->remaining will be updated to include the BUFSIZ
    count of the extra TRB, and the actual number of transferred bytes
    calculation will be wrong.
    
    To fix this, check whether it's a short or zero packet and the last TRB
    chain bit to return early.
    
    Fixes: c6267a51639b ("usb: dwc3: gadget: align transfers to wMaxPacketSize")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47cb27191f6cac951bf2bfd00cceff264cfc191f
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Wed Aug 1 09:37:34 2018 +0300

    usb: dwc3: gadget: fix ISOC TRB type on unaligned transfers
    
    commit 2fc6d4be35fb1e262f209758e25bfe2b7a113a7f upstream.
    
    When chaining ISOC TRBs together, only the first ISOC TRB should be of
    type ISOC_FIRST, all others should be of type ISOC. This patch fixes
    that.
    
    Fixes: c6267a51639b ("usb: dwc3: gadget: align transfers to wMaxPacketSize")
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 269c01eb49ed0643a2ed2161fa1d46749cef30b1
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Tue Nov 13 14:40:34 2018 +0100

    usb: core: Fix hub port connection events lost
    
    commit 22454b79e6de05fa61a2a72d00d2eed798abbb75 upstream.
    
    This will clear the USB_PORT_FEAT_C_CONNECTION bit in case of a hub port reset
    only if a device is was attached to the hub port before resetting the hub port.
    
    Using a Lenovo T480s attached to the ultra dock it was not possible to detect
    some usb-c devices at the dock usb-c ports because the hub_port_reset code
    will clear the USB_PORT_FEAT_C_CONNECTION bit after the actual hub port reset.
    Using this device combo the USB_PORT_FEAT_C_CONNECTION bit was set between the
    actual hub port reset and the clear of the USB_PORT_FEAT_C_CONNECTION bit.
    This ends up with clearing the USB_PORT_FEAT_C_CONNECTION bit after the
    new device was attached such that it was not detected.
    
    This patch will not clear the USB_PORT_FEAT_C_CONNECTION bit if there is
    currently no device attached to the port before the hub port reset.
    This will avoid clearing the connection bit for new attached devices.
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 711bd5d290da6c3bbdb14f53f86f77e372e2e44d
Author: Alistair Strachan <astrachan@google.com>
Date:   Thu Aug 9 09:40:42 2018 -0700

    efi/libstub: arm: support building with clang
    
    commit 41f1c48420709470c51ee0e54b6fb28b956bb4e0 upstream.
    
    When building with CONFIG_EFI and CONFIG_EFI_STUB on ARM, the libstub
    Makefile would use -mno-single-pic-base without checking it was
    supported by the compiler. As the ARM (32-bit) clang backend does not
    support this flag, the build would fail.
    
    This changes the Makefile to check the compiler's support for
    -mno-single-pic-base before using it, similar to c1c386681bd7 ("ARM:
    8767/1: add support for building ARM kernel with clang").
    
    Signed-off-by: Alistair Strachan <astrachan@google.com>
    Reviewed-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb87a92b43961c89bf4a115d8a700885d8959cb1
Author: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
Date:   Sun Oct 14 19:36:43 2018 +0200

    HID: steam: remove input device when a hid client is running.
    
    commit 385a4886778f6d6e61eff1d4d295af332d7130e1 upstream.
    
    Previously, when a HID client such as the Steam Client was running, this
    driver disabled its input device to avoid doubling the input events.
    
    While it worked mostly fine, some games got confused by the idle gamepad,
    and switched to two player mode, or asked the user to choose which gamepad
    to use. Other games just crashed, probably a bug in Unity [1].
    
    With this commit, when a HID client starts, the input device is removed;
    when the HID client ends the input device is recreated.
    
    [1]: https://github.com/ValveSoftware/steam-for-linux/issues/5645
    
    Signed-off-by: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Pierre-Loup Griffais <pgriffais@valvesoftware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
