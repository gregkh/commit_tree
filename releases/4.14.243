commit 46914f96189be290174e378c6bf9ccadfdb9ca1e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Aug 8 08:53:30 2021 +0200

    Linux 4.14.243
    
    Link: https://lore.kernel.org/r/20210806081110.511221879@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9143be0531fd361b66260ea4168e0e60368d45b
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sun Aug 1 20:00:23 2021 -0700

    spi: mediatek: Fix fifo transfer
    
    commit 0d5c3954b35eddff0da0436c31e8d721eceb7dc2 upstream.
    
    Commit 3a70dd2d0503 ("spi: mediatek: fix fifo rx mode") claims that
    fifo RX mode was never handled, and adds the presumably missing code
    to the FIFO transfer function. However, the claim that receive data
    was not handled is incorrect. It was handled as part of interrupt
    handling after the transfer was complete. The code added with the above
    mentioned commit reads data from the receive FIFO before the transfer
    is started, which is wrong. This results in an actual transfer error
    on a Hayato Chromebook.
    
    Remove the code trying to handle receive data before the transfer is
    started to fix the problem.
    
    Fixes: 3a70dd2d0503 ("spi: mediatek: fix fifo rx mode")
    Cc: Peter Hess <peter.hess@ph-home.de>
    Cc: Frank Wunderlich <frank-w@public-files.de>
    Cc: Tzung-Bi Shih <tzungbi@google.com>
    Cc: Hsin-Yi Wang <hsinyi@google.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hsin-Yi Wang <hsinyi@google.com>
    Tested-by: Tzung-Bi Shih <tzungbi@google.com>
    Link: https://lore.kernel.org/r/20210802030023.1748777-1-linux@roeck-us.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be231952c16f502b9eb128c30df674348e44b211
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Aug 6 08:28:48 2021 +0200

    Revert "watchdog: iTCO_wdt: Account for rebooting on second timeout"
    
    This reverts commit cb1bdbfad648aa32c43bec6ef6d03e1c9d434393 which is
    commit cb011044e34c293e139570ce5c01aed66a34345c upstream.
    
    It is reported to cause problems with systems and probably should not
    have been backported in the first place :(
    
    Link: https://lore.kernel.org/r/20210803165108.4154cd52@endymion
    Reported-by: Jean Delvare <jdelvare@suse.de>
    Cc: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Wim Van Sebroeck <wim@linux-watchdog.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff7f4da1dcd336772772f819997d072b272581b2
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Feb 8 12:19:40 2021 -0800

    KVM: Use kvm_pfn_t for local PFN variable in hva_to_pfn_remapped()
    
    commit a9545779ee9e9e103648f6f2552e73cfe808d0f4 upstream.
    
    Use kvm_pfn_t, a.k.a. u64, for the local 'pfn' variable when retrieving
    a so called "remapped" hva/pfn pair.  In theory, the hva could resolve to
    a pfn in high memory on a 32-bit kernel.
    
    This bug was inadvertantly exposed by commit bd2fae8da794 ("KVM: do not
    assume PTE is writable after follow_pfn"), which added an error PFN value
    to the mix, causing gcc to comlain about overflowing the unsigned long.
    
      arch/x86/kvm/../../../virt/kvm/kvm_main.c: In function ‘hva_to_pfn_remapped’:
      include/linux/kvm_host.h:89:30: error: conversion from ‘long long unsigned int’
                                      to ‘long unsigned int’ changes value from
                                      ‘9218868437227405314’ to ‘2’ [-Werror=overflow]
       89 | #define KVM_PFN_ERR_RO_FAULT (KVM_PFN_ERR_MASK + 2)
          |                              ^
    virt/kvm/kvm_main.c:1935:9: note: in expansion of macro ‘KVM_PFN_ERR_RO_FAULT’
    
    Cc: stable@vger.kernel.org
    Fixes: add6a0cd1c5b ("KVM: MMU: try to fix up page faults before giving up")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210208201940.1258328-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46d75ff2c1beebe90e7af8887256d8f0323679e4
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Jun 24 08:29:04 2021 -0400

    KVM: do not allow mapping valid but non-reference-counted pages
    
    commit f8be156be163a052a067306417cd0ff679068c97 upstream.
    
    It's possible to create a region which maps valid but non-refcounted
    pages (e.g., tail pages of non-compound higher order allocations). These
    host pages can then be returned by gfn_to_page, gfn_to_pfn, etc., family
    of APIs, which take a reference to the page, which takes it from 0 to 1.
    When the reference is dropped, this will free the page incorrectly.
    
    Fix this by only taking a reference on valid pages if it was non-zero,
    which indicates it is participating in normal refcounting (and can be
    released with put_page).
    
    This addresses CVE-2021-22543.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Tested-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac8ce7ee33c96210db4e7b3ccd9f87072d54ee51
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Feb 1 05:12:11 2021 -0500

    KVM: do not assume PTE is writable after follow_pfn
    
    commit bd2fae8da794b55bf2ac02632da3a151b10e664c upstream.
    
    In order to convert an HVA to a PFN, KVM usually tries to use
    the get_user_pages family of functinso.  This however is not
    possible for VM_IO vmas; in that case, KVM instead uses follow_pfn.
    
    In doing this however KVM loses the information on whether the
    PFN is writable.  That is usually not a problem because the main
    use of VM_IO vmas with KVM is for BARs in PCI device assignment,
    however it is a bug.  To fix it, use follow_pte and check pte_write
    while under the protection of the PTE lock.  The information can
    be used to fail hva_to_pfn_remapped or passed back to the
    caller via *writable.
    
    Usage of follow_pfn was introduced in commit add6a0cd1c5b ("KVM: MMU: try to fix
    up page faults before giving up", 2016-07-05); however, even older version
    have the same issue, all the way back to commit 2e2e3738af33 ("KVM:
    Handle vma regions with no backing page", 2008-07-20), as they also did
    not check whether the PFN was writable.
    
    Fixes: 2e2e3738af33 ("KVM: Handle vma regions with no backing page")
    Reported-by: David Stevens <stevensd@google.com>
    Cc: 3pvd@google.com
    Cc: Jann Horn <jannh@google.com>
    Cc: Jason Gunthorpe <jgg@ziepe.ca>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [OP: backport to 4.14, adjust follow_pte() -> follow_pte_pmd()]
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25ef8727c5833fa99709a0186d5c3f0f12f8378a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Aug 5 20:58:57 2021 +0200

    Revert "Bluetooth: Shutdown controller after workqueues are flushed or cancelled"
    
    This reverts commit 854e6d767a33bd53b00902d65dced7d1e7abfe1a which is
    commit 0ea9fd001a14ebc294f112b0361a4e601551d508 upstream.
    
    It has been reported to have problems:
            https://lore.kernel.org/linux-bluetooth/8735ryk0o7.fsf@baylibre.com/
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Link: https://lore.kernel.org/r/efee3a58-a4d2-af22-0931-e81b877ab539@roeck-us.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ffd10860947a812068d8774155c050949f449b7
Author: Pravin B Shelar <pshelar@ovn.org>
Date:   Thu Jul 15 16:59:00 2021 -0700

    net: Fix zero-copy head len calculation.
    
    [ Upstream commit a17ad0961706244dce48ec941f7e476a38c0e727 ]
    
    In some cases skb head could be locked and entire header
    data is pulled from skb. When skb_zerocopy() called in such cases,
    following BUG is triggered. This patch fixes it by copying entire
    skb in such cases.
    This could be optimized incase this is performance bottleneck.
    
    ---8<---
    kernel BUG at net/core/skbuff.c:2961!
    invalid opcode: 0000 [#1] SMP PTI
    CPU: 2 PID: 0 Comm: swapper/2 Tainted: G           OE     5.4.0-77-generic #86-Ubuntu
    Hardware name: OpenStack Foundation OpenStack Nova, BIOS 1.13.0-1ubuntu1.1 04/01/2014
    RIP: 0010:skb_zerocopy+0x37a/0x3a0
    RSP: 0018:ffffbcc70013ca38 EFLAGS: 00010246
    Call Trace:
     <IRQ>
     queue_userspace_packet+0x2af/0x5e0 [openvswitch]
     ovs_dp_upcall+0x3d/0x60 [openvswitch]
     ovs_dp_process_packet+0x125/0x150 [openvswitch]
     ovs_vport_receive+0x77/0xd0 [openvswitch]
     netdev_port_receive+0x87/0x130 [openvswitch]
     netdev_frame_hook+0x4b/0x60 [openvswitch]
     __netif_receive_skb_core+0x2b4/0xc90
     __netif_receive_skb_one_core+0x3f/0xa0
     __netif_receive_skb+0x18/0x60
     process_backlog+0xa9/0x160
     net_rx_action+0x142/0x390
     __do_softirq+0xe1/0x2d6
     irq_exit+0xae/0xb0
     do_IRQ+0x5a/0xf0
     common_interrupt+0xf/0xf
    
    Code that triggered BUG:
    int
    skb_zerocopy(struct sk_buff *to, struct sk_buff *from, int len, int hlen)
    {
            int i, j = 0;
            int plen = 0; /* length of skb->head fragment */
            int ret;
            struct page *page;
            unsigned int offset;
    
            BUG_ON(!from->head_frag && !hlen);
    
    Signed-off-by: Pravin B Shelar <pshelar@ovn.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bfc9b4c6e881a02bd1f9b8d566b37b09bc67433
Author: Jia He <justin.he@arm.com>
Date:   Thu Jul 15 16:08:21 2021 +0800

    qed: fix possible unpaired spin_{un}lock_bh in _qed_mcp_cmd_and_union()
    
    [ Upstream commit 6206b7981a36476f4695d661ae139f7db36a802d ]
    
    Liajian reported a bug_on hit on a ThunderX2 arm64 server with FastLinQ
    QL41000 ethernet controller:
     BUG: scheduling while atomic: kworker/0:4/531/0x00000200
      [qed_probe:488()]hw prepare failed
      kernel BUG at mm/vmalloc.c:2355!
      Internal error: Oops - BUG: 0 [#1] SMP
      CPU: 0 PID: 531 Comm: kworker/0:4 Tainted: G W 5.4.0-77-generic #86-Ubuntu
      pstate: 00400009 (nzcv daif +PAN -UAO)
     Call trace:
      vunmap+0x4c/0x50
      iounmap+0x48/0x58
      qed_free_pci+0x60/0x80 [qed]
      qed_probe+0x35c/0x688 [qed]
      __qede_probe+0x88/0x5c8 [qede]
      qede_probe+0x60/0xe0 [qede]
      local_pci_probe+0x48/0xa0
      work_for_cpu_fn+0x24/0x38
      process_one_work+0x1d0/0x468
      worker_thread+0x238/0x4e0
      kthread+0xf0/0x118
      ret_from_fork+0x10/0x18
    
    In this case, qed_hw_prepare() returns error due to hw/fw error, but in
    theory work queue should be in process context instead of interrupt.
    
    The root cause might be the unpaired spin_{un}lock_bh() in
    _qed_mcp_cmd_and_union(), which causes botton half is disabled incorrectly.
    
    Reported-by: Lijian Zhang <Lijian.Zhang@arm.com>
    Signed-off-by: Jia He <justin.he@arm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac1f88dcf4e96576b66a4aaa209b95104d89107c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jul 14 19:00:21 2021 +0200

    r8152: Fix potential PM refcount imbalance
    
    [ Upstream commit 9c23aa51477a37f8b56c3c40192248db0663c196 ]
    
    rtl8152_close() takes the refcount via usb_autopm_get_interface() but
    it doesn't release when RTL8152_UNPLUG test hits.  This may lead to
    the imbalance of PM refcount.  This patch addresses it.
    
    Link: https://bugzilla.suse.com/show_bug.cgi?id=1186194
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e4c9ad9e10e2cde36ca5a294d7d24aa6d17e42e
Author: Axel Lin <axel.lin@ingics.com>
Date:   Sun Jun 27 16:04:18 2021 +0800

    regulator: rt5033: Fix n_voltages settings for BUCK and LDO
    
    [ Upstream commit 6549c46af8551b346bcc0b9043f93848319acd5c ]
    
    For linear regulators, the n_voltages should be (max - min) / step + 1.
    
    Buck voltage from 1v to 3V, per step 100mV, and vout mask is 0x1f.
    If value is from 20 to 31, the voltage will all be fixed to 3V.
    And LDO also, just vout range is different from 1.2v to 3v, step is the
    same. If value is from 18 to 31, the voltage will also be fixed to 3v.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Reviewed-by: ChiYuan Huang <cy_huang@richtek.com>
    Link: https://lore.kernel.org/r/20210627080418.1718127-1-axel.lin@ingics.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc75bb210d9d7e0e791e51cfbb17e5624f7a0d57
Author: Goldwyn Rodrigues <rgoldwyn@suse.de>
Date:   Mon Aug 2 09:31:37 2021 -0500

    btrfs: mark compressed range uptodate only if all bio succeed
    
    [ Upstream commit 240246f6b913b0c23733cfd2def1d283f8cc9bbe ]
    
    In compression write endio sequence, the range which the compressed_bio
    writes is marked as uptodate if the last bio of the compressed (sub)bios
    is completed successfully. There could be previous bio which may
    have failed which is recorded in cb->errors.
    
    Set the writeback range as uptodate only if cb->errors is zero, as opposed
    to checking only the last bio's status.
    
    Backporting notes: in all versions up to 4.4 the last argument is always
    replaced by "!cb->errors".
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Goldwyn Rodrigues <rgoldwyn@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
