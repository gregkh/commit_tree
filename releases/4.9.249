commit e6374a1f554a8972e275e9981134788ebcc0b9ab
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Dec 29 13:45:08 2020 +0100

    Linux 4.9.249
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20201228124853.216621466@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0519bd382ab3b4592f7d92d17487a291a2000a05
Author: Jubin Zhong <zhongjubin@huawei.com>
Date:   Wed Dec 2 10:33:42 2020 +0800

    PCI: Fix pci_slot_release() NULL pointer dereference
    
    commit 4684709bf81a2d98152ed6b610e3d5c403f9bced upstream.
    
    If kobject_init_and_add() fails, pci_slot_release() is called to delete
    slot->list from parent->slots.  But slot->list hasn't been initialized
    yet, so we dereference a NULL pointer:
    
      Unable to handle kernel NULL pointer dereference at virtual address
    00000000
      ...
      CPU: 10 PID: 1 Comm: swapper/0 Not tainted 4.4.240 #197
      task: ffffeb398a45ef10 task.stack: ffffeb398a470000
      PC is at __list_del_entry_valid+0x5c/0xb0
      LR is at pci_slot_release+0x84/0xe4
      ...
      __list_del_entry_valid+0x5c/0xb0
      pci_slot_release+0x84/0xe4
      kobject_put+0x184/0x1c4
      pci_create_slot+0x17c/0x1b4
      __pci_hp_initialize+0x68/0xa4
      pciehp_probe+0x1a4/0x2fc
      pcie_port_probe_service+0x58/0x84
      driver_probe_device+0x320/0x470
    
    Initialize slot->list before calling kobject_init_and_add() to avoid this.
    
    Fixes: 8a94644b440e ("PCI: Fix pci_create_slot() reference count leak")
    Link: https://lore.kernel.org/r/1606876422-117457-1-git-send-email-zhongjubin@huawei.com
    Signed-off-by: Jubin Zhong <zhongjubin@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org      # v5.9+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d67091e9d6ee81543344613927ea3516980ffc3f
Author: Pawel Wieczorkiewicz <wipawel@amazon.de>
Date:   Mon Dec 14 10:25:57 2020 +0100

    xen-blkback: set ring->xenblkd to NULL after kthread_stop()
    
    commit 1c728719a4da6e654afb9cc047164755072ed7c9 upstream.
    
    When xen_blkif_disconnect() is called, the kernel thread behind the
    block interface is stopped by calling kthread_stop(ring->xenblkd).
    The ring->xenblkd thread pointer being non-NULL determines if the
    thread has been already stopped.
    Normally, the thread's function xen_blkif_schedule() sets the
    ring->xenblkd to NULL, when the thread's main loop ends.
    
    However, when the thread has not been started yet (i.e.
    wake_up_process() has not been called on it), the xen_blkif_schedule()
    function would not be called yet.
    
    In such case the kthread_stop() call returns -EINTR and the
    ring->xenblkd remains dangling.
    When this happens, any consecutive call to xen_blkif_disconnect (for
    example in frontend_changed() callback) leads to a kernel crash in
    kthread_stop() (e.g. NULL pointer dereference in exit_creds()).
    
    This is XSA-350.
    
    Cc: <stable@vger.kernel.org> # 4.12
    Fixes: a24fa22ce22a ("xen/blkback: don't use xen_blkif_get() in xen-blkback kthread")
    Reported-by: Olivier Benjamin <oliben@amazon.com>
    Reported-by: Pawel Wieczorkiewicz <wipawel@amazon.de>
    Signed-off-by: Pawel Wieczorkiewicz <wipawel@amazon.de>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a56bc9bd7de85ff95b2ad4e083dbb2d120e39b55
Author: Terry Zhou <bjzhou@marvell.com>
Date:   Fri Nov 6 11:00:39 2020 +0100

    clk: mvebu: a3700: fix the XTAL MODE pin to MPP1_9
    
    commit 6f37689cf6b38fff96de52e7f0d3e78f22803ba0 upstream.
    
    There is an error in the current code that the XTAL MODE
    pin was set to NB MPP1_31 which should be NB MPP1_9.
    The latch register of NB MPP1_9 has different offset of 0x8.
    
    Signed-off-by: Terry Zhou <bjzhou@marvell.com>
    [pali: Fix pin name in commit message]
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 7ea8250406a6 ("clk: mvebu: Add the xtal clock for Armada 3700 SoC")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20201106100039.11385-1-pali@kernel.org
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f358b57a29616852abfa86c0f5034cc2a1e7f3fa
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Sep 20 12:27:40 2020 +0100

    iio:pressure:mpl3115: Force alignment of buffer
    
    commit 198cf32f0503d2ad60d320b95ef6fb8243db857f upstream.
    
    Whilst this is another case of the issue Lars reported with
    an array of elements of smaller than 8 bytes being passed
    to iio_push_to_buffers_with_timestamp(), the solution here is
    a bit different from the other cases and relies on __aligned
    working on the stack (true since 4.6?)
    
    This one is unusual.  We have to do an explicit memset() each time
    as we are reading 3 bytes into a potential 4 byte channel which
    may sometimes be a 2 byte channel depending on what is enabled.
    As such, moving the buffer to the heap in the iio_priv structure
    doesn't save us much.  We can't use a nice explicit structure
    on the stack either as the data channels have different storage
    sizes and are all separately controlled.
    
    Fixes: cc26ad455f57 ("iio: Add Freescale MPL3115A2 pressure / temperature sensor driver")
    Reported-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Reviewed-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Cc: Peter Meerwald <pmeerw@pmeerw.net>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200920112742.170751-7-jic23@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd22921e7a485eecb4c458f010a7d750a6305f84
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Nov 3 20:07:43 2020 +0800

    iio: adc: rockchip_saradc: fix missing clk_disable_unprepare() on error in rockchip_saradc_resume
    
    commit 560c6b914c6ec7d9d9a69fddbb5bf3bf71433e8b upstream.
    
    Fix the missing clk_disable_unprepare() of info->pclk
    before return from rockchip_saradc_resume in the error
    handling case when fails to prepare and enable info->clk.
    
    Suggested-by: Robin Murphy <robin.murphy@arm.com>
    Fixes: 44d6f2ef94f9 ("iio: adc: add driver for Rockchip saradc")
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201103120743.110662-1-miaoqinglang@huawei.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ced6206903ea13370d844d620f806d83a7b8476c
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Thu Nov 12 15:43:22 2020 +0100

    iio: buffer: Fix demux update
    
    commit 19ef7b70ca9487773c29b449adf0c70f540a0aab upstream.
    
    When updating the buffer demux, we will skip a scan element from the
    device in the case `in_ind != out_ind` and we enter the while loop.
    in_ind should only be refreshed with `find_next_bit()` in the end of the
    loop.
    
    Note, to cause problems we need a situation where we are skippig over
    an element (channel not enabled) that happens to not have the same size
    as the next element.   Whilst this is a possible situation we haven't
    actually identified any cases in mainline where it happens as most drivers
    have consistent channel storage sizes with the exception of the timestamp
    which is the last element and hence never skipped over.
    
    Fixes: 5ada4ea9be16 ("staging:iio: add demux optionally to path from device to buffer")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20201112144323.28887-1-nuno.sa@analog.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb31fe989f870becfa031d80e708a954ba9cbe82
Author: Sven Eckelmann <sven@narfation.org>
Date:   Tue Nov 24 07:25:06 2020 +0100

    mtd: parser: cmdline: Fix parsing of part-names with colons
    
    commit 639a82434f16a6df0ce0e7c8595976f1293940fd upstream.
    
    Some devices (especially QCA ones) are already using hardcoded partition
    names with colons in it. The OpenMesh A62 for example provides following
    mtd relevant information via cmdline:
    
      root=31:11 mtdparts=spi0.0:256k(0:SBL1),128k(0:MIBIB),384k(0:QSEE),64k(0:CDT),64k(0:DDRPARAMS),64k(0:APPSBLENV),512k(0:APPSBL),64k(0:ART),64k(custom),64k(0:KEYS),0x002b0000(kernel),0x00c80000(rootfs),15552k(inactive) rootfsname=rootfs rootwait
    
    The change to split only on the last colon between mtd-id and partitions
    will cause newpart to see following string for the first partition:
    
      KEYS),0x002b0000(kernel),0x00c80000(rootfs),15552k(inactive)
    
    Such a partition list cannot be parsed and thus the device fails to boot.
    
    Avoid this behavior by making sure that the start of the first part-name
    ("(") will also be the last byte the mtd-id split algorithm is using for
    its colon search.
    
    Fixes: eb13fa022741 ("mtd: parser: cmdline: Support MTD names containing one or more colons")
    Cc: stable@vger.kernel.org
    Cc: Ron Minnich <rminnich@google.com>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20201124062506.185392-1-sven@narfation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6367d1808732ae3e093c4e2023fb50d8adbcce5
Author: Evan Green <evgreen@chromium.org>
Date:   Tue Sep 29 13:30:57 2020 -0700

    soc: qcom: smp2p: Safely acquire spinlock without IRQs
    
    commit fc3e62e25c3896855b7c3d72df19ca6be3459c9f upstream.
    
    smp2p_update_bits() should disable interrupts when it acquires its
    spinlock. This is important because without the _irqsave, a priority
    inversion can occur.
    
    This function is called both with interrupts enabled in
    qcom_q6v5_request_stop(), and with interrupts disabled in
    ipa_smp2p_panic_notifier(). IRQ handling of spinlocks should be
    consistent to avoid the panic notifier deadlocking because it's
    sitting on the thread that's already got the lock via _request_stop().
    
    Found via lockdep.
    
    Cc: stable@vger.kernel.org
    Fixes: 50e99641413e7 ("soc: qcom: smp2p: Qualcomm Shared Memory Point to Point")
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Link: https://lore.kernel.org/r/20200929133040.RESEND.1.Ideabf6dcdfc577cf39ce3d95b0e4aa1ac8b38f0c@changeid
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ce82e5dcc6f51478fa2ee53cf0853d243fe403b
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Nov 8 23:41:00 2020 +0100

    spi: st-ssc4: Fix unbalanced pm_runtime_disable() in probe error path
    
    commit 5ef76dac0f2c26aeae4ee79eb830280f16d5aceb upstream.
    
    If the calls to devm_platform_ioremap_resource(), irq_of_parse_and_map()
    or devm_request_irq() fail on probe of the ST SSC4 SPI driver, the
    runtime PM disable depth is incremented even though it was not
    decremented before.  Fix it.
    
    Fixes: cd050abeba2a ("spi: st-ssc4: add missed pm_runtime_disable")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v5.5+
    Cc: Chuhong Yuan <hslester96@gmail.com>
    Link: https://lore.kernel.org/r/fbe8768c30dc829e2d77eabe7be062ca22f84024.1604874488.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fda5db2a0bdacf26795a4ded038ebb8582dc769
Author: Lukas Wunner <lukas@wunner.de>
Date:   Mon Dec 7 09:17:11 2020 +0100

    spi: sc18is602: Don't leak SPI master in probe error path
    
    commit 5b8c88462d83331dacb48aeaec8388117fef82e0 upstream.
    
    If the call to devm_gpiod_get_optional() fails on probe of the NXP
    SC18IS602/603 SPI driver, the spi_master struct is erroneously not freed.
    
    Fix by switching over to the new devm_spi_alloc_master() helper.
    
    Fixes: f99008013e19 ("spi: sc18is602: Add reset control via gpio pin.")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v4.9+: 5e844cc37a5c: spi: Introduce device-managed SPI controller allocation
    Cc: <stable@vger.kernel.org> # v4.9+
    Cc: Phil Reid <preid@electromag.com.au>
    Link: https://lore.kernel.org/r/d5f715527b894b91d530fe11a86f51b3184a4e1a.1607286887.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2504d1590ebbe4e7a6fe102a41e1cef1211458e9
Author: Lukas Wunner <lukas@wunner.de>
Date:   Mon Dec 7 09:17:10 2020 +0100

    spi: rb4xx: Don't leak SPI master in probe error path
    
    commit a4729c3506c3eb1a6ca5c0289f4e7cafa4115065 upstream.
    
    If the calls to devm_clk_get(), devm_spi_register_master() or
    clk_prepare_enable() fail on probe of the Mikrotik RB4xx SPI driver,
    the spi_master struct is erroneously not freed.
    
    Fix by switching over to the new devm_spi_alloc_master() helper.
    
    Fixes: 05aec357871f ("spi: Add SPI driver for Mikrotik RB4xx series boards")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v4.2+: 5e844cc37a5c: spi: Introduce device-managed SPI controller allocation
    Cc: <stable@vger.kernel.org> # v4.2+
    Cc: Bert Vermeulen <bert@biot.com>
    Link: https://lore.kernel.org/r/369bf26d71927f60943b1d9d8f51810f00b0237d.1607286887.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8acd02d5846399271b09499ff5ec647ee7c43b4e
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Nov 8 23:41:00 2020 +0100

    spi: pic32: Don't leak DMA channels in probe error path
    
    commit c575e9113bff5e024d75481613faed5ef9d465b2 upstream.
    
    If the calls to devm_request_irq() or devm_spi_register_master() fail
    on probe of the PIC32 SPI driver, the DMA channels requested by
    pic32_spi_dma_prep() are erroneously not released.  Plug the leak.
    
    Fixes: 1bcb9f8ceb67 ("spi: spi-pic32: Add PIC32 SPI master driver")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v4.7+
    Cc: Purna Chandra Mandal <purna.mandal@microchip.com>
    Link: https://lore.kernel.org/r/9624250e3a7aa61274b38219a62375bac1def637.1604874488.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 065424db6292c09c7ee67d20af83580b7f762809
Author: Lukas Wunner <lukas@wunner.de>
Date:   Mon Dec 7 09:17:01 2020 +0100

    spi: davinci: Fix use-after-free on unbind
    
    commit 373afef350a93519b4b8d636b0895da8650b714b upstream.
    
    davinci_spi_remove() accesses the driver's private data after it's been
    freed with spi_master_put().
    
    Fix by moving the spi_master_put() to the end of the function.
    
    Fixes: fe5fd2540947 ("spi: davinci: Use dma_request_chan() for requesting DMA channel")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Cc: <stable@vger.kernel.org> # v4.7+
    Link: https://lore.kernel.org/r/412f7eb1cf8990e0a3a2153f4c577298deab623e.1607286887.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10af52bf856f2d92ae96cd87755ee72103414e09
Author: Lukas Wunner <lukas@wunner.de>
Date:   Mon Dec 7 09:17:04 2020 +0100

    spi: spi-sh: Fix use-after-free on unbind
    
    commit e77df3eca12be4b17f13cf9f215cff248c57d98f upstream.
    
    spi_sh_remove() accesses the driver's private data after calling
    spi_unregister_master() even though that function releases the last
    reference on the spi_master and thereby frees the private data.
    
    Fix by switching over to the new devm_spi_alloc_master() helper which
    keeps the private data accessible until the driver has unbound.
    
    Fixes: 680c1305e259 ("spi/spi_sh: use spi_unregister_master instead of spi_master_put in remove path")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v3.0+: 5e844cc37a5c: spi: Introduce device-managed SPI controller allocation
    Cc: <stable@vger.kernel.org> # v3.0+
    Cc: Axel Lin <axel.lin@ingics.com>
    Link: https://lore.kernel.org/r/6d97628b536baf01d5e3e39db61108f84d44c8b2.1607286887.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f522d9f8267a49a5cd7c143485550ceefa4421d8
Author: Zwane Mwaikambo <zwane@yosper.io>
Date:   Mon Oct 12 22:59:14 2020 -0700

    drm/dp_aux_dev: check aux_dev before use in drm_dp_aux_dev_get_by_minor()
    
    commit 73b62cdb93b68d7e2c1d373c6a411bc00c53e702 upstream.
    
    I observed this when unplugging a DP monitor whilst a computer is asleep
    and then waking it up. This left DP chardev nodes still being present on
    the filesystem and accessing these device nodes caused an oops because
    drm_dp_aux_dev_get_by_minor() assumes a device exists if it is opened.
    This can also be reproduced by creating a device node with mknod(1) and
    issuing an open(2)
    
    [166164.933198] BUG: kernel NULL pointer dereference, address: 0000000000000018
    [166164.933202] #PF: supervisor read access in kernel mode
    [166164.933204] #PF: error_code(0x0000) - not-present page
    [166164.933205] PGD 0 P4D 0
    [166164.933208] Oops: 0000 [#1] PREEMPT SMP NOPTI
    [166164.933211] CPU: 4 PID: 99071 Comm: fwupd Tainted: G        W
    5.8.0-rc6+ #1
    [166164.933213] Hardware name: LENOVO 20RD002VUS/20RD002VUS, BIOS R16ET25W
    (1.11 ) 04/21/2020
    [166164.933232] RIP: 0010:drm_dp_aux_dev_get_by_minor+0x29/0x70
    [drm_kms_helper]
    [166164.933234] Code: 00 0f 1f 44 00 00 55 48 89 e5 41 54 41 89 fc 48 c7
    c7 60 01 a4 c0 e8 26 ab 30 d7 44 89 e6 48 c7 c7 80 01 a4 c0 e8 47 94 d6 d6
    <8b> 50 18 49 89 c4 48 8d 78 18 85 d2 74 33 8d 4a 01 89 d0 f0 0f b1
    [166164.933236] RSP: 0018:ffffb7d7c41cbbf0 EFLAGS: 00010246
    [166164.933237] RAX: 0000000000000000 RBX: ffff8a90001fe900 RCX: 0000000000000000
    [166164.933238] RDX: 0000000000000000 RSI: 0000000000000003 RDI: ffffffffc0a40180
    [166164.933239] RBP: ffffb7d7c41cbbf8 R08: 0000000000000000 R09: ffff8a93e157d6d0
    [166164.933240] R10: 0000000000000000 R11: ffffffffc0a40188 R12: 0000000000000003
    [166164.933241] R13: ffff8a9402200e80 R14: ffff8a90001fe900 R15: 0000000000000000
    [166164.933244] FS:  00007f7fb041eb00(0000) GS:ffff8a9411500000(0000)
    knlGS:0000000000000000
    [166164.933245] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [166164.933246] CR2: 0000000000000018 CR3: 00000000352c2003 CR4: 00000000003606e0
    [166164.933247] Call Trace:
    [166164.933264]  auxdev_open+0x1b/0x40 [drm_kms_helper]
    [166164.933278]  chrdev_open+0xa7/0x1c0
    [166164.933282]  ? cdev_put.part.0+0x20/0x20
    [166164.933287]  do_dentry_open+0x161/0x3c0
    [166164.933291]  vfs_open+0x2d/0x30
    [166164.933297]  path_openat+0xb27/0x10e0
    [166164.933306]  ? atime_needs_update+0x73/0xd0
    [166164.933309]  do_filp_open+0x91/0x100
    [166164.933313]  ? __alloc_fd+0xb2/0x150
    [166164.933316]  do_sys_openat2+0x210/0x2d0
    [166164.933318]  do_sys_open+0x46/0x80
    [166164.933320]  __x64_sys_openat+0x20/0x30
    [166164.933328]  do_syscall_64+0x52/0xc0
    [166164.933336]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    (gdb) disassemble drm_dp_aux_dev_get_by_minor+0x29
    Dump of assembler code for function drm_dp_aux_dev_get_by_minor:
       0x0000000000017b10 <+0>:     callq  0x17b15 <drm_dp_aux_dev_get_by_minor+5>
       0x0000000000017b15 <+5>:     push   %rbp
       0x0000000000017b16 <+6>:     mov    %rsp,%rbp
       0x0000000000017b19 <+9>:     push   %r12
       0x0000000000017b1b <+11>:    mov    %edi,%r12d
       0x0000000000017b1e <+14>:    mov    $0x0,%rdi
       0x0000000000017b25 <+21>:    callq  0x17b2a <drm_dp_aux_dev_get_by_minor+26>
       0x0000000000017b2a <+26>:    mov    %r12d,%esi
       0x0000000000017b2d <+29>:    mov    $0x0,%rdi
       0x0000000000017b34 <+36>:    callq  0x17b39 <drm_dp_aux_dev_get_by_minor+41>
       0x0000000000017b39 <+41>:    mov    0x18(%rax),%edx <=========
       0x0000000000017b3c <+44>:    mov    %rax,%r12
       0x0000000000017b3f <+47>:    lea    0x18(%rax),%rdi
       0x0000000000017b43 <+51>:    test   %edx,%edx
       0x0000000000017b45 <+53>:    je     0x17b7a <drm_dp_aux_dev_get_by_minor+106>
       0x0000000000017b47 <+55>:    lea    0x1(%rdx),%ecx
       0x0000000000017b4a <+58>:    mov    %edx,%eax
       0x0000000000017b4c <+60>:    lock cmpxchg %ecx,(%rdi)
       0x0000000000017b50 <+64>:    jne    0x17b76 <drm_dp_aux_dev_get_by_minor+102>
       0x0000000000017b52 <+66>:    test   %edx,%edx
       0x0000000000017b54 <+68>:    js     0x17b6d <drm_dp_aux_dev_get_by_minor+93>
       0x0000000000017b56 <+70>:    test   %ecx,%ecx
       0x0000000000017b58 <+72>:    js     0x17b6d <drm_dp_aux_dev_get_by_minor+93>
       0x0000000000017b5a <+74>:    mov    $0x0,%rdi
       0x0000000000017b61 <+81>:    callq  0x17b66 <drm_dp_aux_dev_get_by_minor+86>
       0x0000000000017b66 <+86>:    mov    %r12,%rax
       0x0000000000017b69 <+89>:    pop    %r12
       0x0000000000017b6b <+91>:    pop    %rbp
       0x0000000000017b6c <+92>:    retq
       0x0000000000017b6d <+93>:    xor    %esi,%esi
       0x0000000000017b6f <+95>:    callq  0x17b74 <drm_dp_aux_dev_get_by_minor+100>
       0x0000000000017b74 <+100>:   jmp    0x17b5a <drm_dp_aux_dev_get_by_minor+74>
       0x0000000000017b76 <+102>:   mov    %eax,%edx
       0x0000000000017b78 <+104>:   jmp    0x17b43 <drm_dp_aux_dev_get_by_minor+51>
       0x0000000000017b7a <+106>:   xor    %r12d,%r12d
       0x0000000000017b7d <+109>:   jmp    0x17b5a <drm_dp_aux_dev_get_by_minor+74>
    End of assembler dump.
    
    (gdb) list *drm_dp_aux_dev_get_by_minor+0x29
    0x17b39 is in drm_dp_aux_dev_get_by_minor (drivers/gpu/drm/drm_dp_aux_dev.c:65).
    60      static struct drm_dp_aux_dev *drm_dp_aux_dev_get_by_minor(unsigned index)
    61      {
    62              struct drm_dp_aux_dev *aux_dev = NULL;
    63
    64              mutex_lock(&aux_idr_mutex);
    65              aux_dev = idr_find(&aux_idr, index);
    66              if (!kref_get_unless_zero(&aux_dev->refcount))
    67                      aux_dev = NULL;
    68              mutex_unlock(&aux_idr_mutex);
    69
    (gdb) p/x &((struct drm_dp_aux_dev *)(0x0))->refcount
    $8 = 0x18
    
    Looking at the caller, checks on the minor are pushed down to
    drm_dp_aux_dev_get_by_minor()
    
    static int auxdev_open(struct inode *inode, struct file *file)
    {
        unsigned int minor = iminor(inode);
        struct drm_dp_aux_dev *aux_dev;
    
        aux_dev = drm_dp_aux_dev_get_by_minor(minor); <====
        if (!aux_dev)
            return -ENODEV;
    
        file->private_data = aux_dev;
        return 0;
    }
    
    Fixes: e94cb37b34eb ("drm/dp: Add a drm_aux-dev module for reading/writing dpcd registers.")
    Cc: <stable@vger.kernel.org> # v4.6+
    Signed-off-by: Zwane Mwaikambo <zwane@yosper.io>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    [added Cc to stable]
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/alpine.DEB.2.21.2010122231070.38717@montezuma.home
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c7c903caef18d45bac879557861656aa30b8933
Author: Dave Kleikamp <dave.kleikamp@oracle.com>
Date:   Fri Nov 13 14:58:46 2020 -0600

    jfs: Fix array index bounds check in dbAdjTree
    
    commit c61b3e4839007668360ed8b87d7da96d2e59fc6c upstream.
    
    Bounds checking tools can flag a bug in dbAdjTree() for an array index
    out of bounds in dmt_stree. Since dmt_stree can refer to the stree in
    both structures dmaptree and dmapctl, use the larger array to eliminate
    the false positive.
    
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Reported-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 494c2c5ef3d4224d7b193a2f4a9fc92f9a8cd454
Author: Zhe Li <lizhe67@huawei.com>
Date:   Fri May 29 11:37:11 2020 +0800

    jffs2: Fix GC exit abnormally
    
    commit 9afc9a8a4909fece0e911e72b1060614ba2f7969 upstream.
    
    The log of this problem is:
    jffs2: Error garbage collecting node at 0x***!
    jffs2: No space for garbage collection. Aborting GC thread
    
    This is because GC believe that it do nothing, so it abort.
    
    After going over the image of jffs2, I find a scene that
    can trigger this problem stably.
    The scene is: there is a normal dirent node at summary-area,
    but abnormal at corresponding not-summary-area with error
    name_crc.
    
    The reason that GC exit abnormally is because it find that
    abnormal dirent node to GC, but when it goes to function
    jffs2_add_fd_to_list, it cannot meet the condition listed
    below:
    
    if ((*prev)->nhash == new->nhash && !strcmp((*prev)->name, new->name))
    
    So no node is marked obsolete, statistical information of
    erase_block do not change, which cause GC exit abnormally.
    
    The root cause of this problem is: we do not check the
    name_crc of the abnormal dirent node with summary is enabled.
    
    Noticed that in function jffs2_scan_dirent_node, we use
    function jffs2_scan_dirty_space to deal with the dirent
    node with error name_crc. So this patch add a checking
    code in function read_direntry to ensure the correctness
    of dirent node. If checked failed, the dirent node will
    be marked obsolete so GC will pass this node and this
    problem will be fixed.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Zhe Li <lizhe67@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39d6b71ba55cfa5773332fcea498b85bed5bed11
Author: Luis Henriques <lhenriques@suse.de>
Date:   Thu Nov 12 10:45:12 2020 +0000

    ceph: fix race in concurrent __ceph_remove_cap invocations
    
    commit e5cafce3ad0f8652d6849314d951459c2bff7233 upstream.
    
    A NULL pointer dereference may occur in __ceph_remove_cap with some of the
    callbacks used in ceph_iterate_session_caps, namely trim_caps_cb and
    remove_session_caps_cb. Those callers hold the session->s_mutex, so they
    are prevented from concurrent execution, but ceph_evict_inode does not.
    
    Since the callers of this function hold the i_ceph_lock, the fix is simply
    a matter of returning immediately if caps->ci is NULL.
    
    Cc: stable@vger.kernel.org
    URL: https://tracker.ceph.com/issues/43272
    Suggested-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Luis Henriques <lhenriques@suse.de>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97d73f7237ddb22e91201dbb521c82080a4a05f8
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Fri Dec 4 10:35:38 2020 +0000

    powerpc/xmon: Change printk() to pr_cont()
    
    commit 7c6c86b36a36dd4a13d30bba07718e767aa2e7a1 upstream.
    
    Since some time now, printk() adds carriage return, leading to
    unusable xmon output if there is no udbg backend available:
    
      [   54.288722] sysrq: Entering xmon
      [   54.292209] Vector: 0  at [cace3d2c]
      [   54.292274]     pc:
      [   54.292331] c0023650
      [   54.292468] : xmon+0x28/0x58
      [   54.292519]
      [   54.292574]     lr:
      [   54.292630] c0023724
      [   54.292749] : sysrq_handle_xmon+0xa4/0xfc
      [   54.292801]
      [   54.292867]     sp: cace3de8
      [   54.292931]    msr: 9032
      [   54.292999]   current = 0xc28d0000
      [   54.293072]     pid   = 377, comm = sh
      [   54.293157] Linux version 5.10.0-rc6-s3k-dev-01364-gedf13f0ccd76-dirty (root@po17688vm.idsi0.si.c-s.fr) (powerpc64-linux-gcc (GCC) 10.1.0, GNU ld (GNU Binutils) 2.34) #4211 PREEMPT Fri Dec 4 09:32:11 UTC 2020
      [   54.293287] enter ? for help
      [   54.293470] [cace3de8]
      [   54.293532] c0023724
      [   54.293654]  sysrq_handle_xmon+0xa4/0xfc
      [   54.293711]  (unreliable)
      ...
      [   54.296002]
      [   54.296159] --- Exception: c01 (System Call) at
      [   54.296217] 0fd4e784
      [   54.296303]
      [   54.296375] SP (7fca6ff0) is in userspace
      [   54.296431] mon>
      [   54.296484]  <no input ...>
    
    Use pr_cont() instead.
    
    Fixes: 4bcc595ccd80 ("printk: reinstate KERN_CONT for printing continuation lines")
    Cc: stable@vger.kernel.org # v4.9+
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    [mpe: Mention that it only happens when udbg is not available]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/c8a6ec704416ecd5ff2bd26213c9bc026bdd19de.1607077340.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c23d1af7e2e0bbfa8f608d17463ed96f68ce0e14
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Nov 10 11:10:15 2020 +0000

    KVM: arm64: Introduce handling of AArch32 TTBCR2 traps
    
    commit ca4e514774930f30b66375a974b5edcbebaf0e7e upstream.
    
    ARMv8.2 introduced TTBCR2, which shares TCR_EL1 with TTBCR.
    Gracefully handle traps to this register when HCR_EL2.TVM is set.
    
    Cc: stable@vger.kernel.org
    Reported-by: James Morse <james.morse@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b0d88730ac827e89401f714b9d8bbfec4c126dd
Author: Chunguang Xu <brookxu@tencent.com>
Date:   Sat Nov 7 23:58:18 2020 +0800

    ext4: fix a memory leak of ext4_free_data
    
    commit cca415537244f6102cbb09b5b90db6ae2c953bdd upstream.
    
    When freeing metadata, we will create an ext4_free_data and
    insert it into the pending free list.  After the current
    transaction is committed, the object will be freed.
    
    ext4_mb_free_metadata() will check whether the area to be freed
    overlaps with the pending free list. If true, return directly. At this
    time, ext4_free_data is leaked.  Fortunately, the probability of this
    problem is small, since it only occurs if the file system is corrupted
    such that a block is claimed by more one inode and those inodes are
    deleted within a single jbd2 transaction.
    
    Signed-off-by: Chunguang Xu <brookxu@tencent.com>
    Link: https://lore.kernel.org/r/1604764698-4269-8-git-send-email-brookxu@tencent.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 152b4676a673d7b03803b86db3e9c6dfe4969604
Author: Pavel Machek <pavel@denx.de>
Date:   Mon Aug 3 11:35:06 2020 +0200

    btrfs: fix return value mixup in btrfs_get_extent
    
    commit 881a3a11c2b858fe9b69ef79ac5ee9978a266dc9 upstream
    
    btrfs_get_extent() sets variable ret, but out: error path expect error
    to be in variable err so the error code is lost.
    
    Fixes: 6bf9e4bd6a27 ("btrfs: inode: Verify inode mode to avoid NULL pointer dereference")
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Pavel Machek (CIP) <pavel@denx.de>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb6874171820fe34f7d99c4a4353ee3abb1ecbd9
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Sep 18 13:08:52 2019 +0100

    Btrfs: fix selftests failure due to uninitialized i_mode in test inodes
    
    commit 9f7fec0ba89108b9385f1b9fb167861224912a4a upstream
    
    Some of the self tests create a test inode, setup some extents and then do
    calls to btrfs_get_extent() to test that the corresponding extent maps
    exist and are correct. However btrfs_get_extent(), since the 5.2 merge
    window, now errors out when it finds a regular or prealloc extent for an
    inode that does not correspond to a regular file (its ->i_mode is not
    S_IFREG). This causes the self tests to fail sometimes, specially when
    KASAN, slub_debug and page poisoning are enabled:
    
      $ modprobe btrfs
      modprobe: ERROR: could not insert 'btrfs': Invalid argument
    
      $ dmesg
      [ 9414.691648] Btrfs loaded, crc32c=crc32c-intel, debug=on, assert=on, integrity-checker=on, ref-verify=on
      [ 9414.692655] BTRFS: selftest: sectorsize: 4096  nodesize: 4096
      [ 9414.692658] BTRFS: selftest: running btrfs free space cache tests
      [ 9414.692918] BTRFS: selftest: running extent only tests
      [ 9414.693061] BTRFS: selftest: running bitmap only tests
      [ 9414.693366] BTRFS: selftest: running bitmap and extent tests
      [ 9414.696455] BTRFS: selftest: running space stealing from bitmap to extent tests
      [ 9414.697131] BTRFS: selftest: running extent buffer operation tests
      [ 9414.697133] BTRFS: selftest: running btrfs_split_item tests
      [ 9414.697564] BTRFS: selftest: running extent I/O tests
      [ 9414.697583] BTRFS: selftest: running find delalloc tests
      [ 9415.081125] BTRFS: selftest: running find_first_clear_extent_bit test
      [ 9415.081278] BTRFS: selftest: running extent buffer bitmap tests
      [ 9415.124192] BTRFS: selftest: running inode tests
      [ 9415.124195] BTRFS: selftest: running btrfs_get_extent tests
      [ 9415.127909] BTRFS: selftest: running hole first btrfs_get_extent test
      [ 9415.128343] BTRFS critical (device (efault)): regular/prealloc extent found for non-regular inode 256
      [ 9415.131428] BTRFS: selftest: fs/btrfs/tests/inode-tests.c:904 expected a real extent, got 0
    
    This happens because the test inodes are created without ever initializing
    the i_mode field of the inode, and neither VFS's new_inode() nor the btrfs
    callback btrfs_alloc_inode() initialize the i_mode. Initialization of the
    i_mode is done through the various callbacks used by the VFS to create
    new inodes (regular files, directories, symlinks, tmpfiles, etc), which
    all call btrfs_new_inode() which in turn calls inode_init_owner(), which
    sets the inode's i_mode. Since the tests only uses new_inode() to create
    the test inodes, the i_mode was never initialized.
    
    This always happens on a VM I used with kasan, slub_debug and many other
    debug facilities enabled. It also happened to someone who reported this
    on bugzilla (on a 5.3-rc).
    
    Fix this by setting i_mode to S_IFREG at btrfs_new_test_inode().
    
    Fixes: 6bf9e4bd6a2778 ("btrfs: inode: Verify inode mode to avoid NULL pointer dereference")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=204397
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19e48e3a076c151986747255775341a10e5f3425
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Jul 11 13:41:21 2018 +0800

    btrfs: scrub: Don't use inode page cache in scrub_handle_errored_block()
    
    commit 665d4953cde6d9e75c62a07ec8f4f8fd7d396ade upstream
    
    In commit ac0b4145d662 ("btrfs: scrub: Don't use inode pages for device
    replace") we removed the branch of copy_nocow_pages() to avoid
    corruption for compressed nodatasum extents.
    
    However above commit only solves the problem in scrub_extent(), if
    during scrub_pages() we failed to read some pages,
    sctx->no_io_error_seen will be non-zero and we go to fixup function
    scrub_handle_errored_block().
    
    In scrub_handle_errored_block(), for sctx without csum (no matter if
    we're doing replace or scrub) we go to scrub_fixup_nodatasum() routine,
    which does the similar thing with copy_nocow_pages(), but does it
    without the extra check in copy_nocow_pages() routine.
    
    So for test cases like btrfs/100, where we emulate read errors during
    replace/scrub, we could corrupt compressed extent data again.
    
    This patch will fix it just by avoiding any "optimization" for
    nodatasum, just falls back to the normal fixup routine by try read from
    any good copy.
    
    This also solves WARN_ON() or dead lock caused by lame backref iteration
    in scrub_fixup_nodatasum() routine.
    
    The deadlock or WARN_ON() won't be triggered before commit ac0b4145d662
    ("btrfs: scrub: Don't use inode pages for device replace") since
    copy_nocow_pages() have better locking and extra check for data extent,
    and it's already doing the fixup work by try to read data from any good
    copy, so it won't go scrub_fixup_nodatasum() anyway.
    
    This patch disables the faulty code and will be removed completely in a
    followup patch.
    
    Fixes: ac0b4145d662 ("btrfs: scrub: Don't use inode pages for device replace")
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab7c503f160dd14a9ca0d2936a326276ae64ada6
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Jun 27 18:19:55 2018 +0800

    btrfs: quota: Set rescan progress to (u64)-1 if we hit last leaf
    
    commoit 6f7de19ed3d4d3526ca5eca428009f97cf969c2f upstream
    
    Commit ff3d27a048d9 ("btrfs: qgroup: Finish rescan when hit the last leaf
    of extent tree") added a new exit for rescan finish.
    
    However after finishing quota rescan, we set
    fs_info->qgroup_rescan_progress to (u64)-1 before we exit through the
    original exit path.
    While we missed that assignment of (u64)-1 in the new exit path.
    
    The end result is, the quota status item doesn't have the same value.
    (-1 vs the last bytenr + 1)
    Although it doesn't affect quota accounting, it's still better to keep
    the original behavior.
    
    Reported-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Fixes: ff3d27a048d9 ("btrfs: qgroup: Finish rescan when hit the last leaf of extent tree")
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cbc0b7da618079a4fda5bcc937fb725bdfa1391
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 25 18:45:52 2020 +0100

    USB: serial: keyspan_pda: fix write unthrottling
    
    commit 320f9028c7873c3c7710e8e93e5c979f4c857490 upstream.
    
    The driver did not update its view of the available device buffer space
    until write() was called in task context. This meant that write_room()
    would return 0 even after the device had sent a write-unthrottle
    notification, something which could lead to blocked writers not being
    woken up (e.g. when using OPOST).
    
    Note that we must also request an unthrottle notification is case a
    write() request fills the device buffer exactly.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd7ebb8e38ee0ba2324fa6e31fd64f721e08e61d
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 25 18:45:51 2020 +0100

    USB: serial: keyspan_pda: fix tx-unthrottle use-after-free
    
    commit 49fbb8e37a961396a5b6c82937c70df91de45e9d upstream.
    
    The driver's transmit-unthrottle work was never flushed on disconnect,
    something which could lead to the driver port data being freed while the
    unthrottle work is still scheduled.
    
    Fix this by cancelling the unthrottle work when shutting down the port.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b33316d5c3ec86e8cd3625ea2197518185600d2
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 25 18:45:50 2020 +0100

    USB: serial: keyspan_pda: fix write-wakeup use-after-free
    
    commit 37faf50615412947868c49aee62f68233307f4e4 upstream.
    
    The driver's deferred write wakeup was never flushed on disconnect,
    something which could lead to the driver port data being freed while the
    wakeup work is still scheduled.
    
    Fix this by using the usb-serial write wakeup which gets cancelled
    properly on disconnect.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89151f8656fa443cd0203ea542cffa079d887041
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 25 18:45:49 2020 +0100

    USB: serial: keyspan_pda: fix stalled writes
    
    commit c01d2c58698f710c9e13ba3e2d296328606f74fd upstream.
    
    Make sure to clear the write-busy flag also in case no new data was
    submitted due to lack of device buffer space so that writing is
    resumed once space again becomes available.
    
    Fixes: 507ca9bc0476 ("[PATCH] USB: add ability for usb-serial drivers to determine if their write urb is currently being used.")
    Cc: stable <stable@vger.kernel.org>     # 2.6.13
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d337d2c8de0b816f68f807184d1385dedc9894c3
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 25 18:45:48 2020 +0100

    USB: serial: keyspan_pda: fix write deadlock
    
    commit 7353cad7ee4deaefc16e94727e69285563e219f6 upstream.
    
    The write() callback can be called in interrupt context (e.g. when used
    as a console) so interrupts must be disabled while holding the port lock
    to prevent a possible deadlock.
    
    Fixes: e81ee637e4ae ("usb-serial: possible irq lock inversion (PPP vs. usb/serial)")
    Fixes: 507ca9bc0476 ("[PATCH] USB: add ability for usb-serial drivers to determine if their write urb is currently being used.")
    Cc: stable <stable@vger.kernel.org>     # 2.6.19
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb04eb2ceb11d9483c7b9e12023f38bd72650b59
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Oct 25 18:45:47 2020 +0100

    USB: serial: keyspan_pda: fix dropped unthrottle interrupts
    
    commit 696c541c8c6cfa05d65aa24ae2b9e720fc01766e upstream.
    
    Commit c528fcb116e6 ("USB: serial: keyspan_pda: fix receive sanity
    checks") broke write-unthrottle handling by dropping well-formed
    unthrottle-interrupt packets which are precisely two bytes long. This
    could lead to blocked writers not being woken up when buffer space again
    becomes available.
    
    Instead, stop unconditionally printing the third byte which is
    (presumably) only valid on modem-line changes.
    
    Fixes: c528fcb116e6 ("USB: serial: keyspan_pda: fix receive sanity checks")
    Cc: stable <stable@vger.kernel.org>     # 4.11
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b8bcc5edc5772ebad782fa3fcbb90a0bd229c6
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Nov 4 17:47:27 2020 +0100

    USB: serial: mos7720: fix parallel-port state restore
    
    commit 975323ab8f116667676c30ca3502a6757bd89e8d upstream.
    
    The parallel-port restore operations is called when a driver claims the
    port and is supposed to restore the provided state (e.g. saved when
    releasing the port).
    
    Fixes: b69578df7e98 ("USB: usbserial: mos7720: add support for parallel port on moschip 7715")
    Cc: stable <stable@vger.kernel.org>     # 2.6.35
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26aabe4cfd4406615d4a513cf11c2f73e95fd8e7
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Wed Nov 25 02:26:55 2020 -0500

    powerpc/perf: Exclude kernel samples while counting events in user space.
    
    commit aa8e21c053d72b6639ea5a7f1d3a1d0209534c94 upstream.
    
    Perf event attritube supports exclude_kernel flag to avoid
    sampling/profiling in supervisor state (kernel). Based on this event
    attr flag, Monitor Mode Control Register bit is set to freeze on
    supervisor state. But sometimes (due to hardware limitation), Sampled
    Instruction Address Register (SIAR) locks on to kernel address even
    when freeze on supervisor is set. Patch here adds a check to drop
    those samples.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1606289215-1433-1-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c826c662ba7c126bbba013c41466eecea022132
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Mon Dec 7 14:58:06 2020 +0000

    staging: comedi: mf6x4: Fix AI end-of-conversion detection
    
    commit 56c90457ebfe9422496aac6ef3d3f0f0ea8b2ec2 upstream.
    
    I have had reports from two different people that attempts to read the
    analog input channels of the MF624 board fail with an `ETIMEDOUT` error.
    
    After triggering the conversion, the code calls `comedi_timeout()` with
    `mf6x4_ai_eoc()` as the callback function to check if the conversion is
    complete.  The callback returns 0 if complete or `-EBUSY` if not yet
    complete.  `comedi_timeout()` returns `-ETIMEDOUT` if it has not
    completed within a timeout period which is propagated as an error to the
    user application.
    
    The existing code considers the conversion to be complete when the EOLC
    bit is high.  However, according to the user manuals for the MF624 and
    MF634 boards, this test is incorrect because EOLC is an active low
    signal that goes high when the conversion is triggered, and goes low
    when the conversion is complete.  Fix the problem by inverting the test
    of the EOLC bit state.
    
    Fixes: 04b565021a83 ("comedi: Humusoft MF634 and MF624 DAQ cards driver")
    Cc: <stable@vger.kernel.org> # v4.4+
    Cc: Rostislav Lisovy <lisovy@gmail.com>
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20201207145806.4046-1-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61b66e8171b53e92d19447760bfc7b5f20f49bd4
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Thu Dec 17 16:59:07 2020 +0100

    s390/dasd: fix list corruption of lcu list
    
    commit 53a7f655834c7c335bf683f248208d4fbe4b47bc upstream.
    
    In dasd_alias_disconnect_device_from_lcu the device is removed from any
    list on the LCU. Afterwards the LCU is removed from the lcu list if it
    does not contain devices any longer.
    
    The lcu->lock protects the lcu from parallel updates. But to cancel all
    workers and wait for completion the lcu->lock has to be unlocked.
    
    If two devices are removed in parallel and both are removed from the LCU
    the first device that takes the lcu->lock again will delete the LCU because
    it is already empty but the second device also tries to free the LCU which
    leads to a list corruption of the lcu list.
    
    Fix by removing the device right before the lcu is checked without
    unlocking the lcu->lock in between.
    
    Fixes: 8e09f21574ea ("[S390] dasd: add hyper PAV support to DASD device driver, part 1")
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c72f447c921438fa70a1bdb5a6e7da36813cb6cf
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Thu Dec 17 16:59:06 2020 +0100

    s390/dasd: fix list corruption of pavgroup group list
    
    commit 0ede91f83aa335da1c3ec68eb0f9e228f269f6d8 upstream.
    
    dasd_alias_add_device() moves devices to the active_devices list in case
    of a scheduled LCU update regardless if they have previously been in a
    pavgroup or not.
    
    Example: device A and B are in the same pavgroup.
    
    Device A has already been in a pavgroup and the private->pavgroup pointer
    is set and points to a valid pavgroup. While going through dasd_add_device
    it is moved from the pavgroup to the active_devices list.
    
    In parallel device B might be removed from the same pavgroup in
    remove_device_from_lcu() which in turn checks if the group is empty
    and deletes it accordingly because device A has already been removed from
    there.
    
    When now device A enters remove_device_from_lcu() it is tried to remove it
    from the pavgroup again because the pavgroup pointer is still set and again
    the empty group will be cleaned up which leads to a list corruption.
    
    Fix by setting private->pavgroup to NULL in dasd_add_device.
    
    If the device has been the last device on the pavgroup an empty pavgroup
    remains but this will be cleaned up by the scheduled lcu_update which
    iterates over all existing pavgroups.
    
    Fixes: 8e09f21574ea ("[S390] dasd: add hyper PAV support to DASD device driver, part 1")
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33127503e0a418c850f276f160bdaeb89cdd0ab7
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Thu Dec 17 16:59:05 2020 +0100

    s390/dasd: prevent inconsistent LCU device data
    
    commit a29ea01653493b94ea12bb2b89d1564a265081b6 upstream.
    
    Prevent _lcu_update from adding a device to a pavgroup if the LCU still
    requires an update. The data is not reliable any longer and in parallel
    devices might have been moved on the lists already.
    This might lead to list corruptions or invalid PAV grouping.
    Only add devices to a pavgroup if the LCU is up to date. Additional steps
    are taken by the scheduled lcu update.
    
    Fixes: 8e09f21574ea ("[S390] dasd: add hyper PAV support to DASD device driver, part 1")
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.ibm.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f0a1f662f71518f2bf6b3feb430b2f48025a219
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 18 15:58:58 2020 +0100

    ALSA: usb-audio: Disable sample read check if firmware doesn't give back
    
    commit 9df28edce7c6ab38050235f6f8b43dd7ccd01b6d upstream.
    
    Some buggy firmware don't give the current sample rate but leaves
    zero.  Handle this case more gracefully without warning but just skip
    the current rate verification from the next time.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201218145858.2357-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8c05ed1108f25e01dc8c7a6c67371d9840283b0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 18 17:17:30 2020 +0100

    ALSA: pcm: oss: Fix a few more UBSAN fixes
    
    commit 11cb881bf075cea41092a20236ba708b18e1dbb2 upstream.
    
    There are a few places that call round{up|down}_pow_of_two() with the
    value zero, and this causes undefined behavior warnings.  Avoid
    calling those macros if such a nonsense value is passed; it's a minor
    optimization as well, as we handle it as either an error or a value to
    be skipped, instead.
    
    Reported-by: syzbot+33ef0b6639a8d2d42b4c@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201218161730.26596-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f280a1bea8d5373aab2d8f02166e1c456bb5486
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Dec 11 10:18:14 2020 +0800

    ACPI: PNP: compare the string length in the matching_id()
    
    commit b08221c40febcbda9309dd70c61cf1b0ebb0e351 upstream.
    
    Recently we met a touchscreen problem on some Thinkpad machines, the
    touchscreen driver (i2c-hid) is not loaded and the touchscreen can't
    work.
    
    An i2c ACPI device with the name WACF2200 is defined in the BIOS, with
    the current rule in matching_id(), this device will be regarded as
    a PNP device since there is WACFXXX in the acpi_pnp_device_ids[] and
    this PNP device is attached to the acpi device as the 1st
    physical_node, this will make the i2c bus match fail when i2c bus
    calls acpi_companion_match() to match the acpi_id_table in the i2c-hid
    driver.
    
    WACF2200 is an i2c device instead of a PNP device, after adding the
    string length comparing, the matching_id() will return false when
    matching WACF2200 and WACFXXX, and it is reasonable to compare the
    string length when matching two IDs.
    
    Suggested-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb78342c77147469a297a0a067afe23799dc0ad0
Author: Daniel Scally <djrscally@gmail.com>
Date:   Sat Dec 5 17:04:03 2020 +0000

    Revert "ACPI / resources: Use AE_CTRL_TERMINATE to terminate resources walks"
    
    commit 12fc4dad94dfac25599f31257aac181c691ca96f upstream.
    
    This reverts commit 8a66790b7850a6669129af078768a1d42076a0ef.
    
    Switching this function to AE_CTRL_TERMINATE broke the documented
    behaviour of acpi_dev_get_resources() - AE_CTRL_TERMINATE does not, in
    fact, terminate the resource walk because acpi_walk_resource_buffer()
    ignores it (specifically converting it to AE_OK), referring to that
    value as "an OK termination by the user function". This means that
    acpi_dev_get_resources() does not abort processing when the preproc
    function returns a negative value.
    
    Signed-off-by: Daniel Scally <djrscally@gmail.com>
    Cc: 3.10+ <stable@vger.kernel.org> # 3.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3507348a64ead3c14b77b7af4776dd73a2caec88
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Dec 14 13:37:46 2020 -0800

    Input: cyapa_gen6 - fix out-of-bounds stack access
    
    commit f051ae4f6c732c231046945b36234e977f8467c6 upstream.
    
    gcc -Warray-bounds warns about a serious bug in
    cyapa_pip_retrieve_data_structure:
    
    drivers/input/mouse/cyapa_gen6.c: In function 'cyapa_pip_retrieve_data_structure.constprop':
    include/linux/unaligned/access_ok.h:40:17: warning: array subscript -1 is outside array bounds of 'struct retrieve_data_struct_cmd[1]' [-Warray-bounds]
       40 |  *((__le16 *)p) = cpu_to_le16(val);
    drivers/input/mouse/cyapa_gen6.c:569:13: note: while referencing 'cmd'
      569 |  } __packed cmd;
          |             ^~~
    
    Apparently the '-2' was added to the pointer instead of the value,
    writing garbage into the stack next to this variable.
    
    Fixes: c2c06c41f700 ("Input: cyapa - add gen6 device module support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20201026161332.3708389-1-arnd@kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cb351a17e8a90f3e102c9608e06ec031b1a1a3c
Author: Lukas Wunner <lukas@wunner.de>
Date:   Mon Dec 7 09:17:12 2020 +0100

    media: netup_unidvb: Don't leak SPI master in probe error path
    
    commit e297ddf296de35037fa97f4302782def196d350a upstream.
    
    If the call to spi_register_master() fails on probe of the NetUP
    Universal DVB driver, the spi_master struct is erroneously not freed.
    
    Likewise, if spi_new_device() fails, the spi_controller struct is
    not unregistered.  Plug the leaks.
    
    While at it, fix an ordering issue in netup_spi_release() wherein
    spi_unregister_master() is called after fiddling with the IRQ control
    register.  The correct order is to call spi_unregister_master() *before*
    this teardown step because bus accesses may still be ongoing until that
    function returns.
    
    Fixes: 52b1eaf4c59a ("[media] netup_unidvb: NetUP Universal DVB-S/S2/T/T2/C PCI-E card driver")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Reviewed-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Cc: <stable@vger.kernel.org> # v4.3+: 5e844cc37a5c: spi: Introduce device-managed SPI controller allocation
    Cc: <stable@vger.kernel.org> # v4.3+
    Cc: Kozlov Sergey <serjk@netup.ru>
    Link: https://lore.kernel.org/r/c4c24f333fc7840f4a3db24789e6e10dd660bede.1607286887.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6756e01eed8c327e43fe1b51196954e29e3a71f
Author: Sean Young <sean@mess.org>
Date:   Mon Nov 9 23:16:52 2020 +0100

    media: sunxi-cir: ensure IR is handled when it is continuous
    
    commit 3f56df4c8ffeb120ed41906d3aae71799b7e726a upstream.
    
    If a user holds a button down on a remote, then no ir idle interrupt will
    be generated until the user releases the button, depending on how quickly
    the remote repeats. No IR is processed until that point, which means that
    holding down a button may not do anything.
    
    This also resolves an issue on a Cubieboard 1 where the IR receiver is
    picking up ambient infrared as IR and spews out endless
    "rc rc0: IR event FIFO is full!" messages unless you choose to live in
    the dark.
    
    Cc: stable@vger.kernel.org
    Tested-by: Hans Verkuil <hverkuil@xs4all.nl>
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Reported-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87e4bba8a6c3f02c8ec9d7cb840378ecdcc290bc
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Dec 2 18:20:04 2020 +0100

    media: gspca: Fix memory leak in probe
    
    commit e469d0b09a19496e1972a20974bbf55b728151eb upstream.
    
    The gspca driver leaks memory when a probe fails.  gspca_dev_probe2()
    calls v4l2_device_register(), which takes a reference to the
    underlying device node (in this case, a USB interface).  But the
    failure pathway neglects to call v4l2_device_unregister(), the routine
    responsible for dropping this reference.  Consequently the memory for
    the USB interface and its device never gets released.
    
    This patch adds the missing function call.
    
    Reported-and-tested-by: syzbot+44e64397bd81d5e84cba@syzkaller.appspotmail.com
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ea803688d40960676fb0e3ccb85f7e1b8518870
Author: Simon Beginn <linux@simonmicro.de>
Date:   Fri Dec 11 16:17:32 2020 -0800

    Input: goodix - add upside-down quirk for Teclast X98 Pro tablet
    
    [ Upstream commit cffdd6d90482316e18d686060a4397902ea04bd2 ]
    
    The touchscreen on the Teclast x98 Pro is also mounted upside-down in
    relation to the display orientation.
    
    Signed-off-by: Simon Beginn <linux@simonmicro.de>
    Signed-off-by: Bastien Nocera <hadess@hadess.net>
    Link: https://lore.kernel.org/r/20201117004253.27A5A27EFD@localhost
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33f12d634f1be04327bdcce89117a9b28448b1b3
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Dec 9 17:59:53 2020 -0800

    Input: cros_ec_keyb - send 'scancodes' in addition to key events
    
    [ Upstream commit 80db2a087f425b63f0163bc95217abd01c637cb5 ]
    
    To let userspace know what 'scancodes' should be used in EVIOCGKEYCODE
    and EVIOCSKEYCODE ioctls, we should send EV_MSC/MSC_SCAN events in
    addition to EV_KEY/KEY_* events. The driver already declared MSC_SCAN
    capability, so it is only matter of actually sending the events.
    
    Link: https://lore.kernel.org/r/X87aOaSptPTvZ3nZ@google.com
    Acked-by: Rajat Jain <rajatja@google.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de8349918bd25a64a486568d1fe028b01defe724
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Sun Nov 29 17:30:44 2020 +0200

    cfg80211: initialize rekey_data
    
    [ Upstream commit f495acd8851d7b345e5f0e521b2645b1e1f928a0 ]
    
    In case we have old supplicant, the akm field is uninitialized.
    
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20201129172929.930f0ab7ebee.Ic546e384efab3f4a89f318eafddc3eb7d556aecb@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7619a19b0d6557e90f95a83784caf74835711cfe
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Dec 12 13:28:18 2020 +0100

    clk: s2mps11: Fix a resource leak in error handling paths in the probe function
    
    [ Upstream commit d2d94fc567624f96187e8b52083795620f93e69f ]
    
    Some resource should be released in the error handling path of the probe
    function, as already done in the remove function.
    
    The remove function was fixed in commit bf416bd45738 ("clk: s2mps11: Add
    missing of_node_put and of_clk_del_provider")
    
    Fixes: 7cc560dea415 ("clk: s2mps11: Add support for s2mps11")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20201212122818.86195-1-christophe.jaillet@wanadoo.fr
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7dadc8fb2ddd2f782de207b3b2d103845b800a5f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Dec 16 11:38:04 2020 +0300

    qlcnic: Fix error code in probe
    
    [ Upstream commit 0d52848632a357948028eab67ff9b7cc0c12a0fb ]
    
    Return -EINVAL if we can't find the correct device.  Currently it
    returns success.
    
    Fixes: 13159183ec7a ("qlcnic: 83xx base driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/X9nHbMqEyI/xPfGd@mwanda
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f7b591e0bcc34acbb7da37ce66161d9f6ffa961
Author: Zheng Zengkai <zhengzengkai@huawei.com>
Date:   Fri Jul 3 17:33:44 2020 +0800

    perf record: Fix memory leak when using '--user-regs=?' to list registers
    
    [ Upstream commit 2eb5dd418034ecea2f7031e3d33f2991a878b148 ]
    
    When using 'perf record's option '-I' or '--user-regs=' along with
    argument '?' to list available register names, memory of variable 'os'
    allocated by strdup() needs to be released before __parse_regs()
    returns, otherwise memory leak will occur.
    
    Fixes: bcc84ec65ad1 ("perf record: Add ability to name registers to record")
    Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Li Bin <huawei.libin@huawei.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lore.kernel.org/r/20200703093344.189450-1-zhengzengkai@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36200e4ac59b3e9542669ed26abadc7c41190130
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Fri Nov 13 21:16:23 2020 +0800

    clk: ti: Fix memleak in ti_fapll_synth_setup
    
    [ Upstream commit 8c6239f6e95f583bb763d0228e02d4dd0fb3d492 ]
    
    If clk_register fails, we should goto free branch
    before function returns to prevent memleak.
    
    Fixes: 163152cbbe321 ("clk: ti: Add support for FAPLL on dm816x")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201113131623.2098222-1-zhangqilong3@huawei.com
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3ae6afec3ad9e734acbdc92a2467a68bbd46cff
Author: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
Date:   Mon Dec 7 11:30:05 2020 +0530

    watchdog: qcom: Avoid context switch in restart handler
    
    [ Upstream commit 7948fab26bcc468aa2a76462f441291b5fb0d5c7 ]
    
    The use of msleep() in the restart handler will cause scheduler to
    induce a context switch which is not desirable. This generates below
    warning on SDX55 when WDT is the only available restart source:
    
    [   39.800188] reboot: Restarting system
    [   39.804115] ------------[ cut here ]------------
    [   39.807855] WARNING: CPU: 0 PID: 678 at kernel/rcu/tree_plugin.h:297 rcu_note_context_switch+0x190/0x764
    [   39.812538] Modules linked in:
    [   39.821954] CPU: 0 PID: 678 Comm: reboot Not tainted 5.10.0-rc1-00063-g33a9990d1d66-dirty #47
    [   39.824854] Hardware name: Generic DT based system
    [   39.833470] [<c0310fbc>] (unwind_backtrace) from [<c030c544>] (show_stack+0x10/0x14)
    [   39.838154] [<c030c544>] (show_stack) from [<c0c218f0>] (dump_stack+0x8c/0xa0)
    [   39.846049] [<c0c218f0>] (dump_stack) from [<c0322f80>] (__warn+0xd8/0xf0)
    [   39.853058] [<c0322f80>] (__warn) from [<c0c1dc08>] (warn_slowpath_fmt+0x64/0xc8)
    [   39.859925] [<c0c1dc08>] (warn_slowpath_fmt) from [<c038b6f4>] (rcu_note_context_switch+0x190/0x764)
    [   39.867503] [<c038b6f4>] (rcu_note_context_switch) from [<c0c2aa3c>] (__schedule+0x84/0x640)
    [   39.876685] [<c0c2aa3c>] (__schedule) from [<c0c2b050>] (schedule+0x58/0x10c)
    [   39.885095] [<c0c2b050>] (schedule) from [<c0c2eed0>] (schedule_timeout+0x1e8/0x3d4)
    [   39.892135] [<c0c2eed0>] (schedule_timeout) from [<c039ad40>] (msleep+0x2c/0x38)
    [   39.899947] [<c039ad40>] (msleep) from [<c0a59d0c>] (qcom_wdt_restart+0xc4/0xcc)
    [   39.907319] [<c0a59d0c>] (qcom_wdt_restart) from [<c0a58290>] (watchdog_restart_notifier+0x18/0x28)
    [   39.914715] [<c0a58290>] (watchdog_restart_notifier) from [<c03468e0>] (atomic_notifier_call_chain+0x60/0x84)
    [   39.923487] [<c03468e0>] (atomic_notifier_call_chain) from [<c030ae64>] (machine_restart+0x78/0x7c)
    [   39.933551] [<c030ae64>] (machine_restart) from [<c0348048>] (__do_sys_reboot+0xdc/0x1e0)
    [   39.942397] [<c0348048>] (__do_sys_reboot) from [<c0300060>] (ret_fast_syscall+0x0/0x54)
    [   39.950721] Exception stack(0xc3e0bfa8 to 0xc3e0bff0)
    [   39.958855] bfa0:                   0001221c bed2fe24 fee1dead 28121969 01234567 00000000
    [   39.963832] bfc0: 0001221c bed2fe24 00000003 00000058 000225e0 00000000 00000000 00000000
    [   39.971985] bfe0: b6e62560 bed2fc84 00010fd8 b6e62580
    [   39.980124] ---[ end trace 3f578288bad866e4 ]---
    
    Hence, replace msleep() with mdelay() to fix this issue.
    
    Fixes: 05e487d905ab ("watchdog: qcom: register a restart notifier")
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20201207060005.21293-1-manivannan.sadhasivam@linaro.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a515d6c281592aab9bc45ffa3a6fe50b91913d4
Author: Vincent Stehlé <vincent.stehle@laposte.net>
Date:   Mon Dec 14 23:09:52 2020 +0100

    net: korina: fix return value
    
    [ Upstream commit 7eb000bdbe7c7da811ef51942b356f6e819b13ba ]
    
    The ndo_start_xmit() method must not attempt to free the skb to transmit
    when returning NETDEV_TX_BUSY. Therefore, make sure the
    korina_send_packet() function returns NETDEV_TX_OK when it frees a packet.
    
    Fixes: ef11291bcd5f ("Add support the Korina (IDT RC32434) Ethernet MAC")
    Suggested-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Vincent Stehlé <vincent.stehle@laposte.net>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20201214220952.19935-1-vincent.stehle@laposte.net
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 619961f1b46247f7687fa8eca4c7e510f01e64d4
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Mon Dec 14 21:21:17 2020 +0100

    net: allwinner: Fix some resources leak in the error handling path of the probe and in the remove function
    
    [ Upstream commit 322e53d1e2529ae9d501f5e0f20604a79b873aef ]
    
    'irq_of_parse_and_map()' should be balanced by a corresponding
    'irq_dispose_mapping()' call. Otherwise, there is some resources leaks.
    
    Add such a call in the error handling path of the probe function and in the
    remove function.
    
    Fixes: 492205050d77 ("net: Add EMAC ethernet driver found on Allwinner A10 SoC's")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20201214202117.146293-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a558690b4dedb8d8464b09dabf5660fbd396e87a
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Dec 12 19:20:05 2020 +0100

    net: bcmgenet: Fix a resource leak in an error handling path in the probe functin
    
    [ Upstream commit 4375ada01963d1ebf733d60d1bb6e5db401e1ac6 ]
    
    If the 'register_netdev()' call fails, we must undo a previous
    'bcmgenet_mii_init()' call.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20201212182005.120437-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ccbd40424bd27b018477423f5ae5218e3c6d650
Author: Dwaipayan Ray <dwaipayanray1@gmail.com>
Date:   Tue Dec 15 20:45:02 2020 -0800

    checkpatch: fix unescaped left brace
    
    [ Upstream commit 03f4935135b9efeb780b970ba023c201f81cf4e6 ]
    
    There is an unescaped left brace in a regex in OPEN_BRACE check.  This
    throws a runtime error when checkpatch is run with --fix flag and the
    OPEN_BRACE check is executed.
    
    Fix it by escaping the left brace.
    
    Link: https://lkml.kernel.org/r/20201115202928.81955-1-dwaipayanray1@gmail.com
    Fixes: 8d1824780f2f ("checkpatch: add --fix option for a couple OPEN_BRACE misuses")
    Signed-off-by: Dwaipayan Ray <dwaipayanray1@gmail.com>
    Acked-by: Joe Perches <joe@perches.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6735f1af7d13a5617762467663c9fd4fd7d8b923
Author: Vincent Stehlé <vincent.stehle@laposte.net>
Date:   Sun Dec 13 19:26:22 2020 +0100

    powerpc/ps3: use dma_mapping_error()
    
    [ Upstream commit d0edaa28a1f7830997131cbce87b6c52472825d1 ]
    
    The DMA address returned by dma_map_single() should be checked with
    dma_mapping_error(). Fix the ps3stor_setup() function accordingly.
    
    Fixes: 80071802cb9c ("[POWERPC] PS3: Storage Driver Core")
    Signed-off-by: Vincent Stehlé <vincent.stehle@laposte.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201213182622.23047-1-vincent.stehle@laposte.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0386f7a99b2c4a1fcb04106c69b9921bef2f7386
Author: Bongsu Jeon <bongsu.jeon@samsung.com>
Date:   Sun Dec 13 18:58:50 2020 +0900

    nfc: s3fwrn5: Release the nfc firmware
    
    [ Upstream commit a4485baefa1efa596702ebffd5a9c760d42b14b5 ]
    
    add the code to release the nfc firmware when the firmware image size is
    wrong.
    
    Fixes: c04c674fadeb ("nfc: s3fwrn5: Add driver for Samsung S3FWRN5 NFC Chip")
    Signed-off-by: Bongsu Jeon <bongsu.jeon@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201213095850.28169-1-bongsu.jeon@samsung.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdf326bd9523695c85572d30b355e591be52bf42
Author: Anton Ivanov <anton.ivanov@cambridgegreys.com>
Date:   Mon Dec 7 17:19:40 2020 +0000

    um: chan_xterm: Fix fd leak
    
    [ Upstream commit 9431f7c199ab0d02da1482d62255e0b4621cb1b5 ]
    
    xterm serial channel was leaking a fd used in setting up the
    port helper
    
    This bug is prehistoric - it predates switching to git. The "fixes"
    header here is really just to mark all the versions we would like this to
    apply to which is "Anything from the Cretaceous period onwards".
    
    No dinosaurs were harmed in fixing this bug.
    
    Fixes: b40997b872cd ("um: drivers/xterm.c: fix a file descriptor leak")
    Signed-off-by: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e4b08a78a217b7381248259f9c1f34e6249a2ef
Author: Marc Zyngier <maz@kernel.org>
Date:   Sun Nov 29 13:55:25 2020 +0000

    irqchip/alpine-msi: Fix freeing of interrupts on allocation error path
    
    [ Upstream commit 3841245e8498a789c65dedd7ffa8fb2fee2c0684 ]
    
    The alpine-msi driver has an interesting allocation error handling,
    where it frees the same interrupts repeatedly. Hilarity follows.
    
    This code is probably never executed, but let's fix it nonetheless.
    
    Fixes: e6b78f2c3e14 ("irqchip: Add the Alpine MSIX interrupt controller")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Antoine Tenart <atenart@kernel.org>
    Cc: Tsahee Zidenberg <tsahee@annapurnalabs.com>
    Cc: Antoine Tenart <atenart@kernel.org>
    Link: https://lore.kernel.org/r/20201129135525.396671-1-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03fb3c455a4d937155103d7f4798fa7dd84e9ee1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Dec 9 09:54:09 2020 +0300

    ASoC: wm_adsp: remove "ctl" from list on error in wm_adsp_create_control()
    
    [ Upstream commit 85a7555575a0e48f9b73db310d0d762a08a46d63 ]
    
    The error handling frees "ctl" but it's still on the "dsp->ctl_list"
    list so that could result in a use after free.  Remove it from the list
    before returning.
    
    Fixes: 2323736dca72 ("ASoC: wm_adsp: Add basic support for rev 1 firmware file format")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/X9B0keV/02wrx9Xs@mwanda
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43661d9a777126ff6e617c25d7b989007aa370ae
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Dec 8 14:36:27 2020 +0100

    extcon: max77693: Fix modalias string
    
    [ Upstream commit e1efdb604f5c9903a5d92ef42244009d3c04880f ]
    
    The platform device driver name is "max77693-muic", so advertise it
    properly in the modalias string. This fixes automated module loading when
    this driver is compiled as a module.
    
    Fixes: db1b9037424b ("extcon: MAX77693: Add extcon-max77693 driver to support Maxim MAX77693 MUIC device")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 937c57ead3c2a5d45f1a2080dd000a79f7fb8f74
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Mon Oct 26 01:42:12 2020 +0300

    clk: tegra: Fix duplicated SE clock entry
    
    [ Upstream commit 5bf5861d6ea6c3f4b38fc8fda2062b2dc44ac63d ]
    
    The periph_clks[] array contains duplicated entry for Security Engine
    clock which was meant to be defined for T210, but it wasn't added
    properly. This patch corrects the T210 SE entry and fixes the following
    error message on T114/T124: "Tegra clk 127: register failed with -17".
    
    Fixes: dc37fec48314 ("clk: tegra: periph: Add new periph clks and muxes for Tegra210")
    Tested-by Nicolas Chauvet <kwizart@gmail.com>
    Reported-by Nicolas Chauvet <kwizart@gmail.com>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Link: https://lore.kernel.org/r/20201025224212.7790-1-digetx@gmail.com
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45b2b6501402d920c8ccb54257d30330efa87581
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Oct 28 23:31:10 2020 +0900

    x86/kprobes: Restore BTF if the single-stepping is cancelled
    
    [ Upstream commit 78ff2733ff352175eb7f4418a34654346e1b6cd2 ]
    
    Fix to restore BTF if single-stepping causes a page fault and
    it is cancelled.
    
    Usually the BTF flag was restored when the single stepping is done
    (in resume_execution()). However, if a page fault happens on the
    single stepping instruction, the fault handler is invoked and
    the single stepping is cancelled. Thus, the BTF flag is not
    restored.
    
    Fixes: 1ecc798c6764 ("x86: debugctlmsr kprobes")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/160389546985.106936.12727996109376240993.stgit@devnote2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28b4a8bc6021323b3a8eef71828e35d3f350feb2
Author: Cheng Lin <cheng.lin130@zte.com.cn>
Date:   Tue Dec 1 07:06:35 2020 -0500

    nfs_common: need lock during iterate through the list
    
    [ Upstream commit 4a9d81caf841cd2c0ae36abec9c2963bf21d0284 ]
    
    If the elem is deleted during be iterated on it, the iteration
    process will fall into an endless loop.
    
    kernel: NMI watchdog: BUG: soft lockup - CPU#4 stuck for 22s! [nfsd:17137]
    
    PID: 17137  TASK: ffff8818d93c0000  CPU: 4   COMMAND: "nfsd"
        [exception RIP: __state_in_grace+76]
        RIP: ffffffffc00e817c  RSP: ffff8818d3aefc98  RFLAGS: 00000246
        RAX: ffff881dc0c38298  RBX: ffffffff81b03580  RCX: ffff881dc02c9f50
        RDX: ffff881e3fce8500  RSI: 0000000000000001  RDI: ffffffff81b03580
        RBP: ffff8818d3aefca0   R8: 0000000000000020   R9: ffff8818d3aefd40
        R10: ffff88017fc03800  R11: ffff8818e83933c0  R12: ffff8818d3aefd40
        R13: 0000000000000000  R14: ffff8818e8391068  R15: ffff8818fa6e4000
        CS: 0010  SS: 0018
     #0 [ffff8818d3aefc98] opens_in_grace at ffffffffc00e81e3 [grace]
     #1 [ffff8818d3aefca8] nfs4_preprocess_stateid_op at ffffffffc02a3e6c [nfsd]
     #2 [ffff8818d3aefd18] nfsd4_write at ffffffffc028ed5b [nfsd]
     #3 [ffff8818d3aefd80] nfsd4_proc_compound at ffffffffc0290a0d [nfsd]
     #4 [ffff8818d3aefdd0] nfsd_dispatch at ffffffffc027b800 [nfsd]
     #5 [ffff8818d3aefe08] svc_process_common at ffffffffc02017f3 [sunrpc]
     #6 [ffff8818d3aefe70] svc_process at ffffffffc0201ce3 [sunrpc]
     #7 [ffff8818d3aefe98] nfsd at ffffffffc027b117 [nfsd]
     #8 [ffff8818d3aefec8] kthread at ffffffff810b88c1
     #9 [ffff8818d3aeff50] ret_from_fork at ffffffff816d1607
    
    The troublemake elem:
    crash> lock_manager ffff881dc0c38298
    struct lock_manager {
      list = {
        next = 0xffff881dc0c38298,
        prev = 0xffff881dc0c38298
      },
      block_opens = false
    }
    
    Fixes: c87fb4a378f9 ("lockd: NLM grace period shouldn't block NFSv4 opens")
    Signed-off-by: Cheng Lin <cheng.lin130@zte.com.cn>
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4deb1c3305448af9b90314c52d2fc64c4ed008eb
Author: kazuo ito <kzpn200@gmail.com>
Date:   Fri Nov 27 15:26:59 2020 +0900

    nfsd: Fix message level for normal termination
    
    [ Upstream commit 4420440c57892779f265108f46f83832a88ca795 ]
    
    The warning message from nfsd terminating normally
    can confuse system adminstrators or monitoring software.
    
    Though it's not exactly fair to pin-point a commit where it
    originated, the current form in the current place started
    to appear in:
    
    Fixes: e096bbc6488d ("knfsd: remove special handling for SIGHUP")
    Signed-off-by: kazuo ito <kzpn200@gmail.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb8a0ef08403409b7f1216a8be1a8a93c77e18e5
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 17 09:22:29 2020 +0800

    speakup: fix uninitialized flush_lock
    
    [ Upstream commit d1b928ee1cfa965a3327bbaa59bfa005d97fa0fe ]
    
    The flush_lock is uninitialized, use DEFINE_SPINLOCK
    to define and initialize flush_lock.
    
    Fixes: c6e3fd22cd53 ("Staging: add speakup to the staging directory")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20201117012229.3395186-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a072896a07120698c24f6239569e31dfeae8d24b
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Nov 23 22:58:09 2020 +0800

    usb: oxu210hp-hcd: Fix memory leak in oxu_create
    
    [ Upstream commit e5548b05631ec3e6bfdaef1cad28c799545b791b ]
    
    usb_create_hcd will alloc memory for hcd, and we should
    call usb_put_hcd to free it when adding fails to prevent
    memory leak.
    
    Fixes: b92a78e582b1a ("usb host: Oxford OXU210HP HCD driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201123145809.1456541-1-zhangqilong3@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4659119bb99282a40b58746c9ccae7001993f126
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Nov 23 22:57:19 2020 +0800

    usb: ehci-omap: Fix PM disable depth umbalance in ehci_hcd_omap_probe
    
    [ Upstream commit d6ff32478d7e95d6ca199b5c852710d6964d5811 ]
    
    The pm_runtime_enable will decrement the power disable depth. Imbalance
    depth will resulted in enabling runtime PM of device fails later.  Thus
    a pairing decrement must be needed on the error handling path to keep it
    balanced.
    
    Fixes: 6c984b066d84b ("ARM: OMAP: USBHOST: Replace usbhs core driver APIs by Runtime pm APIs")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201123145719.1455849-1-zhangqilong3@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0af1cd189e00936ce59157b34641b008f843336c
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Mon Dec 7 15:51:49 2020 -0600

    powerpc/pseries/hibernation: drop pseries_suspend_begin() from suspend ops
    
    [ Upstream commit 52719fce3f4c7a8ac9eaa191e8d75a697f9fbcbc ]
    
    There are three ways pseries_suspend_begin() can be reached:
    
    1. When "mem" is written to /sys/power/state:
    
    kobj_attr_store()
    -> state_store()
      -> pm_suspend()
        -> suspend_devices_and_enter()
          -> pseries_suspend_begin()
    
    This never works because there is no way to supply a valid stream id
    using this interface, and H_VASI_STATE is called with a stream id of
    zero. So this call path is useless at best.
    
    2. When a stream id is written to /sys/devices/system/power/hibernate.
    pseries_suspend_begin() is polled directly from store_hibernate()
    until the stream is in the "Suspending" state (i.e. the platform is
    ready for the OS to suspend execution):
    
    dev_attr_store()
    -> store_hibernate()
      -> pseries_suspend_begin()
    
    3. When a stream id is written to /sys/devices/system/power/hibernate
    (continued). After #2, pseries_suspend_begin() is called once again
    from the pm core:
    
    dev_attr_store()
    -> store_hibernate()
      -> pm_suspend()
        -> suspend_devices_and_enter()
          -> pseries_suspend_begin()
    
    This is redundant because the VASI suspend state is already known to
    be Suspending.
    
    The begin() callback of platform_suspend_ops is optional, so we can
    simply remove that assignment with no loss of function.
    
    Fixes: 32d8ad4e621d ("powerpc/pseries: Partition hibernation support")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201207215200.1785968-18-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1133be726911c630ee62a046d805923f096d2b7d
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Fri Dec 4 15:47:39 2020 +0800

    scsi: fnic: Fix error return code in fnic_probe()
    
    [ Upstream commit d4fc94fe65578738ded138e9fce043db6bfc3241 ]
    
    Return a negative error code from the error handling case instead of 0 as
    done elsewhere in this function.
    
    Link: https://lore.kernel.org/r/1607068060-31203-1-git-send-email-zhangchangzhong@huawei.com
    Fixes: 5df6d737dd4b ("[SCSI] fnic: Add new Cisco PCI-Express FCoE HBA")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Karan Tilak Kumar <kartilak@cisco.com>
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cf97fe9cd8010c33748ab92270c1e3cef2dd655
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 26 17:10:58 2020 +0100

    seq_buf: Avoid type mismatch for seq_buf_init
    
    [ Upstream commit d9a9280a0d0ae51dc1d4142138b99242b7ec8ac6 ]
    
    Building with W=2 prints a number of warnings for one function that
    has a pointer type mismatch:
    
    linux/seq_buf.h: In function 'seq_buf_init':
    linux/seq_buf.h:35:12: warning: pointer targets in assignment from 'unsigned char *' to 'char *' differ in signedness [-Wpointer-sign]
    
    Change the type in the function prototype according to the type in
    the structure.
    
    Link: https://lkml.kernel.org/r/20201026161108.3707783-1-arnd@kernel.org
    
    Fixes: 9a7777935c34 ("tracing: Convert seq_buf fields to be like seq_file fields")
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1045292f3132e01195ec2b9df08f02788ea9ece
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Sat Dec 5 19:55:51 2020 +0800

    scsi: pm80xx: Fix error return in pm8001_pci_probe()
    
    [ Upstream commit 97031ccffa4f62728602bfea8439dd045cd3aeb2 ]
    
    The driver did not return an error in the case where
    pm8001_configure_phy_settings() failed.
    
    Use rc to store the return value of pm8001_configure_phy_settings().
    
    Link: https://lore.kernel.org/r/20201205115551.2079471-1-zhangqilong3@huawei.com
    Fixes: 279094079a44 ("[SCSI] pm80xx: Phy settings support for motherboard controller.")
    Acked-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 835126f6c5793a3f1f5766959814fcb53f4b079b
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Nov 3 16:11:38 2020 +0100

    cpufreq: scpi: Add missing MODULE_ALIAS
    
    [ Upstream commit c0382d049d2def37b81e907a8b22661a4a4a6eb5 ]
    
    This patch adds missing MODULE_ALIAS for automatic loading of this cpufreq
    driver when it is compiled as an external module.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 8def31034d033 ("cpufreq: arm_big_little: add SCPI interface driver")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c02bed1b42e7f9f817c7540a0c110b6b5c08bff9
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Nov 3 16:11:37 2020 +0100

    cpufreq: loongson1: Add missing MODULE_ALIAS
    
    [ Upstream commit b9acab091842ca8b288882798bb809f7abf5408a ]
    
    This patch adds missing MODULE_ALIAS for automatic loading of this cpufreq
    driver when it is compiled as an external module.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: a0a22cf14472f ("cpufreq: Loongson1: Add cpufreq driver for Loongson1B")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a6ce43656944fe069a97519b65f215a902672cd
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Nov 3 16:11:35 2020 +0100

    cpufreq: st: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit 183747ab52654eb406fc6b5bfb40806b75d31811 ]
    
    This patch adds missing MODULE_DEVICE_TABLE definition which generates
    correct modalias for automatic loading of this cpufreq driver when it is
    compiled as an external module.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: ab0ea257fc58d ("cpufreq: st: Provide runtime initialised driver for ST's platforms")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 433437bbf890bc4e0067fdc4983249000268fda4
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Nov 3 16:11:32 2020 +0100

    cpufreq: highbank: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit 9433777a6e0aae27468d3434b75cd51bb88ff711 ]
    
    This patch adds missing MODULE_DEVICE_TABLE definition which generates
    correct modalias for automatic loading of this cpufreq driver when it is
    compiled as an external module.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 6754f556103be ("cpufreq / highbank: add support for highbank cpufreq")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae5d2a1f890f7b06e44911a08433fa3e898dfa32
Author: Keqian Zhu <zhukeqian1@huawei.com>
Date:   Fri Dec 4 15:31:26 2020 +0800

    clocksource/drivers/arm_arch_timer: Correct fault programming of CNTKCTL_EL1.EVNTI
    
    [ Upstream commit 8b7770b877d187bfdae1eaf587bd2b792479a31c ]
    
    ARM virtual counter supports event stream, it can only trigger an event
    when the trigger bit (the value of CNTKCTL_EL1.EVNTI) of CNTVCT_EL0 changes,
    so the actual period of event stream is 2^(cntkctl_evnti + 1). For example,
    when the trigger bit is 0, then virtual counter trigger an event for every
    two cycles.
    
    While we're at it, rework the way we compute the trigger bit position
    by making it more obvious that when bits [n:n-1] are both set (with n
    being the most significant bit), we pick bit (n + 1).
    
    Fixes: 037f637767a8 ("drivers: clocksource: add support for ARM architected timer event stream")
    Suggested-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Keqian Zhu <zhukeqian1@huawei.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20201204073126.6920-3-zhukeqian1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98b1ad3894ef6aa17ce4f509aa14e8a8b641a46f
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Sat Nov 28 18:19:59 2020 +0800

    dm ioctl: fix error return code in target_message
    
    [ Upstream commit 4d7659bfbe277a43399a4a2d90fca141e70f29e1 ]
    
    Fix to return a negative error code from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: 2ca4c92f58f9 ("dm ioctl: prevent empty message")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c30396cc8791d185fd33e51ef6dd0fc1c71ab7d
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu Dec 3 22:42:27 2020 +0800

    ASoC: jz4740-i2s: add missed checks for clk_get()
    
    [ Upstream commit 1c1fb2653a0c2e3f310c07eacd8fc3a10e08c97a ]
    
    jz4740_i2s_set_sysclk() does not check the return values of clk_get(),
    while the file dereferences the pointers in clk_put().
    Add the missed checks to fix it.
    
    Fixes: 11bd3dd1b7c2 ("ASoC: Add JZ4740 ASoC support")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Link: https://lore.kernel.org/r/20201203144227.418194-1-hslester96@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e89971afc7be00a5672fdd7c92d15cf41b4c1136
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Wed Nov 25 09:47:18 2020 +0800

    memstick: r592: Fix error return in r592_probe()
    
    [ Upstream commit db29d3d1c2451e673e29c7257471e3ce9d50383a ]
    
    Fix to return a error code from the error handling case instead of 0.
    
    Fixes: 926341250102 ("memstick: add driver for Ricoh R5C592 card reader")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Link: https://lore.kernel.org/r/20201125014718.153563-1-jingxiangfeng@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59e0eaaa653c0a4484895fbd1ff8b913df7ea1ce
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Thu Nov 19 09:12:19 2020 +0800

    pinctrl: falcon: add missing put_device() call in pinctrl_falcon_probe()
    
    [ Upstream commit 89cce2b3f247a434ee174ab6803698041df98014 ]
    
    if of_find_device_by_node() succeed, pinctrl_falcon_probe() doesn't have
    a corresponding put_device(). Thus add put_device() to fix the exception
    handling for this function implementation.
    
    Fixes: e316cb2b16bb ("OF: pinctrl: MIPS: lantiq: adds support for FALCON SoC")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Link: https://lore.kernel.org/r/20201119011219.2248232-1-yukuai3@huawei.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67e32fdae622f446e1532c45b570a127e736b715
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Mon Nov 16 21:51:23 2020 +0800

    clocksource/drivers/cadence_ttc: Fix memory leak in ttc_setup_clockevent()
    
    [ Upstream commit eee422c46e6840a81c9db18a497b74387a557b29 ]
    
    If clk_notifier_register() failed, ttc_setup_clockevent() will return
    without freeing 'ttcce', which will leak memory.
    
    Fixes: 70504f311d4b ("clocksource/drivers/cadence_ttc: Convert init function to return error")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20201116135123.2164033-1-yukuai3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 420959dbfab6230bd60ddf86bff749daf2713d32
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Nov 17 08:23:40 2020 +0100

    media: saa7146: fix array overflow in vidioc_s_audio()
    
    [ Upstream commit 8e4d86e241cf035d6d3467cd346e7ce490681937 ]
    
    The "a->index" value comes from the user via the ioctl.  The problem is
    that the shift can wrap resulting in setting "mxb->cur_audinput" to an
    invalid value, which later results in an array overflow.
    
    Fixes: 6680427791c9 ("[media] mxb: fix audio handling")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb3fb613d8bbb49a0f4be33b34911f461c744ef5
Author: Jason Gunthorpe <jgg@nvidia.com>
Date:   Thu Nov 5 12:34:58 2020 -0400

    vfio-pci: Use io_remap_pfn_range() for PCI IO memory
    
    [ Upstream commit 7b06a56d468b756ad6bb43ac21b11e474ebc54a0 ]
    
    commit f8f6ae5d077a ("mm: always have io_remap_pfn_range() set
    pgprot_decrypted()") allows drivers using mmap to put PCI memory mapped
    BAR space into userspace to work correctly on AMD SME systems that default
    to all memory encrypted.
    
    Since vfio_pci_mmap_fault() is working with PCI memory mapped BAR space it
    should be calling io_remap_pfn_range() otherwise it will not work on SME
    systems.
    
    Fixes: 11c4cd07ba11 ("vfio-pci: Fault mmaps to enable vma tracking")
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Acked-by: Peter Xu <peterx@redhat.com>
    Tested-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e84062a637515047720587fe3490c8cdfd0044ef
Author: NeilBrown <neilb@suse.de>
Date:   Fri Nov 27 11:24:33 2020 +1100

    NFS: switch nfsiod to be an UNBOUND workqueue.
    
    [ Upstream commit bf701b765eaa82dd164d65edc5747ec7288bb5c3 ]
    
    nfsiod is currently a concurrency-managed workqueue (CMWQ).
    This means that workitems scheduled to nfsiod on a given CPU are queued
    behind all other work items queued on any CMWQ on the same CPU.  This
    can introduce unexpected latency.
    
    Occaionally nfsiod can even cause excessive latency.  If the work item
    to complete a CLOSE request calls the final iput() on an inode, the
    address_space of that inode will be dismantled.  This takes time
    proportional to the number of in-memory pages, which on a large host
    working on large files (e.g..  5TB), can be a large number of pages
    resulting in a noticable number of seconds.
    
    We can avoid these latency problems by switching nfsiod to WQ_UNBOUND.
    This causes each concurrent work item to gets a dedicated thread which
    can be scheduled to an idle CPU.
    
    There is precedent for this as several other filesystems use WQ_UNBOUND
    workqueue for handling various async events.
    
    Signed-off-by: NeilBrown <neilb@suse.de>
    Fixes: ada609ee2ac2 ("workqueue: use WQ_MEM_RECLAIM instead of WQ_RESCUER")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2da36ce3ab91c75cff18d61c1f3d84ead9bb3365
Author: Calum Mackay <calum.mackay@oracle.com>
Date:   Wed Oct 28 20:16:27 2020 +0000

    lockd: don't use interval-based rebinding over TCP
    
    [ Upstream commit 9b82d88d5976e5f2b8015d58913654856576ace5 ]
    
    NLM uses an interval-based rebinding, i.e. it clears the transport's
    binding under certain conditions if more than 60 seconds have elapsed
    since the connection was last bound.
    
    This rebinding is not necessary for an autobind RPC client over a
    connection-oriented protocol like TCP.
    
    It can also cause problems: it is possible for nlm_bind_host() to clear
    XPRT_BOUND whilst a connection worker is in the middle of trying to
    reconnect, after it had already been checked in xprt_connect().
    
    When the connection worker notices that XPRT_BOUND has been cleared
    under it, in xs_tcp_finish_connecting(), that results in:
    
            xs_tcp_setup_socket: connect returned unhandled error -107
    
    Worse, it's possible that the two can get into lockstep, resulting in
    the same behaviour repeated indefinitely, with the above error every
    300 seconds, without ever recovering, and the connection never being
    established. This has been seen in practice, with a large number of NLM
    client tasks, following a server restart.
    
    The existing callers of nlm_bind_host & nlm_rebind_host should not need
    to force the rebind, for TCP, so restrict the interval-based rebinding
    to UDP only.
    
    For TCP, we will still rebind when needed, e.g. on timeout, and connection
    error (including closure), since connection-related errors on an existing
    connection, ECONNREFUSED when trying to connect, and rpc_check_timeout(),
    already unconditionally clear XPRT_BOUND.
    
    To avoid having to add the fix, and explanation, to both nlm_bind_host()
    and nlm_rebind_host(), remove the duplicate code from the former, and
    have it call the latter.
    
    Drop the dprintk, which adds no value over a trace.
    
    Signed-off-by: Calum Mackay <calum.mackay@oracle.com>
    Fixes: 35f5a422ce1a ("SUNRPC: new interface to force an RPC rebind")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b031203686ee11c52598a478bcd32195d7d72197
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Fri Nov 6 16:33:38 2020 -0500

    SUNRPC: xprt_load_transport() needs to support the netid "rdma6"
    
    [ Upstream commit d5aa6b22e2258f05317313ecc02efbb988ed6d38 ]
    
    According to RFC5666, the correct netid for an IPv6 addressed RDMA
    transport is "rdma6", which we've supported as a mount option since
    Linux-4.7. The problem is when we try to load the module "xprtrdma6",
    that will fail, since there is no modulealias of that name.
    
    Fixes: 181342c5ebe8 ("xprtrdma: Add rdma6 option to support NFS/RDMA IPv6")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f21ea4c27a0b2a36525a72ca59a53a8eb9f4b1b6
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Fri Nov 6 16:03:38 2020 -0500

    NFSv4.2: condition READDIR's mask for security label based on LSM state
    
    [ Upstream commit 05ad917561fca39a03338cb21fe9622f998b0f9c ]
    
    Currently, the client will always ask for security_labels if the server
    returns that it supports that feature regardless of any LSM modules
    (such as Selinux) enforcing security policy. This adds performance
    penalty to the READDIR operation.
    
    Client adjusts superblock's support of the security_label based on
    the server's support but also current client's configuration of the
    LSM modules. Thus, prior to using the default bitmask in READDIR,
    this patch checks the server's capabilities and then instructs
    READDIR to remove FATTR4_WORD2_SECURITY_LABEL from the bitmask.
    
    v5: fixing silly mistakes of the rushed v4
    v4: simplifying logic
    v3: changing label's initialization per Ondrej's comment
    v2: dropping selinux hook and using the sb cap.
    
    Suggested-by: Ondrej Mosnacek <omosnace@redhat.com>
    Suggested-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Fixes: 2b0143b5c986 ("VFS: normal filesystems (and lustre): d_inode() annotations")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70b227468c926e43a4d1e97b00e10341e9d431d3
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sat Nov 28 23:28:17 2020 +0100

    ARM: dts: at91: at91sam9rl: fix ADC triggers
    
    [ Upstream commit 851a95da583c26e2ddeb7281e9b61f0d76ea5aba ]
    
    The triggers for the ADC were taken from at91sam9260 dtsi but are not
    correct.
    
    Fixes: a4c1d6c75822 ("ARM: at91/dt: sam9rl: add lcd, adc, usb gadget and pwm support")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20201128222818.1910764-10-alexandre.belloni@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67bfda5a1a3a6ae791a528cb96b81bdd4d3aca17
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Mon Oct 12 10:56:43 2020 +0800

    HSI: omap_ssi: Don't jump to free ID in ssi_add_controller()
    
    [ Upstream commit 41fff6e19bc8d6d8bca79ea388427c426e72e097 ]
    
    In current code, it jumps to ida_simple_remove() when ida_simple_get()
    failes to allocate an ID. Just return to fix it.
    
    Fixes: 0fae198988b8 ("HSI: omap_ssi: built omap_ssi and omap_ssi_port into one module")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bd408070025d551ec687445ed3cf6f9619fd1f0
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Fri Nov 20 15:48:47 2020 +0800

    mips: cdmm: fix use-after-free in mips_cdmm_bus_discover
    
    [ Upstream commit f0e82242b16826077a2775eacfe201d803bb7a22 ]
    
    kfree(dev) has been called inside put_device so anther
    kfree would cause a use-after-free bug/
    
    Fixes: 8286ae03308c ("MIPS: Add CDMM bus support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Acked-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 064403b1cf303ecc835c21fc668ccba7391c8428
Author: Keita Suzuki <keitasuzuki.park@sslab.ics.keio.ac.jp>
Date:   Wed Sep 9 14:56:57 2020 +0200

    media: siano: fix memory leak of debugfs members in smsdvb_hotplug
    
    [ Upstream commit abf287eeff4c6da6aa804bbd429dfd9d0dfb6ea7 ]
    
    When dvb_create_media_graph fails, the debugfs kept inside client should
    be released. However, the current implementation does not release them.
    
    Fix this by adding a new goto label to call smsdvb_debugfs_release.
    
    Fixes: 0d3ab8410dcb ("[media] dvb core: must check dvb_create_media_graph()")
    Signed-off-by: Keita Suzuki <keitasuzuki.park@sslab.ics.keio.ac.jp>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ab6924cb4dbec791a9b8fff96c526dba33b7442
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Thu Nov 19 15:08:42 2020 +0800

    cw1200: fix missing destroy_workqueue() on error in cw1200_init_common
    
    [ Upstream commit 7ec8a926188eb8e7a3cbaca43ec44f2d7146d71b ]
    
    Add the missing destroy_workqueue() before return from
    cw1200_init_common in the error handling case.
    
    Fixes: a910e4a94f69 ("cw1200: add driver for the ST-E CW1100 & CW1200 WLAN chipsets")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201119070842.1011-1-miaoqinglang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ced5528a78e2a0c25d5b17ea0ba8b02a7ddeca0
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Nov 13 22:22:43 2020 +0100

    orinoco: Move context allocation after processing the skb
    
    [ Upstream commit a31eb615646a63370aa1da1053c45439c7653d83 ]
    
    ezusb_xmit() allocates a context which is leaked if
    orinoco_process_xmit_skb() returns an error.
    
    Move ezusb_alloc_ctx() after the invocation of
    orinoco_process_xmit_skb() because the context is not needed so early.
    ezusb_access_ltv() will cleanup the context in case of an error.
    
    Fixes: bac6fafd4d6a0 ("orinoco: refactor xmit path")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201113212252.2243570-2-bigeasy@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2a653ac32312aaca83a8cfef6310dda71138b7f
Author: Cristian Birsan <cristian.birsan@microchip.com>
Date:   Wed Nov 18 14:00:19 2020 +0200

    ARM: dts: at91: sama5d3_xplained: add pincontrol for USB Host
    
    [ Upstream commit e1062fa7292f1e3744db0a487c4ac0109e09b03d ]
    
    The pincontrol node is needed for USB Host since Linux v5.7-rc1. Without
    it the driver probes but VBus is not powered because of wrong pincontrol
    configuration.
    
    Fixes: b7c2b61570798 ("ARM: at91: add Atmel's SAMA5D3 Xplained board")
    Signed-off-by: Cristian Birsan <cristian.birsan@microchip.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Link: https://lore.kernel.org/r/20201118120019.1257580-4-cristian.birsan@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f660d2ec2d2aadcd79dfe3a677b64235badbc58
Author: Cristian Birsan <cristian.birsan@microchip.com>
Date:   Wed Nov 18 14:00:18 2020 +0200

    ARM: dts: at91: sama5d4_xplained: add pincontrol for USB Host
    
    [ Upstream commit be4dd2d448816a27c1446f8f37fce375daf64148 ]
    
    The pincontrol node is needed for USB Host since Linux v5.7-rc1. Without
    it the driver probes but VBus is not powered because of wrong pincontrol
    configuration.
    
    Fixes: 38153a017896f ("ARM: at91/dt: sama5d4: add dts for sama5d4 xplained board")
    Signed-off-by: Cristian Birsan <cristian.birsan@microchip.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Link: https://lore.kernel.org/r/20201118120019.1257580-3-cristian.birsan@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 778c3a7cd4822ca9708b862eb25cf90b81ee5ee8
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Fri Nov 20 15:48:46 2020 +0800

    memstick: fix a double-free bug in memstick_check
    
    [ Upstream commit e3e9ced5c93803d5b2ea1942c4bf0192622531d6 ]
    
    kfree(host->card) has been called in put_device so that
    another kfree would raise cause a double-free bug.
    
    Fixes: 0193383a5833 ("memstick: core: fix device_register() error handling")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Link: https://lore.kernel.org/r/20201120074846.31322-1-miaoqinglang@huawei.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53a8b385c90103e555638d919ac7e8b786a90f86
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Sun Nov 8 15:20:07 2020 +0200

    RDMA/cxgb4: Validate the number of CQEs
    
    [ Upstream commit 6d8285e604e0221b67bd5db736921b7ddce37d00 ]
    
    Before create CQ, make sure that the requested number of CQEs is in the
    supported range.
    
    Fixes: cfdda9d76436 ("RDMA/cxgb4: Add driver for Chelsio T4 RNIC")
    Link: https://lore.kernel.org/r/20201108132007.67537-1-kamalheib1@gmail.com
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df79fd253e57bda46e087e16471e173c7f5515a6
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Sat Nov 21 19:22:38 2020 -0800

    drivers: soc: ti: knav_qmss_queue: Fix error return code in knav_queue_probe
    
    [ Upstream commit 4cba398f37f868f515ff12868418dc28574853a1 ]
    
    Fix to return the error code from of_get_child_by_name() instaed of 0
    in knav_queue_probe().
    
    Fixes: 41f93af900a20d1a0a ("soc: ti: add Keystone Navigator QMSS driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a020a287995b67889d7a77ff49fa401369a95b7
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Sat Nov 21 19:22:37 2020 -0800

    soc: ti: Fix reference imbalance in knav_dma_probe
    
    [ Upstream commit b4fa73358c306d747a2200aec6f7acb97e5750e6 ]
    
    The patch fix two reference leak.
    
      1) pm_runtime_get_sync will increment pm usage counter even it
         failed. Forgetting to call put operation will result in
         reference leak.
    
      2) The pm_runtime_enable will increase power disable depth. Thus
         a pairing decrement is needed on the error handling path to
         keep it balanced.
    
    We fix it by: 1) adding call pm_runtime_put_noidle or
    pm_runtime_put_sync in error handling. 2) adding pm_runtime_disable
    in error handling, to keep usage counter and disable depth balanced.
    
    Fixes: 88139ed030583 ("soc: ti: add Keystone Navigator DMA support")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ba7baee559a6c3f38e8f78d722c3d237ee366d2
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Sat Nov 21 19:22:00 2020 -0800

    soc: ti: knav_qmss: fix reference leak in knav_queue_probe
    
    [ Upstream commit ec8684847d8062496c4619bc3fcff31c19d56847 ]
    
    pm_runtime_get_sync will increment pm usage counter even it
    failed. Forgetting to pm_runtime_put_noidle will result in
    reference leak in knav_queue_probe, so we should fix it.
    
    Fixes: 41f93af900a20 ("soc: ti: add Keystone Navigator QMSS driver")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc23519181926bb0818dabe55cb0b364f34f4e0f
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Fri Nov 13 21:17:28 2020 +0800

    crypto: omap-aes - Fix PM disable depth imbalance in omap_aes_probe
    
    [ Upstream commit ff8107200367f4abe0e5bce66a245e8d0f2d229e ]
    
    The pm_runtime_enable will increase power disable depth.
    Thus a pairing decrement is needed on the error handling
    path to keep it balanced according to context.
    
    Fixes: f7b2b5dd6a62a ("crypto: omap-aes - add error check for pm_runtime_get_sync")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9314c996c137fbe33347922946f41143e6ff2794
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Tue Nov 3 18:07:12 2020 +0000

    powerpc/feature: Fix CPU_FTRS_ALWAYS by removing CPU_FTRS_GENERIC_32
    
    [ Upstream commit 78665179e569c7e1fe102fb6c21d0f5b6951f084 ]
    
    On 8xx, we get the following features:
    
    [    0.000000] cpu_features      = 0x0000000000000100
    [    0.000000]   possible        = 0x0000000000000120
    [    0.000000]   always          = 0x0000000000000000
    
    This is not correct. As CONFIG_PPC_8xx is mutually exclusive with all
    other configurations, the three lines should be equal.
    
    The problem is due to CPU_FTRS_GENERIC_32 which is taken when
    CONFIG_BOOK3S_32 is NOT selected. This CPU_FTRS_GENERIC_32 is
    pointless because there is no generic configuration supporting
    all 32 bits but book3s/32.
    
    Remove this pointless generic features definition to unbreak the
    calculation of 'possible' features and 'always' features.
    
    Fixes: 76bc080ef5a3 ("[POWERPC] Make default cputable entries reflect selected CPU family")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/76a85f30bf981d1aeaae00df99321235494da254.1604426550.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4fbbb7550dc1a64b06458a8f7bfa9d45c48748f
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Nov 11 17:17:11 2020 -0800

    Input: ads7846 - fix unaligned access on 7845
    
    [ Upstream commit 03e2c9c782f721b661a0e42b1b58f394b5298544 ]
    
    req->sample[1] is not naturally aligned at word boundary, and therefore we
    should use get_unaligned_be16() when accessing it.
    
    Fixes: 3eac5c7e44f3 ("Input: ads7846 - extend the driver for ads7845 controller support")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ea501f332f7b68ff1cecf20a5f9d536e133de85
Author: Oleksij Rempel <o.rempel@pengutronix.de>
Date:   Tue Nov 17 15:33:24 2020 -0800

    Input: ads7846 - fix integer overflow on Rt calculation
    
    [ Upstream commit 820830ec918f6c3dcd77a54a1c6198ab57407916 ]
    
    In some rare cases the 32 bit Rt value will overflow if z2 and x is max,
    z1 is minimal value and x_plate_ohms is relatively high (for example 800
    ohm). This would happen on some screen age with low pressure.
    
    There are two possible fixes:
    - make Rt 64bit
    - reorder calculation to avoid overflow
    
    The second variant seems to be preferable, since 64 bit calculation on
    32 bit system is a bit more expensive.
    
    Fixes: ffa458c1bd9b6f653008d450f337602f3d52a646 ("spi: ads7846 driver")
    Co-developed-by: David Jander <david@protonic.nl>
    Signed-off-by: David Jander <david@protonic.nl>
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/r/20201113112240.1360-1-o.rempel@pengutronix.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6dc7552ca388fb5918dcf8ffecab670cb723d624
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 17 14:10:45 2020 +0800

    drm/omap: dmm_tiler: fix return error code in omap_dmm_probe()
    
    [ Upstream commit 723ae803218da993143387bf966042eccefac077 ]
    
    Return -ENOMEM when allocating refill memory failed.
    
    Fixes: 71e8831f6407 ("drm/omap: DMM/TILER support for OMAP4+ platform")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201117061045.3452287-1-yangyingliang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c92c48d89dd7a17cfa3007c9ad4efd1ac3c0227f
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Wed Nov 11 04:22:01 2020 +0100

    media: solo6x10: fix missing snd_card_free in error handling case
    
    [ Upstream commit dcdff74fa6bc00c32079d0bebd620764c26f2d89 ]
    
    Fix to goto snd_error in error handling case when fails
    to do snd_ctl_add, as done elsewhere in this function.
    
    Fixes: 28cae868cd24 ("[media] solo6x10: move out of staging into drivers/media/pci.")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45fd6c63d5bcf46ab56172f232a379515a781203
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Nov 9 21:13:46 2020 +0800

    staging: greybus: codecs: Fix reference counter leak in error handling
    
    [ Upstream commit 3952659a6108f77a0d062d8e8487bdbdaf52a66c ]
    
    gb_pm_runtime_get_sync has increased the usage counter of the device here.
    Forgetting to call gb_pm_runtime_put_noidle will result in usage counter
    leak in the error branch of (gbcodec_hw_params and gbcodec_prepare). We
    fixed it by adding it.
    
    Fixes: c388ae7696992 ("greybus: audio: Update pm runtime support in dai_ops callback")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201109131347.1725288-2-zhangqilong3@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eab24ae71e2c5238302027270b33302acb8e5219
Author: Necip Fazil Yildiran <fazilyildiran@gmail.com>
Date:   Tue Nov 3 00:34:01 2020 +0300

    MIPS: BCM47XX: fix kconfig dependency bug for BCM47XX_BCMA
    
    [ Upstream commit 3a5fe2fb9635c43359c9729352f45044f3c8df6b ]
    
    When BCM47XX_BCMA is enabled and BCMA_DRIVER_PCI is disabled, it results
    in the following Kbuild warning:
    
    WARNING: unmet direct dependencies detected for BCMA_DRIVER_PCI_HOSTMODE
      Depends on [n]: MIPS [=y] && BCMA_DRIVER_PCI [=n] && PCI_DRIVERS_LEGACY [=y] && BCMA [=y]=y
      Selected by [y]:
      - BCM47XX_BCMA [=y] && BCM47XX [=y] && PCI [=y]
    
    The reason is that BCM47XX_BCMA selects BCMA_DRIVER_PCI_HOSTMODE without
    depending on or selecting BCMA_DRIVER_PCI while BCMA_DRIVER_PCI_HOSTMODE
    depends on BCMA_DRIVER_PCI. This can also fail building the kernel.
    
    Honor the kconfig dependency to remove unmet direct dependency warnings
    and avoid any potential build failures.
    
    Fixes: c1d1c5d4213e ("bcm47xx: add support for bcma bus")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209879
    Signed-off-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b5cb07e676948ea8761a1d6cf1e93e9dac45d04
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 26 22:12:30 2020 +0100

    RDMa/mthca: Work around -Wenum-conversion warning
    
    [ Upstream commit fbb7dc5db6dee553b5a07c27e86364a5223e244c ]
    
    gcc points out a suspicious mixing of enum types in a function that
    converts from MTHCA_OPCODE_* values to IB_WC_* values:
    
    drivers/infiniband/hw/mthca/mthca_cq.c: In function 'mthca_poll_one':
    drivers/infiniband/hw/mthca/mthca_cq.c:607:21: warning: implicit conversion from 'enum <anonymous>' to 'enum ib_wc_opcode' [-Wenum-conversion]
      607 |    entry->opcode    = MTHCA_OPCODE_INVALID;
    
    Nothing seems to ever check for MTHCA_OPCODE_INVALID again, no idea if
    this is meaningful, but it seems harmless as it deals with an invalid
    input.
    
    Remove MTHCA_OPCODE_INVALID and set the ib_wc_opcode to 0xFF, which is
    still bogus, but at least doesn't make compiler warnings.
    
    Fixes: 2a4443a69934 ("[PATCH] IB/mthca: fill in opcode field for send completions")
    Link: https://lore.kernel.org/r/20201026211311.3887003-1-arnd@kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b95cafe3bc904faefeec2aaa009222a6acd659da
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Nov 3 22:13:06 2020 +0800

    spi: tegra114: fix reference leak in tegra spi ops
    
    [ Upstream commit a042184c7fb99961ea083d4ec192614bec671969 ]
    
    pm_runtime_get_sync will increment pm usage counter even it
    failed. Forgetting to pm_runtime_put_noidle will result in
    reference leak in two callers(tegra_spi_setup and
    tegra_spi_resume), so we should fix it.
    
    Fixes: f333a331adfac ("spi/tegra114: add spi driver")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201103141306.5607-1-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ab91193ba373114ea2ae006e1e7886e6524a20f
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Nov 3 22:13:23 2020 +0800

    spi: tegra20-sflash: fix reference leak in tegra_sflash_resume
    
    [ Upstream commit 3482e797ab688da6703fe18d8bad52f94199f4f2 ]
    
    pm_runtime_get_sync will increment pm usage counter even it
    failed. Forgetting to pm_runtime_put_noidle will result in
    reference leak in tegra_sflash_resume, so we should fix it.
    
    Fixes: 8528547bcc336 ("spi: tegra: add spi driver for sflash controller")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201103141323.5841-1-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d377167daaff440ce70a3bf3eedbf2eb29c110ef
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Nov 3 22:13:45 2020 +0800

    spi: tegra20-slink: fix reference leak in slink ops of tegra20
    
    [ Upstream commit 763eab7074f6e71babd85d796156f05a675f9510 ]
    
    pm_runtime_get_sync will increment pm usage counter even it
    failed. Forgetting to pm_runtime_put_noidle will result in
    reference leak in two callers(tegra_slink_setup and
    tegra_slink_resume), so we should fix it.
    
    Fixes: dc4dc36056392 ("spi: tegra: add spi driver for SLINK controller")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201103141345.6188-1-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6be4da5834842ba2e1cab0e4a6f85bfa20cef4f
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Tue Nov 3 22:09:47 2020 +0800

    spi: spi-ti-qspi: fix reference leak in ti_qspi_setup
    
    [ Upstream commit 45c0cba753641e5d7c3207f04241bd0e7a021698 ]
    
    pm_runtime_get_sync will increment pm usage counter even it
    failed. Forgetting to pm_runtime_put_noidle will result in
    reference leak in ti_qspi_setup, so we should fix it.
    
    Fixes: 505a14954e2d7 ("spi/qspi: Add qspi flash controller")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201103140947.3815-1-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ce2c18eb92ef015459caa6b51bc18e8fbc894ff
Author: Anmol Karn <anmol.karan123@gmail.com>
Date:   Wed Sep 30 19:48:13 2020 +0530

    Bluetooth: Fix null pointer dereference in hci_event_packet()
    
    [ Upstream commit 6dfccd13db2ff2b709ef60a50163925d477549aa ]
    
    AMP_MGR is getting derefernced in hci_phy_link_complete_evt(), when called
    from hci_event_packet() and there is a possibility, that hcon->amp_mgr may
    not be found when accessing after initialization of hcon.
    
    - net/bluetooth/hci_event.c:4945
    The bug seems to get triggered in this line:
    
    bredr_hcon = hcon->amp_mgr->l2cap_conn->hcon;
    
    Fix it by adding a NULL check for the hcon->amp_mgr before checking the ev-status.
    
    Fixes: d5e911928bd8 ("Bluetooth: AMP: Process Physical Link Complete evt")
    Reported-and-tested-by: syzbot+0bef568258653cff272f@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=0bef568258653cff272f
    Signed-off-by: Anmol Karn <anmol.karan123@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76e915e7e242898f4fc74f5733064cc9962f2c73
Author: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
Date:   Sat Nov 7 14:39:26 2020 +0100

    arm64: dts: exynos: Correct psci compatible used on Exynos7
    
    [ Upstream commit e1e47fbca668507a81bb388fcae044b89d112ecc ]
    
    It's not possible to reboot or poweroff Exynos7420 using PSCI. Instead
    we need to use syscon reboot/poweroff drivers, like it's done for other
    Exynos SoCs. This was confirmed by checking vendor source and testing it
    on Samsung Galaxy S6 device based on this SoC.
    
    To be able to use custom restart/poweroff handlers instead of PSCI
    functions, we need to correct psci compatible. This also requires us to
    provide function ids for CPU_ON and CPU_OFF.
    
    Fixes: fb026cb65247 ("arm64: dts: Add reboot node for exynos7")
    Fixes: b9024cbc937d ("arm64: dts: Add initial device tree support for exynos7")
    Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Link: https://lore.kernel.org/r/20201107133926.37187-2-pawel.mikolaj.chmiel@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97249e6eebaad25a036a418681653d367266cea6
Author: Cezary Rojewski <cezary.rojewski@intel.com>
Date:   Mon Oct 26 11:01:29 2020 +0100

    ASoC: pcm: DRAIN support reactivation
    
    [ Upstream commit 4c22b80f61540ea99d9b4af0127315338755f05b ]
    
    soc-pcm's dpcm_fe_dai_do_trigger() supported DRAIN commnad up to kernel
    v5.4 where explicit switch(cmd) has been introduced which takes into
    account all SNDRV_PCM_TRIGGER_xxx but SNDRV_PCM_TRIGGER_DRAIN. Update
    switch statement to reactive support for it.
    
    As DRAIN is somewhat unique by lacking negative/stop counterpart, bring
    behaviour of dpcm_fe_dai_do_trigger() for said command back to its
    pre-v5.4 state by adding it to START/RESUME/PAUSE_RELEASE group.
    
    Fixes: acbf27746ecf ("ASoC: pcm: update FE/BE trigger order based on the command")
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Link: https://lore.kernel.org/r/20201026100129.8216-1-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd888ceec2e9eeb84ce7e5458de49c889663e5b4
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Nov 2 22:56:51 2020 +0800

    spi: img-spfi: fix reference leak in img_spfi_resume
    
    [ Upstream commit ee5558a9084584015c8754ffd029ce14a5827fa8 ]
    
    pm_runtime_get_sync will increment pm usage counter even it
    failed. Forgetting to pm_runtime_put_noidle will result in
    reference leak in img_spfi_resume, so we should fix it.
    
    Fixes: deba25800a12b ("spi: Add driver for IMG SPFI controller")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Link: https://lore.kernel.org/r/20201102145651.3875-1-zhangqilong3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab86255f31059782a723701dedef9f34fd7d74b5
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Thu Oct 8 09:34:56 2020 +0000

    crypto: talitos - Fix return type of current_desc_hdr()
    
    [ Upstream commit 0237616173fd363a54bd272aa3bd376faa1d7caa ]
    
    current_desc_hdr() returns a u32 but in fact this is a __be32,
    leading to a lot of sparse warnings.
    
    Change the return type to __be32 and ensure it is handled as
    sure by the caller.
    
    Fixes: 3e721aeb3df3 ("crypto: talitos - handle descriptor not found in error path")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c87074825a02aa26b1f017baa3f0feb23fb48f0
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Sep 21 00:10:16 2020 +0200

    ARM: p2v: fix handling of LPAE translation in BE mode
    
    [ Upstream commit 4e79f0211b473f8e1eab8211a9fd50cc41a3a061 ]
    
    When running in BE mode on LPAE hardware with a PA-to-VA translation
    that exceeds 4 GB, we patch bits 39:32 of the offset into the wrong
    byte of the opcode. So fix that, by rotating the offset in r0 to the
    right by 8 bits, which will put the 8-bit immediate in bits 31:24.
    
    Note that this will also move bit #22 in its correct place when
    applying the rotation to the constant #0x400000.
    
    Fixes: d9a790df8e984 ("ARM: 7883/1: fix mov to mvn conversion in case of 64 bit phys_addr_t and BE")
    Acked-by: Nicolas Pitre <nico@fluxnic.net>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cbabe5b58bf57aaa05267ddcee834902ce7f64d
Author: Bob Pearson <rpearsonhpe@gmail.com>
Date:   Tue Oct 13 12:07:42 2020 -0500

    RDMA/rxe: Compute PSN windows correctly
    
    [ Upstream commit bb3ab2979fd69db23328691cb10067861df89037 ]
    
    The code which limited the number of unacknowledged PSNs was incorrect.
    The PSNs are limited to 24 bits and wrap back to zero from 0x00ffffff.
    The test was computing a 32 bit value which wraps at 32 bits so that
    qp->req.psn can appear smaller than the limit when it is actually larger.
    
    Replace '>' test with psn_compare which is used for other PSN comparisons
    and correctly handles the 24 bit size.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20201013170741.3590-1-rpearson@hpe.com
    Signed-off-by: Bob Pearson <rpearson@hpe.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5098f00a02b358c0fa4c62a2cfa93d5633a3cf79
Author: Tom Rix <trix@redhat.com>
Date:   Sat Oct 3 12:39:28 2020 -0700

    drm/gma500: fix double free of gma_connector
    
    [ Upstream commit 4e19d51ca5b28a1d435a844c7b2a8e1b1b6fa237 ]
    
    clang static analysis reports this problem:
    
    cdv_intel_dp.c:2101:2: warning: Attempt to free released memory
            kfree(gma_connector);
            ^~~~~~~~~~~~~~~~~~~~
    
    In cdv_intel_dp_init() when the call to cdv_intel_edp_panel_vdd_off()
    fails, the handler calls cdv_intel_dp_destroy(connector) which does
    the first free of gma_connector. So adjust the goto label and skip
    the second free.
    
    Fixes: d112a8163f83 ("gma500/cdv: Add eDP support")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201003193928.18869-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7a86f0f410228cce316f84433ed2f73652c6579
Author: Peilin Ye <yepeilin.cs@gmail.com>
Date:   Wed Sep 9 03:17:00 2020 -0400

    Bluetooth: Fix slab-out-of-bounds read in hci_le_direct_adv_report_evt()
    
    commit f7e0e8b2f1b0a09b527885babda3e912ba820798 upstream.
    
    `num_reports` is not being properly checked. A malformed event packet with
    a large `num_reports` number makes hci_le_direct_adv_report_evt() read out
    of bounds. Fix it.
    
    Cc: stable@vger.kernel.org
    Fixes: 2f010b55884e ("Bluetooth: Add support for handling LE Direct Advertising Report events")
    Reported-and-tested-by: syzbot+24ebd650e20bd263ca01@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=24ebd650e20bd263ca01
    Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2787ea3bd8dad8fdcb06cd7f16ec77262f49dcb
Author: Dae R. Jeong <dae.r.jeong@kaist.ac.kr>
Date:   Thu Oct 22 10:21:28 2020 +0900

    md: fix a warning caused by a race between concurrent md_ioctl()s
    
    commit c731b84b51bf7fe83448bea8f56a6d55006b0615 upstream.
    
    Syzkaller reports a warning as belows.
    WARNING: CPU: 0 PID: 9647 at drivers/md/md.c:7169
    ...
    Call Trace:
    ...
    RIP: 0010:md_ioctl+0x4017/0x5980 drivers/md/md.c:7169
    RSP: 0018:ffff888096027950 EFLAGS: 00010293
    RAX: ffff88809322c380 RBX: 0000000000000932 RCX: ffffffff84e266f2
    RDX: 0000000000000000 RSI: ffffffff84e299f7 RDI: 0000000000000007
    RBP: ffff888096027bc0 R08: ffff88809322c380 R09: ffffed101341a482
    R10: ffff888096027940 R11: ffff88809a0d240f R12: 0000000000000932
    R13: ffff8880a2c14100 R14: ffff88809a0d2268 R15: ffff88809a0d2408
     __blkdev_driver_ioctl block/ioctl.c:304 [inline]
     blkdev_ioctl+0xece/0x1c10 block/ioctl.c:606
     block_ioctl+0xee/0x130 fs/block_dev.c:1930
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:509 [inline]
     do_vfs_ioctl+0xd5f/0x1380 fs/ioctl.c:696
     ksys_ioctl+0xab/0xd0 fs/ioctl.c:713
     __do_sys_ioctl fs/ioctl.c:720 [inline]
     __se_sys_ioctl fs/ioctl.c:718 [inline]
     __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:718
     do_syscall_64+0xfd/0x680 arch/x86/entry/common.c:301
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    This is caused by a race between two concurrenct md_ioctl()s closing
    the array.
    CPU1 (md_ioctl())                   CPU2 (md_ioctl())
    ------                              ------
    set_bit(MD_CLOSING, &mddev->flags);
    did_set_md_closing = true;
                                        WARN_ON_ONCE(test_bit(MD_CLOSING,
                                                &mddev->flags));
    if(did_set_md_closing)
        clear_bit(MD_CLOSING, &mddev->flags);
    
    Fix the warning by returning immediately if the MD_CLOSING bit is set
    in &mddev->flags which indicates that the array is being closed.
    
    Fixes: 065e519e71b2 ("md: MD_CLOSING needs to be cleared after called md_set_readonly or do_md_stop")
    Reported-by: syzbot+1e46a0864c1a6e9bd3d8@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dae R. Jeong <dae.r.jeong@kaist.ac.kr>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f33161cc8ec93997642d12a26e0256fa63952dc2
Author: Antti Palosaari <crope@iki.fi>
Date:   Sat Aug 17 03:12:10 2019 +0200

    media: msi2500: assign SPI bus number dynamically
    
    commit 9c60cc797cf72e95bb39f32316e9f0e5f85435f9 upstream.
    
    SPI bus number must be assigned dynamically for each device, otherwise it
    will crash when multiple devices are plugged to system.
    
    Reported-and-tested-by: syzbot+c60ddb60b685777d9d59@syzkaller.appspotmail.com
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Antti Palosaari <crope@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02111b34f106f6b55c9098bbe19945c0d3af7a17
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Thu Dec 3 16:58:34 2020 +1100

    serial_core: Check for port state when tty is in error state
    
    commit 2f70e49ed860020f5abae4f7015018ebc10e1f0e upstream.
    
    At the moment opening a serial device node (such as /dev/ttyS3)
    succeeds even if there is no actual serial device behind it.
    Reading/writing/ioctls fail as expected because the uart port is not
    initialized (the type is PORT_UNKNOWN) and the TTY_IO_ERROR error state
    bit is set fot the tty.
    
    However setting line discipline does not have these checks
    8250_port.c (8250 is the default choice made by univ8250_console_init()).
    As the result of PORT_UNKNOWN, uart_port::iobase is NULL which
    a platform translates onto some address accessing which produces a crash
    like below.
    
    This adds tty_port_initialized() to uart_set_ldisc() to prevent the crash.
    
    Found by syzkaller.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Link: https://lore.kernel.org/r/20201203055834.45838-1-aik@ozlabs.ru
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93f026570f2ce8a788d47ff2ddcd1d37797ba39c
Author: Julian Sax <jsbc@gmx.de>
Date:   Thu Nov 26 18:51:58 2020 +0100

    HID: i2c-hid: add Vero K147 to descriptor override
    
    commit c870d50ce387d84b6438211a7044c60afbd5d60a upstream.
    
    This device uses the SIPODEV SP1064 touchpad, which does not
    supply descriptors, so it has to be added to the override list.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Julian Sax <jsbc@gmx.de>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4940764f9418dcf688982e351bec3368916f3864
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Oct 15 20:20:43 2020 +0200

    ARM: dts: exynos: fix USB 3.0 pins supply being turned off on Odroid XU
    
    commit bd7e7ff56feea7810df900fb09c9741d259861d9 upstream.
    
    On Odroid XU LDO12 and LDO15 supplies the power to USB 3.0 blocks but
    the GPK GPIO pins are supplied by LDO7 (VDDQ_LCD).  LDO7 also supplies
    GPJ GPIO pins.
    
    The Exynos pinctrl driver does not take any supplies, so to have entire
    GPIO block always available, make the regulator always on.
    
    Fixes: 88644b4c750b ("ARM: dts: exynos: Configure PWM, usb3503, PMIC and thermal on Odroid XU board")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201015182044.480562-3-krzk@kernel.org
    Tested-by: Gabriel Ribba Esteva <gabriel.ribbae@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ba0a48040aeb9aeb4a83aaa509b17790f3f09eb
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Oct 15 20:20:42 2020 +0200

    ARM: dts: exynos: fix USB 3.0 VBUS control and over-current pins on Exynos5410
    
    commit 3d992fd8f4e0f09c980726308d2f2725587b32d6 upstream.
    
    The VBUS control (PWREN) and over-current pins of USB 3.0 DWC3
    controllers are on Exynos5410 regular GPIOs.  This is different than for
    example on Exynos5422 where these are special ETC pins with proper reset
    values (pulls, functions).
    
    Therefore these pins should be configured to enable proper USB 3.0
    peripheral and host modes.  This also fixes over-current warning:
    
        [    6.024658] usb usb4-port1: over-current condition
        [    6.028271] usb usb3-port1: over-current condition
    
    Fixes: cb0896562228 ("ARM: dts: exynos: Add USB to Exynos5410")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201015182044.480562-2-krzk@kernel.org
    Tested-by: Gabriel Ribba Esteva <gabriel.ribbae@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36c2e18bf8f09b274c529cc486fbc23361fcb636
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Oct 15 20:20:41 2020 +0200

    ARM: dts: exynos: fix roles of USB 3.0 ports on Odroid XU
    
    commit ecc1ff532b499d20304a4f682247137025814c34 upstream.
    
    On Odroid XU board the USB3-0 port is a microUSB and USB3-1 port is USB
    type A (host).  The roles were copied from Odroid XU3 (Exynos5422)
    design which has it reversed.
    
    Fixes: 8149afe4dbf9 ("ARM: dts: exynos: Add initial support for Odroid XU board")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201015182044.480562-1-krzk@kernel.org
    Tested-by: Gabriel Ribba Esteva <gabriel.ribbae@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c06860e114765709d6072849ce51f8a9d3b914ac
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Dec 7 10:09:09 2020 +0800

    usb: chipidea: ci_hdrc_imx: Pass DISABLE_DEVICE_STREAMING flag to imx6ul
    
    commit c7721e15f434920145c376e8fe77e1c079fc3726 upstream.
    
    According to the i.MX6UL Errata document:
    https://www.nxp.com/docs/en/errata/IMX6ULCE.pdf
    
    ERR007881 also affects i.MX6UL, so pass the
    CI_HDRC_DISABLE_DEVICE_STREAMING flag to workaround the issue.
    
    Fixes: 52fe568e5d71 ("usb: chipidea: imx: add imx6ul usb support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20201207020909.22483-2-peter.chen@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ee64c2d65f9d8f0ac5506f2a2b668c2788a0ed4
Author: Jack Pham <jackp@codeaurora.org>
Date:   Tue Oct 27 16:07:31 2020 -0700

    usb: gadget: f_fs: Re-use SS descriptors for SuperSpeedPlus
    
    commit a353397b0d5dfa3c99b372505db3378fc919c6c6 upstream.
    
    In many cases a function that supports SuperSpeed can very well
    operate in SuperSpeedPlus, if a gadget controller supports it,
    as the endpoint descriptors (and companion descriptors) are
    generally identical and can be re-used. This is true for two
    commonly used functions: Android's ADB and MTP. So we can simply
    assign the usb_function's ssp_descriptors array to point to its
    ss_descriptors, if available. Similarly, we need to allow an
    epfile's ioctl for FUNCTIONFS_ENDPOINT_DESC to correctly
    return the corresponding SuperSpeed endpoint descriptor in case
    the connected speed is SuperSpeedPlus as well.
    
    The only exception is if a function wants to implement an
    Isochronous endpoint capable of transferring more than 48KB per
    service interval when operating at greater than USB 3.1 Gen1
    speed, in which case it would require an additional SuperSpeedPlus
    Isochronous Endpoint Companion descriptor to be returned as part
    of the Configuration Descriptor. Support for that would need
    to be separately added to the userspace-facing FunctionFS API
    which may not be a trivial task--likely a new descriptor format
    (v3?) may need to be devised to allow for separate SS and SSP
    descriptors to be supplied.
    
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201027230731.9073-1-jackp@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a33d07fc44a7bb4dbc852d8c5144bbd2f4af516e
Author: Will McVicker <willmcvicker@google.com>
Date:   Fri Nov 27 15:05:55 2020 +0100

    USB: gadget: f_rndis: fix bitrate for SuperSpeed and above
    
    commit b00f444f9add39b64d1943fa75538a1ebd54a290 upstream.
    
    Align the SuperSpeed Plus bitrate for f_rndis to match f_ncm's ncm_bitrate
    defined by commit 1650113888fe ("usb: gadget: f_ncm: add SuperSpeed descriptors
    for CDC NCM").
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: EJ Hsu <ejh@nvidia.com>
    Cc: Peter Chen <peter.chen@nxp.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Will McVicker <willmcvicker@google.com>
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20201127140559.381351-2-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03c0e84ecb3c5535dcf48acad9f75832618f1253
Author: Will McVicker <willmcvicker@google.com>
Date:   Fri Nov 27 15:05:57 2020 +0100

    USB: gadget: f_midi: setup SuperSpeed Plus descriptors
    
    commit 457a902ba1a73b7720666b21ca038cd19764db18 upstream.
    
    Needed for SuperSpeed Plus support for f_midi.  This allows the
    gadget to work properly without crashing at SuperSpeed rates.
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Will McVicker <willmcvicker@google.com>
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20201127140559.381351-4-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7c4f24fb3dbb7f6cce1e6f2284ecb10aa558d9f
Author: taehyun.cho <taehyun.cho@samsung.com>
Date:   Fri Nov 27 15:05:56 2020 +0100

    USB: gadget: f_acm: add support for SuperSpeed Plus
    
    commit 3ee05c20656782387aa9eb010fdb9bb16982ac3f upstream.
    
    Setup the SuperSpeed Plus descriptors for f_acm.  This allows the gadget
    to work properly without crashing at SuperSpeed rates.
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: taehyun.cho <taehyun.cho@samsung.com>
    Signed-off-by: Will McVicker <willmcvicker@google.com>
    Reviewed-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20201127140559.381351-3-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fdb54cdb88896f888824a89c90a1f52cdcbebe5
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Dec 9 11:42:21 2020 +0100

    USB: serial: option: add interface-number sanity check to flag handling
    
    commit a251963f76fa0226d0fdf0c4f989496f18d9ae7f upstream.
    
    Add an interface-number sanity check before testing the device flags to
    avoid relying on undefined behaviour when left shifting in case a device
    uses an interface number greater than or equal to BITS_PER_LONG (i.e. 64
    or 32).
    
    Reported-by: syzbot+8881b478dad0a7971f79@syzkaller.appspotmail.com
    Fixes: c3a65808f04a ("USB: serial: option: reimplement interface masking")
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d675c16a360575d998ca6abfb4705f5d9628d29
Author: Nicolin Chen <nicoleotsuka@gmail.com>
Date:   Wed Nov 18 20:44:57 2020 -0800

    soc/tegra: fuse: Fix index bug in get_process_id
    
    commit b9ce9b0f83b536a4ac7de7567a265d28d13e5bea upstream.
    
    This patch simply fixes a bug of referencing speedos[num] in every
    for-loop iteration in get_process_id function.
    
    Fixes: 0dc5a0d83675 ("soc/tegra: fuse: Add Tegra210 support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b19e4a7a294e348ee6f541fc4123306fdef2ffd
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Nov 13 15:19:10 2020 +0100

    dm table: Remove BUG_ON(in_interrupt())
    
    [ Upstream commit e7b624183d921b49ef0a96329f21647d38865ee9 ]
    
    The BUG_ON(in_interrupt()) in dm_table_event() is a historic leftover from
    a rework of the dm table code which changed the calling context.
    
    Issuing a BUG for a wrong calling context is frowned upon and
    in_interrupt() is deprecated and only covering parts of the wrong
    contexts. The sanity check for the context is covered by
    CONFIG_DEBUG_ATOMIC_SLEEP and other debug facilities already.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd78494f440d7b86c965337b123c62eaeb54d76d
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Mon Nov 30 13:57:33 2020 +0530

    scsi: mpt3sas: Increase IOCInit request timeout to 30s
    
    [ Upstream commit 85dad327d9b58b4c9ce08189a2707167de392d23 ]
    
    Currently the IOCInit request message timeout is set to 10s. This is not
    sufficient in some scenarios such as during HBA FW downgrade operations.
    
    Increase the IOCInit request timeout to 30s.
    
    Link: https://lore.kernel.org/r/20201130082733.26120-1-sreekanth.reddy@broadcom.com
    Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21be6761adf43fb2aeac45d3cdf052b29017a500
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Fri Oct 30 09:34:24 2020 +0800

    drm/tegra: sor: Disable clocks on error in tegra_sor_init()
    
    [ Upstream commit bf3a3cdcad40e5928a22ea0fd200d17fd6d6308d ]
    
    Fix the missing clk_disable_unprepare() before return from
    tegra_sor_init() in the error handling case.
    
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe34803789a4e8919bcd4cae515508cac179e4a3
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Nov 26 20:25:29 2020 +1000

    kernel/cpu: add arch override for clear_tasks_mm_cpumask() mm handling
    
    [ Upstream commit 8ff00399b153440c1c83e20c43020385b416415b ]
    
    powerpc/64s keeps a counter in the mm which counts bits set in
    mm_cpumask as well as other things. This means it can't use generic code
    to clear bits out of the mask and doesn't adjust the arch specific
    counter.
    
    Add an arch override that allows powerpc/64s to use
    clear_tasks_mm_cpumask().
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201126102530.691335-4-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d98c3d94b84f98a068495cdad3ac208d338d1b8
Author: Leon Romanovsky <leonro@nvidia.com>
Date:   Fri Dec 4 08:42:05 2020 +0200

    RDMA/cm: Fix an attempt to use non-valid pointer when cleaning timewait
    
    [ Upstream commit 340b940ea0ed12d9adbb8f72dea17d516b2019e8 ]
    
    If cm_create_timewait_info() fails, the timewait_info pointer will contain
    an error value and will be used in cm_remove_remote() later.
    
      general protection fault, probably for non-canonical address 0xdffffc0000000024: 0000 [#1] SMP KASAN PTI
      KASAN: null-ptr-deref in range [0×0000000000000120-0×0000000000000127]
      CPU: 2 PID: 12446 Comm: syz-executor.3 Not tainted 5.10.0-rc5-5d4c0742a60e #27
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      RIP: 0010:cm_remove_remote.isra.0+0x24/0×170 drivers/infiniband/core/cm.c:978
      Code: 84 00 00 00 00 00 41 54 55 53 48 89 fb 48 8d ab 2d 01 00 00 e8 7d bf 4b fe 48 89 ea 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <0f> b6 04 02 48 89 ea 83 e2 07 38 d0 7f 08 84 c0 0f 85 fc 00 00 00
      RSP: 0018:ffff888013127918 EFLAGS: 00010006
      RAX: dffffc0000000000 RBX: fffffffffffffff4 RCX: ffffc9000a18b000
      RDX: 0000000000000024 RSI: ffffffff82edc573 RDI: fffffffffffffff4
      RBP: 0000000000000121 R08: 0000000000000001 R09: ffffed1002624f1d
      R10: 0000000000000003 R11: ffffed1002624f1c R12: ffff888107760c70
      R13: ffff888107760c40 R14: fffffffffffffff4 R15: ffff888107760c9c
      FS:  00007fe1ffcc1700(0000) GS:ffff88811a600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000001b2ff21000 CR3: 000000010f504001 CR4: 0000000000370ee0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       cm_destroy_id+0x189/0×15b0 drivers/infiniband/core/cm.c:1155
       cma_connect_ib drivers/infiniband/core/cma.c:4029 [inline]
       rdma_connect_locked+0x1100/0×17c0 drivers/infiniband/core/cma.c:4107
       rdma_connect+0x2a/0×40 drivers/infiniband/core/cma.c:4140
       ucma_connect+0x277/0×340 drivers/infiniband/core/ucma.c:1069
       ucma_write+0x236/0×2f0 drivers/infiniband/core/ucma.c:1724
       vfs_write+0x220/0×830 fs/read_write.c:603
       ksys_write+0x1df/0×240 fs/read_write.c:658
       do_syscall_64+0x33/0×40 arch/x86/entry/common.c:46
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: a977049dacde ("[PATCH] IB: Add the kernel CM implementation")
    Link: https://lore.kernel.org/r/20201204064205.145795-1-leon@kernel.org
    Reviewed-by: Maor Gottlieb <maorg@nvidia.com>
    Reported-by: Amit Matityahu <mitm@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ec3b72b5b8fc3a1cf2fbd27147f79b421473901
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Fri Dec 4 14:35:06 2020 +0100

    can: softing: softing_netdev_open(): fix error handling
    
    [ Upstream commit 4d1be581ec6b92a338bb7ed23e1381f45ddf336f ]
    
    If softing_netdev_open() fails, we should call close_candev() to avoid
    reference leak.
    
    Fixes: 03fd3cf5a179d ("can: add driver for Softing card")
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    Acked-by: Kurt Van Dijck <dev.kurt@vandijck-laurijssen.be>
    Link: https://lore.kernel.org/r/20201202151632.1343786-1-zhangqilong3@huawei.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Link: https://lore.kernel.org/r/20201204133508.742120-2-mkl@pengutronix.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c9e0bb9b5d4b31397069a70819dc4cb6330e273
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Nov 28 23:09:16 2020 -0800

    scsi: bnx2i: Requires MMU
    
    [ Upstream commit 2d586494c4a001312650f0b919d534e429dd1e09 ]
    
    The SCSI_BNX2_ISCSI kconfig symbol selects CNIC and CNIC selects UIO, which
    depends on MMU.
    
    Since 'select' does not follow dependency chains, add the same MMU
    dependency to SCSI_BNX2_ISCSI.
    
    Quietens this kconfig warning:
    
    WARNING: unmet direct dependencies detected for CNIC
      Depends on [n]: NETDEVICES [=y] && ETHERNET [=y] && NET_VENDOR_BROADCOM [=y] && PCI [=y] && (IPV6 [=m] || IPV6 [=m]=n) && MMU [=n]
      Selected by [m]:
      - SCSI_BNX2_ISCSI [=m] && SCSI_LOWLEVEL [=y] && SCSI [=y] && NET [=y] && PCI [=y] && (IPV6 [=m] || IPV6 [=m]=n)
    
    Link: https://lore.kernel.org/r/20201129070916.3919-1-rdunlap@infradead.org
    Fixes: cf4e6363859d ("[SCSI] bnx2i: Add bnx2i iSCSI driver.")
    Cc: linux-scsi@vger.kernel.org
    Cc: Nilesh Javali <njavali@marvell.com>
    Cc: Manish Rangankar <mrangankar@marvell.com>
    Cc: GR-QLogic-Storage-Upstream@marvell.com
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7122542f003dfb99be755d8b1e70c56e0378de2
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Nov 12 21:03:01 2020 +0200

    pinctrl: baytrail: Avoid clearing debounce value when turning it off
    
    [ Upstream commit 0b74e40a4e41f3cbad76dff4c50850d47b525b26 ]
    
    Baytrail pin control has a common register to set up debounce timeout.
    When a pin configuration requested debounce to be disabled, the rest
    of the pins may still want to have debounce enabled and thus rely on
    the common timeout value. Avoid clearing debounce value when turning
    it off for one pin while others may still use it.
    
    Fixes: 658b476c742f ("pinctrl: baytrail: Add debounce configuration")
    Depends-on: 04ff5a095d66 ("pinctrl: baytrail: Rectify debounce support")
    Depends-on: 827e1579e1d5 ("pinctrl: baytrail: Rectify debounce support (part 2)")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60460308bf0732f35fc77fd7454d013222af168f
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Nov 11 14:06:05 2020 +0200

    pinctrl: merrifield: Set default bias in case no particular value given
    
    [ Upstream commit 0fa86fc2e28227f1e64f13867e73cf864c6d25ad ]
    
    When GPIO library asks pin control to set the bias, it doesn't pass
    any value of it and argument is considered boolean (and this is true
    for ACPI GpioIo() / GpioInt() resources, by the way). Thus, individual
    drivers must behave well, when they got the resistance value of 1 Ohm,
    i.e. transforming it to sane default.
    
    In case of Intel Merrifield pin control hardware the 20 kOhm sounds plausible
    because it gives a good trade off between weakness and minimization of leakage
    current (will be only 50 uA with the above choice).
    
    Fixes: 4e80c8f50574 ("pinctrl: intel: Add Intel Merrifield pin controller support")
    Depends-on: 2956b5d94a76 ("pinctrl / gpio: Introduce .set_config() callback for GPIO chips")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f861c35893beba3e826c49bf210845dc076f1a5
Author: Alexander Sverdlin <alexander.sverdlin@gmail.com>
Date:   Thu Dec 10 06:52:57 2020 +0100

    serial: 8250_omap: Avoid FIFO corruption caused by MDR1 access
    
    commit d96f04d347e4011977abdbb4da5d8f303ebd26f8 upstream.
    
    It has been observed that once per 300-1300 port openings the first
    transmitted byte is being corrupted on AM3352 ("v" written to FIFO appeared
    as "e" on the wire). It only happened if single byte has been transmitted
    right after port open, which means, DMA is not used for this transfer and
    the corruption never happened afterwards.
    
    Therefore I've carefully re-read the MDR1 errata (link below), which says
    "when accessing the MDR1 registers that causes a dummy under-run condition
    that will freeze the UART in IrDA transmission. In UART mode, this may
    corrupt the transferred data". Strictly speaking,
    omap_8250_mdr1_errataset() performs a read access and if the value is the
    same as should be written, exits without errata-recommended FIFO reset.
    
    A brief check of the serial_omap_mdr1_errataset() from the competing
    omap-serial driver showed it has no read access of MDR1. After removing the
    read access from omap_8250_mdr1_errataset() the data corruption never
    happened any more.
    
    Link: https://www.ti.com/lit/er/sprz360i/sprz360i.pdf
    Fixes: 61929cf0169d ("tty: serial: Add 8250-core based omap driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Link: https://lore.kernel.org/r/20201210055257.1053028-1-alexander.sverdlin@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdef62a14e392760593efb53f79b05770a15bf16
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 9 09:45:52 2020 +0100

    ALSA: pcm: oss: Fix potential out-of-bounds shift
    
    commit 175b8d89fe292796811fdee87fa39799a5b6b87a upstream.
    
    syzbot spotted a potential out-of-bounds shift in the PCM OSS layer
    where it calculates the buffer size with the arbitrary shift value
    given via an ioctl.
    
    Add a range check for avoiding the undefined behavior.
    As the value can be treated by a signed integer, the max shift should
    be 30.
    
    Reported-by: syzbot+df7dc146ebdd6435eea3@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201209084552.17109-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b273e0a57ed7d4c883da07211d14b39b6c81dc80
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Oct 19 12:06:30 2020 +0200

    USB: sisusbvga: Make console support depend on BROKEN
    
    commit 862ee699fefe1e6d6f2c1518395f0b999b8beb15 upstream.
    
    The console part of sisusbvga is broken vs. printk(). It uses in_atomic()
    to detect contexts in which it cannot sleep despite the big fat comment in
    preempt.h which says: Do not use in_atomic() in driver code.
    
    in_atomic() does not work on kernels with CONFIG_PREEMPT_COUNT=n which
    means that spin/rw_lock held regions are not detected by it.
    
    There is no way to make this work by handing context information through to
    the driver and this only can be solved once the core printk infrastructure
    supports sleepable console drivers.
    
    Make it depend on BROKEN for now.
    
    Fixes: 1bbb4f2035d9 ("[PATCH] USB: sisusb[vga] update")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Winischhofer <thomas@winischhofer.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-usb@vger.kernel.org
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20201019101109.603244207@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70ba0704cb712f750130e9a7671d0af169f0f4a7
Author: Li Jun <jun.li@nxp.com>
Date:   Tue Dec 8 11:29:12 2020 +0200

    xhci: Give USB2 ports time to enter U3 in bus suspend
    
    commit c1373f10479b624fb6dba0805d673e860f1b421d upstream.
    
    If a USB2 device wakeup is not enabled/supported the link state may
    still be in U0 in xhci_bus_suspend(), where it's then manually put
    to suspended U3 state.
    
    Just as with selective suspend the device needs time to enter U3
    suspend before continuing with further suspend operations
    (e.g. system suspend), otherwise we may enter system suspend with link
    state in U0.
    
    [commit message rewording -Mathias]
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Li Jun <jun.li@nxp.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20201208092912.1773650-6-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da8a0a32855f77b448bfcf760bb8c3f3351d9058
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 11 14:00:48 2020 +0100

    ALSA: usb-audio: Fix control 'access overflow' errors from chmap
    
    commit c6dde8ffd071aea9d1ce64279178e470977b235c upstream.
    
    The current channel-map control implementation in USB-audio driver may
    lead to an error message like
      "control 3:0:0:Playback Channel Map:0: access overflow"
    when CONFIG_SND_CTL_VALIDATION is set.  It's because the chmap get
    callback clears the whole array no matter which count is set, and
    rather the false-positive detection.
    
    This patch fixes the problem by clearing only the needed array range
    at usb_chmap_ctl_get().
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201211130048.6358-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 147c450e1f6a7feb2f2b85a4ceda21341e8973c7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 9 09:45:51 2020 +0100

    ALSA: usb-audio: Fix potential out-of-bounds shift
    
    commit 43d5ca88dfcd35e43010fdd818e067aa9a55f5ba upstream.
    
    syzbot spotted a potential out-of-bounds shift in the USB-audio format
    parser that receives the arbitrary shift value from the USB
    descriptor.
    
    Add a range check for avoiding the undefined behavior.
    
    Reported-by: syzbot+df7dc146ebdd6435eea3@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201209084552.17109-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21f9689ece4f32a04e0be78c5a78964de8a2fb8c
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Dec 7 14:03:23 2020 +0100

    USB: add RESET_RESUME quirk for Snapscan 1212
    
    commit 08a02f954b0def3ada8ed6d4b2c7bcb67e885e9c upstream.
    
    I got reports that some models of this old scanner need
    this when using runtime PM.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201207130323.23857-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a58d31bc8158a57d850f6f00ea391b758f91bd69
Author: Bui Quang Minh <minhquangbui99@gmail.com>
Date:   Fri Dec 4 06:24:49 2020 +0000

    USB: dummy-hcd: Fix uninitialized array use in init()
    
    commit e90cfa813da7a527785033a0b247594c2de93dd8 upstream.
    
    This error path
    
            err_add_pdata:
                    for (i = 0; i < mod_data.num; i++)
                            kfree(dum[i]);
    
    can be triggered when not all dum's elements are initialized.
    
    Fix this by initializing all dum's elements to NULL.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Bui Quang Minh <minhquangbui99@gmail.com>
    Link: https://lore.kernel.org/r/1607063090-3426-1-git-send-email-minhquangbui99@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8435f023cf5b7cf313d0f9c07e2b31140da92392
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Dec 4 08:24:28 2020 -0800

    mac80211: mesh: fix mesh_pathtbl_init() error path
    
    [ Upstream commit 905b2032fa424f253d9126271439cc1db2b01130 ]
    
    If tbl_mpp can not be allocated, we call mesh_table_free(tbl_path)
    while tbl_path rhashtable has not yet been initialized, which causes
    panics.
    
    Simply factorize the rhashtable_init() call into mesh_table_alloc()
    
    WARNING: CPU: 1 PID: 8474 at kernel/workqueue.c:3040 __flush_work kernel/workqueue.c:3040 [inline]
    WARNING: CPU: 1 PID: 8474 at kernel/workqueue.c:3040 __cancel_work_timer+0x514/0x540 kernel/workqueue.c:3136
    Modules linked in:
    CPU: 1 PID: 8474 Comm: syz-executor663 Not tainted 5.10.0-rc6-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__flush_work kernel/workqueue.c:3040 [inline]
    RIP: 0010:__cancel_work_timer+0x514/0x540 kernel/workqueue.c:3136
    Code: 5d c3 e8 bf ae 29 00 0f 0b e9 f0 fd ff ff e8 b3 ae 29 00 0f 0b 43 80 3c 3e 00 0f 85 31 ff ff ff e9 34 ff ff ff e8 9c ae 29 00 <0f> 0b e9 dc fe ff ff 89 e9 80 e1 07 80 c1 03 38 c1 0f 8c 7d fd ff
    RSP: 0018:ffffc9000165f5a0 EFLAGS: 00010293
    RAX: ffffffff814b7064 RBX: 0000000000000001 RCX: ffff888021c80000
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: ffff888024039ca0 R08: dffffc0000000000 R09: fffffbfff1dd3e64
    R10: fffffbfff1dd3e64 R11: 0000000000000000 R12: 1ffff920002cbebd
    R13: ffff888024039c88 R14: 1ffff11004807391 R15: dffffc0000000000
    FS:  0000000001347880(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020000140 CR3: 000000002cc0a000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     rhashtable_free_and_destroy+0x25/0x9c0 lib/rhashtable.c:1137
     mesh_table_free net/mac80211/mesh_pathtbl.c:69 [inline]
     mesh_pathtbl_init+0x287/0x2e0 net/mac80211/mesh_pathtbl.c:785
     ieee80211_mesh_init_sdata+0x2ee/0x530 net/mac80211/mesh.c:1591
     ieee80211_setup_sdata+0x733/0xc40 net/mac80211/iface.c:1569
     ieee80211_if_add+0xd5c/0x1cd0 net/mac80211/iface.c:1987
     ieee80211_add_iface+0x59/0x130 net/mac80211/cfg.c:125
     rdev_add_virtual_intf net/wireless/rdev-ops.h:45 [inline]
     nl80211_new_interface+0x563/0xb40 net/wireless/nl80211.c:3855
     genl_family_rcv_msg_doit net/netlink/genetlink.c:739 [inline]
     genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]
     genl_rcv_msg+0xe4e/0x1280 net/netlink/genetlink.c:800
     netlink_rcv_skb+0x190/0x3a0 net/netlink/af_netlink.c:2494
     genl_rcv+0x24/0x40 net/netlink/genetlink.c:811
     netlink_unicast_kernel net/netlink/af_netlink.c:1304 [inline]
     netlink_unicast+0x780/0x930 net/netlink/af_netlink.c:1330
     netlink_sendmsg+0x9a8/0xd40 net/netlink/af_netlink.c:1919
     sock_sendmsg_nosec net/socket.c:651 [inline]
     sock_sendmsg net/socket.c:671 [inline]
     ____sys_sendmsg+0x519/0x800 net/socket.c:2353
     ___sys_sendmsg net/socket.c:2407 [inline]
     __sys_sendmsg+0x2b1/0x360 net/socket.c:2440
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 60854fd94573 ("mac80211: mesh: convert path table to rhashtable")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reviewed-by: Johannes Berg <johannes@sipsolutions.net>
    Link: https://lore.kernel.org/r/20201204162428.2583119-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b932ef23f9c4f9214759b265ad0ff75b4ea43c5
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Fri Dec 4 16:48:56 2020 +0800

    net: bridge: vlan: fix error return code in __vlan_add()
    
    [ Upstream commit ee4f52a8de2c6f78b01f10b4c330867d88c1653a ]
    
    Fix to return a negative error code from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: f8ed289fab84 ("bridge: vlan: use br_vlan_(get|put)_master to deal with refcounts")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Link: https://lore.kernel.org/r/1607071737-33875-1-git-send-email-zhangchangzhong@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 090679339e94c3f6641a6ebc134606ef8f5cd5c2
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Dec 5 22:32:07 2020 +0100

    net: stmmac: dwmac-meson8b: fix mask definition of the m250_sel mux
    
    [ Upstream commit 82ca4c922b8992013a238d65cf4e60cc33e12f36 ]
    
    The m250_sel mux clock uses bit 4 in the PRG_ETH0 register. Fix this by
    shifting the PRG_ETH0_CLK_M250_SEL_MASK accordingly as the "mask" in
    struct clk_mux expects the mask relative to the "shift" field in the
    same struct.
    
    While here, get rid of the PRG_ETH0_CLK_M250_SEL_SHIFT macro and use
    __ffs() to determine it from the existing PRG_ETH0_CLK_M250_SEL_MASK
    macro.
    
    Fixes: 566e8251625304 ("net: stmmac: add a glue driver for the Amlogic Meson 8b / GXBB DWMAC")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20201205213207.519341-1-martin.blumenstingl@googlemail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f12ef8ac7f987a6ab13380c752b58f95fe45d4f
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Mon Dec 7 18:51:40 2020 +0800

    net: stmmac: delete the eee_ctrl_timer after napi disabled
    
    [ Upstream commit 5f58591323bf3f342920179f24515935c4b5fd60 ]
    
    There have chance to re-enable the eee_ctrl_timer and fire the timer
    in napi callback after delete the timer in .stmmac_release(), which
    introduces to access eee registers in the timer function after clocks
    are disabled then causes system hang. Found this issue when do
    suspend/resume and reboot stress test.
    
    It is safe to delete the timer after napi disabled and disable lpi mode.
    
    Fixes: d765955d2ae0b ("stmmac: add the Energy Efficient Ethernet support")
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4de351d3dfd7adffede2dd2f04d4eadd5a509dee
Author: Neal Cardwell <ncardwell@google.com>
Date:   Tue Dec 8 22:57:59 2020 -0500

    tcp: fix cwnd-limited bug for TSO deferral where we send nothing
    
    [ Upstream commit 299bcb55ecd1412f6df606e9dc0912d55610029e ]
    
    When cwnd is not a multiple of the TSO skb size of N*MSS, we can get
    into persistent scenarios where we have the following sequence:
    
    (1) ACK for full-sized skb of N*MSS arrives
      -> tcp_write_xmit() transmit full-sized skb with N*MSS
      -> move pacing release time forward
      -> exit tcp_write_xmit() because pacing time is in the future
    
    (2) TSQ callback or TCP internal pacing timer fires
      -> try to transmit next skb, but TSO deferral finds remainder of
         available cwnd is not big enough to trigger an immediate send
         now, so we defer sending until the next ACK.
    
    (3) repeat...
    
    So we can get into a case where we never mark ourselves as
    cwnd-limited for many seconds at a time, even with
    bulk/infinite-backlog senders, because:
    
    o In case (1) above, every time in tcp_write_xmit() we have enough
    cwnd to send a full-sized skb, we are not fully using the cwnd
    (because cwnd is not a multiple of the TSO skb size). So every time we
    send data, we are not cwnd limited, and so in the cwnd-limited
    tracking code in tcp_cwnd_validate() we mark ourselves as not
    cwnd-limited.
    
    o In case (2) above, every time in tcp_write_xmit() that we try to
    transmit the "remainder" of the cwnd but defer, we set the local
    variable is_cwnd_limited to true, but we do not send any packets, so
    sent_pkts is zero, so we don't call the cwnd-limited logic to update
    tp->is_cwnd_limited.
    
    Fixes: ca8a22634381 ("tcp: make cwnd-limited checks measurement-based, and gentler")
    Reported-by: Ingemar Johansson <ingemar.s.johansson@ericsson.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20201209035759.1225145-1-ncardwell.kernel@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d6fc66e34cb5c492c5533e1fa1450cc9a7965bf
Author: Moshe Shemesh <moshe@mellanox.com>
Date:   Wed Dec 9 15:03:38 2020 +0200

    net/mlx4_en: Avoid scheduling restart task if it is already running
    
    [ Upstream commit fed91613c9dd455dd154b22fa8e11b8526466082 ]
    
    Add restarting state flag to avoid scheduling another restart task while
    such task is already running. Change task name from watchdog_task to
    restart_task to better fit the task role.
    
    Fixes: 1e338db56e5a ("mlx4_en: Fix a race at restart task")
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8708f7be290f2e349781eb79d10aa0f1bdf1a06
Author: Lukas Wunner <lukas@wunner.de>
Date:   Mon Aug 3 13:09:01 2020 +0200

    spi: Prevent adding devices below an unregistering controller
    
    commit ddf75be47ca748f8b12d28ac64d624354fddf189 upstream
    
    CONFIG_OF_DYNAMIC and CONFIG_ACPI allow adding SPI devices at runtime
    using a DeviceTree overlay or DSDT patch.  CONFIG_SPI_SLAVE allows the
    same via sysfs.
    
    But there are no precautions to prevent adding a device below a
    controller that's being removed.  Such a device is unusable and may not
    even be able to unbind cleanly as it becomes inaccessible once the
    controller has been torn down.  E.g. it is then impossible to quiesce
    the device's interrupt.
    
    of_spi_notify() and acpi_spi_notify() do hold a ref on the controller,
    but otherwise run lockless against spi_unregister_controller().
    
    Fix by holding the spi_add_lock in spi_unregister_controller() and
    bailing out of spi_add_device() if the controller has been unregistered
    concurrently.
    
    Fixes: ce79d54ae447 ("spi/of: Add OF notifier handler")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org # v3.19+
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Octavian Purdila <octavian.purdila@intel.com>
    Cc: Pantelis Antoniou <pantelis.antoniou@konsulko.com>
    Link: https://lore.kernel.org/r/a8c3205088a969dc8410eec1eba9aface60f36af.1596451035.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64acbcc8af9a81432355080a0c31e95e12efb7d2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Dec 3 15:18:26 2020 +0300

    scsi: be2iscsi: Revert "Fix a theoretical leak in beiscsi_create_eqs()"
    
    commit eeaf06af6f87e1dba371fbe42674e6f963220b9c upstream.
    
    My patch caused kernel Oopses and delays in boot.  Revert it.
    
    The problem was that I moved the "mem->dma = paddr;" before the call to
    be_fill_queue().  But the first thing that the be_fill_queue() function
    does is memset the whole struct to zero which overwrites the assignment.
    
    Link: https://lore.kernel.org/r/X8jXkt6eThjyVP1v@mwanda
    Fixes: 38b2db564d9a ("scsi: be2iscsi: Fix a theoretical leak in beiscsi_create_eqs()")
    Cc: stable <stable@vger.kernel.org>
    Reported-by: Thomas Lamprecht <t.lamprecht@proxmox.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 393c9edaf78b703c650d411ab77fdb1a7cf1e7d5
Author: Coiby Xu <coiby.xu@gmail.com>
Date:   Wed Nov 25 21:03:19 2020 +0800

    pinctrl: amd: remove debounce filter setting in IRQ type setting
    
    commit 47a0001436352c9853d72bf2071e85b316d688a2 upstream.
    
    Debounce filter setting should be independent from IRQ type setting
    because according to the ACPI specs, there are separate arguments for
    specifying debounce timeout and IRQ type in GpioIo() and GpioInt().
    
    Together with commit 06abe8291bc31839950f7d0362d9979edc88a666
    ("pinctrl: amd: fix incorrect way to disable debounce filter") and
    Andy's patch "gpiolib: acpi: Take into account debounce settings" [1],
    this will fix broken touchpads for laptops whose BIOS set the
    debounce timeout to a relatively large value. For example, the BIOS
    of Lenovo AMD gaming laptops including Legion-5 15ARH05 (R7000),
    Legion-5P (R7000P) and IdeaPad Gaming 3 15ARH05, set the debounce
    timeout to 124.8ms. This led to the kernel receiving only ~7 HID
    reports per second from the Synaptics touchpad
    (MSFT0001:00 06CB:7F28).
    
    Existing touchpads like [2][3] are not troubled by this bug because
    the debounce timeout has been set to 0 by the BIOS before enabling
    the debounce filter in setting IRQ type.
    
    [1] https://lore.kernel.org/linux-gpio/20201111222008.39993-11-andriy.shevchenko@linux.intel.com/
        8dcb7a15a585 ("gpiolib: acpi: Take into account debounce settings")
    [2] https://github.com/Syniurge/i2c-amd-mp2/issues/11#issuecomment-721331582
    [3] https://forum.manjaro.org/t/random-short-touchpad-freezes/30832/28
    
    Signed-off-by: Coiby Xu <coiby.xu@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/linux-gpio/CAHp75VcwiGREBUJ0A06EEw-SyabqYsp%2Bdqs2DpSrhaY-2GVdAA%40mail.gmail.com/
    BugLink: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1887190
    Link: https://lore.kernel.org/r/20201125130320.311059-1-coiby.xu@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 595396751e9168f61d1e4234e09a4717a6768cc9
Author: Chris Chiu <chiu@endlessos.org>
Date:   Wed Dec 9 20:24:47 2020 -0800

    Input: i8042 - add Acer laptops to the i8042 reset list
    
    commit ce6520b0eafad5962ffc21dc47cd7bd3250e9045 upstream.
    
    The touchpad operates in Basic Mode by default in the Acer BIOS
    setup, but some Aspire/TravelMate models require the i8042 to be
    reset in order to be correctly detected.
    
    Signed-off-by: Chris Chiu <chiu@endlessos.org>
    Link: https://lore.kernel.org/r/20201207071250.15021-1-chiu@endlessos.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63606f2c68e35515380f15a376cb3f70838040c1
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Dec 9 20:13:24 2020 -0800

    Input: cm109 - do not stomp on control URB
    
    commit 82e06090473289ce63e23fdeb8737aad59b10645 upstream.
    
    We need to make sure we are not stomping on the control URB that was
    issued when opening the device when attempting to toggle buzzer.
    To do that we need to mark it as pending in cm109_open().
    
    Reported-and-tested-by: syzbot+150f793ac5bc18eee150@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ef0ea35c44a557807d098a05332c373b742a323
Author: Timo Witte <timo.witte@gmail.com>
Date:   Tue Aug 4 02:14:23 2020 +0200

    platform/x86: acer-wmi: add automatic keyboard background light toggle key as KEY_LIGHTS_TOGGLE
    
    [ Upstream commit 9e7a005ad56aa7d6ea5830c5ffcc60bf35de380b ]
    
    Got a dmesg message on my AMD Renoir based Acer laptop:
    "acer_wmi: Unknown key number - 0x84" when toggling keyboard
    background light
    
    Signed-off-by: Timo Witte <timo.witte@gmail.com>
    Reviewed-by: "Lee, Chun-Yi" <jlee@suse.com>
    Link: https://lore.kernel.org/r/20200804001423.36778-1-timo.witte@gmail.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12ce4b44e4374dad744aee865bc4e973523e66b0
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Nov 6 16:59:27 2020 -0800

    ARC: stack unwinding: don't assume non-current task is sleeping
    
    [ Upstream commit e42404fa10fd11fe72d0a0e149a321d10e577715 ]
    
    To start stack unwinding (SP, PC and BLINK) are needed. When the
    explicit execution context (pt_regs etc) is not available, unwinder
    assumes the task is sleeping (in __switch_to()) and fetches SP and BLINK
    from kernel mode stack.
    
    But this assumption is not true, specially in a SMP system, when top
    runs on 1 core, there may be active running processes on all cores.
    
    So when unwinding non courrent tasks, ensure they are NOT running.
    
    And while at it, handle the self unwinding case explicitly.
    
    This came out of investigation of a customer reported hang with
    rcutorture+top
    
    Link: https://github.com/foss-for-synopsys-dwc-arc-processors/linux/issues/31
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1c91e58dffb5f20186d8611ac31687b1a5dee31
Author: Markus Reichl <m.reichl@fivetechno.de>
Date:   Wed Nov 4 17:23:55 2020 +0100

    arm64: dts: rockchip: Assign a fixed index to mmc devices on rk3399 boards.
    
    [ Upstream commit 0011c6d182774fc781fb9e115ebe8baa356029ae ]
    
    Recently introduced async probe on mmc devices can shuffle block IDs.
    Pin them to fixed values to ease booting in environments where UUIDs
    are not practical. Use newly introduced aliases for mmcblk devices from [1].
    
    [1]
    https://patchwork.kernel.org/patch/11747669/
    
    Signed-off-by: Markus Reichl <m.reichl@fivetechno.de>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20201104162356.1251-1-m.reichl@fivetechno.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92244a3bb2af6e5d66d0c4d0cad243d4a60f6368
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Oct 22 16:51:03 2020 +0300

    iwlwifi: pcie: limit memory read spin time
    
    [ Upstream commit 04516706bb99889986ddfa3a769ed50d2dc7ac13 ]
    
    When we read device memory, we lock a spinlock, write the address we
    want to read from the device and then spin in a loop reading the data
    in 32-bit quantities from another register.
    
    As the description makes clear, this is rather inefficient, incurring
    a PCIe bus transaction for every read. In a typical device today, we
    want to read 786k SMEM if it crashes, leading to 192k register reads.
    Occasionally, we've seen the whole loop take over 20 seconds and then
    triggering the soft lockup detector.
    
    Clearly, it is unreasonable to spin here for such extended periods of
    time.
    
    To fix this, break the loop down into an outer and an inner loop, and
    break out of the inner loop if more than half a second elapsed. To
    avoid too much overhead, check for that only every 128 reads, though
    there's no particular reason for that number. Then, unlock and relock
    to obtain NIC access again, reprogram the start address and continue.
    
    This will keep (interrupt) latencies on the CPU down to a reasonable
    time.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Mordechay Goodstein <mordechay.goodstein@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/iwlwifi.20201022165103.45878a7e49aa.I3b9b9c5a10002915072312ce75b68ed5b3dc6e14@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36101cbef70ed5dbee05e99928bf39dad11dafea
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Thu Dec 10 20:20:02 2020 +0100

    spi: bcm2835aux: Restore err assignment in bcm2835aux_spi_probe
    
    [ Upstream commit d853b3406903a7dc5b14eb5bada3e8cd677f66a2 ]
    
    Clang warns:
    
    drivers/spi/spi-bcm2835aux.c:532:50: warning: variable 'err' is
    uninitialized when used here [-Wuninitialized]
                    dev_err(&pdev->dev, "could not get clk: %d\n", err);
                                                                   ^~~
    ./include/linux/dev_printk.h:112:32: note: expanded from macro 'dev_err'
            _dev_err(dev, dev_fmt(fmt), ##__VA_ARGS__)
                                          ^~~~~~~~~~~
    drivers/spi/spi-bcm2835aux.c:495:9: note: initialize the variable 'err'
    to silence this warning
            int err;
                   ^
                    = 0
    1 warning generated.
    
    Restore the assignment so that the error value can be used in the
    dev_err statement and there is no uninitialized memory being leaked.
    
    Fixes: e13ee6cc4781 ("spi: bcm2835aux: Fix use-after-free on unbind")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1199
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Link: https://lore.kernel.org/r/20201113180701.455541-1-natechancellor@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    [lukas: backport to 4.19-stable, add stable designation]
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v4.4+: e13ee6cc4781: spi: bcm2835aux: Fix use-after-free on unbind
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8193769c0440c5ea8b6c7c9d350c74596c388765
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Dec 10 20:20:01 2020 +0100

    spi: bcm2835aux: Fix use-after-free on unbind
    
    [ Upstream commit e13ee6cc4781edaf8c7321bee19217e3702ed481 ]
    
    bcm2835aux_spi_remove() accesses the driver's private data after calling
    spi_unregister_master() even though that function releases the last
    reference on the spi_master and thereby frees the private data.
    
    Fix by switching over to the new devm_spi_alloc_master() helper which
    keeps the private data accessible until the driver has unbound.
    
    Fixes: b9dd3f6d4172 ("spi: bcm2835aux: Fix controller unregister order")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v4.4+: 5e844cc37a5c: spi: Introduce device-managed SPI controller allocation
    Cc: <stable@vger.kernel.org> # v4.4+: b9dd3f6d4172: spi: bcm2835aux: Fix controller unregister order
    Cc: <stable@vger.kernel.org> # v4.4+
    Link: https://lore.kernel.org/r/b290b06357d0c0bdee9cecc539b840a90630f101.1605121038.git.lukas@wunner.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
