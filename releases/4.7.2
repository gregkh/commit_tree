commit 84fae3f89282ce86a0c0da30e35fe66dbcadda6f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Aug 20 18:11:18 2016 +0200

    Linux 4.7.2

commit 300a15d778eb0c1793824c2f682c705fd18a158d
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Mon Jun 27 15:36:53 2016 +0900

    phy: rcar-gen3-usb2: fix mutex_lock calling in interrupt
    
    commit c14f8a4032efa73d9c4e155add47c19252b3bdf4 upstream.
    
    This patch fixes an issue that the extcon_set_cable_state_() is possible
    to cause "BUG: scheduling while atomic" because this driver calls
    extcon_set_cable_state_() in the interrupt handler and mutex_lock()
    is possible to be called by like the following call trace.
    So, this patch adds a workqueue function to resolve this issue.
    
    [    9.706504] BUG: scheduling while atomic: systemd-journal/25893/0x00010303
    [    9.714569] Modules linked in:
    [    9.717629] CPU: 0 PID: 25893 Comm: systemd-journal Not tainted 4.7.0-rc4+ #86
    [    9.724844] Hardware name: Renesas Salvator-X board based on r8a7795 (DT)
    [    9.731624] Call trace:
    [    9.734077] [<ffff0000080889f0>] dump_backtrace+0x0/0x1a8
    [    9.739470] [<ffff000008088bac>] show_stack+0x14/0x20
    [    9.744520] [<ffff000008348ab4>] dump_stack+0x94/0xb8
    [    9.749568] [<ffff0000080da18c>] __schedule_bug+0x44/0x58
    [    9.754966] [<ffff0000087c6394>] __schedule+0x4e4/0x598
    [    9.760185] [<ffff0000087c6484>] schedule+0x3c/0xa8
    [    9.765057] [<ffff0000087c6928>] schedule_preempt_disabled+0x20/0x38
    [    9.771408] [<ffff0000080f20dc>] mutex_optimistic_spin+0x18c/0x1d0
    [    9.777583] [<ffff0000087c7ef0>] __mutex_lock_slowpath+0x38/0x140
    [    9.783669] [<ffff0000087c803c>] mutex_lock+0x44/0x60
    [    9.788717] [<ffff00000834ca48>] kobject_uevent_env+0x250/0x500
    [    9.794634] [<ffff0000086ae8c0>] extcon_update_state+0x220/0x298
    [    9.800634] [<ffff0000086ae9d8>] extcon_set_cable_state_+0x78/0x88
    [    9.806812] [<ffff000008376004>] rcar_gen3_device_recognition+0x5c/0xe0
    [    9.813420] [<ffff0000083761bc>] rcar_gen3_phy_usb2_irq+0x3c/0x48
    [    9.819509] [<ffff0000080fae94>] handle_irq_event_percpu+0x94/0x140
    [    9.825769] [<ffff0000080faf88>] handle_irq_event+0x48/0x78
    [    9.831334] [<ffff0000080fe620>] handle_fasteoi_irq+0xb8/0x1b0
    [    9.837162] [<ffff0000080fa3c4>] generic_handle_irq+0x24/0x38
    [    9.842900] [<ffff0000080fa6fc>] __handle_domain_irq+0x5c/0xb8
    [    9.848727] [<ffff000008081520>] gic_handle_irq+0x58/0xb0
    
    Reported-by: Simon Horman <horms@verge.net.au>
    Fixes: 2b38543c8db1 ("phy: rcar-gen3-usb2: add extcon support")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 799c8305a1ee822647df272d77f61ae28acd31ab
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu Apr 28 09:24:05 2016 +0930

    Documentation/module-signing.txt: Note need for version info if reusing a key
    
    commit b8612e517c3c9809e1200b72c474dbfd969e5a83 upstream.
    
    Signing a module should only make it trusted by the specific kernel it
    was built for, not anything else.  If a module signing key is used for
    multiple ABI-incompatible kernels, the modules need to include enough
    version information to distinguish them.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c528032b3adf734fba3247517641ee173b26d950
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu Apr 28 09:24:01 2016 +0930

    module: Invalidate signatures on force-loaded modules
    
    commit bca014caaa6130e57f69b5bf527967aa8ee70fdd upstream.
    
    Signing a module should only make it trusted by the specific kernel it
    was built for, not anything else.  Loading a signed module meant for a
    kernel with a different ABI could have interesting effects.
    Therefore, treat all signatures as invalid when a module is
    force-loaded.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbf8fc37852729c8e1022548e2a98944aec4214f
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Fri Jul 29 13:19:55 2016 -0400

    dm flakey: error READ bios during the down_interval
    
    commit 99f3c90d0d85708e7401a81ce3314e50bf7f2819 upstream.
    
    When the corrupt_bio_byte feature was introduced it caused READ bios to
    no longer be errored with -EIO during the down_interval.  This had to do
    with the complexity of needing to submit READs if the corrupt_bio_byte
    feature was used.
    
    Fix it so READ bios are properly errored with -EIO; doing so early in
    flakey_map() as long as there isn't a match for the corrupt_bio_byte
    feature.
    
    Fixes: a3998799fb4df ("dm flakey: add corrupt_bio_byte feature")
    Reported-by: Akira Hayakawa <ruby.wktk@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dac5e403c590fbfb6bdee297e1d57ae0d9b7054
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Jul 5 15:28:53 2016 +0530

    rtc: s3c: Add s3c_rtc_{enable/disable}_clk in s3c_rtc_setfreq()
    
    commit 70c96dfac0e231424e17743bd52f6cd2ff1f2439 upstream.
    
    As per code flow s3c_rtc_setfreq() will get called with rtc clock disabled
    and in set_freq we perform h/w registers read/write, which results in a
    kernel crash on exynos7 platform while probing rtc driver.
    Below is code flow:
    s3c_rtc_probe()
        clk_prepare_enable(info->rtc_clk) // rtc clock enabled
        s3c_rtc_gettime() // will enable clk if not done, and disable it upon exit
        s3c_rtc_setfreq() //then this will be called with clk disabled
    
    This patch take cares of such issue by adding s3c_rtc_{enable/disable}_clk in
    s3c_rtc_setfreq().
    
    Fixes: 24e1455493da ("drivers/rtc/rtc-s3c.c: delete duplicate clock control")
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Reviewed-by: Pankaj Dubey <pankaj.dubey@samsung.com>
    Tested-by: Pankaj Dubey <pankaj.dubey@samsung.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e055ad0f7b400b87e22caf4a0947179e37b74217
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Tue Jun 7 20:13:08 2016 -0300

    lpfc: fix oops in lpfc_sli4_scmd_to_wqidx_distr() from lpfc_send_taskmgmt()
    
    commit 05a05872c8d4b4357c9d913e6d73ae64882bddf5 upstream.
    
    The lpfc_sli4_scmd_to_wqidx_distr() function expects the scsi_cmnd
    'lpfc_cmd->pCmd' not to be null, and point to the midlayer command.
    
    That's not true in the .eh_(device|target|bus)_reset_handler path,
    because lpfc_send_taskmgmt() sends commands not from the midlayer, so
    does not set 'lpfc_cmd->pCmd'.
    
    That is true in the .queuecommand path because lpfc_queuecommand()
    stores the scsi_cmnd from midlayer in lpfc_cmd->pCmd; and lpfc_cmd is
    stored by lpfc_scsi_prep_cmnd() in piocbq->context1 -- which is passed
    to lpfc_sli4_scmd_to_wqidx_distr() as lpfc_cmd parameter.
    
    This problem can be hit on SCSI EH, and immediately with sg_reset.
    These 2 test-cases demonstrate the problem/fix with next-20160601.
    
    Test-case 1) sg_reset
    
        # strace sg_reset --device /dev/sdm
        <...>
        open("/dev/sdm", O_RDWR|O_NONBLOCK)     = 3
        ioctl(3, SG_SCSI_RESET, 0x3fffde6d0994 <unfinished ...>
        +++ killed by SIGSEGV +++
        Segmentation fault
    
        # dmesg
        Unable to handle kernel paging request for data at address 0x00000000
        Faulting instruction address: 0xd00000001c88442c
        Oops: Kernel access of bad area, sig: 11 [#1]
        <...>
        CPU: 104 PID: 16333 Comm: sg_reset Tainted: G        W       4.7.0-rc1-next-20160601-00004-g95b89dc #6
        <...>
        NIP [d00000001c88442c] lpfc_sli4_scmd_to_wqidx_distr+0xc/0xd0 [lpfc]
        LR [d00000001c826fe8] lpfc_sli_calc_ring.part.27+0x98/0xd0 [lpfc]
        Call Trace:
        [c000003c9ec876f0] [c000003c9ec87770] 0xc000003c9ec87770 (unreliable)
        [c000003c9ec87720] [d00000001c82e004] lpfc_sli_issue_iocb+0xd4/0x260 [lpfc]
        [c000003c9ec87780] [d00000001c831a3c] lpfc_sli_issue_iocb_wait+0x15c/0x5b0 [lpfc]
        [c000003c9ec87880] [d00000001c87f27c] lpfc_send_taskmgmt+0x24c/0x650 [lpfc]
        [c000003c9ec87950] [d00000001c87fd7c] lpfc_device_reset_handler+0x10c/0x200 [lpfc]
        [c000003c9ec87a10] [c000000000610694] scsi_try_bus_device_reset+0x44/0xc0
        [c000003c9ec87a40] [c0000000006113e8] scsi_ioctl_reset+0x198/0x2c0
        [c000003c9ec87bf0] [c00000000060fe5c] scsi_ioctl+0x13c/0x4b0
        [c000003c9ec87c80] [c0000000006629b0] sd_ioctl+0xf0/0x120
        [c000003c9ec87cd0] [c00000000046e4f8] blkdev_ioctl+0x248/0xb70
        [c000003c9ec87d30] [c0000000002a1f60] block_ioctl+0x70/0x90
        [c000003c9ec87d50] [c00000000026d334] do_vfs_ioctl+0xc4/0x890
        [c000003c9ec87de0] [c00000000026db60] SyS_ioctl+0x60/0xc0
        [c000003c9ec87e30] [c000000000009120] system_call+0x38/0x108
        Instruction dump:
        <...>
    
        With fix:
    
        # strace sg_reset --device /dev/sdm
        <...>
        open("/dev/sdm", O_RDWR|O_NONBLOCK)     = 3
        ioctl(3, SG_SCSI_RESET, 0x3fffe103c554) = 0
        close(3)                                = 0
        exit_group(0)                           = ?
        +++ exited with 0 +++
    
        # dmesg
        [  424.658649] lpfc 0006:01:00.4: 4:(0):0713 SCSI layer issued Device Reset (1, 0) return x2002
    
    Test-case 2) SCSI EH
    
        Using this debug patch to wire an SCSI EH trigger, for lpfc_scsi_cmd_iocb_cmpl():
        -       cmd->scsi_done(cmd);
        +       if ((phba->pport ? phba->pport->cfg_log_verbose : phba->cfg_log_verbose) == 0x32100000)
        +               printk(KERN_ALERT "lpfc: skip scsi_done()\n");
        +       else
        +               cmd->scsi_done(cmd);
    
        # echo 0x32100000 > /sys/class/scsi_host/host11/lpfc_log_verbose
    
        # dd if=/dev/sdm of=/dev/null iflag=direct &
        <...>
    
        After a while:
    
        # dmesg
        lpfc 0006:01:00.4: 4:(0):3053 lpfc_log_verbose changed from 0 (x0) to 839909376 (x32100000)
        lpfc: skip scsi_done()
        <...>
        Unable to handle kernel paging request for data at address 0x00000000
        Faulting instruction address: 0xd0000000199e448c
        Oops: Kernel access of bad area, sig: 11 [#1]
        <...>
        CPU: 96 PID: 28556 Comm: scsi_eh_11 Tainted: G        W       4.7.0-rc1-next-20160601-00004-g95b89dc #6
        <...>
        NIP [d0000000199e448c] lpfc_sli4_scmd_to_wqidx_distr+0xc/0xd0 [lpfc]
        LR [d000000019986fe8] lpfc_sli_calc_ring.part.27+0x98/0xd0 [lpfc]
        Call Trace:
        [c000000ff0d0b890] [c000000ff0d0b900] 0xc000000ff0d0b900 (unreliable)
        [c000000ff0d0b8c0] [d00000001998e004] lpfc_sli_issue_iocb+0xd4/0x260 [lpfc]
        [c000000ff0d0b920] [d000000019991a3c] lpfc_sli_issue_iocb_wait+0x15c/0x5b0 [lpfc]
        [c000000ff0d0ba20] [d0000000199df27c] lpfc_send_taskmgmt+0x24c/0x650 [lpfc]
        [c000000ff0d0baf0] [d0000000199dfd7c] lpfc_device_reset_handler+0x10c/0x200 [lpfc]
        [c000000ff0d0bbb0] [c000000000610694] scsi_try_bus_device_reset+0x44/0xc0
        [c000000ff0d0bbe0] [c0000000006126cc] scsi_eh_ready_devs+0x49c/0x9c0
        [c000000ff0d0bcb0] [c000000000614160] scsi_error_handler+0x580/0x680
        [c000000ff0d0bd80] [c0000000000ae848] kthread+0x108/0x130
        [c000000ff0d0be30] [c0000000000094a8] ret_from_kernel_thread+0x5c/0xb4
        Instruction dump:
        <...>
    
        With fix:
    
        # dmesg
        lpfc 0006:01:00.4: 4:(0):3053 lpfc_log_verbose changed from 0 (x0) to 839909376 (x32100000)
        lpfc: skip scsi_done()
        <...>
        lpfc 0006:01:00.4: 4:(0):0713 SCSI layer issued Device Reset (0, 0) return x2002
        <...>
        lpfc 0006:01:00.4: 4:(0):0723 SCSI layer issued Target Reset (1, 0) return x2002
        <...>
        lpfc 0006:01:00.4: 4:(0):0714 SCSI layer issued Bus Reset Data: x2002
        <...>
        lpfc 0006:01:00.4: 4:(0):3172 SCSI layer issued Host Reset Data:
        <...>
    
    Fixes: 8b0dff14164d ("lpfc: Add support for using block multi-queue")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Acked-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eba117fe1c4fa000fdda0199b93010dc01bc294b
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Wed Aug 3 09:00:14 2016 +0800

    ACPI / EC: Work around method reentrancy limit in ACPICA for _Qxx
    
    commit e1191bd4f62d9086a1a47adc286e7fcffc1fa55c upstream.
    
    A regression is caused by the following commit:
    
      Commit: 02b771b64b73226052d6e731a0987db3b47281e9
      Subject: ACPI / EC: Fix an issue caused by the serialized _Qxx evaluations
    
    In this commit, using system workqueue causes that the maximum parallel
    executions of _Qxx can exceed 255. This violates the method reentrancy
    limit in ACPICA and generates the following error log:
    
      ACPI Error: Method reached maximum reentrancy limit (255) (20150818/dsmethod-341)
    
    This patch creates a seperate workqueue and limits the number of parallel
    _Qxx evaluations down to a configurable value (can be tuned against number
    of online CPUs).
    
    Since EC events are handled after driver probe, we can create the workqueue
    in acpi_ec_init().
    
    Fixes: 02b771b64b73 (ACPI / EC: Fix an issue caused by the serialized _Qxx evaluations)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=135691
    Reported-and-tested-by: Helen Buus <ubuntu@hbuus.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dda994f9c7886e21bf3aa74bdea68cfc38184ef
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Jun 13 21:28:00 2016 +0300

    x86/platform/intel_mid_pci: Rework IRQ0 workaround
    
    commit bb27570525a71f48347ed0e0c265063e7952bb61 upstream.
    
    On Intel Merrifield platform several PCI devices have a bogus configuration,
    i.e. the IRQ0 had been assigned to few of them. These are PCI root bridge,
    eMMC0, HS UART common registers, PWM, and HDMI. The actual interrupt line can
    be allocated to one device exclusively, in our case to eMMC0, the rest should
    cope without it and basically known drivers for them are not using interrupt
    line at all.
    
    Rework IRQ0 workaround, which was previously done to avoid conflict between
    eMMC0 and HS UART common registers, to behave differently based on the device
    in question, i.e. allocate interrupt line to eMMC0, but silently skip interrupt
    allocation for the rest except HS UART common registers which are not used
    anyway. With this rework IOSF MBI driver in particular would be used.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: 39d9b77b8deb ("x86/pci/intel_mid_pci: Work around for IRQ0 assignment")
    Link: http://lkml.kernel.org/r/1465842481-136852-1-git-send-email-andriy.shevchenko@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82c712260288cb3f6b9e15eab8203924f67e5c27
Author: Chris Blake <chrisrblake93@gmail.com>
Date:   Mon May 30 07:26:37 2016 -0500

    PCI: Mark Atheros AR9485 and QCA9882 to avoid bus reset
    
    commit 9ac0108c2bac3f1d0255f64fb89fc27e71131b24 upstream.
    
    Similar to the AR93xx series, the AR94xx and the Qualcomm QCA988x also have
    the same quirk for the Bus Reset.
    
    Fixes: c3e59ee4e766 ("PCI: Mark Atheros AR93xx to avoid bus reset")
    Signed-off-by: Chris Blake <chrisrblake93@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f8e3e96a62390a5ddf65fef907ee60d5144c2a6
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Jul 21 14:27:51 2016 +0800

    MIPS: hpet: Increase HPET_MIN_PROG_DELTA and decrease HPET_MIN_CYCLES
    
    commit 3ef06653987d4c4536b408321edf0e5caa2a317f upstream.
    
    At first, we prefer to use mips clockevent device, so we decrease the
    rating of hpet clockevent device.
    
    For hpet, if HPET_MIN_PROG_DELTA (minimum delta of hpet programming) is
    too small and HPET_MIN_CYCLES (threshold of -ETIME checking) is too
    large, then hpet_next_event() can easily return -ETIME. After commit
    c6eb3f70d44828 ("hrtimer: Get rid of hrtimer softirq") this will cause
    a RCU stall.
    
    So, HPET_MIN_PROG_DELTA must be sufficient that we don't re-trip the
    -ETIME check -- if we do, we will return -ETIME, forward the next event
    time, try to set it, return -ETIME again, and basically lock the system
    up. Meanwhile, HPET_MIN_CYCLES doesn't need to be too large, 16 cycles
    is enough.
    
    This solution is similar to commit f9eccf24615672 ("clocksource/drivers
    /vt8500: Increase the minimum delta").
    
    By the way, this patch ensures hpet count/compare to be 32-bit long.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J . Hill <Steven.Hill@imgtec.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13819/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cdfa88525c3ed877ee08100db87ab3c4e8c1b19
Author: Huacai Chen <chenhc@lemote.com>
Date:   Fri Jul 22 11:46:31 2016 +0800

    MIPS: Don't register r4k sched clock when CPUFREQ enabled
    
    commit 07d69579e7fec27e371296d8ca9d6076fc401b5c upstream.
    
    Don't register r4k sched clock when CPUFREQ enabled because sched clock
    need a constant frequency.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J . Hill <Steven.Hill@caviumnetworks.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13820/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b0e604267af578f60ad4bccbc22af3cf9a0b365
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Jul 21 14:27:49 2016 +0800

    MIPS: Fix r4k clockevents registration
    
    commit 6dabf2b7a597a9613f0b8a2fcbe01e2a0a05c896 upstream.
    
    CPUFreq need min_delta_ticks/max_delta_ticks to be initialized, and
    this can be done by clockevents_config_and_register().
    
    Signed-off-by: Heiher <r@hev.cc>
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J . Hill <Steven.Hill@imgtec.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/13817/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2be3b4e278fad162cad4c6a46ae7cf709244464
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Tue Jun 14 14:59:38 2016 +0100

    MIPS: mm: Fix definition of R6 cache instruction
    
    commit 4f53989b0652ffe2605221c81ca8ffcfc90aed2a upstream.
    
    Commit a168b8f1cde6 ("MIPS: mm: Add MIPS R6 instruction encodings") added
    an incorrect definition of the redefined MIPSr6 cache instruction.
    
    Executing any kernel code including this instuction results in a
    reserved instruction exception and kernel panic.
    
    Fix the instruction definition.
    
    Fixes: a168b8f1cde6588ff7a67699fa11e01bc77a5ddd
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/13663/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09bde7904c746817cb8cc5c4d9490117c2cd1ba2
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Jun 24 10:55:44 2016 -0400

    SUNRPC: Don't allocate a full sockaddr_storage for tracing
    
    commit db1bb44c4c7e8d49ed674dc59e5222d99c698088 upstream.
    
    We're always tracing IPv4 or IPv6 addresses, so we can save a lot
    of space on the ringbuffer by allocating the correct sockaddr size.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Fixes: 83a712e0afef "sunrpc: add some tracepoints around ..."
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit add87fa4f7dc5ab7c8f20b7680f2fdb8f5057330
Author: KT Liao <kt.liao@emc.com.tw>
Date:   Wed Jul 13 11:12:12 2016 -0700

    Input: elan_i2c - properly wake up touchpad on ASUS laptops
    
    commit 2de4fcc64685def3e586856a2dc636df44532395 upstream.
    
    Some ASUS laptops were shipped with touchpads that require to be woken up
    first, before trying to switch them into absolute reporting mode, otherwise
    touchpad would fail to work while flooding the logs with:
    
            elan_i2c i2c-ELAN1000:00: invalid report id data (1)
    
    Among affected devices are Asus E202SA, N552VW, X456UF, UX305CA, and
    others. We detect such devices by checking the IC type and product ID
    numbers and adjusting order of operations accordingly.
    
    Signed-off-by: KT Liao <kt.liao@emc.com.tw>
    Reported-by: Chris Chiu <chiu@endlessm.com>
    Reported-by: Vlad Glagolev <stealth@vaygr.net>
    Tested-by: Vlad Glagolev <stealth@vaygr.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4570ce64a52bc103e49d607d9b675e3727db2437
Author: Richard Weinberger <richard@nod.at>
Date:   Sun Jun 12 22:03:16 2016 +0200

    um: Fix possible deadlock in sig_handler_common()
    
    commit 57a05d83b16710aff30510c33768df7ab17e0b4a upstream.
    
    We are in atomic context and must not sleep.
    Sleeping here is possible since malloc() maps
    to kmalloc() with GFP_KERNEL.
    
    Fixes: b6024b21 ("um: extend fpstate to _xstate to support YMM registers")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f924930c8f899ba5c1ed64b59b55ca950768688
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Jun 13 22:58:09 2016 -0700

    target: Fix ordered task CHECK_CONDITION early exception handling
    
    commit 410c29dfbfdf73d0d0b5d14a21868ab038eca703 upstream.
    
    If a Simple command is sent with a failure, target_setup_cmd_from_cdb
    returns with TCM_UNSUPPORTED_SCSI_OPCODE or TCM_INVALID_CDB_FIELD.
    
    So in the cases where target_setup_cmd_from_cdb returns an error, we
    never get far enough to call target_execute_cmd to increment simple_cmds.
    Since simple_cmds isn't incremented, the result of the failure from
    target_setup_cmd_from_cdb causes transport_generic_request_failure to
    decrement simple_cmds, due to call to transport_complete_task_attr.
    
    With this dev->simple_cmds or dev->dev_ordered_sync is now -1, not 0.
    So when a subsequent command with an Ordered Task is sent, it causes
    a hang, since dev->simple_cmds is at -1.
    
    Tested-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Signed-off-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Tested-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Signed-off-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bcdc94d697ea1ffe7497bd042feec29d3199c47
Author: Mike Christie <mchristi@redhat.com>
Date:   Thu Jun 2 20:12:37 2016 -0500

    target: Fix max_unmap_lba_count calc overflow
    
    commit ea263c7fada4af8ec7fe5fcfd6e7d7705a89351b upstream.
    
    max_discard_sectors only 32bits, and some non scsi backend
    devices will set this to the max 0xffffffff, so we can end up
    overflowing during the max_unmap_lba_count calculation.
    
    This fixes a regression caused by my patch:
    
    commit 8a9ebe717a133ba7bc90b06047f43cc6b8bcb8b3
    Author: Mike Christie <mchristi@redhat.com>
    Date:   Mon Jan 18 14:09:27 2016 -0600
    
        target: Fix WRITE_SAME/DISCARD conversion to linux 512b sectors
    
    which can result in extra discards being sent to due the overflow
    causing max_unmap_lba_count to be smaller than what the backing
    device can actually support.
    
    Signed-off-by: Mike Christie <mchristi@redhat.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6816be83ff4637a6c6912fb720b578e0c9a10f10
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Thu Jun 2 14:56:45 2016 -0700

    target: Fix race between iscsi-target connection shutdown + ABORT_TASK
    
    commit 064cdd2d91c2805d788876082f31cc63506f22c3 upstream.
    
    This patch fixes a race in iscsit_release_commands_from_conn() ->
    iscsit_free_cmd() -> transport_generic_free_cmd() + wait_for_tasks=1,
    where CMD_T_FABRIC_STOP could end up being set after the final
    kref_put() is called from core_tmr_abort_task() context.
    
    This results in transport_generic_free_cmd() blocking indefinately
    on se_cmd->cmd_wait_comp, because the target_release_cmd_kref()
    check for CMD_T_FABRIC_STOP returns false.
    
    To address this bug, make iscsit_release_commands_from_conn()
    do list_splice and set CMD_T_FABRIC_STOP early while holding
    iscsi_conn->cmd_lock.  Also make iscsit_aborted_task() only
    remove iscsi_cmd_t if CMD_T_FABRIC_STOP has not already been
    set.
    
    Finally in target_release_cmd_kref(), only honor fabric_stop
    if CMD_T_ABORTED has been set.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Quinn Tran <quinn.tran@qlogic.com>
    Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.de>
    Tested-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dea1c08776b4c1cac9178b0b74810a993150c9f
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Wed May 25 12:25:04 2016 -0700

    target: Fix missing complete during ABORT_TASK + CMD_T_FABRIC_STOP
    
    commit 5e2c956b8aa24d4f33ff7afef92d409eed164746 upstream.
    
    During transport_generic_free_cmd() with a concurrent TMR
    ABORT_TASK and shutdown CMD_T_FABRIC_STOP bit set, the
    caller will be blocked on se_cmd->cmd_wait_stop completion
    until the final kref_put() -> target_release_cmd_kref()
    has been invoked to call complete().
    
    However, when ABORT_TASK is completed with FUNCTION_COMPLETE
    in core_tmr_abort_task(), the aborted se_cmd will have already
    been removed from se_sess->sess_cmd_list via list_del_init().
    
    This results in target_release_cmd_kref() hitting the
    legacy list_empty() == true check, invoking ->release_cmd()
    but skipping complete() to wakeup se_cmd->cmd_wait_stop
    blocked earlier in transport_generic_free_cmd() code.
    
    To address this bug, it's safe to go ahead and drop the
    original list_empty() check so that fabric_stop invokes
    the complete() as expected, since list_del_init() can
    safely be used on a empty list.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Quinn Tran <quinn.tran@qlogic.com>
    Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.de>
    Tested-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5405497b4ed1c00a947b70bc4d28403e0fb7f36
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Tue May 17 22:19:10 2016 -0700

    target: Fix ordered task target_setup_cmd_from_cdb exception hang
    
    commit dff0ca9ea7dc8be2181a62df4a722c32ce68ff4a upstream.
    
    If a command with a Simple task attribute is failed due to a Unit
    Attention, then a subsequent command with an Ordered task attribute
    will hang forever.  The reason for this is that the Unit Attention
    status is checked for in target_setup_cmd_from_cdb, before the call
    to target_execute_cmd, which calls target_handle_task_attr, which
    in turn increments dev->simple_cmds.
    
    However, transport_generic_request_failure still calls
    transport_complete_task_attr, which will decrement dev->simple_cmds.
    In this case, simple_cmds is now -1.  So when a command with the
    Ordered task attribute is sent, target_handle_task_attr sees that
    dev->simple_cmds is not 0, so it decides it can't execute the
    command until all the (nonexistent) Simple commands have completed.
    
    Reported-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Tested-by: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Reported-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Tested-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5b888657318da5f587d1729753a38557fcdd590
Author: Feng Li <lifeng1519@gmail.com>
Date:   Tue Jul 12 06:15:44 2016 +0800

    iscsi-target: Fix panic when adding second TCP connection to iSCSI session
    
    commit 8abc718de6e9e52d8a6bfdb735060554aeae25e4 upstream.
    
    In MC/S scenario, the conn->sess has been set NULL in
    iscsi_login_non_zero_tsih_s1 when the second connection comes here,
    then kernel panic.
    
    The conn->sess will be assigned in iscsi_login_non_zero_tsih_s2. So
    we should check whether it's NULL before calling.
    
    Signed-off-by: Feng Li <lifeng1519@gmail.com>
    Tested-by: Sumit Rai <sumit.rai@calsoftinc.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3db4c640b32485105554e0bfd16bbde585f6fb0
Author: Iosif Harutyunov <iharutyunov@SonicWALL.com>
Date:   Fri Jul 22 23:22:42 2016 +0000

    ubi: Fix race condition between ubi device creation and udev
    
    commit 714fb87e8bc05ff78255afc0dca981e8c5242785 upstream.
    
    Install the UBI device object before we arm sysfs.
    Otherwise udev tries to read sysfs attributes before UBI is ready and
    udev rules will not match.
    
    Signed-off-by: Iosif Harutyunov <iharutyunov@sonicwall.com>
    [rw: massaged commit message]
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 798775c3a4c8c4e75cb32ea8a3f7a4f2f9a2d186
Author: Richard Weinberger <richard@nod.at>
Date:   Mon Jul 4 22:06:51 2016 +0200

    ubi: Fix early logging
    
    commit bc743f34dfa011e62edd0ea4ae8455be06c083b5 upstream.
    
    We cannot use ubi_* logging functions before the UBI
    object is initialized.
    
    Fixes: 3260870331 ("UBI: Extend UBI layer debug/messaging capabilities")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce5a28e47daf8ca09beba826ddd57955853b77e9
Author: Richard Weinberger <richard@nod.at>
Date:   Thu Jun 23 19:30:38 2016 +0200

    ubi: Make volume resize power cut aware
    
    commit 4946784bd3924b1374f05eebff2fd68660bae866 upstream.
    
    When the volume resize operation shrinks a volume,
    LEBs will be unmapped. Since unmapping will not erase these
    LEBs immediately we have to wait for that operation to finish.
    Otherwise in case of a power cut right after writing the new
    volume table the UBI attach process can find more LEBs than the
    volume table knows. This will render the UBI image unattachable.
    
    Fix this issue by waiting for erase to complete and write the new
    volume table afterward.
    
    Reported-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3699242f58bee45fb133a6633c86afc4b940a48e
Author: Frank Rowand <frowand.list@gmail.com>
Date:   Thu Jun 16 10:51:46 2016 -0700

    of: fix memory leak related to safe_name()
    
    commit d9fc880723321dbf16b2981e3f3e916b73942210 upstream.
    
    Fix a memory leak resulting from memory allocation in safe_name().
    This patch fixes all call sites of safe_name().
    
    Mathieu Malaterre reported the memory leak on boot:
    
    On my PowerMac device-tree would generate a duplicate name:
    
    [    0.023043] device-tree: Duplicate name in PowerPC,G4@0, renamed to "l2-cache#1"
    
    in this case a newly allocated name is generated by `safe_name`. However
    in this case it is never deallocated.
    
    The bug was found using kmemleak reported as:
    
    unreferenced object 0xdf532e60 (size 32):
      comm "swapper", pid 1, jiffies 4294892300 (age 1993.532s)
      hex dump (first 32 bytes):
        6c 32 2d 63 61 63 68 65 23 31 00 dd e4 dd 1e c2  l2-cache#1......
        ec d4 ba ce 04 ec cc de 8e 85 e9 ca c4 ec cc 9e  ................
      backtrace:
        [<c02d3350>] kvasprintf+0x64/0xc8
        [<c02d3400>] kasprintf+0x4c/0x5c
        [<c0453814>] safe_name.isra.1+0x80/0xc4
        [<c04545d8>] __of_attach_node_sysfs+0x6c/0x11c
        [<c075f21c>] of_core_init+0x8c/0xf8
        [<c0729594>] kernel_init_freeable+0xd4/0x208
        [<c00047e8>] kernel_init+0x24/0x11c
        [<c00158ec>] ret_from_kernel_thread+0x5c/0x64
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=120331
    
    Signed-off-by: Frank Rowand <frank.rowand@am.sony.com>
    Reported-by: mathieu.malaterre@gmail.com
    Tested-by: Mathieu Malaterre <mathieu.malaterre@gmail.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84c9756c8bf7b7130b506679e7a2509a64fb758a
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jul 21 13:03:30 2016 -0700

    IB/core, RDMA RW API: Do not exceed QP SGE send limit
    
    commit 632bc3f65081dd1e2e5394a9161580a0f78e8839 upstream.
    
    Compute the SGE limit for RDMA READ and WRITE requests in
    ib_create_qp(). Use that limit in the RDMA RW API implementation.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Cc: Steve Wise <swise@opengridcomputing.com>
    Cc: Parav Pandit <pandit.parav@gmail.com>
    Cc: Nicholas Bellinger <nab@linux-iscsi.org>
    Cc: Laurence Oberman <loberman@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1406586821b660baba40ba98881e9ce7d932b409
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jul 21 13:03:09 2016 -0700

    IB/core: Make rdma_rw_ctx_init() initialize all used fields
    
    commit eaa74ec7329a48a4b724d8de440b3a2cbaabf7c8 upstream.
    
    Some but not all callers of rdma_rw_ctx_init() zero-initialize
    struct rdma_rw_ctx. Hence make rdma_rw_ctx_init() initialize all
    work request fields that will be read by ib_post_send().
    
    Fixes: a060b5629ab0 ("IB/core: generic RDMA READ/WRITE API")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Steve Wise <swise@opengridcomputing.com>
    Tested-by: Laurence Oberman <loberman@redhat.com>
    Cc: Parav Pandit <pandit.parav@gmail.com>
    Cc: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d15cc043d7e450cb759ca997c618d4bb06b17836
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jul 21 13:03:47 2016 -0700

    IB/srpt: Limit the number of SG elements per work request
    
    commit 30c6d8773de06878f920666d8c945f81cb2081b3 upstream.
    
    Limit the number of SG elements per work request to what the HCA
    and the queue pair support.
    
    Fixes: 34693573fde0 ("IB/srpt: Reduce QP buffer size")
    Reported-by: Parav Pandit <pandit.parav@gmail.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Cc: Steve Wise <swise@opengridcomputing.com>
    Cc: Parav Pandit <pandit.parav@gmail.com>
    Cc: Nicholas Bellinger <nab@linux-iscsi.org>
    Cc: Laurence Oberman <loberman@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8029fae4f239c13d89d25e4b18897ea1bf001e7
Author: Jianxin Xiong <jianxin.xiong@intel.com>
Date:   Mon Jul 25 13:39:08 2016 -0700

    IB/rdmavt: Add missing spin_lock_init call for rdi->n_cqs_lock
    
    commit a6580f4310ded039fc9f682cbf027fbba217652b upstream.
    
    This fixes the following warning with PROV_LOCKING enabled kernel:
    
    INFO: trying to register non-static key.
    the code is fine but needs lockdep annotation.
    turning off the locking correctness validator.
    CPU: 15 PID: 12286 Comm: modprobe Not tainted 4.7.0-rc5.prove_rcu+ #1
    Hardware name: Intel Corporation S2600WT2R/S2600WT2R,
    ......
    Call Trace:
    [<ffffffff8139ec0d>] dump_stack+0x85/0xc8
    [<ffffffff810eb765>] register_lock_class+0x415/0x4b0
    [<ffffffff810ede1c>] ? __lock_acquire+0x40c/0x1960
    [<ffffffff810edaa9>] __lock_acquire+0x99/0x1960
    [<ffffffff8120ab62>] ? find_vmap_area+0x42/0x60
    [<ffffffff8120ab39>] ? find_vmap_area+0x19/0x60
    [<ffffffff810ef9d3>] lock_acquire+0xd3/0x200
    [<ffffffffa049d598>] ? rvt_create_cq+0xc8/0x250 [rdmavt]
    [<ffffffff81763391>] _raw_spin_lock+0x31/0x40
    [<ffffffffa049d598>] ? rvt_create_cq+0xc8/0x250 [rdmavt]
    [<ffffffffa049d598>] rvt_create_cq+0xc8/0x250 [rdmavt]
    [<ffffffff810ead46>] ? static_obj+0x36/0x50
    [<ffffffffa0469e39>] ib_alloc_cq+0x49/0x180 [ib_core]
    [<ffffffffa047bed4>] ib_mad_init_device+0x204/0x6d0 [ib_core]
    [<ffffffff810e968f>] ? up_write+0x1f/0x40
    [<ffffffffa046e2c0>] ib_register_device+0x3d0/0x510 [ib_core]
    [<ffffffffa0752410>] ? read_cc_setting_bin+0x200/0x200 [hfi1]
    [<ffffffff810ead46>] ? static_obj+0x36/0x50
    [<ffffffff810eb888>] ? lockdep_init_map+0x88/0x200
    [<ffffffffa049cbff>] rvt_register_device+0x17f/0x320 [rdmavt]
    [<ffffffffa0766caa>] hfi1_register_ib_device+0x6ca/0x7c0 [hfi1]
    [<ffffffffa0733de4>] init_one+0x2b4/0x430 [hfi1]
    [<ffffffff813e40a5>] local_pci_probe+0x45/0xa0
    [<ffffffff813e5110>] ? pci_match_device+0xe0/0x110
    [<ffffffff813e550c>] pci_device_probe+0xfc/0x140
    [<ffffffff814daee9>] driver_probe_device+0x239/0x460
    [<ffffffff814db1dd>] __driver_attach+0xcd/0xf0
    [<ffffffff814db110>] ? driver_probe_device+0x460/0x460
    [<ffffffff814d89b3>] bus_for_each_dev+0x73/0xc0
    [<ffffffff814da74e>] driver_attach+0x1e/0x20
    [<ffffffff814da1b3>] bus_add_driver+0x1d3/0x290
    [<ffffffffa04cc114>] ? dev_init+0x114/0x114 [hfi1]
    [<ffffffff814dbf60>] driver_register+0x60/0xe0
    [<ffffffffa04cc114>] ? dev_init+0x114/0x114 [hfi1]
    [<ffffffff813e39d0>] __pci_register_driver+0x60/0x70
    [<ffffffffa04cc2aa>] hfi1_mod_init+0x196/0x1fe [hfi1]
    [<ffffffff81002190>] do_one_initcall+0x50/0x190
    [<ffffffff8110be72>] ? rcu_read_lock_sched_held+0x62/0x70
    [<ffffffff8122d4aa>] ? kmem_cache_alloc_trace+0x23a/0x2a0
    [<ffffffff811c1881>] ? do_init_module+0x27/0x1dc
    [<ffffffff811c18ba>] do_init_module+0x60/0x1dc
    [<ffffffff811360cc>] load_module+0x132c/0x1ac0
    [<ffffffff81132c40>] ? __symbol_put+0x60/0x60
    [<ffffffff8133e50d>] ? ima_post_read_file+0x3d/0x80
    
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Jianxin Xiong <jianxin.xiong@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 168a28e28144aa0c8f38899374135c697a388d35
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Jul 19 10:03:17 2016 -0700

    IB/rdmavt: Disable by default
    
    commit 378fc3201eae07ab0fa7fb4133da141c3072f995 upstream.
    
    There is a strict policy in the Linux kernel that new drivers must be
    disabled by default. Hence leave out the "default m" line from Kconfig.
    
    Fixes: 0194621b2253 ("IB/rdmavt: Create module framework and handle driver registration")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Jubin John <jubin.john@intel.com>
    Cc: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Cc: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8be3949fcc62090a2ad6d77ca73db238c1866f04
Author: Artemy Kovalyov <artemyko@mellanox.com>
Date:   Fri Jun 17 15:33:31 2016 +0300

    IB/mlx5: Fix MODIFY_QP command input structure
    
    commit e3353c268b06236d6c40fa1714c114f21f44451c upstream.
    
    Make MODIFY_QP command input structure compliant to specification
    
    Fixes: e126ba97dba9 ('mlx5: Add driver for Mellanox Connect-IB adapters')
    Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e132bf7877a410507f40de76783d762c65ec6f7
Author: Slava Shwartsman <slavash@mellanox.com>
Date:   Sun Jul 3 15:28:19 2016 +0300

    IB/mlx5: Fix iteration overrun in GSI qps
    
    commit b0ffeb537f3a726931d962ab6d03e34a2f070ea4 upstream.
    
    Number of outstanding_pi may overflow and as a result may indicate that
    there are no elements in the queue. The effect of doing this is that the
    MAD layer will get stuck waiting for completions. The MAD layer will
    think that the QP is full - because it didn't receive these completions.
    
    This fix changes it so the outstanding_pi number is increased
    with 32-bit wraparound and is not limited to max_send_wr so
    that the difference between outstanding_pi and outstanding_ci will
    really indicate the number of outstanding completions.
    
    Fixes: ea6dc2036224 ('IB/mlx5: Reorder GSI completions')
    Signed-off-by: Slava Shwartsman <slavash@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Reviewed-by: Haggai Eran <haggaie@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5a72d06c0c6748c1dd043ceaa620d2b834588b4
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Aug 4 15:28:04 2016 +0800

    ALSA: hda - Fix headset mic detection problem for two dell machines
    
    commit 59ec4b57bcaede46546d54d037a21004b9aa5cef upstream.
    
    One of the machines has ALC255 on it, another one has ALC298 on it.
    
    On the machine with the codec ALC298, it also has the speaker volume
    problem, so we add the fixup chained to ALC298_FIXUP_SPK_VOLUME rather
    than adding a group of pin definition in the pin quirk table, since
    the speak volume problem does not happen on other machines yet.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4226ceb391b0be813461d059a76a7c19f00a3a8
Author: Maruthi Srinivas Bayyavarapu <Maruthi.Bayyavarapu@amd.com>
Date:   Wed Aug 3 16:46:39 2016 +0530

    ALSA: hda: add AMD Bonaire AZ PCI ID with proper driver caps
    
    commit fd48331f9b71d2add941adaee3619f5b8527182d upstream.
    
    This commit fixes garbled audio on Bonaire HDMI
    
    Signed-off-by: Maruthi Bayyavarapu <maruthi.bayyavarapu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b52ce7ac6aa6773600afbc4090c690f90bfba2c
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Aug 1 10:20:32 2016 +0800

    ALSA: hda/realtek - Can't adjust speaker's volume on a Dell AIO
    
    commit dd9aa335c88003d131ac874e7f6809902de0b847 upstream.
    
    We have a Dell AIO on which we can't adjust its speaker's volume.
    The problem is it is connected to a Audio Output node without Amp-out
    capability. To fix it, we change it to be connnected to a node with
    Amp-out capability.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 452d2cd86a5690b00d51e572c2b38dcae840fd28
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Aug 3 15:13:00 2016 +0200

    ALSA: hda: Fix krealloc() with __GFP_ZERO usage
    
    commit 33baefe5e72f17a6df378e48196cd8cada11deec upstream.
    
    krealloc() doesn't work always properly with __GFP_ZERO flag as
    expected.  For clearing the reallocated area, we need to clear
    explicitly instead.
    
    Reported-by: Joe Perches <joe@perches.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0d430ad5b94175a82e9e502a5683a4826f38e19
Author: Jia He <hejianet@gmail.com>
Date:   Tue Aug 2 14:02:31 2016 -0700

    mm/hugetlb: avoid soft lockup in set_max_huge_pages()
    
    commit 649920c6ab93429b94bc7c1aa7c0e8395351be32 upstream.
    
    In powerpc servers with large memory(32TB), we watched several soft
    lockups for hugepage under stress tests.
    
    The call traces are as follows:
    1.
    get_page_from_freelist+0x2d8/0xd50
    __alloc_pages_nodemask+0x180/0xc20
    alloc_fresh_huge_page+0xb0/0x190
    set_max_huge_pages+0x164/0x3b0
    
    2.
    prep_new_huge_page+0x5c/0x100
    alloc_fresh_huge_page+0xc8/0x190
    set_max_huge_pages+0x164/0x3b0
    
    This patch fixes such soft lockups.  It is safe to call cond_resched()
    there because it is out of spin_lock/unlock section.
    
    Link: http://lkml.kernel.org/r/1469674442-14848-1-git-send-email-hejianet@gmail.com
    Signed-off-by: Jia He <hejianet@gmail.com>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23278d6a4ae6295cbecb7b443633a84f3687c3f4
Author: Hector Palacios <hector.palacios@digi.com>
Date:   Mon Jul 18 10:39:18 2016 +0200

    mtd: nand: fix bug writing 1 byte less than page size
    
    commit 144f4c98399e2c0ca60eb414c15a2c68125c18b8 upstream.
    
    nand_do_write_ops() determines if it is writing a partial page with the
    formula:
            part_pagewr = (column || writelen < (mtd->writesize - 1))
    
    When 'writelen' is exactly 1 byte less than the NAND page size the formula
    equates to zero, so the code doesn't process it as a partial write,
    although it should.
    As a consequence the function remains in the while(1) loop with 'writelen'
    becoming 0xffffffff and iterating endlessly.
    
    The bug may not be easy to reproduce in Linux since user space tools
    usually force the padding or round-up the write size to a page-size
    multiple.
    This was discovered in U-Boot where the issue can be reproduced by
    writing any size that is 1 byte less than a page-size multiple.
    For example, on a NAND with 2K page (0x800):
            => nand erase.part <partition>
            => nand write $loadaddr <partition> 7ff
    
    [Editor's note: the bug was added in commit 29072b96078f, but moved
    around in commit 66507c7bc8895 ("mtd: nand: Add support to use nand_base
    poi databuf as bounce buffer")]
    
    Fixes: 29072b96078f ("[MTD] NAND: add subpage write support")
    Signed-off-by: Hector Palacios <hector.palacios@digi.com>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0b0edbc90d2523d1350f39b26ec492e0984e385
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Thu Jun 16 09:53:58 2016 +0200

    floppy: fix open(O_ACCMODE) for ioctl-only open
    
    commit ff06db1efb2ad6db06eb5b99b88a0c15a9cc9b0e upstream.
    
    Commit 09954bad4 ("floppy: refactor open() flags handling"), as a
    side-effect, causes open(/dev/fdX, O_ACCMODE) to fail. It turns out that
    this is being used setfdprm userspace for ioctl-only open().
    
    Reintroduce back the original behavior wrt !(FMODE_READ|FMODE_WRITE)
    modes, while still keeping the original O_NDELAY bug fixed.
    
    Reported-by: Wim Osterholt <wim@djo.tudelft.nl>
    Tested-by: Wim Osterholt <wim@djo.tudelft.nl>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b410df3a2f05771c5ee55248c2d4604453a95c14
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Sun Jul 31 11:15:13 2016 -0700

    block: fix bdi vs gendisk lifetime mismatch
    
    commit df08c32ce3be5be138c1dbfcba203314a3a7cd6f upstream.
    
    The name for a bdi of a gendisk is derived from the gendisk's devt.
    However, since the gendisk is destroyed before the bdi it leaves a
    window where a new gendisk could dynamically reuse the same devt while a
    bdi with the same name is still live.  Arrange for the bdi to hold a
    reference against its "owner" disk device while it is registered.
    Otherwise we can hit sysfs duplicate name collisions like the following:
    
     WARNING: CPU: 10 PID: 2078 at fs/sysfs/dir.c:31 sysfs_warn_dup+0x64/0x80
     sysfs: cannot create duplicate filename '/devices/virtual/bdi/259:1'
    
     Hardware name: HP ProLiant DL580 Gen8, BIOS P79 05/06/2015
      0000000000000286 0000000002c04ad5 ffff88006f24f970 ffffffff8134caec
      ffff88006f24f9c0 0000000000000000 ffff88006f24f9b0 ffffffff8108c351
      0000001f0000000c ffff88105d236000 ffff88105d1031e0 ffff8800357427f8
     Call Trace:
      [<ffffffff8134caec>] dump_stack+0x63/0x87
      [<ffffffff8108c351>] __warn+0xd1/0xf0
      [<ffffffff8108c3cf>] warn_slowpath_fmt+0x5f/0x80
      [<ffffffff812a0d34>] sysfs_warn_dup+0x64/0x80
      [<ffffffff812a0e1e>] sysfs_create_dir_ns+0x7e/0x90
      [<ffffffff8134faaa>] kobject_add_internal+0xaa/0x320
      [<ffffffff81358d4e>] ? vsnprintf+0x34e/0x4d0
      [<ffffffff8134ff55>] kobject_add+0x75/0xd0
      [<ffffffff816e66b2>] ? mutex_lock+0x12/0x2f
      [<ffffffff8148b0a5>] device_add+0x125/0x610
      [<ffffffff8148b788>] device_create_groups_vargs+0xd8/0x100
      [<ffffffff8148b7cc>] device_create_vargs+0x1c/0x20
      [<ffffffff811b775c>] bdi_register+0x8c/0x180
      [<ffffffff811b7877>] bdi_register_dev+0x27/0x30
      [<ffffffff813317f5>] add_disk+0x175/0x4a0
    
    Reported-by: Yi Zhang <yizhan@redhat.com>
    Tested-by: Yi Zhang <yizhan@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Fixed up missing 0 return in bdi_register_owner().
    
    Signed-off-by: Jens Axboe <axboe@fb.com>

commit f495a60eb6351bf2f29fdbc1854375df9fe4022b
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Wed Jul 27 07:22:05 2016 +0200

    block: add missing group association in bio-cloning functions
    
    commit 20bd723ec6a3261df5e02250cd3a1fbb09a343f2 upstream.
    
    When a bio is cloned, the newly created bio must be associated with
    the same blkcg as the original bio (if BLK_CGROUP is enabled). If
    this operation is not performed, then the new bio is not associated
    with any group, and the group of the current task is returned when
    the group of the bio is requested.
    
    Depending on the cloning frequency, this may cause a large
    percentage of the bios belonging to a given group to be treated
    as if belonging to other groups (in most cases as if belonging to
    the root group). The expected group isolation may thereby be broken.
    
    This commit adds the missing association in bio-cloning functions.
    
    Fixes: da2f0f74cf7d ("Btrfs: add support for blkio controllers")
    
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Reviewed-by: Nikolay Borisov <kernel@kyup.com>
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feaed7c915e47e2c2e13264e1408a64a6736d8f0
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 4 17:36:08 2016 +0100

    metag: Fix __cmpxchg_u32 asm constraint for CMP
    
    commit 6154c187b97ee7513046bb4eb317a89f738f13ef upstream.
    
    The LNKGET based atomic sequence in __cmpxchg_u32 has slightly incorrect
    constraints for the return value which under certain circumstances can
    allow an address unit register to be used as the first operand of a CMP
    instruction. This isn't a valid instruction however as the encodings
    only allow a data unit to be specified. This would result in an
    assembler error like the following:
    
      Error: failed to assemble instruction: "CMP A0.2,D0Ar6"
    
    Fix by changing the constraint from "=&da" (assigned, early clobbered,
    data or address unit register) to "=&d" (data unit register only).
    
    The constraint for the second operand, "bd" (an op2 register where op1
    is a data unit register and the instruction supports O2R) is already
    correct assuming the first operand is a data unit register.
    
    Other cases of CMP in inline asm have had their constraints checked, and
    appear to all be fine.
    
    Fixes: 6006c0d8ce94 ("metag: Atomics, locks and bitops")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: linux-metag@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21bc3c38f050caea4a088ac63bd8b2195529ab93
Author: Laura Abbott <labbott@redhat.com>
Date:   Fri Jul 8 12:18:50 2016 -0700

    ftrace/recordmcount: Work around for addition of metag magic but not relocations
    
    commit b2e1c26f0b62531636509fbcb6dab65617ed8331 upstream.
    
    glibc recently did a sync up (94e73c95d9b5 "elf.h: Sync with the gabi
    webpage") that added a #define for EM_METAG but did not add relocations
    
    This triggers build errors:
    
    scripts/recordmcount.c: In function 'do_file':
    scripts/recordmcount.c:466:28: error: 'R_METAG_ADDR32' undeclared (first use in this function)
      case EM_METAG:  reltype = R_METAG_ADDR32;
                                ^~~~~~~~~~~~~~
    scripts/recordmcount.c:466:28: note: each undeclared identifier is reported only once for each function it appears in
    scripts/recordmcount.c:468:20: error: 'R_METAG_NONE' undeclared (first use in this function)
         rel_type_nop = R_METAG_NONE;
                        ^~~~~~~~~~~~
    
    Work around this change with some more #ifdefery for the relocations.
    
    Fedora Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1354034
    
    Link: http://lkml.kernel.org/r/1468005530-14757-1-git-send-email-labbott@redhat.com
    
    Cc: James Hogan <james.hogan@imgtec.com>
    Fixes: 00512bdd4573 ("metag: ftrace support")
    Reported-by: Ross Burton <ross.burton@intel.com>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3dff952e4ab97ce56655f33748edfc44117e95d
Author: Konstantin Neumoin <kneumoin@virtuozzo.com>
Date:   Mon Jul 11 15:28:59 2016 +0300

    balloon: check the number of available pages in leak balloon
    
    commit 37cf99e08c6fb4dcea0f9ad2b13b6daa8c76a711 upstream.
    
    The balloon has a special mechanism that is subscribed to the oom
    notification which leads to deflation for a fixed number of pages.
    The number is always fixed even when the balloon is fully deflated.
    But leak_balloon did not expect that the pages to deflate will be more
    than taken, and raise a "BUG" in balloon_page_dequeue when page list
    will be empty.
    
    So, the simplest solution would be to check that the number of releases
    pages is less or equal to the number taken pages.
    
    Signed-off-by: Konstantin Neumoin <kneumoin@virtuozzo.com>
    Signed-off-by: Denis V. Lunev <den@openvz.org>
    CC: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4e35679afda4176a7dabeb3af0219ac79b548ec
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Wed Jul 6 12:05:45 2016 +0200

    drm/i915/dp: Revert "drm/i915/dp: fall back to 18 bpp when sink capability is unknown"
    
    commit 196f954e250943df414efd3d632254c29be38e59 upstream.
    
    This reverts commit 013dd9e03872
    ("drm/i915/dp: fall back to 18 bpp when sink capability is unknown")
    
    This commit introduced a regression into stable kernels,
    as it reduces output color depth to 6 bpc for any video
    sink connected to a Displayport connector if that sink
    doesn't report a specific color depth via EDID, or if
    our EDID parser doesn't actually recognize the proper
    bpc from EDID.
    
    Affected are active DisplayPort->VGA converters and
    active DisplayPort->DVI converters. Both should be
    able to handle 8 bpc, but are degraded to 6 bpc with
    this patch.
    
    The reverted commit was meant to fix
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=105331
    
    A followup patch implements a fix for that specific bug,
    which is caused by a faulty EDID of the affected DP panel
    by adding a new EDID quirk for that panel.
    
    DP 18 bpp fallback handling and other improvements to
    DP sink bpc detection will be handled for future
    kernels in a separate series of patches.
    
    Please backport to stable.
    
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d848017e9776da1b8b113b2f107583c485024e8
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon May 23 17:42:48 2016 +0300

    drm/i915: Never fully mask the the EI up rps interrupt on SNB/IVB
    
    commit a7b4667a00025ac28300737c868bd4818b6d8c4d upstream.
    
    SNB (and IVB too I suppose) starts to misbehave if the GPU gets stuck
    in an infinite batch buffer loop. The GPU apparently hogs something
    critical and CPUs start to lose interrupts and whatnot. We can keep
    the system limping along by unmasking some interrupts in
    GEN6_PMINTRMSK. The EI up interrupt has been previously chosen for
    that task, so let's never mask it.
    
    v2: s/gen6_rps_pm_mask/gen6_sanitize_rps_pm_mask/ (Chris)
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=93122
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: http://patchwork.freedesktop.org/patch/msgid/1464014568-4529-1-git-send-email-ville.syrjala@linux.intel.com
    (cherry picked from commit 12c100bfa5d9103b6c4d43636fee09c31e75605a)
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 613c8d9a2cee7388e326fd4a8dfb9633969aa99c
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Wed Jul 6 12:05:44 2016 +0200

    drm/edid: Add 6 bpc quirk for display AEO model 0.
    
    commit e10aec652f31ec61d6a0b4d00d8ef8d2b66fa0fd upstream.
    
    Bugzilla https://bugzilla.kernel.org/show_bug.cgi?id=105331
    reports that the "AEO model 0" display is driven with 8 bpc
    without dithering by default, which looks bad because that
    panel is apparently a 6 bpc DP panel with faulty EDID.
    
    A fix for this was made by commit 013dd9e03872
    ("drm/i915/dp: fall back to 18 bpp when sink capability is unknown").
    
    That commit triggers new regressions in precision for DP->DVI and
    DP->VGA displays. A patch is out to revert that commit, but it will
    revert video output for the AEO model 0 panel to 8 bpc without
    dithering.
    
    The EDID 1.3 of that panel, as decoded from the xrandr output
    attached to that bugzilla bug report, is somewhat faulty, and beyond
    other problems also sets the "DFP 1.x compliant TMDS" bit, which
    according to DFP spec means to drive the panel with 8 bpc and
    no dithering in absence of other colorimetry information.
    
    Try to make the original bug reporter happy despite the
    faulty EDID by adding a quirk to mark that panel as 6 bpc,
    so 6 bpc output with dithering creates a nice picture.
    
    Tested by injecting the edid from the fdo bug into a DP connector
    via drm_kms_helper.edid_firmware and verifying the 6 bpc + dithering
    is selected.
    
    This patch should be backported to stable.
    
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d932d87c3de8202af90571d41d0099f3ff807c09
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Jul 28 17:54:42 2016 +0300

    drm: aux ->transfer() can return 0, deal with it
    
    commit a1f5524a66ff6284d1380cdd7723de82698ff9d3 upstream.
    
    Restore the correct behaviour (as in check msg.reply) when aux
    ->transfer() returns 0. It got removed in
    commit 82922da39190 ("drm/dp_helper: Retry aux transactions on all errors")
    
    Now I can actually dump the "entire" DPCD on a Dell UP2314Q with
    ddrescue. It has some offsets in the DPCD that can't be read
    for some resaon, all you get is defers. Previously ddrescue would
    just give up at the first unredable offset on account of
    read() returning 0 means EOF. Here's the ddrescue log
    for the interested:
    0x00000000  0x00001400  +
    0x00001400  0x00000030  -
    0x00001430  0x000001D0  +
    0x00001600  0x00000030  -
    0x00001630  0x0001F9D0  +
    0x00021000  0x00000001  -
    0x00021001  0x000DEFFF  +
    
    Cc: Lyude <cpaul@redhat.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch
    Fixes: 82922da39190 ("drm/dp_helper: Retry aux transactions on all errors")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98d3e8b89ff6c9fa5c46caefefa57550a9c3990d
Author: Mika Kuoppala <mika.kuoppala@linux.intel.com>
Date:   Wed Jul 20 14:26:12 2016 +0300

    drm/i915/gen9: Add WaInPlaceDecompressionHang
    
    commit f15f6ca1e706e11fd07611bd4c7f903625349b33 upstream.
    
    Add this workaround to prevent hang when in place compression
    is used.
    
    References: HSD#2135774
    Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
    Reviewed-by: Arun Siluvery <arun.siluvery@linux.intel.com>
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    (cherry picked from commit 4ba9c1f7c7b8ca8c1d77f65d408e589dc87b9a2d)
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b3e6e64292a78b1620efefa63a7aa18cc3d46ff
Author: John Keeping <john@metanate.com>
Date:   Thu Jul 14 16:29:15 2016 +0100

    drm/rockchip: allocate correct crtc state structure on reset
    
    commit dc0b408f5a87cce3ea3f81a6800244fb7d395435 upstream.
    
    Because we are using a custom crtc_state structure, we must override the
    reset helper to allocate the correct amount of memory.
    
    Fixes: 4e257d9eee23 ("drm/rockchip: get rid of rockchip_drm_crtc_mode_config")
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Mark Yao <mark.yao@rock-chips.com>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1fa9693c0047a22ba8181a2078ba7a29d1a9591
Author: Huang Rui <ray.huang@amd.com>
Date:   Tue Jul 12 14:31:23 2016 +0800

    drm/amd/powerplay: fix the incorrect return value
    
    commit bec5f70dad45f7ad63f97aa0988821532ebeade7 upstream.
    
    The return value 0 (false) means fail to find GPIO in
    atomctrl_get_pp_assign_pin. "-1" returns true as bool actually.
    
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ced8d2e3b7baace9046ed545c645c62c3e19935f
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Apr 26 19:46:32 2016 +0300

    drm/i915: Update CDCLK_FREQ register on BDW after changing cdclk frequency
    
    commit 7f1052a8fa38df635ab0dc0e6025b64ab9834824 upstream.
    
    Update CDCLK_FREQ on BDW after changing the cdclk frequency. Not sure
    if this is a late addition to the spec, or if I simply overlooked this
    step when writing the original code.
    
    This is what Bspec has to say about CDCLK_FREQ:
    "Program this field to the CD clock frequency minus one. This is used to
     generate a divided down clock for miscellaneous timers in display."
    
    And the "Broadwell Sequences for Changing CD Clock Frequency" section
    clarifies this further:
    "For CD clock 337.5 MHz, program 337 decimal.
     For CD clock 450 MHz, program 449 decimal.
     For CD clock 540 MHz, program 539 decimal.
     For CD clock 675 MHz, program 674 decimal."
    
    Cc: Mika Kahola <mika.kahola@intel.com>
    Fixes: b432e5cfd5e9 ("drm/i915: BDW clock change support")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1461689194-6079-2-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Mika Kahola <mika.kahola@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01fc601b5ee721ddab0ce64e4bd20ab78d51faa2
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jul 7 09:41:12 2016 +0100

    drm: Restore double clflush on the last partial cacheline
    
    commit 396f5d62d1a5fd99421855a08ffdef8edb43c76e upstream.
    
    This effectively reverts
    
    commit afcd950cafea6e27b739fe7772cbbeed37d05b8b
    Author: Chris Wilson <chris@chris-wilson.co.uk>
    Date:   Wed Jun 10 15:58:01 2015 +0100
    
        drm: Avoid the double clflush on the last cache line in drm_clflush_virt_range()
    
    as we have observed issues with serialisation of the clflush operations
    on Baytrail+ Atoms with partial updates. Applying the double flush on the
    last cacheline forces that clflush to be ordered with respect to the
    previous clflush, and the mfence then protects against prefetches crossing
    the clflush boundary.
    
    The same issue can be demonstrated in userspace with igt/gem_exec_flush.
    
    Fixes: afcd950cafea6 (drm: Avoid the double clflush on the last cache...)
    Testcase: igt/gem_concurrent_blit
    Testcase: igt/gem_partial_pread_pwrite
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=92845
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: dri-devel@lists.freedesktop.org
    Cc: Akash Goel <akash.goel@intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jason Ekstrand <jason.ekstrand@intel.com>
    Reviewed-by: Mika Kuoppala <mika.kuoppala@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1467880930-23082-6-git-send-email-chris@chris-wilson.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6687b5661ac14fe2ed995e1cdb28529eb3617de8
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jul 28 18:56:13 2016 -0400

    drm/nouveau/fbcon: fix font width not divisible by 8
    
    commit 28668f43b8e421634e1623f72a879812288dd06b upstream.
    
    The patch f045f459d925 ("drm/nouveau/fbcon: fix out-of-bounds memory accesses")
    tries to fix some out of memory accesses. Unfortunatelly, the patch breaks the
    display when using fonts with width that is not divisiable by 8.
    
    The monochrome bitmap for each character is stored in memory by lines from top
    to bottom. Each line is padded to a full byte.
    
    For example, for 22x11 font, each line is padded to 16 bits, so each
    character is consuming 44 bytes total, that is 11 32-bit words. The patch
    f045f459d925 changed the logic to "dsize = ALIGN(image->width *
    image->height, 32) >> 5", that is just 8 words - this is incorrect and it
    causes display corruption.
    
    This patch adds the necesary padding of lines to 8 bytes.
    
    This patch should be backported to stable kernels where f045f459d925 was
    backported.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Fixes: f045f459d925 ("drm/nouveau/fbcon: fix out-of-bounds memory accesses")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e765fe222e85da420e3e693ba43b278f627d417
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Wed Jul 27 19:16:39 2016 -0400

    drm/nouveau/gr/nv3x: fix instobj write offsets in gr setup
    
    commit d0e62ef6ed257715a88d0e5d7cd850a1695429e2 upstream.
    
    This should fix some unaligned access warnings. This is also likely to
    fix non-descript issues on nv30/nv34 as a result of incorrect channel
    setup.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=96836
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 840b80ba6cc75089808b23a36213d9d088bc6b2d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Jul 12 11:57:07 2016 +1000

    drm/nouveau: check for supported chipset before booting fbdev off the hw
    
    commit 0e67bed2c765ff0fdaec62c963881f5416fe3692 upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa3e1c4de2815800a72b781840214b8f7e8e6d09
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jul 8 17:27:04 2016 -0400

    drm/radeon: support backlight control for UNIPHY3
    
    commit d3200be6c423afa1c34f7e39e9f6d04dd5b0af9d upstream.
    
    Same interface as other UNIPHY blocks
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49bec427a3d14044863e556366b8b5e5473c2f87
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jul 27 15:28:56 2016 -0400

    drm/radeon: fix firmware info version checks
    
    commit 3edc38a0facef45ee22af8afdce3737f421f36ab upstream.
    
    Some of the checks didn't handle frev 2 tables properly.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be89d2c2cf1d9eb147e02c16fafa3625ee1fb75f
Author: Lyude <cpaul@redhat.com>
Date:   Fri Jun 24 17:54:31 2016 -0400

    drm/radeon: Poll for both connect/disconnect on analog connectors
    
    commit 14ff8d48f2235295dfb3117693008e367b49cdb5 upstream.
    
    DRM_CONNECTOR_POLL_CONNECT only enables polling for connections, not
    disconnections. Because of this, we end up losing hotplug polling for
    analog connectors once they get connected.
    
    Easy way to reproduce:
     - Grab a machine with a radeon GPU and a VGA port
     - Plug a monitor into the VGA port, wait for it to update the connector
       from disconnected to connected
     - Disconnect the monitor on VGA, a hotplug event is never sent for the
       removal of the connector.
    
    Originally, only using DRM_CONNECTOR_POLL_CONNECT might have been a good
    idea since doing VGA polling can sometimes result in having to mess with
    the DAC voltages to figure out whether or not there's actually something
    there since VGA doesn't have HPD. Doing this would have the potential of
    showing visible artifacts on the screen every time we ran a poll while a
    VGA display was connected. Luckily, radeon_vga_detect() only resorts to
    this sort of polling if the poll is forced, and DRM's polling helper
    doesn't force it's polls.
    
    Additionally, this removes some assignments to connector->polled that
    weren't actually doing anything.
    
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32822ff3646ad9761e99ed7440006872ec15b290
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 1 12:58:36 2016 -0400

    drm/radeon: add a delay after ATPX dGPU power off
    
    commit d814b24fb74cb9797d70cb8053961447c5879a5c upstream.
    
    ATPX dGPU power control requires a 200ms delay between
    power off and on.  This should fix dGPU failures on
    resume from power off.
    
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac9a015a9094695e49136425b4c094e04283ed0f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jul 29 18:03:42 2016 -0400

    drm/amdgpu/gmc7: add missing mullins case
    
    commit 7f555c8e5a84b348c2b76f4ca78eae7222354c03 upstream.
    
    Looks like this got missed when we ported the code from radeon.
    
    Reviewed-by: Edward O'Callaghan <funfunctor@folklore1984.net>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 313ff6140ddc35b7de6f9c7173b1c0d00086023f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jul 27 15:31:59 2016 -0400

    drm/amdgpu: fix firmware info version checks
    
    commit a8a04c994d41a489eb0f2899893209e04e030153 upstream.
    
    Some of the checks didn't handle frev 2 tables properly.
    amdgpu doesn't support any tables pre-frev 2, so drop
    the checks.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 193697d8f727d6571df4653dd69f424ce8270ba3
Author: Lyude <cpaul@redhat.com>
Date:   Mon Jul 18 11:41:37 2016 -0400

    drm/amdgpu: Disable RPM helpers while reprobing connectors on resume
    
    commit 23a1a9e54e71593fe5657e883662995d181d2d6b upstream.
    
    Just about all of amdgpu's connector probing functions try to acquire
    runtime PM refs. If we try to do this in the context of
    amdgpu_resume_kms by calling drm_helper_hpd_irq_event(), we end up
    deadlocking the system.
    
    Since we're guaranteed to be holding the spinlock for RPM in
    amdgpu_resume_kms, and we already know the GPU is in working order, we
    need to prevent the RPM helpers from trying to run during the initial
    connector reprobe on resume.
    
    There's a couple of solutions I've explored for fixing this, but this
    one by far seems to be the simplest and most reliable (plus I'm pretty
    sure that's what disable_depth is there for anyway).
    
    Reproduction recipe:
      - Get any laptop dual GPUs using PRIME
      - Make sure runtime PM is enabled for amdgpu
      - Boot the machine
      - If the machine managed to boot without hanging, switch out of X to
        another VT. This should definitely cause X to hang infinitely.
    
    Changes since v1:
      - add appropriate #ifdef checks for CONFIG_PM. This is not very
        useful, but it appears some kernel test suites test compiling amdgpu
        with CONFIG_PM disabled, which results in this patch breaking the builds
        if we don't include this #ifdef
    
    Cc: Alex Deucher <alexdeucher@gmail.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e677ba0451260c9776cc9cbc12b20625f37e8bb
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jul 8 17:19:59 2016 -0400

    drm/amdgpu: support backlight control for UNIPHY3
    
    commit dba6c4fa26ccf47661be5b68dba87e746fa137d8 upstream.
    
    Same interface as other UNIPHY blocks
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 685e2865ce54f6a92f3098dfb8584fdcb4e82b5e
Author: Lyude <cpaul@redhat.com>
Date:   Fri Jun 24 17:54:32 2016 -0400

    drm/amdgpu: Poll for both connect/disconnect on analog connectors
    
    commit b636a1b3d624b49b23cc1be2f9f6bcbb89aca855 upstream.
    
    DRM_CONNECTOR_POLL_CONNECT only enables polling for connections, not
    disconnections. Because of this, we end up losing hotplug polling for
    analog connectors once they get connected.
    
    Easy way to reproduce:
     - Grab a machine with an AMD GPU and a VGA port
     - Plug a monitor into the VGA port, wait for it to update the connector
       from disconnected to connected
     - Disconnect the monitor on VGA, a hotplug event is never sent for the
       removal of the connector.
    
    Originally, only using DRM_CONNECTOR_POLL_CONNECT might have been a good
    idea since doing VGA polling can sometimes result in having to mess with
    the DAC voltages to figure out whether or not there's actually something
    there since VGA doesn't have HPD. Doing this would have the potential of
    showing visible artifacts on the screen every time we ran a poll while a
    VGA display was connected. Luckily, amdgpu_vga_detect() only resorts to
    this sort of polling if the poll is forced, and DRM's polling helper
    doesn't force it's polls.
    
    Additionally, this removes some assignments to connector->polled that
    weren't actually doing anything.
    
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f36af48fec79cbd0a9f3e1076713965728c82bc5
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 1 12:54:33 2016 -0400

    drm/amdgpu: add a delay after ATPX dGPU power off
    
    commit f81eb1a349d47694fe1e688336ca1b40ea3e248a upstream.
    
    ATPX dGPU power control requires a 200ms delay between
    power off and on.  This should fix dGPU failures on
    resume from power off.
    
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b8b0b660a4b599540b37f41d02e83a1e8476c5
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Tue Aug 2 14:07:12 2016 -0700

    w1:omap_hdq: fix regression
    
    commit ecfaf0c42fc4306b5ec4bf6be01b66f8fe9a9733 upstream.
    
    Commit e93762bbf681 ("w1: masters: omap_hdq: add support for 1-wire
    mode") added a statement to clear the hdq_irqstatus flags in
    hdq_read_byte().
    
    If the hdq reading process is scheduled slowly or interrupts are
    disabled for a while the hardware read activity might already be
    finished on entry of hdq_read_byte().  And hdq_isr() already has set the
    hdq_irqstatus to 0x6 (can be seen in debug mode) denoting that both, the
    TXCOMPLETE and RXCOMPLETE interrupts occurred in parallel.
    
    This means there is no need to wait and the hdq_read_byte() can just
    read the byte from the hdq controller.
    
    By resetting hdq_irqstatus to 0 the read process is forced to be always
    waiting again (because the if statement always succeeds) but the
    hardware will not issue another RXCOMPLETE interrupt.  This results in a
    false timeout.
    
    After such a situation the hdq bus hangs.
    
    Link: http://lkml.kernel.org/r/b724765f87ad276a69625bc19806c8c8844c4590.1469513669.git.hns@goldelico.com
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: Evgeniy Polyakov <zbr@ioremap.net>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6520eadab50ec5def9a41c3ae11598ff16485f93
Author: Paul Moore <paul@paul-moore.com>
Date:   Mon Jun 6 15:17:20 2016 -0400

    netlabel: add address family checks to netlbl_{sock,req}_delattr()
    
    commit 0e0e36774081534783aa8eeb9f6fbddf98d3c061 upstream.
    
    It seems risky to always rely on the caller to ensure the socket's
    address family is correct before passing it to the NetLabel kAPI,
    especially since we see at least one LSM which didn't. Add address
    family checks to the *_delattr() functions to help prevent future
    problems.
    
    Reported-by: Maninder Singh <maninder1.s@samsung.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16370bc775cc6e2b1bbfd1e5af63de70f67c0975
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Jun 9 17:22:56 2016 -0700

    soc: qcom: smp2p: Correct addressing of outgoing value
    
    commit 63af8e44eaa56ffe613628742a2642c4c2f1a029 upstream.
    
    The valid_entries index should not be incremented until after we have
    acquired the pointer to the value, or we will read and write data one
    item off.
    
    Fixes: 50e99641413e ("soc: qcom: smp2p: Qualcomm Shared Memory Point to Point")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89d98ca0367b687562fc8c23b0985e667ae5be9e
Author: Xing Zheng <zhengxing@rock-chips.com>
Date:   Thu Jun 30 10:18:59 2016 +0800

    clk: rockchip: fix incorrect rk3399 spdif-DPTX divider bits
    
    commit 3770821fa360525e6c726cd562a2438a0aa5d566 upstream.
    
    The CLKSEL_CON32 bit_0 is controlled for spdif_8ch, not spdif_rec_dptx,
    it should be bit_8, let's fix it.
    
    Fixes: 115510053e5e ("clk: rockchip: add clock controller for the RK3399")
    Reported-by: Chris Zhong <zyw@rock-chips.com>
    Tested-by: Chris Zhong <zyw@rock-chips.com>
    Signed-off-by: Xing Zheng <zhengxing@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5cee0cabb809617c5e275666f9e0fba184a20fd
Author: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Date:   Fri Jun 17 16:39:29 2016 +0200

    tpm_crb: fix address space of the return pointer in crb_map_res()
    
    commit f786b752098216fedb73ba2905c8cce12358534a upstream.
    
    When running make C=2 M=drivers/char/tpm/
    
      CHECK   drivers/char/tpm//tpm_crb.c
    drivers/char/tpm//tpm_crb.c:248:31: warning: incorrect type in return expression (different address spaces)
    drivers/char/tpm//tpm_crb.c:248:31:    expected void [noderef] <asn:2>*
    drivers/char/tpm//tpm_crb.c:248:31:    got void *
    
    Fixes: 1bd047be37d9 ("tpm_crb: Use devm_ioremap_resource")
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Tested-by: Stefan Berger <stefanb@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a7135a0ae559f4f4b2c7577c44075805fb71b4b
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Jul 15 06:36:44 2016 -0500

    cgroupns: Only allow creation of hierarchies in the initial cgroup namespace
    
    commit 726a4994b05ff5b6f83d64b5b43c3251217366ce upstream.
    
    Unprivileged users can't use hierarchies if they create them as they do not
    have privilieges to the root directory.
    
    Which means the only thing a hiearchy created by an unprivileged user
    is good for is expanding the number of cgroup links in every css_set,
    which is a DOS attack.
    
    We could allow hierarchies to be created in namespaces in the initial
    user namespace.  Unfortunately there is only a single namespace for
    the names of heirarchies, so that is likely to create more confusion
    than not.
    
    So do the simple thing and restrict hiearchy creation to the initial
    cgroup namespace.
    
    Fixes: a79a908fd2b0 ("cgroup: introduce cgroup namespaces")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3d800d6752b023ce89fb4ab5b6e1d3b7f1a27f0
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Jul 15 06:35:51 2016 -0500

    cgroupns: Close race between cgroup_post_fork and copy_cgroup_ns
    
    commit eedd0f4cbf5f3b81e82649832091e1d9d53f0709 upstream.
    
    In most code paths involving cgroup migration cgroup_threadgroup_rwsem
    is taken.  There are two exceptions:
    
    - remove_tasks_in_empty_cpuset calls cgroup_transfer_tasks
    - vhost_attach_cgroups_work calls cgroup_attach_task_all
    
    With cgroup_threadgroup_rwsem held it is guaranteed that cgroup_post_fork
    and copy_cgroup_ns will reference the same css_set from the process calling
    fork.
    
    Without such an interlock there process after fork could reference one
    css_set from it's new cgroup namespace and another css_set from
    task->cgroups, which semantically is nonsensical.
    
    Fixes: a79a908fd2b0 ("cgroup: introduce cgroup namespaces")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffdc59dda08cddf1b8402c33e7d1e9a75f0ea749
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Jul 15 06:35:24 2016 -0500

    cgroupns: Fix the locking in copy_cgroup_ns
    
    commit 7bd8830875bfa380c68f390efbad893293749324 upstream.
    
    If "clone(CLONE_NEWCGROUP...)" is called it results in a nice lockdep
    valid splat.
    
    In __cgroup_proc_write the lock ordering is:
         cgroup_mutex -- through cgroup_kn_lock_live
         cgroup_threadgroup_rwsem
    
    In copy_process the guts of clone the lock ordering is:
         cgroup_threadgroup_rwsem -- through threadgroup_change_begin
         cgroup_mutex -- through copy_namespaces -- copy_cgroup_ns
    
    lockdep reports some a different call chains for the first ordering of
    cgroup_mutex and cgroup_threadgroup_rwsem but it is harder to trace.
    This is most definitely deadlock potential under the right
    circumstances.
    
    Fix this by by skipping the cgroup_mutex and making the locking in
    copy_cgroup_ns mirror the locking in cgroup_post_fork which also runs
    during fork under the cgroup_threadgroup_rwsem.
    
    Fixes: a79a908fd2b0 ("cgroup: introduce cgroup namespaces")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc7db37cf45271a0ccf2e71a5417d18f9be4672d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Aug 3 11:07:44 2016 +0200

    Revert "ARM: aspeed: adapt defconfigs for new CONFIG_PRINTK_TIME"
    
    commit 7a376ac11fc2109dfd86442ff79982ecf16dcd6d upstream.
    
    The patch that this was preparing for made it into neither v4.7 nor
    v4.8, so we should back this out as well to avoid the opposite
    warning:
    
      arch/arm/configs/aspeed_g5_defconfig:62:warning: symbol value '1' invalid for PRINTK_TIME
      arch/arm/configs/aspeed_g4_defconfig:61:warning: symbol value '1' invalid for PRINTK_TIME
    
    Sorry for not catching this earlier.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 0ef659a30055 ("ARM: aspeed: adapt defconfigs for new CONFIG_PRINTK_TIME")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaba47cf19c6e9c202cd18edb6b9e67f0a912bf4
Author: Ralf Ramsauer <ralf@ramses-pyramidenbau.de>
Date:   Mon Jul 18 11:46:48 2016 +0200

    ARM: tegra: fix erroneous address in dts
    
    commit b5c86b7496d74f6e454bcab5166efa023e1f0459 upstream.
    
    c90bb7b enabled the high speed UARTs of the Jetson TK1. Due to a merge
    quirk, wrong addresses were introduced. Fix it and use the correct
    addresses.
    
    Thierry let me know, that there is another patch (b5896f67ab3c in
    linux-next) in preparation which removes all the '0,' prefixes of unit
    addresses on Tegra124 and is planned to go upstream in 4.8, so
    this patch will get reverted then.
    
    But for the moment, this patch is necessary to fix current misbehaviour.
    
    Fixes: c90bb7b9b9 ("ARM: tegra: Add high speed UARTs to Jetson TK1 device tree")
    Signed-off-by: Ralf Ramsauer <ralf@ramses-pyramidenbau.de>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Cc: linux-tegra@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8a66f550140be91c78376e8ef2283fede01c024
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Wed Aug 10 14:02:17 2016 +0200

    ARM: dts: realview: Fix PBX-A9 cache description
    
    commit a20303725ec31ea0fcf498f1885b1d4245a4ee56 upstream.
    
    Clearly QEMU is very permissive in how its PL310 model may be set up,
    but the real hardware turns out to be far more particular about things
    actually being correct. Fix up the DT description so that the real
    thing actually boots:
    
    - The arm,data-latency and arm,tag-latency properties need 3 cells to
      be valid, otherwise we end up retaining the default 8-cycle latencies
      which leads pretty quickly to lockup.
    - The arm,dirty-latency property is only relevant to L210/L220, so get
      rid of it.
    - The cache geometry override also leads to lockup and/or general
      misbehaviour. Irritatingly, the manual doesn't state the actual PL310
      configuration, but based on the boardfile code and poking registers
      from the Boot Monitor, it would seem to be 8 sets of 16KB ways.
    
    With that, we can successfully boot to enjoy the fun of mismatched FPUs...
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af80b19e9c6bedbb01fc7c7a566c5eb3e96bbd47
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Jun 4 12:58:39 2016 +0200

    ARM: dts: sunxi: Add a startup delay for fixed regulator enabled phys
    
    commit fc51b632c7b047c25807023b76f3877aed19c770 upstream.
    
    It seems that recent kernels have a shorter timeout when scanning for
    ethernet phys causing us to hit a timeout on boards where the phy's
    regulator gets enabled just before scanning, which leads to non working
    ethernet.
    
    A 10ms startup delay seems to be enough to fix it, this commit adds a
    20ms startup delay just to be safe.
    
    This has been tested on a sun4i-a10-a1000 and sun5i-a10s-wobo-i5 board,
    both of which have non-working ethernet on recent kernels without this
    fix.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c5fabe07a4b5c667929ab554b34f365fad10c11
Author: Gregory CLEMENT <gregory.clement@bootlin.com>
Date:   Fri Apr 15 11:15:18 2016 +0100

    ARM: 8561/3: dma-mapping: Don't use outer_flush_range when the L2C is coherent
    
    commit f12708965069410691e47d1d216ec7ad1516bfd2 upstream.
    
    When a L2 cache controller is used in a system that provides hardware
    coherency, the entire outer cache operations are useless, and can be
    skipped.  Moreover, on some systems, it is harmful as it causes
    deadlocks between the Marvell coherency mechanism, the Marvell PCIe
    controller and the Cortex-A9.
    
    In the current kernel implementation, the outer cache flush range
    operation is triggered by the dma_alloc function.
    This operation can be take place during runtime and in some
    circumstances may lead to the PCIe/PL310 deadlock on Armada 375/38x
    SoCs.
    
    This patch extends the __dma_clear_buffer() function to receive a
    boolean argument related to the coherency of the system. The same
    things is done for the calling functions.
    
    Reported-by: Nadav Haklai <nadavh@marvell.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9b4eac04f56b1a11a859c1eddb52b71b3125a17
Author: Paul Moore <paul@paul-moore.com>
Date:   Tue Jul 19 17:42:57 2016 -0400

    audit: fix a double fetch in audit_log_single_execve_arg()
    
    commit 43761473c254b45883a64441dd0bc85a42f3645c upstream.
    
    There is a double fetch problem in audit_log_single_execve_arg()
    where we first check the execve(2) argumnets for any "bad" characters
    which would require hex encoding and then re-fetch the arguments for
    logging in the audit record[1].  Of course this leaves a window of
    opportunity for an unsavory application to munge with the data.
    
    This patch reworks things by only fetching the argument data once[2]
    into a buffer where it is scanned and logged into the audit
    records(s).  In addition to fixing the double fetch, this patch
    improves on the original code in a few other ways: better handling
    of large arguments which require encoding, stricter record length
    checking, and some performance improvements (completely unverified,
    but we got rid of some strlen() calls, that's got to be a good
    thing).
    
    As part of the development of this patch, I've also created a basic
    regression test for the audit-testsuite, the test can be tracked on
    GitHub at the following link:
    
     * https://github.com/linux-audit/audit-testsuite/issues/25
    
    [1] If you pay careful attention, there is actually a triple fetch
    problem due to a strnlen_user() call at the top of the function.
    
    [2] This is a tiny white lie, we do make a call to strnlen_user()
    prior to fetching the argument data.  I don't like it, but due to the
    way the audit record is structured we really have no choice unless we
    copy the entire argument at once (which would require a rather
    wasteful allocation).  The good news is that with this patch the
    kernel no longer relies on this strnlen_user() value for anything
    beyond recording it in the log, we also update it with a trustworthy
    value whenever possible.
    
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1c8f3c6065dd6aba5c3c9abbeac7919699d8705
Author: Joerg Roedel <jroedel@suse.de>
Date:   Tue Jul 26 15:18:54 2016 +0200

    iommu/amd: Update Alias-DTE in update_device_table()
    
    commit 3254de6bf74fe94c197c9f819fe62a3a3c36f073 upstream.
    
    Not doing so might cause IO-Page-Faults when a device uses
    an alias request-id and the alias-dte is left in a lower
    page-mode which does not cover the address allocated from
    the iova-allocator.
    
    Fixes: 492667dacc0a ('x86/amd-iommu: Remove amd_iommu_pd_table')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c62da3de437735d362b0a02d7771b9d7d15dfc9
Author: Joerg Roedel <jroedel@suse.de>
Date:   Wed Jul 13 12:35:24 2016 +0200

    iommu/amd: Init unity mappings only for dma_ops domains
    
    commit b548e786ce47017107765bbeb0f100202525ea83 upstream.
    
    The default domain for a device might also be
    identity-mapped. In this case the kernel would crash when
    unity mappings are defined for the device. Fix that by
    making sure the domain is a dma_ops domain.
    
    Fixes: 0bb6e243d7fb ('iommu/amd: Support IOMMU_DOMAIN_DMA type allocation')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8deebd2dd9dcbbb3662a0c9ffa9194326f2c77e8
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Jul 7 15:57:04 2016 +0200

    iommu/amd: Handle IOMMU_DOMAIN_DMA in ops->domain_free call-back
    
    commit cda7005ba2cbd0744fea343dd5b2aa637eba5b9e upstream.
    
    This domain type is not yet handled in the
    iommu_ops->domain_free() call-back. Fix that.
    
    Fixes: 0bb6e243d7fb ('iommu/amd: Support IOMMU_DOMAIN_DMA type allocation')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bc03c3c9e04ddaa01fd7eda29f5d70bef80a825
Author: Will Deacon <will@kernel.org>
Date:   Thu Jun 16 18:21:19 2016 +0100

    iommu/io-pgtable-arm: Fix iova_to_phys for block entries
    
    commit 7c6d90e2bb1a98b86d73b9e8ab4d97ed5507e37c upstream.
    
    The implementation of iova_to_phys for the long-descriptor ARM
    io-pgtable code always masks with the granule size when inserting the
    low virtual address bits into the physical address determined from the
    page tables. In cases where the leaf entry is found before the final
    level of table (i.e. due to a block mapping), this results in rounding
    down to the bottom page of the block mapping. Consequently, the physical
    address range batching in the vfio_unmap_unpin is defeated and we end
    up taking the long way home.
    
    This patch fixes the problem by masking the virtual address with the
    appropriate mask for the level at which the leaf descriptor is located.
    The short-descriptor code already gets this right, so no change is
    needed there.
    
    Reported-by: Robin Murphy <robin.murphy@arm.com>
    Tested-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 781d5732923215086db8ed988e6e7fdb5824c5c6
Author: Wei Yang <richard.weiyang@gmail.com>
Date:   Wed Jul 13 13:53:21 2016 +0000

    iommu/vt-d: Return error code in domain_context_mapping_one()
    
    commit 5c365d18a73d3979db37006eaacefc0008869c0f upstream.
    
    In 'commit <55d940430ab9> ("iommu/vt-d: Get rid of domain->iommu_lock")',
    the error handling path is changed a little, which makes the function
    always return 0.
    
    This path fixes this.
    
    Signed-off-by: Wei Yang <richard.weiyang@gmail.com>
    Fixes: 55d940430ab9 ('iommu/vt-d: Get rid of domain->iommu_lock')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e8d0a429dade5184d894970ef74f33d2d6e62f0
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri May 20 15:48:21 2016 +0200

    iommu/exynos: Suppress unbinding to prevent system failure
    
    commit b54b874fbaf5e024723e50dfb035a9916d6752b4 upstream.
    
    Removal of IOMMU driver cannot be done reliably, so Exynos IOMMU driver
    doesn't support this operation. It is essential for system operation, so
    it makes sense to prevent unbinding by disabling bind/unbind sysfs
    feature for SYSMMU controller driver to avoid kernel ops or trashing
    memory caused by such operation.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01e5c425b0de72fafaa8f803013fa41a0011bb0a
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Mar 21 04:20:53 2016 -0700

    unicore32: mm: Add missing parameter to arch_vma_access_permitted
    
    commit 783011b13095430262333fd64e17666954064664 upstream.
    
    unicore32 fails to compile with the following errors.
    
    mm/memory.c: In function ‘__handle_mm_fault’:
    mm/memory.c:3381: error:
            too many arguments to function ‘arch_vma_access_permitted’
    mm/gup.c: In function ‘check_vma_flags’:
    mm/gup.c:456: error:
            too many arguments to function ‘arch_vma_access_permitted’
    mm/gup.c: In function ‘vma_permits_fault’:
    mm/gup.c:640: error:
            too many arguments to function ‘arch_vma_access_permitted’
    
    Fixes: d61172b4b695b ("mm/core, x86/mm/pkeys: Differentiate instruction fetches")
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Guan Xuetao <gxt@mprc.pku.edu.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 131d0213cf4e648d9eb8dd23ec4e618cbfd0862a
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Jul 14 15:14:02 2016 -0400

    pNFS: Fix LAYOUTGET handling of NFS4ERR_BAD_STATEID and NFS4ERR_EXPIRED
    
    commit f7db0b283868411dc6bc8a223fd032b211d2d91f upstream.
    
    We want to recover the open stateid if there is no layout stateid
    and/or the stateid argument matches an open stateid.
    Otherwise throw out the existing layout and recover from scratch, as
    the layout stateid is bad.
    
    Fixes: 183d9e7b112aa ("pnfs: rework LAYOUTGET retry handling")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aff4bf9121b952fd4afe4cfd03b7f697b815622
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Jul 14 14:28:31 2016 -0400

    pNFS: Handle NFS4ERR_RECALLCONFLICT correctly in LAYOUTGET
    
    commit 66b53f325876703b7ab815c482cd104609f8772c upstream.
    
    Instead of giving up altogether and falling back to doing I/O
    through the MDS, which may make the situation worse, wait for
    2 lease periods for the callback to resolve itself, and then
    try destroying the existing layout.
    
    Only if this was an attempt at getting a first layout, do we
    give up altogether, as the server is clearly crazy.
    
    Fixes: 183d9e7b112aa ("pnfs: rework LAYOUTGET retry handling")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abea02370df17f8c9ce705820782ef7ddedde82a
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Jul 14 18:34:12 2016 -0400

    pNFS: Fix post-layoutget error handling in pnfs_update_layout()
    
    commit 56b38a1f7c781519eef09c1668a3c97ea911f86b upstream.
    
    The non-retry error path is currently broken and ends up releasing the
    reference to the layout twice. It also can end up clearing the
    NFS_LAYOUT_FIRST_LAYOUTGET flag twice, causing a race.
    
    In addition, the retry path will fail to decrement the plh_outstanding
    counter.
    
    Fixes: 183d9e7b112aa ("pnfs: rework LAYOUTGET retry handling")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1002a32d62ab9b972e7f5cee884c1866a5906b93
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu Jul 14 18:46:24 2016 -0400

    pNFS: Separate handling of NFS4ERR_LAYOUTTRYLATER and RECALLCONFLICT
    
    commit e85d7ee42003314652ab3ae2c60e3b8cd793b65f upstream.
    
    They are not the same error, and need to be handled differently.
    
    Fixes: 183d9e7b112aa ("pnfs: rework LAYOUTGET retry handling")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5a116bed74a617ef8e57e2d0678ce9c4d53f4a9
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Aug 11 10:37:39 2016 -0400

    nfsd: don't return an unhashed lock stateid after taking mutex
    
    commit dd257933fa4b9fea66a1195f8a15111029810abc upstream.
    
    nfsd4_lock will take the st_mutex before working with the stateid it
    gets, but between the time when we drop the cl_lock and take the mutex,
    the stateid could become unhashed (a'la FREE_STATEID). If that happens
    the lock stateid returned to the client will be forgotten.
    
    Fix this by first moving the st_mutex acquisition into
    lookup_or_create_lock_state. Then, have it check to see if the lock
    stateid is still hashed after taking the mutex. If it's not, then put
    the stateid and try the find/create again.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Tested-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfa21f974d6c7ff2d9157d5c423d5b237d5e2c66
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Aug 11 10:37:30 2016 -0400

    nfsd: Fix race between FREE_STATEID and LOCK
    
    commit 42691398be08bd1fe99326911a0aa31f2c041d53 upstream.
    
    When running LTP's nfslock01 test, the Linux client can send a LOCK
    and a FREE_STATEID request at the same time. The outcome is:
    
    Frame 324    R OPEN stateid [2,O]
    
    Frame 115004 C LOCK lockowner_is_new stateid [2,O] offset 672000 len 64
    Frame 115008 R LOCK stateid [1,L]
    Frame 115012 C WRITE stateid [0,L] offset 672000 len 64
    Frame 115016 R WRITE NFS4_OK
    Frame 115019 C LOCKU stateid [1,L] offset 672000 len 64
    Frame 115022 R LOCKU NFS4_OK
    Frame 115025 C FREE_STATEID stateid [2,L]
    Frame 115026 C LOCK lockowner_is_new stateid [2,O] offset 672128 len 64
    Frame 115029 R FREE_STATEID NFS4_OK
    Frame 115030 R LOCK stateid [3,L]
    Frame 115034 C WRITE stateid [0,L] offset 672128 len 64
    Frame 115038 R WRITE NFS4ERR_BAD_STATEID
    
    In other words, the server returns stateid L in a successful LOCK
    reply, but it has already released it. Subsequent uses of stateid L
    fail.
    
    To address this, protect the generation check in nfsd4_free_stateid
    with the st_mutex. This should guarantee that only one of two
    outcomes occurs: either LOCK returns a fresh valid stateid, or
    FREE_STATEID returns NFS4ERR_LOCKS_HELD.
    
    Reported-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Fix-suggested-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e3264501800314342dcdf0f376cb5150731d8c6
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Mon Jul 18 10:41:57 2016 -0400

    nfs: don't create zero-length requests
    
    commit 149a4fddd0a72d526abbeac0c8deaab03559836a upstream.
    
    NFS doesn't expect requests with wb_bytes set to zero and may make
    unexpected decisions about how to handle that request at the page IO layer.
    Skip request creation if we won't have any wb_bytes in the request.
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Reviewed-by: Weston Andros Adamson <dros@primarydata.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d32aaa89067225d4202a362dc201280e2514952
Author: Chris Mason <clm@fb.com>
Date:   Tue Jul 19 05:52:36 2016 -0700

    Btrfs: fix delalloc accounting after copy_from_user faults
    
    commit 8b8b08cbfb9021af4b54b4175fc4c51d655aac8c upstream.
    
    Commit 56244ef151c3cd11 was almost but not quite enough to fix the
    reservation math after btrfs_copy_from_user returned partial copies.
    
    Some users are still seeing warnings in btrfs_destroy_inode, and with a
    long enough test run I'm able to trigger them as well.
    
    This patch fixes the accounting math again, bringing it much closer to
    the way it was before the sectorsize conversion Chandan did.  The
    problem is accounting for the offset into the page/sector when we do a
    partial copy.  This one just uses the dirty_sectors variable which
    should already be updated properly.
    
    Signed-off-by: Chris Mason <clm@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9966750ff6c8641d6451f8b508815c4ba509f71
Author: Michael Neuling <mikey@neuling.org>
Date:   Wed Jul 6 14:58:06 2016 +1000

    powerpc/tm: Fix stack pointer corruption in __tm_recheckpoint()
    
    commit 6bcb80143e792becfd2b9cc6a339ce523e4e2219 upstream.
    
    At the start of __tm_recheckpoint() we save the kernel stack pointer
    (r1) in SPRG SCRATCH0 (SPRG2) so that we can restore it after the
    trecheckpoint.
    
    Unfortunately, the same SPRG is used in the SLB miss handler.  If an
    SLB miss is taken between the save and restore of r1 to the SPRG, the
    SPRG is changed and hence r1 is also corrupted.  We can end up with
    the following crash when we start using r1 again after the restore
    from the SPRG:
    
      Oops: Bad kernel stack pointer, sig: 6 [#1]
      SMP NR_CPUS=2048 NUMA pSeries
      CPU: 658 PID: 143777 Comm: htm_demo Tainted: G            EL   X 4.4.13-0-default #1
      task: c0000b56993a7810 ti: c00000000cfec000 task.ti: c0000b56993bc000
      NIP: c00000000004f188 LR: 00000000100040b8 CTR: 0000000010002570
      REGS: c00000000cfefd40 TRAP: 0300   Tainted: G            EL   X  (4.4.13-0-default)
      MSR: 8000000300001033 <SF,ME,IR,DR,RI,LE>  CR: 02000424  XER: 20000000
      CFAR: c000000000008468 DAR: 00003ffd84e66880 DSISR: 40000000 SOFTE: 0
      PACATMSCRATCH: 00003ffbc865e680
      GPR00: fffffffcfabc4268 00003ffd84e667a0 00000000100d8c38 000000030544bb80
      GPR04: 0000000000000002 00000000100cf200 0000000000000449 00000000100cf100
      GPR08: 000000000000c350 0000000000002569 0000000000002569 00000000100d6c30
      GPR12: 00000000100d6c28 c00000000e6a6b00 00003ffd84660000 0000000000000000
      GPR16: 0000000000000003 0000000000000449 0000000010002570 0000010009684f20
      GPR20: 0000000000800000 00003ffd84e5f110 00003ffd84e5f7a0 00000000100d0f40
      GPR24: 0000000000000000 0000000000000000 0000000000000000 00003ffff0673f50
      GPR28: 00003ffd84e5e960 00000000003d0f00 00003ffd84e667a0 00003ffd84e5e680
      NIP [c00000000004f188] restore_gprs+0x110/0x17c
      LR [00000000100040b8] 0x100040b8
      Call Trace:
      Instruction dump:
      f8a1fff0 e8e700a8 38a00000 7ca10164 e8a1fff8 e821fff0 7c0007dd 7c421378
      7db142a6 7c3242a6 38800002 7c810164 <e9c100e0> e9e100e8 ea0100f0 ea2100f8
    
    We hit this on large memory machines (> 2TB) but it can also be hit on
    smaller machines when 1TB segments are disabled.
    
    To hit this, you also need to be virtualised to ensure SLBs are
    periodically removed by the hypervisor.
    
    This patches moves the saving of r1 to the SPRG to the region where we
    are guaranteed not to take any further SLB misses.
    
    Fixes: 98ae22e15b43 ("powerpc: Add helper functions for transactional memory context switching")
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Acked-by: Cyril Bur <cyrilbur@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abf90b29f316d6974033f09aee5b7460103a3805
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 11 11:58:15 2016 +0100

    MIPS: KVM: Propagate kseg0/mapped tlb fault errors
    
    commit 9b731bcfdec4c159ad2e4312e25d69221709b96a upstream.
    
    Propagate errors from kvm_mips_handle_kseg0_tlb_fault() and
    kvm_mips_handle_mapped_seg_tlb_fault(), usually triggering an internal
    error since they normally indicate the guest accessed bad physical
    memory or the commpage in an unexpected way.
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Fixes: e685c689f3a8 ("KVM/MIPS32: Privileged instruction/target branch emulation.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Cc: <stable@vger.kernel.org> # 3.10.x-
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v4.7]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef1a4f6dd68b90e73b4c92ffc862bbc57f78c4e3
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 11 11:58:14 2016 +0100

    MIPS: KVM: Fix gfn range check in kseg0 tlb faults
    
    commit 0741f52d1b980dbeb290afe67d88fc2928edd8ab upstream.
    
    Two consecutive gfns are loaded into host TLB, so ensure the range check
    isn't off by one if guest_pmap_npages is odd.
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Cc: <stable@vger.kernel.org> # 3.10.x-
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v4.7]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 895ffb7bccc00187f1d67580798ddeba90ea7fca
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 11 11:58:13 2016 +0100

    MIPS: KVM: Add missing gfn range check
    
    commit 8985d50382359e5bf118fdbefc859d0dbf6cebc7 upstream.
    
    kvm_mips_handle_mapped_seg_tlb_fault() calculates the guest frame number
    based on the guest TLB EntryLo values, however it is not range checked
    to ensure it lies within the guest_pmap. If the physical memory the
    guest refers to is out of range then dump the guest TLB and emit an
    internal error.
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Cc: <stable@vger.kernel.org> # 3.10.x-
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v4.7]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ef8db5daac7d80efbcb588cfdb8abf3cf1f7291
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Aug 11 11:58:12 2016 +0100

    MIPS: KVM: Fix mapped fault broken commpage handling
    
    commit c604cffa93478f8888bec62b23d6073dad03d43a upstream.
    
    kvm_mips_handle_mapped_seg_tlb_fault() appears to map the guest page at
    virtual address 0 to PFN 0 if the guest has created its own mapping
    there. The intention is unclear, but it may have been an attempt to
    protect the zero page from being mapped to anything but the comm page in
    code paths you wouldn't expect from genuine commpage accesses (guest
    kernel mode cache instructions on that address, hitting trapping
    instructions when executing from that address with a coincidental TLB
    eviction during the KVM handling, and guest user mode accesses to that
    address).
    
    Fix this to check for mappings exactly at KVM_GUEST_COMMPAGE_ADDR (it
    may not be at address 0 since commit 42aa12e74e91 ("MIPS: KVM: Move
    commpage so 0x0 is unmapped")), and set the corresponding EntryLo to be
    interpreted as 0 (invalid).
    
    Fixes: 858dd5d45733 ("KVM/MIPS32: MMU/TLB operations for the Guest.")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Cc: <stable@vger.kernel.org> # 3.10.x-
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    [james.hogan@imgtec.com: Backport to v4.7]
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7ee54ff5b58d81f530989cdd1f639065bae7792
Author: David Howells <dhowells@redhat.com>
Date:   Wed Aug 3 17:57:39 2016 +0100

    cachefiles: Fix race between inactivating and culling a cache object
    
    commit db20a8925bc420eed033c5d91ff6afa74465e521 upstream.
    
    There's a race between cachefiles_mark_object_inactive() and
    cachefiles_cull():
    
     (1) cachefiles_cull() can't delete a backing file until the cache object
         is marked inactive, but as soon as that's the case it's fair game.
    
     (2) cachefiles_mark_object_inactive() marks the object as being inactive
         and *only then* reads the i_blocks on the backing inode - but
         cachefiles_cull() might've managed to delete it by this point.
    
    Fix this by making sure cachefiles_mark_object_inactive() gets any data it
    needs from the backing inode before deactivating the object.
    
    Without this, the following oops may occur:
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000098
    IP: [<ffffffffa06c5cc1>] cachefiles_mark_object_inactive+0x61/0xb0 [cachefiles]
    ...
    CPU: 11 PID: 527 Comm: kworker/u64:4 Tainted: G          I    ------------   3.10.0-470.el7.x86_64 #1
    Hardware name: Hewlett-Packard HP Z600 Workstation/0B54h, BIOS 786G4 v03.19 03/11/2011
    Workqueue: fscache_object fscache_object_work_func [fscache]
    task: ffff880035edaf10 ti: ffff8800b77c0000 task.ti: ffff8800b77c0000
    RIP: 0010:[<ffffffffa06c5cc1>] cachefiles_mark_object_inactive+0x61/0xb0 [cachefiles]
    RSP: 0018:ffff8800b77c3d70  EFLAGS: 00010246
    RAX: 0000000000000000 RBX: ffff8800bf6cc400 RCX: 0000000000000034
    RDX: 0000000000000000 RSI: ffff880090ffc710 RDI: ffff8800bf761ef8
    RBP: ffff8800b77c3d88 R08: 2000000000000000 R09: 0090ffc710000000
    R10: ff51005d2ff1c400 R11: 0000000000000000 R12: ffff880090ffc600
    R13: ffff8800bf6cc520 R14: ffff8800bf6cc400 R15: ffff8800bf6cc498
    FS:  0000000000000000(0000) GS:ffff8800bb8c0000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    CR2: 0000000000000098 CR3: 00000000019ba000 CR4: 00000000000007e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Stack:
     ffff880090ffc600 ffff8800bf6cc400 ffff8800867df140 ffff8800b77c3db0
     ffffffffa06c48cb ffff880090ffc600 ffff880090ffc180 ffff880090ffc658
     ffff8800b77c3df0 ffffffffa085d846 ffff8800a96b8150 ffff880090ffc600
    Call Trace:
     [<ffffffffa06c48cb>] cachefiles_drop_object+0x6b/0xf0 [cachefiles]
     [<ffffffffa085d846>] fscache_drop_object+0xd6/0x1e0 [fscache]
     [<ffffffffa085d615>] fscache_object_work_func+0xa5/0x200 [fscache]
     [<ffffffff810a605b>] process_one_work+0x17b/0x470
     [<ffffffff810a6e96>] worker_thread+0x126/0x410
     [<ffffffff810a6d70>] ? rescuer_thread+0x460/0x460
     [<ffffffff810ae64f>] kthread+0xcf/0xe0
     [<ffffffff810ae580>] ? kthread_create_on_node+0x140/0x140
     [<ffffffff81695418>] ret_from_fork+0x58/0x90
     [<ffffffff810ae580>] ? kthread_create_on_node+0x140/0x140
    
    The oopsing code shows:
    
            callq  0xffffffff810af6a0 <wake_up_bit>
            mov    0xf8(%r12),%rax
            mov    0x30(%rax),%rax
            mov    0x98(%rax),%rax   <---- oops here
            lock add %rax,0x130(%rbx)
    
    where this is:
    
            d_backing_inode(object->dentry)->i_blocks
    
    Fixes: a5b3a80b899bda0f456f1246c4c5a1191ea01519 (CacheFiles: Provide read-and-reset release counters for cachefilesd)
    Reported-by: Jianhong Yin <jiyin@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Reviewed-by: Steve Dickson <steved@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97df6634b27bf3650626c6024097898b31c19e84
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jun 13 10:10:51 2016 -0400

    random: print a warning for the first ten uninitialized random users
    
    commit 9b4d008787f864f17d008c9c15bbe8a0f7e2fc24 upstream.
    
    Since systemd is consistently using /dev/urandom before it is
    initialized, we can't see the other potentially dangerous users of
    /dev/urandom immediately after boot.  So print the first ten such
    complaints instead.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8ed6956a138330b17dd8c581cb6c827f3c51909
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Jun 12 18:11:51 2016 -0400

    random: initialize the non-blocking pool via add_hwgenerator_randomness()
    
    commit 3371f3da08cff4b75c1f2dce742d460539d6566d upstream.
    
    If we have a hardware RNG and are using the in-kernel rngd, we should
    use this to initialize the non-blocking pool so that getrandom(2)
    doesn't block unnecessarily.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad6108d451dd6a5adda492dbf3983cdcfc1b0081
Author: Eric Biggers <ebiggers3@gmail.com>
Date:   Wed May 4 21:08:39 2016 -0400

    random: properly align get_random_int_hash
    
    commit b1132deac01c2332d234fa821a70022796b79182 upstream.
    
    get_random_long() reads from the get_random_int_hash array using an
    unsigned long pointer.  For this code to be guaranteed correct on all
    architectures, the array must be aligned to an unsigned long boundary.
    
    Signed-off-by: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 107fc0ad657987e2ebb1aff11d8955d8076abde6
Author: Stephan Mueller <smueller@chronox.de>
Date:   Mon May 2 02:14:34 2016 -0400

    random: add interrupt callback to VMBus IRQ handler
    
    commit 4b44f2d18a330565227a7348844493c59366171e upstream.
    
    The Hyper-V Linux Integration Services use the VMBus implementation for
    communication with the Hypervisor. VMBus registers its own interrupt
    handler that completely bypasses the common Linux interrupt handling.
    This implies that the interrupt entropy collector is not triggered.
    
    This patch adds the interrupt entropy collection callback into the VMBus
    interrupt handler function.
    
    Signed-off-by: Stephan Mueller <stephan.mueller@atsec.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905e4841d9830fff4168d538c94148607100669d
Author: Pavel Shilovsky <pshilovsky@samba.org>
Date:   Sun Jul 24 10:37:38 2016 +0300

    CIFS: Fix a possible invalid memory access in smb2_query_symlink()
    
    commit 7893242e2465aea6f2cbc2639da8fa5ce96e8cc2 upstream.
    
    During following a symbolic link we received err_buf from SMB2_open().
    While the validity of SMB2 error response is checked previously
    in smb2_check_message() a symbolic link payload is not checked at all.
    Fix it by adding such checks.
    
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c341cdf5bf40e630d4f1fb01fdf5c8ccdf769f8d
Author: Rabin Vincent <rabinv@axis.com>
Date:   Tue Jul 19 09:26:21 2016 +0200

    cifs: fix crash due to race in hmac(md5) handling
    
    commit bd975d1eead2558b76e1079e861eacf1f678b73b upstream.
    
    The secmech hmac(md5) structures are present in the TCP_Server_Info
    struct and can be shared among multiple CIFS sessions.  However, the
    server mutex is not currently held when these structures are allocated
    and used, which can lead to a kernel crashes, as in the scenario below:
    
    mount.cifs(8) #1                                mount.cifs(8) #2
    
    Is secmech.sdeschmaccmd5 allocated?
    // false
    
                                                    Is secmech.sdeschmaccmd5 allocated?
                                                    // false
    
    secmech.hmacmd = crypto_alloc_shash..
    secmech.sdeschmaccmd5 = kzalloc..
    sdeschmaccmd5->shash.tfm = &secmec.hmacmd;
    
                                                    secmech.sdeschmaccmd5 = kzalloc
                                                    // sdeschmaccmd5->shash.tfm
                                                    // not yet assigned
    
    crypto_shash_update()
     deref NULL sdeschmaccmd5->shash.tfm
    
     Unable to handle kernel paging request at virtual address 00000030
     epc   : 8027ba34 crypto_shash_update+0x38/0x158
     ra    : 8020f2e8 setup_ntlmv2_rsp+0x4bc/0xa84
     Call Trace:
      crypto_shash_update+0x38/0x158
      setup_ntlmv2_rsp+0x4bc/0xa84
      build_ntlmssp_auth_blob+0xbc/0x34c
      sess_auth_rawntlmssp_authenticate+0xac/0x248
      CIFS_SessSetup+0xf0/0x178
      cifs_setup_session+0x4c/0x84
      cifs_get_smb_ses+0x2c8/0x314
      cifs_mount+0x38c/0x76c
      cifs_do_mount+0x98/0x440
      mount_fs+0x20/0xc0
      vfs_kern_mount+0x58/0x138
      do_mount+0x1e8/0xccc
      SyS_mount+0x88/0xd4
      syscall_common+0x30/0x54
    
    Fix this by locking the srv_mutex around the code which uses these
    hmac(md5) structures.  All the other secmech algos already have similar
    locking.
    
    Fixes: 95dc8dd14e2e84cc ("Limit allocation of crypto mechanisms to dialect which requires")
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Acked-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3abfd2c3997b64600ab2bb116effca4978105742
Author: Rabin Vincent <rabinv@axis.com>
Date:   Tue Jul 19 09:25:45 2016 +0200

    cifs: unbreak TCP session reuse
    
    commit b782fcc1cbeb7e336c0ed1f00004b2208f48ffe0 upstream.
    
    adfeb3e0 ("cifs: Make echo interval tunable") added a comparison of
    vol->echo_interval to server->echo_interval as a criterium to
    match_server(), but:
    
     (1) A default value is set for server->echo_interval but not for
     vol->echo_interval, meaning these can never match if the echo_interval
     option is not specified.
    
     (2) vol->echo_interval is in seconds but server->echo_interval is in
     jiffies, meaning these can never match even if the echo_interval option
     is specified.
    
    This broke TCP session reuse since match_server() can never return 1.
    Fix it.
    
    Fixes: adfeb3e0 ("cifs: Make echo interval tunable")
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Acked-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7312ee64546213b5d17fd527fadc673b9fe9c566
Author: Sachin Prabhu <sprabhu@redhat.com>
Date:   Thu Jul 7 21:28:27 2016 +0100

    cifs: Check for existing directory when opening file with O_CREAT
    
    commit 8d9535b6efd86e6c07da59f97e68f44efb7fe080 upstream.
    
    When opening a file with O_CREAT flag, check to see if the file opened
    is an existing directory.
    
    This prevents the directory from being opened which subsequently causes
    a crash when the close function for directories cifs_closedir() is called
    which frees up the file->private_data memory while the file is still
    listed on the open file list for the tcon.
    
    Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Reported-by: Xiaoli Feng <xifeng@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c02304bf2fb2c00f481296d2e2ee1fee008343a
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Wed May 25 19:59:09 2016 +0200

    fs/cifs: make share unaccessible at root level mountable
    
    commit a6b5058fafdf508904bbf16c29b24042cef3c496 upstream.
    
    if, when mounting //HOST/share/sub/dir/foo we can query /sub/dir/foo but
    not any of the path components above:
    
    - store the /sub/dir/foo prefix in the cifs super_block info
    - in the superblock, set root dentry to the subpath dentry (instead of
      the share root)
    - set a flag in the superblock to remember it
    - use prefixpath when building path from a dentry
    
    fixes bso#8950
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce3ecef5c8f26d354e6b3cb5437614faa9ff6d34
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jun 30 11:49:01 2016 -0400

    jbd2: make journal y2038 safe
    
    commit abcfb5d979892fc8b12574551fc907c05fe1b11b upstream.
    
    The jbd2 journal stores the commit time in 64-bit seconds and 32-bit
    nanoseconds, which avoids an overflow in 2038, but it gets the numbers
    from current_kernel_time(), which uses 'long' seconds on 32-bit
    architectures.
    
    This simply changes the code to call current_kernel_time64() so
    we use 64-bit seconds consistently.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cab58a50931fb4cc1633082ea09d67458c22e130
Author: Vladimir Kondratiev <vladimir.kondratiev@intel.com>
Date:   Sun Jul 3 10:07:48 2016 +0300

    ARC: dma: fix address translation in arc_dma_free
    
    commit b4dff2874006e54b60ce4f4dbcfec9ab81c6aff4 upstream.
    
    page should be calculated using physical address.
    If platform uses non-trivial dma-to-phys memory translation,
    dma_handle should be converted to physicval address before
    calculation of page.
    
    Failing to do so results in struct page * pointing to
    wrong or non-existent memory.
    
    Fixes: f2e3d55397ff ("ARC: dma: reintroduce platform specific dma<->phys")
    Signed-off-by: Vladimir Kondratiev <vladimir.kondratiev@intel.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 157b342020bc42630ab4e00fe059a972e126a3ea
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Thu Jul 28 11:35:50 2016 -0700

    ARC: mm: don't loose PTE_SPECIAL in pte_modify()
    
    commit 3925a16ae980c79d1a8fd182d7f9487da1edd4dc upstream.
    
    LTP madvise05 was generating mm splat
    
    | [ARCLinux]# /sd/ltp/testcases/bin/madvise05
    | BUG: Bad page map in process madvise05  pte:80e08211 pmd:9f7d4000
    | page:9fdcfc90 count:1 mapcount:-1 mapping:  (null) index:0x0 flags: 0x404(referenced|reserved)
    | page dumped because: bad pte
    | addr:200b8000 vm_flags:00000070 anon_vma:  (null) mapping:  (null) index:1005c
    | file:  (null) fault:  (null) mmap:  (null) readpage:  (null)
    | CPU: 2 PID: 6707 Comm: madvise05
    
    And for newer kernels, the system was rendered unusable afterwards.
    
    The problem was mprotect->pte_modify() clearing PTE_SPECIAL (which is
    set to identify the special zero page wired to the pte).
    When pte was finally unmapped, special casing for zero page was not
    done, and instead it was treated as a "normal" page, tripping on the
    map counts etc.
    
    This fixes ARC STAR 9001053308
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53a234d9cbbbbbd7b25097c6f521c889473b56a8
Author: Dave Gerlach <d-gerlach@ti.com>
Date:   Wed May 25 15:41:28 2016 -0500

    remoteproc: Fix potential race condition in rproc_add
    
    commit d2e12e66a939c54ed84e5f1b6947f0c45f6c56eb upstream.
    
    rproc_add adds the newly created remoteproc to a list for use by
    rproc_get_by_phandle and then does some additional processing to finish
    adding the remoteproc. This leaves a small window of time in which the
    rproc is available in the list but not yet fully initialized, so if
    another driver comes along and gets a handle to the rproc, it will be
    invalid. Rearrange the code in rproc_add to make sure the rproc is added
    to the list only after it has been successfuly initialized.
    
    Fixes: fec47d863587 ("remoteproc: introduce rproc_get_by_phandle API")
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 015734c9f4e0da11330a686b7948e5d2e7885352
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri Jul 29 12:05:24 2016 +0200

    ovl: disallow overlayfs as upperdir
    
    commit 76bc8e2843b66f8205026365966b49ec6da39ae7 upstream.
    
    This does not work and does not make sense.  So instead of fixing it
    (probably not hard) just disallow.
    
    Reported-by: Andrei Vagin <avagin@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8442b8809cd81d9d7e99ee58f44967b94b7c4168
Author: Roderick Colenbrander <roderick.colenbrander@sony.com>
Date:   Wed May 18 13:11:09 2016 -0700

    HID: uhid: fix timeout when probe races with IO
    
    commit 67f8ecc550b5bda03335f845dc869b8501d25fd0 upstream.
    
    Many devices use userspace bluetooth stacks like BlueZ or Bluedroid in combination
    with uhid. If any of these stacks is used with a HID device for which the driver
    performs a HID request as part .probe (or technically another HID operation),
    this results in a deadlock situation. The deadlock results in a 5 second timeout
    for I/O operations in HID drivers, so isn't fatal, but none of the I/O operations
    have a chance of succeeding.
    
    The root cause for the problem is that uhid only allows for one request to be
    processed at a time per uhid instance and locks out other operations. This means
    that if a user space is creating a new HID device through 'UHID_CREATE', which
    ultimately triggers '.probe' through the HID layer. Then any HID request e.g. a
    read for calibration data would trigger a HID operation on uhid again, but it
    won't go out to userspace, because it is still stuck in UHID_CREATE.
    In addition bluetooth stacks are typically single threaded, so they wouldn't be
    able to handle any requests while waiting on uhid.
    
    Lucikly the UHID spec is somewhat flexible and allows for fixing the issue,
    without breaking user space. The idea which the patch implements as discussed
    with David Herrmann is to decouple adding of a hid device (which triggers .probe)
    from UHID_CREATE. The work will kick off roughly once UHID_CREATE completed (or
    else will wait a tiny bit of time in .probe for a lock). A HID driver has to call
    HID to call 'hid_hw_start()' as part of .probe once it is ready for I/O, which
    triggers UHID_START to user space. Any HID operations should function now within
    .probe and won't deadlock because userspace is stuck on UHID_CREATE.
    
    We verified this patch on Bluedroid with Android 6.0 and on desktop Linux with
    BlueZ stacks. Prior to the patch they had the deadlock issue.
    
    [jkosina@suse.cz: reword subject]
    Signed-off-by: Roderick Colenbrander <roderick.colenbrander@sony.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 520de1ca281e15afd66a417e392e74c4a1a62aad
Author: Sumit Saxena <sumit.saxena@broadcom.com>
Date:   Fri Jul 8 03:30:16 2016 -0700

    megaraid_sas: Do not fire MR_DCMD_PD_LIST_QUERY to controllers which do not support it
    
    commit d9083160c2f6ee456ea867ea2279c1fc6124e56f upstream.
    
    There was an issue reported by Lucz Geza on Dell Perc 6i. As per issue
    reported, megaraid_sas driver goes into an infinite error reporting loop
    as soon as there is a change in the status of one of the
    arrays (degrade, resync online etc ).  Below are the error logs reported
    continuously-
    
    Jun 25 08:49:30 ns8 kernel: [  757.757017] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.778017] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.799017] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.820018] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.841018] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    
    This issue is very much specific to controllers which do not support
    DCMD- MR_DCMD_PD_LIST_QUERY.  In case of any hotplugging/rescanning of
    drives, AEN thread will be scheduled by driver and fire DCMD-
    MR_DCMD_PD_LIST_QUERY and if this DCMD is failed then driver will fail
    this event processing and will not go ahead for further events. This
    will cause infinite loop of same event getting retried infinitely and
    causing above mentioned logs.
    
    Fix for this problem is: not to fire DCMD MR_DCMD_PD_LIST_QUERY for
    controllers which do not support it and send DCMD SUCCESS status to AEN
    function so that it can go ahead with other event processing.
    
    Reported-by: Lucz Geza <geza@lucz.com>
    Signed-off-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d34e3348666ff23a9db7930ac6a0718b09d75aa
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Jun 10 10:28:38 2016 +0200

    EDAC: Correct channel count limit
    
    commit bba142957e04c400440d2df83c1b3b2dfc42e220 upstream.
    
    c44696fff04f ("EDAC: Remove arbitrary limit on number of channels")
    lifted the arbitrary limit on memory controller channels in EDAC.
    However, the dynamic channel attributes dynamic_csrow_dimm_attr and
    dynamic_csrow_ce_count_attr remained 6.
    
    This wasn't a problem except channels 6 and 7 weren't visible in sysfs
    on machines with more than 6 channels after the conversion to static
    attr groups with
    
      2c1946b6d629 ("EDAC: Use static attribute groups for managing sysfs entries")
    
     [ without that, we're exploding in edac_create_sysfs_mci_device()
       because we're dereferencing out of the bounds of the
       dynamic_csrow_dimm_attr array. ]
    
    Add attributes for channels 6 and 7 along with a guard for the
    future, should more channels be required and/or to sanity check for
    misconfigured machines.
    
    We still need to check against the number of channels present on the MC
    first, as Thor reported.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reported-by: Hironobu Ishii <ishii.hironobu@jp.fujitsu.com>
    Tested-by: Thor Thayer <tthayer@opensource.altera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34fc69f9aa9893b98b129d6a7ac12a667a430bd4
Author: Amadeusz Sławiński <amadeusz.slawinski@tieto.com>
Date:   Thu Jul 14 10:50:23 2016 +0200

    Bluetooth: Fix l2cap_sock_setsockopt() with optname BT_RCVMTU
    
    commit 23bc6ab0a0912146fd674a0becc758c3162baabc upstream.
    
    When we retrieve imtu value from userspace we should use 16 bit pointer
    cast instead of 32 as it's defined that way in headers. Fixes setsockopt
    calls on big-endian platforms.
    
    Signed-off-by: Amadeusz Sławiński <amadeusz.slawinski@tieto.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7d56cb9118b6442d3e9ad674e7c109b608bd3b8
Author: Dmitry Tunin <hanipouspilot@gmail.com>
Date:   Tue Jul 12 01:35:18 2016 +0300

    Bluetooth: Add support of 13d3:3490 AR3012 device
    
    commit 12d868964f7352e8b18e755488f7265a93431de1 upstream.
    
    T: Bus=01 Lev=01 Prnt=01 Port=07 Cnt=05 Dev#= 5 Spd=12 MxCh= 0
    D: Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs= 1
    P: Vendor=13d3 ProdID=3490 Rev=00.01
    C: #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
    I: If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    I: If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    
    BugLink: https://bugs.launchpad.net/bugs/1600623
    
    Signed-off-by: Dmitry Tunin <hanipouspilot@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86825b84e701f71e77bd898fdf83df93e74dee5e
Author: Arend Van Spriel <arend.vanspriel@broadcom.com>
Date:   Fri Jul 15 12:16:12 2016 +0200

    brcmfmac: restore stopping netdev queue when bus clogs up
    
    commit 82bc9ab6a8f577d2174a736c33f3d4ecf7d9ef47 upstream.
    
    When the host-interface bus has hard time handling transmit packets
    it informs higher layer about this and it would stop the netdev
    queue when needed. However, since commit 9cd18359d31e ("brcmfmac:
    Make FWS queueing configurable.") this was broken. With this patch
    the behaviour is restored.
    
    Fixes: 9cd18359d31e ("brcmfmac: Make FWS queueing configurable.")
    Tested-by: Per Förlin <per.forlin@gmail.com>
    Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
    Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
    Reviewed-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7ebc634fb9b8fc8d9df7171bf966b69abd8a8d0
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Jul 6 12:08:11 2016 +0300

    spi: pxa2xx: Clear all RFT bits in reset_sccr1() on Intel Quark
    
    commit 152bc19e2fc2b7fce7ffbc2a9cea94b147223702 upstream.
    
    It seems the commit e5262d0568dc ("spi: spi-pxa2xx: SPI support for Intel Quark
    X1000") misses one place to be adapted for Intel Quark, i.e. in reset_sccr1().
    
    Clear all RFT bits when call reset_sccr1() on Intel Quark.
    
    Fixes: e5262d0568dc ("spi: spi-pxa2xx: SPI support for Intel Quark X1000")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4215bf78eb9e6cd2ea57d5ee3fe8d57ea533322d
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Jul 16 02:36:38 2016 +0300

    i2c: efm32: fix a failure path in efm32_i2c_probe()
    
    commit 7dd91d52a813f99a95d20f539b777e9e6198b931 upstream.
    
    There is the only failure path in efm32_i2c_probe(),
    where clk_disable_unprepare() is missed.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Fixes: 1b5b23718b84 ("i2c: efm32: new bus driver")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bab4c530cbb69e80e2b50d234757d4c0e8e7f1e3
Author: Rafał Miłecki <zajec5@gmail.com>
Date:   Mon Jul 11 23:01:36 2016 +0200

    bcma: add PCI ID for Foxconn's BCM43142 device
    
    commit 1bea0512c3394965de28a152149b90afd686fae5 upstream.
    
    After discovering there are 2 very different 14e4:4365 PCI devices we
    made ID tables less generic. Back then we believed there are only 2 such
    devices:
    1) 14e4:4365 1028:0016 with SoftMAC BCM43142 chipset
    2) 14e4:4365 14e4:4365 with FullMAC BCM4366 chipset
    
    >From the recent report it appears there is also 14e4:4365 105b:e092
    which should be claimed by bcma. Add back support for it.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=121881
    Fixes: 515b399c9a20 ("bcma: claim only 14e4:4365 PCI Dell card with SoftMAC BCM43142")
    Reported-by: Igor Mammedov <imammedo@redhat.com>
    Signed-off-by: Rafał Miłecki <zajec5@gmail.com>
    Tested-by: Igor Mammedov <imammedo@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46f3ab603b921e9d80306566907cb50f25730f21
Author: Oren Givon <oren.givon@intel.com>
Date:   Mon May 23 09:58:17 2016 +0300

    iwlwifi: add new 8265
    
    commit f24bbae565d279cd90c904fe55b539a45631705e upstream.
    
    Add 6 new 8265 series PCI IDs:
      - (0x24FD, 0x1130)
      - (0x24FD, 0x0130)
      - (0x24FD, 0x0910)
      - (0x24FD, 0x0930)
      - (0x24FD, 0x0950)
      - (0x24FD, 0x0850)
    
    Signed-off-by: Oren Givon <oren.givon@intel.com>
    Signed-off-by: David Spinadel <david.spinadel@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5d4f5196d00d5bfae124ab1f2f46e11a1eeb781
Author: Oren Givon <oren.givon@intel.com>
Date:   Mon May 23 09:58:17 2016 +0300

    iwlwifi: add new 8260 PCI IDs
    
    commit 4b79deece5d45396422d469afa11f9d69ccb3d8b upstream.
    
    Add 3 new 8260 series PCI IDs:
      - (0x24F3, 0x10B0)
      - (0x24F3, 0xD0B0)
      - (0x24F3, 0xB0B0)
    
    Signed-off-by: Oren Givon <oren.givon@intel.com>
    Signed-off-by: David Spinadel <david.spinadel@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3de99eb07b92ebc433303692b70ab17848012119
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Jun 13 08:28:26 2016 +0300

    iwlwifi: pcie: fix a race in firmware loading flow
    
    commit f16c3ebfa64fdf0e2dc88e6baa72da95ab70ffd7 upstream.
    
    Upon firmware load interrupt (FH_TX), the ISR re-enables the
    firmware load interrupt only to avoid races with other
    flows as described in the commit below. When the firmware
    is completely loaded, the thread that is loading the
    firmware will enable all the interrupts to make sure that
    the driver gets the ALIVE interrupt.
    The problem with that is that the thread that is loading
    the firmware is actually racing against the ISR and we can
    get to the following situation:
    
    CPU0                                    CPU1
    iwl_pcie_load_given_ucode
            ...
            iwl_pcie_load_firmware_chunk
                    wait_for_interrupt
                                            <interrupt>
                                            ISR handles CSR_INT_BIT_FH_TX
                                            ISR wakes up the thread on CPU0
            /* enable all the interrupts
             * to get the ALIVE interrupt
             */
            iwl_enable_interrupts
                                            ISR re-enables CSR_INT_BIT_FH_TX only
            /* start the firmware */
            iwl_write32(trans, CSR_RESET, 0);
    
    BUG! ALIVE interrupt will never arrive since it has been
    masked by CPU1.
    
    In order to fix that, change the ISR to first check if
    STATUS_INT_ENABLED is set. If so, re-enable all the
    interrupts. If STATUS_INT_ENABLED is clear, then we can
    check what specific interrupt happened and re-enable only
    that specific interrupt (RFKILL or FH_TX).
    
    All the credit for the analysis goes to Kirtika who did the
    actual debugging work.
    
    Fixes: a6bd005fe92 ("iwlwifi: pcie: fix RF-Kill vs. firmware load race")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c04cc6df704ecadb26a1574fb0b7ad6846983080
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Jun 8 23:07:31 2016 +0300

    iwlwifi: pcie: enable interrupts before releasing the NIC's CPU
    
    commit 2aabdbdc17b7c53490337bfc58de3409c84d85d2 upstream.
    
    The NIC's CPU gets started after the firmware has been
    written to its memory. The first thing it does is to
    send an interrupt to let the driver know that it is
    running. In order to get that interrupt, the driver needs
    to make sure it is not masked. Of course, the interrupt
    needs to be enabled in the driver before the CPU starts to
    run.
    I mistakenly inversed those two steps leading to races
    which prevented the driver from getting the alive interrupt
    from the firmware.
    Fix that.
    
    Fixes: a6bd005fe92 ("iwlwifi: pcie: fix RF-Kill vs. firmware load race")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc8b0d2118eeb430e7f5e74bb3b983a64861fc6b
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Tue Jun 21 11:02:42 2016 -0700

    dm verity fec: fix block calculation
    
    commit 602d1657c603eedd7379a8bcde1ad3a2972ecc5f upstream.
    
    do_div was replaced with div64_u64 at some point, causing a bug with
    block calculation due to incompatible semantics of the two functions.
    
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Fixes: a739ff3f543a ("dm verity: add support for forward error correction")
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73bf77b72142e0547d0ae174ad962a88d091020d
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Tue May 3 16:27:17 2016 -0400

    s5p-mfc: Add release callback for memory region devs
    
    commit 6311f1261f59ce5e51fbe5cc3b5e7737197316ac upstream.
    
    When s5p_mfc_remove() calls put_device() for the reserved memory region
    devs, the driver core warns that the dev doesn't have a release callback:
    
    WARNING: CPU: 0 PID: 591 at drivers/base/core.c:251 device_release+0x8c/0x90
    Device 's5p-mfc-l' does not have a release() function, it is broken and must be fixed.
    
    Also, the declared DMA memory using dma_declare_coherent_memory() isn't
    relased so add a dev .release that calls dma_release_declared_memory().
    
    Fixes: 6e83e6e25eb4 ("[media] s5p-mfc: Fix kernel warning on memory init")
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f44f063f991fb2139de5b00db141138ef4756b5
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Tue May 3 16:27:16 2016 -0400

    s5p-mfc: Set device name for reserved memory region devs
    
    commit 29debab0a94035a390801d1f177d171d014b7765 upstream.
    
    The devices don't have a name set, so makes dev_name() returns NULL which
    makes harder to identify the devices that are causing issues, for example:
    
    WARNING: CPU: 2 PID: 616 at drivers/base/core.c:251 device_release+0x8c/0x90
    Device '(null)' does not have a release() function, it is broken and must be fixed.
    
    And after setting the device name:
    
    WARNING: CPU: 0 PID: 591 at drivers/base/core.c:251 device_release+0x8c/0x90
    Device 's5p-mfc-l' does not have a release() function, it is broken and must be fixed.
    
    Fixes: 6e83e6e25eb4 ("[media] s5p-mfc: Fix kernel warning on memory init")
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ada15c3c657922b805b3232fb8ac180c9ef3c58b
Author: Alex Hung <alex.hung@canonical.com>
Date:   Mon Jun 13 19:44:00 2016 +0800

    hp-wmi: Fix wifi cannot be hard-unblocked
    
    commit fc8a601e1175ae351f662506030f9939cb7fdbfe upstream.
    
    Several users reported wifi cannot be unblocked as discussed in [1].
    This patch removes the use of the 2009 flag by BIOS but uses the actual
    WMI function calls - it will be skipped if WMI reports unsupported.
    
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=69131
    
    Signed-off-by: Alex Hung <alex.hung@canonical.com>
    Tested-by: Evgenii Shatokhin <eugene.shatokhin@yandex.ru>
    Signed-off-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 987f47360d8dc2b67ec6d9f09a7eb840245b7f2e
Author: Dave Chinner <dchinner@redhat.com>
Date:   Fri Jul 22 09:56:38 2016 +1000

    xfs: bufferhead chains are invalid after end_page_writeback
    
    commit 28b783e47ad702b8e0f4861ef94cdfce6abd7c80 upstream.
    
    In xfs_finish_page_writeback(), we have a loop that looks like this:
    
            do {
                    if (off < bvec->bv_offset)
                            goto next_bh;
                    if (off > end)
                            break;
                    bh->b_end_io(bh, !error);
    next_bh:
                    off += bh->b_size;
            } while ((bh = bh->b_this_page) != head);
    
    The b_end_io function is end_buffer_async_write(), which will call
    end_page_writeback() once all the buffers have marked as no longer
    under IO.  This issue here is that the only thing currently
    protecting both the bufferhead chain and the page from being
    reclaimed is the PageWriteback state held on the page.
    
    While we attempt to limit the loop to just the buffers covered by
    the IO, we still read from the buffer size and follow the next
    pointer in the bufferhead chain. There is no guarantee that either
    of these are valid after the PageWriteback flag has been cleared.
    Hence, loops like this are completely unsafe, and result in
    use-after-free issues. One such problem was caught by Calvin Owens
    with KASAN:
    
    .....
     INFO: Freed in 0x103fc80ec age=18446651500051355200 cpu=2165122683 pid=-1
      free_buffer_head+0x41/0x90
      __slab_free+0x1ed/0x340
      kmem_cache_free+0x270/0x300
      free_buffer_head+0x41/0x90
      try_to_free_buffers+0x171/0x240
      xfs_vm_releasepage+0xcb/0x3b0
      try_to_release_page+0x106/0x190
      shrink_page_list+0x118e/0x1a10
      shrink_inactive_list+0x42c/0xdf0
      shrink_zone_memcg+0xa09/0xfa0
      shrink_zone+0x2c3/0xbc0
    .....
     Call Trace:
      <IRQ>  [<ffffffff81e8b8e4>] dump_stack+0x68/0x94
      [<ffffffff8153a995>] print_trailer+0x115/0x1a0
      [<ffffffff81541174>] object_err+0x34/0x40
      [<ffffffff815436e7>] kasan_report_error+0x217/0x530
      [<ffffffff81543b33>] __asan_report_load8_noabort+0x43/0x50
      [<ffffffff819d651f>] xfs_destroy_ioend+0x3bf/0x4c0
      [<ffffffff819d69d4>] xfs_end_bio+0x154/0x220
      [<ffffffff81de0c58>] bio_endio+0x158/0x1b0
      [<ffffffff81dff61b>] blk_update_request+0x18b/0xb80
      [<ffffffff821baf57>] scsi_end_request+0x97/0x5a0
      [<ffffffff821c5558>] scsi_io_completion+0x438/0x1690
      [<ffffffff821a8d95>] scsi_finish_command+0x375/0x4e0
      [<ffffffff821c3940>] scsi_softirq_done+0x280/0x340
    
    
    Where the access is occuring during IO completion after the buffer
    had been freed from direct memory reclaim.
    
    Prevent use-after-free accidents in this end_io processing loop by
    pre-calculating the loop conditionals before calling bh->b_end_io().
    The loop is already limited to just the bufferheads covered by the
    IO in progress, so the offset checks are sufficient to prevent
    accessing buffers in the chain after end_page_writeback() has been
    called by the the bh->b_end_io() callout.
    
    Yet another example of why Bufferheads Must Die.
    
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reported-and-Tested-by: Calvin Owens <calvinowens@fb.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d22601e240e5f54a17fe2ac883c2b10e04024e69
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Aug 2 13:07:20 2016 -0400

    dm: set DMF_SUSPENDED* _before_ clearing DMF_NOFLUSH_SUSPENDING
    
    commit eaf9a7361f47727b166688a9f2096854eef60fbe upstream.
    
    Otherwise, there is potential for both DMF_SUSPENDED* and
    DMF_NOFLUSH_SUSPENDING to not be set during dm_suspend() -- which is
    definitely _not_ a valid state.
    
    This fix, in conjuction with "dm rq: fix the starting and stopping of
    blk-mq queues", addresses the potential for request-based DM multipath's
    __multipath_map() to see !dm_noflush_suspending() during suspend.
    
    Reported-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a92fb431febc96c97e2ee539fe1dce865720181b
Author: Tahsin Erdogan <tahsin@google.com>
Date:   Fri Jul 15 06:27:08 2016 -0700

    dm: fix second blk_delay_queue() parameter to be in msec units not jiffies
    
    commit bd9f55ea1cf6e14eb054b06ea877d2d1fa339514 upstream.
    
    Commit d548b34b062 ("dm: reduce the queue delay used in dm_request_fn
    from 100ms to 10ms") always intended the value to be 10 msecs -- it
    just expressed it in jiffies because earlier commit 7eaceaccab ("block:
    remove per-queue plugging") did.
    
    Signed-off-by: Tahsin Erdogan <tahsin@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Fixes: d548b34b062 ("dm: reduce the queue delay used in dm_request_fn from 100ms to 10ms")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccf04ba55270a41c68c2faa3d0bf60d11b00ab1b
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Tue Jul 12 11:26:43 2016 +0530

    regulator: s2mps11: Fix the voltage linear range for s2mps15
    
    commit 04c16b84e49a6d609c88f4f5523237ece3612b74 upstream.
    
    This patch fixes some of the LDOs and BUCKs voltage range as per
    user manual of s2mps15 (REV0.4).
    
    Fixes: 51af20675800 ("regulator: s2mps11: Add support for S2MPS15 regulators")
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c84b914813a79e8cf627e67fd50e3d73fecc0ccd
Author: Florian Echtler <floe@butterbrot.org>
Date:   Tue May 31 17:15:33 2016 -0300

    sur40: fix occasional oopses on device close
    
    commit 6a8588156657e607fcfdffd46c1daae8ba88a1e5 upstream.
    
    Closing the V4L2 device sometimes triggers a kernel oops.
    Present patch fixes this.
    
    Signed-off-by: Martin Kaltenbrunner <modin@yuri.at>
    Signed-off-by: Florian Echtler <floe@butterbrot.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd356764c3350321137eeca85e7d901572f132a5
Author: Florian Echtler <floe@butterbrot.org>
Date:   Tue May 31 17:15:32 2016 -0300

    sur40: lower poll interval to fix occasional FPS drops to ~56 FPS
    
    commit af766ee005c496b8567976dc3eed7676443ed6de upstream.
    
    The framerate sometimes drops below 60 Hz if the poll interval is too high.
    Lowering it to the minimum of 1 ms fixes this.
    
    Signed-off-by: Martin Kaltenbrunner <modin@yuri.at>
    Signed-off-by: Florian Echtler <floe@butterbrot.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d7eed67560e0c2738cbfc886eee724be7f954ff
Author: Jonathan McDowell <noodles@earth.li>
Date:   Sat May 14 14:01:26 2016 -0300

    Fix RC5 decoding with Fintek CIR chipset
    
    commit bbdb34c90aeb8b2253eae88029788ebe1d7f2fd4 upstream.
    
    Fix RC5 decoding with Fintek CIR chipset
    
    Commit e87b540be2dd02552fb9244d50ae8b4e4619a34b tightened up the RC5
    decoding by adding a check for trailing silence to ensure a valid RC5
    command had been received. Unfortunately the trailer length checked was
    10 units and the Fintek CIR device does not want to provide details of a
    space longer than 6350us. This meant that RC5 remotes working on a
    Fintek setup on 3.16 failed on 3.17 and later. Fix this by shortening
    the trailer check to 6 units (allowing for a previous space in the
    received remote command).
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=117221
    
    Signed-off-by: Jonathan McDowell <noodles@earth.li>
    Signed-off-by: David Härdeman <david@hardeman.nu>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73981e47bd3c9472a4f1608ca00e2db11ceabb66
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed May 11 18:44:32 2016 -0300

    vb2: core: Skip planes array verification if pb is NULL
    
    commit 126f40298446a82116e1f92a1aaf72b8c8228fae upstream.
    
    An earlier patch fixing an input validation issue introduced another
    issue: vb2_core_dqbuf() is called with pb argument value NULL in some
    cases, causing a NULL pointer dereference. Fix this by skipping the
    verification as there's nothing to verify.
    
    Fixes: e7e0c3e26587 ("[media] videobuf2-core: Check user space planes array in dqbuf")
    
    Signed-off-by: David R <david@unsolicited.net>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80e2b69a44830bc63fb8a07600a180b36ca76152
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sun Apr 3 16:31:03 2016 -0300

    videobuf2-v4l2: Verify planes array in buffer dequeueing
    
    commit 83934b75c368f529d084815c463a7ef781dc9751 upstream.
    
    When a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact buffer
    which will be dequeued is not known until the buffer has been removed from
    the queue. The number of planes is specific to a buffer, not to the queue.
    
    This does lead to the situation where multi-plane buffers may be requested
    and queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argument
    struct with fewer planes.
    
    __fill_v4l2_buffer() however uses the number of planes from the dequeued
    videobuf2 buffer, overwriting kernel memory (the m.planes array allocated
    in video_usercopy() in v4l2-ioctl.c)  if the user provided fewer
    planes than the dequeued buffer had. Oops!
    
    Fixes: b0e0e1f83de3 ("[media] media: videobuf2: Prepare to divide videobuf2")
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 288fa29846531b3e79af835fb41b0b240cc221c0
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Thu Jul 7 03:17:39 2016 -0300

    rc: nuvoton: fix hang if chip is configured for alternative EFM IO address
    
    commit 5cac1f67ea0363d463a58ec2d9118268fe2ba5d6 upstream.
    
    If a system configures the Nuvoton chip to use the alternative
    EFM IO address (CR_EFIR2) then after probing the primary EFM IO
    address (CR_EFIR) this region is not released.
    
    If a driver for another function of the Nuvoton Super I/O
    chip uses the same probing mechanism then it will hang if
    loaded after the nuvoton-cir driver.
    This was reported for the nct6775 hwmon driver.
    
    Fix this by properly releasing the region after probing CR_EFIR.
    This regression was introduced with kernel 4.6 so cc it to stable.
    
    Reported-by: Antti Seppälä <a.seppala@gmail.com>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Tested-by: Antti Seppälä <a.seppala@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d291317d309a484004897867b885ca67849e5d8
Author: Soeren Moch <smoch@web.de>
Date:   Wed May 11 13:49:11 2016 -0300

    media: dvb_ringbuffer: Add memory barriers
    
    commit ca6e6126db5494f18c6c6615060d4d803b528bff upstream.
    
    Implement memory barriers according to Documentation/circular-buffers.txt:
    - use smp_store_release() to update ringbuffer read/write pointers
    - use smp_load_acquire() to load write pointer on reader side
    - use ACCESS_ONCE() to load read pointer on writer side
    
    This fixes data stream corruptions observed e.g. on an ARM Cortex-A9
    quad core system with different types (PCI, USB) of DVB tuners.
    
    Signed-off-by: Soeren Moch <smoch@web.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5869678b21800a1e038a3f8ff1bf1aba0c367830
Author: Matthew Leach <matthew@mattleach.net>
Date:   Fri Jul 8 09:04:27 2016 -0300

    media: usbtv: prevent access to free'd resources
    
    commit 2a00932f082aff93c3a55426e0c7af6d0ec03997 upstream.
    
    When disconnecting the usbtv device, the sound card is unregistered
    from ALSA and the snd member of the usbtv struct is set to NULL.  If
    the usbtv snd_trigger work is running, this can cause a race condition
    where the kernel will attempt to access free'd resources, shown in
    [1].
    
    This patch fixes the disconnection code by cancelling any snd_trigger
    work before unregistering the sound card from ALSA and checking that
    the snd member still exists in the work function.
    
    [1]:
     usb 3-1.2: USB disconnect, device number 6
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
     IP: [<ffffffff81093850>] process_one_work+0x30/0x480
     PGD 405bbf067 PUD 405bbe067 PMD 0
     Call Trace:
      [<ffffffff81093ce8>] worker_thread+0x48/0x4e0
      [<ffffffff81093ca0>] ? process_one_work+0x480/0x480
      [<ffffffff81093ca0>] ? process_one_work+0x480/0x480
      [<ffffffff81099998>] kthread+0xd8/0xf0
      [<ffffffff815c73c2>] ret_from_fork+0x22/0x40
      [<ffffffff810998c0>] ? kthread_worker_fn+0x170/0x170
     ---[ end trace 0f3dac5c1a38e610 ]---
    
    Signed-off-by: Matthew Leach <matthew@mattleach.net>
    Tested-by: Peter Sutton <foxxy@foxdogstudios.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76565c6a18176ce33ed7883972de33d68200acf8
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Mon Jul 25 08:19:31 2016 -0500

    objtool: Add 'fixdep' to objtool/.gitignore
    
    commit 5cada17426505b09a045cd9e6d7fb6db19b76ea1 upstream.
    
    To fix:
    
       Untracked files:
         (use "git add <file>..." to include in what will be committed)
    
               tools/objtool/fixdep
    
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/a4571f6893caf737d05524cfa3829c2abc1fb240.1469452729.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 843089c8db883f17242d8e615d43b995dec469cb
Author: Kan Liang <kan.liang@intel.com>
Date:   Thu Aug 11 07:30:20 2016 -0700

    perf/x86/intel/uncore: Fix uncore num_counters
    
    commit 10e9e7bd598f9a66a11a22514c68c13c41fc821b upstream.
    
    Some uncore boxes' num_counters value for Haswell server and
    Broadwell server are not correct (too large, off by one).
    
    This issue was found by comparing the code with the document. Although
    there is no bug report from users yet, accessing non-existent counters
    is dangerous and the behavior is undefined: it may cause miscounting or
    even crashes.
    
    This patch makes them consistent with the uncore document.
    
    Reported-by: Lukasz Odzioba <lukasz.odzioba@intel.com>
    Signed-off-by: Kan Liang <kan.liang@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/1470925820-59847-1-git-send-email-kan.liang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cc837d94a370e6abb40b2b582c228a13776a588
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Jun 22 08:27:17 2016 +0200

    mfd: qcom_rpm: Parametrize also ack selector size
    
    commit f37be01e6dc606f2fcc5e95c9933d948ce19bd35 upstream.
    
    The RPM has two sets of selectors (IPC bit fields): request and
    acknowledge. Apparently, some models use 4*32 bit words for select
    and some use 7*32 bit words for request, but all use 7*32 words
    for acknowledge bits.
    
    So apparently you can on the models with requests of 4*32 select
    bits send 4*32 messages and get 7*32 different replies, so on ACK
    interrupt, 7*32 bit words need to be read. This is how the vendor
    code apparently works.
    
    Reported-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c622f04c92e70e996ccd17de87d28369893c662
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Jun 15 01:02:26 2016 +0200

    mfd: qcom_rpm: Fix offset error for msm8660
    
    commit 9835f1b70bb3890d38308b9be4fb9d7451ba67f1 upstream.
    
    The RPM in MSM8660/APQ8060 has different offsets to the selector
    ACK and request context ACK registers. Make all these register
    offsets part of the per-SoC data and assign the right values.
    
    The bug was found by verifying backwards to the vendor tree in
    the out-of-tree files <mach/rpm-[8660|8064|8960]>: all were using
    offsets 3,11,15,23 and a select size of 4, except the MSM8660/APQ8060
    which was using offsets 3,11,19,27 and a select size of 7.
    
    All other platforms apart from msm8660 were affected by reading
    excess registers, since 7 was hardcoded as the number of select
    words, this patch makes also this part dynamic so we only write/read
    as many select words as the platform actually use.
    
    Symptoms of this bug when using msm8660: the first RPM transaction
    would work, but the next would stall or raise an error since the
    previous transaction was not properly ACKed as the ACK words were
    read at the wrong offset.
    
    Fixes: 58e214382bdd ("mfd: qcom-rpm: Driver for the Qualcomm RPM")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Björn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 584b25fcd48b46f26f3134ae44f8201a62a5ed11
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Fri Jul 8 20:42:04 2016 +0200

    intel_pstate: Fix MSR_CONFIG_TDP_x addressing in core_get_max_pstate()
    
    commit 5fc8f707a2aa40c767c3a338738b9b6fcd151ac1 upstream.
    
    If MSR_CONFIG_TDP_CONTROL is locked, we currently try to address some
    MSR 0x80000648 or so. Mask out the relevant level bits 0 and 1.
    
    Found while running over the Jailhouse hypervisor which became upset
    about this strange MSR index.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a24f6b24ef9bc199207e9d282282bb5ca00817ff
Author: David Hildenbrand <dahi@linux.vnet.ibm.com>
Date:   Tue May 10 13:51:54 2016 +0200

    s390/mm: don't drop errors in get_guest_storage_key
    
    commit c427c42cd612719e8fb8b5891cc9761e7770024e upstream.
    
    Commit 1e133ab296f3 ("s390/mm: split arch/s390/mm/pgtable.c") changed
    the return value of get_guest_storage_key to an unsigned char, resulting
    in -EFAULT getting interpreted as a valid storage key.
    
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 133745bdb3e20d417ed12af78f9f9cbf361c54d8
Author: David Hildenbrand <dahi@linux.vnet.ibm.com>
Date:   Thu Jul 7 10:44:10 2016 +0200

    s390/mm: fix gmap tlb flush issues
    
    commit f045402984404ddc11016358411e445192919047 upstream.
    
    __tlb_flush_asce() should never be used if multiple asce belong to a mm.
    
    As this function changes mm logic determining if local or global tlb
    flushes will be neded, we might end up flushing only the gmap asce on all
    CPUs and a follow up mm asce flushes will only flush on the local CPU,
    although that asce ran on multiple CPUs.
    
    The missing tlb flushes will provoke strange faults in user space and even
    low address protections in user space, crashing the kernel.
    
    Fixes: 1b948d6caec4 ("s390/mm,tlb: optimize TLB flushing for zEC12")
    Reported-by: Sascha Silbe <silbe@linux.vnet.ibm.com>
    Acked-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba208db9c26490b74ee0c6043a2a6020788b8abb
Author: Sebastian Ott <sebott@linux.vnet.ibm.com>
Date:   Tue Jul 12 19:57:57 2016 +0200

    s390/cio: allow to reset channel measurement block
    
    commit 0f5d050ceaa31b2229102211d60c149f920df3aa upstream.
    
    Prior to commit 1bc6664bdfb949bc69a08113801e7d6acbf6bc3f a call to
    enable_cmf for a device for which channel measurement was already
    enabled resulted in a reset of the measurement data.
    
    What looked like bugs at the time (a 2nd allocation was triggered
    but failed, reset was called regardless of previous failures, and
    errors have not been reported to userspace) was actually something
    at least one userspace tool depended on. Restore that behavior in
    a sane way.
    
    Fixes: 1bc6664bdfb ("s390/cio: use device_lock during cmb activation")
    Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eea340c298a2de1c11e36c25e7ce3938624e6375
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Jun 1 22:26:00 2016 +0200

    KVM: x86: avoid simultaneous queueing of both IRQ and SMI
    
    commit c43203cab1e2e193c43f8295f01dfb2a0721d9e5 upstream.
    
    If the processor exits to KVM while delivering an interrupt,
    the hypervisor then requeues the interrupt for the next vmentry.
    Trying to enter SMM in this same window causes to enter non-root
    mode in emulated SMM (i.e. with IF=0) and with a request to
    inject an IRQ (i.e. with a valid VM-entry interrupt info field).
    This is invalid guest state (SDM 26.3.1.4 "Check on Guest RIP
    and RFLAGS") and the processor fails vmentry.
    
    The fix is to defer the injection from KVM_REQ_SMI to KVM_REQ_EVENT,
    like we already do for e.g. NMIs.  This patch doesn't change the
    name of the process_smi function so that it can be applied to
    stable releases.  The next patch will modify the names so that
    process_nmi and process_smi handle respectively KVM_REQ_NMI and
    KVM_REQ_SMI.
    
    This is especially common with Windows, probably due to the
    self-IPI trick that it uses to deliver deferred procedure
    calls (DPCs).
    
    Reported-by: Laszlo Ersek <lersek@redhat.com>
    Reported-by: Michał Zegan <webczat_200@poczta.onet.pl>
    Fixes: 64d6067057d9658acb8675afcfba549abdb7fc16
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb303ea20e8f1a5f51f99714956630bc1807313d
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Jul 8 15:36:06 2016 -0700

    KVM: nVMX: Fix memory corruption when using VMCS shadowing
    
    commit 2f1fe81123f59271bddda673b60116bde9660385 upstream.
    
    When freeing the nested resources of a vcpu, there is an assumption that
    the vcpu's vmcs01 is the current VMCS on the CPU that executes
    nested_release_vmcs12(). If this assumption is violated, the vcpu's
    vmcs01 may be made active on multiple CPUs at the same time, in
    violation of Intel's specification. Moreover, since the vcpu's vmcs01 is
    not VMCLEARed on every CPU on which it is active, it can linger in a
    CPU's VMCS cache after it has been freed and potentially
    repurposed. Subsequent eviction from the CPU's VMCS cache on a capacity
    miss can result in memory corruption.
    
    It is not sufficient for vmx_free_vcpu() to call vmx_load_vmcs01(). If
    the vcpu in question was last loaded on a different CPU, it must be
    migrated to the current CPU before calling vmx_load_vmcs01().
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 744825cca6c48d5966d8b878e6e567c29c66f26e
Author: Cao, Lei <Lei.Cao@stratus.com>
Date:   Fri Jul 15 13:54:04 2016 +0000

    KVM: VMX: handle PML full VMEXIT that occurs during event delivery
    
    commit b244c9fc251e14a083a1cbf04bef10bd99303a76 upstream.
    
    With PML enabled, guest will shut down if a PML full VMEXIT occurs during
    event delivery. According to Intel SDM 27.2.3, PML full VMEXIT can occur when
    event is being delivered through IDT, so KVM should not exit to user space
    with error. Instead, it should let EXIT_REASON_PML_FULL go through and the
    event will be re-injected on the next VMENTRY.
    
    Signed-off-by: Lei Cao <lei.cao@stratus.com>
    Fixes: 843e4330573c ("KVM: VMX: Add PML support in VMX")
    [Shortened the summary and Cc'd stable.]
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c268a83474081a94531b1086aa0775b08b9667b
Author: Alexis Dambricourt <alexis.dambricourt@gmail.com>
Date:   Mon Jul 4 21:05:15 2016 +0200

    KVM: MTRR: fix kvm_mtrr_check_gfn_range_consistency page fault
    
    commit 30b072ce0356e8b141f4ca6da7220486fa3641d9 upstream.
    
    The following #PF may occurs:
    [ 1403.317041] BUG: unable to handle kernel paging request at 0000000200000068
    [ 1403.317045] IP: [<ffffffffc04c20b0>] __mtrr_lookup_var_next+0x10/0xa0 [kvm]
    
    [ 1403.317123] Call Trace:
    [ 1403.317134]  [<ffffffffc04c2a65>] ? kvm_mtrr_check_gfn_range_consistency+0xc5/0x120 [kvm]
    [ 1403.317143]  [<ffffffffc04ac11f>] ? tdp_page_fault+0x9f/0x2c0 [kvm]
    [ 1403.317152]  [<ffffffffc0498128>] ? kvm_set_msr_common+0x858/0xc00 [kvm]
    [ 1403.317161]  [<ffffffffc04b8883>] ? x86_emulate_insn+0x273/0xd30 [kvm]
    [ 1403.317171]  [<ffffffffc04c04e4>] ? kvm_cpuid+0x34/0x190 [kvm]
    [ 1403.317180]  [<ffffffffc04a5bb9>] ? kvm_mmu_page_fault+0x59/0xe0 [kvm]
    [ 1403.317183]  [<ffffffffc0d729e1>] ? vmx_handle_exit+0x1d1/0x14a0 [kvm_intel]
    [ 1403.317185]  [<ffffffffc0d75f3f>] ? atomic_switch_perf_msrs+0x6f/0xa0 [kvm_intel]
    [ 1403.317187]  [<ffffffffc0d7621d>] ? vmx_vcpu_run+0x2ad/0x420 [kvm_intel]
    [ 1403.317196]  [<ffffffffc04a0962>] ? kvm_arch_vcpu_ioctl_run+0x622/0x1550 [kvm]
    [ 1403.317204]  [<ffffffffc049abb9>] ? kvm_arch_vcpu_load+0x59/0x210 [kvm]
    [ 1403.317206]  [<ffffffff81036245>] ? __kernel_fpu_end+0x35/0x100
    [ 1403.317213]  [<ffffffffc0487eb6>] ? kvm_vcpu_ioctl+0x316/0x5d0 [kvm]
    [ 1403.317215]  [<ffffffff81088225>] ? do_sigtimedwait+0xd5/0x220
    [ 1403.317217]  [<ffffffff811f84dd>] ? do_vfs_ioctl+0x9d/0x5c0
    [ 1403.317224]  [<ffffffffc04928ae>] ? kvm_on_user_return+0x3e/0x70 [kvm]
    [ 1403.317225]  [<ffffffff811f8a74>] ? SyS_ioctl+0x74/0x80
    [ 1403.317227]  [<ffffffff815bf0b6>] ? entry_SYSCALL_64_fastpath+0x1e/0xa8
    [ 1403.317242] RIP  [<ffffffffc04c20b0>] __mtrr_lookup_var_next+0x10/0xa0 [kvm]
    
    At mtrr_lookup_fixed_next(), when the condition
    'if (iter->index >= ARRAY_SIZE(iter->mtrr_state->fixed_ranges))' becomes true,
    mtrr_lookup_var_start() is called with iter->range with gargabe values from the
    fixed MTRR union field. Then, list_prepare_entry() do not call list_entry()
    initialization, keeping a garbage pointer in iter->range which is accessed in
    the following __mtrr_lookup_var_next() call.
    
    Fixes: f571c0973e4b8c888e049b6842e4b4f93b5c609c
    Signed-off-by: Alexis Dambricourt <alexis@blade-group.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e8972025b18822e6cb9a19cb1a43fde83561e23
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Jun 22 15:52:55 2016 +1000

    KVM: PPC: Book3S HV: Save/restore TM state in H_CEDE
    
    commit 93d17397e4e2182fdaad503e2f9da46202c0f1c3 upstream.
    
    It turns out that if the guest does a H_CEDE while the CPU is in
    a transactional state, and the H_CEDE does a nap, and the nap
    loses the architected state of the CPU (which is is allowed to do),
    then we lose the checkpointed state of the virtual CPU.  In addition,
    the transactional-memory state recorded in the MSR gets reset back
    to non-transactional, and when we try to return to the guest, we take
    a TM bad thing type of program interrupt because we are trying to
    transition from non-transactional to transactional with a hrfid
    instruction, which is not permitted.
    
    The result of the program interrupt occurring at that point is that
    the host CPU will hang in an infinite loop with interrupts disabled.
    Thus this is a denial of service vulnerability in the host which can
    be triggered by any guest (and depending on the guest kernel, it can
    potentially triggered by unprivileged userspace in the guest).
    
    This vulnerability has been assigned the ID CVE-2016-5412.
    
    To fix this, we save the TM state before napping and restore it
    on exit from the nap, when handling a H_CEDE in real mode.  The
    case where H_CEDE exits to host virtual mode is already OK (as are
    other hcalls which exit to host virtual mode) because the exit
    path saves the TM state.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e01651e3546f4d092825a9f23a9296a00caedda
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Jun 22 14:21:59 2016 +1000

    KVM: PPC: Book3S HV: Pull out TM state save/restore into separate procedures
    
    commit f024ee098476a3e620232e4a78cfac505f121245 upstream.
    
    This moves the transactional memory state save and restore sequences
    out of the guest entry/exit paths into separate procedures.  This is
    so that these sequences can be used in going into and out of nap
    in a subsequent patch.
    
    The only code changes here are (a) saving and restore LR on the
    stack, since these new procedures get called with a bl instruction,
    (b) explicitly saving r1 into the PACA instead of assuming that
    HSTATE_HOST_R1(r13) is already set, and (c) removing an unnecessary
    and redundant setting of MSR[TM] that should have been removed by
    commit 9d4d0bdd9e0a ("KVM: PPC: Book3S HV: Add transactional memory
    support", 2013-09-24) but wasn't.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32fa58a59dcbb2f47387fcedef95ebd3af63b908
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Aug 11 14:11:06 2016 +0100

    arm64: hibernate: handle allocation failures
    
    commit dfbca61af0b654990b9af8297ac574a9986d8275 upstream.
    
    In create_safe_exec_page(), we create a copy of the hibernate exit text,
    along with some page tables to map this via TTBR0. We then install the
    new tables in TTBR0.
    
    In swsusp_arch_resume() we call create_safe_exec_page() before trying a
    number of operations which may fail (e.g. copying the linear map page
    tables). If these fail, we bail out of swsusp_arch_resume() and return
    an error code, but leave TTBR0 as-is. Subsequently, the core hibernate
    code will call free_basic_memory_bitmaps(), which will free all of the
    memory allocations we made, including the page tables installed in
    TTBR0.
    
    Thus, we may have TTBR0 pointing at dangling freed memory for some
    period of time. If the hibernate attempt was triggered by a user
    requesting a hibernate test via the reboot syscall, we may return to
    userspace with the clobbered TTBR0 value.
    
    Avoid these issues by reorganising swsusp_arch_resume() such that we
    have no failure paths after create_safe_exec_page(). We also add a check
    that the zero page allocation succeeded, matching what we have for other
    allocations.
    
    Fixes: 82869ac57b5d ("arm64: kernel: Add support for hibernate/suspend-to-disk")
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: James Morse <james.morse@arm.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99c3ea21bcdf1414f663838650882a888efc4e1d
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Aug 11 14:11:05 2016 +0100

    arm64: hibernate: avoid potential TLB conflict
    
    commit 0194e760f7d2f42adb5e1db31b27a4331dd89c2f upstream.
    
    In create_safe_exec_page we install a set of global mappings in TTBR0,
    then subsequently invalidate TLBs. While TTBR0 points at the zero page,
    and the TLBs should be free of stale global entries, we may have stale
    ASID-tagged entries (e.g. from the EFI runtime services mappings) for
    the same VAs. Per the ARM ARM these ASID-tagged entries may conflict
    with newly-allocated global entries, and we must follow a
    Break-Before-Make approach to avoid issues resulting from this.
    
    This patch reworks create_safe_exec_page to invalidate TLBs while the
    zero page is still in place, ensuring that there are no potential
    conflicts when the new TTBR0 value is installed. As a single CPU is
    online while this code executes, we do not need to perform broadcast TLB
    maintenance, and can call local_flush_tlb_all(), which also subsumes
    some barriers. The remaining assembly is converted to use write_sysreg()
    and isb().
    
    Other than this, we safely manipulate TTBRs in the hibernate dance. The
    code we install as part of the new TTBR0 mapping (the hibernated
    kernel's swsusp_arch_suspend_exit) installs a zero page into TTBR1,
    invalidates TLBs, then installs its preferred value. Upon being restored
    to the middle of swsusp_arch_suspend, the new image will call
    __cpu_suspend_exit, which will call cpu_uninstall_idmap, installing the
    zero page in TTBR0 and invalidating all TLB entries.
    
    Fixes: 82869ac57b5d ("arm64: kernel: Add support for hibernate/suspend-to-disk")
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: James Morse <james.morse@arm.com>
    Tested-by: James Morse <james.morse@arm.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5afa4b1ab05b59840a021529708c4a6dfe2dcd11
Author: Andrew Jones <drjones@redhat.com>
Date:   Fri Jul 22 10:38:46 2016 -0400

    arm64: KVM: Set cpsr before spsr on fault injection
    
    commit 89581f06b2bc225f0c9822fa52e714aa2e3810dd upstream.
    
    We need to set cpsr before determining the spsr bank, as the bank
    depends on the target exception level of the injection, not the
    current mode of the vcpu. Normally this is one in the same (EL1),
    but not when we manage to trap an EL0 fault. It still doesn't really
    matter for the 64-bit EL0 case though, as vcpu_spsr() unconditionally
    uses the EL1 bank for that. However the 32-bit EL0 case gets fun, as
    that path will lead to the BUG() in vcpu_spsr32().
    
    This patch fixes the assignment order and also modifies some white
    space in order to better group pairs of lines that have strict order.
    
    Signed-off-by: Andrew Jones <drjones@redhat.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dd8ed5da54fb55cfc066d0d2f4fc33a1e1b5eee
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Jul 28 16:15:14 2016 +0200

    arm64: vmlinux.lds: make __rela_offset and __dynsym_offset ABSOLUTE
    
    commit d6732fc402c2665f61e72faf206a0268e65236e9 upstream.
    
    Due to the untyped KIMAGE_VADDR constant, the linker may not notice
    that the __rela_offset and __dynsym_offset expressions are absolute
    values (i.e., are not subject to relocation). This does not matter for
    KASLR, but it does confuse kallsyms in relative mode, since it uses
    the lowest non-absolute symbol address as the anchor point, and expects
    all other symbol addresses to be within 4 GB of it.
    
    Fix this by qualifying these expressions as ABSOLUTE() explicitly.
    
    Fixes: 0cd3defe0af4 ("arm64: kernel: perform relocation processing from ID map")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65382a2875e737fddc8916715e07aa545e16a616
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Aug 1 13:29:31 2016 +0200

    arm64: mm: avoid fdt_check_header() before the FDT is fully mapped
    
    commit 04a848106193b134741672f7e4e444b50c70b631 upstream.
    
    As reported by Zijun, the fdt_check_header() call in __fixmap_remap_fdt()
    is not safe since it is not guaranteed that the FDT header is mapped
    completely. Due to the minimum alignment of 8 bytes, the only fields we
    can assume to be mapped are 'magic' and 'totalsize'.
    
    Since the OF layer is in charge of validating the FDT image, and we are
    only interested in making reasonably sure that the size field contains
    a meaningful value, replace the fdt_check_header() call with an explicit
    comparison of the magic field's value against the expected value.
    
    Reported-by: Zijun Hu <zijun_hu@htc.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d2a967d44cc7ab0ae42b19a40c956e1686c8d5d
Author: Caesar Wang <wxt@rock-chips.com>
Date:   Wed May 18 22:41:50 2016 +0800

    arm64: dts: rockchip: fixes the gic400 2nd region size for rk3368
    
    commit ad1cfdf518976447e6b0d31517bad4e3ebbce6bb upstream.
    
    The 2nd additional region is the GIC virtual cpu interface register
    base and size.
    
    As the gic400 of rk3368 says, the cpu interface register map as below
    
    :
    
    -0x0000 GICC_CTRL
    .
    .
    .
    -0x00fc GICC_IIDR
    -0x1000 GICC_IDR
    
    Obviously, the region size should be greater than 0x1000.
    So we should make sure to include the GICC_IDR since the kernel will access
    it in some cases.
    
    Fixes: b790c2cab5ca ("arm64: dts: add Rockchip rk3368 core dtsi and board dts for the r88 board")
    Signed-off-by: Caesar Wang <wxt@rock-chips.com>
    Reviewed-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    [added Fixes and stable-cc]
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>

commit edf2ba9be7cb46f070d4c9bcd71e8ea88c730344
Author: Dan O'Donovan <dan@emutex.com>
Date:   Fri Jun 10 13:23:34 2016 +0100

    pinctrl: cherryview: prevent concurrent access to GPIO controllers
    
    commit 0bd50d719b004110e791800450ad204399100a86 upstream.
    
    Due to a silicon issue on the Atom X5-Z8000 "Cherry Trail" processor
    series, a common lock must be used to prevent concurrent accesses
    across the 4 GPIO controllers managed by this driver.
    
    See Intel Atom Z8000 Processor Series Specification Update
    (Rev. 005), errata #CHT34, for further information.
    
    Signed-off-by: Dan O'Donovan <dan@emutex.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 992cd8a125464e6150bc33b80b1cd5ef662e2470
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Sun Jun 19 23:49:57 2016 +0300

    gpio: intel-mid: switch to devm_gpiochip_add_data()
    
    commit dd3b204af11b50be6dc77e18b88b3c646bba354c upstream.
    
    The error handling is not correct since the commit 3f7dbfd8eea9 ("gpio:
    intel-mid: switch to using gpiolib irqchip helpers"). Switch to devres API to
    fix the potential resource leak.
    
    Fixes: commit 3f7dbfd8eea9 ("gpio: intel-mid: switch to using gpiolib irqchip helpers")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 039a2b49648d745caa221389f652dd18a7d244be
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Jul 6 12:50:12 2016 +0300

    gpio: intel-mid: Remove potentially harmful code
    
    commit 3dbd3212f81b2b410a34a922055e2da792864829 upstream.
    
    The commit d56d6b3d7d69 ("gpio: langwell: add Intel Merrifield support")
    doesn't look at all as a proper support for Intel Merrifield and I dare to say
    that it distorts the behaviour of the hardware.
    
    The register map is different on Intel Merrifield, i.e. only 6 out of 8
    register have the same purpose but none of them has same location in the
    address space. The current case potentially harmful to existing hardware since
    it's poking registers on wrong offsets and may set some pin to be GPIO output
    when connected hardware doesn't expect such.
    
    Besides the above GPIO and pinctrl on Intel Merrifield have been located in
    different IP blocks. The functionality has been extended as well, i.e. added
    support of level interrupts, special registers for wake capable sources and
    thus, in my opinion, requires a completele separate driver.
    
    If someone wondering the existing gpio-intel-mid.c would be converted to actual
    pinctrl (which by the fact it is now), though I wouldn't be a volunteer to do
    that.
    
    Fixes: d56d6b3d7d69 ("gpio: langwell: add Intel Merrifield support")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a0a7370c954407cd2a020fdb273683c1ed3f817
Author: Vignesh R <vigneshr@ti.com>
Date:   Thu Jun 9 11:02:04 2016 +0530

    gpio: pca953x: Fix NBANK calculation for PCA9536
    
    commit a246b8198f776a16d1d3a3bbfc2d437bad766b29 upstream.
    
    NBANK() macro assumes that ngpios is a multiple of 8(BANK_SZ) and
    hence results in 0 banks for PCA9536 which has just 4 gpios. This is
    wrong as PCA9356 has 1 bank with 4 gpios. This results in uninitialized
    PCA953X_INVERT register. Fix this by using DIV_ROUND_UP macro in
    NBANK().
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5d510e933f28e8a00856072f38f34b0c73a525a
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sat May 28 00:54:08 2016 +0200

    tty/serial: atmel: fix RS485 half duplex with DMA
    
    commit 0058f0871efe7b01c6f2b3046c68196ab73e96da upstream.
    
    When using DMA, half duplex doesn't work properly because rx is not stopped
    before starting tx. Ensure we call atmel_stop_rx() in the DMA case.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f28bd6bfdc4f57d8cee8c574603fbed6bf26ec12
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Jun 16 08:27:35 2016 +0200

    serial: samsung: Fix ERR pointer dereference on deferred probe
    
    commit e51e4d8a185de90424b03f30181b35f29c46a25a upstream.
    
    When the clk_get() of "uart" clock returns EPROBE_DEFER, the next re-probe
    finishes with success but uses invalid (ERR_PTR) values.  This leads to
    dereferencing of ERR_PTR stored under ourport->clk:
    
            12c30000.serial: Controller clock not found
            (...)
            12c30000.serial: ttySAC3 at MMIO 0x12c30000 (irq = 61, base_baud = 0) is a S3C6400/10
            Unable to handle kernel paging request at virtual address fffffdfb
    
            (clk_prepare) from [<c039f7d0>] (s3c24xx_serial_pm+0x20/0x128)
            (s3c24xx_serial_pm) from [<c0395414>] (uart_change_pm+0x38/0x40)
            (uart_change_pm) from [<c039689c>] (uart_add_one_port+0x31c/0x44c)
            (uart_add_one_port) from [<c03a035c>] (s3c24xx_serial_probe+0x2a8/0x418)
            (s3c24xx_serial_probe) from [<c03ee110>] (platform_drv_probe+0x50/0xb0)
            (platform_drv_probe) from [<c03ecb44>] (driver_probe_device+0x1f4/0x2b0)
            (driver_probe_device) from [<c03eb0c0>] (bus_for_each_drv+0x44/0x8c)
            (bus_for_each_drv) from [<c03ec8c8>] (__device_attach+0x9c/0x100)
            (__device_attach) from [<c03ebf54>] (bus_probe_device+0x84/0x8c)
            (bus_probe_device) from [<c03ec388>] (deferred_probe_work_func+0x60/0x8c)
            (deferred_probe_work_func) from [<c012fee4>] (process_one_work+0x120/0x328)
            (process_one_work) from [<c0130150>] (worker_thread+0x2c/0x4ac)
            (worker_thread) from [<c0135320>] (kthread+0xd8/0xf4)
            (kthread) from [<c0107978>] (ret_from_fork+0x14/0x3c)
    
    The first unsuccessful clk_get() causes s3c24xx_serial_init_port() to
    exit with failure but the s3c24xx_uart_port is left half-configured
    (e.g. port->mapbase is set, clk contains ERR_PTR).  On next re-probe,
    the function s3c24xx_serial_init_port() will exit early with success
    because of configured port->mapbase and driver will use old values,
    including the ERR_PTR as clock.
    
    Fix this by cleaning the port->mapbase on error path so each re-probe
    will initialize all of the port settings.
    
    Fixes: 60e93575476f ("serial: samsung: enable clock before clearing pending interrupts during init")
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Reviewed-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5db252483ceb9db3733e42bd94c3b824e2512ef
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Jun 2 17:48:28 2016 -0700

    tty: serial: msm: Don't read off end of tx fifo
    
    commit 30acf549ca1e81859a67590ab9ecfce3d1050a0b upstream.
    
    For dm uarts in pio mode tx data is transferred to the fifo register 4
    bytes at a time, but care is not taken when these 4 bytes spans the end
    of the xmit buffer so the loop might read up to 3 bytes past the buffer
    and then skip the actual data at the beginning of the buffer.
    
    Fix this by, analogous to the DMA case, make sure the chunk doesn't
    wrap the xmit buffer.
    
    Fixes: 3a878c430fd6 ("tty: serial: msm: Add TX DMA support")
    Cc: Ivan Ivanov <iivanov.xz@gmail.com>
    Reported-by: Frank Rowand <frowand.list@gmail.com>
    Reported-by: Nicolas Dechesne <nicolas.dechesne@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Acked-by: Andy Gross <andy.gross@linaro.org>
    Tested-by: Frank Rowand <frank.rowand@am.sony.com>
    Reviewed-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7092c9dfbc90749740c7a6e2909c969b72bef271
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Jul 21 11:15:27 2016 +0100

    arm64: Honor nosmp kernel command line option
    
    commit e75118a7b581b19b08282c7819c1ec6f68b91b79 upstream.
    
    Passing "nosmp" should boot the kernel with a single processor, without
    provision to enable secondary CPUs even if they are present. "nosmp" is
    implemented by setting maxcpus=0. At the moment we still mark the secondary
    CPUs present even with nosmp, which allows the userspace to bring them
    up. This patch corrects the smp_prepare_cpus() to honor the maxcpus == 0.
    
    Commit 44dbcc93ab67145 ("arm64: Fix behavior of maxcpus=N") fixed the
    behavior for maxcpus >= 1, but broke maxcpus = 0.
    
    Fixes: 44dbcc93ab67 ("arm64: Fix behavior of maxcpus=N")
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    [catalin.marinas@arm.com: updated code comment]
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60fe3fd897ca05bce786f031d3dc10643492434d
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Tue Jul 26 10:16:55 2016 -0700

    arm64: Only select ARM64_MODULE_PLTS if MODULES=y
    
    commit b9c220b589daaf140f5b8ebe502c98745b94e65c upstream.
    
    Selecting CONFIG_RANDOMIZE_BASE=y and CONFIG_MODULES=n fails to build
    the module PLTs support:
    
      CC      arch/arm64/kernel/module-plts.o
    /work/Linux/linux-2.6-aarch64/arch/arm64/kernel/module-plts.c: In function ‘module_emit_plt_entry’:
    /work/Linux/linux-2.6-aarch64/arch/arm64/kernel/module-plts.c:32:49: error: dereferencing pointer to incomplete type ‘struct module’
    
    This patch selects ARM64_MODULE_PLTS conditionally only if MODULES is
    enabled.
    
    Fixes: f80fb3a3d508 ("arm64: add support for kernel ASLR")
    Reported-by: Jeff Vander Stoep <jeffv@google.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65f1e392fc8a801a71e2b74ba14b0fdf8c3089e1
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Jul 21 11:12:55 2016 +0100

    arm64: Fix incorrect per-cpu usage for boot CPU
    
    commit 9113c2aa05e9848cd4f1154abee17d4f265f012d upstream.
    
    In smp_prepare_boot_cpu(), we invoke cpuinfo_store_boot_cpu to  store
    the cpuinfo in a per-cpu ptr, before initialising the per-cpu offset for
    the boot CPU. This patch reorders the sequence to make sure we initialise
    the per-cpu offset before accessing the per-cpu area.
    
    Commit 4b998ff1885eec ("arm64: Delay cpuinfo_store_boot_cpu") fixed the
    issue where we modified the per-cpu area even before the kernel initialises
    the per-cpu areas, but failed to wait until the boot cpu updated it's
    offset.
    
    Fixes: 4b998ff1885e ("arm64: Delay cpuinfo_store_boot_cpu")
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d367c62bcf248d987d9b5e292f3aeea5347bdfe3
Author: Will Deacon <will@kernel.org>
Date:   Tue Jul 19 15:07:37 2016 +0100

    arm64: debug: unmask PSTATE.D earlier
    
    commit 2ce39ad15182604beb6c8fa8bed5e46b59fd1082 upstream.
    
    Clearing PSTATE.D is one of the requirements for generating a debug
    exception. The arm64 booting protocol requires that PSTATE.D is set,
    since many of the debug registers (for example, the hw_breakpoint
    registers) are UNKNOWN out of reset and could potentially generate
    spurious, fatal debug exceptions in early boot code if PSTATE.D was
    clear. Once the debug registers have been safely initialised, PSTATE.D
    is cleared, however this is currently broken for two reasons:
    
    (1) The boot CPU clears PSTATE.D in a postcore_initcall and secondary
        CPUs clear PSTATE.D in secondary_start_kernel. Since the initcall
        runs after SMP (and the scheduler) have been initialised, there is
        no guarantee that it is actually running on the boot CPU. In this
        case, the boot CPU is left with PSTATE.D set and is not capable of
        generating debug exceptions.
    
    (2) In a preemptible kernel, we may explicitly schedule on the IRQ
        return path to EL1. If an IRQ occurs with PSTATE.D set in the idle
        thread, then we may schedule the kthread_init thread, run the
        postcore_initcall to clear PSTATE.D and then context switch back
        to the idle thread before returning from the IRQ. The exception
        return path will then restore PSTATE.D from the stack, and set it
        again.
    
    This patch fixes the problem by moving the clearing of PSTATE.D earlier
    to proc.S. This has the desirable effect of clearing it in one place for
    all CPUs, long before we have to worry about the scheduler or any
    exception handling. We ensure that the previous reset of MDSCR_EL1 has
    completed before unmasking the exception, so that any spurious
    exceptions resulting from UNKNOWN debug registers are not generated.
    
    Without this patch applied, the kprobes selftests have been seen to fail
    under KVM, where we end up attempting to step the OOL instruction buffer
    with PSTATE.D set and therefore fail to complete the step.
    
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reported-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 275f1d5a33d5b6886b16e31a5833ce942032d0f9
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jul 19 13:56:54 2016 +0100

    arm64: KVM: VHE: Context switch MDSCR_EL1
    
    commit 4c47eb1c18c38b755eb4894a6ca38f834de3ec23 upstream.
    
    The kprobe enablement work has uncovered that changes made by
    a guest to MDSCR_EL1 were propagated to the host when VHE was
    enabled, leading to unexpected exception being delivered.
    
    Moving this register to the list of registers that are always
    context-switched fixes the issue.
    
    Fixes: 9c6c35683286 ("arm64: KVM: VHE: Split save/restore of registers shared between guest and host")
    Reported-by: Tirumalesh Chalamarla <Tirumalesh.Chalamarla@cavium.com>
    Tested-by: Tirumalesh Chalamarla <Tirumalesh.Chalamarla@cavium.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ead2f29fd43bc1b8d625f0cb7017ea21e085184
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Jun 8 16:32:49 2016 +0900

    usb: renesas_usbhs: fix NULL pointer dereference in xfer_work()
    
    commit 4fdef698383db07d829da567e0e405fc41ff3a89 upstream.
    
    This patch fixes an issue that the xfer_work() is possible to cause
    NULL pointer dereference if the usb cable is disconnected while data
    transfer is running.
    
    In such case, a gadget driver may call usb_ep_disable()) before
    xfer_work() is actually called. In this case, the usbhs_pkt_pop()
    will call usbhsf_fifo_unselect(), and then usbhs_pipe_to_fifo()
    in xfer_work() will return NULL.
    
    Fixes: e73a989 ("usb: renesas_usbhs: add DMAEngine support")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2a474028d2bba680590635d6f31c3ff85c24d7e
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Mon Jun 6 12:38:17 2016 +0200

    USB: serial: option: add support for Telit LE910 PID 0x1206
    
    commit 3c0415fa08548e3bc63ef741762664497ab187ed upstream.
    
    This patch adds support for 0x1206 PID of Telit LE910.
    
    Since the interfaces positions are the same than the ones for
    0x1043 PID of Telit LE922, telit_le922_blacklist_usbcfg3 is used.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6272e8da9e8e475fc740b9731bf8f8727ab4cdb5
Author: Konrad Leszczynski <konrad.leszczynski@intel.com>
Date:   Mon Feb 8 16:13:12 2016 +0100

    usb: dwc3: fix for the isoc transfer EP_BUSY flag
    
    commit 9cad39fe4e4a4fe95d8ea5a7b0692b0a6e89e38b upstream.
    
    commit f3af36511e60 ("usb: dwc3: gadget: always
    enable IOC on bulk/interrupt transfers") ended up
    regressing Isochronous endpoints by clearing
    DWC3_EP_BUSY flag too early, which resulted in
    choppy audio playback over USB.
    
    Fix that by partially reverting original commit and
    making sure that we check for isochronous endpoints.
    
    Fixes: f3af36511e60 ("usb: dwc3: gadget: always enable IOC
                    on bulk/interrupt transfers")
    Signed-off-by: Konrad Leszczynski <konrad.leszczynski@intel.com>
    Signed-off-by: Rafal Redzimski <rafal.f.redzimski@intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62f122d97483f4a7de3cf5bbaa652314e5aa8417
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Wed Jul 6 21:18:51 2016 -0400

    usb: quirks: Add no-lpm quirk for Elan
    
    commit 25b1f9acc452209ae0fcc8c1332be852b5c52f53 upstream.
    
    BugLink: http://bugs.launchpad.net/bugs/1498667
    
    As reported in BugLink, this device has an issue with Linux Power
    Management so adding a quirk.  This quirk was reccomended by Alan Stern:
    
    http://lkml.iu.edu/hypermail/linux/kernel/1606.2/05590.html
    
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 918f3b0820a4b80e71f5a2c0c10bc012d57f1cd4
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Jun 8 16:32:50 2016 +0900

    usb: renesas_usbhs: protect the CFIFOSEL setting in usbhsg_ep_enable()
    
    commit 15e4292a2d21e9997fdb2b8c014cc461b3f268f0 upstream.
    
    This patch fixes an issue that the CFIFOSEL register value is possible
    to be changed by usbhsg_ep_enable() wrongly. And then, a data transfer
    using CFIFO may not work correctly.
    
    For example:
     # modprobe g_multi file=usb-storage.bin
     # ifconfig usb0 192.168.1.1 up
     (During the USB host is sending file to the mass storage)
     # ifconfig usb0 down
    
    In this case, since the u_ether.c may call usb_ep_enable() in
    eth_stop(), if the renesas_usbhs driver is also using CFIFO for
    mass storage, the mass storage may not work correctly.
    
    So, this patch adds usbhs_lock() and usbhs_unlock() calling in
    usbhsg_ep_enable() to protect CFIFOSEL register. This is because:
     - CFIFOSEL.CURPIPE = 0 is also needed for the pipe configuration
     - The CFIFOSEL (fifo->sel) is already protected by usbhs_lock()
    
    Fixes: 97664a207bc2 ("usb: renesas_usbhs: shrink spin lock area")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fa79c45e3cc3906425d54a4c7fb839c5c819e67
Author: Iago Abal <mail@iagoabal.eu>
Date:   Tue Jun 21 12:01:11 2016 +0200

    usb: gadget: pch_udc: reorder spin_[un]lock to avoid deadlock
    
    commit 1d23d16a88e6c8143b07339435ba061b131ebb8c upstream.
    
    The above commit reordered spin_lock/unlock and now `&dev->lock' is acquired
    (rather than released) before calling `dev->driver->disconnect',
    `dev->driver->setup', `dev->driver->suspend', `usb_gadget_giveback_request', and
    `usb_gadget_udc_reset'.
    
    But this *may* not be the right way to fix the problem pointed by d3cb25a12138.
    
    Note that the other usb/gadget/udc drivers do release the lock before calling
    these functions. There are also inconsistencies within pch_udc.c, where
    `dev->driver->disconnect' is called while holding `&dev->lock' in lines 613 and
    1184, but not in line 2739.
    
    Finally, commit d3cb25a12138 may have introduced several potential deadlocks.
    
    For instance, EBA (https://github.com/models-team/eba) reports:
    
        Double lock in drivers/usb/gadget/udc/pch_udc.c
        first at 2791: spin_lock(& dev->lock); [pch_udc_isr]
        second at 2694: spin_lock(& dev->lock); [pch_udc_svc_cfg_interrupt]
            after calling from 2793: pch_udc_dev_isr(dev, dev_intr);
            after calling from 2724: pch_udc_svc_cfg_interrupt(dev);
    
    Similarly, other potential deadlocks are 2791 -> 2793 -> 2721 -> 2657; and
    2791 -> 2793 -> 2711 -> 2573 -> 1499 -> 1480.
    
    Fixes: d3cb25a12138 ("usb: gadget: udc: fix spin_lock in pch_udc")
    Signed-off-by: Iago Abal <mail@iagoabal.eu>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 035753b906a2fa8a0886cd87602810c6f48e0799
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Mon Jun 13 10:47:30 2016 +0200

    usb: gadget: udc: atmel: Also get regmap for at91sam9x5-pmc
    
    commit 882bd9fc46321c9d4721b376039a142cbfe8a17a upstream.
    
    The "atmel,at91sam9g45-udc" compatible UDC is also used on at91sam9x5 so it
    is also necessary to try to get the syscon for at91sam9x5-pmc.
    
    Fixes: 4747639f01c9 ("usb: gadget: atmel: access the PMC using regmap")
    Reported-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0009bd624a5fa187ceb289c135fe7ecb2bb6378e
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Tue May 17 14:55:58 2016 +0300

    usb: dwc3: gadget: only resume USB2 PHY in <=HIGHSPEED
    
    commit ab2a92e7a608c09f13baf1730b9ba24c73c35d52 upstream.
    
    As a micro-power optimization, let's only resume the
    USB2 PHY if we're working on <=HIGHSPEED. If we're
    gonna work on SUPERSPEED or SUPERSPEED+, there's no
    point in resuming the USB2 PHY.
    
    Fixes: 2b0f11df84bb ("usb: dwc3: gadget: clear SUSPHY bit before ep cmds")
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
