commit f287634fe3211277f078092bf57dc2b2a2e38dda
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 20 10:25:50 2019 +0100

    Linux 4.19.24

commit dd5f4d067a2cdda47b9f3b6c119642a2b81edee7
Author: Sandeep Patil <sspatil@android.com>
Date:   Tue Feb 12 15:36:11 2019 -0800

    mm: proc: smaps_rollup: fix pss_locked calculation
    
    commit 27dd768ed8db48beefc4d9e006c58e7a00342bde upstream.
    
    The 'pss_locked' field of smaps_rollup was being calculated incorrectly.
    It accumulated the current pss everytime a locked VMA was found.  Fix
    that by adding to 'pss_locked' the same time as that of 'pss' if the vma
    being walked is locked.
    
    Link: http://lkml.kernel.org/r/20190203065425.14650-1-sspatil@android.com
    Fixes: 493b0e9d945f ("mm: add /proc/pid/smaps_rollup")
    Signed-off-by: Sandeep Patil <sspatil@android.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Daniel Colascione <dancol@google.com>
    Cc: <stable@vger.kernel.org>    [4.14.x, 4.19.x]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a204bd5f1e6d75de6c2e88be079c638472bee72
Author: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
Date:   Thu Feb 7 10:54:53 2019 +0200

    drm/i915: Prevent a race during I915_GEM_MMAP ioctl with WC set
    
    commit 2e7bd10e05afb866b5fb13eda25095c35d7a27cc upstream.
    
    Make sure the underlying VMA in the process address space is the
    same as it was during vm_mmap to avoid applying WC to wrong VMA.
    
    A more long-term solution would be to have vm_mmap_locked variant
    in linux/mmap.h for when caller wants to hold mmap_sem for an
    extended duration.
    
    v2:
    - Refactor the compare function
    
    Fixes: 1816f9236303 ("drm/i915: Support creation of unbound wc user mappings for objects")
    Reported-by: Adam Zabrocki <adamza@microsoft.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.0+
    Cc: Akash Goel <akash.goel@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Cc: Adam Zabrocki <adamza@microsoft.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com> #v1
    Link: https://patchwork.freedesktop.org/patch/msgid/20190207085454.10598-1-joonas.lahtinen@linux.intel.com
    (cherry picked from commit 5c4604e757ba9b193b09768d75a7d2105a5b883f)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4631e0b4cf46795793cd420fcdab09e26256d2e6
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Jan 29 14:09:59 2019 -0500

    drm/i915: Block fbdev HPD processing during suspend
    
    commit e8a8fedd57fdcebf0e4f24ef0fc7e29323df8e66 upstream.
    
    When resuming, we check whether or not any previously connected
    MST topologies are still present and if so, attempt to resume them. If
    this fails, we disable said MST topologies and fire off a hotplug event
    so that userspace knows to reprobe.
    
    However, sending a hotplug event involves calling
    drm_fb_helper_hotplug_event(), which in turn results in fbcon doing a
    connector reprobe in the caller's thread - something we can't do at the
    point in which i915 calls drm_dp_mst_topology_mgr_resume() since
    hotplugging hasn't been fully initialized yet.
    
    This currently causes some rather subtle but fatal issues. For example,
    on my T480s the laptop dock connected to it usually disappears during a
    suspend cycle, and comes back up a short while after the system has been
    resumed. This guarantees pretty much every suspend and resume cycle,
    drm_dp_mst_topology_mgr_set_mst(mgr, false); will be caused and in turn,
    a connector hotplug will occur. Now it's Rute Goldberg time: when the
    connector hotplug occurs, i915 reprobes /all/ of the connectors,
    including eDP. However, eDP probing requires that we power on the panel
    VDD which in turn, grabs a wakeref to the appropriate power domain on
    the GPU (on my T480s, this is the PORT_DDI_A_IO domain). This is where
    things start breaking, since this all happens before
    intel_power_domains_enable() is called we end up leaking the wakeref
    that was acquired and never releasing it later. Come next suspend/resume
    cycle, this causes us to fail to shut down the GPU properly, which
    causes it not to resume properly and die a horrible complicated death.
    
    (as a note: this only happens when there's both an eDP panel and MST
    topology connected which is removed mid-suspend. One or the other seems
    to always be OK).
    
    We could try to fix the VDD wakeref leak, but this doesn't seem like
    it's worth it at all since we aren't able to handle hotplug detection
    while resuming anyway. So, let's go with a more robust solution inspired
    by nouveau: block fbdev from handling hotplug events until we resume
    fbdev. This allows us to still send sysfs hotplug events to be handled
    later by user space while we're resuming, while also preventing us from
    actually processing any hotplug events we receive until it's safe.
    
    This fixes the wakeref leak observed on the T480s and as such, also
    fixes suspend/resume with MST topologies connected on this machine.
    
    Changes since v2:
    * Don't call drm_fb_helper_hotplug_event() under lock, do it after lock
      (Chris Wilson)
    * Don't call drm_fb_helper_hotplug_event() in
      intel_fbdev_output_poll_changed() under lock (Chris Wilson)
    * Always set ifbdev->hpd_waiting (Chris Wilson)
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 0e32b39ceed6 ("drm/i915: add DP 1.2 MST support (v0.7)")
    Cc: Todd Previte <tprevite@gmail.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v3.17+
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190129191001.442-2-lyude@redhat.com
    (cherry picked from commit fe5ec65668cdaa4348631d8ce1766eed43b33c10)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de48b5f3d0ef74baebe61d68919f1cb833070be7
Author: Rodrigo Siqueira <rodrigosiqueiramelo@gmail.com>
Date:   Wed Feb 6 12:01:16 2019 -0200

    drm/vkms: Fix license inconsistent
    
    commit 7fd56e0260a22c0cfaf9adb94a2427b76e239dd0 upstream.
    
    Fixes license inconsistent related to the VKMS driver and remove the
    redundant boilerplate comment.
    
    Fixes: 854502fa0a38 ("drm/vkms: Add basic CRTC initialization")
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Rodrigo Siqueira <rodrigosiqueiramelo@gmail.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190206140116.7qvy2lpwbcd7wds6@smtp.gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3312e0ae2faf4336e9549f13ec0671ec263f4b40
Author: Matthew Wilcox <willy@infradead.org>
Date:   Thu Feb 14 11:03:48 2019 -0800

    drm: Use array_size() when creating lease
    
    commit 69ef943dbc14b21987c79f8399ffea08f9a1b446 upstream.
    
    Passing an object_count of sufficient size will make
    object_count * 4 wrap around to be very small, then a later function
    will happily iterate off the end of the object_ids array.  Using
    array_size() will saturate at SIZE_MAX, the kmalloc() will fail and
    we'll return an -ENOMEM to the norty userspace.
    
    Fixes: 62884cd386b8 ("drm: Add four ioctls for managing drm mode object leases [v7]")
    Signed-off-by: Matthew Wilcox <willy@infradead.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.15+
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 029a38f8211fb966a6902e32a31967451aa0e9c5
Author: Nikos Tsironis <ntsironis@arrikto.com>
Date:   Thu Feb 14 20:38:47 2019 +0200

    dm thin: fix bug where bio that overwrites thin block ignores FUA
    
    commit 4ae280b4ee3463fa57bbe6eede26b97daff8a0f1 upstream.
    
    When provisioning a new data block for a virtual block, either because
    the block was previously unallocated or because we are breaking sharing,
    if the whole block of data is being overwritten the bio that triggered
    the provisioning is issued immediately, skipping copying or zeroing of
    the data block.
    
    When this bio completes the new mapping is inserted in to the pool's
    metadata by process_prepared_mapping(), where the bio completion is
    signaled to the upper layers.
    
    This completion is signaled without first committing the metadata.  If
    the bio in question has the REQ_FUA flag set and the system crashes
    right after its completion and before the next metadata commit, then the
    write is lost despite the REQ_FUA flag requiring that I/O completion for
    this request must only be signaled after the data has been committed to
    non-volatile storage.
    
    Fix this by deferring the completion of overwrite bios, with the REQ_FUA
    flag set, until after the metadata has been committed.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Nikos Tsironis <ntsironis@arrikto.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Acked-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ec93eb3808feb14afb965f2095a17a6398af6a6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Feb 8 10:52:07 2019 -0500

    dm crypt: don't overallocate the integrity tag space
    
    commit ff0c129d3b5ecb3df7c8f5e2236582bf745b6c5f upstream.
    
    bio_sectors() returns the value in the units of 512-byte sectors (no
    matter what the real sector size of the device).  dm-crypt multiplies
    bio_sectors() by on_disk_tag_size to calculate the space allocated for
    integrity tags.  If dm-crypt is running with sector size larger than
    512b, it allocates more data than is needed.
    
    Device Mapper trims the extra space when passing the bio to
    dm-integrity, so this bug didn't result in any visible misbehavior.
    But it must be fixed to avoid wasteful memory allocation for the block
    integrity payload.
    
    Fixes: ef43aa38063a6 ("dm crypt: add cryptographic data integrity protection (authenticated encryption)")
    Cc: stable@vger.kernel.org # 4.12+
    Reported-by: Milan Broz <mbroz@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2778ef8b9069f1402beec00f5ebd27b95debe14
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Feb 12 14:28:03 2019 +0100

    x86/a.out: Clear the dump structure initially
    
    commit 10970e1b4be9c74fce8ab6e3c34a7d718f063f2c upstream.
    
    dump_thread32() in aout_core_dump() does not clear the user32 structure
    allocated on the stack as the first thing on function entry.
    
    As a result, the dump.u_comm, dump.u_ar0 and dump.signal which get
    assigned before the clearing, get overwritten.
    
    Rename that function to fill_dump() to make it clear what it does and
    call it first thing.
    
    This was caught while staring at a patch by Derek Robson
    <robsonde@gmail.com>.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Derek Robson <robsonde@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Michael Matz <matz@suse.de>
    Cc: x86@kernel.org
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20190202005512.3144-1-robsonde@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddf966410acecb1cbdf06d0a79a41b6e664aeb44
Author: Nate Dailey <nate.dailey@stratus.com>
Date:   Thu Feb 7 14:19:01 2019 -0500

    md/raid1: don't clear bitmap bits on interrupted recovery.
    
    commit dfcc34c99f3ebc16b787b118763bf9cb6b1efc7a upstream.
    
    sync_request_write no longer submits writes to a Faulty device. This has
    the unfortunate side effect that bitmap bits can be incorrectly cleared
    if a recovery is interrupted (previously, end_sync_write would have
    prevented this). This means the next recovery may not copy everything
    it should, potentially corrupting data.
    
    Add a function for doing the proper md_bitmap_end_sync, called from
    end_sync_write and the Faulty case in sync_request_write.
    
    backport note to 4.14: s/md_bitmap_end_sync/bitmap_end_sync
    Cc: stable@vger.kernel.org 4.14+
    Fixes: 0c9d5b127f69 ("md/raid1: avoid reusing a resync bio after error handling.")
    Reviewed-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Tested-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Nate Dailey <nate.dailey@stratus.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2b3e2c0f576901a83b38bf8a48169a0e577290a
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Feb 11 23:27:42 2019 -0600

    signal: Restore the stop PTRACE_EVENT_EXIT
    
    commit cf43a757fd49442bc38f76088b70c2299eed2c2f upstream.
    
    In the middle of do_exit() there is there is a call
    "ptrace_event(PTRACE_EVENT_EXIT, code);" That call places the process
    in TACKED_TRACED aka "(TASK_WAKEKILL | __TASK_TRACED)" and waits for
    for the debugger to release the task or SIGKILL to be delivered.
    
    Skipping past dequeue_signal when we know a fatal signal has already
    been delivered resulted in SIGKILL remaining pending and
    TIF_SIGPENDING remaining set.  This in turn caused the
    scheduler to not sleep in PTACE_EVENT_EXIT as it figured
    a fatal signal was pending.  This also caused ptrace_freeze_traced
    in ptrace_check_attach to fail because it left a per thread
    SIGKILL pending which is what fatal_signal_pending tests for.
    
    This difference in signal state caused strace to report
    strace: Exit of unknown pid NNNNN ignored
    
    Therefore update the signal handling state like dequeue_signal
    would when removing a per thread SIGKILL, by removing SIGKILL
    from the per thread signal mask and clearing TIF_SIGPENDING.
    
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Ivan Delalande <colona@arista.com>
    Cc: stable@vger.kernel.org
    Fixes: 35634ffa1751 ("signal: Always notice exiting tasks")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0396cf55657c67ad5aba567e5eca2e1f81d19cd7
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Tue Feb 12 08:05:25 2019 -0800

    scsi: sd: fix entropy gathering for most rotational disks
    
    commit e4a056987c86f402f1286e050b1dee3f4ce7c7eb upstream.
    
    The problem is that the default for MQ is not to gather entropy, whereas
    the default for the legacy queue was always to gather it.  The original
    attempt to fix entropy gathering for rotational disks under MQ added an
    else branch in sd_read_block_characteristics().  Unfortunately, the entire
    check isn't reached if the device has no characteristics VPD page.  Since
    this page was only introduced in SBC-3 and its optional anyway, most less
    expensive rotational disks don't have one, meaning they all stopped
    gathering entropy when we made MQ the default.  In a wholly unrelated
    change, openssl and openssh won't function until the random number
    generator is initialised, meaning lots of people have been seeing large
    delays before they could log into systems with default MQ kernels due to
    this lack of entropy, because it now can take tens of minutes to initialise
    the kernel random number generator.
    
    The fix is to set the non-rotational and add-randomness flags
    unconditionally early on in the disk initialization path, so they can be
    reset only if the device actually reports being non-rotational via the VPD
    page.
    
    Reported-by: Mikael Pettersson <mikpelinux@gmail.com>
    Fixes: 83e32a591077 ("scsi: sd: Contribute to randomness when running rotational device")
    Cc: stable@vger.kernel.org
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Xuewei Zhang <xueweiz@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdc356855685e52c23d208fdd49308da1d545f91
Author: Hedi Berriche <hedi.berriche@hpe.com>
Date:   Wed Feb 13 19:34:13 2019 +0000

    x86/platform/UV: Use efi_runtime_lock to serialise BIOS calls
    
    commit f331e766c4be33f4338574f3c9f7f77e98ab4571 upstream.
    
    Calls into UV firmware must be protected against concurrency, expose the
    efi_runtime_lock to the UV platform, and use it to serialise UV BIOS
    calls.
    
    Signed-off-by: Hedi Berriche <hedi.berriche@hpe.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Russ Anderson <rja@hpe.com>
    Reviewed-by: Dimitri Sivanich <sivanich@hpe.com>
    Reviewed-by: Mike Travis <mike.travis@hpe.com>
    Cc: Andy Shevchenko <andy@infradead.org>
    Cc: Bhupesh Sharma <bhsharma@redhat.com>
    Cc: Darren Hart <dvhart@infradead.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: linux-efi <linux-efi@vger.kernel.org>
    Cc: platform-driver-x86@vger.kernel.org
    Cc: stable@vger.kernel.org # v4.9+
    Cc: Steve Wahl <steve.wahl@hpe.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20190213193413.25560-5-hedi.berriche@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45649b999632ab7ef13b6b93e837f35107cbe240
Author: Andreas Ziegler <andreas.ziegler@fau.de>
Date:   Wed Jan 16 15:16:29 2019 +0100

    tracing/uprobes: Fix output for multiple string arguments
    
    commit 0722069a5374b904ec1a67f91249f90e1cfae259 upstream.
    
    When printing multiple uprobe arguments as strings the output for the
    earlier arguments would also include all later string arguments.
    
    This is best explained in an example:
    
    Consider adding a uprobe to a function receiving two strings as
    parameters which is at offset 0xa0 in strlib.so and we want to print
    both parameters when the uprobe is hit (on x86_64):
    
    $ echo 'p:func /lib/strlib.so:0xa0 +0(%di):string +0(%si):string' > \
        /sys/kernel/debug/tracing/uprobe_events
    
    When the function is called as func("foo", "bar") and we hit the probe,
    the trace file shows a line like the following:
    
      [...] func: (0x7f7e683706a0) arg1="foobar" arg2="bar"
    
    Note the extra "bar" printed as part of arg1. This behaviour stacks up
    for additional string arguments.
    
    The strings are stored in a dynamically growing part of the uprobe
    buffer by fetch_store_string() after copying them from userspace via
    strncpy_from_user(). The return value of strncpy_from_user() is then
    directly used as the required size for the string. However, this does
    not take the terminating null byte into account as the documentation
    for strncpy_from_user() cleary states that it "[...] returns the
    length of the string (not including the trailing NUL)" even though the
    null byte will be copied to the destination.
    
    Therefore, subsequent calls to fetch_store_string() will overwrite
    the terminating null byte of the most recently fetched string with
    the first character of the current string, leading to the
    "accumulation" of strings in earlier arguments in the output.
    
    Fix this by incrementing the return value of strncpy_from_user() by
    one if we did not hit the maximum buffer size.
    
    Link: http://lkml.kernel.org/r/20190116141629.5752-1-andreas.ziegler@fau.de
    
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: 5baaa59ef09e ("tracing/probes: Implement 'memory' fetch method for uprobes")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Andreas Ziegler <andreas.ziegler@fau.de>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88e1e66a2a1a1ef221fee633e099acd2eaa7e55c
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Wed Jan 23 13:41:35 2019 +0100

    s390/zcrypt: fix specification exception on z196 during ap probe
    
    commit 8f9aca0c45322a807a343fc32f95f2500f83b9ae upstream.
    
    The older machines don't have the QCI instruction available.
    With support for up to 256 crypto cards the probing of each
    card has been extended to check card ids from 0 up to 255.
    For machines with QCI support there is a filter limiting the
    range of probed cards. The older machines (z196 and older)
    don't have this filter and so since support for 256 cards is
    in the driver all cards are probed. However, these machines
    also require to have the card id fit into 6 bits. Exceeding
    this limit results in a specification exception which happens
    on every kernel startup even when there is no crypto configured
    and used at all.
    
    This fix limits the range of probed crypto cards to 64 if
    there is no QCI instruction available to obey to the older
    ap architecture and so fixes the specification exceptions
    on z196 machines.
    
    Cc: stable@vger.kernel.org # v4.17+
    Fixes: af4a72276d49 ("s390/zcrypt: Support up to 256 crypto adapters.")
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3fadeff71221781ac37cc0ed2cf6a436e6b5091
Author: Meelis Roos <mroos@linux.ee>
Date:   Fri Oct 12 12:27:51 2018 +0300

    alpha: Fix Eiger NR_IRQS to 128
    
    commit bfc913682464f45bc4d6044084e370f9048de9d5 upstream.
    
    Eiger machine vector definition has nr_irqs 128, and working 2.6.26
    boot shows SCSI getting IRQ-s 64 and 65. Current kernel boot fails
    because Symbios SCSI fails to request IRQ-s and does not find the disks.
    It has been broken at least since 3.18 - the earliest I could test with
    my gcc-5.
    
    The headers have moved around and possibly another order of defines has
    worked in the past - but since 128 seems to be correct and used, fix
    arch/alpha/include/asm/irq.h to have NR_IRQS=128 for Eiger.
    
    This fixes 4.19-rc7 boot on my Force Flexor A264 (Eiger subarch).
    
    Cc: stable@vger.kernel.org # v3.18+
    Signed-off-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c56eef69ba249382f4d0ffa47e14387a192b5f70
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Mon Dec 31 11:53:55 2018 +0000

    alpha: fix page fault handling for r16-r18 targets
    
    commit 491af60ffb848b59e82f7c9145833222e0bf27a5 upstream.
    
    Fix page fault handling code to fixup r16-r18 registers.
    Before the patch code had off-by-two registers bug.
    This bug caused overwriting of ps,pc,gp registers instead
    of fixing intended r16,r17,r18 (see `struct pt_regs`).
    
    More details:
    
    Initially Dmitry noticed a kernel bug as a failure
    on strace test suite. Test passes unmapped userspace
    pointer to io_submit:
    
    ```c
        #include <err.h>
        #include <unistd.h>
        #include <sys/mman.h>
        #include <asm/unistd.h>
        int main(void)
        {
            unsigned long ctx = 0;
            if (syscall(__NR_io_setup, 1, &ctx))
                err(1, "io_setup");
            const size_t page_size = sysconf(_SC_PAGESIZE);
            const size_t size = page_size * 2;
            void *ptr = mmap(NULL, size, PROT_READ | PROT_WRITE,
                             MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
            if (MAP_FAILED == ptr)
                err(1, "mmap(%zu)", size);
            if (munmap(ptr, size))
                err(1, "munmap");
            syscall(__NR_io_submit, ctx, 1, ptr + page_size);
            syscall(__NR_io_destroy, ctx);
            return 0;
        }
    ```
    
    Running this test causes kernel to crash when handling page fault:
    
    ```
        Unable to handle kernel paging request at virtual address ffffffffffff9468
        CPU 3
        aio(26027): Oops 0
        pc = [<fffffc00004eddf8>]  ra = [<fffffc00004edd5c>]  ps = 0000    Not tainted
        pc is at sys_io_submit+0x108/0x200
        ra is at sys_io_submit+0x6c/0x200
        v0 = fffffc00c58e6300  t0 = fffffffffffffff2  t1 = 000002000025e000
        t2 = fffffc01f159fef8  t3 = fffffc0001009640  t4 = fffffc0000e0f6e0
        t5 = 0000020001002e9e  t6 = 4c41564e49452031  t7 = fffffc01f159c000
        s0 = 0000000000000002  s1 = 000002000025e000  s2 = 0000000000000000
        s3 = 0000000000000000  s4 = 0000000000000000  s5 = fffffffffffffff2
        s6 = fffffc00c58e6300
        a0 = fffffc00c58e6300  a1 = 0000000000000000  a2 = 000002000025e000
        a3 = 00000200001ac260  a4 = 00000200001ac1e8  a5 = 0000000000000001
        t8 = 0000000000000008  t9 = 000000011f8bce30  t10= 00000200001ac440
        t11= 0000000000000000  pv = fffffc00006fd320  at = 0000000000000000
        gp = 0000000000000000  sp = 00000000265fd174
        Disabling lock debugging due to kernel taint
        Trace:
        [<fffffc0000311404>] entSys+0xa4/0xc0
    ```
    
    Here `gp` has invalid value. `gp is s overwritten by a fixup for the
    following page fault handler in `io_submit` syscall handler:
    
    ```
        __se_sys_io_submit
        ...
            ldq     a1,0(t1)
            bne     t0,4280 <__se_sys_io_submit+0x180>
    ```
    
    After a page fault `t0` should contain -EFALUT and `a1` is 0.
    Instead `gp` was overwritten in place of `a1`.
    
    This happens due to a off-by-two bug in `dpf_reg()` for `r16-r18`
    (aka `a0-a2`).
    
    I think the bug went unnoticed for a long time as `gp` is one
    of scratch registers. Any kernel function call would re-calculate `gp`.
    
    Dmitry tracked down the bug origin back to 2.1.32 kernel version
    where trap_a{0,1,2} fields were inserted into struct pt_regs.
    And even before that `dpf_reg()` contained off-by-one error.
    
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: linux-alpha@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Reported-and-reviewed-by: "Dmitry V. Levin" <ldv@altlinux.org>
    Cc: stable@vger.kernel.org # v2.1.32+
    Bug: https://bugs.gentoo.org/672040
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 657fbf79a88019807202c849561a25773711e84b
Author: Dave Chinner <dchinner@redhat.com>
Date:   Tue Feb 12 15:35:55 2019 -0800

    Revert "mm: slowly shrink slabs with a relatively small number of objects"
    
    commit a9a238e83fbb0df31c3b9b67003f8f9d1d1b6c96 upstream.
    
    This reverts commit 172b06c32b9497 ("mm: slowly shrink slabs with a
    relatively small number of objects").
    
    This change changes the agressiveness of shrinker reclaim, causing small
    cache and low priority reclaim to greatly increase scanning pressure on
    small caches.  As a result, light memory pressure has a disproportionate
    affect on small caches, and causes large caches to be reclaimed much
    faster than previously.
    
    As a result, it greatly perturbs the delicate balance of the VFS caches
    (dentry/inode vs file page cache) such that the inode/dentry caches are
    reclaimed much, much faster than the page cache and this drives us into
    several other caching imbalance related problems.
    
    As such, this is a bad change and needs to be reverted.
    
    [ Needs some massaging to retain the later seekless shrinker
      modifications.]
    
    Link: http://lkml.kernel.org/r/20190130041707.27750-3-david@fromorbit.com
    Fixes: 172b06c32b9497 ("mm: slowly shrink slabs with a relatively small number of objects")
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Cc: Wolfgang Walter <linux@stwm.de>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Spock <dairinin@gmail.com>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d485d3a628bb46a86f232d9960ef64533aaf29d
Author: Dave Chinner <dchinner@redhat.com>
Date:   Tue Feb 12 15:35:51 2019 -0800

    Revert "mm: don't reclaim inodes with many attached pages"
    
    commit 69056ee6a8a3d576ed31e38b3b14c70d6c74edcc upstream.
    
    This reverts commit a76cf1a474d7d ("mm: don't reclaim inodes with many
    attached pages").
    
    This change causes serious changes to page cache and inode cache
    behaviour and balance, resulting in major performance regressions when
    combining worklaods such as large file copies and kernel compiles.
    
      https://bugzilla.kernel.org/show_bug.cgi?id=202441
    
    This change is a hack to work around the problems introduced by changing
    how agressive shrinkers are on small caches in commit 172b06c32b94 ("mm:
    slowly shrink slabs with a relatively small number of objects").  It
    creates more problems than it solves, wasn't adequately reviewed or
    tested, so it needs to be reverted.
    
    Link: http://lkml.kernel.org/r/20190130041707.27750-2-david@fromorbit.com
    Fixes: a76cf1a474d7d ("mm: don't reclaim inodes with many attached pages")
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Cc: Wolfgang Walter <linux@stwm.de>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Spock <dairinin@gmail.com>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93769fef8d6122285b94b13fc8872847182f5440
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Feb 14 12:33:19 2019 -0500

    Revert "nfsd4: return default lease period"
    
    commit 3bf6b57ec2ec945e5a6edf5c202a754f1e852ecd upstream.
    
    This reverts commit d6ebf5088f09472c1136cd506bdc27034a6763f8.
    
    I forgot that the kernel's default lease period should never be
    decreased!
    
    After a kernel upgrade, the kernel has no way of knowing on its own what
    the previous lease time was.  Unless userspace tells it otherwise, it
    will assume the previous lease period was the same.
    
    So if we decrease this value in a kernel upgrade, we end up enforcing a
    grace period that's too short, and clients will fail to reclaim state in
    time.  Symptoms may include EIO and log messages like "NFS:
    nfs4_reclaim_open_state: Lock reclaim failed!"
    
    There was no real justification for the lease period decrease anyway.
    
    Reported-by: Donald Buczek <buczek@molgen.mpg.de>
    Fixes: d6ebf5088f09 "nfsd4: return default lease period"
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f4ddaa71f7fa135f232e1df82d1ced314c3cdc
Author: Matti Kurkela <Matti.Kurkela@iki.fi>
Date:   Thu Feb 7 23:49:23 2019 -0800

    Input: elantech - enable 3rd button support on Fujitsu CELSIUS H780
    
    commit e8b22d0a329f0fb5c7ef95406872d268f01ee3b1 upstream.
    
    Like Fujitsu CELSIUS H760, the H780 also has a three-button Elantech
    touchpad, but the driver needs to be told so to enable the middle touchpad
    button.
    
    The elantech_dmi_force_crc_enabled quirk was not necessary with the H780.
    
    Also document the fw_version and caps values detected for both H760 and
    H780 models.
    
    Signed-off-by: Matti Kurkela <Matti.Kurkela@iki.fi>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bd120956db2d373bbe5adbc3935614bedbec178
Author: Jonathan Bakker <xc-racer2@live.ca>
Date:   Wed Feb 6 10:45:37 2019 -0800

    Input: bma150 - register input device after setting private data
    
    commit 90cc55f067f6ca0e64e5e52883ece47d8af7b67b upstream.
    
    Otherwise we introduce a race condition where userspace can request input
    before we're ready leading to null pointer dereference such as
    
    input: bma150 as /devices/platform/i2c-gpio-2/i2c-5/5-0038/input/input3
    Unable to handle kernel NULL pointer dereference at virtual address 00000018
    pgd = (ptrval)
    [00000018] *pgd=55dac831, *pte=00000000, *ppte=00000000
    Internal error: Oops: 17 [#1] PREEMPT ARM
    Modules linked in: bma150 input_polldev [last unloaded: bma150]
    CPU: 0 PID: 2870 Comm: accelerometer Not tainted 5.0.0-rc3-dirty #46
    Hardware name: Samsung S5PC110/S5PV210-based board
    PC is at input_event+0x8/0x60
    LR is at bma150_report_xyz+0x9c/0xe0 [bma150]
    pc : [<80450f70>]    lr : [<7f0a614c>]    psr: 800d0013
    sp : a4c1fd78  ip : 00000081  fp : 00020000
    r10: 00000000  r9 : a5e2944c  r8 : a7455000
    r7 : 00000016  r6 : 00000101  r5 : a7617940  r4 : 80909048
    r3 : fffffff2  r2 : 00000000  r1 : 00000003  r0 : 00000000
    Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    Control: 10c5387d  Table: 54e34019  DAC: 00000051
    Process accelerometer (pid: 2870, stack limit = 0x(ptrval))
    Stackck: (0xa4c1fd78 to 0xa4c20000)
    fd60:                                                       fffffff3 fc813f6c
    fd80: 40410581 d7530ce3 a5e2817c a7617f00 a5e29404 a5e2817c 00000000 7f008324
    fda0: a5e28000 8044f59c a5fdd9d0 a5e2945c a46a4a00 a5e29668 a7455000 80454f10
    fdc0: 80909048 a5e29668 a5fdd9d0 a46a4a00 806316d0 00000000 a46a4a00 801df5f0
    fde0: 00000000 d7530ce3 a4c1fec0 a46a4a00 00000000 a5fdd9d0 a46a4a08 801df53c
    fe00: 00000000 801d74bc a4c1fec0 00000000 a4c1ff70 00000000 a7038da8 00000000
    fe20: a46a4a00 801e91fc a411bbe0 801f2e88 00000004 00000000 80909048 00000041
    fe40: 00000000 00020000 00000000 dead4ead a6a88da0 00000000 ffffe000 806fcae8
    fe60: a4c1fec8 00000000 80909048 00000002 a5fdd9d0 a7660110 a411bab0 00000001
    fe80: dead4ead ffffffff ffffffff a4c1fe8c a4c1fe8c d7530ce3 20000013 80909048
    fea0: 80909048 a4c1ff70 00000001 fffff000 a4c1e000 00000005 00026038 801eabd8
    fec0: a7660110 a411bab0 b9394901 00000006 a696201b 76fb3000 00000000 a7039720
    fee0: a5fdd9d0 00000101 00000002 00000096 00000000 00000000 00000000 a4c1ff00
    ff00: a6b310f4 805cb174 a6b310f4 00000010 00000fe0 00000010 a4c1e000 d7530ce3
    ff20: 00000003 a5f41400 a5f41424 00000000 a6962000 00000000 00000003 00000002
    ff40: ffffff9c 000a0000 80909048 d7530ce3 a6962000 00000003 80909048 ffffff9c
    ff60: a6962000 801d890c 00000000 00000000 00020000 a7590000 00000004 00000100
    ff80: 00000001 d7530ce3 000288b8 00026320 000288b8 00000005 80101204 a4c1e000
    ffa0: 00000005 80101000 000288b8 00026320 000288b8 000a0000 00000000 00000000
    ffc0: 000288b8 00026320 000288b8 00000005 7eef3bac 000264e8 00028ad8 00026038
    ffe0: 00000005 7eef3300 76f76e91 76f78546 800d0030 000288b8 00000000 00000000
    [<80450f70>] (input_event) from [<a5e2817c>] (0xa5e2817c)
    Code: e1a08148 eaffffa8 e351001f 812fff1e (e590c018)
    ---[ end trace 1c691ee85f2ff243 ]---
    
    Signed-off-by: Jonathan Bakker <xc-racer2@live.ca>
    Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4609e81e0b71b6b1ce3b55be9b00bad4c92dd46
Author: Zachary Hays <zhays@lexmark.com>
Date:   Thu Feb 7 10:03:08 2019 -0500

    mmc: block: handle complete_work on separate workqueue
    
    commit dcf6e2e38a1c7ccbc535de5e1d9b14998847499d upstream.
    
    The kblockd workqueue is created with the WQ_MEM_RECLAIM flag set.
    This generates a rescuer thread for that queue that will trigger when
    the CPU is under heavy load and collect the uncompleted work.
    
    In the case of mmc, this creates the possibility of a deadlock when
    there are multiple partitions on the device as other blk-mq work is
    also run on the same queue. For example:
    
    - worker 0 claims the mmc host to work on partition 1
    - worker 1 attempts to claim the host for partition 2 but has to wait
      for worker 0 to finish
    - worker 0 schedules complete_work to release the host
    - rescuer thread is triggered after time-out and collects the dangling
      work
    - rescuer thread attempts to complete the work in order starting with
      claim host
    - the task to release host is now blocked by a task to claim it and
      will never be called
    
    The above results in multiple hung tasks that lead to failures to
    mount partitions.
    
    Handling complete_work on a separate workqueue avoids this by keeping
    the work completion tasks separate from the other blk-mq work. This
    allows the host to be released without getting blocked by other tasks
    attempting to claim the host.
    
    Signed-off-by: Zachary Hays <zhays@lexmark.com>
    Fixes: 81196976ed94 ("mmc: block: Add blk-mq support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 248a2f3cbebe36f1ea2ac32f1e58d2d57f9f9fdd
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Tue Feb 5 23:42:24 2019 +0800

    mmc: sunxi: Filter out unsupported modes declared in the device tree
    
    commit d6f11e7d91f2ac85f66194fe3ef8789b49901d64 upstream.
    
    The MMC device tree bindings include properties used to signal various
    signalling speed modes. Until now the sunxi driver was accepting them
    without any further filtering, while the sunxi device trees were not
    actually using them.
    
    Since some of the H5 boards can not run at higher speed modes stably,
    we are resorting to declaring the higher speed modes per-board.
    
    Regardless, having boards declare modes and blindly following them,
    even without proper support in the driver, is generally a bad thing.
    
    Filter out all unsupported modes from the capabilities mask after
    the device tree properties have been parsed.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d41c03c41ec82e1eeeeff88fae59d186c60d5d9
Author: Xiaoyao Li <xiaoyao.li@linux.intel.com>
Date:   Thu Feb 14 12:08:58 2019 +0800

    kvm: vmx: Fix entry number check for add_atomic_switch_msr()
    
    commit 98ae70cc476e833332a2c6bb72f941a25f0de226 upstream.
    
    Commit ca83b4a7f2d068da79a0 ("x86/KVM/VMX: Add find_msr() helper function")
    introduces the helper function find_msr(), which returns -ENOENT when
    not find the msr in vmx->msr_autoload.guest/host. Correct checking contion
    of no more available entry in vmx->msr_autoload.
    
    Fixes: ca83b4a7f2d0 ("x86/KVM/VMX: Add find_msr() helper function")
    Cc: stable@vger.kernel.org
    Signed-off-by: Xiaoyao Li <xiaoyao.li@linux.intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c58f010bebfd4e1a862b43fce0a608d862fa785f
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Thu Feb 7 11:42:14 2019 +0100

    x86/kvm/nVMX: read from MSR_IA32_VMX_PROCBASED_CTLS2 only when it is available
    
    commit 6b1971c694975e49af302229202c0043568b1791 upstream.
    
    SDM says MSR_IA32_VMX_PROCBASED_CTLS2 is only available "If
    (CPUID.01H:ECX.[5] && IA32_VMX_PROCBASED_CTLS[63])". It was found that
    some old cpus (namely "Intel(R) Core(TM)2 CPU 6600 @ 2.40GHz (family: 0x6,
    model: 0xf, stepping: 0x6") don't have it. Add the missing check.
    
    Reported-by: Zdenek Kaspar <zkaspar82@gmail.com>
    Tested-by: Zdenek Kaspar <zkaspar82@gmail.com>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ab1483852b3502235c3496c09ecbc5808bdecf8
Author: Stefan O'Rear <sorear2@gmail.com>
Date:   Sun Dec 16 13:03:36 2018 -0500

    riscv: Add pte bit to distinguish swap from invalid
    
    commit e3613bb8afc2a9474c9214d65c8326c5ac02135e upstream.
    
    Previously, invalid PTEs and swap PTEs had the same binary
    representation, causing errors when attempting to unmap PROT_NONE
    mappings, including implicit unmap on exit.
    
    Typical error:
    
    swap_info_get: Bad swap file entry 40000000007a9879
    BUG: Bad page map in process a.out  pte:3d4c3cc0 pmd:3e521401
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan O'Rear <sorear2@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22d6e72bb566880b37058587f504a7884ea4192f
Author: Bob Tracy <rct@frus.com>
Date:   Mon Jan 21 21:09:14 2019 -0800

    tools uapi: fix Alpha support
    
    commit 842fc0f5dc5c9f9bd91f891554996d903c40cf35 upstream.
    
    Cc: stable@vger.kernel.org # v4.18+
    Signed-off-by: Bob Tracy <rct@frus.com>
    Signed-off-by: Matt Turner <mattst88@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49720ef58e8918c12ea7dc4ee090b0e57694d346
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Jan 17 17:32:05 2019 +0000

    ASoC: hdmi-codec: fix oops on re-probe
    
    commit 0ce23d6d42147a692768e6baaaa3db75c44f4235 upstream.
    
    hdmi-codec oopses the kernel when it is unbound from a successfully
    bound audio subsystem, and is then rebound:
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000001c
    pgd = ee3f0000
    [0000001c] *pgd=3cc59831
    Internal error: Oops: 817 [#1] PREEMPT ARM
    Modules linked in: ext2 snd_soc_spdif_tx vmeta dove_thermal snd_soc_kirkwood ofpart marvell_cesa m25p80 orion_wdt mtd spi_nor des_generic gpio_ir_recv snd_soc_kirkwood_spdif bmm_dmabuf auth_rpcgss nfsd autofs4 etnaviv thermal_sys hwmon gpu_sched tda9950
    CPU: 0 PID: 1005 Comm: bash Not tainted 4.20.0+ #1762
    Hardware name: Marvell Dove (Cubox)
    PC is at hdmi_dai_probe+0x68/0x80
    LR is at find_held_lock+0x20/0x94
    pc : [<c04c7de0>]    lr : [<c0063bf4>]    psr: 600f0013
    sp : ee15bd28  ip : eebd8b1c  fp : c093b488
    r10: ee048000  r9 : eebdab18  r8 : ee048600
    r7 : 00000001  r6 : 00000000  r5 : 00000000  r4 : ee82c100
    r3 : 00000006  r2 : 00000001  r1 : c067e38c  r0 : ee82c100
    Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none[  297.318599] Control: 10c5387d  Table: 2e3f0019  DAC: 00000051
    Process bash (pid: 1005, stack limit = 0xee15a248)
    ...
    [<c04c7de0>] (hdmi_dai_probe) from [<c04b7060>] (soc_probe_dai.part.9+0x34/0x70)
    [<c04b7060>] (soc_probe_dai.part.9) from [<c04b81a8>] (snd_soc_instantiate_card+0x734/0xc9c)
    [<c04b81a8>] (snd_soc_instantiate_card) from [<c04b8b6c>] (snd_soc_add_component+0x29c/0x378)
    [<c04b8b6c>] (snd_soc_add_component) from [<c04b8c8c>] (snd_soc_register_component+0x44/0x54)
    [<c04b8c8c>] (snd_soc_register_component) from [<c04c64b4>] (devm_snd_soc_register_component+0x48/0x84)
    [<c04c64b4>] (devm_snd_soc_register_component) from [<c04c7be8>] (hdmi_codec_probe+0x150/0x260)
    [<c04c7be8>] (hdmi_codec_probe) from [<c0373124>] (platform_drv_probe+0x48/0x98)
    
    This happens because hdmi_dai_probe() attempts to access the HDMI
    codec private data, but this has not been assigned by hdmi_dai_probe()
    before it calls devm_snd_soc_register_component().  Move the call to
    dev_set_drvdata() before devm_snd_soc_register_component() to avoid
    this oops.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdd448108d8512ea7fb025761d89ca9c517c26f1
Author: Manuel Reinhardt <manuel.rhdt@gmail.com>
Date:   Thu Jan 31 15:32:35 2019 +0100

    ALSA: usb-audio: Fix implicit fb endpoint setup by quirk
    
    commit 2bc16b9f3223d049b57202ee702fcb5b9b507019 upstream.
    
    The commit a60945fd08e4 ("ALSA: usb-audio: move implicit fb quirks to
    separate function") introduced an error in the handling of quirks for
    implicit feedback endpoints. This commit fixes this.
    
    If a quirk successfully sets up an implicit feedback endpoint, usb-audio
    no longer tries to find the implicit fb endpoint itself.
    
    Fixes: a60945fd08e4 ("ALSA: usb-audio: move implicit fb quirks to separate function")
    Signed-off-by: Manuel Reinhardt <manuel.rhdt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8715ba45d0087f3cb67e85819ea5d4fdf7a86c88
Author: Jurica Vukadin <jurica.vukadin@rt-rk.com>
Date:   Thu Feb 7 16:29:37 2019 +0100

    ALSA: hda - Add quirk for HP EliteBook 840 G5
    
    commit 4cd3016ce996494f78fdfd87ea35c8ca5d0b413e upstream.
    
    This enables mute LED support and fixes switching jacks when the laptop
    is docked.
    
    Signed-off-by: Jurica Vukadin <jurica.vukadin@rt-rk.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74cbb754d63f5b18e9f41332ff947ff6bd2834eb
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Mon Feb 4 13:35:32 2019 +0100

    perf/x86: Add check_period PMU callback
    
    commit 81ec3f3c4c4d78f2d3b6689c9816bfbdf7417dbb upstream.
    
    Vince (and later on Ravi) reported crashes in the BTS code during
    fuzzing with the following backtrace:
    
      general protection fault: 0000 [#1] SMP PTI
      ...
      RIP: 0010:perf_prepare_sample+0x8f/0x510
      ...
      Call Trace:
       <IRQ>
       ? intel_pmu_drain_bts_buffer+0x194/0x230
       intel_pmu_drain_bts_buffer+0x160/0x230
       ? tick_nohz_irq_exit+0x31/0x40
       ? smp_call_function_single_interrupt+0x48/0xe0
       ? call_function_single_interrupt+0xf/0x20
       ? call_function_single_interrupt+0xa/0x20
       ? x86_schedule_events+0x1a0/0x2f0
       ? x86_pmu_commit_txn+0xb4/0x100
       ? find_busiest_group+0x47/0x5d0
       ? perf_event_set_state.part.42+0x12/0x50
       ? perf_mux_hrtimer_restart+0x40/0xb0
       intel_pmu_disable_event+0xae/0x100
       ? intel_pmu_disable_event+0xae/0x100
       x86_pmu_stop+0x7a/0xb0
       x86_pmu_del+0x57/0x120
       event_sched_out.isra.101+0x83/0x180
       group_sched_out.part.103+0x57/0xe0
       ctx_sched_out+0x188/0x240
       ctx_resched+0xa8/0xd0
       __perf_event_enable+0x193/0x1e0
       event_function+0x8e/0xc0
       remote_function+0x41/0x50
       flush_smp_call_function_queue+0x68/0x100
       generic_smp_call_function_single_interrupt+0x13/0x30
       smp_call_function_single_interrupt+0x3e/0xe0
       call_function_single_interrupt+0xf/0x20
       </IRQ>
    
    The reason is that while event init code does several checks
    for BTS events and prevents several unwanted config bits for
    BTS event (like precise_ip), the PERF_EVENT_IOC_PERIOD allows
    to create BTS event without those checks being done.
    
    Following sequence will cause the crash:
    
    If we create an 'almost' BTS event with precise_ip and callchains,
    and it into a BTS event it will crash the perf_prepare_sample()
    function because precise_ip events are expected to come
    in with callchain data initialized, but that's not the
    case for intel_pmu_drain_bts_buffer() caller.
    
    Adding a check_period callback to be called before the period
    is changed via PERF_EVENT_IOC_PERIOD. It will deny the change
    if the event would become BTS. Plus adding also the limit_period
    check as well.
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: <stable@vger.kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20190204123532.GA4794@krava
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d10e77c26022720b927aa4f49b37fce08fbf2794
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 13 07:57:02 2019 +0100

    perf/core: Fix impossible ring-buffer sizes warning
    
    commit 528871b456026e6127d95b1b2bd8e3a003dc1614 upstream.
    
    The following commit:
    
      9dff0aa95a32 ("perf/core: Don't WARN() for impossible ring-buffer sizes")
    
    results in perf recording failures with larger mmap areas:
    
      root@skl:/tmp# perf record -g -a
      failed to mmap with 12 (Cannot allocate memory)
    
    The root cause is that the following condition is buggy:
    
            if (order_base_2(size) >= MAX_ORDER)
                    goto fail;
    
    The problem is that @size is in bytes and MAX_ORDER is in pages,
    so the right test is:
    
            if (order_base_2(size) >= PAGE_SHIFT+MAX_ORDER)
                    goto fail;
    
    Fix it.
    
    Reported-by: "Jin, Yao" <yao.jin@linux.intel.com>
    Bisected-by: Borislav Petkov <bp@alien8.de>
    Analyzed-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Julien Thierry <julien.thierry@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org>
    Fixes: 9dff0aa95a32 ("perf/core: Don't WARN() for impossible ring-buffer sizes")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b1de8b95b97fb680c7005937a681d26344b7202
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Jan 15 10:09:38 2019 -0800

    ARM: OMAP5+: Fix inverted nirq pin interrupts with irq_set_type
    
    commit d0243693fbf6fbd48b4efb2ba7210765983b03e3 upstream.
    
    Commit 83a86fbb5b56 ("irqchip/gic: Loudly complain about the use of
    IRQ_TYPE_NONE") started warning about incorrect dts usage for irqs.
    ARM GIC only supports active-high interrupts for SPI (Shared Peripheral
    Interrupts), and the Palmas PMIC by default is active-low.
    
    Palmas PMIC allows changing the interrupt polarity using register
    PALMAS_POLARITY_CTRL_INT_POLARITY, but configuring sys_nirq1 with
    a pull-down and setting PALMAS_POLARITY_CTRL_INT_POLARITY made the
    Palmas RTC interrupts stop working. This can be easily tested with
    kernel tools rtctest.c.
    
    Turns out the SoC inverts the sys_nirq pins for GIC as they do not go
    through a peripheral device but go directly to the MPUSS wakeupgen.
    I've verified this by muxing the interrupt line temporarily to gpio_wk16
    instead of sys_nirq1. with a gpio, the interrupt works fine both
    active-low and active-high with the SoC internal pull configured and
    palmas polarity configured. But as sys_nirq1, the interrupt only works
    when configured ACTIVE_LOW for palmas, and ACTIVE_HIGH for GIC.
    
    Note that there was a similar issue earlier with tegra114 and palmas
    interrupt polarity that got fixed by commit df545d1cd01a ("mfd: palmas:
    Provide irq flags through DT/platform data"). However, the difference
    between omap5 and tegra114 is that tegra inverts the palmas interrupt
    twice, once when entering tegra PMC, and again when exiting tegra PMC
    to GIC.
    
    Let's fix the issue by adding a custom wakeupgen_irq_set_type() for
    wakeupgen and invert any interrupts with wrong polarity. Let's also
    warn about any non-sysnirq pins using wrong polarity. Note that we
    also need to update the dts for the level as IRQ_TYPE_NONE never
    has irq_set_type() called, and let's add some comments and use proper
    pin nameing to avoid more confusion later on.
    
    Cc: Belisko Marek <marek.belisko@gmail.com>
    Cc: Dmitry Lifshitz <lifshitz@compulab.co.il>
    Cc: "Dr. H. Nikolaus Schaller" <hns@goldelico.com>
    Cc: Jon Hunter <jonathanh@nvidia.com>
    Cc: Keerthy <j-keerthy@ti.com>
    Cc: Laxman Dewangan <ldewangan@nvidia.com>
    Cc: Nishanth Menon <nm@ti.com>
    Cc: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Cc: Richard Woodruff <r-woodruff2@ti.com>
    Cc: Santosh Shilimkar <ssantosh@kernel.org>
    Cc: Tero Kristo <t-kristo@ti.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: stable@vger.kernel.org # v4.17+
    Reported-by: Belisko Marek <marek.belisko@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9a974fdaaa32e662c427feb586828c81f6a7453
Author: Mauro Ciancio <mauro@acadeu.com>
Date:   Mon Jan 14 10:24:53 2019 -0300

    Input: elan_i2c - add ACPI ID for touchpad in Lenovo V330-15ISK
    
    commit 7ad222b3aed350adfc27ee7eec4587ffe55dfdce upstream.
    
    This adds ELAN0617 to the ACPI table to support Elan touchpad found in
    Lenovo V330-15ISK.
    
    Signed-off-by: Mauro Ciancio <mauro@acadeu.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2abf1ce44e28cab799d2d2f8b3130911df936579
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Mon Feb 11 14:32:40 2019 -0800

    Revert "Input: elan_i2c - add ACPI ID for touchpad in ASUS Aspire F5-573G"
    
    commit f420c54e4b12c1361c6ed313002ee7bd7ac58362 upstream.
    
    This reverts commit 7db54c89f0b30a101584e09d3729144e6170059d as it
    breaks Acer Aspire V-371 and other devices. According to Elan:
    
    "Acer Aspire F5-573G is MS Precision touchpad which should use hid
     multitouch driver. ELAN0501 should not be added in elan_i2c."
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=202503
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ede7fb452221c2dc5a401eff4e920d79f3ed4662
Author: Anson Huang <anson.huang@nxp.com>
Date:   Sun Feb 17 23:05:33 2019 +0100

    gpio: mxc: move gpio noirq suspend/resume to syscore phase
    
    commit 1a5287a3dbc34cd0c02c8f64c9131bd23cdfe2bb upstream.
    
    During noirq suspend/resume phase, GPIO irq could arrive
    and its registers like IMR will be changed by irq handle
    process, to make the GPIO registers exactly when it is
    powered ON after resume, move the GPIO noirq suspend/resume
    callback to syscore suspend/resume phase, local irq is
    disabled at this phase so GPIO registers are atomic.
    
    Fixes: c19fdaeea0aa ("gpio: mxc: add power management support")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Martin Hundebøll <martin@geanix.com>
    Cc: <stable@vger.kernel.org> # 4.19.x+
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1765ebd9d12c3aa46e1c94764723a373ad57341
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Tue Jan 15 15:08:48 2019 -0800

    CIFS: Do not assume one credit for async responses
    
    [ Upstream commit 0fd1d37b0501efc6e295f56ab55cdaff784aa50c ]
    
    If we don't receive a response we can't assume that the server
    granted one credit. Assume zero credits in such cases.
    
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6804b3ecbe20654891324ef82f840ba02d642d6c
Author: David Rientjes <rientjes@google.com>
Date:   Wed Jan 2 12:56:33 2019 -0800

    kvm: sev: Fail KVM_SEV_INIT if already initialized
    
    [ Upstream commit 3f14a89d1132dcae3c8ce6721c6ef51f6e6d9b5f ]
    
    By code inspection, it was found that multiple calls to KVM_SEV_INIT
    could deplete asid bits and overwrite kvm_sev_info's regions_list.
    
    Multiple calls to KVM_SVM_INIT is not likely to occur with QEMU, but this
    should likely be fixed anyway.
    
    This code is serialized by kvm->lock.
    
    Fixes: 1654efcbc431 ("KVM: SVM: Add KVM_SEV_INIT command")
    Reported-by: Cfir Cohen <cfir@google.com>
    Signed-off-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63715c1f0a67a1e92631fca7f4b4dff89eb6be23
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 8 18:30:56 2019 +0000

    cifs: Limit memory used by lock request calls to a page
    
    [ Upstream commit 92a8109e4d3a34fb6b115c9098b51767dc933444 ]
    
    The code tries to allocate a contiguous buffer with a size supplied by
    the server (maxBuf). This could fail if memory is fragmented since it
    results in high order allocations for commonly used server
    implementations. It is also wasteful since there are probably
    few locks in the usual case. Limit the buffer to be no larger than a
    page to avoid memory allocation failures due to fragmentation.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b709998564b1d5b9606dc7923cbddbb5e91544d
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Thu Dec 13 22:44:08 2018 -0500

    drm/nouveau/falcon: avoid touching registers if engine is off
    
    [ Upstream commit a5176a4cb85bb6213daadf691097cf411da35df2 ]
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=108980
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85a088cc4c8eeeb2e4cf6c7e0efde52045360b05
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Sep 12 12:58:43 2018 +0200

    drm/nouveau: Don't disable polling in fallback mode
    
    [ Upstream commit 118780066e30c34de3d9349710b51780bfa0ba83 ]
    
    When a fan is controlled via linear fallback without cstate, we
    shouldn't stop polling.  Otherwise it won't be adjusted again and
    keeps running at an initial crazy pace.
    
    Fixes: 800efb4c2857 ("drm/nouveau/drm/therm/fan: add a fallback if no fan control is specified in the vbios")
    Bugzilla: https://bugzilla.suse.com/show_bug.cgi?id=1103356
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=107447
    Reported-by: Thomas Blume <thomas.blume@suse.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Reviewed-by: Martin Peres <martin.peres@free.fr>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a87c5333c90bd8f8f2335710562fc7028f43d21
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Sat Dec 1 12:57:18 2018 +0100

    gpio: pl061: handle failed allocations
    
    [ Upstream commit df209c43a0e8258e096fb722dfbdae4f0dd13fde ]
    
    devm_kzalloc(), devm_kstrdup() and devm_kasprintf() all can
    fail internal allocation and return NULL. Using any of the assigned
    objects without checking is not safe. As this is early in the boot
    phase and these allocations really should not fail, any failure here
    is probably an indication of a more serious issue so it makes little
    sense to try and rollback the previous allocated resources or try to
    continue;  but rather the probe function is simply exited with -ENOMEM.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Fixes: 684284b64aae ("ARM: integrator: add MMCI device to IM-PD1")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cf199f8d03fb35e146a15063b29ff1ecec21a92
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Jan 8 00:08:18 2019 +0100

    ARM: dts: kirkwood: Fix polarity of GPIO fan lines
    
    [ Upstream commit b5f034845e70916fd33e172fad5ad530a29c10ab ]
    
    These two lines are active high, not active low. The bug was
    found when we changed the kernel to respect the polarity defined
    in the device tree.
    
    Fixes: 1b90e06b1429 ("ARM: kirkwood: Use devicetree to define DNS-32[05] fan")
    Cc: Jamie Lentin <jm@lentin.co.uk>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Gregory Clement <gregory.clement@bootlin.com>
    Cc: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
    Cc: Julien D'Ascenzio <jdascenzio@posteo.net>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Jamie Lentin <jm@lentin.co.uk>
    Reported-by: Julien D'Ascenzio <jdascenzio@posteo.net>
    Tested-by: Julien D'Ascenzio <jdascenzio@posteo.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e7136c1c79f24279bdd20721c0e2942b2f0b2af
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Dec 19 13:47:26 2018 +0200

    ARM: dts: da850-lcdk: Correct the sound card name
    
    [ Upstream commit c25748acc5c20786ecb7518bfeae8fcef93472d6 ]
    
    To avoid  the following error:
    asoc-simple-card sound: ASoC: Failed to create card debugfs directory
    
    Which is because the card name contains '/' character, which can not be
    used in file or directory names.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bea93c89bc8b2b8512a680a319e5ea71c76eecf
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Dec 19 13:47:25 2018 +0200

    ARM: dts: da850-lcdk: Correct the audio codec regulators
    
    [ Upstream commit bd540ebe68c3017194a1caa38e075bbbc0832749 ]
    
    Add the board level fixed regulators for 3.3V and 1.8V which is used to
    power - among other things - the tlv320aic3106 codec.
    
    Apart from removing the following warning during boot:
    tlv320aic3x-codec 0-0018: Invalid supply voltage(s) AVDD: -22, DVDD: -22
    
    With the correct voltages the driver can select correct OCMV value to
    reduce pop noise.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3b61cba316ab447f0c957b5431650f10ba84ebc
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Dec 19 13:47:24 2018 +0200

    ARM: dts: da850-evm: Correct the sound card name
    
    [ Upstream commit 7fca69d4e43fa1ae9cb4f652772c132dc5a659c6 ]
    
    To avoid  the following error:
    asoc-simple-card sound: ASoC: Failed to create card debugfs directory
    
    Which is because the card name contains '/' character, which can not be
    used in file or directory names.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c06896ea1342233b591dac43ed620d7d831d17b
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Dec 19 13:47:23 2018 +0200

    ARM: dts: da850-evm: Correct the audio codec regulators
    
    [ Upstream commit 706edaa88835e3d8de8920584ad5da76dd3d6666 ]
    
    Add the board level fixed regulators for 3.3V and 1.8V which is used to
    power - among other things - the tlv320aic3106 codec.
    
    Apart from removing the following warning during boot:
    tlv320aic3x-codec 0-0018: Too high supply voltage(s) AVDD: 5000000, DVDD: 5000000
    
    With the correct voltages the driver can select correct OCMV value to
    reduce pop noise.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46bf9a8c8bb0f2c746163737da5c7e4a42b48d61
Author: Jim Qu <Jim.Qu@amd.com>
Date:   Mon Dec 17 17:00:50 2018 +0800

    drm/amdgpu: set WRITE_BURST_LENGTH to 64B to workaround SDMA1 hang
    
    [ Upstream commit 0c6c8125582714e1fd3544983eba3d750db0f5b8 ]
    
    effect asics: VEGA10 and VEGA12
    
    Signed-off-by: Jim Qu <Jim.Qu@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f5581e82fe46e0f2bc68d0c69176f3338fda4b0
Author: Keith Busch <keith.busch@intel.com>
Date:   Tue Jan 8 09:37:43 2019 -0700

    nvme: pad fake subsys NQN vid and ssvid with zeros
    
    [ Upstream commit 3da584f57133e51aeb84aaefae5e3d69531a1e4f ]
    
    We need to preserve the leading zeros in the vid and ssvid when generating
    a unique NQN. Truncating these may lead to naming collisions.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c27b5230e356ce2f4e259bef17a78864510d7ba
Author: Hannes Reinecke <hare@suse.de>
Date:   Tue Jan 8 12:46:58 2019 +0100

    nvme-multipath: zero out ANA log buffer
    
    [ Upstream commit c7055fd15ff46d92eb0dd1c16a4fe010d58224c8 ]
    
    When nvme_init_identify() fails the ANA log buffer is deallocated
    but _not_ set to NULL. This can cause double free oops when this
    controller is deleted without ever being reconnected.
    
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 095cfdf857a38972762d92379a848349fda00fe1
Author: Hongbo Yao <yaohongbo@huawei.com>
Date:   Mon Jan 7 10:22:07 2019 +0800

    nvme-pci: fix out of bounds access in nvme_cqe_pending
    
    [ Upstream commit dcca1662727220d18fa351097ddff33f95f516c5 ]
    
    There is an out of bounds array access in nvme_cqe_peding().
    
    When enable irq_thread for nvme interrupt, there is racing between the
    nvmeq->cq_head updating and reading.
    
    nvmeq->cq_head is updated in nvme_update_cq_head(), if nvmeq->cq_head
    equals nvmeq->q_depth and before its value set to zero, nvme_cqe_pending()
    uses its value as an array index, the index will be out of bounds.
    
    Signed-off-by: Hongbo Yao <yaohongbo@huawei.com>
    [hch: slight coding style update]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e746fe215eb0e37ff1d91bb894a410e2eb05796
Author: Liviu Dudau <liviu@dudau.co.uk>
Date:   Sat Dec 29 17:23:43 2018 +0000

    nvme-pci: use the same attributes when freeing host_mem_desc_bufs.
    
    [ Upstream commit cc667f6d5de023ee131e96bb88e5cddca23272bd ]
    
    When using HMB the PCIe host driver allocates host_mem_desc_bufs using
    dma_alloc_attrs() but frees them using dma_free_coherent(). Use the
    correct dma_free_attrs() function to free the buffers.
    
    Signed-off-by: Liviu Dudau <liviu@dudau.co.uk>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e4a7beedf43f141e189e0688e412b53cb58b427
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:53 2019 +0200

    drm/bridge: tc358767: fix output H/V syncs
    
    [ Upstream commit 7923e09c7a766e2d58de7fc395bb84c18e5bc625 ]
    
    The H and V syncs of the DP output are always set to active high. This
    patch fixes the syncs by configuring them according to the videomode.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-7-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c13400bc7433a728e510e80a02d580668445799
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:52 2019 +0200

    drm/bridge: tc358767: reject modes which require too much BW
    
    [ Upstream commit 51b9e62eb6950c762162ab7eb8390990179be067 ]
    
    The current driver accepts any videomode with pclk < 154MHz. This is not
    correct, as with 1 lane and/or 1.62Mbps speed not all videomodes can be
    supported.
    
    Add code to reject modes that require more bandwidth that is available.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-6-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad9675e47b495285e3be62a0d9c87edffd0ae8c3
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:51 2019 +0200

    drm/bridge: tc358767: fix initial DP0/1_SRCCTRL value
    
    [ Upstream commit 9a63bd6fe1b5590ffa42ae2ed22ee21363293e31 ]
    
    Initially DP0_SRCCTRL is set to a static value which includes
    DP0_SRCCTRL_LANES_2 and DP0_SRCCTRL_BW27, even when only 1 lane of
    1.62Gbps speed is used. DP1_SRCCTRL is configured to a magic number.
    
    This patch changes the configuration as follows:
    
    Configure DP0_SRCCTRL by using tc_srcctrl() which provides the correct
    value.
    
    DP1_SRCCTRL needs two bits to be set to the same value as DP0_SRCCTRL:
    SSCG and BW27. All other bits can be zero.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-5-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ac48b301c2a3a00a6a1f4b817862a481c411db0
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:50 2019 +0200

    drm/bridge: tc358767: fix single lane configuration
    
    [ Upstream commit 4d9d54a730434cc068dd3515ba6116697196f77b ]
    
    PHY_2LANE bit is always set in DP_PHY_CTRL, breaking 1 lane use.
    
    Set PHY_2LANE only when 2 lanes are used.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-4-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32f833a85c9a47ec6cab7d9aeb37fe5527c1ef90
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:49 2019 +0200

    drm/bridge: tc358767: add defines for DP1_SRCCTRL & PHY_2LANE
    
    [ Upstream commit adf4109896bbee27fd2ac3b48d22d6a0062fe517 ]
    
    DP1_SRCCTRL register and PHY_2LANE field did not have matching defines.
    Add these.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-3-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d180c28698a1b6ae01c570d2166d96cf94439ca2
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu Jan 3 13:59:48 2019 +0200

    drm/bridge: tc358767: add bus flags
    
    [ Upstream commit 4842379cbe6e851de914a7132f76f4e200b9a98b ]
    
    tc358767 driver does not set DRM bus_flags, even if it does configures
    the polarity settings into its registers. This means that the DPI source
    can't configure the polarities correctly.
    
    Add sync flags accordingly.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190103115954.12785-2-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6f27cdd4fca48d945a8896f8902e7cb0692a7a6
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Mon Jan 7 18:51:53 2019 +0000

    cpufreq: check if policy is inactive early in __cpufreq_get()
    
    [ Upstream commit 2f66196208c98b3d1b4294edffb2c5a8197be899 ]
    
    cpuinfo_cur_freq gets current CPU frequency as detected by hardware
    while scaling_cur_freq last known CPU frequency. Some platforms may not
    allow checking the CPU frequency of an offline CPU or the associated
    resources may have been released via cpufreq_exit when the CPU gets
    offlined, in which case the policy would have been invalidated already.
    If we attempt to get current frequency from the hardware, it may result
    in hang or crash.
    
    For example on Juno, I see:
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000188
    [0000000000000188] pgd=0000000000000000
    Internal error: Oops: 96000004 [#1] PREEMPT SMP
    Modules linked in:
    CPU: 5 PID: 4202 Comm: cat Not tainted 4.20.0-08251-ga0f2c0318a15-dirty #87
    Hardware name: ARM LTD ARM Juno Development Platform/ARM Juno Development Platform
    pstate: 40000005 (nZcv daif -PAN -UAO)
    pc : scmi_cpufreq_get_rate+0x34/0xb0
    lr : scmi_cpufreq_get_rate+0x34/0xb0
    Call trace:
     scmi_cpufreq_get_rate+0x34/0xb0
     __cpufreq_get+0x34/0xc0
     show_cpuinfo_cur_freq+0x24/0x78
     show+0x40/0x60
     sysfs_kf_seq_show+0xc0/0x148
     kernfs_seq_show+0x44/0x50
     seq_read+0xd4/0x480
     kernfs_fop_read+0x15c/0x208
     __vfs_read+0x60/0x188
     vfs_read+0x94/0x150
     ksys_read+0x6c/0xd8
     __arm64_sys_read+0x24/0x30
     el0_svc_common+0x78/0x100
     el0_svc_handler+0x38/0x78
     el0_svc+0x8/0xc
    ---[ end trace 3d1024e58f77f6b2 ]---
    
    So fix the issue by checking if the policy is invalid early in
    __cpufreq_get before attempting to get the current frequency.
    
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa92c4e6b244ae5814ac1ad87d00cf40b6d7199f
Author: David Abdurachmanov <david.abdurachmanov@gmail.com>
Date:   Thu Dec 6 16:26:34 2018 +0100

    riscv: fix trace_sys_exit hook
    
    [ Upstream commit 775800b0f1d7303d4fd8ce0e0d9eca4ff2f338f2 ]
    
    Fix compilation error.
    
    Signed-off-by: David Abdurachmanov <david.abdurachmanov@gmail.com>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da78c8cda5b90df90830a67b5214e8e5ecfcfe11
Author: Aurelien Jarno <aurelien@aurel32.net>
Date:   Tue Dec 25 15:46:24 2018 +0100

    tools uapi: fix RISC-V 64-bit support
    
    [ Upstream commit d0df00e30e4bf9bc27ddbd092ad683ff6121b360 ]
    
    The BPF library is not built on 64-bit RISC-V, as the BPF feature is
    not detected. Looking more in details, feature/test-bpf.c fails to build
    with the following error:
    
    | In file included from /tmp/linux-4.19.12/tools/include/uapi/asm/bitsperlong.h:17,
    |                  from /tmp/linux-4.19.12/tools/include/uapi/asm-generic/unistd.h:2,
    |                  from /usr/include/riscv64-linux-gnu/asm/unistd.h:1,
    |                  from test-bpf.c:2:
    | /tmp/linux-4.19.12/tools/include/asm-generic/bitsperlong.h:14:2: error: #error Inconsistent word size. Check asm/bitsperlong.h
    |  #error Inconsistent word size. Check asm/bitsperlong.h
    |   ^~~~~
    
    The UAPI from the tools directory is missing RISC-V support, therefore
    bitsperlong.h from asm-generic is used, defaulting to 32 bits.
    
    Fix that by adding tools/arch/riscv/include/uapi/asm/bitsperlong.h as
    a copy of arch/riscv/include/uapi/asm/bitsperlong.h and by updating
    tools/include/uapi/asm/bitsperlong.h.
    
    Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
    Signed-off-by: Palmer Dabbelt <palmer@sifive.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46f0e6984c84a0eaaa3c85a649245bb998124d76
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Jan 4 15:10:00 2019 -0300

    perf test shell: Use a fallback to get the pathname in vfs_getname
    
    [ Upstream commit 03fa483821c0b4db7c2b1453d3332f397d82313f ]
    
    Some kernels, like 4.19.13-300.fc29.x86_64 in fedora 29, fail with the
    existing probe definition asking for the contents of result->name,
    working when we ask for the 'filename' variable instead, so add a
    fallback to that.
    
    Now those tests are back working on fedora 29 systems with that kernel:
    
      # perf test vfs_getname
      65: Use vfs_getname probe to get syscall args filenames   : Ok
      66: Add vfs_getname probe to get syscall args filenames   : Ok
      67: Check open filename arg using perf trace + vfs_getname: Ok
      #
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-klt3n0i58dfqttveti09q3fi@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d20bfcb55003b6b4786128eafa1211d034e7423c
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Fri Jan 4 14:10:30 2019 +0800

    perf report: Fix wrong iteration count in --branch-history
    
    [ Upstream commit a3366db06bb656cef2e03f30f780d93059bcc594 ]
    
    By calculating the removed loops, we can get the iteration count.
    
    But the iteration count could be reported incorrectly, reporting
    impossibly high counts.
    
    That's because previous code uses the number of removed LBR entries for
    the iteration count. That's not good. Fix this by increasing the
    iteration count when a loop is detected.
    
    When matching the chain, the iteration count would be added up, finally we need
    to compute the average value when printing out.
    
    For example,
    
      $ perf report --branch-history --stdio --no-children
    
    Before:
    
      ---f2 +0
         |
         |--33.62%--f1 +9 (cycles:1)
         |          f1 +0
         |          main +22 (cycles:1)
         |          main +17
         |          main +38 (cycles:1)
         |          main +27
         |          f1 +26 (cycles:1)
         |          f1 +24
         |          f2 +27 (cycles:7)
         |          f2 +0
         |          f1 +19 (cycles:1)
         |          f1 +14
         |          f2 +27 (cycles:11)
         |          f2 +0
         |          f1 +9 (cycles:1 iter:2968 avg_cycles:3)
         |          f1 +0
         |          main +22 (cycles:1 iter:2968 avg_cycles:3)
         |          main +17
         |          main +38 (cycles:1 iter:2968 avg_cycles:3)
    
    2968 is an impossible high iteration count and avg_cycles is too small.
    
    After:
    
      ---f2 +0
         |
         |--33.62%--f1 +9 (cycles:1)
         |          f1 +0
         |          main +22 (cycles:1)
         |          main +17
         |          main +38 (cycles:1)
         |          main +27
         |          f1 +26 (cycles:1)
         |          f1 +24
         |          f2 +27 (cycles:7)
         |          f2 +0
         |          f1 +19 (cycles:1)
         |          f1 +14
         |          f2 +27 (cycles:11)
         |          f2 +0
         |          f1 +9 (cycles:1 iter:1 avg_cycles:23)
         |          f1 +0
         |          main +22 (cycles:1 iter:1 avg_cycles:23)
         |          main +17
         |          main +38 (cycles:1 iter:1 avg_cycles:23)
    
    avg_cycles:23 is the average cycles of this iteration.
    
    Fixes: c4ee06251d42 ("perf report: Calculate the average cycles of iterations")
    
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/1546582230-17507-1-git-send-email-yao.jin@linux.intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db8c9ab3f47f6c95caca4e0188b59bf09dd16eea
Author: Chao Fan <fanc.fnst@cn.fujitsu.com>
Date:   Wed Dec 26 11:34:50 2018 +0800

    ACPI: NUMA: Use correct type for printing addresses on i386-PAE
    
    [ Upstream commit b9ced18acf68dffebe6888c7ec765a2b1db7a039 ]
    
    The addresses of NUMA nodes are not printed correctly on i386-PAE
    which is misleading.
    
    Here is a debian9-32bit with PAE in a QEMU guest having more than 4G
    of memory:
    
    qemu-system-i386 \
    -hda /var/lib/libvirt/images/debian32.qcow2 \
    -m 5G \
    -enable-kvm \
    -smp 10 \
    -numa node,mem=512M,nodeid=0,cpus=0 \
    -numa node,mem=512M,nodeid=1,cpus=1 \
    -numa node,mem=512M,nodeid=2,cpus=2 \
    -numa node,mem=512M,nodeid=3,cpus=3 \
    -numa node,mem=512M,nodeid=4,cpus=4 \
    -numa node,mem=512M,nodeid=5,cpus=5 \
    -numa node,mem=512M,nodeid=6,cpus=6 \
    -numa node,mem=512M,nodeid=7,cpus=7 \
    -numa node,mem=512M,nodeid=8,cpus=8 \
    -numa node,mem=512M,nodeid=9,cpus=9 \
    -serial stdio
    
    Because of the wrong value type, it prints as below:
    
    [    0.021049] ACPI: SRAT Memory (0x0 length 0xa0000) in proximity domain 0 enabled
    [    0.021740] ACPI: SRAT Memory (0x100000 length 0x1ff00000) in proximity domain 0 enabled
    [    0.022425] ACPI: SRAT Memory (0x20000000 length 0x20000000) in proximity domain 1 enabled
    [    0.023092] ACPI: SRAT Memory (0x40000000 length 0x20000000) in proximity domain 2 enabled
    [    0.023764] ACPI: SRAT Memory (0x60000000 length 0x20000000) in proximity domain 3 enabled
    [    0.024431] ACPI: SRAT Memory (0x80000000 length 0x20000000) in proximity domain 4 enabled
    [    0.025104] ACPI: SRAT Memory (0xa0000000 length 0x20000000) in proximity domain 5 enabled
    [    0.025791] ACPI: SRAT Memory (0x0 length 0x20000000) in proximity domain 6 enabled
    [    0.026412] ACPI: SRAT Memory (0x20000000 length 0x20000000) in proximity domain 7 enabled
    [    0.027118] ACPI: SRAT Memory (0x40000000 length 0x20000000) in proximity domain 8 enabled
    [    0.027802] ACPI: SRAT Memory (0x60000000 length 0x20000000) in proximity domain 9 enabled
    
    The upper half of the start address of the NUMA domains between 6
    and 9 inclusive was cut, so the printed values are incorrect.
    
    Fix the value type, to get the correct values in the log as follows:
    
    [    0.023698] ACPI: SRAT Memory (0x0 length 0xa0000) in proximity domain 0 enabled
    [    0.024325] ACPI: SRAT Memory (0x100000 length 0x1ff00000) in proximity domain 0 enabled
    [    0.024981] ACPI: SRAT Memory (0x20000000 length 0x20000000) in proximity domain 1 enabled
    [    0.025659] ACPI: SRAT Memory (0x40000000 length 0x20000000) in proximity domain 2 enabled
    [    0.026317] ACPI: SRAT Memory (0x60000000 length 0x20000000) in proximity domain 3 enabled
    [    0.026980] ACPI: SRAT Memory (0x80000000 length 0x20000000) in proximity domain 4 enabled
    [    0.027635] ACPI: SRAT Memory (0xa0000000 length 0x20000000) in proximity domain 5 enabled
    [    0.028311] ACPI: SRAT Memory (0x100000000 length 0x20000000) in proximity domain 6 enabled
    [    0.028985] ACPI: SRAT Memory (0x120000000 length 0x20000000) in proximity domain 7 enabled
    [    0.029667] ACPI: SRAT Memory (0x140000000 length 0x20000000) in proximity domain 8 enabled
    [    0.030334] ACPI: SRAT Memory (0x160000000 length 0x20000000) in proximity domain 9 enabled
    
    Signed-off-by: Chao Fan <fanc.fnst@cn.fujitsu.com>
    [ rjw: Subject & changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f749f9702c9885c9fb48b78e8e74b43ecb857845
Author: Emily Deng <Emily.Deng@amd.com>
Date:   Sat Dec 29 17:46:05 2018 +0800

    drm/amdgpu/sriov:Correct pfvf exchange logic
    
    [ Upstream commit b8cf66182eddb22e9c7539821ed6eecdb4f86d1a ]
    
    The pfvf exchange need be in exclusive mode. And add pfvf exchange in gpu
    reset.
    
    Signed-off-by: Emily Deng <Emily.Deng@amd.com>
    Reviewed-By: Xiangliang Yu <Xiangliang.Yu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdd8fd8a2efe3be7c67d38568f65a3e88a93cb59
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:23 2019 -0500

    ARM: fix the cockup in the previous patch
    
    Commit d6951f582cc50ba0ad22ef46b599740966599b14 upstream.
    
    The intention in the previous patch was to only place the processor
    tables in the .rodata section if big.Little was being built and we
    wanted the branch target hardening, but instead (due to the way it
    was tested) it ended up always placing the tables into the .rodata
    section.
    
    Although harmless, let's correct this anyway.
    
    Fixes: 3a4d0c2172bc ("ARM: ensure that processor vtables is not lost after boot")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7a8dabe92f1c59bb5f992e4d40bb88dbedd9baf
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:22 2019 -0500

    ARM: ensure that processor vtables is not lost after boot
    
    Commit 3a4d0c2172bcf15b7a3d9d498b2b355f9864286b upstream.
    
    Marek Szyprowski reported problems with CPU hotplug in current kernels.
    This was tracked down to the processor vtables being located in an
    init section, and therefore discarded after kernel boot, despite being
    required after boot to properly initialise the non-boot CPUs.
    
    Arrange for these tables to end up in .rodata when required.
    
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Krzysztof Kozlowski <krzk@kernel.org>
    Fixes: 383fb3ee8024 ("ARM: spectre-v2: per-CPU vtables to work around big.Little systems")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4645c6ccbd7a6685f2c5629092e73662fc5ec370
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:21 2019 -0500

    ARM: spectre-v2: per-CPU vtables to work around big.Little systems
    
    Commit 383fb3ee8024d596f488d2dbaf45e572897acbdb upstream.
    
    In big.Little systems, some CPUs require the Spectre workarounds in
    paths such as the context switch, but other CPUs do not.  In order
    to handle these differences, we need per-CPU vtables.
    
    We are unable to use the kernel's per-CPU variables to support this
    as per-CPU is not initialised at times when we need access to the
    vtables, so we have to use an array indexed by logical CPU number.
    
    We use an array-of-pointers to avoid having function pointers in
    the kernel's read/write .data section.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b11fd96c0eca0c1840d82bc4999ee147ad2ebbdc
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:20 2019 -0500

    ARM: add PROC_VTABLE and PROC_TABLE macros
    
    Commit e209950fdd065d2cc46e6338e47e52841b830cba upstream.
    
    Allow the way we access members of the processor vtable to be changed
    at compile time.  We will need to move to per-CPU vtables to fix the
    Spectre variant 2 issues on big.Little systems.
    
    However, we have a couple of calls that do not need the vtable
    treatment, and indeed cause a kernel warning due to the (later) use
    of smp_processor_id(), so also introduce the PROC_TABLE macro for
    these which always use CPU 0's function pointers.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06b5ec99f2eef0dcc2492f0623c95aa64fe064f3
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:19 2019 -0500

    ARM: clean up per-processor check_bugs method call
    
    Commit 945aceb1db8885d3a35790cf2e810f681db52756 upstream.
    
    Call the per-processor type check_bugs() method in the same way as we
    do other per-processor functions - move the "processor." detail into
    proc-fns.h.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a4cf73fed230059bf6adbde4793c01ba2d41f53
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:18 2019 -0500

    ARM: split out processor lookup
    
    Commit 65987a8553061515b5851b472081aedb9837a391 upstream.
    
    Split out the lookup of the processor type and associated error handling
    from the rest of setup_processor() - we will need to use this in the
    secondary CPU bringup path for big.Little Spectre variant 2 mitigation.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3e1b2a20ad3773311ce626e682b4cc04b589e85
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Feb 13 16:32:17 2019 -0500

    ARM: make lookup_processor_type() non-__init
    
    Commit 899a42f836678a595f7d2bc36a5a0c2b03d08cbc upstream.
    
    Move lookup_processor_type() out of the __init section so it is callable
    from (eg) the secondary startup code during hotplug.
    
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Tested-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19c186ab4ea7d304deeb13b8a5bef3e737b817ec
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:16 2019 -0500

    ARM: 8810/1: vfp: Fix wrong assignement to ufp_exc
    
    Commit 5df7a99bdd0de4a0480320264c44c04543c29d5a upstream.
    
    In vfp_preserve_user_clear_hwstate, ufp_exc->fpinst2 gets assigned to
    itself. It should actually be hwstate->fpinst2 that gets assigned to the
    ufp_exc field.
    
    Fixes commit 3aa2df6ec2ca6bc143a65351cca4266d03a8bc41 ("ARM: 8791/1:
    vfp: use __copy_to_user() when saving VFP state").
    
    Reported-by: David Binderman <dcb314@hotmail.com>
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 042b172201a84d0f5a7fd7d979e25ad58eef8b68
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:15 2019 -0500

    ARM: 8797/1: spectre-v1.1: harden __copy_to_user
    
    Commit a1d09e074250fad24f1b993f327b18cc6812eb7a upstream.
    
    Sanitize user pointer given to __copy_to_user, both for standard version
    and memcopy version of the user accessor.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7a95704e9229a6f78987a0e851a6fbea407de03
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:14 2019 -0500

    ARM: 8796/1: spectre-v1,v1.1: provide helpers for address sanitization
    
    Commit afaf6838f4bc896a711180b702b388b8cfa638fc upstream.
    
    Introduce C and asm helpers to sanitize user address, taking the
    address range they target into account.
    
    Use asm helper for existing sanitization in __copy_from_user().
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit beaf90b2d280b5bd397b8cd19b75184b1e5678f6
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:13 2019 -0500

    ARM: 8795/1: spectre-v1.1: use put_user() for __put_user()
    
    Commit e3aa6243434fd9a82e84bb79ab1abd14f2d9a5a7 upstream.
    
    When Spectre mitigation is required, __put_user() needs to include
    check_uaccess. This is already the case for put_user(), so just make
    __put_user() an alias of put_user().
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39b282ade6d042424d06abb19013a4f9f62deb73
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:12 2019 -0500

    ARM: 8794/1: uaccess: Prevent speculative use of the current addr_limit
    
    Commit 621afc677465db231662ed126ae1f355bf8eac47 upstream.
    
    A mispredicted conditional call to set_fs could result in the wrong
    addr_limit being forwarded under speculation to a subsequent access_ok
    check, potentially forming part of a spectre-v1 attack using uaccess
    routines.
    
    This patch prevents this forwarding from taking place, but putting heavy
    barriers in set_fs after writing the addr_limit.
    
    Porting commit c2f0ad4fc089cff8 ("arm64: uaccess: Prevent speculative use
    of the current addr_limit").
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba22d59418232925d07891857149156d8cbe77b2
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:11 2019 -0500

    ARM: 8793/1: signal: replace __put_user_error with __put_user
    
    Commit 18ea66bd6e7a95bdc598223d72757190916af28b upstream.
    
    With Spectre-v1.1 mitigations, __put_user_error is pointless. In an attempt
    to remove it, replace its references in frame setups with __put_user.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73dad6efbe311d36786ea8cd6d748794a446b580
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:10 2019 -0500

    ARM: 8792/1: oabi-compat: copy oabi events using __copy_to_user()
    
    Commit 319508902600c2688e057750148487996396e9ca upstream.
    
    Copy events to user using __copy_to_user() rather than copy members of
    individually with __put_user_error().
    This has the benefit of disabling/enabling PAN once per event intead of
    once per event member.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cad5755b6e208afe1cc9143f167f7555552274e
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:09 2019 -0500

    ARM: 8791/1: vfp: use __copy_to_user() when saving VFP state
    
    Commit 3aa2df6ec2ca6bc143a65351cca4266d03a8bc41 upstream.
    
    Use __copy_to_user() rather than __put_user_error() for individual
    members when saving VFP state.
    This has the benefit of disabling/enabling PAN once per copied struct
    intead of once per write.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a59b35c3cb88e3fa1f050c34bea2f3f849851b4
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:08 2019 -0500

    ARM: 8790/1: signal: always use __copy_to_user to save iwmmxt context
    
    Commit 73839798af7ebc6c8d0c9271ebbbc148700e521f upstream.
    
    When setting a dummy iwmmxt context, create a local instance and
    use __copy_to_user both cases whether iwmmxt is being used or not.
    This has the benefit of disabling/enabling PAN once for the whole copy
    intead of once per write.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec4842816f04dc67638d1105b2001f418c462071
Author: Julien Thierry <julien.thierry.kdev@gmail.com>
Date:   Wed Feb 13 16:32:07 2019 -0500

    ARM: 8789/1: signal: copy registers using __copy_to_user()
    
    Commit 5ca451cf6ed04443774bbb7ee45332dafa42e99f upstream.
    
    When saving the ARM integer registers, use __copy_to_user() to
    copy them into user signal frame, rather than __put_user_error().
    This has the benefit of disabling/enabling PAN once for the whole copy
    intead of once per write.
    
    Signed-off-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David A. Long <dave.long@linaro.org>
    Reviewed-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80c8452ad45f6d77c2ba51b684243077b0feb094
Author: Jianchao Wang <jianchao.w.wang@oracle.com>
Date:   Wed Jan 30 17:01:56 2019 +0800

    blk-mq: fix a hung issue when fsync
    
    [ Upstream commit 85bd6e61f34dffa8ec2dc75ff3c02ee7b2f1cbce ]
    
    Florian reported a io hung issue when fsync(). It should be
    triggered by following race condition.
    
    data + post flush         a flush
    
    blk_flush_complete_seq
      case REQ_FSEQ_DATA
        blk_flush_queue_rq
        issued to driver      blk_mq_dispatch_rq_list
                                try to issue a flush req
                                failed due to NON-NCQ command
                                .queue_rq return BLK_STS_DEV_RESOURCE
    
    request completion
      req->end_io // doesn't check RESTART
      mq_flush_data_end_io
        case REQ_FSEQ_POSTFLUSH
          blk_kick_flush
            do nothing because previous flush
            has not been completed
         blk_mq_run_hw_queue
                                  insert rq to hctx->dispatch
                                  due to RESTART is still set, do nothing
    
    To fix this, replace the blk_mq_run_hw_queue in mq_flush_data_end_io
    with blk_mq_sched_restart to check and clear the RESTART flag.
    
    Fixes: bd166ef1 (blk-mq-sched: add framework for MQ capable IO schedulers)
    Reported-by: Florian Stecker <m19@florianstecker.de>
    Tested-by: Florian Stecker <m19@florianstecker.de>
    Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4aaa45f2d983819a0d299193f21368841bf725f
Author: Adrian Bunk <bunk@kernel.org>
Date:   Thu Nov 29 21:58:58 2018 +0200

    eeprom: at24: add support for 24c2048
    
    [ Upstream commit 37cf28d3b5bca1b532a0b6aac722e7f2788a9294 ]
    
    Works with ST M24M02.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57e85c67d0330239658ecd5f89f060c6381ea95d
Author: Adrian Bunk <bunk@kernel.org>
Date:   Thu Nov 29 21:58:57 2018 +0200

    dt-bindings: eeprom: at24: add "atmel,24c2048" compatible string
    
    [ Upstream commit 6c0c5dc33ff42af49243e94842d0ebdb153189ea ]
    
    Add new compatible to the device tree bindings.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
