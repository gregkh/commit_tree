commit d913bc0b6dac2b93233a0aff4ff418be8c615613
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 18 09:38:33 2017 +0200

    Linux 4.13.8

commit a75ac6b475ae817f4006b511b8eb2d1fbe6a5713
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Thu Oct 5 11:10:22 2017 +0200

    KVM: nVMX: update last_nonleaf_level when initializing nested EPT
    
    commit fd19d3b45164466a4adce7cbff448ba9189e1427 upstream.
    
    The function updates context->root_level but didn't call
    update_last_nonleaf_level so the previous and potentially wrong value
    was used for page walks.  For example, a zero value of last_nonleaf_level
    would allow a potential out-of-bounds access in arch/x86/mmu/paging_tmpl.h's
    walk_addr_generic function (CVE-2017-12188).
    
    Fixes: 155a97a3d7c78b46cef6f1a973c831bc5a4f82bb
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5c17d8342635f680ba6d31385f672e44749fd6e
Author: Mathias Krause <minipli@googlemail.com>
Date:   Thu Oct 5 20:30:12 2017 +0200

    x86/alternatives: Fix alt_max_short macro to really be a max()
    
    commit 6b32c126d33d5cb379bca280ab8acedc1ca978ff upstream.
    
    The alt_max_short() macro in asm/alternative.h does not work as
    intended, leading to nasty bugs. E.g. alt_max_short("1", "3")
    evaluates to 3, but alt_max_short("3", "1") evaluates to 1 -- not
    exactly the maximum of 1 and 3.
    
    In fact, I had to learn it the hard way by crashing my kernel in not
    so funny ways by attempting to make use of the ALTENATIVE_2 macro
    with alternatives where the first one was larger than the second
    one.
    
    According to [1] and commit dbe4058a6a44 ("x86/alternatives: Fix
    ALTERNATIVE_2 padding generation properly") the right handed side
    should read "-(-(a < b))" not "-(-(a - b))". Fix that, to make the
    macro work as intended.
    
    While at it, fix up the comments regarding the additional "-", too.
    It's not about gas' usage of s32 but brain dead logic of having a
    "true" value of -1 for the < operator ... *sigh*
    
    Btw., the one in asm/alternative-asm.h is correct. And, apparently,
    all current users of ALTERNATIVE_2() pass same sized alternatives,
    avoiding to hit the bug.
    
    [1] http://graphics.stanford.edu/~seander/bithacks.html#IntegerMinOrMax
    
    Reviewed-and-tested-by: Borislav Petkov <bp@suse.de>
    Fixes: dbe4058a6a44 ("x86/alternatives: Fix ALTERNATIVE_2 padding generation properly")
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/1507228213-13095-1-git-send-email-minipli@googlemail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4796d10a8ff5dacf4282d7d03e9c1ad1121be20
Author: Borislav Petkov <bp@suse.de>
Date:   Thu Oct 12 13:23:16 2017 +0200

    x86/microcode: Do the family check first
    
    commit 1f161f67a272cc4f29f27934dd3f74cb657eb5c4 upstream.
    
    On CPUs like AMD's Geode, for example, we shouldn't even try to load
    microcode because they do not support the modern microcode loading
    interface.
    
    However, we do the family check *after* the other checks whether the
    loader has been disabled on the command line or whether we're running in
    a guest.
    
    So move the family checks first in order to exit early if we're being
    loaded on an unsupported family.
    
    Reported-and-tested-by: Sven Glodowski <glodi1@arcor.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://bugzilla.suse.com/show_bug.cgi?id=1061396
    Link: http://lkml.kernel.org/r/20171012112316.977-1-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8d9458846fe9aa871581a08ad1827bb85452002
Author: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date:   Mon Oct 2 11:28:35 2017 +0200

    RAS/CEC: Use the right length for "cec_disable"
    
    commit 69a330007091ea8a801dd9fcd897ec52f9529586 upstream.
    
    parse_cec_param() compares a string with "cec_disable" using only 7
    characters of the 11-character-long string.
    
    The proper solution for this would be:
    
    #define CEC_DISABLE     "cec_disable"
    
            strncmp(str, CEC_DISABLE, strlen(CEC_DISABLE))
    
    but when comparing a string against a string constant strncmp() has no
    advantage over strcmp() because the comparison is guaranteed to be bound by
    the string constant. So just replace str strncmp() with strcmp().
    
    [ tglx: Made it use strcmp and updated the changelog ]
    
    Fixes: 011d82611172 ("RAS: Add a Corrected Errors Collector")
    Signed-off-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170903075440.30250-1-nicolas.iooss_linux@m4x.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e21045a223959d469174629614028136b202a586
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 4 11:01:13 2017 +0200

    USB: serial: console: fix use-after-free after failed setup
    
    commit 299d7572e46f98534033a9e65973f13ad1ce9047 upstream.
    
    Make sure to reset the USB-console port pointer when console setup fails
    in order to avoid having the struct usb_serial be prematurely freed by
    the console code when the device is later disconnected.
    
    Fixes: 73e487fdb75f ("[PATCH] USB console: fix disconnection issues")
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c7cb458405ecec07f2ae578af028af5dd62ba2e
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 4 11:01:12 2017 +0200

    USB: serial: console: fix use-after-free on disconnect
    
    commit bd998c2e0df0469707503023d50d46cf0b10c787 upstream.
    
    A clean-up patch removing two redundant NULL-checks from the console
    disconnect handler inadvertently also removed a third check. This could
    lead to the struct usb_serial being prematurely freed by the console
    code when a driver accepts but does not register any ports for an
    interface which also lacks endpoint descriptors.
    
    Fixes: 0e517c93dc02 ("USB: serial: console: clean up sanity checks")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b3e3c7282d6569d57ae35e923d1c29581e98215
Author: Shrirang Bagul <shrirang.bagul@canonical.com>
Date:   Fri Sep 29 12:39:51 2017 +0800

    USB: serial: qcserial: add Dell DW5818, DW5819
    
    commit f5d9644c5fca7d8e8972268598bb516a7eae17f9 upstream.
    
    Dell Wireless 5819/5818 devices are re-branded Sierra Wireless MC74
    series which will by default boot with vid 0x413c and pid's 0x81cf,
    0x81d0, 0x81d1, 0x81d2.
    
    Signed-off-by: Shrirang Bagul <shrirang.bagul@canonical.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c796da1d110fa3b410082a25a7748510d743daf1
Author: Henryk Heisig <hyniu@o2.pl>
Date:   Mon Sep 11 17:57:34 2017 +0200

    USB: serial: option: add support for TP-Link LTE module
    
    commit 837ddc4793a69b256ac5e781a5e729b448a8d983 upstream.
    
    This commit adds support for TP-Link LTE mPCIe module is used
    in in TP-Link MR200v1, MR6400v1 and v2 routers.
    
    Signed-off-by: Henryk Heisig <hyniu@o2.pl>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7e0b4b39663931a5b6900dad3e7b937dca93a42
Author: Andreas Engel <anen-nospam@gmx.net>
Date:   Mon Sep 18 21:11:57 2017 +0200

    USB: serial: cp210x: add support for ELV TFD500
    
    commit c496ad835c31ad639b6865714270b3003df031f6 upstream.
    
    Add the USB device id for the ELV TFD500 data logger.
    
    Signed-off-by: Andreas Engel <anen-nospam@gmx.net>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ae2c690f967da42967b5ac02b80226c8dc2a56b
Author: Sebastian Frei <dr.nop@gmx.net>
Date:   Tue Sep 12 09:50:59 2017 +0200

    USB: serial: cp210x: fix partnum regression
    
    commit 7eac35ea29dc54cbc8399de84c9bf16553575b89 upstream.
    
    When adding GPIO support for the cp2105, the mentioned commit by Martyn
    Welch introduced a query for the part number of the chip. Unfortunately
    the driver aborts probing when this query fails, so currently the driver
    can not be used with chips not supporting this query.
    I have a data cable for Siemens mobile phones (ID 10ab:10c5) where this
    is the case.
    With this patch the driver can be bound even if the part number can not
    be queried.
    
    Fixes: cf5276ce7867 ("USB: serial: cp210x: Adding GPIO support for CP2105")
    Signed-off-by: Sebastian Frei <dr.nop@gmx.net>
    [ johan: amend commit message; shorten error message and demote to
             warning; drop unnecessary move of usb_set_serial_data() ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78a02c93648eb32e5675d1d886794b39fdc6bdfa
Author: Jeffrey Chu <jeffrey.chu@cypress.com>
Date:   Fri Sep 8 21:08:58 2017 +0000

    USB: serial: ftdi_sio: add id for Cypress WICED dev board
    
    commit a6c215e21b0dc5fe9416dce90f9acc2ea53c4502 upstream.
    
    Add CYPRESS_VID vid and CYPRESS_WICED_BT_USB and CYPRESS_WICED_WL_USB
    device IDs to ftdi_sio driver.
    
    Signed-off-by: Jeffrey Chu <jeffrey.chu@cypress.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 709d1ac12dc68dbd48a49a809409e64b1c2f0a9e
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Oct 9 12:47:24 2017 +0200

    genirq/cpuhotplug: Add sanity check for effective affinity mask
    
    commit 60b09c51bb4fb46e2331fdbb39f91520f31d35f7 upstream.
    
    The effective affinity mask handling has no safety net when the mask is not
    updated by the interrupt chip or the mask contains offline CPUs.
    
    If that happens the CPU unplug code fails to migrate interrupts.
    
    Add sanity checks and emit a warning when the mask contains only offline
    CPUs.
    
    Fixes: 415fcf1a2293 ("genirq/cpuhotplug: Use effective affinity mask")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1710042208400.2406@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2e2b0db395b7ea655213495240a366c7dbe04f6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Oct 4 21:07:38 2017 +0200

    genirq/cpuhotplug: Enforce affinity setting on startup of managed irqs
    
    commit e43b3b58548051f8809391eb7bec7a27ed3003ea upstream.
    
    Managed interrupts can end up in a stale state on CPU hotplug. If the
    interrupt is not targeting a single CPU, i.e. the affinity mask spawns
    multiple CPUs then the following can happen:
    
    After boot:
    
    dstate:   0x01601200
                IRQD_ACTIVATED
                IRQD_IRQ_STARTED
                IRQD_SINGLE_TARGET
                IRQD_AFFINITY_SET
                IRQD_AFFINITY_MANAGED
    node:     0
    affinity: 24-31
    effectiv: 24
    pending:  0
    
    After offlining CPU 31 - 24
    
    dstate:   0x01a31000
                IRQD_IRQ_DISABLED
                IRQD_IRQ_MASKED
                IRQD_SINGLE_TARGET
                IRQD_AFFINITY_SET
                IRQD_AFFINITY_MANAGED
                IRQD_MANAGED_SHUTDOWN
    node:     0
    affinity: 24-31
    effectiv: 24
    pending:  0
    
    Now CPU 25 gets onlined again, so it should get the effective interrupt
    affinity for this interruopt, but due to the x86 interrupt affinity setter
    restrictions this ends up after restarting the interrupt with:
    
    dstate:   0x01601300
                IRQD_ACTIVATED
                IRQD_IRQ_STARTED
                IRQD_SINGLE_TARGET
                IRQD_AFFINITY_SET
                IRQD_SETAFFINITY_PENDING
                IRQD_AFFINITY_MANAGED
    node:     0
    affinity: 24-31
    effectiv: 24
    pending:  24-31
    
    So the interrupt is still affine to CPU 24, which was the last CPU to go
    offline of that affinity set and the move to an online CPU within 24-31,
    in this case 25, is pending. This mechanism is x86/ia64 specific as those
    architectures cannot move interrupts from thread context and do this when
    an interrupt is actually handled. So the move is set to pending.
    
    Whats worse is that offlining CPU 25 again results in:
    
    dstate:   0x01601300
                IRQD_ACTIVATED
                IRQD_IRQ_STARTED
                IRQD_SINGLE_TARGET
                IRQD_AFFINITY_SET
                IRQD_SETAFFINITY_PENDING
                IRQD_AFFINITY_MANAGED
    node:     0
    affinity: 24-31
    effectiv: 24
    pending:  24-31
    
    This means the interrupt has not been shut down, because the outgoing CPU
    is not in the effective affinity mask, but of course nothing notices that
    the effective affinity mask is pointing at an offline CPU.
    
    In the case of restarting a managed interrupt the move restriction does not
    apply, so the affinity setting can be made unconditional. This needs to be
    done _before_ the interrupt is started up as otherwise the condition for
    moving it from thread context would not longer be fulfilled.
    
    With that change applied onlining CPU 25 after offlining 31-24 results in:
    
    dstate:   0x01600200
                IRQD_ACTIVATED
                IRQD_IRQ_STARTED
                IRQD_SINGLE_TARGET
                IRQD_AFFINITY_MANAGED
    node:     0
    affinity: 24-31
    effectiv: 25
    pending:
    
    And after offlining CPU 25:
    
    dstate:   0x01a30000
                IRQD_IRQ_DISABLED
                IRQD_IRQ_MASKED
                IRQD_SINGLE_TARGET
                IRQD_AFFINITY_MANAGED
                IRQD_MANAGED_SHUTDOWN
    node:     0
    affinity: 24-31
    effectiv: 25
    pending:
    
    which is the correct and expected result.
    
    Fixes: 761ea388e8c4 ("genirq: Handle managed irqs gracefully in irq_startup()")
    Reported-by: YASUAKI ISHIMATSU <yasu.isimatu@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: axboe@kernel.dk
    Cc: linux-scsi@vger.kernel.org
    Cc: Sumit Saxena <sumit.saxena@broadcom.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: mpe@ellerman.id.au
    Cc: Shivasharan Srikanteshwara <shivasharan.srikanteshwara@broadcom.com>
    Cc: Kashyap Desai <kashyap.desai@broadcom.com>
    Cc: keith.busch@intel.com
    Cc: peterz@infradead.org
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1710042208400.2406@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c5538c12db3b2e6023af83a17d6d1de4e994d08
Author: Mark Santaniello <marksan@fb.com>
Date:   Fri Oct 6 01:07:22 2017 -0700

    perf script: Add missing separator for "-F ip,brstack" (and brstackoff)
    
    commit e9516c0813aeb89ebd19ec0ed39fbfcd78b6ef3a upstream.
    
    Prior to commit 55b9b50811ca ("perf script: Support -F brstack,dso and
    brstacksym,dso"), we were printing a space before the brstack data. It
    seems that this space was important.  Without it, parsing is difficult.
    
    Very sorry for the mistake.
    
    Notice here how the "ip" and "brstack" run together:
    
    $ perf script -F ip,brstack | head -n 1
              22e18c40x22e19e2/0x22e190b/P/-/-/0 0x22e19a1/0x22e19d0/P/-/-/0 0x22e195d/0x22e1990/P/-/-/0 0x22e18e9/0x22e1943/P/-/-/0 0x22e1a69/0x22e18c0/P/-/-/0 0x22e19f7/0x22e1a20/P/-/-/0 0x22e1910/0x22e19ee/P/-/-/0 0x22e19e2/0x22e190b/P/-/-/0 0x22e19a1/0x22e19d0/P/-/-/0 0x22e195d/0x22e1990/P/-/-/0 0x22e18e9/0x22e1943/P/-/-/0 0x22e1a69/0x22e18c0/P/-/-/0 0x22e19f7/0x22e1a20/P/-/-/0 0x22e1910/0x22e19ee/P/-/-/0 0x22e19e2/0x22e190b/P/-/-/0 0x22e19a1/0x22e19d0/P/-/-/0
    
    After this diff, sanity is restored:
    
    $ perf script -F ip,brstack | head -n 1
              22e18c4 0x22e19e2/0x22e190b/P/-/-/0  0x22e19a1/0x22e19d0/P/-/-/0  0x22e195d/0x22e1990/P/-/-/0  0x22e18e9/0x22e1943/P/-/-/0  0x22e1a69/0x22e18c0/P/-/-/0  0x22e19f7/0x22e1a20/P/-/-/0  0x22e1910/0x22e19ee/P/-/-/0  0x22e19e2/0x22e190b/P/-/-/0  0x22e19a1/0x22e19d0/P/-/-/0  0x22e195d/0x22e1990/P/-/-/0  0x22e18e9/0x22e1943/P/-/-/0  0x22e1a69/0x22e18c0/P/-/-/0  0x22e19f7/0x22e1a20/P/-/-/0  0x22e1910/0x22e19ee/P/-/-/0  0x22e19e2/0x22e190b/P/-/-/0  0x22e19a1/0x22e19d0/P/-/-/0
    
    Signed-off-by: Mark Santaniello <marksan@fb.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: 55b9b50811ca ("perf script: Support -F brstack,dso and brstacksym,dso")
    Link: http://lkml.kernel.org/r/20171006080722.3442046-1-marksan@fb.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f3bb57753d26ef4c491cd17d0670c3dcbb5528c
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Sep 24 10:21:15 2017 -0400

    bio_copy_user_iov(): don't ignore ->iov_offset
    
    commit 1cfd0ddd82232804e03f3023f6a58b50dfef0574 upstream.
    
    Since "block: support large requests in blk_rq_map_user_iov" we
    started to call it with partially drained iter; that works fine
    on the write side, but reads create a copy of iter for completion
    time.  And that needs to take the possibility of ->iov_iter != 0
    into account...
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02fb540228593ed28ac19040d403996f907ff6a7
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 23 15:51:23 2017 -0400

    more bio_map_user_iov() leak fixes
    
    commit 2b04e8f6bbb196cab4b232af0f8d48ff2c7a8058 upstream.
    
    we need to take care of failure exit as well - pages already
    in bio should be dropped by analogue of bio_unmap_pages(),
    since their refcounts had been bumped only once per reference
    in bio.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe1d63bc4570ee980a59996667c296c5be7252e
Author: Vitaly Mayatskikh <v.mayatskih@gmail.com>
Date:   Fri Sep 22 01:18:39 2017 -0400

    fix unbalanced page refcounting in bio_map_user_iov
    
    commit 95d78c28b5a85bacbc29b8dba7c04babb9b0d467 upstream.
    
    bio_map_user_iov and bio_unmap_user do unbalanced pages refcounting if
    IO vector has small consecutive buffers belonging to the same page.
    bio_add_pc_page merges them into one, but the page reference is never
    dropped.
    
    Signed-off-by: Vitaly Mayatskikh <v.mayatskih@gmail.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 287614d0f6c1497e7a38bb4a2eb28a6c2daf6791
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Oct 9 11:13:18 2017 +0200

    direct-io: Prevent NULL pointer access in submit_page_section
    
    commit 899f0429c7d3eed886406cd72182bee3b96aa1f9 upstream.
    
    In the code added to function submit_page_section by commit b1058b981,
    sdio->bio can currently be NULL when calling dio_bio_submit.  This then
    leads to a NULL pointer access in dio_bio_submit, so check for a NULL
    bio in submit_page_section before trying to submit it instead.
    
    Fixes xfstest generic/250 on gfs2.
    
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4770073819e071c6b44b5a2fceff3590f71a4fc
Author: Thierry Reding <treding@nvidia.com>
Date:   Mon Oct 9 12:29:35 2017 +0200

    Revert "PCI: tegra: Do not allocate MSI target memory"
    
    commit 8c2b4e3c3725801b57d7b858d216d38f83bdb35d upstream.
    
    This reverts commit d7bd554f27c942e6b8b54100b4044f9be1038edf.
    
    It turns out that Tegra20 has a bug in the implementation of the MSI
    target address register (which is worked around by the existence of the
    struct tegra_pcie_soc.msi_base_shift parameter) that restricts the MSI
    target memory to the lower 32 bits of physical memory on that particular
    generation. The offending patch causes a regression on TrimSlice, which
    is a Tegra20-based device and has a PCI network interface card.
    
    An initial, simpler fix was to change the MSI target address for Tegra20
    only, but it was pointed out that the offending commit also prevents the
    use of 32-bit only MSI capable devices, even on later chips. Technically
    this was never guaranteed to work with the prior code in the first place
    because the allocated page could have resided beyond the 4 GiB boundary,
    but it is still possible that this could've introduced a regression.
    
    The proper fix that was settled on is to select a fixed address within
    the lowest 32 bits of physical address space that is otherwise unused,
    but testing of that patch has provided mixed results that are not fully
    understood yet.
    
    Given all of the above and the relative urgency to get this fixed in
    v4.13, revert the offending commit until a universal fix is found.
    
    Fixes: d7bd554f27c9 ("PCI: tegra: Do not allocate MSI target memory")
    Reported-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Reported-by: Erik Faye-Lund <kusmabite@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00dfe8096f08c9c71b02771b3f354faec6c949ed
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Mon Oct 9 09:00:49 2017 +0200

    PCI: aardvark: Move to struct pci_host_bridge IRQ mapping functions
    
    commit 407dae1e4415acde2d9f48bb76361893c4653756 upstream.
    
    struct pci_host_bridge gained hooks to map/swizzle IRQs, so that the IRQ
    mapping can be done automatically by PCI core code through the
    pci_assign_irq() function instead of resorting to arch-specific
    implementation callbacks to carry out the same task which force PCI host
    bridge drivers implementation to implement per-arch kludges to carry out a
    task that is inherently architecture agnostic.
    
    Commit 769b461fc0c0 ("arm64: PCI: Drop DT IRQ allocation from
    pcibios_alloc_irq()") was assuming all PCI host controller drivers had been
    converted to use ->map_irq(), but that wasn't the case: pci-aardvark had
    not been converted. Due to this, it broke the support for legacy PCI
    interrupts when using the pci-aardvark driver (used on Marvell Armada 3720
    platforms).
    
    In order to fix this, we make sure the ->map_irq and ->swizzle_irq fields
    of pci_host_bridge are properly filled in.
    
    Fixes: 769b461fc0c0 ("arm64: PCI: Drop DT IRQ allocation from pcibios_alloc_irq()")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7cd932d3421c3cfae610818d764eb08c6fd3564
Author: Andrew Gabbasov <andrew_gabbasov@mentor.com>
Date:   Sat Sep 30 08:55:55 2017 -0700

    usb: gadget: composite: Fix use-after-free in usb_composite_overwrite_options
    
    commit aec17e1e249567e82b26dafbb86de7d07fde8729 upstream.
    
    KASAN enabled configuration reports an error
    
        BUG: KASAN: use-after-free in usb_composite_overwrite_options+...
                    [libcomposite] at addr ...
        Read of size 1 by task ...
    
    when some driver is un-bound and then bound again.
    For example, this happens with FunctionFS driver when "ffs-test"
    test application is run several times in a row.
    
    If the driver has empty manufacturer ID string in initial static data,
    it is then replaced with generated string. After driver unbinding
    the generated string is freed, but the driver data still keep that
    pointer. And if the driver is then bound again, that pointer
    is re-used for string emptiness check.
    
    The fix is to clean up the driver string data upon its unbinding
    to drop the pointer to freed memory.
    
    Fixes: cc2683c318a5 ("usb: gadget: Provide a default implementation of default manufacturer string")
    Signed-off-by: Andrew Gabbasov <andrew_gabbasov@mentor.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 449b43e1db6194996f9dc902240f40a0dd109ca5
Author: Andrew Gabbasov <andrew_gabbasov@mentor.com>
Date:   Sat Sep 30 08:54:52 2017 -0700

    usb: gadget: configfs: Fix memory leak of interface directory data
    
    commit ff74745e6d3d97a865eda8c1f3fd29c13b79f0cc upstream.
    
    Kmemleak checking configuration reports a memory leak in
    usb_os_desc_prepare_interf_dir function when rndis function
    instance is freed and then allocated again. For example, this
    happens with FunctionFS driver with RNDIS function enabled
    when "ffs-test" test application is run several times in a row.
    
    The data for intermediate "os_desc" group for interface directories
    is allocated as a single VLA chunk and (after a change of default
    groups handling) is not ever freed and actually not stored anywhere
    besides inside a list of default groups of a parent group.
    
    The fix is to make usb_os_desc_prepare_interf_dir function return
    a pointer to allocated data (as a pointer to the first VLA item)
    instead of (an unused) integer and to make the caller component
    (currently the only one is RNDIS function) responsible for storing
    the pointer and freeing the memory when appropriate.
    
    Fixes: 1ae1602de028 ("configfs: switch ->default groups to a linked list")
    Signed-off-by: Andrew Gabbasov <andrew_gabbasov@mentor.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38069a37a4eee27e4ac58fb5c98221616c8a926b
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Thu Oct 5 16:15:20 2017 +0200

    drm/i915: Use crtc_state_is_legacy_gamma in intel_color_check
    
    commit d6a55c63e6adcb58957bbdce2d390088970273da upstream.
    
    crtc_state_is_legacy_gamma also checks for CTM, which was missing from
    intel_color_check. By using the same condition for commit and check
    we reduce the chance of mismatches.
    
    This was spotted by KASAN while trying to rework kms_color igt test.
    
    [   72.008660] ==================================================================
    [   72.009326] BUG: KASAN: slab-out-of-bounds in bdw_load_gamma_lut.isra.3+0x15c/0x360 [i915]
    [   72.009519] Read of size 2 at addr ffff880220216e50 by task kms_color/1158
    [   72.009900] CPU: 2 PID: 1158 Comm: kms_color Tainted: G     U  W 4.14.0-rc3-patser+ #5281
    [   72.009921] Hardware name: GIGABYTE GB-BKi3A-7100/MFLP3AP-00, BIOS F1 07/27/2016
    [   72.009941] Call Trace:
    [   72.009968]  dump_stack+0xc5/0x151
    [   72.009996]  ? _atomic_dec_and_lock+0x10f/0x10f
    [   72.010024]  ? show_regs_print_info+0x3c/0x3c
    [   72.010072]  print_address_description+0x7f/0x240
    [   72.010108]  kasan_report+0x216/0x370
    [   72.010308]  ? bdw_load_gamma_lut.isra.3+0x15c/0x360 [i915]
    [   72.010349]  __asan_load2+0x74/0x80
    [   72.010552]  bdw_load_gamma_lut.isra.3+0x15c/0x360 [i915]
    [   72.010772]  broadwell_load_luts+0x1f0/0x300 [i915]
    [   72.010997]  intel_color_load_luts+0x36/0x40 [i915]
    [   72.011205]  intel_begin_crtc_commit+0xa1/0x310 [i915]
    [   72.011283]  drm_atomic_helper_commit_planes_on_crtc+0xa6/0x320 [drm_kms_helper]
    [   72.011316]  ? wait_for_completion_io+0x460/0x460
    [   72.011524]  intel_update_crtc+0xe3/0x100 [i915]
    [   72.011720]  skl_update_crtcs+0x360/0x3f0 [i915]
    [   72.011945]  ? intel_update_crtcs+0xf0/0xf0 [i915]
    [   72.012010]  ? drm_atomic_helper_wait_for_dependencies+0x3d9/0x400 [drm_kms_helper]
    [   72.012231]  intel_atomic_commit_tail+0x8db/0x1500 [i915]
    [   72.012273]  ? __lock_is_held+0x9c/0xc0
    [   72.012494]  ? skl_update_crtcs+0x3f0/0x3f0 [i915]
    [   72.012518]  ? find_next_bit+0xb/0x10
    [   72.012544]  ? cpumask_next+0x1a/0x20
    [   72.012745]  ? i915_sw_fence_complete+0x9d/0xe0 [i915]
    [   72.012938]  ? __i915_sw_fence_complete+0x5d0/0x5d0 [i915]
    [   72.013176]  intel_atomic_commit+0x528/0x570 [i915]
    [   72.013280]  ? drm_atomic_get_property+0xc00/0xc00 [drm]
    [   72.013466]  ? intel_atomic_commit_tail+0x1500/0x1500 [i915]
    [   72.013496]  ? kmem_cache_alloc_trace+0x266/0x280
    [   72.013714]  ? intel_atomic_commit_tail+0x1500/0x1500 [i915]
    [   72.013812]  drm_atomic_commit+0x77/0x80 [drm]
    [   72.013911]  set_property_atomic+0x14a/0x210 [drm]
    [   72.014015]  ? drm_object_property_get_value+0x70/0x70 [drm]
    [   72.014080]  ? mutex_unlock+0xd/0x10
    [   72.014292]  ? intel_atomic_commit_tail+0x1500/0x1500 [i915]
    [   72.014379]  drm_mode_obj_set_property_ioctl+0x1cf/0x310 [drm]
    [   72.014481]  ? drm_mode_obj_find_prop_id+0xa0/0xa0 [drm]
    [   72.014510]  ? lock_release+0x6c0/0x6c0
    [   72.014602]  ? drm_is_current_master+0x46/0x60 [drm]
    [   72.014706]  drm_ioctl_kernel+0x148/0x1d0 [drm]
    [   72.014799]  ? drm_mode_obj_find_prop_id+0xa0/0xa0 [drm]
    [   72.014898]  ? drm_ioctl_permit+0x100/0x100 [drm]
    [   72.014936]  ? kasan_check_write+0x14/0x20
    [   72.015039]  drm_ioctl+0x441/0x660 [drm]
    [   72.015129]  ? drm_mode_obj_find_prop_id+0xa0/0xa0 [drm]
    [   72.015235]  ? drm_getstats+0x20/0x20 [drm]
    [   72.015287]  ? ___might_sleep+0x159/0x340
    [   72.015311]  ? find_held_lock+0xcf/0xf0
    [   72.015341]  ? __schedule_bug+0x110/0x110
    [   72.015405]  do_vfs_ioctl+0xa88/0xb10
    [   72.015449]  ? ioctl_preallocate+0x1a0/0x1a0
    [   72.015487]  ? selinux_capable+0x20/0x20
    [   72.015525]  ? rcu_dynticks_momentary_idle+0x40/0x40
    [   72.015607]  SyS_ioctl+0x4e/0x80
    [   72.015647]  entry_SYSCALL_64_fastpath+0x18/0xad
    [   72.015670] RIP: 0033:0x7ff74a3d04d7
    [   72.015691] RSP: 002b:00007ffc594bec08 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [   72.015734] RAX: ffffffffffffffda RBX: ffffffff8718f54a RCX: 00007ff74a3d04d7
    [   72.015756] RDX: 00007ffc594bec40 RSI: 00000000c01864ba RDI: 0000000000000003
    [   72.015777] RBP: ffff880211c0ff98 R08: 0000000000000086 R09: 0000000000000000
    [   72.015799] R10: 00007ff74a691b58 R11: 0000000000000246 R12: 0000000000000355
    [   72.015821] R13: 00000000ff00eb00 R14: 0000000000000a00 R15: 00007ff746082000
    [   72.015857]  ? trace_hardirqs_off_caller+0xfa/0x110
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171005141520.23990-1-maarten.lankhorst@linux.intel.com
    [mlankhorst: s/crtc_state_is_legacy/&_gamma/ (danvet)]
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Fixes: 82cf435b3134 ("drm/i915: Implement color management on bdw/skl/bxt/kbl")
    (cherry picked from commit 0c3767b28186c8129f2a2cfec06a93dcd6102391)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d80eefe7782284f9c2abfcc136f4071f90d7a8f
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Thu Sep 28 11:21:57 2017 +0300

    drm/i915/bios: parse DDI ports also for CHV for HDMI DDC pin and DP AUX channel
    
    commit ea850f64c2722278f150dc11de2141baeb24211c upstream.
    
    While technically CHV isn't DDI, we do look at the VBT based DDI port
    info for HDMI DDC pin and DP AUX channel. (We call these "alternate",
    but they're really just something that aren't platform defaults.)
    
    In commit e4ab73a13291 ("drm/i915: Respect alternate_ddc_pin for all DDI
    ports") Ville writes, "IIRC there may be CHV system that might actually
    need this."
    
    I'm not sure why there couldn't be even more platforms that need this,
    but start conservative, and parse the info for CHV in addition to DDI.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=100553
    Reported-by: Marek Wilczewski <mw@3cte.pl>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/d0815082cb98487618429b62414854137049b888.1506586821.git.jani.nikula@intel.com
    (cherry picked from commit 348e4058ebf53904e817eec7a1b25327143c2ed2)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d324717c02e5a9e4488eb7b8cce1be2ed217841
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Apr 1 18:37:25 2016 +0300

    drm/i915: Read timings from the correct transcoder in intel_crtc_mode_get()
    
    commit 7b50f7b24cd6c98541f1af53bddc5b6e861ee8c8 upstream.
    
    intel_crtc->config->cpu_transcoder isn't yet filled out when
    intel_crtc_mode_get() gets called during output probing, so we should
    not use it there. Instead intel_crtc_mode_get() figures out the correct
    transcoder on its own, and that's what we should use.
    
    If the BIOS boots LVDS on pipe B, intel_crtc_mode_get() would actually
    end up reading the timings from pipe A instead (since PIPE_A==0),
    which clearly isn't what we want.
    
    It looks to me like this may have been broken by
    commit eccb140bca67 ("drm/i915: hw state readout&check support for cpu_transcoder")
    as that one removed the early initialization of cpu_transcoder from
    intel_crtc_init().
    
    Cc: dri-devel@lists.freedesktop.org
    Cc: Rob Kramer <rob@solution-space.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reported-by: Rob Kramer <rob@solution-space.com>
    Fixes: eccb140bca67 ("drm/i915: hw state readout&check support for cpu_transcoder")
    References: https://lists.freedesktop.org/archives/dri-devel/2016-April/104142.html
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/1459525046-19425-1-git-send-email-ville.syrjala@linux.intel.com
    (cherry picked from commit e30a154b5262b967b133b06ac40777e651045898)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6182af7be0fc85fac8ddce61284d4a8cdb6ba099
Author: Manasi Navare <manasi.d.navare@intel.com>
Date:   Wed Oct 4 09:48:26 2017 -0700

    drm/i915/edp: Get the Panel Power Off timestamp after panel is off
    
    commit d7ba25bd9ef802ff02414e9105f4222d1795f27a upstream.
    
    Kernel stores the time in jiffies at which the eDP panel is turned
    off. This should be obtained after the panel is off (after the
    wait_panel_off). When we next attempt to turn the panel on, we use the
    difference between the timestamp at which we want to turn the panel on
    and timestamp at which panel was turned off to ensure that this is equal
    to panel power cycle delay and if not we wait for the remaining
    time. Not waiting for the panel power cycle delay can cause the panel to
    not turn on giving rise to AUX timeouts for the attempted AUX
    transactions.
    
    v2:
    * Separate lines for bugzilla (Jani Nikula)
    * Suggested by tag (Daniel Vetter)
    
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101518
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101144
    Suggested-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Manasi Navare <manasi.d.navare@intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Jani Nikula <jani.nikula@linux.intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1507135706-17147-1-git-send-email-manasi.d.navare@intel.com
    (cherry picked from commit cbacf02e7796fea02e5c6e46c90ed7cbe9e6f2c0)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06161815d5b8b3da856c3e51aeadc813b4d9e0a1
Author: Jeffy Chen <jeffy.chen@rock-chips.com>
Date:   Mon Oct 9 14:46:41 2017 +0800

    drm/atomic: Unref duplicated drm_atomic_state in drm_atomic_helper_resume()
    
    commit 78279127253a6c36ed8829eb2b7bc28ef48d9717 upstream.
    
    Kmemleak reported memory leak after suspend and resume:
    unreferenced object 0xffffffc0e31d8880 (size 128):
      comm "bash", pid 181, jiffies 4294763583 (age 24.694s)
      hex dump (first 32 bytes):
        01 00 00 00 00 00 00 00 00 20 a2 eb c0 ff ff ff  ......... ......
        01 00 00 00 00 00 00 00 80 87 1d e3 c0 ff ff ff  ................
      backtrace:
        [<ffffffc00034bb64>] __save_stack_trace+0x48/0x6c
        [<ffffffc00034c244>] create_object+0x138/0x254
        [<ffffffc0009dd218>] kmemleak_alloc+0x58/0x8c
        [<ffffffc000346de4>] kmem_cache_alloc_trace+0x188/0x254
        [<ffffffc0005af4c0>] drm_atomic_state_alloc+0x3c/0x88
        [<ffffffc000591f0c>] drm_atomic_helper_duplicate_state+0x28/0x158
        [<ffffffc000592098>] drm_atomic_helper_suspend+0x5c/0xf0
    
    Problem here is that we are duplicating the drm_atomic_state in
    drm_atomic_helper_suspend(), but not unreference it in the resume path.
    
    Fixes: 1494276000db ("drm/atomic-helper: Implement subsystem-level suspend/resume")
    Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171009064641.15174-1-jeffy.chen@rock-chips.com
    Fixes: 0853695c3ba4 ("drm: Add reference counting to drm_atomic_state")
    (cherry picked from commit 6d281b1f79e194c02125da29ea77316810261ca8)
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca794129db78b6213872552e37568746eafcd719
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 14:51:23 2017 +0200

    ALSA: line6: Fix leftover URB at error-path during probe
    
    commit c95072b3d88fac4be295815f2b67df366c0c297f upstream.
    
    While line6_probe() may kick off URB for a control MIDI endpoint, the
    function doesn't clean up it properly at its error path.  This results
    in a leftover URB action that is eventually triggered later and causes
    an Oops like:
      general protection fault: 0000 [#1] PREEMPT SMP KASAN
      CPU: 1 PID: 0 Comm: swapper/1 Not tainted
      RIP: 0010:usb_fill_bulk_urb ./include/linux/usb.h:1619
      RIP: 0010:line6_start_listen+0x3fe/0x9e0 sound/usb/line6/driver.c:76
      Call Trace:
       <IRQ>
       line6_data_received+0x1f7/0x470 sound/usb/line6/driver.c:326
       __usb_hcd_giveback_urb+0x2e0/0x650 drivers/usb/core/hcd.c:1779
       usb_hcd_giveback_urb+0x337/0x420 drivers/usb/core/hcd.c:1845
       dummy_timer+0xba9/0x39f0 drivers/usb/gadget/udc/dummy_hcd.c:1965
       call_timer_fn+0x2a2/0x940 kernel/time/timer.c:1281
       ....
    
    Since the whole clean-up procedure is done in line6_disconnect()
    callback, we can simply call it in the error path instead of
    open-coding the whole again.  It'll fix such an issue automagically.
    
    The bug was spotted by syzkaller.
    
    Fixes: eedd0e95d355 ("ALSA: line6: Don't forget to call driver's destructor at error path")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b96981a28bc15a6db4780ba24dd2b31a77283a1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 14:32:15 2017 +0200

    ALSA: line6: Fix missing initialization before error path
    
    commit cb02ffc76a53b5ea751b79b8d4f4d180e5868475 upstream.
    
    The error path in podhd_init() tries to clear the pending timer, while
    the timer object is initialized at the end of init sequence, thus it
    may hit the uninitialized object, as spotted by syzkaller:
    
      INFO: trying to register non-static key.
      the code is fine but needs lockdep annotation.
      turning off the locking correctness validator.
      CPU: 1 PID: 1845 Comm: kworker/1:2 Not tainted
      4.14.0-rc2-42613-g1488251d1a98 #238
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Workqueue: usb_hub_wq hub_event
      Call Trace:
       __dump_stack lib/dump_stack.c:16
       dump_stack+0x292/0x395 lib/dump_stack.c:52
       register_lock_class+0x6c4/0x1a00 kernel/locking/lockdep.c:769
       __lock_acquire+0x27e/0x4550 kernel/locking/lockdep.c:3385
       lock_acquire+0x259/0x620 kernel/locking/lockdep.c:4002
       del_timer_sync+0x12c/0x280 kernel/time/timer.c:1237
       podhd_disconnect+0x8c/0x160 sound/usb/line6/podhd.c:299
       line6_probe+0x844/0x1310 sound/usb/line6/driver.c:783
       podhd_probe+0x64/0x70 sound/usb/line6/podhd.c:474
       ....
    
    For addressing it, assure the initializations of timer and work by
    moving them to the beginning of podhd_init().
    
    Fixes: 790869dacc3d ("ALSA: line6: Add support for POD X3")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d88463d14579d031010caf7362634b00a5600fb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 14:26:27 2017 +0200

    ALSA: line6: Fix NULL dereference at podhd_disconnect()
    
    commit 54a4b2b45817ea2365b40c923c098a26af0c0dbb upstream.
    
    When podhd_init() failed with the acquiring a ctrl i/f, the line6
    helper still calls the disconnect callback that eventually calls again
    usb_driver_release_interface() with the NULL intf.
    
    Put the proper NULL check before calling it for avoiding an Oops.
    
    Fixes: fc90172ba283 ("ALSA: line6: Claim pod x3 usb data interface")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 420c705bc82fe23b9ee4ccaf0febf79099dc44bb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 11 16:39:02 2017 +0200

    ALSA: caiaq: Fix stray URB at probe error path
    
    commit 99fee508245825765ff60155fed43f970ff83a8f upstream.
    
    caiaq driver doesn't kill the URB properly at its error path during
    the probe, which may lead to a use-after-free error later.  This patch
    addresses it.
    
    Reported-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff021a7e03917ed526ce3cd321697b709a5c822f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 10:02:56 2017 +0200

    ALSA: seq: Fix copy_from_user() call inside lock
    
    commit 5803b023881857db32ffefa0d269c90280a67ee0 upstream.
    
    The event handler in the virmidi sequencer code takes a read-lock for
    the linked list traverse, while it's calling snd_seq_dump_var_event()
    in the loop.  The latter function may expand the user-space data
    depending on the event type.  It eventually invokes copy_from_user(),
    which might be a potential dead-lock.
    
    The sequencer core guarantees that the user-space data is passed only
    with atomic=0 argument, but snd_virmidi_dev_receive_event() ignores it
    and always takes read-lock().  For avoiding the problem above, this
    patch introduces rwsem for non-atomic case, while keeping rwlock for
    atomic case.
    
    Also while we're at it: the superfluous irq flags is dropped in
    snd_virmidi_input_open().
    
    Reported-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71c766e18dd3f321bd450ec7c0c20643b2c4b74e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 11:09:20 2017 +0200

    ALSA: seq: Fix use-after-free at creating a port
    
    commit 71105998845fb012937332fe2e806d443c09e026 upstream.
    
    There is a potential race window opened at creating and deleting a
    port via ioctl, as spotted by fuzzing.  snd_seq_create_port() creates
    a port object and returns its pointer, but it doesn't take the
    refcount, thus it can be deleted immediately by another thread.
    Meanwhile, snd_seq_ioctl_create_port() still calls the function
    snd_seq_system_client_ev_port_start() with the created port object
    that is being deleted, and this triggers use-after-free like:
    
     BUG: KASAN: use-after-free in snd_seq_ioctl_create_port+0x504/0x630 [snd_seq] at addr ffff8801f2241cb1
     =============================================================================
     BUG kmalloc-512 (Tainted: G    B          ): kasan: bad access detected
     -----------------------------------------------------------------------------
     INFO: Allocated in snd_seq_create_port+0x94/0x9b0 [snd_seq] age=1 cpu=3 pid=4511
            ___slab_alloc+0x425/0x460
            __slab_alloc+0x20/0x40
            kmem_cache_alloc_trace+0x150/0x190
            snd_seq_create_port+0x94/0x9b0 [snd_seq]
            snd_seq_ioctl_create_port+0xd1/0x630 [snd_seq]
            snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
            snd_seq_ioctl+0x40/0x80 [snd_seq]
            do_vfs_ioctl+0x54b/0xda0
            SyS_ioctl+0x79/0x90
            entry_SYSCALL_64_fastpath+0x16/0x75
     INFO: Freed in port_delete+0x136/0x1a0 [snd_seq] age=1 cpu=2 pid=4717
            __slab_free+0x204/0x310
            kfree+0x15f/0x180
            port_delete+0x136/0x1a0 [snd_seq]
            snd_seq_delete_port+0x235/0x350 [snd_seq]
            snd_seq_ioctl_delete_port+0xc8/0x180 [snd_seq]
            snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
            snd_seq_ioctl+0x40/0x80 [snd_seq]
            do_vfs_ioctl+0x54b/0xda0
            SyS_ioctl+0x79/0x90
            entry_SYSCALL_64_fastpath+0x16/0x75
     Call Trace:
      [<ffffffff81b03781>] dump_stack+0x63/0x82
      [<ffffffff81531b3b>] print_trailer+0xfb/0x160
      [<ffffffff81536db4>] object_err+0x34/0x40
      [<ffffffff815392d3>] kasan_report.part.2+0x223/0x520
      [<ffffffffa07aadf4>] ? snd_seq_ioctl_create_port+0x504/0x630 [snd_seq]
      [<ffffffff815395fe>] __asan_report_load1_noabort+0x2e/0x30
      [<ffffffffa07aadf4>] snd_seq_ioctl_create_port+0x504/0x630 [snd_seq]
      [<ffffffffa07aa8f0>] ? snd_seq_ioctl_delete_port+0x180/0x180 [snd_seq]
      [<ffffffff8136be50>] ? taskstats_exit+0xbc0/0xbc0
      [<ffffffffa07abc5c>] snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
      [<ffffffffa07abd10>] snd_seq_ioctl+0x40/0x80 [snd_seq]
      [<ffffffff8136d433>] ? acct_account_cputime+0x63/0x80
      [<ffffffff815b515b>] do_vfs_ioctl+0x54b/0xda0
      .....
    
    We may fix this in a few different ways, and in this patch, it's fixed
    simply by taking the refcount properly at snd_seq_create_port() and
    letting the caller unref the object after use.  Also, there is another
    potential use-after-free by sprintf() call in snd_seq_create_port(),
    and this is moved inside the lock.
    
    This fix covers CVE-2017-15265.
    
    Reported-and-tested-by: Michael23 Yu <ycqzsy@gmail.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd7066e5e913ef8bf6e58c9af8a63cb09e05952f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 10 14:10:32 2017 +0200

    ALSA: usb-audio: Kill stray URB at exiting
    
    commit 124751d5e63c823092060074bd0abaae61aaa9c4 upstream.
    
    USB-audio driver may leave a stray URB for the mixer interrupt when it
    exits by some error during probe.  This leads to a use-after-free
    error as spotted by syzkaller like:
      ==================================================================
      BUG: KASAN: use-after-free in snd_usb_mixer_interrupt+0x604/0x6f0
      Call Trace:
       <IRQ>
       __dump_stack lib/dump_stack.c:16
       dump_stack+0x292/0x395 lib/dump_stack.c:52
       print_address_description+0x78/0x280 mm/kasan/report.c:252
       kasan_report_error mm/kasan/report.c:351
       kasan_report+0x23d/0x350 mm/kasan/report.c:409
       __asan_report_load8_noabort+0x19/0x20 mm/kasan/report.c:430
       snd_usb_mixer_interrupt+0x604/0x6f0 sound/usb/mixer.c:2490
       __usb_hcd_giveback_urb+0x2e0/0x650 drivers/usb/core/hcd.c:1779
       ....
    
      Allocated by task 1484:
       save_stack_trace+0x1b/0x20 arch/x86/kernel/stacktrace.c:59
       save_stack+0x43/0xd0 mm/kasan/kasan.c:447
       set_track mm/kasan/kasan.c:459
       kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551
       kmem_cache_alloc_trace+0x11e/0x2d0 mm/slub.c:2772
       kmalloc ./include/linux/slab.h:493
       kzalloc ./include/linux/slab.h:666
       snd_usb_create_mixer+0x145/0x1010 sound/usb/mixer.c:2540
       create_standard_mixer_quirk+0x58/0x80 sound/usb/quirks.c:516
       snd_usb_create_quirk+0x92/0x100 sound/usb/quirks.c:560
       create_composite_quirk+0x1c4/0x3e0 sound/usb/quirks.c:59
       snd_usb_create_quirk+0x92/0x100 sound/usb/quirks.c:560
       usb_audio_probe+0x1040/0x2c10 sound/usb/card.c:618
       ....
    
      Freed by task 1484:
       save_stack_trace+0x1b/0x20 arch/x86/kernel/stacktrace.c:59
       save_stack+0x43/0xd0 mm/kasan/kasan.c:447
       set_track mm/kasan/kasan.c:459
       kasan_slab_free+0x72/0xc0 mm/kasan/kasan.c:524
       slab_free_hook mm/slub.c:1390
       slab_free_freelist_hook mm/slub.c:1412
       slab_free mm/slub.c:2988
       kfree+0xf6/0x2f0 mm/slub.c:3919
       snd_usb_mixer_free+0x11a/0x160 sound/usb/mixer.c:2244
       snd_usb_mixer_dev_free+0x36/0x50 sound/usb/mixer.c:2250
       __snd_device_free+0x1ff/0x380 sound/core/device.c:91
       snd_device_free_all+0x8f/0xe0 sound/core/device.c:244
       snd_card_do_free sound/core/init.c:461
       release_card_device+0x47/0x170 sound/core/init.c:181
       device_release+0x13f/0x210 drivers/base/core.c:814
       ....
    
    Actually such a URB is killed properly at disconnection when the
    device gets probed successfully, and what we need is to apply it for
    the error-path, too.
    
    In this patch, we apply snd_usb_mixer_disconnect() at releasing.
    Also introduce a new flag, disconnected, to struct usb_mixer_interface
    for not performing the disconnection procedure twice.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 936edc5ed9976c728ee91967ba099d84e6fb78e7
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Oct 13 15:58:15 2017 -0700

    fs/mpage.c: fix mpage_writepage() for pages with buffers
    
    commit f892760aa66a2d657deaf59538fb69433036767c upstream.
    
    When using FAT on a block device which supports rw_page, we can hit
    BUG_ON(!PageLocked(page)) in try_to_free_buffers().  This is because we
    call clean_buffers() after unlocking the page we've written.  Introduce
    a new clean_page_buffers() which cleans all buffers associated with a
    page and call it from within bdev_write_page().
    
    [akpm@linux-foundation.org: s/PAGE_SIZE/~0U/ per Linus and Matthew]
    Link: http://lkml.kernel.org/r/20171006211541.GA7409@bombadil.infradead.org
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Reported-by: Toshi Kani <toshi.kani@hpe.com>
    Reported-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Tested-by: Toshi Kani <toshi.kani@hpe.com>
    Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09240e6bae772577a6e19939cdabb57339c006e8
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Fri Oct 13 15:58:05 2017 -0700

    Revert "vmalloc: back off when the current task is killed"
    
    commit b8c8a338f75e052d9fa2fed851259320af412e3f upstream.
    
    This reverts commits 5d17a73a2ebe ("vmalloc: back off when the current
    task is killed") and 171012f56127 ("mm: don't warn when vmalloc() fails
    due to a fatal signal").
    
    Commit 5d17a73a2ebe ("vmalloc: back off when the current task is
    killed") made all vmalloc allocations from a signal-killed task fail.
    We have seen crashes in the tty driver from this, where a killed task
    exiting tries to switch back to N_TTY, fails n_tty_open because of the
    vmalloc failing, and later crashes when dereferencing tty->disc_data.
    
    Arguably, relying on a vmalloc() call to succeed in order to properly
    exit a task is not the most robust way of doing things.  There will be a
    follow-up patch to the tty code to fall back to the N_NULL ldisc.
    
    But the justification to make that vmalloc() call fail like this isn't
    convincing, either.  The patch mentions an OOM victim exhausting the
    memory reserves and thus deadlocking the machine.  But the OOM killer is
    only one, improbable source of fatal signals.  It doesn't make sense to
    fail allocations preemptively with plenty of memory in most cases.
    
    The patch doesn't mention real-life instances where vmalloc sites would
    exhaust memory, which makes it sound more like a theoretical issue to
    begin with.  But just in case, the OOM access to memory reserves has
    been restricted on the allocator side in cd04ae1e2dc8 ("mm, oom: do not
    rely on TIF_MEMDIE for memory reserves access"), which should take care
    of any theoretical concerns on that front.
    
    Revert this patch, and the follow-up that suppresses the allocation
    warnings when we fail the allocations due to a signal.
    
    Link: http://lkml.kernel.org/r/20171004185906.GB2136@cmpxchg.org
    Fixes:  171012f56127 ("mm: don't warn when vmalloc() fails due to a fatal signal")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alan Cox <alan@llwyncelyn.cymru>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b721d706eafa336d4904e50de5df3e10bf158c31
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Mon Oct 9 16:28:37 2017 +0300

    device property: Track owner device of device property
    
    commit 5ab894aee0f171a682bcd90dd5d1930cb53c55dc upstream.
    
    Deletion of subdevice will remove device properties associated to parent
    when they share the same firmware node after commit 478573c93abd (driver
    core: Don't leak secondary fwnode on device removal).  This was observed
    with a driver adding subdevice that driver wasn't able to read device
    properties after rmmod/modprobe cycle.
    
    Consider the lifecycle of it:
    
    parent device registration
            ACPI_COMPANION_SET()
            device_add_properties()
                    pset_copy_set()
                    set_secondary_fwnode(dev, &p->fwnode)
            device_add()
    
    parent probe
            read device properties
            ACPI_COMPANION_SET(subdevice, ACPI_COMPANION(parent))
            device_add(subdevice)
    
    parent remove
            device_del(subdevice)
                    device_remove_properties()
                            set_secondary_fwnode(dev, NULL);
                            pset_free()
    
    Parent device will have its primary firmware node pointing to an ACPI
    node and secondary firmware node point to device properties.
    
    ACPI_COMPANION_SET() call in parent probe will set the subdevice's
    firmware node to point to the same 'struct fwnode_handle' and the
    associated secondary firmware node, i.e. the device properties as the
    parent.
    
    When subdevice is deleted in parent remove that will remove those
    device properties and attempt to read device properties in next
    parent probe call will fail.
    
    Fix this by tracking the owner device of device properties and delete
    them only when owner device is being deleted.
    
    Fixes: 478573c93abd (driver core: Don't leak secondary fwnode on device removal)
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8c1d3cb188e555ff18a70fe1940e883bb12b535
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Oct 13 14:32:37 2017 +0200

    iommu/amd: Finish TLB flush in amd_iommu_unmap()
    
    commit ce76353f169a6471542d999baf3d29b121dce9c0 upstream.
    
    The function only sends the flush command to the IOMMU(s),
    but does not wait for its completion when it returns. Fix
    that.
    
    Fixes: 601367d76bd1 ('x86/amd-iommu: Remove iommu_flush_domain function')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adf859acbc7c1083ffe02727af48fa5342fecc29
Author: Petr Mladek <pmladek@suse.com>
Date:   Tue Sep 26 15:51:28 2017 +0200

    pinctrl/amd: Fix build dependency on pinmux code
    
    commit 83b31c2a5fdd4fb3a4ec84c59a962e816d0bc9de upstream.
    
    The commit 79d2c8bede2c93f943 ("pinctrl/amd: save pin registers over
    suspend/resume") caused the following compilation errors:
    
    drivers/pinctrl/pinctrl-amd.c: In function ‘amd_gpio_should_save’:
    drivers/pinctrl/pinctrl-amd.c:741:8: error: ‘const struct pin_desc’ has no member named ‘mux_owner’
      if (pd->mux_owner || pd->gpio_owner ||
            ^
    drivers/pinctrl/pinctrl-amd.c:741:25: error: ‘const struct pin_desc’ has no member named ‘gpio_owner’
      if (pd->mux_owner || pd->gpio_owner ||
    
    We need to enable CONFIG_PINMUX for this driver as well.
    
    Fixes: 79d2c8bede2c93f943 ("pinctrl/amd: save pin registers over suspend/resume")
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad63209a94ea1ae070834827c123bf414a35798
Author: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Date:   Mon Oct 2 14:01:41 2017 +0900

    usb: renesas_usbhs: Fix DMAC sequence for receiving zero-length packet
    
    commit 29c7f3e68eec4ae94d85ad7b5dfdafdb8089f513 upstream.
    
    The DREQE bit of the DnFIFOSEL should be set to 1 after the DE bit of
    USB-DMAC on R-Car SoCs is set to 1 after the USB-DMAC received a
    zero-length packet. Otherwise, a transfer completion interruption
    of USB-DMAC doesn't happen. Even if the driver changes the sequence,
    normal operations (transmit/receive without zero-length packet) will
    not cause any side-effects. So, this patch fixes the sequence anyway.
    
    Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
    [shimoda: revise the commit log]
    Fixes: e73a9891b3a1 ("usb: renesas_usbhs: add DMAEngine support")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84b25f1ce0b5d0d900b04bbb3a0d34eb1bfe9935
Author: Haozhong Zhang <haozhong.zhang@intel.com>
Date:   Tue Oct 10 15:01:22 2017 +0800

    KVM: nVMX: fix guest CR4 loading when emulating L2 to L1 exit
    
    commit 8eb3f87d903168bdbd1222776a6b1e281f50513e upstream.
    
    When KVM emulates an exit from L2 to L1, it loads L1 CR4 into the
    guest CR4. Before this CR4 loading, the guest CR4 refers to L2
    CR4. Because these two CR4's are in different levels of guest, we
    should vmx_set_cr4() rather than kvm_set_cr4() here. The latter, which
    is used to handle guest writes to its CR4, checks the guest change to
    CR4 and may fail if the change is invalid.
    
    The failure may cause trouble. Consider we start
      a L1 guest with non-zero L1 PCID in use,
         (i.e. L1 CR4.PCIDE == 1 && L1 CR3.PCID != 0)
    and
      a L2 guest with L2 PCID disabled,
         (i.e. L2 CR4.PCIDE == 0)
    and following events may happen:
    
    1. If kvm_set_cr4() is used in load_vmcs12_host_state() to load L1 CR4
       into guest CR4 (in VMCS01) for L2 to L1 exit, it will fail because
       of PCID check. As a result, the guest CR4 recorded in L0 KVM (i.e.
       vcpu->arch.cr4) is left to the value of L2 CR4.
    
    2. Later, if L1 attempts to change its CR4, e.g., clearing VMXE bit,
       kvm_set_cr4() in L0 KVM will think L1 also wants to enable PCID,
       because the wrong L2 CR4 is used by L0 KVM as L1 CR4. As L1
       CR3.PCID != 0, L0 KVM will inject GP to L1 guest.
    
    Fixes: 4704d0befb072 ("KVM: nVMX: Exiting from L2 to L1")
    Cc: qemu-stable@nongnu.org
    Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1679d0db1d3996321792e258c89394a1e5e3fa5c
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Thu Oct 5 11:10:23 2017 +0200

    KVM: MMU: always terminate page walks at level 1
    
    commit 829ee279aed43faa5cb1e4d65c0cad52f2426c53 upstream.
    
    is_last_gpte() is not equivalent to the pseudo-code given in commit
    6bb69c9b69c31 ("KVM: MMU: simplify last_pte_bitmap") because an incorrect
    value of last_nonleaf_level may override the result even if level == 1.
    
    It is critical for is_last_gpte() to return true on level == 1 to
    terminate page walks. Otherwise memory corruption may occur as level
    is used as an index to various data structures throughout the page
    walking code.  Even though the actual bug would be wherever the MMU is
    initialized (as in the previous patch), be defensive and ensure here
    that is_last_gpte() returns the correct value.
    
    This patch is also enough to fix CVE-2017-12188.
    
    Fixes: 6bb69c9b69c315200ddc2bc79aee14c0184cf5b2
    Cc: Andy Honig <ahonig@google.com>
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    [Panic if walk_addr_generic gets an incorrect level; this is a serious
     bug and it's not worth a WARN_ON where the recovery path might hide
     further exploitable issues; suggested by Andrew Honig. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05f9b8bfea4fd91c76eac398f407a2bc0920e547
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Oct 9 23:30:02 2017 +0800

    crypto: shash - Fix zero-length shash ahash digest crash
    
    commit b61907bb42409adf9b3120f741af7c57dd7e3db2 upstream.
    
    The shash ahash digest adaptor function may crash if given a
    zero-length input together with a null SG list.  This is because
    it tries to read the SG list before looking at the length.
    
    This patch fixes it by checking the length first.
    
    Reported-by: Stephan Müller<smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Stephan Müller <smueller@chronox.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ace51c5b4796927909be31e231fd7780c988382
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Sat Oct 7 11:29:48 2017 +0800

    crypto: skcipher - Fix crash on zero-length input
    
    commit 0cabf2af6f5ac3c88cb106c4e06087a5a39b8e1e upstream.
    
    The skcipher walk interface doesn't handle zero-length input
    properly as the old blkcipher walk interface did.  This is due
    to the fact that the length check is done too late.
    
    This patch moves the length check forward so that it does the
    right thing.
    
    Fixes: b286d8b1a690 ("crypto: skcipher - Add skcipher walk...")
    Reported-by: Stephan Müller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 984154e7eef1f9e543dabd7422cfc99015778732
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Thu Sep 28 19:16:30 2017 +0900

    HID: usbhid: fix out-of-bounds bug
    
    commit f043bfc98c193c284e2cd768fefabe18ac2fed9b upstream.
    
    The hid descriptor identifies the length and type of subordinate
    descriptors for a device. If the received hid descriptor is smaller than
    the size of the struct hid_descriptor, it is possible to cause
    out-of-bounds.
    
    In addition, if bNumDescriptors of the hid descriptor have an incorrect
    value, this can also cause out-of-bounds while approaching hdesc->desc[n].
    
    So check the size of hid descriptor and bNumDescriptors.
    
            BUG: KASAN: slab-out-of-bounds in usbhid_parse+0x9b1/0xa20
            Read of size 1 at addr ffff88006c5f8edf by task kworker/1:2/1261
    
            CPU: 1 PID: 1261 Comm: kworker/1:2 Not tainted
            4.14.0-rc1-42251-gebb2c2437d80 #169
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
            Workqueue: usb_hub_wq hub_event
            Call Trace:
            __dump_stack lib/dump_stack.c:16
            dump_stack+0x292/0x395 lib/dump_stack.c:52
            print_address_description+0x78/0x280 mm/kasan/report.c:252
            kasan_report_error mm/kasan/report.c:351
            kasan_report+0x22f/0x340 mm/kasan/report.c:409
            __asan_report_load1_noabort+0x19/0x20 mm/kasan/report.c:427
            usbhid_parse+0x9b1/0xa20 drivers/hid/usbhid/hid-core.c:1004
            hid_add_device+0x16b/0xb30 drivers/hid/hid-core.c:2944
            usbhid_probe+0xc28/0x1100 drivers/hid/usbhid/hid-core.c:1369
            usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
            really_probe drivers/base/dd.c:413
            driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
            __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
            bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
            __device_attach+0x26e/0x3d0 drivers/base/dd.c:710
            device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
            bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
            device_add+0xd0b/0x1660 drivers/base/core.c:1835
            usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932
            generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174
            usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266
            really_probe drivers/base/dd.c:413
            driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
            __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
            bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
            __device_attach+0x26e/0x3d0 drivers/base/dd.c:710
            device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
            bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
            device_add+0xd0b/0x1660 drivers/base/core.c:1835
            usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457
            hub_port_connect drivers/usb/core/hub.c:4903
            hub_port_connect_change drivers/usb/core/hub.c:5009
            port_event drivers/usb/core/hub.c:5115
            hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195
            process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119
            worker_thread+0x221/0x1850 kernel/workqueue.c:2253
            kthread+0x3a1/0x470 kernel/kthread.c:231
            ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89a00185b82488836b6530c2bc7dcb2231314fc4
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Sep 29 09:36:43 2017 -0400

    nfs/filelayout: fix oops when freeing filelayout segment
    
    commit 0a47df11bfc31e1ceae7f91cea84d3bff500475d upstream.
    
    Check for a NULL dsaddr in filelayout_free_lseg() before calling
    nfs4_fl_put_deviceid().  This fixes the following oops:
    
    [ 1967.645207] BUG: unable to handle kernel NULL pointer dereference at 0000000000000030
    [ 1967.646010] IP: [<ffffffffc06d6aea>] nfs4_put_deviceid_node+0xa/0x90 [nfsv4]
    [ 1967.646010] PGD c08bc067 PUD 915d3067 PMD 0
    [ 1967.753036] Oops: 0000 [#1] SMP
    [ 1967.753036] Modules linked in: nfs_layout_nfsv41_files ext4 mbcache jbd2 loop rpcsec_gss_krb5 nfsv4 dns_resolver nfs fscache amd64_edac_mod ipmi_ssif edac_mce_amd edac_core kvm_amd sg kvm ipmi_si ipmi_devintf irqbypass pcspkr k8temp ipmi_msghandler i2c_piix4 shpchp nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables xfs libcrc32c sd_mod crc_t10dif crct10dif_generic crct10dif_common amdkfd amd_iommu_v2 radeon i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops mptsas ttm scsi_transport_sas mptscsih drm mptbase serio_raw i2c_core bnx2 dm_mirror dm_region_hash dm_log dm_mod
    [ 1967.790031] CPU: 2 PID: 1370 Comm: ls Not tainted 3.10.0-709.el7.test.bz1463784.x86_64 #1
    [ 1967.790031] Hardware name: IBM BladeCenter LS21 -[7971AC1]-/Server Blade, BIOS -[BAE155AUS-1.10]- 06/03/2009
    [ 1967.790031] task: ffff8800c42a3f40 ti: ffff8800c4064000 task.ti: ffff8800c4064000
    [ 1967.790031] RIP: 0010:[<ffffffffc06d6aea>]  [<ffffffffc06d6aea>] nfs4_put_deviceid_node+0xa/0x90 [nfsv4]
    [ 1967.790031] RSP: 0000:ffff8800c4067978  EFLAGS: 00010246
    [ 1967.790031] RAX: ffffffffc062f000 RBX: ffff8801d468a540 RCX: dead000000000200
    [ 1967.790031] RDX: ffff8800c40679f8 RSI: ffff8800c4067a0c RDI: 0000000000000000
    [ 1967.790031] RBP: ffff8800c4067980 R08: ffff8801d468a540 R09: 0000000000000000
    [ 1967.790031] R10: 0000000000000000 R11: ffffffffffffffff R12: ffff8801d468a540
    [ 1967.790031] R13: ffff8800c40679f8 R14: ffff8801d5645300 R15: ffff880126f15ff0
    [ 1967.790031] FS:  00007f11053c9800(0000) GS:ffff88012bd00000(0000) knlGS:0000000000000000
    [ 1967.790031] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [ 1967.790031] CR2: 0000000000000030 CR3: 0000000094b55000 CR4: 00000000000007e0
    [ 1967.790031] Stack:
    [ 1967.790031]  ffff8801d468a540 ffff8800c4067990 ffffffffc062d2fe ffff8800c40679b0
    [ 1967.790031]  ffffffffc062b5b4 ffff8800c40679f8 ffff8801d468a540 ffff8800c40679d8
    [ 1967.790031]  ffffffffc06d39af ffff8800c40679f8 ffff880126f16078 0000000000000001
    [ 1967.790031] Call Trace:
    [ 1967.790031]  [<ffffffffc062d2fe>] nfs4_fl_put_deviceid+0xe/0x10 [nfs_layout_nfsv41_files]
    [ 1967.790031]  [<ffffffffc062b5b4>] filelayout_free_lseg+0x24/0x90 [nfs_layout_nfsv41_files]
    [ 1967.790031]  [<ffffffffc06d39af>] pnfs_free_lseg_list+0x5f/0x80 [nfsv4]
    [ 1967.790031]  [<ffffffffc06d5a67>] _pnfs_return_layout+0x157/0x270 [nfsv4]
    [ 1967.790031]  [<ffffffffc06c17dd>] nfs4_evict_inode+0x4d/0x70 [nfsv4]
    [ 1967.790031]  [<ffffffff8121de19>] evict+0xa9/0x180
    [ 1967.790031]  [<ffffffff8121e729>] iput+0xf9/0x190
    [ 1967.790031]  [<ffffffffc0652cea>] nfs_dentry_iput+0x3a/0x50 [nfs]
    [ 1967.790031]  [<ffffffff8121ab4f>] shrink_dentry_list+0x20f/0x490
    [ 1967.790031]  [<ffffffff8121b018>] d_invalidate+0xd8/0x150
    [ 1967.790031]  [<ffffffffc065446b>] nfs_readdir_page_filler+0x40b/0x600 [nfs]
    [ 1967.790031]  [<ffffffffc0654bbd>] nfs_readdir_xdr_to_array+0x20d/0x3b0 [nfs]
    [ 1967.790031]  [<ffffffff811f3482>] ? __mem_cgroup_commit_charge+0xe2/0x2f0
    [ 1967.790031]  [<ffffffff81183208>] ? __add_to_page_cache_locked+0x48/0x170
    [ 1967.790031]  [<ffffffffc0654d60>] ? nfs_readdir_xdr_to_array+0x3b0/0x3b0 [nfs]
    [ 1967.790031]  [<ffffffffc0654d82>] nfs_readdir_filler+0x22/0x90 [nfs]
    [ 1967.790031]  [<ffffffff8118351f>] do_read_cache_page+0x7f/0x190
    [ 1967.790031]  [<ffffffff81215d30>] ? fillonedir+0xe0/0xe0
    [ 1967.790031]  [<ffffffff8118366c>] read_cache_page+0x1c/0x30
    [ 1967.790031]  [<ffffffffc0654f9b>] nfs_readdir+0x1ab/0x6b0 [nfs]
    [ 1967.790031]  [<ffffffffc06bd1c0>] ? nfs4_xdr_dec_layoutget+0x270/0x270 [nfsv4]
    [ 1967.790031]  [<ffffffff81215d30>] ? fillonedir+0xe0/0xe0
    [ 1967.790031]  [<ffffffff81215c20>] vfs_readdir+0xb0/0xe0
    [ 1967.790031]  [<ffffffff81216045>] SyS_getdents+0x95/0x120
    [ 1967.790031]  [<ffffffff816b9449>] system_call_fastpath+0x16/0x1b
    [ 1967.790031] Code: 90 31 d2 48 89 d0 5d c3 85 f6 74 f5 8d 4e 01 89 f0 f0 0f b1 0f 39 f0 74 e2 89 c6 eb eb 0f 1f 40 00 66 66 66 66 90 55 48 89 e5 53 <48> 8b 47 30 48 89 fb a8 04 74 3b 8b 57 60 83 fa 02 74 19 8d 4a
    [ 1967.790031] RIP  [<ffffffffc06d6aea>] nfs4_put_deviceid_node+0xa/0x90 [nfsv4]
    [ 1967.790031]  RSP <ffff8800c4067978>
    [ 1967.790031] CR2: 0000000000000030
    
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Fixes: 1ebf98012792 ("NFS/filelayout: Fix racy setting of fl->dsaddr...")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83bce378791ebd2ee2643097f22905f1e1896744
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Fri Sep 22 07:57:10 2017 -0400

    NFS: Fix uninitialized rpc_wait_queue
    
    commit 68ebf8fe3bce8c167cf83fbd681c1eb1ed419c6c upstream.
    
    Michael Sterrett reports a NULL pointer dereference on NFSv3 mounts when
    CONFIG_NFS_V4 is not set because the NFS UOC rpc_wait_queue has not been
    initialized.  Move the initialization of the queue out of the CONFIG_NFS_V4
    conditional setion.
    
    Fixes: 7d6ddf88c4db ("NFS: Add an iocounter wait function for async RPC tasks")
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c55e7d0a4e3f7ff9781141b48a0d9ddc0b6917cf
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Thu Sep 21 14:35:32 2017 +0300

    dmaengine: ti-dma-crossbar: Fix possible race condition with dma_inuse
    
    commit 2ccb4837c938357233a0b8818e3ca3e58242c952 upstream.
    
    When looking for unused xbar_out lane we should also protect the set_bit()
    call with the same mutex to protect against concurrent threads picking the
    same ID.
    
    Fixes: ec9bfa1e1a796 ("dmaengine: ti-dma-crossbar: dra7: Use bitops instead of idr")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 344d82b632e77a9c52017c8862c1d3f2cd643c8d
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Mon Sep 18 11:16:26 2017 +0300

    dmaengine: edma: Align the memcpy acnt array size with the transfer
    
    commit 87a2f622cc6446c7d09ac655b7b9b04886f16a4c upstream.
    
    Memory to Memory transfers does not have any special alignment needs
    regarding to acnt array size, but if one of the areas are in memory mapped
    regions (like PCIe memory), we need to make sure that the acnt array size
    is aligned with the mem copy parameters.
    
    Before "dmaengine: edma: Optimize memcpy operation" change the memcpy was set
    up in a different way: acnt == number of bytes in a word based on
    __ffs((src | dest | len), bcnt and ccnt for looping the necessary number of
    words to comlete the trasnfer.
    
    Instead of reverting the commit we can fix it to make sure that the ACNT size
    is aligned to the traswnfer.
    
    Fixes: df6694f80365a (dmaengine: edma: Optimize memcpy operation)
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f1404f030a6040014140e1bbe6a64a60bc89fba
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Sep 26 09:18:27 2017 +0300

    mei: always use domain runtime pm callbacks.
    
    commit b42dc0635bf0a6aa59fe4d7c826796ff659908c7 upstream.
    
    This patch fixes a regression caused by the new changes
    in the "run wake" handlers.
    
    The mei devices that support D0i3 are no longer receiving an interrupt
    after entering runtime suspend state and will stall.
    
    pci_dev_run_wake function now returns "true" for some devices
    (including mei) for which it used to return "false",
    arguably incorrectly as "run wake" used to mean that
    wakeup signals can be generated for a device in
    the working state of the system, so it could not be enabled
    or disabled before too.
    
    MEI maps runtime suspend/resume to its own defined
    power gating (PG) states, (D0i3 or other depending on generation),
    hence we need to go around the native PCI runtime service which
    eventually brings the device into D3cold/hot state,
    but the mei devices cannot wake up from D3 unlike from D0i3/PG state,
    which keeps irq running.
    To get around PCI device native runtime pm,
    MEI uses runtime pm domain handlers which take precedence.
    
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09e62fd9ea8598a147c67763056083a5b3a4dda3
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Wed Sep 27 09:14:58 2017 +0100

    MIPS: bpf: Fix uninitialised target compiler error
    
    commit 94c3390ab84a6b449accc7351ffda4a0c17bdb92 upstream.
    
    Compiling ebpf_jit.c with gcc 4.9 results in a (likely spurious)
    compiler warning, as gcc has detected that the variable "target" may be
    used uninitialised. Since -Werror is active, this is treated as an error
    and causes a kernel build failure whenever CONFIG_MIPS_EBPF_JIT is
    enabled.
    
    arch/mips/net/ebpf_jit.c: In function 'build_one_insn':
    arch/mips/net/ebpf_jit.c:1118:80: error: 'target' may be used
    uninitialized in this function [-Werror=maybe-uninitialized]
        emit_instr(ctx, j, target);
                                                                                    ^
    cc1: all warnings being treated as errors
    
    Fix this by initialising "target" to 0. If it really is used
    uninitialised this would result in a jump to 0 and a detectable run time
    failure.
    
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Fixes: b6bd53f9c4e8 ("MIPS: Add missing file for eBPF JIT.")
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: David Daney <david.daney@cavium.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Colin Ian King <colin.king@canonical.com>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17375/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6478e2712afff59d873197a08f6a1398dd2d2c82
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Sep 8 15:12:21 2017 -0700

    MIPS: math-emu: Remove pr_err() calls from fpu_emu()
    
    commit ca8eb05b5f332a9e1ab3e2ece498d49f4d683470 upstream.
    
    The FPU emulator includes 2 calls to pr_err() which are triggered by
    invalid instruction encodings for MIPSr6 cmp.cond.fmt instructions.
    These cases are not kernel errors, merely invalid instructions which are
    already handled by delivering a SIGILL which will provide notification
    that something failed in cases where that makes sense.
    
    In cases where that SIGILL is somewhat expected & being handled, for
    example when crashme happens to generate one of the affected bad
    encodings, the message is printed with no useful context about what
    triggered it & spams the kernel log for no good reason.
    
    Remove the pr_err() calls to make crashme run silently & treat the bad
    encodings the same way we do others, with a SIGILL & no further kernel
    log output.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: f8c3c6717a71 ("MIPS: math-emu: Add support for the CMP.condn.fmt R6 instruction")
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17253/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 153e9470d5037340561dd1a94f68881b5edd61e9
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Oct 6 10:27:44 2017 -0400

    USB: dummy-hcd: Fix deadlock caused by disconnect detection
    
    commit ab219221a5064abfff9f78c323c4a257b16cdb81 upstream.
    
    The dummy-hcd driver calls the gadget driver's disconnect callback
    under the wrong conditions.  It should invoke the callback when Vbus
    power is turned off, but instead it does so when the D+ pullup is
    turned off.
    
    This can cause a deadlock in the composite core when a gadget driver
    is unregistered:
    
    [   88.361471] ============================================
    [   88.362014] WARNING: possible recursive locking detected
    [   88.362580] 4.14.0-rc2+ #9 Not tainted
    [   88.363010] --------------------------------------------
    [   88.363561] v4l_id/526 is trying to acquire lock:
    [   88.364062]  (&(&cdev->lock)->rlock){....}, at: [<ffffffffa0547e03>] composite_disconnect+0x43/0x100 [libcomposite]
    [   88.365051]
    [   88.365051] but task is already holding lock:
    [   88.365826]  (&(&cdev->lock)->rlock){....}, at: [<ffffffffa0547b09>] usb_function_deactivate+0x29/0x80 [libcomposite]
    [   88.366858]
    [   88.366858] other info that might help us debug this:
    [   88.368301]  Possible unsafe locking scenario:
    [   88.368301]
    [   88.369304]        CPU0
    [   88.369701]        ----
    [   88.370101]   lock(&(&cdev->lock)->rlock);
    [   88.370623]   lock(&(&cdev->lock)->rlock);
    [   88.371145]
    [   88.371145]  *** DEADLOCK ***
    [   88.371145]
    [   88.372211]  May be due to missing lock nesting notation
    [   88.372211]
    [   88.373191] 2 locks held by v4l_id/526:
    [   88.373715]  #0:  (&(&cdev->lock)->rlock){....}, at: [<ffffffffa0547b09>] usb_function_deactivate+0x29/0x80 [libcomposite]
    [   88.374814]  #1:  (&(&dum_hcd->dum->lock)->rlock){....}, at: [<ffffffffa05bd48d>] dummy_pullup+0x7d/0xf0 [dummy_hcd]
    [   88.376289]
    [   88.376289] stack backtrace:
    [   88.377726] CPU: 0 PID: 526 Comm: v4l_id Not tainted 4.14.0-rc2+ #9
    [   88.378557] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1 04/01/2014
    [   88.379504] Call Trace:
    [   88.380019]  dump_stack+0x86/0xc7
    [   88.380605]  __lock_acquire+0x841/0x1120
    [   88.381252]  lock_acquire+0xd5/0x1c0
    [   88.381865]  ? composite_disconnect+0x43/0x100 [libcomposite]
    [   88.382668]  _raw_spin_lock_irqsave+0x40/0x54
    [   88.383357]  ? composite_disconnect+0x43/0x100 [libcomposite]
    [   88.384290]  composite_disconnect+0x43/0x100 [libcomposite]
    [   88.385490]  set_link_state+0x2d4/0x3c0 [dummy_hcd]
    [   88.386436]  dummy_pullup+0xa7/0xf0 [dummy_hcd]
    [   88.387195]  usb_gadget_disconnect+0xd8/0x160 [udc_core]
    [   88.387990]  usb_gadget_deactivate+0xd3/0x160 [udc_core]
    [   88.388793]  usb_function_deactivate+0x64/0x80 [libcomposite]
    [   88.389628]  uvc_function_disconnect+0x1e/0x40 [usb_f_uvc]
    
    This patch changes the code to test the port-power status bit rather
    than the port-connect status bit when deciding whether to isue the
    callback.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: David Tulloh <david@tulloh.id.au>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
