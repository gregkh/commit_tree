commit e5ce9f6879d3fe20435f34dfd86fb76c36072916
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Apr 26 11:00:39 2018 +0200

    Linux 4.16.5

commit 55c5c3987809034da781d5e54cc9579543c658d3
Author: Benjamin Beichler <benjamin.beichler@uni-rostock.de>
Date:   Wed Mar 7 18:11:07 2018 +0100

    mac80211_hwsim: fix use-after-free bug in hwsim_exit_net
    
    commit 8cfd36a0b53aeb4ec21d81eb79706697b84dfc3d upstream.
    
    When destroying a net namespace, all hwsim interfaces, which are not
    created in default namespace are deleted. But the async deletion of the
    interfaces could last longer than the actual destruction of the
    namespace, which results to an use after free bug. Therefore use
    synchronous deletion in this case.
    
    Fixes: 100cb9ff40e0 ("mac80211_hwsim: Allow managing radios from non-initial namespaces")
    Reported-by: syzbot+70ce058e01259de7bb1d@syzkaller.appspotmail.com
    Signed-off-by: Benjamin Beichler <benjamin.beichler@uni-rostock.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4e8b46fc5e7407e2cab4f4b35c3bc264bb42da9
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Mar 29 14:48:30 2018 -0700

    Revert "KVM: X86: Fix SMRAM accessing even if VM is shutdown"
    
    commit 2c151b25441ae5c2da66472abd165af785c9ecd2 upstream.
    
    The bug that led to commit 95e057e25892eaa48cad1e2d637b80d0f1a4fac5
    was a benign warning (no adverse affects other than the warning
    itself) that was detected by syzkaller.  Further inspection shows
    that the WARN_ON in question, in handle_ept_misconfig(), is
    unnecessary and flawed (this was also briefly discussed in the
    original patch: https://patchwork.kernel.org/patch/10204649).
    
      * The WARN_ON is unnecessary as kvm_mmu_page_fault() will WARN
        if reserved bits are set in the SPTEs, i.e. it covers the case
        where an EPT misconfig occurred because of a KVM bug.
    
      * The WARN_ON is flawed because it will fire on any system error
        code that is hit while handling the fault, e.g. -ENOMEM can be
        returned by mmu_topup_memory_caches() while handling a legitmate
        MMIO EPT misconfig.
    
    The original behavior of returning -EFAULT when userspace munmaps
    an HVA without first removing the memslot is correct and desirable,
    i.e. KVM is letting userspace know it has generated a bad address.
    Returning RET_PF_EMULATE masks the WARN_ON in the EPT misconfig path,
    but does not fix the underlying bug, i.e. the WARN_ON is bogus.
    
    Furthermore, returning RET_PF_EMULATE has the unwanted side effect of
    causing KVM to attempt to emulate an instruction on any page fault
    with an invalid HVA translation, e.g. a not-present EPT violation
    on a VM_PFNMAP VMA whose fault handler failed to insert a PFN.
    
      * There is no guarantee that the fault is directly related to the
        instruction, i.e. the fault could have been triggered by a side
        effect memory access in the guest, e.g. while vectoring a #DB or
        writing a tracing record.  This could cause KVM to effectively
        mask the fault if KVM doesn't model the behavior leading to the
        fault, i.e. emulation could succeed and resume the guest.
    
      * If emulation does fail, KVM will return EMULATION_FAILED instead
        of -EFAULT, which is a red herring as the user will either debug
        a bogus emulation attempt or scratch their head wondering why we
        were attempting emulation in the first place.
    
    TL;DR: revert to returning -EFAULT and remove the bogus WARN_ON in
    handle_ept_misconfig in a future patch.
    
    This reverts commit 95e057e25892eaa48cad1e2d637b80d0f1a4fac5.
    
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b08a162c9d27ab2aaa6a9f0db0dccd7d6d530bcc
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Mar 11 13:51:32 2018 +0200

    RDMA/mlx5: Fix NULL dereference while accessing XRC_TGT QPs
    
    commit 75a4598209cbe45540baa316c3b51d9db222e96e upstream.
    
    mlx5 modify_qp() relies on FW that the error will be thrown if wrong
    state is supplied. The missing check in FW causes the following crash
    while using XRC_TGT QPs.
    
    [   14.769632] BUG: unable to handle kernel NULL pointer dereference at (null)
    [   14.771085] IP: mlx5_ib_modify_qp+0xf60/0x13f0
    [   14.771894] PGD 800000001472e067 P4D 800000001472e067 PUD 14529067 PMD 0
    [   14.773126] Oops: 0002 [#1] SMP PTI
    [   14.773763] CPU: 0 PID: 365 Comm: ubsan Not tainted 4.16.0-rc1-00038-g8151138c0793 #119
    [   14.775192] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    [   14.777522] RIP: 0010:mlx5_ib_modify_qp+0xf60/0x13f0
    [   14.778417] RSP: 0018:ffffbf48001c7bd8 EFLAGS: 00010246
    [   14.779346] RAX: 0000000000000000 RBX: ffff9a8f9447d400 RCX: 0000000000000000
    [   14.780643] RDX: 0000000000000000 RSI: 000000000000000a RDI: 0000000000000000
    [   14.781930] RBP: 0000000000000000 R08: 00000000000217b0 R09: ffffffffbc9c1504
    [   14.783214] R10: fffff4a180519480 R11: ffff9a8f94523600 R12: ffff9a8f9493e240
    [   14.784507] R13: ffff9a8f9447d738 R14: 000000000000050a R15: 0000000000000000
    [   14.785800] FS:  00007f545b466700(0000) GS:ffff9a8f9fc00000(0000) knlGS:0000000000000000
    [   14.787073] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   14.787792] CR2: 0000000000000000 CR3: 00000000144be000 CR4: 00000000000006b0
    [   14.788689] Call Trace:
    [   14.789007]  _ib_modify_qp+0x71/0x120
    [   14.789475]  modify_qp.isra.20+0x207/0x2f0
    [   14.790010]  ib_uverbs_modify_qp+0x90/0xe0
    [   14.790532]  ib_uverbs_write+0x1d2/0x3c0
    [   14.791049]  ? __handle_mm_fault+0x93c/0xe40
    [   14.791644]  __vfs_write+0x36/0x180
    [   14.792096]  ? handle_mm_fault+0xc1/0x210
    [   14.792601]  vfs_write+0xad/0x1e0
    [   14.793018]  SyS_write+0x52/0xc0
    [   14.793422]  do_syscall_64+0x75/0x180
    [   14.793888]  entry_SYSCALL_64_after_hwframe+0x21/0x86
    [   14.794527] RIP: 0033:0x7f545ad76099
    [   14.794975] RSP: 002b:00007ffd78787468 EFLAGS: 00000287 ORIG_RAX: 0000000000000001
    [   14.795958] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f545ad76099
    [   14.797075] RDX: 0000000000000078 RSI: 0000000020009000 RDI: 0000000000000003
    [   14.798140] RBP: 00007ffd78787470 R08: 00007ffd78787480 R09: 00007ffd78787480
    [   14.799207] R10: 00007ffd78787480 R11: 0000000000000287 R12: 00005599ada98760
    [   14.800277] R13: 00007ffd78787560 R14: 0000000000000000 R15: 0000000000000000
    [   14.801341] Code: 4c 8b 1c 24 48 8b 83 70 02 00 00 48 c7 83 cc 02 00
    00 00 00 00 00 48 c7 83 24 03 00 00 00 00 00 00 c7 83 2c 03 00 00 00 00
    00 00 <c7> 00 00 00 00 00 48 8b 83 70 02 00 00 c7 40 04 00 00 00 00 4c
    [   14.804012] RIP: mlx5_ib_modify_qp+0xf60/0x13f0 RSP: ffffbf48001c7bd8
    [   14.804838] CR2: 0000000000000000
    [   14.805288] ---[ end trace 3f1da0df5c8b7c37 ]---
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Reported-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e680273ec8cfb7d010d985c5bf70261e7fff78c2
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Sun Apr 15 11:23:50 2018 +0200

    perf: Return proper values for user stack errors
    
    commit 78b562fbfa2cf0a9fcb23c3154756b690f4905c1 upstream.
    
    Return immediately when we find issue in the user stack checks. The
    error value could get overwritten by following check for
    PERF_SAMPLE_REGS_INTR.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: syzkaller-bugs@googlegroups.com
    Cc: x86@kernel.org
    Fixes: 60e2364e60e8 ("perf: Add ability to sample machine state on interrupt")
    Link: http://lkml.kernel.org/r/20180415092352.12403-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf3d902d5af72e333bd83d5961a667752e758b2b
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Sun Apr 15 11:23:51 2018 +0200

    perf: Fix sample_max_stack maximum check
    
    commit 5af44ca53d019de47efe6dbc4003dd518e5197ed upstream.
    
    The syzbot hit KASAN bug in perf_callchain_store having the entry stored
    behind the allocated bounds [1].
    
    We miss the sample_max_stack check for the initial event that allocates
    callchain buffers. This missing check allows to create an event with
    sample_max_stack value bigger than the global sysctl maximum:
    
      # sysctl -a | grep perf_event_max_stack
      kernel.perf_event_max_stack = 127
    
      # perf record -vv -C 1 -e cycles/max-stack=256/ kill
      ...
      perf_event_attr:
        size                             112
        ...
        sample_max_stack                 256
      ------------------------------------------------------------
      sys_perf_event_open: pid -1  cpu 1  group_fd -1  flags 0x8 = 4
    
    Note the '-C 1', which forces perf record to create just single event.
    Otherwise it opens event for every cpu, then the sample_max_stack check
    fails on the second event and all's fine.
    
    The fix is to run the sample_max_stack check also for the first event
    with callchains.
    
    [1] https://marc.info/?l=linux-kernel&m=152352732920874&w=2
    
    Reported-by: syzbot+7c449856228b63ac951e@syzkaller.appspotmail.com
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: syzkaller-bugs@googlegroups.com
    Cc: x86@kernel.org
    Fixes: 97c79a38cd45 ("perf core: Per event callchain limit")
    Link: http://lkml.kernel.org/r/20180415092352.12403-2-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a394b1be5ac2225ad1836ea787719be90bb9198
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Feb 27 19:42:32 2018 +0100

    netfilter: x_tables: limit allocation requests for blob rule heads
    
    commit 9d5c12a7c08f67999772065afd50fb222072114e upstream.
    
    This is a very conservative limit (134217728 rules), but good
    enough to not trigger frequent oom from syzkaller.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74e1e28040eef9fdd2c02296bbc9d4b86629695d
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Feb 27 19:42:35 2018 +0100

    netfilter: compat: reject huge allocation requests
    
    commit 7d7d7e02111e9a4dc9d0658597f528f815d820fd upstream.
    
    no need to bother even trying to allocating huge compat offset arrays,
    such ruleset is rejected later on anyway becaus we refuse to allocate
    overly large rule blobs.
    
    However, compat translation happens before blob allocation, so we should
    add a check there too.
    
    This is supposed to help with fuzzing by avoiding oom-killer.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7407dd814b7b41c80d540482a6fc3c17faee6dc1
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Feb 27 19:42:34 2018 +0100

    netfilter: compat: prepare xt_compat_init_offsets to return errors
    
    commit 9782a11efc072faaf91d4aa60e9d23553f918029 upstream.
    
    should have no impact, function still always returns 0.
    This patch is only to ease review.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d11ff4ba1a4ccdf44214076c368171a05632f6e1
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Feb 27 19:42:33 2018 +0100

    netfilter: x_tables: add counters allocation wrapper
    
    commit c84ca954ac9fa67a6ce27f91f01e4451c74fd8f6 upstream.
    
    allows to have size checks in a single spot.
    This is supposed to reduce oom situations when fuzz-testing xtables.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f64143c3329e5e6cab4a9c43dca2a056d05ab57b
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Feb 27 19:42:31 2018 +0100

    netfilter: x_tables: cap allocations at 512 mbyte
    
    commit 19926968ea86a286aa6fbea16ee3f2e7442f10f0 upstream.
    
    Arbitrary limit, however, this still allows huge rulesets
    (> 1 million rules).  This helps with automated fuzzer as it prevents
    oom-killer invocation.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c57e796aabb906bc2c34df1c177d25349723927d
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Apr 4 19:53:07 2018 +0900

    mm,vmscan: Allow preallocating memory for register_shrinker().
    
    commit 8e04944f0ea8b838399049bdcda920ab36ae3b04 upstream.
    
    syzbot is catching so many bugs triggered by commit 9ee332d99e4d5a97
    ("sget(): handle failures of register_shrinker()"). That commit expected
    that calling kill_sb() from deactivate_locked_super() without successful
    fill_super() is safe, but the reality was different; some callers assign
    attributes which are needed for kill_sb() after sget() succeeds.
    
    For example, [1] is a report where sb->s_mode (which seems to be either
    FMODE_READ | FMODE_EXCL | FMODE_WRITE or FMODE_READ | FMODE_EXCL) is not
    assigned unless sget() succeeds. But it does not worth complicate sget()
    so that register_shrinker() failure path can safely call
    kill_block_super() via kill_sb(). Making alloc_super() fail if memory
    allocation for register_shrinker() failed is much simpler. Let's avoid
    calling deactivate_locked_super() from sget_userns() by preallocating
    memory for the shrinker and making register_shrinker() in sget_userns()
    never fail.
    
    [1] https://syzkaller.appspot.com/bug?id=588996a25a2587be2e3a54e8646728fb9cae44e7
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+5a170e19c963a2e0df79@syzkaller.appspotmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4602ef09f1c9dcd3d293aa29213cb5fb99dd9f8a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Mar 26 15:29:57 2018 +0200

    alarmtimer: Init nanosleep alarm timer on stack
    
    commit bd03143007eb9b03a7f2316c677780561b68ba2a upstream.
    
    syszbot reported the following debugobjects splat:
    
     ODEBUG: object is on stack, but not annotated
     WARNING: CPU: 0 PID: 4185 at lib/debugobjects.c:328
    
     RIP: 0010:debug_object_is_on_stack lib/debugobjects.c:327 [inline]
     debug_object_init+0x17/0x20 lib/debugobjects.c:391
     debug_hrtimer_init kernel/time/hrtimer.c:410 [inline]
     debug_init kernel/time/hrtimer.c:458 [inline]
     hrtimer_init+0x8c/0x410 kernel/time/hrtimer.c:1259
     alarm_init kernel/time/alarmtimer.c:339 [inline]
     alarm_timer_nsleep+0x164/0x4d0 kernel/time/alarmtimer.c:787
     SYSC_clock_nanosleep kernel/time/posix-timers.c:1226 [inline]
     SyS_clock_nanosleep+0x235/0x330 kernel/time/posix-timers.c:1204
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    This happens because the hrtimer for the alarm nanosleep is on stack, but
    the code does not use the proper debug objects initialization.
    
    Split out the code for the allocated use cases and invoke
    hrtimer_init_on_stack() for the nanosleep related functions.
    
    Reported-by: syzbot+a3e0726462b2e346a31d@syzkaller.appspotmail.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: syzkaller-bugs@googlegroups.com
    Link: https://lkml.kernel.org/r/alpine.DEB.2.21.1803261528270.1585@nanos.tec.linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3561830a99e4f8af1fe0ce16146cedbe56994396
Author: Imre Deak <imre.deak@intel.com>
Date:   Mon Apr 16 18:53:09 2018 +0300

    drm/i915: Fix LSPCON TMDS output buffer enabling from low-power state
    
    commit 7eb2c4dd54ff841f2fe509a84973eb25fa20bda2 upstream.
    
    LSPCON adapters in low-power state may ignore the first I2C write during
    TMDS output buffer enabling, resulting in a blank screen even with an
    otherwise enabled pipe. Fix this by reading back and validating the
    written value a few times.
    
    The problem was noticed on GLK machines with an onboard LSPCON adapter
    after entering/exiting DC5 power state. Doing an I2C read of the adapter
    ID as the first transaction - instead of the I2C write to enable the
    TMDS buffers - returns the correct value. Based on this we assume that
    the transaction itself is sent properly, it's only the adapter that is
    not ready for some reason to accept this first write after waking from
    low-power state. In my case the second I2C write attempt always
    succeeded.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=105854
    Cc: Clinton Taylor <clinton.a.taylor@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180416155309.11100-1-imre.deak@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 434ff902ed2a8c3a0f61c773c88bd7cb3364e83f
Author: Xidong Wang <wangxidong_97@163.com>
Date:   Wed Apr 4 10:38:24 2018 +0100

    drm/i915: Do no use kfree() to free a kmem_cache_alloc() return value
    
    commit fcf1fadf4c65eea6c519c773d2d9901e8ad94f5f upstream.
    
    Along the eb_lookup_vmas() error path, the return value from
    kmem_cache_alloc() was freed using kfree(). Fix it to use the proper
    kmem_cache_free() instead.
    
    Fixes: d1b48c1e7184 ("drm/i915: Replace execbuf vma ht with an idr")
    Signed-off-by: Xidong Wang <wangxidong_97@163.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: <stable@vger.kernel.org> # v4.14+
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180404093824.9313-1-chris@chris-wilson.co.uk
    (cherry picked from commit 6be1187dbffa0027ea379c53f7ca0c782515c610)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb67884324d1a6b9c8077f6dc5b6aae98e1d9f6e
Author: Gaurav K Singh <gaurav.k.singh@intel.com>
Date:   Tue Apr 17 23:52:18 2018 +0530

    drm/i915/audio: Fix audio detection issue on GLK
    
    commit b4615730530be85fc45ab4631c2ad6d8e2d0b97d upstream.
    
    On Geminilake, sometimes audio card is not getting
    detected after reboot. This is a spurious issue happening on
    Geminilake. HW codec and HD audio controller link was going
    out of sync for which there was a fix in i915 driver but
    was not getting invoked for GLK. Extending this fix to GLK as well.
    
    Tested by Du,Wenkai on GLK board.
    
    Bspec: 21829
    
    v2: Instead of checking GEN9_BC, BXT and GLK macros, use IS_GEN9 macro (Jani N)
    
    Cc: <stable@vger.kernel.org> # b651bd2a3ae3 ("drm/i915/audio: Fix audio enumeration issue on BXT")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Gaurav K Singh <gaurav.k.singh@intel.com>
    Reviewed-by: Abhay Kumar <abhay.Kumar@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1523989338-29677-1-git-send-email-gaurav.k.singh@intel.com
    (cherry picked from commit 8221229046e862977ae93ec9d34aa583fbd10397)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df11a3516b091330499f75f1f70267a804c8dcfb
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Wed Apr 11 16:15:18 2018 +0300

    drm/i915/bios: filter out invalid DDC pins from VBT child devices
    
    commit a3520b8992e57bc94ab6ec9f95f09c6c932555fd upstream.
    
    The VBT contains the DDC pin to use for specific ports. Alas, sometimes
    the field appears to contain bogus data, and while we check for it later
    on in intel_gmbus_get_adapter() we fail to check the returned NULL on
    errors. Oops results.
    
    The simplest approach seems to be to catch and ignore the bogus DDC pins
    already at the VBT parsing phase, reverting to fixed per port default
    pins. This doesn't guarantee display working, but at least it prevents
    the oops. And we continue to be fuzzed by VBT.
    
    One affected machine is Dell Latitude 5590 where a BIOS upgrade added
    invalid DDC pins.
    
    Typical backtrace:
    
    [   35.461411] WARN_ON(!intel_gmbus_is_valid_pin(dev_priv, pin))
    [   35.461432] WARNING: CPU: 6 PID: 411 at drivers/gpu/drm/i915/intel_i2c.c:844 intel_gmbus_get_adapter+0x32/0x37 [i915]
    [   35.461437] Modules linked in: i915 ahci libahci dm_snapshot dm_bufio dm_raid raid456 async_raid6_recov async_pq raid6_pq async_xor xor async_memcpy async_tx
    [   35.461445] CPU: 6 PID: 411 Comm: kworker/u16:2 Not tainted 4.16.0-rc7.x64-g1cda370ffded #1
    [   35.461447] Hardware name: Dell Inc. Latitude 5590/0MM81M, BIOS 1.1.9 03/13/2018
    [   35.461450] Workqueue: events_unbound async_run_entry_fn
    [   35.461465] RIP: 0010:intel_gmbus_get_adapter+0x32/0x37 [i915]
    [   35.461467] RSP: 0018:ffff9b4e43d47c40 EFLAGS: 00010286
    [   35.461469] RAX: 0000000000000000 RBX: ffff98f90639f800 RCX: ffffffffae051960
    [   35.461471] RDX: 0000000000000001 RSI: 0000000000000092 RDI: 0000000000000246
    [   35.461472] RBP: ffff98f905410000 R08: 0000004d062a83f6 R09: 00000000000003bd
    [   35.461474] R10: 0000000000000031 R11: ffffffffad4eda58 R12: ffff98f905410000
    [   35.461475] R13: ffff98f9064c1000 R14: ffff9b4e43d47cf0 R15: ffff98f905410000
    [   35.461477] FS:  0000000000000000(0000) GS:ffff98f92e580000(0000) knlGS:0000000000000000
    [   35.461479] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   35.461481] CR2: 00007f5682359008 CR3: 00000001b700c005 CR4: 00000000003606e0
    [   35.461483] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   35.461484] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   35.461486] Call Trace:
    [   35.461501]  intel_hdmi_set_edid+0x37/0x27f [i915]
    [   35.461515]  intel_hdmi_detect+0x7c/0x97 [i915]
    [   35.461518]  drm_helper_probe_single_connector_modes+0xe1/0x6c0
    [   35.461521]  drm_setup_crtcs+0x129/0xa6a
    [   35.461523]  ? __switch_to_asm+0x34/0x70
    [   35.461525]  ? __switch_to_asm+0x34/0x70
    [   35.461527]  ? __switch_to_asm+0x40/0x70
    [   35.461528]  ? __switch_to_asm+0x34/0x70
    [   35.461529]  ? __switch_to_asm+0x40/0x70
    [   35.461531]  ? __switch_to_asm+0x34/0x70
    [   35.461532]  ? __switch_to_asm+0x40/0x70
    [   35.461534]  ? __switch_to_asm+0x34/0x70
    [   35.461536]  __drm_fb_helper_initial_config_and_unlock+0x34/0x46f
    [   35.461538]  ? __switch_to_asm+0x40/0x70
    [   35.461541]  ? _cond_resched+0x10/0x33
    [   35.461557]  intel_fbdev_initial_config+0xf/0x1c [i915]
    [   35.461560]  async_run_entry_fn+0x2e/0xf5
    [   35.461563]  process_one_work+0x15b/0x364
    [   35.461565]  worker_thread+0x2c/0x3a0
    [   35.461567]  ? process_one_work+0x364/0x364
    [   35.461568]  kthread+0x10c/0x122
    [   35.461570]  ? _kthread_create_on_node+0x5d/0x5d
    [   35.461572]  ret_from_fork+0x35/0x40
    [   35.461574] Code: 74 16 89 f6 48 8d 04 b6 48 c1 e0 05 48 29 f0 48 8d 84 c7 e8 11 00 00 c3 48 c7 c6 b0 19 1e c0 48 c7 c7 64 8a 1c c0 e8 47 88 ed ec <0f> 0b 31 c0 c3 8b 87 a4 04 00 00 80 e4 fc 09 c6 89 b7 a4 04 00
    [   35.461604] WARNING: CPU: 6 PID: 411 at drivers/gpu/drm/i915/intel_i2c.c:844 intel_gmbus_get_adapter+0x32/0x37 [i915]
    [   35.461606] ---[ end trace 4fe1e63e2dd93373 ]---
    [   35.461609] BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    [   35.461613] IP: i2c_transfer+0x4/0x86
    [   35.461614] PGD 0 P4D 0
    [   35.461616] Oops: 0000 [#1] SMP PTI
    [   35.461618] Modules linked in: i915 ahci libahci dm_snapshot dm_bufio dm_raid raid456 async_raid6_recov async_pq raid6_pq async_xor xor async_memcpy async_tx
    [   35.461624] CPU: 6 PID: 411 Comm: kworker/u16:2 Tainted: G        W        4.16.0-rc7.x64-g1cda370ffded #1
    [   35.461625] Hardware name: Dell Inc. Latitude 5590/0MM81M, BIOS 1.1.9 03/13/2018
    [   35.461628] Workqueue: events_unbound async_run_entry_fn
    [   35.461630] RIP: 0010:i2c_transfer+0x4/0x86
    [   35.461631] RSP: 0018:ffff9b4e43d47b30 EFLAGS: 00010246
    [   35.461633] RAX: ffff9b4e43d47b6e RBX: 0000000000000005 RCX: 0000000000000001
    [   35.461635] RDX: 0000000000000002 RSI: ffff9b4e43d47b80 RDI: 0000000000000000
    [   35.461636] RBP: ffff9b4e43d47bd8 R08: 0000004d062a83f6 R09: 00000000000003bd
    [   35.461638] R10: 0000000000000031 R11: ffffffffad4eda58 R12: 0000000000000002
    [   35.461639] R13: 0000000000000001 R14: ffff9b4e43d47b6f R15: ffff9b4e43d47c07
    [   35.461641] FS:  0000000000000000(0000) GS:ffff98f92e580000(0000) knlGS:0000000000000000
    [   35.461643] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   35.461645] CR2: 0000000000000010 CR3: 00000001b700c005 CR4: 00000000003606e0
    [   35.461646] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   35.461647] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   35.461649] Call Trace:
    [   35.461652]  drm_do_probe_ddc_edid+0xb3/0x128
    [   35.461654]  drm_get_edid+0xe5/0x38d
    [   35.461669]  intel_hdmi_set_edid+0x45/0x27f [i915]
    [   35.461684]  intel_hdmi_detect+0x7c/0x97 [i915]
    [   35.461687]  drm_helper_probe_single_connector_modes+0xe1/0x6c0
    [   35.461689]  drm_setup_crtcs+0x129/0xa6a
    [   35.461691]  ? __switch_to_asm+0x34/0x70
    [   35.461693]  ? __switch_to_asm+0x34/0x70
    [   35.461694]  ? __switch_to_asm+0x40/0x70
    [   35.461696]  ? __switch_to_asm+0x34/0x70
    [   35.461697]  ? __switch_to_asm+0x40/0x70
    [   35.461698]  ? __switch_to_asm+0x34/0x70
    [   35.461700]  ? __switch_to_asm+0x40/0x70
    [   35.461701]  ? __switch_to_asm+0x34/0x70
    [   35.461703]  __drm_fb_helper_initial_config_and_unlock+0x34/0x46f
    [   35.461705]  ? __switch_to_asm+0x40/0x70
    [   35.461707]  ? _cond_resched+0x10/0x33
    [   35.461724]  intel_fbdev_initial_config+0xf/0x1c [i915]
    [   35.461727]  async_run_entry_fn+0x2e/0xf5
    [   35.461729]  process_one_work+0x15b/0x364
    [   35.461731]  worker_thread+0x2c/0x3a0
    [   35.461733]  ? process_one_work+0x364/0x364
    [   35.461734]  kthread+0x10c/0x122
    [   35.461736]  ? _kthread_create_on_node+0x5d/0x5d
    [   35.461738]  ret_from_fork+0x35/0x40
    [   35.461739] Code: 5c fa e1 ad 48 89 df e8 ea fb ff ff e9 2a ff ff ff 0f 1f 44 00 00 31 c0 e9 43 fd ff ff 31 c0 45 31 e4 e9 c5 fd ff ff 41 54 55 53 <48> 8b 47 10 48 83 78 10 00 74 70 41 89 d4 48 89 f5 48 89 fb 65
    [   35.461756] RIP: i2c_transfer+0x4/0x86 RSP: ffff9b4e43d47b30
    [   35.461757] CR2: 0000000000000010
    [   35.461759] ---[ end trace 4fe1e63e2dd93374 ]---
    
    Based on a patch by Fei Li.
    
    v2: s/reverting/sticking/ (Chris)
    
    Cc: stable@vger.kernel.org
    Cc: Fei Li <fei.li@intel.com>
    Co-developed-by: Fei Li <fei.li@intel.com>
    Reported-by: Pavel Nakonechnyi <zorg1331@gmail.com>
    Reported-and-tested-by: Seweryn Kokot <sewkokot@gmail.com>
    Reported-and-tested-by: Laszlo Valko <valko@linux.karinthy.hu>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=105549
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=105961
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180411131519.9091-1-jani.nikula@intel.com
    (cherry picked from commit f212bf9abe5de9f938fecea7df07046e74052dde)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14dafbb97471aad6439bd4649e47ff833f10373b
Author: Tina Zhang <tina.zhang@intel.com>
Date:   Wed Mar 28 13:49:29 2018 +0800

    drm/i915/gvt: Add drm_format_mod update
    
    commit 10996f802109c83421ca30556cfe36ffc3bebae3 upstream.
    
    Add drm_format_mod update, which is omitted.
    
    Fixes: e546e281("drm/i915/gvt: Dmabuf support for GVT-g")
    Cc: stable@vger.kernel.org
    Signed-off-by: Tina Zhang <tina.zhang@intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a864c3295d0327ba83d491da84858a4ee403d970
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Wed Mar 21 15:08:47 2018 +0100

    drm/i915/gvt: throw error on unhandled vfio ioctls
    
    commit 9f591ae60e1be026901398ef99eede91237aa3a1 upstream.
    
    On unknown/unhandled ioctls the driver should return an error, so
    userspace knows it tried to use something unsupported.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86c9663495cd5142a11cd4c60f113f31c7fbe0c4
Author: Daniel J Blueman <daniel@quora.org>
Date:   Mon Apr 2 15:10:35 2018 +0800

    drm/vc4: Fix memory leak during BO teardown
    
    commit c0db1b677e1d584fab5d7ac76a32e1c0157542e0 upstream.
    
    During BO teardown, an indirect list 'uniform_addr_offsets' wasn't being
    freed leading to leaking many 128B allocations. Fix the memory leak by
    releasing it at teardown time.
    
    Cc: stable@vger.kernel.org
    Fixes: 6d45c81d229d ("drm/vc4: Add support for branching in shader validation.")
    Signed-off-by: Daniel J Blueman <daniel@quora.org>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180402071035.25356-1-daniel@quora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47d39ff8d6cbe9d6f04dc46627ad677783b31bdc
Author: Xiaoming Gao <gxm.linux.kernel@gmail.com>
Date:   Fri Apr 13 17:48:08 2018 +0800

    x86/tsc: Prevent 32bit truncation in calc_hpet_ref()
    
    commit d3878e164dcd3925a237a20e879432400e369172 upstream.
    
    The TSC calibration code uses HPET as reference. The conversion normalizes
    the delta of two HPET timestamps:
    
        hpetref = ((tshpet1 - tshpet2) * HPET_PERIOD) / 1e6
    
    and then divides the normalized delta of the corresponding TSC timestamps
    by the result to calulate the TSC frequency.
    
        tscfreq = ((tstsc1 - tstsc2 ) * 1e6) / hpetref
    
    This uses do_div() which takes an u32 as the divisor, which worked so far
    because the HPET frequency was low enough that 'hpetref' never exceeded
    32bit.
    
    On Skylake machines the HPET frequency increased so 'hpetref' can exceed
    32bit. do_div() truncates the divisor, which causes the calibration to
    fail.
    
    Use div64_u64() to avoid the problem.
    
    [ tglx: Fixes whitespace mangled patch and rewrote changelog ]
    
    Signed-off-by: Xiaoming Gao <newtongao@tencent.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc: peterz@infradead.org
    Cc: hpa@zytor.com
    Link: https://lkml.kernel.org/r/38894564-4fc9-b8ec-353f-de702839e44e@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3917e4804c8325b29e75b3e702d761e7936d1414
Author: Laura Abbott <labbott@redhat.com>
Date:   Tue Apr 17 14:57:42 2018 -0700

    posix-cpu-timers: Ensure set_process_cpu_timer is always evaluated
    
    commit c3bca5d450b620dd3d36e14b5e1f43639fd47d6b upstream.
    
    Commit a9445e47d897 ("posix-cpu-timers: Make set_process_cpu_timer()
    more robust") moved the check into the 'if' statement. Unfortunately,
    it did so on the right side of an && which means that it may get short
    circuited and never evaluated. This is easily reproduced with:
    
    $ cat loop.c
    void main() {
      struct rlimit res;
      /* set the CPU time limit */
      getrlimit(RLIMIT_CPU,&res);
      res.rlim_cur = 2;
      res.rlim_max = 2;
      setrlimit(RLIMIT_CPU,&res);
    
      while (1);
    }
    
    Which will hang forever instead of being killed. Fix this by pulling the
    evaluation out of the if statement but checking the return value instead.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1568337
    Fixes: a9445e47d897 ("posix-cpu-timers: Make set_process_cpu_timer() more robust")
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc: "Max R . P . Grossmann" <m@max.pm>
    Cc: John Stultz <john.stultz@linaro.org>
    Link: https://lkml.kernel.org/r/20180417215742.2521-1-labbott@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa8900e6a49fa193690478940e18761d82007aa0
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Thu Apr 19 14:04:43 2018 +0800

    clocksource/imx-tpm: Correct -ETIME return condition check
    
    commit 7407188489c62a7b5694bc75a6db2b82af94c9a5 upstream.
    
    The additional brakects added to tpm_set_next_event's return value
    computation causes (int) forced type conversion NOT taking effect, and the
    incorrect value return will cause various system timer issue, like RCU
    stall etc..
    
    Remove the additional brackets to make sure tpm_set_next_event always
    returns correct value.
    
    Fixes: 059ab7b82eec ("clocksource/drivers/imx-tpm: Add imx tpm timer support")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Dong Aisheng <Aisheng.dong@nxp.com>
    Cc: stable@vger.kernel.org
    Cc: daniel.lezcano@linaro.org
    Cc: Linux-imx@nxp.com
    Link: https://lkml.kernel.org/r/1524117883-2484-1-git-send-email-Anson.Huang@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd069d4600e834ad984a91a76dd3cb90dd882245
Author: Dou Liyang <douly.fnst@cn.fujitsu.com>
Date:   Thu Apr 12 09:40:52 2018 +0800

    x86/acpi: Prevent X2APIC id 0xffffffff from being accounted
    
    commit 10daf10ab154e31237a8c07242be3063fb6a9bf4 upstream.
    
    RongQing reported that there are some X2APIC id 0xffffffff in his machine's
    ACPI MADT table, which makes the number of possible CPU inaccurate.
    
    The reason is that the ACPI X2APIC parser has no sanity check for APIC ID
    0xffffffff, which is an invalid id in all APIC types. See "Intel® 64
    Architecture x2APIC Specification", Chapter 2.4.1.
    
    Add a sanity check to acpi_parse_x2apic() which ignores the invalid id.
    
    Reported-by: Li RongQing <lirongqing@baidu.com>
    Signed-off-by: Dou Liyang <douly.fnst@cn.fujitsu.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc: len.brown@intel.com
    Cc: rjw@rjwysocki.net
    Cc: hpa@zytor.com
    Link: https://lkml.kernel.org/r/20180412014052.25186-1-douly.fnst@cn.fujitsu.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68989e4e5d28cdd25fad6a526727d6e2498f4db6
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Wed Apr 18 09:41:54 2018 +0300

    btrfs: Fix race condition between delayed refs and blockgroup removal
    
    commit 5e388e95815408c27f3612190d089afc0774b870 upstream.
    
    When the delayed refs for a head are all run, eventually
    cleanup_ref_head is called which (in case of deletion) obtains a
    reference for the relevant btrfs_space_info struct by querying the bg
    for the range. This is problematic because when the last extent of a
    bg is deleted a race window emerges between removal of that bg and the
    subsequent invocation of cleanup_ref_head. This can result in cache being null
    and either a null pointer dereference or assertion failure.
    
            task: ffff8d04d31ed080 task.stack: ffff9e5dc10cc000
            RIP: 0010:assfail.constprop.78+0x18/0x1a [btrfs]
            RSP: 0018:ffff9e5dc10cfbe8 EFLAGS: 00010292
            RAX: 0000000000000044 RBX: 0000000000000000 RCX: 0000000000000000
            RDX: ffff8d04ffc1f868 RSI: ffff8d04ffc178c8 RDI: ffff8d04ffc178c8
            RBP: ffff8d04d29e5ea0 R08: 00000000000001f0 R09: 0000000000000001
            R10: ffff9e5dc0507d58 R11: 0000000000000001 R12: ffff8d04d29e5ea0
            R13: ffff8d04d29e5f08 R14: ffff8d04efe29b40 R15: ffff8d04efe203e0
            FS:  00007fbf58ead500(0000) GS:ffff8d04ffc00000(0000) knlGS:0000000000000000
            CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
            CR2: 00007fe6c6975648 CR3: 0000000013b2a000 CR4: 00000000000006f0
            DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
            DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
            Call Trace:
             __btrfs_run_delayed_refs+0x10e7/0x12c0 [btrfs]
             btrfs_run_delayed_refs+0x68/0x250 [btrfs]
             btrfs_should_end_transaction+0x42/0x60 [btrfs]
             btrfs_truncate_inode_items+0xaac/0xfc0 [btrfs]
             btrfs_evict_inode+0x4c6/0x5c0 [btrfs]
             evict+0xc6/0x190
             do_unlinkat+0x19c/0x300
             do_syscall_64+0x74/0x140
             entry_SYSCALL_64_after_hwframe+0x3d/0xa2
            RIP: 0033:0x7fbf589c57a7
    
    To fix this, introduce a new flag "is_system" to head_ref structs,
    which is populated at insertion time. This allows to decouple the
    querying for the spaceinfo from querying the possibly deleted bg.
    
    Fixes: d7eae3403f46 ("Btrfs: rework delayed ref total_bytes_pinned accounting")
    CC: stable@vger.kernel.org # 4.14+
    Suggested-by: Omar Sandoval <osandov@osandov.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df84c88faa0bd09d18f1b7dfaf506f0eb05a5702
Author: David Sterba <dsterba@suse.com>
Date:   Mon Apr 16 21:10:14 2018 +0200

    btrfs: fix unaligned access in readdir
    
    commit 92d32170847bfff2dd08af2c016085779f2fd2a1 upstream.
    
    The last update to readdir introduced a temporary buffer to store the
    emitted readdir data, but as there are file names of variable length,
    there's a lot of unaligned access.
    
    This was observed on a sparc64 machine:
    
      Kernel unaligned access at TPC[102f3080] btrfs_real_readdir+0x51c/0x718 [btrfs]
    
    Fixes: 23b5ec74943 ("btrfs: fix readdir deadlock with pagefault")
    CC: stable@vger.kernel.org # 4.14+
    Reported-and-tested-by: René Rebe <rene@exactcode.com>
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a8b85c5d4df3b80609c8de6dedf7536b5bfba8b
Author: Steve French <smfrench@gmail.com>
Date:   Fri Apr 20 12:19:07 2018 -0500

    cifs: do not allow creating sockets except with SMB1 posix exensions
    
    commit 1d0cffa674cfa7d185a302c8c6850fc50b893bed upstream.
    
    RHBZ: 1453123
    
    Since at least the 3.10 kernel and likely a lot earlier we have
    not been able to create unix domain sockets in a cifs share
    when mounted using the SFU mount option (except when mounted
    with the cifs unix extensions to Samba e.g.)
    Trying to create a socket, for example using the af_unix command from
    xfstests will cause :
    BUG: unable to handle kernel NULL pointer dereference at 00000000
    00000040
    
    Since no one uses or depends on being able to create unix domains sockets
    on a cifs share the easiest fix to stop this vulnerability is to simply
    not allow creation of any other special files than char or block devices
    when sfu is used.
    
    Added update to Ronnie's patch to handle a tcon link leak, and
    to address a buf leak noticed by Gustavo and Colin.
    
    Acked-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    CC:  Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reported-by: Eryu Guan <eguan@redhat.com>
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d931c6adf5def75d1bc36ec1e17458b1d3045e9
Author: Long Li <longli@microsoft.com>
Date:   Tue Apr 17 12:17:05 2018 -0700

    cifs: smbd: Check for iov length on sending the last iov
    
    commit ab60ee7bf9a84954f50a66a3d835860e80f99b7f upstream.
    
    When sending the last iov that breaks into smaller buffers to fit the
    transfer size, it's necessary to check if this is the last iov.
    
    If this is the latest iov, stop and proceed to send pages.
    
    Signed-off-by: Long Li <longli@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
