commit 9fbe5c87eaa9b72db08425c52c373eb5f6537a0a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Apr 2 08:02:32 2020 +0200

    Linux 5.6.2

commit cea1c66b816e4f13ad7609cd0082e8f1ff98de0f
Author: Georg Müller <georgmueller@gmx.net>
Date:   Mon Feb 3 21:11:06 2020 +0100

    platform/x86: pmc_atom: Add Lex 2I385SW to critclk_systems DMI table
    
    commit 95b31e35239e5e1689e3d965d692a313c71bd8ab upstream.
    
    The Lex 2I385SW board has two Intel I211 ethernet controllers. Without
    this patch, only the first port is usable. The second port fails to
    start with the following message:
    
        igb: probe of 0000:02:00.0 failed with error -2
    
    Fixes: 648e921888ad ("clk: x86: Stop marking clocks as CLK_IS_CRITICAL")
    Tested-by: Georg Müller <georgmueller@gmx.net>
    Signed-off-by: Georg Müller <georgmueller@gmx.net>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d8b01733206b8016f6f5c853fdf02ec07f8e25c
Author: Eric Biggers <ebiggers@google.com>
Date:   Sat Mar 21 20:43:05 2020 -0700

    vt: vt_ioctl: fix use-after-free in vt_in_use()
    
    commit 7cf64b18b0b96e751178b8d0505d8466ff5a448f upstream.
    
    vt_in_use() dereferences console_driver->ttys[i] without proper locking.
    This is broken because the tty can be closed and freed concurrently.
    
    We could fix this by using 'READ_ONCE(console_driver->ttys[i]) != NULL'
    and skipping the check of tty_struct::count.  But, looking at
    console_driver->ttys[i] isn't really appropriate anyway because even if
    it is NULL the tty can still be in the process of being closed.
    
    Instead, fix it by making vt_in_use() require console_lock() and check
    whether the vt is allocated and has port refcount > 1.  This works since
    following the patch "vt: vt_ioctl: fix VT_DISALLOCATE freeing in-use
    virtual console" the port refcount is incremented while the vt is open.
    
    Reproducer (very unreliable, but it worked for me after a few minutes):
    
            #include <fcntl.h>
            #include <linux/vt.h>
    
            int main()
            {
                    int fd, nproc;
                    struct vt_stat state;
                    char ttyname[16];
    
                    fd = open("/dev/tty10", O_RDONLY);
                    for (nproc = 1; nproc < 8; nproc *= 2)
                            fork();
                    for (;;) {
                            sprintf(ttyname, "/dev/tty%d", rand() % 8);
                            close(open(ttyname, O_RDONLY));
                            ioctl(fd, VT_GETSTATE, &state);
                    }
            }
    
    KASAN report:
    
            BUG: KASAN: use-after-free in vt_in_use drivers/tty/vt/vt_ioctl.c:48 [inline]
            BUG: KASAN: use-after-free in vt_ioctl+0x1ad3/0x1d70 drivers/tty/vt/vt_ioctl.c:657
            Read of size 4 at addr ffff888065722468 by task syz-vt2/132
    
            CPU: 0 PID: 132 Comm: syz-vt2 Not tainted 5.6.0-rc5-00130-g089b6d3654916 #13
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20191223_100556-anatol 04/01/2014
            Call Trace:
             [...]
             vt_in_use drivers/tty/vt/vt_ioctl.c:48 [inline]
             vt_ioctl+0x1ad3/0x1d70 drivers/tty/vt/vt_ioctl.c:657
             tty_ioctl+0x9db/0x11b0 drivers/tty/tty_io.c:2660
             [...]
    
            Allocated by task 136:
             [...]
             kzalloc include/linux/slab.h:669 [inline]
             alloc_tty_struct+0x96/0x8a0 drivers/tty/tty_io.c:2982
             tty_init_dev+0x23/0x350 drivers/tty/tty_io.c:1334
             tty_open_by_driver drivers/tty/tty_io.c:1987 [inline]
             tty_open+0x3ca/0xb30 drivers/tty/tty_io.c:2035
             [...]
    
            Freed by task 41:
             [...]
             kfree+0xbf/0x200 mm/slab.c:3757
             free_tty_struct+0x8d/0xb0 drivers/tty/tty_io.c:177
             release_one_tty+0x22d/0x2f0 drivers/tty/tty_io.c:1468
             process_one_work+0x7f1/0x14b0 kernel/workqueue.c:2264
             worker_thread+0x8b/0xc80 kernel/workqueue.c:2410
             [...]
    
    Fixes: 4001d7b7fc27 ("vt: push down the tty lock so we can see what is left to tackle")
    Cc: <stable@vger.kernel.org> # v3.4+
    Acked-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Link: https://lore.kernel.org/r/20200322034305.210082-3-ebiggers@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 903f879e510838969d93506eea1a498fc9928c51
Author: Eric Biggers <ebiggers@google.com>
Date:   Sat Mar 21 20:43:04 2020 -0700

    vt: vt_ioctl: fix VT_DISALLOCATE freeing in-use virtual console
    
    commit ca4463bf8438b403596edd0ec961ca0d4fbe0220 upstream.
    
    The VT_DISALLOCATE ioctl can free a virtual console while tty_release()
    is still running, causing a use-after-free in con_shutdown().  This
    occurs because VT_DISALLOCATE considers a virtual console's
    'struct vc_data' to be unused as soon as the corresponding tty's
    refcount hits 0.  But actually it may be still being closed.
    
    Fix this by making vc_data be reference-counted via the embedded
    'struct tty_port'.  A newly allocated virtual console has refcount 1.
    Opening it for the first time increments the refcount to 2.  Closing it
    for the last time decrements the refcount (in tty_operations::cleanup()
    so that it happens late enough), as does VT_DISALLOCATE.
    
    Reproducer:
            #include <fcntl.h>
            #include <linux/vt.h>
            #include <sys/ioctl.h>
            #include <unistd.h>
    
            int main()
            {
                    if (fork()) {
                            for (;;)
                                    close(open("/dev/tty5", O_RDWR));
                    } else {
                            int fd = open("/dev/tty10", O_RDWR);
    
                            for (;;)
                                    ioctl(fd, VT_DISALLOCATE, 5);
                    }
            }
    
    KASAN report:
            BUG: KASAN: use-after-free in con_shutdown+0x76/0x80 drivers/tty/vt/vt.c:3278
            Write of size 8 at addr ffff88806a4ec108 by task syz_vt/129
    
            CPU: 0 PID: 129 Comm: syz_vt Not tainted 5.6.0-rc2 #11
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20191223_100556-anatol 04/01/2014
            Call Trace:
             [...]
             con_shutdown+0x76/0x80 drivers/tty/vt/vt.c:3278
             release_tty+0xa8/0x410 drivers/tty/tty_io.c:1514
             tty_release_struct+0x34/0x50 drivers/tty/tty_io.c:1629
             tty_release+0x984/0xed0 drivers/tty/tty_io.c:1789
             [...]
    
            Allocated by task 129:
             [...]
             kzalloc include/linux/slab.h:669 [inline]
             vc_allocate drivers/tty/vt/vt.c:1085 [inline]
             vc_allocate+0x1ac/0x680 drivers/tty/vt/vt.c:1066
             con_install+0x4d/0x3f0 drivers/tty/vt/vt.c:3229
             tty_driver_install_tty drivers/tty/tty_io.c:1228 [inline]
             tty_init_dev+0x94/0x350 drivers/tty/tty_io.c:1341
             tty_open_by_driver drivers/tty/tty_io.c:1987 [inline]
             tty_open+0x3ca/0xb30 drivers/tty/tty_io.c:2035
             [...]
    
            Freed by task 130:
             [...]
             kfree+0xbf/0x1e0 mm/slab.c:3757
             vt_disallocate drivers/tty/vt/vt_ioctl.c:300 [inline]
             vt_ioctl+0x16dc/0x1e30 drivers/tty/vt/vt_ioctl.c:818
             tty_ioctl+0x9db/0x11b0 drivers/tty/tty_io.c:2660
             [...]
    
    Fixes: 4001d7b7fc27 ("vt: push down the tty lock so we can see what is left to tackle")
    Cc: <stable@vger.kernel.org> # v3.4+
    Reported-by: syzbot+522643ab5729b0421998@syzkaller.appspotmail.com
    Acked-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Link: https://lore.kernel.org/r/20200322034305.210082-2-ebiggers@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e1c0484b7f84f55713b1eb1faf641ae49496bb1
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Feb 24 00:03:26 2020 -0800

    vt: vt_ioctl: remove unnecessary console allocation checks
    
    commit 1aa6e058dd6cd04471b1f21298270014daf48ac9 upstream.
    
    The vc_cons_allocated() checks in vt_ioctl() and vt_compat_ioctl() are
    unnecessary because they can only be reached by calling ioctl() on an
    open tty, which implies the corresponding virtual console is allocated.
    
    And even if the virtual console *could* be freed concurrently, then
    these checks would be broken since they aren't done under console_lock,
    and the vc_data is dereferenced before them anyway.
    
    So, remove these unneeded checks to avoid confusion.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Link: https://lore.kernel.org/r/20200224080326.295046-1-ebiggers@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e50d4c4fecccef226a86e2a6be20ad376138e9ec
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Feb 19 08:39:48 2020 +0100

    vt: switch vt_dont_switch to bool
    
    commit f400991bf872debffb01c46da882dc97d7e3248e upstream.
    
    vt_dont_switch is pure boolean, no need for whole char.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20200219073951.16151-6-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 270db0384de5867ca046c09418f129f5f78072f5
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Feb 19 08:39:44 2020 +0100

    vt: ioctl, switch VT_IS_IN_USE and VT_BUSY to inlines
    
    commit e587e8f17433ddb26954f0edf5b2f95c42155ae9 upstream.
    
    These two were macros. Switch them to static inlines, so that it's more
    understandable what they are doing.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20200219073951.16151-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f0e2212be7c46a4a43df30c1dc4618e28ad94f9
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Feb 19 08:39:43 2020 +0100

    vt: selection, introduce vc_is_sel
    
    commit dce05aa6eec977f1472abed95ccd71276b9a3864 upstream.
    
    Avoid global variables (namely sel_cons) by introducing vc_is_sel. It
    checks whether the parameter is the current selection console. This will
    help putting sel_cons to a struct later.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20200219073951.16151-1-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aab76df91483a8803a001c3f5e25b0a8d43f8151
Author: Lanqing Liu <liuhhome@gmail.com>
Date:   Mon Mar 16 11:13:33 2020 +0800

    serial: sprd: Fix a dereference warning
    
    commit efc176929a3505a30c3993ddd393b40893649bd2 upstream.
    
    We should validate if the 'sup' is NULL or not before freeing DMA
    memory, to fix below warning.
    
    "drivers/tty/serial/sprd_serial.c:1141 sprd_remove()
     error: we previously assumed 'sup' could be null (see line 1132)"
    
    Fixes: f4487db58eb7 ("serial: sprd: Add DMA mode support")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lanqing Liu <liuhhome@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/e2bd92691538e95b04a2c2a728f3292e1617018f.1584325957.git.liuhhome@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7908d2658f92b5164d715959d51ebb88f4ad891b
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Mar 29 22:50:06 2020 +0200

    mac80211: fix authentication with iwlwifi/mvm
    
    commit be8c827f50a0bcd56361b31ada11dc0a3c2fd240 upstream.
    
    The original patch didn't copy the ieee80211_is_data() condition
    because on most drivers the management frames don't go through
    this path. However, they do on iwlwifi/mvm, so we do need to keep
    the condition here.
    
    Cc: stable@vger.kernel.org
    Fixes: ce2e1ca70307 ("mac80211: Check port authorization in the ieee80211_tx_dequeue() case")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Woody Suwalski <terraluna977@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb7cd49c9c281cf00fa38a53c2e6ccf708318b87
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Jan 24 14:21:14 2020 +0000

    bpf: update jmp32 test cases to fix range bound deduction
    
    [ no upstream commit ]
    
    Since commit f2d67fec0b43 ("bpf: Undo incorrect __reg_bound_offset32 handling")
    has been backported to stable, we also need to update related test cases that
    started to (expectedly) fail on stable. Given the functionality has been reverted
    we need to move the result to REJECT.
    
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
