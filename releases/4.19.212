commit f74f1728531c43f4569eea4645fcc58feedc677a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Oct 17 10:19:49 2021 +0200

    Linux 4.19.212
    
    Link: https://lore.kernel.org/r/20211014145206.566123760@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcc0e1a90a4a1bcc6837ed1c0496f164525eaac9
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Sep 20 15:31:11 2021 +0200

    sched: Always inline is_percpu_thread()
    
    [ Upstream commit 83d40a61046f73103b4e5d8f1310261487ff63b0 ]
    
      vmlinux.o: warning: objtool: check_preemption_disabled()+0x81: call to is_percpu_thread() leaves .noinstr.text section
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210928084218.063371959@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e5484e212af8fe551eda63a42336bce37d9e1cd
Author: Anand K Mistry <amistry@google.com>
Date:   Wed Sep 29 17:04:21 2021 +1000

    perf/x86: Reset destroy callback on event init failure
    
    [ Upstream commit 02d029a41dc986e2d5a77ecca45803857b346829 ]
    
    perf_init_event tries multiple init callbacks and does not reset the
    event state between tries. When x86_pmu_event_init runs, it
    unconditionally sets the destroy callback to hw_perf_event_destroy. On
    the next init attempt after x86_pmu_event_init, in perf_try_init_event,
    if the pmu's capabilities includes PERF_PMU_CAP_NO_EXCLUDE, the destroy
    callback will be run. However, if the next init didn't set the destroy
    callback, hw_perf_event_destroy will be run (since the callback wasn't
    reset).
    
    Looking at other pmu init functions, the common pattern is to only set
    the destroy callback on a successful init. Resetting the callback on
    failure tries to replicate that pattern.
    
    This was discovered after commit f11dd0d80555 ("perf/x86/amd/ibs: Extend
    PERF_PMU_CAP_NO_EXCLUDE to IBS Op") when the second (and only second)
    run of the perf tool after a reboot results in 0 samples being
    generated. The extra run of hw_perf_event_destroy results in
    active_events having an extra decrement on each perf run. The second run
    has active_events == 0 and every subsequent run has active_events < 0.
    When active_events == 0, the NMI handler will early-out and not record
    any samples.
    
    Signed-off-by: Anand K Mistry <amistry@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210929170405.1.I078b98ee7727f9ae9d6df8262bad7e325e40faf0@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94b96b3cc83da59874fe6af387d7ab8a6a706017
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Sep 25 00:03:30 2021 +0100

    scsi: virtio_scsi: Fix spelling mistake "Unsupport" -> "Unsupported"
    
    [ Upstream commit cced4c0ec7c06f5230a2958907a409c849762293 ]
    
    There are a couple of spelling mistakes in pr_info and pr_err messages.
    Fix them.
    
    Link: https://lore.kernel.org/r/20210924230330.143785-1-colin.king@canonical.com
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f52b24f2140b99a8b7e86e99aacf2808fa9f9bb
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Fri Sep 24 17:51:53 2021 +0800

    scsi: ses: Fix unsigned comparison with less than zero
    
    [ Upstream commit dd689ed5aa905daf4ba4c99319a52aad6ea0a796 ]
    
    Fix the following coccicheck warning:
    
    ./drivers/scsi/ses.c:137:10-16: WARNING: Unsigned expression compared
    with zero: result > 0.
    
    Link: https://lore.kernel.org/r/1632477113-90378-1-git-send-email-jiapeng.chong@linux.alibaba.com
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59a7b711b3fd475d3548a88caf24142ca31ecec6
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Sep 27 14:48:23 2021 -0700

    net: sun: SUNVNET_COMMON should depend on INET
    
    [ Upstream commit 103bde372f084206c6972be543ecc247ebbff9f3 ]
    
    When CONFIG_INET is not set, there are failing references to IPv4
    functions, so make this driver depend on INET.
    
    Fixes these build errors:
    
    sparc64-linux-ld: drivers/net/ethernet/sun/sunvnet_common.o: in function `sunvnet_start_xmit_common':
    sunvnet_common.c:(.text+0x1a68): undefined reference to `__icmp_send'
    sparc64-linux-ld: drivers/net/ethernet/sun/sunvnet_common.o: in function `sunvnet_poll_common':
    sunvnet_common.c:(.text+0x358c): undefined reference to `ip_send_check'
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Aaron Young <aaron.young@oracle.com>
    Cc: Rashmi Narasimhan <rashmi.narasimhan@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15a51ab442b46ff442ae410ecabe9f19ff7f7902
Author: MichelleJin <shjy180909@gmail.com>
Date:   Mon Sep 27 03:34:57 2021 +0000

    mac80211: check return value of rhashtable_init
    
    [ Upstream commit 111461d573741c17eafad029ac93474fa9adcce0 ]
    
    When rhashtable_init() fails, it returns -EINVAL.
    However, since error return value of rhashtable_init is not checked,
    it can cause use of uninitialized pointers.
    So, fix unhandled errors of rhashtable_init.
    
    Signed-off-by: MichelleJin <shjy180909@gmail.com>
    Link: https://lore.kernel.org/r/20210927033457.1020967-4-shjy180909@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65492b05f4a4a18300863f00c51481cd8b32c689
Author: 王贇 <yun.wang@linux.alibaba.com>
Date:   Fri Sep 24 10:35:58 2021 +0800

    net: prevent user from passing illegal stab size
    
    [ Upstream commit b193e15ac69d56f35e1d8e2b5d16cbd47764d053 ]
    
    We observed below report when playing with netlink sock:
    
      UBSAN: shift-out-of-bounds in net/sched/sch_api.c:580:10
      shift exponent 249 is too large for 32-bit type
      CPU: 0 PID: 685 Comm: a.out Not tainted
      Call Trace:
       dump_stack_lvl+0x8d/0xcf
       ubsan_epilogue+0xa/0x4e
       __ubsan_handle_shift_out_of_bounds+0x161/0x182
       __qdisc_calculate_pkt_len+0xf0/0x190
       __dev_queue_xmit+0x2ed/0x15b0
    
    it seems like kernel won't check the stab log value passing from
    user, and will use the insane value later to calculate pkt_len.
    
    This patch just add a check on the size/cell_log to avoid insane
    calculation.
    
    Reported-by: Abaci <abaci@linux.alibaba.com>
    Signed-off-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3cb487a6a6da291f592d177abe8447912e1c2f6f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Jul 25 17:19:00 2021 +0000

    m68k: Handle arrivals of multiple signals correctly
    
    [ Upstream commit 4bb0bd81ce5e97092dfda6a106d414b703ec0ee8 ]
    
    When we have several pending signals, have entered with the kernel
    with large exception frame *and* have already built at least one
    sigframe, regs->stkadj is going to be non-zero and regs->format/sr/pc
    are going to be junk - the real values are in shifted exception stack
    frame we'd built when putting together the first sigframe.
    
    If that happens, subsequent sigframes are going to be garbage.
    Not hard to fix - just need to find the "adjusted" frame first
    and look for format/vector/sr/pc in it.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Reviewed-by: Michael Schmitz <schmitzmic@gmail.com>
    Tested-by: Finn Thain <fthain@linux-m68k.org>
    Link: https://lore.kernel.org/r/YP2dBIAPTaVvHiZ6@zeniv-ca.linux.org.uk
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cbfc093fcdaceb9e1c0a76829014de9a57c7d98
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Aug 27 22:42:30 2021 +0800

    mac80211: Drop frames from invalid MAC address in ad-hoc mode
    
    [ Upstream commit a6555f844549cd190eb060daef595f94d3de1582 ]
    
    WARNING: CPU: 1 PID: 9 at net/mac80211/sta_info.c:554
    sta_info_insert_rcu+0x121/0x12a0
    Modules linked in:
    CPU: 1 PID: 9 Comm: kworker/u8:1 Not tainted 5.14.0-rc7+ #253
    Workqueue: phy3 ieee80211_iface_work
    RIP: 0010:sta_info_insert_rcu+0x121/0x12a0
    ...
    Call Trace:
     ieee80211_ibss_finish_sta+0xbc/0x170
     ieee80211_ibss_work+0x13f/0x7d0
     ieee80211_iface_work+0x37a/0x500
     process_one_work+0x357/0x850
     worker_thread+0x41/0x4d0
    
    If an Ad-Hoc node receives packets with invalid source MAC address,
    it hits a WARN_ON in sta_info_insert_check(), this can spam the log.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20210827144230.39944-1-yuehaibing@huawei.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d169887d824bff0101c7c7ec2292d250e8cfe95d
Author: Jeremy Sowden <jeremy@azazel.net>
Date:   Sun Sep 12 22:24:33 2021 +0100

    netfilter: ip6_tables: zero-initialize fragment offset
    
    [ Upstream commit 310e2d43c3ad429c1fba4b175806cf1f55ed73a6 ]
    
    ip6tables only sets the `IP6T_F_PROTO` flag on a rule if a protocol is
    specified (`-p tcp`, for example).  However, if the flag is not set,
    `ip6_packet_match` doesn't call `ipv6_find_hdr` for the skb, in which
    case the fragment offset is left uninitialized and a garbage value is
    passed to each matcher.
    
    Signed-off-by: Jeremy Sowden <jeremy@azazel.net>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9f4440a1f5a9d91ed72b35232f0147d6efcc8ae
Author: Mizuho Mori <morimolymoly@gmail.com>
Date:   Thu Jul 29 20:03:25 2021 +0900

    HID: apple: Fix logical maximum and usage maximum of Magic Keyboard JIS
    
    [ Upstream commit 67fd71ba16a37c663d139f5ba5296f344d80d072 ]
    
    Apple Magic Keyboard(JIS)'s Logical Maximum and Usage Maximum are wrong.
    
    Below is a report descriptor.
    
    0x05, 0x01,         /*  Usage Page (Desktop),                           */
    0x09, 0x06,         /*  Usage (Keyboard),                               */
    0xA1, 0x01,         /*  Collection (Application),                       */
    0x85, 0x01,         /*      Report ID (1),                              */
    0x05, 0x07,         /*      Usage Page (Keyboard),                      */
    0x15, 0x00,         /*      Logical Minimum (0),                        */
    0x25, 0x01,         /*      Logical Maximum (1),                        */
    0x19, 0xE0,         /*      Usage Minimum (KB Leftcontrol),             */
    0x29, 0xE7,         /*      Usage Maximum (KB Right GUI),               */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x95, 0x08,         /*      Report Count (8),                           */
    0x81, 0x02,         /*      Input (Variable),                           */
    0x95, 0x05,         /*      Report Count (5),                           */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x05, 0x08,         /*      Usage Page (LED),                           */
    0x19, 0x01,         /*      Usage Minimum (01h),                        */
    0x29, 0x05,         /*      Usage Maximum (05h),                        */
    0x91, 0x02,         /*      Output (Variable),                          */
    0x95, 0x01,         /*      Report Count (1),                           */
    0x75, 0x03,         /*      Report Size (3),                            */
    0x91, 0x03,         /*      Output (Constant, Variable),                */
    0x95, 0x08,         /*      Report Count (8),                           */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x15, 0x00,         /*      Logical Minimum (0),                        */
    0x25, 0x01,         /*      Logical Maximum (1),                        */
    
    here is a report descriptor which is parsed one in kernel.
    see sys/kernel/debug/hid/<dev>/rdesc
    
    05 01 09 06 a1 01 85 01 05 07
    15 00 25 01 19 e0 29 e7 75 01
    95 08 81 02 95 05 75 01 05 08
    19 01 29 05 91 02 95 01 75 03
    91 03 95 08 75 01 15 00 25 01
    06 00 ff 09 03 81 03 95 06 75
    08 15 00 25 [65] 05 07 19 00 29
    [65] 81 00 95 01 75 01 15 00 25
    01 05 0c 09 b8 81 02 95 01 75
    01 06 01 ff 09 03 81 02 95 01
    75 06 81 03 06 02 ff 09 55 85
    55 15 00 26 ff 00 75 08 95 40
    b1 a2 c0 06 00 ff 09 14 a1 01
    85 90 05 84 75 01 95 03 15 00
    25 01 09 61 05 85 09 44 09 46
    81 02 95 05 81 01 75 08 95 01
    15 00 26 ff 00 09 65 81 02 c0
    00
    
    Position 64(Logical Maximum) and 70(Usage Maximum) are 101.
    Both should be 0xE7 to support JIS specific keys(ろ, Eisu, Kana, |) support.
    position 117 is also 101 but not related(it is Usage 65h).
    
    There are no difference of product id between JIS and ANSI.
    They are same 0x0267.
    
    Signed-off-by: Mizuho Mori <morimolymoly@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 403c71f36d4acff4741218f3136da06402ff9562
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Sep 28 13:32:33 2021 -0700

    net: phy: bcm7xxx: Fixed indirect MMD operations
    
    commit d88fd1b546ff19c8040cfaea76bf16aed1c5a0bb upstream.
    
    When EEE support was added to the 28nm EPHY it was assumed that it would
    be able to support the standard clause 45 over clause 22 register access
    method. It turns out that the PHY does not support that, which is the
    very reason for using the indirect shadow mode 2 bank 3 access method.
    
    Implement {read,write}_mmd to allow the standard PHY library routines
    pertaining to EEE querying and configuration to work correctly on these
    PHYs. This forces us to implement a __phy_set_clr_bits() function that
    does not grab the MDIO bus lock since the PHY driver's {read,write}_mmd
    functions are always called with that lock held.
    
    Fixes: 83ee102a6998 ("net: phy: bcm7xxx: add support for 28nm EPHY")
    [florian: adjust locking since phy_{read,write}_mmd are called with no
    PHYLIB locks held]
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
