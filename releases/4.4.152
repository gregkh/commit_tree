commit 0c73169690eb1d7d6f72a128a010bd84343e503a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Aug 24 13:27:02 2018 +0200

    Linux 4.4.152

commit 712254045c02edf3dc21714337a23bf361d0c5ee
Author: Jann Horn <jannh@google.com>
Date:   Tue Aug 21 21:59:37 2018 -0700

    reiserfs: fix broken xattr handling (heap corruption, bad retval)
    
    commit a13f085d111e90469faf2d9965eb39b11c114d7e upstream.
    
    This fixes the following issues:
    
    - When a buffer size is supplied to reiserfs_listxattr() such that each
      individual name fits, but the concatenation of all names doesn't fit,
      reiserfs_listxattr() overflows the supplied buffer.  This leads to a
      kernel heap overflow (verified using KASAN) followed by an out-of-bounds
      usercopy and is therefore a security bug.
    
    - When a buffer size is supplied to reiserfs_listxattr() such that a
      name doesn't fit, -ERANGE should be returned.  But reiserfs instead just
      truncates the list of names; I have verified that if the only xattr on a
      file has a longer name than the supplied buffer length, listxattr()
      incorrectly returns zero.
    
    With my patch applied, -ERANGE is returned in both cases and the memory
    corruption doesn't happen anymore.
    
    Credit for making me clean this code up a bit goes to Al Viro, who pointed
    out that the ->actor calling convention is suboptimal and should be
    changed.
    
    Link: http://lkml.kernel.org/r/20180802151539.5373-1-jannh@google.com
    Fixes: 48b32a3553a5 ("reiserfs: use generic xattr handlers")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Jeff Mahoney <jeffm@suse.com>
    Cc: Eric Biggers <ebiggers@google.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e57e6c67fd4b568b180fdbd5c14043d39fe6cda
Author: Esben Haabendal <eha@deif.com>
Date:   Thu Aug 16 10:43:12 2018 +0200

    i2c: imx: Fix race condition in dma read
    
    commit bed4ff1ed4d8f2ef5007c5c6ae1b29c5677a3632 upstream.
    
    This fixes a race condition, where the DMAEN bit ends up being set after
    I2C slave has transmitted a byte following the dummy read.  When that
    happens, an interrupt is generated instead, and no DMA request is generated
    to kickstart the DMA read, and a timeout happens after DMA_TIMEOUT (1 sec).
    
    Fixed by setting the DMAEN bit before the dummy read.
    
    Signed-off-by: Esben Haabendal <eha@deif.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 131412f4f6f52b72c3a099c9cdac5d9c6034c76c
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Jul 19 17:27:32 2018 -0500

    PCI: pciehp: Fix use-after-free on unplug
    
    commit 281e878eab191cce4259abbbf1a0322e3adae02c upstream.
    
    When pciehp is unbound (e.g. on unplug of a Thunderbolt device), the
    hotplug_slot struct is deregistered and thus freed before freeing the
    IRQ.  The IRQ handler and the work items it schedules print the slot
    name referenced from the freed structure in various informational and
    debug log messages, each time resulting in a quadruple dereference of
    freed pointers (hotplug_slot -> pci_slot -> kobject -> name).
    
    At best the slot name is logged as "(null)", at worst kernel memory is
    exposed in logs or the driver crashes:
    
      pciehp 0000:10:00.0:pcie204: Slot((null)): Card not present
    
    An attacker may provoke the bug by unplugging multiple devices on a
    Thunderbolt daisy chain at once.  Unplugging can also be simulated by
    powering down slots via sysfs.  The bug is particularly easy to trigger
    in poll mode.
    
    It has been present since the driver's introduction in 2004:
    https://git.kernel.org/tglx/history/c/c16b4b14d980
    
    Fix by rearranging teardown such that the IRQ is freed first.  Run the
    work items queued by the IRQ handler to completion before freeing the
    hotplug_slot struct by draining the work queue from the ->release_slot
    callback which is invoked by pci_hp_deregister().
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org # v2.6.4
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc7614a5e8ec4514aa27ee3874ad05a1057e644d
Author: Myron Stowe <myron.stowe@redhat.com>
Date:   Mon Aug 13 12:19:39 2018 -0600

    PCI: Skip MPS logic for Virtual Functions (VFs)
    
    commit 3dbe97efe8bf450b183d6dee2305cbc032e6b8a4 upstream.
    
    PCIe r4.0, sec 9.3.5.4, "Device Control Register", shows both
    Max_Payload_Size (MPS) and Max_Read_request_Size (MRRS) to be 'RsvdP' for
    VFs.  Just prior to the table it states:
    
      "PF and VF functionality is defined in Section 7.5.3.4 except where
       noted in Table 9-16.  For VF fields marked 'RsvdP', the PF setting
       applies to the VF."
    
    All of which implies that with respect to Max_Payload_Size Supported
    (MPSS), MPS, and MRRS values, we should not be paying any attention to the
    VF's fields, but rather only to the PF's.  Only looking at the PF's fields
    also logically makes sense as it's the sole physical interface to the PCIe
    bus.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200527
    Fixes: 27d868b5e6cf ("PCI: Set MPS to match upstream bridge")
    Signed-off-by: Myron Stowe <myron.stowe@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org # 4.3+
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Sinan Kaya <okaya@kernel.org>
    Cc: Dongdong Liu <liudongdong3@huawei.com>
    Cc: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8837163ebeba0ab5cd82d8eb284060e0e3cb4a35
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Jul 19 17:27:31 2018 -0500

    PCI: hotplug: Don't leak pci_slot on registration failure
    
    commit 4ce6435820d1f1cc2c2788e232735eb244bcc8a3 upstream.
    
    If addition of sysfs files fails on registration of a hotplug slot, the
    struct pci_slot as well as the entry in the slot_list is leaked.  The
    issue has been present since the hotplug core was introduced in 2002:
    https://git.kernel.org/tglx/history/c/a8a2069f432c
    
    Perhaps the idea was that even though sysfs addition fails, the slot
    should still be usable.  But that's not how drivers use the interface,
    they abort probe if a non-zero value is returned.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org # v2.4.15+
    Cc: Greg Kroah-Hartman <greg@kroah.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 400db6fe74317d64c920025ed4de2de7b3522230
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sun Aug 12 16:31:17 2018 -0400

    parisc: Remove unnecessary barriers from spinlock.h
    
    commit 3b885ac1dc35b87a39ee176a6c7e2af9c789d8b8 upstream.
    
    Now that mb() is an instruction barrier, it will slow performance if we issue
    unnecessary barriers.
    
    The spinlock defines have a number of unnecessary barriers.  The __ldcw()
    define is both a hardware and compiler barrier.  The mb() barriers in the
    routines using __ldcw() serve no purpose.
    
    The only barrier needed is the one in arch_spin_unlock().  We need to ensure
    all accesses are complete prior to releasing the lock.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Cc: stable@vger.kernel.org # 4.0+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d124ea608ac800f46100741f7ccd79791c061c8
Author: Elad Raz <eladr@mellanox.com>
Date:   Wed Jan 6 13:01:04 2016 +0100

    bridge: Propagate vlan add failure to user
    
    commit 08474cc1e6ea71237cab7e4a651a623c9dea1084 upstream.
    
    Disallow adding interfaces to a bridge when vlan filtering operation
    failed. Send the failure code to the user.
    
    Signed-off-by: Elad Raz <eladr@mellanox.com>
    Signed-off-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62c4e369c9b98480a4b75b3a74a962a6b298120b
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Aug 6 10:38:34 2018 -0400

    packet: refine ring v3 block size test to hold one frame
    
    commit 4576cd469d980317c4edd9173f8b694aa71ea3a3 upstream.
    
    TPACKET_V3 stores variable length frames in fixed length blocks.
    Blocks must be able to store a block header, optional private space
    and at least one minimum sized frame.
    
    Frames, even for a zero snaplen packet, store metadata headers and
    optional reserved space.
    
    In the block size bounds check, ensure that the frame of the
    chosen configuration fits. This includes sockaddr_ll and optional
    tp_reserve.
    
    Syzbot was able to construct a ring with insuffient room for the
    sockaddr_ll in the header of a zero-length frame, triggering an
    out-of-bounds write in dev_parse_header.
    
    Convert the comparison to less than, as zero is a valid snap len.
    This matches the test for minimum tp_frame_size immediately below.
    
    Fixes: f6fb8f100b80 ("af-packet: TPACKET_V3 flexible buffer implementation.")
    Fixes: eb73190f4fbe ("net/packet: refine check for priv area size")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76cb5cc66114d2758796198fca7f3387a6f24b75
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Jul 17 21:03:15 2018 +0200

    netfilter: conntrack: dccp: treat SYNC/SYNCACK as invalid if no prior state
    
    commit 6613b6173dee098997229caf1f3b961c49da75e6 upstream.
    
    When first DCCP packet is SYNC or SYNCACK, we insert a new conntrack
    that has an un-initialized timeout value, i.e. such entry could be
    reaped at any time.
    
    Mark them as INVALID and only ignore SYNC/SYNCACK when connection had
    an old state.
    
    Reported-by: syzbot+6f18401420df260e37ed@syzkaller.appspotmail.com
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e6170d014af6d3e9608987a0dee6e7f01c074b3
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jun 18 21:35:07 2018 -0700

    xfrm_user: prevent leaking 2 bytes of kernel memory
    
    commit 45c180bc29babbedd6b8c01b975780ef44d9d09c upstream.
    
    struct xfrm_userpolicy_type has two holes, so we should not
    use C99 style initializer.
    
    KMSAN report:
    
    BUG: KMSAN: kernel-infoleak in copyout lib/iov_iter.c:140 [inline]
    BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x1b14/0x2800 lib/iov_iter.c:571
    CPU: 1 PID: 4520 Comm: syz-executor841 Not tainted 4.17.0+ #5
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:113
     kmsan_report+0x188/0x2a0 mm/kmsan/kmsan.c:1117
     kmsan_internal_check_memory+0x138/0x1f0 mm/kmsan/kmsan.c:1211
     kmsan_copy_to_user+0x7a/0x160 mm/kmsan/kmsan.c:1253
     copyout lib/iov_iter.c:140 [inline]
     _copy_to_iter+0x1b14/0x2800 lib/iov_iter.c:571
     copy_to_iter include/linux/uio.h:106 [inline]
     skb_copy_datagram_iter+0x422/0xfa0 net/core/datagram.c:431
     skb_copy_datagram_msg include/linux/skbuff.h:3268 [inline]
     netlink_recvmsg+0x6f1/0x1900 net/netlink/af_netlink.c:1959
     sock_recvmsg_nosec net/socket.c:802 [inline]
     sock_recvmsg+0x1d6/0x230 net/socket.c:809
     ___sys_recvmsg+0x3fe/0x810 net/socket.c:2279
     __sys_recvmmsg+0x58e/0xe30 net/socket.c:2391
     do_sys_recvmmsg+0x2a6/0x3e0 net/socket.c:2472
     __do_sys_recvmmsg net/socket.c:2485 [inline]
     __se_sys_recvmmsg net/socket.c:2481 [inline]
     __x64_sys_recvmmsg+0x15d/0x1c0 net/socket.c:2481
     do_syscall_64+0x15b/0x230 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x446ce9
    RSP: 002b:00007fc307918db8 EFLAGS: 00000293 ORIG_RAX: 000000000000012b
    RAX: ffffffffffffffda RBX: 00000000006dbc24 RCX: 0000000000446ce9
    RDX: 000000000000000a RSI: 0000000020005040 RDI: 0000000000000003
    RBP: 00000000006dbc20 R08: 0000000020004e40 R09: 0000000000000000
    R10: 0000000040000000 R11: 0000000000000293 R12: 0000000000000000
    R13: 00007ffc8d2df32f R14: 00007fc3079199c0 R15: 0000000000000001
    
    Uninit was stored to memory at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:279 [inline]
     kmsan_save_stack mm/kmsan/kmsan.c:294 [inline]
     kmsan_internal_chain_origin+0x12b/0x210 mm/kmsan/kmsan.c:685
     kmsan_memcpy_origins+0x11d/0x170 mm/kmsan/kmsan.c:527
     __msan_memcpy+0x109/0x160 mm/kmsan/kmsan_instr.c:413
     __nla_put lib/nlattr.c:569 [inline]
     nla_put+0x276/0x340 lib/nlattr.c:627
     copy_to_user_policy_type net/xfrm/xfrm_user.c:1678 [inline]
     dump_one_policy+0xbe1/0x1090 net/xfrm/xfrm_user.c:1708
     xfrm_policy_walk+0x45a/0xd00 net/xfrm/xfrm_policy.c:1013
     xfrm_dump_policy+0x1c0/0x2a0 net/xfrm/xfrm_user.c:1749
     netlink_dump+0x9b5/0x1550 net/netlink/af_netlink.c:2226
     __netlink_dump_start+0x1131/0x1270 net/netlink/af_netlink.c:2323
     netlink_dump_start include/linux/netlink.h:214 [inline]
     xfrm_user_rcv_msg+0x8a3/0x9b0 net/xfrm/xfrm_user.c:2577
     netlink_rcv_skb+0x37e/0x600 net/netlink/af_netlink.c:2448
     xfrm_netlink_rcv+0xb2/0xf0 net/xfrm/xfrm_user.c:2598
     netlink_unicast_kernel net/netlink/af_netlink.c:1310 [inline]
     netlink_unicast+0x1680/0x1750 net/netlink/af_netlink.c:1336
     netlink_sendmsg+0x104f/0x1350 net/netlink/af_netlink.c:1901
     sock_sendmsg_nosec net/socket.c:629 [inline]
     sock_sendmsg net/socket.c:639 [inline]
     ___sys_sendmsg+0xec8/0x1320 net/socket.c:2117
     __sys_sendmsg net/socket.c:2155 [inline]
     __do_sys_sendmsg net/socket.c:2164 [inline]
     __se_sys_sendmsg net/socket.c:2162 [inline]
     __x64_sys_sendmsg+0x331/0x460 net/socket.c:2162
     do_syscall_64+0x15b/0x230 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    Local variable description: ----upt.i@dump_one_policy
    Variable was created at:
     dump_one_policy+0x78/0x1090 net/xfrm/xfrm_user.c:1689
     xfrm_policy_walk+0x45a/0xd00 net/xfrm/xfrm_policy.c:1013
    
    Byte 130 of 137 is uninitialized
    Memory access starts at ffff88019550407f
    
    Fixes: c0144beaeca42 ("[XFRM] netlink: Use nla_put()/NLA_PUT() variantes")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49b3acf7ed1997af70ab95d95995eb2a1a6fdf93
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sun Aug 12 16:38:03 2018 -0400

    parisc: Remove ordered stores from syscall.S
    
    commit 7797167ffde1f00446301cb22b37b7c03194cfaf upstream.
    
    Now that we use a sync prior to releasing the locks in syscall.S, we don't need
    the PA 2.0 ordered stores used to release some locks.  Using an ordered store,
    potentially slows the release and subsequent code.
    
    There are a number of other ordered stores and loads that serve no purpose.  I
    have converted these to normal stores.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Cc: stable@vger.kernel.org # 4.0+
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a89f83823b97b6da1ecf7a51184b28822e78cc07
Author: Jeremy Cline <jcline@redhat.com>
Date:   Thu Aug 2 00:03:40 2018 -0400

    ext4: fix spectre gadget in ext4_mb_regular_allocator()
    
    commit 1a5d5e5d51e75a5bca67dadbcea8c841934b7b85 upstream.
    
    'ac->ac_g_ex.fe_len' is a user-controlled value which is used in the
    derivation of 'ac->ac_2order'. 'ac->ac_2order', in turn, is used to
    index arrays which makes it a potential spectre gadget. Fix this by
    sanitizing the value assigned to 'ac->ac2_order'.  This covers the
    following accesses found with the help of smatch:
    
    * fs/ext4/mballoc.c:1896 ext4_mb_simple_scan_group() warn: potential
      spectre issue 'grp->bb_counters' [w] (local cap)
    
    * fs/ext4/mballoc.c:445 mb_find_buddy() warn: potential spectre issue
      'EXT4_SB(e4b->bd_sb)->s_mb_offsets' [r] (local cap)
    
    * fs/ext4/mballoc.c:446 mb_find_buddy() warn: potential spectre issue
      'EXT4_SB(e4b->bd_sb)->s_mb_maxs' [r] (local cap)
    
    Suggested-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1186a6ea75df00ec27b9cf2c5d0a5e4298739301
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon May 28 13:31:13 2018 +0200

    KVM: irqfd: fix race between EPOLLHUP and irq_bypass_register_consumer
    
    commit 9432a3175770e06cb83eada2d91fac90c977cb99 upstream.
    
    A comment warning against this bug is there, but the code is not doing what
    the comment says.  Therefore it is possible that an EPOLLHUP races against
    irq_bypass_register_consumer.  The EPOLLHUP handler schedules irqfd_shutdown,
    and if that runs soon enough, you get a use-after-free.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b84ec04bae905901f5226a67968dabc52ab0c3a6
Author: Daniel Rosenberg <drosen@google.com>
Date:   Tue Aug 21 13:31:50 2018 -0700

    staging: android: ion: check for kref overflow
    
    This patch is against 4.4. It does not apply to master due to a large
    rework of ion in 4.12 which removed the affected functions altogther.
    4c23cbff073f3b9b ("staging: android: ion: Remove import interface")
    
    Userspace can cause the kref to handles to increment
    arbitrarily high. Ensure it does not overflow.
    
    Signed-off-by: Daniel Rosenberg <drosen@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81970da69122fe4bf2af5bb1bb4c7f62d4744e79
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jul 17 18:27:45 2018 -0700

    tcp: identify cryptic messages as TCP seq # bugs
    
    [ Upstream commit e56b8ce363a36fb7b74b80aaa5cc9084f2c908b4 ]
    
    Attempt to make cryptic TCP seq number error messages clearer by
    (1) identifying the source of the message as "TCP", (2) identifying the
    errors as "seq # bug", and (3) grouping the field identifiers and values
    by separating them with commas.
    
    E.g., the following message is changed from:
    
    recvmsg bug 2: copied 73BCB6CD seq 70F17CBE rcvnxt 73BCB9AA fl 0
    WARNING: CPU: 2 PID: 1501 at /linux/net/ipv4/tcp.c:1881 tcp_recvmsg+0x649/0xb90
    
    to:
    
    TCP recvmsg seq # bug 2: copied 73BCB6CD, seq 70F17CBE, rcvnxt 73BCB9AA, fl 0
    WARNING: CPU: 2 PID: 1501 at /linux/net/ipv4/tcp.c:2011 tcp_recvmsg+0x694/0xba0
    
    Suggested-by: 積丹尼 Dan Jacobson <jidanni@jidanni.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 780e559aaa6ae4b184d9af4acd0754f8608b3715
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Jul 18 08:31:45 2018 +0200

    net: qca_spi: Fix log level if probe fails
    
    [ Upstream commit 50973993260a6934f0a00da53d9b746cfbea89ab ]
    
    In cases the probing fails the log level of the messages should
    be an error.
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e77b1523b93cbc8863cfe656ca0c9e82f7ba43c9
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Jul 18 08:31:44 2018 +0200

    net: qca_spi: Make sure the QCA7000 reset is triggered
    
    [ Upstream commit 711c62dfa6bdb4326ca6c587f295ea5c4f7269de ]
    
    In case the SPI thread is not running, a simple reset of sync
    state won't fix the transmit timeout. We also need to wake up the kernel
    thread.
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: ed7d42e24eff ("net: qca_spi: fix transmit queue timeout handling")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8621e69878ba41ed24987a487eaf01a6505223c6
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Jul 18 08:31:43 2018 +0200

    net: qca_spi: Avoid packet drop during initial sync
    
    [ Upstream commit b2bab426dc715de147f8039a3fccff27d795f4eb ]
    
    As long as the synchronization with the QCA7000 isn't finished, we
    cannot accept packets from the upper layers. So let the SPI thread
    enable the TX queue after sync and avoid unwanted packet drop.
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: 291ab06ecf67 ("net: qualcomm: new Ethernet over SPI driver for QCA7000")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cfe6f3afe83a2768563f718bb57c99ca249cf4c
Author: David Lechner <david@lechnology.com>
Date:   Mon Jul 16 17:58:10 2018 -0500

    net: usb: rtl8150: demote allmulti message to dev_dbg()
    
    [ Upstream commit 3a9b0455062ffb9d2f6cd4473a76e3456f318c9f ]
    
    This driver can spam the kernel log with multiple messages of:
    
        net eth0: eth0: allmulti set
    
    Usually 4 or 8 at a time (probably because of using ConnMan).
    
    This message doesn't seem useful, so let's demote it from dev_info()
    to dev_dbg().
    
    Signed-off-by: David Lechner <david@lechnology.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0821ddad494b97f0980db1877c4417e7d45c4925
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Jul 13 21:25:19 2018 -0700

    net/ethernet/freescale/fman: fix cross-build error
    
    [ Upstream commit c133459765fae249ba482f62e12f987aec4376f0 ]
    
      CC [M]  drivers/net/ethernet/freescale/fman/fman.o
    In file included from ../drivers/net/ethernet/freescale/fman/fman.c:35:
    ../include/linux/fsl/guts.h: In function 'guts_set_dmacr':
    ../include/linux/fsl/guts.h:165:2: error: implicit declaration of function 'clrsetbits_be32' [-Werror=implicit-function-declaration]
      clrsetbits_be32(&guts->dmacr, 3 << shift, device << shift);
      ^~~~~~~~~~~~~~~
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Madalin Bucur <madalin.bucur@nxp.com>
    Cc: netdev@vger.kernel.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c8f268dcdd5d3dacf504873861b9f18c70021b0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jul 3 15:30:56 2018 +0300

    drm/nouveau/gem: off by one bugs in nouveau_gem_pushbuf_reloc_apply()
    
    [ Upstream commit 7f073d011f93e92d4d225526b9ab6b8b0bbd6613 ]
    
    The bo array has req->nr_buffers elements so the > should be >= so we
    don't read beyond the end of the array.
    
    Fixes: a1606a9596e5 ("drm/nouveau: new gem pushbuf interface, bump to 0.0.16")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43707aa8c55fb165a1a56f590e0defb198ebdde9
Author: Yuchung Cheng <ycheng@google.com>
Date:   Thu Jul 12 06:04:53 2018 -0700

    tcp: remove DELAYED ACK events in DCTCP
    
    [ Upstream commit a69258f7aa2623e0930212f09c586fd06674ad79 ]
    
    After fixing the way DCTCP tracking delayed ACKs, the delayed-ACK
    related callbacks are no longer needed
    
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Lawrence Brakmo <brakmo@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7795ce1182d5317688750126958954e5d32e3eac
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 12 15:23:45 2018 +0300

    qlogic: check kstrtoul() for errors
    
    [ Upstream commit 5fc853cc01c68f84984ecc2d5fd777ecad78240f ]
    
    We accidentally left out the error handling for kstrtoul().
    
    Fixes: a520030e326a ("qlcnic: Implement flash sysfs callback for 83xx adapter")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01a8ef2f327a6fe5075ee5027c9fa02df42c1c4e
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Jul 11 12:00:45 2018 -0400

    packet: reset network header if packet shorter than ll reserved space
    
    [ Upstream commit 993675a3100b16a4c80dfd70cbcde8ea7127b31d ]
    
    If variable length link layer headers result in a packet shorter
    than dev->hard_header_len, reset the network header offset. Else
    skb->mac_len may exceed skb->len after skb_mac_reset_len.
    
    packet_sendmsg_spkt already has similar logic.
    
    Fixes: b84bbaf7a6c8 ("packet: in packet_snd start writing at link layer allocation")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ab85f3dc1b45f9189b62c97c82c7e6e1a3de569
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Mon Jun 18 12:02:00 2018 -0400

    ixgbe: Be more careful when modifying MAC filters
    
    [ Upstream commit d14c780c11fbc10f66c43e7b64eefe87ca442bd3 ]
    
    This change makes it so that we are much more explicit about the ordering
    of updates to the receive address register (RAR) table. Prior to this patch
    I believe we may have been updating the table while entries were still
    active, or possibly allowing for reordering of things since we weren't
    explicitly flushing writes to either the lower or upper portion of the
    register prior to accessing the other half.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Reviewed-by: Shannon Nelson <shannon.nelson@oracle.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcfa7262bbc0cf7b39ac112ae2ece9f9310ae4d9
Author: Adam Ford <aford173@gmail.com>
Date:   Wed Jul 11 12:54:54 2018 -0500

    ARM: dts: am3517.dtsi: Disable reference to OMAP3 OTG controller
    
    [ Upstream commit 923847413f7316b5ced3491769b3fefa6c56a79a ]
    
    The AM3517 has a different OTG controller location than the OMAP3,
    which is included from omap3.dtsi.  This results in a hwmod error.
    Since the AM3517 has a different OTG controller address, this patch
    disabes one that is isn't available.
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97d53c81980eaba74690868efd3160fb635b8d42
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Jul 10 08:22:40 2018 +0100

    ARM: 8780/1: ftrace: Only set kernel memory back to read-only after boot
    
    [ Upstream commit b4c7e2bd2eb4764afe3af9409ff3b1b87116fa30 ]
    
    Dynamic ftrace requires modifying the code segments that are usually
    set to read-only. To do this, a per arch function is called both before
    and after the ftrace modifications are performed. The "before" function
    will set kernel code text to read-write to allow for ftrace to make the
    modifications, and the "after" function will set the kernel code text
    back to "read-only" to keep the kernel code text protected.
    
    The issue happens when dynamic ftrace is tested at boot up. The test is
    done before the kernel code text has been set to read-only. But the
    "before" and "after" calls are still performed. The "after" call will
    change the kernel code text to read-only prematurely, and other boot
    code that expects this code to be read-write will fail.
    
    The solution is to add a variable that is set when the kernel code text
    is expected to be converted to read-only, and make the ftrace "before"
    and "after" calls do nothing if that variable is not yet set. This is
    similar to the x86 solution from commit 162396309745 ("ftrace, x86:
    make kernel text writable only for conversions").
    
    Link: http://lkml.kernel.org/r/20180620212906.24b7b66e@vmware.local.home
    
    Reported-by: Stefan Agner <stefan@agner.ch>
    Tested-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0cd6f4de95a8fee74131bac79c444f8120c93e9
Author: Kim Phillips <kim.phillips@arm.com>
Date:   Fri Jun 29 12:46:52 2018 -0500

    perf llvm-utils: Remove bashism from kernel include fetch script
    
    [ Upstream commit f6432b9f65001651412dbc3589d251534822d4ab ]
    
    Like system(), popen() calls /bin/sh, which may/may not be bash.
    
    Script when run on dash and encounters the line, yields:
    
     exit: Illegal number: -1
    
    checkbashisms report on script content:
    
     possible bashism (exit|return with negative status code):
     exit -1
    
    Remove the bashism and use the more portable non-zero failure
    status code 1.
    
    Signed-off-by: Kim Phillips <kim.phillips@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Cc: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Link: http://lkml.kernel.org/r/20180629124652.8d0af7e2281fd3fd8262cacc@arm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 149751b516c07eb15f9378bbed175d23589b6215
Author: Vikas Gupta <vikas.gupta@broadcom.com>
Date:   Mon Jul 9 02:24:52 2018 -0400

    bnxt_en: Fix for system hang if request_irq fails
    
    [ Upstream commit c58387ab1614f6d7fb9e244f214b61e7631421fc ]
    
    Fix bug in the error code path when bnxt_request_irq() returns failure.
    bnxt_disable_napi() should not be called in this error path because
    NAPI has not been enabled yet.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Vikas Gupta <vikas.gupta@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cb585f9c5d6b70bfcd12beb314d9ba060c3208a
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sun Jun 24 14:35:10 2018 +0100

    drm/armada: fix colorkey mode property
    
    [ Upstream commit d378859a667edc99e3473704847698cae97ca2b1 ]
    
    The colorkey mode property was not correctly disabling the colorkeying
    when "disabled" mode was selected.  Arrange for this to work as one
    would expect.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe9ee61f5a1b9413ad3862bfa5a63c633d84f38a
Author: Stefan Schmidt <stefan@datenfreihafen.org>
Date:   Fri Sep 22 14:14:05 2017 +0200

    ieee802154: fakelb: switch from BUG_ON() to WARN_ON() on problem
    
    [ Upstream commit 8f2fbc6c60ff213369e06a73610fc882a42fdf20 ]
    
    The check is valid but it does not warrant to crash the kernel. A
    WARN_ON() is good enough here.
    Found by checkpatch.
    
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24e3a53c0d2c6be3385c5676056124b44f7c06c2
Author: Stefan Schmidt <stefan@datenfreihafen.org>
Date:   Fri Sep 22 14:13:54 2017 +0200

    ieee802154: at86rf230: use __func__ macro for debug messages
    
    [ Upstream commit 8a81388ec27c4c0adbdecd20e67bb5f411ab46b2 ]
    
    Instead of having the function name hard-coded (it might change and we
    forgot to update them in the debug output) we can use __func__ instead
    and also shorter the line so we do not need to break it. Also fix an
    extra blank line while being here.
    Found by checkpatch.
    
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 691a13ac70e31e3004310bf56360ee69c62514cb
Author: Stefan Schmidt <stefan@datenfreihafen.org>
Date:   Fri Sep 22 14:13:53 2017 +0200

    ieee802154: at86rf230: switch from BUG_ON() to WARN_ON() on problem
    
    [ Upstream commit 20f330452ad8814f2289a589baf65e21270879a7 ]
    
    The check is valid but it does not warrant to crash the kernel. A
    WARN_ON() is good enough here.
    Found by checkpatch.
    
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be4691a7c58b40ddcdad5f82fb652475afc3440e
Author: Daniel Mack <daniel@zonque.org>
Date:   Fri Jul 6 22:15:00 2018 +0200

    ARM: pxa: irq: fix handling of ICMR registers in suspend/resume
    
    [ Upstream commit 0c1049dcb4ceec640d8bd797335bcbebdcab44d2 ]
    
    PXA3xx platforms have 56 interrupts that are stored in two ICMR
    registers. The code in pxa_irq_suspend() and pxa_irq_resume() however
    does a simple division by 32 which only leads to one register being
    saved at suspend and restored at resume time. The NAND interrupt
    setting, for instance, is lost.
    
    Fix this by using DIV_ROUND_UP() instead.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e8f97b07a3be3493072f1cabe888f2d770b8077
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Jul 4 20:25:32 2018 +0200

    netfilter: x_tables: set module owner for icmp(6) matches
    
    [ Upstream commit d376bef9c29b3c65aeee4e785fffcd97ef0a9a81 ]
    
    nft_compat relies on xt_request_find_match to increment
    refcount of the module that provides the match/target.
    
    The (builtin) icmp matches did't set the module owner so it
    was possible to rmmod ip(6)tables while icmp extensions were still in use.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7fda06308d6d1ed5d094a5f22b3e1e33852edbf
Author: Yuiko Oshino <yuiko.oshino@microchip.com>
Date:   Tue Jul 3 11:21:46 2018 -0400

    smsc75xx: Add workaround for gigabit link up hardware errata.
    
    [ Upstream commit d461e3da905332189aad546b2ad9adbe6071c7cc ]
    
    In certain conditions, the device may not be able to link in gigabit mode. This software workaround ensures that the device will not enter the failure state.
    
    Fixes: d0cad871703b898a442e4049c532ec39168e5b57 ("SMSC75XX USB 2.0 Gigabit Ethernet Devices")
    Signed-off-by: Yuiko Oshino <yuiko.oshino@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1acb2ad5d9d0fc66f18c74e22af3c07e41a5dbca
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Tue Jul 3 17:02:46 2018 -0700

    kasan: fix shadow_size calculation error in kasan_module_alloc
    
    [ Upstream commit 1e8e18f694a52d703665012ca486826f64bac29d ]
    
    There is a special case that the size is "(N << KASAN_SHADOW_SCALE_SHIFT)
    Pages plus X", the value of X is [1, KASAN_SHADOW_SCALE_SIZE-1].  The
    operation "size >> KASAN_SHADOW_SCALE_SHIFT" will drop X, and the
    roundup operation can not retrieve the missed one page.  For example:
    size=0x28006, PAGE_SIZE=0x1000, KASAN_SHADOW_SCALE_SHIFT=3, we will get
    shadow_size=0x5000, but actually we need 6 pages.
    
      shadow_size = round_up(size >> KASAN_SHADOW_SCALE_SHIFT, PAGE_SIZE);
    
    This can lead to a kernel crash when kasan is enabled and the value of
    mod->core_layout.size or mod->init_layout.size is like above.  Because
    the shadow memory of X has not been allocated and mapped.
    
    move_module:
      ptr = module_alloc(mod->core_layout.size);
      ...
      memset(ptr, 0, mod->core_layout.size);                //crashed
    
      Unable to handle kernel paging request at virtual address ffff0fffff97b000
      ......
      Call trace:
        __asan_storeN+0x174/0x1a8
        memset+0x24/0x48
        layout_and_allocate+0xcd8/0x1800
        load_module+0x190/0x23e8
        SyS_finit_module+0x148/0x180
    
    Link: http://lkml.kernel.org/r/1529659626-12660-1-git-send-email-thunder.leizhen@huawei.com
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Reviewed-by: Dmitriy Vyukov <dvyukov@google.com>
    Acked-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Libin <huawei.libin@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfb1c3470bcb05537fca601a0101d759d054b822
Author: Mathieu Malaterre <malat@debian.org>
Date:   Thu Mar 8 21:58:43 2018 +0100

    tracing: Use __printf markup to silence compiler
    
    [ Upstream commit 26b68dd2f48fe7699a89f0cfbb9f4a650dc1c837 ]
    
    Silence warnings (triggered at W=1) by adding relevant __printf attributes.
    
      CC      kernel/trace/trace.o
    kernel/trace/trace.c: In function ‘__trace_array_vprintk’:
    kernel/trace/trace.c:2979:2: warning: function might be possible candidate for ‘gnu_printf’ format attribute [-Wsuggest-attribute=format]
      len = vscnprintf(tbuffer, TRACE_BUF_SIZE, fmt, args);
      ^~~
      AR      kernel/trace/built-in.o
    
    Link: http://lkml.kernel.org/r/20180308205843.27447-1-malat@debian.org
    
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be38b9556d9ba051adae074367acb3ee362180b2
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Tue Jun 26 08:37:09 2018 -0300

    ARM: imx_v4_v5_defconfig: Select ULPI support
    
    [ Upstream commit 2ceb2780b790b74bc408a949f6aedbad8afa693e ]
    
    Select CONFIG_USB_CHIPIDEA_ULPI and CONFIG_USB_ULPI_BUS so that
    USB ULPI can be functional on some boards like that use ULPI
    interface.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d0af17ae83d6feb29d676c72423461419df5110
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Mon Jun 25 09:34:03 2018 -0300

    ARM: imx_v6_v7_defconfig: Select ULPI support
    
    [ Upstream commit 157bcc06094c3c5800d3f4676527047b79b618e7 ]
    
    Select CONFIG_USB_CHIPIDEA_ULPI and CONFIG_USB_ULPI_BUS so that
    USB ULPI can be functional on some boards like imx51-babbge.
    
    This fixes a kernel hang in 4.18-rc1 on i.mx51-babbage, caused by commit
    03e6275ae381 ("usb: chipidea: Fix ULPI on imx51").
    
    Suggested-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bdab67ddfa7b4e9e7a90637a22f9abc6ca88cf4
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Jun 26 09:58:02 2018 -0700

    HID: wacom: Correct touch maximum XY of 2nd-gen Intuos
    
    [ Upstream commit 3b8d573586d1b9dee33edf6cb6f2ca05f4bca568 ]
    
    The touch sensors on the 2nd-gen Intuos tablets don't use a 4096x4096
    sensor like other similar tablets (3rd-gen Bamboo, Intuos5, etc.).
    The incorrect maximum XY values don't normally affect userspace since
    touch input from these devices is typically relative rather than
    absolute. It does, however, cause problems when absolute distances
    need to be measured, e.g. for gesture recognition. Since the resolution
    of the touch sensor on these devices is 10 units / mm (versus 100 for
    the pen sensor), the proper maximum values can be calculated by simply
    dividing by 10.
    
    Fixes: b5fd2a3e92 ("Input: wacom - add support for three new Intuos devices")
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f2f46791e28b7058a32fb7eab32e498ff838627
Author: Greg Ungerer <gerg@linux-m68k.org>
Date:   Mon Jun 18 15:34:14 2018 +1000

    m68k: fix "bad page state" oops on ColdFire boot
    
    [ Upstream commit ecd60532e060e45c63c57ecf1c8549b1d656d34d ]
    
    Booting a ColdFire m68k core with MMU enabled causes a "bad page state"
    oops since commit 1d40a5ea01d5 ("mm: mark pages in use for page tables"):
    
     BUG: Bad page state in process sh  pfn:01ce2
     page:004fefc8 count:0 mapcount:-1024 mapping:00000000 index:0x0
     flags: 0x0()
     raw: 00000000 00000000 00000000 fffffbff 00000000 00000100 00000200 00000000
     raw: 039c4000
     page dumped because: nonzero mapcount
     Modules linked in:
     CPU: 0 PID: 22 Comm: sh Not tainted 4.17.0-07461-g1d40a5ea01d5 #13
    
    Fix by calling pgtable_page_dtor() in our __pte_free_tlb() code path,
    so that the PG_table flag is cleared before we free the pte page.
    
    Note that I had to change the type of pte_free() to be static from
    extern. Otherwise you get a lot of warnings like this:
    
    ./arch/m68k/include/asm/mcf_pgalloc.h:80:2: warning: ‘pgtable_page_dtor’ is static but used in inline function ‘pte_free’ which is not static
      pgtable_page_dtor(page);
      ^
    
    And making it static is consistent with our use of this in the other
    m68k pgalloc definitions of pte_free().
    
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    CC: Matthew Wilcox <willy@infradead.org>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aba71e6a936a62126d0c084d4add455db697ee24
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Thu Jun 28 04:52:15 2018 -0700

    bnx2x: Fix receiving tx-timeout in error or recovery state.
    
    [ Upstream commit 484c016d9392786ce5c74017c206c706f29f823d ]
    
    Driver performs the internal reload when it receives tx-timeout event from
    the OS. Internal reload might fail in some scenarios e.g., fatal HW issues.
    In such cases OS still see the link, which would result in undesirable
    functionalities such as re-generation of tx-timeouts.
    The patch addresses this issue by indicating the link-down to OS when
    tx-timeout is detected, and keeping the link in down state till the
    internal reload is successful.
    
    Please consider applying it to 'net' branch.
    
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acc83070ba75b3ab93bf46f711246e9b97ed46c0
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Jun 7 13:07:49 2018 +0200

    drm/exynos: decon5433: Fix WINCONx reset value
    
    [ Upstream commit 7b7aa62c05eac9789c208b946f515983a9255d8d ]
    
    The only bits that should be preserved in decon_win_set_fmt() is
    WINCONx_ENWIN_F. All other bits depends on the selected pixel formats and
    are set by the mentioned function.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c46030269f686fc3ca92d93140c9f2957aefee3b
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Jun 7 13:07:40 2018 +0200

    drm/exynos: decon5433: Fix per-plane global alpha for XRGB modes
    
    [ Upstream commit ab337fc274a1957ff0771f19e826c736253f7c39 ]
    
    Set per-plane global alpha to maximum value to get proper blending of
    XRGB and ARGB planes. This fixes the strange order of overlapping planes.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 048115cfba050e34667d7e3d05ce5f09fd54524f
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Jun 7 13:06:13 2018 +0200

    drm/exynos: gsc: Fix support for NV16/61, YUV420/YVU420 and YUV422 modes
    
    [ Upstream commit dd209ef809080ced903e7747ee3ef640c923a1d2 ]
    
    Fix following issues related to planar YUV pixel format configuration:
    - NV16/61 modes were incorrectly programmed as NV12/21,
    - YVU420 was programmed as YUV420 on source,
    - YVU420 and YUV422 were programmed as YUV420 on output.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66de11067753fbc562b7d2dba550d563c02449ec
Author: BingJing Chang <bingjingc@synology.com>
Date:   Thu Jun 28 18:40:11 2018 +0800

    md/raid10: fix that replacement cannot complete recovery after reassemble
    
    [ Upstream commit bda3153998f3eb2cafa4a6311971143628eacdbc ]
    
    During assemble, the spare marked for replacement is not checked.
    conf->fullsync cannot be updated to be 1. As a result, recovery will
    treat it as a clean array. All recovering sectors are skipped. Original
    device is replaced with the not-recovered spare.
    
    mdadm -C /dev/md0 -l10 -n4 -pn2 /dev/loop[0123]
    mdadm /dev/md0 -a /dev/loop4
    mdadm /dev/md0 --replace /dev/loop0
    mdadm -S /dev/md0 # stop array during recovery
    
    mdadm -A /dev/md0 /dev/loop[01234]
    
    After reassemble, you can see recovery go on, but it completes
    immediately. In fact, recovery is not actually processed.
    
    To solve this problem, we just add the missing logics for replacment
    spares. (In raid1.c or raid5.c, they have already been checked.)
    
    Reported-by: Alex Chen <alexchen@synology.com>
    Reviewed-by: Alex Wu <alexwu@synology.com>
    Reviewed-by: Chung-Chiang Cheng <cccheng@synology.com>
    Signed-off-by: BingJing Chang <bingjingc@synology.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0430caf5ccc880dfacba544accbddc839d70ded1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jun 22 14:15:47 2018 +0300

    dmaengine: k3dma: Off by one in k3_of_dma_simple_xlate()
    
    [ Upstream commit c4c2b7644cc9a41f17a8cc8904efe3f66ae4c7ed ]
    
    The d->chans[] array has d->dma_requests elements so the > should be
    >= here.
    
    Fixes: 8e6152bc660e ("dmaengine: Add hisilicon k3 DMA engine driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d238b2e06f390de4a3a15058a9e0c538fb6e35e8
Author: Keerthy <j-keerthy@ti.com>
Date:   Tue Jun 5 15:37:51 2018 +0530

    ARM: dts: da850: Fix interrups property for gpio
    
    [ Upstream commit 3eb1b955cd7ed1e621ace856710006c2a8a7f231 ]
    
    The intc #interrupt-cells is equal to 1. Currently gpio
    node has 2 cells per IRQ which is wrong. Remove the additional
    cell for each of the interrupts.
    
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Fixes: 2e38b946dc54 ("ARM: davinci: da850: add GPIO DT node")
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a406f22b050bd41e803ede3ced9750d6eeaf61f
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Jun 26 22:17:17 2018 -0700

    selftests/x86/sigreturn/64: Fix spurious failures on AMD CPUs
    
    [ Upstream commit ec348020566009d3da9b99f07c05814d13969c78 ]
    
    When I wrote the sigreturn test, I didn't realize that AMD's busted
    IRET behavior was different from Intel's busted IRET behavior:
    
    On AMD CPUs, the CPU leaks the high 32 bits of the kernel stack pointer
    to certain userspace contexts.  Gee, thanks.  There's very little
    the kernel can do about it.  Modify the test so it passes.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/86e7fd3564497f657de30a36da4505799eebef01.1530076529.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cef243ef30b20c9ba802af138e0fa1c3e5d0ebc
Author: Sandipan Das <sandipan@linux.ibm.com>
Date:   Mon Jun 11 16:10:49 2018 +0530

    perf report powerpc: Fix crash if callchain is empty
    
    [ Upstream commit 143c99f6ac6812d23254e80844d6e34be897d3e1 ]
    
    For some cases, the callchain provided by the kernel may be empty. So,
    the callchain ip filtering code will cause a crash if we do not check
    whether the struct ip_callchain pointer is NULL before accessing any
    members.
    
    This can be observed on a powerpc64le system running Fedora 27 as shown
    below.
    
      # perf record -b -e cycles:u ls
    
    Before:
    
      # perf report --branch-history
    
      perf: Segmentation fault
      -------- backtrace --------
      perf[0x1027615c]
      linux-vdso64.so.1(__kernel_sigtramp_rt64+0x0)[0x7fff856304d8]
      perf(arch_skip_callchain_idx+0x44)[0x10257c58]
      perf[0x1017f2e4]
      perf(thread__resolve_callchain+0x124)[0x1017ff5c]
      perf(sample__resolve_callchain+0xf0)[0x10172788]
      ...
    
    After:
    
      # perf report --branch-history
    
      Samples: 25  of event 'cycles:u', Event count (approx.): 2306870
        Overhead  Source:Line            Symbol                   Shared Object
      +   11.60%  _init+35736            [.] _init                ls
      +    9.84%  strcoll_l.c:137        [.] __strcoll_l          libc-2.26.so
      +    9.16%  memcpy.S:175           [.] __memcpy_power7      libc-2.26.so
      +    9.01%  gconv_charset.h:54     [.] _nl_find_locale      libc-2.26.so
      +    8.87%  dl-addr.c:52           [.] _dl_addr             libc-2.26.so
      +    8.83%  _init+236              [.] _init                ls
      ...
    
    Reported-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Acked-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
    Link: http://lkml.kernel.org/r/20180611104049.11048-1-sandipan@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ba7ddb12aed6bf43e9749842785dc8cd4f4e39b
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Mon Jun 11 09:31:53 2018 +0200

    perf test session topology: Fix test on s390
    
    [ Upstream commit b930e62ecd362843002bdf84c2940439822af321 ]
    
    On s390 this test case fails because the socket identifiction numbers
    assigned to the CPU are higher than the CPU identification numbers.
    
    F/ix this by adding the platform architecture into the perf data header
    flag information. This helps identifiing the test platform and handles
    s390 specifics in process_cpu_topology().
    
    Before:
    
      [root@p23lp27 perf]# perf test -vvvvv -F 39
      39: Session topology                                      :
      --- start ---
      templ file: /tmp/perf-test-iUv755
      socket_id number is too big.You may need to upgrade the perf tool.
      ---- end ----
      Session topology: Skip
      [root@p23lp27 perf]#
    
    After:
    
      [root@p23lp27 perf]# perf test -vvvvv -F 39
      39: Session topology                                      :
      --- start ---
      templ file: /tmp/perf-test-8X8VTs
      CPU 0, core 0, socket 6
      CPU 1, core 1, socket 3
      ---- end ----
      Session topology: Ok
      [root@p23lp27 perf]#
    
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Fixes: c84974ed9fb6 ("perf test: Add entry to test cpu topology")
    Link: http://lkml.kernel.org/r/20180611073153.15592-2-tmricht@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1748d3f1e3fcb2d125d111cace612e1e39b665cf
Author: Ajay Gupta <ajaykuee@gmail.com>
Date:   Thu Jun 21 16:19:45 2018 +0300

    usb: xhci: increase CRS timeout value
    
    [ Upstream commit 305886ca87be480ae159908c2affd135c04215cf ]
    
    Some controllers take almost 55ms to complete controller
    restore state (CRS).
    There is no timeout limit mentioned in xhci specification so
    fixing the issue by increasing the timeout limit to 100ms
    
    [reformat code comment -Mathias]
    Signed-off-by: Ajay Gupta <ajaykuee@gmail.com>
    Signed-off-by: Nagaraj Annaiah <naga.annaiah@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27edb6791ce2ccf1345940b9dec72d4617dcf07c
Author: Daniel Mack <daniel@zonque.org>
Date:   Sun Jun 17 13:53:09 2018 +0200

    ARM: dts: am437x: make edt-ft5x06 a wakeup source
    
    [ Upstream commit 49a6ec5b807ea4ad7ebe1f58080ebb8497cb2d2c ]
    
    The touchscreen driver no longer configures the device as wakeup source by
    default. A "wakeup-source" property is needed.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 852f7cdbc8f78a8e740d2164aad7e6ac6e355dc3
Author: Michael Trimarchi <michael@amarulasolutions.com>
Date:   Wed May 30 11:06:34 2018 +0200

    brcmfmac: stop watchdog before detach and free everything
    
    [ Upstream commit 373c83a801f15b1e3d02d855fad89112bd4ccbe0 ]
    
    Using built-in in kernel image without a firmware in filesystem
    or in the kernel image can lead to a kernel NULL pointer deference.
    Watchdog need to be stopped in brcmf_sdio_remove
    
    The system is going down NOW!
    [ 1348.110759] Unable to handle kernel NULL pointer dereference at virtual address 000002f8
    Sent SIGTERM to all processes
    [ 1348.121412] Mem abort info:
    [ 1348.126962]   ESR = 0x96000004
    [ 1348.130023]   Exception class = DABT (current EL), IL = 32 bits
    [ 1348.135948]   SET = 0, FnV = 0
    [ 1348.138997]   EA = 0, S1PTW = 0
    [ 1348.142154] Data abort info:
    [ 1348.145045]   ISV = 0, ISS = 0x00000004
    [ 1348.148884]   CM = 0, WnR = 0
    [ 1348.151861] user pgtable: 4k pages, 48-bit VAs, pgdp = (____ptrval____)
    [ 1348.158475] [00000000000002f8] pgd=0000000000000000
    [ 1348.163364] Internal error: Oops: 96000004 [#1] PREEMPT SMP
    [ 1348.168927] Modules linked in: ipv6
    [ 1348.172421] CPU: 3 PID: 1421 Comm: brcmf_wdog/mmc0 Not tainted 4.17.0-rc5-next-20180517 #18
    [ 1348.180757] Hardware name: Amarula A64-Relic (DT)
    [ 1348.185455] pstate: 60000005 (nZCv daif -PAN -UAO)
    [ 1348.190251] pc : brcmf_sdiod_freezer_count+0x0/0x20
    [ 1348.195124] lr : brcmf_sdio_watchdog_thread+0x64/0x290
    [ 1348.200253] sp : ffff00000b85be30
    [ 1348.203561] x29: ffff00000b85be30 x28: 0000000000000000
    [ 1348.208868] x27: ffff00000b6cb918 x26: ffff80003b990638
    [ 1348.214176] x25: ffff0000087b1a20 x24: ffff80003b94f800
    [ 1348.219483] x23: ffff000008e620c8 x22: ffff000008f0b660
    [ 1348.224790] x21: ffff000008c6a858 x20: 00000000fffffe00
    [ 1348.230097] x19: ffff80003b94f800 x18: 0000000000000001
    [ 1348.235404] x17: 0000ffffab2e8a74 x16: ffff0000080d7de8
    [ 1348.240711] x15: 0000000000000000 x14: 0000000000000400
    [ 1348.246018] x13: 0000000000000400 x12: 0000000000000001
    [ 1348.251324] x11: 00000000000002c4 x10: 0000000000000a10
    [ 1348.256631] x9 : ffff00000b85bc40 x8 : ffff80003be11870
    [ 1348.261937] x7 : ffff80003dfc7308 x6 : 000000078ff08b55
    [ 1348.267243] x5 : 00000139e1058400 x4 : 0000000000000000
    [ 1348.272550] x3 : dead000000000100 x2 : 958f2788d6618100
    [ 1348.277856] x1 : 00000000fffffe00 x0 : 0000000000000000
    
    Signed-off-by: Michael Trimarchi <michael@amarulasolutions.com>
    Acked-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Tested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86c43df5bfc34c5dd910b9257f1d5cc03d367e15
Author: Ganesh Goudar <ganeshgr@chelsio.com>
Date:   Sat Jun 23 20:28:26 2018 +0530

    cxgb4: when disabling dcb set txq dcb priority to 0
    
    [ Upstream commit 5ce36338a30f9814fc4824f9fe6c20cd83d872c7 ]
    
    When we are disabling DCB, store "0" in txq->dcb_prio
    since that's used for future TX Work Request "OVLAN_IDX"
    values. Setting non zero priority upon disabling DCB
    would halt the traffic.
    
    Reported-by: AMG Zollner Robert <robert@cloudmedia.eu>
    CC: David Ahern <dsa@cumulusnetworks.com>
    Signed-off-by: Casey Leedom <leedom@chelsio.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 091cb7dec89b1bbd4989a30f5ae9ab93248d2a93
Author: Casey Schaufler <casey@schaufler-ca.com>
Date:   Fri Jun 22 10:54:45 2018 -0700

    Smack: Mark inode instant in smack_task_to_inode
    
    [ Upstream commit 7b4e88434c4e7982fb053c49657e1c8bbb8692d9 ]
    
    Smack: Mark inode instant in smack_task_to_inode
    
    /proc clean-up in commit 1bbc55131e59bd099fdc568d3aa0b42634dbd188
    resulted in smack_task_to_inode() being called before smack_d_instantiate.
    This resulted in the smk_inode value being ignored, even while present
    for files in /proc/self. Marking the inode as instant here fixes that.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55989af9dfa0ce11ef9694899e649fdf38b9aab2
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Jun 21 19:49:36 2018 +0800

    ipv6: mcast: fix unsolicited report interval after receiving querys
    
    [ Upstream commit 6c6da92808442908287fae8ebb0ca041a52469f4 ]
    
    After recieving MLD querys, we update idev->mc_maxdelay with max_delay
    from query header. This make the later unsolicited reports have the same
    interval with mc_maxdelay, which means we may send unsolicited reports with
    long interval time instead of default configured interval time.
    
    Also as we will not call ipv6_mc_reset() after device up. This issue will
    be there even after leave the group and join other groups.
    
    Fixes: fc4eba58b4c14 ("ipv6: make unsolicited report intervals configurable for mld")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c40dc96f7f7e29d7c1e520c46c87178c2d4b1dcc
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Apr 4 14:06:30 2018 -0400

    locking/lockdep: Do not record IRQ state within lockdep code
    
    [ Upstream commit fcc784be837714a9173b372ff9fb9b514590dad9 ]
    
    While debugging where things were going wrong with mapping
    enabling/disabling interrupts with the lockdep state and actual real
    enabling and disabling interrupts, I had to silent the IRQ
    disabling/enabling in debug_check_no_locks_freed() because it was
    always showing up as it was called before the splat was.
    
    Use raw_local_irq_save/restore() for not only debug_check_no_locks_freed()
    but for all internal lockdep functions, as they hide useful information
    about where interrupts were used incorrectly last.
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Link: https://lkml.kernel.org/lkml/20180404140630.3f4f4c7a@gandalf.local.home
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39565a7d63fb3ccf98d5745499760c1000012599
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Wed Jun 20 10:03:56 2018 +0200

    net: davinci_emac: match the mdio device against its compatible if possible
    
    [ Upstream commit ea0820bb771175c7d4192fc6f5b5c56b3c6d5239 ]
    
    Device tree based systems without of_dev_auxdata will have the mdio
    device named differently than "davinci_mdio(.0)". In this case use the
    device's parent's compatible string for matching
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d68db3d9974fdc31664a46bbd12a98915eeec1f6
Author: Alexey Brodkin <Alexey.Brodkin@synopsys.com>
Date:   Wed Nov 29 11:21:45 2017 +0300

    ARC: Enable machine_desc->init_per_cpu for !CONFIG_SMP
    
    [ Upstream commit 2f24ef7413a4d91657ef04e77c27ce0b313e6c95 ]
    
    machine_desc->init_per_cpu() hook is supposed to be per cpu
    initialization and would seem to apply  equally to UP and/or SMP.
    Infact the comment in header file seems to suggest it works for
    UP too, which was not the case and this patch.
    
    This enables !CONFIG_SMP build for platforms such as hsdk.
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    [vgupta: trimmeed changelog]
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5df06baac86afb3dfd69d7b865cf9e5d13c81f4
Author: Li RongQing <lirongqing@baidu.com>
Date:   Tue Jun 19 17:23:17 2018 +0800

    net: propagate dev_get_valid_name return code
    
    [ Upstream commit 7892bd081045222b9e4027fec279a28d6fe7aa66 ]
    
    if dev_get_valid_name failed, propagate its return code
    
    and remove the setting err to ENODEV, it will be set to
    0 again before dev_change_net_namespace exits.
    
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5bfd8e707375eaa67c775e69ded5b8f104a80db
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Jun 17 23:40:53 2018 +0200

    net: hamradio: use eth_broadcast_addr
    
    [ Upstream commit 4e8439aa34802deab11cee68b0ecb18f887fb153 ]
    
    The array bpq_eth_addr is only used to get the size of an
    address, whereas the bcast_addr is used to set the broadcast
    address. This leads to a warning when using clang:
    drivers/net/hamradio/bpqether.c:94:13: warning: variable 'bpq_eth_addr' is not
          needed and will not be emitted [-Wunneeded-internal-declaration]
    static char bpq_eth_addr[6];
                ^
    
    Remove both variables and use the common eth_broadcast_addr
    to set the broadcast address.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d89657e052abc1ef49acd1bab3d66bfe3efd25e1
Author: Govindarajulu Varadarajan <gvaradar@cisco.com>
Date:   Tue Jun 19 08:15:24 2018 -0700

    enic: initialize enic->rfs_h.lock in enic_probe
    
    [ Upstream commit 3256d29fc7aecdf99feb1cb9475ed2252769a8a7 ]
    
    lockdep spotted that we are using rfs_h.lock in enic_get_rxnfc() without
    initializing. rfs_h.lock is initialized in enic_open(). But ethtool_ops
    can be called when interface is down.
    
    Move enic_rfs_flw_tbl_init to enic_probe.
    
    INFO: trying to register non-static key.
    the code is fine but needs lockdep annotation.
    turning off the locking correctness validator.
    CPU: 18 PID: 1189 Comm: ethtool Not tainted 4.17.0-rc7-devel+ #27
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
    Call Trace:
    dump_stack+0x85/0xc0
    register_lock_class+0x550/0x560
    ? __handle_mm_fault+0xa8b/0x1100
    __lock_acquire+0x81/0x670
    lock_acquire+0xb9/0x1e0
    ?  enic_get_rxnfc+0x139/0x2b0 [enic]
    _raw_spin_lock_bh+0x38/0x80
    ? enic_get_rxnfc+0x139/0x2b0 [enic]
    enic_get_rxnfc+0x139/0x2b0 [enic]
    ethtool_get_rxnfc+0x8d/0x1c0
    dev_ethtool+0x16c8/0x2400
    ? __mutex_lock+0x64d/0xa00
    ? dev_load+0x6a/0x150
    dev_ioctl+0x253/0x4b0
    sock_do_ioctl+0x9a/0x130
    sock_ioctl+0x1af/0x350
    do_vfs_ioctl+0x8e/0x670
    ? syscall_trace_enter+0x1e2/0x380
    ksys_ioctl+0x60/0x90
    __x64_sys_ioctl+0x16/0x20
    do_syscall_64+0x5a/0x170
    entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Signed-off-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0e199f330ea7d059713be165edcf86a3f725b3e
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Mon Jun 18 21:58:01 2018 -0700

    qed: Add sanity check for SIMD fastpath handler.
    
    [ Upstream commit 3935a70968820c3994db4de7e6e1c7e814bff875 ]
    
    Avoid calling a SIMD fastpath handler if it is NULL. The check is needed
    to handle an unlikely scenario where unsolicited interrupt is destined to
    a PF in INTa mode.
    
    Fixes: fe56b9e6a ("qed: Add module with basic common support")
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5a362036c85990648c726716f4a569a504b89fb
Author: Zhizhou Zhang <zhizhouzhang@asrmicro.com>
Date:   Tue Jun 12 17:07:37 2018 +0800

    arm64: make secondary_start_kernel() notrace
    
    [ Upstream commit b154886f7892499d0d3054026e19dfb9a731df61 ]
    
    We can't call function trace hook before setup percpu offset.
    When entering secondary_start_kernel(), percpu offset has not
    been initialized.  So this lead hotplug malfunction.
    Here is the flow to reproduce this bug:
    
    echo 0 > /sys/devices/system/cpu/cpu1/online
    echo function > /sys/kernel/debug/tracing/current_tracer
    echo 1 > /sys/kernel/debug/tracing/tracing_on
    echo 1 > /sys/devices/system/cpu/cpu1/online
    
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Zhizhou Zhang <zhizhouzhang@asrmicro.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d082f109ec260ad0f13b9e77bd41b38d0c34326
Author: Zhouyang Jia <jiazhouyang09@gmail.com>
Date:   Sat Jun 16 01:05:01 2018 +0800

    scsi: xen-scsifront: add error handling for xenbus_printf
    
    [ Upstream commit 93efbd39870474cc536b9caf4a6efeb03b0bc56f ]
    
    When xenbus_printf fails, the lack of error-handling code may
    cause unexpected results.
    
    This patch adds error-handling code after calling xenbus_printf.
    
    Signed-off-by: Zhouyang Jia <jiazhouyang09@gmail.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d51ce9e03e6341a036b44e38d91adaf48c82ec9b
Author: Grigor Tovmasyan <Grigor.Tovmasyan@synopsys.com>
Date:   Thu May 24 18:22:30 2018 +0400

    usb: gadget: dwc2: fix memory leak in gadget_init()
    
    [ Upstream commit 9bb073a053f0464ea74a4d4c331fdb7da58568d6 ]
    
    Freed allocated request for ep0 to prevent memory leak in case when
    dwc2_driver_probe() failed.
    
    Cc: Stefan Wahren <stefan.wahren@i2se.com>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c29ae7ce74b4a3fa9719c4ccc244b59c0906a65
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Fri May 25 17:24:57 2018 +0800

    usb: gadget: composite: fix delayed_status race condition when set_interface
    
    [ Upstream commit 980900d6318066b9f8314bfb87329a20fd0d1ca4 ]
    
    It happens when enable debug log, if set_alt() returns
    USB_GADGET_DELAYED_STATUS and usb_composite_setup_continue()
    is called before increasing count of @delayed_status,
    so fix it by using spinlock of @cdev->lock.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Tested-by: Jay Hsu <shih-chieh.hsu@mediatek.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 879384b1fc452c7de5f3c027c7530f0379a8a3a2
Author: William Wu <william.wu@rock-chips.com>
Date:   Fri May 11 17:46:32 2018 +0800

    usb: dwc2: fix isoc split in transfer with no data
    
    [ Upstream commit 70c3c8cb83856758025c2a211dd022bc0478922a ]
    
    If isoc split in transfer with no data (the length of DATA0
    packet is zero), we can't simply return immediately. Because
    the DATA0 can be the first transaction or the second transaction
    for the isoc split in transaction. If the DATA0 packet with no
    data is in the first transaction, we can return immediately.
    But if the DATA0 packet with no data is in the second transaction
    of isoc split in transaction sequence, we need to increase the
    qtd->isoc_frame_index and giveback urb to device driver if needed,
    otherwise, the MDATA packet will be lost.
    
    A typical test case is that connect the dwc2 controller with an
    usb hs Hub (GL852G-12), and plug an usb fs audio device (Plantronics
    headset) into the downstream port of Hub. Then use the usb mic
    to record, we can find noise when playback.
    
    In the case, the isoc split in transaction sequence like this:
    
    - SSPLIT IN transaction
    - CSPLIT IN transaction
      - MDATA packet (176 bytes)
    - CSPLIT IN transaction
      - DATA0 packet (0 byte)
    
    This patch use both the length of DATA0 and qtd->isoc_split_offset
    to check if the DATA0 is in the second transaction.
    
    Tested-by: Gevorg Sahakyan <sahakyan@synopsys.com>
    Tested-by: Heiko Stuebner <heiko@sntech.de>
    Acked-by: Minas Harutyunyan hminas@synopsys.com>
    Signed-off-by: William Wu <william.wu@rock-chips.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a6914e81cfaf4b77ba6ebeb09f87dab4ad2336c
Author: Ray Jui <ray.jui@broadcom.com>
Date:   Tue Jun 12 13:21:27 2018 -0700

    ARM: dts: Cygnus: Fix I2C controller interrupt type
    
    [ Upstream commit 71ca3409703b62b6a092d0d9d13f366c121bc5d3 ]
    
    Fix I2C controller interrupt to use IRQ_TYPE_LEVEL_HIGH for Broadcom
    Cygnus SoC.
    
    Fixes: b51c05a331ff ("ARM: dts: add I2C device nodes for Broadcom Cygnus")
    Signed-off-by: Ray Jui <ray.jui@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67726a2e9cd7e16503e8d54c54b5885a8737663d
Author: Fathi Boudra <fathi.boudra@linaro.org>
Date:   Thu Jun 14 11:57:08 2018 +0200

    selftests: sync: add config fragment for testing sync framework
    
    [ Upstream commit d6a3e55131fcb1e5ca1753f4b6f297a177b2fc91 ]
    
    Unless the software synchronization objects (CONFIG_SW_SYNC) is enabled,
    the sync test will be skipped:
    
    TAP version 13
    1..0 # Skipped: Sync framework not supported by kernel
    
    Add a config fragment file to be able to run "make kselftest-merge" to
    enable relevant configuration required in order to run the sync test.
    
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    Link: https://lkml.org/lkml/2017/5/5/14
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e54d87ffc5170acfe72b371198ddcb685f88e63
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Thu Jun 14 16:56:13 2018 -0600

    selftests: zram: return Kselftest Skip code for skipped tests
    
    [ Upstream commit 685814466bf8398192cf855415a0bb2cefc1930e ]
    
    When zram test is skipped because of unmet dependencies and/or
    unsupported configuration, it exits with error which is treated as
    a fail by the Kselftest framework. This leads to false negative result
    even when the test could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to
    clearly report that the test could not be run.
    
    Kselftest framework SKIP code is 4 and the framework prints appropriate
    messages to indicate that the test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01024c01171b1c5c18f1269c124886a273230db4
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Wed Jun 13 21:10:48 2018 -0600

    selftests: user: return Kselftest Skip code for skipped tests
    
    [ Upstream commit d7d5311d4aa9611fe1a5a851e6f75733237a668a ]
    
    When user test is skipped because of unmet dependencies and/or
    unsupported configuration, it exits with error which is treated as
    a fail by the Kselftest framework. This leads to false negative result
    even when the test could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to
    clearly report that the test could not be run. Add an explicit check
    for module presence and return skip code if module isn't present.
    
    Kselftest framework SKIP code is 4 and the framework prints appropriate
    messages to indicate that the test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68f5b8ff63022b1d6b7019092c66c916a499dc84
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Tue Jun 12 17:40:31 2018 -0600

    selftests: static_keys: return Kselftest Skip code for skipped tests
    
    [ Upstream commit 8781578087b8fb8829558bac96c3c24e5ba26f82 ]
    
    When static_keys test is skipped because of unmet dependencies and/or
    unsupported configuration, it exits with error which is treated as a fail
    by the Kselftest framework. This leads to false negative result even when
    the test could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to clearly
    report that the test could not be run.
    
    Added an explicit searches for test_static_key_base and test_static_keys
    modules and return skip code if they aren't found to differentiate between
    the failure to load the module condition and module not found condition.
    
    Kselftest framework SKIP code is 4 and the framework prints appropriate
    messages to indicate that the test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c22a9ad9d0dfa4a72aeb08bc5275239d4281f077
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Tue Jun 12 16:46:03 2018 -0600

    selftests: pstore: return Kselftest Skip code for skipped tests
    
    [ Upstream commit 856e7c4b619af622d56b3b454f7bec32a170ac99 ]
    
    When pstore_post_reboot test gets skipped because of unmet dependencies
    and/or unsupported configuration, it returns 0 which is treated as a pass
    by the Kselftest framework. This leads to false positive result even when
    the test could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to clearly
    report that the test could not be run.
    
    Kselftest framework SKIP code is 4 and the framework prints appropriate
    messages to indicate that the test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8747d9e7d45420350524dc8a8343837b8ac92776
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jun 13 10:11:56 2018 -0700

    netfilter: ipv6: nf_defrag: reduce struct net memory waste
    
    [ Upstream commit 9ce7bc036ae4cfe3393232c86e9e1fea2153c237 ]
    
    It is a waste of memory to use a full "struct netns_sysctl_ipv6"
    while only one pointer is really used, considering netns_sysctl_ipv6
    keeps growing.
    
    Also, since "struct netns_frags" has cache line alignment,
    it is better to move the frags_hdr pointer outside, otherwise
    we spend a full cache line for this pointer.
    
    This saves 192 bytes of memory per netns.
    
    Fixes: c038a767cd69 ("ipv6: add a new namespace for nf_conntrack_reasm")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97aaf73394cce0cf85c393c2a5e1d9ad6ddb2245
Author: Alexey Brodkin <abrodkin@synopsys.com>
Date:   Fri Jun 1 14:34:33 2018 +0300

    ARC: Explicitly add -mmedium-calls to CFLAGS
    
    [ Upstream commit 74c11e300c103af47db5b658fdcf28002421e250 ]
    
    GCC built for arc*-*-linux has "-mmedium-calls" implicitly enabled by default
    thus we don't see any problems during Linux kernel compilation.
    ----------------------------->8------------------------
    arc-linux-gcc -mcpu=arc700 -Q --help=target | grep calls
      -mlong-calls                          [disabled]
      -mmedium-calls                        [enabled]
    ----------------------------->8------------------------
    
    But if we try to use so-called Elf32 toolchain with GCC configured for
    arc*-*-elf* then we'd see the following failure:
    ----------------------------->8------------------------
    init/do_mounts.o: In function 'init_rootfs':
    do_mounts.c:(.init.text+0x108): relocation truncated to fit: R_ARC_S21W_PCREL
    against symbol 'unregister_filesystem' defined in .text section in fs/filesystems.o
    
    arc-elf32-ld: final link failed: Symbol needs debug section which does not exist
    make: *** [vmlinux] Error 1
    ----------------------------->8------------------------
    
    That happens because neither "-mmedium-calls" nor "-mlong-calls" are enabled in
    Elf32 GCC:
    ----------------------------->8------------------------
    arc-elf32-gcc -mcpu=arc700 -Q --help=target | grep calls
      -mlong-calls                          [disabled]
      -mmedium-calls                        [disabled]
    ----------------------------->8------------------------
    
    Now to make it possible to use Elf32 toolchain for building Linux kernel
    we're explicitly add "-mmedium-calls" to CFLAGS.
    
    And since we add "-mmedium-calls" to the global CFLAGS there's no point in
    having per-file copies thus removing them.
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
