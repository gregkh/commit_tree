commit b762de8221691f3fabb3ea583ac777c0baea3641
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 15 10:09:19 2017 +0100

    Linux 4.13.13

commit 175acf7212230807214e49c52df8ef2d73724d94
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Nov 7 18:53:07 2017 +0100

    x86/oprofile/ppro: Do not use __this_cpu*() in preemptible context
    
    commit a743bbeef27b9176987ec0cb7f906ab0ab52d1da upstream.
    
    The warning below says it all:
    
      BUG: using __this_cpu_read() in preemptible [00000000] code: swapper/0/1
      caller is __this_cpu_preempt_check
      CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.14.0-rc8 #4
      Call Trace:
       dump_stack
       check_preemption_disabled
       ? do_early_param
       __this_cpu_preempt_check
       arch_perfmon_init
       op_nmi_init
       ? alloc_pci_root_info
       oprofile_arch_init
       oprofile_init
       do_one_initcall
       ...
    
    These accessors should not have been used in the first place: it is PPro so
    no mixed silicon revisions and thus it can simply use boot_cpu_data.
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Fix-creation-mandated-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Robert Richter <rric@kernel.org>
    Cc: x86@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b192d70c54b74684a2fd515a13da60ace3270daa
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Fri Oct 27 20:11:00 2017 -0400

    x86/smpboot: Make optimization of delay calibration work correctly
    
    commit 76ce7cfe35ef58f34e6ba85327afb5fbf6c3ff9b upstream.
    
    If the TSC has constant frequency then the delay calibration can be skipped
    when it has been calibrated for a package already. This is checked in
    calibrate_delay_is_known(), but that function is buggy in two aspects:
    
    It returns 'false' if
    
      (!tsc_disabled && !cpu_has(&cpu_data(cpu), X86_FEATURE_CONSTANT_TSC)
    
    which is obviously the reverse of the intended check and the check for the
    sibling mask cannot work either because the topology links have not been
    set up yet.
    
    Correct the condition and move the call to set_cpu_sibling_map() before
    invoking calibrate_delay() so the sibling check works correctly.
    
    [ tglx: Rewrote changelong ]
    
    Fixes: c25323c07345 ("x86/tsc: Use topology functions")
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: bob.picco@oracle.com
    Cc: steven.sistare@oracle.com
    Cc: daniel.m.jordan@oracle.com
    Link: https://lkml.kernel.org/r/20171028001100.26603-1-pasha.tatashin@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 466d590ebd51a8af77116fe81cf13a134ea5b119
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Mon Jul 24 13:04:28 2017 +0300

    x86/debug: Handle warnings before the notifier chain, to fix KGDB crash
    
    commit b8347c2196492f4e1cccde3d92fda1cc2cc7de7e upstream.
    
    Commit:
    
      9a93848fe787 ("x86/debug: Implement __WARN() using UD0")
    
    turned warnings into UD0, but the fixup code only runs after the
    notify_die() chain. This is a problem, in particular, with kgdb,
    which kicks in as if it was a BUG().
    
    Fix this by running the fixup code before the notifier chain in
    the invalid op handler path.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Tested-by: Ilya Dryomov <idryomov@gmail.com>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Richard Weinberger <richard.weinberger@gmail.com>
    Link: http://lkml.kernel.org/r/20170724100428.19173-1-alexander.shishkin@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 478ff23bf84b996c49ee78703678b72145d70230
Author: Richard Schütz <rschuetz@uni-koblenz.de>
Date:   Sun Oct 29 13:03:22 2017 +0100

    can: c_can: don't indicate triple sampling support for D_CAN
    
    commit fb5f0b3ef69b95e665e4bbe8a3de7201f09f1071 upstream.
    
    The D_CAN controller doesn't provide a triple sampling mode, so don't set
    the CAN_CTRLMODE_3_SAMPLES flag in ctrlmode_supported. Currently enabling
    triple sampling is a no-op.
    
    Signed-off-by: Richard Schütz <rschuetz@uni-koblenz.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48e244556a59646046448b5e1a669ec4380fb6cc
Author: Marek Vasut <marex@denx.de>
Date:   Fri Nov 10 11:22:39 2017 +0100

    can: ifi: Fix transmitter delay calculation
    
    commit 4f7116757b4bd99e4ef2636c7d957a6d63035d11 upstream.
    
    The CANFD transmitter delay calculation formula was updated in the
    latest software drop from IFI and improves the behavior of the IFI
    CANFD core during bitrate switching. Use the new formula to improve
    stability of the CANFD operation.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Markus Marb <markus@marb.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a22909970a06166d51d4509c81c6e1c083edc58
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Thu Nov 9 14:42:14 2017 +0100

    can: peak: Add support for new PCIe/M2 CAN FD interfaces
    
    commit 4cbdd0ee67191481ec57ceed94febdfef95c9f25 upstream.
    
    This adds support for the following PEAK-System CAN FD interfaces:
    
    PCAN-cPCIe FD         CAN FD Interface for cPCI Serial (2 or 4 channels)
    PCAN-PCIe/104-Express CAN FD Interface for PCIe/104-Express (1, 2 or 4 ch.)
    PCAN-miniPCIe FD      CAN FD Interface for PCIe Mini (1, 2 or 4 channels)
    PCAN-PCIe FD OEM      CAN FD Interface for PCIe OEM version (1, 2 or 4 ch.)
    PCAN-M.2              CAN FD Interface for M.2 (1 or 2 channels)
    
    Like the PCAN-PCIe FD interface, all of these boards run the same IP Core
    that is able to handle CAN FD (see also http://www.peak-system.com).
    
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c784aa2d5f175b5b8188268a84d1d51b95de6d16
Author: Gerhard Bertelsmann <info@gerhard-bertelsmann.de>
Date:   Mon Nov 6 18:16:56 2017 +0100

    can: sun4i: handle overrun in RX FIFO
    
    commit 4dcf924c2eda0c47a5c53b7703e3dc65ddaa8920 upstream.
    
    SUN4Is CAN IP has a 64 byte deep FIFO buffer. If the buffer is not
    drained fast enough (overrun) it's getting mangled. Already received
    frames are dropped - the data can't be restored.
    
    Signed-off-by: Gerhard Bertelsmann <info@gerhard-bertelsmann.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6625084fad0775659b2ed9a93e91bde4a9d8f50
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 10 11:19:11 2017 -0800

    Revert "x86: CPU: Fix up "cpu MHz" in /proc/cpuinfo"
    
    commit ea0ee33988778fb73e4f45e7c73fb735787e2f32 upstream.
    
    This reverts commit 941f5f0f6ef5338814145cf2b813cf1f98873e2f.
    
    Sadly, it turns out that we really can't just do the cross-CPU IPI to
    all CPU's to get their proper frequencies, because it's much too
    expensive on systems with lots of cores.
    
    So we'll have to revert this for now, and revisit it using a smarter
    model (probably doing one system-wide IPI at open time, and doing all
    the frequency calculations in parallel).
    
    Reported-by: WANG Chao <chao.wang@ucloud.cn>
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Cc: Rafael J Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac9f11a6a33eab4d3bb65a647eba16cd0e59ed00
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Wed Nov 1 10:47:05 2017 -0700

    drm/vmwgfx: Fix Ubuntu 17.10 Wayland black screen issue
    
    commit cef75036c40408ba3bc308bcb00a3d440da713fc upstream.
    
    This is an extension of Commit 7c20d213dd3c ("drm/vmwgfx: Work
    around mode set failure in 2D VMs")
    
    With Wayland desktop and atomic mode set, during the mode setting
    process there is a moment when two framebuffer sized surfaces
    are being pinned.  This was not an issue with Xorg.
    
    Since this only happens during a mode change, there should be no
    performance impact by increasing allowable mem_size.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d795a2b9b157489b5e835521c7e93265b2e10592
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Mon Nov 6 11:33:36 2017 +0100

    rbd: use GFP_NOIO for parent stat and data requests
    
    commit 1e37f2f84680fa7f8394fd444b6928e334495ccc upstream.
    
    rbd_img_obj_exists_submit() and rbd_img_obj_parent_read_full() are on
    the writeback path for cloned images -- we attempt a stat on the parent
    object to see if it exists and potentially read it in to call copyup.
    GFP_NOIO should be used instead of GFP_KERNEL here.
    
    Link: http://tracker.ceph.com/issues/22014
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d344a88049b15ece7f8e81cc5da1ce5c3bcefceb
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Nov 7 16:19:24 2017 -0800

    Input: elan_i2c - add ELAN060C to the ACPI table
    
    commit cdea6a30c2689cc33b34c6691b57cca277f0c5dc upstream.
    
    ELAN060C touchpad uses elan_i2c as its driver. It can be
    found on Lenovo ideapad 320-14AST.
    
    BugLink: https://bugs.launchpad.net/bugs/1727544
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 656ae5abe3e7e79971667a4cba142229dc18cd55
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Nov 8 14:44:04 2017 +1100

    KVM: PPC: Book3S HV: Fix exclusion between HPT resizing and other HPT updates
    
    commit 38c53af853069adf87181684370d7b8866d6387b upstream.
    
    Commit 5e9859699aba ("KVM: PPC: Book3S HV: Outline of KVM-HV HPT resizing
    implementation", 2016-12-20) added code that tries to exclude any use
    or update of the hashed page table (HPT) while the HPT resizing code
    is iterating through all the entries in the HPT.  It does this by
    taking the kvm->lock mutex, clearing the kvm->arch.hpte_setup_done
    flag and then sending an IPI to all CPUs in the host.  The idea is
    that any VCPU task that tries to enter the guest will see that the
    hpte_setup_done flag is clear and therefore call kvmppc_hv_setup_htab_rma,
    which also takes the kvm->lock mutex and will therefore block until
    we release kvm->lock.
    
    However, any VCPU that is already in the guest, or is handling a
    hypervisor page fault or hypercall, can re-enter the guest without
    rechecking the hpte_setup_done flag.  The IPI will cause a guest exit
    of any VCPUs that are currently in the guest, but does not prevent
    those VCPU tasks from immediately re-entering the guest.
    
    The result is that after resize_hpt_rehash_hpte() has made a HPTE
    absent, a hypervisor page fault can occur and make that HPTE present
    again.  This includes updating the rmap array for the guest real page,
    meaning that we now have a pointer in the rmap array which connects
    with pointers in the old rev array but not the new rev array.  In
    fact, if the HPT is being reduced in size, the pointer in the rmap
    array could point outside the bounds of the new rev array.  If that
    happens, we can get a host crash later on such as this one:
    
    [91652.628516] Unable to handle kernel paging request for data at address 0xd0000000157fb10c
    [91652.628668] Faulting instruction address: 0xc0000000000e2640
    [91652.628736] Oops: Kernel access of bad area, sig: 11 [#1]
    [91652.628789] LE SMP NR_CPUS=1024 NUMA PowerNV
    [91652.628847] Modules linked in: binfmt_misc vhost_net vhost tap xt_CHECKSUM ipt_MASQUERADE nf_nat_masquerade_ipv4 ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 nf_conntrack_ipv6 nf_defrag_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_mangle ip6table_security ip6table_raw iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack libcrc32c iptable_mangle iptable_security iptable_raw ebtable_filter ebtables ip6table_filter ip6_tables ses enclosure scsi_transport_sas i2c_opal ipmi_powernv ipmi_devintf i2c_core ipmi_msghandler powernv_op_panel nfsd auth_rpcgss oid_registry nfs_acl lockd grace sunrpc kvm_hv kvm_pr kvm scsi_dh_alua dm_service_time dm_multipath tg3 ptp pps_core [last unloaded: stap_552b612747aec2da355051e464fa72a1_14259]
    [91652.629566] CPU: 136 PID: 41315 Comm: CPU 21/KVM Tainted: G           O    4.14.0-1.rc4.dev.gitb27fc5c.el7.centos.ppc64le #1
    [91652.629684] task: c0000007a419e400 task.stack: c0000000028d8000
    [91652.629750] NIP:  c0000000000e2640 LR: d00000000c36e498 CTR: c0000000000e25f0
    [91652.629829] REGS: c0000000028db5d0 TRAP: 0300   Tainted: G           O     (4.14.0-1.rc4.dev.gitb27fc5c.el7.centos.ppc64le)
    [91652.629932] MSR:  900000010280b033 <SF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]>  CR: 44022422  XER: 00000000
    [91652.630034] CFAR: d00000000c373f84 DAR: d0000000157fb10c DSISR: 40000000 SOFTE: 1
    [91652.630034] GPR00: d00000000c36e498 c0000000028db850 c000000001403900 c0000007b7960000
    [91652.630034] GPR04: d0000000117fb100 d000000007ab00d8 000000000033bb10 0000000000000000
    [91652.630034] GPR08: fffffffffffffe7f 801001810073bb10 d00000000e440000 d00000000c373f70
    [91652.630034] GPR12: c0000000000e25f0 c00000000fdb9400 f000000003b24680 0000000000000000
    [91652.630034] GPR16: 00000000000004fb 00007ff7081a0000 00000000000ec91a 000000000033bb10
    [91652.630034] GPR20: 0000000000010000 00000000001b1190 0000000000000001 0000000000010000
    [91652.630034] GPR24: c0000007b7ab8038 d0000000117fb100 0000000ec91a1190 c000001e6a000000
    [91652.630034] GPR28: 00000000033bb100 000000000073bb10 c0000007b7960000 d0000000157fb100
    [91652.630735] NIP [c0000000000e2640] kvmppc_add_revmap_chain+0x50/0x120
    [91652.630806] LR [d00000000c36e498] kvmppc_book3s_hv_page_fault+0xbb8/0xc40 [kvm_hv]
    [91652.630884] Call Trace:
    [91652.630913] [c0000000028db850] [c0000000028db8b0] 0xc0000000028db8b0 (unreliable)
    [91652.630996] [c0000000028db8b0] [d00000000c36e498] kvmppc_book3s_hv_page_fault+0xbb8/0xc40 [kvm_hv]
    [91652.631091] [c0000000028db9e0] [d00000000c36a078] kvmppc_vcpu_run_hv+0xdf8/0x1300 [kvm_hv]
    [91652.631179] [c0000000028dbb30] [d00000000c2248c4] kvmppc_vcpu_run+0x34/0x50 [kvm]
    [91652.631266] [c0000000028dbb50] [d00000000c220d54] kvm_arch_vcpu_ioctl_run+0x114/0x2a0 [kvm]
    [91652.631351] [c0000000028dbbd0] [d00000000c2139d8] kvm_vcpu_ioctl+0x598/0x7a0 [kvm]
    [91652.631433] [c0000000028dbd40] [c0000000003832e0] do_vfs_ioctl+0xd0/0x8c0
    [91652.631501] [c0000000028dbde0] [c000000000383ba4] SyS_ioctl+0xd4/0x130
    [91652.631569] [c0000000028dbe30] [c00000000000b8e0] system_call+0x58/0x6c
    [91652.631635] Instruction dump:
    [91652.631676] fba1ffe8 fbc1fff0 fbe1fff8 f8010010 f821ffa1 2fa70000 793d0020 e9432110
    [91652.631814] 7bbf26e4 7c7e1b78 7feafa14 409e0094 <807f000c> 786326e4 7c6a1a14 93a40008
    [91652.631959] ---[ end trace ac85ba6db72e5b2e ]---
    
    To fix this, we tighten up the way that the hpte_setup_done flag is
    checked to ensure that it does provide the guarantee that the resizing
    code needs.  In kvmppc_run_core(), we check the hpte_setup_done flag
    after disabling interrupts and refuse to enter the guest if it is
    clear (for a HPT guest).  The code that checks hpte_setup_done and
    calls kvmppc_hv_setup_htab_rma() is moved from kvmppc_vcpu_run_hv()
    to a point inside the main loop in kvmppc_run_vcpu(), ensuring that
    we don't just spin endlessly calling kvmppc_run_core() while
    hpte_setup_done is clear, but instead have a chance to block on the
    kvm->lock mutex.
    
    Finally we also check hpte_setup_done inside the region in
    kvmppc_book3s_hv_page_fault() where the HPTE is locked and we are about
    to update the HPTE, and bail out if it is clear.  If another CPU is
    inside kvm_vm_ioctl_resize_hpt_commit) and has cleared hpte_setup_done,
    then we know that either we are looking at a HPTE
    that resize_hpt_rehash_hpte() has not yet processed, which is OK,
    or else we will see hpte_setup_done clear and refuse to update it,
    because of the full barrier formed by the unlock of the HPTE in
    resize_hpt_rehash_hpte() combined with the locking of the HPTE
    in kvmppc_book3s_hv_page_fault().
    
    Fixes: 5e9859699aba ("KVM: PPC: Book3S HV: Outline of KVM-HV HPT resizing implementation")
    Reported-by: Satheesh Rajendran <satheera@in.ibm.com>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38601c4dfe1b31371a767cdc090e4092e3b6e2ce
Author: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
Date:   Sun Oct 29 16:27:20 2017 +0100

    MIPS: AR7: Ensure that serial ports are properly set up
    
    commit b084116f8587b222a2c5ef6dcd846f40f24b9420 upstream.
    
    Without UPF_FIXED_TYPE, the data from the PORT_AR7 uart_config entry is
    never copied, resulting in a dead port.
    
    Fixes: 154615d55459 ("MIPS: AR7: Use correct UART port type")
    Signed-off-by: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    [jonas.gorski: add Fixes tag]
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Yoshihiro YUNOMAE <yoshihiro.yunomae.ez@hitachi.com>
    Cc: Nicolas Schichan <nschichan@freebox.fr>
    Cc: Oswald Buddenhagen <oswald.buddenhagen@gmx.de>
    Cc: linux-mips@linux-mips.org
    Cc: linux-serial@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17543/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2497c57cbaedda11d39998d59694b2cae79f6731
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Sun Oct 29 16:27:19 2017 +0100

    MIPS: AR7: Defer registration of GPIO
    
    commit e6b03ab63b4d270e0249f96536fde632409dc1dc upstream.
    
    When called from prom init code, ar7_gpio_init() will fail as it will
    call gpiochip_add() which relies on a working kmalloc() to alloc
    the gpio_desc array and kmalloc is not useable yet at prom init time.
    
    Move ar7_gpio_init() to ar7_register_devices() (a device_initcall)
    where kmalloc works.
    
    Fixes: 14e85c0e69d5 ("gpio: remove gpio_descs global array")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Yoshihiro YUNOMAE <yoshihiro.yunomae.ez@hitachi.com>
    Cc: Nicolas Schichan <nschichan@freebox.fr>
    Cc: linux-mips@linux-mips.org
    Cc: linux-serial@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17542/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 243fcd24f06e8b0923b6d17196b4ddbf6ab86fd6
Author: Jaedon Shin <jaedon.shin@gmail.com>
Date:   Fri Jun 16 20:03:01 2017 +0900

    MIPS: BMIPS: Fix missing cbr address
    
    commit ea4b3afe1eac8f88bb453798a084fba47a1f155a upstream.
    
    Fix NULL pointer access in BMIPS3300 RAC flush.
    
    Fixes: 738a3f79027b ("MIPS: BMIPS: Add early CPU initialization code")
    Signed-off-by: Jaedon Shin <jaedon.shin@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Kevin Cernekee <cernekee@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16423/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ae2018d98f41298607f5f98deddbd9064e6165d
Author: Paul Burton <paulburton@kernel.org>
Date:   Tue Oct 31 15:09:22 2017 -0700

    MIPS: Fix CM region target definitions
    
    commit 6a6cba1d945a7511cdfaf338526871195e420762 upstream.
    
    The default CM target field in the GCR_BASE register is encoded with 0
    meaning memory & 1 being reserved. However the definitions we use for
    those bits effectively get these two values backwards - likely because
    they were copied from the definitions for the CM regions where the
    target is encoded differently. This results in use setting up GCR_BASE
    with the reserved target value by default, rather than targeting memory
    as intended. Although we currently seem to get away with this it's not a
    great idea to rely upon.
    
    Fix this by changing our macros to match the documentated target values.
    
    The incorrect encoding became used as of commit 9f98f3dd0c51 ("MIPS: Add
    generic CM probe & access code") in the Linux v3.15 cycle, and was
    likely carried forwards from older but unused code introduced by
    commit 39b8d5254246 ("[MIPS] Add support for MIPS CMP platform.") in the
    v2.6.26 cycle.
    
    Fixes: 9f98f3dd0c51 ("MIPS: Add generic CM probe & access code")
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Reported-by: Matt Redfearn <matt.redfearn@mips.com>
    Reviewed-by: James Hogan <jhogan@kernel.org>
    Cc: Matt Redfearn <matt.redfearn@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # v3.15+
    Patchwork: https://patchwork.linux-mips.org/patch/17562/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    [jhogan@kernel.org: Backported 3.15..4.13]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec4fe886f2ca495aabdb35040cb81ec2f3955e7c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 6 20:16:50 2017 +0100

    ALSA: seq: Avoid invalid lockdep class warning
    
    commit 3510c7aa069aa83a2de6dab2b41401a198317bdc upstream.
    
    The recent fix for adding rwsem nesting annotation was using the given
    "hop" argument as the lock subclass key.  Although the idea itself
    works, it may trigger a kernel warning like:
      BUG: looking up invalid subclass: 8
      ....
    since the lockdep has a smaller number of subclasses (8) than we
    currently allow for the hops there (10).
    
    The current definition is merely a sanity check for avoiding the too
    deep delivery paths, and the 8 hops are already enough.  So, as a
    quick fix, just follow the max hops as same as the max lockdep
    subclasses.
    
    Fixes: 1f20f9ff57ca ("ALSA: seq: Fix nested rwsem annotation for lockdep splat")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 015b41bfb10d7ef6444deb49d6ab6c9075be5210
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 7 16:05:24 2017 +0100

    ALSA: seq: Fix OSS sysex delivery in OSS emulation
    
    commit 132d358b183ac6ad8b3fea32ad5e0663456d18d1 upstream.
    
    The SYSEX event delivery in OSS sequencer emulation assumed that the
    event is encoded in the variable-length data with the straight
    buffering.  This was the normal behavior in the past, but during the
    development, the chained buffers were introduced for carrying more
    data, while the OSS code was left intact.  As a result, when a SYSEX
    event with the chained buffer data is passed to OSS sequencer port,
    it may end up with the wrong memory access, as if it were having a too
    large buffer.
    
    This patch addresses the bug, by applying the buffer data expansion by
    the generic snd_seq_dump_var_event() helper function.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reported-by: Mark Salyzyn <salyzyn@android.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1de7a4b242cb783146fe8c5bfe9c6c38b30a707
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Nov 9 08:48:08 2017 +0800

    ALSA: hda - fix headset mic problem for Dell machines with alc274
    
    commit 75ee94b20b46459e3d29f5ac2c3af3cebdeef777 upstream.
    
    Confirmed with Kailang of Realtek, the pin 0x19 is for Headset Mic, and
    the pin 0x1a is for Headphone Mic, he suggested to apply
    ALC269_FIXUP_DELL1_MIC_NO_PRESENCE to fix this problem. And we
    verified applying this FIXUP can fix this problem.
    
    Cc: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd73383a995852fa293e292ed7f06604a351e9a5
Author: Jussi Laako <jussi@sonarnerd.net>
Date:   Wed Nov 1 23:32:33 2017 +0200

    ALSA: usb-audio: support new Amanero Combo384 firmware version
    
    commit f5ce817951f38023588b2b8308beca79abe20507 upstream.
    
    Support DSD_U32_BE sample format on new Amanero Combo384 firmware
    version on older VID/PID.
    
    Fixes: 3eff682d765b ("ALSA: usb-audio: Support both DSD LE/BE Amanero firmware versions")
    Signed-off-by: Jussi Laako <jussi@sonarnerd.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a3ea713f42cca92ce106a2fe79f0cdc01cfdb48
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Nov 5 10:07:43 2017 +0100

    ALSA: timer: Limit max instances per timer
    
    commit 9b7d869ee5a77ed4a462372bb89af622e705bfb8 upstream.
    
    Currently we allow unlimited number of timer instances, and it may
    bring the system hogging way too much CPU when too many timer
    instances are opened and processed concurrently.  This may end up with
    a soft-lockup report as triggered by syzkaller, especially when
    hrtimer backend is deployed.
    
    Since such insane number of instances aren't demanded by the normal
    use case of ALSA sequencer and it merely  opens a risk only for abuse,
    this patch introduces the upper limit for the number of instances per
    timer backend.  As default, it's set to 1000, but for the fine-grained
    timer like hrtimer, it's set to 100.
    
    Reported-by: syzbot
    Tested-by: Jérôme Glisse <jglisse@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a10426d660062e1d1753cd48667a7508a931d3f
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Nov 2 18:44:28 2017 +0100

    ARM: 8720/1: ensure dump_instr() checks addr_limit
    
    commit b9dd05c7002ee0ca8b676428b2268c26399b5e31 upstream.
    
    When CONFIG_DEBUG_USER is enabled, it's possible for a user to
    deliberately trigger dump_instr() with a chosen kernel address.
    
    Let's avoid problems resulting from this by using get_user() rather than
    __get_user(), ensuring that we don't erroneously access kernel memory.
    
    So that we can use the same code to dump user instructions and kernel
    instructions, the common dumping code is factored out to __dump_instr(),
    with the fs manipulated appropriately in dump_instr() around calls to
    this.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcd2b010f17d64f19ac6a1f7cc77d85faf29196a
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Aug 10 00:34:23 2017 +0200

    ACPI / scan: Enable GPEs before scanning the namespace
    
    commit eb7f43c4adb4a789f99f53916182c3401b4e33c7 upstream.
    
    On some systems the platform firmware expects GPEs to be enabled
    before the enumeration of devices and if that expectation is not
    met, the systems in question may not boot in some situations.
    
    For this reason, change the initialization ordering of the ACPI
    subsystem to make it enable GPEs before scanning the namespace
    for the first time in order to enumerate devices.
    
    Reported-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Suggested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Lv Zheng <lv.zheng@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61380235fe7c76ee306565c0f4dd294256e25079
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Aug 10 00:31:58 2017 +0200

    ACPICA: Make it possible to enable runtime GPEs earlier
    
    commit 1312b7e0caca44e7ff312bc2eaa888943384e3e1 upstream.
    
    Runtime GPEs have corresponding _Lxx/_Exx methods and are enabled
    automatically during the initialization of the ACPI subsystem through
    acpi_update_all_gpes() with the assumption that acpi_setup_gpe_for_wake()
    will be called in advance for all of the GPEs pointed to by _PRW
    objects in the namespace that may be affected by acpi_update_all_gpes().
    That is, acpi_ev_initialize_gpe_block() can only be called for a GPE
    block after acpi_setup_gpe_for_wake() has been called for all of the
    _PRW (wakeup) GPEs in it.
    
    The platform firmware on some systems, however, expects GPEs to be
    enabled before the enumeration of devices which is when
    acpi_setup_gpe_for_wake() is called and that goes against the above
    assumption.
    
    For this reason, introduce a new flag to be set by
    acpi_ev_initialize_gpe_block() when automatically enabling a GPE
    to indicate to acpi_setup_gpe_for_wake() that it needs to drop the
    reference to the GPE coming from acpi_ev_initialize_gpe_block()
    and modify acpi_setup_gpe_for_wake() accordingly.  These changes
    allow acpi_setup_gpe_for_wake() and acpi_ev_initialize_gpe_block()
    to be invoked in any order.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d055d4161c9354cd53f33c38bc9699ceeaadf1b5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Aug 10 00:30:09 2017 +0200

    ACPICA: Dispatch active GPEs at init time
    
    commit ecc1165b8b743fd1503b9c799ae3a9933b89877b upstream.
    
    In some cases GPEs are already active when they are enabled by
    acpi_ev_initialize_gpe_block() and whatever happens next may depend
    on the result of handling the events signaled by them, so the
    events should not be discarded (which is what happens currently) and
    they should be handled as soon as reasonably possible.
    
    For this reason, modify acpi_ev_initialize_gpe_block() to
    dispatch GPEs with the status flag set in-band right after
    enabling them.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 398683f48e9379466d95cec5b4b447a6fedd4f12
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Nov 6 23:56:57 2017 +0100

    ACPI / PM: Blacklist Low Power S0 Idle _DSM for Dell XPS13 9360
    
    commit 71630b7a832f699d6a6764ae75797e4e743ae348 upstream.
    
    At least one Dell XPS13 9360 is reported to have serious issues with
    the Low Power S0 Idle _DSM interface and since this machine model
    generally can do ACPI S3 just fine, add a blacklist entry to disable
    that interface for Dell XPS13 9360.
    
    Fixes: 8110dd281e15 (ACPI / sleep: EC-based wakeup from suspend-to-idle on recent systems)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196907
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Tested-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa2a1d79956522f0c8468698b4e908e7e7dd2bd1
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Nov 7 22:29:02 2017 +0000

    KEYS: fix NULL pointer dereference during ASN.1 parsing [ver #2]
    
    commit 624f5ab8720b3371367327a822c267699c1823b8 upstream.
    
    syzkaller reported a NULL pointer dereference in asn1_ber_decoder().  It
    can be reproduced by the following command, assuming
    CONFIG_PKCS7_TEST_KEY=y:
    
            keyctl add pkcs7_test desc '' @s
    
    The bug is that if the data buffer is empty, an integer underflow occurs
    in the following check:
    
            if (unlikely(dp >= datalen - 1))
                    goto data_overrun_error;
    
    This results in the NULL data pointer being dereferenced.
    
    Fix it by checking for 'datalen - dp < 2' instead.
    
    Also fix the similar check for 'dp >= datalen - n' later in the same
    function.  That one possibly could result in a buffer overread.
    
    The NULL pointer dereference was reproducible using the "pkcs7_test" key
    type but not the "asymmetric" key type because the "asymmetric" key type
    checks for a 0-length payload before calling into the ASN.1 decoder but
    the "pkcs7_test" key type does not.
    
    The bug report was:
    
        BUG: unable to handle kernel NULL pointer dereference at           (null)
        IP: asn1_ber_decoder+0x17f/0xe60 lib/asn1_decoder.c:233
        PGD 7b708067 P4D 7b708067 PUD 7b6ee067 PMD 0
        Oops: 0000 [#1] SMP
        Modules linked in:
        CPU: 0 PID: 522 Comm: syz-executor1 Not tainted 4.14.0-rc8 #7
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.3-20171021_125229-anatol 04/01/2014
        task: ffff9b6b3798c040 task.stack: ffff9b6b37970000
        RIP: 0010:asn1_ber_decoder+0x17f/0xe60 lib/asn1_decoder.c:233
        RSP: 0018:ffff9b6b37973c78 EFLAGS: 00010216
        RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000000000021c
        RDX: ffffffff814a04ed RSI: ffffb1524066e000 RDI: ffffffff910759e0
        RBP: ffff9b6b37973d60 R08: 0000000000000001 R09: ffff9b6b3caa4180
        R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000002
        R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
        FS:  00007f10ed1f2700(0000) GS:ffff9b6b3ea00000(0000) knlGS:0000000000000000
        CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        CR2: 0000000000000000 CR3: 000000007b6f3000 CR4: 00000000000006f0
        Call Trace:
         pkcs7_parse_message+0xee/0x240 crypto/asymmetric_keys/pkcs7_parser.c:139
         verify_pkcs7_signature+0x33/0x180 certs/system_keyring.c:216
         pkcs7_preparse+0x41/0x70 crypto/asymmetric_keys/pkcs7_key_type.c:63
         key_create_or_update+0x180/0x530 security/keys/key.c:855
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xbf/0x250 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0xbe
        RIP: 0033:0x4585c9
        RSP: 002b:00007f10ed1f1bd8 EFLAGS: 00000216 ORIG_RAX: 00000000000000f8
        RAX: ffffffffffffffda RBX: 00007f10ed1f2700 RCX: 00000000004585c9
        RDX: 0000000020000000 RSI: 0000000020008ffb RDI: 0000000020008000
        RBP: 0000000000000000 R08: ffffffffffffffff R09: 0000000000000000
        R10: 0000000000000000 R11: 0000000000000216 R12: 00007fff1b2260ae
        R13: 00007fff1b2260af R14: 00007f10ed1f2700 R15: 0000000000000000
        Code: dd ca ff 48 8b 45 88 48 83 e8 01 4c 39 f0 0f 86 a8 07 00 00 e8 53 dd ca ff 49 8d 46 01 48 89 85 58 ff ff ff 48 8b 85 60 ff ff ff <42> 0f b6 0c 30 89 c8 88 8d 75 ff ff ff 83 e0 1f 89 8d 28 ff ff
        RIP: asn1_ber_decoder+0x17f/0xe60 lib/asn1_decoder.c:233 RSP: ffff9b6b37973c78
        CR2: 0000000000000000
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e757e20aa4ec4812db13b7647ee8bd17332159e
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Mon Oct 16 18:51:30 2017 +0300

    crypto: x86/sha256-mb - fix panic due to unaligned access
    
    commit 5dfeaac15f2b1abb5a53c9146041c7235eb9aa04 upstream.
    
    struct sha256_ctx_mgr allocated in sha256_mb_mod_init() via kzalloc()
    and later passed in sha256_mb_flusher_mgr_flush_avx2() function where
    instructions vmovdqa used to access the struct. vmovdqa requires
    16-bytes aligned argument, but nothing guarantees that struct
    sha256_ctx_mgr will have that alignment. Unaligned vmovdqa will
    generate GP fault.
    
    Fix this by replacing vmovdqa with vmovdqu which doesn't have alignment
    requirements.
    
    Fixes: a377c6b1876e ("crypto: sha256-mb - submit/flush routines for AVX2")
    Reported-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Acked-by: Tim Chen
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fddef3ca39ed756e6d3c1bc3bdb2d279b7b1ce4
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Mon Oct 16 18:51:31 2017 +0300

    crypto: x86/sha1-mb - fix panic due to unaligned access
    
    commit d041b557792c85677f17e08eee535eafbd6b9aa2 upstream.
    
    struct sha1_ctx_mgr allocated in sha1_mb_mod_init() via kzalloc()
    and later passed in sha1_mb_flusher_mgr_flush_avx2() function where
    instructions vmovdqa used to access the struct. vmovdqa requires
    16-bytes aligned argument, but nothing guarantees that struct
    sha1_ctx_mgr will have that alignment. Unaligned vmovdqa will
    generate GP fault.
    
    Fix this by replacing vmovdqa with vmovdqu which doesn't have alignment
    requirements.
    
    Fixes: 2249cbb53ead ("crypto: sha-mb - SHA1 multibuffer submit and flush routines for AVX2")
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7014c9e0d0a8176ffdaebaef47450ef1302cafd7
Author: Romain Izard <romain.izard.pro@gmail.com>
Date:   Tue Oct 31 15:42:35 2017 +0100

    crypto: ccm - preserve the IV buffer
    
    commit 441f99c90497e15aa3ad1dbabd56187e29614348 upstream.
    
    The IV buffer used during CCM operations is used twice, during both the
    hashing step and the ciphering step.
    
    When using a hardware accelerator that updates the contents of the IV
    buffer at the end of ciphering operations, the value will be modified.
    In the decryption case, the subsequent setup of the hashing algorithm
    will interpret the updated IV instead of the original value, which can
    lead to out-of-bounds writes.
    
    Reuse the idata buffer, only used in the hashing step, to preserve the
    IV's value during the ciphering step in the decryption case.
    
    Signed-off-by: Romain Izard <romain.izard.pro@gmail.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd641333ef287e1c9f65a57624e5facad13889dd
Author: Li Bin <huawei.libin@huawei.com>
Date:   Sat Oct 28 11:07:28 2017 +0800

    workqueue: Fix NULL pointer dereference
    
    commit cef572ad9bd7f85035ba8272e5352040e8be0152 upstream.
    
    When queue_work() is used in irq (not in task context), there is
    a potential case that trigger NULL pointer dereference.
    ----------------------------------------------------------------
    worker_thread()
    |-spin_lock_irq()
    |-process_one_work()
            |-worker->current_pwq = pwq
            |-spin_unlock_irq()
            |-worker->current_func(work)
            |-spin_lock_irq()
            |-worker->current_pwq = NULL
    |-spin_unlock_irq()
    
                                    //interrupt here
                                    |-irq_handler
                                            |-__queue_work()
                                                    //assuming that the wq is draining
                                                    |-is_chained_work(wq)
                                                            |-current_wq_worker()
                                                            //Here, 'current' is the interrupted worker!
                                                                    |-current->current_pwq is NULL here!
    |-schedule()
    ----------------------------------------------------------------
    
    Avoid it by checking for task context in current_wq_worker(), and
    if not in task context, we shouldn't use the 'current' to check the
    condition.
    
    Reported-by: Xiaofei Tan <tanxiaofei@huawei.com>
    Signed-off-by: Li Bin <huawei.libin@huawei.com>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: 8d03ecfe4718 ("workqueue: reimplement is_chained_work() using current_wq_worker()")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b76ea1ebc79b6a453f93d164b13b25e19cb6a181
Author: Anatole Denis <anatole@rezel.net>
Date:   Wed Oct 4 01:17:14 2017 +0100

    netfilter: nft_set_hash: disable fast_ops for 2-len keys
    
    commit 0414c78f14861cb704d6e6888efd53dd36e3bdde upstream.
    
    jhash_1word of a u16 is a different value from jhash of the same u16 with
    length 2.
    Since elements are always inserted in sets using jhash over the actual
    klen, this would lead to incorrect lookups on fixed-size sets with a key
    length of 2, as they would be inserted with hash value jhash(key, 2) and
    looked up with hash value jhash_1word(key), which is different.
    
    Example reproducer(v4.13+), using anonymous sets which always have a
    fixed size:
    
      table inet t {
          chain c {
                      type filter hook output priority 0; policy accept;
                      tcp dport { 10001, 10003, 10005, 10007, 10009 } counter packets 4 bytes 240 reject
                      tcp dport 10001 counter packets 4 bytes 240 reject
                      tcp dport 10003 counter packets 4 bytes 240 reject
                      tcp dport 10005 counter packets 4 bytes 240 reject
                      tcp dport 10007 counter packets 0 bytes 0 reject
                      tcp dport 10009 counter packets 4 bytes 240 reject
              }
      }
    
    then use nc -z localhost <port> to probe; incorrectly hashed ports will
    pass through the set lookup and increment the counter of an individual
    rule.
    
    jhash being seeded with a random value, it is not deterministic which
    ports will incorrectly hash, but in testing with 5 ports in the set I
    always had 4 or 5 with an incorrect hash value.
    
    Signed-off-by: Anatole Denis <anatole@rezel.net>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d841853c5bdb790be322aeaabf6647c81448513
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Sep 6 14:39:51 2017 +0200

    netfilter: nat: Revert "netfilter: nat: convert nat bysrc hash to rhashtable"
    
    commit e1bf1687740ce1a3598a1c5e452b852ff2190682 upstream.
    
    This reverts commit 870190a9ec9075205c0fa795a09fa931694a3ff1.
    
    It was not a good idea. The custom hash table was a much better
    fit for this purpose.
    
    A fast lookup is not essential, in fact for most cases there is no lookup
    at all because original tuple is not taken and can be used as-is.
    What needs to be fast is insertion and deletion.
    
    rhlist removal however requires a rhlist walk.
    We can have thousands of entries in such a list if source port/addresses
    are reused for multiple flows, if this happens removal requests are so
    expensive that deletions of a few thousand flows can take several
    seconds(!).
    
    The advantages that we got from rhashtable are:
    1) table auto-sizing
    2) multiple locks
    
    1) would be nice to have, but it is not essential as we have at
    most one lookup per new flow, so even a million flows in the bysource
    table are not a problem compared to current deletion cost.
    2) is easy to add to custom hash table.
    
    I tried to add hlist_node to rhlist to speed up rhltable_remove but this
    isn't doable without changing semantics.  rhltable_remove_fast will
    check that the to-be-deleted object is part of the table and that
    requires a list walk that we want to avoid.
    
    Furthermore, using hlist_node increases size of struct rhlist_head, which
    in turn increases nf_conn size.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196821
    Reported-by: Ivan Babrou <ibobrik@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
