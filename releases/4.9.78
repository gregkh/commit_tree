commit 79584a4221253611a4d033087f373b046350df9f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jan 23 19:57:10 2018 +0100

    Linux 4.9.78

commit 60249fe9050bad1bd814dfb1c4ed5fc9155ef5cb
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Sun Oct 29 16:27:21 2017 +0100

    MIPS: AR7: ensure the port type's FCR value is used
    
    commit 0a5191efe06b5103909206e4fbcff81d30283f8e upstream.
    
    Since commit aef9a7bd9b67 ("serial/uart/8250: Add tunable RX interrupt
    trigger I/F of FIFO buffers"), the port's default FCR value isn't used
    in serial8250_do_set_termios anymore, but copied over once in
    serial8250_config_port and then modified as needed.
    
    Unfortunately, serial8250_config_port will never be called if the port
    is shared between kernel and userspace, and the port's flag doesn't have
    UPF_BOOT_AUTOCONF, which would trigger a serial8250_config_port as well.
    
    This causes garbled output from userspace:
    
    [    5.220000] random: procd urandom read with 49 bits of entropy available
    ers
       [kee
    
    Fix this by forcing it to be configured on boot, resulting in the
    expected output:
    
    [    5.250000] random: procd urandom read with 50 bits of entropy available
    Press the [f] key and hit [enter] to enter failsafe mode
    Press the [1], [2], [3] or [4] key and hit [enter] to select the debug level
    
    Fixes: aef9a7bd9b67 ("serial/uart/8250: Add tunable RX interrupt trigger I/F of FIFO buffers")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Yoshihiro YUNOMAE <yoshihiro.yunomae.ez@hitachi.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Nicolas Schichan <nschichan@freebox.fr>
    Cc: linux-mips@linux-mips.org
    Cc: linux-serial@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17544/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06d7342d8498b7426ab50368436417cdf6ed1923
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Jan 17 14:53:28 2018 -0800

    x86/retpoline: Optimize inline assembler for vmexit_fill_RSB
    
    commit 3f7d875566d8e79c5e0b2c9a413e91b2c29e0854 upstream.
    
    The generated assembler for the C fill RSB inline asm operations has
    several issues:
    
    - The C code sets up the loop register, which is then immediately
      overwritten in __FILL_RETURN_BUFFER with the same value again.
    
    - The C code also passes in the iteration count in another register, which
      is not used at all.
    
    Remove these two unnecessary operations. Just rely on the single constant
    passed to the macro for the iterations.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: dave.hansen@intel.com
    Cc: gregkh@linuxfoundation.org
    Cc: torvalds@linux-foundation.org
    Cc: arjan@linux.intel.com
    Link: https://lkml.kernel.org/r/20180117225328.15414-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9f8b5935394362e68147cb2792c5f74ff3fc4ca
Author: zhenwei.pi <zhenwei.pi@youruncloud.com>
Date:   Thu Jan 18 09:04:52 2018 +0800

    x86/pti: Document fix wrong index
    
    commit 98f0fceec7f84d80bc053e49e596088573086421 upstream.
    
    In section <2. Runtime Cost>, fix wrong index.
    
    Signed-off-by: zhenwei.pi <zhenwei.pi@youruncloud.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: dave.hansen@linux.intel.com
    Link: https://lkml.kernel.org/r/1516237492-27739-1-git-send-email-zhenwei.pi@youruncloud.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b71be496642d3c7908a0e40a3073ce5bcf87330
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 19 01:15:20 2018 +0900

    kprobes/x86: Disable optimizing on the function jumps to indirect thunk
    
    commit c86a32c09f8ced67971a2310e3b0dda4d1749007 upstream.
    
    Since indirect jump instructions will be replaced by jump
    to __x86_indirect_thunk_*, those jmp instruction must be
    treated as an indirect jump. Since optprobe prohibits to
    optimize probes in the function which uses an indirect jump,
    it also needs to find out the function which jump to
    __x86_indirect_thunk_* and disable optimization.
    
    Add a check that the jump target address is between the
    __indirect_thunk_start/end when optimizing kprobe.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/151629212062.10241.6991266100233002273.stgit@devbox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36ad6ba501d626f5bac505e6f70ffc54292b76d9
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 19 01:14:51 2018 +0900

    kprobes/x86: Blacklist indirect thunk functions for kprobes
    
    commit c1804a236894ecc942da7dc6c5abe209e56cba93 upstream.
    
    Mark __x86_indirect_thunk_* functions as blacklist for kprobes
    because those functions can be called from anywhere in the kernel
    including blacklist functions of kprobes.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/151629209111.10241.5444852823378068683.stgit@devbox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09402d83395f6b377841bcf9460aeee37501486d
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 19 01:14:21 2018 +0900

    retpoline: Introduce start/end markers of indirect thunk
    
    commit 736e80a4213e9bbce40a7c050337047128b472ac upstream.
    
    Introduce start/end markers of __x86_indirect_thunk_* functions.
    To make it easy, consolidate .text.__x86.indirect_thunk.* sections
    to one .text.__x86.indirect_thunk section and put it in the
    end of kernel text section and adds __indirect_thunk_start/end
    so that other subsystem (e.g. kprobes) can identify it.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Link: https://lkml.kernel.org/r/151629206178.10241.6828804696410044771.stgit@devbox
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5aa687060a85d849574ad014639f93b1dc98ea0
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 18 16:28:26 2018 +0100

    x86/mce: Make machine check speculation protected
    
    commit 6f41c34d69eb005e7848716bbcafc979b35037d5 upstream.
    
    The machine check idtentry uses an indirect branch directly from the low
    level code. This evades the speculation protection.
    
    Replace it by a direct call into C code and issue the indirect call there
    so the compiler can apply the proper speculation protection.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by:Borislav Petkov <bp@alien8.de>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Niced-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801181626290.1847@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87ac29717de8abaa3199eda5ef3c04e2924a6fdc
Author: Shuah Khan <shuah@kernel.org>
Date:   Mon Dec 5 12:56:38 2016 -0700

    usbip: fix warning in vhci_hcd_probe/lockdep_init_map
    
    commit 918b8ac55b6c809b70aa05c279087109584e393e upstream.
    
    vhci_hcd calls sysfs_create_group() with dynamically allocated sysfs
    attributes triggering the lock-class key not persistent warning. Call
    sysfs_attr_init() for dynamically allocated sysfs attributes to fix it.
    
    vhci_hcd vhci_hcd: USB/IP Virtual Host Controller
    vhci_hcd vhci_hcd: new USB bus registered, assigned bus number 2
    BUG: key ffff88006a7e8d18 not in .data!
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 1 at kernel/locking/lockdep.c:3131
    lockdep_init_map+0x60c/0x770
    DEBUG_LOCKS_WARN_ON(1)[    1.567044] Modules linked in:
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 4.9.0-rc7+ #58
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
     ffff88006bce6eb8 ffffffff81f96c8a ffffffff00000a02 1ffff1000d79cd6a
     ffffed000d79cd62 000000046bce6ed8 0000000041b58ab3 ffffffff8598af40
     ffffffff81f969f8 0000000000000000 0000000041b58ab3 0000000000000200
    Call Trace:
     [<     inline     >] __dump_stack lib/dump_stack.c:15
     [<ffffffff81f96c8a>] dump_stack+0x292/0x398 lib/dump_stack.c:51
     [<ffffffff812b808f>] __warn+0x19f/0x1e0 kernel/panic.c:550
     [<ffffffff812b8195>] warn_slowpath_fmt+0xc5/0x110 kernel/panic.c:565
     [<ffffffff813f3efc>] lockdep_init_map+0x60c/0x770 kernel/locking/lockdep.c:3131
     [<ffffffff819e43d4>] __kernfs_create_file+0x114/0x2a0 fs/kernfs/file.c:954
     [<ffffffff819e68f5>] sysfs_add_file_mode_ns+0x225/0x520 fs/sysfs/file.c:305
     [<     inline     >] create_files fs/sysfs/group.c:64
     [<ffffffff819e8a89>] internal_create_group+0x239/0x8f0 fs/sysfs/group.c:134
     [<ffffffff819e915f>] sysfs_create_group+0x1f/0x30 fs/sysfs/group.c:156
     [<ffffffff8323de24>] vhci_start+0x5b4/0x7a0 drivers/usb/usbip/vhci_hcd.c:978
     [<ffffffff82c907ca>] usb_add_hcd+0x8da/0x1c60 drivers/usb/core/hcd.c:2867
     [<ffffffff8323bc57>] vhci_hcd_probe+0x97/0x130
    drivers/usb/usbip/vhci_hcd.c:1103
     ---
     ---
    ---[ end trace c33c7b202cf3aac8 ]---
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d92cf7f29e6ea8565546c5685b34e633300d8e8
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Tue Dec 26 23:43:54 2017 -0600

    x86/cpu, x86/pti: Do not enable PTI on AMD processors
    
    commit 694d99d40972f12e59a3696effee8a376b79d7c8 upstream.
    
    AMD processors are not subject to the types of attacks that the kernel
    page table isolation feature protects against.  The AMD microarchitecture
    does not allow memory references, including speculative references, that
    access higher privileged data when running in a lesser privileged mode
    when that access would result in a page fault.
    
    Disable page table isolation by default on AMD processors by not setting
    the X86_BUG_CPU_INSECURE feature, which controls whether X86_FEATURE_PTI
    is set.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20171227054354.20369.94587.stgit@tlendack-t1.amdoffice.net
    Cc: Nick Lowe <nick.lowe@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddfaa7acd7a27355200457eb56767cf5fcafc1d0
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jan 16 10:23:47 2018 +0000

    arm64: KVM: Fix SMCCC handling of unimplemented SMC/HVC calls
    
    commit acfb3b883f6d6a4b5d27ad7fdded11f6a09ae6dd upstream.
    
    KVM doesn't follow the SMCCC when it comes to unimplemented calls,
    and inject an UNDEF instead of returning an error. Since firmware
    calls are now used for security mitigation, they are becoming more
    common, and the undef is counter productive.
    
    Instead, let's follow the SMCCC which states that -1 must be returned
    to the caller when getting an unknown function number.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2904adc5b1c08894f954bff9e30eb5facb3b6591
Author: Dennis Yang <dennisyang@qnap.com>
Date:   Tue Dec 12 18:21:40 2017 +0800

    dm thin metadata: THIN_MAX_CONCURRENT_LOCKS should be 6
    
    commit 490ae017f54e55bde382d45ea24bddfb6d1a0aaf upstream.
    
    For btree removal, there is a corner case that a single thread
    could takes 6 locks which is more than THIN_MAX_CONCURRENT_LOCKS(5)
    and leads to deadlock.
    
    A btree removal might eventually call
    rebalance_children()->rebalance3() to rebalance entries of three
    neighbor child nodes when shadow_spine has already acquired two
    write locks. In rebalance3(), it tries to shadow and acquire the
    write locks of all three child nodes. However, shadowing a child
    node requires acquiring a read lock of the original child node and
    a write lock of the new block. Although the read lock will be
    released after block shadowing, shadowing the third child node
    in rebalance3() could still take the sixth lock.
    (2 write locks for shadow_spine +
     2 write locks for the first two child nodes's shadow +
     1 write lock for the last child node's shadow +
     1 read lock for the last child node)
    
    Signed-off-by: Dennis Yang <dennisyang@qnap.com>
    Acked-by: Joe Thornber <thornber@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cabf6294a6dc615324f8269b5839de2020dbdaf3
Author: Joe Thornber <thornber@redhat.com>
Date:   Wed Dec 20 09:56:06 2017 +0000

    dm btree: fix serious bug in btree_split_beneath()
    
    commit bc68d0a43560e950850fc69b58f0f8254b28f6d6 upstream.
    
    When inserting a new key/value pair into a btree we walk down the spine of
    btree nodes performing the following 2 operations:
    
      i) space for a new entry
      ii) adjusting the first key entry if the new key is lower than any in the node.
    
    If the _root_ node is full, the function btree_split_beneath() allocates 2 new
    nodes, and redistibutes the root nodes entries between them.  The root node is
    left with 2 entries corresponding to the 2 new nodes.
    
    btree_split_beneath() then adjusts the spine to point to one of the two new
    children.  This means the first key is never adjusted if the new key was lower,
    ie. operation (ii) gets missed out.  This can result in the new key being
    'lost' for a period; until another low valued key is inserted that will uncover
    it.
    
    This is a serious bug, and quite hard to make trigger in normal use.  A
    reproducing test case ("thin create devices-in-reverse-order") is
    available as part of the thin-provision-tools project:
      https://github.com/jthornber/thin-provisioning-tools/blob/master/functional-tests/device-mapper/dm-tests.scm#L593
    
    Fix the issue by changing btree_split_beneath() so it no longer adjusts
    the spine.  Instead it unlocks both the new nodes, and lets the main
    loop in btree_insert_raw() relock the appropriate one and make any
    neccessary adjustments.
    
    Reported-by: Monty Pavel <monty_pavel@sina.com>
    Signed-off-by: Joe Thornber <thornber@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca2d736867200b931ca61383af2fd68bb5fd2ecb
Author: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
Date:   Thu Jan 11 09:53:35 2018 +0900

    workqueue: avoid hard lockups in show_workqueue_state()
    
    commit 62635ea8c18f0f62df4cc58379e4f1d33afd5801 upstream.
    
    show_workqueue_state() can print out a lot of messages while being in
    atomic context, e.g. sysrq-t -> show_workqueue_state(). If the console
    device is slow it may end up triggering NMI hard lockup watchdog.
    
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d314f3bc7f3d0853e38364c95b1d30fb4e33e989
Author: Xinyu Lin <xinyu0123@gmail.com>
Date:   Sun Dec 17 20:13:39 2017 +0800

    libata: apply MAX_SEC_1024 to all LITEON EP1 series devices
    
    commit db5ff909798ef0099004ad50a0ff5fde92426fd1 upstream.
    
    LITEON EP1 has the same timeout issues as CX1 series devices.
    
    Revert max_sectors to the value of 1024.
    
    Fixes: e0edc8c54646 ("libata: apply MAX_SEC_1024 to all CX1-JB*-HP devices")
    Signed-off-by: Xinyu Lin <xinyu0123@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a3f4baaa4c3fa73821c775d684bdc0120ef8e59
Author: Alexey Dobriyan <adobriyan@gmail.com>
Date:   Thu Jan 18 16:34:05 2018 -0800

    proc: fix coredump vs read /proc/*/stat race
    
    commit 8bb2ee192e482c5d500df9f2b1b26a560bd3026f upstream.
    
    do_task_stat() accesses IP and SP of a task without bumping reference
    count of a stack (which became an entity with independent lifetime at
    some point).
    
    Steps to reproduce:
    
        #include <stdio.h>
        #include <sys/types.h>
        #include <sys/stat.h>
        #include <fcntl.h>
        #include <sys/time.h>
        #include <sys/resource.h>
        #include <unistd.h>
        #include <sys/wait.h>
    
        int main(void)
        {
            setrlimit(RLIMIT_CORE, &(struct rlimit){});
    
            while (1) {
                    char buf[64];
                    char buf2[4096];
                    pid_t pid;
                    int fd;
    
                    pid = fork();
                    if (pid == 0) {
                            *(volatile int *)0 = 0;
                    }
    
                    snprintf(buf, sizeof(buf), "/proc/%u/stat", pid);
                    fd = open(buf, O_RDONLY);
                    read(fd, buf2, sizeof(buf2));
                    close(fd);
    
                    waitpid(pid, NULL, 0);
            }
            return 0;
        }
    
        BUG: unable to handle kernel paging request at 0000000000003fd8
        IP: do_task_stat+0x8b4/0xaf0
        PGD 800000003d73e067 P4D 800000003d73e067 PUD 3d558067 PMD 0
        Oops: 0000 [#1] PREEMPT SMP PTI
        CPU: 0 PID: 1417 Comm: a.out Not tainted 4.15.0-rc8-dirty #2
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1.fc27 04/01/2014
        RIP: 0010:do_task_stat+0x8b4/0xaf0
        Call Trace:
         proc_single_show+0x43/0x70
         seq_read+0xe6/0x3b0
         __vfs_read+0x1e/0x120
         vfs_read+0x84/0x110
         SyS_read+0x3d/0xa0
         entry_SYSCALL_64_fastpath+0x13/0x6c
        RIP: 0033:0x7f4d7928cba0
        RSP: 002b:00007ffddb245158 EFLAGS: 00000246
        Code: 03 b7 a0 01 00 00 4c 8b 4c 24 70 4c 8b 44 24 78 4c 89 74 24 18 e9 91 f9 ff ff f6 45 4d 02 0f 84 fd f7 ff ff 48 8b 45 40 48 89 ef <48> 8b 80 d8 3f 00 00 48 89 44 24 20 e8 9b 97 eb ff 48 89 44 24
        RIP: do_task_stat+0x8b4/0xaf0 RSP: ffffc90000607cc8
        CR2: 0000000000003fd8
    
    John Ogness said: for my tests I added an else case to verify that the
    race is hit and correctly mitigated.
    
    Link: http://lkml.kernel.org/r/20180116175054.GA11513@avx2
    Signed-off-by: Alexey Dobriyan <adobriyan@gmail.com>
    Reported-by: "Kohli, Gaurav" <gkohli@codeaurora.org>
    Tested-by: John Ogness <john.ogness@linutronix.de>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43c3e093c26d7707b36241d579a35eaa0f4cd91f
Author: Xi Kangjie <imxikangjie@gmail.com>
Date:   Thu Jan 18 16:34:00 2018 -0800

    scripts/gdb/linux/tasks.py: fix get_thread_info
    
    commit 883d50f56d263f70fd73c0d96b09eb36c34e9305 upstream.
    
    Since kernel 4.9, the thread_info has been moved into task_struct, no
    longer locates at the bottom of kernel stack.
    
    See commits c65eacbe290b ("sched/core: Allow putting thread_info into
    task_struct") and 15f4eae70d36 ("x86: Move thread_info into
    task_struct").
    
    Before fix:
      (gdb) set $current = $lx_current()
      (gdb) p $lx_thread_info($current)
      $1 = {flags = 1470918301}
      (gdb) p $current.thread_info
      $2 = {flags = 2147483648}
    
    After fix:
      (gdb) p $lx_thread_info($current)
      $1 = {flags = 2147483648}
      (gdb) p $current.thread_info
      $2 = {flags = 2147483648}
    
    Link: http://lkml.kernel.org/r/20180118210159.17223-1-imxikangjie@gmail.com
    Fixes: 15f4eae70d36 ("x86: Move thread_info into task_struct")
    Signed-off-by: Xi Kangjie <imxikangjie@gmail.com>
    Acked-by: Jan Kiszka <jan.kiszka@siemens.com>
    Acked-by: Kieran Bingham <kbingham@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23d68eddd857d9bbc68ebd8d22255999c155823a
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Mon Jan 15 16:31:19 2018 +0100

    can: peak: fix potential bug in packet fragmentation
    
    commit d8a243af1a68395e07ac85384a2740d4134c67f4 upstream.
    
    In some rare conditions when running one PEAK USB-FD interface over
    a non high-speed USB controller, one useless USB fragment might be sent.
    This patch fixes the way a USB command is fragmented when its length is
    greater than 64 bytes and when the underlying USB controller is not a
    high-speed one.
    
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19f47eafe10c2ced548c381970e2cf7b3db77ba7
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Thu Jan 4 17:53:12 2018 +0100

    ARM: dts: kirkwood: fix pin-muxing of MPP7 on OpenBlocks A7
    
    commit 56aeb07c914a616ab84357d34f8414a69b140cdf upstream.
    
    MPP7 is currently muxed as "gpio", but this function doesn't exist for
    MPP7, only "gpo" is available. This causes the following error:
    
    kirkwood-pinctrl f1010000.pin-controller: unsupported function gpio on pin mpp7
    pinctrl core: failed to register map default (6): invalid type given
    kirkwood-pinctrl f1010000.pin-controller: error claiming hogs: -22
    kirkwood-pinctrl f1010000.pin-controller: could not claim hogs: -22
    kirkwood-pinctrl f1010000.pin-controller: unable to register pinctrl driver
    kirkwood-pinctrl: probe of f1010000.pin-controller failed with error -22
    
    So the pinctrl driver is not probed, all device drivers (including the
    UART driver) do a -EPROBE_DEFER, and therefore the system doesn't
    really boot (well, it boots, but with no UART, and no devices that
    require pin-muxing).
    
    Back when the Device Tree file for this board was introduced, the
    definition was already wrong. The pinctrl driver also always described
    as "gpo" this function for MPP7. However, between Linux 4.10 and 4.11,
    a hog pin failing to be muxed was turned from a simple warning to a
    hard error that caused the entire pinctrl driver probe to bail
    out. This is probably the result of commit 6118714275f0a ("pinctrl:
    core: Fix pinctrl_register_and_init() with pinctrl_enable()").
    
    This commit fixes the Device Tree to use the proper "gpo" function for
    MPP7, which fixes the boot of OpenBlocks A7, which was broken since
    Linux 4.11.
    
    Fixes: f24b56cbcd9d ("ARM: kirkwood: add support for OpenBlocks A7 platform")
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f32f15ec73c76e5136ca9c42bc26c9526700c44
Author: Maxime Ripard <mripard@kernel.org>
Date:   Fri Jan 19 14:32:08 2018 +0100

    ARM: sunxi_defconfig: Enable CMA
    
    commit c13e7f313da33d1488355440f1a10feb1897480a upstream.
    
    The DRM driver most notably, but also out of tree drivers (for now) like
    the VPU or GPU drivers, are quite big consumers of large, contiguous memory
    buffers. However, the sunxi_defconfig doesn't enable CMA in order to
    mitigate that, which makes them almost unusable.
    
    Enable it to make sure it somewhat works.
    
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 969e2145eb4a069a60e8b090aa7e8b8aa0efc365
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jan 12 11:12:05 2018 +0100

    phy: work around 'phys' references to usb-nop-xceiv devices
    
    commit b7563e2796f8b23c98afcfea7363194227fa089d upstream.
    
    Stefan Wahren reports a problem with a warning fix that was merged
    for v4.15: we had lots of device nodes with a 'phys' property pointing
    to a device node that is not compliant with the binding documented in
    Documentation/devicetree/bindings/phy/phy-bindings.txt
    
    This generally works because USB HCD drivers that support both the generic
    phy subsystem and the older usb-phy subsystem ignore most errors from
    phy_get() and related calls and then use the usb-phy driver instead.
    
    However, it turns out that making the usb-nop-xceiv device compatible with
    the generic-phy binding changes the phy_get() return code from -EINVAL to
    -EPROBE_DEFER, and the dwc2 usb controller driver for bcm2835 now returns
    -EPROBE_DEFER from its probe function rather than ignoring the failure,
    breaking all USB support on raspberry-pi when CONFIG_GENERIC_PHY is
    enabled. The same code is used in the dwc3 driver and the usb_add_hcd()
    function, so a reasonable assumption would be that many other platforms
    are affected as well.
    
    I have reviewed all the related patches and concluded that "usb-nop-xceiv"
    is the only USB phy that is affected by the change, and since it is by far
    the most commonly referenced phy, all the other USB phy drivers appear
    to be used in ways that are are either safe in DT (they don't use the
    'phys' property), or in the driver (they already ignore -EPROBE_DEFER
    from generic-phy when usb-phy is available).
    
    To work around the problem, this adds a special case to _of_phy_get()
    so we ignore any PHY node that is compatible with "usb-nop-xceiv",
    as we know that this can never load no matter how much we defer. In the
    future, we might implement a generic-phy driver for "usb-nop-xceiv"
    and then remove this workaround.
    
    Since we generally want older kernels to also want to work with the
    fixed devicetree files, it would be good to backport the patch into
    stable kernels as well (3.13+ are possibly affected), even though they
    don't contain any of the patches that may have caused regressions.
    
    Fixes: 014d6da6cb25 ARM: dts: bcm283x: Fix DTC warnings about missing phy-cells
    Fixes: c5bbf358b790 arm: dts: nspire: Add missing #phy-cells to usb-nop-xceiv
    Fixes: 44e5dced2ef6 arm: dts: marvell: Add missing #phy-cells to usb-nop-xceiv
    Fixes: f568f6f554b8 ARM: dts: omap: Add missing #phy-cells to usb-nop-xceiv
    Fixes: d745d5f277bf ARM: dts: imx51-zii-rdu1: Add missing #phy-cells to usb-nop-xceiv
    Fixes: 915fbe59cbf2 ARM: dts: imx: Add missing #phy-cells to usb-nop-xceiv
    Link: https://marc.info/?l=linux-usb&m=151518314314753&w=2
    Link: https://patchwork.kernel.org/patch/10158145/
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Eric Anholt <eric@anholt.net>
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Tested-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a50ea0ce7cc2f3b0115942aa313fcbce7f5183a
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Jan 18 15:53:10 2018 -0500

    tracing: Fix converting enum's from the map in trace_event_eval_update()
    
    commit 1ebe1eaf2f02784921759992ae1fde1a9bec8fd0 upstream.
    
    Since enums do not get converted by the TRACE_EVENT macro into their values,
    the event format displaces the enum name and not the value. This breaks
    tools like perf and trace-cmd that need to interpret the raw binary data. To
    solve this, an enum map was created to convert these enums into their actual
    numbers on boot up. This is done by TRACE_EVENTS() adding a
    TRACE_DEFINE_ENUM() macro.
    
    Some enums were not being converted. This was caused by an optization that
    had a bug in it.
    
    All calls get checked against this enum map to see if it should be converted
    or not, and it compares the call's system to the system that the enum map
    was created under. If they match, then they call is processed.
    
    To cut down on the number of iterations needed to find the maps with a
    matching system, since calls and maps are grouped by system, when a match is
    made, the index into the map array is saved, so that the next call, if it
    belongs to the same system as the previous call, could start right at that
    array index and not have to scan all the previous arrays.
    
    The problem was, the saved index was used as the variable to know if this is
    a call in a new system or not. If the index was zero, it was assumed that
    the call is in a new system and would keep incrementing the saved index
    until it found a matching system. The issue arises when the first matching
    system was at index zero. The next map, if it belonged to the same system,
    would then think it was the first match and increment the index to one. If
    the next call belong to the same system, it would begin its search of the
    maps off by one, and miss the first enum that should be converted. This left
    a single enum not converted properly.
    
    Also add a comment to describe exactly what that index was for. It took me a
    bit too long to figure out what I was thinking when debugging this issue.
    
    Link: http://lkml.kernel.org/r/717BE572-2070-4C1E-9902-9F2E0FEDA4F8@oracle.com
    
    Fixes: 0c564a538aa93 ("tracing: Add TRACE_DEFINE_ENUM() macro to map enums to their values")
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Teste-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb513d1414f910f3c30781cd5491ca57db2cae2f
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 8 17:15:06 2018 -0800

    Input: twl4030-vibra - fix sibling-node lookup
    
    commit 5b189201993ab03001a398de731045bfea90c689 upstream.
    
    A helper purported to look up a child node based on its name was using
    the wrong of-helper and ended up prematurely freeing the parent of-node
    while searching the whole device tree depth-first starting at the parent
    node.
    
    Fixes: 64b9e4d803b1 ("input: twl4030-vibra: Support for DT booted kernel")
    Fixes: e661d0a04462 ("Input: twl4030-vibra - fix ERROR: Bad of_node_put() warning")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaabab6468b395e5d5fb66d7fd3363f96de3e61f
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 8 17:17:48 2018 -0800

    Input: twl6040-vibra - fix child-node lookup
    
    commit dcaf12a8b0bbdbfcfa2be8dff2c4948d9844b4ad upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at parent rather than just matching on
    its children.
    
    Later sanity checks on node properties (which would likely be missing)
    should prevent this from causing much trouble however, especially as the
    original premature free of the parent node has already been fixed
    separately (but that "fix" was apparently never backported to stable).
    
    Fixes: e7ec014a47e4 ("Input: twl6040-vibra - update for device tree support")
    Fixes: c52c545ead97 ("Input: twl6040-vibra - fix DT node memory management")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Tested-by: H. Nikolaus Schaller <hns@goldelico.com> (on Pyra OMAP5 hardware)
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be13b3357e12398bac998725437be64f0acc6fb
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 8 17:20:18 2018 -0800

    Input: 88pm860x-ts - fix child-node lookup
    
    commit 906bf7daa0618d0ef39f4872ca42218c29a3631f upstream.
    
    Fix child node-lookup during probe, which ended up searching the whole
    device tree depth-first starting at parent rather than just matching on
    its children.
    
    To make things worse, the parent node was prematurely freed, while the
    child node was leaked.
    
    Fixes: 2e57d56747e6 ("mfd: 88pm860x: Device tree support")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 607b86e173522b806d6721a4dba0b291178d5e4c
Author: Nir Perry <nirperry@gmail.com>
Date:   Thu Jan 11 23:43:26 2018 -0800

    Input: ALPS - fix multi-touch decoding on SS4 plus touchpads
    
    commit 4d94e776bd29670f01befa27e12df784fa05fa2e upstream.
    
    The fix for handling two-finger scroll (i4a646580f793 - "Input: ALPS -
    fix two-finger scroll breakage in right side on ALPS touchpad")
    introduced a minor "typo" that broke decoding of multi-touch events are
    decoded on some ALPS touchpads.  For example, tapping with three-fingers
    can no longer be used to emulate middle-mouse-button (the kernel doesn't
    recognize this as the proper event, and doesn't report it correctly to
    userspace).  This affects touchpads that use SS4 "plus" protocol
    variant, like those found on Dell E7270 & E7470 laptops (tested on
    E7270).
    
    First, probably the code in alps_decode_ss4_v2() for case
    SS4_PACKET_ID_MULTI used inconsistent indices to "f->mt[]". You can see
    0 & 1 are used for the "if" part but 2 & 3 are used for the "else" part.
    
    Second, in the previous patch, new macros were introduced to decode X
    coordinates specific to the SS4 "plus" variant, but the macro to
    define the maximum X value wasn't changed accordingly. The macros to
    decode X values for "plus" variant are effectively shifted right by 1
    bit, but the max wasn't shifted too. This causes the driver to
    incorrectly handle "no data" cases, which also interfered with how
    multi-touch was handled.
    
    Fixes: 4a646580f793 ("Input: ALPS - fix two-finger scroll breakage...")
    Signed-off-by: Nir Perry <nirperry@gmail.com>
    Reviewed-by: Masaki Ota <masaki.ota@jp.alps.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9792f9b483cddf47ec355fbc165c763fc7c24c32
Author: Jiada Wang <jiada_wang@mentor.com>
Date:   Sun Apr 9 20:02:37 2017 -0700

    perf tools: Fix build with ARCH=x86_64
    
    commit 7a759cd8e8272ee18922838ee711219c7c796a31 upstream.
    
    With commit: 0a943cb10ce78 (tools build: Add HOSTARCH Makefile variable)
    when building for ARCH=x86_64, ARCH=x86_64 is passed to perf instead of
    ARCH=x86, so the perf build process searchs header files from
    tools/arch/x86_64/include, which doesn't exist.
    
    The following build failure is seen:
    
      In file included from util/event.c:2:0:
        tools/include/uapi/linux/mman.h:4:27: fatal error: uapi/asm/mman.h: No such file or directory
        compilation terminated.
    
    Fix this issue by using SRCARCH instead of ARCH in perf, just like the
    main kernel Makefile and tools/objtool's.
    
    Signed-off-by: Jiada Wang <jiada_wang@mentor.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Eugeniu Rosca <erosca@de.adit-jv.com>
    Cc: Jan Stancek <jstancek@redhat.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Cc: Rui Teng <rui.teng@linux.vnet.ibm.com>
    Cc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Fixes: 0a943cb10ce7 ("tools build: Add HOSTARCH Makefile variable")
    Link: http://lkml.kernel.org/r/1491793357-14977-2-git-send-email-jiada_wang@mentor.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c557481a9491fe3c711ce2dd490fecac55950eab
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 16 12:20:18 2018 +0100

    x86/apic/vector: Fix off by one in error path
    
    commit 45d55e7bac4028af93f5fa324e69958a0b868e96 upstream.
    
    Keith reported the following warning:
    
    WARNING: CPU: 28 PID: 1420 at kernel/irq/matrix.c:222 irq_matrix_remove_managed+0x10f/0x120
      x86_vector_free_irqs+0xa1/0x180
      x86_vector_alloc_irqs+0x1e4/0x3a0
      msi_domain_alloc+0x62/0x130
    
    The reason for this is that if the vector allocation fails the error
    handling code tries to free the failed vector as well, which causes the
    above imbalance warning to trigger.
    
    Adjust the error path to handle this correctly.
    
    Fixes: b5dc8e6c21e7 ("x86/irq: Use hierarchical irqdomain to manage CPU interrupt vectors")
    Reported-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Keith Busch <keith.busch@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801161217300.1823@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b13f593565f98a68f8e97415a16589d9826fa79
Author: Joe Lawrence <joe.lawrence@redhat.com>
Date:   Fri Nov 17 15:29:21 2017 -0800

    pipe: avoid round_pipe_size() nr_pages overflow on 32-bit
    
    commit d3f14c485867cfb2e0c48aa88c41d0ef4bf5209c upstream.
    
    round_pipe_size() contains a right-bit-shift expression which may
    overflow, which would cause undefined results in a subsequent
    roundup_pow_of_two() call.
    
      static inline unsigned int round_pipe_size(unsigned int size)
      {
              unsigned long nr_pages;
    
              nr_pages = (size + PAGE_SIZE - 1) >> PAGE_SHIFT;
              return roundup_pow_of_two(nr_pages) << PAGE_SHIFT;
      }
    
    PAGE_SIZE is defined as (1UL << PAGE_SHIFT), so:
      - 4 bytes wide on 32-bit (0 to 0xffffffff)
      - 8 bytes wide on 64-bit (0 to 0xffffffffffffffff)
    
    That means that 32-bit round_pipe_size(), nr_pages may overflow to 0:
    
      size=0x00000000    nr_pages=0x0
      size=0x00000001    nr_pages=0x1
      size=0xfffff000    nr_pages=0xfffff
      size=0xfffff001    nr_pages=0x0         << !
      size=0xffffffff    nr_pages=0x0         << !
    
    This is bad because roundup_pow_of_two(n) is undefined when n == 0!
    
    64-bit is not a problem as the unsigned int size is 4 bytes wide
    (similar to 32-bit) and the larger, 8 byte wide unsigned long, is
    sufficient to handle the largest value of the bit shift expression:
    
      size=0xffffffff    nr_pages=100000
    
    Modify round_pipe_size() to return 0 if n == 0 and updates its callers to
    handle accordingly.
    
    Link: http://lkml.kernel.org/r/1507658689-11669-3-git-send-email-joe.lawrence@redhat.com
    Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Michael Kerrisk <mtk.manpages@gmail.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Dong Jinguang <dongjinguang@huawei.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02802dfc82a2bd88a359c4ac85807c4d4d08f9bb
Author: Len Brown <len.brown@intel.com>
Date:   Fri Dec 22 00:27:55 2017 -0500

    x86/tsc: Fix erroneous TSC rate on Skylake Xeon
    
    commit b511203093489eb1829cb4de86e8214752205ac6 upstream.
    
    The INTEL_FAM6_SKYLAKE_X hardcoded crystal_khz value of 25MHZ is
    problematic:
    
     - SKX workstations (with same model # as server variants) use a 24 MHz
       crystal.  This results in a -4.0% time drift rate on SKX workstations.
    
     - SKX servers subject the crystal to an EMI reduction circuit that reduces its
       actual frequency by (approximately) -0.25%.  This results in -1 second per
       10 minute time drift as compared to network time.
    
    This issue can also trigger a timer and power problem, on configurations
    that use the LAPIC timer (versus the TSC deadline timer).  Clock ticks
    scheduled with the LAPIC timer arrive a few usec before the time they are
    expected (according to the slow TSC).  This causes Linux to poll-idle, when
    it should be in an idle power saving state.  The idle and clock code do not
    graciously recover from this error, sometimes resulting in significant
    polling and measurable power impact.
    
    Stop using native_calibrate_tsc() for INTEL_FAM6_SKYLAKE_X.
    native_calibrate_tsc() will return 0, boot will run with tsc_khz = cpu_khz,
    and the TSC refined calibration will update tsc_khz to correct for the
    difference.
    
    [ tglx: Sanitized change log ]
    
    Fixes: 6baf3d61821f ("x86/tsc: Add additional Intel CPU models to the crystal quirk list")
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: Prarit Bhargava <prarit@redhat.com>
    Link: https://lkml.kernel.org/r/ff6dcea166e8ff8f2f6a03c17beab2cb436aa779.1513920414.git.len.brown@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ab44e8f0f0d6cde6f7b77eff73ca27bce499950
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Jan 12 14:31:35 2018 -0600

    x86/mm/pkeys: Fix fill_sig_info_pkey
    
    commit beacd6f7ed5e2915959442245b3b2480c2e37490 upstream.
    
    SEGV_PKUERR is a signal specific si_code which happens to have the same
    numeric value as several others: BUS_MCEERR_AR, ILL_ILLTRP, FPE_FLTOVF,
    TRAP_HWBKPT, CLD_TRAPPED, POLL_ERR, SEGV_THREAD_ID, as such it is not safe
    to just test the si_code the signal number must also be tested to prevent a
    false positive in fill_sig_info_pkey.
    
    This error was by inspection, and BUS_MCEERR_AR appears to be a real
    candidate for confusion.  So pass in si_signo and check for SIG_SEGV to
    verify that it is actually a SEGV_PKUERR
    
    Fixes: 019132ff3daf ("x86/mm/pkeys: Fill in pkey field in siginfo")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Link: https://lkml.kernel.org/r/20180112203135.4669-2-ebiederm@xmission.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eee0cba7b02f21110a443867401b41dc25a60777
Author: Andi Kleen <ak@linux.intel.com>
Date:   Tue Jan 16 12:52:28 2018 -0800

    module: Add retpoline tag to VERMAGIC
    
    commit 6cfb521ac0d5b97470883ff9b7facae264b7ab12 upstream.
    
    Add a marker for retpoline to the module VERMAGIC. This catches the case
    when a non RETPOLINE compiled module gets loaded into a retpoline kernel,
    making it insecure.
    
    It doesn't handle the case when retpoline has been runtime disabled.  Even
    in this case the match of the retcompile status will be enforced.  This
    implies that even with retpoline run time disabled all modules loaded need
    to be recompiled.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: rusty@rustcorp.com.au
    Cc: arjan.van.de.ven@intel.com
    Cc: jeyu@kernel.org
    Cc: torvalds@linux-foundation.org
    Link: https://lkml.kernel.org/r/20180116205228.4890-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a96cf98dda3f06a5e5eb3d393dba35a9424a7e13
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Jan 16 16:42:25 2018 +0100

    x86/cpufeature: Move processor tracing out of scattered features
    
    commit 4fdec2034b7540dda461c6ba33325dfcff345c64 upstream.
    
    Processor tracing is already enumerated in word 9 (CPUID[7,0].EBX),
    so do not duplicate it in the scattered features word.
    
    Besides being more tidy, this will be useful for KVM when it presents
    processor tracing to the guests.  KVM selects host features that are
    supported by both the host kernel (depending on command line options,
    CPU errata, or whatever) and KVM.  Whenever a full feature word exists,
    KVM's code is written in the expectation that the CPUID bit number
    matches the X86_FEATURE_* bit number, but this is not the case for
    X86_FEATURE_INTEL_PT.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luwei Kang <luwei.kang@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kvm@vger.kernel.org
    Link: http://lkml.kernel.org/r/1516117345-34561-1-git-send-email-pbonzini@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13ccac5de85305cd1388ffa8b1e20b010373d76f
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Mon Jan 15 08:17:08 2018 -0600

    objtool: Improve error message for bad file argument
    
    commit 385d11b152c4eb638eeb769edcb3249533bb9a00 upstream.
    
    If a nonexistent file is supplied to objtool, it complains with a
    non-helpful error:
    
      open: No such file or directory
    
    Improve it to:
    
      objtool: Can't open 'foo': No such file or directory
    
    Reported-by: Markus <M4rkusXXL@web.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/406a3d00a21225eee2819844048e17f68523ccf6.1516025651.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b73d68788f79a4906a5ef977fca58297a3d22482
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Sat Jan 13 17:27:30 2018 -0600

    x86/retpoline: Add LFENCE to the retpoline/RSB filling RSB macros
    
    commit 28d437d550e1e39f805d99f9f8ac399c778827b7 upstream.
    
    The PAUSE instruction is currently used in the retpoline and RSB filling
    macros as a speculation trap.  The use of PAUSE was originally suggested
    because it showed a very, very small difference in the amount of
    cycles/time used to execute the retpoline as compared to LFENCE.  On AMD,
    the PAUSE instruction is not a serializing instruction, so the pause/jmp
    loop will use excess power as it is speculated over waiting for return
    to mispredict to the correct target.
    
    The RSB filling macro is applicable to AMD, and, if software is unable to
    verify that LFENCE is serializing on AMD (possible when running under a
    hypervisor), the generic retpoline support will be used and, so, is also
    applicable to AMD.  Keep the current usage of PAUSE for Intel, but add an
    LFENCE instruction to the speculation trap for AMD.
    
    The same sequence has been adopted by GCC for the GCC generated retpolines.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@alien8.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Paul Turner <pjt@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Kees Cook <keescook@google.com>
    Link: https://lkml.kernel.org/r/20180113232730.31060.36287.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abf67b1e788194a2d13a8e77f05a44cbf9eae655
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Fri Jan 12 17:49:25 2018 +0000

    x86/retpoline: Fill RSB on context switch for affected CPUs
    
    commit c995efd5a740d9cbafbf58bde4973e8b50b4d761 upstream.
    
    On context switch from a shallow call stack to a deeper one, as the CPU
    does 'ret' up the deeper side it may encounter RSB entries (predictions for
    where the 'ret' goes to) which were populated in userspace.
    
    This is problematic if neither SMEP nor KPTI (the latter of which marks
    userspace pages as NX for the kernel) are active, as malicious code in
    userspace may then be executed speculatively.
    
    Overwrite the CPU's return prediction stack with calls which are predicted
    to return to an infinite loop, to "capture" speculation if this
    happens. This is required both for retpoline, and also in conjunction with
    IBRS for !SMEP && !KPTI.
    
    On Skylake+ the problem is slightly different, and an *underflow* of the
    RSB may cause errant branch predictions to occur. So there it's not so much
    overwrite, as *filling* the RSB to attempt to prevent it getting
    empty. This is only a partial solution for Skylake+ since there are many
    other conditions which may result in the RSB becoming empty. The full
    solution on Skylake+ is to use IBRS, which will prevent the problem even
    when the RSB becomes empty. With IBRS, the RSB-stuffing will not be
    required on context switch.
    
    [ tglx: Added missing vendor check and slighty massaged comments and
            changelog ]
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/1515779365-9032-1-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ad4f2872c3b93216313a18bbf6e9f6d90e573d3
Author: Xunlei Pang <xlpang@redhat.com>
Date:   Wed May 10 21:03:37 2017 +0800

    sched/deadline: Zero out positive runtime after throttling constrained tasks
    
    commit ae83b56a56f8d9643dedbee86b457fa1c5d42f59 upstream.
    
    When a contrained task is throttled by dl_check_constrained_dl(),
    it may carry the remaining positive runtime, as a result when
    dl_task_timer() fires and calls replenish_dl_entity(), it will
    not be replenished correctly due to the positive dl_se->runtime.
    
    This patch assigns its runtime to 0 if positive after throttling.
    
    Signed-off-by: Xunlei Pang <xlpang@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Cc: Juri Lelli <juri.lelli@arm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luca Abeni <luca.abeni@santannapisa.it>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: df8eac8cafce ("sched/deadline: Throttle a constrained deadline task activated after the deadline)
    Link: http://lkml.kernel.org/r/1494421417-27550-1-git-send-email-xlpang@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 997231f9fd7a4a8ad7c862736ab571e99d3800cb
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Mon Mar 20 16:42:48 2017 +0100

    scsi: hpsa: fix volume offline state
    
    commit eb94588dabec82e012281608949a860f64752914 upstream.
    
    In a previous patch a hpsa_scsi_dev_t.volume_offline update line has
    been removed, so let us put it back..
    
    Fixes: 85b29008d8 (hpsa: update check for logical volume status)
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Acked-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d303d0ca9afb8e5f644e1392c684d44308bab96e
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Nov 26 15:31:04 2017 +0200

    iser-target: Fix possible use-after-free in connection establishment error
    
    commit cd52cb26e7ead5093635e98e07e221e4df482d34 upstream.
    
    In case we fail to establish the connection we must drain our pre-posted
    login recieve work request before continuing safely with connection
    teardown.
    
    Fixes: a060b5629ab0 ("IB/core: generic RDMA READ/WRITE API")
    Reported-by: Amrani, Ram <Ram.Amrani@cavium.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0476e6d0b7521d78cbdc9e99e6cbbf616d849042
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 18:15:23 2017 -0600

    af_key: fix buffer overread in parse_exthdrs()
    
    commit 4e765b4972af7b07adcb1feb16e7a525ce1f6b28 upstream.
    
    If a message sent to a PF_KEY socket ended with an incomplete extension
    header (fewer than 4 bytes remaining), then parse_exthdrs() read past
    the end of the message, into uninitialized memory.  Fix it by returning
    -EINVAL in this case.
    
    Reproducer:
    
            #include <linux/pfkeyv2.h>
            #include <sys/socket.h>
            #include <unistd.h>
    
            int main()
            {
                    int sock = socket(PF_KEY, SOCK_RAW, PF_KEY_V2);
                    char buf[17] = { 0 };
                    struct sadb_msg *msg = (void *)buf;
    
                    msg->sadb_msg_version = PF_KEY_V2;
                    msg->sadb_msg_type = SADB_DELETE;
                    msg->sadb_msg_len = 2;
    
                    write(sock, buf, 17);
            }
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4dc05ab8f5af1e26064f674fb475f44e687b397
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 18:13:05 2017 -0600

    af_key: fix buffer overread in verify_address_len()
    
    commit 06b335cb51af018d5feeff5dd4fd53847ddb675a upstream.
    
    If a message sent to a PF_KEY socket ended with one of the extensions
    that takes a 'struct sadb_address' but there were not enough bytes
    remaining in the message for the ->sa_family member of the 'struct
    sockaddr' which is supposed to follow, then verify_address_len() read
    past the end of the message, into uninitialized memory.  Fix it by
    returning -EINVAL in this case.
    
    This bug was found using syzkaller with KMSAN.
    
    Reproducer:
    
            #include <linux/pfkeyv2.h>
            #include <sys/socket.h>
            #include <unistd.h>
    
            int main()
            {
                    int sock = socket(PF_KEY, SOCK_RAW, PF_KEY_V2);
                    char buf[24] = { 0 };
                    struct sadb_msg *msg = (void *)buf;
                    struct sadb_address *addr = (void *)(msg + 1);
    
                    msg->sadb_msg_version = PF_KEY_V2;
                    msg->sadb_msg_type = SADB_DELETE;
                    msg->sadb_msg_len = 3;
                    addr->sadb_address_len = 1;
                    addr->sadb_address_exttype = SADB_EXT_ADDRESS_SRC;
    
                    write(sock, buf, 24);
            }
    
    Reported-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 676109b28cadbb9c6e6fedee733f3b2111923f17
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 14 23:19:49 2018 +0100

    timers: Unconditionally check deferrable base
    
    commit ed4bbf7910b28ce3c691aef28d245585eaabda06 upstream.
    
    When the timer base is checked for expired timers then the deferrable base
    must be checked as well. This was missed when making the deferrable base
    independent of base::nohz_active.
    
    Fixes: ced6d5c11d3e ("timers: Use deferrable base independent of base::nohz_active")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: rt@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b6e681f595224618feae64cb8299224e218f1eb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 10:53:18 2018 +0100

    ALSA: hda - Apply the existing quirk to iMac 14,1
    
    commit 031f335cda879450095873003abb03ae8ed3b74a upstream.
    
    iMac 14,1 requires the same quirk as iMac 12,2, using GPIO 2 and 3 for
    headphone and speaker output amps.  Add the codec SSID quirk entry
    (106b:0600) accordingly.
    
    BugLink: http://lkml.kernel.org/r/CAEw6Zyteav09VGHRfD5QwsfuWv5a43r0tFBNbfcHXoNrxVz7ew@mail.gmail.com
    Reported-by: Freaky <freaky2000@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fae704d5bd29771974e8cfe5f84480d9871b18cb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 08:34:28 2018 +0100

    ALSA: hda - Apply headphone noise quirk for another Dell XPS 13 variant
    
    commit e4c9fd10eb21376f44723c40ad12395089251c28 upstream.
    
    There is another Dell XPS 13 variant (SSID 1028:082a) that requires
    the existing fixup for reducing the headphone noise.
    This patch adds the quirk entry for that.
    
    BugLink: http://lkml.kernel.org/r/CAHXyb9ZCZJzVisuBARa+UORcjRERV8yokez=DP1_5O5isTz0ZA@mail.gmail.com
    Reported-and-tested-by: Francisco G. <frangio.1@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9e168a0c629761774df687e88fca7e0e47381bf
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 23:48:05 2018 +0100

    ALSA: pcm: Remove yet superfluous WARN_ON()
    
    commit 23b19b7b50fe1867da8d431eea9cd3e4b6328c2c upstream.
    
    muldiv32() contains a snd_BUG_ON() (which is morphed as WARN_ON() with
    debug option) for checking the case of 0 / 0.  This would be helpful
    if this happens only as a logical error; however, since the hw refine
    is performed with any data set provided by user, the inconsistent
    values that can trigger such a condition might be passed easily.
    Actually, syzbot caught this by passing some zero'ed old hw_params
    ioctl.
    
    So, having snd_BUG_ON() there is simply superfluous and rather
    harmful to give unnecessary confusions.  Let's get rid of it.
    
    Reported-by: syzbot+7e6ee55011deeebce15d@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4ff9f294629b65df3f7982cd4faf86b2856b9d7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jan 9 23:11:03 2018 +0100

    ALSA: seq: Make ioctls race-free
    
    commit b3defb791b26ea0683a93a4f49c77ec45ec96f10 upstream.
    
    The ALSA sequencer ioctls have no protection against racy calls while
    the concurrent operations may lead to interfere with each other.  As
    reported recently, for example, the concurrent calls of setting client
    pool with a combination of write calls may lead to either the
    unkillable dead-lock or UAF.
    
    As a slightly big hammer solution, this patch introduces the mutex to
    make each ioctl exclusive.  Although this may reduce performance via
    parallel ioctl calls, usually it's not demanded for sequencer usages,
    hence it should be negligible.
    
    Reported-by: Luo Quan <a4651386@163.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8a3170db0deca6bfee32ad77f492caba9f6791d
Author: Li Jinyue <lijinyue@huawei.com>
Date:   Thu Dec 14 17:04:54 2017 +0800

    futex: Prevent overflow by strengthen input validation
    
    commit fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a upstream.
    
    UBSAN reports signed integer overflow in kernel/futex.c:
    
     UBSAN: Undefined behaviour in kernel/futex.c:2041:18
     signed integer overflow:
     0 - -2147483648 cannot be represented in type 'int'
    
    Add a sanity check to catch negative values of nr_wake and nr_requeue.
    
    Signed-off-by: Li Jinyue <lijinyue@huawei.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: dvhart@infradead.org
    Link: https://lkml.kernel.org/r/1513242294-31786-1-git-send-email-lijinyue@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb7119eea22c1764d3aa5edf541872cf5365f172
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Apr 7 09:34:12 2017 +0200

    scsi: sg: disable SET_FORCE_LOW_DMA
    
    commit 745dfa0d8ec26b24f3304459ff6e9eacc5c8351b upstream.
    
    The ioctl SET_FORCE_LOW_DMA has never worked since the initial git
    check-in, and the respective setting is nowadays handled correctly. So
    disable it entirely.
    
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Tested-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9ca9d9d9b7968d5490415c87a17db4335f846c3
Author: Vishal Verma <vishal.l.verma@intel.com>
Date:   Mon Dec 18 09:28:39 2017 -0700

    libnvdimm, btt: Fix an incompatibility in the log layout
    
    commit 24e3a7fb60a9187e5df90e5fa655ffc94b9c4f77 upstream.
    
    Due to a spec misinterpretation, the Linux implementation of the BTT log
    area had different padding scheme from other implementations, such as
    UEFI and NVML.
    
    This fixes the padding scheme, and defaults to it for new BTT layouts.
    We attempt to detect the padding scheme in use when probing for an
    existing BTT. If we detect the older/incompatible scheme, we continue
    using it.
    
    Reported-by: Juston Li <juston.li@intel.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: <stable@vger.kernel.org>
    Fixes: 5212e11fde4d ("nd_btt: atomic sector updates")
    Signed-off-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
