commit 7bbf48947605d6ccef21a896c4b44dc356dc8726
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 10 09:56:45 2019 +0200

    Linux 4.4.185

commit f66168a2a2eba4cb7d332dd9387198178e5a3b3c
Author: Robin Gong <yibin.gong@nxp.com>
Date:   Fri Jun 21 16:23:06 2019 +0800

    dmaengine: imx-sdma: remove BD_INTR for channel0
    
    commit 3f93a4f297961c12bb17aa16cb3a4d1291823cae upstream.
    
    It is possible for an irq triggered by channel0 to be received later
    after clks are disabled once firmware loaded during sdma probe. If
    that happens then clearing them by writing to SDMA_H_INTR won't work
    and the kernel will hang processing infinite interrupts. Actually,
    don't need interrupt triggered on channel0 since it's pollling
    SDMA_H_STATSTOP to know channel0 done rather than interrupt in
    current code, just clear BD_INTR to disable channel0 interrupt to
    avoid the above case.
    This issue was brought by commit 1d069bfa3c78 ("dmaengine: imx-sdma:
    ack channel 0 IRQ in the interrupt handler") which didn't take care
    the above case.
    
    Fixes: 1d069bfa3c78 ("dmaengine: imx-sdma: ack channel 0 IRQ in the interrupt handler")
    Cc: stable@vger.kernel.org #5.0+
    Signed-off-by: Robin Gong <yibin.gong@nxp.com>
    Reported-by: Sven Van Asbroeck <thesven73@gmail.com>
    Tested-by: Sven Van Asbroeck <thesven73@gmail.com>
    Reviewed-by: Michael Olbrich <m.olbrich@pengutronix.de>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fec7f2e38bc7c2ca3e9b503517c3df9a44e3067
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Jun 26 14:16:13 2019 +0200

    KVM: x86: degrade WARN to pr_warn_ratelimited
    
    commit 3f16a5c318392cbb5a0c7a3d19dff8c8ef3c38ee upstream.
    
    This warning can be triggered easily by userspace, so it should certainly not
    cause a panic if panic_on_warn is set.
    
    Reported-by: syzbot+c03f30b4f4c46bdf8575@syzkaller.appspotmail.com
    Suggested-by: Alexander Potapenko <glider@google.com>
    Acked-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0309c7835cd134eb650b2c590c2c69b4f969bb0
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jul 5 20:55:50 2019 +0200

    arm64, vdso: Define vdso_{start,end} as array
    
    Commit dbbb08f500d6146398b794fdc68a8e811366b451 upstream.
    
    Adjust vdso_{start|end} to be char arrays to avoid compile-time analysis
    that flags "too large" memcmp() calls with CONFIG_FORTIFY_SOURCE.
    
    Cc: Jisheng Zhang <jszhang@marvell.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Suggested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a62a40c8a3ff18d255d2a325c7780708d54fadc1
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Dec 8 08:45:57 2017 -0800

    ARC: handle gcc generated __builtin_trap for older compiler
    
    commit af1be2e21203867cb958aaceed5366e2e24b88e8 upstream.
    
    ARC gcc prior to GNU 2018.03 release didn't have a target specific
    __builtin_trap() implementation, generating default abort() call.
    
    Implement the abort() call - emulating what newer gcc does for the same,
    as suggested by Arnd.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ed8ed6d21197ebddaf50bb7223cc8fd00467155
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 6 11:28:23 2019 -0700

    tty: rocket: fix incorrect forward declaration of 'rp_init()'
    
    [ Upstream commit 423ea3255424b954947d167681b71ded1b8fca53 ]
    
    Make the forward declaration actually match the real function
    definition, something that previous versions of gcc had just ignored.
    
    This is another patch to fix new warnings from gcc-9 before I start the
    merge window pulls.  I don't want to miss legitimate new warnings just
    because my system update brought a new compiler with new warnings.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 986543fcf50c8a3681be44cac42dc498fe25ab34
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Fri May 17 10:44:25 2019 +0300

    btrfs: Ensure replaced device doesn't have pending chunk allocation
    
    commit debd1c065d2037919a7da67baf55cc683fee09f0 upstream.
    
    Recent FITRIM work, namely bbbf7243d62d ("btrfs: combine device update
    operations during transaction commit") combined the way certain
    operations are recoded in a transaction. As a result an ASSERT was added
    in dev_replace_finish to ensure the new code works correctly.
    Unfortunately I got reports that it's possible to trigger the assert,
    meaning that during a device replace it's possible to have an unfinished
    chunk allocation on the source device.
    
    This is supposed to be prevented by the fact that a transaction is
    committed before finishing the replace oepration and alter acquiring the
    chunk mutex. This is not sufficient since by the time the transaction is
    committed and the chunk mutex acquired it's possible to allocate a chunk
    depending on the workload being executed on the replaced device. This
    bug has been present ever since device replace was introduced but there
    was never code which checks for it.
    
    The correct way to fix is to ensure that there is no pending device
    modification operation when the chunk mutex is acquire and if there is
    repeat transaction commit. Unfortunately it's not possible to just
    exclude the source device from btrfs_fs_devices::dev_alloc_list since
    this causes ENOSPC to be hit in transaction commit.
    
    Fixing that in another way would need to add special cases to handle the
    last writes and forbid new ones. The looped transaction fix is more
    obvious, and can be easily backported. The runtime of dev-replace is
    long so there's no noticeable delay caused by that.
    
    Reported-by: David Sterba <dsterba@suse.com>
    Fixes: 391cd9df81ac ("Btrfs: fix unprotected alloc list insertion during the finishing procedure of replace")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adbf2b44e8f1764662962dd0580d5dfab082caeb
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Jun 24 18:32:26 2019 +0800

    lib/mpi: Fix karactx leak in mpi_powm
    
    commit c8ea9fce2baf7b643384f36f29e4194fa40d33a6 upstream.
    
    Sometimes mpi_powm will leak karactx because a memory allocation
    failure causes a bail-out that skips the freeing of karactx.  This
    patch moves the freeing of karactx to the end of the function like
    everything else so that it can't be skipped.
    
    Reported-by: syzbot+f7baccc38dcc1e094e77@syzkaller.appspotmail.com
    Fixes: cdec9cb5167a ("crypto: GnuPG based MPI lib - source files...")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Eric Biggers <ebiggers@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52e0b9fcd6f60cf66a30d33216aad6148bdaebb7
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jun 27 17:43:08 2019 +0100

    ALSA: usb-audio: fix sign unintended sign extension on left shifts
    
    commit 2acf5a3e6e9371e63c9e4ff54d84d08f630467a0 upstream.
    
    There are a couple of left shifts of unsigned 8 bit values that
    first get promoted to signed ints and hence get sign extended
    on the shift if the top bit of the 8 bit values are set. Fix
    this by casting the 8 bit values to unsigned ints to stop the
    unintentional sign extension.
    
    Addresses-Coverity: ("Unintended sign extension")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3864c897a7d92af7c410faed1f5330fc4610e30e
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jul 1 23:43:53 2019 +0900

    ALSA: firewire-lib/fireworks: fix miss detection of received MIDI messages
    
    commit 7fbd1753b64eafe21cf842348a40a691d0dee440 upstream.
    
    In IEC 61883-6, 8 MIDI data streams are multiplexed into single
    MIDI conformant data channel. The index of stream is calculated by
    modulo 8 of the value of data block counter.
    
    In fireworks, the value of data block counter in CIP header has a quirk
    with firmware version v5.0.0, v5.7.3 and v5.8.0. This brings ALSA
    IEC 61883-1/6 packet streaming engine to miss detection of MIDI
    messages.
    
    This commit fixes the miss detection to modify the value of data block
    counter for the modulo calculation.
    
    For maintainers, this bug exists since a commit 18f5ed365d3f ("ALSA:
    fireworks/firewire-lib: add support for recent firmware quirk") in Linux
    kernel v4.2. There're many changes since the commit.  This fix can be
    backported to Linux kernel v4.4 or later. I tagged a base commit to the
    backport for your convenience.
    
    Besides, my work for Linux kernel v5.3 brings heavy code refactoring and
    some structure members are renamed in 'sound/firewire/amdtp-stream.h'.
    The content of this patch brings conflict when merging -rc tree with
    this patch and the latest tree. I request maintainers to solve the
    conflict to replace 'tx_first_dbc' with 'ctx_data.tx.first_dbc'.
    
    Fixes: df075feefbd3 ("ALSA: firewire-lib: complete AM824 data block processing layer")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13088bad036a7829d78c788edd8c7a119f3b780e
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jun 28 10:54:29 2019 +0100

    ALSA: seq: fix incorrect order of dest_client/dest_ports arguments
    
    commit c3ea60c231446663afd6ea1054da6b7f830855ca upstream.
    
    There are two occurrances of a call to snd_seq_oss_fill_addr where
    the dest_client and dest_port arguments are in the wrong order. Fix
    this by swapping them around.
    
    Addresses-Coverity: ("Arguments in wrong order")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e5d6d15daa3090987254c5111999eacab8c7fcd
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jul 2 14:17:00 2019 -0700

    crypto: user - prevent operating on larval algorithms
    
    commit 21d4120ec6f5b5992b01b96ac484701163917b63 upstream.
    
    Michal Suchanek reported [1] that running the pcrypt_aead01 test from
    LTP [2] in a loop and holding Ctrl-C causes a NULL dereference of
    alg->cra_users.next in crypto_remove_spawns(), via crypto_del_alg().
    The test repeatedly uses CRYPTO_MSG_NEWALG and CRYPTO_MSG_DELALG.
    
    The crash occurs when the instance that CRYPTO_MSG_DELALG is trying to
    unregister isn't a real registered algorithm, but rather is a "test
    larval", which is a special "algorithm" added to the algorithms list
    while the real algorithm is still being tested.  Larvals don't have
    initialized cra_users, so that causes the crash.  Normally pcrypt_aead01
    doesn't trigger this because CRYPTO_MSG_NEWALG waits for the algorithm
    to be tested; however, CRYPTO_MSG_NEWALG returns early when interrupted.
    
    Everything else in the "crypto user configuration" API has this same bug
    too, i.e. it inappropriately allows operating on larval algorithms
    (though it doesn't look like the other cases can cause a crash).
    
    Fix this by making crypto_alg_match() exclude larval algorithms.
    
    [1] https://lkml.kernel.org/r/20190625071624.27039-1-msuchanek@suse.de
    [2] https://github.com/linux-test-project/ltp/blob/20190517/testcases/kernel/crypto/pcrypt_aead01.c
    
    Reported-by: Michal Suchanek <msuchanek@suse.de>
    Fixes: a38f7907b926 ("crypto: Add userspace configuration API")
    Cc: <stable@vger.kernel.org> # v3.2+
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54562d2b0be5c120b01c8bb94baef1aca37fd329
Author: Jann Horn <jannh@google.com>
Date:   Thu Jul 4 17:32:23 2019 +0200

    ptrace: Fix ->ptracer_cred handling for PTRACE_TRACEME
    
    commit 6994eefb0053799d2e07cd140df6c2ea106c41ee upstream.
    
    Fix two issues:
    
    When called for PTRACE_TRACEME, ptrace_link() would obtain an RCU
    reference to the parent's objective credentials, then give that pointer
    to get_cred().  However, the object lifetime rules for things like
    struct cred do not permit unconditionally turning an RCU reference into
    a stable reference.
    
    PTRACE_TRACEME records the parent's credentials as if the parent was
    acting as the subject, but that's not the case.  If a malicious
    unprivileged child uses PTRACE_TRACEME and the parent is privileged, and
    at a later point, the parent process becomes attacker-controlled
    (because it drops privileges and calls execve()), the attacker ends up
    with control over two processes with a privileged ptrace relationship,
    which can be abused to ptrace a suid binary and obtain root privileges.
    
    Fix both of these by always recording the credentials of the process
    that is requesting the creation of the ptrace relationship:
    current_cred() can't change under us, and current is the proper subject
    for access control.
    
    This change is theoretically userspace-visible, but I am not aware of
    any code that it will actually break.
    
    Fixes: 64b875f7ac8a ("ptrace: Capture the ptracer's creds not PT_PTRACE_CAP")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18eee992e8e86dffc6a16e0566b1bcf780c2c7bd
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Aug 20 15:36:18 2018 -0700

    MIPS: Workaround GCC __builtin_unreachable reordering bug
    
    [ Upstream commit 906d441febc0de974b2a6ef848a8f058f3bfada3 ]
    
    Some versions of GCC for the MIPS architecture suffer from a bug which
    can lead to instructions from beyond an unreachable statement being
    incorrectly reordered into earlier branch delay slots if the unreachable
    statement is the only content of a case in a switch statement. This can
    lead to seemingly random behaviour, such as invalid memory accesses from
    incorrectly reordered loads or stores, and link failures on microMIPS
    builds.
    
    See this potential GCC fix for details:
    
        https://gcc.gnu.org/ml/gcc-patches/2015-09/msg00360.html
    
    Runtime problems resulting from this bug were initially observed using a
    maltasmvp_defconfig v4.4 kernel built using GCC 4.9.2 (from a Codescape
    SDK 2015.06-05 toolchain), with the result being an address exception
    taken after log messages about the L1 caches (during probe of the L2
    cache):
    
        Initmem setup node 0 [mem 0x0000000080000000-0x000000009fffffff]
        VPE topology {2,2} total 4
        Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.
        Primary data cache 64kB, 4-way, PIPT, no aliases, linesize 32 bytes
        <AdEL exception here>
    
    This is early enough that the kernel exception vectors are not in use,
    so any further output depends upon the bootloader. This is reproducible
    in QEMU where no further output occurs - ie. the system hangs here.
    Given the nature of the bug it may potentially be hit with differing
    symptoms. The bug is known to affect GCC versions as recent as 7.3, and
    it is unclear whether GCC 8 fixed it or just happens not to encounter
    the bug in the testcase found at the link above due to differing
    optimizations.
    
    This bug can be worked around by placing a volatile asm statement, which
    GCC is prevented from reordering past, prior to the
    __builtin_unreachable call.
    
    That was actually done already for other reasons by commit 173a3efd3edb
    ("bug.h: work around GCC PR82365 in BUG()"), but creates problems for
    microMIPS builds due to the lack of a .insn directive. The microMIPS ISA
    allows for interlinking with regular MIPS32 code by repurposing bit 0 of
    the program counter as an ISA mode bit. To switch modes one changes the
    value of this bit in the PC. However typical branch instructions encode
    their offsets as multiples of 2-byte instruction halfwords, which means
    they cannot change ISA mode - this must be done using either an indirect
    branch (a jump-register in MIPS terminology) or a dedicated jalx
    instruction. In order to ensure that regular branches don't attempt to
    target code in a different ISA which they can't actually switch to, the
    linker will check that branch targets are code in the same ISA as the
    branch.
    
    Unfortunately our empty asm volatile statements don't qualify as code,
    and the link for microMIPS builds fails with errors such as:
    
        arch/mips/mm/dma-default.s:3265: Error: branch to a symbol in another ISA mode
        arch/mips/mm/dma-default.s:5027: Error: branch to a symbol in another ISA mode
    
    Resolve this by adding a .insn directive within the asm statement which
    declares that what comes next is code. This may or may not be true,
    since we don't really know what comes next, but as this code is in an
    unreachable path anyway that doesn't matter since we won't execute it.
    
    We do this in asm/compiler.h & select CONFIG_HAVE_ARCH_COMPILER_H in
    order to have this included by linux/compiler_types.h after
    linux/compiler-gcc.h. This will result in asm/compiler.h being included
    in all C compilations via the -include linux/compiler_types.h argument
    in c_flags, which should be harmless.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 173a3efd3edb ("bug.h: work around GCC PR82365 in BUG()")
    Patchwork: https://patchwork.linux-mips.org/patch/20270/
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fbaa1af066f3ae16ce3d3f78b0d2fd1169279fe
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 21 14:45:54 2018 -0800

    bug.h: work around GCC PR82365 in BUG()
    
    [ Upstream commit 173a3efd3edb2ef6ef07471397c5f542a360e9c1 ]
    
    Looking at functions with large stack frames across all architectures
    led me discovering that BUG() suffers from the same problem as
    fortify_panic(), which I've added a workaround for already.
    
    In short, variables that go out of scope by calling a noreturn function
    or __builtin_unreachable() keep using stack space in functions
    afterwards.
    
    A workaround that was identified is to insert an empty assembler
    statement just before calling the function that doesn't return.  I'm
    adding a macro "barrier_before_unreachable()" to document this, and
    insert calls to that in all instances of BUG() that currently suffer
    from this problem.
    
    The files that saw the largest change from this had these frame sizes
    before, and much less with my patch:
    
      fs/ext4/inode.c:82:1: warning: the frame size of 1672 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/ext4/namei.c:434:1: warning: the frame size of 904 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/ext4/super.c:2279:1: warning: the frame size of 1160 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/ext4/xattr.c:146:1: warning: the frame size of 1168 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/f2fs/inode.c:152:1: warning: the frame size of 1424 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_core.c:1195:1: warning: the frame size of 1068 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_core.c:395:1: warning: the frame size of 1084 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_ftp.c:298:1: warning: the frame size of 928 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_ftp.c:418:1: warning: the frame size of 908 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_lblcr.c:718:1: warning: the frame size of 960 bytes is larger than 800 bytes [-Wframe-larger-than=]
      drivers/net/xen-netback/netback.c:1500:1: warning: the frame size of 1088 bytes is larger than 800 bytes [-Wframe-larger-than=]
    
    In case of ARC and CRIS, it turns out that the BUG() implementation
    actually does return (or at least the compiler thinks it does),
    resulting in lots of warnings about uninitialized variable use and
    leaving noreturn functions, such as:
    
      block/cfq-iosched.c: In function 'cfq_async_queue_prio':
      block/cfq-iosched.c:3804:1: error: control reaches end of non-void function [-Werror=return-type]
      include/linux/dmaengine.h: In function 'dma_maxpq':
      include/linux/dmaengine.h:1123:1: error: control reaches end of non-void function [-Werror=return-type]
    
    This makes them call __builtin_trap() instead, which should normally
    dump the stack and kill the current process, like some of the other
    architectures already do.
    
    I tried adding barrier_before_unreachable() to panic() and
    fortify_panic() as well, but that had very little effect, so I'm not
    submitting that patch.
    
    Vineet said:
    
    : For ARC, it is double win.
    :
    : 1. Fixes 3 -Wreturn-type warnings
    :
    : | ../net/core/ethtool.c:311:1: warning: control reaches end of non-void function
    : [-Wreturn-type]
    : | ../kernel/sched/core.c:3246:1: warning: control reaches end of non-void function
    : [-Wreturn-type]
    : | ../include/linux/sunrpc/svc_xprt.h:180:1: warning: control reaches end of
    : non-void function [-Wreturn-type]
    :
    : 2.  bloat-o-meter reports code size improvements as gcc elides the
    :    generated code for stack return.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82365
    Link: http://lkml.kernel.org/r/20171219114112.939391-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Vineet Gupta <vgupta@synopsys.com>    [arch/arc]
    Tested-by: Vineet Gupta <vgupta@synopsys.com>   [arch/arc]
    Cc: Mikael Starvik <starvik@axis.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Christopher Li <sparse@chrisli.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    [ removed cris changes - gregkh]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f8180ff3386f18f11ea54f0d89e611a72b9e18d
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Jul 1 14:17:58 2015 +0200

    swiotlb: Make linux/swiotlb.h standalone includible
    
    [ Upstream commit 386744425e35e04984c6e741c7750fd6eef1a9df ]
    
    This header file uses the enum dma_data_direction and struct page types
    without explicitly including the corresponding header files. This makes
    it rely on the includer to have included the proper headers before.
    
    To fix this, include linux/dma-direction.h and forward-declare struct
    page. The swiotlb_free() function is also annotated __init, therefore
    requires linux/init.h to be included as well.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1a9886ddd3a26f7c3dd5d5196ae04dc4d2a9da8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Aug 23 16:44:51 2017 +0200

    mfd: omap-usb-tll: Fix register offsets
    
    [ Upstream commit 993dc737c0996c163325961fb62a0ed9fd0308b4 ]
    
    gcc-8 notices that the register number calculation is wrong
    when the offset is an 'u8' but the number is larger than 256:
    
    drivers/mfd/omap-usb-tll.c: In function 'omap_tll_init':
    drivers/mfd/omap-usb-tll.c:90:46: error: overflow in conversion from 'int' to 'u8 {aka unsigned char}' chages value from 'i * 256 + 2070' to '22' [-Werror=overflow]
    
    This addresses it by always using a 32-bit offset number for
    the register. This is apparently an old problem that previous
    compilers did not find.
    
    Fixes: 16fa3dc75c22 ("mfd: omap-usb-tll: HOST TLL platform driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1877fd325cd4d6a8ec311bb05ce62606220332c
Author: Manuel Lauss <manuel.lauss@gmail.com>
Date:   Mon Aug 14 12:21:48 2017 +0200

    MIPS: math-emu: do not use bools for arithmetic
    
    [ Upstream commit 8535f2ba0a9b971df62a5890699b9dfe2e0d5580 ]
    
    GCC-7 complains about a boolean value being used with an arithmetic
    AND:
    
    arch/mips/math-emu/cp1emu.c: In function 'cop1Emulate':
    arch/mips/math-emu/cp1emu.c:838:14: warning: '~' on a boolean expression [-Wbool-operation]
      fpr = (x) & ~(cop1_64bit(xcp) == 0);    \
                  ^
    arch/mips/math-emu/cp1emu.c:1068:3: note: in expansion of macro 'DITOREG'
       DITOREG(dval, MIPSInst_RT(ir));
       ^~~~~~~
    arch/mips/math-emu/cp1emu.c:838:14: note: did you mean to use logical not?
      fpr = (x) & ~(cop1_64bit(xcp) == 0);    \
    
    Since cop1_64bit() returns and int, just flip the LSB.
    
    Suggested-by: Maciej W. Rozycki <macro@imgtec.com>
    Signed-off-by: Manuel Lauss <manuel.lauss@gmail.com>
    Reviewed-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17058/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 014275fd848f463fac037fc1b6b9b6e50470b9aa
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Wed Oct 19 14:38:50 2016 -0700

    ARC: fix build warning in elf.h
    
    [ Upstream commit 1dec78585328db00e33fb18dc1a6deed0e2095a5 ]
    
    The cast valid since TASK_SIZE * 2 will never actually cause overflow.
    
    |   CC      fs/binfmt_elf.o
    | In file included from ../include/linux/elf.h:4:0,
    |                  from ../include/linux/module.h:15,
    |                  from ../fs/binfmt_elf.c:12:
    | ../fs/binfmt_elf.c: In function load_elf_binar:
    | ../arch/arc/include/asm/elf.h:57:29: warning: integer overflow in expression [-Woverflow]
    |  #define ELF_ET_DYN_BASE  (2 * TASK_SIZE / 3)
    |                              ^
    | ../fs/binfmt_elf.c:921:16: note: in expansion of macro ELF_ET_DYN_BASE
    |     load_bias = ELF_ET_DYN_BASE - vaddr;
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a414c474578a1ac097a1da0875b02b431f60a4e6
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue Feb 16 09:42:57 2016 +0530

    ARC: Assume multiplier is always present
    
    [ Upstream commit 0eca6fdb3193410fbe66b6f064431cc394513e82 ]
    
    It is unlikely that designs running Linux will not have multiplier.
    Further the current support is not complete as tool don't generate a
    multilib w/o multiplier.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3e8f6bc2f41fe3192064fbfe42600d0e728b9e8
Author: Don Brace <don.brace@microsemi.com>
Date:   Mon Jun 3 16:43:29 2019 -0500

    scsi: hpsa: correct ioaccel2 chaining
    
    [ Upstream commit 625d7d3518875c4d303c652a198feaa13d9f52d9 ]
    
    - set ioaccel2_sg_element member 'chain_indicator' to IOACCEL2_LAST_SG for
      the last s/g element.
    
    - set ioaccel2_sg_element member 'chain_indicator' to IOACCEL2_CHAIN when
      chaining.
    
    Reviewed-by: Bader Ali - Saleh <bader.alisaleh@microsemi.com>
    Reviewed-by: Scott Teel <scott.teel@microsemi.com>
    Reviewed-by: Matt Perricone <matt.perricone@microsemi.com>
    Signed-off-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8978dce0c235a0550634da9c8294dc03a8e784d5
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Wed May 22 14:07:36 2019 +0200

    usb: gadget: udc: lpc32xx: allocate descriptor with GFP_ATOMIC
    
    [ Upstream commit fbc318afadd6e7ae2252d6158cf7d0c5a2132f7d ]
    
    Gadget drivers may queue request in interrupt context. This would lead to
    a descriptor allocation in that context. In that case we would hit
    BUG_ON(in_interrupt()) in __get_vm_area_node.
    
    Also remove the unnecessary cast.
    
    Acked-by: Sylvain Lemieux <slemieux.tyco@gmail.com>
    Tested-by: James Grant <jamesg@zaltys.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53f1c783ecc036904fa756f75bb557b7f9c2c2d8
Author: Young Xiao <92siuyang@gmail.com>
Date:   Tue May 28 20:17:54 2019 +0800

    usb: gadget: fusb300_udc: Fix memory leak of fusb300->ep[i]
    
    [ Upstream commit 62fd0e0a24abeebe2c19fce49dd5716d9b62042d ]
    
    There is no deallocation of fusb300->ep[i] elements, allocated at
    fusb300_probe.
    
    The patch adds deallocation of fusb300->ep array elements.
    
    Signed-off-by: Young Xiao <92siuyang@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b3f570661f493f7e4a055ee3b50337b3eb07781
Author: Yu-Hsuan Hsu <yuhsuan@chromium.org>
Date:   Tue Jun 4 18:49:09 2019 +0800

    ASoC: max98090: remove 24-bit format support if RJ is 0
    
    [ Upstream commit 5628c8979642a076f91ee86c3bae5ad251639af0 ]
    
    The supported formats are S16_LE and S24_LE now. However, by datasheet
    of max98090, S24_LE is only supported when it is in the right justified
    mode. We should remove 24-bit format if it is not in that mode to avoid
    triggering error.
    
    Signed-off-by: Yu-Hsuan Hsu <yuhsuan@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05d6e618f64b877f6db17173f31063d51d023b81
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu May 16 15:56:56 2019 +0800

    spi: bitbang: Fix NULL pointer dereference in spi_unregister_master
    
    [ Upstream commit 5caaf29af5ca82d5da8bc1d0ad07d9e664ccf1d8 ]
    
    If spi_register_master fails in spi_bitbang_start
    because device_add failure, We should return the
    error code other than 0, otherwise calling
    spi_bitbang_stop may trigger NULL pointer dereference
    like this:
    
    BUG: KASAN: null-ptr-deref in __list_del_entry_valid+0x45/0xd0
    Read of size 8 at addr 0000000000000000 by task syz-executor.0/3661
    
    CPU: 0 PID: 3661 Comm: syz-executor.0 Not tainted 5.1.0+ #28
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    Call Trace:
     dump_stack+0xa9/0x10e
     ? __list_del_entry_valid+0x45/0xd0
     ? __list_del_entry_valid+0x45/0xd0
     __kasan_report+0x171/0x18d
     ? __list_del_entry_valid+0x45/0xd0
     kasan_report+0xe/0x20
     __list_del_entry_valid+0x45/0xd0
     spi_unregister_controller+0x99/0x1b0
     spi_lm70llp_attach+0x3ae/0x4b0 [spi_lm70llp]
     ? 0xffffffffc1128000
     ? klist_next+0x131/0x1e0
     ? driver_detach+0x40/0x40 [parport]
     port_check+0x3b/0x50 [parport]
     bus_for_each_dev+0x115/0x180
     ? subsys_dev_iter_exit+0x20/0x20
     __parport_register_driver+0x1f0/0x210 [parport]
     ? 0xffffffffc1150000
     do_one_initcall+0xb9/0x3b5
     ? perf_trace_initcall_level+0x270/0x270
     ? kasan_unpoison_shadow+0x30/0x40
     ? kasan_unpoison_shadow+0x30/0x40
     do_init_module+0xe0/0x330
     load_module+0x38eb/0x4270
     ? module_frob_arch_sections+0x20/0x20
     ? kernel_read_file+0x188/0x3f0
     ? find_held_lock+0x6d/0xd0
     ? fput_many+0x1a/0xe0
     ? __do_sys_finit_module+0x162/0x190
     __do_sys_finit_module+0x162/0x190
     ? __ia32_sys_init_module+0x40/0x40
     ? __mutex_unlock_slowpath+0xb4/0x3f0
     ? wait_for_completion+0x240/0x240
     ? vfs_write+0x160/0x2a0
     ? lockdep_hardirqs_off+0xb5/0x100
     ? mark_held_locks+0x1a/0x90
     ? do_syscall_64+0x14/0x2a0
     do_syscall_64+0x72/0x2a0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 702a4879ec33 ("spi: bitbang: Let spi_bitbang_start() take a reference to master")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Axel Lin <axel.lin@ingics.com>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4dcab6232e9fd730ad063735a5c875a2b6b4802
Author: Matt Flax <flatmax@flatmax.org>
Date:   Wed May 8 16:33:13 2019 +1000

    ASoC : cs4265 : readable register too low
    
    [ Upstream commit f3df05c805983427319eddc2411a2105ee1757cf ]
    
    The cs4265_readable_register function stopped short of the maximum
    register.
    
    An example bug is taken from :
    https://github.com/Audio-Injector/Ultra/issues/25
    
    Where alsactl store fails with :
    Cannot read control '2,0,0,C Data Buffer,0': Input/output error
    
    This patch fixes the bug by setting the cs4265 to have readable
    registers up to the maximum hardware register CS4265_MAX_REGISTER.
    
    Signed-off-by: Matt Flax <flatmax@flatmax.org>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c738429d03e29149f06ab8be2773d5150040c6d
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Thu Dec 14 03:23:37 2017 +0100

    um: Compile with modern headers
    
    commit 530ba6c7cb3c22435a4d26de47037bb6f86a5329 upstream.
    
    Recent libcs have gotten a bit more strict, so we actually need to
    include the right headers and use the right types. This enables UML to
    compile again.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Alessio Balsini <balsini@android.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 993699d9de09097e2bfd49100b8904774e5304fb
Author: Matias Karhumaa <matias.karhumaa@gmail.com>
Date:   Tue Jul 2 16:35:09 2019 +0200

    Bluetooth: Fix faulty expression for minimum encryption key size check
    
    commit eca94432934fe5f141d084f2e36ee2c0e614cc04 upstream.
    
    Fix minimum encryption key size check so that HCI_MIN_ENC_KEY_SIZE is
    also allowed as stated in the comment.
    
    This bug caused connection problems with devices having maximum
    encryption key size of 7 octets (56-bit).
    
    Fixes: 693cd8ce3f88 ("Bluetooth: Fix regression with minimum encryption key size alignment")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203997
    Signed-off-by: Matias Karhumaa <matias.karhumaa@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3c963d51a02153ffd7c2c41ed4a9287c9d25da2
Author: Josh Elsasser <jelsasser@appneta.com>
Date:   Mon Jul 1 16:48:47 2019 -0700

    net: check before dereferencing netdev_ops during busy poll
    
    init_dummy_netdev() leaves its netdev_ops pointer zeroed. This leads
    to a NULL pointer dereference when sk_busy_loop fires against an iwlwifi
    wireless adapter and checks napi->dev->netdev_ops->ndo_busy_poll.
    
    Avoid this by ensuring napi->dev->netdev_ops is valid before following
    the pointer, avoiding the following panic when busy polling on a dummy
    netdev:
    
      BUG: unable to handle kernel NULL pointer dereference at 00000000000000c8
      IP: [<ffffffff817b4b72>] sk_busy_loop+0x92/0x2f0
      Call Trace:
       [<ffffffff815a3134>] ? uart_write_room+0x74/0xf0
       [<ffffffff817964a9>] sock_poll+0x99/0xa0
       [<ffffffff81223142>] do_sys_poll+0x2e2/0x520
       [<ffffffff8118d3fc>] ? get_page_from_freelist+0x3bc/0xa30
       [<ffffffff810ada22>] ? update_curr+0x62/0x140
       [<ffffffff811ea671>] ? __slab_free+0xa1/0x2a0
       [<ffffffff811ea671>] ? __slab_free+0xa1/0x2a0
       [<ffffffff8179dbb1>] ? skb_free_head+0x21/0x30
       [<ffffffff81221bd0>] ? poll_initwait+0x50/0x50
       [<ffffffff811eaa36>] ? kmem_cache_free+0x1c6/0x1e0
       [<ffffffff815a4884>] ? uart_write+0x124/0x1d0
       [<ffffffff810bd1cd>] ? remove_wait_queue+0x4d/0x60
       [<ffffffff810bd224>] ? __wake_up+0x44/0x50
       [<ffffffff81582731>] ? tty_write_unlock+0x31/0x40
       [<ffffffff8158c5c6>] ? tty_ldisc_deref+0x16/0x20
       [<ffffffff81584820>] ? tty_write+0x1e0/0x2f0
       [<ffffffff81587e50>] ? process_echoes+0x80/0x80
       [<ffffffff8120c17b>] ? __vfs_write+0x2b/0x130
       [<ffffffff8120d09a>] ? vfs_write+0x15a/0x1a0
       [<ffffffff81223455>] SyS_poll+0x75/0x100
       [<ffffffff819a6524>] entry_SYSCALL_64_fastpath+0x24/0xcf
    
    Commit 79e7fff47b7b ("net: remove support for per driver ndo_busy_poll()")
    indirectly fixed this upstream in linux-4.11 by removing the offending
    pointer usage. No other users of napi->dev touch its netdev_ops.
    
    Fixes: 8b80cda536ea ("net: rename include/net/ll_poll.h to include/net/busy_poll.h") # 4.4.y
    Signed-off-by: Josh Elsasser <jelsasser@appneta.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec109e6a9a1b1c5b1523d922c77f5195dee3dc39
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Jun 26 16:08:44 2019 +0800

    bonding: Always enable vlan tx offload
    
    [ Upstream commit 30d8177e8ac776d89d387fad547af6a0f599210e ]
    
    We build vlan on top of bonding interface, which vlan offload
    is off, bond mode is 802.3ad (LACP) and xmit_hash_policy is
    BOND_XMIT_POLICY_ENCAP34.
    
    Because vlan tx offload is off, vlan tci is cleared and skb push
    the vlan header in validate_xmit_vlan() while sending from vlan
    devices. Then in bond_xmit_hash, __skb_flow_dissect() fails to
    get information from protocol headers encapsulated within vlan,
    because 'nhoff' is points to IP header, so bond hashing is based
    on layer 2 info, which fails to distribute packets across slaves.
    
    This patch always enable bonding's vlan tx offload, pass the vlan
    packets to the slave devices with vlan tci, let them to handle
    vlan implementation.
    
    Fixes: 278339a42a1b ("bonding: propogate vlan_features to bonding master")
    Suggested-by: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 012e59ea8777aafafaf63ff67b12e90d26bfadec
Author: Stephen Suryaputra <ssuryaextr@gmail.com>
Date:   Mon Jun 24 20:14:06 2019 -0400

    ipv4: Use return value of inet_iif() for __raw_v4_lookup in the while loop
    
    [ Upstream commit 38c73529de13e1e10914de7030b659a2f8b01c3b ]
    
    In commit 19e4e768064a8 ("ipv4: Fix raw socket lookup for local
    traffic"), the dif argument to __raw_v4_lookup() is coming from the
    returned value of inet_iif() but the change was done only for the first
    lookup. Subsequent lookups in the while loop still use skb->dev->ifIndex.
    
    Fixes: 19e4e768064a8 ("ipv4: Fix raw socket lookup for local traffic")
    Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b4c9dfab314f4884d33e7f6c7b74e1e317f967f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Jun 27 00:03:39 2019 +0800

    team: Always enable vlan tx offload
    
    [ Upstream commit ee4297420d56a0033a8593e80b33fcc93fda8509 ]
    
    We should rather have vlan_tci filled all the way down
    to the transmitting netdevice and let it do the hw/sw
    vlan implementation.
    
    Suggested-by: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36ad5e8b3833de6cd41520e1f2cc1d0ae019a005
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jun 25 00:28:19 2019 +0800

    tipc: check msg->req data len in tipc_nl_compat_bearer_disable
    
    [ Upstream commit 4f07b80c973348a99b5d2a32476a2e7877e94a05 ]
    
    This patch is to fix an uninit-value issue, reported by syzbot:
    
      BUG: KMSAN: uninit-value in memchr+0xce/0x110 lib/string.c:981
      Call Trace:
        __dump_stack lib/dump_stack.c:77 [inline]
        dump_stack+0x191/0x1f0 lib/dump_stack.c:113
        kmsan_report+0x130/0x2a0 mm/kmsan/kmsan.c:622
        __msan_warning+0x75/0xe0 mm/kmsan/kmsan_instr.c:310
        memchr+0xce/0x110 lib/string.c:981
        string_is_valid net/tipc/netlink_compat.c:176 [inline]
        tipc_nl_compat_bearer_disable+0x2a1/0x480 net/tipc/netlink_compat.c:449
        __tipc_nl_compat_doit net/tipc/netlink_compat.c:327 [inline]
        tipc_nl_compat_doit+0x3ac/0xb00 net/tipc/netlink_compat.c:360
        tipc_nl_compat_handle net/tipc/netlink_compat.c:1178 [inline]
        tipc_nl_compat_recv+0x1b1b/0x27b0 net/tipc/netlink_compat.c:1281
    
    TLV_GET_DATA_LEN() may return a negtive int value, which will be
    used as size_t (becoming a big unsigned long) passed into memchr,
    cause this issue.
    
    Similar to what it does in tipc_nl_compat_bearer_enable(), this
    fix is to return -EINVAL when TLV_GET_DATA_LEN() is negtive in
    tipc_nl_compat_bearer_disable(), as well as in
    tipc_nl_compat_link_stat_dump() and tipc_nl_compat_link_reset_stats().
    
    v1->v2:
      - add the missing Fixes tags per Eric's request.
    
    Fixes: 0762216c0ad2 ("tipc: fix uninit-value in tipc_nl_compat_bearer_enable")
    Fixes: 8b66fee7f8ee ("tipc: fix uninit-value in tipc_nl_compat_link_reset_stats")
    Reported-by: syzbot+30eaa8bf392f7fafffaf@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 253c7176af9f978b7fe0ea850f4f6ce30546b7f1
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Jun 20 18:39:28 2019 +0800

    tipc: change to use register_pernet_device
    
    [ Upstream commit c492d4c74dd3f87559883ffa0f94a8f1ae3fe5f5 ]
    
    This patch is to fix a dst defcnt leak, which can be reproduced by doing:
    
      # ip net a c; ip net a s; modprobe tipc
      # ip net e s ip l a n eth1 type veth peer n eth1 netns c
      # ip net e c ip l s lo up; ip net e c ip l s eth1 up
      # ip net e s ip l s lo up; ip net e s ip l s eth1 up
      # ip net e c ip a a 1.1.1.2/8 dev eth1
      # ip net e s ip a a 1.1.1.1/8 dev eth1
      # ip net e c tipc b e m udp n u1 localip 1.1.1.2
      # ip net e s tipc b e m udp n u1 localip 1.1.1.1
      # ip net d c; ip net d s; rmmod tipc
    
    and it will get stuck and keep logging the error:
    
      unregister_netdevice: waiting for lo to become free. Usage count = 1
    
    The cause is that a dst is held by the udp sock's sk_rx_dst set on udp rx
    path with udp_early_demux == 1, and this dst (eventually holding lo dev)
    can't be released as bearer's removal in tipc pernet .exit happens after
    lo dev's removal, default_device pernet .exit.
    
     "There are two distinct types of pernet_operations recognized: subsys and
      device.  At creation all subsys init functions are called before device
      init functions, and at destruction all device exit functions are called
      before subsys exit function."
    
    So by calling register_pernet_device instead to register tipc_net_ops, the
    pernet .exit() will be invoked earlier than loopback dev's removal when a
    netns is being destroyed, as fou/gue does.
    
    Note that vxlan and geneve udp tunnels don't have this issue, as the udp
    sock is released in their device ndo_stop().
    
    This fix is also necessary for tipc dst_cache, which will hold dsts on tx
    path and I will introduce in my next patch.
    
    Reported-by: Li Shuang <shuali@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92598c5db140940c1b1ef0c10894b5c9d5293930
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jun 25 00:21:45 2019 +0800

    sctp: change to hold sk after auth shkey is created successfully
    
    [ Upstream commit 25bff6d5478b2a02368097015b7d8eb727c87e16 ]
    
    Now in sctp_endpoint_init(), it holds the sk then creates auth
    shkey. But when the creation fails, it doesn't release the sk,
    which causes a sk defcnf leak,
    
    Here to fix it by only holding the sk when auth shkey is created
    successfully.
    
    Fixes: a29a5bd4f5c3 ("[SCTP]: Implement SCTP-AUTH initializations.")
    Reported-by: syzbot+afabda3890cc2f765041@syzkaller.appspotmail.com
    Reported-by: syzbot+276ca1c77a19977c0130@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a892d74963c83e7ac357e5815a238076c4e57d99
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu May 16 09:09:35 2019 +0200

    cpu/speculation: Warn on unsupported mitigations= parameter
    
    commit 1bf72720281770162c87990697eae1ba2f1d917a upstream.
    
    Currently, if the user specifies an unsupported mitigation strategy on the
    kernel command line, it will be ignored silently.  The code will fall back
    to the default strategy, possibly leaving the system more vulnerable than
    expected.
    
    This may happen due to e.g. a simple typo, or, for a stable kernel release,
    because not all mitigation strategies have been backported.
    
    Inform the user by printing a message.
    
    Fixes: 98af8452945c5565 ("cpu/speculation: Add 'mitigations=' cmdline option")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190516070935.22546-1-geert@linux-m68k.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ac3c1abffbb308dc6c7191fecd0ada06a75a3aa
Author: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
Date:   Mon Jun 10 13:20:10 2019 -0400

    x86/speculation: Allow guests to use SSBD even if host does not
    
    commit c1f7fec1eb6a2c86d01bc22afce772c743451d88 upstream.
    
    The bits set in x86_spec_ctrl_mask are used to calculate the guest's value
    of SPEC_CTRL that is written to the MSR before VMENTRY, and control which
    mitigations the guest can enable.  In the case of SSBD, unless the host has
    enabled SSBD always on mode (by passing "spec_store_bypass_disable=on" in
    the kernel parameters), the SSBD bit is not set in the mask and the guest
    can not properly enable the SSBD always on mitigation mode.
    
    This has been confirmed by running the SSBD PoC on a guest using the SSBD
    always on mitigation mode (booted with kernel parameter
    "spec_store_bypass_disable=on"), and verifying that the guest is vulnerable
    unless the host is also using SSBD always on mode. In addition, the guest
    OS incorrectly reports the SSB vulnerability as mitigated.
    
    Always set the SSBD bit in x86_spec_ctrl_mask when the host CPU supports
    it, allowing the guest to use SSBD whether or not the host has chosen to
    enable the mitigation in any of its modes.
    
    Fixes: be6fcb5478e9 ("x86/bugs: Rework spec_ctrl base and mask logic")
    Signed-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Liam Merwick <liam.merwick@oracle.com>
    Reviewed-by: Mark Kanda <mark.kanda@oracle.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: bp@alien8.de
    Cc: rkrcmar@redhat.com
    Cc: kvm@vger.kernel.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1560187210-11054-1-git-send-email-alejandro.j.jimenez@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b24be4acd17a8963a29b2a92e1d80b9ddf759c95
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Fri Jul 1 16:34:27 2016 -0400

    ovl: modify ovl_permission() to do checks on two inodes
    
    commit c0ca3d70e8d3cf81e2255a217f7ca402f5ed0862 upstream.
    
    Right now ovl_permission() calls __inode_permission(realinode), to do
    permission checks on real inode and no checks are done on overlay inode.
    
    Modify it to do checks both on overlay inode as well as underlying inode.
    Checks on overlay inode will be done with the creds of calling task while
    checks on underlying inode will be done with the creds of mounter.
    
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    [ Srivatsa: 4.4.y backport:
      - Skipped the hunk modifying non-existent function ovl_get_acl()
      - Adjusted the error path
      - Included linux/cred.h to get prototype for revert_creds() ]
    Signed-off-by: Srivatsa S. Bhat (VMware) <srivatsa@csail.mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 485ac3d91b2d158a6aab27caaa33840d67a46896
Author: Wanpeng Li <wanpengli@tencent.com>
Date:   Tue Nov 20 16:34:18 2018 +0800

    KVM: X86: Fix scan ioapic use-before-initialization
    
    commit e97f852fd4561e77721bb9a4e0ea9d98305b1e93 upstream.
    
    Reported by syzkaller:
    
     BUG: unable to handle kernel NULL pointer dereference at 00000000000001c8
     PGD 80000003ec4da067 P4D 80000003ec4da067 PUD 3f7bfa067 PMD 0
     Oops: 0000 [#1] PREEMPT SMP PTI
     CPU: 7 PID: 5059 Comm: debug Tainted: G           OE     4.19.0-rc5 #16
     RIP: 0010:__lock_acquire+0x1a6/0x1990
     Call Trace:
      lock_acquire+0xdb/0x210
      _raw_spin_lock+0x38/0x70
      kvm_ioapic_scan_entry+0x3e/0x110 [kvm]
      vcpu_enter_guest+0x167e/0x1910 [kvm]
      kvm_arch_vcpu_ioctl_run+0x35c/0x610 [kvm]
      kvm_vcpu_ioctl+0x3e9/0x6d0 [kvm]
      do_vfs_ioctl+0xa5/0x690
      ksys_ioctl+0x6d/0x80
      __x64_sys_ioctl+0x1a/0x20
      do_syscall_64+0x83/0x6e0
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The reason is that the testcase writes hyperv synic HV_X64_MSR_SINT6 msr
    and triggers scan ioapic logic to load synic vectors into EOI exit bitmap.
    However, irqchip is not initialized by this simple testcase, ioapic/apic
    objects should not be accessed.
    This can be triggered by the following program:
    
        #define _GNU_SOURCE
    
        #include <endian.h>
        #include <stdint.h>
        #include <stdio.h>
        #include <stdlib.h>
        #include <string.h>
        #include <sys/syscall.h>
        #include <sys/types.h>
        #include <unistd.h>
    
        uint64_t r[3] = {0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff};
    
        int main(void)
        {
            syscall(__NR_mmap, 0x20000000, 0x1000000, 3, 0x32, -1, 0);
            long res = 0;
            memcpy((void*)0x20000040, "/dev/kvm", 9);
            res = syscall(__NR_openat, 0xffffffffffffff9c, 0x20000040, 0, 0);
            if (res != -1)
                    r[0] = res;
            res = syscall(__NR_ioctl, r[0], 0xae01, 0);
            if (res != -1)
                    r[1] = res;
            res = syscall(__NR_ioctl, r[1], 0xae41, 0);
            if (res != -1)
                    r[2] = res;
            memcpy(
                            (void*)0x20000080,
                            "\x01\x00\x00\x00\x00\x5b\x61\xbb\x96\x00\x00\x40\x00\x00\x00\x00\x01\x00"
                            "\x08\x00\x00\x00\x00\x00\x0b\x77\xd1\x78\x4d\xd8\x3a\xed\xb1\x5c\x2e\x43"
                            "\xaa\x43\x39\xd6\xff\xf5\xf0\xa8\x98\xf2\x3e\x37\x29\x89\xde\x88\xc6\x33"
                            "\xfc\x2a\xdb\xb7\xe1\x4c\xac\x28\x61\x7b\x9c\xa9\xbc\x0d\xa0\x63\xfe\xfe"
                            "\xe8\x75\xde\xdd\x19\x38\xdc\x34\xf5\xec\x05\xfd\xeb\x5d\xed\x2e\xaf\x22"
                            "\xfa\xab\xb7\xe4\x42\x67\xd0\xaf\x06\x1c\x6a\x35\x67\x10\x55\xcb",
                            106);
            syscall(__NR_ioctl, r[2], 0x4008ae89, 0x20000080);
            syscall(__NR_ioctl, r[2], 0xae80, 0);
            return 0;
        }
    
    This patch fixes it by bailing out scan ioapic if ioapic is not initialized in
    kernel.
    
    Reported-by: Wei Wu <ww9210@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Wei Wu <ww9210@gmail.com>
    Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [ Srivatsa: Adjusted the context for 4.4.y ]
    Signed-off-by: Srivatsa S. Bhat (VMware) <srivatsa@csail.mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33da943746bd482c6917bc8213e537c8721710c8
Author: Adeodato Simó <dato@net.com.org.es>
Date:   Tue Nov 13 03:28:53 2018 -0300

    net/9p: include trans_common.h to fix missing prototype warning.
    
    [ Upstream commit 52ad259eaac0454c1ac7123e7148cf8d6e6f5301 ]
    
    This silences -Wmissing-prototypes when defining p9_release_pages.
    
    Link: http://lkml.kernel.org/r/b1c4df8f21689b10d451c28fe38e860722d20e71.1542089696.git.dato@net.com.org.es
    Signed-off-by: Adeodato Simó <dato@net.com.org.es>
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33e0f07f6f29c6c3727b28c5c4a1576c04dec3af
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Sat Sep 8 00:36:08 2018 +0900

    9p: p9dirent_read: check network-provided name length
    
    [ Upstream commit ef5305f1f72eb1cfcda25c382bb0368509c0385b ]
    
    strcpy to dirent->d_name could overflow the buffer, use strscpy to check
    the provided string length and error out if the size was too big.
    
    While we are here, make the function return an error when the pdu
    parsing failed, instead of returning the pdu offset as if it had been a
    success...
    
    Link: http://lkml.kernel.org/r/1536339057-21974-4-git-send-email-asmadeus@codewreck.org
    Addresses-Coverity-ID: 139133 ("Copy into fixed size buffer")
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3479b3c35e82ed10aa0ca2ee9e78c4eded06ba62
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Sat Sep 8 00:26:50 2018 +0900

    9p/rdma: remove useless check in cm_event_handler
    
    [ Upstream commit 473c7dd1d7b59ff8f88a5154737e3eac78a96e5b ]
    
    the client c is always dereferenced to get the rdma struct, so c has to
    be a valid pointer at this point.
    Gcc would optimize that away but let's make coverity happy...
    
    Link: http://lkml.kernel.org/r/1536339057-21974-3-git-send-email-asmadeus@codewreck.org
    Addresses-Coverity-ID: 102778 ("Dereference before null check")
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1275a5cf02a39ae48ae4ae770a43f56e3317f750
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Sat Sep 8 00:10:57 2018 +0900

    9p: acl: fix uninitialized iattr access
    
    [ Upstream commit e02a53d92e197706cad1627bd84705d4aa20a145 ]
    
    iattr is passed to v9fs_vfs_setattr_dotl which does send various
    values from iattr over the wire, even if it tells the server to
    only look at iattr.ia_valid fields this could leak some stack data.
    
    Link: http://lkml.kernel.org/r/1536339057-21974-2-git-send-email-asmadeus@codewreck.org
    Addresses-Coverity-ID: 1195601 ("Uninitalized scalar variable")
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87451738cb176c7d41988fde6c2ec40b2c5a7b65
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Thu Aug 30 19:29:36 2018 +0900

    9p/rdma: do not disconnect on down_interruptible EAGAIN
    
    [ Upstream commit 8b894adb2b7e1d1e64b8954569c761eaf3d51ab5 ]
    
    9p/rdma would sometimes drop the connection and display errors in
    recv_done when the user does ^C.
    The errors were caused by recv buffers that were posted at the time
    of disconnect, and we just do not want to disconnect when
    down_interruptible is... interrupted.
    
    Link: http://lkml.kernel.org/r/1535625307-18019-1-git-send-email-asmadeus@codewreck.org
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6052d03fc9e3bcb5ed0070f20cff3abb3cef4461
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Dec 6 11:20:21 2018 -0300

    perf help: Remove needless use of strncpy()
    
    commit b6313899f4ed2e76b8375cf8069556f5b94fbff0 upstream.
    
    Since we make sure the destination buffer has at least strlen(orig) + 1,
    no need to do a strncpy(dest, orig, strlen(orig)), just use strcpy(dest,
    orig).
    
    This silences this gcc 8.2 warning on Alpine Linux:
    
      In function 'add_man_viewer',
          inlined from 'perf_help_config' at builtin-help.c:284:3:
      builtin-help.c:192:2: error: 'strncpy' output truncated before terminating nul copying as many bytes from a string as its length [-Werror=stringop-truncation]
        strncpy((*p)->name, name, len);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      builtin-help.c: In function 'perf_help_config':
      builtin-help.c:187:15: note: length computed here
        size_t len = strlen(name);
                     ^~~~~~~~~~~~
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: 078006012401 ("perf_counter tools: add in basic glue from Git")
    Link: https://lkml.kernel.org/n/tip-2f69l7drca427ob4km8i7kvo@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1f60e369ad58188403aea08e1f9b3809fd589a6
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Dec 6 11:41:03 2018 -0300

    perf ui helpline: Use strlcpy() as a shorter form of strncpy() + explicit set nul
    
    commit 4d0f16d059ddb91424480d88473f7392f24aebdc upstream.
    
    The strncpy() function may leave the destination string buffer
    unterminated, better use strlcpy() that we have a __weak fallback
    implementation for systems without it.
    
    In this case we are actually setting the null byte at the right place,
    but since we pass the buffer size as the limit to strncpy() and not
    it minus one, gcc ends up warning us about that, see below. So, lets
    just switch to the shorter form provided by strlcpy().
    
    This fixes this warning on an Alpine Linux Edge system with gcc 8.2:
    
      ui/tui/helpline.c: In function 'tui_helpline__push':
      ui/tui/helpline.c:27:2: error: 'strncpy' specified bound 512 equals destination size [-Werror=stringop-truncation]
        strncpy(ui_helpline__current, msg, sz)[sz - 1] = '\0';
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      cc1: all warnings being treated as errors
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: e6e904687949 ("perf ui: Introduce struct ui_helpline")
    Link: https://lkml.kernel.org/n/tip-d1wz0hjjsh19xbalw69qpytj@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7c680979b503a1bb64ee26ffa34207f886090ab
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Feb 13 15:13:30 2019 +0100

    mac80211: drop robust management frames from unknown TA
    
    commit 588f7d39b3592a36fb7702ae3b8bdd9be4621e2f upstream.
    
    When receiving a robust management frame, drop it if we don't have
    rx->sta since then we don't have a security association and thus
    couldn't possibly validate the frame.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aca04068aa31c6be368616b7ae377e58bd54123
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jun 10 13:02:19 2019 -0700

    cfg80211: fix memory leak of wiphy device name
    
    commit 4f488fbca2a86cc7714a128952eead92cac279ab upstream.
    
    In wiphy_new_nm(), if an error occurs after dev_set_name() and
    device_initialize() have already been called, it's necessary to call
    put_device() (via wiphy_free()) to avoid a memory leak.
    
    Reported-by: syzbot+7fddca22578bc67c3fe4@syzkaller.appspotmail.com
    Fixes: 1f87f7d3a3b4 ("cfg80211: add rfkill support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b79e58acda3f7d3004ac35e026bdabc617ea38c0
Author: Steve French <stfrench@microsoft.com>
Date:   Mon Jun 17 14:49:07 2019 -0500

    SMB3: retry on STATUS_INSUFFICIENT_RESOURCES instead of failing write
    
    commit 8d526d62db907e786fd88948c75d1833d82bd80e upstream.
    
    Some servers such as Windows 10 will return STATUS_INSUFFICIENT_RESOURCES
    as the number of simultaneous SMB3 requests grows (even though the client
    has sufficient credits).  Return EAGAIN on STATUS_INSUFFICIENT_RESOURCES
    so that we can retry writes which fail with this status code.
    
    This (for example) fixes large file copies to Windows 10 on fast networks.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59f9ad4b789db877ded449f9ec4595ae593403e4
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Sat Jun 22 15:47:01 2019 +0200

    Bluetooth: Fix regression with minimum encryption key size alignment
    
    commit 693cd8ce3f882524a5d06f7800dd8492411877b3 upstream.
    
    When trying to align the minimum encryption key size requirement for
    Bluetooth connections, it turns out doing this in a central location in
    the HCI connection handling code is not possible.
    
    Original Bluetooth version up to 2.0 used a security model where the
    L2CAP service would enforce authentication and encryption.  Starting
    with Bluetooth 2.1 and Secure Simple Pairing that model has changed into
    that the connection initiator is responsible for providing an encrypted
    ACL link before any L2CAP communication can happen.
    
    Now connecting Bluetooth 2.1 or later devices with Bluetooth 2.0 and
    before devices are causing a regression.  The encryption key size check
    needs to be moved out of the HCI connection handling into the L2CAP
    channel setup.
    
    To achieve this, the current check inside hci_conn_security() has been
    moved into l2cap_check_enc_key_size() helper function and then called
    from four decisions point inside L2CAP to cover all combinations of
    Secure Simple Pairing enabled devices and device using legacy pairing
    and legacy service security model.
    
    Fixes: d5bb334a8e17 ("Bluetooth: Align minimum encryption key size for LE and BR/EDR connections")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203643
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75de0ddd3100466b9f2dfcb496bc6a060b8aad01
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Wed Apr 24 22:19:17 2019 +0200

    Bluetooth: Align minimum encryption key size for LE and BR/EDR connections
    
    commit d5bb334a8e171b262e48f378bd2096c0ea458265 upstream.
    
    The minimum encryption key size for LE connections is 56 bits and to
    align LE with BR/EDR, enforce 56 bits of minimum encryption key size for
    BR/EDR connections as well.
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 892b9bf41b2526f51e3f2c66b9494da5e088c404
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon May 13 00:15:31 2019 -0300

    ARM: imx: cpuidle-imx6sx: Restrict the SW2ISO increase to i.MX6SX
    
    commit b25af2ff7c07bd19af74e3f64ff82e2880d13d81 upstream.
    
    Since commit 1e434b703248 ("ARM: imx: update the cpu power up timing
    setting on i.mx6sx") some characters loss is noticed on i.MX6ULL UART
    as reported by Christoph Niedermaier.
    
    The intention of such commit was to increase the SW2ISO field for i.MX6SX
    only, but since cpuidle-imx6sx is also used on i.MX6UL/i.MX6ULL this caused
    unintended side effects on other SoCs.
    
    Fix this problem by keeping the original SW2ISO value for i.MX6UL/i.MX6ULL
    and only increase SW2ISO in the i.MX6SX case.
    
    Cc: stable@vger.kernel.org
    Fixes: 1e434b703248 ("ARM: imx: update the cpu power up timing setting on i.mx6sx")
    Reported-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Tested-by: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
    Tested-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 562f962142e2a04203e209bdc99ad53a7b929a89
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri Jun 7 16:46:07 2019 -0400

    can: purge socket error queue on sock destruct
    
    commit fd704bd5ee749d560e86c4f1fd2ef486d8abf7cf upstream.
    
    CAN supports software tx timestamps as of the below commit. Purge
    any queued timestamp packets on socket destroy.
    
    Fixes: 51f31cabe3ce ("ip: support for TX timestamps on UDP and RAW sockets")
    Reported-by: syzbot+a90604060cb40f5bdd16@syzkaller.appspotmail.com
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4fd1ed2b17217611329d6b633bb3aff33f257c0
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Thu Jan 31 09:37:22 2019 +0000

    can: flexcan: fix timeout when set small bitrate
    
    commit 247e5356a709eb49a0d95ff2a7f07dac05c8252c upstream.
    
    Current we can meet timeout issue when setting a small bitrate like
    10000 as follows on i.MX6UL EVK board (ipg clock = 66MHZ, per clock =
    30MHZ):
    
    | root@imx6ul7d:~# ip link set can0 up type can bitrate 10000
    
    A link change request failed with some changes committed already.
    Interface can0 may have been left with an inconsistent configuration,
    please check.
    
    | RTNETLINK answers: Connection timed out
    
    It is caused by calling of flexcan_chip_unfreeze() timeout.
    
    Originally the code is using usleep_range(10, 20) for unfreeze
    operation, but the patch (8badd65 can: flexcan: avoid calling
    usleep_range from interrupt context) changed it into udelay(10) which is
    only a half delay of before, there're also some other delay changes.
    
    After double to FLEXCAN_TIMEOUT_US to 100 can fix the issue.
    
    Meanwhile, Rasmus Villemoes reported that even with a timeout of 100,
    flexcan_probe() fails on the MPC8309, which requires a value of at least
    140 to work reliably. 250 works for everyone.
    
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Reviewed-by: Dong Aisheng <aisheng.dong@nxp.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d38cac353bc5d3d056906c77ca27326b0b6c46bc
Author: Naohiro Aota <naohiro.aota@wdc.com>
Date:   Thu Jun 6 16:54:44 2019 +0900

    btrfs: start readahead also in seed devices
    
    commit c4e0540d0ad49c8ceab06cceed1de27c4fe29f6e upstream.
    
    Currently, btrfs does not consult seed devices to start readahead. As a
    result, if readahead zone is added to the seed devices, btrfs_reada_wait()
    indefinitely wait for the reada_ctl to finish.
    
    You can reproduce the hung by modifying btrfs/163 to have larger initial
    file size (e.g. xfs_io pwrite 4M instead of current 256K).
    
    Fixes: 7414a03fbf9e ("btrfs: initial readahead code and prototypes")
    Cc: stable@vger.kernel.org # 3.2+: ce7791ffee1e: Btrfs: fix race between readahead and device replace/removal
    Cc: stable@vger.kernel.org # 3.2+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95c82386950c7a5e018ac02d795aa8782f52754b
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri May 20 01:57:20 2016 +0100

    Btrfs: fix race between readahead and device replace/removal
    
    commit ce7791ffee1e1ee9f97193b817c7dd1fa6746aad upstream.
    
    The list of devices is protected by the device_list_mutex and the device
    replace code, in its finishing phase correctly takes that mutex before
    removing the source device from that list. However the readahead code was
    iterating that list without acquiring the respective mutex leading to
    crashes later on due to invalid memory accesses:
    
    [125671.831036] general protection fault: 0000 [#1] PREEMPT SMP
    [125671.832129] Modules linked in: btrfs dm_flakey dm_mod crc32c_generic xor raid6_pq acpi_cpufreq tpm_tis tpm ppdev evdev parport_pc psmouse sg parport
    processor ser
    [125671.834973] CPU: 10 PID: 19603 Comm: kworker/u32:19 Tainted: G        W       4.6.0-rc7-btrfs-next-29+ #1
    [125671.834973] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS by qemu-project.org 04/01/2014
    [125671.834973] Workqueue: btrfs-readahead btrfs_readahead_helper [btrfs]
    [125671.834973] task: ffff8801ac520540 ti: ffff8801ac918000 task.ti: ffff8801ac918000
    [125671.834973] RIP: 0010:[<ffffffff81270479>]  [<ffffffff81270479>] __radix_tree_lookup+0x6a/0x105
    [125671.834973] RSP: 0018:ffff8801ac91bc28  EFLAGS: 00010206
    [125671.834973] RAX: 0000000000000000 RBX: 6b6b6b6b6b6b6b6a RCX: 0000000000000000
    [125671.834973] RDX: 0000000000000000 RSI: 00000000000c1bff RDI: ffff88002ebd62a8
    [125671.834973] RBP: ffff8801ac91bc70 R08: 0000000000000001 R09: 0000000000000000
    [125671.834973] R10: ffff8801ac91bc70 R11: 0000000000000000 R12: ffff88002ebd62a8
    [125671.834973] R13: 0000000000000000 R14: 0000000000000000 R15: 00000000000c1bff
    [125671.834973] FS:  0000000000000000(0000) GS:ffff88023fd40000(0000) knlGS:0000000000000000
    [125671.834973] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [125671.834973] CR2: 000000000073cae4 CR3: 00000000b7723000 CR4: 00000000000006e0
    [125671.834973] Stack:
    [125671.834973]  0000000000000000 ffff8801422d5600 ffff8802286bbc00 0000000000000000
    [125671.834973]  0000000000000001 ffff8802286bbc00 00000000000c1bff 0000000000000000
    [125671.834973]  ffff88002e639eb8 ffff8801ac91bc80 ffffffff81270541 ffff8801ac91bcb0
    [125671.834973] Call Trace:
    [125671.834973]  [<ffffffff81270541>] radix_tree_lookup+0xd/0xf
    [125671.834973]  [<ffffffffa04ae6a6>] reada_peer_zones_set_lock+0x3e/0x60 [btrfs]
    [125671.834973]  [<ffffffffa04ae8b9>] reada_pick_zone+0x29/0x103 [btrfs]
    [125671.834973]  [<ffffffffa04af42f>] reada_start_machine_worker+0x129/0x2d3 [btrfs]
    [125671.834973]  [<ffffffffa04880be>] btrfs_scrubparity_helper+0x185/0x3aa [btrfs]
    [125671.834973]  [<ffffffffa0488341>] btrfs_readahead_helper+0xe/0x10 [btrfs]
    [125671.834973]  [<ffffffff81069691>] process_one_work+0x271/0x4e9
    [125671.834973]  [<ffffffff81069dda>] worker_thread+0x1eb/0x2c9
    [125671.834973]  [<ffffffff81069bef>] ? rescuer_thread+0x2b3/0x2b3
    [125671.834973]  [<ffffffff8106f403>] kthread+0xd4/0xdc
    [125671.834973]  [<ffffffff8149e242>] ret_from_fork+0x22/0x40
    [125671.834973]  [<ffffffff8106f32f>] ? kthread_stop+0x286/0x286
    
    So fix this by taking the device_list_mutex in the readahead code. We
    can't use here the lighter approach of using a rcu_read_lock() and
    rcu_read_unlock() pair together with a list_for_each_entry_rcu() call
    because we end up doing calls to sleeping functions (kzalloc()) in the
    respective code path.
    
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66f0f0fdb9b96d931e479b5c9ea3305f68b3743b
Author: Robert Hancock <hancock@sedsystems.ca>
Date:   Wed Jun 5 13:49:00 2019 -0600

    hwmon: (pmbus/core) Treat parameters as paged if on multiple pages
    
    [ Upstream commit 4a60570dce658e3f8885bbcf852430b99f65aca5 ]
    
    Some chips have attributes which exist on more than one page but the
    attribute is not presently marked as paged. This causes the attributes
    to be generated with the same label, which makes it impossible for
    userspace to tell them apart.
    
    Marking all such attributes as paged would result in the page suffix
    being added regardless of whether they were present on more than one
    page or not, which might break existing setups. Therefore, we add a
    second check which treats the attribute as paged, even if not marked as
    such, if it is present on multiple pages.
    
    Fixes: b4ce237b7f7d ("hwmon: (pmbus) Introduce infrastructure to detect sensors and limit registers")
    Signed-off-by: Robert Hancock <hancock@sedsystems.ca>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4847348903fb41d5a3fb0eab58f4d766514fe877
Author: Alexandra Winter <wintera@linux.ibm.com>
Date:   Wed Jun 5 13:48:50 2019 +0200

    s390/qeth: fix VLAN attribute in bridge_hostnotify udev event
    
    [ Upstream commit 335726195e460cb6b3f795b695bfd31f0ea70ef0 ]
    
    Enabling sysfs attribute bridge_hostnotify triggers a series of udev events
    for the MAC addresses of all currently connected peers. In case no VLAN is
    set for a peer, the device reports the corresponding MAC addresses with
    VLAN ID 4096. This currently results in attribute VLAN=4096 for all
    non-VLAN interfaces in the initial series of events after host-notify is
    enabled.
    
    Instead, no VLAN attribute should be reported in the udev event for
    non-VLAN interfaces.
    
    Only the initial events face this issue. For dynamic changes that are
    reported later, the device uses a validity flag.
    
    This also changes the code so that it now sets the VLAN attribute for
    MAC addresses with VID 0. On Linux, no qeth interface will ever be
    registered with VID 0: Linux kernel registers VID 0 on all network
    interfaces initially, but qeth will drop .ndo_vlan_rx_add_vid for VID 0.
    Peers with other OSs could register MACs with VID 0.
    
    Fixes: 9f48b9db9a22 ("qeth: bridgeport support - address notifications")
    Signed-off-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b63a2e8812a7bff8f4cbcbc1be33982911b1f93
Author: Avri Altman <avri.altman@wdc.com>
Date:   Tue May 21 11:24:22 2019 +0300

    scsi: ufs: Check that space was properly alloced in copy_query_response
    
    [ Upstream commit 1c90836f70f9a8ef7b7ad9e1fdd8961903e6ced6 ]
    
    struct ufs_dev_cmd is the main container that supports device management
    commands. In the case of a read descriptor request, we assume that the
    proper space was allocated in dev_cmd to hold the returning descriptor.
    
    This is no longer true, as there are flows that doesn't use dev_cmd for
    device management requests, and was wrong in the first place.
    
    Fixes: d44a5f98bb49 (ufs: query descriptor API)
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d367346c5b43e3d5b1d2bf305e8e46cebda2000e
Author: George G. Davis <george_davis@mentor.com>
Date:   Mon Jun 3 10:30:39 2019 -0400

    scripts/checkstack.pl: Fix arm64 wrong or unknown architecture
    
    [ Upstream commit 4f45d62a52297b10ded963412a158685647ecdec ]
    
    The following error occurs for the `make ARCH=arm64 checkstack` case:
    
    aarch64-linux-gnu-objdump -d vmlinux $(find . -name '*.ko') | \
    perl ./scripts/checkstack.pl arm64
    wrong or unknown architecture "arm64"
    
    As suggested by Masahiro Yamada, fix the above error using regular
    expressions in the same way it was fixed for the `ARCH=x86` case via
    commit fda9f9903be6 ("scripts/checkstack.pl: automatically handle
    32-bit and 64-bit mode for ARCH=x86").
    
    Suggested-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: George G. Davis <george_davis@mentor.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37515df6b4885c72111683613cdc45dae215091b
Author: Young Xiao <92siuyang@gmail.com>
Date:   Wed May 29 10:21:48 2019 +0800

    sparc: perf: fix updated event period in response to PERF_EVENT_IOC_PERIOD
    
    [ Upstream commit 56cd0aefa475079e9613085b14a0f05037518fed ]
    
    The PERF_EVENT_IOC_PERIOD ioctl command can be used to change the
    sample period of a running perf_event. Consequently, when calculating
    the next event period, the new period will only be considered after the
    previous one has overflowed.
    
    This patch changes the calculation of the remaining event ticks so that
    they are offset if the period has changed.
    
    See commit 3581fe0ef37c ("ARM: 7556/1: perf: fix updated event period in
    response to PERF_EVENT_IOC_PERIOD") for details.
    
    Signed-off-by: Young Xiao <92siuyang@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9df6837e2220c30af3ffd89f5b022f44af2e60c1
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Fri May 31 16:59:50 2019 +0800

    net: hns: Fix loopback test failed at copper ports
    
    [ Upstream commit 2e1f164861e500f4e068a9d909bbd3fcc7841483 ]
    
    When doing a loopback test at copper ports, the serdes loopback
    and the phy loopback will fail, because of the adjust link had
    not finished, and phy not ready.
    
    Adds sleep between adjust link and test process to fix it.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 629877b5a33c92bc81e637090fb566017e3c2b33
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Sat May 25 20:20:24 2019 +0800

    MIPS: uprobes: remove set but not used variable 'epc'
    
    [ Upstream commit f532beeeff0c0a3586cc15538bc52d249eb19e7c ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    arch/mips/kernel/uprobes.c: In function 'arch_uprobe_pre_xol':
    arch/mips/kernel/uprobes.c:115:17: warning: variable 'epc' set but not used [-Wunused-but-set-variable]
    
    It's never used since introduction in
    commit 40e084a506eb ("MIPS: Add uprobes support.")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: <ralf@linux-mips.org>
    Cc: <jhogan@kernel.org>
    Cc: <linux-kernel@vger.kernel.org>
    Cc: <linux-mips@vger.kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a66d44b69a16ee43dfd82181345f1f24ec4ad201
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:45 2019 -0400

    IB/hfi1: Insure freeze_work work_struct is canceled on shutdown
    
    [ Upstream commit 6d517353c70bb0818b691ca003afdcb5ee5ea44e ]
    
    By code inspection, the freeze_work is never canceled.
    
    Fix by adding a cancel_work_sync in the shutdown path to insure it is no
    longer running.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96fdfe5665d4b4b8b5569abcd0903925edac5d34
Author: Helge Deller <deller@gmx.de>
Date:   Fri May 24 23:16:25 2019 +0200

    parisc: Fix compiler warnings in float emulation code
    
    [ Upstream commit 6b98d9134e14f5ef4bcf64b27eedf484ed19a1ec ]
    
    Avoid such compiler warnings:
    arch/parisc/math-emu/cnv_float.h:71:27: warning: ‘<<’ in boolean context, did you mean ‘<’ ? [-Wint-in-bool-context]
         ((Dintp1(dint_valueA) << 33 - SGL_EXP_LENGTH) || Dintp2(dint_valueB))
    arch/parisc/math-emu/fcnvxf.c:257:6: note: in expansion of macro ‘Dint_isinexact_to_sgl’
      if (Dint_isinexact_to_sgl(srcp1,srcp2)) {
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ececcbae0a3a915f241cfa7b8410bf63deef2dd3
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue May 14 23:24:37 2019 +0800

    parport: Fix mem leak in parport_register_dev_model
    
    [ Upstream commit 1c7ebeabc9e5ee12e42075a597de40fdb9059530 ]
    
    BUG: memory leak
    unreferenced object 0xffff8881df48cda0 (size 16):
      comm "syz-executor.0", pid 5077, jiffies 4295994670 (age 22.280s)
      hex dump (first 16 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000d2d0d5fe>] parport_register_dev_model+0x141/0x6e0 [parport]
        [<00000000782f6dab>] 0xffffffffc15d1196
        [<00000000d2ca6ae4>] platform_drv_probe+0x7e/0x100
        [<00000000628c2a94>] really_probe+0x342/0x4d0
        [<000000006874f5da>] driver_probe_device+0x8c/0x170
        [<00000000424de37a>] __device_attach_driver+0xda/0x100
        [<000000002acab09a>] bus_for_each_drv+0xfe/0x170
        [<000000003d9e5f31>] __device_attach+0x190/0x230
        [<0000000035d32f80>] bus_probe_device+0x123/0x140
        [<00000000a05ba627>] device_add+0x7cc/0xce0
        [<000000003f7560bf>] platform_device_add+0x230/0x3c0
        [<000000002a0be07d>] 0xffffffffc15d0949
        [<000000007361d8d2>] port_check+0x3b/0x50 [parport]
        [<000000004d67200f>] bus_for_each_dev+0x115/0x180
        [<000000003ccfd11c>] __parport_register_driver+0x1f0/0x210 [parport]
        [<00000000987f06fc>] 0xffffffffc15d803e
    
    After commit 4e5a74f1db8d ("parport: Revert "parport: fix
    memory leak""), free_pardevice do not free par_dev->state,
    we should free it in error path of parport_register_dev_model
    before return.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 4e5a74f1db8d ("parport: Revert "parport: fix memory leak"")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9617058178414c2ff32db0d55f060a35ec6f56ce
Author: Jann Horn <jannh@google.com>
Date:   Tue May 28 17:32:26 2019 +0200

    apparmor: enforce nullbyte at end of tag string
    
    commit 8404d7a674c49278607d19726e0acc0cae299357 upstream.
    
    A packed AppArmor policy contains null-terminated tag strings that are read
    by unpack_nameX(). However, unpack_nameX() uses string functions on them
    without ensuring that they are actually null-terminated, potentially
    leading to out-of-bounds accesses.
    
    Make sure that the tag string is null-terminated before passing it to
    strcmp().
    
    Cc: stable@vger.kernel.org
    Fixes: 736ec752d95e ("AppArmor: policy routines for loading and unpacking policy")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b6818e02588eb6eee0d741106dd71248e7a6c07
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Thu May 23 12:55:26 2019 -0700

    Input: uinput - add compat ioctl number translation for UI_*_FF_UPLOAD
    
    commit 7c7da40da1640ce6814dab1e8031b44e19e5a3f6 upstream.
    
    In the case of compat syscall ioctl numbers for UI_BEGIN_FF_UPLOAD and
    UI_END_FF_UPLOAD need to be adjusted before being passed on
    uinput_ioctl_handler() since code built with -m32 will be passing
    slightly different values. Extend the code already covering
    UI_SET_PHYS to cover UI_BEGIN_FF_UPLOAD and UI_END_FF_UPLOAD as well.
    
    Reported-by: Pierre-Loup A. Griffais <pgriffais@valvesoftware.com>
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a7435e1a5b94c8970a82254c27004dcaa8c440c
Author: Peter Chen <peter.chen@nxp.com>
Date:   Mon Jun 17 09:49:07 2019 +0800

    usb: chipidea: udc: workaround for endpoint conflict issue
    
    commit c19dffc0a9511a7d7493ec21019aefd97e9a111b upstream.
    
    An endpoint conflict occurs when the USB is working in device mode
    during an isochronous communication. When the endpointA IN direction
    is an isochronous IN endpoint, and the host sends an IN token to
    endpointA on another device, then the OUT transaction may be missed
    regardless the OUT endpoint number. Generally, this occurs when the
    device is connected to the host through a hub and other devices are
    connected to the same hub.
    
    The affected OUT endpoint can be either control, bulk, isochronous, or
    an interrupt endpoint. After the OUT endpoint is primed, if an IN token
    to the same endpoint number on another device is received, then the OUT
    endpoint may be unprimed (cannot be detected by software), which causes
    this endpoint to no longer respond to the host OUT token, and thus, no
    corresponding interrupt occurs.
    
    There is no good workaround for this issue, the only thing the software
    could do is numbering isochronous IN from the highest endpoint since we
    have observed most of device number endpoint from the lowest.
    
    Cc: <stable@vger.kernel.org> #v3.14+
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: Jun Li <jun.li@nxp.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9efccd7745a1d659954cc5a0f6226cac2c4a1036
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 1 11:05:41 2019 -0700

    gcc-9: silence 'address-of-packed-member' warning
    
    commit 6f303d60534c46aa1a239f29c321f95c83dda748 upstream.
    
    We already did this for clang, but now gcc has that warning too.  Yes,
    yes, the address may be unaligned.  And that's kind of the point.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7247666a71ad147a5f2ecbd1b09cb3e6c7b6a32
Author: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
Date:   Thu May 23 14:45:35 2019 +0200

    tracing: Silence GCC 9 array bounds warning
    
    commit 0c97bf863efce63d6ab7971dad811601e6171d2f upstream.
    
    Starting with GCC 9, -Warray-bounds detects cases when memset is called
    starting on a member of a struct but the size to be cleared ends up
    writing over further members.
    
    Such a call happens in the trace code to clear, at once, all members
    after and including `seq` on struct trace_iterator:
    
        In function 'memset',
            inlined from 'ftrace_dump' at kernel/trace/trace.c:8914:3:
        ./include/linux/string.h:344:9: warning: '__builtin_memset' offset
        [8505, 8560] from the object at 'iter' is out of the bounds of
        referenced subobject 'seq' with type 'struct trace_seq' at offset
        4368 [-Warray-bounds]
          344 |  return __builtin_memset(p, c, size);
              |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In order to avoid GCC complaining about it, we compute the address
    ourselves by adding the offsetof distance instead of referring
    directly to the member.
    
    Since there are two places doing this clear (trace.c and trace_kdb.c),
    take the chance to move the workaround into a single place in
    the internal header.
    
    Link: http://lkml.kernel.org/r/20190523124535.GA12931@gmail.com
    
    Signed-off-by: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    [ Removed unnecessary parenthesis around "iter" ]
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93709767272bf10f0244e2ca4d174c20668f5a54
Author: Jan Kara <jack@suse.cz>
Date:   Wed Jun 19 09:05:41 2019 +0200

    scsi: vmw_pscsi: Fix use-after-free in pvscsi_queue_lck()
    
    commit 240b4cc8fd5db138b675297d4226ec46594d9b3b upstream.
    
    Once we unlock adapter->hw_lock in pvscsi_queue_lck() nothing prevents just
    queued scsi_cmnd from completing and freeing the request. Thus cmd->cmnd[0]
    dereference can dereference already freed request leading to kernel crashes
    or other issues (which one of our customers observed). Store cmd->cmnd[0]
    in a local variable before unlocking adapter->hw_lock to fix the issue.
    
    CC: <stable@vger.kernel.org>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd6042e9c3733f6fffc98ee88e239844d6f53a5d
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jun 28 12:07:05 2019 -0700

    mm/page_idle.c: fix oops because end_pfn is larger than max_pfn
    
    commit 7298e3b0a149c91323b3205d325e942c3b3b9ef6 upstream.
    
    Currently the calcuation of end_pfn can round up the pfn number to more
    than the actual maximum number of pfns, causing an Oops.  Fix this by
    ensuring end_pfn is never more than max_pfn.
    
    This can be easily triggered when on systems where the end_pfn gets
    rounded up to more than max_pfn using the idle-page stress-ng stress test:
    
    sudo stress-ng --idle-page 0
    
      BUG: unable to handle kernel paging request at 00000000000020d8
      #PF error: [normal kernel read fault]
      PGD 0 P4D 0
      Oops: 0000 [#1] SMP PTI
      CPU: 1 PID: 11039 Comm: stress-ng-idle- Not tainted 5.0.0-5-generic #6-Ubuntu
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
      RIP: 0010:page_idle_get_page+0xc8/0x1a0
      Code: 0f b1 0a 75 7d 48 8b 03 48 89 c2 48 c1 e8 33 83 e0 07 48 c1 ea 36 48 8d 0c 40 4c 8d 24 88 49 c1 e4 07 4c 03 24 d5 00 89 c3 be <49> 8b 44 24 58 48 8d b8 80 a1 02 00 e8 07 d5 77 00 48 8b 53 08 48
      RSP: 0018:ffffafd7c672fde8 EFLAGS: 00010202
      RAX: 0000000000000005 RBX: ffffe36341fff700 RCX: 000000000000000f
      RDX: 0000000000000284 RSI: 0000000000000275 RDI: 0000000001fff700
      RBP: ffffafd7c672fe00 R08: ffffa0bc34056410 R09: 0000000000000276
      R10: ffffa0bc754e9b40 R11: ffffa0bc330f6400 R12: 0000000000002080
      R13: ffffe36341fff700 R14: 0000000000080000 R15: ffffa0bc330f6400
      FS: 00007f0ec1ea5740(0000) GS:ffffa0bc7db00000(0000) knlGS:0000000000000000
      CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00000000000020d8 CR3: 0000000077d68000 CR4: 00000000000006e0
      Call Trace:
        page_idle_bitmap_write+0x8c/0x140
        sysfs_kf_bin_write+0x5c/0x70
        kernfs_fop_write+0x12e/0x1b0
        __vfs_write+0x1b/0x40
        vfs_write+0xab/0x1b0
        ksys_write+0x55/0xc0
        __x64_sys_write+0x1a/0x20
        do_syscall_64+0x5a/0x110
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Link: http://lkml.kernel.org/r/20190618124352.28307-1-colin.king@canonical.com
    Fixes: 33c3fc71c8cf ("mm: introduce idle page tracking")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb7adf69e00dc08c3325a12f6cec3cd8ff53ebfc
Author: Jann Horn <jannh@google.com>
Date:   Fri Jun 28 12:06:46 2019 -0700

    fs/binfmt_flat.c: make load_flat_shared_library() work
    
    commit 867bfa4a5fcee66f2b25639acae718e8b28b25a5 upstream.
    
    load_flat_shared_library() is broken: It only calls load_flat_file() if
    prepare_binprm() returns zero, but prepare_binprm() returns the number of
    bytes read - so this only happens if the file is empty.
    
    Instead, call into load_flat_file() if the number of bytes read is
    non-negative. (Even if the number of bytes is zero - in that case,
    load_flat_file() will see nullbytes and return a nice -ENOEXEC.)
    
    In addition, remove the code related to bprm creds and stop using
    prepare_binprm() - this code is loading a library, not a main executable,
    and it only actually uses the members "buf", "file" and "filename" of the
    linux_binprm struct. Instead, call kernel_read() directly.
    
    Link: http://lkml.kernel.org/r/20190524201817.16509-1-jannh@google.com
    Fixes: 287980e49ffc ("remove lots of IS_ERR_VALUE abuses")
    Signed-off-by: Jann Horn <jannh@google.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Nicolas Pitre <nicolas.pitre@linaro.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
