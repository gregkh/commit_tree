commit 2df397931072ff4e66f9e42ae1f1630c03513ce7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Dec 25 14:23:47 2017 +0100

    Linux 4.9.72

commit 6430e166aee863d293a9a3c083af7a64fec57d13
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Apr 1 13:47:44 2017 -0700

    sparc32: Export vac_cache_size to fix build error
    
    commit 9d262d95114cf2e2ac5e0ff358347fa2e214eda5 upstream.
    
    sparc32:allmodconfig fails to build with the following error.
    
    ERROR: "vac_cache_size" [drivers/infiniband/sw/rxe/rdma_rxe.ko] undefined!
    
    Fixes: cb8864559631 ("infiniband: Fix alignment of mmap cookies ...")
    Cc: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Cc: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3695b3b18519099224efbc5875569d2cb6da256d
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:29:05 2017 +0100

    bpf: fix incorrect sign extension in check_alu_op()
    
    
    From: Jann Horn <jannh@google.com>
    
    [ Upstream commit 95a762e2c8c942780948091f8f2a4f32fce1ac6f ]
    
    Distinguish between
    BPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)
    and BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);
    only perform sign extension in the first case.
    
    Starting with v4.14, this is exploitable by unprivileged users as long as
    the unprivileged_bpf_disabled sysctl isn't set.
    
    Debian assigned CVE-2017-16995 for this issue.
    
    v3:
     - add CVE number (Ben Hutchings)
    
    Fixes: 484611357c19 ("bpf: allow access into map value arrays")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d75d3ee237cee9068022117e059b64bbab617f3d
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:29:04 2017 +0100

    bpf: reject out-of-bounds stack pointer calculation
    
    
    From: Jann Horn <jannh@google.com>
    
    Reject programs that compute wildly out-of-bounds stack pointers.
    Otherwise, pointers can be computed with an offset that doesn't fit into an
    `int`, causing security issues in the stack memory access check (as well as
    signed integer overflow during offset addition).
    
    This is a fix specifically for the v4.9 stable tree because the mainline
    code looks very different at this point.
    
    Fixes: 7bca0a9702edf ("bpf: enhance verifier to understand stack pointer arithmetic")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b5b73ea87a06236fa124bdebed1390d362d3439
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:29:03 2017 +0100

    bpf: fix branch pruning logic
    
    
    From: Alexei Starovoitov <ast@fb.com>
    
    [ Upstream commit c131187db2d3fa2f8bf32fdf4e9a4ef805168467 ]
    
    when the verifier detects that register contains a runtime constant
    and it's compared with another constant it will prune exploration
    of the branch that is guaranteed not to be taken at runtime.
    This is all correct, but malicious program may be constructed
    in such a way that it always has a constant comparison and
    the other branch is never taken under any conditions.
    In this case such path through the program will not be explored
    by the verifier. It won't be taken at run-time either, but since
    all instructions are JITed the malicious program may cause JITs
    to complain about using reserved fields, etc.
    To fix the issue we have to track the instructions explored by
    the verifier and sanitize instructions that are dead at run time
    with NOPs. We cannot reject such dead code, since llvm generates
    it for valid C code, since it doesn't do as much data flow
    analysis as the verifier does.
    
    Fixes: 17a5267067f3 ("bpf: verifier (add verifier core)")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 565f012f5abb2d2bba8e03efcd1dba7577245011
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Dec 22 16:29:02 2017 +0100

    bpf: adjust insn_aux_data when patching insns
    
    
    From: Alexei Starovoitov <ast@fb.com>
    
    [ Upstream commit 8041902dae5299c1f194ba42d14383f734631009 ]
    
    convert_ctx_accesses() replaces single bpf instruction with a set of
    instructions. Adjust corresponding insn_aux_data while patching.
    It's needed to make sure subsequent 'for(all insn)' loops
    have matching insn and insn_aux_data.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b6c84bc64490529c33bd5f0f9e2c6256031f398
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Dec 22 08:43:23 2017 +0100

    Revert "Bluetooth: btusb: driver to enable the usb-wakeup feature"
    
    This reverts commit 7336f5481f6cf913a2d29d98c6e11f4bbe19d3b2 which is
    commit a0085f2510e8976614ad8f766b209448b385492f upstream.
    
    It causes problems with working systems, as noted by a number of the
    ChromeOS developers.
    
    Cc: Sukumar Ghorai <sukumar.ghorai@intel.com>
    Cc: Amit K Bag <amit.k.bag@intel.com>
    Cc: Oliver Neukum <oneukum@suse.com>
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Reported-by: Brian Norris <briannorris@chromium.org>
    Acked-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbeb719e24c333a5e4067de1e9a0833ba63e2c75
Author: Peter Hutterer <peter.hutterer@who-t.net>
Date:   Mon Dec 4 10:26:17 2017 +1000

    platform/x86: asus-wireless: send an EV_SYN/SYN_REPORT between state changes
    
    commit bff5bf9db1c9453ffd0a78abed3e2d040c092fd9 upstream.
    
    Sending the switch state change twice within the same frame is invalid
    evdev protocol and only works if the client handles keys immediately as
    well. Processing events immediately is incorrect, it forces a fake
    order of events that does not exist on the device.
    
    Recent versions of libinput changed to only process the device state and
    SYN_REPORT time, so now the key event is lost.
    
    https://bugs.freedesktop.org/show_bug.cgi?id=104041
    
    Signed-off-by: Peter Hutterer <peter.hutterer@who-t.net>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00ecb4b1a5991a67e58c44b2572c87534f0939cc
Author: Aleksandar Markovic <aleksandar.markovic@mips.com>
Date:   Thu Nov 2 12:13:58 2017 +0100

    MIPS: math-emu: Fix final emulation phase for certain instructions
    
    commit 409fcace9963c1e8d2cb0f7ac62e8b34d47ef979 upstream.
    
    Fix final phase of <CLASS|MADDF|MSUBF|MAX|MIN|MAXA|MINA>.<D|S>
    emulation. Provide proper generation of SIGFPE signal and updating
    debugfs FP exception stats in cases of any exception flags set in
    preceding phases of emulation.
    
    CLASS.<D|S> instruction may generate "Unimplemented Operation" FP
    exception. <MADDF|MSUBF>.<D|S> instructions may generate "Inexact",
    "Unimplemented Operation", "Invalid Operation", "Overflow", and
    "Underflow" FP exceptions. <MAX|MIN|MAXA|MINA>.<D|S> instructions
    can generate "Unimplemented Operation" and "Invalid Operation" FP
    exceptions.
    
    The proper final processing of the cases when any FP exception
    flag is set is achieved by replacing "break" statement with "goto
    copcsr" statement. With such solution, this patch brings the final
    phase of emulation of the above instructions consistent with the
    one corresponding to the previously implemented emulation of other
    related FPU instructions (ADD, SUB, etc.).
    
    Fixes: 38db37ba069f ("MIPS: math-emu: Add support for the MIPS R6 CLASS FPU instruction")
    Fixes: e24c3bec3e8e ("MIPS: math-emu: Add support for the MIPS R6 MADDF FPU instruction")
    Fixes: 83d43305a1df ("MIPS: math-emu: Add support for the MIPS R6 MSUBF FPU instruction")
    Fixes: a79f5f9ba508 ("MIPS: math-emu: Add support for the MIPS R6 MAX{, A} FPU instruction")
    Fixes: 4e9561b20e2f ("MIPS: math-emu: Add support for the MIPS R6 MIN{, A} FPU instruction")
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Douglas Leung <douglas.leung@mips.com>
    Cc: Goran Ferenc <goran.ferenc@mips.com>
    Cc: "Maciej W. Rozycki" <macro@imgtec.com>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Paul Burton <paul.burton@mips.com>
    Cc: Petar Jovanovic <petar.jovanovic@mips.com>
    Cc: Raghu Gandham <raghu.gandham@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17581/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cff90788e289eb9b24aa4d6c9de78a689402b0d
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:47 2017 +0200

    thermal/drivers/hisi: Fix multiple alarm interrupts firing
    
    commit db2b0332608c8e648ea1e44727d36ad37cdb56cb upstream.
    
    The DT specifies a threshold of 65000, we setup the register with a value in
    the temperature resolution for the controller, 64656.
    
    When we reach 64656, the interrupt fires, the interrupt is disabled. Then the
    irq thread runs and calls thermal_zone_device_update() which will call in turn
    hisi_thermal_get_temp().
    
    The function will look if the temperature decreased, assuming it was more than
    65000, but that is not the case because the current temperature is 64656
    (because of the rounding when setting the threshold). This condition being
    true, we re-enable the interrupt which fires immediately after exiting the irq
    thread. That happens again and again until the temperature goes to more than
    65000.
    
    Potentially, there is here an interrupt storm if the temperature stabilizes at
    this temperature. A very unlikely case but possible.
    
    In any case, it does not make sense to handle dozens of alarm interrupt for
    nothing.
    
    Fix this by rounding the threshold value to the controller resolution so the
    check against the threshold is consistent with the one set in the controller.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b2c46a6be45a36c64230cc23859e2113ab1cc49
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:46 2017 +0200

    thermal/drivers/hisi: Simplify the temperature/step computation
    
    commit 48880b979cdc9ef5a70af020f42b8ba1e51dbd34 upstream.
    
    The step and the base temperature are fixed values, we can simplify the
    computation by converting the base temperature to milli celsius and use a
    pre-computed step value. That saves us a lot of mult + div for nothing at
    runtime.
    
    Take also the opportunity to change the function names to be consistent with
    the rest of the code.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dac559df962c064d13a14610e81535c55fcf33d
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:45 2017 +0200

    thermal/drivers/hisi: Fix kernel panic on alarm interrupt
    
    commit 2cb4de785c40d4a2132cfc13e63828f5a28c3351 upstream.
    
    The threaded interrupt for the alarm interrupt is requested before the
    temperature controller is setup. This one can fire an interrupt immediately
    leading to a kernel panic as the sensor data is not initialized.
    
    In order to prevent that, move the threaded irq after the Tsensor is setup.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b679b8d7bad06765dde62c1bc2f378d5461928f3
Author: Daniel Lezcano <daniel.lezcano@linaro.org>
Date:   Thu Oct 19 19:05:43 2017 +0200

    thermal/drivers/hisi: Fix missing interrupt enablement
    
    commit c176b10b025acee4dc8f2ab1cd64eb73b5ccef53 upstream.
    
    The interrupt for the temperature threshold is not enabled at the end of the
    probe function, enable it after the setup is complete.
    
    On the other side, the irq_enabled is not correctly set as we are checking if
    the interrupt is masked where 'yes' means irq_enabled=false.
    
            irq_get_irqchip_state(data->irq, IRQCHIP_STATE_MASKED,
                                    &data->irq_enabled);
    
    As we are always enabling the interrupt, it is pointless to check if
    the interrupt is masked or not, just set irq_enabled to 'true'.
    
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Tested-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82bf76afa8affad676ba6442bd4656f842312988
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Tue Jun 6 15:04:46 2017 +0530

    thermal: hisilicon: Handle return value of clk_prepare_enable
    
    commit 919054fdfc8adf58c5512fe9872eb53ea0f5525d upstream.
    
    clk_prepare_enable() can fail here and we must check its return value.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Kevin Wangtao <kevin.wangtao@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b86c7b8c5dfb2a68bce79e1ad3fe50e06022d1f6
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Sep 1 14:29:56 2017 +1000

    cpuidle: fix broadcast control when broadcast can not be entered
    
    
    [ Upstream commit f187851b9b4a76952b1158b86434563dd2031103 ]
    
    When failing to enter broadcast timer mode for an idle state that
    requires it, a new state is selected that does not require broadcast,
    but the broadcast variable remains set. This causes
    tick_broadcast_exit to be called despite not having entered broadcast
    mode.
    
    This causes the WARN_ON_ONCE(!irqs_disabled()) to trigger in some
    cases. It does not appear to cause problems for code today, but seems
    to violate the interface so should be fixed.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15319d2a49ca1df37d83c868e2c301fcbc87c059
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Sep 28 13:53:27 2017 +0200

    rtc: set the alarm to the next expiring timer
    
    
    [ Upstream commit 74717b28cb32e1ad3c1042cafd76b264c8c0f68d ]
    
    If there is any non expired timer in the queue, the RTC alarm is never set.
    This is an issue when adding a timer that expires before the next non
    expired timer.
    
    Ensure the RTC alarm is set in that case.
    
    Fixes: 2b2f5ff00f63 ("rtc: interface: ignore expired timers when enqueuing new timers")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acc96729e1d8d088e8e4cecdbef05f0c0b5e367b
Author: Hoang Tran <tranviethoang.vn@gmail.com>
Date:   Wed Sep 27 18:30:58 2017 +0200

    tcp: fix under-evaluated ssthresh in TCP Vegas
    
    
    [ Upstream commit cf5d74b85ef40c202c76d90959db4d850f301b95 ]
    
    With the commit 76174004a0f19785 (tcp: do not slow start when cwnd equals
    ssthresh), the comparison to the reduced cwnd in tcp_vegas_ssthresh() would
    under-evaluate the ssthresh.
    
    Signed-off-by: Hoang Tran <hoang.tran@uclouvain.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5859027994f91d13fc3c4e99a8420ecbf8193729
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Sep 29 16:22:54 2017 +0800

    clk: sunxi-ng: sun6i: Rename HDMI DDC clock to avoid name collision
    
    
    [ Upstream commit 7f3ed79188f2f094d0ee366fa858857fb7f511ba ]
    
    The HDMI DDC clock found in the CCU is the parent of the actual DDC
    clock within the HDMI controller. That clock is also named "hdmi-ddc".
    
    Rename the one in the CCU to "ddc". This makes more sense than renaming
    the one in the HDMI controller to something else.
    
    Fixes: c6e6c96d8fa6 ("clk: sunxi-ng: Add A31/A31s clocks")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb0618ac2302316d924aff2e653ef8e4f1dd753b
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Sat Sep 23 13:25:30 2017 +0530

    staging: greybus: light: Release memory obtained by kasprintf
    
    
    [ Upstream commit 04820da21050b35eed68aa046115d810163ead0c ]
    
    Free memory region, if gb_lights_channel_config is not successful.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Reviewed-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bf42a2ec12a78a5638b64be54a7a35230575032
Author: Mike Manning <mmanning@brocade.com>
Date:   Mon Sep 25 22:01:36 2017 +0100

    net: ipv6: send NS for DAD when link operationally up
    
    
    [ Upstream commit 1f372c7bfb23286d2bf4ce0423ab488e86b74bb2 ]
    
    The NS for DAD are sent on admin up as long as a valid qdisc is found.
    A race condition exists by which these packets will not egress the
    interface if the operational state of the lower device is not yet up.
    The solution is to delay DAD until the link is operationally up
    according to RFC2863. Rather than only doing this, follow the existing
    code checks by deferring IPv6 device initialization altogether. The fix
    allows DAD on devices like tunnels that are controlled by userspace
    control plane. The fix has no impact on regular deployments, but means
    that there is no IPv6 connectivity until the port has been opened in
    the case of port-based network access control, which should be
    desirable.
    
    Signed-off-by: Mike Manning <mmanning@brocade.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52d0a601aec443088ced2530f3538a6276e8d255
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Mon Oct 2 07:17:50 2017 -0700

    fm10k: ensure we process SM mbx when processing VF mbx
    
    
    [ Upstream commit 17a91809942ca32c70026d2d5ba3348a2c4fdf8f ]
    
    When we process VF mailboxes, the driver is likely going to also queue
    up messages to the switch manager. This process merely queues up the
    FIFO, but doesn't actually begin the transmission process. Because we
    hold the mailbox lock during this VF processing, the PF<->SM mailbox is
    not getting processed at this time. Ensure that we actually process the
    PF<->SM mailbox in between each PF<->VF mailbox.
    
    This should ensure prompt transmission of the messages queued up after
    each VF message is received and handled.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76d83bfc1158a0995d327ee39926688c8a08d9c9
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Mon Oct 2 12:39:09 2017 -0600

    vfio/pci: Virtualize Maximum Payload Size
    
    
    [ Upstream commit 523184972b282cd9ca17a76f6ca4742394856818 ]
    
    With virtual PCI-Express chipsets, we now see userspace/guest drivers
    trying to match the physical MPS setting to a virtual downstream port.
    Of course a lone physical device surrounded by virtual interconnects
    cannot make a correct decision for a proper MPS setting.  Instead,
    let's virtualize the MPS control register so that writes through to
    hardware are disallowed.  Userspace drivers like QEMU assume they can
    write anything to the device and we'll filter out anything dangerous.
    Since mismatched MPS can lead to AER and other faults, let's add it
    to the kernel side rather than relying on userspace virtualization to
    handle it.
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de5a4c816d312b137db36fe2e74b8fd486ca04df
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:32 2017 -0700

    scsi: lpfc: PLOGI failures during NPIV testing
    
    
    [ Upstream commit e8bcf0ae4c0346fdc78ebefe0eefcaa6a6622d38 ]
    
    Local Reject/Invalid RPI errors seen during discovery.
    
    Temporary RPI cleanup was occurring regardless of SLI rev. It's only
    necessary on SLI-4.
    
    Adjust the test for whether cleanup is necessary.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b438d2f7e23c4697f8ba954d451bf1e65af3ac85
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:42 2017 -0700

    scsi: lpfc: Fix secure firmware updates
    
    
    [ Upstream commit 184fc2b9a8bcbda9c14d0a1e7fbecfc028c7702e ]
    
    Firmware update fails with: status x17 add_status x56 on the final write
    
    If multiple DMA buffers are used for the download, some firmware revs
    have difficulty with signatures and crcs split across the dma buffer
    boundaries.  Resolve by making all writes be a single 4k page in length.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc9d6386a9a36c63d3a91f0573a4f7714725c282
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Fri Aug 11 11:14:58 2017 -0700

    fm10k: fix mis-ordered parameters in declaration for .ndo_set_vf_bw
    
    
    [ Upstream commit 3e256ac5b1ec307e5dd5a4c99fbdbc651446c738 ]
    
    We've had support for setting both a minimum and maximum bandwidth via
    .ndo_set_vf_bw since commit 883a9ccbae56 ("fm10k: Add support for SR-IOV
    to driver", 2014-09-20).
    
    Likely because we do not support minimum rates, the declaration
    mis-ordered the "unused" parameter, which causes warnings when analyzed
    with cppcheck.
    
    Fix this warning by properly declaring the min_rate and max_rate
    variables in the declaration and definition (rather than using
    "unused"). Also rename "rate" to max_rate so as to clarify that we only
    support setting the maximum rate.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd0feaac155f589237495d058bab6f5fca5a0c5f
Author: Ed Blake <ed.blake@sondrel.com>
Date:   Mon Oct 2 11:00:33 2017 +0100

    ASoC: img-parallel-out: Add pm_runtime_get/put to set_fmt callback
    
    
    [ Upstream commit c70458890ff15d858bd347fa9f563818bcd6e457 ]
    
    Add pm_runtime_get_sync and pm_runtime_put calls to set_fmt callback
    function. This fixes a bus error during boot when CONFIG_SUSPEND is
    defined when this function gets called while the device is runtime
    disabled and device registers are accessed while the clock is disabled.
    
    Signed-off-by: Ed Blake <ed.blake@sondrel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6af9b18a2e485dae8f837e0194bfc6937dff69e1
Author: Tom Zanussi <tom.zanussi@linux.intel.com>
Date:   Fri Sep 22 14:58:17 2017 -0500

    tracing: Exclude 'generic fields' from histograms
    
    
    [ Upstream commit a15f7fc20389a8827d5859907568b201234d4b79 ]
    
    There are a small number of 'generic fields' (comm/COMM/cpu/CPU) that
    are found by trace_find_event_field() but are only meant for
    filtering.  Specifically, they unlike normal fields, they have a size
    of 0 and thus wreak havoc when used as a histogram key.
    
    Exclude these (return -EINVAL) when used as histogram keys.
    
    Link: http://lkml.kernel.org/r/956154cbc3e8a4f0633d619b886c97f0f0edf7b4.1506105045.git.tom.zanussi@linux.intel.com
    
    Signed-off-by: Tom Zanussi <tom.zanussi@linux.intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb2d72a54c6402192df22bf0c35e41f750ba188
Author: Gabriele Paoloni <gabriele.paoloni@huawei.com>
Date:   Thu Sep 28 15:33:05 2017 +0100

    PCI/AER: Report non-fatal errors only to the affected endpoint
    
    
    [ Upstream commit 86acc790717fb60fb51ea3095084e331d8711c74 ]
    
    Previously, if an non-fatal error was reported by an endpoint, we
    called report_error_detected() for the endpoint, every sibling on the
    bus, and their descendents.  If any of them did not implement the
    .error_detected() method, do_recovery() failed, leaving all these
    devices unrecovered.
    
    For example, the system described in the bugzilla below has two devices:
    
      0000:74:02.0 [19e5:a230] SAS controller, driver has .error_detected()
      0000:74:03.0 [19e5:a235] SATA controller, driver lacks .error_detected()
    
    When a device such as 74:02.0 reported a non-fatal error, do_recovery()
    failed because 74:03.0 lacked an .error_detected() method.  But per PCIe
    r3.1, sec 6.2.2.2.2, such an error does not compromise the Link and
    does not affect 74:03.0:
    
      Non-fatal errors are uncorrectable errors which cause a particular
      transaction to be unreliable but the Link is otherwise fully functional.
      Isolating Non-fatal from Fatal errors provides Requester/Receiver logic
      in a device or system management software the opportunity to recover from
      the error without resetting the components on the Link and disturbing
      other transactions in progress.  Devices not associated with the
      transaction in error are not impacted by the error.
    
    Report non-fatal errors only to the endpoint that reported them.  We really
    want to check for AER_NONFATAL here, but the current code structure doesn't
    allow that.  Looking for pci_channel_io_normal is the best we can do now.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=197055
    Fixes: 6c2b374d7485 ("PCI-Express AER implemetation: AER core and aerdriver")
    Signed-off-by: Gabriele Paoloni <gabriele.paoloni@huawei.com>
    Signed-off-by: Dongdong Liu <liudongdong3@huawei.com>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d4b32bee9c79f1f4f434d20b9a75a4a69fa159b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Sep 8 15:37:45 2017 +0100

    IB/rxe: check for allocation failure on elem
    
    
    [ Upstream commit 4831ca9e4a8e48cb27e0a792f73250390827a228 ]
    
    The allocation for elem may fail (especially because we're using
    GFP_ATOMIC) so best to check for a null return.  This fixes a potential
    null pointer dereference when assigning elem->pool.
    
    Detected by CoverityScan CID#1357507 ("Dereference null return value")
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2141182852b804c5f7a0e199c4456c91db639189
Author: Emil Tantilov <emil.s.tantilov@intel.com>
Date:   Mon Sep 11 14:21:31 2017 -0700

    ixgbe: fix use of uninitialized padding
    
    
    [ Upstream commit dcfd6b839c998bc9838e2a47f44f37afbdf3099c ]
    
    This patch is resolving Coverity hits where padding in a structure could
    be used uninitialized.
    
    - Initialize fwd_cmd.pad/2 before ixgbe_calculate_checksum()
    
    - Initialize buffer.pad2/3 before ixgbe_hic_unlocked()
    
    Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 700053c8733e3bbc48dc78643d9bdb21f406e570
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 27 08:39:51 2017 +0200

    igb: check memory allocation failure
    
    
    [ Upstream commit 18eb86362a52f0af933cc0fd5e37027317eb2d1c ]
    
    Check memory allocation failures and return -ENOMEM in such cases, as
    already done for other memory allocations in this function.
    
    This avoids NULL pointers dereference.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Acked-by: PJ Waskiewicz <peter.waskiewicz.jr@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c236525bae023e43121ce1f1672aa100629e1c72
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Fri Sep 29 14:39:49 2017 -0300

    PM / OPP: Move error message to debug level
    
    
    [ Upstream commit 035ed07208dc501d023873447113f3f178592156 ]
    
    On some i.MX6 platforms which do not have speed grading
    check, opp table will not be created in platform code,
    so cpufreq driver prints the following error message:
    
    cpu cpu0: dev_pm_opp_get_opp_count: OPP table not found (-19)
    
    However, this is not really an error in this case because the
    imx6q-cpufreq driver first calls dev_pm_opp_get_opp_count()
    and if it fails, it means that platform code does not provide
    OPP and then dev_pm_opp_of_add_table() will be called.
    
    In order to avoid such confusing error message, move it to
    debug level.
    
    It is up to the caller of dev_pm_opp_get_opp_count() to check its
    return value and decide if it will print an error or not.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 164a941c031bc32e990abaa042367047d6d97975
Author: Stuart Hayes <stuart.w.hayes@gmail.com>
Date:   Wed Oct 4 10:57:52 2017 -0500

    PCI: Create SR-IOV virtfn/physfn links before attaching driver
    
    
    [ Upstream commit 27d6162944b9b34c32cd5841acd21786637ee743 ]
    
    When creating virtual functions, create the "virtfn%u" and "physfn" links
    in sysfs *before* attaching the driver instead of after.  When we attach
    the driver to the new virtual network interface first, there is a race when
    the driver attaches to the new sends out an "add" udev event, and the
    network interface naming software (biosdevname or systemd, for example)
    tries to look at these links.
    
    Signed-off-by: Stuart Hayes <stuart.w.hayes@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b40eeea31afd1c07f37734fa19ef1c45f5e98011
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Tue Oct 10 18:41:18 2017 +0530

    scsi: mpt3sas: Fix IO error occurs on pulling out a drive from RAID1 volume created on two SATA drive
    
    
    [ Upstream commit 2ce9a3645299ba1752873d333d73f67620f4550b ]
    
    Whenever an I/O for a RAID volume fails with IOCStatus
    MPI2_IOCSTATUS_SCSI_IOC_TERMINATED and SCSIStatus equal to
    (MPI2_SCSI_STATE_TERMINATED | MPI2_SCSI_STATE_NO_SCSI_STATUS) then
    return the I/O to SCSI midlayer with "DID_RESET" (i.e. retry the IO
    infinite times) set in the host byte.
    
    Previously, the driver was completing the I/O with "DID_SOFT_ERROR"
    which causes the I/O to be quickly retried. However, firmware needed
    more time and hence I/Os were failing.
    
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@broadcom.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd1d9dccc01d2a72d9e2fabb9903615b7956e55a
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed Oct 11 19:33:07 2017 +0530

    scsi: cxgb4i: fix Tx skb leak
    
    
    [ Upstream commit 9b3a081fb62158b50bcc90522ca2423017544367 ]
    
    In case of connection reset Tx skb queue can have some skbs which are
    not transmitted so purge Tx skb queue in release_offload_resources() to
    avoid skb leak.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 241833a3a90da1b82d7d93e223da8d60a5ebfffd
Author: David Daney <david.daney@cavium.com>
Date:   Fri Sep 8 10:10:31 2017 +0200

    PCI: Avoid bus reset if bridge itself is broken
    
    
    [ Upstream commit 357027786f3523d26f42391aa4c075b8495e5d28 ]
    
    When checking to see if a PCI bus can safely be reset, we previously
    checked to see if any of the children had their PCI_DEV_FLAGS_NO_BUS_RESET
    flag set.  Children marked with that flag are known not to behave well
    after a bus reset.
    
    Some PCIe root port bridges also do not behave well after a bus reset,
    sometimes causing the devices behind the bridge to become unusable.
    
    Add a check for PCI_DEV_FLAGS_NO_BUS_RESET being set in the bridge device
    to allow these bridges to be flagged, and prevent their secondary buses
    from being reset.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    [jglauber@cavium.com: fixed typo]
    Signed-off-by: Jan Glauber <jglauber@cavium.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3469e6166686f35892f7bea52e6a8938e942c9c
Author: Dan Murphy <dmurphy@ti.com>
Date:   Tue Oct 10 12:42:56 2017 -0500

    net: phy: at803x: Change error to EINVAL for invalid MAC
    
    
    [ Upstream commit fc7556877d1748ac00958822a0a3bba1d4bd9e0d ]
    
    Change the return error code to EINVAL if the MAC
    address is not valid in the set_wol function.
    
    Signed-off-by: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 206e1621ba721bf4bb4b71938a867ba5b8305bcb
Author: Shakeel Butt <shakeelb@google.com>
Date:   Thu Oct 5 18:07:24 2017 -0700

    kvm, mm: account kvm related kmem slabs to kmemcg
    
    
    [ Upstream commit 46bea48ac241fe0b413805952dda74dd0c09ba8b ]
    
    The kvm slabs can consume a significant amount of system memory
    and indeed in our production environment we have observed that
    a lot of machines are spending significant amount of memory that
    can not be left as system memory overhead. Also the allocations
    from these slabs can be triggered directly by user space applications
    which has access to kvm and thus a buggy application can leak
    such memory. So, these caches should be accounted to kmemcg.
    
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdb33bb5e2cea11bb94907e6ca9666c067fc9fd3
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Sep 29 11:22:15 2017 +0100

    rtc: pl031: make interrupt optional
    
    
    [ Upstream commit 5b64a2965dfdfca8039e93303c64e2b15c19ff0c ]
    
    On some platforms, the interrupt for the PL031 is optional.  Avoid
    trying to claim the interrupt if it's not specified.
    
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1525e330d6464fd28c4b26b8490cf910d2ccff99
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Wed Oct 4 01:00:08 2017 +0200

    crypto: crypto4xx - increase context and scatter ring buffer elements
    
    
    [ Upstream commit 778f81d6cdb7d25360f082ac0384d5103f04eca5 ]
    
    If crypto4xx is used in conjunction with dm-crypt, the available
    ring buffer elements are not enough to handle the load properly.
    
    On an aes-cbc-essiv:sha256 encrypted swap partition the read
    performance is abyssal: (tested with hdparm -t)
    
    /dev/mapper/swap_crypt:
     Timing buffered disk reads:  14 MB in  3.68 seconds =   3.81 MB/sec
    
    The patch increases both PPC4XX_NUM_SD and PPC4XX_NUM_PD to 256.
    This improves the performance considerably:
    
    /dev/mapper/swap_crypt:
     Timing buffered disk reads: 104 MB in  3.03 seconds =  34.31 MB/sec
    
    Furthermore, PPC4XX_LAST_SD, PPC4XX_LAST_GD and PPC4XX_LAST_PD
    can be easily calculated from their respective PPC4XX_NUM_*
    constant.
    
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 291c7e488f64acb314d34f7081f6aca31b06894b
Author: Derek Basehore <dbasehore@chromium.org>
Date:   Tue Aug 29 13:34:34 2017 -0700

    backlight: pwm_bl: Fix overflow condition
    
    
    [ Upstream commit 5d0c49acebc9488e37db95f1d4a55644e545ffe7 ]
    
    This fixes an overflow condition that can happen with high max
    brightness and period values in compute_duty_cycle. This fixes it by
    using a 64 bit variable for computing the duty cycle.
    
    Signed-off-by: Derek Basehore <dbasehore@chromium.org>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d14718c9f434b27af41f5ecabc382d89ddc861cd
Author: Sankar Patchineelam <sankar.patchineelam@broadcom.com>
Date:   Tue Mar 28 19:47:29 2017 -0400

    bnxt_en: Fix NULL pointer dereference in reopen failure path
    
    
    [ Upstream commit 2247925f0942dc4e7c09b1cde45ca18461d94c5f ]
    
    Net device reset can fail when the h/w or f/w is in a bad state.
    Subsequent netdevice open fails in bnxt_hwrm_stat_ctx_alloc().
    The cleanup invokes bnxt_hwrm_resource_free() which inturn
    calls bnxt_disable_int().  In this routine, the code segment
    
    if (ring->fw_ring_id != INVALID_HW_RING_ID)
       BNXT_CP_DB(cpr->cp_doorbell, cpr->cp_raw_cons);
    
    results in NULL pointer dereference as cpr->cp_doorbell is not yet
    initialized, and fw_ring_id is zero.
    
    The fix is to initialize cpr fw_ring_id to INVALID_HW_RING_ID before
    bnxt_init_chip() is invoked.
    
    Signed-off-by: Sankar Patchineelam <sankar.patchineelam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e1771368a9835ba21999bebf58496428d7d5443
Author: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>
Date:   Thu Mar 23 20:52:46 2017 +0530

    cpuidle: powernv: Pass correct drv->cpumask for registration
    
    
    [ Upstream commit 293d264f13cbde328d5477f49e3103edbc1dc191 ]
    
    drv->cpumask defaults to cpu_possible_mask in __cpuidle_driver_init().
    On PowerNV platform cpu_present could be less than cpu_possible in cases
    where firmware detects the cpu, but it is not available to the OS.  When
    CONFIG_HOTPLUG_CPU=n, such cpus are not hotplugable at runtime and hence
    we skip creating cpu_device.
    
    This breaks cpuidle on powernv where register_cpu() is not called for
    cpus in cpu_possible_mask that cannot be hot-added at runtime.
    
    Trying cpuidle_register_device() on cpu without cpu_device will cause
    crash like this:
    
    cpu 0xf: Vector: 380 (Data SLB Access) at [c000000ff1503490]
        pc: c00000000022c8bc: string+0x34/0x60
        lr: c00000000022ed78: vsnprintf+0x284/0x42c
        sp: c000000ff1503710
       msr: 9000000000009033
       dar: 6000000060000000
      current = 0xc000000ff1480000
      paca    = 0xc00000000fe82d00   softe: 0        irq_happened: 0x01
        pid   = 1, comm = swapper/8
    Linux version 4.11.0-rc2 (sv@sagarika) (gcc version 4.9.4
    (Buildroot 2017.02-00004-gc28573e) ) #15 SMP Fri Mar 17 19:32:02 IST 2017
    enter ? for help
    [link register   ] c00000000022ed78 vsnprintf+0x284/0x42c
    [c000000ff1503710] c00000000022ebb8 vsnprintf+0xc4/0x42c (unreliable)
    [c000000ff1503800] c00000000022ef40 vscnprintf+0x20/0x44
    [c000000ff1503830] c0000000000ab61c vprintk_emit+0x94/0x2cc
    [c000000ff15038a0] c0000000000acc9c vprintk_func+0x60/0x74
    [c000000ff15038c0] c000000000619694 printk+0x38/0x4c
    [c000000ff15038e0] c000000000224950 kobject_get+0x40/0x60
    [c000000ff1503950] c00000000022507c kobject_add_internal+0x60/0x2c4
    [c000000ff15039e0] c000000000225350 kobject_init_and_add+0x70/0x78
    [c000000ff1503a60] c00000000053c288 cpuidle_add_sysfs+0x9c/0xe0
    [c000000ff1503ae0] c00000000053aeac cpuidle_register_device+0xd4/0x12c
    [c000000ff1503b30] c00000000053b108 cpuidle_register+0x98/0xcc
    [c000000ff1503bc0] c00000000085eaf0 powernv_processor_idle_init+0x140/0x1e0
    [c000000ff1503c60] c00000000000cd60 do_one_initcall+0xc0/0x15c
    [c000000ff1503d20] c000000000833e84 kernel_init_freeable+0x1a0/0x25c
    [c000000ff1503dc0] c00000000000d478 kernel_init+0x24/0x12c
    [c000000ff1503e30] c00000000000b564 ret_from_kernel_thread+0x5c/0x78
    
    This patch fixes the bug by passing correct cpumask from
    powernv-cpuidle driver.
    
    Signed-off-by: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    [ rjw: Comment massage ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5460e4672b81980a2f05ab3e9bb64d9303e11215
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Mar 29 17:12:47 2017 +0100

    ARM: dma-mapping: disallow dma_get_sgtable() for non-kernel managed memory
    
    
    [ Upstream commit 916a008b4b8ecc02fbd035cfb133773dba1ff3d7 ]
    
    dma_get_sgtable() tries to create a scatterlist table containing valid
    struct page pointers for the coherent memory allocation passed in to it.
    
    However, memory can be declared via dma_declare_coherent_memory(), or
    via other reservation schemes which means that coherent memory is not
    guaranteed to be backed by struct pages.  In such cases, the resulting
    scatterlist table contains pointers to invalid pages, which causes
    kernel oops later.
    
    This patch adds detection of such memory, and refuses to create a
    scatterlist table for such memory.
    
    Reported-by: Shuah Khan <shuahkhan@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c1433b5dd2b4f7bef192bc07d976f11616d7a29
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 17 23:51:20 2017 +0300

    Btrfs: fix an integer overflow check
    
    
    [ Upstream commit 457ae7268b29c33dee1c0feb143a15f6029d177b ]
    
    This isn't super serious because you need CAP_ADMIN to run this code.
    
    I added this integer overflow check last year but apparently I am
    rubbish at writing integer overflow checks...  There are two issues.
    First, access_ok() works on unsigned long type and not u64 so on 32 bit
    systems the access_ok() could be checking a truncated size.  The other
    issue is that we should be using a stricter limit so we don't overflow
    the kzalloc() setting ctx->clone_roots later in the function after the
    access_ok():
    
            alloc_size = sizeof(struct clone_root) * (arg->clone_sources_count + 1);
            sctx->clone_roots = kzalloc(alloc_size, GFP_KERNEL | __GFP_NOWARN);
    
    Fixes: f5ecec3ce21f ("btrfs: send: silence an integer overflow warning")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ added comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0708a476810d1a37422cb84ed3367be68045478f
Author: Liping Zhang <zlpnobody@gmail.com>
Date:   Tue Mar 28 22:59:25 2017 +0800

    netfilter: nfnetlink_queue: fix secctx memory leak
    
    
    [ Upstream commit 77c1c03c5b8ef28e55bb0aff29b1e006037ca645 ]
    
    We must call security_release_secctx to free the memory returned by
    security_secid_to_secctx, otherwise memory may be leaked forever.
    
    Fixes: ef493bd930ae ("netfilter: nfnetlink_queue: add security context information")
    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54420c1ac4211cba7ac57e14a0971d4ad3105729
Author: Adam Wallis <awallis@codeaurora.org>
Date:   Tue Mar 28 15:55:28 2017 +0300

    xhci: plat: Register shutdown for xhci_plat
    
    
    [ Upstream commit b07c12517f2aed0add8ce18146bb426b14099392 ]
    
    Shutdown should be called for xhci_plat devices especially for
    situations where kexec might be used by stopping DMA
    transactions.
    
    Signed-off-by: Adam Wallis <awallis@codeaurora.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55b6a5d080aaf42aad34a4866c27a185b91f7a26
Author: Jonas Jensen <jonas.jensen@gmail.com>
Date:   Tue Mar 28 12:12:38 2017 +0200

    net: moxa: fix TX overrun memory leak
    
    
    [ Upstream commit c2b341a620018d4eaeb0e85c16274ac4e5f153d4 ]
    
    moxart_mac_start_xmit() doesn't care where tx_tail is, tx_head can
    catch and pass tx_tail, which is bad because moxart_tx_finished()
    isn't guaranteed to catch up on freeing resources from tx_tail.
    
    Add a check in moxart_mac_start_xmit() stopping the queue at the
    end of the circular buffer. Also add a check in moxart_tx_finished()
    waking the queue if the buffer has TX_WAKE_THRESHOLD or more
    free descriptors.
    
    While we're at it, move spin_lock_irq() to happen before our
    descriptor pointer is assigned in moxart_mac_start_xmit().
    
    Addresses https://bugzilla.kernel.org/show_bug.cgi?id=99451
    
    Signed-off-by: Jonas Jensen <jonas.jensen@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce19146a0de06d512c6565e7374f01335d87bf65
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 28 12:11:07 2017 +0200

    isdn: kcapi: avoid uninitialized data
    
    
    [ Upstream commit af109a2cf6a9a6271fa420ae2d64d72d86c92b7d ]
    
    gcc-7 points out that the AVMB1_ADDCARD ioctl results in an unintialized
    value ending up in the cardnr parameter:
    
    drivers/isdn/capi/kcapi.c: In function 'old_capi_manufacturer':
    drivers/isdn/capi/kcapi.c:1042:24: error: 'cdef.cardnr' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       cparams.cardnr = cdef.cardnr;
    
    This has been broken since before the start of the git history, so
    either the value is not used for anything important, or the ioctl
    command doesn't get called in practice.
    
    Setting the cardnr to zero avoids the warning and makes sure
    we have consistent behavior.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb011a45138765020c1322b4d1b7b8b640da9c38
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 28 18:46:59 2017 +0200

    virtio_balloon: prevent uninitialized variable use
    
    
    [ Upstream commit f0bb2d50dfcc519f06f901aac88502be6ff1df2c ]
    
    The latest gcc-7.0.1 snapshot reports a new warning:
    
    virtio/virtio_balloon.c: In function 'update_balloon_stats':
    virtio/virtio_balloon.c:258:26: error: 'events[2]' is used uninitialized in this function [-Werror=uninitialized]
    virtio/virtio_balloon.c:260:26: error: 'events[3]' is used uninitialized in this function [-Werror=uninitialized]
    virtio/virtio_balloon.c:261:56: error: 'events[18]' is used uninitialized in this function [-Werror=uninitialized]
    virtio/virtio_balloon.c:262:56: error: 'events[17]' is used uninitialized in this function [-Werror=uninitialized]
    
    This seems absolutely right, so we should add an extra check to
    prevent copying uninitialized stack data into the statistics.
    >From all I can tell, this has been broken since the statistics code
    was originally added in 2.6.34.
    
    Fixes: 9564e138b1f6 ("virtio: Add memory statistics reporting to the balloon driver (V4)")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6f9090929dca3fd1208e636f60860f4a7e421a2
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Tue Mar 28 18:46:58 2017 +0200

    virtio-balloon: use actual number of stats for stats queue buffers
    
    
    [ Upstream commit 9646b26e85896ef0256e66649f7937f774dc18a6 ]
    
    The virtio balloon driver contained a not-so-obvious invariant that
    update_balloon_stats has to update exactly VIRTIO_BALLOON_S_NR counters
    in order to send valid stats to the host. This commit fixes it by having
    update_balloon_stats return the actual number of counters, and its
    callers use it when pushing buffers to the stats virtqueue.
    
    Note that it is still out of spec to change the number of counters
    at run-time. "Driver MUST supply the same subset of statistics in all
    buffers submitted to the statsq."
    
    Suggested-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 808ed3bd9d42823e00ab2d3dc4c9899437fa3c8a
Author: Herongguang (Stephen) <herongguang.he@huawei.com>
Date:   Mon Mar 27 15:21:17 2017 +0800

    KVM: pci-assign: do not map smm memory slot pages in vt-d page tables
    
    
    [ Upstream commit 0292e169b2d9c8377a168778f0b16eadb1f578fd ]
    
    or VM memory are not put thus leaked in kvm_iommu_unmap_memslots() when
    destroy VM.
    
    This is consistent with current vfio implementation.
    
    Signed-off-by: herongguang <herongguang.he@huawei.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29c4f517ff5bb2f81750295418c8397755817d4c
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Mar 27 18:00:14 2017 +0100

    net: ipconfig: fix ic_close_devs() use-after-free
    
    
    [ Upstream commit ffefb6f4d6ad699a2b5484241bc46745a53235d0 ]
    
    Our chosen ic_dev may be anywhere in our list of ic_devs, and we may
    free it before attempting to close others. When we compare d->dev and
    ic_dev->dev, we're potentially dereferencing memory returned to the
    allocator. This causes KASAN to scream for each subsequent ic_dev we
    check.
    
    As there's a 1-1 mapping between ic_devs and netdevs, we can instead
    compare d and ic_dev directly, which implicitly handles the !ic_dev
    case, and avoids the use-after-free. The ic_dev pointer may be stale,
    but we will not dereference it.
    
    Original splat:
    
    [    6.487446] ==================================================================
    [    6.494693] BUG: KASAN: use-after-free in ic_close_devs+0xc4/0x154 at addr ffff800367efa708
    [    6.503013] Read of size 8 by task swapper/0/1
    [    6.507452] CPU: 5 PID: 1 Comm: swapper/0 Not tainted 4.11.0-rc3-00002-gda42158 #8
    [    6.514993] Hardware name: AppliedMicro Mustang/Mustang, BIOS 3.05.05-beta_rc Jan 27 2016
    [    6.523138] Call trace:
    [    6.525590] [<ffff200008094778>] dump_backtrace+0x0/0x570
    [    6.530976] [<ffff200008094d08>] show_stack+0x20/0x30
    [    6.536017] [<ffff200008bee928>] dump_stack+0x120/0x188
    [    6.541231] [<ffff20000856d5e4>] kasan_object_err+0x24/0xa0
    [    6.546790] [<ffff20000856d924>] kasan_report_error+0x244/0x738
    [    6.552695] [<ffff20000856dfec>] __asan_report_load8_noabort+0x54/0x80
    [    6.559204] [<ffff20000aae86ac>] ic_close_devs+0xc4/0x154
    [    6.564590] [<ffff20000aaedbac>] ip_auto_config+0x2ed4/0x2f1c
    [    6.570321] [<ffff200008084b04>] do_one_initcall+0xcc/0x370
    [    6.575882] [<ffff20000aa31de8>] kernel_init_freeable+0x5f8/0x6c4
    [    6.581959] [<ffff20000a16df00>] kernel_init+0x18/0x190
    [    6.587171] [<ffff200008084710>] ret_from_fork+0x10/0x40
    [    6.592468] Object at ffff800367efa700, in cache kmalloc-128 size: 128
    [    6.598969] Allocated:
    [    6.601324] PID = 1
    [    6.603427]  save_stack_trace_tsk+0x0/0x418
    [    6.607603]  save_stack_trace+0x20/0x30
    [    6.611430]  kasan_kmalloc+0xd8/0x188
    [    6.615087]  ip_auto_config+0x8c4/0x2f1c
    [    6.619002]  do_one_initcall+0xcc/0x370
    [    6.622832]  kernel_init_freeable+0x5f8/0x6c4
    [    6.627178]  kernel_init+0x18/0x190
    [    6.630660]  ret_from_fork+0x10/0x40
    [    6.634223] Freed:
    [    6.636233] PID = 1
    [    6.638334]  save_stack_trace_tsk+0x0/0x418
    [    6.642510]  save_stack_trace+0x20/0x30
    [    6.646337]  kasan_slab_free+0x88/0x178
    [    6.650167]  kfree+0xb8/0x478
    [    6.653131]  ic_close_devs+0x130/0x154
    [    6.656875]  ip_auto_config+0x2ed4/0x2f1c
    [    6.660875]  do_one_initcall+0xcc/0x370
    [    6.664705]  kernel_init_freeable+0x5f8/0x6c4
    [    6.669051]  kernel_init+0x18/0x190
    [    6.672534]  ret_from_fork+0x10/0x40
    [    6.676098] Memory state around the buggy address:
    [    6.680880]  ffff800367efa600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [    6.688078]  ffff800367efa680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [    6.695276] >ffff800367efa700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [    6.702469]                       ^
    [    6.705952]  ffff800367efa780: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [    6.713149]  ffff800367efa800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [    6.720343] ==================================================================
    [    6.727536] Disabling lock debugging due to kernel taint
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>
    Cc: James Morris <jmorris@namei.org>
    Cc: Patrick McHardy <kaber@trash.net>
    Cc: netdev@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9a1ba292fffc07d177e340944bb506d57105bce
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Mar 27 19:33:09 2017 +0200

    cpufreq: Fix creation of symbolic links to policy directories
    
    
    [ Upstream commit 2f0ba790df51721794c11abc7a076d407392f648 ]
    
    The cpufreq core only tries to create symbolic links from CPU
    directories in sysfs to policy directories in cpufreq_add_dev(),
    either when a given CPU is registered or when the cpufreq driver
    is registered, whichever happens first.  That is not sufficient,
    however, because cpufreq_add_dev() may be called for an offline CPU
    whose policy object has not been created yet and, quite obviously,
    the symbolic cannot be added in that case.
    
    Fix that by making cpufreq_online() attempt to add symbolic links to
    policy objects for the CPUs in the related_cpus mask of every new
    policy object created by it.
    
    The cpufreq_driver_lock locking around the for_each_cpu() loop
    in cpufreq_online() is dropped, because it is not necessary and the
    code is somewhat simpler without it.  Moreover, failures to create
    a symbolic link will not be regarded as hard errors any more and
    the CPUs without those links will not be taken offline automatically,
    but that should not be problematic in practice.
    
    Reported-and-tested-by: Prashanth Prakash <pprakash@codeaurora.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d13153057e3c9782e5f0ebb87ddd502ca58d94
Author: Reizer, Eyal <eyalr@ti.com>
Date:   Sun Mar 26 08:53:10 2017 +0000

    ARM: dts: am335x-evmsk: adjust mmc2 param to allow suspend
    
    
    [ Upstream commit 9bcf53f34a2c1cebc45cc12e273dcd5f51fbc099 ]
    
    mmc2 used for wl12xx was missing the keep-power-in suspend
    parameter. As a result the board couldn't reach suspend state.
    
    Signed-off-by: Eyal Reizer <eyalr@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5ed572a1b7d2d95d7bf1ddcac07c1c8961e405c
Author: Gao Feng <fgao@ikuai8.com>
Date:   Sat Mar 25 18:24:36 2017 +0800

    netfilter: nf_nat_snmp: Fix panic when snmp_trap_helper fails to register
    
    
    [ Upstream commit 75c689dca98851d65ef5a27e5ce26b625b68751c ]
    
    In the commit 93557f53e1fb ("netfilter: nf_conntrack: nf_conntrack snmp
    helper"), the snmp_helper is replaced by nf_nat_snmp_hook. So the
    snmp_helper is never registered. But it still tries to unregister the
    snmp_helper, it could cause the panic.
    
    Now remove the useless snmp_helper and the unregister call in the
    error handler.
    
    Fixes: 93557f53e1fb ("netfilter: nf_conntrack: nf_conntrack snmp helper")
    Signed-off-by: Gao Feng <fgao@ikuai8.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01060acf6aabea3ce3e362b0c29eeb6ab5fdfa63
Author: Liping Zhang <zlpnobody@gmail.com>
Date:   Sat Mar 25 12:09:15 2017 +0800

    netfilter: nfnl_cthelper: fix a race when walk the nf_ct_helper_hash table
    
    
    [ Upstream commit 83d90219a5df8d950855ce73229a97b63605c317 ]
    
    The nf_ct_helper_hash table is protected by nf_ct_helper_mutex, while
    nfct_helper operation is protected by nfnl_lock(NFNL_SUBSYS_CTHELPER).
    So it's possible that one CPU is walking the nf_ct_helper_hash for
    cthelper add/get/del, another cpu is doing nf_conntrack_helpers_unregister
    at the same time. This is dangrous, and may cause use after free error.
    
    Note, delete operation will flush all cthelpers added via nfnetlink, so
    using rcu to do protect is not easy.
    
    Now introduce a dummy list to record all the cthelpers added via
    nfnetlink, then we can walk the dummy list instead of walking the
    nf_ct_helper_hash. Also, keep nfnl_cthelper_dump_table unchanged, it
    may be invoked without nfnl_lock(NFNL_SUBSYS_CTHELPER) held.
    
    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e6398184a4d6f6bbca891592e86fac8525fc211
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Mar 25 01:48:08 2017 +0300

    irda: vlsi_ir: fix check for DMA mapping errors
    
    
    [ Upstream commit 6ac3b77a6ffff7513ff86b684aa256ea01c0e5b5 ]
    
    vlsi_alloc_ring() checks for DMA mapping errors by comparing
    returned address with zero, while pci_dma_mapping_error() should be used.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37f41dac70ca7e7be3fc50769df0ad566c44e389
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 27 20:16:33 2017 +0200

    RDMA/iser: Fix possible mr leak on device removal event
    
    
    [ Upstream commit ea174c9573b0e0c8bc1a7a90fe9360ccb7aa9cbb ]
    
    When the rdma device is removed, we must cleanup all
    the rdma resources within the DEVICE_REMOVAL event
    handler to let the device teardown gracefully. When
    this happens with live I/O, some memory regions are
    occupied. Thus, track them too and dereg all the mr's.
    
    We are safe with mr access by iscsi_iser_cleanup_task.
    
    Reported-by: Raju Rangoju <rajur@chelsio.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 661f5348696a39ace18fcc028513ef7527a036e3
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Fri Mar 24 15:01:42 2017 -0700

    i40e: Do not enable NAPI on q_vectors that have no rings
    
    
    [ Upstream commit 13a8cd191a2b470cfd435b3b57dbd21aa65ff78c ]
    
    When testing the epoll w/ busy poll code I found that I could get into a
    state where the i40e driver had q_vectors w/ active NAPI that had no rings.
    This was resulting in a divide by zero error.  To correct it I am updating
    the driver code so that we only support NAPI on q_vectors that have 1 or
    more rings allocated to them.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2eb783a705b054067d0c652f4afc73db32a1d6b9
Author: David Marchand <david.marchand@6wind.com>
Date:   Fri Feb 24 15:38:26 2017 +0100

    IB/rxe: increment msn only when completing a request
    
    
    [ Upstream commit 9fcd67d1772c43d2f23e8fca56acc7219e991676 ]
    
    According to C9-147, MSN should only be incremented when the last packet of
    a multi packet request has been received.
    
    "Logically, the requester associates a sequential Send Sequence Number
    (SSN) with each WQE posted to the send queue. The SSN bears a one-
    to-one relationship to the MSN returned by the responder in each re-
    sponse packet. Therefore, when the requester receives a response, it in-
    terprets the MSN as representing the SSN of the most recent request
    completed by the responder to determine which send WQE(s) can be
    completed."
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    
    Signed-off-by: David Marchand <david.marchand@6wind.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f0e39f2e3d77eb086995a99c8361d7f13020120
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 8 08:21:52 2017 +0300

    IB/rxe: double free on error
    
    
    [ Upstream commit ded260235308f340b979258a4c736e06ba12c747 ]
    
    "goto err;" has it's own kfree_skb() call so it's a double free.  We
    only need to free on the "goto exit;" path.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f077afe94d90bae3262da5e39ba75e40f9c4607
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Fri Mar 24 09:38:03 2017 -0700

    net: Do not allow negative values for busy_read and busy_poll sysctl interfaces
    
    
    [ Upstream commit 95f255211396958c718aef8c45e3923b5211ea7b ]
    
    This change basically codifies what I think was already the limitations on
    the busy_poll and busy_read sysctl interfaces.  We weren't checking the
    lower bounds and as such could input negative values. The behavior when
    that was used was dependent on the architecture. In order to prevent any
    issues with that I am just disabling support for values less than 0 since
    this way we don't have to worry about any odd behaviors.
    
    By limiting the sysctl values this way it also makes it consistent with how
    we handle the SO_BUSY_POLL socket option since the value appears to be
    reported as a signed integer value and negative values are rejected.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 521a7e3dad6b216eb0058db5c64a1e706e514fc0
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Mar 24 14:08:28 2017 -0400

    nbd: set queue timeout properly
    
    
    [ Upstream commit f8586855031a1d6b243f013c3082631346fddfad ]
    
    We can't just set the timeout on the tagset, we have to set it on the
    queue as it would have been setup already at this point.
    
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4fcc56632cfd6d204ca6d64ad0912e626016b65
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Fri Mar 10 11:34:20 2017 -0700

    infiniband: Fix alignment of mmap cookies to support VIPT caching
    
    
    [ Upstream commit cb8864559631754ac93d5734b165ccd0cad4728c ]
    
    When vmalloc_user is used to create memory that is supposed to be mmap'd
    to user space, it is necessary for the mmap cookie (eg the offset) to be
    aligned to SHMLBA.
    
    This creates a situation where all virtual mappings of the same physical
    page share the same virtual cache index and guarantees VIPT coherence.
    Otherwise the cache is non-coherent and the kernel will not see writes
    by userspace when reading the shared page (or vice-versa).
    
    Reported-by: Josh Beavers <josh.beavers@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd083d5bcafdc17e6192ddaed96f6744746c984b
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Mar 8 22:00:52 2017 +0200

    IB/core: Protect against self-requeue of a cq work item
    
    
    [ Upstream commit 86f46aba8d1ac3ed0904542158a9b9cb9c7a143c ]
    
    We need to make sure that the cq work item does not
    run when we are destroying the cq. Unlike flush_work,
    cancel_work_sync protects against self-requeue of the
    work item (which we can do in ib_cq_poll_work).
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26452a5033dc4fd3792bed60ba85fddfe9ef7a5b
Author: Shiraz Saleem <shiraz.saleem@intel.com>
Date:   Fri Mar 17 18:30:07 2017 -0500

    i40iw: Receive netdev events post INET_NOTIFIER state
    
    
    [ Upstream commit 871a8623d3b40221ad1103aff715dfee0aa4dacf ]
    
    Netdev notification events are de-registered only when all
    client iwdev instances are removed. If a single client is closed
    and re-opened, netdev events could arrive even before the Control
    Queue-Pair (CQP) is created, causing a NULL pointer dereference crash
    in i40iw_get_cqp_request. Fix this by allowing netdev event
    notification only after we have reached the INET_NOTIFIER state with
    respect to device initialization.
    
    Reported-by: Stefan Assmann <sassmann@redhat.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 102a8a1634496d53fcf0b5fae92f7729a1d17f76
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Mar 23 17:07:26 2017 +0100

    bna: avoid writing uninitialized data into hw registers
    
    
    [ Upstream commit a5af83925363eb85d467933e3d6ec5a87001eb7c ]
    
    The latest gcc-7 snapshot warns about bfa_ioc_send_enable/bfa_ioc_send_disable
    writing undefined values into the hardware registers:
    
    drivers/net/ethernet/brocade/bna/bfa_ioc.c: In function 'bfa_iocpf_sm_disabling_entry':
    arch/arm/include/asm/io.h:109:22: error: '*((void *)&disable_req+4)' is used uninitialized in this function [-Werror=uninitialized]
    arch/arm/include/asm/io.h:109:22: error: '*((void *)&disable_req+8)' is used uninitialized in this function [-Werror=uninitialized]
    
    The two functions look like they should do the same thing, but only one
    of them initializes the time stamp and clscode field. The fact that we
    only get a warning for one of the two functions seems to be arbitrary,
    based on the inlining decisions in the compiler.
    
    To address this, I'm making both functions do the same thing:
    
    - set the clscode from the ioc structure in both
    - set the time stamp from ktime_get_real_seconds (which also
      avoids the signed-integer overflow in 2038 and extends the
      well-defined behavior until 2106).
    - zero-fill the reserved field
    
    Fixes: 8b230ed8ec96 ("bna: Brocade 10Gb Ethernet device driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51533c4bf1442afd9b54747cd3d47d698940d624
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Thu Mar 23 14:55:09 2017 +0100

    s390/qeth: no ETH header for outbound AF_IUCV
    
    
    [ Upstream commit acd9776b5c45ef02d1a210969a6fcc058afb76e3 ]
    
    With AF_IUCV traffic, the skb passed to hard_start_xmit() has a 14 byte
    slot at skb->data, intended for an ETH header. qeth_l3_fill_af_iucv_hdr()
    fills this ETH header... and then immediately moves it to the
    skb's headroom, where it disappears and is never seen again.
    
    But it's still possible for us to return NETDEV_TX_BUSY after the skb has
    been modified. Since we didn't get a private copy of the skb, the next
    time the skb is delivered to hard_start_xmit() it no longer has the
    expected layout (we moved the ETH header to the headroom, so skb->data
    now starts at the IUCV_TRANS header). So when qeth_l3_fill_af_iucv_hdr()
    does another round of rebuilding, the resulting qeth header ends up
    all wrong. On transmission, the buffer is then rejected by
    the HiperSockets device with SBALF15 = x'04'.
    When this error is passed back to af_iucv as TX_NOTIFY_UNREACHABLE, it
    tears down the offending socket.
    
    As the ETH header for AF_IUCV serves no purpose, just align the code to
    what we do for IP traffic on L3 HiperSockets: keep the ETH header at
    skb->data, and pass down data_offset = ETH_HLEN to qeth_fill_buffer().
    When mapping the payload into the SBAL elements, the ETH header is then
    stripped off. This avoids the skb manipulations in
    qeth_l3_fill_af_iucv_hdr(), and any buffer re-entering hard_start_xmit()
    after NETDEV_TX_BUSY is now processed properly.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 118b0404d68d4019ff7906175b3b85fb50f06e84
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Thu Mar 23 14:55:08 2017 +0100

    s390/qeth: size calculation outbound buffers
    
    
    [ Upstream commit 7d969d2e8890f546c8cec634b3aa5f57d4eef883 ]
    
    Depending on the device type, hard_start_xmit() builds different output
    buffer formats. For instance with HiperSockets, on both L2 and L3 we
    strip the ETH header from the skb - L3 doesn't need it, and L2 carries
    it in the buffer's header element.
    For this, we pass data_offset = ETH_HLEN all the way down to
    __qeth_fill_buffer(), where skb->data is then adjusted accordingly.
    But the initial size calculation still considers the *full* skb length
    (including the ETH header). So qeth_get_elements_no() can erroneously
    reject a skb as too big, even though it would actually fit into an
    output buffer once the ETH header has been trimmed off later.
    
    Fix this by passing an additional offset to qeth_get_elements_no(),
    that indicates where in the skb the on-wire data actually begins.
    Since the current code uses data_offset=-1 for some special handling
    on OSA, we need to clamp data_offset to 0...
    
    On HiperSockets this helps when sending ~MTU-size skbs with weird page
    alignment. No change for OSA or AF_IUCV.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60d59823046a7cfbfb6fe13ed9d320aafe1338a2
Author: hayeswang <hayeswang@realtek.com>
Date:   Thu Mar 23 19:14:19 2017 +0800

    r8152: prevent the driver from transmitting packets with carrier off
    
    
    [ Upstream commit 2f25abe6bac573928a990ccbdac75873add8127e ]
    
    The linking status may be changed when autosuspend. And, after
    autoresume, the driver may try to transmit packets when the device
    is carrier off, because the interrupt transfer doesn't update the
    linking status, yet. And, if the device is in ALDPS mode, the device
    would stop working.
    
    The another similar case is
     1. unplug the cable.
     2. interrupt transfer queue a work_queue for linking change.
     3. device enters the ALDPS mode.
     4. a tx occurs before the work_queue is called.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b89e229112c0277d73f41196c2b90397d4fdadd2
Author: Arnaud Pouliquen <arnaud.pouliquen@st.com>
Date:   Thu Mar 23 19:39:54 2017 +0100

    ASoC: STI: Fix reader substream pointer set
    
    
    [ Upstream commit 3c9d3f1bc2defd418b5933bbc928096c9c686d3b ]
    
    reader->substream is used in IRQ handler for error case but is never set.
    Set value to pcm substream on DAI startup and clean it on dai shutdown.
    
    Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 347848e0bb9956e070f8cfdee63ef5b8bb09af52
Author: Peter Stein <peter@stuntstein.dk>
Date:   Fri Feb 17 00:00:50 2017 -0800

    HID: xinmo: fix for out of range for THT 2P arcade controller.
    
    
    [ Upstream commit 9257821c5a1dc57ef3a37f7cbcebaf548395c964 ]
    
    There is a new clone of the XIN MO arcade controller which has same issue with
    out of range like the original.  This fix will solve the issue where 2
    directions on the joystick are not recognized by the new THT 2P arcade
    controller with device ID 0x75e1.  In details the new device ID is added the
    hid-id list and the hid-xinmo source code.
    
    Signed-off-by: Peter Stein <peter@stuntstein.dk>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afa055f2a1d0ffcb51cc2b38eb610752c60fdb48
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Mar 23 16:03:11 2017 +0100

    hwmon: (asus_atk0110) fix uninitialized data access
    
    
    [ Upstream commit a2125d02443e9a4e68bcfd9f8004fa23239e8329 ]
    
    The latest gcc-7 snapshot adds a warning to point out that when
    atk_read_value_old or atk_read_value_new fails, we copy
    uninitialized data into sensor->cached_value:
    
    drivers/hwmon/asus_atk0110.c: In function 'atk_input_show':
    drivers/hwmon/asus_atk0110.c:651:26: error: 'value' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    
    Adding an error check avoids this. All versions of the driver
    are affected.
    
    Fixes: 2c03d07ad54d ("hwmon: Add Asus ATK0110 support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Luca Tettamanti <kronos.it@gmail.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5700ffc4accb9df36999fdf4cef5778160f34236
Author: Rob Herring <robh@kernel.org>
Date:   Tue Mar 21 21:03:01 2017 -0500

    ARM: dts: ti: fix PCI bus dtc warnings
    
    
    [ Upstream commit 7d79f6098d82f8c09914d7799bc96891ad9c3baf ]
    
    dtc recently added PCI bus checks. Fix these warnings.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Cc: "Benoît Cousson" <bcousson@baylibre.com>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: linux-omap@vger.kernel.org
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2df19698db73552428a47c47166a16b9c16d19ba
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Mar 23 05:30:08 2017 -0700

    KVM: VMX: Fix enable VPID conditions
    
    
    [ Upstream commit 08d839c4b134b8328ec42f2157a9ca4b93227c03 ]
    
    This can be reproduced by running L2 on L1, and disable VPID on L0
    if w/o commit "KVM: nVMX: Fix nested VPID vmx exec control", the L2
    crash as below:
    
    KVM: entry failed, hardware error 0x7
    EAX=00000000 EBX=00000000 ECX=00000000 EDX=000306c3
    ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
    EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
    ES =0000 00000000 0000ffff 00009300
    CS =f000 ffff0000 0000ffff 00009b00
    SS =0000 00000000 0000ffff 00009300
    DS =0000 00000000 0000ffff 00009300
    FS =0000 00000000 0000ffff 00009300
    GS =0000 00000000 0000ffff 00009300
    LDT=0000 00000000 0000ffff 00008200
    TR =0000 00000000 0000ffff 00008b00
    GDT=     00000000 0000ffff
    IDT=     00000000 0000ffff
    CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
    DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000
    DR6=00000000ffff0ff0 DR7=0000000000000400
    EFER=0000000000000000
    
    Reference SDM 30.3 INVVPID:
    
    Protected Mode Exceptions
    - #UD
      - If not in VMX operation.
      - If the logical processor does not support VPIDs (IA32_VMX_PROCBASED_CTLS2[37]=0).
      - If the logical processor supports VPIDs (IA32_VMX_PROCBASED_CTLS2[37]=1) but does
        not support the INVVPID instruction (IA32_VMX_EPT_VPID_CAP[32]=0).
    
    So we should check both VPID enable bit in vmx exec control and INVVPID support bit
    in vmx capability MSRs to enable VPID. This patch adds the guarantee to not enable
    VPID if either INVVPID or single-context/all-context invalidation is not exposed in
    vmx capability MSRs.
    
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0249c023448333d2a9f2e385d036237b48c67fe
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Mon Mar 20 21:18:55 2017 -0700

    KVM: x86: correct async page present tracepoint
    
    
    [ Upstream commit 24dccf83a121b8a4ad5c2ad383a8184ef6c266ee ]
    
    After async pf setup successfully, there is a broadcast wakeup w/ special
    token 0xffffffff which tells vCPU that it should wake up all processes
    waiting for APFs though there is no real process waiting at the moment.
    
    The async page present tracepoint print prematurely and fails to catch the
    special token setup. This patch fixes it by moving the async page present
    tracepoint after the special token setup.
    
    Before patch:
    
    qemu-system-x86-8499  [006] ...1  5973.473292: kvm_async_pf_ready: token 0x0 gva 0x0
    
    After patch:
    
    qemu-system-x86-8499  [006] ...1  5973.473292: kvm_async_pf_ready: token 0xffffffff gva 0x0
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8386ff5203e04f1b720582eec7eaab63712403f4
Author: Jim Mattson <jmattson@google.com>
Date:   Thu Mar 16 13:53:59 2017 -0700

    kvm: vmx: Flush TLB when the APIC-access address changes
    
    
    [ Upstream commit fb6c8198431311027c3434d4e94ab8bc040f7aea ]
    
    Quoting from the Intel SDM, volume 3, section 28.3.3.4: Guidelines for
    Use of the INVEPT Instruction:
    
    If EPT was in use on a logical processor at one time with EPTP X, it
    is recommended that software use the INVEPT instruction with the
    "single-context" INVEPT type and with EPTP X in the INVEPT descriptor
    before a VM entry on the same logical processor that enables EPT with
    EPTP X and either (a) the "virtualize APIC accesses" VM-execution
    control was changed from 0 to 1; or (b) the value of the APIC-access
    address was changed.
    
    In the nested case, the burden falls on L1, unless L0 enables EPT in
    vmcs02 when L1 doesn't enable EPT in vmcs12.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bd2017b6a205092de4d65d2fc67b8cfca6b676f
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Thu Mar 23 08:47:18 2017 -0400

    scsi: lpfc: Fix PT2PT PRLI reject
    
    
    [ Upstream commit a71e3cdcfce4880a4578915e110e3eaed1659765 ]
    
    lpfc cannot establish connection with targets that send PRLI in P2P
    configurations.
    
    If lpfc rejects a PRLI that is sent from a target the target will not
    resend and will reject the PRLI send from the initiator.
    
    [mkp: applied by hand]
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f4aa1f0f576b4a4706eb0f419a23922c45deb31
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Thu Mar 16 18:26:02 2017 +0100

    pinctrl: st: add irq_request/release_resources callbacks
    
    
    [ Upstream commit e855fa9a65c40788b5069abb0d094537daa22e05 ]
    
    When using GPIO as IRQ source, the GPIO must be configured
    in INPUT. Callbacks dedicated for this was missing in
    pinctrl-st driver.
    
    This fix the following kernel error when trying to lock a gpio
    as IRQ:
    
    [    7.521095] gpio gpiochip7: (PIO11): gpiochip_lock_as_irq: tried to flag a GPIO set as output for IRQ
    [    7.526018] gpio gpiochip7: (PIO11): unable to lock HW IRQ 6 for IRQ
    [    7.529405] genirq: Failed to request resources for 0-0053 (irq 81) on irqchip GPIO
    
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7656871eff6ae5957394767a08ee0ce581023ed7
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 22 08:57:15 2017 -0700

    inet: frag: release spinlock before calling icmp_send()
    
    
    [ Upstream commit ec4fbd64751de18729eaa816ec69e4b504b5a7a2 ]
    
    Dmitry reported a lockdep splat [1] (false positive) that we can fix
    by releasing the spinlock before calling icmp_send() from ip_expire()
    
    This is a false positive because sending an ICMP message can not
    possibly re-enter the IP frag engine.
    
    [1]
    [ INFO: possible circular locking dependency detected ]
    4.10.0+ #29 Not tainted
    -------------------------------------------------------
    modprobe/12392 is trying to acquire lock:
     (_xmit_ETHER#2){+.-...}, at: [<ffffffff837a8182>] spin_lock
    include/linux/spinlock.h:299 [inline]
     (_xmit_ETHER#2){+.-...}, at: [<ffffffff837a8182>] __netif_tx_lock
    include/linux/netdevice.h:3486 [inline]
     (_xmit_ETHER#2){+.-...}, at: [<ffffffff837a8182>]
    sch_direct_xmit+0x282/0x6d0 net/sched/sch_generic.c:180
    
    but task is already holding lock:
     (&(&q->lock)->rlock){+.-...}, at: [<ffffffff8389a4d1>] spin_lock
    include/linux/spinlock.h:299 [inline]
     (&(&q->lock)->rlock){+.-...}, at: [<ffffffff8389a4d1>]
    ip_expire+0x51/0x6c0 net/ipv4/ip_fragment.c:201
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #1 (&(&q->lock)->rlock){+.-...}:
           validate_chain kernel/locking/lockdep.c:2267 [inline]
           __lock_acquire+0x2149/0x3430 kernel/locking/lockdep.c:3340
           lock_acquire+0x2a1/0x630 kernel/locking/lockdep.c:3755
           __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
           _raw_spin_lock+0x33/0x50 kernel/locking/spinlock.c:151
           spin_lock include/linux/spinlock.h:299 [inline]
           ip_defrag+0x3a2/0x4130 net/ipv4/ip_fragment.c:669
           ip_check_defrag+0x4e3/0x8b0 net/ipv4/ip_fragment.c:713
           packet_rcv_fanout+0x282/0x800 net/packet/af_packet.c:1459
           deliver_skb net/core/dev.c:1834 [inline]
           dev_queue_xmit_nit+0x294/0xa90 net/core/dev.c:1890
           xmit_one net/core/dev.c:2903 [inline]
           dev_hard_start_xmit+0x16b/0xab0 net/core/dev.c:2923
           sch_direct_xmit+0x31f/0x6d0 net/sched/sch_generic.c:182
           __dev_xmit_skb net/core/dev.c:3092 [inline]
           __dev_queue_xmit+0x13e5/0x1e60 net/core/dev.c:3358
           dev_queue_xmit+0x17/0x20 net/core/dev.c:3423
           neigh_resolve_output+0x6b9/0xb10 net/core/neighbour.c:1308
           neigh_output include/net/neighbour.h:478 [inline]
           ip_finish_output2+0x8b8/0x15a0 net/ipv4/ip_output.c:228
           ip_do_fragment+0x1d93/0x2720 net/ipv4/ip_output.c:672
           ip_fragment.constprop.54+0x145/0x200 net/ipv4/ip_output.c:545
           ip_finish_output+0x82d/0xe10 net/ipv4/ip_output.c:314
           NF_HOOK_COND include/linux/netfilter.h:246 [inline]
           ip_output+0x1f0/0x7a0 net/ipv4/ip_output.c:404
           dst_output include/net/dst.h:486 [inline]
           ip_local_out+0x95/0x170 net/ipv4/ip_output.c:124
           ip_send_skb+0x3c/0xc0 net/ipv4/ip_output.c:1492
           ip_push_pending_frames+0x64/0x80 net/ipv4/ip_output.c:1512
           raw_sendmsg+0x26de/0x3a00 net/ipv4/raw.c:655
           inet_sendmsg+0x164/0x5b0 net/ipv4/af_inet.c:761
           sock_sendmsg_nosec net/socket.c:633 [inline]
           sock_sendmsg+0xca/0x110 net/socket.c:643
           ___sys_sendmsg+0x4a3/0x9f0 net/socket.c:1985
           __sys_sendmmsg+0x25c/0x750 net/socket.c:2075
           SYSC_sendmmsg net/socket.c:2106 [inline]
           SyS_sendmmsg+0x35/0x60 net/socket.c:2101
           do_syscall_64+0x2e8/0x930 arch/x86/entry/common.c:281
           return_from_SYSCALL_64+0x0/0x7a
    
    -> #0 (_xmit_ETHER#2){+.-...}:
           check_prev_add kernel/locking/lockdep.c:1830 [inline]
           check_prevs_add+0xa8f/0x19f0 kernel/locking/lockdep.c:1940
           validate_chain kernel/locking/lockdep.c:2267 [inline]
           __lock_acquire+0x2149/0x3430 kernel/locking/lockdep.c:3340
           lock_acquire+0x2a1/0x630 kernel/locking/lockdep.c:3755
           __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
           _raw_spin_lock+0x33/0x50 kernel/locking/spinlock.c:151
           spin_lock include/linux/spinlock.h:299 [inline]
           __netif_tx_lock include/linux/netdevice.h:3486 [inline]
           sch_direct_xmit+0x282/0x6d0 net/sched/sch_generic.c:180
           __dev_xmit_skb net/core/dev.c:3092 [inline]
           __dev_queue_xmit+0x13e5/0x1e60 net/core/dev.c:3358
           dev_queue_xmit+0x17/0x20 net/core/dev.c:3423
           neigh_hh_output include/net/neighbour.h:468 [inline]
           neigh_output include/net/neighbour.h:476 [inline]
           ip_finish_output2+0xf6c/0x15a0 net/ipv4/ip_output.c:228
           ip_finish_output+0xa29/0xe10 net/ipv4/ip_output.c:316
           NF_HOOK_COND include/linux/netfilter.h:246 [inline]
           ip_output+0x1f0/0x7a0 net/ipv4/ip_output.c:404
           dst_output include/net/dst.h:486 [inline]
           ip_local_out+0x95/0x170 net/ipv4/ip_output.c:124
           ip_send_skb+0x3c/0xc0 net/ipv4/ip_output.c:1492
           ip_push_pending_frames+0x64/0x80 net/ipv4/ip_output.c:1512
           icmp_push_reply+0x372/0x4d0 net/ipv4/icmp.c:394
           icmp_send+0x156c/0x1c80 net/ipv4/icmp.c:754
           ip_expire+0x40e/0x6c0 net/ipv4/ip_fragment.c:239
           call_timer_fn+0x241/0x820 kernel/time/timer.c:1268
           expire_timers kernel/time/timer.c:1307 [inline]
           __run_timers+0x960/0xcf0 kernel/time/timer.c:1601
           run_timer_softirq+0x21/0x80 kernel/time/timer.c:1614
           __do_softirq+0x31f/0xbe7 kernel/softirq.c:284
           invoke_softirq kernel/softirq.c:364 [inline]
           irq_exit+0x1cc/0x200 kernel/softirq.c:405
           exiting_irq arch/x86/include/asm/apic.h:657 [inline]
           smp_apic_timer_interrupt+0x76/0xa0 arch/x86/kernel/apic/apic.c:962
           apic_timer_interrupt+0x93/0xa0 arch/x86/entry/entry_64.S:707
           __read_once_size include/linux/compiler.h:254 [inline]
           atomic_read arch/x86/include/asm/atomic.h:26 [inline]
           rcu_dynticks_curr_cpu_in_eqs kernel/rcu/tree.c:350 [inline]
           __rcu_is_watching kernel/rcu/tree.c:1133 [inline]
           rcu_is_watching+0x83/0x110 kernel/rcu/tree.c:1147
           rcu_read_lock_held+0x87/0xc0 kernel/rcu/update.c:293
           radix_tree_deref_slot include/linux/radix-tree.h:238 [inline]
           filemap_map_pages+0x6d4/0x1570 mm/filemap.c:2335
           do_fault_around mm/memory.c:3231 [inline]
           do_read_fault mm/memory.c:3265 [inline]
           do_fault+0xbd5/0x2080 mm/memory.c:3370
           handle_pte_fault mm/memory.c:3600 [inline]
           __handle_mm_fault+0x1062/0x2cb0 mm/memory.c:3714
           handle_mm_fault+0x1e2/0x480 mm/memory.c:3751
           __do_page_fault+0x4f6/0xb60 arch/x86/mm/fault.c:1397
           do_page_fault+0x54/0x70 arch/x86/mm/fault.c:1460
           page_fault+0x28/0x30 arch/x86/entry/entry_64.S:1011
    
    other info that might help us debug this:
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&(&q->lock)->rlock);
                                   lock(_xmit_ETHER#2);
                                   lock(&(&q->lock)->rlock);
      lock(_xmit_ETHER#2);
    
     *** DEADLOCK ***
    
    10 locks held by modprobe/12392:
     #0:  (&mm->mmap_sem){++++++}, at: [<ffffffff81329758>]
    __do_page_fault+0x2b8/0xb60 arch/x86/mm/fault.c:1336
     #1:  (rcu_read_lock){......}, at: [<ffffffff8188cab6>]
    filemap_map_pages+0x1e6/0x1570 mm/filemap.c:2324
     #2:  (&(ptlock_ptr(page))->rlock#2){+.+...}, at: [<ffffffff81984a78>]
    spin_lock include/linux/spinlock.h:299 [inline]
     #2:  (&(ptlock_ptr(page))->rlock#2){+.+...}, at: [<ffffffff81984a78>]
    pte_alloc_one_map mm/memory.c:2944 [inline]
     #2:  (&(ptlock_ptr(page))->rlock#2){+.+...}, at: [<ffffffff81984a78>]
    alloc_set_pte+0x13b8/0x1b90 mm/memory.c:3072
     #3:  (((&q->timer))){+.-...}, at: [<ffffffff81627e72>]
    lockdep_copy_map include/linux/lockdep.h:175 [inline]
     #3:  (((&q->timer))){+.-...}, at: [<ffffffff81627e72>]
    call_timer_fn+0x1c2/0x820 kernel/time/timer.c:1258
     #4:  (&(&q->lock)->rlock){+.-...}, at: [<ffffffff8389a4d1>] spin_lock
    include/linux/spinlock.h:299 [inline]
     #4:  (&(&q->lock)->rlock){+.-...}, at: [<ffffffff8389a4d1>]
    ip_expire+0x51/0x6c0 net/ipv4/ip_fragment.c:201
     #5:  (rcu_read_lock){......}, at: [<ffffffff8389a633>]
    ip_expire+0x1b3/0x6c0 net/ipv4/ip_fragment.c:216
     #6:  (slock-AF_INET){+.-...}, at: [<ffffffff839b3313>] spin_trylock
    include/linux/spinlock.h:309 [inline]
     #6:  (slock-AF_INET){+.-...}, at: [<ffffffff839b3313>] icmp_xmit_lock
    net/ipv4/icmp.c:219 [inline]
     #6:  (slock-AF_INET){+.-...}, at: [<ffffffff839b3313>]
    icmp_send+0x803/0x1c80 net/ipv4/icmp.c:681
     #7:  (rcu_read_lock_bh){......}, at: [<ffffffff838ab9a1>]
    ip_finish_output2+0x2c1/0x15a0 net/ipv4/ip_output.c:198
     #8:  (rcu_read_lock_bh){......}, at: [<ffffffff836d1dee>]
    __dev_queue_xmit+0x23e/0x1e60 net/core/dev.c:3324
     #9:  (dev->qdisc_running_key ?: &qdisc_running_key){+.....}, at:
    [<ffffffff836d3a27>] dev_queue_xmit+0x17/0x20 net/core/dev.c:3423
    
    stack backtrace:
    CPU: 0 PID: 12392 Comm: modprobe Not tainted 4.10.0+ #29
    Hardware name: Google Google Compute Engine/Google Compute Engine,
    BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:16 [inline]
     dump_stack+0x2ee/0x3ef lib/dump_stack.c:52
     print_circular_bug+0x307/0x3b0 kernel/locking/lockdep.c:1204
     check_prev_add kernel/locking/lockdep.c:1830 [inline]
     check_prevs_add+0xa8f/0x19f0 kernel/locking/lockdep.c:1940
     validate_chain kernel/locking/lockdep.c:2267 [inline]
     __lock_acquire+0x2149/0x3430 kernel/locking/lockdep.c:3340
     lock_acquire+0x2a1/0x630 kernel/locking/lockdep.c:3755
     __raw_spin_lock include/linux/spinlock_api_smp.h:142 [inline]
     _raw_spin_lock+0x33/0x50 kernel/locking/spinlock.c:151
     spin_lock include/linux/spinlock.h:299 [inline]
     __netif_tx_lock include/linux/netdevice.h:3486 [inline]
     sch_direct_xmit+0x282/0x6d0 net/sched/sch_generic.c:180
     __dev_xmit_skb net/core/dev.c:3092 [inline]
     __dev_queue_xmit+0x13e5/0x1e60 net/core/dev.c:3358
     dev_queue_xmit+0x17/0x20 net/core/dev.c:3423
     neigh_hh_output include/net/neighbour.h:468 [inline]
     neigh_output include/net/neighbour.h:476 [inline]
     ip_finish_output2+0xf6c/0x15a0 net/ipv4/ip_output.c:228
     ip_finish_output+0xa29/0xe10 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:246 [inline]
     ip_output+0x1f0/0x7a0 net/ipv4/ip_output.c:404
     dst_output include/net/dst.h:486 [inline]
     ip_local_out+0x95/0x170 net/ipv4/ip_output.c:124
     ip_send_skb+0x3c/0xc0 net/ipv4/ip_output.c:1492
     ip_push_pending_frames+0x64/0x80 net/ipv4/ip_output.c:1512
     icmp_push_reply+0x372/0x4d0 net/ipv4/icmp.c:394
     icmp_send+0x156c/0x1c80 net/ipv4/icmp.c:754
     ip_expire+0x40e/0x6c0 net/ipv4/ip_fragment.c:239
     call_timer_fn+0x241/0x820 kernel/time/timer.c:1268
     expire_timers kernel/time/timer.c:1307 [inline]
     __run_timers+0x960/0xcf0 kernel/time/timer.c:1601
     run_timer_softirq+0x21/0x80 kernel/time/timer.c:1614
     __do_softirq+0x31f/0xbe7 kernel/softirq.c:284
     invoke_softirq kernel/softirq.c:364 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:657 [inline]
     smp_apic_timer_interrupt+0x76/0xa0 arch/x86/kernel/apic/apic.c:962
     apic_timer_interrupt+0x93/0xa0 arch/x86/entry/entry_64.S:707
    RIP: 0010:__read_once_size include/linux/compiler.h:254 [inline]
    RIP: 0010:atomic_read arch/x86/include/asm/atomic.h:26 [inline]
    RIP: 0010:rcu_dynticks_curr_cpu_in_eqs kernel/rcu/tree.c:350 [inline]
    RIP: 0010:__rcu_is_watching kernel/rcu/tree.c:1133 [inline]
    RIP: 0010:rcu_is_watching+0x83/0x110 kernel/rcu/tree.c:1147
    RSP: 0000:ffff8801c391f120 EFLAGS: 00000a03 ORIG_RAX: ffffffffffffff10
    RAX: dffffc0000000000 RBX: ffff8801c391f148 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: 000055edd4374000 RDI: ffff8801dbe1ae0c
    RBP: ffff8801c391f1a0 R08: 0000000000000002 R09: 0000000000000000
    R10: dffffc0000000000 R11: 0000000000000002 R12: 1ffff10038723e25
    R13: ffff8801dbe1ae00 R14: ffff8801c391f680 R15: dffffc0000000000
     </IRQ>
     rcu_read_lock_held+0x87/0xc0 kernel/rcu/update.c:293
     radix_tree_deref_slot include/linux/radix-tree.h:238 [inline]
     filemap_map_pages+0x6d4/0x1570 mm/filemap.c:2335
     do_fault_around mm/memory.c:3231 [inline]
     do_read_fault mm/memory.c:3265 [inline]
     do_fault+0xbd5/0x2080 mm/memory.c:3370
     handle_pte_fault mm/memory.c:3600 [inline]
     __handle_mm_fault+0x1062/0x2cb0 mm/memory.c:3714
     handle_mm_fault+0x1e2/0x480 mm/memory.c:3751
     __do_page_fault+0x4f6/0xb60 arch/x86/mm/fault.c:1397
     do_page_fault+0x54/0x70 arch/x86/mm/fault.c:1460
     page_fault+0x28/0x30 arch/x86/entry/entry_64.S:1011
    RIP: 0033:0x7f83172f2786
    RSP: 002b:00007fffe859ae80 EFLAGS: 00010293
    RAX: 000055edd4373040 RBX: 00007f83175111c8 RCX: 000055edd4373238
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 00007f8317510970
    RBP: 00007fffe859afd0 R08: 0000000000000009 R09: 0000000000000000
    R10: 0000000000000064 R11: 0000000000000000 R12: 000055edd4373040
    R13: 0000000000000000 R14: 00007fffe859afe8 R15: 0000000000000000
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e8067ec34ad422125a54f88a0884dbb296009f
Author: Ying Xue <ying.xue@windriver.com>
Date:   Tue Mar 21 10:47:49 2017 +0100

    tipc: fix nametbl deadlock at tipc_nametbl_unsubscribe
    
    
    [ Upstream commit 557d054c01da0337ca81de9e9d9206d57245b57e ]
    
    Until now, tipc_nametbl_unsubscribe() is called at subscriptions
    reference count cleanup. Usually the subscriptions cleanup is
    called at subscription timeout or at subscription cancel or at
    subscriber delete.
    
    We have ignored the possibility of this being called from other
    locations, which causes deadlock as we try to grab the
    tn->nametbl_lock while holding it already.
    
       CPU1:                             CPU2:
    ----------                     ----------------
    tipc_nametbl_publish
    spin_lock_bh(&tn->nametbl_lock)
    tipc_nametbl_insert_publ
    tipc_nameseq_insert_publ
    tipc_subscrp_report_overlap
    tipc_subscrp_get
    tipc_subscrp_send_event
                                 tipc_close_conn
                                 tipc_subscrb_release_cb
                                 tipc_subscrb_delete
                                 tipc_subscrp_put
    tipc_subscrp_put
    tipc_subscrp_kref_release
    tipc_nametbl_unsubscribe
    spin_lock_bh(&tn->nametbl_lock)
    <<grab nametbl_lock again>>
    
       CPU1:                              CPU2:
    ----------                     ----------------
    tipc_nametbl_stop
    spin_lock_bh(&tn->nametbl_lock)
    tipc_purge_publications
    tipc_nameseq_remove_publ
    tipc_subscrp_report_overlap
    tipc_subscrp_get
    tipc_subscrp_send_event
                                 tipc_close_conn
                                 tipc_subscrb_release_cb
                                 tipc_subscrb_delete
                                 tipc_subscrp_put
    tipc_subscrp_put
    tipc_subscrp_kref_release
    tipc_nametbl_unsubscribe
    spin_lock_bh(&tn->nametbl_lock)
    <<grab nametbl_lock again>>
    
    In this commit, we advance the calling of tipc_nametbl_unsubscribe()
    from the refcount cleanup to the intended callers.
    
    Fixes: d094c4d5f5c7 ("tipc: add subscription refcount to avoid invalid delete")
    Reported-by: John Thompson <thompa.atl@gmail.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfb38fbd868d5780f7a57d9ec46979041d387172
Author: hayeswang <hayeswang@realtek.com>
Date:   Mon Mar 20 16:13:45 2017 +0800

    r8152: fix the rx early size of RTL8153
    
    
    [ Upstream commit b20cb60e2b865638459e6ec82ad3536d3734e555 ]
    
    revert commit a59e6d815226 ("r8152: correct the rx early size") and
    fix the rx early size as
    
            (rx buffer size - rx packet size - rx desc size - alignment) / 4
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7171aa2680b2ff7c946c89ec36aa82a41f6fce55
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Mar 20 10:17:57 2017 +0100

    iommu/exynos: Workaround FLPD cache flush issues for SYSMMU v5
    
    
    [ Upstream commit cd37a296a9f890586665bb8974a8b17ee2f17d6d ]
    
    For some unknown reasons, in some cases, FLPD cache invalidation doesn't
    work properly with SYSMMU v5 controllers found in Exynos5433 SoCs. This
    can be observed by a firmware crash during initialization phase of MFC
    video decoder available in the mentioned SoCs when IOMMU support is
    enabled. To workaround this issue perform a full TLB/FLPD invalidation
    in case of replacing any first level page descriptors in case of SYSMMU v5.
    
    Fixes: 740a01eee9ada ("iommu/exynos: Add support for v5 SYSMMU")
    CC: stable@vger.kernel.org # v4.10+
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f0ac218057f9a08c28083c11dd315ff21686d22
Author: Jeffy Chen <jeffy.chen@rock-chips.com>
Date:   Tue Mar 21 15:07:10 2017 +0800

    netfilter: nfnl_cthelper: Fix memory leak
    
    
    [ Upstream commit f83bf8da1135ca635aac8f062cad3f001fcf3a26 ]
    
    We have memory leaks of nf_conntrack_helper & expect_policy.
    
    Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec38fb443a091ac99d0d8bc3867db690c8f07fe4
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Mar 21 13:32:37 2017 +0100

    netfilter: nfnl_cthelper: fix runtime expectation policy updates
    
    
    [ Upstream commit 2c422257550f123049552b39f7af6e3428a60f43 ]
    
    We only allow runtime updates of expectation policies for timeout and
    maximum number of expectations, otherwise reject the update.
    
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Acked-by: Liping Zhang <zlpnobody@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02197d86c56db3819832b1fb97aa86501d767c99
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Fri Mar 10 15:39:32 2017 -0600

    usb: gadget: udc: remove pointer dereference after free
    
    
    [ Upstream commit 1f459262b0e1649a1e5ad12fa4c66eb76c2220ce ]
    
    Remove pointer dereference after free.
    
    Addresses-Coverity-ID: 1091173
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b943bed33e78216eaf191173d0f23e622cd27ab
Author: Roger Quadros <rogerq@ti.com>
Date:   Wed Mar 8 16:05:44 2017 +0200

    usb: gadget: f_uvc: Sanity check wMaxPacketSize for SuperSpeed
    
    
    [ Upstream commit 16bb05d98c904a4f6c5ce7e2d992299f794acbf2 ]
    
    As per USB3.0 Specification "Table 9-20. Standard Endpoint Descriptor",
    for interrupt and isochronous endpoints, wMaxPacketSize must be set to
    1024 if the endpoint defines bMaxBurst to be greater than zero.
    
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2101ccbc2a91490fd160946291f09417fbc17b18
Author: Alex Hemme <ahemme@cisco.com>
Date:   Tue Mar 7 14:38:29 2017 -0500

    hwmon: (max31790) Set correct PWM value
    
    
    [ Upstream commit dd7406dd334a98ada3ff5371847a3eeb4ba16313 ]
    
    Traced fans not spinning to incorrect PWM value being written.
    The passed in value was written instead of the calulated value.
    
    Fixes: 54187ff9d766 ("hwmon: (max31790) Convert to use new hwmon registration API")
    Signed-off-by: Alex Hemme <ahemme@cisco.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ee082a72731bc279a69b60d2e085a960686962d
Author: Tony Lindgren <tony@atomide.com>
Date:   Sun Mar 19 09:19:57 2017 -0700

    net: qmi_wwan: Add USB IDs for MDM6600 modem on Motorola Droid 4
    
    
    [ Upstream commit 4071898bf0f4d79ff353db327af2a15123272548 ]
    
    This gets qmicli working with the MDM6600 modem.
    
    Cc: Bjørn Mork <bjorn@mork.no>
    Reviewed-by: Sebastian Reichel <sre@kernel.org>
    Tested-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ed8f0fabae57cd0dd993e815fbe15135f2070fd
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Mar 18 20:03:59 2017 +0800

    sctp: out_qlen should be updated when pruning unsent queue
    
    
    [ Upstream commit 23bb09cfbe04076ef647da3889a5a5ab6cbe6f15 ]
    
    This patch is to fix the issue that sctp_prsctp_prune_sent forgot
    to update q->out_qlen when removing a chunk from unsent queue.
    
    Fixes: 8dbdf1f5b09c ("sctp: implement prsctp PRIO policy")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4cf187a1bc533839e75278dca74dfbb31d32d82
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 17 23:52:35 2017 +0300

    bna: integer overflow bug in debugfs
    
    
    [ Upstream commit 13e2d5187f6b965ba3556caedb914baf81b98ed2 ]
    
    We could allocate less memory than intended because we do:
    
            bnad->regdata = kzalloc(len << 2, GFP_KERNEL);
    
    The shift can overflow leading to a crash.  This is debugfs code so the
    impact is very small.
    
    Fixes: 7afc5dbde091 ("bna: Add debugfs interface.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Rasesh Mody <rasesh.mody@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3f662ccd3677915f79861bd19854250836aea4b
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Mar 17 08:05:28 2017 -0700

    sch_dsmark: fix invalid skb_cow() usage
    
    
    [ Upstream commit aea92fb2e09e29653b023d4254ac9fbf94221538 ]
    
    skb_cow(skb, sizeof(ip header)) is not very helpful in this context.
    
    First we need to use pskb_may_pull() to make sure the ip header
    is in skb linear part, then use skb_try_make_writable() to
    address clones issues.
    
    Fixes: 4c30719f4f55 ("[PKT_SCHED] dsmark: handle cloned and non-linear skb's")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98d20e5902667f9b44a75116041a630823f81e46
Author: Peng Tao <bergwolf@gmail.com>
Date:   Wed Mar 15 09:32:17 2017 +0800

    vsock: cancel packets when failing to connect
    
    
    [ Upstream commit 380feae0def7e6a115124a3219c3ec9b654dca32 ]
    
    Otherwise we'll leave the packets queued until releasing vsock device.
    E.g., if guest is slow to start up, resulting ETIMEDOUT on connect, guest
    will get the connect requests from failed host sockets.
    
    Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Peng Tao <bergwolf@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 482b3f92aea249b031ba0bc24df73f3c48f1f5c2
Author: Peng Tao <bergwolf@gmail.com>
Date:   Wed Mar 15 09:32:15 2017 +0800

    vhost-vsock: add pkt cancel capability
    
    
    [ Upstream commit 16320f363ae128d9b9c70e60f00f2a572f57c23d ]
    
    To allow canceling all packets of a connection.
    
    Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Peng Tao <bergwolf@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f1848e778d9a9f9dd89abee53d2a688277d1784
Author: Peng Tao <bergwolf@gmail.com>
Date:   Wed Mar 15 09:32:14 2017 +0800

    vsock: track pkt owner vsock
    
    
    [ Upstream commit 36d277bac8080202684e67162ebb157f16631581 ]
    
    So that we can cancel a queued pkt later if necessary.
    
    Signed-off-by: Peng Tao <bergwolf@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ff28d3307b6238765c6ec05bcfa016ea7f7f1ec
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Mar 14 18:25:57 2017 +0800

    crypto: deadlock between crypto_alg_sem/rtnl_mutex/genl_mutex
    
    
    [ Upstream commit 8a0f5ccfb33b0b8b51de65b7b3bf342ba10b4fb6 ]
    
    On Tue, Mar 14, 2017 at 10:44:10AM +0100, Dmitry Vyukov wrote:
    >
    > Yes, please.
    > Disregarding some reports is not a good way long term.
    
    Please try this patch.
    
    ---8<---
    Subject: netlink: Annotate nlk cb_mutex by protocol
    
    Currently all occurences of nlk->cb_mutex are annotated by lockdep
    as a single class.  This causes a false lcokdep cycle involving
    genl and crypto_user.
    
    This patch fixes it by dividing cb_mutex into individual classes
    based on the netlink protocol.  As genl and crypto_user do not
    use the same netlink protocol this breaks the false dependency
    loop.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddfc9f75993e1bb48719045ba20831b70d92a72c
Author: hayeswang <hayeswang@realtek.com>
Date:   Tue Mar 14 14:15:20 2017 +0800

    r8152: fix the list rx_done may be used without initialization
    
    
    [ Upstream commit 98d068ab52b4b11d403995ed14154660797e7136 ]
    
    The list rx_done would be initialized when the linking on occurs.
    Therefore, if a napi is scheduled without any linking on before,
    the following kernel panic would happen.
    
            BUG: unable to handle kernel NULL pointer dereference at 000000000000008
            IP: [<ffffffffc085efde>] r8152_poll+0xe1e/0x1210 [r8152]
            PGD 0
            Oops: 0002 [#1] SMP
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9712b2b73d7c61f811f08c9a59c7b2b61f20a3fe
Author: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>
Date:   Sun Mar 19 00:51:59 2017 +0530

    cpuidle: Validate cpu_dev in cpuidle_add_sysfs()
    
    
    [ Upstream commit ad0a45fd9c14feebd000b6e84189d0edff265170 ]
    
    If a given cpu is not in cpu_present and cpu hotplug
    is disabled, arch can skip setting up the cpu_dev.
    
    Arch cpuidle driver should pass correct cpu mask
    for registration, but failing to do so by the driver
    causes error to propagate and crash like this:
    
    [   30.076045] Unable to handle kernel paging request for data at address 0x00000048
    [   30.076100] Faulting instruction address: 0xc0000000007b2f30
    cpu 0x4d: Vector: 300 (Data Access) at [c000003feb18b670]
        pc: c0000000007b2f30: kobject_get+0x20/0x70
        lr: c0000000007b3c94: kobject_add_internal+0x54/0x3f0
        sp: c000003feb18b8f0
       msr: 9000000000009033
       dar: 48
     dsisr: 40000000
      current = 0xc000003fd2ed8300
      paca    = 0xc00000000fbab500   softe: 0        irq_happened: 0x01
        pid   = 1, comm = swapper/0
    Linux version 4.11.0-rc2-svaidy+ (sv@sagarika) (gcc version 6.2.0
    20161005 (Ubuntu 6.2.0-5ubuntu12) ) #10 SMP Sun Mar 19 00:08:09 IST 2017
    enter ? for help
    [c000003feb18b960] c0000000007b3c94 kobject_add_internal+0x54/0x3f0
    [c000003feb18b9f0] c0000000007b43a4 kobject_init_and_add+0x64/0xa0
    [c000003feb18ba70] c000000000e284f4 cpuidle_add_sysfs+0xb4/0x130
    [c000003feb18baf0] c000000000e26038 cpuidle_register_device+0x118/0x1c0
    [c000003feb18bb30] c000000000e26c48 cpuidle_register+0x78/0x120
    [c000003feb18bbc0] c00000000168fd9c powernv_processor_idle_init+0x110/0x1c4
    [c000003feb18bc40] c00000000000cff8 do_one_initcall+0x68/0x1d0
    [c000003feb18bd00] c0000000016242f4 kernel_init_freeable+0x280/0x360
    [c000003feb18bdc0] c00000000000d864 kernel_init+0x24/0x160
    [c000003feb18be30] c00000000000b4e8 ret_from_kernel_thread+0x5c/0x74
    
    Validating cpu_dev fixes the crash and reports correct error message like:
    
    [   30.163506] Failed to register cpuidle device for cpu136
    [   30.173329] Registration of powernv driver failed.
    
    Signed-off-by: Vaidyanathan Srinivasan <svaidy@linux.vnet.ibm.com>
    [ rjw: Comment massage ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f21b63c9dcf5a9242cecaa6289b8ce19026cb66
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Mar 13 13:27:51 2017 +0200

    nvme-loop: handle cpu unplug when re-establishing the controller
    
    
    [ Upstream commit 945dd5bacc8978439af276976b5dcbbd42333dbc ]
    
    If a cpu unplug event has occured, we need to take the minimum
    of the provided nr_io_queues and the number of online cpus,
    otherwise we won't be able to connect them as blk-mq mapping
    won't dispatch to those queues.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9bbd2727d1e02584ee98efe075e3483c287adb0
Author: Jon Medhurst <tixy@linaro.org>
Date:   Thu Mar 2 13:04:09 2017 +0000

    arm: kprobes: Align stack to 8-bytes in test code
    
    
    [ Upstream commit 974310d047f3c7788a51d10c8d255eebdb1fa857 ]
    
    kprobes test cases need to have a stack that is aligned to an 8-byte
    boundary because they call other functions (and the ARM ABI mandates
    that alignment) and because test cases include 64-bit accesses to the
    stack. Unfortunately, GCC doesn't ensure this alignment for inline
    assembler and for the code in question seems to always misalign it by
    pushing just the LR register onto the stack. We therefore need to
    explicitly perform stack alignment at the start of each test case.
    
    Without this fix, some test cases will generate alignment faults on
    systems where alignment is enforced. Even if the kernel is configured to
    handle these faults in software, triggering them is ugly. It also
    exposes limitations in the fault handling code which doesn't cope with
    writes to the stack. E.g. when handling this instruction
    
       strd r6, [sp, #-64]!
    
    the fault handling code will write to a stack location below the SP
    value at the point the fault occurred, which coincides with where the
    exception handler has pushed the saved register context. This results in
    corruption of those registers.
    
    Signed-off-by: Jon Medhurst <tixy@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0ee8d5b86b81d5e1cd282efb9b6e3cde221cc0d
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Feb 14 00:05:59 2017 +0900

    arm: kprobes: Fix the return address of multiple kretprobes
    
    
    [ Upstream commit 06553175f585b52509c7df37d6f4a50aacb7b211 ]
    
    This is arm port of commit 737480a0d525 ("kprobes/x86:
    Fix the return address of multiple kretprobes").
    
    Fix the return address of subsequent kretprobes when multiple
    kretprobes are set on the same function.
    
    For example:
    
      # cd /sys/kernel/debug/tracing
      # echo "r:event1 sys_symlink" > kprobe_events
      # echo "r:event2 sys_symlink" >> kprobe_events
      # echo 1 > events/kprobes/enable
      # ln -s /tmp/foo /tmp/bar
    
     (without this patch)
    
      # cat trace | grep -v ^#
                  ln-82    [000] dn.2    68.446525: event1: (kretprobe_trampoline+0x0/0x18 <- SyS_symlink)
                  ln-82    [000] dn.2    68.447831: event2: (ret_fast_syscall+0x0/0x1c <- SyS_symlink)
    
     (with this patch)
    
      # cat trace | grep -v ^#
                  ln-81    [000] dn.1    39.463469: event1: (ret_fast_syscall+0x0/0x1c <- SyS_symlink)
                  ln-81    [000] dn.1    39.464701: event2: (ret_fast_syscall+0x0/0x1c <- SyS_symlink)
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: KUMANO Syuhei <kumano.prog@gmail.com>
    Signed-off-by: Jon Medhurst <tixy@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e2a6941fa4ba76ffdd02006ff2d156455b4ef61
Author: Oscar Campos <oscar.campos@member.fsf.org>
Date:   Mon Mar 6 21:02:39 2017 +0000

    HID: corsair: Add driver Scimitar Pro RGB gaming mouse 1b1c:1b3e support to hid-corsair
    
    
    [ Upstream commit 01adc47e885f1127b29d76d0dfb21d8262f9d6b4 ]
    
    This mouse sold by Corsair as Scimitar PRO RGB defines two consecutive
    Logical Minimum items in its Application (Consumer.0001) report making
    it non parseable. This patch fixes the report descriptor overriding
    byte 77 in rdesc from 0x16 (Logical Minimum with 16 bits value) to 0x26
    (Logical Maximum with 16 bits value).
    
    Signed-off-by: Oscar Campos <oscar.campos@member.fsf.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e93ea3a50cc674f28c1f0634baf0ab4afd07ec1b
Author: Oscar Campos <oscar.campos@member.fsf.org>
Date:   Fri Feb 10 18:23:00 2017 +0000

    HID: corsair: support for K65-K70 Rapidfire and Scimitar Pro RGB
    
    
    [ Upstream commit deaba636997557fce46ca7bcb509bff5ea1b0558 ]
    
    Add quirks for several corsair gaming devices to avoid long delays on
    report initialization
    
    Supported devices:
    
     - Corsair K65RGB Rapidfire Gaming Keyboard
     - Corsair K70RGB Rapidfire Gaming Keyboard
     - Corsair Scimitar Pro RGB Gaming Mouse
    
    Signed-off-by: Oscar Campos <oscar.campos@member.fsf.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a7eee3d72b043d68af4098665eee89893386445
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Jan 24 14:06:48 2017 +0100

    kvm: fix usage of uninit spinlock in avic_vm_destroy()
    
    
    [ Upstream commit 3863dff0c3dd72984395c93b12383b393c5c3989 ]
    
    If avic is not enabled, avic_vm_init() does nothing and returns early.
    However, avic_vm_destroy() still tries to destroy what hasn't been created.
    The only bad consequence of this now is that avic_vm_destroy() uses
    svm_vm_data_hash_lock that hasn't been initialized (and is not meant
    to be used at all if avic is not enabled).
    
    Return early from avic_vm_destroy() if avic is not enabled.
    It has nothing to destroy.
    
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: kvm@vger.kernel.org
    Cc: syzkaller@googlegroups.com
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d9a34c064ad3f4296b5a00e29a75a4280e797c0
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Thu Mar 9 13:30:09 2017 +0100

    ALSA: hda - add support for docking station for HP 840 G3
    
    
    [ Upstream commit cc3a47a248d7791ef0d2c81a35c46769e55e4c6c ]
    
    This tested patch adds missing initialization for Line-In/Out PINs for
    the docking station for HP 840 G3.
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52c3323e41417ace0094ff1a70f548d94ffb6a49
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Thu Mar 9 13:29:13 2017 +0100

    ALSA: hda - add support for docking station for HP 820 G2
    
    
    [ Upstream commit 04d5466a976b096364a39a63ac264c1b3a5f8fa1 ]
    
    This tested patch adds missing initialization for Line-In/Out PINs for
    the docking station for HP 820 G2.
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb95f1caee6177da78c8fa9a54bcd3695c903b97
Author: Steve Capper <steve.capper@arm.com>
Date:   Mon Dec 4 14:13:05 2017 +0000

    arm64: Initialise high_memory global variable earlier
    
    commit f24e5834a2c3f6c5f814a417f858226f0a010ade upstream.
    
    The high_memory global variable is used by
    cma_declare_contiguous(.) before it is defined.
    
    We don't notice this as we compute __pa(high_memory - 1), and it looks
    like we're processing a VA from the direct linear map.
    
    This problem becomes apparent when we flip the kernel virtual address
    space and the linear map is moved to the bottom of the kernel VA space.
    
    This patch moves the initialisation of high_memory before it used.
    
    Fixes: f7426b983a6a ("mm: cma: adjust address limit to avoid hitting low/high memory boundary")
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76fcdc8cbbce8b62d8f799eb87a22ff4ac6ec16d
Author: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
Date:   Thu Nov 23 09:08:57 2017 +0530

    cxl: Check if vphb exists before iterating over AFU devices
    
    commit 12841f87b7a8ceb3d54f171660f72a86941bfcb3 upstream.
    
    During an eeh a kernel-oops is reported if no vPHB is allocated to the
    AFU. This happens as during AFU init, an error in creation of vPHB is
    a non-fatal error. Hence afu->phb should always be checked for NULL
    before iterating over it for the virtual AFU pci devices.
    
    This patch fixes the kenel-oops by adding a NULL pointer check for
    afu->phb before it is dereferenced.
    
    Fixes: 9e8df8a21963 ("cxl: EEH support")
    Signed-off-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Acked-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
