commit 4c8814277b5dc2b9d2745c6493614b1ce10cef09
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 19 13:44:47 2022 +0100

    Linux 5.10.107
    
    Link: https://lore.kernel.org/r/20220317124525.955110315@linuxfoundation.org
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Bagas Sanjaya <bagasdotme@gmail.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a0d13ef67a1084e1a77bf4d2334cc482699f861
Author: James Morse <james.morse@arm.com>
Date:   Tue Mar 15 13:57:20 2022 +0000

    arm64: kvm: Fix copy-and-paste error in bhb templates for v5.10 stable
    
    KVM's infrastructure for spectre mitigations in the vectors in v5.10 and
    earlier is different, it uses templates which are used to build a set of
    vectors at runtime.
    
    There are two copy-and-paste errors in the templates: __spectre_bhb_loop_k24
    should loop 24 times and __spectre_bhb_loop_k32 32.
    
    Fix these.
    
    Reported-by: Pavel Machek <pavel@denx.de>
    Link: https://lore.kernel.org/all/20220310234858.GB16308@amd/
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc1163203ae6e24b86168390fe5b4a3295fcba7f
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sun Apr 11 01:46:40 2021 +0100

    io_uring: return back safer resurrect
    
    commit f70865db5ff35f5ed0c7e9ef63e7cca3d4947f04 upstream.
    
    Revert of revert of "io_uring: wait potential ->release() on resurrect",
    which adds a helper for resurrect not racing completion reinit, as was
    removed because of a strange bug with no clear root or link to the
    patch.
    
    Was improved, instead of rcu_synchronize(), just wait_for_completion()
    because we're at 0 refs and it will happen very shortly. Specifically
    use non-interruptible version to ignore all pending signals that may
    have ended prior interruptible wait.
    
    This reverts commit cb5e1b81304e089ee3ca948db4d29f71902eb575.
    
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/7a080c20f686d026efade810b116b72f88abaff9.1618101759.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fdaab341bad8a8449fcdca349e5081e6f62db09
Author: Chengming Zhou <zhouchengming@bytedance.com>
Date:   Fri Mar 4 20:29:04 2022 -0800

    kselftest/vm: fix tests build with old libc
    
    [ Upstream commit b773827e361952b3f53ac6fa4c4e39ccd632102e ]
    
    The error message when I build vm tests on debian10 (GLIBC 2.28):
    
        userfaultfd.c: In function `userfaultfd_pagemap_test':
        userfaultfd.c:1393:37: error: `MADV_PAGEOUT' undeclared (first use
        in this function); did you mean `MADV_RANDOM'?
          if (madvise(area_dst, test_pgsize, MADV_PAGEOUT))
                                             ^~~~~~~~~~~~
                                             MADV_RANDOM
    
    This patch includes these newer definitions from UAPI linux/mman.h, is
    useful to fix tests build on systems without these definitions in glibc
    sys/mman.h.
    
    Link: https://lkml.kernel.org/r/20220227055330.43087-2-zhouchengming@bytedance.com
    Signed-off-by: Chengming Zhou <zhouchengming@bytedance.com>
    Reviewed-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2490695ffdbafbe79fb9c204df33a4597b1473b4
Author: Niels Dossche <dossche.niels@gmail.com>
Date:   Tue Mar 1 23:28:22 2022 +0100

    sfc: extend the locking on mcdi->seqno
    
    [ Upstream commit f1fb205efb0ccca55626fd4ef38570dd16b44719 ]
    
    seqno could be read as a stale value outside of the lock. The lock is
    already acquired to protect the modification of seqno against a possible
    race condition. Place the reading of this value also inside this locking
    to protect it against a possible race condition.
    
    Signed-off-by: Niels Dossche <dossche.niels@gmail.com>
    Acked-by: Martin Habets <habetsm.xilinx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fad5b6948963bac235eac8261d4cd9165eaf1c2
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 2 08:17:23 2022 -0800

    tcp: make tcp_read_sock() more robust
    
    [ Upstream commit e3d5ea2c011ecb16fb94c56a659364e6b30fac94 ]
    
    If recv_actor() returns an incorrect value, tcp_read_sock()
    might loop forever.
    
    Instead, issue a one time warning and make sure to make progress.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/r/20220302161723.3910001-2-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f9a8f8a952c4678594d22b601943ad95c62fa18
Author: Sreeramya Soratkal <quic_ssramya@quicinc.com>
Date:   Tue Mar 1 11:33:20 2022 +0530

    nl80211: Update bss channel on channel switch for P2P_CLIENT
    
    [ Upstream commit e50b88c4f076242358b66ddb67482b96947438f2 ]
    
    The wdev channel information is updated post channel switch only for
    the station mode and not for the other modes. Due to this, the P2P client
    still points to the old value though it moved to the new channel
    when the channel change is induced from the P2P GO.
    
    Update the bss channel after CSA channel switch completion for P2P client
    interface as well.
    
    Signed-off-by: Sreeramya Soratkal <quic_ssramya@quicinc.com>
    Link: https://lore.kernel.org/r/1646114600-31479-1-git-send-email-quic_ssramya@quicinc.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ba557d330946c23559aaea2d51ea649fdeca98a
Author: Manasi Navare <manasi.d.navare@intel.com>
Date:   Thu Feb 24 17:30:54 2022 -0800

    drm/vrr: Set VRR capable prop only if it is attached to connector
    
    [ Upstream commit 62929726ef0ec72cbbe9440c5d125d4278b99894 ]
    
    VRR capable property is not attached by default to the connector
    It is attached only if VRR is supported.
    So if the driver tries to call drm core set prop function without
    it being attached that causes NULL dereference.
    
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
    Cc: dri-devel@lists.freedesktop.org
    Signed-off-by: Manasi Navare <manasi.d.navare@intel.com>
    Reviewed-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220225013055.9282-1-manasi.d.navare@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a8e4a5c5b73b4445ccb6bc71f23bbc18bc96d42
Author: Golan Ben Ami <golan.ben.ami@intel.com>
Date:   Tue Mar 1 09:29:26 2022 +0200

    iwlwifi: don't advertise TWT support
    
    [ Upstream commit 1db5fcbba2631277b78d7f8aff99c9607d29f6d8 ]
    
    Some APs misbehave when TWT is used and cause our firmware to crash.
    We don't know a reasonable way to detect and work around this problem
    in the FW yet.  To prevent these crashes, disable TWT in the driver by
    stopping to advertise TWT support.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215523
    Signed-off-by: Golan Ben Ami <golan.ben.ami@intel.com>
    [reworded the commit message]
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20220301072926.153969-1-luca@coelho.fi
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5ea0221c8161350c61983479cb3d088fbf6ede4
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Feb 25 04:52:30 2022 -0800

    atm: firestream: check the return value of ioremap() in fs_init()
    
    [ Upstream commit d4e26aaea7f82ba884dcb4acfe689406bc092dc3 ]
    
    The function ioremap() in fs_init() can fail, so its return value should
    be checked.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efdd92c18ed4f39602d50dbc4a9d918109715b8d
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Feb 21 22:59:35 2022 +0000

    can: rcar_canfd: rcar_canfd_channel_probe(): register the CAN device when fully ready
    
    [ Upstream commit c5048a7b2c23ab589f3476a783bd586b663eda5b ]
    
    Register the CAN device only when all the necessary initialization is
    completed. This patch makes sure all the data structures and locks are
    initialized before registering the CAN device.
    
    Link: https://lore.kernel.org/all/20220221225935.12300-1-prabhakar.mahadev-lad.rj@bp.renesas.com
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Pavel Machek <pavel@denx.de>
    Reviewed-by: Ulrich Hecht <uli+renesas@fpond.eu>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebe106eac68675a1e6373723d0d8765a6adf3290
Author: Julian Braha <julianbraha@gmail.com>
Date:   Mon Jan 17 05:09:40 2022 +0100

    ARM: 9178/1: fix unmet dependency on BITREVERSE for HAVE_ARCH_BITREVERSE
    
    [ Upstream commit 11c57c3ba94da74c3446924260e34e0b1950b5d7 ]
    
    Resending this to properly add it to the patch tracker - thanks for letting
    me know, Arnd :)
    
    When ARM is enabled, and BITREVERSE is disabled,
    Kbuild gives the following warning:
    
    WARNING: unmet direct dependencies detected for HAVE_ARCH_BITREVERSE
      Depends on [n]: BITREVERSE [=n]
      Selected by [y]:
      - ARM [=y] && (CPU_32v7M [=n] || CPU_32v7 [=y]) && !CPU_32v6 [=n]
    
    This is because ARM selects HAVE_ARCH_BITREVERSE
    without selecting BITREVERSE, despite
    HAVE_ARCH_BITREVERSE depending on BITREVERSE.
    
    This unmet dependency bug was found by Kismet,
    a static analysis tool for Kconfig. Please advise if this
    is not the appropriate solution.
    
    Signed-off-by: Julian Braha <julianbraha@gmail.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8ad9ecc406974deb5e7c070f51cc1d09d21dc4b
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Sat Feb 12 22:21:11 2022 +0000

    MIPS: smp: fill in sibling and core maps earlier
    
    [ Upstream commit f2703def339c793674010cc9f01bfe4980231808 ]
    
    After enabling CONFIG_SCHED_CORE (landed during 5.14 cycle),
    2-core 2-thread-per-core interAptiv (CPS-driven) started emitting
    the following:
    
    [    0.025698] CPU1 revision is: 0001a120 (MIPS interAptiv (multi))
    [    0.048183] ------------[ cut here ]------------
    [    0.048187] WARNING: CPU: 1 PID: 0 at kernel/sched/core.c:6025 sched_core_cpu_starting+0x198/0x240
    [    0.048220] Modules linked in:
    [    0.048233] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.17.0-rc3+ #35 b7b319f24073fd9a3c2aa7ad15fb7993eec0b26f
    [    0.048247] Stack : 817f0000 00000004 327804c8 810eb050 00000000 00000004 00000000 c314fdd1
    [    0.048278]         830cbd64 819c0000 81800000 817f0000 83070bf4 00000001 830cbd08 00000000
    [    0.048307]         00000000 00000000 815fcbc4 00000000 00000000 00000000 00000000 00000000
    [    0.048334]         00000000 00000000 00000000 00000000 817f0000 00000000 00000000 817f6f34
    [    0.048361]         817f0000 818a3c00 817f0000 00000004 00000000 00000000 4dc33260 0018c933
    [    0.048389]         ...
    [    0.048396] Call Trace:
    [    0.048399] [<8105a7bc>] show_stack+0x3c/0x140
    [    0.048424] [<8131c2a0>] dump_stack_lvl+0x60/0x80
    [    0.048440] [<8108b5c0>] __warn+0xc0/0xf4
    [    0.048454] [<8108b658>] warn_slowpath_fmt+0x64/0x10c
    [    0.048467] [<810bd418>] sched_core_cpu_starting+0x198/0x240
    [    0.048483] [<810c6514>] sched_cpu_starting+0x14/0x80
    [    0.048497] [<8108c0f8>] cpuhp_invoke_callback_range+0x78/0x140
    [    0.048510] [<8108d914>] notify_cpu_starting+0x94/0x140
    [    0.048523] [<8106593c>] start_secondary+0xbc/0x280
    [    0.048539]
    [    0.048543] ---[ end trace 0000000000000000 ]---
    [    0.048636] Synchronize counters for CPU 1: done.
    
    ...for each but CPU 0/boot.
    Basic debug printks right before the mentioned line say:
    
    [    0.048170] CPU: 1, smt_mask:
    
    So smt_mask, which is sibling mask obviously, is empty when entering
    the function.
    This is critical, as sched_core_cpu_starting() calculates
    core-scheduling parameters only once per CPU start, and it's crucial
    to have all the parameters filled in at that moment (at least it
    uses cpu_smt_mask() which in fact is `&cpu_sibling_map[cpu]` on
    MIPS).
    
    A bit of debugging led me to that set_cpu_sibling_map() performing
    the actual map calculation, was being invocated after
    notify_cpu_start(), and exactly the latter function starts CPU HP
    callback round (sched_core_cpu_starting() is basically a CPU HP
    callback).
    While the flow is same on ARM64 (maps after the notifier, although
    before calling set_cpu_online()), x86 started calculating sibling
    maps earlier than starting the CPU HP callbacks in Linux 4.14 (see
    [0] for the reference). Neither me nor my brief tests couldn't find
    any potential caveats in calculating the maps right after performing
    delay calibration, but the WARN splat is now gone.
    The very same debug prints now yield exactly what I expected from
    them:
    
    [    0.048433] CPU: 1, smt_mask: 0-1
    
    [0] https://git.kernel.org/pub/scm/linux/kernel/git/mips/linux.git/commit/?id=76ce7cfe35ef
    
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Reviewed-by: Philippe Mathieu-Daud챕 <f4bug@amsat.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c70b9b470046c9c5f2badfa3048f120d89722e8
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Feb 3 20:15:29 2022 +0100

    mac80211: refuse aggregations sessions before authorized
    
    [ Upstream commit a6bce78262f5dd4b50510f0aa47f3995f7b185f3 ]
    
    If an MFP station isn't authorized, the receiver will (or
    at least should) drop the action frame since it's a robust
    management frame, but if we're not authorized we haven't
    installed keys yet. Refuse attempts to start a session as
    they'd just time out.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://lore.kernel.org/r/20220203201528.ff4d5679dce9.I34bb1f2bc341e161af2d6faf74f91b332ba11285@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d687d7559e2460ad306484f64b85a943d7127508
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Feb 9 12:03:55 2022 +0000

    ARM: dts: rockchip: fix a typo on rk3288 crypto-controller
    
    [ Upstream commit 3916c3619599a3970d3e6f98fb430b7c46266ada ]
    
    crypto-controller had a typo, fix it.
    In the same time, rename it to just crypto
    
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20220209120355.1985707-1-clabbe@baylibre.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f0a94931c479632f1875aec0b53dd33d90dfe11
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Thu Feb 10 15:23:53 2022 +0100

    ARM: dts: rockchip: reorder rk322x hmdi clocks
    
    [ Upstream commit be4e65bdffab5f588044325117df77dad7e9c45a ]
    
    The binding specifies the clock order to "iahb", "isfr", "cec". Reorder
    the clocks accordingly.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Link: https://lore.kernel.org/r/20220210142353.3420859-1-s.hauer@pengutronix.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6493c6aa8b4467c587444aa4b12805f6cc7307c9
Author: Dinh Nguyen <dinguyen@kernel.org>
Date:   Thu Jan 6 17:53:31 2022 -0600

    arm64: dts: agilex: use the compatible "intel,socfpga-agilex-hsotg"
    
    [ Upstream commit 268a491aebc25e6dc7c618903b09ac3a2e8af530 ]
    
    The DWC2 USB controller on the Agilex platform does not support clock
    gating, so use the chip specific "intel,socfpga-agilex-hsotg"
    compatible.
    
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5c8c649fee0833c69c0f768cc3e9531c7701b3b
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Wed Jan 26 15:55:40 2022 +0100

    arm64: dts: rockchip: reorder rk3399 hdmi clocks
    
    [ Upstream commit 2e8a8b5955a000cc655f7e368670518cbb77fe58 ]
    
    The binding specifies the clock order to "cec", "grf", "vpll". Reorder
    the clocks accordingly.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Link: https://lore.kernel.org/r/20220126145549.617165-19-s.hauer@pengutronix.de
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7f062919f4101505ff7ce2efccc9dcec5c334cd
Author: Jakob Unterwurzacher <jakob.unterwurzacher@theobroma-systems.com>
Date:   Wed Jan 19 14:49:48 2022 +0100

    arm64: dts: rockchip: fix rk3399-puma eMMC HS400 signal integrity
    
    [ Upstream commit 62966cbdda8a92f82d966a45aa671e788b2006f7 ]
    
    There are signal integrity issues running the eMMC at 200MHz on Puma
    RK3399-Q7.
    
    Similar to the work-around found for RK3399 Gru boards, lowering the
    frequency to 100MHz made the eMMC much more stable, so let's lower the
    frequency to 100MHz.
    
    It might be possible to run at 150MHz as on RK3399 Gru boards but only
    100MHz was extensively tested.
    
    Cc: Quentin Schulz <foss+kernel@0leil.net>
    Signed-off-by: Jakob Unterwurzacher <jakob.unterwurzacher@theobroma-systems.com>
    Signed-off-by: Quentin Schulz <quentin.schulz@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20220119134948.1444965-1-quentin.schulz@theobroma-systems.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca142038a54f44ffd407ae2f6c65958f5e382ec6
Author: Yan Yan <evitayan@google.com>
Date:   Tue Jan 18 16:00:14 2022 -0800

    xfrm: Fix xfrm migrate issues when address family changes
    
    [ Upstream commit e03c3bba351f99ad932e8f06baa9da1afc418e02 ]
    
    xfrm_migrate cannot handle address family change of an xfrm_state.
    The symptons are the xfrm_state will be migrated to a wrong address,
    and sending as well as receiving packets wil be broken.
    
    This commit fixes it by breaking the original xfrm_state_clone
    method into two steps so as to update the props.family before
    running xfrm_init_state. As the result, xfrm_state's inner mode,
    outer mode, type and IP header length in xfrm_state_migrate can
    be updated with the new address family.
    
    Tested with additions to Android's kernel unit test suite:
    https://android-review.googlesource.com/c/kernel/tests/+/1885354
    
    Signed-off-by: Yan Yan <evitayan@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8889a445b538dbcc25d9a8c118d18228b5bbab5
Author: Yan Yan <evitayan@google.com>
Date:   Tue Jan 18 16:00:13 2022 -0800

    xfrm: Check if_id in xfrm_migrate
    
    [ Upstream commit c1aca3080e382886e2e58e809787441984a2f89b ]
    
    This patch enables distinguishing SAs and SPs based on if_id during
    the xfrm_migrate flow. This ensures support for xfrm interfaces
    throughout the SA/SP lifecycle.
    
    When there are multiple existing SPs with the same direction,
    the same xfrm_selector and different endpoint addresses,
    xfrm_migrate might fail with ENODATA.
    
    Specifically, the code path for performing xfrm_migrate is:
      Stage 1: find policy to migrate with
        xfrm_migrate_policy_find(sel, dir, type, net)
      Stage 2: find and update state(s) with
        xfrm_migrate_state_find(mp, net)
      Stage 3: update endpoint address(es) of template(s) with
        xfrm_policy_migrate(pol, m, num_migrate)
    
    Currently "Stage 1" always returns the first xfrm_policy that
    matches, and "Stage 3" looks for the xfrm_tmpl that matches the
    old endpoint address. Thus if there are multiple xfrm_policy
    with same selector, direction, type and net, "Stage 1" might
    rertun a wrong xfrm_policy and "Stage 3" will fail with ENODATA
    because it cannot find a xfrm_tmpl with the matching endpoint
    address.
    
    The fix is to allow userspace to pass an if_id and add if_id
    to the matching rule in Stage 1 and Stage 2 since if_id is a
    unique ID for xfrm_policy and xfrm_state. For compatibility,
    if_id will only be checked if the attribute is set.
    
    Tested with additions to Android's kernel unit test suite:
    https://android-review.googlesource.com/c/kernel/tests/+/1668886
    
    Signed-off-by: Yan Yan <evitayan@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6056abc99b58fe55033577f3ad6e28d001a27641
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Oct 20 07:42:42 2021 -0400

    sctp: fix the processing for INIT chunk
    
    commit eae5783908042a762c24e1bd11876edb91d314b1 upstream.
    
    This patch fixes the problems below:
    
    1. In non-shutdown_ack_sent states: in sctp_sf_do_5_1B_init() and
       sctp_sf_do_5_2_2_dupinit():
    
      chunk length check should be done before any checks that may cause
      to send abort, as making packet for abort will access the init_tag
      from init_hdr in sctp_ootb_pkt_new().
    
    2. In shutdown_ack_sent state: in sctp_sf_do_9_2_reshutack():
    
      The same checks as does in sctp_sf_do_5_2_2_dupinit() is needed
      for sctp_sf_do_9_2_reshutack().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdf0316982f00010d6e56f1379a51cd0568d51cd
Author: Kai Lueke <kailueke@linux.microsoft.com>
Date:   Thu Mar 3 15:55:10 2022 +0100

    Revert "xfrm: state and policy should fail if XFRMA_IF_ID 0"
    
    commit a3d9001b4e287fc043e5539d03d71a32ab114bcb upstream.
    
    This reverts commit 68ac0f3810e76a853b5f7b90601a05c3048b8b54 because ID
    0 was meant to be used for configuring the policy/state without
    matching for a specific interface (e.g., Cilium is affected, see
    https://github.com/cilium/cilium/pull/18789 and
    https://github.com/cilium/cilium/pull/19019).
    
    Signed-off-by: Kai Lueke <kailueke@linux.microsoft.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
