commit c91efc7862b3f3c61cb76e926990cdbff5354b57
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 14 09:28:24 2017 +0100

    Linux 4.9.69

commit 15b175223e53da5597ea9e7c96691518b2ecaeca
Author: David Howells <dhowells@redhat.com>
Date:   Thu Nov 2 15:27:48 2017 +0000

    afs: Connect up the CB.ProbeUuid
    
    
    [ Upstream commit f4b3526d83c40dd8bf5948b9d7a1b2c340f0dcc8 ]
    
    The handler for the CB.ProbeUuid operation in the cache manager is
    implemented, but isn't listed in the switch-statement of operation
    selection, so won't be used.  Fix this by adding it.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9048b2420e32bc66dd19f64a9ccb3329d0eaa1bd
Author: Majd Dibbiny <majd@mellanox.com>
Date:   Mon Oct 30 14:23:13 2017 +0200

    IB/mlx5: Assign send CQ and recv CQ of UMR QP
    
    
    [ Upstream commit 31fde034a8bd964a5c7c1a5663fc87a913158db2 ]
    
    The UMR's QP is created by calling mlx5_ib_create_qp directly, and
    therefore the send CQ and the recv CQ on the ibqp weren't assigned.
    
    Assign them right after calling the mlx5_ib_create_qp to assure
    that any access to those pointers will work as expected and won't
    crash the system as might happen as part of reset flow.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06fea09c095920c01e79eb913f1eea9fc1792ba8
Author: Mark Bloch <markb@mellanox.com>
Date:   Thu Nov 2 15:22:26 2017 +0200

    IB/mlx4: Increase maximal message size under UD QP
    
    
    [ Upstream commit 5f22a1d87c5315a98981ecf93cd8de226cffe6ca ]
    
    Maximal message should be used as a limit to the max message payload allowed,
    without the headers. The ConnectX-3 check is done against this value includes
    the headers. When the payload is 4K this will cause the NIC to drop packets.
    
    Increase maximal message to 8K as workaround, this shouldn't change current
    behaviour because we continue to set the MTU to 4k.
    
    To reproduce;
    set MTU to 4296 on the corresponding interface, for example:
    ifconfig eth0 mtu 4296 (both server and client)
    
    On server:
    ib_send_bw -c UD -d mlx4_0 -s 4096 -n 1000000 -i1 -m 4096
    
    On client:
    ib_send_bw -d mlx4_0 -c UD <server_ip> -s 4096 -n 1000000 -i 1 -m 4096
    
    Fixes: 6e0d733d9215 ("IB/mlx4: Allow 4K messages for UD QPs")
    Signed-off-by: Mark Bloch <markb@mellanox.com>
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ceabde6664331f096462ff8fcb6f79f303a78ce
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Nov 10 14:14:06 2017 +1100

    xfrm: Copy policy family in clone_policy
    
    
    [ Upstream commit 0e74aa1d79a5bbc663e03a2804399cae418a0321 ]
    
    The syzbot found an ancient bug in the IPsec code.  When we cloned
    a socket policy (for example, for a child TCP socket derived from a
    listening socket), we did not copy the family field.  This results
    in a live policy with a zero family field.  This triggers a BUG_ON
    check in the af_key code when the cloned policy is retrieved.
    
    This patch fixes it by copying the family field over.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74b470ce478a69bb3ce36b38e6c834d0578c3195
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Nov 13 16:48:47 2017 -0500

    jump_label: Invoke jump_label_test() via early_initcall()
    
    
    [ Upstream commit 92ee46efeb505ead3ab06d3c5ce695637ed5f152 ]
    
    Fengguang Wu reported that running the rcuperf test during boot can cause
    the jump_label_test() to hit a WARN_ON(). The issue is that the core jump
    label code relies on kernel_text_address() to detect when it can no longer
    update branches that may be contained in __init sections. The
    kernel_text_address() in turn assumes that if the system_state variable is
    greter than or equal to SYSTEM_RUNNING then __init sections are no longer
    valid (since the assumption is that they have been freed). However, when
    rcuperf is setup to run in early boot it can call kernel_power_off() which
    sets the system_state to SYSTEM_POWER_OFF.
    
    Since rcuperf initialization is invoked via a module_init(), we can make
    the dependency of jump_label_test() needing to complete before rcuperf
    explicit by calling it via early_initcall().
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1510609727-2238-1-git-send-email-jbaron@akamai.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22d2456faefaed01ef3021fb8e6752e8c2f91a74
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Tue Nov 14 13:42:38 2017 +0530

    atm: horizon: Fix irq release error
    
    
    [ Upstream commit bde533f2ea607cbbbe76ef8738b36243939a7bc2 ]
    
    atm_dev_register() can fail here and passed parameters to free irq
    which is not initialised. Initialization of 'dev->irq' happened after
    the 'goto out_free_irq'. So using 'irq' insted of 'dev->irq' in
    free_irq().
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c488c2e141bcce57a02d308df01d6f4172393637
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Oct 5 11:32:59 2017 +0900

    clk: uniphier: fix DAPLL2 clock rate of Pro5
    
    
    [ Upstream commit 67affb78a4e4feb837953e3434c8402a5c3b272f ]
    
    The parent of DAPLL2 should be DAPLL1.  Fix the clock connection.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f45f4f8a7cd89570b987ff101bcc510e9cfc2a9a
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 14 17:15:50 2017 -0800

    bpf: fix lockdep splat
    
    
    [ Upstream commit 89ad2fa3f043a1e8daae193bcb5fe34d5f8caf28 ]
    
    pcpu_freelist_pop() needs the same lockdep awareness than
    pcpu_freelist_populate() to avoid a false positive.
    
     [ INFO: SOFTIRQ-safe -> SOFTIRQ-unsafe lock order detected ]
    
     switchto-defaul/12508 [HC0[0]:SC0[6]:HE0:SE0] is trying to acquire:
      (&htab->buckets[i].lock){......}, at: [<ffffffff9dc099cb>] __htab_percpu_map_update_elem+0x1cb/0x300
    
     and this task is already holding:
      (dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2){+.-...}, at: [<ffffffff9e135848>] __dev_queue_xmit+0
    x868/0x1240
     which would create a new lock dependency:
      (dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2){+.-...} -> (&htab->buckets[i].lock){......}
    
     but this new dependency connects a SOFTIRQ-irq-safe lock:
      (dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2){+.-...}
     ... which became SOFTIRQ-irq-safe at:
       [<ffffffff9db5931b>] __lock_acquire+0x42b/0x1f10
       [<ffffffff9db5b32c>] lock_acquire+0xbc/0x1b0
       [<ffffffff9da05e38>] _raw_spin_lock+0x38/0x50
       [<ffffffff9e135848>] __dev_queue_xmit+0x868/0x1240
       [<ffffffff9e136240>] dev_queue_xmit+0x10/0x20
       [<ffffffff9e1965d9>] ip_finish_output2+0x439/0x590
       [<ffffffff9e197410>] ip_finish_output+0x150/0x2f0
       [<ffffffff9e19886d>] ip_output+0x7d/0x260
       [<ffffffff9e19789e>] ip_local_out+0x5e/0xe0
       [<ffffffff9e197b25>] ip_queue_xmit+0x205/0x620
       [<ffffffff9e1b8398>] tcp_transmit_skb+0x5a8/0xcb0
       [<ffffffff9e1ba152>] tcp_write_xmit+0x242/0x1070
       [<ffffffff9e1baffc>] __tcp_push_pending_frames+0x3c/0xf0
       [<ffffffff9e1b3472>] tcp_rcv_established+0x312/0x700
       [<ffffffff9e1c1acc>] tcp_v4_do_rcv+0x11c/0x200
       [<ffffffff9e1c3dc2>] tcp_v4_rcv+0xaa2/0xc30
       [<ffffffff9e191107>] ip_local_deliver_finish+0xa7/0x240
       [<ffffffff9e191a36>] ip_local_deliver+0x66/0x200
       [<ffffffff9e19137d>] ip_rcv_finish+0xdd/0x560
       [<ffffffff9e191e65>] ip_rcv+0x295/0x510
       [<ffffffff9e12ff88>] __netif_receive_skb_core+0x988/0x1020
       [<ffffffff9e130641>] __netif_receive_skb+0x21/0x70
       [<ffffffff9e1306ff>] process_backlog+0x6f/0x230
       [<ffffffff9e132129>] net_rx_action+0x229/0x420
       [<ffffffff9da07ee8>] __do_softirq+0xd8/0x43d
       [<ffffffff9e282bcc>] do_softirq_own_stack+0x1c/0x30
       [<ffffffff9dafc2f5>] do_softirq+0x55/0x60
       [<ffffffff9dafc3a8>] __local_bh_enable_ip+0xa8/0xb0
       [<ffffffff9db4c727>] cpu_startup_entry+0x1c7/0x500
       [<ffffffff9daab333>] start_secondary+0x113/0x140
    
     to a SOFTIRQ-irq-unsafe lock:
      (&head->lock){+.+...}
     ... which became SOFTIRQ-irq-unsafe at:
     ...  [<ffffffff9db5971f>] __lock_acquire+0x82f/0x1f10
       [<ffffffff9db5b32c>] lock_acquire+0xbc/0x1b0
       [<ffffffff9da05e38>] _raw_spin_lock+0x38/0x50
       [<ffffffff9dc0b7fa>] pcpu_freelist_pop+0x7a/0xb0
       [<ffffffff9dc08b2c>] htab_map_alloc+0x50c/0x5f0
       [<ffffffff9dc00dc5>] SyS_bpf+0x265/0x1200
       [<ffffffff9e28195f>] entry_SYSCALL_64_fastpath+0x12/0x17
    
     other info that might help us debug this:
    
     Chain exists of:
       dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2 --> &htab->buckets[i].lock --> &head->lock
    
      Possible interrupt unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(&head->lock);
                                    local_irq_disable();
                                    lock(dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2);
                                    lock(&htab->buckets[i].lock);
       <Interrupt>
         lock(dev_queue->dev->qdisc_class ?: &qdisc_tx_lock#2);
    
      *** DEADLOCK ***
    
    Fixes: e19494edab82 ("bpf: introduce percpu_freelist")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9904da5a09cec1dbcfc434b79950a2608ea23907
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:57:26 2017 +0800

    sctp: use the right sk after waking up from wait_buf sleep
    
    
    [ Upstream commit cea0cc80a6777beb6eb643d4ad53690e1ad1d4ff ]
    
    Commit dfcb9f4f99f1 ("sctp: deny peeloff operation on asocs with threads
    sleeping on it") fixed the race between peeloff and wait sndbuf by
    checking waitqueue_active(&asoc->wait) in sctp_do_peeloff().
    
    But it actually doesn't work, as even if waitqueue_active returns false
    the waiting sndbuf thread may still not yet hold sk lock. After asoc is
    peeled off, sk is not asoc->base.sk any more, then to hold the old sk
    lock couldn't make assoc safe to access.
    
    This patch is to fix this by changing to hold the new sk lock if sk is
    not asoc->base.sk, meanwhile, also set the sk in sctp_sendmsg with the
    new sk.
    
    With this fix, there is no more race between peeloff and waitbuf, the
    check 'waitqueue_active' in sctp_do_peeloff can be removed.
    
    Thanks Marcelo and Neil for making this clear.
    
    v1->v2:
      fix it by changing to lock the new sock instead of adding a flag in asoc.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1158ecd51ec163396d649daedb36440cdaf85443
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:55:54 2017 +0800

    sctp: do not free asoc when it is already dead in sctp_sendmsg
    
    
    [ Upstream commit ca3af4dd28cff4e7216e213ba3b671fbf9f84758 ]
    
    Now in sctp_sendmsg sctp_wait_for_sndbuf could schedule out without
    holding sock sk. It means the current asoc can be freed elsewhere,
    like when receiving an abort packet.
    
    If the asoc is just created in sctp_sendmsg and sctp_wait_for_sndbuf
    returns err, the asoc will be freed again due to new_asoc is not nil.
    An use-after-free issue would be triggered by this.
    
    This patch is to fix it by setting new_asoc with nil if the asoc is
    already dead when cpu schedules back, so that it will not be freed
    again in sctp_sendmsg.
    
    v1->v2:
      set new_asoc as nil in sctp_sendmsg instead of sctp_wait_for_sndbuf.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1618400444d0130b593ba1218380c0df7c1c7456
Author: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
Date:   Wed Nov 15 17:34:03 2017 -0800

    zsmalloc: calling zs_map_object() from irq is a bug
    
    
    [ Upstream commit 1aedcafbf32b3f232c159b14cd0d423fcfe2b861 ]
    
    Use BUG_ON(in_interrupt()) in zs_map_object().  This is not a new
    BUG_ON(), it's always been there, but was recently changed to
    VM_BUG_ON().  There are several problems there.  First, we use use
    per-CPU mappings both in zsmalloc and in zram, and interrupt may easily
    corrupt those buffers.  Second, and more importantly, we believe it's
    possible to start leaking sensitive information.  Consider the following
    case:
    
    -> process P
            swap out
             zram
              per-cpu mapping CPU1
               compress page A
    -> IRQ
    
            swap out
             zram
              per-cpu mapping CPU1
               compress page B
                write page from per-cpu mapping CPU1 to zsmalloc pool
            iret
    
    -> process P
                write page from per-cpu mapping CPU1 to zsmalloc pool  [*]
            return
    
    * so we store overwritten data that actually belongs to another
      page (task) and potentially contains sensitive data. And when
      process P will page fault it's going to read (swap in) that
      other task's data.
    
    Link: http://lkml.kernel.org/r/20170929045140.4055-1-sergey.senozhatsky@gmail.com
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7da67d1d98f609b0f24fb6c1a317523c965898b7
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed Nov 15 17:36:18 2017 -0800

    sparc64/mm: set fields in deferred pages
    
    
    [ Upstream commit 2a20aa171071a334d80c4e5d5af719d8374702fc ]
    
    Without deferred struct page feature (CONFIG_DEFERRED_STRUCT_PAGE_INIT),
    flags and other fields in "struct page"es are never changed prior to
    first initializing struct pages by going through __init_single_page().
    
    With deferred struct page feature enabled there is a case where we set
    some fields prior to initializing:
    
    mem_init() {
         register_page_bootmem_info();
         free_all_bootmem();
         ...
    }
    
    When register_page_bootmem_info() is called only non-deferred struct
    pages are initialized.  But, this function goes through some reserved
    pages which might be part of the deferred, and thus are not yet
    initialized.
    
    mem_init
    register_page_bootmem_info
    register_page_bootmem_info_node
     get_page_bootmem
      .. setting fields here ..
      such as: page->freelist = (void *)type;
    
    free_all_bootmem()
    free_low_memory_core_early()
     for_each_reserved_mem_region()
      reserve_bootmem_region()
       init_reserved_page() <- Only if this is deferred reserved page
        __init_single_pfn()
         __init_single_page()
          memset(0) <-- Loose the set fields here
    
    We end up with similar issue as in the previous patch, where currently
    we do not observe problem as memory is zeroed.  But, if flag asserts are
    changed we can start hitting issues.
    
    Also, because in this patch series we will stop zeroing struct page
    memory during allocation, we must make sure that struct pages are
    properly initialized prior to using them.
    
    The deferred-reserved pages are initialized in free_all_bootmem().
    Therefore, the fix is to switch the above calls.
    
    Link: http://lkml.kernel.org/r/20171013173214.27300-4-pasha.tatashin@oracle.com
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Reviewed-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a5a4c6e868faf01cda18538ea72c6586dfee647
Author: Ming Lei <ming.lei@redhat.com>
Date:   Thu Nov 16 08:08:44 2017 +0800

    block: wake up all tasks blocked in get_request()
    
    
    [ Upstream commit 34d9715ac1edd50285168dd8d80c972739a4f6a4 ]
    
    Once blk_set_queue_dying() is done in blk_cleanup_queue(), we call
    blk_freeze_queue() and wait for q->q_usage_counter becoming zero. But
    if there are tasks blocked in get_request(), q->q_usage_counter can
    never become zero. So we have to wake up all these tasks in
    blk_set_queue_dying() first.
    
    Fixes: 3ef28e83ab157997 ("block: generic request_queue reference counting")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c31bfe7de24387dfc0b4c3c1a34f4f8d1554c907
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Nov 9 18:07:17 2017 +0100

    dt-bindings: usb: fix reg-property port-number range
    
    
    [ Upstream commit f42ae7b0540937e00fe005812997f126aaac4bc2 ]
    
    The USB hub port-number range for USB 2.0 is 1-255 and not 1-31 which
    reflects an arbitrary limit set by the current Linux implementation.
    
    Note that for USB 3.1 hubs the valid range is 1-15.
    
    Increase the documented valid range in the binding to 255, which is the
    maximum allowed by the specifications.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eeb1edfd3c95f1826be3349f7dc0b41c396b469
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Nov 14 16:34:44 2017 -0800

    xfs: fix forgotten rcu read unlock when skipping inode reclaim
    
    
    [ Upstream commit 962cc1ad6caddb5abbb9f0a43e5abe7131a71f18 ]
    
    In commit f2e9ad21 ("xfs: check for race with xfs_reclaim_inode"), we
    skip an inode if we're racing with freeing the inode via
    xfs_reclaim_inode, but we forgot to release the rcu read lock when
    dumping the inode, with the result that we exit to userspace with a lock
    held.  Don't do that; generic/320 with a 1k block size fails this
    very occasionally.
    
    ================================================
    WARNING: lock held when returning to user space!
    4.14.0-rc6-djwong #4 Tainted: G        W
    ------------------------------------------------
    rm/30466 is leaving the kernel with locks still held!
    1 lock held by rm/30466:
     #0:  (rcu_read_lock){....}, at: [<ffffffffa01364d3>] xfs_ifree_cluster.isra.17+0x2c3/0x6f0 [xfs]
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 30466 at kernel/rcu/tree_plugin.h:329 rcu_note_context_switch+0x71/0x700
    Modules linked in: deadline_iosched dm_snapshot dm_bufio ext4 mbcache jbd2 dm_flakey xfs libcrc32c dax_pmem device_dax nd_pmem sch_fq_codel af_packet [last unloaded: scsi_debug]
    CPU: 1 PID: 30466 Comm: rm Tainted: G        W       4.14.0-rc6-djwong #4
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.10.2-1ubuntu1djwong0 04/01/2014
    task: ffff880037680000 task.stack: ffffc90001064000
    RIP: 0010:rcu_note_context_switch+0x71/0x700
    RSP: 0000:ffffc90001067e50 EFLAGS: 00010002
    RAX: 0000000000000001 RBX: ffff880037680000 RCX: ffff88003e73d200
    RDX: 0000000000000002 RSI: ffffffff819e53e9 RDI: ffffffff819f4375
    RBP: 0000000000000000 R08: 0000000000000000 R09: ffff880062c900d0
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff880037680000
    R13: 0000000000000000 R14: ffffc90001067eb8 R15: ffff880037680690
    FS:  00007fa3b8ce8700(0000) GS:ffff88003ec00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f69bf77c000 CR3: 000000002450a000 CR4: 00000000000006e0
    Call Trace:
     __schedule+0xb8/0xb10
     schedule+0x40/0x90
     exit_to_usermode_loop+0x6b/0xa0
     prepare_exit_to_usermode+0x7a/0x90
     retint_user+0x8/0x20
    RIP: 0033:0x7fa3b87fda87
    RSP: 002b:00007ffe41206568 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff02
    RAX: 0000000000000000 RBX: 00000000010e88c0 RCX: 00007fa3b87fda87
    RDX: 0000000000000000 RSI: 00000000010e89c8 RDI: 0000000000000005
    RBP: 0000000000000000 R08: 0000000000000003 R09: 0000000000000000
    R10: 000000000000015e R11: 0000000000000246 R12: 00000000010c8060
    R13: 00007ffe41206690 R14: 0000000000000000 R15: 0000000000000000
    ---[ end trace e88f83bf0cfbd07d ]---
    
    Fixes: f2e9ad212def50bcf4c098c6288779dd97fff0f0
    Cc: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acbe10423b1aabf04f2c34a153905ee3d54e4ff3
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Nov 3 13:46:06 2017 -0400

    sunrpc: Fix rpc_task_begin trace point
    
    
    [ Upstream commit b2bfe5915d5fe7577221031a39ac722a0a2a1199 ]
    
    The rpc_task_begin trace point always display a task ID of zero.
    Move the trace point call site so that it picks up the new task ID.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 509e9b805c52d799c9fc44ca0a32fa79fc03befc
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Nov 6 15:28:04 2017 -0500

    NFS: Fix a typo in nfs_rename()
    
    
    [ Upstream commit d803224c84be067754db7fa58a93f36f61566493 ]
    
    On successful rename, the "old_dentry" is retained and is attached to
    the "new_dir", so we need to call nfs_set_verifier() accordingly.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a780a728475d4d9d2189ae6cfe719a175a5c9231
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Nov 17 15:27:35 2017 -0800

    dynamic-debug-howto: fix optional/omitted ending line number to be LARGE instead of 0
    
    
    [ Upstream commit 1f3c790bd5989fcfec9e53ad8fa09f5b740c958f ]
    
    line-range is supposed to treat "1-" as "1-endoffile", so
    handle the special case by setting last_lineno to UINT_MAX.
    
    Fixes this error:
    
      dynamic_debug:ddebug_parse_query: last-line:0 < 1st-line:1
      dynamic_debug:ddebug_exec_query: query parse failed
    
    Link: http://lkml.kernel.org/r/10a6a101-e2be-209f-1f41-54637824788e@infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Jason Baron <jbaron@akamai.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a77c116075936faa6e8b8622e22acc9cbf47fe9e
Author: Stephen Bates <sbates@raithlin.com>
Date:   Fri Nov 17 15:28:16 2017 -0800

    lib/genalloc.c: make the avail variable an atomic_long_t
    
    
    [ Upstream commit 36a3d1dd4e16bcd0d2ddfb4a2ec7092f0ae0d931 ]
    
    If the amount of resources allocated to a gen_pool exceeds 2^32 then the
    avail atomic overflows and this causes problems when clients try and
    borrow resources from the pool.  This is only expected to be an issue on
    64 bit systems.
    
    Add the <linux/atomic.h> header to pull in atomic_long* operations.  So
    that 32 bit systems continue to use atomic32_t but 64 bit systems can
    use atomic64_t.
    
    Link: http://lkml.kernel.org/r/1509033843-25667-1-git-send-email-sbates@raithlin.com
    Signed-off-by: Stephen Bates <sbates@raithlin.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Reviewed-by: Daniel Mentz <danielmentz@google.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9672477a5f059e88e3c3b886c0a61253447254a
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Nov 17 15:37:57 2017 -0800

    drivers/rapidio/devices/rio_mport_cdev.c: fix resource leak in error handling path in 'rio_dma_transfer()'
    
    
    [ Upstream commit b1402dcb5643b7a27d46a05edd7491d49ba0e248 ]
    
    If 'dma_map_sg()', we should branch to the existing error handling path
    to free some resources before returning.
    
    Link: http://lkml.kernel.org/r/61292a4f369229eee03394247385e955027283f8.1505687047.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Alexandre Bounine <alexandre.bounine@idt.com>
    Cc: Lorenzo Stoakes <lstoakes@gmail.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Christian K_nig <christian.koenig@amd.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 007e20bd0fddd4fee4c6d9f897acbca55066c23b
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:27:06 2017 +0800

    route: update fnhe_expires for redirect when the fnhe exists
    
    
    [ Upstream commit e39d5246111399dbc6e11cd39fd8580191b86c47 ]
    
    Now when creating fnhe for redirect, it sets fnhe_expires for this
    new route cache. But when updating the exist one, it doesn't do it.
    It will cause this fnhe never to be expired.
    
    Paolo already noticed it before, in Jianlin's test case, it became
    even worse:
    
    When ip route flush cache, the old fnhe is not to be removed, but
    only clean it's members. When redirect comes again, this fnhe will
    be found and updated, but never be expired due to fnhe_expires not
    being set.
    
    So fix it by simply updating fnhe_expires even it's for redirect.
    
    Fixes: aee06da6726d ("ipv4: use seqlock for nh_exceptions")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c4fa0c1c9cae3890efe867bbf0055ed03da4228
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:27:18 2017 +0800

    route: also update fnhe_genid when updating a route cache
    
    
    [ Upstream commit cebe84c6190d741045a322f5343f717139993c08 ]
    
    Now when ip route flush cache and it turn out all fnhe_genid != genid.
    If a redirect/pmtu icmp packet comes and the old fnhe is found and all
    it's members but fnhe_genid will be updated.
    
    Then next time when it looks up route and tries to rebind this fnhe to
    the new dst, the fnhe will be flushed due to fnhe_genid != genid. It
    causes this redirect/pmtu icmp packet acutally not to be applied.
    
    This patch is to also reset fnhe_genid when updating a route cache.
    
    Fixes: 5aad1de5ea2c ("ipv4: use separate genid for next hop exceptions")
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2388d52d72561bd364ffbdf9f718fea2281f727d
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Nov 17 19:16:17 2017 +0300

    gre6: use log_ecn_error module parameter in ip6_tnl_rcv()
    
    
    [ Upstream commit 981542c526ecd846920bc500e9989da906ee9fb9 ]
    
    After commit 308edfdf1563 ("gre6: Cleanup GREv6 receive path, call
    common GRE functions") it's not used anywhere in the module, but
    previously was used in ip6gre_rcv().
    
    Fixes: 308edfdf1563 ("gre6: Cleanup GREv6 receive path, call common GRE functions")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a8ab06660dccd42cdba409c3b1af045304a9ff7
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Fri Nov 10 18:48:50 2017 +0000

    mac80211_hwsim: Fix memory leak in hwsim_new_radio_nl()
    
    
    [ Upstream commit 67bd52386125ce1159c0581cbcd2740addf33cd4 ]
    
    hwsim_new_radio_nl() now copies the name attribute in order to add a
    null-terminator.  mac80211_hwsim_new_radio() (indirectly) copies it
    again into the net_device structure, so the first copy is not used or
    freed later.  Free the first copy before returning.
    
    Fixes: ff4dd73dd2b4 ("mac80211_hwsim: check HWSIM_ATTR_RADIO_NAME length")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0965ed575190d85b191cd8baa076121201d710d1
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Nov 10 16:12:29 2017 -0800

    x86/mpx/selftests: Fix up weird arrays
    
    
    [ Upstream commit a6400120d042397675fcf694060779d21e9e762d ]
    
    The MPX hardware data structurse are defined in a weird way: they define
    their size in bytes and then union that with the type with which we want
    to access them.
    
    Yes, this is weird, but it does work.  But, new GCC's complain that we
    are accessing the array out of bounds.  Just make it a zero-sized array
    so gcc will stop complaining.  There was not really a bug here.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20171111001229.58A7933D@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b96d06e6d6e0aaef37e0cd79b7b0bfc79745fa50
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Nov 14 20:38:07 2017 +0900

    coccinelle: fix parallel build with CHECK=scripts/coccicheck
    
    
    [ Upstream commit d7059ca0147adcd495f3c5b41f260e1ac55bb679 ]
    
    The command "make -j8 C=1 CHECK=scripts/coccicheck" produces
    lots of "coccicheck failed" error messages.
    
    Julia Lawall explained the Coccinelle behavior as follows:
    "The problem on the Coccinelle side is that it uses a subdirectory
    with the name of the semantic patch to store standard output and
    standard error for the different threads.  I didn't want to use a
    name with the pid, so that one could easily find this information
    while Coccinelle is running.  Normally the subdirectory is cleaned
    up when Coccinelle completes, so there is only one of them at a time.
    Maybe it is best to just add the pid.  There is the risk that these
    subdirectories will accumulate if Coccinelle crashes in a way such
    that they don't get cleaned up, but Coccinelle could print a warning
    if it detects this case, rather than failing."
    
    When scripts/coccicheck is used as CHECK tool and -j option is given
    to Make, the whole of build process runs in parallel.  So, multiple
    processes try to get access to the same subdirectory.
    
    I notice spatch creates the subdirectory only when it runs in parallel
    (i.e. --jobs <N> is given and <N> is greater than 1).
    
    Setting NPROC=1 is a reasonable solution; spatch does not create the
    subdirectory.  Besides, ONLINE=1 mode takes a single file input for
    each spatch invocation, so there is no reason to parallelize it in
    the first place.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55042e28b9854816ee69ef00903b5a3f2339a64f
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Nov 15 18:17:07 2017 +0900

    kbuild: pkg: use --transform option to prefix paths in tar
    
    
    [ Upstream commit 2dbc644ac62bbcb9ee78e84719953f611be0413d ]
    
    For rpm-pkg and deb-pkg, a source tar file is created.  All paths in
    the archive must be prefixed with the base name of the tar so that
    everything is contained in the directory when you extract it.
    
    Currently, scripts/package/Makefile uses a symlink for that, and
    removes it after the tar is created.
    
    If you terminate the build during the tar creation, the symlink is
    left over.  Then, at the next package build, you will see a warning
    like follows:
    
      ln: '.' and 'kernel-4.14.0+/.' are the same file
    
    It is possible to fix it by adding -n (--no-dereference) option to
    the "ln" command, but a cleaner way is to use --transform option
    of "tar" command.  This option is GNU extension, but it should not
    hurt to use it in the Linux build system.
    
    The 'S' flag is needed to exclude symlinks from the path fixup.
    Without it, symlinks in the kernel are broken.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7290cfeb4436e62d74f38af4f733a0a35b09c4cb
Author: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
Date:   Wed Jun 28 20:57:29 2017 -0400

    EDAC, i5000, i5400: Fix definition of NRECMEMB register
    
    
    [ Upstream commit a8c8261425649da58bdf08221570e5335ad33a31 ]
    
    In the i5000 and i5400 drivers, the NRECMEMB register is defined as a
    16-bit value, which results in wrong shifts in the code, as reported by
    sparse.
    
    In the datasheets ([1], section 3.9.22.20 and [2], section 3.9.22.21),
    this register is a 32-bit register. A u32 value for the register fixes
    the wrong shifts warnings and matches the datasheet.
    
    Also fix the mask to access to the CAS bits [27:16] in the i5000 driver.
    
    [1]: https://www.intel.com/content/dam/doc/datasheet/5000p-5000v-5000z-chipset-memory-controller-hub-datasheet.pdf
    [2]: https://www.intel.se/content/dam/doc/datasheet/5400-chipset-memory-controller-hub-datasheet.pdf
    
    Signed-off-by: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170629005729.8478-1-jeremy.lefaure@lse.epita.fr
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62c12d671c49e15cd847380b7692e60711f73f09
Author: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
Date:   Wed Mar 8 20:18:09 2017 -0500

    EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
    
    
    [ Upstream commit e61555c29c28a4a3b6ba6207f4a0883ee236004d ]
    
    The MTR_DRAM_WIDTH macro returns the data width. It is sometimes used
    as if it returned a boolean true if the width if 8. Fix the tests where
    MTR_DRAM_WIDTH is misused.
    
    Signed-off-by: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170309011809.8340-1-jeremy.lefaure@lse.epita.fr
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d28faebe8b091bec9bdb287b4ab029bee3a7d716
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Feb 22 15:43:59 2017 +1100

    powerpc/powernv/ioda2: Gracefully fail if too many TCE levels requested
    
    
    [ Upstream commit 7aafac11e308d37ed3c509829bb43d80c1811ac3 ]
    
    The IODA2 specification says that a 64 DMA address cannot use top 4 bits
    (3 are reserved and one is a "TVE select"); bottom page_shift bits
    cannot be used for multilevel table addressing either.
    
    The existing IODA2 table allocation code aligns the minimum TCE table
    size to PAGE_SIZE so in the case of 64K system pages and 4K IOMMU pages,
    we have 64-4-12=48 bits. Since 64K page stores 8192 TCEs, i.e. needs
    13 bits, the maximum number of levels is 48/13 = 3 so we physically
    cannot address more and EEH happens on DMA accesses.
    
    This adds a check that too many levels were requested.
    
    It is still possible to have 5 levels in the case of 4K system page size.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Acked-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92527dc32a69030dc3334e3da0bdb18023f2cefe
Author: Jim Qu <Jim.Qu@amd.com>
Date:   Wed Mar 1 15:53:29 2017 +0800

    drm/amd/amdgpu: fix console deadlock if late init failed
    
    
    [ Upstream commit c085bd5119d5d0bdf3ef591a5563566be7dedced ]
    
    Signed-off-by: Jim Qu <Jim.Qu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8d5b115c6ea552d720315b4d6413ea6650d9966
Author: Jan Kara <jack@suse.cz>
Date:   Wed Mar 8 14:56:05 2017 +0100

    axonram: Fix gendisk handling
    
    
    [ Upstream commit 672a2c87c83649fb0167202342ce85af9a3b4f1c ]
    
    It is invalid to call del_gendisk() when disk->queue is NULL. Fix error
    handling in axon_ram_probe() to avoid doing that.
    
    Also del_gendisk() does not drop a reference to gendisk allocated by
    alloc_disk(). That has to be done by put_disk(). Add that call where
    needed.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8818eb851c2d9c9e503208f5b054e42b4a83fe24
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Mar 3 21:44:00 2017 +0100

    netfilter: don't track fragmented packets
    
    
    [ Upstream commit 7b4fdf77a450ec0fdcb2f677b080ddbf2c186544 ]
    
    Andrey reports syzkaller splat caused by
    
    NF_CT_ASSERT(!ip_is_fragment(ip_hdr(skb)));
    
    in ipv4 nat.  But this assertion (and the comment) are wrong, this function
    does see fragments when IP_NODEFRAG setsockopt is used.
    
    As conntrack doesn't track packets without complete l4 header, only the
    first fragment is tracked.
    
    Because applying nat to first packet but not the rest makes no sense this
    also turns off tracking of all fragments.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36a14374b5684ad2a09d9f89adef3ab5e114cf0d
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Mon Mar 6 11:23:35 2017 +0100

    zram: set physical queue limits to avoid array out of bounds accesses
    
    
    [ Upstream commit 0bc315381fe9ed9fb91db8b0e82171b645ac008f ]
    
    zram can handle at most SECTORS_PER_PAGE sectors in a bio's bvec. When using
    the NVMe over Fabrics loopback target which potentially sends a huge bulk of
    pages attached to the bio's bvec this results in a kernel panic because of
    array out of bounds accesses in zram_decompress_page().
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc8859174d984975d10f47c55ade762bbf46b5f1
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Wed Feb 22 18:13:59 2017 +0800

    blk-mq: initialize mq kobjects in blk_mq_init_allocated_queue()
    
    
    [ Upstream commit 737f98cfe7de8df7433a4d846850aa8efa44bd48 ]
    
    Both q->mq_kobj and sw queues' kobjects should have been initialized
    once, instead of doing that each add_disk context.
    
    Also this patch removes clearing of ctx in blk_mq_init_cpu_queues()
    because percpu allocator fills zero to allocated variable.
    
    This patch fixes one issue[1] reported from Omar.
    
    [1] kernel wearning when doing unbind/bind on one scsi-mq device
    
    [   19.347924] kobject (ffff8800791ea0b8): tried to init an initialized object, something is seriously wrong.
    [   19.349781] CPU: 1 PID: 84 Comm: kworker/u8:1 Not tainted 4.10.0-rc7-00210-g53f39eeaa263 #34
    [   19.350686] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.1-20161122_114906-anatol 04/01/2014
    [   19.350920] Workqueue: events_unbound async_run_entry_fn
    [   19.350920] Call Trace:
    [   19.350920]  dump_stack+0x63/0x83
    [   19.350920]  kobject_init+0x77/0x90
    [   19.350920]  blk_mq_register_dev+0x40/0x130
    [   19.350920]  blk_register_queue+0xb6/0x190
    [   19.350920]  device_add_disk+0x1ec/0x4b0
    [   19.350920]  sd_probe_async+0x10d/0x1c0 [sd_mod]
    [   19.350920]  async_run_entry_fn+0x48/0x150
    [   19.350920]  process_one_work+0x1d0/0x480
    [   19.350920]  worker_thread+0x48/0x4e0
    [   19.350920]  kthread+0x101/0x140
    [   19.350920]  ? process_one_work+0x480/0x480
    [   19.350920]  ? kthread_create_on_node+0x60/0x60
    [   19.350920]  ret_from_fork+0x2c/0x40
    
    Cc: Omar Sandoval <osandov@osandov.com>
    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Tested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 567df7459e127ded8e50add7ab938335b2dfd92f
Author: Chris Brandt <chris.brandt@renesas.com>
Date:   Mon Mar 6 15:20:51 2017 -0500

    i2c: riic: fix restart condition
    
    
    [ Upstream commit 2501c1bb054290679baad0ff7f4f07c714251f4c ]
    
    While modifying the driver to use the STOP interrupt, the completion of the
    intermediate transfers need to wake the driver back up in order to initiate
    the next transfer (restart condition). Otherwise you get never ending
    interrupts and only the first transfer sent.
    
    Fixes: 71ccea095ea1 ("i2c: riic: correctly finish transfers")
    Reported-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Chris Brandt <chris.brandt@renesas.com>
    Tested-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e46126e51ee88600bd8dfb5b6e3710750c1ded2f
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Sun Mar 5 19:14:07 2017 +0200

    crypto: s5p-sss - Fix completing crypto request in IRQ handler
    
    
    [ Upstream commit 07de4bc88ce6a4d898cad9aa4c99c1df7e87702d ]
    
    In a regular interrupt handler driver was finishing the crypt/decrypt
    request by calling complete on crypto request.  This is disallowed since
    converting to skcipher in commit b286d8b1a690 ("crypto: skcipher - Add
    skcipher walk interface") and causes a warning:
            WARNING: CPU: 0 PID: 0 at crypto/skcipher.c:430 skcipher_walk_first+0x13c/0x14c
    
    The interrupt is marked shared but in fact there are no other users
    sharing it.  Thus the simplest solution seems to be to just use a
    threaded interrupt handler, after converting it to oneshot.
    
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05a59bc2f3c0e3414e45b0cc642e1548b8eb3e75
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Sun Mar 5 12:34:53 2017 -0800

    ipv6: reorder icmpv6_init() and ip6_mr_init()
    
    
    [ Upstream commit 15e668070a64bb97f102ad9cf3bccbca0545cda8 ]
    
    Andrey reported the following kernel crash:
    
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 0 PID: 14446 Comm: syz-executor6 Not tainted 4.10.0+ #82
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    task: ffff88001f311700 task.stack: ffff88001f6e8000
    RIP: 0010:ip6mr_sk_done+0x15a/0x3d0 net/ipv6/ip6mr.c:1618
    RSP: 0018:ffff88001f6ef418 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: 1ffff10003edde8c RCX: ffffc900043ee000
    RDX: 0000000000000004 RSI: ffffffff83e3b3f8 RDI: 0000000000000020
    RBP: ffff88001f6ef508 R08: fffffbfff0dcc5d8 R09: 0000000000000000
    R10: ffffffff86e62ec0 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff88001f6ef4e0 R15: ffff8800380a0040
    FS:  00007f7a52cec700(0000) GS:ffff88003ec00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000061c500 CR3: 000000001f1ae000 CR4: 00000000000006f0
    DR0: 0000000020000000 DR1: 0000000020000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600
    Call Trace:
     rawv6_close+0x4c/0x80 net/ipv6/raw.c:1217
     inet_release+0xed/0x1c0 net/ipv4/af_inet.c:425
     inet6_release+0x50/0x70 net/ipv6/af_inet6.c:432
     sock_release+0x8d/0x1e0 net/socket.c:597
     __sock_create+0x39d/0x880 net/socket.c:1226
     sock_create_kern+0x3f/0x50 net/socket.c:1243
     inet_ctl_sock_create+0xbb/0x280 net/ipv4/af_inet.c:1526
     icmpv6_sk_init+0x163/0x500 net/ipv6/icmp.c:954
     ops_init+0x10a/0x550 net/core/net_namespace.c:115
     setup_net+0x261/0x660 net/core/net_namespace.c:291
     copy_net_ns+0x27e/0x540 net/core/net_namespace.c:396
    9pnet_virtio: no channels available for device ./file1
     create_new_namespaces+0x437/0x9b0 kernel/nsproxy.c:106
     unshare_nsproxy_namespaces+0xae/0x1e0 kernel/nsproxy.c:205
     SYSC_unshare kernel/fork.c:2281 [inline]
     SyS_unshare+0x64e/0x1000 kernel/fork.c:2231
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    This is because net->ipv6.mr6_tables is not initialized at that point,
    ip6mr_rules_init() is not called yet, therefore on the error path when
    we iterator the list, we trigger this oops. Fix this by reordering
    ip6mr_rules_init() before icmpv6_sk_init().
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f191e15e4acdd43d7476b3ad16a3fe58d948be07
Author: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
Date:   Sun Mar 5 12:18:42 2017 -0600

    ibmvnic: Allocate number of rx/tx buffers agreed on by firmware
    
    
    [ Upstream commit 068d9f90a6978c3e3a662d9e85204a7d6be240d2 ]
    
    The amount of TX/RX buffers that the vNIC driver currently allocates
    is different from the amount agreed upon in negotiation with firmware.
    Correct that by allocating the requested number of buffers confirmed
    by firmware.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3b1f93ed23b0e3bdd99c8304726041fc68b2055
Author: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
Date:   Sun Mar 5 12:18:41 2017 -0600

    ibmvnic: Fix overflowing firmware/hardware TX queue
    
    
    [ Upstream commit 142c0ac445792c492579cb01f1cfd4e32e6dfcce ]
    
    Use a counter to track the number of outstanding transmissions sent
    that have not received completions. If the counter reaches the maximum
    number of queue entries, stop transmissions on that queue. As we receive
    more completions from firmware, wake the queue once the counter reaches
    an acceptable level.
    
    This patch prevents hardware/firmware TX queue from filling up and
    and generating errors.  Since incorporating this fix, internal testing
    has reported that these firmware errors have stopped.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 742e67d2b7eec559e2dcec47970a3471b49f0b5e
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Sat Mar 4 08:57:35 2017 -0800

    rds: tcp: Sequence teardown of listen and acceptor sockets to avoid races
    
    
    [ Upstream commit b21dd4506b71bdb9c5a20e759255cd2513ea7ebe ]
    
    Commit a93d01f5777e ("RDS: TCP: avoid bad page reference in
    rds_tcp_listen_data_ready") added the function
    rds_tcp_listen_sock_def_readable()  to handle the case when a
    partially set-up acceptor socket drops into rds_tcp_listen_data_ready().
    However, if the listen socket (rtn->rds_tcp_listen_sock) is itself going
    through a tear-down via rds_tcp_listen_stop(), the (*ready)() will be
    null and we would hit a panic  of the form
      BUG: unable to handle kernel NULL pointer dereference at   (null)
      IP:           (null)
       :
      ? rds_tcp_listen_data_ready+0x59/0xb0 [rds_tcp]
      tcp_data_queue+0x39d/0x5b0
      tcp_rcv_established+0x2e5/0x660
      tcp_v4_do_rcv+0x122/0x220
      tcp_v4_rcv+0x8b7/0x980
        :
    In the above case, it is not fatal to encounter a NULL value for
    ready- we should just drop the packet and let the flush of the
    acceptor thread finish gracefully.
    
    In general, the tear-down sequence for listen() and accept() socket
    that is ensured by this commit is:
         rtn->rds_tcp_listen_sock = NULL; /* prevent any new accepts */
         In rds_tcp_listen_stop():
             serialize with, and prevent, further callbacks using lock_sock()
             flush rds_wq
             flush acceptor workq
             sock_release(listen socket)
    
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8f147ac75bbca8a6efadb0beb451f3717b1dd26
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:32 2017 +0100

    bnx2x: do not rollback VF MAC/VLAN filters we did not configure
    
    
    [ Upstream commit 78d5505432436516456c12abbe705ec8dee7ee2b ]
    
    On failure to configure a VF MAC/VLAN filter we should not attempt to
    rollback filters that we failed to configure with -EEXIST.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdef3be8c7bb2caabfe9886ac88f60b0c1dcd370
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:31 2017 +0100

    bnx2x: fix detection of VLAN filtering feature for VF
    
    
    [ Upstream commit 83bd9eb8fc69cdd5135ed6e1f066adc8841800fd ]
    
    VFs are currently missing the VLAN filtering feature, because we were
    checking the PF's acquire response before actually performing the acquire.
    
    Fix it by setting the feature flag later when we have the PF response.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f73fcb25f4bba5c8df9de1693ea382f21f8f6818
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:30 2017 +0100

    bnx2x: fix possible overrun of VFPF multicast addresses array
    
    
    [ Upstream commit 22118d861cec5da6ed525aaf12a3de9bfeffc58f ]
    
    It is too late to check for the limit of the number of VF multicast
    addresses after they have already been copied to the req->multicast[]
    array, possibly overflowing it.
    
    Do the check before copying.
    
    Also fix the error path to not skip unlocking vf2pf_mutex.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae6b3452faf741c4127288c71d6edd0f23d6b0bb
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:28 2017 +0100

    bnx2x: prevent crash when accessing PTP with interface down
    
    
    [ Upstream commit 466e8bf10ac104d96e1ea813e8126e11cb72ea20 ]
    
    It is possible to crash the kernel by accessing a PTP device while its
    associated bnx2x interface is down. Before the interface is brought up,
    the timecounter is not initialized, so accessing it results in NULL
    dereference.
    
    Fix it by checking if the interface is up.
    
    Use -ENETDOWN as the error code when the interface is down.
     -EFAULT in bnx2x_ptp_adjfreq() did not seem right.
    
    Tested using phc_ctl get/set/adj/freq commands.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c72c7f2442654d68d38d22cc5a36dd2644d2848b
Author: Blomme, Maarten <Maarten.Blomme@flir.com>
Date:   Thu Mar 2 13:08:49 2017 +0100

    spi_ks8995: regs_size incorrect for some devices
    
    
    [ Upstream commit 239870f2a0ebf75cc8f6d987dc528c5243f93d69 ]
    
    Signed-off-by: Maarten Blomme <Maarten.Blomme@flir.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ace4dabf62472549744480d27f37d11c1a7cf9a
Author: Blomme, Maarten <Maarten.Blomme@flir.com>
Date:   Thu Mar 2 13:08:36 2017 +0100

    spi_ks8995: fix "BUG: key accdaa28 not in .data!"
    
    
    [ Upstream commit 4342696df764ec65dcdfbd0c10d90ea52505f8ba ]
    
    Signed-off-by: Maarten Blomme <Maarten.Blomme@flir.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1f71147a1883fff0535f1bd12fca3839e54aadc
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Thu Feb 16 10:41:20 2017 +0000

    KVM: arm/arm64: VGIC: Fix command handling while ITS being disabled
    
    
    [ Upstream commit a5e1e6ca94a8cec51571fd62e3eaec269717969c ]
    
    The ITS spec says that ITS commands are only processed when the ITS
    is enabled (section 8.19.4, Enabled, bit[0]). Our emulation was not taking
    this into account.
    Fix this by checking the enabled state before handling CWRITER writes.
    
    On the other hand that means that CWRITER could advance while the ITS
    is disabled, and enabling it would need those commands to be processed.
    Fix this case as well by refactoring actual command processing and
    calling this from both the GITS_CWRITER and GITS_CTLR handlers.
    
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aafb72d2ed5579208191cfc3fb9425570c1303ce
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Feb 20 12:30:12 2017 +0000

    arm64: KVM: Survive unknown traps from guests
    
    
    [ Upstream commit ba4dd156eabdca93501d92a980ba27fa5f4bbd27 ]
    
    Currently we BUG() if we see an ESR_EL2.EC value we don't recognise. As
    configurable disables/enables are added to the architecture (controlled
    by RES1/RES0 bits respectively), with associated synchronous exceptions,
    it may be possible for a guest to trigger exceptions with classes that
    we don't recognise.
    
    While we can't service these exceptions in a manner useful to the guest,
    we can avoid bringing down the host. Per ARM DDI 0487A.k_iss10775, page
    D7-1937, EC values within the range 0x00 - 0x2c are reserved for future
    use with synchronous exceptions, and EC values within the range 0x2d -
    0x3f may be used for either synchronous or asynchronous exceptions.
    
    The patch makes KVM handle any unknown EC by injecting an UNDEFINED
    exception into the guest, with a corresponding (ratelimited) warning in
    the host dmesg. We could later improve on this with with a new (opt-in)
    exit to the host userspace.
    
    Cc: Dave Martin <dave.martin@arm.com>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e366aaec185c83157a126dad227a75e59899c62
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Feb 20 12:30:11 2017 +0000

    arm: KVM: Survive unknown traps from guests
    
    
    [ Upstream commit f050fe7a9164945dd1c28be05bf00e8cfb082ccf ]
    
    Currently we BUG() if we see a HSR.EC value we don't recognise. As
    configurable disables/enables are added to the architecture (controlled
    by RES1/RES0 bits respectively), with associated synchronous exceptions,
    it may be possible for a guest to trigger exceptions with classes that
    we don't recognise.
    
    While we can't service these exceptions in a manner useful to the guest,
    we can avoid bringing down the host. Per ARM DDI 0406C.c, all currently
    unallocated HSR EC encodings are reserved, and per ARM DDI
    0487A.k_iss10775, page G6-4395, EC values within the range 0x00 - 0x2c
    are reserved for future use with synchronous exceptions, and EC values
    within the range 0x2d - 0x3f may be used for either synchronous or
    asynchronous exceptions.
    
    The patch makes KVM handle any unknown EC by injecting an UNDEFINED
    exception into the guest, with a corresponding (ratelimited) warning in
    the host dmesg. We could later improve on this with with a new (opt-in)
    exit to the host userspace.
    
    Cc: Dave Martin <dave.martin@arm.com>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c886f281b9e016f695df0a4d4aa91a2ead93869f
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Mon Mar 6 04:03:28 2017 -0800

    KVM: nVMX: reset nested_run_pending if the vCPU is going to be reset
    
    
    [ Upstream commit 2f707d97982286b307ef2a9b034e19aabc1abb56 ]
    
    Reported by syzkaller:
    
        WARNING: CPU: 1 PID: 27742 at arch/x86/kvm/vmx.c:11029
        nested_vmx_vmexit+0x5c35/0x74d0 arch/x86/kvm/vmx.c:11029
        CPU: 1 PID: 27742 Comm: a.out Not tainted 4.10.0+ #229
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
        Call Trace:
         __dump_stack lib/dump_stack.c:15 [inline]
         dump_stack+0x2ee/0x3ef lib/dump_stack.c:51
         panic+0x1fb/0x412 kernel/panic.c:179
         __warn+0x1c4/0x1e0 kernel/panic.c:540
         warn_slowpath_null+0x2c/0x40 kernel/panic.c:583
         nested_vmx_vmexit+0x5c35/0x74d0 arch/x86/kvm/vmx.c:11029
         vmx_leave_nested arch/x86/kvm/vmx.c:11136 [inline]
         vmx_set_msr+0x1565/0x1910 arch/x86/kvm/vmx.c:3324
         kvm_set_msr+0xd4/0x170 arch/x86/kvm/x86.c:1099
         do_set_msr+0x11e/0x190 arch/x86/kvm/x86.c:1128
         __msr_io arch/x86/kvm/x86.c:2577 [inline]
         msr_io+0x24b/0x450 arch/x86/kvm/x86.c:2614
         kvm_arch_vcpu_ioctl+0x35b/0x46a0 arch/x86/kvm/x86.c:3497
         kvm_vcpu_ioctl+0x232/0x1120 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2721
         vfs_ioctl fs/ioctl.c:43 [inline]
         do_vfs_ioctl+0x1bf/0x1790 fs/ioctl.c:683
         SYSC_ioctl fs/ioctl.c:698 [inline]
         SyS_ioctl+0x8f/0xc0 fs/ioctl.c:689
         entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    The syzkaller folks reported a nested_run_pending warning during userspace
    clear VMX capability which is exposed to L1 before.
    
    The warning gets thrown while doing
    
    (*(uint32_t*)0x20aecfe8 = (uint32_t)0x1);
    (*(uint32_t*)0x20aecfec = (uint32_t)0x0);
    (*(uint32_t*)0x20aecff0 = (uint32_t)0x3a);
    (*(uint32_t*)0x20aecff4 = (uint32_t)0x0);
    (*(uint64_t*)0x20aecff8 = (uint64_t)0x0);
    r[29] = syscall(__NR_ioctl, r[4], 0x4008ae89ul,
                    0x20aecfe8ul, 0, 0, 0, 0, 0, 0);
    
    i.e. KVM_SET_MSR ioctl with
    
    struct kvm_msrs {
            .nmsrs = 1,
                    .pad = 0,
                    .entries = {
                            {.index = MSR_IA32_FEATURE_CONTROL,
                             .reserved = 0,
                             .data = 0}
                    }
    }
    
    The VMLANCH/VMRESUME emulation should be stopped since the CPU is going to
    reset here. This patch resets the nested_run_pending since the CPU is going
    to be reset hence there should be nothing pending.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Suggested-by: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: David Hildenbrand <david@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54e1ae1f21f5206eaf1e2558a93fb9644358dc65
Author: Franck Demathieu <fdemathieu@gmail.com>
Date:   Mon Mar 6 14:41:06 2017 +0100

    irqchip/crossbar: Fix incorrect type of register size
    
    
    [ Upstream commit 4b9de5da7e120c7f02395da729f0ec77ce7a6044 ]
    
    The 'size' variable is unsigned according to the dt-bindings.
    As this variable is used as integer in other places, create a new variable
    that allows to fix the following sparse issue (-Wtypesign):
    
      drivers/irqchip/irq-crossbar.c:279:52: warning: incorrect type in argument 3 (different signedness)
      drivers/irqchip/irq-crossbar.c:279:52:    expected unsigned int [usertype] *out_value
      drivers/irqchip/irq-crossbar.c:279:52:    got int *<noident>
    
    Signed-off-by: Franck Demathieu <fdemathieu@gmail.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d32c4dedcc6d989c63a2f31ac736c5f02e81f122
Author: James Smart <jsmart2021@gmail.com>
Date:   Sat Mar 4 09:30:25 2017 -0800

    scsi: lpfc: Fix crash during Hardware error recovery on SLI3 adapters
    
    
    [ Upstream commit 5d181531bc6169e19a02a27d202cf0e982db9d0e ]
    
    if REG_VPI fails, the driver was incorrectly issuing INIT_VFI
    (a SLI4 command) on a SLI3 adapter.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e7208d7592859b9ee15baa9fb884afe68116445
Author: Joe Perches <joe@perches.com>
Date:   Thu Mar 2 17:14:47 2017 -0800

    scsi: qla2xxx: Fix ql_dump_buffer
    
    
    [ Upstream commit 23456565acf6d452e0368f7380aecd584c019c67 ]
    
    Recent printk changes for KERN_CONT cause this logging to be defectively
    emitted on multiple lines.  Fix it.
    
    Also reduces object size a trivial amount.
    
    $ size drivers/scsi/qla2xxx/qla_dbg.o*
       text    data     bss     dec     hex filename
      39125       0       0   39125    98d5 drivers/scsi/qla2xxx/qla_dbg.o.new
      39164       0       0   39164    98fc drivers/scsi/qla2xxx/qla_dbg.o.old
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 757e1845d6c3e66da90c00e4e487d053b62ce646
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 6 15:33:42 2017 -0500

    workqueue: trigger WARN if queue_delayed_work() is called with NULL @wq
    
    
    [ Upstream commit 637fdbae60d6cb9f6e963c1079d7e0445c86ff7d ]
    
    If queue_delayed_work() gets called with NULL @wq, the kernel will
    oops asynchronuosly on timer expiration which isn't too helpful in
    tracking down the offender.  This actually happened with smc.
    
    __queue_delayed_work() already does several input sanity checks
    synchronously.  Add NULL @wq check.
    
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Link: http://lkml.kernel.org/r/20170227171439.jshx3qplflyrgcv7@codemonkey.org.uk
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da6a95b0ef8202ab541ece19c8b1844b1fadcd9e
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 6 15:26:54 2017 -0500

    libata: drop WARN from protocol error in ata_sff_qc_issue()
    
    
    [ Upstream commit 0580b762a4d6b70817476b90042813f8573283fa ]
    
    ata_sff_qc_issue() expects upper layers to never issue commands on a
    command protocol that it doesn't implement.  While the assumption
    holds fine with the usual IO path, nothing filters based on the
    command protocol in the passthrough path (which was added later),
    allowing the warning to be tripped with a passthrough command with the
    right (well, wrong) protocol.
    
    Failing with AC_ERR_SYSTEM is the right thing to do anyway.  Remove
    the unnecessary WARN.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Link: http://lkml.kernel.org/r/CACT4Y+bXkvevNZU8uP6X0QVqsj6wNoUA_1exfTSOzc+SmUtMOA@mail.gmail.com
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29deec403d5614e67443cf9bf6ca3260c4f97d8a
Author: Jim Mattson <jmattson@google.com>
Date:   Thu Mar 2 12:41:48 2017 -0800

    kvm: nVMX: VMCLEAR should not cause the vCPU to shut down
    
    
    [ Upstream commit 587d7e72aedca91cee80c0a56811649c3efab765 ]
    
    VMCLEAR should silently ignore a failure to clear the launch state of
    the VMCS referenced by the operand.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    [Changed "kvm_write_guest(vcpu->kvm" to "kvm_vcpu_write_guest(vcpu".]
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2afb2d892c1d54e560c0dc047919bff6129baa1a
Author: Raz Manor <Raz.Manor@valens.com>
Date:   Thu Feb 9 09:41:08 2017 +0200

    usb: gadget: udc: net2280: Fix tmp reusage in net2280 driver
    
    
    [ Upstream commit ef5e2fa9f65befa12f1113c734602d2c1964d2a5 ]
    
    In the function scan_dma_completions() there is a reusage of tmp
    variable. That coused a wrong value being used in some case when
    reading a short packet terminated transaction from an endpoint,
    in 2 concecutive reads.
    
    This was my logic for the patch:
    
    The req->td->dmadesc equals to 0 iff:
    -- There was a transaction ending with a short packet, and
    -- The read() to read it was shorter than the transaction length, and
    -- The read() to complete it is longer than the residue.
    I believe this is true from the printouts of various cases,
    but I can't be positive it is correct.
    
    Entering this if, there should be no more data in the endpoint
    (a short packet terminated the transaction).
    If there is, the transaction wasn't really done and we should exit and
    wait for it to finish entirely. That is the inner if.
    That inner if should never happen, but it is there to be on the safe
    side. That is why it is marked with the comment /* paranoia */.
    The size of the data available in the endpoint is ep->dma->dmacount
    and it is read to tmp.
    This entire clause is based on my own educated guesses.
    
    If we passed that inner if without breaking in the original code,
    than tmp & DMA_BYTE_MASK_COUNT== 0.
    That means we will always pass dma bytes count of 0 to dma_done(),
    meaning all the requested bytes were read.
    
    dma_done() reports back to the upper layer that the request (read())
    was done and how many bytes were read.
    In the original code that would always be the request size,
    regardless of the actual size of the data.
    That did not make sense to me at all.
    
    However, the original value of tmp is req->td->dmacount,
    which is the dmacount value when the request's dma transaction was
    finished. And that is a much more reasonable value to report back to
    the caller.
    
    To recreate the problem:
    Read from a bulk out endpoint in a loop, 1024 * n bytes in each
    iteration.
    Connect the PLX to a host you can control.
    Send to that endpoint 1024 * n + x bytes,
    such that 0 < x < 1024 * n and (x % 1024) != 0
    You would expect the first read() to return 1024 * n
    and the second read() to return x.
    But you will get the first read to return 1024 * n
    and the second one to return 1024 * n.
    That is true for every positive integer n.
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-usb@vger.kernel.org
    Signed-off-by: Raz Manor <Raz.Manor@valens.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82f79a4423fc5f4ab16acb0170aeb06222e1c13b
Author: Petr Cvek <petr.cvek@tul.cz>
Date:   Fri Feb 24 02:54:56 2017 +0100

    usb: gadget: pxa27x: Test for a valid argument pointer
    
    
    [ Upstream commit df7545719a14fa7b481896fb8689e23d0a00f682 ]
    
    A call usb_put_phy(udc->transceiver) must be tested for a valid pointer.
    Use an already existing test for usb_unregister_notifier call.
    
    Acked-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Reported-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Petr Cvek <petr.cvek@tul.cz>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7abf66d78e89800eb3a5759bf7592b6e53721c20
Author: Roger Quadros <rogerq@ti.com>
Date:   Wed Feb 15 14:16:26 2017 +0200

    usb: dwc3: gadget: Fix system suspend/resume on TI platforms
    
    
    [ Upstream commit 1551e35ea4189c1f7199fe278395fc94196715f2 ]
    
    On TI platforms (dra7, am437x), the DWC3_DSTS_DEVCTRLHLT bit is not set
    after the device controller is stopped via DWC3_DCTL_RUN_STOP.
    
    If we don't disconnect and stop the gadget, it stops working after a
    system resume with the trace below.
    
    There is no point in preventing gadget disconnect and gadget stop during
    system suspend/resume as we're going to suspend in any case, whether
    DEVCTRLHLT timed out or not.
    
    [  141.727480] ------------[ cut here ]------------
    [  141.732349] WARNING: CPU: 1 PID: 2135 at drivers/usb/dwc3/gadget.c:2384 dwc3_stop_active_transfer.constprop.4+0xc4/0xe4 [dwc3]
    [  141.744299] Modules linked in: usb_f_ss_lb g_zero libcomposite xhci_plat_hcd xhci_hcd usbcore dwc3 evdev udc_core m25p80 usb_common spi_nor snd_soc_davinci_mcasp snd_soc_simple_card snd_soc_edma snd_soc_tlv3e
    [  141.792163] CPU: 1 PID: 2135 Comm: irq/456-dwc3 Not tainted 4.10.0-rc8 #1138
    [  141.799547] Hardware name: Generic DRA74X (Flattened Device Tree)
    [  141.805940] [<c01101b4>] (unwind_backtrace) from [<c010c31c>] (show_stack+0x10/0x14)
    [  141.814066] [<c010c31c>] (show_stack) from [<c04a0918>] (dump_stack+0xac/0xe0)
    [  141.821648] [<c04a0918>] (dump_stack) from [<c013708c>] (__warn+0xd8/0x104)
    [  141.828955] [<c013708c>] (__warn) from [<c0137164>] (warn_slowpath_null+0x20/0x28)
    [  141.836902] [<c0137164>] (warn_slowpath_null) from [<bf27784c>] (dwc3_stop_active_transfer.constprop.4+0xc4/0xe4 [dwc3])
    [  141.848329] [<bf27784c>] (dwc3_stop_active_transfer.constprop.4 [dwc3]) from [<bf27ab14>] (__dwc3_gadget_ep_disable+0x64/0x528 [dwc3])
    [  141.861034] [<bf27ab14>] (__dwc3_gadget_ep_disable [dwc3]) from [<bf27c27c>] (dwc3_gadget_ep_disable+0x3c/0xc8 [dwc3])
    [  141.872280] [<bf27c27c>] (dwc3_gadget_ep_disable [dwc3]) from [<bf23b428>] (usb_ep_disable+0x11c/0x18c [udc_core])
    [  141.883160] [<bf23b428>] (usb_ep_disable [udc_core]) from [<bf342774>] (disable_ep+0x18/0x54 [usb_f_ss_lb])
    [  141.893408] [<bf342774>] (disable_ep [usb_f_ss_lb]) from [<bf3437b0>] (disable_endpoints+0x18/0x50 [usb_f_ss_lb])
    [  141.904168] [<bf3437b0>] (disable_endpoints [usb_f_ss_lb]) from [<bf343814>] (disable_source_sink+0x2c/0x34 [usb_f_ss_lb])
    [  141.915771] [<bf343814>] (disable_source_sink [usb_f_ss_lb]) from [<bf329a9c>] (reset_config+0x48/0x7c [libcomposite])
    [  141.927012] [<bf329a9c>] (reset_config [libcomposite]) from [<bf329afc>] (composite_disconnect+0x2c/0x54 [libcomposite])
    [  141.938444] [<bf329afc>] (composite_disconnect [libcomposite]) from [<bf23d7dc>] (usb_gadget_udc_reset+0x10/0x34 [udc_core])
    [  141.950237] [<bf23d7dc>] (usb_gadget_udc_reset [udc_core]) from [<bf276d70>] (dwc3_gadget_reset_interrupt+0x64/0x698 [dwc3])
    [  141.962022] [<bf276d70>] (dwc3_gadget_reset_interrupt [dwc3]) from [<bf27952c>] (dwc3_thread_interrupt+0x618/0x1a3c [dwc3])
    [  141.973723] [<bf27952c>] (dwc3_thread_interrupt [dwc3]) from [<c01a7ce8>] (irq_thread_fn+0x1c/0x54)
    [  141.983215] [<c01a7ce8>] (irq_thread_fn) from [<c01a7fbc>] (irq_thread+0x120/0x1f0)
    [  141.991247] [<c01a7fbc>] (irq_thread) from [<c015ba14>] (kthread+0xf8/0x138)
    [  141.998641] [<c015ba14>] (kthread) from [<c01078f0>] (ret_from_fork+0x14/0x24)
    [  142.006213] ---[ end trace b4ecfe9f175b9a9c ]---
    
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fe9ea81b1e9b8ad1b7b53a8c4295e4f4c47464d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Feb 21 22:33:11 2017 +0100

    USB: gadgetfs: Fix a potential memory leak in 'dev_config()'
    
    
    [ Upstream commit b6e7aeeaf235901c42ec35de4633c7c69501d303 ]
    
    'kbuf' is allocated just a few lines above using 'memdup_user()'.
    If the 'if (dev->buf)' test fails, this memory is never released.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59682e70c98054eb8f97e3670625992a0c85d24e
Author: John Keeping <john@metanate.com>
Date:   Tue Feb 28 10:55:30 2017 +0000

    usb: gadget: configs: plug memory leak
    
    
    [ Upstream commit 38355b2a44776c25b0f2ad466e8c51bb805b3032 ]
    
    When binding a gadget to a device, "name" is stored in gi->udc_name, but
    this does not happen when unregistering and the string is leaked.
    
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 881b5d4841fc0d37d0d7362182d0819db927b712
Author: Daniel Drake <drake@endlessm.com>
Date:   Fri Feb 17 07:40:52 2017 -0600

    HID: chicony: Add support for another ASUS Zen AiO keyboard
    
    
    [ Upstream commit f2f10b7e722a75c6d75a7f7cd06b0eee3ae20f7c ]
    
    Add support for media keys on the keyboard that comes with the
    Asus V221ID and ZN241IC All In One computers.
    
    The keys to support here are WLAN, BRIGHTNESSDOWN and BRIGHTNESSUP.
    
    This device is not visibly branded as Chicony, and the USB Vendor ID
    suggests that it is a JESS device. However this seems like the right place
    to put it: the usage codes are identical to the currently supported
    devices, and this driver already supports the ASUS AIO keyboard AK1D.
    
    Signed-off-by: Daniel Drake <drake@endlessm.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bc827aabc70aa14b8a8be0b5b53901edb3b3daa
Author: Phil Reid <preid@electromag.com.au>
Date:   Mon Feb 20 09:41:45 2017 +0800

    gpio: altera: Use handle_level_irq when configured as a level_high
    
    
    [ Upstream commit f759921cfbf4847319d197a6ed7c9534d593f8bc ]
    
    When a threaded irq handler is chained attached to one of the gpio
    pins when configure for level irq the altera_gpio_irq_leveL_high_handler
    does not mask the interrupt while being handled by the chained irq.
    This resulting in the threaded irq not getting enough cycles to complete
    quickly enough before the irq was disabled as faulty. handle_level_irq
    should be used in this situation instead of handle_simple_irq.
    
    In gpiochip_irqchip_add set default handler to handle_bad_irq as
    per Documentation/gpio/driver.txt. Then set the correct handler in
    the set_type callback.
    
    Signed-off-by: Phil Reid <preid@electromag.com.au>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7c8667117996129fb14d10e99c5f45d9946c670
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Fri Mar 3 04:25:09 2017 +0000

    ASoC: rcar: avoid SSI_MODEx settings for SSI8
    
    
    [ Upstream commit 4b30eebfc35c67771b5f58d9274d3e321b72d7a8 ]
    
    SSI8 is is sharing pin with SSI7, and nothing to do for SSI_MODEx.
    It is special pin and it needs special settings whole system,
    but we can't confirm it, because we never have SSI8 available board.
    
    This patch fixup SSI_MODEx settings error for SSI8 on connection test,
    but should be confirmed behavior on real board in the future.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 202c73946455e29db412cd594c0d7e47efcb28fa
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Mar 4 07:02:11 2017 -0800

    ARM: OMAP2+: Release device node after it is no longer needed.
    
    
    [ Upstream commit b92675d998a9fa37fe9e0e35053a95b4a23c158b ]
    
    The device node returned by of_find_node_by_name() needs to be released
    after it is no longer needed to avoid a device node leak.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3954c5ced8eb8c8548312f49c9bb28717812057
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Mar 4 07:02:10 2017 -0800

    ARM: OMAP2+: Fix device node reference counts
    
    
    [ Upstream commit 10e5778f54765c96fe0c8f104b7a030e5b35bc72 ]
    
    After commit 0549bde0fcb1 ("of: fix of_node leak caused in
    of_find_node_opts_by_path"), the following error may be
    reported when running omap images.
    
    OF: ERROR: Bad of_node_put() on /ocp@68000000
    CPU: 0 PID: 0 Comm: swapper Not tainted 4.10.0-rc7-next-20170210 #1
    Hardware name: Generic OMAP3-GP (Flattened Device Tree)
    [<c0310604>] (unwind_backtrace) from [<c030bbf4>] (show_stack+0x10/0x14)
    [<c030bbf4>] (show_stack) from [<c05add8c>] (dump_stack+0x98/0xac)
    [<c05add8c>] (dump_stack) from [<c05af1b0>] (kobject_release+0x48/0x7c)
    [<c05af1b0>] (kobject_release)
            from [<c0ad1aa4>] (of_find_node_by_name+0x74/0x94)
    [<c0ad1aa4>] (of_find_node_by_name)
            from [<c1215bd4>] (omap3xxx_hwmod_is_hs_ip_block_usable+0x24/0x2c)
    [<c1215bd4>] (omap3xxx_hwmod_is_hs_ip_block_usable) from
    [<c1215d5c>] (omap3xxx_hwmod_init+0x180/0x274)
    [<c1215d5c>] (omap3xxx_hwmod_init)
            from [<c120faa8>] (omap3_init_early+0xa0/0x11c)
    [<c120faa8>] (omap3_init_early)
            from [<c120fb2c>] (omap3430_init_early+0x8/0x30)
    [<c120fb2c>] (omap3430_init_early)
            from [<c1204710>] (setup_arch+0xc04/0xc34)
    [<c1204710>] (setup_arch) from [<c1200948>] (start_kernel+0x68/0x38c)
    [<c1200948>] (start_kernel) from [<8020807c>] (0x8020807c)
    
    of_find_node_by_name() drops the reference to the passed device node.
    The commit referenced above exposes this problem.
    
    To fix the problem, use of_get_child_by_name() instead of
    of_find_node_by_name(); of_get_child_by_name() does not drop
    the reference count of passed device nodes. While semantically
    different, we only look for immediate children of the passed
    device node, so of_get_child_by_name() is a more appropriate
    function to use anyway.
    
    Release the reference to the device node obtained with
    of_get_child_by_name() after it is no longer needed to avoid
    another device node leak.
    
    While at it, clean up the code and change the return type of
    omap3xxx_hwmod_is_hs_ip_block_usable() to bool to match its use
    and the return type of of_device_is_available().
    
    Cc: Qi Hou <qi.hou@windriver.com>
    Cc: Peter Rosin <peda@axentia.se>
    Cc: Rob Herring <robh@kernel.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4aff028047156e58b08b06346a19063c723c565a
Author: Shile Zhang <shile.zhang@nokia.com>
Date:   Sat Feb 4 17:03:40 2017 +0800

    powerpc/64: Fix checksum folding in csum_add()
    
    
    [ Upstream commit 6ad966d7303b70165228dba1ee8da1a05c10eefe ]
    
    Paul's patch to fix checksum folding, commit b492f7e4e07a ("powerpc/64:
    Fix checksum folding in csum_tcpudp_nofold and ip_fast_csum_nofold")
    missed a case in csum_add(). Fix it.
    
    Signed-off-by: Shile Zhang <shile.zhang@nokia.com>
    Acked-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d57cb693c592d5148551b3ac858f14eb9e4812f3
Author: David Daney <david.daney@cavium.com>
Date:   Wed Mar 1 14:04:53 2017 -0800

    module: set __jump_table alignment to 8
    
    
    [ Upstream commit ab42632156becd35d3884ee5c14da2bedbf3149a ]
    
    For powerpc the __jump_table section in modules is not aligned, this
    causes a WARN_ON() splat when loading a module containing a __jump_table.
    
    Strict alignment became necessary with commit 3821fd35b58d
    ("jump_label: Reduce the size of struct static_key"), currently in
    linux-next, which uses the two least significant bits of pointers to
    __jump_table elements.
    
    Fix by forcing __jump_table to 8, which is the same alignment used for
    this section in the kernel proper.
    
    Link: http://lkml.kernel.org/r/20170301220453.4756-1-david.daney@cavium.com
    
    Reviewed-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Jessica Yu <jeyu@redhat.com>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)
    Tested-by: Sachin Sant <sachinp@linux.vnet.ibm.com>
    Signed-off-by: David Daney <david.daney@cavium.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f348a1030eb6d1d1f569a316667719c2280f14e4
Author: Sean Young <sean@mess.org>
Date:   Mon Feb 13 10:35:44 2017 -0200

    lirc: fix dead lock between open and wakeup_filter
    
    
    [ Upstream commit db5b15b74ed9a5c04bb808d18ffa2c773f5c18c0 ]
    
    The locking in lirc needs improvement, but for now just fix this potential
    deadlock.
    
    ======================================================
    [ INFO: possible circular locking dependency detected ]
    4.10.0-rc1+ #1 Not tainted
    -------------------------------------------------------
    bash/2502 is trying to acquire lock:
     (ir_raw_handler_lock){+.+.+.}, at: [<ffffffffc06f6a5e>] ir_raw_encode_scancode+0x3e/0xb0 [rc_core]
    
                   but task is already holding lock:
     (&dev->lock){+.+.+.}, at: [<ffffffffc06f511f>] store_filter+0x9f/0x240 [rc_core]
    
                   which lock already depends on the new lock.
    
                   the existing dependency chain (in reverse order) is:
    
                   -> #2 (&dev->lock){+.+.+.}:
    
    [<ffffffffa110adad>] lock_acquire+0xfd/0x200
    [<ffffffffa1921327>] mutex_lock_nested+0x77/0x6d0
    [<ffffffffc06f436a>] rc_open+0x2a/0x80 [rc_core]
    [<ffffffffc07114ca>] lirc_dev_fop_open+0xda/0x1e0 [lirc_dev]
    [<ffffffffa12975e0>] chrdev_open+0xb0/0x210
    [<ffffffffa128eb5a>] do_dentry_open+0x20a/0x2f0
    [<ffffffffa128ffcc>] vfs_open+0x4c/0x80
    [<ffffffffa12a35ec>] path_openat+0x5bc/0xc00
    [<ffffffffa12a5271>] do_filp_open+0x91/0x100
    [<ffffffffa12903f0>] do_sys_open+0x130/0x220
    [<ffffffffa12904fe>] SyS_open+0x1e/0x20
    [<ffffffffa19278c1>] entry_SYSCALL_64_fastpath+0x1f/0xc2
                   -> #1 (lirc_dev_lock){+.+.+.}:
    [<ffffffffa110adad>] lock_acquire+0xfd/0x200
    [<ffffffffa1921327>] mutex_lock_nested+0x77/0x6d0
    [<ffffffffc0711f47>] lirc_register_driver+0x67/0x59b [lirc_dev]
    [<ffffffffc06db7f4>] ir_lirc_register+0x1f4/0x260 [ir_lirc_codec]
    [<ffffffffc06f6cac>] ir_raw_handler_register+0x7c/0xb0 [rc_core]
    [<ffffffffc0398010>] 0xffffffffc0398010
    [<ffffffffa1002192>] do_one_initcall+0x52/0x1b0
    [<ffffffffa11ef5c8>] do_init_module+0x5f/0x1fa
    [<ffffffffa11566b5>] load_module+0x2675/0x2b00
    [<ffffffffa1156dcf>] SYSC_finit_module+0xdf/0x110
    [<ffffffffa1156e1e>] SyS_finit_module+0xe/0x10
    [<ffffffffa1003f5c>] do_syscall_64+0x6c/0x1f0
    [<ffffffffa1927989>] return_from_SYSCALL_64+0x0/0x7a
                   -> #0 (ir_raw_handler_lock){+.+.+.}:
    [<ffffffffa110a7b7>] __lock_acquire+0x10f7/0x1290
    [<ffffffffa110adad>] lock_acquire+0xfd/0x200
    [<ffffffffa1921327>] mutex_lock_nested+0x77/0x6d0
    [<ffffffffc06f6a5e>] ir_raw_encode_scancode+0x3e/0xb0 [rc_core]
    [<ffffffffc0b0f492>] loop_set_wakeup_filter+0x62/0xbd [rc_loopback]
    [<ffffffffc06f522a>] store_filter+0x1aa/0x240 [rc_core]
    [<ffffffffa15e46f8>] dev_attr_store+0x18/0x30
    [<ffffffffa13318e5>] sysfs_kf_write+0x45/0x60
    [<ffffffffa1330b55>] kernfs_fop_write+0x155/0x1e0
    [<ffffffffa1290797>] __vfs_write+0x37/0x160
    [<ffffffffa12921f8>] vfs_write+0xc8/0x1e0
    [<ffffffffa12936e8>] SyS_write+0x58/0xc0
    [<ffffffffa19278c1>] entry_SYSCALL_64_fastpath+0x1f/0xc2
    
                   other info that might help us debug this:
    
    Chain exists of:
                     ir_raw_handler_lock --> lirc_dev_lock --> &dev->lock
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&dev->lock);
                                   lock(lirc_dev_lock);
                                   lock(&dev->lock);
      lock(ir_raw_handler_lock);
    
                    *** DEADLOCK ***
    
    4 locks held by bash/2502:
     #0:  (sb_writers#4){.+.+.+}, at: [<ffffffffa12922c5>] vfs_write+0x195/0x1e0
     #1:  (&of->mutex){+.+.+.}, at: [<ffffffffa1330b1f>] kernfs_fop_write+0x11f/0x1e0
     #2:  (s_active#215){.+.+.+}, at: [<ffffffffa1330b28>] kernfs_fop_write+0x128/0x1e0
     #3:  (&dev->lock){+.+.+.}, at: [<ffffffffc06f511f>] store_filter+0x9f/0x240 [rc_core]
    
                   stack backtrace:
    CPU: 3 PID: 2502 Comm: bash Not tainted 4.10.0-rc1+ #1
    Hardware name:                  /DG45ID, BIOS IDG4510H.86A.0135.2011.0225.1100 02/25/2011
    Call Trace:
     dump_stack+0x86/0xc3
     print_circular_bug+0x1be/0x210
     __lock_acquire+0x10f7/0x1290
     lock_acquire+0xfd/0x200
     ? ir_raw_encode_scancode+0x3e/0xb0 [rc_core]
     ? ir_raw_encode_scancode+0x3e/0xb0 [rc_core]
     mutex_lock_nested+0x77/0x6d0
     ? ir_raw_encode_scancode+0x3e/0xb0 [rc_core]
     ? loop_set_wakeup_filter+0x44/0xbd [rc_loopback]
     ir_raw_encode_scancode+0x3e/0xb0 [rc_core]
     loop_set_wakeup_filter+0x62/0xbd [rc_loopback]
     ? loop_set_tx_duty_cycle+0x70/0x70 [rc_loopback]
     store_filter+0x1aa/0x240 [rc_core]
     dev_attr_store+0x18/0x30
     sysfs_kf_write+0x45/0x60
     kernfs_fop_write+0x155/0x1e0
     __vfs_write+0x37/0x160
     ? rcu_read_lock_sched_held+0x4a/0x80
     ? rcu_sync_lockdep_assert+0x2f/0x60
     ? __sb_start_write+0x10c/0x220
     ? vfs_write+0x195/0x1e0
     ? security_file_permission+0x3b/0xc0
     vfs_write+0xc8/0x1e0
     SyS_write+0x58/0xc0
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ae7408c4352747e0f5e4fde32bf1c692e38baea
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Sun Nov 27 13:46:20 2016 +1100

    powerpc: Fix compiling a BE kernel with a powerpc64le toolchain
    
    
    [ Upstream commit 4dc831aa88132f835cefe876aa0206977c4d7710 ]
    
    GCC can compile with either endian, but the default ABI version is set
    based on the default endianness of the toolchain. Alan Modra says:
    
      you need both -mbig and -mabi=elfv1 to make a powerpc64le gcc
      generate powerpc64 code
    
    The opposite is true for powerpc64 when generating -mlittle it
    requires -mabi=elfv2 to generate v2 ABI, which we were already doing.
    
    This change adds ABI annotations together with endianness for all cases,
    LE and BE. This fixes the case of building a BE kernel with a toolchain
    that is LE by default.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Tested-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd662c8e51a1056407f851a02c08e1a74a3f9d0c
Author: Sachin Sant <sachinp@linux.vnet.ibm.com>
Date:   Sun Feb 26 11:38:39 2017 +0530

    selftest/powerpc: Fix false failures for skipped tests
    
    
    [ Upstream commit a6d8a21596df041f36f4c2ccc260c459e3e851f1 ]
    
    Tests under alignment subdirectory are skipped when executed on previous
    generation hardware, but harness still marks them as failed.
    
      test: test_copy_unaligned
      tags: git_version:unknown
      [SKIP] Test skipped on line 26
      skip: test_copy_unaligned
      selftests: copy_unaligned [FAIL]
    
    The MAGIC_SKIP_RETURN_VALUE value assigned to rc variable is retained till
    the program exit which causes the test to be marked as failed.
    
    This patch resets the value before returning to the main() routine.
    With this patch the test o/p is as follows:
    
      test: test_copy_unaligned
      tags: git_version:unknown
      [SKIP] Test skipped on line 26
      skip: test_copy_unaligned
      selftests: copy_unaligned [PASS]
    
    Signed-off-by: Sachin Sant <sachinp@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bf8f6e7205ab20884dcf249f59ae8a9309f5c98
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Mon Feb 27 14:32:41 2017 +1100

    powerpc/64: Invalidate process table caching after setting process table
    
    
    [ Upstream commit 7a70d7288c926ae88e0c773fbb506aa374e99c2d ]
    
    The POWER9 MMU reads and caches entries from the process table.
    When we kexec from one kernel to another, the second kernel sets
    its process table pointer but doesn't currently do anything to
    make the CPU invalidate any cached entries from the old process table.
    This adds a tlbie (TLB invalidate entry) instruction with parameters
    to invalidate caching of the process table after the new process
    table is installed.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c6ebeb4087e1765ae2ee2aea048a9b37a3a8ca8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Mar 1 21:10:17 2017 +0100

    x86/hpet: Prevent might sleep splat on resume
    
    
    [ Upstream commit bb1a2c26165640ba2cbcfe06c81e9f9d6db4e643 ]
    
    Sergey reported a might sleep warning triggered from the hpet resume
    path. It's caused by the call to disable_irq() from interrupt disabled
    context.
    
    The problem with the low level resume code is that it is not accounted as a
    special system_state like we do during the boot process. Calling the same
    code during system boot would not trigger the warning. That's inconsistent
    at best.
    
    In this particular case it's trivial to replace the disable_irq() with
    disable_hardirq() because this particular code path is solely used from
    system resume and the involved hpet interrupts can never be force threaded.
    
    Reported-and-tested-by: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: "Rafael J. Wysocki" <rjw@sisk.pl>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1703012108460.3684@nanos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e4a9ebe33a6d2908b46151d57ffa0dc68e2e195
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Mar 1 11:24:35 2017 +0100

    sched/fair: Make select_idle_cpu() more aggressive
    
    
    [ Upstream commit 4c77b18cf8b7ab37c7d5737b4609010d2ceec5f0 ]
    
    Kitsunyan reported desktop latency issues on his Celeron 887 because
    of commit:
    
      1b568f0aabf2 ("sched/core: Optimize SCHED_SMT")
    
    ... even though his CPU doesn't do SMT.
    
    The effect of running the SMT code on a !SMT part is basically a more
    aggressive select_idle_cpu(). Removing the avg condition fixed things
    for him.
    
    I also know FB likes this test gone, even though other workloads like
    having it.
    
    For now, take it out by default, until we get a better idea.
    
    Reported-by: kitsunyan <kitsunyan@inbox.ru>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Chris Mason <clm@fb.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Mike Galbraith <umgwanakikbuti@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29dc610cfc7c2df653c25b798513ed9cc9b16e4b
Author: Andrew Banman <abanman@hpe.com>
Date:   Fri Feb 17 11:07:49 2017 -0600

    x86/platform/uv/BAU: Fix HUB errors by remove initial write to sw-ack register
    
    
    [ Upstream commit 1b17c6df852851b40c3c27c66b8fa2fd99cf25d8 ]
    
    Writing to the software acknowledge clear register when there are no
    pending messages causes a HUB error to assert. The original intent of this
    write was to clear the pending bits before start of operation, but this is
    an incorrect method and has been determined to be unnecessary.
    
    Signed-off-by: Andrew Banman <abanman@hpe.com>
    Acked-by: Mike Travis <mike.travis@hpe.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: akpm@linux-foundation.org
    Cc: rja@hpe.com
    Cc: sivanich@hpe.com
    Link: http://lkml.kernel.org/r/1487351269-181133-1-git-send-email-abanman@hpe.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2cb09597b1f1f9cf2a515e47b54bd9bd37e4df4
Author: Dmitry Safonov <0x7f454c46@gmail.com>
Date:   Mon Feb 13 13:13:36 2017 +0300

    x86/selftests: Add clobbers for int80 on x86_64
    
    
    [ Upstream commit 2a4d0c627f5374f365a873dea4e10ae0bb437680 ]
    
    Kernel erases R8..R11 registers prior returning to userspace
    from int80:
    
      https://lkml.org/lkml/2009/10/1/164
    
    GCC can reuse these registers and doesn't expect them to change
    during syscall invocation. I met this kind of bug in CRIU once
    GCC 6.1 and CLANG stored local variables in those registers
    and the kernel zerofied them during syscall:
    
      https://github.com/xemul/criu/commit/990d33f1a1cdd17bca6c2eb059ab3be2564f7fa2
    
    By that reason I suggest to add those registers to clobbers
    in selftests.  Also, as noted by Andy - removed unneeded clobber
    for flags in INT $0x80 inline asm.
    
    Signed-off-by: Dmitry Safonov <dsafonov@virtuozzo.com>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Cc: 0x7f454c46@gmail.com
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kselftest@vger.kernel.org
    Link: http://lkml.kernel.org/r/20170213101336.20486-1-dsafonov@virtuozzo.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93247ff1fafe4ab5111942d3e44efac139346497
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Sat Feb 11 14:02:49 2017 +0100

    ARM: OMAP2+: gpmc-onenand: propagate error on initialization failure
    
    
    [ Upstream commit 7807e086a2d1f69cc1a57958cac04fea79fc2112 ]
    
    gpmc_probe_onenand_child returns success even on gpmc_onenand_init
    failure. Fix that.
    
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Acked-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f14f6fabfb54defc4224cc8d8b008af2d45cfd94
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Feb 15 11:38:58 2017 +0100

    vti6: Don't report path MTU below IPV6_MIN_MTU.
    
    
    [ Upstream commit e3dc847a5f85b43ee2bfc8eae407a7e383483228 ]
    
    In vti6_xmit(), the check for IPV6_MIN_MTU before we
    send a ICMPV6_PKT_TOOBIG message is missing. So we might
    report a PMTU below 1280. Fix this by adding the required
    check.
    
    Fixes: ccd740cbc6e ("vti6: Add pmtu handling to vti6_xmit.")
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d4d0a95437efc94c3b10a2ea04a81e5e3863dfb
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Feb 16 01:43:58 2017 +0100

    ARM: 8657/1: uaccess: consistently check object sizes
    
    
    [ Upstream commit 32b143637e8180f5d5cea54320c769210dea4f19 ]
    
    In commit 76624175dcae ("arm64: uaccess: consistently check object sizes"),
    the object size checks are moved outside the access_ok() so that bad
    destinations are detected before hitting the "memset(dest, 0, size)" in the
    copy_from_user() failure path.
    
    This makes the same change for arm, with attention given to possibly
    extracting the uaccess routines into a common header file for all
    architectures in the future.
    
    Suggested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c4615c853fa7969755f7b0e8bcfaaa2ec264243
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Thu Dec 7 23:23:42 2017 -0500

    Revert "spi: SPI_FSL_DSPI should depend on HAS_DMA"
    
    
    This reverts commit dadab2d4e3cf708ceba22ecddd94aedfecb39199.
    
    Not required on < 4.10.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6c15a7c6e79da70b1dd0b3a7b12cb979a329c97
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Thu Dec 7 23:21:06 2017 -0500

    Revert "drm/armada: Fix compile fail"
    
    
    This reverts commit 82f260d472c3b4dbb7324624e395c3e91f73a040.
    
    Not required on < 4.10.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a53078b9357bccfb2f1e30ee0f3dc174ab740d3
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:23 2017 -0700

    mm: drop unused pmdp_huge_get_and_clear_notify()
    
    commit c0c379e2931b05facef538e53bf3b21f283d9a0b upstream.
    
    Dave noticed that after fixing MADV_DONTNEED vs numa balancing race the
    last pmdp_huge_get_and_clear_notify() user is gone.
    
    Let's drop the helper.
    
    Link: http://lkml.kernel.org/r/20170306112047.24809-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [jwang: adjust context for 4.9]
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2edc33d4abfbdedcfb068d86dffd216f6fca69f
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:20 2017 -0700

    thp: fix MADV_DONTNEED vs. numa balancing race
    
    commit ced108037c2aa542b3ed8b7afd1576064ad1362a upstream.
    
    In case prot_numa, we are under down_read(mmap_sem).  It's critical to
    not clear pmd intermittently to avoid race with MADV_DONTNEED which is
    also under down_read(mmap_sem):
    
            CPU0:                           CPU1:
                                    change_huge_pmd(prot_numa=1)
                                     pmdp_huge_get_and_clear_notify()
    madvise_dontneed()
     zap_pmd_range()
      pmd_trans_huge(*pmd) == 0 (without ptl)
      // skip the pmd
                                     set_pmd_at();
                                     // pmd is re-established
    
    The race makes MADV_DONTNEED miss the huge pmd and don't clear it
    which may break userspace.
    
    Found by code analysis, never saw triggered.
    
    Link: http://lkml.kernel.org/r/20170302151034.27829-3-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [jwang: adjust context for 4.9 ]
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bdd685cef4b4ae665970f330bb426f85c2be029
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:17 2017 -0700

    thp: reduce indentation level in change_huge_pmd()
    
    commit 0a85e51d37645e9ce57e5e1a30859e07810ed07c upstream.
    
    Patch series "thp: fix few MADV_DONTNEED races"
    
    For MADV_DONTNEED to work properly with huge pages, it's critical to not
    clear pmd intermittently unless you hold down_write(mmap_sem).
    
    Otherwise MADV_DONTNEED can miss the THP which can lead to userspace
    breakage.
    
    See example of such race in commit message of patch 2/4.
    
    All these races are found by code inspection.  I haven't seen them
    triggered.  I don't think it's worth to apply them to stable@.
    
    This patch (of 4):
    
    Restructure code in preparation for a fix.
    
    Link: http://lkml.kernel.org/r/20170302151034.27829-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [jwang: adjust context for 4.9]
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bcb9c842a5362bba61383cbb22799f2f0ce63a7
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Nov 27 11:22:42 2017 +0000

    ARM: avoid faulting on qemu
    
    commit 3aaf33bebda8d4ffcc0fc8ef39e6c1ac68823b11 upstream.
    
    When qemu starts a kernel in a bare environment, the default SCR has
    the AW and FW bits clear, which means that the kernel can't modify
    the PSR A or PSR F bits, and means that FIQs and imprecise aborts are
    always masked.
    
    When running uboot under qemu, the AW and FW SCR bits are set, and the
    kernel functions normally - and this is how real hardware behaves.
    
    Fix this for qemu by ignoring the FIQ bit.
    
    Fixes: 8bafae202c82 ("ARM: BUG if jumping to usermode address in kernel mode")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6192f870abf25d6bb83cb5cb85b072b5dcc40ba4
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Nov 24 23:49:34 2017 +0000

    ARM: BUG if jumping to usermode address in kernel mode
    
    commit 8bafae202c82dc257f649ea3c275a0f35ee15113 upstream.
    
    Detect if we are returning to usermode via the normal kernel exit paths
    but the saved PSR value indicates that we are in kernel mode.  This
    could occur due to corrupted stack state, which has been observed with
    "ftracetest".
    
    This ensures that we catch the problem case before we get to user code.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 112b8a8f558de4004c2a0f7a6d04aba3520fd4ff
Author: John Keeping <john@metanate.com>
Date:   Mon Nov 27 18:15:40 2017 +0000

    usb: f_fs: Force Reserved1=1 in OS_DESC_EXT_COMPAT
    
    commit a3acc696085e112733d191a77b106e67a4fa110b upstream.
    
    The specification says that the Reserved1 field in OS_DESC_EXT_COMPAT
    must have the value "1", but when this feature was first implemented we
    rejected any non-zero values.
    
    This was adjusted to accept all non-zero values (while now rejecting
    zero) in commit 53642399aa71 ("usb: gadget: f_fs: Fix wrong check on
    reserved1 of OS_DESC_EXT_COMPAT"), but that breaks any userspace
    programs that worked previously by returning EINVAL when Reserved1 == 0
    which was previously the only value that succeeded!
    
    If we just set the field to "1" ourselves, both old and new userspace
    programs continue to work correctly and, as a bonus, old programs are
    now compliant with the specification without having to fix anything
    themselves.
    
    Fixes: 53642399aa71 ("usb: gadget: f_fs: Fix wrong check on reserved1 of OS_DESC_EXT_COMPAT")
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47ab72034e9d7abf4538bf4580610cff8aaa576c
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:43 2017 +0200

    crypto: talitos - fix ctr-aes-talitos
    
    commit 70d355ccea899dad47dc22d3a4406998f55143fd upstream.
    
    ctr-aes-talitos test fails as follows on SEC2
    
    [    0.837427] alg: skcipher: Test 1 failed (invalid result) on encryption for ctr-aes-talitos
    [    0.845763] 00000000: 16 36 d5 ee 34 f8 06 25 d7 7f 8e 56 ca 88 43 45
    [    0.852345] 00000010: f9 3f f7 17 2a b2 12 23 30 43 09 15 82 dd e1 97
    [    0.858940] 00000020: a7 f7 32 b5 eb 25 06 13 9a ec f5 29 25 f8 4d 66
    [    0.865366] 00000030: b0 03 5b 8e aa 9a 42 b6 19 33 8a e2 9d 65 96 95
    
    This patch fixes the descriptor type which is special for CTR AES
    
    Fixes: 5e75ae1b3cef6 ("crypto: talitos - add new crypto modes")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24ab6e7f6b6199964331eda3928a3dafdd20adbe
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:41 2017 +0200

    crypto: talitos - fix use of sg_link_tbl_len
    
    commit fbb22137c4d9bab536958b152d096fb3f98020ea upstream.
    
    sg_link_tbl_len shall be used instead of cryptlen, otherwise
    SECs which perform HW CICV verification will fail.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bf30e664221488800acc9b9cbe7b0059865f02d
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:39 2017 +0200

    crypto: talitos - fix AEAD for sha224 on non sha224 capable chips
    
    commit 6cda075aff67a1b9b5ba1b2818091dc939643b6c upstream.
    
    sha224 AEAD test fails with:
    
    [    2.803125] talitos ff020000.crypto: DEUISR 0x00000000_00000000
    [    2.808743] talitos ff020000.crypto: MDEUISR 0x80100000_00000000
    [    2.814678] talitos ff020000.crypto: DESCBUF 0x20731f21_00000018
    [    2.820616] talitos ff020000.crypto: DESCBUF 0x0628d64c_00000010
    [    2.826554] talitos ff020000.crypto: DESCBUF 0x0631005c_00000018
    [    2.832492] talitos ff020000.crypto: DESCBUF 0x0628d664_00000008
    [    2.838430] talitos ff020000.crypto: DESCBUF 0x061b13a0_00000080
    [    2.844369] talitos ff020000.crypto: DESCBUF 0x0631006c_00000080
    [    2.850307] talitos ff020000.crypto: DESCBUF 0x0631006c_00000018
    [    2.856245] talitos ff020000.crypto: DESCBUF 0x063100ec_00000000
    [    2.884972] talitos ff020000.crypto: failed to reset channel 0
    [    2.890503] talitos ff020000.crypto: done overflow, internal time out, or rngu error: ISR 0x20000000_00020000
    [    2.900652] alg: aead: encryption failed on test 1 for authenc-hmac-sha224-cbc-3des-talitos: ret=22
    
    This is due to SHA224 not being supported by the HW. Allthough for
    hash we are able to init the hash context by SW, it is not
    possible for AEAD. Therefore SHA224 AEAD has to be deactivated.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 552f74cbd6ec806ab5ce45336a26cae1e015dbe2
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:37 2017 +0200

    crypto: talitos - fix setkey to check key weakness
    
    commit f384cdc4faf350fdb6ad93c5f26952b9ba7c7566 upstream.
    
    Crypto manager test report the following failures:
    [    3.061081] alg: skcipher: setkey failed on test 5 for ecb-des-talitos: flags=100
    [    3.069342] alg: skcipher-ddst: setkey failed on test 5 for ecb-des-talitos: flags=100
    [    3.077754] alg: skcipher-ddst: setkey failed on test 5 for ecb-des-talitos: flags=100
    
    This is due to setkey being expected to detect weak keys.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5272b0e1c38296d28e90af857f10159812c523f7
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:35 2017 +0200

    crypto: talitos - fix memory corruption on SEC2
    
    commit e04a61bebc5da1535b6f194b464295b8d558e2fc upstream.
    
    On SEC2, when using the old descriptors type (hmac snoop no afeu)
    for doing IPsec, the CICV out pointeur points out of the allocated
    memory.
    
    [    2.502554] =============================================================================
    [    2.510740] BUG dma-kmalloc-256 (Not tainted): Redzone overwritten
    [    2.516907] -----------------------------------------------------------------------------
    [    2.516907]
    [    2.526535] Disabling lock debugging due to kernel taint
    [    2.531845] INFO: 0xde858108-0xde85810b. First byte 0xf8 instead of 0xcc
    [    2.538549] INFO: Allocated in 0x806181a9 age=0 cpu=0 pid=58
    [    2.544229]  __kmalloc+0x374/0x564
    [    2.547649]  talitos_edesc_alloc+0x17c/0x48c
    [    2.551929]  aead_edesc_alloc+0x80/0x154
    [    2.555863]  aead_encrypt+0x30/0xe0
    [    2.559368]  __test_aead+0x5a0/0x1f3c
    [    2.563042]  test_aead+0x2c/0x110
    [    2.566371]  alg_test_aead+0x5c/0xf4
    [    2.569958]  alg_test+0x1dc/0x5a0
    [    2.573305]  cryptomgr_test+0x50/0x70
    [    2.576984]  kthread+0xd8/0x134
    [    2.580155]  ret_from_kernel_thread+0x5c/0x64
    [    2.584534] INFO: Freed in ipsec_esp_encrypt_done+0x130/0x240 age=6 cpu=0 pid=0
    [    2.591839]  ipsec_esp_encrypt_done+0x130/0x240
    [    2.596395]  flush_channel+0x1dc/0x488
    [    2.600161]  talitos2_done_4ch+0x30/0x200
    [    2.604185]  tasklet_action+0xa0/0x13c
    [    2.607948]  __do_softirq+0x148/0x6cc
    [    2.611623]  irq_exit+0xc0/0x124
    [    2.614869]  call_do_irq+0x24/0x3c
    [    2.618292]  do_IRQ+0x78/0x108
    [    2.621369]  ret_from_except+0x0/0x14
    [    2.625055]  finish_task_switch+0x58/0x350
    [    2.629165]  schedule+0x80/0x134
    [    2.632409]  schedule_preempt_disabled+0x38/0xc8
    [    2.637042]  cpu_startup_entry+0xe4/0x190
    [    2.641074]  start_kernel+0x3f4/0x408
    [    2.644741]  0x3438
    [    2.646857] INFO: Slab 0xdffbdb00 objects=9 used=1 fp=0xde8581c0 flags=0x0080
    [    2.653978] INFO: Object 0xde858008 @offset=8 fp=0xca4395df
    [    2.653978]
    [    2.661032] Redzone de858000: cc cc cc cc cc cc cc cc                          ........
    [    2.669029] Object de858008: 00 00 00 02 00 00 00 02 00 6b 6b 6b 1e 83 ea 28  .........kkk...(
    [    2.677628] Object de858018: 00 00 00 70 1e 85 80 64 ff 73 1d 21 6b 6b 6b 6b  ...p...d.s.!kkkk
    [    2.686228] Object de858028: 00 20 00 00 1e 84 17 24 00 10 00 00 1e 85 70 00  . .....$......p.
    [    2.694829] Object de858038: 00 18 00 00 1e 84 17 44 00 08 00 00 1e 83 ea 28  .......D.......(
    [    2.703430] Object de858048: 00 80 00 00 1e 84 f0 00 00 80 00 00 1e 85 70 10  ..............p.
    [    2.712030] Object de858058: 00 20 6b 00 1e 85 80 f4 6b 6b 6b 6b 00 80 02 00  . k.....kkkk....
    [    2.720629] Object de858068: 1e 84 f0 00 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  ....kkkkkkkkkkkk
    [    2.729230] Object de858078: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.737830] Object de858088: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.746429] Object de858098: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.755029] Object de8580a8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.763628] Object de8580b8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.772229] Object de8580c8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.780829] Object de8580d8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
    [    2.789430] Object de8580e8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 73 b0 ea 9f  kkkkkkkkkkkks...
    [    2.798030] Object de8580f8: e8 18 80 d6 56 38 44 c0 db e3 4f 71 f7 ce d1 d3  ....V8D...Oq....
    [    2.806629] Redzone de858108: f8 bd 3e 4f                                      ..>O
    [    2.814279] Padding de8581b0: 5a 5a 5a 5a 5a 5a 5a 5a                          ZZZZZZZZ
    [    2.822283] CPU: 0 PID: 0 Comm: swapper Tainted: G    B           4.9.50-g995be12679 #179
    [    2.831819] Call Trace:
    [    2.834301] [dffefd20] [c01aa9a8] check_bytes_and_report+0x100/0x194 (unreliable)
    [    2.841801] [dffefd50] [c01aac3c] check_object+0x200/0x530
    [    2.847306] [dffefd80] [c01ae584] free_debug_processing+0x290/0x690
    [    2.853585] [dffefde0] [c01aec8c] __slab_free+0x308/0x628
    [    2.859000] [dffefe80] [c05057f4] ipsec_esp_encrypt_done+0x130/0x240
    [    2.865378] [dffefeb0] [c05002c4] flush_channel+0x1dc/0x488
    [    2.870968] [dffeff10] [c05007a8] talitos2_done_4ch+0x30/0x200
    [    2.876814] [dffeff30] [c002fe38] tasklet_action+0xa0/0x13c
    [    2.882399] [dffeff60] [c002f118] __do_softirq+0x148/0x6cc
    [    2.887896] [dffeffd0] [c002f954] irq_exit+0xc0/0x124
    [    2.892968] [dffefff0] [c0013adc] call_do_irq+0x24/0x3c
    [    2.898213] [c0d4be00] [c000757c] do_IRQ+0x78/0x108
    [    2.903113] [c0d4be30] [c0015c08] ret_from_except+0x0/0x14
    [    2.908634] --- interrupt: 501 at finish_task_switch+0x70/0x350
    [    2.908634]     LR = finish_task_switch+0x58/0x350
    [    2.919327] [c0d4bf20] [c085e1d4] schedule+0x80/0x134
    [    2.924398] [c0d4bf50] [c085e2c0] schedule_preempt_disabled+0x38/0xc8
    [    2.930853] [c0d4bf60] [c007f064] cpu_startup_entry+0xe4/0x190
    [    2.936707] [c0d4bfb0] [c096c434] start_kernel+0x3f4/0x408
    [    2.942198] [c0d4bff0] [00003438] 0x3438
    [    2.946137] FIX dma-kmalloc-256: Restoring 0xde858108-0xde85810b=0xcc
    [    2.946137]
    [    2.954158] FIX dma-kmalloc-256: Object at 0xde858008 not freed
    
    This patch reworks the handling of the CICV out in order
    to properly handle all cases.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bde6667a7df125cbbb1b9ce197e575b0fba15338
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Fri Oct 6 15:04:33 2017 +0200

    crypto: talitos - fix AEAD test failures
    
    commit ec8c7d14acc0a477429d3a6fade5dab72c996c82 upstream.
    
    AEAD tests fail when destination SG list has more than 1 element.
    
    [    2.058752] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-aes-talitos
    [    2.066965] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: c0 43 ff 74 c0 43 ff e0 de 83 d1 20 de 84 8e 54
    00000020: de 83 d7 c4
    [    2.082138] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-aes-talitos
    [    2.090435] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: de 84 ea 58 c0 93 1a 24 de 84 e8 59 de 84 f1 20
    00000020: 00 00 00 00
    [    2.105721] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-3des-talitos
    [    2.114259] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c
    [    2.166410] alg: aead: Test 1 failed on encryption for authenc-hmac-sha1-cbc-3des-talitos
    [    2.174794] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c
    [    2.226486] alg: No test for authenc(hmac(sha224),cbc(aes)) (authenc-hmac-sha224-cbc-aes-talitos)
    [    2.236459] alg: No test for authenc(hmac(sha224),cbc(aes)) (authenc-hmac-sha224-cbc-aes-talitos)
    [    2.247196] alg: aead: Test 1 failed on encryption for authenc-hmac-sha224-cbc-3des-talitos
    [    2.255555] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8
    [    2.309004] alg: aead: Test 1 failed on encryption for authenc-hmac-sha224-cbc-3des-talitos
    [    2.317562] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8
    [    2.370710] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-aes-talitos
    [    2.379177] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    [    2.397863] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-aes-talitos
    [    2.406134] 00000000: 53 69 6e 67 6c 65 20 62 6c 6f 63 6b 20 6d 73 67
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    [    2.424789] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-3des-talitos
    [    2.433491] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8 c0 96 e9 20 c0 00 3d dc
    [    2.488832] alg: aead: Test 1 failed on encryption for authenc-hmac-sha256-cbc-3des-talitos
    [    2.497387] 00000000: 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72 73 74
    00000010: 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63 74 65
    00000020: 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65 65 72
    00000030: 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53 72 63
    00000040: 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20 63 65
    00000050: 65 72 73 74 54 20 6f 6f 4d 20 6e 61 20 79 65 53
    00000060: 72 63 74 65 20 73 6f 54 20 6f 61 4d 79 6e 53 20
    00000070: 63 65 65 72 73 74 54 20 6f 6f 4d 20 6e 61 0a 79
    00000080: c0 50 f1 ac c0 50 f3 38 c0 50 f3 94 c0 50 f5 30
    00000090: c0 99 74 3c c0 96 e5 b8 c0 96 e9 20 c0 00 3d dc
    
    This patch fixes that.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f0597ae9a382f5771690005b3d43fb4c868cd99
Author: Kim Phillips <kim.phillips@arm.com>
Date:   Wed Oct 11 22:33:24 2017 +0100

    bus: arm-ccn: fix module unloading Error: Removing state 147 which has instances left.
    
    commit b69f63ebf553504739cc8534cbed31bd530c6f0b upstream.
    
    Unregistering the driver before calling cpuhp_remove_multi_state() removes
    any remaining hotplug cpu instances so __cpuhp_remove_state_cpuslocked()
    doesn't emit this warning:
    
    [  268.748362] Error: Removing state 147 which has instances left.
    [  268.748373] ------------[ cut here ]------------
    [  268.748386] WARNING: CPU: 2 PID: 5476 at kernel/cpu.c:1734 __cpuhp_remove_state_cpuslocked+0x454/0x4f0
    [  268.748389] Modules linked in: arm_ccn(-) [last unloaded: arm_ccn]
    [  268.748403] CPU: 2 PID: 5476 Comm: rmmod Tainted: G        W       4.14.0-rc4+ #3
    [  268.748406] Hardware name: AMD Seattle/Seattle, BIOS 10:18:39 Dec  8 2016
    [  268.748410] task: ffff8001a18ca000 task.stack: ffff80019c120000
    [  268.748416] PC is at __cpuhp_remove_state_cpuslocked+0x454/0x4f0
    [  268.748421] LR is at __cpuhp_remove_state_cpuslocked+0x448/0x4f0
    [  268.748425] pc : [<ffff2000081729ec>] lr : [<ffff2000081729e0>] pstate: 60000145
    [  268.748427] sp : ffff80019c127d30
    [  268.748430] x29: ffff80019c127d30 x28: ffff8001a18ca000
    [  268.748437] x27: ffff20000c2cb000 x26: 1fffe4000042d490
    [  268.748443] x25: ffff20000216a480 x24: 0000000000000000
    [  268.748449] x23: ffff20000b08e000 x22: 0000000000000001
    [  268.748455] x21: 0000000000000093 x20: 00000000000016f8
    [  268.748460] x19: ffff20000c2cbb80 x18: 0000ffffb5fe7c58
    [  268.748466] x17: 00000000004402d0 x16: 1fffe40001864f01
    [  268.748472] x15: ffff20000c4bf8b0 x14: 0000000000000000
    [  268.748477] x13: 0000000000007032 x12: ffff20000829ae48
    [  268.748483] x11: ffff20000c4bf000 x10: 0000000000000004
    [  268.748488] x9 : 0000000000006fbc x8 : ffff20000c318a40
    [  268.748494] x7 : 0000000000000000 x6 : ffff040001864f02
    [  268.748500] x5 : 0000000000000000 x4 : 0000000000000000
    [  268.748505] x3 : 0000000000000007 x2 : dfff200000000000
    [  268.748510] x1 : 000000000000ad3d x0 : 00000000000001f0
    [  268.748516] Call trace:
    [  268.748521] Exception stack(0xffff80019c127bf0 to 0xffff80019c127d30)
    [  268.748526] 7be0:                                   00000000000001f0 000000000000ad3d
    [  268.748531] 7c00: dfff200000000000 0000000000000007 0000000000000000 0000000000000000
    [  268.748535] 7c20: ffff040001864f02 0000000000000000 ffff20000c318a40 0000000000006fbc
    [  268.748539] 7c40: 0000000000000004 ffff20000c4bf000 ffff20000829ae48 0000000000007032
    [  268.748544] 7c60: 0000000000000000 ffff20000c4bf8b0 1fffe40001864f01 00000000004402d0
    [  268.748548] 7c80: 0000ffffb5fe7c58 ffff20000c2cbb80 00000000000016f8 0000000000000093
    [  268.748553] 7ca0: 0000000000000001 ffff20000b08e000 0000000000000000 ffff20000216a480
    [  268.748557] 7cc0: 1fffe4000042d490 ffff20000c2cb000 ffff8001a18ca000 ffff80019c127d30
    [  268.748562] 7ce0: ffff2000081729e0 ffff80019c127d30 ffff2000081729ec 0000000060000145
    [  268.748566] 7d00: 00000000000001f0 0000000000000000 0001000000000000 0000000000000000
    [  268.748569] 7d20: ffff80019c127d30 ffff2000081729ec
    [  268.748575] [<ffff2000081729ec>] __cpuhp_remove_state_cpuslocked+0x454/0x4f0
    [  268.748580] [<ffff200008172adc>] __cpuhp_remove_state+0x54/0x80
    [  268.748597] [<ffff20000215dd84>] arm_ccn_exit+0x2c/0x70 [arm_ccn]
    [  268.748604] [<ffff20000834cfbc>] SyS_delete_module+0x5a4/0x708
    [  268.748607] Exception stack(0xffff80019c127ec0 to 0xffff80019c128000)
    [  268.748612] 7ec0: 0000000019bb7258 0000000000000800 ba64d0fb3d26a800 00000000000000da
    [  268.748616] 7ee0: 0000ffffb6144e28 0000ffffcd95b409 fefefefefefefeff 7f7f7f7f7f7f7f7f
    [  268.748621] 7f00: 000000000000006a 1999999999999999 0000ffffb6179000 0000000000bbcc6d
    [  268.748625] 7f20: 0000ffffb6176b98 0000ffffcd95c2d0 0000ffffb5fe7b58 0000ffffb6163000
    [  268.748630] 7f40: 0000ffffb60ad3e0 00000000004402d0 0000ffffb5fe7c58 0000000019bb71f0
    [  268.748634] 7f60: 0000ffffcd95c740 0000000000000000 0000000019bb71f0 0000000000416700
    [  268.748639] 7f80: 0000000000000000 00000000004402e8 0000000019bb6010 0000ffffcd95c748
    [  268.748643] 7fa0: 0000000000000000 0000ffffcd95c460 00000000004113a8 0000ffffcd95c460
    [  268.748648] 7fc0: 0000ffffb60ad3e8 0000000080000000 0000000019bb7258 000000000000006a
    [  268.748652] 7fe0: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [  268.748657] [<ffff200008084f9c>] __sys_trace_return+0x0/0x4
    [  268.748661] ---[ end trace a996d358dcaa7f9c ]---
    
    Fixes: 8df038725ad5 ("bus/arm-ccn: Use cpu-hp's multi instance support instead custom list")
    Signed-off-by: Kim Phillips <kim.phillips@arm.com>
    Acked-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 793eed33da5fd9745f8b62e2a93b4b4a3e36caa3
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Oct 3 18:14:12 2017 +0100

    bus: arm-ccn: Fix use of smp_processor_id() in preemptible context
    
    commit b18c2b9487d8e797fc0a757e57ac3645348c5fba upstream.
    
    Booting a DEBUG_PREEMPT enabled kernel on a CCN-based system
    results in the following splat:
    
    [...]
    arm-ccn e8000000.ccn: No access to interrupts, using timer.
    BUG: using smp_processor_id() in preemptible [00000000] code: swapper/0/1
    caller is debug_smp_processor_id+0x1c/0x28
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.13.0 #6111
    Hardware name: AMD Seattle/Seattle, BIOS 17:08:23 Jun 26 2017
    Call trace:
    [<ffff000008089e78>] dump_backtrace+0x0/0x278
    [<ffff00000808a22c>] show_stack+0x24/0x30
    [<ffff000008bc3bc4>] dump_stack+0x8c/0xb0
    [<ffff00000852b534>] check_preemption_disabled+0xfc/0x100
    [<ffff00000852b554>] debug_smp_processor_id+0x1c/0x28
    [<ffff000008551bd8>] arm_ccn_probe+0x358/0x4f0
    [...]
    
    as we use smp_processor_id() in the wrong context.
    
    Turn this into a get_cpu()/put_cpu() that extends over the CPU hotplug
    registration, making sure that we don't race against a CPU down operation.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 595aca74c67a2a6ffa78c3760a0c3027b90c36a7
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 27 11:06:50 2017 +0100

    bus: arm-ccn: Check memory allocation failure
    
    commit 24771179c5c138f0ea3ef88b7972979f62f2d5db upstream.
    
    Check memory allocation failures and return -ENOMEM in such cases
    
    This avoids a potential NULL pointer dereference.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0a2f97d03758c3d08ca68f587fe8062ff768fea
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Oct 3 18:14:13 2017 +0100

    bus: arm-cci: Fix use of smp_processor_id() in preemptible context
    
    commit 4608af8aa53e7f3922ddee695d023b7bcd5cb35b upstream.
    
    The ARM CCI driver seem to be using smp_processor_id() in a
    preemptible context, which is likely to make a DEBUG_PREMPT
    kernel scream at boot time.
    
    Turn this into a get_cpu()/put_cpu() that extends over the CPU
    hotplug registration, making sure that we don't race against
    a CPU down operation.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Pawel Moll <pawel.moll@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a39224199e97e2f49870933f8a9caaaa1edf736c
Author: Dave Martin <Dave.Martin@arm.com>
Date:   Tue Dec 5 14:56:42 2017 +0000

    arm64: fpsimd: Prevent registers leaking from dead tasks
    
    commit 071b6d4a5d343046f253a5a8835d477d93992002 upstream.
    
    Currently, loading of a task's fpsimd state into the CPU registers
    is skipped if that task's state is already present in the registers
    of that CPU.
    
    However, the code relies on the struct fpsimd_state * (and by
    extension struct task_struct *) to unambiguously identify a task.
    
    There is a particular case in which this doesn't work reliably:
    when a task exits, its task_struct may be recycled to describe a
    new task.
    
    Consider the following scenario:
    
     1) Task P loads its fpsimd state onto cpu C.
            per_cpu(fpsimd_last_state, C) := P;
            P->thread.fpsimd_state.cpu := C;
    
     2) Task X is scheduled onto C and loads its fpsimd state on C.
            per_cpu(fpsimd_last_state, C) := X;
            X->thread.fpsimd_state.cpu := C;
    
     3) X exits, causing X's task_struct to be freed.
    
     4) P forks a new child T, which obtains X's recycled task_struct.
            T == X.
            T->thread.fpsimd_state.cpu == C (inherited from P).
    
     5) T is scheduled on C.
            T's fpsimd state is not loaded, because
            per_cpu(fpsimd_last_state, C) == T (== X) &&
            T->thread.fpsimd_state.cpu == C.
    
            (This is the check performed by fpsimd_thread_switch().)
    
    So, T gets X's registers because the last registers loaded onto C
    were those of X, in (2).
    
    This patch fixes the problem by ensuring that the sched-in check
    fails in (5): fpsimd_flush_task_state(T) is called when T is
    forked, so that T->thread.fpsimd_state.cpu == C cannot be true.
    This relies on the fact that T is not schedulable until after
    copy_thread() completes.
    
    Once T's fpsimd state has been loaded on some CPU C there may still
    be other cpus D for which per_cpu(fpsimd_last_state, D) ==
    &X->thread.fpsimd_state.  But D is necessarily != C in this case,
    and the check in (5) must fail.
    
    An alternative fix would be to do refcounting on task_struct.  This
    would result in each CPU holding a reference to the last task whose
    fpsimd state was loaded there.  It's not clear whether this is
    preferable, and it involves higher overhead than the fix proposed
    in this patch.  It would also move all the task_struct freeing
    work into the context switch critical section, or otherwise some
    deferred cleanup mechanism would need to be introduced, neither of
    which seems obviously justified.
    
    Fixes: 005f78cd8849 ("arm64: defer reloading a task's FPSIMD state to userland resume")
    Signed-off-by: Dave Martin <Dave.Martin@arm.com>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [will: word-smithed the comment so it makes more sense]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7df3dbef3dd5bd1e0a7e1902aab7c5bdd8923a81
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Nov 16 17:58:18 2017 +0000

    KVM: arm/arm64: vgic-its: Check result of allocation before use
    
    commit 686f294f2f1ae40705283dd413ca1e4c14f20f93 upstream.
    
    We miss a test against NULL after allocation.
    
    Fixes: 6d03a68f8054 ("KVM: arm64: vgic-its: Turn device_id validation into generic ID validation")
    Reported-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42c3f4c55f10102b3e522ae99754a9a0ea41235d
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Nov 16 17:58:15 2017 +0000

    KVM: arm/arm64: vgic-irqfd: Fix MSI entry allocation
    
    commit 150009e2c70cc3c6e97f00e7595055765d32fb85 upstream.
    
    Using the size of the structure we're allocating is a good idea
    and avoids any surprise... In this case, we're happilly confusing
    kvm_kernel_irq_routing_entry and kvm_irq_routing_entry...
    
    Fixes: 95b110ab9a09 ("KVM: arm/arm64: Enable irqchip routing")
    Reported-by: AKASHI Takahiro <takahiro.akashi@linaro.org>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf6668d57a26e7d72d12117e9aba0c3c1578bfc5
Author: Christoffer Dall <christoffer.dall@linaro.org>
Date:   Sun Dec 3 23:54:41 2017 +0100

    KVM: arm/arm64: Fix broken GICH_ELRSR big endian conversion
    
    commit fc396e066318c0a02208c1d3f0b62950a7714999 upstream.
    
    We are incorrectly rearranging 32-bit words inside a 64-bit typed value
    for big endian systems, which would result in never marking a virtual
    interrupt as inactive on big endian systems (assuming 32 or fewer LRs on
    the hardware).  Fix this by not doing any word order manipulation for
    the typed values.
    
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ead44d4b5b8b1ecfcbd2302f15028dab7774da3
Author: Andrew Honig <ahonig@google.com>
Date:   Fri Dec 1 10:21:09 2017 -0800

    KVM: VMX: remove I/O port 0x80 bypass on Intel hosts
    
    commit d59d51f088014f25c2562de59b9abff4f42a7468 upstream.
    
    This fixes CVE-2017-1000407.
    
    KVM allows guests to directly access I/O port 0x80 on Intel hosts.  If
    the guest floods this port with writes it generates exceptions and
    instability in the host kernel, leading to a crash.  With this change
    guest writes to port 0x80 on Intel will behave the same as they
    currently behave on AMD systems.
    
    Prevent the flooding by removing the code that sets port 0x80 as a
    passthrough port.  This is essentially the same as upstream patch
    99f85a28a78e96d28907fe036e1671a218fee597, except that patch was
    for AMD chipsets and this patch is for Intel.
    
    Signed-off-by: Andrew Honig <ahonig@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Fixes: fdef3ad1b386 ("KVM: VMX: Enable io bitmaps to avoid IO port 0x80 VMEXITs")
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ed459712e26acd638b85c4f06dd355960e741c2
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Nov 16 17:58:21 2017 +0000

    arm: KVM: Fix VTTBR_BADDR_MASK BUG_ON off-by-one
    
    commit 5553b142be11e794ebc0805950b2e8313f93d718 upstream.
    
    VTTBR_BADDR_MASK is used to sanity check the size and alignment of the
    VTTBR address. It seems to currently be off by one, thereby only
    allowing up to 39-bit addresses (instead of 40-bit) and also
    insufficiently checking the alignment. This patch fixes it.
    
    This patch is the 32bit pendent of Kristina's arm64 fix, and
    she deserves the actual kudos for pinpointing that one.
    
    Fixes: f7ed45be3ba52 ("KVM: ARM: World-switch implementation")
    Reported-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63fba9ff76f0ef8af6009903ccc903bd5cee9876
Author: Kristina Martsenko <kristina.martsenko@arm.com>
Date:   Thu Nov 16 17:58:20 2017 +0000

    arm64: KVM: fix VTTBR_BADDR_MASK BUG_ON off-by-one
    
    commit 26aa7b3b1c0fb3f1a6176a0c1847204ef4355693 upstream.
    
    VTTBR_BADDR_MASK is used to sanity check the size and alignment of the
    VTTBR address. It seems to currently be off by one, thereby only
    allowing up to 47-bit addresses (instead of 48-bit) and also
    insufficiently checking the alignment. This patch fixes it.
    
    As an example, with 4k pages, before this patch we have:
    
      PHYS_MASK_SHIFT = 48
      VTTBR_X = 37 - 24 = 13
      VTTBR_BADDR_SHIFT = 13 - 1 = 12
      VTTBR_BADDR_MASK = ((1 << 35) - 1) << 12 = 0x00007ffffffff000
    
    Which is wrong, because the mask doesn't allow bit 47 of the VTTBR
    address to be set, and only requires the address to be 12-bit (4k)
    aligned, while it actually needs to be 13-bit (8k) aligned because we
    concatenate two 4k tables.
    
    With this patch, the mask becomes 0x0000ffffffffe000, which is what we
    want.
    
    Fixes: 0369f6a34b9f ("arm64: KVM: EL2 register definitions")
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 730810d9232714ece9410d0e091455ba71624696
Author: Laurent Caumont <lcaumont2@gmail.com>
Date:   Sat Nov 11 12:44:46 2017 -0500

    media: dvb: i2c transfers over usb cannot be done from stack
    
    commit 6d33377f2abbf9f0e561b116dd468d1c3ff36a6a upstream.
    
    Signed-off-by: Laurent Caumont <lcaumont2@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f128c8aa35b81f418617c2eab7edd807908cbf1
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Nov 22 14:14:47 2017 +0100

    drm/exynos: gem: Drop NONCONTIG flag for buffers allocated without IOMMU
    
    commit 120a264f9c2782682027d931d83dcbd22e01da80 upstream.
    
    When no IOMMU is available, all GEM buffers allocated by Exynos DRM driver
    are contiguous, because of the underlying dma_alloc_attrs() function
    provides only such buffers. In such case it makes no sense to keep
    BO_NONCONTIG flag for the allocated GEM buffers. This allows to avoid
    failures for buffer contiguity checks in the subsequent operations on GEM
    objects.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30b18ee253a09a36d43a1e126b124296b0d649a7
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Mon Mar 2 14:13:36 2015 +0000

    kdb: Fix handling of kallsyms_symbol_next() return value
    
    commit c07d35338081d107e57cf37572d8cc931a8e32e2 upstream.
    
    kallsyms_symbol_next() returns a boolean (true on success). Currently
    kdb_read() tests the return value with an inequality that
    unconditionally evaluates to true.
    
    This is fixed in the obvious way and, since the conditional branch is
    supposed to be unreachable, we also add a WARN_ON().
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a70f07da85313aa817c0888d2b623ea30cbbbe5
Author: Arend Van Spriel <arend.vanspriel@broadcom.com>
Date:   Sat Nov 25 21:39:25 2017 +0100

    brcmfmac: change driver unbind order of the sdio function devices
    
    commit 5c3de777bdaf48bd0cfb43097c0d0fb85056cab7 upstream.
    
    In the function brcmf_sdio_firmware_callback() the driver is
    unbound from the sdio function devices in the error path.
    However, the order in which it is done resulted in a use-after-free
    issue (see brcmf_ops_sdio_remove() in bcmsdh.c). Hence change
    the order and first unbind sdio function #2 device and then
    unbind sdio function #1 device.
    
    Fixes: 7a51461fc2da ("brcmfmac: unbind all devices upon failure in firmware callback")
    Reported-by: Stefan Wahren <stefan.wahren@i2se.com>
    Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
    Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
    Reviewed-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8950c982fffd9700ca7ef2fc2586638e47669f19
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Dec 6 18:21:14 2017 +1000

    powerpc/64s: Initialize ISAv3 MMU registers before setting partition table
    
    commit 371b80447ff33ddac392c189cf884a5a3e18faeb upstream.
    
    kexec can leave MMU registers set when booting into a new kernel,
    the PIDR (Process Identification Register) in particular. The boot
    sequence does not zero PIDR, so it only gets set when CPUs first
    switch to a userspace processes (until then it's running a kernel
    thread with effective PID = 0).
    
    This leaves a window where a process table entry and page tables are
    set up due to user processes running on other CPUs, that happen to
    match with a stale PID. The CPU with that PID may cause speculative
    accesses that address quadrant 0 (aka userspace addresses), which will
    result in cached translations and PWC (Page Walk Cache) for that
    process, on a CPU which is not in the mm_cpumask and so they will not
    be invalidated properly.
    
    The most common result is the kernel hanging in infinite page fault
    loops soon after kexec (usually in schedule_tail, which is usually the
    first non-speculative quadrant 0 access to a new PID) due to a stale
    PWC. However being a stale translation error, it could result in
    anything up to security and data corruption problems.
    
    Fix this by zeroing out PIDR at boot and kexec.
    
    Fixes: 7e381c0ff618 ("powerpc/mm/radix: Add mmu context handling callback for radix")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffb17c0cce843d2a07db0765b30ee754c9ef3bec
Author: Janosch Frank <frankja@linux.vnet.ibm.com>
Date:   Mon Dec 4 12:19:11 2017 +0100

    KVM: s390: Fix skey emulation permission check
    
    commit ca76ec9ca871e67d8cd0b6caba24aca3d3ac4546 upstream.
    
    All skey functions call skey_check_enable at their start, which checks
    if we are in the PSTATE and injects a privileged operation exception
    if we are.
    
    Unfortunately they continue processing afterwards and perform the
    operation anyhow as skey_check_enable does not deliver an error if the
    exception injection was successful.
    
    Let's move the PSTATE check into the skey functions and exit them on
    such an occasion, also we now do not enable skey handling anymore in
    such a case.
    
    Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: a7e19ab ("KVM: s390: handle missing storage-key facility")
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Thomas Huth <thuth@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd6a7055b84bf53b2937d4f99005a0f1beadcbe9
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Wed Dec 6 16:11:27 2017 +0100

    s390: fix compat system call table
    
    commit e779498df587dd2189b30fe5b9245aefab870eb8 upstream.
    
    When wiring up the socket system calls the compat entries were
    incorrectly set. Not all of them point to the corresponding compat
    wrapper functions, which clear the upper 33 bits of user space
    pointers, like it is required.
    
    Fixes: 977108f89c989 ("s390: wire up separate socketcalls system calls")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff3d4fd5374f62a322dba722f23cb3250dcebb4e
Author: Lai Jiangshan <jiangshanlai@gmail.com>
Date:   Tue Nov 28 21:19:53 2017 +0800

    smp/hotplug: Move step CPUHP_AP_SMPCFD_DYING to the correct place
    
    commit 46febd37f9c758b05cd25feae8512f22584742fe upstream.
    
    Commit 31487f8328f2 ("smp/cfd: Convert core to hotplug state machine")
    accidently put this step on the wrong place. The step should be at the
    cpuhp_ap_states[] rather than the cpuhp_bp_states[].
    
    grep smpcfd /sys/devices/system/cpu/hotplug/states
     40: smpcfd:prepare
    129: smpcfd:dying
    
    "smpcfd:dying" was missing before.
    So was the invocation of the function smpcfd_dying_cpu().
    
    Fixes: 31487f8328f2 ("smp/cfd: Convert core to hotplug state machine")
    Signed-off-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lkml.kernel.org/r/20171128131954.81229-1-jiangshanlai@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e17f2b51617dfa528e97ae81b4ea084f511585a4
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Sep 28 15:14:01 2017 +0100

    iommu/vt-d: Fix scatterlist offset handling
    
    commit 29a90b70893817e2f2bb3cea40a29f5308e21b21 upstream.
    
    The intel-iommu DMA ops fail to correctly handle scatterlists where
    sg->offset is greater than PAGE_SIZE - the IOVA allocation is computed
    appropriately based on the page-aligned portion of the offset, but the
    mapping is set up relative to sg->page, which means it fails to actually
    cover the whole buffer (and in the worst case doesn't cover it at all):
    
        (sg->dma_address + sg->dma_len) ----+
        sg->dma_address ---------+          |
        iov_pfn------+           |          |
                     |           |          |
                     v           v          v
    iova:   a        b        c        d        e        f
            |--------|--------|--------|--------|--------|
                              <...calculated....>
                     [_____mapped______]
    pfn:    0        1        2        3        4        5
            |--------|--------|--------|--------|--------|
                     ^           ^          ^
                     |           |          |
        sg->page ----+           |          |
        sg->offset --------------+          |
        (sg->offset + sg->length) ----------+
    
    As a result, the caller ends up overrunning the mapping into whatever
    lies beyond, which usually goes badly:
    
    [  429.645492] DMAR: DRHD: handling fault status reg 2
    [  429.650847] DMAR: [DMA Write] Request device [02:00.4] fault addr f2682000 ...
    
    Whilst this is a fairly rare occurrence, it can happen from the result
    of intermediate scatterlist processing such as scatterwalk_ffwd() in the
    crypto layer. Whilst that particular site could be fixed up, it still
    seems worthwhile to bring intel-iommu in line with other DMA API
    implementations in handling this robustly.
    
    To that end, fix the intel_map_sg() path to line up the mapping
    correctly (in units of MM pages rather than VT-d pages to match the
    aligned_nrpages() calculation) regardless of the offset, and use
    sg_phys() consistently for clarity.
    
    Reported-by: Harsh Jain <Harsh@chelsio.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed by: Ashok Raj <ashok.raj@intel.com>
    Tested by: Jacob Pan <jacob.jun.pan@intel.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 173c8c346587cfdca49f73b6cc2ac6500f425112
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:49 2017 +0900

    ALSA: usb-audio: Add check return value for usb_string()
    
    commit 89b89d121ffcf8d9546633b98ded9d18b8f75891 upstream.
    
    snd_usb_copy_string_desc() returns zero if usb_string() fails.
    In case of failure, we need to check the snd_usb_copy_string_desc()'s
    return value and add an exception case
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c40457c952ecd218731a81aab33c422491f557a0
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:48 2017 +0900

    ALSA: usb-audio: Fix out-of-bound error
    
    commit 251552a2b0d454badc8f486e6d79100970c744b0 upstream.
    
    The snd_usb_copy_string_desc() retrieves the usb string corresponding to
    the index number through the usb_string(). The problem is that the
    usb_string() returns the length of the string (>= 0) when successful, but
    it can also return a negative value about the error case or status of
    usb_control_msg().
    
    If iClockSource is '0' as shown below, usb_string() will returns -EINVAL.
    This will result in '0' being inserted into buf[-22], and the following
    KASAN out-of-bound error message will be output.
    
    AudioControl Interface Descriptor:
      bLength                 8
      bDescriptorType        36
      bDescriptorSubtype     10 (CLOCK_SOURCE)
      bClockID                1
      bmAttributes         0x07 Internal programmable Clock (synced to SOF)
      bmControls           0x07
      Clock Frequency Control (read/write)
      Clock Validity Control (read-only)
      bAssocTerminal          0
      iClockSource            0
    
    To fix it, check usb_string()'return value and bail out.
    
    ==================================================================
    BUG: KASAN: stack-out-of-bounds in parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    Write of size 1 at addr ffff88007e66735a by task systemd-udevd/18376
    
    CPU: 0 PID: 18376 Comm: systemd-udevd Not tainted 4.13.0+ #3
    Hardware name: LG Electronics                   15N540-RFLGL/White Tip Mountain, BIOS 15N5
    Call Trace:
    dump_stack+0x63/0x8d
    print_address_description+0x70/0x290
    ? parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    kasan_report+0x265/0x350
    __asan_store1+0x4a/0x50
    parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    ? save_stack+0xb5/0xd0
    ? save_stack_trace+0x1b/0x20
    ? save_stack+0x46/0xd0
    ? kasan_kmalloc+0xad/0xe0
    ? kmem_cache_alloc_trace+0xff/0x230
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? usb_probe_interface+0x1f5/0x440
    ? driver_probe_device+0x3ed/0x660
    ? build_feature_ctl+0xb10/0xb10 [snd_usb_audio]
    ? save_stack_trace+0x1b/0x20
    ? init_object+0x69/0xa0
    ? snd_usb_find_csint_desc+0xa8/0xf0 [snd_usb_audio]
    snd_usb_mixer_controls+0x1dc/0x370 [snd_usb_audio]
    ? build_audio_procunit+0x890/0x890 [snd_usb_audio]
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? kmem_cache_alloc_trace+0xff/0x230
    ? usb_ifnum_to_if+0xbd/0xf0
    snd_usb_create_mixer+0x25b/0x4b0 [snd_usb_audio]
    ? snd_usb_create_stream+0x255/0x2c0 [snd_usb_audio]
    usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? snd_usb_autosuspend.part.7+0x30/0x30 [snd_usb_audio]
    ? __pm_runtime_idle+0x90/0x90
    ? kernfs_activate+0xa6/0xc0
    ? usb_match_one_id_intf+0xdc/0x130
    ? __pm_runtime_set_status+0x2d4/0x450
    usb_probe_interface+0x1f5/0x440
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20ca63e0968ed1614fa91c836eee8f61d7f54c7e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 30 10:08:28 2017 +0100

    ALSA: seq: Remove spurious WARN_ON() at timer check
    
    commit 43a3542870328601be02fcc9d27b09db467336ef upstream.
    
    The use of snd_BUG_ON() in ALSA sequencer timer may lead to a spurious
    WARN_ON() when a slave timer is deployed as its backend and a
    corresponding master timer stops meanwhile.  The symptom was triggered
    by syzkaller spontaneously.
    
    Since the NULL timer is valid there, rip off snd_BUG_ON().
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45ddff3ce4e9a3d7e935d5b596686d9e176ed4a9
Author: Robb Glasser <rglasser@google.com>
Date:   Tue Dec 5 09:16:55 2017 -0800

    ALSA: pcm: prevent UAF in snd_pcm_info
    
    commit 362bca57f5d78220f8b5907b875961af9436e229 upstream.
    
    When the device descriptor is closed, the `substream->runtime` pointer
    is freed. But another thread may be in the ioctl handler, case
    SNDRV_CTL_IOCTL_PCM_INFO. This case calls snd_pcm_info_user() which
    calls snd_pcm_info() which accesses the now freed `substream->runtime`.
    
    Note: this fixes CVE-2017-0861
    
    Signed-off-by: Robb Glasser <rglasser@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8974b0320cc83b99a86d5fcca51e7c875254ec0d
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Mon Dec 4 13:11:45 2017 -0500

    btrfs: fix missing error return in btrfs_drop_snapshot
    
    commit e19182c0fff451e3744c1107d98f072e7ca377a0 upstream.
    
    If btrfs_del_root fails in btrfs_drop_snapshot, we'll pick up the
    error but then return 0 anyway due to mixing err and ret.
    
    Fixes: 79787eaab4612 ("btrfs: replace many BUG_ONs with proper error handling")
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cf0eaf88d74e54c48b4f9580332e596b9d04290
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Thu Nov 30 19:05:45 2017 +0100

    KVM: x86: fix APIC page invalidation
    
    commit b1394e745b9453dcb5b0671c205b770e87dedb87 upstream.
    
    Implementation of the unpinned APIC page didn't update the VMCS address
    cache when invalidation was done through range mmu notifiers.
    This became a problem when the page notifier was removed.
    
    Re-introduce the arch-specific helper and call it from ...range_start.
    
    Reported-by: Fabian Grünbichler <f.gruenbichler@proxmox.com>
    Fixes: 38b9917350cb ("kvm: vmx: Implement set_apic_access_page_addr")
    Fixes: 369ea8242c0f ("mm/rmap: update to new mmu_notifier semantic v2")
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Andrea Arcangeli <aarcange@redhat.com>
    Tested-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Tested-by: Fabian Grünbichler <f.gruenbichler@proxmox.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6662a55fa6eb87638eee0012e38815fe642a003b
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 1 15:08:12 2017 +0100

    x86/PCI: Make broadcom_postcore_init() check acpi_disabled
    
    commit ddec3bdee05b06f1dda20ded003c3e10e4184cab upstream.
    
    acpi_os_get_root_pointer() may return a valid address even if acpi_disabled
    is set, but the host bridge information from the ACPI tables is not going
    to be used in that case and the Broadcom host bridge initialization should
    not be skipped then, So make broadcom_postcore_init() check acpi_disabled
    too to avoid this issue.
    
    Fixes: 6361d72b04d1 (x86/PCI: read Broadcom CNB20LE host bridge info before PCI scan)
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Linux PCI <linux-pci@vger.kernel.org>
    Link: https://lkml.kernel.org/r/3186627.pxZj1QbYNg@aspire.rjw.lan
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d4696248c089854a3637265e9f8b001880e345d
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:29 2017 +0000

    X.509: fix comparisons of ->pkey_algo
    
    commit 54c1fb39fe0495f846539ab765925b008f86801c upstream.
    
    ->pkey_algo used to be an enum, but was changed to a string by commit
    4e8ae72a75aa ("X.509: Make algo identifiers text instead of enum").  But
    two comparisons were not updated.  Fix them to use strcmp().
    
    This bug broke signature verification in certain configurations,
    depending on whether the string constants were deduplicated or not.
    
    Fixes: 4e8ae72a75aa ("X.509: Make algo identifiers text instead of enum")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4f134700c2071aa7f5c3c99e6d8f4aac2b3d880
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    X.509: reject invalid BIT STRING for subjectPublicKey
    
    commit 0f30cbea005bd3077bd98cd29277d7fc2699c1da upstream.
    
    Adding a specially crafted X.509 certificate whose subjectPublicKey
    ASN.1 value is zero-length caused x509_extract_key_data() to set the
    public key size to SIZE_MAX, as it subtracted the nonexistent BIT STRING
    metadata byte.  Then, x509_cert_parse() called kmemdup() with that bogus
    size, triggering the WARN_ON_ONCE() in kmalloc_slab().
    
    This appears to be harmless, but it still must be fixed since WARNs are
    never supposed to be user-triggerable.
    
    Fix it by updating x509_cert_parse() to validate that the value has a
    BIT STRING metadata byte, and that the byte is 0 which indicates that
    the number of bits in the bitstring is a multiple of 8.
    
    It would be nice to handle the metadata byte in asn1_ber_decoder()
    instead.  But that would be tricky because in the general case a BIT
    STRING could be implicitly tagged, and/or could legitimately have a
    length that is not a whole number of bytes.
    
    Here was the WARN (cleaned up slightly):
    
        WARNING: CPU: 1 PID: 202 at mm/slab_common.c:971 kmalloc_slab+0x5d/0x70 mm/slab_common.c:971
        Modules linked in:
        CPU: 1 PID: 202 Comm: keyctl Tainted: G    B            4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        task: ffff880033014180 task.stack: ffff8800305c8000
        Call Trace:
         __do_kmalloc mm/slab.c:3706 [inline]
         __kmalloc_track_caller+0x22/0x2e0 mm/slab.c:3726
         kmemdup+0x17/0x40 mm/util.c:118
         kmemdup include/linux/string.h:414 [inline]
         x509_cert_parse+0x2cb/0x620 crypto/asymmetric_keys/x509_cert_parser.c:106
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 982707eb4ff84d4ae21618c02dd8926801b10a07
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    KEYS: add missing permission check for request_key() destination
    
    commit 4dca6ea1d9432052afb06baf2e3ae78188a4410b upstream.
    
    When the request_key() syscall is not passed a destination keyring, it
    links the requested key (if constructed) into the "default" request-key
    keyring.  This should require Write permission to the keyring.  However,
    there is actually no permission check.
    
    This can be abused to add keys to any keyring to which only Search
    permission is granted.  This is because Search permission allows joining
    the keyring.  keyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_SESSION_KEYRING)
    then will set the default request-key keyring to the session keyring.
    Then, request_key() can be used to add keys to the keyring.
    
    Both negatively and positively instantiated keys can be added using this
    method.  Adding negative keys is trivial.  Adding a positive key is a
    bit trickier.  It requires that either /sbin/request-key positively
    instantiates the key, or that another thread adds the key to the process
    keyring at just the right time, such that request_key() misses it
    initially but then finds it in construct_alloc_key().
    
    Fix this bug by checking for Write permission to the keyring in
    construct_get_dest_keyring() when the default keyring is being used.
    
    We don't do the permission check for non-default keyrings because that
    was already done by the earlier call to lookup_user_key().  Also,
    request_key_and_link() is currently passed a 'struct key *' rather than
    a key_ref_t, so the "possessed" bit is unavailable.
    
    We also don't do the permission check for the "requestor keyring", to
    continue to support the use case described by commit 8bbf4976b59f
    ("KEYS: Alter use of key instantiation link-to-keyring argument") where
    /sbin/request-key recursively calls request_key() to add keys to the
    original requestor's destination keyring.  (I don't know of any users
    who actually do that, though...)
    
    Fixes: 3e30148c3d52 ("[PATCH] Keys: Make request-key create an authorisation key")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44acfcb6dd7368ad500cf79397f7c1805089a94a
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    ASN.1: check for error from ASN1_OP_END__ACT actions
    
    commit 81a7be2cd69b412ab6aeacfe5ebf1bb6e5bce955 upstream.
    
    asn1_ber_decoder() was ignoring errors from actions associated with the
    opcodes ASN1_OP_END_SEQ_ACT, ASN1_OP_END_SET_ACT,
    ASN1_OP_END_SEQ_OF_ACT, and ASN1_OP_END_SET_OF_ACT.  In practice, this
    meant the pkcs7_note_signed_info() action (since that was the only user
    of those opcodes).  Fix it by checking for the error, just like the
    decoder does for actions associated with the other opcodes.
    
    This bug allowed users to leak slab memory by repeatedly trying to add a
    specially crafted "pkcs7_test" key (requires CONFIG_PKCS7_TEST_KEY).
    
    In theory, this bug could also be used to bypass module signature
    verification, by providing a PKCS#7 message that is misparsed such that
    a signature's ->authattrs do not contain its ->msgdigest.  But it
    doesn't seem practical in normal cases, due to restrictions on the
    format of the ->authattrs.
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 608845ad4986c3022675c748a69cabdbacd2d4a6
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    ASN.1: fix out-of-bounds read when parsing indefinite length item
    
    commit e0058f3a874ebb48b25be7ff79bc3b4e59929f90 upstream.
    
    In asn1_ber_decoder(), indefinitely-sized ASN.1 items were being passed
    to the action functions before their lengths had been computed, using
    the bogus length of 0x80 (ASN1_INDEFINITE_LENGTH).  This resulted in
    reading data past the end of the input buffer, when given a specially
    crafted message.
    
    Fix it by rearranging the code so that the indefinite length is resolved
    before the action is called.
    
    This bug was originally found by fuzzing the X.509 parser in userspace
    using libFuzzer from the LLVM project.
    
    KASAN report (cleaned up slightly):
    
        BUG: KASAN: slab-out-of-bounds in memcpy ./include/linux/string.h:341 [inline]
        BUG: KASAN: slab-out-of-bounds in x509_fabricate_name.constprop.1+0x1a4/0x940 crypto/asymmetric_keys/x509_cert_parser.c:366
        Read of size 128 at addr ffff880035dd9eaf by task keyctl/195
    
        CPU: 1 PID: 195 Comm: keyctl Not tainted 4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        Call Trace:
         __dump_stack lib/dump_stack.c:17 [inline]
         dump_stack+0xd1/0x175 lib/dump_stack.c:53
         print_address_description+0x78/0x260 mm/kasan/report.c:252
         kasan_report_error mm/kasan/report.c:351 [inline]
         kasan_report+0x23f/0x350 mm/kasan/report.c:409
         memcpy+0x1f/0x50 mm/kasan/kasan.c:302
         memcpy ./include/linux/string.h:341 [inline]
         x509_fabricate_name.constprop.1+0x1a4/0x940 crypto/asymmetric_keys/x509_cert_parser.c:366
         asn1_ber_decoder+0xb4a/0x1fd0 lib/asn1_decoder.c:447
         x509_cert_parse+0x1c7/0x620 crypto/asymmetric_keys/x509_cert_parser.c:89
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
        Allocated by task 195:
         __do_kmalloc_node mm/slab.c:3675 [inline]
         __kmalloc_node+0x47/0x60 mm/slab.c:3682
         kvmalloc ./include/linux/mm.h:540 [inline]
         SYSC_add_key security/keys/keyctl.c:104 [inline]
         SyS_add_key+0x19e/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Reported-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b5106e1d22c6a57b62c71edd77d491203de3b8b
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Dec 6 09:50:09 2017 +0000

    efi/esrt: Use memunmap() instead of kfree() to free the remapping
    
    commit 89c5a2d34bda58319e3075e8e7dd727ea25a435c upstream.
    
    The remapping result of memremap() should be freed with memunmap(), not kfree().
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171206095010.24170-3-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29c3b7a85409b584e35f4be69f71fa206eeaece0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 6 09:50:08 2017 +0000

    efi: Move some sysfs files to be read-only by root
    
    commit af97a77bc01ce49a466f9d4c0125479e2e2230b6 upstream.
    
    Thanks to the scripts/leaking_addresses.pl script, it was found that
    some EFI values should not be readable by non-root users.
    
    So make them root-only, and to do that, add a __ATTR_RO_MODE() macro to
    make this easier, and use it in other places at the same time.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171206095010.24170-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35b4bfbda54b8082e41b472641be9d51144f85ad
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:39 2017 +0100

    scsi: libsas: align sata_device's rps_resp on a cacheline
    
    commit c2e8fbf908afd81ad502b567a6639598f92c9b9d upstream.
    
    The rps_resp buffer in ata_device is a DMA target, but it isn't
    explicitly cacheline aligned. Due to this, adjacent fields can be
    overwritten with stale data from memory on non-coherent architectures.
    As a result, the kernel is sometimes unable to communicate with an SATA
    device behind a SAS expander.
    
    Fix this by ensuring that the rps_resp buffer is cacheline aligned.
    
    This issue is similar to that fixed by Commit 84bda12af31f93 ("libata:
    align ap->sector_buf") and Commit 4ee34ea3a12396f35b26 ("libata: Align
    ata_device's id on a cacheline").
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 326ebe77f0c584e1de142c788f61b447bcd170b3
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:38 2017 +0100

    scsi: use dma_get_cache_alignment() as minimum DMA alignment
    
    commit 90addc6b3c9cda0146fbd62a08e234c2b224a80c upstream.
    
    In non-coherent DMA mode, kernel uses cache flushing operations to
    maintain I/O coherency, so scsi's block queue should be aligned to the
    value returned by dma_get_cache_alignment().  Otherwise, If a DMA buffer
    and a kernel structure share a same cache line, and if the kernel
    structure has dirty data, cache_invalidate (no writeback) will cause
    data corruption.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    [hch: rebased and updated the comment and changelog]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cb4d78c57f8ba642b5071d439d71217291d9e71
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 21 14:23:37 2017 +0100

    scsi: dma-mapping: always provide dma_get_cache_alignment
    
    commit 860dd4424f344400b491b212ee4acb3a358ba9d9 upstream.
    
    Provide the dummy version of dma_get_cache_alignment that always returns
    1 even if CONFIG_HAS_DMA is not set, so that drivers and subsystems can
    use it without ifdefs.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1db069c057a1a35adde371547be223f4af6458eb
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Wed Nov 8 10:23:11 2017 -0500

    isa: Prevent NULL dereference in isa_bus driver callbacks
    
    commit 5a244727f428a06634f22bb890e78024ab0c89f3 upstream.
    
    The isa_driver structure for an isa_bus device is stored in the device
    platform_data member of the respective device structure. This
    platform_data member may be reset to NULL if isa_driver match callback
    for the device fails, indicating a device unsupported by the ISA driver.
    
    This patch fixes a possible NULL pointer dereference if one of the
    isa_driver callbacks to attempted for an unsupported device. This error
    should not occur in practice since ISA devices are typically manually
    configured and loaded by the users, but we may as well prevent this
    error from popping up for the 0day testers.
    
    Fixes: a5117ba7da37 ("[PATCH] Driver model: add ISA bus")
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aa6d7f8542e1c78bd0072dc4a668cb476360e56
Author: Paul Meyer <Paul.Meyer@microsoft.com>
Date:   Tue Nov 14 13:06:47 2017 -0700

    hv: kvp: Avoid reading past allocated blocks from KVP file
    
    commit 297d6b6e56c2977fc504c61bbeeaa21296923f89 upstream.
    
    While reading in more than one block (50) of KVP records, the allocation
    goes per block, but the reads used the total number of allocated records
    (without resetting the pointer/stream). This causes the records buffer to
    overrun when the refresh reads more than one block over the previous
    capacity (e.g. reading more than 100 KVP records whereas the in-memory
    database was empty before).
    
    Fix this by reading the correct number of KVP records from file each time.
    
    Signed-off-by: Paul Meyer <Paul.Meyer@microsoft.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 893fab0c338b16724fc67bcbd3b95f5bc97108f6
Author: weiping zhang <zwp10758@gmail.com>
Date:   Wed Nov 29 09:23:01 2017 +0800

    virtio: release virtio index when fail to device_register
    
    commit e60ea67bb60459b95a50a156296041a13e0e380e upstream.
    
    index can be reused by other virtio device.
    
    Signed-off-by: weiping zhang <zhangweiping@didichuxing.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b4e6f675846c0700fae441f30bcb18dca074af7
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:50 2017 -0800

    can: usb_8dev: cancel urb on -EPIPE and -EPROTO
    
    commit 12147edc434c9e4c7c2f5fee2e5519b2e5ac34ce upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cdac09e6aeefed8058e913943c7c8765017afdc
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:48 2017 -0800

    can: esd_usb2: cancel urb on -EPIPE and -EPROTO
    
    commit 7a31ced3de06e9878e4f9c3abe8f87d9344d8144 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3b72254789fd96701ef06778a3fc5c4a3d24cbe
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:47 2017 -0800

    can: ems_usb: cancel urb on -EPIPE and -EPROTO
    
    commit bd352e1adfe0d02d3ea7c8e3fb19183dc317e679 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4665483e4797f86e0d4286f7ca8d73353046f073
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:49 2017 -0800

    can: kvaser_usb: cancel urb on -EPIPE and -EPROTO
    
    commit 6aa8d5945502baf4687d80de59b7ac865e9e666b upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d724a677f0c1dfcfea43985f54a0a65429f6199f
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:28 2017 +0100

    can: kvaser_usb: ratelimit errors if incomplete messages are received
    
    commit 8bd13bd522ff7dfa0eb371921aeb417155f7a3be upstream.
    
    Avoid flooding the kernel log with "Formate error", if incomplete message
    are received.
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 561384a9cf1713b1aa9c4e47ca25c214050bb7db
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:27 2017 +0100

    can: kvaser_usb: Fix comparison bug in kvaser_usb_read_bulk_callback()
    
    commit e84f44eb5523401faeb9cc1c97895b68e3cfb78d upstream.
    
    The conditon in the while-loop becomes true when actual_length is less than
    2 (MSG_HEADER_LEN). In best case we end up with a former, already
    dispatched msg, that got msg->len greater than actual_length. This will
    result in a "Format error" error printout.
    
    Problem seen when unplugging a Kvaser USB device connected to a vbox guest.
    
    warning: comparison between signed and unsigned integer expressions
    [-Wsign-compare]
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f89682bb3cf20c373d19cbbdb2d1ddd65024fbf5
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:26 2017 +0100

    can: kvaser_usb: free buf in error paths
    
    commit 435019b48033138581a6171093b181fc6b4d3d30 upstream.
    
    The allocated buffer was not freed if usb_submit_urb() failed.
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a3a713880a5892cf7e169f397dc26d2352b0e2f
Author: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
Date:   Mon Nov 20 14:45:15 2017 +0100

    can: ti_hecc: Fix napi poll return value for repoll
    
    commit f6c23b174c3c96616514827407769cbcfc8005cf upstream.
    
    After commit d75b1ade567f ("net: less interrupt masking in NAPI") napi
    repoll is done only when work_done == budget.
    So we need to return budget if there are still packets to receive.
    
    Signed-off-by: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbe9a14180d6a57badfbca5986b1539db330a554
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Mon Nov 13 17:59:18 2017 +0900

    usb: gadget: udc: renesas_usb3: fix number of the pipes
    
    commit a58204ab91ad8cae4d8474aa0ba5d1fc504860c9 upstream.
    
    This controller on R-Car Gen3 has 6 pipes that included PIPE 0 for
    control actually. But, the datasheet has error in writing as it has
    31 pipes. (However, the previous code defined 30 pipes wrongly...)
    
    Anyway, this patch fixes it.
    
    Fixes: 746bfe63bba3 ("usb: gadget: renesas_usb3: add support for Renesas USB3.0 peripheral controller")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
