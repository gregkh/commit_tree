commit 5f49ff2540e2c2799cde0cfaf6af9e1f824cd393
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Aug 11 15:48:12 2020 +0200

    Linux 5.8.1
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b08bdb1dfc66d8c87c28c445e36762bfa5746c3a
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Aug 7 07:45:21 2020 -0700

    arm64: kaslr: Use standard early random function
    
    commit 9bceb80b3cc483e6763c39a4928402fa82815d3e upstream.
    
    Commit 585524081ecd ("random: random.h should include archrandom.h, not
    the other way around") tries to fix a problem with recursive inclusion
    of linux/random.h and arch/archrandom.h for arm64.  Unfortunately, this
    results in the following compile error if ARCH_RANDOM is disabled.
    
      arch/arm64/kernel/kaslr.c: In function 'kaslr_early_init':
      arch/arm64/kernel/kaslr.c:128:6: error: implicit declaration of function '__early_cpu_has_rndr'; did you mean '__early_pfn_to_nid'? [-Werror=implicit-function-declaration]
        if (__early_cpu_has_rndr()) {
            ^~~~~~~~~~~~~~~~~~~~
            __early_pfn_to_nid
      arch/arm64/kernel/kaslr.c:131:7: error: implicit declaration of function '__arm64_rndr' [-Werror=implicit-function-declaration]
         if (__arm64_rndr(&raw))
             ^~~~~~~~~~~~
    
    The problem is that arch/archrandom.h is only included from
    linux/random.h if ARCH_RANDOM is enabled.  If not, __arm64_rndr() and
    __early_cpu_has_rndr() are undeclared, causing the problem.
    
    Use arch_get_random_seed_long_early() instead of arm64 specific
    functions to solve the problem.
    
    Reported-by: Qian Cai <cai@lca.pw>
    Fixes: 585524081ecd ("random: random.h should include archrandom.h, not the other way around")
    Cc: Qian Cai <cai@lca.pw>
    Cc: Mark Brown <broonie@kernel.org>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Tested-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdb665888c69a094292475c739f7fc462f9d79eb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 5 12:39:48 2020 -0700

    random: random.h should include archrandom.h, not the other way around
    
    commit 585524081ecdcde1c719e63916c514866d898217 upstream.
    
    This is hopefully the final piece of the crazy puzzle with random.h
    dependencies.
    
    And by "hopefully" I obviously mean "Linus is a hopeless optimist".
    
    Reported-and-tested-by: Daniel Díaz <daniel.diaz@linaro.org>
    Acked-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ccec4279301e21cf98d2ab8458fb1f2f610b898
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 31 07:51:14 2020 +0200

    random32: move the pseudo-random 32-bit definitions to prandom.h
    
    commit c0842fbc1b18c7a044e6ff3e8fa78bfa822c7d1a upstream.
    
    The addition of percpu.h to the list of includes in random.h revealed
    some circular dependencies on arm64 and possibly other platforms.  This
    include was added solely for the pseudo-random definitions, which have
    nothing to do with the rest of the definitions in this file but are
    still there for legacy reasons.
    
    This patch moves the pseudo-random parts to linux/prandom.h and the
    percpu.h include with it, which is now guarded by _LINUX_PRANDOM_H and
    protected against recursive inclusion.
    
    A further cleanup step would be to remove this from <linux/random.h>
    entirely, and make people who use the prandom infrastructure include
    just the new header file.  That's a bit of a churn patch, but grepping
    for "prandom_" and "next_pseudo_random32" "struct rnd_state" should
    catch most users.
    
    But it turns out that that nice cleanup step is fairly painful, because
    a _lot_ of code currently seems to depend on the implicit include of
    <linux/random.h>, which can currently come in a lot of ways, including
    such fairly core headfers as <linux/net.h>.
    
    So the "nice cleanup" part may or may never happen.
    
    Fixes: 1c9df907da83 ("random: fix circular include dependency on arm64 after addition of percpu.h")
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37b9e5781ba9007a1252cc39fdcfa4abbff5aa96
Author: Bruno Meneguele <bmeneg@redhat.com>
Date:   Mon Jul 13 13:48:30 2020 -0300

    ima: move APPRAISE_BOOTPARAM dependency on ARCH_POLICY to runtime
    
    commit 311aa6aafea446c2f954cc19d66425bfed8c4b0b upstream.
    
    The IMA_APPRAISE_BOOTPARAM config allows enabling different "ima_appraise="
    modes - log, fix, enforce - at run time, but not when IMA architecture
    specific policies are enabled.  This prevents properly labeling the
    filesystem on systems where secure boot is supported, but not enabled on the
    platform.  Only when secure boot is actually enabled should these IMA
    appraise modes be disabled.
    
    This patch removes the compile time dependency and makes it a runtime
    decision, based on the secure boot state of that platform.
    
    Test results as follows:
    
    -> x86-64 with secure boot enabled
    
    [    0.015637] Kernel command line: <...> ima_policy=appraise_tcb ima_appraise=fix
    [    0.015668] ima: Secure boot enabled: ignoring ima_appraise=fix boot parameter option
    
    -> powerpc with secure boot disabled
    
    [    0.000000] Kernel command line: <...> ima_policy=appraise_tcb ima_appraise=fix
    [    0.000000] Secure boot mode disabled
    
    -> Running the system without secure boot and with both options set:
    
    CONFIG_IMA_APPRAISE_BOOTPARAM=y
    CONFIG_IMA_ARCH_POLICY=y
    
    Audit prompts "missing-hash" but still allow execution and, consequently,
    filesystem labeling:
    
    type=INTEGRITY_DATA msg=audit(07/09/2020 12:30:27.778:1691) : pid=4976
    uid=root auid=root ses=2
    subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 op=appraise_data
    cause=missing-hash comm=bash name=/usr/bin/evmctl dev="dm-0" ino=493150
    res=no
    
    Cc: stable@vger.kernel.org
    Fixes: d958083a8f64 ("x86/ima: define arch_get_ima_policy() for x86")
    Signed-off-by: Bruno Meneguele <bmeneg@redhat.com>
    Cc: stable@vger.kernel.org # 5.0
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9e3fa8953147cd778d3e49dfeb84bf307730b63
Author: Nicolas Chauvet <kwizart@gmail.com>
Date:   Sat Jul 18 12:07:10 2020 +0200

    PCI: tegra: Revert tegra124 raw_violation_fixup
    
    commit e7b856dfcec6d3bf028adee8c65342d7035914a1 upstream.
    
    As reported in https://bugzilla.kernel.org/206217 , raw_violation_fixup
    is causing more harm than good in some common use-cases.
    
    This patch is a partial revert of commit:
    
    191cd6fb5d2c ("PCI: tegra: Add SW fixup for RAW violations")
    
    and fixes the following regression since then.
    
    * Description:
    
    When both the NIC and MMC are used one can see the following message:
    
      NETDEV WATCHDOG: enp1s0 (r8169): transmit queue 0 timed out
    
    and
    
      pcieport 0000:00:02.0: AER: Uncorrected (Non-Fatal) error received: 0000:01:00.0
      r8169 0000:01:00.0: AER: PCIe Bus Error: severity=Uncorrected (Non-Fatal), type=Transaction Layer, (Requester ID)
      r8169 0000:01:00.0: AER:   device [10ec:8168] error status/mask=00004000/00400000
      r8169 0000:01:00.0: AER:    [14] CmpltTO                (First)
      r8169 0000:01:00.0: AER: can't recover (no error_detected callback)
      pcieport 0000:00:02.0: AER: device recovery failed
    
    After that, the ethernet NIC is not functional anymore even after
    reloading the r8169 module. After a reboot, this is reproducible by
    copying a large file over the NIC to the MMC.
    
    For some reason this is not reproducible when files are copied to a tmpfs.
    
    * Little background on the fixup, by Manikanta Maddireddy:
      "In the internal testing with dGPU on Tegra124, CmplTO is reported by
    dGPU. This happened because FIFO queue in AFI(AXI to PCIe) module
    get full by upstream posted writes. Back to back upstream writes
    interleaved with infrequent reads, triggers RAW violation and CmpltTO.
    This is fixed by reducing the posted write credits and by changing
    updateFC timer frequency. These settings are fixed after stress test.
    
    In the current case, RTL NIC is also reporting CmplTO. These settings
    seems to be aggravating the issue instead of fixing it."
    
    Link: https://lore.kernel.org/r/20200718100710.15398-1-kwizart@gmail.com
    Fixes: 191cd6fb5d2c ("PCI: tegra: Add SW fixup for RAW violations")
    Signed-off-by: Nicolas Chauvet <kwizart@gmail.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Manikanta Maddireddy <mmaddireddy@nvidia.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f5f284ac0a17f305b7ad6e2893a2064185cbe23
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Thu Jul 2 11:52:03 2020 +0000

    powerpc/kasan: Fix shadow pages allocation failure
    
    commit 41ea93cf7ba4e0f0cc46ebfdda8b6ff27c67bc91 upstream.
    
    Doing kasan pages allocation in MMU_init is too early, kernel doesn't
    have access yet to the entire memory space and memblock_alloc() fails
    when the kernel is a bit big.
    
    Do it from kasan_init() instead.
    
    Fixes: 2edb16efc899 ("powerpc/32: Add KASAN support")
    Fixes: d2a91cef9bbd ("powerpc/kasan: Fix shadow pages allocation failure")
    Cc: stable@vger.kernel.org
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=208181
    Link: https://lore.kernel.org/r/63048fcea8a1c02f75429ba3152f80f7853f87fc.1593690707.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fed32566a038a55c9fbad4a3cee9c7a0533d1fa
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Thu Jul 2 11:52:02 2020 +0000

    Revert "powerpc/kasan: Fix shadow pages allocation failure"
    
    commit b506923ee44ae87fc9f4de16b53feb313623e146 upstream.
    
    This reverts commit d2a91cef9bbdeb87b7449fdab1a6be6000930210.
    
    This commit moved too much work in kasan_init(). The allocation
    of shadow pages has to be moved for the reason explained in that
    patch, but the allocation of page tables still need to be done
    before switching to the final hash table.
    
    First revert the incorrect commit, following patch redoes it
    properly.
    
    Fixes: d2a91cef9bbd ("powerpc/kasan: Fix shadow pages allocation failure")
    Cc: stable@vger.kernel.org
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=208181
    Link: https://lore.kernel.org/r/3667deb0911affbf999b99f87c31c77d5e870cd2.1593690707.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff35fac0d075af156a2b46759c0898a889faeb09
Author: Frank van der Linden <fllinden@amazon.com>
Date:   Tue Jun 23 22:39:18 2020 +0000

    xattr: break delegations in {set,remove}xattr
    
    commit 08b5d5014a27e717826999ad20e394a8811aae92 upstream.
    
    set/removexattr on an exported filesystem should break NFS delegations.
    This is true in general, but also for the upcoming support for
    RFC 8726 (NFSv4 extended attribute support). Make sure that they do.
    
    Additionally, they need to grow a _locked variant, since callers might
    call this with i_rwsem held (like the NFS server code).
    
    Cc: stable@vger.kernel.org # v4.9+
    Cc: linux-fsdevel@vger.kernel.org
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 325811793d3442005ffb71b73fb0dd1aa209ae61
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Thu Jul 9 20:11:59 2020 +0300

    gpio: max77620: Fix missing release of interrupt
    
    commit 2a5e6f7eede8cd1c4bac0b8ec6491cec4e75c99a upstream.
    
    The requested interrupt is never released by the driver. Fix this by
    using the resource-managed variant of request_threaded_irq().
    
    Fixes: ab3dd9cc24d4 ("gpio: max77620: Fix interrupt handling")
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Laxman Dewangan <ldewangan@nvidia.com>
    Cc: <stable@vger.kernel.org> # 5.5+
    Link: https://lore.kernel.org/r/20200709171203.12950-3-digetx@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 344c69a060496cb44315faf024a4f7477976d301
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jun 1 15:39:45 2020 +0200

    leds: 88pm860x: fix use-after-free on unbind
    
    commit eca21c2d8655387823d695b26e6fe78cf3975c05 upstream.
    
    Several MFD child drivers register their class devices directly under
    the parent device. This means you cannot blindly do devres conversions
    so that deregistration ends up being tied to the parent device,
    something which leads to use-after-free on driver unbind when the class
    device is released while still being registered.
    
    Fixes: 375446df95ee ("leds: 88pm860x: Use devm_led_classdev_register")
    Cc: stable <stable@vger.kernel.org>     # 4.6
    Cc: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6796fca30e0a3d64ab35703c8bbc392bb87089ce
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jun 1 15:39:47 2020 +0200

    leds: lm3533: fix use-after-free on unbind
    
    commit d584221e683bbd173738603b83a315f27d27d043 upstream.
    
    Several MFD child drivers register their class devices directly under
    the parent device. This means you cannot blindly do devres conversions
    so that deregistration ends up being tied to the parent device,
    something which leads to use-after-free on driver unbind when the class
    device is released while still being registered.
    
    Fixes: 50154e29e5cc ("leds: lm3533: Use devm_led_classdev_register")
    Cc: stable <stable@vger.kernel.org>     # 4.6
    Cc: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e99065db5b90ccc365a5364e275e13d16cde52a
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jun 1 15:39:46 2020 +0200

    leds: da903x: fix use-after-free on unbind
    
    commit 6f4aa35744f69ed9b0bf5a736c9ca9b44bc1dcea upstream.
    
    Several MFD child drivers register their class devices directly under
    the parent device. This means you cannot blindly do devres conversions
    so that deregistration ends up being tied to the parent device,
    something which leads to use-after-free on driver unbind when the class
    device is released while still being registered.
    
    Fixes: eed16255d66b ("leds: da903x: Use devm_led_classdev_register")
    Cc: stable <stable@vger.kernel.org>     # 4.6
    Cc: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 405c0f5604374a8f626a400fcf225574e9a07230
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jun 1 15:39:48 2020 +0200

    leds: lm36274: fix use-after-free on unbind
    
    commit a0972fff09479dd09b731360a3a0b09e4fb4d415 upstream.
    
    Several MFD child drivers register their class devices directly under
    the parent device. This means you cannot use devres so that
    deregistration ends up being tied to the parent device, something which
    leads to use-after-free on driver unbind when the class device is
    released while still being registered.
    
    Fixes: 11e1bbc116a7 ("leds: lm36274: Introduce the TI LM36274 LED driver")
    Cc: stable <stable@vger.kernel.org>     # 5.3
    Cc: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cbb6111b385f1b9f0130e4b309047242ba2e9a8
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jun 1 15:39:49 2020 +0200

    leds: wm831x-status: fix use-after-free on unbind
    
    commit 47a459ecc800a17109d0c496a4e21e478806ee40 upstream.
    
    Several MFD child drivers register their class devices directly under
    the parent device. This means you cannot blindly do devres conversions
    so that deregistration ends up being tied to the parent device,
    something which leads to use-after-free on driver unbind when the class
    device is released while still being registered.
    
    Fixes: 8d3b6a4001ce ("leds: wm831x-status: Use devm_led_classdev_register")
    Cc: stable <stable@vger.kernel.org>     # 4.6
    Cc: Amitoj Kaur Chawla <amitoj1606@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb3d82abc335624a5e8ecfb75aba0b684e2dc4db
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jul 16 13:53:46 2020 +0200

    mtd: properly check all write ioctls for permissions
    
    commit f7e6b19bc76471ba03725fe58e0c218a3d6266c3 upstream.
    
    When doing a "write" ioctl call, properly check that we have permissions
    to do so before copying anything from userspace or anything else so we
    can "fail fast".  This includes also covering the MEMWRITE ioctl which
    previously missed checking for this.
    
    Cc: Miquel Raynal <miquel.raynal@bootlin.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Vignesh Raghavendra <vigneshr@ti.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [rw: Fixed locking issue]
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ca4ebe9d6350e758e40683f08fd93cb4539e0b7
Author: Yunhai Zhang <zhangyunhai@nsfocus.com>
Date:   Tue Jul 28 09:58:03 2020 +0800

    vgacon: Fix for missing check in scrollback handling
    
    commit ebfdfeeae8c01fcb2b3b74ffaf03876e20835d2d upstream.
    
    vgacon_scrollback_update() always leaves enbough room in the scrollback
    buffer for the next call, but if the console size changed that room
    might not actually be enough, and so we need to re-check.
    
    The check should be in the loop since vgacon_scrollback_cur->tail is
    updated in the loop and count may be more than 1 when triggered by CSI M,
    as Jiri's PoC:
    #include <stdio.h>
    #include <stdlib.h>
    #include <unistd.h>
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <sys/ioctl.h>
    #include <fcntl.h>
    
    int main(int argc, char** argv)
    {
            int fd = open("/dev/tty1", O_RDWR);
            unsigned short size[3] = {25, 200, 0};
            ioctl(fd, 0x5609, size); // VT_RESIZE
    
            write(fd, "\e[1;1H", 6);
            for (int i = 0; i < 30; i++)
                    write(fd, "\e[10M", 5);
    }
    
    It leads to various crashes as vgacon_scrollback_update writes out of
    the buffer:
     BUG: unable to handle page fault for address: ffffc900001752a0
     #PF: supervisor write access in kernel mode
     #PF: error_code(0x0002) - not-present page
     RIP: 0010:mutex_unlock+0x13/0x30
    ...
     Call Trace:
      n_tty_write+0x1a0/0x4d0
      tty_write+0x1a0/0x2e0
    
    Or to KASAN reports:
    BUG: KASAN: slab-out-of-bounds in vgacon_scroll+0x57a/0x8ed
    
    This fixes CVE-2020-14331.
    
    Reported-by: 张云海 <zhangyunhai@nsfocus.com>
    Reported-by: Yang Yingliang <yangyingliang@huawei.com>
    Reported-by: Kyungtae Kim <kt0755@gmail.com>
    Fixes: 15bdab959c9b ([PATCH] vgacon: Add support for soft scrollback)
    Cc: stable@vger.kernel.org
    Cc: linux-fbdev@vger.kernel.org
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Solar Designer <solar@openwall.com>
    Cc: "Srivatsa S. Bhat" <srivatsa@csail.mit.edu>
    Cc: Anthony Liguori <aliguori@amazon.com>
    Cc: Yang Yingliang <yangyingliang@huawei.com>
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Signed-off-by: Yunhai Zhang <zhangyunhai@nsfocus.com>
    Link: https://lore.kernel.org/r/9fb43895-ca91-9b07-ebfd-808cf854ca95@nsfocus.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8eb3d95c2d4c2c2889b674c47c0e5493884558e
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jun 25 13:37:02 2020 -0700

    lkdtm/heap: Avoid edge and middle of slabs
    
    commit e12145cf1c3a8077e6d9f575711e38dd7d8a3ebc upstream.
    
    Har har, after I moved the slab freelist pointer into the middle of the
    slab, now it looks like the contents are getting poisoned. Adjust the
    test to avoid the freelist pointer again.
    
    Fixes: 3202fa62fb43 ("slub: relocate freelist pointer to middle of object")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200625203704.317097-3-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3266873640b76a22e41057c0d644dc14a5a392bb
Author: Matthias Maennich <maennich@google.com>
Date:   Thu Jun 4 18:41:45 2020 +0200

    scripts: add dummy report mode to add_namespace.cocci
    
    commit 55c7549819e438f40a3ef1d8ac5c38b73390bcb7 upstream.
    
    When running `make coccicheck` in report mode using the
    add_namespace.cocci file, it will fail for files that contain
    MODULE_LICENSE. Those match the replacement precondition, but spatch
    errors out as virtual.ns is not set.
    
    In order to fix that, add the virtual rule nsdeps and only do search and
    replace if that rule has been explicitly requested.
    
    In order to make spatch happy in report mode, we also need a dummy rule,
    as otherwise it errors out with "No rules apply". Using a script:python
    rule appears unrelated and odd, but this is the shortest I could come up
    with.
    
    Adjust scripts/nsdeps accordingly to set the nsdeps rule when run trough
    `make nsdeps`.
    
    Suggested-by: Julia Lawall <julia.lawall@inria.fr>
    Fixes: c7c4e29fb5a4 ("scripts: add_namespace: Fix coccicheck failed")
    Cc: YueHaibing <yuehaibing@huawei.com>
    Cc: jeyu@kernel.org
    Cc: cocci@systeme.lip6.fr
    Cc: stable@vger.kernel.org
    Signed-off-by: Matthias Maennich <maennich@google.com>
    Reported-by: Shuah Khan <skhan@linuxfoundation.org>
    Acked-by: Julia Lawall <julia.lawall@inria.fr>
    Link: https://lore.kernel.org/r/20200604164145.173925-1-maennich@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ec142a2e9e6542372f80c42184c8dfb97c69f14
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Jul 8 13:15:20 2020 -0700

    Smack: fix use-after-free in smk_write_relabel_self()
    
    commit beb4ee6770a89646659e6a2178538d2b13e2654e upstream.
    
    smk_write_relabel_self() frees memory from the task's credentials with
    no locking, which can easily cause a use-after-free because multiple
    tasks can share the same credentials structure.
    
    Fix this by using prepare_creds() and commit_creds() to correctly modify
    the task's credentials.
    
    Reproducer for "BUG: KASAN: use-after-free in smk_write_relabel_self":
    
            #include <fcntl.h>
            #include <pthread.h>
            #include <unistd.h>
    
            static void *thrproc(void *arg)
            {
                    int fd = open("/sys/fs/smackfs/relabel-self", O_WRONLY);
                    for (;;) write(fd, "foo", 3);
            }
    
            int main()
            {
                    pthread_t t;
                    pthread_create(&t, NULL, thrproc, NULL);
                    thrproc(NULL);
            }
    
    Reported-by: syzbot+e6416dabb497a650da40@syzkaller.appspotmail.com
    Fixes: 38416e53936e ("Smack: limited capability for changing process label")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 382c0fa38c0e1341e4704fb65c0435630c6f8421
Author: Jann Horn <jannh@google.com>
Date:   Mon Jul 27 14:04:24 2020 +0200

    binder: Prevent context manager from incrementing ref 0
    
    commit 4b836a1426cb0f1ef2a6e211d7e553221594f8fc upstream.
    
    Binder is designed such that a binder_proc never has references to
    itself. If this rule is violated, memory corruption can occur when a
    process sends a transaction to itself; see e.g.
    <https://syzkaller.appspot.com/bug?extid=09e05aba06723a94d43d>.
    
    There is a remaining edgecase through which such a transaction-to-self
    can still occur from the context of a task with BINDER_SET_CONTEXT_MGR
    access:
    
     - task A opens /dev/binder twice, creating binder_proc instances P1
       and P2
     - P1 becomes context manager
     - P2 calls ACQUIRE on the magic handle 0, allocating index 0 in its
       handle table
     - P1 dies (by closing the /dev/binder fd and waiting a bit)
     - P2 becomes context manager
     - P2 calls ACQUIRE on the magic handle 0, allocating index 1 in its
       handle table
       [this triggers a warning: "binder: 1974:1974 tried to acquire
       reference to desc 0, got 1 instead"]
     - task B opens /dev/binder once, creating binder_proc instance P3
     - P3 calls P2 (via magic handle 0) with (void*)1 as argument (two-way
       transaction)
     - P2 receives the handle and uses it to call P3 (two-way transaction)
     - P3 calls P2 (via magic handle 0) (two-way transaction)
     - P2 calls P2 (via handle 1) (two-way transaction)
    
    And then, if P2 does *NOT* accept the incoming transaction work, but
    instead closes the binder fd, we get a crash.
    
    Solve it by preventing the context manager from using ACQUIRE on ref 0.
    There shouldn't be any legitimate reason for the context manager to do
    that.
    
    Additionally, print a warning if someone manages to find another way to
    trigger a transaction-to-self bug in the future.
    
    Cc: stable@vger.kernel.org
    Fixes: 457b9a6f09f0 ("Staging: android: add binder driver")
    Acked-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Jann Horn <jannh@google.com>
    Reviewed-by: Martijn Coenen <maco@android.com>
    Link: https://lore.kernel.org/r/20200727120424.1627555-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a75ed41c7abb37948267c282371d49955129035
Author: Adam Ford <aford173@gmail.com>
Date:   Tue Jun 30 13:26:36 2020 -0500

    omapfb: dss: Fix max fclk divider for omap36xx
    
    commit 254503a2b186caa668a188dbbd7ab0d25149c0a5 upstream.
    
    The drm/omap driver was fixed to correct an issue where using a
    divider of 32 breaks the DSS despite the TRM stating 32 is a valid
    number.  Through experimentation, it appears that 31 works, and
    it is consistent with the value used by the drm/omap driver.
    
    This patch fixes the divider for fbdev driver instead of the drm.
    
    Fixes: f76ee892a99e ("omapfb: copy omapdss & displays for omapfb")
    Cc: <stable@vger.kernel.org> #4.5+
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Dave Airlie <airlied@gmail.com>
    Cc: Rob Clark <robdclark@gmail.com>
    [b.zolnierkie: mark patch as applicable to stable 4.5+ (was 4.9+)]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200630182636.439015-1-aford173@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be1c835747f90451a780583c10f67b98bb79ba7e
Author: Peilin Ye <yepeilin.cs@gmail.com>
Date:   Fri Jul 10 17:45:26 2020 -0400

    Bluetooth: Prevent out-of-bounds read in hci_inquiry_result_with_rssi_evt()
    
    commit 629b49c848ee71244203934347bd7730b0ddee8d upstream.
    
    Check `num_rsp` before using it as for-loop counter. Add `unlock` label.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f00e01212d7812b005ac770f812109cfe57c25c1
Author: Peilin Ye <yepeilin.cs@gmail.com>
Date:   Fri Jul 10 17:39:18 2020 -0400

    Bluetooth: Prevent out-of-bounds read in hci_inquiry_result_evt()
    
    commit 75bbd2ea50ba1c5d9da878a17e92eac02fe0fd3a upstream.
    
    Check `num_rsp` before using it as for-loop counter.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc09a53b7252eeffd2c1d403d215dd0f3aad1f5d
Author: Peilin Ye <yepeilin.cs@gmail.com>
Date:   Fri Jul 10 12:09:15 2020 -0400

    Bluetooth: Fix slab-out-of-bounds read in hci_extended_inquiry_result_evt()
    
    commit 51c19bf3d5cfaa66571e4b88ba2a6f6295311101 upstream.
    
    Check upon `num_rsp` is insufficient. A malformed event packet with a
    large `num_rsp` number makes hci_extended_inquiry_result_evt() go out
    of bounds. Fix it.
    
    This patch fixes the following syzbot bug:
    
        https://syzkaller.appspot.com/bug?id=4bf11aa05c4ca51ce0df86e500fce486552dc8d2
    
    Reported-by: syzbot+d8489a79b781849b9c46@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51af3c37364349476dda5cbf1711f1f0dbc9df7e
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Tue Jul 28 15:21:51 2020 +0800

    Staging: rtl8188eu: rtw_mlme: Fix uninitialized variable authmode
    
    commit 11536442a3b4e1de6890ea5e805908debb74f94a upstream.
    
    The variable authmode can be uninitialized. The danger would be if
    it equals to _WPA_IE_ID_ (0xdd) or _WPA2_IE_ID_ (0x33). We can avoid
    this by setting it to zero instead. This is the approach that was
    used in the rtl8723bs driver.
    
    Fixes: 7b464c9fa5cc ("staging: r8188eu: Add files for new driver - part 4")
    Co-developed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200728072153.9202-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22e041f720e6c40af47da65ddc33678ec9767c55
Author: Rustam Kovhaev <rkovhaev@gmail.com>
Date:   Thu Jul 16 08:13:26 2020 -0700

    staging: rtl8712: handle firmware load failure
    
    commit b4383c971bc5263efe2b0915ba67ebf2bf3f1ee5 upstream.
    
    when firmware fails to load we should not call unregister_netdev()
    this patch fixes a race condition between rtl871x_load_fw_cb() and
    r871xu_dev_remove() and fixes the bug reported by syzbot
    
    Reported-by: syzbot+80899a8a8efe8968cde7@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=80899a8a8efe8968cde7
    Signed-off-by: Rustam Kovhaev <rkovhaev@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200716151324.1036204-1-rkovhaev@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fa3a6e9061c1ac4824341e71b5abbc3b48a263d
Author: Suren Baghdasaryan <surenb@google.com>
Date:   Thu Jul 30 12:26:32 2020 -0700

    staging: android: ashmem: Fix lockdep warning for write operation
    
    commit 3e338d3c95c735dc3265a86016bb4c022ec7cadc upstream.
    
    syzbot report [1] describes a deadlock when write operation against an
    ashmem fd executed at the time when ashmem is shrinking its cache results
    in the following lock sequence:
    
    Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(fs_reclaim);
                                    lock(&sb->s_type->i_mutex_key#13);
                                    lock(fs_reclaim);
       lock(&sb->s_type->i_mutex_key#13);
    
    kswapd takes fs_reclaim and then inode_lock while generic_perform_write
    takes inode_lock and then fs_reclaim. However ashmem does not support
    writing into backing shmem with a write syscall. The only way to change
    its content is to mmap it and operate on mapped memory. Therefore the race
    that lockdep is warning about is not valid. Resolve this by introducing a
    separate lockdep class for the backing shmem inodes.
    
    [1]: https://lkml.kernel.org/lkml/0000000000000b5f9d059aa2037f@google.com/
    
    Reported-by: syzbot+7a0d9d0b26efefe61780@syzkaller.appspotmail.com
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Link: https://lore.kernel.org/r/20200730192632.3088194-1-surenb@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98228ec8440f2e84dbcefdd313900463ed0aa494
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 4 20:58:15 2020 +0200

    ALSA: seq: oss: Serialize ioctls
    
    commit 80982c7e834e5d4e325b6ce33757012ecafdf0bb upstream.
    
    Some ioctls via OSS sequencer API may race and lead to UAF when the
    port create and delete are performed concurrently, as spotted by a
    couple of syzkaller cases.  This patch is an attempt to address it by
    serializing the ioctls with the existing register_mutex.
    
    Basically OSS sequencer API is an obsoleted interface and was designed
    without much consideration of the concurrency.  There are very few
    applications with it, and the concurrent performance isn't asked,
    hence this "big hammer" approach should be good enough.
    
    Reported-by: syzbot+1a54a94bd32716796edd@syzkaller.appspotmail.com
    Reported-by: syzbot+9d2abfef257f3e2d4713@syzkaller.appspotmail.com
    Suggested-by: Hillf Danton <hdanton@sina.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200804185815.2453-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f990beaaff08b388ef60430e7a88d49ec216f925
Author: Connor McAdams <conmanx360@gmail.com>
Date:   Sun Aug 2 20:29:27 2020 -0400

    ALSA: hda/ca0132 - Fix AE-5 microphone selection commands.
    
    commit 7fe3530427e52dd53cd7366914864e29215180a4 upstream.
    
    The ca0113 command had the wrong group_id, 0x48 when it should've been
    0x30. The front microphone selection should now work.
    
    Signed-off-by: Connor McAdams <conmanx360@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200803002928.8638-3-conmanx360@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0b12b2ba9ede50ca342d5b44c97d1f0dc174c64
Author: Connor McAdams <conmanx360@gmail.com>
Date:   Sun Aug 2 20:29:25 2020 -0400

    ALSA: hda/ca0132 - Fix ZxR Headphone gain control get value.
    
    commit a00dc409de455b64e6cb2f6d40cdb8237cdb2e83 upstream.
    
    When the ZxR headphone gain control was added, the ca0132_switch_get
    function was not updated, which meant that the changes to the control
    state were not saved when entering/exiting alsamixer.
    
    Signed-off-by: Connor McAdams <conmanx360@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200803002928.8638-1-conmanx360@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b743b82bdfa80bd45211a015419a305c2755a9d9
Author: Connor McAdams <conmanx360@gmail.com>
Date:   Sun Aug 2 20:29:26 2020 -0400

    ALSA: hda/ca0132 - Add new quirk ID for Recon3D.
    
    commit cc5edb1bd3f7bfe450f767b12423f6673822427b upstream.
    
    Add a new quirk ID for the Recon3D, as tested by me.
    
    Signed-off-by: Connor McAdams <conmanx360@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200803002928.8638-2-conmanx360@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea441daae389bf706a0722fe241993c0adf3cf9e
Author: Huacai Chen <chenhc@lemote.com>
Date:   Sun Aug 2 17:26:40 2020 +0800

    ALSA: hda/realtek: Add alc269/alc662 pin-tables for Loongson-3 laptops
    
    commit f1ec5be17b9aafbc5f573da023850566b43d8e5e upstream.
    
    There are several Loongson-3 based laptops produced by CZC or Lemote,
    they use alc269/alc662 codecs and need specific pin-tables, this patch
    add their pin-tables.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1596360400-32425-1-git-send-email-chenhc@lemote.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88f484351d8f6510e68706cfbb0701b4e83389fd
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Aug 3 14:46:38 2020 +0800

    Revert "ALSA: hda: call runtime_allow() for all hda controllers"
    
    commit 07c9983b567d0ef33aefc063299de95a987e12a8 upstream.
    
    This reverts commit 9a6418487b56 ("ALSA: hda: call runtime_allow()
    for all hda controllers").
    
    The reverted patch already introduced some regressions on some
    machines:
     - on gemini-lake machines, the error of "azx_get_response timeout"
       happens in the hda driver.
     - on the machines with alc662 codec, the audio jack detection doesn't
       work anymore.
    
    Fixes: 9a6418487b56 ("ALSA: hda: call runtime_allow() for all hda controllers")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=208511
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200803064638.6139-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7e7da4400925c04474bf8f2e0e5d517e0bfb18e
Author: Forest Crossman <cyrozap@gmail.com>
Date:   Mon Jul 27 23:24:08 2020 -0500

    usb: xhci: Fix ASMedia ASM1142 DMA addressing
    
    commit ec37198acca7b4c17b96247697406e47aafe0605 upstream.
    
    I've confirmed that the ASMedia ASM1142 has the same problem as the
    ASM2142/ASM3142, in that it too reports that it supports 64-bit DMA
    addresses when in fact it does not. As with the ASM2142/ASM3142, this
    can cause problems on systems where the upper bits matter, and adding
    the XHCI_NO_64BIT_SUPPORT quirk completely fixes the issue.
    
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Forest Crossman <cyrozap@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200728042408.180529-3-cyrozap@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ef10b5be9a54817aa49d4610acb60e31233ae11
Author: Forest Crossman <cyrozap@gmail.com>
Date:   Mon Jul 27 23:24:07 2020 -0500

    usb: xhci: define IDs for various ASMedia host controllers
    
    commit 1841cb255da41e87bed9573915891d056f80e2e7 upstream.
    
    Not all ASMedia host controllers have a device ID that matches its part
    number. #define some of these IDs to make it clearer at a glance which
    chips require what quirks.
    
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Forest Crossman <cyrozap@gmail.com>
    Link: https://lore.kernel.org/r/20200728042408.180529-2-cyrozap@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d73faca68faf89f515e3a8e3a1019ca426cf683
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jul 26 11:49:39 2020 +0200

    USB: iowarrior: fix up report size handling for some devices
    
    commit 17a82716587e9d7c3b246a789add490b2b5dcab6 upstream.
    
    In previous patches that added support for new iowarrior devices, the
    handling of the report size was not done correct.
    
    Fix that up and update the copyright date for the driver
    
    Reworked from an original patch written by Christoph Jung.
    
    Fixes: bab5417f5f01 ("USB: misc: iowarrior: add support for the 100 device")
    Fixes: 5f6f8da2d7b5 ("USB: misc: iowarrior: add support for the 28 and 28L devices")
    Fixes: 461d8deb26a7 ("USB: misc: iowarrior: add support for 2 OEMed devices")
    Cc: stable <stable@kernel.org>
    Reported-by: Christoph Jung <jung@codemercs.com>
    Link: https://lore.kernel.org/r/20200726094939.1268978-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7ee4b448513641bf143239c0a397037dcbd2904
Author: Erik Ekman <erik@kryo.se>
Date:   Fri Jul 17 20:51:18 2020 +0200

    USB: serial: qcserial: add EM7305 QDL product ID
    
    commit d2a4309c1ab6df424b2239fe2920d6f26f808d17 upstream.
    
    When running qmi-firmware-update on the Sierra Wireless EM7305 in a Toshiba
    laptop, it changed product ID to 0x9062 when entering QDL mode:
    
    usb 2-4: new high-speed USB device number 78 using xhci_hcd
    usb 2-4: New USB device found, idVendor=1199, idProduct=9062, bcdDevice= 0.00
    usb 2-4: New USB device strings: Mfr=1, Product=2, SerialNumber=0
    usb 2-4: Product: EM7305
    usb 2-4: Manufacturer: Sierra Wireless, Incorporated
    
    The upgrade could complete after running
     # echo 1199 9062 > /sys/bus/usb-serial/drivers/qcserial/new_id
    
    qcserial 2-4:1.0: Qualcomm USB modem converter detected
    usb 2-4: Qualcomm USB modem converter now attached to ttyUSB0
    
    Signed-off-by: Erik Ekman <erik@kryo.se>
    Link: https://lore.kernel.org/r/20200717185118.3640219-1-erik@kryo.se
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e912cdc8d2257b378c2392d8688c281588848ad4
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Mon Jul 6 14:07:07 2020 +0800

    scsi: ufs: Fix and simplify setup_xfer_req variant operation
    
    commit 6edfdcfe285e499994b94a0f93e1f46ab2398162 upstream.
    
    Add missing setup_xfer_req() call in ufshcd_issue_devman_upiu_cmd() in
    ufs-bsg path. Relocate existing setup_xfer_req() calls to a common place,
    i.e., ufshcd_send_command(), to simplify the driver.
    
    Link: https://lore.kernel.org/r/20200706060707.32608-3-stanley.chu@mediatek.com
    Acked-by: Avri Altman <Avri.Altman@wdc.com>
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
