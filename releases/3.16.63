commit e90210bb658d391aeeab597e647e130062b675dd
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Feb 11 17:54:32 2019 +0000

    Linux 3.16.63

commit 3d7dc84804b5a949184da17e3a10da87209688c5
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Oct 3 16:23:49 2018 -0700

    x86/vdso: Fix vDSO syscall fallback asm constraint regression
    
    commit 02e425668f5c9deb42787d10001a3b605993ad15 upstream.
    
    When I added the missing memory outputs, I failed to update the
    index of the first argument (ebx) on 32-bit builds, which broke the
    fallbacks.  Somehow I must have screwed up my testing or gotten
    lucky.
    
    Add another test to cover gettimeofday() as well.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 715bd9d12f84 ("x86/vdso: Fix asm constraints on vDSO syscall fallbacks")
    Link: http://lkml.kernel.org/r/21bd45ab04b6d838278fa5bebfa9163eceffa13c.1538608971.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.16:
     - Drop selftest changes
     - Adjust filename]
    Tested-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b3e976d8e483c1a7590ca0bbf7a73083adaedb2
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Dec 21 07:47:51 2018 -0800

    ipv6: tunnels: fix two use-after-free
    
    commit cbb49697d5512ce9e61b45ce75d3ee43d7ea5524 upstream.
    
    xfrm6_policy_check() might have re-allocated skb->head, we need
    to reload ipv6 header pointer.
    
    sysbot reported :
    
    BUG: KASAN: use-after-free in __ipv6_addr_type+0x302/0x32f net/ipv6/addrconf_core.c:40
    Read of size 4 at addr ffff888191b8cb70 by task syz-executor2/1304
    
    CPU: 0 PID: 1304 Comm: syz-executor2 Not tainted 4.20.0-rc7+ #356
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x244/0x39d lib/dump_stack.c:113
     print_address_description.cold.7+0x9/0x1ff mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.8+0x242/0x309 mm/kasan/report.c:412
     __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:432
     __ipv6_addr_type+0x302/0x32f net/ipv6/addrconf_core.c:40
     ipv6_addr_type include/net/ipv6.h:403 [inline]
     ip6_tnl_get_cap+0x27/0x190 net/ipv6/ip6_tunnel.c:727
     ip6_tnl_rcv_ctl+0xdb/0x2a0 net/ipv6/ip6_tunnel.c:757
     vti6_rcv+0x336/0x8f3 net/ipv6/ip6_vti.c:321
     xfrm6_ipcomp_rcv+0x1a5/0x3a0 net/ipv6/xfrm6_protocol.c:132
     ip6_protocol_deliver_rcu+0x372/0x1940 net/ipv6/ip6_input.c:394
     ip6_input_finish+0x84/0x170 net/ipv6/ip6_input.c:434
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ip6_input+0xe9/0x600 net/ipv6/ip6_input.c:443
    IPVS: ftp: loaded support on port[0] = 21
     ip6_mc_input+0x514/0x11c0 net/ipv6/ip6_input.c:537
     dst_input include/net/dst.h:450 [inline]
     ip6_rcv_finish+0x17a/0x330 net/ipv6/ip6_input.c:76
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ipv6_rcv+0x115/0x640 net/ipv6/ip6_input.c:272
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4973
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5083
     process_backlog+0x24e/0x7a0 net/core/dev.c:5923
     napi_poll net/core/dev.c:6346 [inline]
     net_rx_action+0x7fa/0x19b0 net/core/dev.c:6412
     __do_softirq+0x308/0xb7e kernel/softirq.c:292
     do_softirq_own_stack+0x2a/0x40 arch/x86/entry/entry_64.S:1027
     </IRQ>
     do_softirq.part.14+0x126/0x160 kernel/softirq.c:337
     do_softirq+0x19/0x20 kernel/softirq.c:340
     netif_rx_ni+0x521/0x860 net/core/dev.c:4569
     dev_loopback_xmit+0x287/0x8c0 net/core/dev.c:3576
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ip6_finish_output2+0x193a/0x2930 net/ipv6/ip6_output.c:84
     ip6_fragment+0x2b06/0x3850 net/ipv6/ip6_output.c:727
     ip6_finish_output+0x6b7/0xc50 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:278 [inline]
     ip6_output+0x232/0x9d0 net/ipv6/ip6_output.c:171
     dst_output include/net/dst.h:444 [inline]
     ip6_local_out+0xc5/0x1b0 net/ipv6/output_core.c:176
     ip6_send_skb+0xbc/0x340 net/ipv6/ip6_output.c:1727
     ip6_push_pending_frames+0xc5/0xf0 net/ipv6/ip6_output.c:1747
     rawv6_push_pending_frames net/ipv6/raw.c:615 [inline]
     rawv6_sendmsg+0x3a3e/0x4b40 net/ipv6/raw.c:945
    kobject: 'queues' (0000000089e6eea2): kobject_add_internal: parent: 'tunl0', set: '<NULL>'
    kobject: 'queues' (0000000089e6eea2): kobject_uevent_env
     inet_sendmsg+0x1a1/0x690 net/ipv4/af_inet.c:798
    kobject: 'queues' (0000000089e6eea2): kobject_uevent_env: filter function caused the event to drop!
     sock_sendmsg_nosec net/socket.c:621 [inline]
     sock_sendmsg+0xd5/0x120 net/socket.c:631
     sock_write_iter+0x35e/0x5c0 net/socket.c:900
     call_write_iter include/linux/fs.h:1857 [inline]
     new_sync_write fs/read_write.c:474 [inline]
     __vfs_write+0x6b8/0x9f0 fs/read_write.c:487
    kobject: 'rx-0' (00000000e2d902d9): kobject_add_internal: parent: 'queues', set: 'queues'
    kobject: 'rx-0' (00000000e2d902d9): kobject_uevent_env
     vfs_write+0x1fc/0x560 fs/read_write.c:549
     ksys_write+0x101/0x260 fs/read_write.c:598
    kobject: 'rx-0' (00000000e2d902d9): fill_kobj_path: path = '/devices/virtual/net/tunl0/queues/rx-0'
     __do_sys_write fs/read_write.c:610 [inline]
     __se_sys_write fs/read_write.c:607 [inline]
     __x64_sys_write+0x73/0xb0 fs/read_write.c:607
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
    kobject: 'tx-0' (00000000443b70ac): kobject_add_internal: parent: 'queues', set: 'queues'
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x457669
    Code: fd b3 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 cb b3 fb ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007f9bd200bc78 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 0000000000457669
    RDX: 000000000000058f RSI: 00000000200033c0 RDI: 0000000000000003
    kobject: 'tx-0' (00000000443b70ac): kobject_uevent_env
    RBP: 000000000072bf00 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00007f9bd200c6d4
    R13: 00000000004c2dcc R14: 00000000004da398 R15: 00000000ffffffff
    
    Allocated by task 1304:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc7/0xe0 mm/kasan/kasan.c:553
     __do_kmalloc_node mm/slab.c:3684 [inline]
     __kmalloc_node_track_caller+0x50/0x70 mm/slab.c:3698
     __kmalloc_reserve.isra.41+0x41/0xe0 net/core/skbuff.c:140
     __alloc_skb+0x155/0x760 net/core/skbuff.c:208
    kobject: 'tx-0' (00000000443b70ac): fill_kobj_path: path = '/devices/virtual/net/tunl0/queues/tx-0'
     alloc_skb include/linux/skbuff.h:1011 [inline]
     __ip6_append_data.isra.49+0x2f1a/0x3f50 net/ipv6/ip6_output.c:1450
     ip6_append_data+0x1bc/0x2d0 net/ipv6/ip6_output.c:1619
     rawv6_sendmsg+0x15ab/0x4b40 net/ipv6/raw.c:938
     inet_sendmsg+0x1a1/0x690 net/ipv4/af_inet.c:798
     sock_sendmsg_nosec net/socket.c:621 [inline]
     sock_sendmsg+0xd5/0x120 net/socket.c:631
     ___sys_sendmsg+0x7fd/0x930 net/socket.c:2116
     __sys_sendmsg+0x11d/0x280 net/socket.c:2154
     __do_sys_sendmsg net/socket.c:2163 [inline]
     __se_sys_sendmsg net/socket.c:2161 [inline]
     __x64_sys_sendmsg+0x78/0xb0 net/socket.c:2161
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    kobject: 'gre0' (00000000cb1b2d7b): kobject_add_internal: parent: 'net', set: 'devices'
    
    Freed by task 1304:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x102/0x150 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kfree+0xcf/0x230 mm/slab.c:3817
     skb_free_head+0x93/0xb0 net/core/skbuff.c:553
     pskb_expand_head+0x3b2/0x10d0 net/core/skbuff.c:1498
     __pskb_pull_tail+0x156/0x18a0 net/core/skbuff.c:1896
     pskb_may_pull include/linux/skbuff.h:2188 [inline]
     _decode_session6+0xd11/0x14d0 net/ipv6/xfrm6_policy.c:150
     __xfrm_decode_session+0x71/0x140 net/xfrm/xfrm_policy.c:3272
    kobject: 'gre0' (00000000cb1b2d7b): kobject_uevent_env
     __xfrm_policy_check+0x380/0x2c40 net/xfrm/xfrm_policy.c:3322
     __xfrm_policy_check2 include/net/xfrm.h:1170 [inline]
     xfrm_policy_check include/net/xfrm.h:1175 [inline]
     xfrm6_policy_check include/net/xfrm.h:1185 [inline]
     vti6_rcv+0x4bd/0x8f3 net/ipv6/ip6_vti.c:316
     xfrm6_ipcomp_rcv+0x1a5/0x3a0 net/ipv6/xfrm6_protocol.c:132
     ip6_protocol_deliver_rcu+0x372/0x1940 net/ipv6/ip6_input.c:394
     ip6_input_finish+0x84/0x170 net/ipv6/ip6_input.c:434
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ip6_input+0xe9/0x600 net/ipv6/ip6_input.c:443
     ip6_mc_input+0x514/0x11c0 net/ipv6/ip6_input.c:537
     dst_input include/net/dst.h:450 [inline]
     ip6_rcv_finish+0x17a/0x330 net/ipv6/ip6_input.c:76
     NF_HOOK include/linux/netfilter.h:289 [inline]
     ipv6_rcv+0x115/0x640 net/ipv6/ip6_input.c:272
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4973
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5083
     process_backlog+0x24e/0x7a0 net/core/dev.c:5923
    kobject: 'gre0' (00000000cb1b2d7b): fill_kobj_path: path = '/devices/virtual/net/gre0'
     napi_poll net/core/dev.c:6346 [inline]
     net_rx_action+0x7fa/0x19b0 net/core/dev.c:6412
     __do_softirq+0x308/0xb7e kernel/softirq.c:292
    
    The buggy address belongs to the object at ffff888191b8cac0
     which belongs to the cache kmalloc-512 of size 512
    The buggy address is located 176 bytes inside of
     512-byte region [ffff888191b8cac0, ffff888191b8ccc0)
    The buggy address belongs to the page:
    page:ffffea000646e300 count:1 mapcount:0 mapping:ffff8881da800940 index:0x0
    flags: 0x2fffc0000000200(slab)
    raw: 02fffc0000000200 ffffea0006eaaa48 ffffea00065356c8 ffff8881da800940
    raw: 0000000000000000 ffff888191b8c0c0 0000000100000006 0000000000000000
    page dumped because: kasan: bad access detected
    kobject: 'queues' (000000005fd6226e): kobject_add_internal: parent: 'gre0', set: '<NULL>'
    
    Memory state around the buggy address:
     ffff888191b8ca00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff888191b8ca80: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
    >ffff888191b8cb00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                                 ^
     ffff888191b8cb80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff888191b8cc00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    Fixes: 0d3c703a9d17 ("ipv6: Cleanup IPv6 tunnel receive path")
    Fixes: ed1efb2aefbb ("ipv6: Add support for IPsec virtual tunnel interfaces")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: Drop change in ipxip6_rcv()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 106fc089cca4b77756c58d23078e32b92005659d
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Dec 7 13:07:55 2018 +0000

    gpio: max7301: fix driver for use with CONFIG_VMAP_STACK
    
    commit abf221d2f51b8ce7b9959a8953f880a8b0a1400d upstream.
    
    spi_read() and spi_write() require DMA-safe memory. When
    CONFIG_VMAP_STACK is selected, those functions cannot be used
    with buffers on stack.
    
    This patch replaces calls to spi_read() and spi_write() by
    spi_write_then_read() which doesn't require DMA-safe buffers.
    
    Fixes: 0c36ec314735 ("gpio: gpio driver for max7301 SPI GPIO expander")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit abc60edcfc87771ff244763d4d19c67766f5dd0f
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Wed Dec 19 18:00:15 2018 -0600

    drm/ioctl: Fix Spectre v1 vulnerabilities
    
    commit 505b5240329b922f21f91d5b5d1e535c805eca6d upstream.
    
    nr is indirectly controlled by user-space, hence leading to a
    potential exploitation of the Spectre variant 1 vulnerability.
    
    This issue was detected with the help of Smatch:
    
    drivers/gpu/drm/drm_ioctl.c:805 drm_ioctl() warn: potential spectre issue 'dev->driver->ioctls' [r]
    drivers/gpu/drm/drm_ioctl.c:810 drm_ioctl() warn: potential spectre issue 'drm_ioctls' [r] (local cap)
    drivers/gpu/drm/drm_ioctl.c:892 drm_ioctl_flags() warn: potential spectre issue 'drm_ioctls' [r] (local cap)
    
    Fix this by sanitizing nr before using it to index dev->driver->ioctls
    and drm_ioctls.
    
    Notice that given that speculation windows are large, the policy is
    to kill the speculation on the first load and not worry if it can be
    completed with a dependent load/store [1].
    
    [1] https://marc.info/?l=linux-kernel&m=152449131114778&w=2
    
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181220000015.GA18973@embeddedor
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 170bf24fcee972ac0aed7cc526fd8700485403d5
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Mar 27 15:52:00 2015 +0200

    drm: Rewrite drm_ioctl_flags() to resemble the new drm_ioctl() code
    
    commit 7ef5f82b100716b23de7d2da6ff602b0842e5804 upstream.
    
    Use the same logic when checking for valid ioctl range in
    drm_ioctl_flags() that is used in drm_ioctl() to avoid
    confusion.
    
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 88d736da9d048419370acff19eef9db2ba1d4c87
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Dec 18 15:19:47 2018 +0000

    vxge: ensure data0 is initialized in when fetching firmware version information
    
    commit f7db2beb4c2c6cc8111f5ab90fc7363ca91107b6 upstream.
    
    Currently variable data0 is not being initialized so a garbage value is
    being passed to vxge_hw_vpath_fw_api and this value is being written to
    the rts_access_steer_data0 register.  There are other occurrances where
    data0 is being initialized to zero (e.g. in function
    vxge_hw_upgrade_read_version) so I think it makes sense to ensure data0
    is initialized likewise to 0.
    
    Detected by CoverityScan, CID#140696 ("Uninitialized scalar variable")
    
    Fixes: 8424e00dfd52 ("vxge: serialize access to steering control register")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e93901426b7cb921b9e8722b19f9e27c643b3375
Author: Petr Machata <petrm@mellanox.com>
Date:   Tue Dec 18 13:16:00 2018 +0000

    vxlan: Fix error path in __vxlan_dev_create()
    
    commit 6db9246871394b3a136cd52001a0763676563840 upstream.
    
    When a failure occurs in rtnl_configure_link(), the current code
    calls unregister_netdevice() to roll back the earlier call to
    register_netdevice(), and jumps to errout, which calls
    vxlan_fdb_destroy().
    
    However unregister_netdevice() calls transitively ndo_uninit, which is
    vxlan_uninit(), and that already takes care of deleting the default FDB
    entry by calling vxlan_fdb_delete_default(). Since the entry added
    earlier in __vxlan_dev_create() is exactly the default entry, the
    cleanup code in the errout block always leads to double free and thus a
    panic.
    
    Besides, since vxlan_fdb_delete_default() always destroys the FDB entry
    with notification enabled, the deletion of the default entry is notified
    even before the addition was notified.
    
    Instead, move the unregister_netdevice() call after the manual destroy,
    which solves both problems.
    
    Fixes: 0241b836732f ("vxlan: fix default fdb entry netlink notify ordering during netdev create")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5133a18f16f11ea4da28011da385e70ce7438cef
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Dec 17 15:05:41 2018 +0200

    net: macb: add missing barriers when reading descriptors
    
    commit 6e0af298066f3b6d99f58989bb0dca6f764b4c6d upstream.
    
    When reading buffer descriptors on RX or on TX completion, an
    RX_USED/TX_USED bit is checked first to ensure that the descriptors have
    been populated, i.e. the ownership has been transferred. However, there
    are no memory barriers to ensure that the data protected by the
    RX_USED/TX_USED bit is up-to-date with respect to that bit.
    
    Specifically:
    
    - TX timestamp descriptors may be loaded before ctrl is loaded for the
      TX_USED check, which is racy as the descriptors may be updated between
      the loads, causing old timestamp descriptor data to be used.
    
    - RX ctrl may be loaded before addr is loaded for the RX_USED check,
      which is racy as a new frame may be written between the loads, causing
      old ctrl descriptor data to be used.
      This issue exists for both macb_rx() and gem_rx() variants.
    
    Fix the races by adding DMA read memory barriers on those paths and
    reordering the reads in macb_rx().
    
    I have not observed any actual problems in practice caused by these
    being missing, though.
    
    Tested on a ZynqMP based system.
    
    Fixes: 89e5785fc8a6 ("[PATCH] Atmel MACB ethernet driver")
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16:
     - Use rmb() instead of dma_rmb()
     - Drop PTP changes
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 058b7c77e5bf8dea86d9bb52889dd583a1e284c7
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Mon Dec 17 15:05:40 2018 +0200

    net: macb: fix dropped RX frames due to a race
    
    commit 8159ecab0db9095902d4c73605fb8787f5c7d653 upstream.
    
    Bit RX_USED set to 0 in the address field allows the controller to write
    data to the receive buffer descriptor.
    
    The driver does not ensure the ctrl field is ready (cleared) when the
    controller sees the RX_USED=0 written by the driver. The ctrl field might
    only be cleared after the controller has already updated it according to
    a newly received frame, causing the frame to be discarded in gem_rx() due
    to unexpected ctrl field contents.
    
    A message is logged when the above scenario occurs:
    
      macb ff0b0000.ethernet eth0: not whole frame pointed by descriptor
    
    Fix the issue by ensuring that when the controller sees RX_USED=0 the
    ctrl field is already cleared.
    
    This issue was observed on a ZynqMP based system.
    
    Fixes: 4df95131ea80 ("net/macb: change RX path for GEM")
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Tested-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16:
     - Use bp->rx_ring[entry] instead of *desc
     - Use wmb() instead of dma_wmb()
     - Adjust filename]]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ff32ea6ffc00557fdb5343078c3a0afaaf9a4364
Author: Punnaiah Choudary Kalluri <punnaiah.choudary.kalluri@xilinx.com>
Date:   Wed Apr 29 08:34:46 2015 +0530

    net: macb: Fix race condition in driver when Rx frame is dropped
    
    commit d4c216c54197d741ed8b7ca54f13645dfb3eacde upstream.
    
    Under heavy Rx load, observed that the Hw is updating the USED bit
    and it is not updating the received frame status to the BD control
    field. This could be lack of resources for processing the BDs at high
    data rates. Driver drops the frame associated with this BD but not
    clearing the USED bit. So, this is causing hang condition as Hw
    expects USED bit to be cleared for this BD.
    
    Signed-off-by: Punnaiah Choudary Kalluri <punnaia@xilinx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 18a27a07b2afbd76dd94b5be9f569f842429a7da
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Dec 18 17:29:56 2018 +0000

    x86/mtrr: Don't copy uninitialized gentry fields back to userspace
    
    commit 32043fa065b51e0b1433e48d118821c71b5cd65d upstream.
    
    Currently the copy_to_user of data in the gentry struct is copying
    uninitiaized data in field _pad from the stack to userspace.
    
    Fix this by explicitly memset'ing gentry to zero, this also will zero any
    compiler added padding fields that may be in struct (currently there are
    none).
    
    Detected by CoverityScan, CID#200783 ("Uninitialized scalar variable")
    
    Fixes: b263b31e8ad6 ("x86, mtrr: Use explicit sizing and padding for the 64-bit ioctls")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Tyler Hicks <tyhicks@canonical.com>
    Cc: security@kernel.org
    Link: https://lkml.kernel.org/r/20181218172956.1440-1-colin.king@canonical.com
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit caeabc24a69a91724e3210d60bce838323d92755
Author: Eduardo Habkost <ehabkost@redhat.com>
Date:   Mon Dec 17 22:34:18 2018 -0200

    kvm: x86: Add AMD's EX_CFG to the list of ignored MSRs
    
    commit 0e1b869fff60c81b510c2d00602d778f8f59dd9a upstream.
    
    Some guests OSes (including Windows 10) write to MSR 0xc001102c
    on some cases (possibly while trying to apply a CPU errata).
    Make KVM ignore reads and writes to that MSR, so the guest won't
    crash.
    
    The MSR is documented as "Execution Unit Configuration (EX_CFG)",
    at AMD's "BIOS and Kernel Developer's Guide (BKDG) for AMD Family
    15h Models 00h-0Fh Processors".
    
    Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f082d564d99bd33b95fc2f51170bfb49d2e29744
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Thu Apr 6 15:22:20 2017 +0200

    KVM: x86: Add MSR_AMD64_DC_CFG to the list of ignored MSRs
    
    commit 405a353a0e20d09090ad96147da6afad9b0ce056 upstream.
    
    Hyper-V writes 0x800000000000 to MSR_AMD64_DC_CFG when running on AMD CPUs
    as recommended in erratum 383, analogous to our svm_init_erratum_383.
    
    By ignoring the MSR, this patch enables running Hyper-V in L1 on AMD.
    
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7da8d88b7bc1f4d1f26564ffb5a2c06f3998b801
Author: Dmitry Bilunov <kmeaw@yandex-team.ru>
Date:   Tue May 31 17:38:24 2016 +0300

    KVM: Handle MSR_IA32_PERF_CTL
    
    commit 0c2df2a1affd183ba9c114915f42a2d464b4f58f upstream.
    
    Intel CPUs having Turbo Boost feature implement an MSR to provide a
    control interface via rdmsr/wrmsr instructions. One could detect the
    presence of this feature by issuing one of these instructions and
    handling the #GP exception which is generated in case the referenced MSR
    is not implemented by the CPU.
    
    KVM's vCPU model behaves exactly as a real CPU in this case by injecting
    a fault when MSR_IA32_PERF_CTL is called (which KVM does not support).
    However, some operating systems use this register during an early boot
    stage in which their kernel is not capable of handling #GP correctly,
    causing #DP and finally a triple fault effectively resetting the vCPU.
    
    This patch implements a dummy handler for MSR_IA32_PERF_CTL to avoid the
    crashes.
    
    Signed-off-by: Dmitry Bilunov <kmeaw@yandex-team.ru>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4d6092feade85f09e689386595757ee1d4422707
Author: Wanpeng Li <wanpengli@tencent.com>
Date:   Mon Dec 17 10:43:23 2018 +0800

    KVM: X86: Fix NULL deref in vcpu_scan_ioapic
    
    commit dcbd3e49c2f0b2c2d8a321507ff8f3de4af76d7c upstream.
    
    Reported by syzkaller:
    
        CPU: 1 PID: 5962 Comm: syz-executor118 Not tainted 4.20.0-rc6+ #374
        Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
        RIP: 0010:kvm_apic_hw_enabled arch/x86/kvm/lapic.h:169 [inline]
        RIP: 0010:vcpu_scan_ioapic arch/x86/kvm/x86.c:7449 [inline]
        RIP: 0010:vcpu_enter_guest arch/x86/kvm/x86.c:7602 [inline]
        RIP: 0010:vcpu_run arch/x86/kvm/x86.c:7874 [inline]
        RIP: 0010:kvm_arch_vcpu_ioctl_run+0x5296/0x7320 arch/x86/kvm/x86.c:8074
        Call Trace:
             kvm_vcpu_ioctl+0x5c8/0x1150 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2596
             vfs_ioctl fs/ioctl.c:46 [inline]
             file_ioctl fs/ioctl.c:509 [inline]
             do_vfs_ioctl+0x1de/0x1790 fs/ioctl.c:696
             ksys_ioctl+0xa9/0xd0 fs/ioctl.c:713
             __do_sys_ioctl fs/ioctl.c:720 [inline]
             __se_sys_ioctl fs/ioctl.c:718 [inline]
             __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:718
             do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
             entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The reason is that the testcase writes hyperv synic HV_X64_MSR_SINT14 msr
    and triggers scan ioapic logic to load synic vectors into EOI exit bitmap.
    However, irqchip is not initialized by this simple testcase, ioapic/apic
    objects should not be accessed.
    
    This patch fixes it by also considering whether or not apic is present.
    
    Reported-by: syzbot+39810e6c400efadfef71@syzkaller.appspotmail.com
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 78d039b8679578535f78972d811a211c7130a21b
Author: Jorgen Hansen <jhansen@vmware.com>
Date:   Tue Dec 18 00:34:06 2018 -0800

    VSOCK: Send reset control packet when socket is partially bound
    
    commit a915b982d8f5e4295f64b8dd37ce753874867e88 upstream.
    
    If a server side socket is bound to an address, but not in the listening
    state yet, incoming connection requests should receive a reset control
    packet in response. However, the function used to send the reset
    silently drops the reset packet if the sending socket isn't bound
    to a remote address (as is the case for a bound socket not yet in
    the listening state). This change fixes this by using the src
    of the incoming packet as destination for the reset packet in
    this case.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Reviewed-by: Adit Ranadive <aditr@vmware.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Signed-off-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c932b985dc733e8bee554266cc51de1b04b23227
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Mon Dec 10 17:52:38 2018 +0100

    mmc: core: Use a minimum 1600ms timeout when enabling CACHE ctrl
    
    commit e3ae3401aa19432ee4943eb0bbc2ec704d07d793 upstream.
    
    Some eMMCs from Micron have been reported to need ~800 ms timeout, while
    enabling the CACHE ctrl after running sudden power failure tests. The
    needed timeout is greater than what the card specifies as its generic CMD6
    timeout, through the EXT_CSD register, hence the problem.
    
    Normally we would introduce a card quirk to extend the timeout for these
    specific Micron cards. However, due to the rather complicated debug process
    needed to find out the error, let's simply use a minimum timeout of 1600ms,
    the double of what has been reported, for all cards when enabling CACHE
    ctrl.
    
    Reported-by: Sjoerd Simons <sjoerd.simons@collabora.co.uk>
    Reported-by: Andreas Dannenberg <dannenberg@ti.com>
    Reported-by: Faiz Abbas <faiz_abbas@ti.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 582a4364cbbb1b51ea9f35d6f746994812987ee8
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Mon Dec 10 17:52:36 2018 +0100

    mmc: core: Reset HPI enabled state during re-init and in case of errors
    
    commit a0741ba40a009f97c019ae7541dc61c1fdf41efb upstream.
    
    During a re-initialization of the eMMC card, we may fail to re-enable HPI.
    In these cases, that isn't properly reflected in the card->ext_csd.hpi_en
    bit, as it keeps being set. This may cause following attempts to use HPI,
    even if's not enabled. Let's fix this!
    
    Fixes: eb0d8f135b67 ("mmc: core: support HPI send command")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ff8f4f93da4441e34a762137f1ede0ce8b798bd0
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Dec 11 14:41:31 2018 +0000

    mmc: omap_hsmmc: fix DMA API warning
    
    commit 0b479790684192ab7024ce6a621f93f6d0a64d92 upstream.
    
    While booting with rootfs on MMC, the following warning is encountered
    on OMAP4430:
    
    omap-dma-engine 4a056000.dma-controller: DMA-API: mapping sg segment longer than device claims to support [len=69632] [max=65536]
    
    This is because the DMA engine has a default maximum segment size of 64K
    but HSMMC sets:
    
            mmc->max_blk_size = 512;       /* Block Length at max can be 1024 */
            mmc->max_blk_count = 0xFFFF;    /* No. of Blocks is 16 bits */
            mmc->max_req_size = mmc->max_blk_size * mmc->max_blk_count;
            mmc->max_seg_size = mmc->max_req_size;
    
    which ends up telling the block layer that we support a maximum segment
    size of 65535*512, which exceeds the advertised DMA engine capabilities.
    
    Fix this by clamping the maximum segment size to the lower of the
    maximum request size and of the DMA engine device used for either DMA
    channel.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c6ebef26a95834d86a9e72fa70f5fd4b6ec395bf
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 14 10:54:43 2018 +0200

    xhci: Don't prevent USB2 bus suspend in state check intended for USB3 only
    
    commit 45f750c16cae3625014c14c77bd9005eda975d35 upstream.
    
    The code to prevent a bus suspend if a USB3 port was still in link training
    also reacted to USB2 port polling state.
    This caused bus suspend to busyloop in some cases.
    USB2 polling state is different from USB3, and should not prevent bus
    suspend.
    
    Limit the USB3 link training state check to USB3 root hub ports only.
    The origial commit went to stable so this need to be applied there as well
    
    Fixes: 2f31a67f01a8 ("usb: xhci: Prevent bus suspend if a port connect change or polling state is detected")
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2b5fe5ff042610d13880866b70dcb990c01cbb22
Author: Dexuan Cui <decui@microsoft.com>
Date:   Thu Dec 13 16:35:43 2018 +0000

    Drivers: hv: vmbus: Return -EINVAL for the sys files for unopened channels
    
    commit fc96df16a1ce80cbb3c316ab7d4dc8cd5c2852ce upstream.
    
    Before 98f4c651762c, we returned zeros for unopened channels.
    With 98f4c651762c, we started to return random on-stack values.
    
    We'd better return -EINVAL instead.
    
    Fixes: 98f4c651762c ("hv: move ringbuffer bus attributes to dev_groups")
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b99c4b9160ee4fb323fb647aa079ad81411a706
Author: Jason Wang <jasowang@redhat.com>
Date:   Thu Dec 13 10:53:37 2018 +0800

    vhost: make sure used idx is seen before log in vhost_add_used_n()
    
    commit 841df922417eb82c835e93d4b93eb6a68c99d599 upstream.
    
    We miss a write barrier that guarantees used idx is updated and seen
    before log. This will let userspace sync and copy used ring before
    used idx is update. Fix this by adding a barrier before log_write().
    
    Fixes: 8dd014adfea6f ("vhost-net: mergeable buffers support")
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit eee77673af65ca33f2332abc2d4173ac25bedefd
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Dec 12 06:46:55 2018 -0700

    scsi: sd: use mempool for discard special page
    
    commit 61cce6f6eeced5ddd9cac55e807fe28b4f18c1ba upstream.
    
    When boxes are run near (or to) OOM, we have a problem with the discard
    page allocation in sd. If we fail allocating the special page, we return
    busy, and it'll get retried. But since ordering is honored for dispatch
    requests, we can keep retrying this same IO and failing. Behind that IO
    could be requests that want to free memory, but they never get the
    chance. This means you get repeated spews of traces like this:
    
    [1201401.625972] Call Trace:
    [1201401.631748]  dump_stack+0x4d/0x65
    [1201401.639445]  warn_alloc+0xec/0x190
    [1201401.647335]  __alloc_pages_slowpath+0xe84/0xf30
    [1201401.657722]  ? get_page_from_freelist+0x11b/0xb10
    [1201401.668475]  ? __alloc_pages_slowpath+0x2e/0xf30
    [1201401.679054]  __alloc_pages_nodemask+0x1f9/0x210
    [1201401.689424]  alloc_pages_current+0x8c/0x110
    [1201401.699025]  sd_setup_write_same16_cmnd+0x51/0x150
    [1201401.709987]  sd_init_command+0x49c/0xb70
    [1201401.719029]  scsi_setup_cmnd+0x9c/0x160
    [1201401.727877]  scsi_queue_rq+0x4d9/0x610
    [1201401.736535]  blk_mq_dispatch_rq_list+0x19a/0x360
    [1201401.747113]  blk_mq_sched_dispatch_requests+0xff/0x190
    [1201401.758844]  __blk_mq_run_hw_queue+0x95/0xa0
    [1201401.768653]  blk_mq_run_work_fn+0x2c/0x30
    [1201401.777886]  process_one_work+0x14b/0x400
    [1201401.787119]  worker_thread+0x4b/0x470
    [1201401.795586]  kthread+0x110/0x150
    [1201401.803089]  ? rescuer_thread+0x320/0x320
    [1201401.812322]  ? kthread_park+0x90/0x90
    [1201401.820787]  ? do_syscall_64+0x53/0x150
    [1201401.829635]  ret_from_fork+0x29/0x40
    
    Ensure that the discard page allocation has a mempool backing, so we
    know we can make progress.
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [bwh: Backported to 3.16: Only sd_setup_discard_cmnd() does page-allocation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d75d90b57d06fb4b04240b3da8fcbd2ad4a64907
Author: Jörgen Storvist <jorgen.storvist@gmail.com>
Date:   Wed Dec 12 08:39:39 2018 +0100

    USB: serial: option: add Simcom SIM7500/SIM7600 (MBIM mode)
    
    commit cc6730df08a291e51e145bc65e24ffb5e2f17ab6 upstream.
    
    Added USB serial option driver support for Simcom SIM7500/SIM7600 series
    cellular modules exposing MBIM interface (VID 0x1e0e,PID 0x9003)
    
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 14 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=1e0e ProdID=9003 Rev=03.18
    S:  Manufacturer=SimTech, Incorporated
    S:  Product=SimTech, Incorporated
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 5 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#= 6 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    
    Signed-off-by: Jörgen Storvist <jorgen.storvist@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99c2b33803cbf9b79bc9441e74ab270fab1893fe
Author: Chad Austin <chadaustin@fb.com>
Date:   Mon Dec 10 10:54:52 2018 -0800

    fuse: continue to send FUSE_RELEASEDIR when FUSE_OPEN returns ENOSYS
    
    commit 2e64ff154ce6ce9a8dc0f9556463916efa6ff460 upstream.
    
    When FUSE_OPEN returns ENOSYS, the no_open bit is set on the connection.
    
    Because the FUSE_RELEASE and FUSE_RELEASEDIR paths share code, this
    incorrectly caused the FUSE_RELEASEDIR request to be dropped and never sent
    to userspace.
    
    Pass an isdir bool to distinguish between FUSE_RELEASE and FUSE_RELEASEDIR
    inside of fuse_file_put.
    
    Fixes: 7678ac50615d ("fuse: support clients that don't implement 'open'")
    Signed-off-by: Chad Austin <chadaustin@fb.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e3572165354001fb8107e0139a2b383cb316f9aa
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Feb 22 20:08:25 2017 +0100

    fuse: cleanup fuse_file refcounting
    
    commit 267d84449f52349ee252db684ed95ede18e51744 upstream.
    
    struct fuse_file is stored in file->private_data.  Make this always be a
    counting reference for consistency.
    
    This also allows fuse_sync_release() to call fuse_file_put() instead of
    partially duplicating its functionality.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    [bwh: Backported to 3.16: force and background flags are bitfields]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 749a8d78affba1ea2b7be8d8d05c4604c2034485
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Dec 10 23:58:01 2018 -0500

    tracing: Fix memory leak of instance function hash filters
    
    commit 2840f84f74035e5a535959d5f17269c69fa6edc5 upstream.
    
    The following commands will cause a memory leak:
    
     # cd /sys/kernel/tracing
     # mkdir instances/foo
     # echo schedule > instance/foo/set_ftrace_filter
     # rmdir instances/foo
    
    The reason is that the hashes that hold the filters to set_ftrace_filter and
    set_ftrace_notrace are not freed if they contain any data on the instance
    and the instance is removed.
    
    Found by kmemleak detector.
    
    Fixes: 591dffdade9f ("ftrace: Allow for function tracing instance to filter functions")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc7c8020cc300cb94306be4e5bc0aeec85eefaec
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Sun Dec 9 21:17:30 2018 -0500

    tracing: Fix memory leak in set_trigger_filter()
    
    commit 3cec638b3d793b7cacdec5b8072364b41caeb0e1 upstream.
    
    When create_event_filter() fails in set_trigger_filter(), the filter may
    still be allocated and needs to be freed. The caller expects the
    data->filter to be updated with the new filter, even if the new filter
    failed (we could add an error message by setting set_str parameter of
    create_event_filter(), but that's another update).
    
    But because the error would just exit, filter was left hanging and
    nothing could free it.
    
    Found by kmemleak detector.
    
    Fixes: bac5fb97a173a ("tracing: Add and use generic set_trigger_filter() implementation")
    Reviewed-by: Tom Zanussi <tom.zanussi@linux.intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ce20cd87c5825cf7f09300b4ad95f36b8061c49c
Author: Jeff Moyer <jmoyer@redhat.com>
Date:   Tue Dec 11 12:37:49 2018 -0500

    aio: fix spectre gadget in lookup_ioctx
    
    commit a538e3ff9dabcdf6c3f477a373c629213d1c3066 upstream.
    
    Matthew pointed out that the ioctx_table is susceptible to spectre v1,
    because the index can be controlled by an attacker.  The below patch
    should mitigate the attack for all of the aio system calls.
    
    Reported-by: Matthew Wilcox <willy@infradead.org>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc1f560d5f20861dc8495fca374f9f091cf77f6e
Author: Tore Anderson <tore@fud.no>
Date:   Sat Dec 8 19:05:12 2018 +0100

    USB: serial: option: add HP lt4132
    
    commit d57ec3c83b5153217a70b561d4fb6ed96f2f7a25 upstream.
    
    The HP lt4132 is a rebranded Huawei ME906s-158 LTE modem.
    
    The interface with protocol 0x16 is "CDC ECM & NCM" according to the *.inf
    files included with the Windows driver. Attaching the option driver to it
    doesn't result in a /dev/ttyUSB* device being created, so I've excluded it.
    Note that it is also excluded for corresponding Huawei-branded devices, cf.
    commit d544db293a44 ("USB: support new huawei devices in option.c").
    
    T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  3 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=ff MxPS=64 #Cfgs=  3
    P:  Vendor=03f0 ProdID=a31d Rev=01.02
    S:  Manufacturer=HP Inc.
    S:  Product=HP lt4132 LTE/HSPA+ 4G Module
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=2mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=06 Prot=10 Driver=option
    I:  If#=0x1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=13 Driver=option
    I:  If#=0x2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=12 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=06 Prot=16 Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=14 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=1b Driver=option
    
    T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  3 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=ff MxPS=64 #Cfgs=  3
    P:  Vendor=03f0 ProdID=a31d Rev=01.02
    S:  Manufacturer=HP Inc.
    S:  Product=HP lt4132 LTE/HSPA+ 4G Module
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=2mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=06 Prot=00 Driver=cdc_ether
    I:  If#=0x1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=06 Prot=00 Driver=cdc_ether
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=06 Prot=10 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=13 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=12 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=14 Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=1b Driver=option
    
    T:  Bus=01 Lev=01 Prnt=01 Port=02 Cnt=02 Dev#=  3 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=ff MxPS=64 #Cfgs=  3
    P:  Vendor=03f0 ProdID=a31d Rev=01.02
    S:  Manufacturer=HP Inc.
    S:  Product=HP lt4132 LTE/HSPA+ 4G Module
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 3 Cfg#= 3 Atr=a0 MxPwr=2mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=06 Prot=14 Driver=option
    
    Signed-off-by: Tore Anderson <tore@fud.no>
    [ johan: drop id defines ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9e6ce7b103f9198bd43dcfdc7d67f485f12a8281
Author: Tarick Bedeir <tarick@google.com>
Date:   Fri Dec 7 00:30:26 2018 -0800

    net/mlx4_core: Correctly set PFC param if global pause is turned off.
    
    commit bd5122cd1e0644d8bd8dd84517c932773e999766 upstream.
    
    rx_ppp and tx_ppp can be set between 0 and 255, so don't clamp to 1.
    
    Fixes: 6e8814ceb7e8 ("net/mlx4_en: Fix mixed PFC and Global pause user control requests")
    Signed-off-by: Tarick Bedeir <tarick@google.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 98b0025de3f7d0479b7834f9dfbe898205977656
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 1 08:25:30 2018 +0300

    scsi: bnx2fc: Fix NULL dereference in error handling
    
    commit 9ae4f8420ed7be4b13c96600e3568c144d101a23 upstream.
    
    If "interface" is NULL then we can't release it and trying to will only
    lead to an Oops.
    
    Fixes: aea71a024914 ("[SCSI] bnx2fc: Introduce interface structure for each vlan interface")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e57889c3e7bdc385a2d2b4196755333c6c966f78
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Nov 4 13:37:59 2014 +0300

    bnx2fc: fix an error code in _bnx2fc_create()
    
    commit 2043e1fd09c1896bb03a6e25b64baa84a30879c9 upstream.
    
    We should be returning an error code here instead of success.  Either
    -ENODEV or -ENOMEM would work.  There is also a failure message in
    printk().
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Chad Dupuis <chad.dupuis@qlogic.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6b84af3d2a8afaf0952fdf77ecb9fa72c78df707
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Wed Sep 26 18:48:30 2018 +0200

    virtio/s390: fix race in ccw_io_helper()
    
    commit 78b1a52e05c9db11d293342e8d6d8a230a04b4e7 upstream.
    
    While ccw_io_helper() seems like intended to be exclusive in a sense that
    it is supposed to facilitate I/O for at most one thread at any given
    time, there is actually nothing ensuring that threads won't pile up at
    vcdev->wait_q. If they do, all threads get woken up and see the status
    that belongs to some other request than their own. This can lead to bugs.
    For an example see:
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1788432
    
    This race normally does not cause any problems. The operations provided
    by struct virtio_config_ops are usually invoked in a well defined
    sequence, normally don't fail, and are normally used quite infrequent
    too.
    
    Yet, if some of the these operations are directly triggered via sysfs
    attributes, like in the case described by the referenced bug, userspace
    is given an opportunity to force races by increasing the frequency of the
    given operations.
    
    Let us fix the problem by ensuring, that for each device, we finish
    processing the previous request before starting with a new one.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Message-Id: <20180925121309.58524-3-pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 65305db390e33117990500966706876072395b5d
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Wed Sep 26 18:48:29 2018 +0200

    virtio/s390: avoid race on vcdev->config
    
    commit 2448a299ec416a80f699940a86f4a6d9a4f643b1 upstream.
    
    Currently we have a race on vcdev->config in virtio_ccw_get_config() and
    in virtio_ccw_set_config().
    
    This normally does not cause problems, as these are usually infrequent
    operations. However, for some devices writing to/reading from the config
    space can be triggered through sysfs attributes. For these, userspace can
    force the race by increasing the frequency.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Message-Id: <20180925121309.58524-2-pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f5b2d82b89e3671172e64396c36f155fdf60d70
Author: Macpaul Lin <macpaul@gmail.com>
Date:   Wed Oct 17 23:08:38 2018 +0800

    kgdboc: fix KASAN global-out-of-bounds bug in param_set_kgdboc_var()
    
    commit dada6a43b0402eba438a17ac86fdc64ac56a4607 upstream.
    
    This patch is trying to fix KE issue due to
    "BUG: KASAN: global-out-of-bounds in param_set_kgdboc_var+0x194/0x198"
    reported by Syzkaller scan."
    
    [26364:syz-executor0][name:report8t]BUG: KASAN: global-out-of-bounds in param_set_kgdboc_var+0x194/0x198
    [26364:syz-executor0][name:report&]Read of size 1 at addr ffffff900e44f95f by task syz-executor0/26364
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0]CPU: 7 PID: 26364 Comm: syz-executor0 Tainted: G W 0
    [26364:syz-executor0]Call trace:
    [26364:syz-executor0][<ffffff9008095cf8>] dump_bacIctrace+Ox0/0x470
    [26364:syz-executor0][<ffffff9008096de0>] show_stack+0x20/0x30
    [26364:syz-executor0][<ffffff90089cc9c8>] dump_stack+Oxd8/0x128
    [26364:syz-executor0][<ffffff90084edb38>] print_address_description +0x80/0x4a8
    [26364:syz-executor0][<ffffff90084ee270>] kasan_report+Ox178/0x390
    [26364:syz-executor0][<ffffff90084ee4a0>] _asan_report_loadi_noabort+Ox18/0x20
    [26364:syz-executor0][<ffffff9008b092ac>] param_set_kgdboc_var+Ox194/0x198
    [26364:syz-executor0][<ffffff900813af64>] param_attr_store+Ox14c/0x270
    [26364:syz-executor0][<ffffff90081394c8>] module_attr_store+0x60/0x90
    [26364:syz-executor0][<ffffff90086690c0>] sysfs_kl_write+Ox100/0x158
    [26364:syz-executor0][<ffffff9008666d84>] kernfs_fop_write+0x27c/0x3a8
    [26364:syz-executor0][<ffffff9008508264>] do_loop_readv_writev+0x114/0x1b0
    [26364:syz-executor0][<ffffff9008509ac8>] do_readv_writev+0x4f8/0x5e0
    [26364:syz-executor0][<ffffff9008509ce4>] vfs_writev+0x7c/Oxb8
    [26364:syz-executor0][<ffffff900850ba64>] SyS_writev+Oxcc/0x208
    [26364:syz-executor0][<ffffff90080883f0>] elO_svc_naked +0x24/0x28
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0][name:report&]The buggy address belongs to the variable:
    [26364:syz-executor0][name:report&] kgdb_tty_line+Ox3f/0x40
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0][name:report&]Memory state around the buggy address:
    [26364:syz-executor0] ffffff900e44f800: 00 00 00 00 00 04 fa fa fa fa fa fa 00 fa fa fa
    [26364:syz-executor0] ffffff900e44f880: fa fa fa fa 00 fa fa fa fa fa fa fa 00 fa fa fa
    [26364:syz-executor0]> ffffff900e44f900: fa fa fa fa 04 fa fa fa fa fa fa fa 00 00 00 00
    [26364:syz-executor0][name:report&]                                       ^
    [26364:syz-executor0] ffffff900e44f980: 00 fa fa fa fa fa fa fa 04 fa fa fa fa fa fa fa
    [26364:syz-executor0] ffffff900e44fa00: 04 fa fa fa fa fa fa fa 00 fa fa fa fa fa fa fa
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0][name:panic&]Disabling lock debugging due to kernel taint
    [26364:syz-executor0]------------[cut here]------------
    
    After checking the source code, we've found there might be an out-of-bounds
    access to "config[len - 1]" array when the variable "len" is zero.
    
    Signed-off-by: Macpaul Lin <macpaul@gmail.com>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7e2344d2f1e9a91f8baa84d62a32ea442f87d8c6
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed Dec 5 14:22:39 2018 +0200

    xhci: Prevent U1/U2 link pm states if exit latency is too long
    
    commit 0472bf06c6fd33c1a18aaead4c8f91e5a03d8d7b upstream.
    
    Don't allow USB3 U1 or U2 if the latency to wake up from the U-state
    reaches the service interval for a periodic endpoint.
    
    This is according to xhci 1.1 specification section 4.23.5.2 extra note:
    
    "Software shall ensure that a device is prevented from entering a U-state
     where its worst case exit latency approaches the ESIT."
    
    Allowing too long exit latencies for periodic endpoint confuses xHC
    internal scheduling, and new devices may fail to enumerate with a
    "Not enough bandwidth for new device state" error from the host.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f6b0a0659bdaa814ca0ed5c433cb26e417260408
Author: Sandeep Singh <sandeep.singh@amd.com>
Date:   Wed Dec 5 14:22:38 2018 +0200

    xhci: workaround CSS timeout on AMD SNPS 3.0 xHC
    
    commit a7d57abcc8a5bdeb53bbf8e87558e8e0a2c2a29d upstream.
    
    Occasionally AMD SNPS 3.0 xHC does not respond to
    CSS when set, also it does not flag anything on SRE and HCE
    to point the internal xHC errors on USBSTS register. This stalls
    the entire system wide suspend and there is no point in stalling
    just because of xHC CSS is not responding.
    
    To work around this problem, if the xHC does not flag
    anything on SRE and HCE, we can skip the CSS
    timeout and allow the system to continue the suspend. Once the
    system resume happens we can internally reset the controller
    using XHCI_RESET_ON_RESUME quirk
    
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Signed-off-by: Sandeep Singh <Sandeep.Singh@amd.com>
    cc: Nehal Shah <Nehal-bakulchandra.Shah@amd.com>
    Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Use next available quirk bit
     - Fold in commit 2419f30a4a4f "USB: xhci: fix 'broken_suspend' placement ..."
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9475b187931eea31993ae91446c9a4e76e8d0302
Author: Paulo Alcantara <palcantara@suse.com>
Date:   Thu Nov 15 15:20:52 2018 +0100

    cifs: Fix separator when building path from dentry
    
    commit c988de29ca161823db6a7125e803d597ef75b49c upstream.
    
    Make sure to use the CIFS_DIR_SEP(cifs_sb) as path separator for
    prefixpath too. Fixes a bug with smb1 UNIX extensions.
    
    Fixes: a6b5058fafdf ("fs/cifs: make share unaccessible at root level mountable")
    Signed-off-by: Paulo Alcantara <palcantara@suse.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f8860a91d7538022c1c3f0bdddeec9a9d83e0c09
Author: Mathias Payer <mathias.payer@nebelwelt.net>
Date:   Wed Dec 5 21:19:59 2018 +0100

    USB: check usb_get_extra_descriptor for proper size
    
    commit 704620afc70cf47abb9d6a1a57f3825d2bca49cf upstream.
    
    When reading an extra descriptor, we need to properly check the minimum
    and maximum size allowed, to prevent from invalid data being sent by a
    device.
    
    Reported-by: Hui Peng <benquike@gmail.com>
    Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Co-developed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Hui Peng <benquike@gmail.com>
    Signed-off-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 536d35b48dca070a9b4f49c084207186fb7ac807
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Dec 3 21:16:07 2018 +0200

    mac80211: ignore NullFunc frames in the duplicate detection
    
    commit 990d71846a0b7281bd933c34d734e6afc7408e7e upstream.
    
    NullFunc packets should never be duplicate just like
    QoS-NullFunc packets.
    
    We saw a client that enters / exits power save with
    NullFunc frames (and not with QoS-NullFunc) despite the
    fact that the association supports HT.
    This specific client also re-uses a non-zero sequence number
    for different NullFunc frames.
    At some point, the client had to send a retransmission of
    the NullFunc frame and we dropped it, leading to a
    misalignment in the power save state.
    Fix this by never consider a NullFunc frame as duplicate,
    just like we do for QoS NullFunc frames.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=201449
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    [bwh: Backported to 3.16: The condition for "should we check for duplication"
     is in ieee80211_rx_h_check() and is not inverted]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2dc0c7c77e3ed24bf15ab3d176653b7c7fe98f3c
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Nov 28 22:39:16 2018 +0100

    mac80211: fix reordering of buffered broadcast packets
    
    commit 9ec1190d065998650fd9260dea8cf3e1f56c0e8c upstream.
    
    If the buffered broadcast queue contains packets, letting new packets bypass
    that queue can lead to heavy reordering, since the driver is probably throttling
    transmission of buffered multicast packets after beacons.
    
    Keep buffering packets until the buffer has been cleared (and no client
    is in powersave mode).
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 37c3fc2e49bf95a57d46fb8c56a9d8bd723c35c3
Author: Harry Pan <harry.pan@intel.com>
Date:   Thu Nov 29 00:40:41 2018 +0800

    usb: quirk: add no-LPM quirk on SanDisk Ultra Flair device
    
    commit 2f2dde6ba89b1ef1fe23c1138131b315d9aa4019 upstream.
    
    Some lower volume SanDisk Ultra Flair in 16GB, which the VID:PID is
    in 0781:5591, will aggressively request LPM of U1/U2 during runtime,
    when using this thumb drive as the OS installation key we found the
    device will generate failure during U1 exit path making it dropped
    from the USB bus, this causes a corrupted installation in system at
    the end.
    
    i.e.,
    [  166.918296] hub 2-0:1.0: state 7 ports 7 chg 0000 evt 0004
    [  166.918327] usb usb2-port2: link state change
    [  166.918337] usb usb2-port2: do warm reset
    [  166.970039] usb usb2-port2: not warm reset yet, waiting 50ms
    [  167.022040] usb usb2-port2: not warm reset yet, waiting 200ms
    [  167.276043] usb usb2-port2: status 02c0, change 0041, 5.0 Gb/s
    [  167.276050] usb 2-2: USB disconnect, device number 2
    [  167.276058] usb 2-2: unregistering device
    [  167.276060] usb 2-2: unregistering interface 2-2:1.0
    [  167.276170] xhci_hcd 0000:00:15.0: shutdown urb ffffa3c7cc695cc0 ep1in-bulk
    [  167.284055] sd 0:0:0:0: [sda] tag#0 FAILED Result: hostbyte=DID_NO_CONNECT driverbyte=DRIVER_OK
    [  167.284064] sd 0:0:0:0: [sda] tag#0 CDB: Read(10) 28 00 00 33 04 90 00 01 00 00
    ...
    
    Analyzed the USB trace in the link layer we realized it is because
    of the 6-ms timer of tRecoveryConfigurationTimeout which documented
    on the USB 3.2 Revision 1.0, the section 7.5.10.4.2 of "Exit from
    Recovery.Configuration"; device initiates U1 exit -> Recovery.Active
    -> Recovery.Configuration, then the host timer timeout makes the link
    transits to eSS.Inactive -> Rx.Detect follows by a Warm Reset.
    
    Interestingly, the other higher volume of SanDisk Ultra Flair sharing
    the same VID:PID, such as 64GB, would not request LPM during runtime,
    it sticks at U0 always, thus disabling LPM does not affect those thumb
    drives at all.
    
    The same odd occures in SanDisk Ultra Fit 16GB, VID:PID in 0781:5583.
    
    Signed-off-by: Harry Pan <harry.pan@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ab0b0f367e2160fcaa19282b53a8aeb7215d0622
Author: Alexander Theissen <alex.theissen@me.com>
Date:   Tue Dec 4 23:43:35 2018 +0100

    usb: appledisplay: Add 27" Apple Cinema Display
    
    commit d7859905301880ad3e16272399d26900af3ac496 upstream.
    
    Add another Apple Cinema Display to the list of supported displays.
    
    Signed-off-by: Alexander Theissen <alex.theissen@me.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8677a923cb318d7be7afae7494bb61d8772c6cc1
Author: Young Xiao <YangX92@hotmail.com>
Date:   Wed Nov 28 08:06:53 2018 +0000

    staging: rtl8712: Fix possible buffer overrun
    
    commit 300cd664865bed5d50ae0a42fb4e3a6f415e8a10 upstream.
    
    In commit 8b7a13c3f404 ("staging: r8712u: Fix possible buffer
    overrun") we fix a potential off by one by making the limit smaller.
    The better fix is to make the buffer larger.  This makes it match up
    with the similar code in other drivers.
    
    Fixes: 8b7a13c3f404 ("staging: r8712u: Fix possible buffer overrun")
    Signed-off-by: Young Xiao <YangX92@hotmail.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dce51b5d6521c1f4e07050d93b184d8c483fad90
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Dec 4 09:40:35 2018 -0800

    rtnetlink: ndo_dflt_fdb_dump() only work for ARPHRD_ETHER devices
    
    commit 688838934c231bb08f46db687e57f6d8bf82709c upstream.
    
    kmsan was able to trigger a kernel-infoleak using a gre device [1]
    
    nlmsg_populate_fdb_fill() has a hard coded assumption
    that dev->addr_len is ETH_ALEN, as normally guaranteed
    for ARPHRD_ETHER devices.
    
    A similar issue was fixed recently in commit da71577545a5
    ("rtnetlink: Disallow FDB configuration for non-Ethernet device")
    
    [1]
    BUG: KMSAN: kernel-infoleak in copyout lib/iov_iter.c:143 [inline]
    BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x4c0/0x2700 lib/iov_iter.c:576
    CPU: 0 PID: 6697 Comm: syz-executor310 Not tainted 4.20.0-rc3+ #95
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x32d/0x480 lib/dump_stack.c:113
     kmsan_report+0x12c/0x290 mm/kmsan/kmsan.c:683
     kmsan_internal_check_memory+0x32a/0xa50 mm/kmsan/kmsan.c:743
     kmsan_copy_to_user+0x78/0xd0 mm/kmsan/kmsan_hooks.c:634
     copyout lib/iov_iter.c:143 [inline]
     _copy_to_iter+0x4c0/0x2700 lib/iov_iter.c:576
     copy_to_iter include/linux/uio.h:143 [inline]
     skb_copy_datagram_iter+0x4e2/0x1070 net/core/datagram.c:431
     skb_copy_datagram_msg include/linux/skbuff.h:3316 [inline]
     netlink_recvmsg+0x6f9/0x19d0 net/netlink/af_netlink.c:1975
     sock_recvmsg_nosec net/socket.c:794 [inline]
     sock_recvmsg+0x1d1/0x230 net/socket.c:801
     ___sys_recvmsg+0x444/0xae0 net/socket.c:2278
     __sys_recvmsg net/socket.c:2327 [inline]
     __do_sys_recvmsg net/socket.c:2337 [inline]
     __se_sys_recvmsg+0x2fa/0x450 net/socket.c:2334
     __x64_sys_recvmsg+0x4a/0x70 net/socket.c:2334
     do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x63/0xe7
    RIP: 0033:0x441119
    Code: 18 89 d0 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 db 0a fc ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007fffc7f008a8 EFLAGS: 00000207 ORIG_RAX: 000000000000002f
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 0000000000441119
    RDX: 0000000000000040 RSI: 00000000200005c0 RDI: 0000000000000003
    RBP: 00000000006cc018 R08: 0000000000000100 R09: 0000000000000100
    R10: 0000000000000100 R11: 0000000000000207 R12: 0000000000402080
    R13: 0000000000402110 R14: 0000000000000000 R15: 0000000000000000
    
    Uninit was stored to memory at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:246 [inline]
     kmsan_save_stack mm/kmsan/kmsan.c:261 [inline]
     kmsan_internal_chain_origin+0x13d/0x240 mm/kmsan/kmsan.c:469
     kmsan_memcpy_memmove_metadata+0x1a9/0xf70 mm/kmsan/kmsan.c:344
     kmsan_memcpy_metadata+0xb/0x10 mm/kmsan/kmsan.c:362
     __msan_memcpy+0x61/0x70 mm/kmsan/kmsan_instr.c:162
     __nla_put lib/nlattr.c:744 [inline]
     nla_put+0x20a/0x2d0 lib/nlattr.c:802
     nlmsg_populate_fdb_fill+0x444/0x810 net/core/rtnetlink.c:3466
     nlmsg_populate_fdb net/core/rtnetlink.c:3775 [inline]
     ndo_dflt_fdb_dump+0x73a/0x960 net/core/rtnetlink.c:3807
     rtnl_fdb_dump+0x1318/0x1cb0 net/core/rtnetlink.c:3979
     netlink_dump+0xc79/0x1c90 net/netlink/af_netlink.c:2244
     __netlink_dump_start+0x10c4/0x11d0 net/netlink/af_netlink.c:2352
     netlink_dump_start include/linux/netlink.h:216 [inline]
     rtnetlink_rcv_msg+0x141b/0x1540 net/core/rtnetlink.c:4910
     netlink_rcv_skb+0x394/0x640 net/netlink/af_netlink.c:2477
     rtnetlink_rcv+0x50/0x60 net/core/rtnetlink.c:4965
     netlink_unicast_kernel net/netlink/af_netlink.c:1310 [inline]
     netlink_unicast+0x1699/0x1740 net/netlink/af_netlink.c:1336
     netlink_sendmsg+0x13c7/0x1440 net/netlink/af_netlink.c:1917
     sock_sendmsg_nosec net/socket.c:621 [inline]
     sock_sendmsg net/socket.c:631 [inline]
     ___sys_sendmsg+0xe3b/0x1240 net/socket.c:2116
     __sys_sendmsg net/socket.c:2154 [inline]
     __do_sys_sendmsg net/socket.c:2163 [inline]
     __se_sys_sendmsg+0x305/0x460 net/socket.c:2161
     __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2161
     do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x63/0xe7
    
    Uninit was created at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:246 [inline]
     kmsan_internal_poison_shadow+0x6d/0x130 mm/kmsan/kmsan.c:170
     kmsan_kmalloc+0xa1/0x100 mm/kmsan/kmsan_hooks.c:186
     __kmalloc+0x14c/0x4d0 mm/slub.c:3825
     kmalloc include/linux/slab.h:551 [inline]
     __hw_addr_create_ex net/core/dev_addr_lists.c:34 [inline]
     __hw_addr_add_ex net/core/dev_addr_lists.c:80 [inline]
     __dev_mc_add+0x357/0x8a0 net/core/dev_addr_lists.c:670
     dev_mc_add+0x6d/0x80 net/core/dev_addr_lists.c:687
     ip_mc_filter_add net/ipv4/igmp.c:1128 [inline]
     igmp_group_added+0x4d4/0xb80 net/ipv4/igmp.c:1311
     __ip_mc_inc_group+0xea9/0xf70 net/ipv4/igmp.c:1444
     ip_mc_inc_group net/ipv4/igmp.c:1453 [inline]
     ip_mc_up+0x1c3/0x400 net/ipv4/igmp.c:1775
     inetdev_event+0x1d03/0x1d80 net/ipv4/devinet.c:1522
     notifier_call_chain kernel/notifier.c:93 [inline]
     __raw_notifier_call_chain kernel/notifier.c:394 [inline]
     raw_notifier_call_chain+0x13d/0x240 kernel/notifier.c:401
     __dev_notify_flags+0x3da/0x860 net/core/dev.c:1733
     dev_change_flags+0x1ac/0x230 net/core/dev.c:7569
     do_setlink+0x165f/0x5ea0 net/core/rtnetlink.c:2492
     rtnl_newlink+0x2ad7/0x35a0 net/core/rtnetlink.c:3111
     rtnetlink_rcv_msg+0x1148/0x1540 net/core/rtnetlink.c:4947
     netlink_rcv_skb+0x394/0x640 net/netlink/af_netlink.c:2477
     rtnetlink_rcv+0x50/0x60 net/core/rtnetlink.c:4965
     netlink_unicast_kernel net/netlink/af_netlink.c:1310 [inline]
     netlink_unicast+0x1699/0x1740 net/netlink/af_netlink.c:1336
     netlink_sendmsg+0x13c7/0x1440 net/netlink/af_netlink.c:1917
     sock_sendmsg_nosec net/socket.c:621 [inline]
     sock_sendmsg net/socket.c:631 [inline]
     ___sys_sendmsg+0xe3b/0x1240 net/socket.c:2116
     __sys_sendmsg net/socket.c:2154 [inline]
     __do_sys_sendmsg net/socket.c:2163 [inline]
     __se_sys_sendmsg+0x305/0x460 net/socket.c:2161
     __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2161
     do_syscall_64+0xcf/0x110 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x63/0xe7
    
    Bytes 36-37 of 105 are uninitialized
    Memory access of size 105 starts at ffff88819686c000
    Data copied to user address 0000000020000380
    
    Fixes: d83b06036048 ("net: add fdb generic dump routine")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: Ido Schimmel <idosch@mellanox.com>
    Cc: David Ahern <dsahern@gmail.com>
    Reviewed-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 753a626c3167c8553d97beaed3b09bf806e11bc1
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Tue Nov 20 01:14:00 2018 +0200

    MMC: OMAP: fix broken MMC on OMAP15XX/OMAP5910/OMAP310
    
    commit e8cde625bfe8a714a856e1366bcbb259d7346095 upstream.
    
    Since v2.6.22 or so there has been reports [1] about OMAP MMC being
    broken on OMAP15XX based hardware (OMAP5910 and OMAP310). The breakage
    seems to have been caused by commit 46a6730e3ff9 ("mmc-omap: Fix
    omap to use MMC_POWER_ON") that changed clock enabling to be done
    on MMC_POWER_ON. This can happen multiple times in a row, and on 15XX
    the hardware doesn't seem to like it and the MMC just stops responding.
    Fix by memorizing the power mode and do the init only when necessary.
    
    Before the patch (on Palm TE):
    
            mmc0: new SD card at address b368
            mmcblk0: mmc0:b368 SDC   977 MiB
            mmci-omap mmci-omap.0: command timeout (CMD18)
            mmci-omap mmci-omap.0: command timeout (CMD13)
            mmci-omap mmci-omap.0: command timeout (CMD13)
            mmci-omap mmci-omap.0: command timeout (CMD12) [x 6]
            mmci-omap mmci-omap.0: command timeout (CMD13) [x 6]
            mmcblk0: error -110 requesting status
            mmci-omap mmci-omap.0: command timeout (CMD8)
            mmci-omap mmci-omap.0: command timeout (CMD18)
            mmci-omap mmci-omap.0: command timeout (CMD13)
            mmci-omap mmci-omap.0: command timeout (CMD13)
            mmci-omap mmci-omap.0: command timeout (CMD12) [x 6]
            mmci-omap mmci-omap.0: command timeout (CMD13) [x 6]
            mmcblk0: error -110 requesting status
            mmcblk0: recovery failed!
            print_req_error: I/O error, dev mmcblk0, sector 0
            Buffer I/O error on dev mmcblk0, logical block 0, async page read
             mmcblk0: unable to read partition table
    
    After the patch:
    
            mmc0: new SD card at address b368
            mmcblk0: mmc0:b368 SDC   977 MiB
             mmcblk0: p1
    
    The patch is based on a fix and analysis done by Ladislav Michl.
    
    Tested on OMAP15XX/OMAP310 (Palm TE), OMAP1710 (Nokia 770)
    and OMAP2420 (Nokia N810).
    
    [1] https://marc.info/?t=123175197000003&r=1&w=2
    
    Fixes: 46a6730e3ff9 ("mmc-omap: Fix omap to use MMC_POWER_ON")
    Reported-by: Ladislav Michl <ladis@linux-mips.org>
    Reported-by: Andrzej Zaborowski <balrogg@gmail.com>
    Tested-by: Ladislav Michl <ladis@linux-mips.org>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16: Set initial state to MMC_POWER_OFF instead of
     MMC_POWER_UNDEFINED]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 82b831bf8f33907edb82d866ab8134162c9ffb76
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon Nov 26 14:38:13 2018 +0100

    mmc: core: use mrq->sbc when sending CMD23 for RPMB
    
    commit a44f7cb937321d4961bfc8f28912126b06e701c5 upstream.
    
    When sending out CMD23 in the blk preparation, the comment there
    rightfully says:
    
             * However, it is not sufficient to just send CMD23,
             * and avoid the final CMD12, as on an error condition
             * CMD12 (stop) needs to be sent anyway. This, coupled
             * with Auto-CMD23 enhancements provided by some
             * hosts, means that the complexity of dealing
             * with this is best left to the host. If CMD23 is
             * supported by card and host, we'll fill sbc in and let
             * the host deal with handling it correctly.
    
    Let's do this behaviour for RPMB as well, and not send CMD23
    independently. Otherwise IP cores (like Renesas SDHI) may timeout
    because of automatic CMD23/CMD12 handling.
    
    Reported-by: Masaharu Hayakawa <masaharu.hayakawa.ry@renesas.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Clément Péron <peron.clem@gmail.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 75d3247ee5424021c0fc59c9da3b2ca2dd181432
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sun Dec 2 12:12:24 2018 +0100

    ARM: mmp/mmp2: fix cpu_is_mmp2() on mmp2-dt
    
    commit 76f4e2c3b6a560cdd7a75b87df543e04d05a9e5f upstream.
    
    cpu_is_mmp2() was equivalent to cpu_is_pj4(), wouldn't be correct for
    multiplatform kernels. Fix it by also considering mmp_chip_id, as is
    done for cpu_is_pxa168() and cpu_is_pxa910() above.
    
    Moreover, it is only available with CONFIG_CPU_MMP2 and thus doesn't work
    on DT-based MMP2 machines. Enable it on CONFIG_MACH_MMP2_DT too.
    
    Note: CONFIG_CPU_MMP2 is only used for machines that use board files
    instead of DT. It should perhaps be renamed. I'm not doing it now, because
    I don't have a better idea.
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a1907fd0fa85339ac0b4fba6c30c46e339f27196
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Wed Nov 28 03:37:43 2018 -0500

    media: vb2: don't call __vb2_queue_cancel if vb2_start_streaming failed
    
    commit 04990215dec43c424daff00d1f622167b8aafd1f upstream.
    
    vb2_start_streaming() already rolls back the buffers, so there is no
    need to call __vb2_queue_cancel(). Especially since __vb2_queue_cancel()
    does too much, such as zeroing the q->queued_count value, causing vb2
    to think that no buffers have been queued.
    
    It appears that this call to __vb2_queue_cancel() is a left-over from
    before commit b3379c6201bb3.
    
    Fixes: b3379c6201bb3 ('vb2: only call start_streaming if sufficient buffers are queued')
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1c38b9d9e74a24a8ed9089429031f6d7721b6df0
Author: Hui Peng <benquike@gmail.com>
Date:   Mon Dec 3 16:09:34 2018 +0100

    ALSA: usb-audio: Fix UAF decrement if card has no live interfaces in card.c
    
    commit 5f8cf712582617d523120df67d392059eaf2fc4b upstream.
    
    If a USB sound card reports 0 interfaces, an error condition is triggered
    and the function usb_audio_probe errors out. In the error path, there was a
    use-after-free vulnerability where the memory object of the card was first
    freed, followed by a decrement of the number of active chips. Moving the
    decrement above the atomic_dec fixes the UAF.
    
    [ The original problem was introduced in 3.1 kernel, while it was
      developed in a different form.  The Fixes tag below indicates the
      original commit but it doesn't mean that the patch is applicable
      cleanly. -- tiwai ]
    
    Fixes: 362e4e49abe5 ("ALSA: usb-audio - clear chip->probing on error exit")
    Reported-by: Hui Peng <benquike@gmail.com>
    Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Signed-off-by: Hui Peng <benquike@gmail.com>
    Signed-off-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6e0f19aeccf3ec88c2c5208044232f1fa7e6fdd1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Aug 26 10:20:59 2015 +0200

    ALSA: usb-audio: Replace probing flag with active refcount
    
    commit a6da499b76b1a75412f047ac388e9ffd69a5c55b upstream.
    
    We can use active refcount for preventing autopm during probe.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 800c435679b3344b352068179785c0ee315c0a55
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 25 16:09:00 2015 +0200

    ALSA: usb-audio: Avoid nested autoresume calls
    
    commit 47ab154593827b1a8f0713a2b9dd445753d551d8 upstream.
    
    After the recent fix of runtime PM for USB-audio driver, we got a
    lockdep warning like:
    
      =============================================
      [ INFO: possible recursive locking detected ]
      4.2.0-rc8+ #61 Not tainted
      ---------------------------------------------
      pulseaudio/980 is trying to acquire lock:
       (&chip->shutdown_rwsem){.+.+.+}, at: [<ffffffffa0355dac>] snd_usb_autoresume+0x1d/0x52 [snd_usb_audio]
      but task is already holding lock:
       (&chip->shutdown_rwsem){.+.+.+}, at: [<ffffffffa0355dac>] snd_usb_autoresume+0x1d/0x52 [snd_usb_audio]
    
    This comes from snd_usb_autoresume() invoking down_read() and it's
    used in a nested way.  Although it's basically safe, per se (as these
    are read locks), it's better to reduce such spurious warnings.
    
    The read lock is needed to guarantee the execution of "shutdown"
    (cleanup at disconnection) task after all concurrent tasks are
    finished.  This can be implemented in another better way.
    
    Also, the current check of chip->in_pm isn't good enough for
    protecting the racy execution of multiple auto-resumes.
    
    This patch rewrites the logic of snd_usb_autoresume() & co; namely,
    - The recursive call of autopm is avoided by the new refcount,
      chip->active.  The chip->in_pm flag is removed accordingly.
    - Instead of rwsem, another refcount, chip->usage_count, is introduced
      for tracking the period to delay the shutdown procedure.  At
      the last clear of this refcount, wake_up() to the shutdown waiter is
      called.
    - The shutdown flag is replaced with shutdown atomic count; this is
      for reducing the lock.
    - Two new helpers are introduced to simplify the management of these
      refcounts; snd_usb_lock_shutdown() increases the usage_count, checks
      the shutdown state, and does autoresume.  snd_usb_unlock_shutdown()
      does the opposite.  Most of mixer and other codes just need this,
      and simply returns an error if it receives an error from lock.
    
    Fixes: 9003ebb13f61 ('ALSA: usb-audio: Fix runtime PM unbalance')
    Reported-and-tested-by: Alexnader Kuleshov <kuleshovmail@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.16:
     - Drop inapplicable changes in mixer quirk functions
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 51c93ea2fa57558702d30f21f9acdd95a40e4ac6
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sat Dec 1 23:18:00 2018 -0500

    SUNRPC: Fix a potential race in xprt_connect()
    
    commit 0a9a4304f3614e25d9de9b63502ca633c01c0d70 upstream.
    
    If an asynchronous connection attempt completes while another task is
    in xprt_connect(), then the call to rpc_sleep_on() could end up
    racing with the call to xprt_wake_pending_tasks().
    So add a second test of the connection state after we've put the
    task to sleep and set the XPRT_CONNECTING flag, when we know that there
    can be no asynchronous connection attempts still in progress.
    
    Fixes: 0b9e79431377d ("SUNRPC: Move the test for XPRT_CONNECTING into...")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 60ac002822a2087117b27a7f4045bdecf8551152
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Nov 30 15:39:57 2018 -0500

    SUNRPC: Fix leak of krb5p encode pages
    
    commit 8dae5398ab1ac107b1517e8195ed043d5f422bd0 upstream.
    
    call_encode can be invoked more than once per RPC call. Ensure that
    each call to gss_wrap_req_priv does not overwrite pointers to
    previously allocated memory.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 331fcda493fee2f2bcbefc3f0444bba16a40ab79
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Thu Nov 29 14:45:39 2018 +0100

    tun: forbid iface creation with rtnl ops
    
    commit 35b827b6d06199841a83839e8bb69c0cd13a28be upstream.
    
    It's not supported right now (the goal of the initial patch was to support
    'ip link del' only).
    
    Before the patch:
    $ ip link add foo type tun
    [  239.632660] BUG: unable to handle kernel NULL pointer dereference at 0000000000000000
    [snip]
    [  239.636410] RIP: 0010:register_netdevice+0x8e/0x3a0
    
    This panic occurs because dev->netdev_ops is not set by tun_setup(). But to
    have something usable, it will require more than just setting
    netdev_ops.
    
    Fixes: f019a7a594d9 ("tun: Implement ip link del tunXXX")
    CC: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: Don't use extack]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 32a57e8f4190d67e9d9f847971b3c237f4b78193
Author: Pan Bian <bianpan2016@163.com>
Date:   Fri Nov 30 14:09:14 2018 -0800

    hfs: do not free node before using
    
    commit ce96a407adef126870b3f4a1b73529dd8aa80f49 upstream.
    
    hfs_bmap_free() frees the node via hfs_bnode_put(node).  However, it
    then reads node->this when dumping error message on an error path, which
    may result in a use-after-free bug.  This patch frees the node only when
    it is never again used.
    
    Link: http://lkml.kernel.org/r/1542963889-128825-1-git-send-email-bianpan2016@163.com
    Fixes: a1185ffa2fc ("HFS rewrite")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Joe Perches <joe@perches.com>
    Cc: Ernesto A. Fernandez <ernesto.mnd.fernandez@gmail.com>
    Cc: Viacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c726f23f2a542064b573d559d217da7e213b04b5
Author: Richard Genoud <richard.genoud@gmail.com>
Date:   Tue Nov 27 17:06:35 2018 +0100

    dmaengine: at_hdmac: fix module unloading
    
    commit 77e75fda94d2ebb86aa9d35fb1860f6395bf95de upstream.
    
    of_dma_controller_free() was not called on module onloading.
    This lead to a soft lockup:
    watchdog: BUG: soft lockup - CPU#0 stuck for 23s!
    Modules linked in: at_hdmac [last unloaded: at_hdmac]
    when of_dma_request_slave_channel() tried to call ofdma->of_dma_xlate().
    
    Fixes: bbe89c8e3d59 ("at_hdmac: move to generic DMA binding")
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Richard Genoud <richard.genoud@gmail.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e2fd6a4ccf7f56157a33008dbc75ea0639e93d64
Author: Richard Genoud <richard.genoud@gmail.com>
Date:   Tue Nov 27 17:06:34 2018 +0100

    dmaengine: at_hdmac: fix memory leak in at_dma_xlate()
    
    commit 98f5f932254b88ce828bc8e4d1642d14e5854caa upstream.
    
    The leak was found when opening/closing a serial port a great number of
    time, increasing kmalloc-32 in slabinfo.
    
    Each time the port was opened, dma_request_slave_channel() was called.
    Then, in at_dma_xlate(), atslave was allocated with devm_kzalloc() and
    never freed. (Well, it was free at module unload, but that's not what we
    want).
    So, here, kzalloc is more suited for the job since it has to be freed in
    atc_free_chan_resources().
    
    Fixes: bbe89c8e3d59 ("at_hdmac: move to generic DMA binding")
    Reported-by: Mario Forner <m.forner@be4energy.com>
    Suggested-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Richard Genoud <richard.genoud@gmail.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e6af1c80d2cc493c34140cdeeeb6db6ba817202f
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Nov 29 08:57:37 2018 +0000

    ALSA: hda: Add support for AMD Stoney Ridge
    
    commit 3deef52ce10514ccdebba8e8ab85f9cebd0eb3f7 upstream.
    
    It's similar to other AMD audio devices, it also supports D3, which can
    save some power drain.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c29efc25577ffd72c8a9149e0873ccd4b22f8f54
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 29 08:02:49 2018 +0100

    ALSA: pcm: Call snd_pcm_unlink() conditionally at closing
    
    commit b51abed8355e5556886623b2772fa6b7598d2282 upstream.
    
    Currently the PCM core calls snd_pcm_unlink() always unconditionally
    at closing a stream.  However, since snd_pcm_unlink() invokes the
    global rwsem down, the lock can be easily contended.  More badly, when
    a thread runs in a high priority RT-FIFO, it may stall at spinning.
    
    Basically the call of snd_pcm_unlink() is required only for the linked
    streams that are already rare occasion.  For normal use cases, this
    code path is fairly superfluous.
    
    As an optimization (and also as a workaround for the RT problem
    above in normal situations without linked streams), this patch adds a
    check before calling snd_pcm_unlink() and calls it only when needed.
    
    Reported-by: Chanho Min <chanho.min@lge.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e82e90a1cba6c20ea92a09c47213657db32cf0f9
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Wed Nov 28 16:20:50 2018 +0100

    s390/qeth: fix length check in SNMP processing
    
    commit 9a764c1e59684c0358e16ccaafd870629f2cfe67 upstream.
    
    The response for a SNMP request can consist of multiple parts, which
    the cmd callback stages into a kernel buffer until all parts have been
    received. If the callback detects that the staging buffer provides
    insufficient space, it bails out with error.
    This processing is buggy for the first part of the response - while it
    initially checks for a length of 'data_len', it later copies an
    additional amount of 'offsetof(struct qeth_snmp_cmd, data)' bytes.
    
    Fix the calculation of 'data_len' for the first part of the response.
    This also nicely cleans up the memcpy code.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d4913f1dd48efcc9050a134bdc860ba04ab9debb
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Nov 28 14:53:19 2018 +0800

    rapidio/rionet: do not free skb before reading its length
    
    commit cfc435198f53a6fa1f656d98466b24967ff457d0 upstream.
    
    skb is freed via dev_kfree_skb_any, however, skb->len is read then. This
    may result in a use-after-free bug.
    
    Fixes: e6161d64263 ("rapidio/rionet: rework driver initialization and removal")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 31b48721357029dd8ef4882d6436388c7c155863
Author: Jim Mattson <jmattson@google.com>
Date:   Tue May 22 09:54:20 2018 -0700

    kvm: svm: Ensure an IBPB on all affected CPUs when freeing a vmcb
    
    commit fd65d3142f734bc4376053c8d75670041903134d upstream.
    
    Previously, we only called indirect_branch_prediction_barrier on the
    logical CPU that freed a vmcb. This function should be called on all
    logical CPUs that last loaded the vmcb in question.
    
    Fixes: 15d45071523d ("KVM/x86: Add IBPB support")
    Reported-by: Neel Natu <neelnatu@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 434344298cb6ffedae11cd9ae7fc2a1cea96ac8d
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Oct 31 14:53:57 2018 -0700

    kvm: mmu: Fix race in emulated page table writes
    
    commit 0e0fee5c539b61fdd098332e0e2cc375d9073706 upstream.
    
    When a guest page table is updated via an emulated write,
    kvm_mmu_pte_write() is called to update the shadow PTE using the just
    written guest PTE value. But if two emulated guest PTE writes happened
    concurrently, it is possible that the guest PTE and the shadow PTE end
    up being out of sync. Emulated writes do not mark the shadow page as
    unsync-ed, so this inconsistency will not be resolved even by a guest TLB
    flush (unless the page was marked as unsync-ed at some other point).
    
    This is fixed by re-reading the current value of the guest PTE after the
    MMU lock has been acquired instead of just using the value that was
    written prior to calling kvm_mmu_pte_write().
    
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Reviewed-by: Wanpeng Li <wanpengli@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.16: Use kvm_read_guest_atomic()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2ada5a08b091d1d825c41d61decb6e6db3de3d54
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Nov 25 08:58:02 2018 +0800

    ext2: fix potential use after free
    
    commit ecebf55d27a11538ea84aee0be643dd953f830d5 upstream.
    
    The function ext2_xattr_set calls brelse(bh) to drop the reference count
    of bh. After that, bh may be freed. However, following brelse(bh),
    it reads bh->b_data via macro HDR(bh). This may result in a
    use-after-free bug. This patch moves brelse(bh) after reading field.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8dc4dd2c7b7284a172fc1dd5880fca5d0decbbf2
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Nov 26 18:06:01 2018 -0800

    xtensa: fix coprocessor part of ptrace_{get,set}xregs
    
    commit 38a35a78c5e270cbe53c4fef6b0d3c2da90dd849 upstream.
    
    Layout of coprocessor registers in the elf_xtregs_t and
    xtregs_coprocessor_t may be different due to alignment. Thus it is not
    always possible to copy data between the xtregs_coprocessor_t structure
    and the elf_xtregs_t and get correct values for all registers.
    Use a table of offsets and sizes of individual coprocessor register
    groups to do coprocessor context copying in the ptrace_getxregs and
    ptrace_setxregs.
    This fixes incorrect coprocessor register values reading from the user
    process by the native gdb on an xtensa core with multiple coprocessors
    and registers with high alignment requirements.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0d6e25c4bf5736007ea971a80a208b3f8c8f10de
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Nov 26 15:18:26 2018 -0800

    xtensa: fix coprocessor context offset definitions
    
    commit 03bc996af0cc71c7f30c384d8ce7260172423b34 upstream.
    
    Coprocessor context offsets are used by the assembly code that moves
    coprocessor context between the individual fields of the
    thread_info::xtregs_cp structure and coprocessor registers.
    This fixes coprocessor context clobbering on flushing and reloading
    during normal user code execution and user process debugging in the
    presence of more than one coprocessor in the core configuration.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8949d533a3d7f98aded9aef9d523554261f8f7ac
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Nov 26 13:29:41 2018 -0800

    xtensa: enable coprocessors that are being flushed
    
    commit 2958b66694e018c552be0b60521fec27e8d12988 upstream.
    
    coprocessor_flush_all may be called from a context of a thread that is
    different from the thread being flushed. In that case contents of the
    cpenable special register may not match ti->cpenable of the target
    thread, resulting in unhandled coprocessor exception in the kernel
    context.
    Set cpenable special register to the ti->cpenable of the target register
    for the duration of the flush and restore it afterwards.
    This fixes the following crash caused by coprocessor register inspection
    in native gdb:
    
      (gdb) p/x $w0
      Illegal instruction in kernel: sig: 9 [#1] PREEMPT
      Call Trace:
        ___might_sleep+0x184/0x1a4
        __might_sleep+0x41/0xac
        exit_signals+0x14/0x218
        do_exit+0xc9/0x8b8
        die+0x99/0xa0
        do_illegal_instruction+0x18/0x6c
        common_exception+0x77/0x77
        coprocessor_flush+0x16/0x3c
        arch_ptrace+0x46c/0x674
        sys_ptrace+0x2ce/0x3b4
        system_call+0x54/0x80
        common_exception+0x77/0x77
      note: gdb[100] exited with preempt_count 1
      Killed
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fa3df07f526ed3c356a90fdb5c936042d3a82761
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Tue Nov 27 09:01:54 2018 +1100

    powerpc: Fix COFF zImage booting on old powermacs
    
    commit 5564597d51c8ff5b88d95c76255e18b13b760879 upstream.
    
    Commit 6975a783d7b4 ("powerpc/boot: Allow building the zImage wrapper
    as a relocatable ET_DYN", 2011-04-12) changed the procedure descriptor
    at the start of crt0.S to have a hard-coded start address of 0x500000
    rather than a reference to _zimage_start, presumably because having
    a reference to a symbol introduced a relocation which is awkward to
    handle in a position-independent executable.  Unfortunately, what is
    at 0x500000 in the COFF image is not the first instruction, but the
    procedure descriptor itself, that is, a word containing 0x500000,
    which is not a valid instruction.  Hence, booting a COFF zImage
    results in a "DEFAULT CATCH!, code=FFF00700" message from Open
    Firmware.
    
    This fixes the problem by (a) putting the procedure descriptor in the
    data section and (b) adding a branch to _zimage_start as the first
    instruction in the program.
    
    Fixes: 6975a783d7b4 ("powerpc/boot: Allow building the zImage wrapper as a relocatable ET_DYN")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b1e605310f329e44fa935b61130e58f8bae3806c
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Nov 26 02:29:56 2018 +0000

    Drivers: hv: vmbus: check the creation_status in vmbus_establish_gpadl()
    
    commit eceb05965489784f24bbf4d61ba60e475a983016 upstream.
    
    This is a longstanding issue: if the vmbus upper-layer drivers try to
    consume too many GPADLs, the host may return with an error
    0xC0000044 (STATUS_QUOTA_EXCEEDED), but currently we forget to check
    the creation_status, and hence we can pass an invalid GPADL handle
    into the OPEN_CHANNEL message, and get an error code 0xc0000225 in
    open_info->response.open_result.status, and finally we hang in
    vmbus_open() -> "goto error_free_info" -> vmbus_teardown_gpadl().
    
    With this patch, we can exit gracefully on STATUS_QUOTA_EXCEEDED.
    
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 172a6767172f66a67b72441121e7c235a2692f02
Author: Michael Niewöhner <linux@mniewoehner.de>
Date:   Sun Nov 25 17:57:33 2018 +0100

    usb: core: quirks: add RESET_RESUME quirk for Cherry G230 Stream series
    
    commit effd14f66cc1ef6701a19c5a56e39c35f4d395a5 upstream.
    
    Cherry G230 Stream 2.0 (G85-231) and 3.0 (G85-232) need this quirk to
    function correctly. This fixes a but where double pressing numlock locks
    up the device completely with need to replug the keyboard.
    
    Signed-off-by: Michael Niewöhner <linux@mniewoehner.de>
    Tested-by: Michael Niewöhner <linux@mniewoehner.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d27557e5b09f4400e037f1104f5ac324894d71da
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Nov 23 08:42:19 2018 +0000

    USB: usb-storage: Add new IDs to ums-realtek
    
    commit a84a1bcc992f0545a51d2e120b8ca2ef20e2ea97 upstream.
    
    There are two new Realtek card readers require ums-realtek to work
    correctly.
    
    Add the new IDs to support them.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c142b766a0feacbb74bc8152db167290532c7bd7
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Mon Nov 19 08:34:04 2018 +0200

    Revert "usb: dwc3: gadget: skip Set/Clear Halt when invalid"
    
    commit 38317f5c0f2faae5110854f36edad810f841d62f upstream.
    
    This reverts commit ffb80fc672c3a7b6afd0cefcb1524fb99917b2f3.
    
    Turns out that commit is wrong. Host controllers are allowed to use
    Clear Feature HALT as means to sync data toggle between host and
    periperal.
    
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 33f172ae1c3cba1cfc4b1002febd9e7e92d1029d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 22 14:36:17 2018 +0100

    ALSA: control: Fix race between adding and removing a user element
    
    commit e1a7bfe3807974e66f971f2589d4e0197ec0fced upstream.
    
    The procedure for adding a user control element has some window opened
    for race against the concurrent removal of a user element.  This was
    caught by syzkaller, hitting a KASAN use-after-free error.
    
    This patch addresses the bug by wrapping the whole procedure to add a
    user control element with the card->controls_rwsem, instead of only
    around the increment of card->user_ctl_count.
    
    This required a slight code refactoring, too.  The function
    snd_ctl_add() is split to two parts: a core function to add the
    control element and a part calling it.  The former is called from the
    function for adding a user control element inside the controls_rwsem.
    
    One change to be noted is that snd_ctl_notify() for adding a control
    element gets called inside the controls_rwsem as well while it was
    called outside the rwsem.  But this should be OK, as snd_ctl_notify()
    takes another (finer) rwlock instead of rwsem, and the call of
    snd_ctl_notify() inside rwsem is already done in another code path.
    
    Reported-by: syzbot+dc09047bce3820621ba2@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.16:
     - In snd_ctl_elem_add(), free _kctl on error, not kctl
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f65e34ab74adf38b61cd11c6ba73858cf52501d9
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Feb 8 22:39:44 2015 +0900

    ALSA: control: fix failure to return numerical ID in 'add' event
    
    commit d34890cf4113397625a6629d71749fa638a7a734 upstream.
    
    Currently when adding a new control, the assigned numerical ID is not
    set for event data, thus userspace applications cannot realize it just
    by event data.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7580cfd377e2929cc344d5c785fc2baef32c8573
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 23 18:18:30 2018 +0100

    ALSA: sparc: Fix invalid snd_free_pages() at error path
    
    commit 9a20332ab373b1f8f947e0a9c923652b32dab031 upstream.
    
    Some spurious calls of snd_free_pages() have been overlooked and
    remain in the error paths of sparc cs4231 driver code.  Since
    runtime->dma_area is managed by the PCM core helper, we shouldn't
    release manually.
    
    Drop the superfluous calls.
    
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 961ee1d8524d0713d0d743c9ed64f1c1270ce043
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 23 18:16:33 2018 +0100

    ALSA: wss: Fix invalid snd_free_pages() at error path
    
    commit 7b69154171b407844c273ab4c10b5f0ddcd6aa29 upstream.
    
    Some spurious calls of snd_free_pages() have been overlooked and
    remain in the error paths of wss driver code.  Since runtime->dma_area
    is managed by the PCM core helper, we shouldn't release manually.
    
    Drop the superfluous calls.
    
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 10583ca5a225fd046d6689ad02553856cb5e43b3
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Nov 22 16:15:28 2018 +0800

    team: no need to do team_notify_peers or team_mcast_rejoin when disabling port
    
    commit 5ed9dc99107144f83b6c1bb52a69b58875baf540 upstream.
    
    team_notify_peers() will send ARP and NA to notify peers. team_mcast_rejoin()
    will send multicast join group message to notify peers. We should do this when
    enabling/changed to a new port. But it doesn't make sense to do it when a port
    is disabled.
    
    On the other hand, when we set mcast_rejoin_count to 2, and do a failover,
    team_port_disable() will increase mcast_rejoin.count_pending to 2 and then
    team_port_enable() will increase mcast_rejoin.count_pending to 4. We will send
    4 mcast rejoin messages at latest, which will make user confused. The same
    with notify_peers.count.
    
    Fix it by deleting team_notify_peers() and team_mcast_rejoin() in
    team_port_disable().
    
    Reported-by: Liang Li <liali@redhat.com>
    Fixes: fc423ff00df3a ("team: add peer notification")
    Fixes: 492b200efdd20 ("team: add support for sending multicast rejoins")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a4cd58f664ea7f755e93f43183b540f96b607b6f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 23 15:44:00 2018 +0100

    ALSA: ac97: Fix incorrect bit shift at AC97-SPSA control write
    
    commit 7194eda1ba0872d917faf3b322540b4f57f11ba5 upstream.
    
    The function snd_ac97_put_spsa() gets the bit shift value from the
    associated private_value, but it extracts too much; the current code
    extracts 8 bit values in bits 8-15, but this is a combination of two
    nibbles (bits 8-11 and bits 12-15) for left and right shifts.
    Due to the incorrect bits extraction, the actual shift may go beyond
    the 32bit value, as spotted recently by UBSAN check:
     UBSAN: Undefined behaviour in sound/pci/ac97/ac97_codec.c:836:7
     shift exponent 68 is too large for 32-bit type 'int'
    
    This patch fixes the shift value extraction by masking the properly
    with 0x0f instead of 0xff.
    
    Reported-and-tested-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc78b2c9553a06c48e6181f4b88f064f45661a3c
Author: Pan Bian <bianpan2016@163.com>
Date:   Fri Nov 23 15:56:33 2018 +0800

    exportfs: do not read dentry after free
    
    commit 2084ac6c505a58f7efdec13eba633c6aaa085ca5 upstream.
    
    The function dentry_connected calls dput(dentry) to drop the previously
    acquired reference to dentry. In this case, dentry can be released.
    After that, IS_ROOT(dentry) checks the condition
    (dentry == dentry->d_parent), which may result in a use-after-free bug.
    This patch directly compares dentry with its parent obtained before
    dropping the reference.
    
    Fixes: a056cc8934c("exportfs: stop retrying once we race with
    rename/remove")
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 225ef25362d19fc1fb3870deca0b3110303e99eb
Author: Pan Bian <bianpan2016@163.com>
Date:   Fri Nov 23 18:10:15 2018 +0800

    btrfs: relocation: set trans to be NULL after ending transaction
    
    commit 42a657f57628402c73237547f0134e083e2f6764 upstream.
    
    The function relocate_block_group calls btrfs_end_transaction to release
    trans when update_backref_cache returns 1, and then continues the loop
    body. If btrfs_block_rsv_refill fails this time, it will jump out the
    loop and the freed trans will be accessed. This may result in a
    use-after-free bug. The patch assigns NULL to trans after trans is
    released so that it will not be accessed.
    
    Fixes: 0647bf564f1 ("Btrfs: improve forever loop when doing balance relocation")
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3d03e8e5472800f11294d4e1843fead13cc40535
Author: Andrea Parri <andrea.parri@amarulasolutions.com>
Date:   Thu Nov 22 17:10:31 2018 +0100

    uprobes: Fix handle_swbp() vs. unregister() + register() race once more
    
    commit 09d3f015d1e1b4fee7e9bbdcf54201d239393391 upstream.
    
    Commit:
    
      142b18ddc8143 ("uprobes: Fix handle_swbp() vs unregister() + register() race")
    
    added the UPROBE_COPY_INSN flag, and corresponding smp_wmb() and smp_rmb()
    memory barriers, to ensure that handle_swbp() uses fully-initialized
    uprobes only.
    
    However, the smp_rmb() is mis-placed: this barrier should be placed
    after handle_swbp() has tested for the flag, thus guaranteeing that
    (program-order) subsequent loads from the uprobe can see the initial
    stores performed by prepare_uprobe().
    
    Move the smp_rmb() accordingly.  Also amend the comments associated
    to the two memory barriers to indicate their actual locations.
    
    Signed-off-by: Andrea Parri <andrea.parri@amarulasolutions.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: 142b18ddc8143 ("uprobes: Fix handle_swbp() vs unregister() + register() race")
    Link: http://lkml.kernel.org/r/20181122161031.15179-1-andrea.parri@amarulasolutions.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 87815e8b77904bd355e0ef2f81e1ee42bb68e6bb
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Nov 19 16:20:34 2018 +0000

    Btrfs: fix race between enabling quotas and subvolume creation
    
    commit 552f0329c75b3e1d7f9bb8c9e421d37403f192cd upstream.
    
    We have a race between enabling quotas end subvolume creation that cause
    subvolume creation to fail with -EINVAL, and the following diagram shows
    how it happens:
    
                  CPU 0                                          CPU 1
    
     btrfs_ioctl()
      btrfs_ioctl_quota_ctl()
       btrfs_quota_enable()
        mutex_lock(fs_info->qgroup_ioctl_lock)
    
                                                      btrfs_ioctl()
                                                       create_subvol()
                                                        btrfs_qgroup_inherit()
                                                         -> save fs_info->quota_root
                                                            into quota_root
                                                         -> stores a NULL value
                                                         -> tries to lock the mutex
                                                            qgroup_ioctl_lock
                                                            -> blocks waiting for
                                                               the task at CPU0
    
       -> sets BTRFS_FS_QUOTA_ENABLED in fs_info
       -> sets quota_root in fs_info->quota_root
          (non-NULL value)
    
       mutex_unlock(fs_info->qgroup_ioctl_lock)
    
                                                         -> checks quota enabled
                                                            flag is set
                                                         -> returns -EINVAL because
                                                            fs_info->quota_root was
                                                            NULL before it acquired
                                                            the mutex
                                                            qgroup_ioctl_lock
                                                       -> ioctl returns -EINVAL
    
    Returning -EINVAL to user space will be confusing if all the arguments
    passed to the subvolume creation ioctl were valid.
    
    Fix it by grabbing the value from fs_info->quota_root after acquiring
    the mutex.
    
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 974525d70ca66e0ff803741626aef6c171d4653c
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Tue Oct 30 11:34:46 2018 +0800

    drm/ast: fixed cursor may disappear sometimes
    
    commit 7989b9ee8bafe5cc625381dd0c3c4586de27ca26 upstream.
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a5ce91f0d97638777de3660f3a4714b318d94193
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Wed Oct 3 14:57:47 2018 +0800

    drm/ast: change resolution may cause screen blurred
    
    commit 1a37bd823891568f8721989aed0615835632d81a upstream.
    
    The value of pitches is not correct while calling mode_set.
    The issue we found so far on following system:
    - Debian8 with XFCE Desktop
    - Ubuntu with KDE Desktop
    - SUSE15 with KDE Desktop
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Tested-by: Jean Delvare <jdelvare@suse.de>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f80c42d0ae0f42deb8df9da00b8acd74490c95bd
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Nov 14 10:17:01 2018 -0800

    iser: set sector for ambiguous mr status errors
    
    commit 24c3456c8d5ee6fc1933ca40f7b4406130682668 upstream.
    
    If for some reason we failed to query the mr status, we need to make sure
    to provide sufficient information for an ambiguous error (guard error on
    sector 0).
    
    Fixes: 0a7a08ad6f5f ("IB/iser: Implement check_protection")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b0c55c1e0177ffa74ff45943dd48fc5a321d963
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Wed Nov 21 22:14:39 2018 +0300

    mips: fix mips_get_syscall_arg o32 check
    
    commit c50cbd85cd7027d32ac5945bb60217936b4f7eaf upstream.
    
    When checking for TIF_32BIT_REGS flag, mips_get_syscall_arg() should
    use the task specified as its argument instead of the current task.
    
    This potentially affects all syscall_get_arguments() users
    who specify tasks different from the current.
    
    Fixes: c0ff3c53d4f99 ("MIPS: Enable HAVE_ARCH_TRACEHOOK.")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/21185/
    Cc: Elvira Khabirova <lineprinter@altlinux.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 57d888ee3aecc71b9ace4a1e900b70092c773f06
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 19 19:06:01 2018 +0100

    ACPI / platform: Add SMB0001 HID to forbidden_id_list
    
    commit 2bbb5fa37475d7aa5fa62f34db1623f3da2dfdfa upstream.
    
    Many HP AMD based laptops contain an SMB0001 device like this:
    
    Device (SMBD)
    {
        Name (_HID, "SMB0001")  // _HID: Hardware ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            IO (Decode16,
                0x0B20,             // Range Minimum
                0x0B20,             // Range Maximum
                0x20,               // Alignment
                0x20,               // Length
                )
            IRQ (Level, ActiveLow, Shared, )
                {7}
        })
    }
    
    The legacy style IRQ resource here causes acpi_dev_get_irqresource() to
    be called with legacy=true and this message to show in dmesg:
    ACPI: IRQ 7 override to edge, high
    
    This causes issues when later on the AMD0030 GPIO device gets enumerated:
    
    Device (GPIO)
    {
        Name (_HID, "AMDI0030")  // _HID: Hardware ID
        Name (_CID, "AMDI0030")  // _CID: Compatible ID
        Name (_UID, Zero)  // _UID: Unique ID
        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
        {
            Name (RBUF, ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                {
                    0x00000007,
                }
                Memory32Fixed (ReadWrite,
                    0xFED81500,         // Address Base
                    0x00000400,         // Address Length
                    )
            })
            Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
        }
    }
    
    Now acpi_dev_get_irqresource() gets called with legacy=false, but because
    of the earlier override of the trigger-type acpi_register_gsi() returns
    -EBUSY (because we try to register the same interrupt with a different
    trigger-type) and we end up setting IORESOURCE_DISABLED in the flags.
    
    The setting of IORESOURCE_DISABLED causes platform_get_irq() to call
    acpi_irq_get() which is not implemented on x86 and returns -EINVAL.
    resulting in the following in dmesg:
    
    amd_gpio AMDI0030:00: Failed to get gpio IRQ: -22
    amd_gpio: probe of AMDI0030:00 failed with error -22
    
    The SMB0001 is a "virtual" device in the sense that the only way the OS
    interacts with it is through calling a couple of methods to do SMBus
    transfers. As such it is weird that it has IO and IRQ resources at all,
    because the driver for it is not expected to ever access the hardware
    directly.
    
    The Linux driver for the SMB0001 device directly binds to the acpi_device
    through the acpi_bus, so we do not need to instantiate a platform_device
    for this ACPI device. This commit adds the SMB0001 HID to the
    forbidden_id_list, avoiding the instantiating of a platform_device for it.
    Not instantiating a platform_device means we will no longer call
    acpi_dev_get_irqresource() for the legacy IRQ resource fixing the probe of
    the AMDI0030 device failing.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1644013
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=198715
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=199523
    Reported-by: Lukas Kahnert <openproggerfreak@gmail.com>
    Tested-by: Marc <suaefar@googlemail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3b89368e7699656ef43edd96dd941f6b814b175f
Author: Sebastian Parschauer <sparschauer@suse.de>
Date:   Tue Nov 20 07:25:08 2018 +0100

    HID: Add quirk for Primax PIXART OEM mice
    
    commit fb862c3b199d28bee238d52e8270eae8650d6cb0 upstream.
    
    The PixArt OEM mice are known for disconnecting every minute in
    runlevel 1 or 3 if they are not always polled. So add quirk
    ALWAYS_POLL for two Primax mice as well.
    
    0x4e22 is the Dell MS111-P and 0x4d0f is the unbranded HP Portia
    mouse HP 697738-001. Both were built until approx. 2014.
    Those were the standard mice from those vendors and are still
    around - even as new old stock.
    
    Reference: https://github.com/sriemer/fix-linux-mouse/issues/11
    
    Signed-off-by: Sebastian Parschauer <sparschauer@suse.de>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    [bwh: Backported to 3.16:
     - Don't use HID_USB_DEVICE()
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2c9143e357a7a8175cce60c43b3f6ad45a872296
Author: Maarten Jacobs <maarten256@outlook.com>
Date:   Mon Nov 19 23:18:49 2018 +0000

    usb: cdc-acm: add entry for Hiro (Conexant) modem
    
    commit 63529eaa6164ef7ab4b907b25ac3648177e5e78f upstream.
    
    The cdc-acm kernel module currently does not support the Hiro (Conexant)
    H05228 USB modem. The patch below adds the device specific information:
            idVendor        0x0572
            idProduct       0x1349
    
    Signed-off-by: Maarten Jacobs <maarten256@outlook.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7eb5a74e5c6cfaaa55a50ba5a1df654f345c9734
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Nov 14 13:55:09 2018 -0800

    HID: uhid: forbid UHID_CREATE under KERNEL_DS or elevated privileges
    
    commit 8c01db7619f07c85c5cd81ec5eb83608b56c88f5 upstream.
    
    When a UHID_CREATE command is written to the uhid char device, a
    copy_from_user() is done from a user pointer embedded in the command.
    When the address limit is KERNEL_DS, e.g. as is the case during
    sys_sendfile(), this can read from kernel memory.  Alternatively,
    information can be leaked from a setuid binary that is tricked to write
    to the file descriptor.  Therefore, forbid UHID_CREATE in these cases.
    
    No other commands in uhid_char_write() are affected by this bug and
    UHID_CREATE is marked as "obsolete", so apply the restriction to
    UHID_CREATE only rather than to uhid_char_write() entirely.
    
    Thanks to Dmitry Vyukov for adding uhid definitions to syzkaller and to
    Jann Horn for commit 9da3f2b740544 ("x86/fault: BUG() when uaccess
    helpers fault on kernel addresses"), allowing this bug to be found.
    
    Reported-by: syzbot+72473edc9bf4eb1c6556@syzkaller.appspotmail.com
    Fixes: d365c6cfd337 ("HID: uhid: add UHID_CREATE and UHID_DESTROY events")
    Cc: Jann Horn <jannh@google.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Jann Horn <jannh@google.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    [bwh: Backported to 3.16; Directly include <linux/uaccess.h>]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e07405d3cd382973ad9856ed3e35f9806e32e804
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Mar 20 21:08:07 2017 -0400

    new helper: uaccess_kernel()
    
    commit db68ce10c4f0a27c1ff9fa0e789e5c41f8c4ea63 upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [only take the include/linux/uaccess.h portion - gregkh]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6e217a61f145a4691610be07d345a30468cfad58
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Nov 14 19:34:40 2018 +0200

    drm/i915: Disable LP3 watermarks on all SNB machines
    
    commit 21556350ade3cb5d7afecc8b3544e56431d21695 upstream.
    
    I have a Thinkpad X220 Tablet in my hands that is losing vblank
    interrupts whenever LP3 watermarks are used.
    
    If I nudge the latency value written to the WM3 register just
    by one in either direction the problem disappears. That to me
    suggests that the punit will not enter the corrsponding
    powersave mode (MPLL shutdown IIRC) unless the latency value
    in the register matches exactly what we read from SSKPD. Ie.
    it's not really a latency value but rather just a cookie
    by which the punit can identify the desired power saving state.
    On HSW/BDW this was changed such that we actually just write
    the WM level number into those bits, which makes much more
    sense given the observed behaviour.
    
    We could try to handle this by disallowing LP3 watermarks
    only when vblank interrupts are enabled but we'd first have
    to prove that only vblank interrupts are affected, which
    seems unlikely. Also we can't grab the wm mutex from the
    vblank enable/disable hooks because those are called with
    various spinlocks held. Thus we'd have to redesigne the
    watermark locking. So to play it safe and keep the code
    simple we simply disable LP3 watermarks on all SNB machines.
    
    To do that we simply zero out the latency values for
    watermark level 3, and we adjust the watermark computation
    to check for that. The behaviour now matches that of the
    g4x/vlv/skl wm code in the presence of a zeroed latency
    value.
    
    v2: s/USHRT_MAX/U32_MAX/ for consistency with the types (Chris)
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Acked-by: Chris Wilson <chris@chris-wilson.co.uk>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101269
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103713
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181114173440.6730-1-ville.syrjala@linux.intel.com
    (cherry picked from commit 03981c6ebec4fc7056b9b45f847393aeac90d060)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    [bwh: Backported to 3.16:
     - Pass drm_device pointer, rather than drm_i915_private pointer, to
       snb_wm_lp3_irq_quirk() and intel_print_wm_latency()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69e75428fc8a7d5caea323edf510880bac8d6dcc
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Nov 19 11:32:41 2018 +0800

    exportfs: fix 'passing zero to ERR_PTR()' warning
    
    commit 909e22e05353a783c526829427e9a8de122fba9c upstream.
    
    Fix a static code checker warning:
      fs/exportfs/expfs.c:171 reconnect_one() warn: passing zero to 'ERR_PTR'
    
    The error path for lookup_one_len_unlocked failure
    should set err to PTR_ERR.
    
    Fixes: bbf7a8a3562f ("exportfs: move most of reconnect_path to helper function")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a0d0d8dfff72995c0a6db3ef107ca3136236f32f
Author: Thomas Zimmermann <tzimmermann@suse.de>
Date:   Thu Nov 15 11:42:16 2018 +0100

    drm/ast: Remove existing framebuffers before loading driver
    
    commit 5478ad10e7850ce3d8b7056db05ddfa3c9ddad9a upstream.
    
    If vesafb attaches to the AST device, it configures the framebuffer memory
    for uncached access by default. When ast.ko later tries to attach itself to
    the device, it wants to use write-combining on the framebuffer memory, but
    vesefb's existing configuration for uncached access takes precedence. This
    results in reduced performance.
    
    Removing the framebuffer's configuration before loding the AST driver fixes
    the problem. Other DRM drivers already contain equivalent code.
    
    Link: https://bugzilla.opensuse.org/show_bug.cgi?id=1112963
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Tested-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Tested-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    [bwh: Backported to 3.16: Use remove_conflicting_framebuffers()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fe85652f04cc785ac2aa93e4616c718bef953545
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Nov 15 10:44:57 2018 +0800

    hwmon: (w83795) temp4_type has writable permission
    
    commit 09aaf6813cfca4c18034fda7a43e68763f34abb1 upstream.
    
    Both datasheet and comments of store_temp_mode() tell us that temp1~4_type
    is writable, so fix it.
    
    Signed-off-by: Yao Wang <wangyao@lemote.com>
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Fixes: 39deb6993e7c (" hwmon: (w83795) Simplify temperature sensor type handling")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 60454d9304564f61a7efa3c86d1bf9a7a8845518
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Nov 16 15:08:04 2018 -0800

    hugetlbfs: fix kernel BUG at fs/hugetlbfs/inode.c:444!
    
    commit 5e41540c8a0f0e98c337dda8b391e5dda0cde7cf upstream.
    
    This bug has been experienced several times by the Oracle DB team.  The
    BUG is in remove_inode_hugepages() as follows:
    
            /*
             * If page is mapped, it was faulted in after being
             * unmapped in caller.  Unmap (again) now after taking
             * the fault mutex.  The mutex will prevent faults
             * until we finish removing the page.
             *
             * This race can only happen in the hole punch case.
             * Getting here in a truncate operation is a bug.
             */
            if (unlikely(page_mapped(page))) {
                    BUG_ON(truncate_op);
    
    In this case, the elevated map count is not the result of a race.
    Rather it was incorrectly incremented as the result of a bug in the huge
    pmd sharing code.  Consider the following:
    
     - Process A maps a hugetlbfs file of sufficient size and alignment
       (PUD_SIZE) that a pmd page could be shared.
    
     - Process B maps the same hugetlbfs file with the same size and
       alignment such that a pmd page is shared.
    
     - Process B then calls mprotect() to change protections for the mapping
       with the shared pmd. As a result, the pmd is 'unshared'.
    
     - Process B then calls mprotect() again to chage protections for the
       mapping back to their original value. pmd remains unshared.
    
     - Process B then forks and process C is created. During the fork
       process, we do dup_mm -> dup_mmap -> copy_page_range to copy page
       tables. Copying page tables for hugetlb mappings is done in the
       routine copy_hugetlb_page_range.
    
    In copy_hugetlb_page_range(), the destination pte is obtained by:
    
            dst_pte = huge_pte_alloc(dst, addr, sz);
    
    If pmd sharing is possible, the returned pointer will be to a pte in an
    existing page table.  In the situation above, process C could share with
    either process A or process B.  Since process A is first in the list,
    the returned pte is a pointer to a pte in process A's page table.
    
    However, the check for pmd sharing in copy_hugetlb_page_range is:
    
            /* If the pagetables are shared don't copy or take references */
            if (dst_pte == src_pte)
                    continue;
    
    Since process C is sharing with process A instead of process B, the
    above test fails.  The code in copy_hugetlb_page_range which follows
    assumes dst_pte points to a huge_pte_none pte.  It copies the pte entry
    from src_pte to dst_pte and increments this map count of the associated
    page.  This is how we end up with an elevated map count.
    
    To solve, check the dst_pte entry for huge_pte_none.  If !none, this
    implies PMD sharing so do not copy.
    
    Link: http://lkml.kernel.org/r/20181105212315.14125-1-mike.kravetz@oracle.com
    Fixes: c5c99429fa57 ("fix hugepages leak due to pagetable page sharing")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Prakash Sangappa <prakash.sangappa@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 843e4e5864440e03aa7fe5fc76df9139a92fa359
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Nov 17 21:57:02 2018 -0800

    net-gro: reset skb->pkt_type in napi_reuse_skb()
    
    commit 33d9a2c72f086cbf1087b2fd2d1a15aa9df14a7f upstream.
    
    eth_type_trans() assumes initial value for skb->pkt_type
    is PACKET_HOST.
    
    This is indeed the value right after a fresh skb allocation.
    
    However, it is possible that GRO merged a packet with a different
    value (like PACKET_OTHERHOST in case macvlan is used), so
    we need to make sure napi->skb will have pkt_type set back to
    PACKET_HOST.
    
    Otherwise, valid packets might be dropped by the stack because
    their pkt_type is not PACKET_HOST.
    
    napi_reuse_skb() was added in commit 96e93eab2033 ("gro: Add
    internal interfaces for VLAN"), but this bug always has
    been there.
    
    Fixes: 96e93eab2033 ("gro: Add internal interfaces for VLAN")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ab77f8541e7116a4d5f127f9eda2a4f87709fa0f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Oct 31 15:20:05 2018 +0100

    iio/hid-sensors: Fix IIO_CHAN_INFO_RAW returning wrong values for signed numbers
    
    commit 0145b50566e7de5637e80ecba96c7f0e6fff1aad upstream.
    
    Before this commit sensor_hub_input_attr_get_raw_value() failed to take
    the signedness of 16 and 8 bit values into account, returning e.g.
    65436 instead of -100 for the z-axis reading of an accelerometer.
    
    This commit adds a new is_signed parameter to the function and makes all
    callers pass the appropriate value for this.
    
    While at it, this commit also fixes up some neighboring lines where
    statements were needlessly split over 2 lines to improve readability.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    [bwh: Backported to 3.16:
     - sensor_hub_input_attr_get_raw_value() doesn't take a sync/async flag
       parameter
     - In sensor_hub_input_attr_get_raw_value() keep using data->pending instead of
       hsdev->pending
     - In magn_3d_read_raw() keep using chan->scan_index intstead of chan->address
     - Drop changes in hid-sensor-{custom,humidity,temperature}
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 29a806c51fa209de6fbc7f849766eff5c3e301b7
Author: Aya Levin <ayal@mellanox.com>
Date:   Thu Nov 15 18:05:15 2018 +0200

    net/mlx4: Fix UBSAN warning of signed integer overflow
    
    commit a463146e67c848cbab5ce706d6528281b7cded08 upstream.
    
    UBSAN: Undefined behavior in
    drivers/net/ethernet/mellanox/mlx4/resource_tracker.c:626:29
    signed integer overflow: 1802201963 + 1802201963 cannot be represented
    in type 'int'
    
    The union of res_reserved and res_port_rsvd[MLX4_MAX_PORTS] monitors
    granting of reserved resources. The grant operation is calculated and
    protected, thus both members of the union cannot be negative.  Changed
    type of res_reserved and of res_port_rsvd[MLX4_MAX_PORTS] from signed
    int to unsigned int, allowing large value.
    
    Fixes: 5a0d0a6161ae ("mlx4: Structures and init/teardown for VF resource quotas")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3c06d804e3a5cf491656bccfb96a73d177529bb6
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Nov 15 11:38:41 2018 +0200

    usb: xhci: Prevent bus suspend if a port connect change or polling state is detected
    
    commit 2f31a67f01a8beb22cae754c53522cb61a005750 upstream.
    
    USB3 roothub might autosuspend before a plugged USB3 device is detected,
    causing USB3 device enumeration failure.
    
    USB3 devices don't show up as connected and enabled until USB3 link trainig
    completes. On a fast booting platform with a slow USB3 link training the
    link might reach the connected enabled state just as the bus is suspending.
    
    If this device is discovered first time by the xhci_bus_suspend() routine
    it will be put to U3 suspended state like the other ports which failed to
    suspend earlier.
    
    The hub thread will notice the connect change and resume the bus,
    moving the port back to U0
    
    This U0 -> U3 -> U0 transition right after being connected seems to be
    too much for some devices, causing them to first go to SS.Inactive state,
    and finally end up stuck in a polling state with reset asserted
    
    Fix this by failing the bus suspend if a port has a connect change or is
    in a polling state in xhci_bus_suspend().
    
    Don't do any port changes until all ports are checked, buffer all port
    changes and only write them in the end if suspend can proceed
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Keep  port_array[] to look up port I/O address
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f999ffcc13a18990da916e9b40f0baf2cfab5a56
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Nov 13 01:08:25 2018 +0800

    l2tp: fix a sock refcnt leak in l2tp_tunnel_register
    
    commit f8504f4ca0a0e9f84546ef86e00b24d2ea9a0bd2 upstream.
    
    This issue happens when trying to add an existent tunnel. It
    doesn't call sock_put() before returning -EEXIST to release
    the sock refcnt that was held by calling sock_hold() before
    the existence check.
    
    This patch is to fix it by holding the sock after doing the
    existence check.
    
    Fixes: f6cd651b056f ("l2tp: fix race in duplicate tunnel detection")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ad2859ba4b61f21cb4a6bc0ba515052bbf38388b
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Tue Nov 13 14:40:34 2018 +0100

    usb: core: Fix hub port connection events lost
    
    commit 22454b79e6de05fa61a2a72d00d2eed798abbb75 upstream.
    
    This will clear the USB_PORT_FEAT_C_CONNECTION bit in case of a hub port reset
    only if a device is was attached to the hub port before resetting the hub port.
    
    Using a Lenovo T480s attached to the ultra dock it was not possible to detect
    some usb-c devices at the dock usb-c ports because the hub_port_reset code
    will clear the USB_PORT_FEAT_C_CONNECTION bit after the actual hub port reset.
    Using this device combo the USB_PORT_FEAT_C_CONNECTION bit was set between the
    actual hub port reset and the clear of the USB_PORT_FEAT_C_CONNECTION bit.
    This ends up with clearing the USB_PORT_FEAT_C_CONNECTION bit after the
    new device was attached such that it was not detected.
    
    This patch will not clear the USB_PORT_FEAT_C_CONNECTION bit if there is
    currently no device attached to the port before the hub port reset.
    This will avoid clearing the connection bit for new attached devices.
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 55011acfee13a23ae308c2de709a7de50ef148e9
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Nov 14 11:35:24 2018 +0000

    Btrfs: ensure path name is null terminated at btrfs_control_ioctl
    
    commit f505754fd6599230371cb01b9332754ddc104be1 upstream.
    
    We were using the path name received from user space without checking that
    it is null terminated. While btrfs-progs is well behaved and does proper
    validation and null termination, someone could call the ioctl and pass
    a non-null terminated patch, leading to buffer overrun problems in the
    kernel.  The ioctl is protected by CAP_SYS_ADMIN.
    
    So just set the last byte of the path to a null character, similar to what
    we do in other ioctls (add/remove/resize device, snapshot creation, etc).
    
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1de7f108e0f131a4d9e88508949ec90259ae5899
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Nov 13 23:46:42 2018 -0800

    xtensa: fix boot parameters address translation
    
    commit 40dc948f234b73497c3278875eb08a01d5854d3f upstream.
    
    The bootloader may pass physical address of the boot parameters structure
    to the MMUv3 kernel in the register a2. Code in the _SetupMMU block in
    the arch/xtensa/kernel/head.S is supposed to map that physical address to
    the virtual address in the configured virtual memory layout.
    
    This code haven't been updated when additional 256+256 and 512+512
    memory layouts were introduced and it may produce wrong addresses when
    used with these layouts.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 32c1523fb41f9ed9d4294b84322e7a5f2dcbc055
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Nov 12 22:43:45 2018 +0100

    netfilter: nf_tables: fix use-after-free when deleting compat expressions
    
    commit 29e3880109e357fdc607b4393f8308cef6af9413 upstream.
    
    nft_compat ops do not have static storage duration, unlike all other
    expressions.
    
    When nf_tables_expr_destroy() returns, expr->ops might have been
    free'd already, so we need to store next address before calling
    expression destructor.
    
    For same reason, we can't deref match pointer after nft_xt_put().
    
    This can be easily reproduced by adding msleep() before
    nft_match_destroy() returns.
    
    Fixes: 0ca743a55991 ("netfilter: nf_tables: add compatibility layer for x_tables")
    Reported-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1bf8bc4174df619157f4da841b78ff9aa5a019e6
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Dec 13 13:59:33 2016 +0100

    netfilter: nf_tables: fix oob access
    
    commit 3e38df136e453aa69eb4472108ebce2fb00b1ba6 upstream.
    
    BUG: KASAN: slab-out-of-bounds in nf_tables_rule_destroy+0xf1/0x130 at addr ffff88006a4c35c8
    Read of size 8 by task nft/1607
    
    When we've destroyed last valid expr, nft_expr_next() returns an invalid expr.
    We must not dereference it unless it passes != nft_expr_last() check.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f20977a8f9b7d147017c49bd30a0b56ab863114
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Nov 6 16:40:20 2018 +0200

    btrfs: Always try all copies when reading extent buffers
    
    commit f8397d69daef06d358430d3054662fb597e37c00 upstream.
    
    When a metadata read is served the endio routine btree_readpage_end_io_hook
    is called which eventually runs the tree-checker. If tree-checker fails
    to validate the read eb then it sets EXTENT_BUFFER_CORRUPT flag. This
    leads to btree_read_extent_buffer_pages wrongly assuming that all
    available copies of this extent buffer are wrong and failing prematurely.
    Fix this modify btree_read_extent_buffer_pages to read all copies of
    the data.
    
    This failure was exhibitted in xfstests btrfs/124 which would
    spuriously fail its balance operations. The reason was that when balance
    was run following re-introduction of the missing raid1 disk
    __btrfs_map_block would map the read request to stripe 0, which
    corresponded to devid 2 (the disk which is being removed in the test):
    
        item 2 key (FIRST_CHUNK_TREE CHUNK_ITEM 3553624064) itemoff 15975 itemsize 112
            length 1073741824 owner 2 stripe_len 65536 type DATA|RAID1
            io_align 65536 io_width 65536 sector_size 4096
            num_stripes 2 sub_stripes 1
                    stripe 0 devid 2 offset 2156920832
                    dev_uuid 8466c350-ed0c-4c3b-b17d-6379b445d5c8
                    stripe 1 devid 1 offset 3553624064
                    dev_uuid 1265d8db-5596-477e-af03-df08eb38d2ca
    
    This caused read requests for a checksum item that to be routed to the
    stale disk which triggered the aforementioned logic involving
    EXTENT_BUFFER_CORRUPT flag. This then triggered cascading failures of
    the balance operation.
    
    Fixes: a826d6dcb32d ("Btrfs: check items for correctness as we search")
    Suggested-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16:
     - Deleted code is slightly different
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f9b9919e59b245e5f6e6973f99ae57b4ef2291a0
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Nov 5 11:10:50 2018 -0500

    NFSv4: Don't exit the state manager without clearing NFS4CLNT_MANAGER_RUNNING
    
    commit 21a446cf186570168b7281b154b1993968598aca upstream.
    
    If we exit the NFSv4 state manager due to a umount, then we can end up
    leaving the NFS4CLNT_MANAGER_RUNNING flag set. If another mount causes
    the nfs4_client to be rereferenced before it is destroyed, then we end
    up never being able to recover state.
    
    Fixes: 47c2199b6eb5 ("NFSv4.1: Ensure state manager thread dies on last ...")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 325818b679e821592808c3382262c7ec5aa0c0de
Author: Christian Hoff <christian_hoff@gmx.net>
Date:   Mon Nov 12 11:11:29 2018 -0800

    Input: matrix_keypad - check for errors from of_get_named_gpio()
    
    commit d55bda1b3e7c5a87f10da54fdda866a9a9cef30b upstream.
    
    "of_get_named_gpio()" returns a negative error value if it fails
    and drivers should check for this. This missing check was now
    added to the matrix_keypad driver.
    
    In my case "of_get_named_gpio()" returned -EPROBE_DEFER because
    the referenced GPIOs belong to an I/O expander, which was not yet
    probed at the point in time when the matrix_keypad driver was
    loading. Because the driver did not check for errors from the
    "of_get_named_gpio()" routine, it was assuming that "-EPROBE_DEFER"
    is actually a GPIO number and continued as usual, which led to further
    errors like this later on:
    
    WARNING: CPU: 3 PID: 167 at drivers/gpio/gpiolib.c:114
    gpio_to_desc+0xc8/0xd0
    invalid GPIO -517
    
    Note that the "GPIO number" -517 in the error message above is
    actually "-EPROBE_DEFER".
    
    As part of the patch a misleading error message "no platform data defined"
    was also removed. This does not lead to information loss because the other
    error paths in matrix_keypad_parse_dt() already print an error.
    
    Signed-off-by: Christian Hoff <christian_hoff@gmx.net>
    Suggested-by: Sebastian Reichel <sre@kernel.org>
    Reviewed-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 312f755c4b918a9460697f10db73a2d4f0fa5d5b
Author: Diego Viola <diego.viola@gmail.com>
Date:   Mon Nov 12 17:22:52 2018 -0200

    libata: blacklist SAMSUNG MZ7TD256HAFV-000L9 SSD
    
    commit 410b5c7b48368317af95f0113692561d01d8144e upstream.
    
    med_power_with_dipm still causes freezes after updating the firmware to
    the latest version (DXT04L5Q).
    
    Set model_rev to NULL and blacklist the device.
    
    Signed-off-by: Diego Viola <diego.viola@gmail.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1de6e405c85c6f6f324d32d09d22d949aac721f3
Author: Diego Viola <diego.viola@gmail.com>
Date:   Fri Oct 26 10:45:16 2018 -0300

    libata: Apply NOLPM quirk for SAMSUNG MZ7TD256HAFV-000L9
    
    commit a435ab4f80f983c53b4ca4f8c12b3ddd3ca17670 upstream.
    
    med_power_with_dipm causes my T450 to freeze with a SAMSUNG
    MZ7TD256HAFV-000L9 SSD (firmware DXT02L5Q).
    
    Switching the LPM to max_performance fixes this issue.
    
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Diego Viola <diego.viola@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 68c46dedf9357b8f498771ca86682b914b68c272
Author: François Cami <fcami@fedoraproject.org>
Date:   Sun May 13 20:11:15 2018 +0200

    libata: Apply NOLPM quirk for SAMSUNG PM830 CXM13D1Q.
    
    commit 76936e9a6df17b89481bd2655c8684291afbe656 upstream.
    
    Without this patch the drive errors out regularly:
    
    [    1.090154] ata1.00: ATA-8: SAMSUNG SSD PM830 mSATA 256GB,
    CXM13D1Q, max UDMA/133
    (...)
    [  345.154996] ata1.00: exception Emask 0x40 SAct 0x0 SErr 0xc0800 action 0x6
    [  345.155006] ata1.00: irq_stat 0x40000001
    [  345.155013] ata1: SError: { HostInt CommWake 10B8B }
    [  345.155018] ata1.00: failed command: SET FEATURES
    [  345.155032] ata1.00: cmd ef/05:e1:00:00:00/00:00:00:00:00/40 tag 7
                            res 51/04:e1:00:00:00/00:00:00:00:00/40 Emask 0x41 (internal error)
    [  345.155038] ata1.00: status: { DRDY ERR }
    [  345.155042] ata1.00: error: { ABRT }
    [  345.155051] ata1: hard resetting link
    [  345.465661] ata1: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
    [  345.466955] ata1.00: configured for UDMA/133
    [  345.467085] ata1: EH complete
    
    Signed-off-by: François Cami <fcami@fedoraproject.org>
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7f9221e402fb62d4a0ace3e8f76d5d3b6dc83753
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Apr 24 11:19:07 2018 +0200

    libata: Apply NOLPM quirk for SAMSUNG MZMPC128HBFU-000MV SSD
    
    commit b5b4d3a52c8fd6e3fc6469c5a64ca0139c07229e upstream.
    
    Kevin Shanahan reports the following repeating errors when using LPM,
    causing long delays accessing the disk:
    
      Apr 23 10:21:43 link kernel: ata1.00: exception Emask 0x0 SAct 0x0 SErr 0x50000 action 0x6 frozen
      Apr 23 10:21:43 link kernel: ata1: SError: { PHYRdyChg CommWake }
      Apr 23 10:21:43 link kernel: ata1.00: failed command: WRITE DMA
      Apr 23 10:21:43 link kernel: ata1.00: cmd ca/00:08:60:5d:cd/00:00:00:00:00/e1 tag 9 dma 4096 out
                                            res 50/01:01:01:00:00/00:00:00:00:00/00 Emask 0x4 (timeout)
      Apr 23 10:21:43 link kernel: ata1.00: status: { DRDY }
      Apr 23 10:21:43 link kernel: ata1.00: error: { AMNF }
      Apr 23 10:21:43 link kernel: ata1: hard resetting link
      Apr 23 10:21:43 link kernel: ata1: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
      Apr 23 10:21:43 link kernel: ata1.00: configured for UDMA/133
      Apr 23 10:21:43 link kernel: ata1: EH complete
    
    These go away when switching from med_power_with_dipm to medium_power.
    
    This is somewhat weird as the PM830 datasheet explicitly mentions DIPM
    being supported and the idle power-consumption is specified with DIPM
    enabled.
    
    There are many OEM customized firmware versions for the PM830, so for now
    lets assume this is firmware version specific and blacklist LPM based on
    the firmware version.
    
    Cc: Kevin Shanahan <kevin@shanahan.id.au>
    Reported-by: Kevin Shanahan <kevin@shanahan.id.au>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69f4fc8e8b70764a9f4fd1b97fcdc510e40aae56
Author: Florian Westphal <fw@strlen.de>
Date:   Sun Nov 4 12:07:14 2018 +0100

    netfilter: nf_tables: don't use position attribute on rule replacement
    
    commit 447750f281abef547be44fdcfe3bc4447b3115a8 upstream.
    
    Its possible to set both HANDLE and POSITION when replacing a rule.
    In this case, the rule at POSITION gets replaced using the
    userspace-provided handle.  Rule handles are supposed to be generated
    by the kernel only.
    
    Duplicate handles should be harmless, however better disable this "feature"
    by only checking for the POSITION attribute on insert operations.
    
    Fixes: 5e94846686d0 ("netfilter: nf_tables: add insert operation")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16:
     - Don't use extack
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0b4301f7f845ee73e6fb960fbccd3243b4f088d0
Author: Sven Eckelmann <sven@narfation.org>
Date:   Wed Nov 7 23:09:12 2018 +0100

    batman-adv: Expand merged fragment buffer for full packet
    
    commit d7d8bbb40a5b1f682ee6589e212934f4c6b8ad60 upstream.
    
    The complete size ("total_size") of the fragmented packet is stored in the
    fragment header and in the size of the fragment chain. When the fragments
    are ready for merge, the skbuff's tail of the first fragment is expanded to
    have enough room after the data pointer for at least total_size. This means
    that it gets expanded by total_size - first_skb->len.
    
    But this is ignoring the fact that after expanding the buffer, the fragment
    header is pulled by from this buffer. Assuming that the tailroom of the
    buffer was already 0, the buffer after the data pointer of the skbuff is
    now only total_size - len(fragment_header) large. When the merge function
    is then processing the remaining fragments, the code to copy the data over
    to the merged skbuff will cause an skb_over_panic when it tries to actually
    put enough data to fill the total_size bytes of the packet.
    
    The size of the skb_pull must therefore also be taken into account when the
    buffer's tailroom is expanded.
    
    Fixes: 610bfc6bc99b ("batman-adv: Receive fragmented packets and merge")
    Reported-by: Martin Weinelt <martin@darmstadt.freifunk.net>
    Co-authored-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1faefe9da76f5a6af6bc213cc9e86d8ff113a7be
Author: Sven Eckelmann <sven@narfation.org>
Date:   Mon Dec 1 10:37:28 2014 +0100

    batman-adv: Use only queued fragments when merging
    
    commit 83e8b87721f21b26b843633caca8ef453e943623 upstream.
    
    The fragment queueing code now validates the total_size of each fragment,
    checks when enough fragments are queued to allow to merge them into a
    single packet and if the fragments have the correct size. Therefore, it is
    not required to have any other parameter for the merging function than a
    list of queued fragments.
    
    This change should avoid problems like in the past when the different skb
    from the list and the function parameter were mixed incorrectly.
    
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Martin Hundebøll <martin@hundeboll.net>
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1b1531e11985646b22194020b6097c3b2b00901b
Author: Sven Eckelmann <sven@narfation.org>
Date:   Mon Dec 1 10:37:27 2014 +0100

    batman-adv: Check total_size when queueing fragments
    
    commit 53e771457e823fbc21834f60508c42a4270534fd upstream.
    
    The fragmentation code was replaced in
    610bfc6bc99bc83680d190ebc69359a05fc7f605 ("batman-adv: Receive fragmented
    packets and merge") by an implementation which handles the queueing+merging
    of fragments based on their size and the total_size of the non-fragmented
    packet. This total_size is announced by each fragment. The new
    implementation doesn't check if the the total_size information of the
    packets inside one chain is consistent.
    
    This is consistency check is recommended to allow using any of the packets
    in the queue to decide whether all fragments of a packet are received or
    not.
    
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Martin Hundebøll <martin@hundeboll.net>
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 63f8d901158cd19e7531b36c403d82f97f48ff1b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 26 10:19:51 2018 +0300

    uio: Fix an Oops on load
    
    commit 432798195bbce1f8cd33d1c0284d0538835e25fb upstream.
    
    I was trying to solve a double free but I introduced a more serious
    NULL dereference bug.  The problem is that if there is an IRQ which
    triggers immediately, then we need "info->uio_dev" but it's not set yet.
    
    This patch puts the original initialization back to how it was and just
    sets info->uio_dev to NULL on the error path so it should solve both
    the Oops and the double free.
    
    Fixes: f019f07ecf6a ("uio: potential double frees if __uio_register_device() fails")
    Reported-by: Mathias Thore <Mathias.Thore@infinera.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Tested-by: Mathias Thore <Mathias.Thore@infinera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 19cae7e079317c3d76b993ac10426c96dc64d5c4
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 17 10:09:02 2018 -0700

    misc: atmel-ssc: Fix section annotation on atmel_ssc_get_driver_data
    
    commit 7c97301285b62a41d6bceded7d964085fc8cc50f upstream.
    
    After building the kernel with Clang, the following section mismatch
    warning appears:
    
    WARNING: vmlinux.o(.text+0x3bf19a6): Section mismatch in reference from
    the function ssc_probe() to the function
    .init.text:atmel_ssc_get_driver_data()
    The function ssc_probe() references
    the function __init atmel_ssc_get_driver_data().
    This is often because ssc_probe lacks a __init
    annotation or the annotation of atmel_ssc_get_driver_data is wrong.
    
    Remove __init from atmel_ssc_get_driver_data to get rid of the mismatch.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f56990d5601de5d3583d250a23e56fd2a294d825
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Oct 16 12:59:44 2018 +0200

    drivers/misc/sgi-gru: fix Spectre v1 vulnerability
    
    commit fee05f455ceb5c670cbe48e2f9454ebc4a388554 upstream.
    
    req.gid can be indirectly controlled by user-space, hence leading to
    a potential exploitation of the Spectre variant 1 vulnerability.
    
    This issue was detected with the help of Smatch:
    
    vers/misc/sgi-gru/grukdump.c:200 gru_dump_chiplet_request() warn:
    potential spectre issue 'gru_base' [w]
    
    Fix this by sanitizing req.gid before calling macro GID_TO_GRU, which
    uses it to index gru_base.
    
    Notice that given that speculation windows are large, the policy is
    to kill the speculation on the first load and not worry if it can be
    completed with a dependent load/store [1].
    
    [1] https://marc.info/?l=linux-kernel&m=152449131114778&w=2
    
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dbe71954f7e7b584e8ecfb9f1da54b6f57ee8d5a
Author: Dexuan Cui <decui@microsoft.com>
Date:   Thu Oct 18 05:09:30 2018 +0000

    Drivers: hv: kvp: Fix the recent regression caused by incorrect clean-up
    
    commit e670de54c813b5bc3672dd1c67871dc60e9206f4 upstream.
    
    In kvp_send_key(), we do need call process_ib_ipinfo() if
    message->kvp_hdr.operation is KVP_OP_GET_IP_INFO, because it turns out
    the userland hv_kvp_daemon needs the info of operation, adapter_id and
    addr_family. With the incorrect fc62c3b1977d, the host can't get the
    VM's IP via KVP.
    
    And, fc62c3b1977d added a "break;", but actually forgot to initialize
    the key_size/value in the case of KVP_OP_SET, so the default key_size of
    0 is passed to the kvp daemon, and the pool files
    /var/lib/hyperv/.kvp_pool_* can't be updated.
    
    This patch effectively rolls back the previous fc62c3b1977d, and
    correctly fixes the "this statement may fall through" warnings.
    
    This patch is tested on WS 2012 R2 and 2016.
    
    Fixes: fc62c3b1977d ("Drivers: hv: kvp: Fix two "this statement may fall through" warnings")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ddce3611490c679877f4609d0ae1ce1221a157c2
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Nov 9 15:58:40 2018 -0700

    floppy: fix race condition in __floppy_read_block_0()
    
    commit de7b75d82f70c5469675b99ad632983c50b6f7e7 upstream.
    
    LKP recently reported a hang at bootup in the floppy code:
    
    [  245.678853] INFO: task mount:580 blocked for more than 120 seconds.
    [  245.679906]       Tainted: G                T 4.19.0-rc6-00172-ga9f38e1 #1
    [  245.680959] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [  245.682181] mount           D 6372   580      1 0x00000004
    [  245.683023] Call Trace:
    [  245.683425]  __schedule+0x2df/0x570
    [  245.683975]  schedule+0x2d/0x80
    [  245.684476]  schedule_timeout+0x19d/0x330
    [  245.685090]  ? wait_for_common+0xa5/0x170
    [  245.685735]  wait_for_common+0xac/0x170
    [  245.686339]  ? do_sched_yield+0x90/0x90
    [  245.686935]  wait_for_completion+0x12/0x20
    [  245.687571]  __floppy_read_block_0+0xfb/0x150
    [  245.688244]  ? floppy_resume+0x40/0x40
    [  245.688844]  floppy_revalidate+0x20f/0x240
    [  245.689486]  check_disk_change+0x43/0x60
    [  245.690087]  floppy_open+0x1ea/0x360
    [  245.690653]  __blkdev_get+0xb4/0x4d0
    [  245.691212]  ? blkdev_get+0x1db/0x370
    [  245.691777]  blkdev_get+0x1f3/0x370
    [  245.692351]  ? path_put+0x15/0x20
    [  245.692871]  ? lookup_bdev+0x4b/0x90
    [  245.693539]  blkdev_get_by_path+0x3d/0x80
    [  245.694165]  mount_bdev+0x2a/0x190
    [  245.694695]  squashfs_mount+0x10/0x20
    [  245.695271]  ? squashfs_alloc_inode+0x30/0x30
    [  245.695960]  mount_fs+0xf/0x90
    [  245.696451]  vfs_kern_mount+0x43/0x130
    [  245.697036]  do_mount+0x187/0xc40
    [  245.697563]  ? memdup_user+0x28/0x50
    [  245.698124]  ksys_mount+0x60/0xc0
    [  245.698639]  sys_mount+0x19/0x20
    [  245.699167]  do_int80_syscall_32+0x61/0x130
    [  245.699813]  entry_INT80_32+0xc7/0xc7
    
    showing that we never complete that read request. The reason is that
    the completion setup is racy - it initializes the completion event
    AFTER submitting the IO, which means that the IO could complete
    before/during the init. If it does, we are passing garbage to
    complete() and we may sleep forever waiting for the event to
    occur.
    
    Fixes: 7b7b68bba5ef ("floppy: bail out in open() if drive is not responding to block0 read")
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 30d386101d55e245f2c280a708ae5b68941aa11f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Sat Nov 10 04:13:24 2018 +0000

    sysv: return 'err' instead of 0 in __sysv_write_inode
    
    commit c4b7d1ba7d263b74bb72e9325262a67139605cde upstream.
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    fs/sysv/inode.c: In function '__sysv_write_inode':
    fs/sysv/inode.c:239:6: warning:
     variable 'err' set but not used [-Wunused-but-set-variable]
    
    __sysv_write_inode should return 'err' instead of 0
    
    Fixes: 05459ca81ac3 ("repair sysv_write_inode(), switch sysv to simple_fsync()")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 20ada4a0125dd428d8525644ca49f7d8509c1b57
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Nov 9 17:21:21 2018 +0200

    usb: xhci: fix timeout for transition from RExit to U0
    
    commit a5baeaeabcca3244782a9b6382ebab6f8a58f583 upstream.
    
    This definition is used by msecs_to_jiffies in milliseconds.
    According to the comments, max rexit timeout should be 20ms.
    Align with the comments to properly calculate the delay.
    
    Verified on Sunrise Point-LP and Cannon Lake.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0e7abb6a53f081559db182cceeb182b64bdae7de
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Nov 9 17:21:20 2018 +0200

    usb: xhci: fix uninitialized completion when USB3 port got wrong status
    
    commit 958c0bd86075d4ef1c936998deefe1947e539240 upstream.
    
    Realtek USB3.0 Card Reader [0bda:0328] reports wrong port status on
    Cannon lake PCH USB3.1 xHCI [8086:a36d] after resume from S3,
    after clear port reset it works fine.
    
    Since this device is registered on USB3 roothub at boot,
    when port status reports not superspeed, xhci_get_port_status will call
    an uninitialized completion in bus_state[0].
    Kernel will hang because of NULL pointer.
    
    Restrict the USB2 resume status check in USB2 roothub to fix hang issue.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bf0faabcabde964e3d11146e23022b79976da0a6
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 14:15:13 2018 +0100

    can: dev: __can_get_echo_skb(): print error message, if trying to echo non existing skb
    
    commit 7da11ba5c5066dadc2e96835a6233d56d7b7764a upstream.
    
    Prior to echoing a successfully transmitted CAN frame (by calling
    can_get_echo_skb()), CAN drivers have to put the CAN frame (by calling
    can_put_echo_skb() in the transmit function). These put and get function
    take an index as parameter, which is used to identify the CAN frame.
    
    A driver calling can_get_echo_skb() with a index not pointing to a skb
    is a BUG, so add an appropriate error message.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0617eab85a2fae992822f78612ac7edc1c0ea336
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 14:05:26 2018 +0100

    can: dev: __can_get_echo_skb(): Don't crash the kernel if can_priv::echo_skb is accessed out of bounds
    
    commit e7a6994d043a1e31d5b17706a22ce33d2a3e4cdc upstream.
    
    If the "struct can_priv::echo_skb" is accessed out of bounds would lead
    to a kernel crash. Better print a sensible warning message instead and
    try to recover.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 66959c01a179837d34d0b490caa7fe180fd69ad3
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 11:08:21 2018 +0100

    can: dev: __can_get_echo_skb(): replace struct can_frame by canfd_frame to access frame length
    
    commit 200f5c49f7a2cd694436bfc6cb0662b794c96736 upstream.
    
    This patch replaces the use of "struct can_frame::can_dlc" by "struct
    canfd_frame::len" to access the frame's length. As it is ensured that
    both structures have a compatible memory layout for this member this is
    no functional change. Futher, this compatibility is documented in a
    comment.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1563d207e3202f5d685d559934dd20ccb8df51b3
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 10:37:46 2018 +0100

    can: dev: can_get_echo_skb(): factor out non sending code to __can_get_echo_skb()
    
    commit a4310fa2f24687888ce80fdb0e88583561a23700 upstream.
    
    This patch factors out all non sending parts of can_get_echo_skb() into
    a seperate function __can_get_echo_skb(), so that it can be re-used in
    an upcoming patch.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e5054135bc04461459cd6458322f68e4c9919a5a
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Oct 24 10:27:12 2018 +0200

    can: raw: check for CAN FD capable netdev in raw_sendmsg()
    
    commit a43608fa77213ad5ac5f75994254b9f65d57cfa0 upstream.
    
    When the socket is CAN FD enabled it can handle CAN FD frame
    transmissions.  Add an additional check in raw_sendmsg() as a CAN2.0 CAN
    driver (non CAN FD) should never see a CAN FD frame. Due to the commonly
    used can_dropped_invalid_skb() function the CAN 2.0 driver would drop
    that CAN FD frame anyway - but with this patch the user gets a proper
    -EINVAL return code.
    
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    [bwh: Backported to 3.16: Keep looking up devices in init_net]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 73a8e0f8c6969186b0d961644876bc9d8968c21a
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri Nov 9 15:52:16 2018 +0100

    fuse: fix leaked notify reply
    
    commit 7fabaf303458fcabb694999d6fa772cc13d4e217 upstream.
    
    fuse_request_send_notify_reply() may fail if the connection was reset for
    some reason (e.g. fs was unmounted).  Don't leak request reference in this
    case.  Besides leaking memory, this resulted in fc->num_waiting not being
    decremented and hence fuse_wait_aborted() left in a hanging and unkillable
    state.
    
    Fixes: 2d45ba381a74 ("fuse: add retrieve request")
    Fixes: b8f95e5d13f5 ("fuse: umount should wait for all requests")
    Reported-and-tested-by: syzbot+6339eda9cb4ebbc4c37b@syzkaller.appspotmail.com
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f0cad198e369c96d8235f76071ddf5c2aabc4dcd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 9 11:59:45 2018 +0100

    ALSA: oss: Use kvzalloc() for local buffer allocations
    
    commit 65766ee0bf7fe8b3be80e2e1c3ef54ad59b29476 upstream.
    
    PCM OSS layer may allocate a few temporary buffers, one for the core
    read/write and another for the conversions via plugins.  Currently
    both are allocated via vmalloc().  But as the allocation size is
    equivalent with the PCM period size, the required size might be quite
    small, depending on the application.
    
    This patch replaces these vmalloc() calls with kvzalloc() for covering
    small period sizes better.  Also, we use "z"-alloc variant here for
    addressing the possible uninitialized access reported by syzkaller.
    
    Reported-by: syzbot+1cb36954e127c98dd037@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.16: kvzalloc() does not exist, so only change to
     using vzalloc()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a44ad15336651da1363fd76d268bde2bf5dc35ca
Author: Ben Greear <greearb@candelatech.com>
Date:   Tue Oct 23 13:36:52 2018 -0700

    mac80211: Clear beacon_int in ieee80211_do_stop
    
    commit 5c21e8100dfd57c806e833ae905e26efbb87840f upstream.
    
    This fixes stale beacon-int values that would keep a netdev
    from going up.
    
    To reproduce:
    
    Create two VAP on one radio.
    vap1 has beacon-int 100, start it.
    vap2 has beacon-int 240, start it (and it will fail
      because beacon-int mismatch).
    reconfigure vap2 to have beacon-int 100 and start it.
      It will fail because the stale beacon-int 240 will be used
      in the ifup path and hostapd never gets a chance to set the
      new beacon interval.
    
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3da59567ac4fde1a9d79006096f4e9f8c9e24276
Author: Vasyl Vavrychuk <vasyl.vavrychuk@globallogic.com>
Date:   Thu Oct 18 01:02:12 2018 +0300

    mac80211_hwsim: Timer should be initialized before device registered
    
    commit a1881c9b8a1edef0a5ae1d5c1b61406fe3402114 upstream.
    
    Otherwise if network manager starts configuring Wi-Fi interface
    immidiatelly after getting notification of its creation, we will get
    NULL pointer dereference:
    
      BUG: unable to handle kernel NULL pointer dereference at           (null)
      IP: [<ffffffff95ae94c8>] hrtimer_active+0x28/0x50
      ...
      Call Trace:
       [<ffffffff95ae9997>] ? hrtimer_try_to_cancel+0x27/0x110
       [<ffffffff95ae9a95>] ? hrtimer_cancel+0x15/0x20
       [<ffffffffc0803bf0>] ? mac80211_hwsim_config+0x140/0x1c0 [mac80211_hwsim]
    
    Signed-off-by: Vasyl Vavrychuk <vasyl.vavrychuk@globallogic.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3f0824ad45ea350addc33e4a058002f868579f76
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Feb 25 10:27:37 2017 +0000

    mac80211_hwsim: Replace bogus hrtimer clockid
    
    commit 8fbcfeb8a9cc803464d6c166e7991913711c612c upstream.
    
    mac80211_hwsim initializes a hrtimer with clockid
    CLOCK_MONOTONIC_RAW. That's not supported.
    
    Use CLOCK_MONOTONIC instead.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 07108b58d6cf351e23e809e174765656a5fda0a2
Author: Thor Thayer <thor.thayer@linux.intel.com>
Date:   Thu Nov 8 11:42:14 2018 -0600

    net: stmmac: Fix RX packet size > 8191
    
    commit 8137b6ef0ce469154e5cf19f8e7fe04d9a72ac5e upstream.
    
    Ping problems with packets > 8191 as shown:
    
    PING 192.168.1.99 (192.168.1.99) 8150(8178) bytes of data.
    8158 bytes from 192.168.1.99: icmp_seq=1 ttl=64 time=0.669 ms
    wrong data byte 8144 should be 0xd0 but was 0x0
    16    10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f
          20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f
    %< ---------------snip--------------------------------------
    8112  b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf
          c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf
    8144  0 0 0 0 d0 d1
          ^^^^^^^
    Notice the 4 bytes of 0 before the expected byte of d0.
    
    Databook notes that the RX buffer must be a multiple of 4/8/16
    bytes [1].
    
    Update the DMA Buffer size define to 8188 instead of 8192. Remove
    the -1 from the RX buffer size allocations and use the new
    DMA Buffer size directly.
    
    [1] Synopsys DesignWare Cores Ethernet MAC Universal v3.70a
        [section 8.4.2 - Table 8-24]
    
    Tested on SoCFPGA Stratix10 with ping sweep from 100 to 8300 byte packets.
    
    Fixes: 286a83721720 ("stmmac: add CHAINED descriptor mode support (V4)")
    Suggested-by: Jose Abreu <jose.abreu@synopsys.com>
    Signed-off-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2503d5a4ca8577881a1f02f7d33e65b27c61e6cc
Author: Janusz Krzysztofik <jmkrzyszt@gmail.com>
Date:   Wed Nov 7 22:30:31 2018 +0100

    ARM: OMAP1: ams-delta: Fix possible use of uninitialized field
    
    commit cec83ff1241ec98113a19385ea9e9cfa9aa4125b upstream.
    
    While playing with initialization order of modem device, it has been
    discovered that under some circumstances (early console init, I
    believe) its .pm() callback may be called before the
    uart_port->private_data pointer is initialized from
    plat_serial8250_port->private_data, resulting in NULL pointer
    dereference.  Fix it by checking for uninitialized pointer before using
    it in modem_pm().
    
    Fixes: aabf31737a6a ("ARM: OMAP1: ams-delta: update the modem to use regulator API")
    Signed-off-by: Janusz Krzysztofik <jmkrzyszt@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 820682e9979a5b312187867865a39cf788b79009
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Nov 8 02:04:57 2018 +0000

    SUNRPC: drop pointless static qualifier in xdr_get_next_encode_buffer()
    
    commit 025911a5f4e36955498ed50806ad1b02f0f76288 upstream.
    
    There is no need to have the '__be32 *p' variable static since new value
    always be assigned before use it.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69fbf21cf2d07e3726e560cfbe4811394094afa0
Author: H. Peter Anvin (Intel) <hpa@zytor.com>
Date:   Mon Oct 22 09:19:05 2018 -0700

    arch/alpha, termios: implement BOTHER, IBSHIFT and termios2
    
    commit d0ffb805b729322626639336986bc83fc2e60871 upstream.
    
    Alpha has had c_ispeed and c_ospeed, but still set speeds in c_cflags
    using arbitrary flags. Because BOTHER is not defined, the general
    Linux code doesn't allow setting arbitrary baud rates, and because
    CBAUDEX == 0, we can have an array overrun of the baud_rate[] table in
    drivers/tty/tty_baudrate.c if (c_cflags & CBAUD) == 037.
    
    Resolve both problems by #defining BOTHER to 037 on Alpha.
    
    However, userspace still needs to know if setting BOTHER is actually
    safe given legacy kernels (does anyone actually care about that on
    Alpha anymore?), so enable the TCGETS2/TCSETS*2 ioctls on Alpha, even
    though they use the same structure. Define struct termios2 just for
    compatibility; it is the exact same structure as struct termios. In a
    future patchset, this will be cleaned up so the uapi headers are
    usable from libc.
    
    Signed-off-by: H. Peter Anvin (Intel) <hpa@zytor.com>
    Cc: Jiri Slaby <jslaby@suse.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Eugene Syromiatnikov <esyr@redhat.com>
    Cc: <linux-alpha@vger.kernel.org>
    Cc: <linux-serial@vger.kernel.org>
    Cc: Johan Hovold <johan@kernel.org>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit efbec32af5337a004065638b6714d354aee028e4
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Mon Oct 22 09:19:04 2018 -0700

    termios, tty/tty_baudrate.c: fix buffer overrun
    
    commit 991a25194097006ec1e0d2e0814ff920e59e3465 upstream.
    
    On architectures with CBAUDEX == 0 (Alpha and PowerPC), the code in tty_baudrate.c does
    not do any limit checking on the tty_baudrate[] array, and in fact a
    buffer overrun is possible on both architectures. Add a limit check to
    prevent that situation.
    
    This will be followed by a much bigger cleanup/simplification patch.
    
    Signed-off-by: H. Peter Anvin (Intel) <hpa@zytor.com>
    Requested-by: Cc: Johan Hovold <johan@kernel.org>
    Cc: Jiri Slaby <jslaby@suse.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Richard Henderson <rth@twiddle.net>
    Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Cc: Matt Turner <mattst88@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Eugene Syromiatnikov <esyr@redhat.com>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8d3decb7d93eaa110dd88afc5a6ea0b503680987
Author: Sebastian Parschauer <sparschauer@suse.de>
Date:   Wed Nov 7 13:36:40 2018 +0100

    HID: Add quirk for Microsoft PIXART OEM mouse
    
    commit e82e62e390d39c3819641cd721695702180d54fb upstream.
    
    The PixArt OEM mice are known for disconnecting every minute in
    runlevel 1 or 3 if they are not always polled. So add quirk
    ALWAYS_POLL for this one as well.
    
    References:
    https://www.spinics.net/lists/linux-usb/msg88965.html
    http://linet.gr.jp/~kojima/PlamoWeb/ML/htdocs/201808/msg00019.html
    
    Signed-off-by: Sebastian Parschauer <sparschauer@suse.de>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    [bwh: Backported to 3.16:
     - Don't use HID_USB_DEVICE
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3da631cab83cf0eb9bbfbea45f96c1b038771ad0
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 7 14:18:50 2018 +0100

    iommu/ipmmu-vmsa: Fix crash on early domain free
    
    commit e5b78f2e349eef5d4fca5dc1cf5a3b4b2cc27abd upstream.
    
    If iommu_ops.add_device() fails, iommu_ops.domain_free() is still
    called, leading to a crash, as the domain was only partially
    initialized:
    
        ipmmu-vmsa e67b0000.mmu: Cannot accommodate DMA translation for IOMMU page tables
        sata_rcar ee300000.sata: Unable to initialize IPMMU context
        iommu: Failed to add device ee300000.sata to group 0: -22
        Unable to handle kernel NULL pointer dereference at virtual address 0000000000000038
        ...
        Call trace:
         ipmmu_domain_free+0x1c/0xa0
         iommu_group_release+0x48/0x68
         kobject_put+0x74/0xe8
         kobject_del.part.0+0x3c/0x50
         kobject_put+0x60/0xe8
         iommu_group_get_for_dev+0xa8/0x1f0
         ipmmu_add_device+0x1c/0x40
         of_iommu_configure+0x118/0x190
    
    Fix this by checking if the domain's context already exists, before
    trying to destroy it.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Fixes: d25a2a16f0889 ('iommu: Add driver for Renesas VMSA-compatible IPMMU')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f8d04d2ad6e121884f7c402c924b31e1c6a0fa64
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu Oct 25 12:05:11 2018 -0500

    mount: Prevent MNT_DETACH from disconnecting locked mounts
    
    commit 9c8e0a1b683525464a2abe9fb4b54404a50ed2b4 upstream.
    
    Timothy Baldwin <timbaldwin@fastmail.co.uk> wrote:
    > As per mount_namespaces(7) unprivileged users should not be able to look under mount points:
    >
    >   Mounts that come as a single unit from more privileged mount are locked
    >   together and may not be separated in a less privileged mount namespace.
    >
    > However they can:
    >
    > 1. Create a mount namespace.
    > 2. In the mount namespace open a file descriptor to the parent of a mount point.
    > 3. Destroy the mount namespace.
    > 4. Use the file descriptor to look under the mount point.
    >
    > I have reproduced this with Linux 4.16.18 and Linux 4.18-rc8.
    >
    > The setup:
    >
    > $ sudo sysctl kernel.unprivileged_userns_clone=1
    > kernel.unprivileged_userns_clone = 1
    > $ mkdir -p A/B/Secret
    > $ sudo mount -t tmpfs hide A/B
    >
    >
    > "Secret" is indeed hidden as expected:
    >
    > $ ls -lR A
    > A:
    > total 0
    > drwxrwxrwt 2 root root 40 Feb 12 21:08 B
    >
    > A/B:
    > total 0
    >
    >
    > The attack revealing "Secret":
    >
    > $ unshare -Umr sh -c "exec unshare -m ls -lR /proc/self/fd/4/ 4<A"
    > /proc/self/fd/4/:
    > total 0
    > drwxr-xr-x 3 root root 60 Feb 12 21:08 B
    >
    > /proc/self/fd/4/B:
    > total 0
    > drwxr-xr-x 2 root root 40 Feb 12 21:08 Secret
    >
    > /proc/self/fd/4/B/Secret:
    > total 0
    
    I tracked this down to put_mnt_ns running passing UMOUNT_SYNC and
    disconnecting all of the mounts in a mount namespace.  Fix this by
    factoring drop_mounts out of drop_collected_mounts and passing
    0 instead of UMOUNT_SYNC.
    
    There are two possible behavior differences that result from this.
    - No longer setting UMOUNT_SYNC will no longer set MNT_SYNC_UMOUNT on
      the vfsmounts being unmounted.  This effects the lazy rcu walk by
      kicking the walk out of rcu mode and forcing it to be a non-lazy
      walk.
    - No longer disconnecting locked mounts will keep some mounts around
      longer as they stay because the are locked to other mounts.
    
    There are only two users of drop_collected mounts: audit_tree.c and
    put_mnt_ns.
    
    In audit_tree.c the mounts are private and there are no rcu lazy walks
    only calls to iterate_mounts. So the changes should have no effect
    except for a small timing effect as the connected mounts are disconnected.
    
    In put_mnt_ns there may be references from process outside the mount
    namespace to the mounts.  So the mounts remaining connected will
    be the bug fix that is needed.  That rcu walks are allowed to continue
    appears not to be a problem especially as the rcu walk change was about
    an implementation detail not about semantics.
    
    Fixes: 5ff9d8a65ce8 ("vfs: Lock in place mounts from more privileged users")
    Reported-by: Timothy Baldwin <timbaldwin@fastmail.co.uk>
    Tested-by: Timothy Baldwin <timbaldwin@fastmail.co.uk>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d221b225a863b1e5992896e3b54d133b3748050
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu Oct 25 09:04:18 2018 -0500

    mount: Don't allow copying MNT_UNBINDABLE|MNT_LOCKED mounts
    
    commit df7342b240185d58d3d9665c0bbf0a0f5570ec29 upstream.
    
    Jonathan Calmels from NVIDIA reported that he's able to bypass the
    mount visibility security check in place in the Linux kernel by using
    a combination of the unbindable property along with the private mount
    propagation option to allow a unprivileged user to see a path which
    was purposefully hidden by the root user.
    
    Reproducer:
      # Hide a path to all users using a tmpfs
      root@castiana:~# mount -t tmpfs tmpfs /sys/devices/
      root@castiana:~#
    
      # As an unprivileged user, unshare user namespace and mount namespace
      stgraber@castiana:~$ unshare -U -m -r
    
      # Confirm the path is still not accessible
      root@castiana:~# ls /sys/devices/
    
      # Make /sys recursively unbindable and private
      root@castiana:~# mount --make-runbindable /sys
      root@castiana:~# mount --make-private /sys
    
      # Recursively bind-mount the rest of /sys over to /mnnt
      root@castiana:~# mount --rbind /sys/ /mnt
    
      # Access our hidden /sys/device as an unprivileged user
      root@castiana:~# ls /mnt/devices/
      breakpoint cpu cstate_core cstate_pkg i915 intel_pt isa kprobe
      LNXSYSTM:00 msr pci0000:00 platform pnp0 power software system
      tracepoint uncore_arb uncore_cbox_0 uncore_cbox_1 uprobe virtual
    
    Solve this by teaching copy_tree to fail if a mount turns out to be
    both unbindable and locked.
    
    Fixes: 5ff9d8a65ce8 ("vfs: Lock in place mounts from more privileged users")
    Reported-by: Jonathan Calmels <jcalmels@nvidia.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit beb518802634e722d7b90d66cbfb789a71482dc3
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Oct 22 10:21:38 2018 -0500

    mount: Retest MNT_LOCKED in do_umount
    
    commit 25d202ed820ee347edec0bf3bf553544556bf64b upstream.
    
    It was recently pointed out that the one instance of testing MNT_LOCKED
    outside of the namespace_sem is in ksys_umount.
    
    Fix that by adding a test inside of do_umount with namespace_sem and
    the mount_lock held.  As it helps to fail fails the existing test is
    maintained with an additional comment pointing out that it may be racy
    because the locks are not held.
    
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Fixes: 5ff9d8a65ce8 ("vfs: Lock in place mounts from more privileged users")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f5bd9bdbed4b1e8aeea372f4619ccedf6f214f3f
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Nov 7 22:36:23 2018 -0500

    ext4: fix buffer leak in __ext4_read_dirblock() on error path
    
    commit de59fae0043f07de5d25e02ca360f7d57bfa5866 upstream.
    
    Fixes: dc6982ff4db1 ("ext4: refactor code to read directory blocks ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0273682e65c5a2890601a59d06e9c235153dfad1
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Nov 7 11:10:21 2018 -0500

    ext4: fix buffer leak in ext4_xattr_move_to_block() on error path
    
    commit 6bdc9977fcdedf47118d2caf7270a19f4b6d8a8f upstream.
    
    Fixes: 3f2571c1f91f ("ext4: factor out xattr moving")
    Fixes: 6dd4ee7cab7e ("ext4: Expand extra_inodes space per ...")
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ced6cde3e10585add6293481568f2646f4a1f9ee
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Nov 7 11:07:01 2018 -0500

    ext4: release bs.bh before re-using in ext4_xattr_block_find()
    
    commit 45ae932d246f721e6584430017176cbcadfde610 upstream.
    
    bs.bh was taken in previous ext4_xattr_block_find() call,
    it should be released before re-using
    
    Fixes: 7e01c8e5420b ("ext3/4: fix uninitialized bs in ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 63b09e8f83b93664e6eee16682e04f752333be18
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Nov 7 10:32:53 2018 -0500

    ext4: fix possible leak of sbi->s_group_desc_leak in error path
    
    commit 9e463084cdb22e0b56b2dfbc50461020409a5fd3 upstream.
    
    Fixes: bfe0a5f47ada ("ext4: add more mount time checks of the superblock")
    Reported-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 438a54fdf99f03b67453739cfa0bc17f04d5fd15
Author: Mattias Jacobsson <2pi@mok.nu>
Date:   Sun Oct 21 11:25:37 2018 +0200

    USB: misc: appledisplay: add 20" Apple Cinema Display
    
    commit f6501f49199097b99e4e263644d88c90d1ec1060 upstream.
    
    Add another Apple Cinema Display to the list of supported displays
    
    Signed-off-by: Mattias Jacobsson <2pi@mok.nu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c65dc704c5b771b205e9f40bb162ec09ad3402f6
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Oct 26 13:33:15 2018 +0800

    USB: quirks: Add no-lpm quirk for Raydium touchscreens
    
    commit deefd24228a172d1b27d4a9adbfd2cdacd60ae64 upstream.
    
    Raydium USB touchscreen fails to set config if LPM is enabled:
    [    2.030658] usb 1-8: New USB device found, idVendor=2386, idProduct=3119
    [    2.030659] usb 1-8: New USB device strings: Mfr=1, Product=2, SerialNumber=0
    [    2.030660] usb 1-8: Product: Raydium Touch System
    [    2.030661] usb 1-8: Manufacturer: Raydium Corporation
    [    7.132209] usb 1-8: can't set config #1, error -110
    
    Same behavior can be observed on 2386:3114.
    
    Raydium claims the touchscreen supports LPM under Windows, so I used
    Microsoft USB Test Tools (MUTT) [1] to check its LPM status. MUTT shows
    that the LPM doesn't work under Windows, either. So let's just disable LPM
    for Raydium touchscreens.
    
    [1] https://docs.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-test-tools
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24540658b6d0f4501058398308e18c9ba8aaa439
Author: Emmanuel Pescosta <emmanuelpescosta099@gmail.com>
Date:   Fri Oct 26 14:48:09 2018 +0200

    usb: quirks: Add delay-init quirk for Corsair K70 LUX RGB
    
    commit a77112577667cbda7c6292c52d909636aef31fd9 upstream.
    
    Following on from this patch: https://lkml.org/lkml/2017/11/3/516,
    Corsair K70 LUX RGB keyboards also require the DELAY_INIT quirk to
    start correctly at boot.
    
    Dmesg output:
    usb 1-6: string descriptor 0 read error: -110
    usb 1-6: New USB device found, idVendor=1b1c, idProduct=1b33
    usb 1-6: New USB device strings: Mfr=1, Product=2, SerialNumber=3
    usb 1-6: can't set config #1, error -110
    
    Signed-off-by: Emmanuel Pescosta <emmanuelpescosta099@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4e627981cc474ea8b23cb6f8833ef5079796ade9
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Oct 19 16:14:50 2018 +0800

    USB: Wait for extra delay time after USB_PORT_FEAT_RESET for quirky hub
    
    commit 781f0766cc41a9dd2e5d118ef4b1d5d89430257b upstream.
    
    Devices connected under Terminus Technology Inc. Hub (1a40:0101) may
    fail to work after the system resumes from suspend:
    [  206.063325] usb 3-2.4: reset full-speed USB device number 4 using xhci_hcd
    [  206.143691] usb 3-2.4: device descriptor read/64, error -32
    [  206.351671] usb 3-2.4: device descriptor read/64, error -32
    
    Info for this hub:
    T:  Bus=03 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  2 Spd=480 MxCh= 4
    D:  Ver= 2.00 Cls=09(hub  ) Sub=00 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=1a40 ProdID=0101 Rev=01.11
    S:  Product=USB 2.0 Hub
    C:  #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=100mA
    I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
    
    Some expirements indicate that the USB devices connected to the hub are
    innocent, it's the hub itself is to blame. The hub needs extra delay
    time after it resets its port.
    
    Hence wait for extra delay, if the device is connected to this quirky
    hub.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Drop module parameter changes
     - We don't have a USB_PORT_QUIRK_FAST_ENUM quirk]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bf41b740de354cff0abd3c0b7a9108d27c1d3f79
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Nov 6 17:18:17 2018 -0500

    ext4: avoid possible double brelse() in add_new_gdb() on error path
    
    commit 4f32c38b4662312dd3c5f113d8bdd459887fb773 upstream.
    
    Fixes: b40971426a83 ("ext4: add error checking to calls to ...")
    Reported-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cfda768adeddc179866cf65c4eecb1f1532e67ca
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Tue Nov 6 17:01:36 2018 -0500

    ext4: avoid buffer leak in ext4_orphan_add() after prior errors
    
    commit feaf264ce7f8d54582e2f66eb82dd9dd124c94f3 upstream.
    
    Fixes: d745a8c20c1f ("ext4: reduce contention on s_orphan_lock")
    Fixes: 6e3617e579e0 ("ext4: Handle non empty on-disk orphan link")
    Cc: Dmitry Monakhov <dmonakhov@gmail.com>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c9b326c5243cc5eceb74356136158e3d24799856
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Tue Nov 6 16:20:40 2018 -0500

    ext4: fix possible inode leak in the retry loop of ext4_resize_fs()
    
    commit db6aee62406d9fbb53315fcddd81f1dc271d49fa upstream.
    
    Fixes: 1c6bd7173d66 ("ext4: convert file system to meta_bg if needed ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1d5bf86f957650f4fa456e12b07c9aa4cfaf5719
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Tue Nov 6 16:16:01 2018 -0500

    ext4: fix missing cleanup if ext4_alloc_flex_bg_array() fails while resizing
    
    commit f348e2241fb73515d65b5d77dd9c174128a7fbf2 upstream.
    
    Fixes: 117fff10d7f1 ("ext4: grow the s_flex_groups array as needed ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit be97cfeda79d1425c02723ca64310b38d9539e5d
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Nov 5 11:14:17 2018 +0000

    Btrfs: fix data corruption due to cloning of eof block
    
    commit ac765f83f1397646c11092a032d4f62c3d478b81 upstream.
    
    We currently allow cloning a range from a file which includes the last
    block of the file even if the file's size is not aligned to the block
    size. This is fine and useful when the destination file has the same size,
    but when it does not and the range ends somewhere in the middle of the
    destination file, it leads to corruption because the bytes between the EOF
    and the end of the block have undefined data (when there is support for
    discard/trimming they have a value of 0x00).
    
    Example:
    
     $ mkfs.btrfs -f /dev/sdb
     $ mount /dev/sdb /mnt
    
     $ export foo_size=$((256 * 1024 + 100))
     $ xfs_io -f -c "pwrite -S 0x3c 0 $foo_size" /mnt/foo
     $ xfs_io -f -c "pwrite -S 0xb5 0 1M" /mnt/bar
    
     $ xfs_io -c "reflink /mnt/foo 0 512K $foo_size" /mnt/bar
    
     $ od -A d -t x1 /mnt/bar
     0000000 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5
     *
     0524288 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c 3c
     *
     0786528 3c 3c 3c 3c 00 00 00 00 00 00 00 00 00 00 00 00
     0786544 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     *
     0790528 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5 b5
     *
     1048576
    
    The bytes in the range from 786532 (512Kb + 256Kb + 100 bytes) to 790527
    (512Kb + 256Kb + 4Kb - 1) got corrupted, having now a value of 0x00 instead
    of 0xb5.
    
    This is similar to the problem we had for deduplication that got recently
    fixed by commit de02b9f6bb65 ("Btrfs: fix data corruption when
    deduplicating between different files").
    
    Fix this by not allowing such operations to be performed and return the
    errno -EINVAL to user space. This is what XFS is doing as well at the VFS
    level. This change however now makes us return -EINVAL instead of
    -EOPNOTSUPP for cases where the source range maps to an inline extent and
    the destination range's end is smaller then the destination file's size,
    since the detection of inline extents is done during the actual process of
    dropping file extent items (at __btrfs_drop_extents()). Returning the
    -EINVAL error is done early on and solely based on the input parameters
    (offsets and length) and destination file's size. This makes us consistent
    with XFS and anyone else supporting cloning since this case is now checked
    at a higher level in the VFS and is where the -EINVAL will be returned
    from starting with kernel 4.20 (the VFS changed was introduced in 4.20-rc1
    by commit 07d19dc9fbe9 ("vfs: avoid problematic remapping requests into
    partial EOF block"). So this change is more geared towards stable kernels,
    as it's unlikely the new VFS checks get removed intentionally.
    
    A test case for fstests follows soon, as well as an update to filter
    existing tests that expect -EOPNOTSUPP to accept -EINVAL as well.
    
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8b8c753d20e5e82aea179725eb254908d1b9d477
Author: Robbie Ko <robbieko@synology.com>
Date:   Tue Oct 30 18:04:04 2018 +0800

    Btrfs: fix cur_offset in the error case for nocow
    
    commit 506481b20e818db40b6198815904ecd2d6daee64 upstream.
    
    When the cow_file_range fails, the related resources are unlocked
    according to the range [start..end), so the unlock cannot be repeated in
    run_delalloc_nocow.
    
    In some cases (e.g. cur_offset <= end && cow_start != -1), cur_offset is
    not updated correctly, so move the cur_offset update before
    cow_file_range.
    
      kernel BUG at mm/page-writeback.c:2663!
      Internal error: Oops - BUG: 0 [#1] SMP
      CPU: 3 PID: 31525 Comm: kworker/u8:7 Tainted: P O
      Hardware name: Realtek_RTD1296 (DT)
      Workqueue: writeback wb_workfn (flush-btrfs-1)
      task: ffffffc076db3380 ti: ffffffc02e9ac000 task.ti: ffffffc02e9ac000
      PC is at clear_page_dirty_for_io+0x1bc/0x1e8
      LR is at clear_page_dirty_for_io+0x14/0x1e8
      pc : [<ffffffc00033c91c>] lr : [<ffffffc00033c774>] pstate: 40000145
      sp : ffffffc02e9af4f0
      Process kworker/u8:7 (pid: 31525, stack limit = 0xffffffc02e9ac020)
      Call trace:
      [<ffffffc00033c91c>] clear_page_dirty_for_io+0x1bc/0x1e8
      [<ffffffbffc514674>] extent_clear_unlock_delalloc+0x1e4/0x210 [btrfs]
      [<ffffffbffc4fb168>] run_delalloc_nocow+0x3b8/0x948 [btrfs]
      [<ffffffbffc4fb948>] run_delalloc_range+0x250/0x3a8 [btrfs]
      [<ffffffbffc514c0c>] writepage_delalloc.isra.21+0xbc/0x1d8 [btrfs]
      [<ffffffbffc516048>] __extent_writepage+0xe8/0x248 [btrfs]
      [<ffffffbffc51630c>] extent_write_cache_pages.isra.17+0x164/0x378 [btrfs]
      [<ffffffbffc5185a8>] extent_writepages+0x48/0x68 [btrfs]
      [<ffffffbffc4f5828>] btrfs_writepages+0x20/0x30 [btrfs]
      [<ffffffc00033d758>] do_writepages+0x30/0x88
      [<ffffffc0003ba0f4>] __writeback_single_inode+0x34/0x198
      [<ffffffc0003ba6c4>] writeback_sb_inodes+0x184/0x3c0
      [<ffffffc0003ba96c>] __writeback_inodes_wb+0x6c/0xc0
      [<ffffffc0003bac20>] wb_writeback+0x1b8/0x1c0
      [<ffffffc0003bb0f0>] wb_workfn+0x150/0x250
      [<ffffffc0002b0014>] process_one_work+0x1dc/0x388
      [<ffffffc0002b02f0>] worker_thread+0x130/0x500
      [<ffffffc0002b6344>] kthread+0x10c/0x110
      [<ffffffc000284590>] ret_from_fork+0x10/0x40
      Code: d503201f a9025bb5 a90363b7 f90023b9 (d4210000)
    
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Robbie Ko <robbieko@synology.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 961614d622fd94b4cebc2873c1065ca05f0bcae1
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Mon Nov 5 17:00:53 2018 +0900

    xfrm: Fix bucket count reported to userspace
    
    commit ca92e173ab34a4f7fc4128bd372bd96f1af6f507 upstream.
    
    sadhcnt is reported by `ip -s xfrm state count` as "buckets count", not the
    hash mask.
    
    Fixes: 28d8909bc790 ("[XFRM]: Export SAD info.")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3e06434906284aefb44e3b2251dabf7b10b83398
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Sun Nov 4 01:46:00 2018 -0700

    xtensa: make sure bFLT stack is 16 byte aligned
    
    commit 0773495b1f5f1c5e23551843f87b5ff37e7af8f7 upstream.
    
    Xtensa ABI requires stack alignment to be at least 16. In noMMU
    configuration ARCH_SLAB_MINALIGN is used to align stack. Make it at
    least 16.
    
    This fixes the following runtime error in noMMU configuration, caused by
    interaction between insufficiently aligned stack and alloca function,
    that results in corruption of on-stack variable in the libc function
    glob:
    
     Caught unhandled exception in 'sh' (pid = 47, pc = 0x02d05d65)
      - should not happen
      EXCCAUSE is 15
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3e8b308f5ba2689c57dd28fae5c160ddec07d112
Author: Frank Sorenson <sorenson@redhat.com>
Date:   Tue Oct 30 15:10:40 2018 -0500

    sunrpc: correct the computation for page_ptr when truncating
    
    commit 5d7a5bcb67c70cbc904057ef52d3fcfeb24420bb upstream.
    
    When truncating the encode buffer, the page_ptr is getting
    advanced, causing the next page to be skipped while encoding.
    The page is still included in the response, so the response
    contains a page of bogus data.
    
    We need to adjust the page_ptr backwards to ensure we encode
    the next page into the correct place.
    
    We saw this triggered when concurrent directory modifications caused
    nfsd4_encode_direct_fattr() to return nfserr_noent, and the resulting
    call to xdr_truncate_encode() corrupted the READDIR reply.
    
    Signed-off-by: Frank Sorenson <sorenson@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c595f953a957df6e2cb6da7f0728b4602239d0f8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Oct 11 13:06:16 2018 +0200

    mtd: docg3: don't set conflicting BCH_CONST_PARAMS option
    
    commit be2e1c9dcf76886a83fb1c433a316e26d4ca2550 upstream.
    
    I noticed during the creation of another bugfix that the BCH_CONST_PARAMS
    option that is set by DOCG3 breaks setting variable parameters for any
    other users of the BCH library code.
    
    The only other user we have today is the MTD_NAND software BCH
    implementation (most flash controllers use hardware BCH these days
    and are not affected). I considered removing BCH_CONST_PARAMS entirely
    because of the inherent conflict, but according to the description in
    lib/bch.c there is a significant performance benefit in keeping it.
    
    To avoid the immediate problem of the conflict between MTD_NAND_BCH
    and DOCG3, this only sets the constant parameters if MTD_NAND_BCH
    is disabled, which should fix the problem for all cases that
    are affected. This should also work for all stable kernels.
    
    Note that there is only one machine that actually seems to use the
    DOCG3 driver (arch/arm/mach-pxa/mioa701.c), so most users should have
    the driver disabled, but it almost certainly shows up if we wanted
    to test random kernels on machines that use software BCH in MTD.
    
    Fixes: d13d19ece39f ("mtd: docg3: add ECC correction code")
    Cc: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d6cb071e1f673aa26225ea731066e4cdd1dd2288
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Sun Nov 4 03:48:57 2018 +0000

    x86/hyper-v: Enable PIT shutdown quirk
    
    commit 1de72c706488b7be664a601cf3843bd01e327e58 upstream.
    
    Hyper-V emulation of the PIT has a quirk such that the normal PIT shutdown
    path doesn't work, because clearing the counter register restarts the
    timer.
    
    Disable the counter clearing on PIT shutdown.
    
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>
    Cc: "devel@linuxdriverproject.org" <devel@linuxdriverproject.org>
    Cc: "daniel.lezcano@linaro.org" <daniel.lezcano@linaro.org>
    Cc: "virtualization@lists.linux-foundation.org" <virtualization@lists.linux-foundation.org>
    Cc: "jgross@suse.com" <jgross@suse.com>
    Cc: "akataria@vmware.com" <akataria@vmware.com>
    Cc: "olaf@aepfle.de" <olaf@aepfle.de>
    Cc: "apw@canonical.com" <apw@canonical.com>
    Cc: vkuznets <vkuznets@redhat.com>
    Cc: "jasowang@redhat.com" <jasowang@redhat.com>
    Cc: "marcelo.cerri@canonical.com" <marcelo.cerri@canonical.com>
    Cc: KY Srinivasan <kys@microsoft.com>
    Link: https://lkml.kernel.org/r/1541303219-11142-3-git-send-email-mikelley@microsoft.com
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6dc5ad52fe628c39ceb3fe0c1d252bb082418c48
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Sun Nov 4 03:48:54 2018 +0000

    clockevents/drivers/i8253: Add support for PIT shutdown quirk
    
    commit 35b69a420bfb56b7b74cb635ea903db05e357bec upstream.
    
    Add support for platforms where pit_shutdown() doesn't work because of a
    quirk in the PIT emulation. On these platforms setting the counter register
    to zero causes the PIT to start running again, negating the shutdown.
    
    Provide a global variable that controls whether the counter register is
    zero'ed, which platform specific code can override.
    
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "gregkh@linuxfoundation.org" <gregkh@linuxfoundation.org>
    Cc: "devel@linuxdriverproject.org" <devel@linuxdriverproject.org>
    Cc: "daniel.lezcano@linaro.org" <daniel.lezcano@linaro.org>
    Cc: "virtualization@lists.linux-foundation.org" <virtualization@lists.linux-foundation.org>
    Cc: "jgross@suse.com" <jgross@suse.com>
    Cc: "akataria@vmware.com" <akataria@vmware.com>
    Cc: "olaf@aepfle.de" <olaf@aepfle.de>
    Cc: "apw@canonical.com" <apw@canonical.com>
    Cc: vkuznets <vkuznets@redhat.com>
    Cc: "jasowang@redhat.com" <jasowang@redhat.com>
    Cc: "marcelo.cerri@canonical.com" <marcelo.cerri@canonical.com>
    Cc: KY Srinivasan <kys@microsoft.com>
    Link: https://lkml.kernel.org/r/1541303219-11142-2-git-send-email-mikelley@microsoft.com
    [bwh: Backported to 3.16:
     - Don't use __ro_after_init
     - Adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9e871b9a4ddb8a49fe26d7aa8734bf83ab9f07ad
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Sat Nov 3 17:11:19 2018 -0400

    ext4: add missing brelse() update_backups()'s error path
    
    commit ea0abbb648452cdb6e1734b702b6330a7448fcf8 upstream.
    
    Fixes: ac27a0ec112a ("ext4: initial copy of files from ext3")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 65593437335a599cfb511b80b6ce4124288be49d
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Sat Nov 3 16:50:08 2018 -0400

    ext4: add missing brelse() add_new_gdb_meta_bg()'s error path
    
    commit 61a9c11e5e7a0dab5381afa5d9d4dd5ebf18f7a0 upstream.
    
    Fixes: 01f795f9e0d6 ("ext4: add online resizing support for meta_bg ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c314c2fe3807df0197b0ff92a686bfdd928a88a6
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Sat Nov 3 16:22:10 2018 -0400

    ext4: add missing brelse() in set_flexbg_block_bitmap()'s error path
    
    commit cea5794122125bf67559906a0762186cf417099c upstream.
    
    Fixes: 33afdcc5402d ("ext4: add a function which sets up group blocks ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 496becbc3b9b4204b5ca18f7ddf707413a420283
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Sat Nov 3 16:13:17 2018 -0400

    ext4: avoid potential extra brelse in setup_new_flex_group_blocks()
    
    commit 9e4028935cca3f9ef9b6a90df9da6f1f94853536 upstream.
    
    Currently bh is set to NULL only during first iteration of for cycle,
    then this pointer is not cleared after end of using.
    Therefore rollback after errors can lead to extra brelse(bh) call,
    decrements bh counter and later trigger an unexpected warning in __brelse()
    
    Patch moves brelse() calls in body of cycle to exclude requirement of
    brelse() call in rollback.
    
    Fixes: 33afdcc5402d ("ext4: add a function which sets up group blocks ...")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5969b6788260ad4f0e26d514b7423574d8f80b29
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Nov 2 15:48:46 2018 -0700

    memory_hotplug: cond_resched in __remove_pages
    
    commit dd33ad7b251f900481701b2a82d25de583867708 upstream.
    
    We have received a bug report that unbinding a large pmem (>1TB) can
    result in a soft lockup:
    
      NMI watchdog: BUG: soft lockup - CPU#9 stuck for 23s! [ndctl:4365]
      [...]
      Supported: Yes
      CPU: 9 PID: 4365 Comm: ndctl Not tainted 4.12.14-94.40-default #1 SLE12-SP4
      Hardware name: Intel Corporation S2600WFD/S2600WFD, BIOS SE5C620.86B.01.00.0833.051120182255 05/11/2018
      task: ffff9cce7d4410c0 task.stack: ffffbe9eb1bc4000
      RIP: 0010:__put_page+0x62/0x80
      Call Trace:
       devm_memremap_pages_release+0x152/0x260
       release_nodes+0x18d/0x1d0
       device_release_driver_internal+0x160/0x210
       unbind_store+0xb3/0xe0
       kernfs_fop_write+0x102/0x180
       __vfs_write+0x26/0x150
       vfs_write+0xad/0x1a0
       SyS_write+0x42/0x90
       do_syscall_64+0x74/0x150
       entry_SYSCALL_64_after_hwframe+0x3d/0xa2
      RIP: 0033:0x7fd13166b3d0
    
    It has been reported on an older (4.12) kernel but the current upstream
    code doesn't cond_resched in the hot remove code at all and the given
    range to remove might be really large.  Fix the issue by calling
    cond_resched once per memory section.
    
    Link: http://lkml.kernel.org/r/20181031125840.23982-1-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Johannes Thumshirn <jthumshirn@suse.de>
    Cc: Dan Williams <dan.j.williams@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6a32876747f1aa378598564a64c174f75d915ff7
Author: Changwei Ge <ge.changwei@h3c.com>
Date:   Fri Nov 2 15:48:15 2018 -0700

    ocfs2: fix a misuse a of brelse after failing ocfs2_check_dir_entry
    
    commit 29aa30167a0a2e6045a0d6d2e89d8168132333d5 upstream.
    
    Somehow, file system metadata was corrupted, which causes
    ocfs2_check_dir_entry() to fail in function ocfs2_dir_foreach_blk_el().
    
    According to the original design intention, if above happens we should
    skip the problematic block and continue to retrieve dir entry.  But
    there is obviouse misuse of brelse around related code.
    
    After failure of ocfs2_check_dir_entry(), current code just moves to
    next position and uses the problematic buffer head again and again
    during which the problematic buffer head is released for multiple times.
    I suppose, this a serious issue which is long-lived in ocfs2.  This may
    cause other file systems which is also used in a the same host insane.
    
    So we should also consider about bakcporting this patch into linux
    -stable.
    
    Link: http://lkml.kernel.org/r/HK2PR06MB045211675B43EED794E597B6D56E0@HK2PR06MB0452.apcprd06.prod.outlook.com
    Signed-off-by: Changwei Ge <ge.changwei@h3c.com>
    Suggested-by: Changkuo Shi <shi.changkuo@h3c.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5c9a5a47ae0f58502d01c011101e46f8abccbda2
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Sun Oct 21 00:00:08 2018 +0900

    netfilter: xt_IDLETIMER: add sysfs filename checking routine
    
    commit 54451f60c8fa061af9051a53be9786393947367c upstream.
    
    When IDLETIMER rule is added, sysfs file is created under
    /sys/class/xt_idletimer/timers/
    But some label name shouldn't be used.
    ".", "..", "power", "uevent", "subsystem", etc...
    So that sysfs filename checking routine is needed.
    
    test commands:
       %iptables -I INPUT -j IDLETIMER --timeout 1 --label "power"
    
    splat looks like:
    [95765.423132] sysfs: cannot create duplicate filename '/devices/virtual/xt_idletimer/timers/power'
    [95765.433418] CPU: 0 PID: 8446 Comm: iptables Not tainted 4.19.0-rc6+ #20
    [95765.449755] Call Trace:
    [95765.449755]  dump_stack+0xc9/0x16b
    [95765.449755]  ? show_regs_print_info+0x5/0x5
    [95765.449755]  sysfs_warn_dup+0x74/0x90
    [95765.449755]  sysfs_add_file_mode_ns+0x352/0x500
    [95765.449755]  sysfs_create_file_ns+0x179/0x270
    [95765.449755]  ? sysfs_add_file_mode_ns+0x500/0x500
    [95765.449755]  ? idletimer_tg_checkentry+0x3e5/0xb1b [xt_IDLETIMER]
    [95765.449755]  ? rcu_read_lock_sched_held+0x114/0x130
    [95765.449755]  ? __kmalloc_track_caller+0x211/0x2b0
    [95765.449755]  ? memcpy+0x34/0x50
    [95765.449755]  idletimer_tg_checkentry+0x4e2/0xb1b [xt_IDLETIMER]
    [ ... ]
    
    Fixes: 0902b469bd25 ("netfilter: xtables: idletimer target implementation")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 70d55b62996e793c25629c8c680d7c421728254a
Author: Florian Westphal <fw@strlen.de>
Date:   Sat Mar 10 01:15:45 2018 +0100

    netfilter: x_tables: add and use xt_check_proc_name
    
    commit b1d0a5d0cba4597c0394997b2d5fced3e3841b4e upstream.
    
    recent and hashlimit both create /proc files, but only check that
    name is 0 terminated.
    
    This can trigger WARN() from procfs when name is "" or "/".
    Add helper for this and then use it for both.
    
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Reported-by: <syzbot+0502b00edac2a0680b61@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    [bwh: Backported to 3.16:
     - xt_hashlimit has only one check function
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c9b4d8cd6704bef427c845da73bf8afe072e406a
Author: Steve French <stfrench@microsoft.com>
Date:   Sun Oct 28 13:13:23 2018 -0500

    smb3: on kerberos mount if server doesn't specify auth type use krb5
    
    commit 926674de6705f0f1dbf29a62fd758d0977f535d6 upstream.
    
    Some servers (e.g. Azure) do not include a spnego blob in the SMB3
    negotiate protocol response, so on kerberos mounts ("sec=krb5")
    we can fail, as we expected the server to list its supported
    auth types (OIDs in the spnego blob in the negprot response).
    Change this so that on krb5 mounts we default to trying krb5 if the
    server doesn't list its supported protocol mechanisms.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d8ef2caf4b884a65dd0b0ce11fe7833ee5ff3a1
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Oct 30 15:07:32 2018 -0700

    kbuild: fix kernel/bounds.c 'W=1' warning
    
    commit 6a32c2469c3fbfee8f25bcd20af647326650a6cf upstream.
    
    Building any configuration with 'make W=1' produces a warning:
    
    kernel/bounds.c:16:6: warning: no previous prototype for 'foo' [-Wmissing-prototypes]
    
    When also passing -Werror, this prevents us from building any other files.
    Nobody ever calls the function, but we can't make it 'static' either
    since we want the compiler output.
    
    Calling it 'main' instead however avoids the warning, because gcc
    does not insist on having a declaration for main.
    
    Link: http://lkml.kernel.org/r/20181005083313.2088252-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 21e6710a43292bce88cb533db1cdc08008d166a0
Author: Nicolas Pitre <nico@fluxnic.net>
Date:   Tue Oct 30 13:26:15 2018 -0400

    Cramfs: fix abad comparison when wrap-arounds occur
    
    commit 672ca9dd13f1aca0c17516f76fc5b0e8344b3e46 upstream.
    
    It is possible for corrupted filesystem images to produce very large
    block offsets that may wrap when a length is added, and wrongly pass
    the buffer size test.
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 726c9c3c6bf144df922321460a4276e41923f075
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Mon Oct 29 20:36:43 2018 +0000

    rtnetlink: Disallow FDB configuration for non-Ethernet device
    
    commit da71577545a52be3e0e9225a946e5fd79cfab015 upstream.
    
    When an FDB entry is configured, the address is validated to have the
    length of an Ethernet address, but the device for which the address is
    configured can be of any type.
    
    The above can result in the use of uninitialized memory when the address
    is later compared against existing addresses since 'dev->addr_len' is
    used and it may be greater than ETH_ALEN, as with ip6tnl devices.
    
    Fix this by making sure that FDB entries are only configured for
    Ethernet devices.
    
    BUG: KMSAN: uninit-value in memcmp+0x11d/0x180 lib/string.c:863
    CPU: 1 PID: 4318 Comm: syz-executor998 Not tainted 4.19.0-rc3+ #49
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:77 [inline]
      dump_stack+0x14b/0x190 lib/dump_stack.c:113
      kmsan_report+0x183/0x2b0 mm/kmsan/kmsan.c:956
      __msan_warning+0x70/0xc0 mm/kmsan/kmsan_instr.c:645
      memcmp+0x11d/0x180 lib/string.c:863
      dev_uc_add_excl+0x165/0x7b0 net/core/dev_addr_lists.c:464
      ndo_dflt_fdb_add net/core/rtnetlink.c:3463 [inline]
      rtnl_fdb_add+0x1081/0x1270 net/core/rtnetlink.c:3558
      rtnetlink_rcv_msg+0xa0b/0x1530 net/core/rtnetlink.c:4715
      netlink_rcv_skb+0x36e/0x5f0 net/netlink/af_netlink.c:2454
      rtnetlink_rcv+0x50/0x60 net/core/rtnetlink.c:4733
      netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]
      netlink_unicast+0x1638/0x1720 net/netlink/af_netlink.c:1343
      netlink_sendmsg+0x1205/0x1290 net/netlink/af_netlink.c:1908
      sock_sendmsg_nosec net/socket.c:621 [inline]
      sock_sendmsg net/socket.c:631 [inline]
      ___sys_sendmsg+0xe70/0x1290 net/socket.c:2114
      __sys_sendmsg net/socket.c:2152 [inline]
      __do_sys_sendmsg net/socket.c:2161 [inline]
      __se_sys_sendmsg+0x2a3/0x3d0 net/socket.c:2159
      __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2159
      do_syscall_64+0xb8/0x100 arch/x86/entry/common.c:291
      entry_SYSCALL_64_after_hwframe+0x63/0xe7
    RIP: 0033:0x440ee9
    Code: e8 cc ab 02 00 48 83 c4 18 c3 0f 1f 80 00 00 00 00 48 89 f8 48 89 f7
    48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff
    ff 0f 83 bb 0a fc ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007fff6a93b518 EFLAGS: 00000213 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 0000000000440ee9
    RDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000003
    RBP: 0000000000000000 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 00000000004002c8 R11: 0000000000000213 R12: 000000000000b4b0
    R13: 0000000000401ec0 R14: 0000000000000000 R15: 0000000000000000
    
    Uninit was created at:
      kmsan_save_stack_with_flags mm/kmsan/kmsan.c:256 [inline]
      kmsan_internal_poison_shadow+0xb8/0x1b0 mm/kmsan/kmsan.c:181
      kmsan_kmalloc+0x98/0x100 mm/kmsan/kmsan_hooks.c:91
      kmsan_slab_alloc+0x10/0x20 mm/kmsan/kmsan_hooks.c:100
      slab_post_alloc_hook mm/slab.h:446 [inline]
      slab_alloc_node mm/slub.c:2718 [inline]
      __kmalloc_node_track_caller+0x9e7/0x1160 mm/slub.c:4351
      __kmalloc_reserve net/core/skbuff.c:138 [inline]
      __alloc_skb+0x2f5/0x9e0 net/core/skbuff.c:206
      alloc_skb include/linux/skbuff.h:996 [inline]
      netlink_alloc_large_skb net/netlink/af_netlink.c:1189 [inline]
      netlink_sendmsg+0xb49/0x1290 net/netlink/af_netlink.c:1883
      sock_sendmsg_nosec net/socket.c:621 [inline]
      sock_sendmsg net/socket.c:631 [inline]
      ___sys_sendmsg+0xe70/0x1290 net/socket.c:2114
      __sys_sendmsg net/socket.c:2152 [inline]
      __do_sys_sendmsg net/socket.c:2161 [inline]
      __se_sys_sendmsg+0x2a3/0x3d0 net/socket.c:2159
      __x64_sys_sendmsg+0x4a/0x70 net/socket.c:2159
      do_syscall_64+0xb8/0x100 arch/x86/entry/common.c:291
      entry_SYSCALL_64_after_hwframe+0x63/0xe7
    
    v2:
    * Make error message more specific (David)
    
    Fixes: 090096bf3db1 ("net: generic fdb support for drivers without ndo_fdb_<op>")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-and-tested-by: syzbot+3a288d5f5530b901310e@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+d53ab4e92a1db04110ff@syzkaller.appspotmail.com
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: David Ahern <dsahern@gmail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: Log error messages rather than using extack]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ffdf3b936cc2f35b1274fc41b077c58acfad44b9
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Oct 29 18:30:13 2018 -0700

    xtensa: add NOTES section to the linker script
    
    commit 4119ba211bc4f1bf638f41e50b7a0f329f58aa16 upstream.
    
    This section collects all source .note.* sections together in the
    vmlinux image. Without it .note.Linux section may be placed at address
    0, while the rest of the kernel is at its normal address, resulting in a
    huge vmlinux.bin image that may not be linked into the xtensa Image.elf.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 42ad29fe02120acf7d8d9c9e536e6d7b76f50fa1
Author: Richard Weinberger <richard@nod.at>
Date:   Fri Jun 15 16:42:56 2018 +0200

    um: Give start_idle_thread() a return code
    
    commit 7ff1e34bbdc15acab823b1ee4240e94623d50ee8 upstream.
    
    Fixes:
    arch/um/os-Linux/skas/process.c:613:1: warning: control reaches end of
    non-void function [-Wreturn-type]
    
    longjmp() never returns but gcc still warns that the end of the function
    can be reached.
    Add a return code and debug aid to detect this impossible case.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd8ee73b6ba2379fd6a179b73c1af6a420b97c9e
Author: Richard Weinberger <richard@nod.at>
Date:   Fri Jun 15 16:42:54 2018 +0200

    um: Drop own definition of PTRACE_SYSEMU/_SINGLESTEP
    
    commit 0676b957c24bfb6e495449ba7b7e72c5b5d79233 upstream.
    
    32bit UML used to define PTRACE_SYSEMU and PTRACE_SYSEMU_SINGLESTEP
    own its own because many years ago not all libcs had these request codes
    in their UAPI.
    These days PTRACE_SYSEMU/_SINGLESTEP is well known and part of glibc
    and our own define becomes problematic.
    
    With change c48831d0eebf ("linux/x86: sync sys/ptrace.h with Linux 4.14
    [BZ #22433]") glibc turned PTRACE_SYSEMU/_SINGLESTEP into a enum and
    UML failed to build.
    
    Let's drop our define and rely on the fact that every libc has
    PTRACE_SYSEMU/_SINGLESTEP.
    
    Cc: Ritesh Raj Sarraf <rrs@researchut.com>
    Reported-and-tested-by: Ritesh Raj Sarraf <rrs@researchut.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 75b4ee977fd28d2f28165a28a99599bf55211de5
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Fri Sep 28 20:41:48 2018 +0300

    lockd: fix access beyond unterminated strings in prints
    
    commit 93f38b6fae0ea8987e22d9e6c38f8dfdccd867ee upstream.
    
    printk format used %*s instead of %.*s, so hostname_len does not limit
    the number of bytes accessed from hostname.
    
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e49b812f93c8c3a15d56df350f82607d7eb8d20e
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Tue Oct 9 15:54:15 2018 -0400

    nfsd: Fix an Oops in free_session()
    
    commit bb6ad5572c0022e17e846b382d7413cdcf8055be upstream.
    
    In call_xpt_users(), we delete the entry from the list, but we
    do not reinitialise it. This triggers the list poisoning when
    we later call unregister_xpt_user() in nfsd4_del_conns().
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f1c3266abc0432afa89de5204638da2f977b69b
Author: Alex Stanoev <alex@astanoev.com>
Date:   Sun Oct 28 16:55:12 2018 +0000

    ALSA: ca0106: Disable IZD on SB0570 DAC to fix audio pops
    
    commit ac237c28d5ac1b241d58b1b7b4b9fa10efb22fb5 upstream.
    
    The Creative Audigy SE (SB0570) card currently exhibits an audible pop
    whenever playback is stopped or resumed, or during silent periods of an
    audio stream. Initialise the IZD bit to the 0 to eliminate these pops.
    
    The Infinite Zero Detection (IZD) feature on the DAC causes the output
    to be shunted to Vcap after 2048 samples of silence. This discharges the
    AC coupling capacitor through the output and causes the aforementioned
    pop/click noise.
    
    The behaviour of the IZD bit is described on page 15 of the WM8768GEDS
    datasheet: "With IZD=1, applying MUTE for 1024 consecutive input samples
    will cause all outputs to be connected directly to VCAP. This also
    happens if 2048 consecutive zero input samples are applied to all 6
    channels, and IZD=0. It will be removed as soon as any channel receives
    a non-zero input". I believe the second sentence might be referring to
    IZD=1 instead of IZD=0 given the observed behaviour of the card.
    
    This change should make the DAC initialisation consistent with
    Creative's Windows driver, as this popping persists when initialising
    the card in Linux and soft rebooting into Windows, but is not present on
    a cold boot to Windows.
    
    Signed-off-by: Alex Stanoev <alex@astanoev.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c695330c14ec7b41b7e7d053cd1d5c8b5c7e9235
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 26 15:51:06 2018 -0700

    net: sched: gred: pass the right attribute to gred_change_table_def()
    
    commit 38b4f18d56372e1e21771ab7b0357b853330186c upstream.
    
    gred_change_table_def() takes a pointer to TCA_GRED_DPS attribute,
    and expects it will be able to interpret its contents as
    struct tc_gred_sopt.  Pass the correct gred attribute, instead of
    TCA_OPTIONS.
    
    This bug meant the table definition could never be changed after
    Qdisc was initialized (unless whatever TCA_OPTIONS contained both
    passed netlink validation and was a valid struct tc_gred_sopt...).
    
    Old behaviour:
    $ ip link add type dummy
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    RTNETLINK answers: Invalid argument
    
    Now:
    $ ip link add type dummy
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    $ tc qdisc replace dev dummy0 parent root handle 7: \
         gred setup vqs 4 default 0
    
    Fixes: f62d6b936df5 ("[PKT_SCHED]: GRED: Use central VQ change procedure")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d8cef559e87a0cfd183a0d69aa9677f1a3bbb1d
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Oct 26 15:10:58 2018 -0700

    hugetlbfs: dirty pages as they are added to pagecache
    
    commit 22146c3ce98962436e401f7b7016a6f664c9ffb5 upstream.
    
    Some test systems were experiencing negative huge page reserve counts and
    incorrect file block counts.  This was traced to /proc/sys/vm/drop_caches
    removing clean pages from hugetlbfs file pagecaches.  When non-hugetlbfs
    explicit code removes the pages, the appropriate accounting is not
    performed.
    
    This can be recreated as follows:
     fallocate -l 2M /dev/hugepages/foo
     echo 1 > /proc/sys/vm/drop_caches
     fallocate -l 2M /dev/hugepages/foo
     grep -i huge /proc/meminfo
       AnonHugePages:         0 kB
       ShmemHugePages:        0 kB
       HugePages_Total:    2048
       HugePages_Free:     2047
       HugePages_Rsvd:    18446744073709551615
       HugePages_Surp:        0
       Hugepagesize:       2048 kB
       Hugetlb:         4194304 kB
     ls -lsh /dev/hugepages/foo
       4.0M -rw-r--r--. 1 root root 2.0M Oct 17 20:05 /dev/hugepages/foo
    
    To address this issue, dirty pages as they are added to pagecache.  This
    can easily be reproduced with fallocate as shown above.  Read faulted
    pages will eventually end up being marked dirty.  But there is a window
    where they are clean and could be impacted by code such as drop_caches.
    So, just dirty them all as they are added to the pagecache.
    
    Link: http://lkml.kernel.org/r/b5be45b8-5afe-56cd-9482-28384699a049@oracle.com
    Fixes: 6bda666a03f0 ("hugepages: fold find_or_alloc_pages into huge_no_page()")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Acked-by: Mihcla Hocko <mhocko@suse.com>
    Reviewed-by: Khalid Aziz <khalid.aziz@oracle.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.16: adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a716e82ca67de17ebcef47cabdb266b1ffdf6254
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Wed Oct 24 14:37:21 2018 +0200

    ipv6/ndisc: Preserve IPv6 control buffer if protocol error handlers are called
    
    commit ee1abcf689353f36d9322231b4320926096bdee0 upstream.
    
    Commit a61bbcf28a8c ("[NET]: Store skb->timestamp as offset to a base
    timestamp") introduces a neighbour control buffer and zeroes it out in
    ndisc_rcv(), as ndisc_recv_ns() uses it.
    
    Commit f2776ff04722 ("[IPV6]: Fix address/interface handling in UDP and
    DCCP, according to the scoping architecture.") introduces the usage of the
    IPv6 control buffer in protocol error handlers (e.g. inet6_iif() in
    present-day __udp6_lib_err()).
    
    Now, with commit b94f1c0904da ("ipv6: Use icmpv6_notify() to propagate
    redirect, instead of rt6_redirect()."), we call protocol error handlers
    from ndisc_redirect_rcv(), after the control buffer is already stolen and
    some parts are already zeroed out. This implies that inet6_iif() on this
    path will always return zero.
    
    This gives unexpected results on UDP socket lookup in __udp6_lib_err(), as
    we might actually need to match sockets for a given interface.
    
    Instead of always claiming the control buffer in ndisc_rcv(), do that only
    when needed.
    
    Fixes: b94f1c0904da ("ipv6: Use icmpv6_notify() to propagate redirect, instead of rt6_redirect().")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Reviewed-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1a64527cd1569aca6e1525a994aee062395f9637
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Oct 19 17:01:33 2018 -0300

    HID: hiddev: fix potential Spectre v1
    
    commit f11274396a538b31bc010f782e05c2ce3f804c13 upstream.
    
    uref->usage_index can be indirectly controlled by userspace, hence leading
    to a potential exploitation of the Spectre variant 1 vulnerability.
    
    This field is used as an array index by the hiddev_ioctl_usage() function,
    when 'cmd' is either HIDIOCGCOLLECTIONINDEX, HIDIOCGUSAGES or
    HIDIOCSUSAGES.
    
    For cmd == HIDIOCGCOLLECTIONINDEX case, uref->usage_index is compared to
    field->maxusage and then used as an index to dereference field->usage
    array. The same thing happens to the cmd == HIDIOC{G,S}USAGES cases, where
    uref->usage_index is checked against an array maximum value and then it is
    used as an index in an array.
    
    This is a summary of the HIDIOCGCOLLECTIONINDEX case, which matches the
    traditional Spectre V1 first load:
    
            copy_from_user(uref, user_arg, sizeof(*uref))
            if (uref->usage_index >= field->maxusage)
                    goto inval;
            i = field->usage[uref->usage_index].collection_index;
            return i;
    
    This patch fixes this by sanitizing field uref->usage_index before using it
    to index field->usage (HIDIOCGCOLLECTIONINDEX) or field->value in
    HIDIOC{G,S}USAGES arrays, thus, avoiding speculation in the first load.
    
    Signed-off-by: Breno Leitao <leitao@debian.org>
    --
    
    v2: Contemplate cmd == HIDIOC{G,S}USAGES case
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1fd89fe59bdae2f82d2353162e0e7e714bbfb75b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Oct 12 09:20:16 2018 +0200

    thermal: rcar_thermal: Prevent doing work after unbind
    
    commit 697ee786f15d7b65c7f3045d45fe3a05d28e0911 upstream.
    
    When testing bind/unbind on r8a7791/koelsch:
    
        WARNING: CPU: 1 PID: 697 at lib/debugobjects.c:329 debug_print_object+0x8c/0xb4
        ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x10
    
    This happens if the workqueue runs after the device has been unbound.
    Fix this by cancelling any queued work during remove.
    
    Fixes: e0a5172e9eec7f0d ("thermal: rcar: add interrupt support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 04a6a3eb99f5b3326cd58f4ecf65b752b375385f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Feb 23 16:37:25 2015 +0100

    thermal: rcar: Make error and remove paths symmetrical with init
    
    commit ac71c7025ebc1ed25114b1be77dc60b7f8cb8544 upstream.
    
    Swap interrupt disable and thermal zone unregistration in the error and
    remove paths, to make them more symmetrical with the initialization
    path.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3456c036fcbb84f3e57f10f6ec78ceb72adaa21d
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Oct 12 09:20:15 2018 +0200

    thermal: rcar_thermal: Prevent hardware access during system suspend
    
    commit 3a31386217628ffe2491695be2db933c25dde785 upstream.
    
    On r8a7791/koelsch, sometimes the following message is printed during
    system suspend:
    
        rcar_thermal e61f0000.thermal: thermal sensor was broken
    
    This happens if the workqueue runs while the device is already
    suspended.  Fix this by using the freezable system workqueue instead,
    cfr. commit 51e20d0e3a60cf46 ("thermal: Prevent polling from happening
    during system suspend").
    
    Fixes: e0a5172e9eec7f0d ("thermal: rcar: add interrupt support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0a7d24888b5f9d3172e919554a5b03bcc8b1952f
Author: Steve French <stfrench@microsoft.com>
Date:   Fri Oct 19 00:45:21 2018 -0500

    smb3: do not attempt cifs operation in smb3 query info error path
    
    commit 1e77a8c204c9d1b655c61751b8ad0fde22421dbb upstream.
    
    If backupuid mount option is sent, we can incorrectly retry
    (on access denied on query info) with a cifs (FindFirst) operation
    on an smb3 mount which causes the server to force the session close.
    
    We set backup intent on open so no need for this fallback.
    
    See kernel bugzilla 201435
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 123ddb7bfb801e969127eac531ff63902e376601
Author: Steve French <stfrench@microsoft.com>
Date:   Sat Sep 15 23:04:41 2018 -0500

    smb3: allow stats which track session and share reconnects to be reset
    
    commit 2c887635cd6ab3af619dc2be94e5bf8f2e172b78 upstream.
    
    Currently, "echo 0 > /proc/fs/cifs/Stats" resets all of the stats
    except the session and share reconnect counts.  Fix it to
    reset those as well.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4d06efc1bc33762ae82b54f37bc7ce2c654ea700
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:50 2018 +0200

    net: bcmgenet: fix OF child-node lookup
    
    commit d397dbe606120a1ea1b11b0020c3f7a3852da5ac upstream.
    
    Use the new of_get_compatible_child() helper to lookup the mdio child
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the node of the device being probed).
    
    Fixes: aa09677cba42 ("net: bcmgenet: add MDIO routines")
    Cc: David S. Miller <davem@davemloft.net>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6c4c6f8946efaafb2f3840c045eccfdfdff1a0fa
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:45 2018 +0200

    of: add helper to lookup compatible child node
    
    commit 36156f9241cb0f9e37d998052873ca7501ad4b36 upstream.
    
    Add of_get_compatible_child() helper that can be used to lookup
    compatible child nodes.
    
    Several drivers currently use of_find_compatible_node() to lookup child
    nodes while failing to notice that the of_find_ functions search the
    entire tree depth-first (from a given start node) and therefore can
    match unrelated nodes. The fact that these functions also drop a
    reference to the node they start searching from (e.g. the parent node)
    is typically also overlooked, something which can lead to use-after-free
    bugs.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 400a7bc7c9218305737ca4d411a8cdc339d94f15
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 22 09:24:27 2018 -0700

    llc: do not use sk_eat_skb()
    
    commit 604d415e2bd642b7e02c80e719e0396b9d4a77a6 upstream.
    
    syzkaller triggered a use-after-free [1], caused by a combination of
    skb_get() in llc_conn_state_process() and usage of sk_eat_skb()
    
    sk_eat_skb() is assuming the skb about to be freed is only used by
    the current thread. TCP/DCCP stacks enforce this because current
    thread holds the socket lock.
    
    llc_conn_state_process() wants to make sure skb does not disappear,
    and holds a reference on the skb it manipulates. But as soon as this
    skb is added to socket receive queue, another thread can consume it.
    
    This means that llc must use regular skb_unlink() and kfree_skb()
    so that both producer and consumer can safely work on the same skb.
    
    [1]
    BUG: KASAN: use-after-free in atomic_read include/asm-generic/atomic-instrumented.h:21 [inline]
    BUG: KASAN: use-after-free in refcount_read include/linux/refcount.h:43 [inline]
    BUG: KASAN: use-after-free in skb_unref include/linux/skbuff.h:967 [inline]
    BUG: KASAN: use-after-free in kfree_skb+0xb7/0x580 net/core/skbuff.c:655
    Read of size 4 at addr ffff8801d1f6fba4 by task ksoftirqd/1/18
    
    CPU: 1 PID: 18 Comm: ksoftirqd/1 Not tainted 4.19.0-rc8+ #295
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c4/0x2b6 lib/dump_stack.c:113
     print_address_description.cold.8+0x9/0x1ff mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.9+0x242/0x309 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     kasan_check_read+0x11/0x20 mm/kasan/kasan.c:272
     atomic_read include/asm-generic/atomic-instrumented.h:21 [inline]
     refcount_read include/linux/refcount.h:43 [inline]
     skb_unref include/linux/skbuff.h:967 [inline]
     kfree_skb+0xb7/0x580 net/core/skbuff.c:655
     llc_sap_state_process+0x9b/0x550 net/llc/llc_sap.c:224
     llc_sap_rcv+0x156/0x1f0 net/llc/llc_sap.c:297
     llc_sap_handler+0x65e/0xf80 net/llc/llc_sap.c:438
     llc_rcv+0x79e/0xe20 net/llc/llc_input.c:208
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     process_backlog+0x218/0x6f0 net/core/dev.c:5829
     napi_poll net/core/dev.c:6249 [inline]
     net_rx_action+0x7c5/0x1950 net/core/dev.c:6315
     __do_softirq+0x30c/0xb03 kernel/softirq.c:292
     run_ksoftirqd+0x94/0x100 kernel/softirq.c:653
     smpboot_thread_fn+0x68b/0xa00 kernel/smpboot.c:164
     kthread+0x35a/0x420 kernel/kthread.c:246
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:413
    
    Allocated by task 18:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc7/0xe0 mm/kasan/kasan.c:553
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:490
     kmem_cache_alloc_node+0x144/0x730 mm/slab.c:3644
     __alloc_skb+0x119/0x770 net/core/skbuff.c:193
     alloc_skb include/linux/skbuff.h:995 [inline]
     llc_alloc_frame+0xbc/0x370 net/llc/llc_sap.c:54
     llc_station_ac_send_xid_r net/llc/llc_station.c:52 [inline]
     llc_station_rcv+0x1dc/0x1420 net/llc/llc_station.c:111
     llc_rcv+0xc32/0xe20 net/llc/llc_input.c:220
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     process_backlog+0x218/0x6f0 net/core/dev.c:5829
     napi_poll net/core/dev.c:6249 [inline]
     net_rx_action+0x7c5/0x1950 net/core/dev.c:6315
     __do_softirq+0x30c/0xb03 kernel/softirq.c:292
    
    Freed by task 16383:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x102/0x150 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kmem_cache_free+0x83/0x290 mm/slab.c:3756
     kfree_skbmem+0x154/0x230 net/core/skbuff.c:582
     __kfree_skb+0x1d/0x20 net/core/skbuff.c:642
     sk_eat_skb include/net/sock.h:2366 [inline]
     llc_ui_recvmsg+0xec2/0x1610 net/llc/af_llc.c:882
     sock_recvmsg_nosec net/socket.c:794 [inline]
     sock_recvmsg+0xd0/0x110 net/socket.c:801
     ___sys_recvmsg+0x2b6/0x680 net/socket.c:2278
     __sys_recvmmsg+0x303/0xb90 net/socket.c:2390
     do_sys_recvmmsg+0x181/0x1a0 net/socket.c:2466
     __do_sys_recvmmsg net/socket.c:2484 [inline]
     __se_sys_recvmmsg net/socket.c:2480 [inline]
     __x64_sys_recvmmsg+0xbe/0x150 net/socket.c:2480
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The buggy address belongs to the object at ffff8801d1f6fac0
     which belongs to the cache skbuff_head_cache of size 232
    The buggy address is located 228 bytes inside of
     232-byte region [ffff8801d1f6fac0, ffff8801d1f6fba8)
    The buggy address belongs to the page:
    page:ffffea000747dbc0 count:1 mapcount:0 mapping:ffff8801d9be7680 index:0xffff8801d1f6fe80
    flags: 0x2fffc0000000100(slab)
    raw: 02fffc0000000100 ffffea0007346e88 ffffea000705b108 ffff8801d9be7680
    raw: ffff8801d1f6fe80 ffff8801d1f6f0c0 000000010000000b 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8801d1f6fa80: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
     ffff8801d1f6fb00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff8801d1f6fb80: fb fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc
                                   ^
     ffff8801d1f6fc00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff8801d1f6fc80: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.16:
     - sk_eat_skb() takes a third parameter here
     - Adjust indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 402dd6ed461ee7a37b2f57330cd9e626e34357c5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 19 23:11:11 2018 +0300

    qlcnic: fix a return in qlcnic_dcb_get_capability()
    
    commit c94f026fb742b2d3199422751dbc4f6fc0e753d8 upstream.
    
    These functions are supposed to return one on failure and zero on
    success.  Returning a zero here could cause uninitialized variable
    bugs in several of the callers.  For example:
    
        drivers/scsi/cxgbi/cxgb4i/cxgb4i.c:1660 get_iscsi_dcb_priority()
        error: uninitialized symbol 'caps'.
    
    Fixes: 48365e485275 ("qlcnic: dcb: Add support for CEE Netlink interface.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 85de5f0f0f3eb4901dccb593023f9d3b9a56277b
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Oct 22 10:43:06 2018 +0100

    Btrfs: fix use-after-free when dumping free space
    
    commit 9084cb6a24bf5838a665af92ded1af8363f9e563 upstream.
    
    We were iterating a block group's free space cache rbtree without locking
    first the lock that protects it (the free_space_ctl->free_space_offset
    rbtree is protected by the free_space_ctl->tree_lock spinlock).
    
    KASAN reported an use-after-free problem when iterating such a rbtree due
    to a concurrent rbtree delete:
    
    [ 9520.359168] ==================================================================
    [ 9520.359656] BUG: KASAN: use-after-free in rb_next+0x13/0x90
    [ 9520.359949] Read of size 8 at addr ffff8800b7ada500 by task btrfs-transacti/1721
    [ 9520.360357]
    [ 9520.360530] CPU: 4 PID: 1721 Comm: btrfs-transacti Tainted: G             L    4.19.0-rc8-nbor #555
    [ 9520.360990] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    [ 9520.362682] Call Trace:
    [ 9520.362887]  dump_stack+0xa4/0xf5
    [ 9520.363146]  print_address_description+0x78/0x280
    [ 9520.363412]  kasan_report+0x263/0x390
    [ 9520.363650]  ? rb_next+0x13/0x90
    [ 9520.363873]  __asan_load8+0x54/0x90
    [ 9520.364102]  rb_next+0x13/0x90
    [ 9520.364380]  btrfs_dump_free_space+0x146/0x160 [btrfs]
    [ 9520.364697]  dump_space_info+0x2cd/0x310 [btrfs]
    [ 9520.364997]  btrfs_reserve_extent+0x1ee/0x1f0 [btrfs]
    [ 9520.365310]  __btrfs_prealloc_file_range+0x1cc/0x620 [btrfs]
    [ 9520.365646]  ? btrfs_update_time+0x180/0x180 [btrfs]
    [ 9520.365923]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.366204]  ? btrfs_alloc_data_chunk_ondemand+0x2c0/0x5c0 [btrfs]
    [ 9520.366549]  btrfs_prealloc_file_range_trans+0x23/0x30 [btrfs]
    [ 9520.366880]  cache_save_setup+0x42e/0x580 [btrfs]
    [ 9520.367220]  ? btrfs_check_data_free_space+0xd0/0xd0 [btrfs]
    [ 9520.367518]  ? lock_downgrade+0x2f0/0x2f0
    [ 9520.367799]  ? btrfs_write_dirty_block_groups+0x11f/0x6e0 [btrfs]
    [ 9520.368104]  ? kasan_check_read+0x11/0x20
    [ 9520.368349]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.368638]  btrfs_write_dirty_block_groups+0x2af/0x6e0 [btrfs]
    [ 9520.368978]  ? btrfs_start_dirty_block_groups+0x870/0x870 [btrfs]
    [ 9520.369282]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.369534]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.369811]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.370137]  commit_cowonly_roots+0x4b9/0x610 [btrfs]
    [ 9520.370560]  ? commit_fs_roots+0x350/0x350 [btrfs]
    [ 9520.370926]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.371285]  btrfs_commit_transaction+0x5e5/0x10e0 [btrfs]
    [ 9520.371612]  ? btrfs_apply_pending_changes+0x90/0x90 [btrfs]
    [ 9520.371943]  ? start_transaction+0x168/0x6c0 [btrfs]
    [ 9520.372257]  transaction_kthread+0x21c/0x240 [btrfs]
    [ 9520.372537]  kthread+0x1d2/0x1f0
    [ 9520.372793]  ? btrfs_cleanup_transaction+0xb50/0xb50 [btrfs]
    [ 9520.373090]  ? kthread_park+0xb0/0xb0
    [ 9520.373329]  ret_from_fork+0x3a/0x50
    [ 9520.373567]
    [ 9520.373738] Allocated by task 1804:
    [ 9520.373974]  kasan_kmalloc+0xff/0x180
    [ 9520.374208]  kasan_slab_alloc+0x11/0x20
    [ 9520.374447]  kmem_cache_alloc+0xfc/0x2d0
    [ 9520.374731]  __btrfs_add_free_space+0x40/0x580 [btrfs]
    [ 9520.375044]  unpin_extent_range+0x4f7/0x7a0 [btrfs]
    [ 9520.375383]  btrfs_finish_extent_commit+0x15f/0x4d0 [btrfs]
    [ 9520.375707]  btrfs_commit_transaction+0xb06/0x10e0 [btrfs]
    [ 9520.376027]  btrfs_alloc_data_chunk_ondemand+0x237/0x5c0 [btrfs]
    [ 9520.376365]  btrfs_check_data_free_space+0x81/0xd0 [btrfs]
    [ 9520.376689]  btrfs_delalloc_reserve_space+0x25/0x80 [btrfs]
    [ 9520.377018]  btrfs_direct_IO+0x42e/0x6d0 [btrfs]
    [ 9520.377284]  generic_file_direct_write+0x11e/0x220
    [ 9520.377587]  btrfs_file_write_iter+0x472/0xac0 [btrfs]
    [ 9520.377875]  aio_write+0x25c/0x360
    [ 9520.378106]  io_submit_one+0xaa0/0xdc0
    [ 9520.378343]  __se_sys_io_submit+0xfa/0x2f0
    [ 9520.378589]  __x64_sys_io_submit+0x43/0x50
    [ 9520.378840]  do_syscall_64+0x7d/0x240
    [ 9520.379081]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    [ 9520.379387]
    [ 9520.379557] Freed by task 1802:
    [ 9520.379782]  __kasan_slab_free+0x173/0x260
    [ 9520.380028]  kasan_slab_free+0xe/0x10
    [ 9520.380262]  kmem_cache_free+0xc1/0x2c0
    [ 9520.380544]  btrfs_find_space_for_alloc+0x4cd/0x4e0 [btrfs]
    [ 9520.380866]  find_free_extent+0xa99/0x17e0 [btrfs]
    [ 9520.381166]  btrfs_reserve_extent+0xd5/0x1f0 [btrfs]
    [ 9520.381474]  btrfs_get_blocks_direct+0x60b/0xbd0 [btrfs]
    [ 9520.381761]  __blockdev_direct_IO+0x10ee/0x58a1
    [ 9520.382059]  btrfs_direct_IO+0x25a/0x6d0 [btrfs]
    [ 9520.382321]  generic_file_direct_write+0x11e/0x220
    [ 9520.382623]  btrfs_file_write_iter+0x472/0xac0 [btrfs]
    [ 9520.382904]  aio_write+0x25c/0x360
    [ 9520.383172]  io_submit_one+0xaa0/0xdc0
    [ 9520.383416]  __se_sys_io_submit+0xfa/0x2f0
    [ 9520.383678]  __x64_sys_io_submit+0x43/0x50
    [ 9520.383927]  do_syscall_64+0x7d/0x240
    [ 9520.384165]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    [ 9520.384439]
    [ 9520.384610] The buggy address belongs to the object at ffff8800b7ada500
                    which belongs to the cache btrfs_free_space of size 72
    [ 9520.385175] The buggy address is located 0 bytes inside of
                    72-byte region [ffff8800b7ada500, ffff8800b7ada548)
    [ 9520.385691] The buggy address belongs to the page:
    [ 9520.385957] page:ffffea0002deb680 count:1 mapcount:0 mapping:ffff880108a1d700 index:0x0 compound_mapcount: 0
    [ 9520.388030] flags: 0x8100(slab|head)
    [ 9520.388281] raw: 0000000000008100 ffffea0002deb608 ffffea0002728808 ffff880108a1d700
    [ 9520.388722] raw: 0000000000000000 0000000000130013 00000001ffffffff 0000000000000000
    [ 9520.389169] page dumped because: kasan: bad access detected
    [ 9520.389473]
    [ 9520.389658] Memory state around the buggy address:
    [ 9520.389943]  ffff8800b7ada400: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.390368]  ffff8800b7ada480: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.390796] >ffff8800b7ada500: fb fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc
    [ 9520.391223]                    ^
    [ 9520.391461]  ffff8800b7ada580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.391885]  ffff8800b7ada600: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.392313] ==================================================================
    [ 9520.392772] BTRFS critical (device vdc): entry offset 2258497536, bytes 131072, bitmap no
    [ 9520.393247] BUG: unable to handle kernel NULL pointer dereference at 0000000000000011
    [ 9520.393705] PGD 800000010dbab067 P4D 800000010dbab067 PUD 107551067 PMD 0
    [ 9520.394059] Oops: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI
    [ 9520.394378] CPU: 4 PID: 1721 Comm: btrfs-transacti Tainted: G    B        L    4.19.0-rc8-nbor #555
    [ 9520.394858] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    [ 9520.395350] RIP: 0010:rb_next+0x3c/0x90
    [ 9520.396461] RSP: 0018:ffff8801074ff780 EFLAGS: 00010292
    [ 9520.396762] RAX: 0000000000000000 RBX: 0000000000000001 RCX: ffffffff81b5ac4c
    [ 9520.397115] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 0000000000000011
    [ 9520.397468] RBP: ffff8801074ff7a0 R08: ffffed0021d64ccc R09: ffffed0021d64ccc
    [ 9520.397821] R10: 0000000000000001 R11: ffffed0021d64ccb R12: ffff8800b91e0000
    [ 9520.398188] R13: ffff8800a3ceba48 R14: ffff8800b627bf80 R15: 0000000000020000
    [ 9520.398555] FS:  0000000000000000(0000) GS:ffff88010eb00000(0000) knlGS:0000000000000000
    [ 9520.399007] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 9520.399335] CR2: 0000000000000011 CR3: 0000000106b52000 CR4: 00000000000006a0
    [ 9520.399679] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 9520.400023] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 9520.400400] Call Trace:
    [ 9520.400648]  btrfs_dump_free_space+0x146/0x160 [btrfs]
    [ 9520.400974]  dump_space_info+0x2cd/0x310 [btrfs]
    [ 9520.401287]  btrfs_reserve_extent+0x1ee/0x1f0 [btrfs]
    [ 9520.401609]  __btrfs_prealloc_file_range+0x1cc/0x620 [btrfs]
    [ 9520.401952]  ? btrfs_update_time+0x180/0x180 [btrfs]
    [ 9520.402232]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.402522]  ? btrfs_alloc_data_chunk_ondemand+0x2c0/0x5c0 [btrfs]
    [ 9520.402882]  btrfs_prealloc_file_range_trans+0x23/0x30 [btrfs]
    [ 9520.403261]  cache_save_setup+0x42e/0x580 [btrfs]
    [ 9520.403570]  ? btrfs_check_data_free_space+0xd0/0xd0 [btrfs]
    [ 9520.403871]  ? lock_downgrade+0x2f0/0x2f0
    [ 9520.404161]  ? btrfs_write_dirty_block_groups+0x11f/0x6e0 [btrfs]
    [ 9520.404481]  ? kasan_check_read+0x11/0x20
    [ 9520.404732]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.405026]  btrfs_write_dirty_block_groups+0x2af/0x6e0 [btrfs]
    [ 9520.405375]  ? btrfs_start_dirty_block_groups+0x870/0x870 [btrfs]
    [ 9520.405694]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.405958]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.406243]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.406574]  commit_cowonly_roots+0x4b9/0x610 [btrfs]
    [ 9520.406899]  ? commit_fs_roots+0x350/0x350 [btrfs]
    [ 9520.407253]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.407589]  btrfs_commit_transaction+0x5e5/0x10e0 [btrfs]
    [ 9520.407925]  ? btrfs_apply_pending_changes+0x90/0x90 [btrfs]
    [ 9520.408262]  ? start_transaction+0x168/0x6c0 [btrfs]
    [ 9520.408582]  transaction_kthread+0x21c/0x240 [btrfs]
    [ 9520.408870]  kthread+0x1d2/0x1f0
    [ 9520.409138]  ? btrfs_cleanup_transaction+0xb50/0xb50 [btrfs]
    [ 9520.409440]  ? kthread_park+0xb0/0xb0
    [ 9520.409682]  ret_from_fork+0x3a/0x50
    [ 9520.410508] Dumping ftrace buffer:
    [ 9520.410764]    (ftrace buffer empty)
    [ 9520.411007] CR2: 0000000000000011
    [ 9520.411297] ---[ end trace 01a0863445cf360a ]---
    [ 9520.411568] RIP: 0010:rb_next+0x3c/0x90
    [ 9520.412644] RSP: 0018:ffff8801074ff780 EFLAGS: 00010292
    [ 9520.412932] RAX: 0000000000000000 RBX: 0000000000000001 RCX: ffffffff81b5ac4c
    [ 9520.413274] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 0000000000000011
    [ 9520.413616] RBP: ffff8801074ff7a0 R08: ffffed0021d64ccc R09: ffffed0021d64ccc
    [ 9520.414007] R10: 0000000000000001 R11: ffffed0021d64ccb R12: ffff8800b91e0000
    [ 9520.414349] R13: ffff8800a3ceba48 R14: ffff8800b627bf80 R15: 0000000000020000
    [ 9520.416074] FS:  0000000000000000(0000) GS:ffff88010eb00000(0000) knlGS:0000000000000000
    [ 9520.416536] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 9520.416848] CR2: 0000000000000011 CR3: 0000000106b52000 CR4: 00000000000006a0
    [ 9520.418477] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 9520.418846] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 9520.419204] Kernel panic - not syncing: Fatal exception
    [ 9520.419666] Dumping ftrace buffer:
    [ 9520.419930]    (ftrace buffer empty)
    [ 9520.420168] Kernel Offset: disabled
    [ 9520.420406] ---[ end Kernel panic - not syncing: Fatal exception ]---
    
    Fix this by acquiring the respective lock before iterating the rbtree.
    
    Reported-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e61a138fba5329fadb8e006a67ec0b90c1611178
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Wed Sep 26 18:03:16 2018 +0200

    libceph: bump CEPH_MSG_MAX_DATA_LEN
    
    commit 94e6992bb560be8bffb47f287194adf070b57695 upstream.
    
    If the read is large enough, we end up spinning in the messenger:
    
      libceph: osd0 192.168.122.1:6801 io error
      libceph: osd0 192.168.122.1:6801 io error
      libceph: osd0 192.168.122.1:6801 io error
    
    This is a receive side limit, so only reads were affected.
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cba323bcfd14c89e12e1995156759baab0c64a75
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Oct 18 15:15:05 2018 +0200

    genirq: Fix race on spurious interrupt detection
    
    commit 746a923b863a1065ef77324e1e43f19b1a3eab5c upstream.
    
    Commit 1e77d0a1ed74 ("genirq: Sanitize spurious interrupt detection of
    threaded irqs") made detection of spurious interrupts work for threaded
    handlers by:
    
    a) incrementing a counter every time the thread returns IRQ_HANDLED, and
    b) checking whether that counter has increased every time the thread is
       woken.
    
    However for oneshot interrupts, the commit unmasks the interrupt before
    incrementing the counter.  If another interrupt occurs right after
    unmasking but before the counter is incremented, that interrupt is
    incorrectly considered spurious:
    
    time
     |  irq_thread()
     |    irq_thread_fn()
     |      action->thread_fn()
     |      irq_finalize_oneshot()
     |        unmask_threaded_irq()            /* interrupt is unmasked */
     |
     |                  /* interrupt fires, incorrectly deemed spurious */
     |
     |    atomic_inc(&desc->threads_handled); /* counter is incremented */
     v
    
    This is observed with a hi3110 CAN controller receiving data at high volume
    (from a separate machine sending with "cangen -g 0 -i -x"): The controller
    signals a huge number of interrupts (hundreds of millions per day) and
    every second there are about a dozen which are deemed spurious.
    
    In theory with high CPU load and the presence of higher priority tasks, the
    number of incorrectly detected spurious interrupts might increase beyond
    the 99,900 threshold and cause disablement of the interrupt.
    
    In practice it just increments the spurious interrupt count. But that can
    cause people to waste time investigating it over and over.
    
    Fix it by moving the accounting before the invocation of
    irq_finalize_oneshot().
    
    [ tglx: Folded change log update ]
    
    Fixes: 1e77d0a1ed74 ("genirq: Sanitize spurious interrupt detection of threaded irqs")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Mathias Duckeck <m.duckeck@kunbus.de>
    Cc: Akshay Bhat <akshay.bhat@timesys.com>
    Cc: Casey Fitzpatrick <casey.fitzpatrick@timesys.com>
    Link: https://lkml.kernel.org/r/1dfd8bbd16163940648045495e3e9698e63b50ad.1539867047.git.lukas@wunner.de
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 71bae8e9a9de128f5fe3fed5ff5351fb2108c856
Author: Joe Jin <joe.jin@oracle.com>
Date:   Tue Oct 16 15:21:16 2018 -0700

    xen-swiotlb: use actually allocated size on check physical continuous
    
    commit 7250f422da0480d8512b756640f131b9b893ccda upstream.
    
    xen_swiotlb_{alloc,free}_coherent() allocate/free memory based on the
    order of the pages and not size argument (bytes). This is inconsistent with
    range_straddles_page_boundary and memset which use the 'size' value,
    which may lead to not exchanging memory with Xen (range_straddles_page_boundary()
    returned true). And then the call to xen_swiotlb_free_coherent() would
    actually try to exchange the memory with Xen, leading to the kernel
    hitting an BUG (as the hypercall returned an error).
    
    This patch fixes it by making the 'size' variable be of the same size
    as the amount of memory allocated.
    
    Signed-off-by: Joe Jin <joe.jin@oracle.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Christoph Helwig <hch@lst.de>
    Cc: Dongli Zhang <dongli.zhang@oracle.com>
    Cc: John Sobecki <john.sobecki@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    [bwh: Backported to 3.16:
     - Use PAGE_SHIFT instead of XEN_PAGE_SHIFT
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 52d094ad37dc52294ed1afb29513d7c46bac6abc
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Thu Oct 18 12:13:40 2018 -0700

    clk: s2mps11: Add used attribute to s2mps11_dt_match
    
    commit 9c940bbe2bb47e03ca5e937d30b6a50bf9c0e671 upstream.
    
    Clang warns after commit 8985167ecf57 ("clk: s2mps11: Fix matching when
    built as module and DT node contains compatible"):
    
    drivers/clk/clk-s2mps11.c:242:34: warning: variable 's2mps11_dt_match'
    is not needed and will not be emitted [-Wunneeded-internal-declaration]
    static const struct of_device_id s2mps11_dt_match[] = {
                                     ^
    1 warning generated.
    
    This warning happens when a variable is used in some construct that
    doesn't require a reference to that variable to be emitted in the symbol
    table; in this case, it's MODULE_DEVICE_TABLE, which only needs to hold
    the data of the variable, not the variable itself.
    
    $ nm -S drivers/clk/clk-s2mps11.o | rg s2mps11_dt_match
    00000078 000003d4 R __mod_of__s2mps11_dt_match_device_table
    
    Normally, with device ID table variables, it means that the variable
    just needs to be tied to the device declaration at the bottom of the
    file, like s2mps11_clk_id:
    
    $ nm -S drivers/clk/clk-s2mps11.o | rg s2mps11_clk_id
    00000000 00000078 R __mod_platform__s2mps11_clk_id_device_table
    00000000 00000078 r s2mps11_clk_id
    
    However, because the comment above this deliberately doesn't want this
    variable added to .of_match_table, we need to mark s2mps11_dt_match as
    __used to silence this warning. This makes it clear to Clang that the
    variable is used for something, even if a reference to it isn't being
    emitted.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Fixes: 8985167ecf57 ("clk: s2mps11: Fix matching when built as module and DT node contains compatible")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6be632e793cad65a603692d1e4fc59e619478cdc
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Wed Oct 3 11:43:59 2018 -0500

    dm ioctl: harden copy_params()'s copy_from_user() from malicious users
    
    commit 800a7340ab7dd667edf95e74d8e4f23a17e87076 upstream.
    
    In copy_params(), the struct 'dm_ioctl' is first copied from the user
    space buffer 'user' to 'param_kernel' and the field 'data_size' is
    checked against 'minimum_data_size' (size of 'struct dm_ioctl' payload
    up to its 'data' member).  If the check fails, an error code EINVAL will be
    returned.  Otherwise, param_kernel->data_size is used to do a second copy,
    which copies from the same user-space buffer to 'dmi'.  After the second
    copy, only 'dmi->data_size' is checked against 'param_kernel->data_size'.
    Given that the buffer 'user' resides in the user space, a malicious
    user-space process can race to change the content in the buffer between
    the two copies.  This way, the attacker can inject inconsistent data
    into 'dmi' (versus previously validated 'param_kernel').
    
    Fix redundant copying of 'minimum_data_size' from user-space buffer by
    using the first copy stored in 'param_kernel'.  Also remove the
    'data_size' check after the second copy because it is now unnecessary.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 462eb41b96186af140f1117994ea6c21cedd6fd8
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Wed Oct 17 14:09:35 2018 -0700

    ACPICA: AML interpreter: add region addresses in global list during initialization
    
    commit 4abb951b73ff0a8a979113ef185651aa3c8da19b upstream.
    
    The table load process omitted adding the operation region address
    range to the global list. This omission is problematic because the OS
    queries the global list to check for address range conflicts before
    deciding which drivers to load. This commit may result in warning
    messages that look like the following:
    
    [    7.871761] ACPI Warning: system_IO range 0x00000428-0x0000042F conflicts with op_region 0x00000400-0x0000047F (\PMIO) (20180531/utaddress-213)
    [    7.871769] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
    
    However, these messages do not signify regressions. It is a result of
    properly adding address ranges within the global address list.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200011
    Tested-by: Jean-Marc Lenoir <archlinux@jihemel.com>
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd608131a916d077e6abd3bab7b63f600bafd707
Author: Carlos Maiolino <cmaiolino@redhat.com>
Date:   Thu Oct 18 17:21:34 2018 +1100

    xfs: Fix xqmstats offsets in /proc/fs/xfs/xqmstat
    
    commit 41657e5507b13e963be906d5d874f4f02374fd5c upstream.
    
    The addition of FIBT, RMAP and REFCOUNT changed the offsets into
    __xfssats structure.
    
    This caused xqmstat_proc_show() to display garbage data via
    /proc/fs/xfs/xqmstat, once it relies on the offsets marked via macros.
    
    Fix it.
    
    Fixes: 00f4e4f9 xfs: add rmap btree stats infrastructure
    Fixes: aafc3c24 xfs: support the XFS_BTNUM_FINOBT free inode btree type
    Fixes: 46eeb521 xfs: introduce refcount btree definitions
    Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    [bwh: Backported to 3.16:
     - Only the FIBT stats have been added, so start from XFSSTAT_END_FIBT_V2
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit aecbafc041502925052bd47133606f46f2ee8984
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Tue Oct 16 16:31:25 2018 +1100

    scsi: esp_scsi: Track residual for PIO transfers
    
    commit fd47d919d0c336e7c22862b51ee94927ffea227a upstream.
    
    If a target disconnects during a PIO data transfer the command may fail
    when the target reconnects:
    
    scsi host1: DMA length is zero!
    scsi host1: cur adr[04380000] len[00000000]
    
    The scsi bus is then reset. This happens because the residual reached
    zero before the transfer was completed.
    
    The usual residual calculation relies on the Transfer Count registers.
    That works for DMA transfers but not for PIO transfers. Fix the problem
    by storing the PIO transfer residual and using that to correctly
    calculate bytes_sent.
    
    Fixes: 6fe07aaffbf0 ("[SCSI] m68k: new mac_esp scsi driver")
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2e5e75399a506abd704b9548242aa746776f1815
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Oct 12 15:02:28 2018 +0100

    drm/i915: Large page offsets for pread/pwrite
    
    commit ab0d6a141843e0b4b2709dfd37b53468b5452c3a upstream.
    
    Handle integer overflow when computing the sub-page length for shmem
    backed pread/pwrite.
    
    Reported-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181012140228.29783-1-chris@chris-wilson.co.uk
    (cherry picked from commit a5e856a5348f6cd50889d125c40bbeec7328e466)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    [bwh: Backported to 3.16:
     - Length variable is page_length, not length
     - Page-offset variable is shmem_page_offset, not offset]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b0a7e09308f084793decd7d2cc9e34d46105145
Author: Filipe Manana <fdmanana@suse.com>
Date:   Sat Oct 13 00:37:25 2018 +0100

    Btrfs: fix null pointer dereference on compressed write path error
    
    commit 3527a018c00e5dbada2f9d7ed5576437b6dd5cfb upstream.
    
    At inode.c:compress_file_range(), under the "free_pages_out" label, we can
    end up dereferencing the "pages" pointer when it has a NULL value. This
    case happens when "start" has a value of 0 and we fail to allocate memory
    for the "pages" pointer. When that happens we jump to the "cont" label and
    then enter the "if (start == 0)" branch where we immediately call the
    cow_file_range_inline() function. If that function returns 0 (success
    creating an inline extent) or an error (like -ENOMEM for example) we jump
    to the "free_pages_out" label and then access "pages[i]" leading to a NULL
    pointer dereference, since "nr_pages" has a value greater than zero at
    that point.
    
    Fix this by setting "nr_pages" to 0 when we fail to allocate memory for
    the "pages" pointer.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201119
    Fixes: 771ed689d2cd ("Btrfs: Optimize compressed writeback and reads")
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 62d8e8dea781a6c31f9f2b9f5a73469974d3b8c2
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sat Oct 6 13:11:30 2018 -0400

    parisc: Fix address in HPMC IVA
    
    commit 1138b6718ff74d2a934459643e3754423d23b5e2 upstream.
    
    Helge noticed that the address of the os_hpmc handler was not being
    correctly calculated in the hpmc macro.  As a result, PDCE_CHECK would
    fail to call os_hpmc:
    
    <Cpu2> e800009802e00000  0000000000000000  CC_ERR_CHECK_HPMC
    <Cpu2> 37000f7302e00000  8040004000000000  CC_ERR_CPU_CHECK_SUMMARY
    <Cpu2> f600105e02e00000  fffffff0f0c00000  CC_MC_HPMC_MONARCH_SELECTED
    <Cpu2> 140003b202e00000  000000000000000b  CC_ERR_HPMC_STATE_ENTRY
    <Cpu2> 5600100b02e00000  00000000000001a0  CC_MC_OS_HPMC_LEN_ERR
    <Cpu2> 5600106402e00000  fffffff0f0438e70  CC_MC_BR_TO_OS_HPMC_FAILED
    <Cpu2> e800009802e00000  0000000000000000  CC_ERR_CHECK_HPMC
    <Cpu2> 37000f7302e00000  8040004000000000  CC_ERR_CPU_CHECK_SUMMARY
    <Cpu2> 4000109f02e00000  0000000000000000  CC_MC_HPMC_INITIATED
    <Cpu2> 4000101902e00000  0000000000000000  CC_MC_MULTIPLE_HPMCS
    <Cpu2> 030010d502e00000  0000000000000000  CC_CPU_STOP
    
    The address problem can be seen by dumping the fault vector:
    
    0000000040159000 <fault_vector_20>:
        40159000:   63 6f 77 73     stb r15,-2447(dp)
        40159004:   20 63 61 6e     ldil L%b747000,r3
        40159008:   20 66 6c 79     ldil L%-1c3b3000,r3
            ...
        40159020:   08 00 02 40     nop
        40159024:   20 6e 60 02     ldil L%15d000,r3
        40159028:   34 63 00 00     ldo 0(r3),r3
        4015902c:   e8 60 c0 02     bv,n r0(r3)
        40159030:   08 00 02 40     nop
        40159034:   00 00 00 00     break 0,0
        40159038:   c0 00 70 00     bb,*< r0,sar,40159840 <fault_vector_20+0x840>
        4015903c:   00 00 00 00     break 0,0
    
    Location 40159038 should contain the physical address of os_hpmc:
    
    000000004015d000 <os_hpmc>:
        4015d000:   08 1a 02 43     copy r26,r3
        4015d004:   01 c0 08 a4     mfctl iva,r4
        4015d008:   48 85 00 68     ldw 34(r4),r5
    
    This patch moves the address setup into initialize_ivt to resolve the
    above problem.  I tested the change by dumping the HPMC entry after setup:
    
    0000000040209020:  8000240
    0000000040209024: 206a2004
    0000000040209028: 34630ac0
    000000004020902c: e860c002
    0000000040209030:  8000240
    0000000040209034: 1bdddce6
    0000000040209038:   15d000
    000000004020903c:      1a0
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9b0b0ebdc6822c6d23f4fac791ec10ef3742edac
Author: Helge Deller <deller@gmx.de>
Date:   Fri Oct 12 22:37:46 2018 +0200

    parisc: Fix map_pages() to not overwrite existing pte entries
    
    commit 3c229b3f2dd8133f61bb81d3cb018be92f4bba39 upstream.
    
    Fix a long-existing small nasty bug in the map_pages() implementation which
    leads to overwriting already written pte entries with zero, *if* map_pages() is
    called a second time with an end address which isn't aligned on a pmd boundry.
    This happens for example if we want to remap only the text segment read/write
    in order to run alternative patching on the code. Exiting the loop when we
    reach the end address fixes this.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d5f735e34b1e36a426cb585332676803f67993a2
Author: Jim Mattson <jmattson@google.com>
Date:   Thu Sep 13 11:54:48 2018 -0700

    KVM: nVMX: Always reflect #NM VM-exits to L1
    
    commit 3c6e099fa15fdb6fb1892199ed8709012e1294f2 upstream.
    
    When bit 3 (corresponding to CR0.TS) of the VMCS12 cr0_guest_host_mask
    field is clear, the VMCS12 guest_cr0 field does not necessarily hold
    the current value of the L2 CR0.TS bit, so the code that checked for
    L2's CR0.TS bit being set was incorrect. Moreover, I'm not sure that
    the CR0.TS check was adequate. (What if L2's CR0.EM was set, for
    instance?)
    
    Fortunately, lazy FPU has gone away, so L0 has lost all interest in
    intercepting #NM exceptions. See commit bd7e5b0899a4 ("KVM: x86:
    remove code for lazy FPU handling"). Therefore, there is no longer any
    question of which hypervisor gets first dibs. The #NM VM-exit should
    always be reflected to L1. (Note that the corresponding bit must be
    set in the VMCS12 exception_bitmap field for there to be an #NM
    VM-exit at all.)
    
    Fixes: ccf9844e5d99c ("kvm, vmx: Really fix lazy FPU on nested guest")
    Reported-by: Abhiroop Dabral <adabral@paloaltonetworks.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Peter Shier <pshier@google.com>
    Tested-by: Abhiroop Dabral <adabral@paloaltonetworks.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.16:
     - is_no_device() hadn't been converted to use is_exception_n()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fda84f013e53013fd35e7b86614327f1fcd92f69
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Feb 3 21:18:52 2017 -0800

    KVM: x86: remove code for lazy FPU handling
    
    commit bd7e5b0899a429445cc6e3037c13f8b5ae3be903 upstream.
    
    The FPU is always active now when running KVM.
    
    Reviewed-by: David Matlack <dmatlack@google.com>
    Reviewed-by: Bandan Das <bsd@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.16:
     - eagerfpu is still optional (but enabled by default) so disable KVM if
       eagerfpu is disabled
     - Remove one additional use of KVM_REQ_DEACTIVATE_FPU which was
       removed earlier upstream in commit c592b5734706
       "x86/fpu: Remove use_eager_fpu()"
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 576a014da405f5799751273d7c66f5f119709fa2
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Wed Aug 29 21:20:10 2018 +0200

    clk: s2mps11: Fix matching when built as module and DT node contains compatible
    
    commit 8985167ecf57f97061599a155bb9652c84ea4913 upstream.
    
    When driver is built as module and DT node contains clocks compatible
    (e.g. "samsung,s2mps11-clk"), the module will not be autoloaded because
    module aliases won't match.
    
    The modalias from uevent: of:NclocksT<NULL>Csamsung,s2mps11-clk
    The modalias from driver: platform:s2mps11-clk
    
    The devices are instantiated by parent's MFD.  However both Device Tree
    bindings and parent define the compatible for clocks devices.  In case
    of module matching this DT compatible will be used.
    
    The issue will not happen if this is a built-in (no need for module
    matching) or when clocks DT node does not contain compatible (not
    correct from bindings perspective but working for driver).
    
    Note when backporting to stable kernels: adjust the list of device ID
    entries.
    
    Fixes: 53c31b3437a6 ("mfd: sec-core: Add of_compatible strings for clock MFD cells")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    [bwh: Backported to 3.16: drop entry for "samsung,s2mps13-clk"]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 94bbbd5d1a915ea696b5a34c99fc7c88b23a1dfd
Author: Leon Romanovsky <leon@kernel.org>
Date:   Thu Oct 11 22:36:10 2018 +0300

    RDMA/cm: Respect returned status of cm_init_av_by_path
    
    commit e54b6a3bcd1ec972b25a164bdf495d9e7120b107 upstream.
    
    Add missing check for failure of cm_init_av_by_path
    
    Fixes: e1444b5a163e ("IB/cm: Fix automatic path migration support")
    Reported-by: Slava Shwartsman <slavash@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [bwh: Backported to 3.16: cm_init_av_by_path() doesn't take an sgid_attr
     parameter]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b85802b539f2e26b348cb707183661b5a153fe1b
Author: Parav Pandit <parav@mellanox.com>
Date:   Mon May 14 11:11:07 2018 +0300

    IB/cm: Avoid AV ah_attr overwriting during LAP message handling
    
    commit a5c57d327272bdf3a8b19686eaca2ec683449e67 upstream.
    
    AH attribute of the cm_id can be overwritten if LAP message is received
    on CM request which is in progress. This bug got introduced to avoid
    sleeping when spin lock is held as part of commit in Fixes tag.
    
    Therefore validate the cm_id state first and continue to perform AV
    ah_attr initialization.
    
    Given that Aleternative path related messages are not supported for
    RoCE, init_av_from_response/path is such messages are ok to be called
    from blocking context.
    
    Fixes: 33f93e1ebcf5 ("IB/cm: Fix sleeping while spin lock is held")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e1ffd1b0a12841994942c59e15f91893fbf11fa6
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Nov 14 14:52:15 2017 +0200

    IB/cm: Fix sleeping while spin lock is held
    
    commit 33f93e1ebcf5acfaef06cda2d3e373730519e33e upstream.
    
    In case of LAP are used for RoCE, it can lead to a problem of sleeping a
    context while spin lock is held in below flow.
    
    cm_lap_handler
            ->spin_lock
            -> <..switch_case..>
            -> cm_init_av_for_response
                    -> ib_init_ah_from_wc
                            -> rdma_addr_find_l2_eth_by_grh
                                    wait_for_completion()
    
    Therefore ah attribute initialization is done for incoming lap requests
    outside of the lock context.
    
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5c19ea30fb7effe88b4befa10fd02076e43759dc
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Nov 14 14:52:13 2017 +0200

    IB/{cm, umad}: Handle av init error
    
    commit 0c4386ec77cfcd0ccbdbe8c2e67dd3a49b2a4c7f upstream.
    
    cm_init_av_for_response depends on ib_init_ah_from_wc() whose return
    status is ignored.
    ib_init_ah_from_wc() can fail and its return status should be handled as
    done in this patch.
    
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 79a2b3ec9950e484432960e5286b8a72168ed395
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Oct 6 17:09:35 2018 +0800

    jffs2: free jffs2_sb_info through jffs2_kill_sb()
    
    commit 92e2921f7eee63450a5f953f4b15dc6210219430 upstream.
    
    When an invalid mount option is passed to jffs2, jffs2_parse_options()
    will fail and jffs2_sb_info will be freed, but then jffs2_sb_info will
    be used (use-after-free) and freeed (double-free) in jffs2_kill_sb().
    
    Fix it by removing the buggy invocation of kfree() when getting invalid
    mount options.
    
    Fixes: 92abc475d8de ("jffs2: implement mount option parsing and compression overriding")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cbaacda9f34847757ec506da01ccd89bb8ad163e
Author: Serhey Popovych <serhe.popovych@gmail.com>
Date:   Tue Oct 9 21:21:01 2018 +0300

    tun: Consistently configure generic netdev params via rtnetlink
    
    commit df52eab23d703142c766ac00bdb8db19d71238d0 upstream.
    
    Configuring generic network device parameters on tun will fail in
    presence of IFLA_INFO_KIND attribute in IFLA_LINKINFO nested attribute
    since tun_validate() always return failure.
    
    This can be visualized with following ip-link(8) command sequences:
    
      # ip link set dev tun0 group 100
      # ip link set dev tun0 group 100 type tun
      RTNETLINK answers: Invalid argument
    
    with contrast to dummy and veth drivers:
    
      # ip link set dev dummy0 group 100
      # ip link set dev dummy0 type dummy
    
      # ip link set dev veth0 group 100
      # ip link set dev veth0 group 100 type veth
    
    Fix by returning zero in tun_validate() when @data is NULL that is
    always in case since rtnl_link_ops->maxtype is zero in tun driver.
    
    Fixes: f019a7a594d9 ("tun: Implement ip link del tunXXX")
    Signed-off-by: Serhey Popovych <serhe.popovych@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d125c2a3d0f0e34e22d4b4eb56b4fdd4b6aa081f
Author: Dmitry Bazhenov <bazhenov.dn@gmail.com>
Date:   Mon Oct 15 14:21:22 2018 +0500

    hwmon: (pmbus) Fix page count auto-detection.
    
    commit e7c6a55606b5c46b449d76588968b4d8caae903f upstream.
    
    Devices with compatible="pmbus" field have zero initial page count,
    and pmbus_clear_faults() being called before the page count auto-
    detection does not actually clear faults because it depends on the
    page count. Non-cleared faults in its turn may fail the subsequent
    page count auto-detection.
    
    This patch fixes this problem by calling pmbus_clear_fault_page()
    for currently set page and calling pmbus_clear_faults() after the
    page count was detected.
    
    Signed-off-by: Dmitry Bazhenov <bazhenov.dn@gmail.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ee6a7bfeb1f3e1f35768f77adc68d4459672ae74
Author: Chris Mason <clm@fb.com>
Date:   Wed Jun 20 07:56:11 2018 -0700

    Btrfs: don't clean dirty pages during buffered writes
    
    commit 7703bdd8d23e6ef057af3253958a793ec6066b28 upstream.
    
    During buffered writes, we follow this basic series of steps:
    
    again:
            lock all the pages
            wait for writeback on all the pages
            Take the extent range lock
            wait for ordered extents on the whole range
            clean all the pages
    
            if (copy_from_user_in_atomic() hits a fault) {
                    drop our locks
                    goto again;
            }
    
            dirty all the pages
            release all the locks
    
    The extra waiting, cleaning and locking are there to make sure we don't
    modify pages in flight to the drive, after they've been crc'd.
    
    If some of the pages in the range were already dirty when the write
    began, and we need to goto again, we create a window where a dirty page
    has been cleaned and unlocked.  It may be reclaimed before we're able to
    lock it again, which means we'll read the old contents off the drive and
    lose any modifications that had been pending writeback.
    
    We don't actually need to clean the pages.  All of the other locking in
    place makes sure we don't start IO on the pages, so we can just leave
    them dirty for the duration of the write.
    
    Fixes: 73d59314e6ed (the original btrfs merge)
    Signed-off-by: Chris Mason <clm@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16:
     - Keep passing additional argument of GFP_NOFS to clear_extent_bit()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 49d6354e514365e0707dfb6adea1127ccfa68147
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Sep 12 10:45:45 2018 -0400

    btrfs: wait on caching when putting the bg cache
    
    commit 3aa7c7a31c26321696b92841d5103461c6f3f517 upstream.
    
    While testing my backport I noticed there was a panic if I ran
    generic/416 generic/417 generic/418 all in a row.  This just happened to
    uncover a race where we had outstanding IO after we destroy all of our
    workqueues, and then we'd go to queue the endio work on those free'd
    workqueues.
    
    This is because we aren't waiting for the caching threads to be done
    before freeing everything up, so to fix this make sure we wait on any
    outstanding caching that's being done before we free up the block group,
    so we're sure to be done with all IO by the time we get to
    btrfs_stop_all_workers().  This fixes the panic I was seeing
    consistently in testing.
    
    ------------[ cut here ]------------
    kernel BUG at fs/btrfs/volumes.c:6112!
    SMP PTI
    Modules linked in:
    CPU: 1 PID: 27165 Comm: kworker/u4:7 Not tainted 4.16.0-02155-g3553e54a578d-dirty #875
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
    Workqueue: btrfs-cache btrfs_cache_helper
    RIP: 0010:btrfs_map_bio+0x346/0x370
    RSP: 0000:ffffc900061e79d0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: ffff880071542e00 RCX: 0000000000533000
    RDX: ffff88006bb74380 RSI: 0000000000000008 RDI: ffff880078160000
    RBP: 0000000000000001 R08: ffff8800781cd200 R09: 0000000000503000
    R10: ffff88006cd21200 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff8800781cd200 R15: ffff880071542e00
    FS:  0000000000000000(0000) GS:ffff88007fd00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000817ffc4 CR3: 0000000078314000 CR4: 00000000000006e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     btree_submit_bio_hook+0x8a/0xd0
     submit_one_bio+0x5d/0x80
     read_extent_buffer_pages+0x18a/0x320
     btree_read_extent_buffer_pages+0xbc/0x200
     ? alloc_extent_buffer+0x359/0x3e0
     read_tree_block+0x3d/0x60
     read_block_for_search.isra.30+0x1a5/0x360
     btrfs_search_slot+0x41b/0xa10
     btrfs_next_old_leaf+0x212/0x470
     caching_thread+0x323/0x490
     normal_work_helper+0xc5/0x310
     process_one_work+0x141/0x340
     worker_thread+0x44/0x3c0
     kthread+0xf8/0x130
     ? process_one_work+0x340/0x340
     ? kthread_bind+0x10/0x10
     ret_from_fork+0x35/0x40
    RIP: btrfs_map_bio+0x346/0x370 RSP: ffffc900061e79d0
    ---[ end trace 827eb13e50846033 ]---
    Kernel panic - not syncing: Fatal exception
    Kernel Offset: disabled
    ---[ end Kernel panic - not syncing: Fatal exception
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 785ba14b31a60fe354b229e32fdb9f16b229f7e1
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 15:52:17 2018 -0400

    btrfs: fix error handling in btrfs_dev_replace_start
    
    commit 5c06147128fbbdf7a84232c5f0d808f53153defe upstream.
    
    When we fail to start a transaction in btrfs_dev_replace_start, we leave
    dev_replace->replace_start set to STARTED but clear ->srcdev and
    ->tgtdev.  Later, that can result in an Oops in
    btrfs_dev_replace_progress when having state set to STARTED or SUSPENDED
    implies that ->srcdev is valid.
    
    Also fix error handling when the state is already STARTED or SUSPENDED
    while starting.  That, too, will clear ->srcdev and ->tgtdev even though
    it doesn't own them.  This should be an impossible case to hit since we
    should be protected by the BTRFS_FS_EXCL_OP bit being set.  Let's add an
    ASSERT there while we're at it.
    
    Fixes: e93c89c1aaaaa (Btrfs: add new sources for device replace code)
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 50f0f8c488145964e627933393d636890d9daae7
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Fri Oct 12 22:48:22 2018 +0300

    spi: sh-msiof: fix deferred probing
    
    commit f34c6e6257aa477cdfe7e9bbbecd3c5648ecda69 upstream.
    
    Since commit 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    platform_get_irq() can return -EPROBE_DEFER. However, the driver overrides
    an error returned by that function with -ENOENT which breaks the deferred
    probing. Propagate upstream an error code returned by platform_get_irq()
    and remove the bogus "platform" from the error message, while at it...
    
    Fixes: 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e662026eef55aadc2b497d8d7659816e3d893b92
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sat Oct 6 22:12:32 2018 +0200

    libertas: don't set URB_ZERO_PACKET on IN USB transfer
    
    commit 6528d88047801b80d2a5370ad46fb6eff2f509e0 upstream.
    
    The USB core gets rightfully upset:
    
      usb 1-1: BOGUS urb flags, 240 --> 200
      WARNING: CPU: 0 PID: 60 at drivers/usb/core/urb.c:503 usb_submit_urb+0x2f8/0x3ed
      Modules linked in:
      CPU: 0 PID: 60 Comm: kworker/0:3 Not tainted 4.19.0-rc6-00319-g5206d00a45c7 #39
      Hardware name: OLPC XO/XO, BIOS OLPC Ver 1.00.01 06/11/2014
      Workqueue: events request_firmware_work_func
      EIP: usb_submit_urb+0x2f8/0x3ed
      Code: 75 06 8b 8f 80 00 00 00 8d 47 78 89 4d e4 89 55 e8 e8 35 1c f6 ff 8b 55 e8 56 52 8b 4d e4 51 50 68 e3 ce c7 c0 e8 ed 18 c6 ff <0f> 0b 83 c4 14 80 7d ef 01 74 0a 80 7d ef 03 0f 85 b8 00 00 00 8b
      EAX: 00000025 EBX: ce7d4980 ECX: 00000000 EDX: 00000001
      ESI: 00000200 EDI: ce7d8800 EBP: ce7f5ea8 ESP: ce7f5e70
      DS: 007b ES: 007b FS: 0000 GS: 00e0 SS: 0068 EFLAGS: 00210292
      CR0: 80050033 CR2: 00000000 CR3: 00e80000 CR4: 00000090
      Call Trace:
       ? if_usb_fw_timeo+0x64/0x64
       __if_usb_submit_rx_urb+0x85/0xe6
       ? if_usb_fw_timeo+0x64/0x64
       if_usb_submit_rx_urb_fwload+0xd/0xf
       if_usb_prog_firmware+0xc0/0x3db
       ? _request_firmware+0x54/0x47b
       ? _request_firmware+0x89/0x47b
       ? if_usb_probe+0x412/0x412
       lbs_fw_loaded+0x55/0xa6
       ? debug_smp_processor_id+0x12/0x14
       helper_firmware_cb+0x3c/0x3f
       request_firmware_work_func+0x37/0x6f
       process_one_work+0x164/0x25a
       worker_thread+0x1c4/0x284
       kthread+0xec/0xf1
       ? cancel_delayed_work_sync+0xf/0xf
       ? kthread_create_on_node+0x1a/0x1a
       ret_from_fork+0x2e/0x38
      ---[ end trace 3ef1e3b2dd53852f ]---
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    [bwh: Backported to 3.16: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 88b3e1f4feb2b4c32f60b78a17c7e5fa3b8026f3
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Sat Oct 13 09:46:08 2018 +0300

    iwlwifi: mvm: check return value of rs_rate_from_ucode_rate()
    
    commit 3d71c3f1f50cf309bd20659422af549bc784bfff upstream.
    
    The rs_rate_from_ucode_rate() function may return -EINVAL if the rate
    is invalid, but none of the callsites check for the error, potentially
    making us access arrays with index IWL_RATE_INVALID, which is larger
    than the arrays, causing an out-of-bounds access.  This will trigger
    KASAN warnings, such as the one reported in the bugzilla issue
    mentioned below.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=200659
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    [bwh: Backported to 3.16:
     - Fix up one additional caller
     - Adjust filename, context
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 01d94e303007444851812be4052f16dbbd8fa025
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Oct 13 00:19:13 2018 -0400

    gfs2_meta: ->mount() can get NULL dev_name
    
    commit 3df629d873f8683af6f0d34dfc743f637966d483 upstream.
    
    get in sync with mount_bdev() handling of the same
    
    Reported-by: syzbot+c54f8e94e6bba03b04e9@syzkaller.appspotmail.com
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1f939a0e69030265721baf2d572c9631535282a5
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Oct 12 09:28:09 2018 -0400

    ext4: fix use-after-free race in ext4_remount()'s error path
    
    commit 33458eaba4dfe778a426df6a19b7aad2ff9f7eec upstream.
    
    It's possible for ext4_show_quota_options() to try reading
    s_qf_names[i] while it is being modified by ext4_remount() --- most
    notably, in ext4_remount's error path when the original values of the
    quota file name gets restored.
    
    Reported-by: syzbot+a2872d6feea6918008a9@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    [bwh: Backported to 3.16:
     - s/EXT4_MAXQUOTAS/MAXQUOTAS/
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a8c748cd6e76f3aece39898c20eca7a4e66145ab
Author: Jeremy Cline <jcline@redhat.com>
Date:   Thu Oct 11 15:49:17 2018 -0400

    ALSA: hda - Add mic quirk for the Lenovo G50-30 (17aa:3905)
    
    commit e7bb6ad5685f05685dd8a6a5eda7bfcd14d5f95b upstream.
    
    The Lenovo G50-30, like other G50 models, has a Conexant codec that
    requires a quirk for its inverted stereo dmic.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1249364
    Reported-by: Alexander Ploumistos <alex.ploumistos@gmail.com>
    Tested-by: Alexander Ploumistos <alex.ploumistos@gmail.com>
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8b0042e32aa6c02116e6892334ecf4c93dac54b6
Author: Bin Meng <bmeng.cn@gmail.com>
Date:   Wed Sep 26 08:14:01 2018 -0700

    PCI: Add Device IDs for Intel GPU "spurious interrupt" quirk
    
    commit d0c9606b31a21028fb5b753c8ad79626292accfd upstream.
    
    Add Device IDs to the Intel GPU "spurious interrupt" quirk table.
    
    For these devices, unplugging the VGA cable and plugging it in again causes
    spurious interrupts from the IGD.  Linux eventually disables the interrupt,
    but of course that disables any other devices sharing the interrupt.
    
    The theory is that this is a VGA BIOS defect: it should have disabled the
    IGD interrupt but failed to do so.
    
    See f67fd55fa96f ("PCI: Add quirk for still enabled interrupts on Intel
    Sandy Bridge GPUs") and 7c82126a94e6 ("PCI: Add new ID for Intel GPU
    "spurious interrupt" quirk") for some history.
    
    [bhelgaas: See link below for discussion about how to fix this more
    generically instead of adding device IDs for every new Intel GPU.  I hope
    this is the last patch to add device IDs.]
    
    Link: https://lore.kernel.org/linux-pci/1537974841-29928-1-git-send-email-bmeng.cn@gmail.com
    Signed-off-by: Bin Meng <bmeng.cn@gmail.com>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5d9cd4ee9bec4c27e80203655a16545f825d7127
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Sep 7 14:33:24 2018 -0700

    ima: fix showing large 'violations' or 'runtime_measurements_count'
    
    commit 1e4c8dafbb6bf72fb5eca035b861e39c5896c2b7 upstream.
    
    The 12 character temporary buffer is not necessarily long enough to hold
    a 'long' value.  Increase it.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d98ce3dec35d1208099b3825501f54d505408976
Author: Spencer E. Olson <olsonse@umich.edu>
Date:   Wed Oct 3 14:54:16 2018 -0600

    staging: comedi: ni_mio_common: protect register write overflow
    
    commit 1cbca5852d6c16e85a21487a15d211195aacd4a1 upstream.
    
    Fixes two problems introduced as early as
    commit 03aef4b6dc12  ("Staging: comedi: add ni_mio_common code"):
    (1) Ensures that the last four bits of NISTC_RTSI_TRIGB_OUT_REG register is
        not unduly overwritten on e-series devices.  On e-series devices, the
        first three of the last four bits are reserved.  The last bit defines
        the output selection of the RGOUT0 pin, otherwise known as
        RTSI_Sub_Selection.  For m-series devices, these last four bits are
        indeed used as the output selection of the RTSI7 pin (and the
        RTSI_Sub_Selection bit for the RGOUT0 pin is moved to the
        RTSI_Trig_Direction register.
    (2) Allows all 4 RTSI_BRD lines to be treated as valid sources for RTSI
        lines.
    
    This patch also cleans up the ni_get_rtsi_routing command for readability.
    
    Fixes: 03aef4b6dc12  ("Staging: comedi: add ni_mio_common code")
    Signed-off-by: Spencer E. Olson <olsonse@umich.edu>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16:
     - Use NI_RTSI_OUTPUT_RTSI_BRD_0 + n instead of NI_RTSI_OUTPUT_RTSI_BRD(n)
     - Use num_configurable_rtsi_channels() instead of NISTC_RTSI_TRIG_NUM_CHAN()
     - Use old_RTSI_clock_channel instead of NISTC_RTSI_TRIG_OLD_CLK_CHAN
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d539c0e5a725e76e4e38c5ba0575b8b9dc0cf943
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Oct 6 14:01:42 2018 -0400

    media: cx231xx: fix potential sign-extension overflow on large shift
    
    commit 32ae592036d7aeaabcccb2b1715373a68639a768 upstream.
    
    Shifting the u8 value[3] by an int can lead to sign-extension
    overflow. For example, if value[3] is 0xff and the shift is 24 then it
    is promoted to int and then the top bit is sign-extended so that all
    upper 32 bits are set.  Fix this by casting value[3] to a u32 before
    the shift.
    
    Detected by CoverityScan, CID#1016522 ("Unintended sign extension")
    
    Fixes: e0d3bafd0258 ("V4L/DVB (10954): Add cx231xx USB driver")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e1f74817ac5ca5d1a68b0d42dda71f179b1c9506
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Fri Sep 21 11:32:53 2018 +0200

    mtd: spi-nor: fsl-quadspi: Don't let -EINVAL on the bus
    
    commit 000412276370a9bcfec73b3752ceefd9a927f1db upstream.
    
    fsl_qspi_get_seqid() may return -EINVAL, but fsl_qspi_init_ahb_read()
    doesn't check for error codes with the result that -EINVAL could find
    itself signalled over the bus.
    
    In conjunction with the LS1046A SoC's A-009283 errata
    ("Illegal accesses to SPI flash memory can result in a system hang")
    this illegal access to SPI flash memory results in a system hang
    if userspace attempts reading later on.
    
    Avoid this by always checking fsl_qspi_get_seqid()'s return value
    and bail out otherwise.
    
    Fixes: e46ecda764dc ("mtd: spi-nor: Add Freescale QuadSPI driver")
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 293d59dd2e4a7d0a50bd1b94b855d913c7235d3a
Author: Yogesh Gaur <yogeshnarayan.gaur@nxp.com>
Date:   Tue Jan 2 16:09:12 2018 +0530

    mtd: spi-nor: fsl-quadspi: fix api naming typo _init_ahb_read
    
    commit dd50a1c4e56d6d2ea753f87a35b1f1e09cb877d7 upstream.
    
    Fix api naming typo _init_ahb_read
    fsl_qspi_init_abh_read --> fsl_qspi_init_ahb_read
    
    Signed-off-by: Yogesh Gaur <yogeshnarayan.gaur@nxp.com>
    Acked-by: Han Xu <han.xu@nxp.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c8da171ee30c47de394487bf4d7274c2d6703af3
Author: Tang Junhui <tang.junhui.linux@gmail.com>
Date:   Mon Oct 8 20:41:14 2018 +0800

    bcache: fix miss key refill->end in writeback
    
    commit 2d6cb6edd2c7fb4f40998895bda45006281b1ac5 upstream.
    
    refill->end record the last key of writeback, for example, at the first
    time, keys (1,128K) to (1,1024K) are flush to the backend device, but
    the end key (1,1024K) is not included, since the bellow code:
            if (bkey_cmp(k, refill->end) >= 0) {
                    ret = MAP_DONE;
                    goto out;
            }
    And in the next time when we refill writeback keybuf again, we searched
    key start from (1,1024K), and got a key bigger than it, so the key
    (1,1024K) missed.
    This patch modify the above code, and let the end key to be included to
    the writeback key buffer.
    
    Signed-off-by: Tang Junhui <tang.junhui.linux@gmail.com>
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0736abb37077547bb45e282c9a8040104be478a4
Author: tang.junhui <tang.junhui@zte.com.cn>
Date:   Mon Oct 30 14:46:34 2017 -0700

    bcache: fix wrong cache_misses statistics
    
    commit c157313791a999646901b3e3c6888514ebc36d62 upstream.
    
    Currently, Cache missed IOs are identified by s->cache_miss, but actually,
    there are many situations that missed IOs are not assigned a value for
    s->cache_miss in cached_dev_cache_miss(), for example, a bypassed IO
    (s->iop.bypass = 1), or the cache_bio allocate failed. In these situations,
    it will go to out_put or out_submit, and s->cache_miss is null, which leads
    bch_mark_cache_accounting() to treat this IO as a hit IO.
    
    [ML: applied by 3-way merge]
    
    Signed-off-by: tang.junhui <tang.junhui@zte.com.cn>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 53cecba9b03fe614903cb9240e8bf7a164eb27df
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Oct 8 12:57:35 2018 +0200

    mach64: fix image corruption due to reading accelerator registers
    
    commit c09bcc91bb94ed91f1391bffcbe294963d605732 upstream.
    
    Reading the registers without waiting for engine idle returns
    unpredictable values. These unpredictable values result in display
    corruption - if atyfb_imageblit reads the content of DP_PIX_WIDTH with the
    bit DP_HOST_TRIPLE_EN set (from previous invocation), the driver would
    never ever clear the bit, resulting in display corruption.
    
    We don't want to wait for idle because it would degrade performance, so
    this patch modifies the driver so that it never reads accelerator
    registers.
    
    HOST_CNTL doesn't have to be read, we can just write it with
    HOST_BYTE_ALIGN because no other part of the driver cares if
    HOST_BYTE_ALIGN is set.
    
    DP_PIX_WIDTH is written in the functions atyfb_copyarea and atyfb_fillrect
    with the default value and in atyfb_imageblit with the value set according
    to the source image data.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Ville Syrjälä <syrjala@sci.fi>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d1c94aa7166ce5e864d4680e5e4a840759f57578
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Oct 8 12:57:34 2018 +0200

    mach64: fix display corruption on big endian machines
    
    commit 3c6c6a7878d00a3ac997a779c5b9861ff25dfcc8 upstream.
    
    The code for manual bit triple is not endian-clean. It builds the variable
    "hostdword" using byte accesses, therefore we must read the variable with
    "le32_to_cpu".
    
    The patch also enables (hardware or software) bit triple only if the image
    is monochrome (image->depth). If we want to blit full-color image, we
    shouldn't use the triple code.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Ville Syrjälä <syrjala@sci.fi>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 70ec991546167077629c7182ed708a39ed738e67
Author: He Zhe <zhe.he@windriver.com>
Date:   Sun Sep 30 00:45:50 2018 +0800

    printk: Fix panic caused by passing log_buf_len to command line
    
    commit 277fcdb2cfee38ccdbe07e705dbd4896ba0c9930 upstream.
    
    log_buf_len_setup does not check input argument before passing it to
    simple_strtoull. The argument would be a NULL pointer if "log_buf_len",
    without its value, is set in command line and thus causes the following
    panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffffaaeacd0d error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.19.0-rc4-yocto-standard+ #1
    [    0.000000] RIP: 0010:_parse_integer_fixup_radix+0xd/0x70
    ...
    [    0.000000] Call Trace:
    [    0.000000]  simple_strtoull+0x29/0x70
    [    0.000000]  memparse+0x26/0x90
    [    0.000000]  log_buf_len_setup+0x17/0x22
    [    0.000000]  do_early_param+0x57/0x8e
    [    0.000000]  parse_args+0x208/0x320
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_options+0x29/0x2d
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_param+0x36/0x4d
    [    0.000000]  setup_arch+0x336/0x99e
    [    0.000000]  start_kernel+0x6f/0x4ee
    [    0.000000]  x86_64_start_reservations+0x24/0x26
    [    0.000000]  x86_64_start_kernel+0x6f/0x72
    [    0.000000]  secondary_startup_64+0xa4/0xb0
    
    This patch adds a check to prevent the panic.
    
    Link: http://lkml.kernel.org/r/1538239553-81805-1-git-send-email-zhe.he@windriver.com
    Cc: rostedt@goodmis.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c7a0da4706585cad56a5f707bfc36d363bd19d76
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Sep 30 18:03:11 2018 +0200

    USB: serial: cypress_m8: fix interrupt-out transfer length
    
    commit 56445eef55cb5904096fed7a73cf87b755dfffc7 upstream.
    
    Fix interrupt-out transfer length which was being set to the
    transfer-buffer length rather than the size of the outgoing packet.
    
    Note that no slab data was leaked as the whole transfer buffer is always
    cleared before each transfer.
    
    Fixes: 9aa8dae7b1fa ("cypress_m8: use usb_fill_int_urb where appropriate")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4bd5c8e47c4cb61e70b27c1330d30a6e440a4edf
Author: Nicolas Huaman <nicolas@herochao.de>
Date:   Thu Oct 4 16:42:05 2018 +0200

    ALSA: usb-audio: update quirk for B&W PX to remove microphone
    
    commit c369c8db15d51fa175d2ba85928f79d16af6b562 upstream.
    
    A quirk in snd-usb-audio was added to automate setting sample rate to
    4800k and remove the previously exposed nonfunctional microphone for
    the Bowers & Wilkins PX:
    commit 240a8af929c7c57dcde28682725b29cf8474e8e5
    https://lore.kernel.org/patchwork/patch/919689/
    
    However the headphones where updated shortly after that to remove the
    unintentional microphone functionality. I guess because of this the
    headphones now crash when connecting them via USB while the quirk is
    active. Dmesg:
    
    snd-usb-audio: probe of 2-3:1.0 failed with error -22
    usb 2-3: 2:1: cannot get min/max values for control 2 (id 2)
    
    This patch removes the microfone and allows the headphones to connect
    and work out of the box. It is based on the current mainline kernel
     and successfully applied an tested on my machine (4.18.10.arch1-1).
    
    Fixes: 240a8af929c7 ("ALSA: usb-audio: Add a quirck for B&W PX headphones")
    Signed-off-by: Nicolas Huaman <nicolas@herochao.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3d37d1db2cb80b1a5056276710dbdccab30eb9a8
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Sat Sep 29 03:55:16 2018 +0000

    IB/mthca: Fix error return code in __mthca_init_one()
    
    commit 39f2495618c5e980d2873ea3f2d1877dd253e07a upstream.
    
    Fix to return a negative error code from the mthca_cmd_init() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 80fd8238734c ("[PATCH] IB/mthca: Encapsulate command interface init")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9478545d6e9581e94fcda18ac108b77f929aab05
Author: Zhimin Gu <kookoo.gu@intel.com>
Date:   Fri Sep 21 14:26:24 2018 +0800

    x86, hibernate: Fix nosave_regions setup for hibernation
    
    commit cc55f7537db6af371e9c1c6a71161ee40f918824 upstream.
    
    On 32bit systems, nosave_regions(non RAM areas) located between
    max_low_pfn and max_pfn are not excluded from hibernation snapshot
    currently, which may result in a machine check exception when
    trying to access these unsafe regions during hibernation:
    
    [  612.800453] Disabling lock debugging due to kernel taint
    [  612.805786] mce: [Hardware Error]: CPU 0: Machine Check Exception: 5 Bank 6: fe00000000801136
    [  612.814344] mce: [Hardware Error]: RIP !INEXACT! 60:<00000000d90be566> {swsusp_save+0x436/0x560}
    [  612.823167] mce: [Hardware Error]: TSC 1f5939fe276 ADDR dd000000 MISC 30e0000086
    [  612.830677] mce: [Hardware Error]: PROCESSOR 0:306c3 TIME 1529487426 SOCKET 0 APIC 0 microcode 24
    [  612.839581] mce: [Hardware Error]: Run the above through 'mcelog --ascii'
    [  612.846394] mce: [Hardware Error]: Machine check: Processor context corrupt
    [  612.853380] Kernel panic - not syncing: Fatal machine check
    [  612.858978] Kernel Offset: 0x18000000 from 0xc1000000 (relocation range: 0xc0000000-0xf7ffdfff)
    
    This is because on 32bit systems, pages above max_low_pfn are regarded
    as high memeory, and accessing unsafe pages might cause expected MCE.
    On the problematic 32bit system, there are reserved memory above low
    memory, which triggered the MCE:
    
    e820 memory mapping:
    [    0.000000] BIOS-e820: [mem 0x0000000000000000-0x000000000009d7ff] usable
    [    0.000000] BIOS-e820: [mem 0x000000000009d800-0x000000000009ffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000000e0000-0x00000000000fffff] reserved
    [    0.000000] BIOS-e820: [mem 0x0000000000100000-0x00000000d160cfff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000d160d000-0x00000000d1613fff] ACPI NVS
    [    0.000000] BIOS-e820: [mem 0x00000000d1614000-0x00000000d1a44fff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000d1a45000-0x00000000d1ecffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000d1ed0000-0x00000000d7eeafff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000d7eeb000-0x00000000d7ffffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000d8000000-0x00000000d875ffff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000d8760000-0x00000000d87fffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000d8800000-0x00000000d8fadfff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000d8fae000-0x00000000d8ffffff] ACPI data
    [    0.000000] BIOS-e820: [mem 0x00000000d9000000-0x00000000da71bfff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000da71c000-0x00000000da7fffff] ACPI NVS
    [    0.000000] BIOS-e820: [mem 0x00000000da800000-0x00000000dbb8bfff] usable
    [    0.000000] BIOS-e820: [mem 0x00000000dbb8c000-0x00000000dbffffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000dd000000-0x00000000df1fffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000f8000000-0x00000000fbffffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000fec00000-0x00000000fec00fff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000fed00000-0x00000000fed03fff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000fed1c000-0x00000000fed1ffff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000fee00000-0x00000000fee00fff] reserved
    [    0.000000] BIOS-e820: [mem 0x00000000ff000000-0x00000000ffffffff] reserved
    [    0.000000] BIOS-e820: [mem 0x0000000100000000-0x000000041edfffff] usable
    
    Fix this problem by changing pfn limit from max_low_pfn to max_pfn.
    This fix does not impact 64bit system because on 64bit max_low_pfn
    is the same as max_pfn.
    
    Signed-off-by: Zhimin Gu <kookoo.gu@intel.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Chen Yu <yu.c.chen@intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b49a472e93237f2fb7f154c1dafccd61c2873745
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Sep 27 13:40:58 2018 +0530

    powerpc/pseries: Fix how we iterate over the DTL entries
    
    commit 9258227e9dd1da8feddb07ad9702845546a581c9 upstream.
    
    When CONFIG_VIRT_CPU_ACCOUNTING_NATIVE is not set, we look up dtl_idx in
    the lppaca to determine the number of entries in the buffer. Since
    lppaca is in big endian, we need to do an endian conversion before using
    this in our calculation to determine the number of entries in the
    buffer. Without this, we do not iterate over the existing entries in the
    DTL buffer properly.
    
    Fixes: 7c105b63bd98 ("powerpc: Add CONFIG_CPU_LITTLE_ENDIAN kernel config option.")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e49692c9d7b95aaca4c26c7c21b1294c836a1394
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Sep 27 13:40:57 2018 +0530

    powerpc/pseries: Fix DTL buffer registration
    
    commit db787af1b8a6b4be428ee2ea7d409dafcaa4a43c upstream.
    
    When CONFIG_VIRT_CPU_ACCOUNTING_NATIVE is not set, we register the DTL
    buffer for a cpu when the associated file under powerpc/dtl in debugfs
    is opened. When doing so, we need to set the size of the buffer being
    registered in the second u32 word of the buffer. This needs to be in big
    endian, but we are not doing the conversion resulting in the below error
    showing up in dmesg:
    
            dtl_start: DTL registration for cpu 0 (hw 0) failed with -4
    
    Fix this in the obvious manner.
    
    Fixes: 7c105b63bd98 ("powerpc: Add CONFIG_CPU_LITTLE_ENDIAN kernel config option.")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4972ccd844472fc36154310b3032d8113034c9f5
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Tue Oct 2 21:18:45 2018 -0400

    ext4: initialize retries variable in ext4_da_write_inline_data_begin()
    
    commit 625ef8a3acd111d5f496d190baf99d1a815bd03e upstream.
    
    Variable retries is not initialized in ext4_da_write_inline_data_begin()
    which can lead to nondeterministic number of retries in case we hit
    ENOSPC. Initialize retries to zero as we do everywhere else.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Fixes: bc0ca9df3b2a ("ext4: retry allocation when inline->extent conversion failed")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86aaa08f93f580f0776932db4e2bce2c26a60bfc
Author: Dexuan Cui <decui@microsoft.com>
Date:   Sun Sep 23 21:10:43 2018 +0000

    Drivers: hv: kvp: Fix two "this statement may fall through" warnings
    
    commit fc62c3b1977d62e6374fd6e28d371bb42dfa5c9d upstream.
    
    We don't need to call process_ib_ipinfo() if message->kvp_hdr.operation is
    KVP_OP_GET_IP_INFO in kvp_send_key(), because here we just need to pass on
    the op code from the host to the userspace; when the userspace returns
    the info requested by the host, we pass the info on to the host in
    kvp_respond_to_host() -> process_ob_ipinfo(). BTW, the current buggy code
    actually doesn't cause any harm, because only message->kvp_hdr.operation
    is used by the userspace, in the case of KVP_OP_GET_IP_INFO.
    
    The patch also adds a missing "break;" in kvp_send_key(). BTW, the current
    buggy code actually doesn't cause any harm, because in the case of
    KVP_OP_SET, the unexpected fall-through corrupts
    message->body.kvp_set.data.key_size, but that is not really used: see
    the definition of struct hv_kvp_exchg_msg_value.
    
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1fa1940f02afca5712f066fa91aacc9f03d43ddc
Author: Jorgen Hansen <jhansen@vmware.com>
Date:   Fri Sep 21 00:31:05 2018 -0700

    VMCI: Resource wildcard match fixed
    
    commit 11924ba5e671d6caef1516923e2bd8c72929a3fe upstream.
    
    When adding a VMCI resource, the check for an existing entry
    would ignore that the new entry could be a wildcard. This could
    result in multiple resource entries that would match a given
    handle. One disastrous outcome of this is that the
    refcounting used to ensure that delayed callbacks for VMCI
    datagrams have run before the datagram is destroyed can be
    wrong, since the refcount could be increased on the duplicate
    entry. This in turn leads to a use after free bug. This issue
    was discovered by Hangbin Liu using KASAN and syzkaller.
    
    Fixes: bc63dedb7d46 ("VMCI: resource object implementation")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Adit Ranadive <aditr@vmware.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Signed-off-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: Drop the version change.]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2529c4398e8464e3f741a9d9dd889b5a9b229e44
Author: Andreas Kemnade <andreas@kemnade.info>
Date:   Sat Sep 22 21:20:54 2018 +0200

    w1: omap-hdq: fix missing bus unregister at removal
    
    commit a007734618fee1bf35556c04fa498d41d42c7301 upstream.
    
    The bus master was not removed after unloading the module
    or unbinding the driver. That lead to oopses like this
    
    [  127.842987] Unable to handle kernel paging request at virtual address bf01d04c
    [  127.850646] pgd = 70e3cd9a
    [  127.853698] [bf01d04c] *pgd=8f908811, *pte=00000000, *ppte=00000000
    [  127.860412] Internal error: Oops: 80000007 [#1] PREEMPT SMP ARM
    [  127.866668] Modules linked in: bq27xxx_battery overlay [last unloaded: omap_hdq]
    [  127.874542] CPU: 0 PID: 1022 Comm: w1_bus_master1 Not tainted 4.19.0-rc4-00001-g2d51da718324 #12
    [  127.883819] Hardware name: Generic OMAP36xx (Flattened Device Tree)
    [  127.890441] PC is at 0xbf01d04c
    [  127.893798] LR is at w1_search_process_cb+0x4c/0xfc
    [  127.898956] pc : [<bf01d04c>]    lr : [<c05f9580>]    psr: a0070013
    [  127.905609] sp : cf885f48  ip : bf01d04c  fp : ddf1e11c
    [  127.911132] r10: cf8fe040  r9 : c05f8d00  r8 : cf8fe040
    [  127.916656] r7 : 000000f0  r6 : cf8fe02c  r5 : cf8fe000  r4 : cf8fe01c
    [  127.923553] r3 : c05f8d00  r2 : 000000f0  r1 : cf8fe000  r0 : dde1ef10
    [  127.930450] Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [  127.938018] Control: 10c5387d  Table: 8f8f0019  DAC: 00000051
    [  127.944091] Process w1_bus_master1 (pid: 1022, stack limit = 0x9135699f)
    [  127.951171] Stack: (0xcf885f48 to 0xcf886000)
    [  127.955810] 5f40:                   cf8fe000 00000000 cf884000 cf8fe090 000003e8 c05f8d00
    [  127.964477] 5f60: dde5fc34 c05f9700 ddf1e100 ddf1e540 cf884000 cf8fe000 c05f9694 00000000
    [  127.973114] 5f80: dde5fc34 c01499a4 00000000 ddf1e540 c0149874 00000000 00000000 00000000
    [  127.981781] 5fa0: 00000000 00000000 00000000 c01010e8 00000000 00000000 00000000 00000000
    [  127.990447] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [  127.999114] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [  128.007781] [<c05f9580>] (w1_search_process_cb) from [<c05f9700>] (w1_process+0x6c/0x118)
    [  128.016479] [<c05f9700>] (w1_process) from [<c01499a4>] (kthread+0x130/0x148)
    [  128.024047] [<c01499a4>] (kthread) from [<c01010e8>] (ret_from_fork+0x14/0x2c)
    [  128.031677] Exception stack(0xcf885fb0 to 0xcf885ff8)
    [  128.037017] 5fa0:                                     00000000 00000000 00000000 00000000
    [  128.045684] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [  128.054351] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [  128.061340] Code: bad PC value
    [  128.064697] ---[ end trace af066e33c0e14119 ]---
    
    Signed-off-by: Andreas Kemnade <andreas@kemnade.info>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c82376e6b9a215539771aec03a95f0aa8f2e48a6
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Oct 2 18:21:19 2018 -0400

    ext4: fix EXT4_IOC_SWAP_BOOT
    
    commit 18aded17492088962ef43f00825179598b3e8c58 upstream.
    
    The code EXT4_IOC_SWAP_BOOT ioctl hasn't been updated in a while, and
    it's a bit broken with respect to more modern ext4 kernels, especially
    metadata checksums.
    
    Other problems fixed with this commit:
    
    * Don't allow installing a DAX, swap file, or an encrypted file as a
      boot loader.
    
    * Respect the immutable and append-only flags.
    
    * Wait until any DIO operations are finished *before* calling
      truncate_inode_pages().
    
    * Don't swap inode->i_flags, since these flags have nothing to do with
      the inode blocks --- and it will give the IMA/audit code heartburn
      when the inode is evicted.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reported-by: syzbot+e81ccd4744c6c4f71354@syzkaller.appspotmail.com
    [bwh: Backported to 3.16:
     - Drop IS_ENCRYPTED() check
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7a6fe647fd5468d4b94f29b30fc009cb2d80ba3c
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Thu Aug 30 12:16:58 2018 +0200

    usb: gadget: fsl_udc_core: check allocation return value and cleanup on failure
    
    commit 4ab2b48c98f2ec9712452d520a381917f91ac3d2 upstream.
    
    The allocation with fsl_alloc_request() and kmalloc() were unchecked
    fixed this up with a NULL check and appropriate cleanup.
    
    Additionally udc->ep_qh_size was reset to 0 on failure of allocation.
    Similar udc->phy_mode is initially 0 (as udc_controller was
    allocated with kzalloc in fsl_udc_probe()) so reset it to 0 as well
    so that this function is side-effect free on failure. Not clear if
    this is necessary or sensible as fsl_udc_release() probably can not
    be called if fsl_udc_probe() failed - but it should not hurt.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Fixes: b504882da5 ("USB: add Freescale high-speed USB SOC device controller driver")
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8c349ad1277faf8f4c609321fb11b3aac69c2978
Author: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Date:   Wed Jul 4 10:45:50 2018 +0200

    PM / devfreq: Fix devfreq_add_device() when drivers are built as modules.
    
    commit 23c7b54ca1cd1797ef39169ab85e6d46f1c2d061 upstream.
    
    When the devfreq driver and the governor driver are built as modules,
    the call to devfreq_add_device() or governor_store() fails because the
    governor driver is not loaded at the time the devfreq driver loads. The
    devfreq driver has a build dependency on the governor but also should
    have a runtime dependency. We need to make sure that the governor driver
    is loaded before the devfreq driver.
    
    This patch fixes this bug by adding a try_then_request_governor()
    function. First tries to find the governor, and then, if it is not found,
    it requests the module and tries again.
    
    Fixes: 1b5c1be2c88e (PM / devfreq: map devfreq drivers to governor using name)
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    [bwh: Backported to 3.16:
     - Use string literal instead of DEVFREQ_GOV_SIMPLE_ONDEMAND
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc6aa043215184e170b60c72c564cf66c4e18993
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Sun Sep 9 01:21:06 2018 +0200

    pcmcia: Implement CLKRUN protocol disabling for Ricoh bridges
    
    commit 95691e3eddc41da2d1cd3cca51fecdfb46bd85bc upstream.
    
    Currently, "disable_clkrun" yenta_socket module parameter is only
    implemented for TI CardBus bridges.
    Add also an implementation for Ricoh bridges that have the necessary
    setting documented in publicly available datasheets.
    
    Tested on a RL5C476II with a Sunrich C-160 CardBus NIC that doesn't work
    correctly unless the CLKRUN protocol is disabled.
    
    Let's also make it clear in its description that the "disable_clkrun"
    module parameter only works on these two previously mentioned brands of
    CardBus bridges.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f9dbd14631c577a9adcf0eb1196cf1150c577a46
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Sep 28 11:23:40 2018 +0200

    iio: ad5064: Fix regulator handling
    
    commit 8911a43bc198877fad9f4b0246a866b26bb547ab upstream.
    
    The correct way to handle errors returned by regualtor_get() and friends is
    to propagate the error since that means that an regulator was specified,
    but something went wrong when requesting it.
    
    For handling optional regulators, e.g. when the device has an internal
    vref, regulator_get_optional() should be used to avoid getting the dummy
    regulator that the regulator core otherwise provides.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    [bwh: Backported to 3.16: Keep using ad5064_write() instead of
     ad5064_set_config().]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit faa9e0b2a1f3140441baee4e97d6afb1811148e9
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 24 10:51:44 2018 +0300

    iio: adc: at91: fix wrong channel number in triggered buffer mode
    
    commit aea835f2dc8a682942b859179c49ad1841a6c8b9 upstream.
    
    When channels are registered, the hardware channel number is not the
    actual iio channel number.
    This is because the driver is probed with a certain number of accessible
    channels. Some pins are routed and some not, depending on the description of
    the board in the DT.
    Because of that, channels 0,1,2,3 can correspond to hardware channels
    2,3,4,5 for example.
    In the buffered triggered case, we need to do the translation accordingly.
    Fixed the channel number to stop reading the wrong channel.
    
    Fixes: 0e589d5fb ("ARM: AT91: IIO: Add AT91 ADC driver.")
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 07075af4d48d170cf6800d92f075cb75ba70f2e3
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 24 10:51:43 2018 +0300

    iio: adc: at91: fix acking DRDY irq on simple conversions
    
    commit bc1b45326223e7e890053cf6266357adfa61942d upstream.
    
    When doing simple conversions, the driver did not acknowledge the DRDY irq.
    If this irq status is not acked, it will be left pending, and as soon as a
    trigger is enabled, the irq handler will be called, it doesn't know why
    this status has occurred because no channel is pending, and then it will go
    int a irq loop and board will hang.
    To avoid this situation, read the LCDR after a raw conversion is done.
    
    Fixes: 0e589d5fb ("ARM: AT91: IIO: Add AT91 ADC driver.")
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 29ebb2516a6854e61d5f2b9efdaa34c464bdee6c
Author: Tony Luck <tony.luck@intel.com>
Date:   Fri Sep 28 14:39:34 2018 -0700

    EDAC, {i7core,sb,skx}_edac: Fix uncorrected error counting
    
    commit 432de7fd7630c84ad24f1c2acd1e3bb4ce3741ca upstream.
    
    The count of errors is picked up from bits 52:38 of the machine check
    bank status register. But this is the count of *corrected* errors. If an
    uncorrected error is being logged, the h/w sets this field to 0. Which
    means that when edac_mc_handle_error() is called, the EDAC core will
    carefully add zero to the appropriate uncorrected error counts.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    [ Massage commit message. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Aristeu Rozanski <aris@redhat.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180928213934.19890-1-tony.luck@intel.com
    [bwh: Backported to 3.16: Drop change in skx_edac.c]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bfc89804cb96fc4b5fae5bcf11af0fde77e0196d
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri Sep 28 16:43:22 2018 +0200

    fuse: fix blocked_waitq wakeup
    
    commit 908a572b80f6e9577b45e81b3dfe2e22111286b8 upstream.
    
    Using waitqueue_active() is racy.  Make sure we issue a wake_up()
    unconditionally after storing into fc->blocked.  After that it's okay to
    optimize with waitqueue_active() since the first wake up provides the
    necessary barrier for all waiters, not the just the woken one.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 3c18ef8117f0 ("fuse: optimize wake_up")
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fa99de6c069fb709139ed81be53d9241cea3e2e5
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Sep 25 11:28:45 2018 -0700

    net: phy: Stop with excessive soft reset
    
    commit 6e2d85ec05591b739059f65fe8438c9c5999f7d8 upstream.
    
    While consolidating the PHY reset in phy_init_hw() an unconditionaly
    BMCR soft-reset I became quite trigger happy with those. This was later
    on deactivated for the Generic PHY driver on the premise that a prior
    software entity (e.g: bootloader) might have applied workarounds in
    commit 0878fff1f42c ("net: phy: Do not perform software reset for
    Generic PHY").
    
    Since we have a hook to wire-up a soft_reset callback, just use that and
    get rid of the call to genphy_soft_reset() entirely. This speeds up
    initialization and link establishment for most PHYs out there that do
    not require a reset.
    
    Fixes: 87aa9f9c61ad ("net: phy: consolidate PHY reset in phy_init_hw()")
    Tested-by: Wang, Dongsheng <dongsheng.wang@hxt-semitech.com>
    Tested-by: Chris Healy <cphealy@gmail.com>
    Tested-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Clemens Gruber <clemens.gruber@pqgruber.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 704bec5a2590920e7576eb1a4cd10372001b1962
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Sun Sep 9 12:02:32 2018 -0400

    media: pci: cx23885: handle adding to list failure
    
    commit c5d59528e24ad22500347b199d52b9368e686a42 upstream.
    
    altera_hw_filt_init() which calls append_internal() assumes
    that the node was successfully linked in while in fact it can
    silently fail. So the call-site needs to set return to -ENOMEM
    on append_internal() returning NULL and exit through the err path.
    
    Fixes: 349bcf02e361 ("[media] Altera FPGA based CI driver module")
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 175aa81c870240d2bbee3fae542787a3750d1f6b
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Thu Sep 13 10:51:31 2018 +0200

    crypto: lrw - Fix out-of bounds access on counter overflow
    
    commit fbe1a850b3b1522e9fc22319ccbbcd2ab05328d2 upstream.
    
    When the LRW block counter overflows, the current implementation returns
    128 as the index to the precomputed multiplication table, which has 128
    entries. This patch fixes it to return the correct value (127).
    
    Fixes: 64470f1b8510 ("[CRYPTO] lrw: Liskov Rivest Wagner, a tweakable narrow block cipher mode")
    Reported-by: Eric Biggers <ebiggers@kernel.org>
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3a05444ead7457bab26014ef640c0a8486097f5f
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Tue Sep 4 17:18:57 2018 +0200

    usb: chipidea: Prevent unbalanced IRQ disable
    
    commit 8b97d73c4d72a2abf58f8e49062a7ee1e5f1334e upstream.
    
    The ChipIdea IRQ is disabled before scheduling the otg work and
    re-enabled on otg work completion. However if the job is already
    scheduled we have to undo the effect of disable_irq int order to
    balance the IRQ disable-depth value.
    
    Fixes: be6b0c1bd0be ("usb: chipidea: using one inline function to cover queue work operations")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1a2fdc257d7321b08ab379ebe8d2a6fd991d544e
Author: He Zhe <zhe.he@windriver.com>
Date:   Fri Aug 17 22:42:28 2018 +0800

    kgdboc: Passing ekgdboc to command line causes panic
    
    commit 1bd54d851f50dea6af30c3e6ff4f3e9aab5558f9 upstream.
    
    kgdboc_option_setup does not check input argument before passing it
    to strlen. The argument would be a NULL pointer if "ekgdboc", without
    its value, is set in command line and thus cause the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffff8fbbb620 error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.18-rc8+ #1
    [    0.000000] RIP: 0010:strlen+0x0/0x20
    ...
    [    0.000000] Call Trace
    [    0.000000]  ? kgdboc_option_setup+0x9/0xa0
    [    0.000000]  ? kgdboc_early_init+0x6/0x1b
    [    0.000000]  ? do_early_param+0x4d/0x82
    [    0.000000]  ? parse_args+0x212/0x330
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_options+0x20/0x23
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_param+0x2d/0x39
    [    0.000000]  ? setup_arch+0x2f7/0xbf4
    [    0.000000]  ? start_kernel+0x5e/0x4c2
    [    0.000000]  ? load_ucode_bsp+0x113/0x12f
    [    0.000000]  ? secondary_startup_64+0xa5/0xb0
    
    This patch adds a check to prevent the panic.
    
    Cc: jason.wessel@windriver.com
    Cc: gregkh@linuxfoundation.org
    Cc: jslaby@suse.com
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1ea453b05cdbfa2ffbc21ec137e4286da3db6143
Author: Stefan Nuernberger <snu@amazon.com>
Date:   Mon Sep 17 19:46:53 2018 +0200

    net/ipv4: defensive cipso option parsing
    
    commit 076ed3da0c9b2f88d9157dbe7044a45641ae369e upstream.
    
    commit 40413955ee26 ("Cipso: cipso_v4_optptr enter infinite loop") fixed
    a possible infinite loop in the IP option parsing of CIPSO. The fix
    assumes that ip_options_compile filtered out all zero length options and
    that no other one-byte options beside IPOPT_END and IPOPT_NOOP exist.
    While this assumption currently holds true, add explicit checks for zero
    length and invalid length options to be safe for the future. Even though
    ip_options_compile should have validated the options, the introduction of
    new one-byte options can still confuse this code without the additional
    checks.
    
    Signed-off-by: Stefan Nuernberger <snu@amazon.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Simon Veith <sveith@amazon.de>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f062bca875e2062312e5893120f5fd0692b2117a
Author: yujuan.qi <yujuan.qi@mediatek.com>
Date:   Mon Jul 31 11:23:01 2017 +0800

    Cipso: cipso_v4_optptr enter infinite loop
    
    commit 40413955ee265a5e42f710940ec78f5450d49149 upstream.
    
    in for(),if((optlen > 0) && (optptr[1] == 0)), enter infinite loop.
    
    Test: receive a packet which the ip length > 20 and the first byte of ip option is 0, produce this issue
    
    Signed-off-by: yujuan.qi <yujuan.qi@mediatek.com>
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 89aa01ccfc7c651335fadd9ffb4728dc8cd29925
Author: Paul Moore <pmoore@redhat.com>
Date:   Wed Feb 11 14:46:37 2015 -0500

    cipso: don't use IPCB() to locate the CIPSO IP option
    
    commit 04f81f0154e4bf002be6f4d85668ce1257efa4d9 upstream.
    
    Using the IPCB() macro to get the IPv4 options is convenient, but
    unfortunately NetLabel often needs to examine the CIPSO option outside
    of the scope of the IP layer in the stack.  While historically IPCB()
    worked above the IP layer, due to the inclusion of the inet_skb_param
    struct at the head of the {tcp,udp}_skb_cb structs, recent commit
    971f10ec ("tcp: better TCP_SKB_CB layout to reduce cache line misses")
    reordered the tcp_skb_cb struct and invalidated this IPCB() trick.
    
    This patch fixes the problem by creating a new function,
    cipso_v4_optptr(), which locates the CIPSO option inside the IP header
    without calling IPCB().  Unfortunately, this isn't as fast as a simple
    lookup so some additional tweaks were made to limit the use of this
    new function.
    
    Reported-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Paul Moore <pmoore@redhat.com>
    Tested-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9439c89c7e771fae1533c02f257ef9befab0a0b8
Author: Lukas Wunner <lukas@wunner.de>
Date:   Tue Sep 4 12:34:18 2018 -0500

    PCI/ASPM: Fix link_state teardown on device removal
    
    commit aeae4f3e5c38d47bdaef50446dc0ec857307df68 upstream.
    
    Upon removal of the last device on a bus, the link_state of the bridge
    leading to that bus is sought to be torn down by having pci_stop_dev()
    call pcie_aspm_exit_link_state().
    
    When ASPM was originally introduced by commit 7d715a6c1ae5 ("PCI: add
    PCI Express ASPM support"), it determined whether the device being
    removed is the last one by calling list_empty() on the bridge's
    subordinate devices list.  That didn't work because the device is only
    removed from the list slightly later in pci_destroy_dev().
    
    Commit 3419c75e15f8 ("PCI: properly clean up ASPM link state on device
    remove") attempted to fix it by calling list_is_last(), but that's not
    correct either because it checks whether the device is at the *end* of
    the list, not whether it's the last one *left* in the list.  If the user
    removes the device which happens to be at the end of the list via sysfs
    but other devices are preceding the device in the list, the link_state
    is torn down prematurely.
    
    The real fix is to move the invocation of pcie_aspm_exit_link_state() to
    pci_destroy_dev() and reinstate the call to list_empty().  Remove a
    duplicate check for dev->bus->self because pcie_aspm_exit_link_state()
    already contains an identical check.
    
    Fixes: 7d715a6c1ae5 ("PCI: add PCI Express ASPM support")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Shaohua Li <shaohua.li@intel.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 36926c56643116e09aa1359db84a63d15d00ee7c
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Thu Jun 28 12:20:33 2018 -0400

    media: tvp5150: fix width alignment during set_selection()
    
    commit bd24db04101f45a9c1d874fe21b0c7eab7bcadec upstream.
    
    The driver ignored the width alignment which exists due to the UYVY
    colorspace format. Fix the width alignment and make use of the the
    provided v4l2 helper function to set the width, height and all
    alignments in one.
    
    Fixes: 963ddc63e20d ("[media] media: tvp5150: Add cropping support")
    
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b27350ae52a3b6a2ce9635c6634026ab1d385f8c
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 22:46:29 2018 -0400

    media: em28xx: make v4l2-compliance happier by starting sequence on zero
    
    commit afeaade90db4c5dab93f326d9582be1d5954a198 upstream.
    
    The v4l2-compliance tool complains if a video doesn't start
    with a zero sequence number.
    
    While this shouldn't cause any real problem for apps, let's
    make it happier, in order to better check the v4l2-compliance
    differences before and after patchsets.
    
    This is actually an old issue. It is there since at least its
    videobuf2 conversion, e. g. changeset 3829fadc461 ("[media]
    em28xx: convert to videobuf2"), if VB1 wouldn't suffer from
    the same issue.
    
    Fixes: d3829fadc461 ("[media] em28xx: convert to videobuf2")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d44ade4e3264d8bd7bc9790e03fba77d59839aac
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Fri Sep 14 00:20:21 2018 -0400

    media: em28xx: fix input name for Terratec AV 350
    
    commit 15644bfa195bd166d0a5ed76ae2d587f719c3dac upstream.
    
    Instead of using a register value, use an AMUX name, as otherwise
    VIDIOC_G_AUDIO would fail.
    
    Fixes: 766ed64de554 ("V4L/DVB (11827): Add support for Terratec Grabster AV350")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 72aa19d7af484538dc30ed1f1842f69a0fe16a36
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 23:22:40 2018 -0400

    media: em28xx: use a default format if TRY_FMT fails
    
    commit f823ce2a1202d47110a7ef86b65839f0be8adc38 upstream.
    
    Follow the V4L2 spec, as warned by v4l2-compliance:
    
            warn: v4l2-test-formats.cpp(732): TRY_FMT cannot handle an invalid pixelformat.
            warn: v4l2-test-formats.cpp(733): This may or may not be a problem. For more information see:
    
    warn: v4l2-test-formats.cpp(734): http://www.mail-archive.com/linux-media@vger.kernel.org/msg56550.html
    
    Fixes: bddcf63313c6 ("V4L/DVB (9927): em28xx: use a more standard way to specify video formats")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8ae035e0b91e17051c1667d0e33ea0d2db340ea5
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Mon Sep 17 17:36:06 2018 +0200

    s390/qeth: invoke softirqs after napi_schedule()
    
    commit 4d19db777a2f32c9b76f6fd517ed8960576cb43e upstream.
    
    Calling napi_schedule() from process context does not ensure that the
    NET_RX softirq is run in a timely fashion. So trigger it manually.
    
    This is no big issue with current code. A call to ndo_open() is usually
    followed by a ndo_set_rx_mode() call, and for qeth this contains a
    spin_unlock_bh(). Except for OSN, where qeth_l2_set_rx_mode() bails out
    early.
    Nevertheless it's best to not depend on this behaviour, and just fix
    the issue at its source like all other drivers do. For instance see
    commit 83a0c6e58901 ("i40e: Invoke softirqs after napi_reschedule").
    
    Fixes: a1c3ed4c9ca0 ("qeth: NAPI support for l2 and l3 discipline")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1888705c8591c012e9064c8fac2df3c76a6a5e33
Author: Tomasz Figa <tomasz.figa@gmail.com>
Date:   Tue Jul 17 18:05:07 2018 +0200

    power: supply: max8998-charger: Fix platform data retrieval
    
    commit cb90a2c6f77fe9b43d1e3f759bb2f13fe7fa1811 upstream.
    
    Since the max8998 MFD driver supports instantiation by DT, platform data
    retrieval is handled in MFD probe and cell drivers should get use
    the pdata field of max8998_dev struct to obtain them.
    
    Fixes: ee999fb3f17f ("mfd: max8998: Add support for Device Tree")
    Signed-off-by: Tomasz Figa <tomasz.figa@gmail.com>
    Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1426ccc812ce4c94dc47b6d1fddbcb8ee03d794e
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu Sep 13 11:28:01 2018 +0200

    signal/GenWQE: Fix sending of SIGKILL
    
    commit 0ab93e9c99f8208c0a1a7b7170c827936268c996 upstream.
    
    The genweq_add_file and genwqe_del_file by caching current without
    using reference counting embed the assumption that a file descriptor
    will never be passed from one process to another.  It even embeds the
    assumption that the the thread that opened the file will be in
    existence when the process terminates.   Neither of which are
    guaranteed to be true.
    
    Therefore replace caching the task_struct of the opener with
    pid of the openers thread group id.  All the knowledge of the
    opener is used for is as the target of SIGKILL and a SIGKILL
    will kill the entire process group.
    
    Rename genwqe_force_sig to genwqe_terminate, remove it's unncessary
    signal argument, update it's ownly caller, and use kill_pid
    instead of force_sig.
    
    The work force_sig does in changing signal handling state is not
    relevant to SIGKILL sent as SEND_SIG_PRIV.  The exact same processess
    will be killed just with less work, and less confusion.  The work done
    by force_sig is really only needed for handling syncrhonous
    exceptions.
    
    It will still be possible to cause genwqe_device_remove to wait
    8 seconds by passing a file descriptor to another process but
    the possible user after free is fixed.
    
    Fixes: eaf4722d4645 ("GenWQE Character device and DDCB queue")
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Frank Haverkamp <haver@linux.vnet.ibm.com>
    Cc: Joerg-Stephan Vogt <jsvogt@de.ibm.com>
    Cc: Michael Jung <mijung@gmx.net>
    Cc: Michael Ruettger <michael@ibmra.de>
    Cc: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
    Cc: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Cc: Eberhard S. Amann <esa@linux.vnet.ibm.com>
    Cc: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
    Cc: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3823a77a4722105560cf23ede1645ae0b2be5882
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Tue Sep 11 10:18:21 2018 -0700

    scsi: qla2xxx: shutdown chip if reset fail
    
    commit 1e4ac5d6fe0a4af17e4b6251b884485832bf75a3 upstream.
    
    If chip unable to fully initialize, use full shutdown sequence to clear out
    any stale FW state.
    
    Fixes: e315cd28b9ef ("[SCSI] qla2xxx: Code changes for qla data structure refactoring")
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e04b05d5c246805037c78cf51ce057e7d9263c91
Author: Himanshu Madhani <himanshu.madhani@cavium.com>
Date:   Fri Aug 31 11:24:27 2018 -0700

    scsi: qla2xxx: Fix incorrect port speed being set for FC adapters
    
    commit 4c1458df9635c7e3ced155f594d2e7dfd7254e21 upstream.
    
    Fixes: 6246b8a1d26c7c ("[SCSI] qla2xxx: Enhancements to support ISP83xx.")
    Fixes: 1bb395485160d2 ("qla2xxx: Correct iiDMA-update calling conventions.")
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f71b695346d83cf05c0ac8309b0bd112bef47504
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Sep 3 20:02:46 2018 +0200

    signal: Always deliver the kernel's SIGKILL and SIGSTOP to a pid namespace init
    
    commit 3597dfe01d12f570bc739da67f857fd222a3ea66 upstream.
    
    Instead of playing whack-a-mole and changing SEND_SIG_PRIV to
    SEND_SIG_FORCED throughout the kernel to ensure a pid namespace init
    gets signals sent by the kernel, stop allowing a pid namespace init to
    ignore SIGKILL or SIGSTOP sent by the kernel.  A pid namespace init is
    only supposed to be able to ignore signals sent from itself and
    children with SIG_DFL.
    
    Fixes: 921cf9f63089 ("signals: protect cinit from unblocked SIG_DFL signals")
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e965c532eda64355e54cf41e89a84b9aa68b82b5
Author: Nadav Amit <namit@vmware.com>
Date:   Mon Jun 4 09:47:13 2018 -0400

    media: uvcvideo: Fix uvc_alloc_entity() allocation alignment
    
    commit 89dd34caf73e28018c58cd193751e41b1f8bdc56 upstream.
    
    The use of ALIGN() in uvc_alloc_entity() is incorrect, since the size of
    (entity->pads) is not a power of two. As a stop-gap, until a better
    solution is adapted, use roundup() instead.
    
    Found by a static assertion. Compile-tested only.
    
    Fixes: 4ffc2d89f38a ("uvcvideo: Register subdevices for each entity")
    
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 26078a46ce4bf1dcc90337a649ab5e4b4cd6509a
Author: He Zhe <zhe.he@windriver.com>
Date:   Tue Aug 14 23:33:42 2018 +0800

    x86/corruption-check: Fix panic in memory_corruption_check() when boot option without value is provided
    
    commit ccde460b9ae5c2bd5e4742af0a7f623c2daad566 upstream.
    
    memory_corruption_check[{_period|_size}]()'s handlers do not check input
    argument before passing it to kstrtoul() or simple_strtoull(). The argument
    would be a NULL pointer if each of the kernel parameters, without its
    value, is set in command line and thus cause the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffff73587c22 error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.18-rc8+ #2
    [    0.000000] RIP: 0010:kstrtoull+0x2/0x10
    ...
    [    0.000000] Call Trace
    [    0.000000]  ? set_corruption_check+0x21/0x49
    [    0.000000]  ? do_early_param+0x4d/0x82
    [    0.000000]  ? parse_args+0x212/0x330
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_options+0x20/0x23
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_param+0x2d/0x39
    [    0.000000]  ? setup_arch+0x2f7/0xbf4
    [    0.000000]  ? start_kernel+0x5e/0x4c2
    [    0.000000]  ? load_ucode_bsp+0x113/0x12f
    [    0.000000]  ? secondary_startup_64+0xa5/0xb0
    
    This patch adds checks to prevent the panic.
    
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: gregkh@linuxfoundation.org
    Cc: kstewart@linuxfoundation.org
    Cc: pombredanne@nexb.com
    Link: http://lkml.kernel.org/r/1534260823-87917-1-git-send-email-zhe.he@windriver.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc7b9c6c0e8ec587371e892bbca249dd095c7e3d
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Sep 5 12:02:15 2018 +0200

    ARM: dts: exynos: Disable pull control for MAX8997 interrupts on Origen
    
    commit f5e758b8358f6c27e8a351ddf0b441a64cdabb94 upstream.
    
    PMIC_IRQB and PMIC_KEYINB lines on Exynos4210-based Origen board have
    external pull-up resistors, so disable any pull control for those lines
    in respective pin controller node. This fixes support for MAX8997
    interrupts and enables operation of wakeup from MAX8997 RTC alarm.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: 17419726aaa1 ("ARM: dts: add max8997 device node for exynos4210-origen board")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    [bwh: Backported to 3.16:
     - Use literal 0 instead of EXYNOS_PIN_PULL_NONE
     - Adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 41b7e2691618172b5d3d7c98c3a1ffe8163a5360
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 14 12:07:48 2018 +0300

    libertas_tf: prevent underflow in process_cmdrequest()
    
    commit 3348ef6a6a126706d6a73ed40c18d8033df72783 upstream.
    
    If recvlength is less than MESSAGE_HEADER_LEN (4) we would end up
    corrupting memory.
    
    Fixes: c305a19a0d0a ("libertas_tf: usb specific functions")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    [bwh: Backported to 3.16: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 43977b8828f6634dbcd2e24568557f81b30bebd2
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Tue Aug 28 11:31:18 2018 +0200

    cpupower: remove stringop-truncation waring
    
    commit 8a7e2d2ea080d10a189a1d611344b0330468ebc3 upstream.
    
    The strncpy doesn't null terminate the string because the size is too
    short by one byte.
    
    parse.c: In function ‘prepare_default_config’:
    parse.c:148:2: warning: ‘strncpy’ output truncated before terminating
        nul copying 8 bytes from a string of the same length
        [-Wstringop-truncation]
      strncpy(config->governor, "ondemand", 8);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    The normal method of passing the length of the destination buffer works
    correctly here.
    
    Fixes: 7fe2f6399a84 ("cpupowerutils - cpufrequtils extended with quite some features")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e4d314cbe55e5a376a8ec2e356108b6c4eda8c55
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Wed Nov 9 10:43:05 2016 +0100

    sparc32: Fix inverted invalid_frame_pointer checks on sigreturns
    
    commit 07b5ab3f71d318e52c18cc3b73c1d44c908aacfa upstream.
    
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ce8962defa61ffe472b76ae6da8269a11cdc69b5
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Nov 5 09:35:44 2018 -0500

    media: v4l: event: Add subscription to list before calling "add" operation
    
    commit 92539d3eda2c090b382699bbb896d4b54e9bdece upstream.
    
    Patch ad608fbcf166 changed how events were subscribed to address an issue
    elsewhere. As a side effect of that change, the "add" callback was called
    before the event subscription was added to the list of subscribed events,
    causing the first event queued by the add callback (and possibly other
    events arriving soon afterwards) to be lost.
    
    Fix this by adding the subscription to the list before calling the "add"
    callback, and clean up afterwards if that fails.
    
    Fixes: ad608fbcf166 ("media: v4l: event: Prevent freeing event subscriptions while accessed")
    
    Reported-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Tested-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
    Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Tested-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 44275bd972a5fd6c624e69da1b461579cab71412
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jun 5 12:36:30 2018 +0300

    staging: comedi: quatech_daqp_cs: fix no-op loop daqp_ao_insn_write()
    
    commit 1376b0a2160319125c3a2822e8c09bd283cd8141 upstream.
    
    There is a '>' vs '<' typo so this loop is a no-op.
    
    Fixes: d35dcc89fc93 ("staging: comedi: quatech_daqp_cs: fix daqp_ao_insn_write()")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0c86a77d4d1a61e1bac831626947d401f1fa20af
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Oct 5 14:22:52 2015 -0700

    staging: comedi: quatech_daqp_cs: use comedi_timeout() in ao (*insn_write)
    
    commit e031642eccc040648b09cfc7d632e2e8d0b6f94f upstream.
    
    The data link between the D/A data port and the D/A converter is a serial
    link. The serial link requires about 8ms to complete a transfer. Use the
    comedi_timeout() helper to ensure that there is not a previous transfer
    still happening before trying to write new data to the channel.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [ija: Backported to 3.16: No 'readback' member in subdevice.]
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 231c7109349f097c769e23e5a24e1cb861283ecf
Author: H Hartley Sweeten <hsweeten@visionengravers.com>
Date:   Mon Aug 25 16:04:33 2014 -0700

    staging: comedi: quatech_daqp_cs: fix bug in daqp_ao_insn_write()
    
    commit e024181b02ed6b833358bede3f2d0c52cb5fb6bc upstream.
    
    The comedi core expects (*insn_write) functions to write insn->n values
    to the hardware and return the number of values written.
    
    Currently, this function only writes the first value. Fix it to work
    like the core expects.
    
    Signed-off-by: H Hartley Sweeten <hsweeten@visionengravers.com>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7e7bf2d418948cf549cb62a52f51a748681587dd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jul 26 10:13:22 2018 +0200

    turn off -Wattribute-alias
    
    Starting with gcc-8.1, we get a warning about all system call definitions,
    which use an alias between functions with incompatible prototypes, e.g.:
    
    In file included from ../mm/process_vm_access.c:19:
    ../include/linux/syscalls.h:211:18: warning: 'sys_process_vm_readv' alias between functions of incompatible types 'long int(pid_t,  const struct iovec *, long unsigned int,  const struct iovec *, long unsigned int,  long unsigned int)' {aka 'long int(int,  const struct iovec *, long unsigned int,  const struct iovec *, long unsigned int,  long unsigned int)'} and 'long int(long int,  long int,  long int,  long int,  long int,  long int)' [-Wattribute-alias]
      asmlinkage long sys##name(__MAP(x,__SC_DECL,__VA_ARGS__)) \
                      ^~~
    ../include/linux/syscalls.h:207:2: note: in expansion of macro '__SYSCALL_DEFINEx'
      __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
      ^~~~~~~~~~~~~~~~~
    ../include/linux/syscalls.h:201:36: note: in expansion of macro 'SYSCALL_DEFINEx'
     #define SYSCALL_DEFINE6(name, ...) SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)
                                        ^~~~~~~~~~~~~~~
    ../mm/process_vm_access.c:300:1: note: in expansion of macro 'SYSCALL_DEFINE6'
     SYSCALL_DEFINE6(process_vm_readv, pid_t, pid, const struct iovec __user *, lvec,
     ^~~~~~~~~~~~~~~
    ../include/linux/syscalls.h:215:18: note: aliased declaration here
      asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__)) \
                      ^~~
    ../include/linux/syscalls.h:207:2: note: in expansion of macro '__SYSCALL_DEFINEx'
      __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
      ^~~~~~~~~~~~~~~~~
    ../include/linux/syscalls.h:201:36: note: in expansion of macro 'SYSCALL_DEFINEx'
     #define SYSCALL_DEFINE6(name, ...) SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)
                                        ^~~~~~~~~~~~~~~
    ../mm/process_vm_access.c:300:1: note: in expansion of macro 'SYSCALL_DEFINE6'
     SYSCALL_DEFINE6(process_vm_readv, pid_t, pid, const struct iovec __user *, lvec,
    
    This is really noisy and does not indicate a real problem. In the latest
    mainline kernel, this was addressed by commit bee20031772a ("disable
    -Wattribute-alias warning for SYSCALL_DEFINEx()"), which seems too invasive
    to backport.
    
    This takes a much simpler approach and just disables the warning across the
    kernel.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Johannes Pointner <h4nn35.work@gmail.com>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ab11350cad78f8239bc5080bbc51bc08b22494f1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 12 19:25:47 2017 -0700

    disable new gcc-7.1.1 warnings for now
    
    commit bd664f6b3e376a8ef4990f87d08271cc2d01ba9a upstream.
    
    I made the mistake of upgrading my desktop to the new Fedora 26 that
    comes with gcc-7.1.1.
    
    There's nothing wrong per se that I've noticed, but I now have 1500
    lines of warnings, mostly from the new format-truncation warning
    triggering all over the tree.
    
    We use 'snprintf()' and friends in a lot of places, and often know that
    the numbers are fairly small (ie a controller index or similar), but gcc
    doesn't know that, and sees an 'int', and thinks that it could be some
    huge number.  And then complains when our buffers are not able to fit
    the name for the ten millionth controller.
    
    These warnings aren't necessarily bad per se, and we probably want to
    look through them subsystem by subsystem, but at least during the merge
    window they just mean that I can't even see if somebody is introducing
    any *real* problems when I pull.
    
    So warnings disabled for now.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f8f9f872097ec376c081d02121deb563085ef4d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jul 26 10:13:23 2018 +0200

    ARM: fix put_user() for gcc-8
    
    Building kernels before linux-4.7 with gcc-8 results in many build failures
    when gcc triggers a check that was meant to catch broken compilers:
    
    /tmp/ccCGMQmS.s:648: Error: .err encountered
    
    According to the discussion in the gcc bugzilla, a local "register
    asm()" variable is still supposed to be the correct way to force an
    inline assembly to use a particular register, but marking it 'const'
    lets the compiler do optimizations that break that, i.e the compiler is
    free to treat the variable as either 'const' or 'register' in that case.
    
    Upstream commit 9f73bd8bb445 ("ARM: uaccess: remove put_user() code
    duplication") fixed this problem in linux-4.8 as part of a larger change,
    but seems a little too big to be backported to 4.4.
    
    Let's take the simplest fix and change only the one broken line in the
    same way as newer kernels.
    
    Suggested-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=85745
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=86673
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Johannes Pointner <h4nn35.work@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2dd5705f361a1335f067e56f69a3994fcf9e98f4
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Aug 21 17:37:55 2018 +0200

    x86/pae: use 64 bit atomic xchg function in native_ptep_get_and_clear
    
    commit b2d7a075a1ccef2fb321d595802190c8e9b39004 upstream.
    
    Using only 32-bit writes for the pte will result in an intermediate
    L1TF vulnerable PTE. When running as a Xen PV guest this will at once
    switch the guest to shadow mode resulting in a loss of performance.
    
    Use arch_atomic64_xchg() instead which will perform the requested
    operation atomically with all 64 bits.
    
    Some performance considerations according to:
    
    https://software.intel.com/sites/default/files/managed/ad/dc/Intel-Xeon-Scalable-Processor-throughput-latency.pdf
    
    The main number should be the latency, as there is no tight loop around
    native_ptep_get_and_clear().
    
    "lock cmpxchg8b" has a latency of 20 cycles, while "lock xchg" (with a
    memory operand) isn't mentioned in that document. "lock xadd" (with xadd
    having 3 cycles less latency than xchg) has a latency of 11, so we can
    assume a latency of 14 for "lock xchg".
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Tested-by: Jason Andryuk <jandryuk@gmail.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    [bwh: Backported to 3.16: Use atomic64_cxhg()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5b0d17113ec0af02a7aca9af0229e01cbe6c33b9
Author: Ingo Molnar <mingo@kernel.org>
Date:   Mon Nov 13 07:15:41 2017 +0100

    timer/debug: Change /proc/timer_list from 0444 to 0400
    
    commit 8e7df2b5b7f245c9bd11064712db5cb69044a362 upstream.
    
    While it uses %pK, there's still few reasons to read this file
    as non-root.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 254610c85c66d4df64c89873eb6eb9b8461f0ded
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Fri Feb 1 02:10:36 2019 +0000

    ipv6: Fix another sparse warning on rt6i_node
    
    Commit 0933273ce750 "ipv6: fix sparse warning on rt6i_node" fixed some
    sparse warnings in ip6_fib.c, but introduced a new one in
    fib6_update_sernum() (which was removed before the corresponding
    upstream commit).
    
    fib6_update_sernum() is called in a RCU read-side section, so use
    rcu_dereference() to read rt6_info::rt6i_node.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 610fa21454f682a1de955af0d494a391c7d7f207
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Jan 2 17:33:46 2019 +0000

    s390/dasd: Restore a necessary cast
    
    Commit c3925a3da617 "s390/dasd: fix IO error for newly defined
    devices" removed a cast of dasd_device::private which was not
    necessary in the upstream code.  However, in 3.16 the type of
    dasd_device::private is char *, so the cast is still needed.
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e044fab1189da13d60fb92a26bc0af1b53d64bfc
Author: Chen Gang <gang.chen@sunrus.com.cn>
Date:   Thu Jan 1 22:27:32 2015 +0800

    s390/timex: fix get_tod_clock_ext() inline assembly
    
    commit e38f97813302065fbc9c9eab5c1a94dc021d71e2 upstream.
    
    For C language, it treats array parameter as a pointer, so sizeof for an
    array parameter is equal to sizeof for a pointer, which causes compiler
    warning (with allmodconfig by gcc 5):
    
      ./arch/s390/include/asm/timex.h: In function 'get_tod_clock_ext':
      ./arch/s390/include/asm/timex.h:76:32: warning: 'sizeof' on array function parameter 'clk' will return size of 'char *' [-Wsizeof-array-argument]
        typedef struct { char _[sizeof(clk)]; } addrtype;
                                      ^
    Can use macro CLOCK_STORE_SIZE instead of all related hard code numbers,
    which also can avoid this warning. And also add a tab to CLOCK_TICK_RATE
    definition to match coding styles.
    
    [heiko.carstens@de.ibm.com]:
    Chen's patch actually fixes a bug within the get_tod_clock_ext() inline assembly
    where we incorrectly tell the compiler that only 8 bytes of memory get changed
    instead of 16 bytes.
    This would allow gcc to generate incorrect code. Right now this doesn't seem to
    be the case.
    Also slightly changed the patch a bit.
    - renamed CLOCK_STORE_SIZE to STORE_CLOCK_EXT_SIZE
    - changed get_tod_clock_ext() to receive a char pointer parameter
    
    Signed-off-by: Chen Gang <gang.chen.5i5j@gmail.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fe201363c7146ba2b22fa023ce08b1eae95bc534
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Jan 2 17:18:43 2019 +0000

    x86/boot: eboot.c: Include string function declarations
    
    The earliest boot code has its own string functions, since it can't
    use those included in the main kernel image.  Under some compiler
    versions eboot.c fails to include a suitable declaration, resulting in
    the warning:
    
       In file included from arch/x86/boot/compressed/eboot.c:287:0:
       arch/x86/boot/compressed/../../../../drivers/firmware/efi/efi-stub-helper.c: In function 'efi_relocate_kernel':
    >> arch/x86/boot/compressed/../../../../drivers/firmware/efi/efi-stub-helper.c:566:2: warning: implicit declaration of function 'memcpy'; did you mean 'memchr'? [-Wimplicit-function-declaration]
         memcpy((void *)new_addr, (void *)cur_image_addr, image_size);
         ^~~~~~
         memchr
    
    Include "../string.h" which provides the correct declarations.  This
    was done upstream as part of commit 393f203f5fd5 "x86_64: kasan: add
    interceptors for memset/memmove/memcpy functions".
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 46035d00aa11712b83081ee514f46351a2deeac3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Aug 31 20:08:16 2017 +0200

    x86/eisa: Add missing include
    
    commit ef1d4deab953ecb1dfcf9f167043bda8b3f14a11 upstream.
    
    The seperation of the EISA init missed to include linux/io.h which breaks
    the build with some special configurations.
    
    Reported-by: Ingo Molnar <mingo@kernel.org>
    Fixes: f7eaf6e00fd5 ("x86/boot: Move EISA setup to a separate file")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c253374627992ffb7b5d79260843932e7ba486f9
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Mon Nov 30 11:10:33 2015 +0100

    x86/mm: Fix regression with huge pages on PAE
    
    commit 70f1528747651b20c7769d3516ade369f9963237 upstream.
    
    Recent PAT patchset has caused issue on 32-bit PAE machines:
    
      page:eea45000 count:0 mapcount:-128 mapping:  (null) index:0x0 flags: 0x40000000()
      page dumped because: VM_BUG_ON_PAGE(page_mapcount(page) < 0)
      ------------[ cut here ]------------
      kernel BUG at /home/build/linux-boris/mm/huge_memory.c:1485!
      invalid opcode: 0000 [#1] SMP
      [...]
      Call Trace:
       unmap_single_vma
       ? __wake_up
       unmap_vmas
       unmap_region
       do_munmap
       vm_munmap
       SyS_munmap
       do_fast_syscall_32
       ? __do_page_fault
       sysenter_past_esp
      Code: ...
      EIP: [<c11bde80>] zap_huge_pmd+0x240/0x260 SS:ESP 0068:f6459d98
    
    The problem is in pmd_pfn_mask() and pmd_flags_mask(). These
    helpers use PMD_PAGE_MASK to calculate resulting mask.
    PMD_PAGE_MASK is 'unsigned long', not 'unsigned long long' as
    phys_addr_t is on 32-bit PAE (ARCH_PHYS_ADDR_T_64BIT). As a
    result, the upper bits of resulting mask get truncated.
    
    pud_pfn_mask() and pud_flags_mask() aren't problematic since we
    don't have PUD page table level on 32-bit systems, but it's
    reasonable to keep them consistent with PMD counterpart.
    
    Introduce PHYSICAL_PMD_PAGE_MASK and PHYSICAL_PUD_PAGE_MASK in
    addition to existing PHYSICAL_PAGE_MASK and reworks helpers to
    use them.
    
    Reported-and-Tested-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    [ Fix -Woverflow warnings from the realmode code. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jürgen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: elliott@hpe.com
    Cc: konrad.wilk@oracle.com
    Cc: linux-mm <linux-mm@kvack.org>
    Fixes: f70abb0fc3da ("x86/asm: Fix pud/pmd interfaces to handle large PAT bit")
    Link: http://lkml.kernel.org/r/1448878233-11390-2-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0c869bcdf48135c03ebb0c2cd250a10187af6772
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jul 17 16:10:06 2017 -0500

    x86/mm: Simplify p[g4um]d_page() macros
    
    commit fd7e315988b784509ba3f1b42f539bd0b1fca9bb upstream.
    
    Create a pgd_pfn() macro similar to the p[4um]d_pfn() macros and then
    use the p[g4um]d_pfn() macros in the p[g4um]d_page() macros instead of
    duplicating the code.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Larry Woodman <lwoodman@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Toshimitsu Kani <toshi.kani@hpe.com>
    Cc: kasan-dev@googlegroups.com
    Cc: kvm@vger.kernel.org
    Cc: linux-arch@vger.kernel.org
    Cc: linux-doc@vger.kernel.org
    Cc: linux-efi@vger.kernel.org
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/e61eb533a6d0aac941db2723d8aa63ef6b882dee.1500319216.git.thomas.lendacky@amd.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [Backported to 4.9 stable by AK, suggested by Michael Hocko]
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Wenkuan Wang <Wenkuan.Wang@windriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 48b894a9bf903b616e164dccbea5d007750b018c
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Thu Sep 17 12:24:17 2015 -0600

    x86/asm: Fix pud/pmd interfaces to handle large PAT bit
    
    commit f70abb0fc3da1b2945c92751ccda2744081bf2b7 upstream.
    
    Now that we have pud/pmd mask interfaces, which handle pfn & flags
    mask properly for the large PAT bit.
    
    Fix pud/pmd pfn & flags interfaces by replacing PTE_PFN_MASK and
    PTE_FLAGS_MASK with the pud/pmd mask interfaces.
    
    Suggested-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Konrad Wilk <konrad.wilk@oracle.com>
    Cc: Robert Elliot <elliott@hpe.com>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/1442514264-12475-5-git-send-email-toshi.kani@hpe.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Wenkuan Wang <Wenkuan.Wang@windriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 45ddb795aecf24a80843e6a61b8ddcdaf3fbb21e
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Thu Sep 17 12:24:15 2015 -0600

    x86/asm: Move PUD_PAGE macros to page_types.h
    
    commit 832102671855f73962e7a04fdafd48b9385ea5c6 upstream.
    
    PUD_SHIFT is defined according to a given kernel configuration, which
    allows it be commonly used by any x86 kernels.  However, PUD_PAGE_SIZE
    and PUD_PAGE_MASK, which are set from PUD_SHIFT, are defined in
    page_64_types.h, which can be used by 64-bit kernel only.
    
    Move PUD_PAGE_SIZE and PUD_PAGE_MASK to page_types.h so that they can
    be used by any x86 kernels as well.
    
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Konrad Wilk <konrad.wilk@oracle.com>
    Cc: Robert Elliot <elliott@hpe.com>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/1442514264-12475-3-git-send-email-toshi.kani@hpe.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Wenkuan Wang <Wenkuan.Wang@windriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d680c3272339977c54b6fe4d02a654e2b04225da
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Thu Sep 17 12:24:16 2015 -0600

    x86/asm: Add pud/pmd mask interfaces to handle large PAT bit
    
    commit 4be4c1fb9a754b100466ebaec50f825be0b2050b upstream.
    
    The PAT bit gets relocated to bit 12 when PUD and PMD mappings are
    used.  This bit 12, however, is not covered by PTE_FLAGS_MASK, which
    is used for masking pfn and flags for all levels.
    
    Add pud/pmd mask interfaces to handle pfn and flags properly by using
    P?D_PAGE_MASK when PUD/PMD mappings are used, i.e. PSE bit is set.
    
    Suggested-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Konrad Wilk <konrad.wilk@oracle.com>
    Cc: Robert Elliot <elliott@hpe.com>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/1442514264-12475-4-git-send-email-toshi.kani@hpe.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Wenkuan Wang <Wenkuan.Wang@windriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
