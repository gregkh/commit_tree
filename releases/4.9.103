commit aa4b4ace9ce02cf164e0982739e9565d6214cfa9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri May 25 16:13:16 2018 +0200

    Linux 4.9.103

commit 0c60045656488690b047aa535bc3c3328a544062
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 15 19:36:14 2018 +0000

    rtc: tx4939: avoid unintended sign extension on a 24 bit shift
    
    [ Upstream commit 347876ad47b9923ce26e686173bbf46581802ffa ]
    
    The shifting of buf[5] by 24 bits to the left will be promoted to
    a 32 bit signed int and then sign-extended to an unsigned long. If
    the top bit of buf[5] is set then all then all the upper bits sec
    end up as also being set because of the sign-extension. Fix this by
    casting buf[5] to an unsigned long before the shift.
    
    Detected by CoverityScan, CID#1465292 ("Unintended sign extension")
    
    Fixes: 0e1492330cd2 ("rtc: add rtc-tx4939 driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd6b3e0a66592a72914be1d38ba29f93804e3161
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Mar 8 23:27:31 2018 +0100

    rtc: hctosys: Ensure system time doesn't overflow time_t
    
    [ Upstream commit b3a5ac42ab18b7d1a8f2f072ca0ee76a3b754a43 ]
    
    On 32bit platforms, time_t is still a signed 32bit long. If it is
    overflowed, userspace and the kernel cant agree on the current system time.
    This causes multiple issues, in particular with systemd:
    https://github.com/systemd/systemd/issues/1143
    
    A good workaround is to simply avoid using hctosys which is something I
    greatly encourage as the time is better set by userspace.
    
    However, many distribution enable it and use systemd which is rendering the
    system unusable in case the RTC holds a date after 2038 (and more so after
    2106). Many drivers have workaround for this case and they should be
    eliminated so there is only one place left to fix when userspace is able to
    cope with dates after the 31bit overflow.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36ce931c4286f77c5f37b487514a59103a2308c4
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Wed Mar 28 20:14:05 2018 +0100

    rtc: snvs: Fix usage of snvs_rtc_enable
    
    [ Upstream commit 1485991c024603b2fb4ae77beb7a0d741128a48e ]
    
    commit 179a502f8c46 ("rtc: snvs: add Freescale rtc-snvs driver") introduces
    the SNVS RTC driver with a function snvs_rtc_enable().
    
    snvs_rtc_enable() can return an error on the enable path however this
    driver does not currently trap that failure on the probe() path and
    consequently if enabling the RTC fails we encounter a later error spinning
    forever in rtc_write_sync_lp().
    
    [   36.093481] [<c010d630>] (__irq_svc) from [<c0c2e9ec>] (_raw_spin_unlock_irqrestore+0x34/0x44)
    [   36.102122] [<c0c2e9ec>] (_raw_spin_unlock_irqrestore) from [<c072e32c>] (regmap_read+0x4c/0x5c)
    [   36.110938] [<c072e32c>] (regmap_read) from [<c085d0f4>] (rtc_write_sync_lp+0x6c/0x98)
    [   36.118881] [<c085d0f4>] (rtc_write_sync_lp) from [<c085d160>] (snvs_rtc_alarm_irq_enable+0x40/0x4c)
    [   36.128041] [<c085d160>] (snvs_rtc_alarm_irq_enable) from [<c08567b4>] (rtc_timer_do_work+0xd8/0x1a8)
    [   36.137291] [<c08567b4>] (rtc_timer_do_work) from [<c01441b8>] (process_one_work+0x28c/0x76c)
    [   36.145840] [<c01441b8>] (process_one_work) from [<c01446cc>] (worker_thread+0x34/0x58c)
    [   36.153961] [<c01446cc>] (worker_thread) from [<c014aee4>] (kthread+0x138/0x150)
    [   36.161388] [<c014aee4>] (kthread) from [<c0107e14>] (ret_from_fork+0x14/0x20)
    [   36.168635] rcu_sched kthread starved for 2602 jiffies! g496 c495 f0x2 RCU_GP_WAIT_FQS(3) ->state=0x0 ->cpu=0
    [   36.178564] rcu_sched       R  running task        0     8      2 0x00000000
    [   36.185664] [<c0c288b0>] (__schedule) from [<c0c29134>] (schedule+0x3c/0xa0)
    [   36.192739] [<c0c29134>] (schedule) from [<c0c2db80>] (schedule_timeout+0x78/0x4e0)
    [   36.200422] [<c0c2db80>] (schedule_timeout) from [<c01a7ab0>] (rcu_gp_kthread+0x648/0x1864)
    [   36.208800] [<c01a7ab0>] (rcu_gp_kthread) from [<c014aee4>] (kthread+0x138/0x150)
    [   36.216309] [<c014aee4>] (kthread) from [<c0107e14>] (ret_from_fork+0x14/0x20)
    
    This patch fixes by parsing the result of rtc_write_sync_lp() and
    propagating both in the probe and elsewhere. If the RTC doesn't start we
    don't proceed loading the driver and don't get into this loop mess later
    on.
    
    Fixes: 179a502f8c46 ("rtc: snvs: add Freescale rtc-snvs driver")
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Acked-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ac3103cd0dd2d67c2331377844dffd8b13c3ba6
Author: Vignesh R <vigneshr@ti.com>
Date:   Thu Feb 8 18:25:41 2018 +0530

    serial: 8250: Don't service RX FIFO if interrupts are disabled
    
    [ Upstream commit 2e9fe539108320820016f78ca7704a7342788380 ]
    
    Currently, data in RX FIFO is read based on UART_LSR register state even
    if RDI and RLSI interrupts are disabled in UART_IER register.
    This is because when IRQ handler is called due to TX FIFO empty event,
    RX FIFO is serviced based on UART_LSR register status instead of
    UART_IIR status. This defeats the purpose of disabling UART RX
    FIFO interrupts during throttling(see, omap_8250_throttle()) as IRQ
    handler continues to drain UART RX FIFO resulting in overflow of buffer
    at tty layer.
    Fix this by making sure that driver drains UART RX FIFO only when
    UART_IIR_RDI is set along with UART_LSR_BI or UART_LSR_DR bits.
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 561a4f4d9d4d0f71333ab53bc29a96b74edaedb2
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:29 2018 +0100

    serial: arc_uart: Fix out-of-bounds access through DT alias
    
    [ Upstream commit f9f5786987e81d166c60833edcb7d1836aa16944 ]
    
    The arc_uart_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Note that the array size is defined by a Kconfig symbol
    (CONFIG_SERIAL_ARC_NR_PORTS), so this can even be triggered using a
    legitimate DTB.
    
    Fixes: ea28fd56fcde69af ("serial/arc-uart: switch to devicetree based probing")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd777719e331432c74ecc75acbe653beb1d9180c
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:30 2018 +0100

    serial: fsl_lpuart: Fix out-of-bounds access through DT alias
    
    [ Upstream commit ffab87fdecc655cc676f8be8dd1a2c5e22bd6d47 ]
    
    The lpuart_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: c9e2e946fb0ba5d2 ("tty: serial: add Freescale lpuart driver support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a301f13f34b8359f4844b2961789afbfc10bd21d
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:31 2018 +0100

    serial: imx: Fix out-of-bounds access through serial port index
    
    [ Upstream commit 5673444821406dda5fc25e4b52aca419f8065a19 ]
    
    The imx_ports[] array is indexed using a value derived from the
    "serialN" alias in DT, or from platform data, which may lead to an
    out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: ff05967a07225ab6 ("serial/imx: add of_alias_get_id() reference back")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e876eae48736674bf2c5caa9c49566dffabb991
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:32 2018 +0100

    serial: mxs-auart: Fix out-of-bounds access through serial port index
    
    [ Upstream commit dd345a31bfdec350d2593e6de5964e55c7f19c76 ]
    
    The auart_port[] array is indexed using a value derived from the
    "serialN" alias in DT, or from platform data, which may lead to an
    out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: 1ea6607d4cdc9179 ("serial: mxs-auart: Allow device tree probing")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2803df3004f05ed6649e01cbf16224be0c845494
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:34 2018 +0100

    serial: samsung: Fix out-of-bounds access through serial port index
    
    [ Upstream commit 49ee23b71877831ac087d6083f6f397dc19c9664 ]
    
    The s3c24xx_serial_ports[] array is indexed using a value derived from
    the "serialN" alias in DT, or from an incrementing probe index, which
    may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Note that the array size is defined by a Kconfig symbol
    (CONFIG_SERIAL_SAMSUNG_UARTS), so this can even be triggered using
    a legitimate DTB or legitimate board code.
    
    Fixes: 13a9f6c64fdc55eb ("serial: samsung: Consider DT alias when probing ports")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cb84bd8720ebe445d0ef8976307b78894b93262
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Feb 23 14:38:37 2018 +0100

    serial: xuartps: Fix out-of-bounds access through DT alias
    
    [ Upstream commit e7d75e18d0fc3f7193b65282b651f980c778d935 ]
    
    The cdns_uart_port[] array is indexed using a value derived from the
    "serialN" alias in DT, which may lead to an out-of-bounds access.
    
    Fix this by adding a range check.
    
    Fixes: 928e9263492069ee ("tty: xuartps: Initialize ports according to aliases")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c36063750f3fcc7b22a0b301a8f78cde5fa5365
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jan 31 12:33:09 2018 -0500

    media: cx25821: prevent out-of-bounds read on array card
    
    [ Upstream commit 67300abdbe9f1717532aaf4e037222762716d0f6 ]
    
    Currently an out of range dev->nr is detected by just reporting the
    issue and later on an out-of-bounds read on array card occurs because
    of this. Fix this by checking the upper range of dev->nr with the size
    of array card (removes the hard coded size), move this check earlier
    and also exit with the error -ENOSYS to avoid the later out-of-bounds
    array read.
    
    Detected by CoverityScan, CID#711191 ("Out-of-bounds-read")
    
    Fixes: commit 02b20b0b4cde ("V4L/DVB (12730): Add conexant cx25821 driver")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    [hans.verkuil@cisco.com: %ld -> %zd]
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9639854bd3b82d8590e1888f80b6ca4bacc3465b
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Thu Feb 1 02:36:33 2018 -0500

    media: vivid: fix incorrect capabilities for radio
    
    [ Upstream commit 65243386f41d38460bfd4375d231a7c0346d0401 ]
    
    The vivid driver has two custom controls that change the behavior of RDS.
    Depending on the control setting the V4L2_CAP_READWRITE capability is toggled.
    However, after an earlier commit the capability was no longer set correctly.
    This is now fixed.
    
    Fixes: 9765a32cd8 ("vivid: set device_caps in video_device")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28ea156b65622edc8384d0688db8aeb206f2e48b
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Feb 6 03:02:23 2018 -0500

    media: vb2: Fix videobuf2 to map correct area
    
    [ Upstream commit d13a0139d7874a0577b5955d6eed895517d23b72 ]
    
    Fixes vb2_vmalloc_get_userptr() to ioremap correct area.
    Since the current code does ioremap the page address, if the offset > 0,
    it does not do ioremap the last page and results in kernel panic.
    
    This fixes to pass the size + offset to ioremap so that ioremap
    can map correct area. Also, this uses __pfn_to_phys() to get the physical
    address of given PFN.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reported-by: Takao Orito <orito.takao@socionext.com>
    Reported-by: Fumihiro ATSUMI <atsumi@infinitegra.co.jp>
    Reviewed-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07c41c408f32fceabcc4541d9d550333c427f7fc
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 16 16:52:15 2018 -0500

    media: s3c-camif: fix out-of-bounds array access
    
    [ Upstream commit a398e043637a4819a0e96467bfecaabf3224dd62 ]
    
    While experimenting with older compiler versions, I ran
    into a warning that no longer shows up on gcc-4.8 or newer:
    
    drivers/media/platform/s3c-camif/camif-capture.c: In function '__camif_subdev_try_format':
    drivers/media/platform/s3c-camif/camif-capture.c:1265:25: error: array subscript is below array bounds
    
    This is an off-by-one bug, leading to an access before the start of the
    array, while newer compilers silently assume this undefined behavior
    cannot happen and leave the loop at index 0 if no other entry matches.
    
    As Sylvester explains, we actually need to ensure that the
    value is within the range, so this reworks the loop to be
    easier to parse correctly, and an additional check to fall
    back on the first format value for any unexpected input.
    
    I found an existing gcc bug for it and added a reduced version
    of the function there.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=69249#c3
    Fixes: babde1c243b2 ("[media] V4L: Add driver for S3C24XX/S3C64XX SoC series camera interface")
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a2347ab98806576b7159740220021d4fbe80fdb
Author: Brad Love <brad@nextdimension.cc>
Date:   Tue Mar 6 14:15:37 2018 -0500

    media: cx23885: Override 888 ImpactVCBe crystal frequency
    
    [ Upstream commit 779c79d4b833ec646b0aed878da38edb45bbe156 ]
    
    Hauppauge produced a revision of ImpactVCBe using an 888,
    with a 25MHz crystal, instead of using the default third
    overtone 50Mhz crystal. This overrides that frequency so
    that the cx25840 is properly configured. Without the proper
    crystal setup the cx25840 cannot load the firmware or
    decode video.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40a8962a531db9823db2c091303357debed16c5b
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Feb 11 05:44:21 2018 -0500

    media: dmxdev: fix error code for invalid ioctls
    
    [ Upstream commit a145f64c6107d3aa5a7cec9f8977d04ac2a896c9 ]
    
    Returning -EINVAL when an ioctl is not implemented is a very
    bad idea, as it is hard to distinguish from other error
    contitions that an ioctl could lead. Replace it by its
    right error code: -ENOTTY.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 515702e0a90097344b9ec851501bb87074be47f5
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:48 2018 +0100

    clk: samsung: exynos3250: Fix PLL rates
    
    [ Upstream commit a8321e7887410a2b2e80ab89d1ef7b30562658ea ]
    
    Rates declared in PLL rate tables should match exactly rates calculated
    from PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    In this patch an erroneous P value for 74176002 output frequency is also
    corrected.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5637e4c95106da860472bbe528dff4c7c8b8d65
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:49 2018 +0100

    clk: samsung: exynos5250: Fix PLL rates
    
    [ Upstream commit 2ac051eeabaa411ef89ae7cd5bb8e60cb41ad780 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated
    from PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c762043010c19ebe3bc59ba7119234531929bb4
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:51 2018 +0100

    clk: samsung: exynos5433: Fix PLL rates
    
    [ Upstream commit ab0447845cffc0fd752df2ccd6b4e34006000ce4 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b287c3a10d8a993af3728664ce84f1ade62c3f2
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:50 2018 +0100

    clk: samsung: exynos5260: Fix PLL rates
    
    [ Upstream commit cdb68fbd4e7962be742c4f29475220c5bf28d8a5 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2434a0623bccd3c4bc68df79697fcb5e8ed1165a
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:52 2018 +0100

    clk: samsung: exynos7: Fix PLL rates
    
    [ Upstream commit 7e4db0c2836e892766565965207eee051c8037b9 ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2cc0c41a7ab54ac20cf04589a9f84aae0d28f30
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Feb 16 15:57:53 2018 +0100

    clk: samsung: s3c2410: Fix PLL rates
    
    [ Upstream commit 179db533c08431f509a3823077549773d519358b ]
    
    Rates declared in PLL rate tables should match exactly rates calculated from
    the PLL coefficients. If that is not the case, rate of the PLL's child clock
    might be set not as expected. For instance, if in the PLL rates table we have
    a 393216000 Hz entry and the real value as returned by the PLL's recalc_rate
    callback is 393216003, after setting PLL's clk rate to 393216000 clk_get_rate
    will return 393216003. If we now attempt to set rate of a PLL's child divider
    clock to 393216000/2 its rate will be 131072001, rather than 196608000.
    That is, the divider will be set to 3 instead of 2, because 393216003/2 is
    greater than 196608000.
    
    To fix this issue declared rates are changed to exactly match rates generated
    by the PLL, as calculated from the P, M, S, K coefficients.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Acked-by: Tomasz Figa <tomasz.figa@gmail.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1325a6c91a880e3aacb7a0acc3dfba3840361653
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Mon Mar 5 11:25:58 2018 +0800

    clk: rockchip: Prevent calculating mmc phase if clock rate is zero
    
    [ Upstream commit 4bf59902b50012b1dddeeaa23b217d9c4956cdda ]
    
    The MMC sample and drv clock for rockchip platforms are derived from
    the bus clock output to the MMC/SDIO card. So it should never happens
    that the clk rate is zero given it should inherits the clock rate from
    its parent. If something goes wrong and makes the clock rate to be zero,
    the calculation would be wrong but may still make the mmc tuning process
    work luckily. However it makes people harder to debug when the following
    data transfer is unstable.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e651dc5a400262cf0f9f52edaf381df2f8dfd634
Author: Brad Love <brad@nextdimension.cc>
Date:   Tue Mar 6 14:15:36 2018 -0500

    media: cx23885: Set subdev host data to clk_freq pointer
    
    [ Upstream commit 5ceade1d97fc6687e050c44c257382c192f56276 ]
    
    Currently clk_freq is ignored entirely, because the cx235840 driver
    configures the xtal at the chip defaults. This is an issue if a
    board is produced with a non-default frequency crystal. If clk_freq
    is not zero the cx25840 will attempt to use the setting provided,
    or fall back to defaults otherwise.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaab238dbb53206d2864074d0365a263a51054e2
Author: Marcel Ziswiler <marcel@ziswiler.com>
Date:   Fri Feb 23 00:04:51 2018 +0100

    clk: tegra: Fix pll_u rate configuration
    
    [ Upstream commit c35b518f9ba06c9de79fb3ff62eed7462d804995 ]
    
    Turns out latest upstream U-Boot does not configure/enable pll_u which
    leaves it at some default rate of 500 kHz:
    
    root@apalis-t30:~# cat /sys/kernel/debug/clk/clk_summary | grep pll_u
           pll_u                  3        3        0      500000          0
    
    Of course this won't quite work leading to the following messages:
    
    [    6.559593] usb 2-1: new full-speed USB device number 2 using tegra-
    ehci
    [   11.759173] usb 2-1: device descriptor read/64, error -110
    [   27.119453] usb 2-1: device descriptor read/64, error -110
    [   27.389217] usb 2-1: new full-speed USB device number 3 using tegra-
    ehci
    [   32.559454] usb 2-1: device descriptor read/64, error -110
    [   47.929777] usb 2-1: device descriptor read/64, error -110
    [   48.049658] usb usb2-port1: attempt power cycle
    [   48.759475] usb 2-1: new full-speed USB device number 4 using tegra-
    ehci
    [   59.349457] usb 2-1: device not accepting address 4, error -110
    [   59.509449] usb 2-1: new full-speed USB device number 5 using tegra-
    ehci
    [   70.069457] usb 2-1: device not accepting address 5, error -110
    [   70.079721] usb usb2-port1: unable to enumerate USB device
    
    Fix this by actually allowing the rate also being set from within
    the Linux kernel.
    
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c440ef456c297c44c2fa5bc061f995ab7692344
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Wed Mar 14 08:28:31 2018 +0800

    clk: Don't show the incorrect clock phase
    
    [ Upstream commit 1f9c63e8de3d7b377c9d74e4a17524cfb60e6384 ]
    
    It's found that the clock phase output from clk_summary is
    wrong compared to the actual phase reading from the register.
    
    cat /sys/kernel/debug/clk/clk_summary | grep sdio_sample
    sdio_sample     0        1        0 50000000          0 -22
    
    It exposes an issue that clk core, clk_core_get_phase, always
    returns the cached core->phase which should be either updated
    by calling clk_set_phase or directly from the first place the
    clk was registered.
    
    When registering the clk, the core->phase geting from ->get_phase()
    may return negative value indicating error. This is quite common
    since the clk's phase may be highly related to its parent chain,
    but it was temporarily orphan when registered, since its parent
    chains hadn't be ready at that time, so the clk drivers decide to
    return error in this case. However, if no clk_set_phase is called or
    maybe the ->set_phase() isn't even implemented, the core->phase would
    never be updated. This is wrong, and we should try to update it when
    all its parent chains are settled down, like the way of updating clock
    rate for that. But it's not deserved to complicate the code now and
    just update it anyway when calling clk_core_get_phase, which would be
    much simple and enough.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Acked-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f19681dfbb927df582e856a6d26c685ee201892c
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Wed Mar 21 10:39:19 2018 +0800

    clk: rockchip: Fix wrong parent for SDMMC phase clock for rk3228
    
    [ Upstream commit 4b0556a441dd37e598887215bc89b49a6ef525b3 ]
    
    commit c420c1e4db22 ("clk: rockchip: Prevent calculating mmc phase
    if clock rate is zero") catches one gremlin again for clk-rk3228.c
    that the parent of SDMMC phase clock should be sclk_sdmmc0, but not
    sclk_sdmmc. However, the naming of the sdmmc clocks varies in the
    manual with the card clock having the 0 while the hclk is named
    without appended 0. So standardize one one format to prevent
    confusion, as there also is only one (non-sdio) mmc controller on
    the soc.
    
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 608ae38610e62c719ad5fff57b7d47c82f68cd84
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Mon Feb 5 16:43:56 2018 +0100

    ASoC: samsung: i2s: Ensure the RCLK rate is properly determined
    
    [ Upstream commit 647d04f8e07afc7c3b7a42b3ee01a8b28db29631 ]
    
    If the RCLK mux clock configuration is specified in DT and no set_sysclk()
    callback is used in the sound card driver the sclk_srcrate field will remain
    set to 0, leading to an incorrect PSR divider setting.
    To fix this the frequency value is retrieved from the CLK_I2S_RCLK_SRC clock,
    so the actual RCLK mux selection is taken into account.
    
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a74ae617a73b520f0ed719388d3c502d54b164da
Author: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date:   Fri Mar 9 11:11:17 2018 -0800

    ASoC: topology: create TLV data for dapm widgets
    
    [ Upstream commit bde8b3887add8368ecf0ca71117baf2fd56a6fc9 ]
    
    This patch adds the change required to create the TLV data
    for dapm widget kcontrols from topology. This also fixes the following
    TLV read error shown in amixer while showing the card control contents.
    "amixer: Control hw:1 element TLV read error: No such device or address"
    
    Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdaea52d57a2b80c4f7770be894f6b83415510a0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 15 11:08:38 2018 +0300

    ASoC: au1x: Fix timeout tests in au1xac97c_ac97_read()
    
    [ Upstream commit 123af9043e93cb6f235207d260d50f832cdb5439 ]
    
    The loop timeout doesn't work because it's a post op and ends with "tmo"
    set to -1.  I changed it from a post-op to a pre-op and I changed the
    initial the starting value from 5 to 6 so we still iterate 5 times.  I
    left the other as it was because it's a large number.
    
    Fixes: b3c70c9ea62a ("ASoC: Alchemy AC97C/I2SC audio support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d35e31c5257438ab6824ab27dd9ac06277a58f
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Jan 30 15:58:45 2018 -0800

    scsi: lpfc: Fix frequency of Release WQE CQEs
    
    [ Upstream commit 04673e38f56b30cd39b1fa0f386137d818b17781 ]
    
    The driver controls when the hardware sends completions that communicate
    consumption of elements from the WQ. This is done by setting a WQEC bit
    on a WQE.
    
    The current driver sets it on every Nth WQE posting. However, the driver
    isn't clearing the bit if the WQE is reused. Thus, if the queue depth
    isn't evenly divisible by N, with enough time, it can be set on every
    element, creating a lot of overhead and risking CQ full conditions.
    
    Correct by clearing the bit when not setting it on an Nth element.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24678510078c388e89a14545790f28c62c010914
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Jan 30 15:58:54 2018 -0800

    scsi: lpfc: Fix soft lockup in lpfc worker thread during LIP testing
    
    [ Upstream commit 161df4f09987ae2e9f0f97f0b38eee298b4a39ff ]
    
    During link bounce testing in a point-to-point topology, the host may
    enter a soft lockup on the lpfc_worker thread:
    
        Call Trace:
         lpfc_work_done+0x1f3/0x1390 [lpfc]
         lpfc_do_work+0x16f/0x180 [lpfc]
         kthread+0xc7/0xe0
         ret_from_fork+0x3f/0x70
    
    The driver was simultaneously setting a combination of flags that caused
    lpfc_do_work()to effectively spin between slow path work and new event
    data, causing the lockup.
    
    Ensure in the typical wq completions, that new event data flags are set
    if the slow path flag is running. The slow path will eventually
    reschedule the wq handling.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3adc584abfb4ca44715a5c38d9fe88d9f16f1e5
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Jan 30 15:58:55 2018 -0800

    scsi: lpfc: Fix issue_lip if link is disabled
    
    [ Upstream commit 2289e9598dde9705400559ca2606fb8c145c34f0 ]
    
    The driver ignored checks on whether the link should be kept
    administratively down after a link bounce. Correct the checks.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f652149cf3cb0faffe186d6243ee2a55346835b9
Author: Wilfried Weissmann <wilfried.weissmann@gmx.at>
Date:   Fri Feb 23 20:52:34 2018 +0100

    scsi: mvsas: fix wrong endianness of sgpio api
    
    [ Upstream commit e75fba9c0668b3767f608ea07485f48d33c270cf ]
    
    This patch fixes the byte order of the SGPIO api and brings it back in
    sync with ledmon v0.80 and above.
    
    [mkp: added missing SoB and fixed whitespace]
    
    Signed-off-by: Wilfried Weissmann <wilfried.weissmann@gmx.at>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2272b67140651aade50a65579a68bdf51bffe2c5
Author: Dave Carroll <david.carroll@microsemi.com>
Date:   Tue Apr 3 15:50:42 2018 -0600

    scsi: aacraid: Insure command thread is not recursively stopped
    
    [ Upstream commit 1c6b41fb92936fa5facea464d5d7cbf855966d04 ]
    
    If a recursive IOP_RESET is invoked, usually due to the eh_thread
    handling errors after the first reset, be sure we flag that the command
    thread has been stopped to avoid an Oops of the form;
    
     [ 336.620256] CPU: 28 PID: 1193 Comm: scsi_eh_0 Kdump: loaded Not tainted 4.14.0-49.el7a.ppc64le #1
     [ 336.620297] task: c000003fd630b800 task.stack: c000003fd61a4000
     [ 336.620326] NIP: c000000000176794 LR: c00000000013038c CTR: c00000000024bc10
     [ 336.620361] REGS: c000003fd61a7720 TRAP: 0300 Not tainted (4.14.0-49.el7a.ppc64le)
     [ 336.620395] MSR: 9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE> CR: 22084022 XER: 20040000
     [ 336.620435] CFAR: c000000000130388 DAR: 0000000000000000 DSISR: 40000000 SOFTE: 1
     [ 336.620435] GPR00: c00000000013038c c000003fd61a79a0 c0000000014c7e00 0000000000000000
     [ 336.620435] GPR04: 000000000000000c 000000000000000c 9000000000009033 0000000000000477
     [ 336.620435] GPR08: 0000000000000477 0000000000000000 0000000000000000 c008000010f7d940
     [ 336.620435] GPR12: c00000000024bc10 c000000007a33400 c0000000001708a8 c000003fe3b881d8
     [ 336.620435] GPR16: c000003fe3b88060 c000003fd61a7d10 fffffffffffff000 000000000000001e
     [ 336.620435] GPR20: 0000000000000001 c000000000ebf1a0 0000000000000001 c000003fe3b88000
     [ 336.620435] GPR24: 0000000000000003 0000000000000002 c000003fe3b88840 c000003fe3b887e8
     [ 336.620435] GPR28: c000003fe3b88000 c000003fc8181788 0000000000000000 c000003fc8181700
     [ 336.620750] NIP [c000000000176794] exit_creds+0x34/0x160
     [ 336.620775] LR [c00000000013038c] __put_task_struct+0x8c/0x1f0
     [ 336.620804] Call Trace:
     [ 336.620817] [c000003fd61a79a0] [c000003fe3b88000] 0xc000003fe3b88000 (unreliable)
     [ 336.620853] [c000003fd61a79d0] [c00000000013038c] __put_task_struct+0x8c/0x1f0
     [ 336.620889] [c000003fd61a7a00] [c000000000171418] kthread_stop+0x1e8/0x1f0
     [ 336.620922] [c000003fd61a7a40] [c008000010f7448c] aac_reset_adapter+0x14c/0x8d0 [aacraid]
     [ 336.620959] [c000003fd61a7b00] [c008000010f60174] aac_eh_host_reset+0x84/0x100 [aacraid]
     [ 336.621010] [c000003fd61a7b30] [c000000000864f24] scsi_try_host_reset+0x74/0x180
     [ 336.621046] [c000003fd61a7bb0] [c000000000867ac0] scsi_eh_ready_devs+0xc00/0x14d0
     [ 336.625165] [c000003fd61a7ca0] [c0000000008699e0] scsi_error_handler+0x550/0x730
     [ 336.632101] [c000003fd61a7dc0] [c000000000170a08] kthread+0x168/0x1b0
     [ 336.639031] [c000003fd61a7e30] [c00000000000b528] ret_from_kernel_thread+0x5c/0xb4
     [ 336.645971] Instruction dump:
     [ 336.648743] 384216a0 7c0802a6 fbe1fff8 f8010010 f821ffd1 7c7f1b78 60000000 60000000
     [ 336.657056] 39400000 e87f0838 f95f0838 7c0004ac <7d401828> 314affff 7d40192d 40c2fff4
     [ 336.663997] -[ end trace 4640cf8d4945ad95 ]-
    
    So flag when the thread is stopped by setting the thread pointer to NULL.
    
    Signed-off-by: Dave Carroll <david.carroll@microsemi.com>
    Reviewed-by: Raghava Aditya Renukunta <raghavaaditya.renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 466a2b7ac9fb99ddc0ff1771c31194d9855997d2
Author: Jeremy Cline <jeremy@jcline.org>
Date:   Tue Mar 6 21:47:32 2018 +0000

    scsi: sd: Keep disk read-only when re-reading partition
    
    [ Upstream commit 20bd1d026aacc5399464f8328f305985c493cde3 ]
    
    If the read-only flag is true on a SCSI disk, re-reading the partition
    table sets the flag back to false.
    
    To observe this bug, you can run:
    
    1. blockdev --setro /dev/sda
    2. blockdev --rereadpt /dev/sda
    3. blockdev --getro /dev/sda
    
    This commit reads the disk's old state and combines it with the device
    disk-reported state rather than unconditionally marking it as RW.
    
    Reported-by: Li Ning <lining916740672@icloud.com>
    Signed-off-by: Jeremy Cline <jeremy@jcline.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a8907dc9fa9d54c4a4a09a386ec453d3c1128db
Author: Hannes Reinecke <hare@suse.de>
Date:   Mon Feb 26 15:26:01 2018 +0100

    scsi: mpt3sas: Do not mark fw_event workqueue as WQ_MEM_RECLAIM
    
    [ Upstream commit 864449eea7c600596e305ffdc4a6a846414b222c ]
    
    The firmware event workqueue should not be marked as WQ_MEM_RECLAIM
    as it's doesn't need to make forward progress under memory pressure.
    In the current state it will result in a deadlock if the device had been
    forcefully removed.
    
    Cc: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Cc: Suganath Prabu Subramani <suganath-prabu.subramani@broadcom.com>
    Acked-by: Sreekanth Reddy <Sreekanth.Reddy@broadcom.com>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3685f99492c323061d1c33ff1cfadc2d7406a9f
Author: Manish Rangankar <manish.rangankar@cavium.com>
Date:   Sun Feb 11 22:48:41 2018 -0800

    scsi: qla4xxx: skip error recovery in case of register disconnect.
    
    [ Upstream commit 1bc5ad3a6acdcf56f83272f2de1cd2389ea9e9e2 ]
    
    A system crashes when continuously removing/re-adding the storage
    controller.
    
    Signed-off-by: Manish Rangankar <manish.rangankar@cavium.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e0421562e04c341e996baa89370339d0282469b
Author: Meelis Roos <mroos@linux.ee>
Date:   Fri Feb 9 08:57:44 2018 +0200

    scsi: aacraid: fix shutdown crash when init fails
    
    [ Upstream commit 00c20cdc79259c6c5bf978b21af96c2d3edb646d ]
    
    When aacraid init fails with "AAC0: adapter self-test failed.", shutdown
    leads to UBSAN warning and then oops:
    
    [154316.118423] ================================================================================
    [154316.118508] UBSAN: Undefined behaviour in drivers/scsi/scsi_lib.c:2328:27
    [154316.118566] member access within null pointer of type 'struct Scsi_Host'
    [154316.118631] CPU: 2 PID: 14530 Comm: reboot Tainted: G        W        4.15.0-dirty #89
    [154316.118701] Hardware name: Hewlett Packard HP NetServer/HP System Board, BIOS 4.06.46 PW 06/25/2003
    [154316.118774] Call Trace:
    [154316.118848]  dump_stack+0x48/0x65
    [154316.118916]  ubsan_epilogue+0xe/0x40
    [154316.118976]  __ubsan_handle_type_mismatch+0xfb/0x180
    [154316.119043]  scsi_block_requests+0x20/0x30
    [154316.119135]  aac_shutdown+0x18/0x40 [aacraid]
    [154316.119196]  pci_device_shutdown+0x33/0x50
    [154316.119269]  device_shutdown+0x18a/0x390
    [...]
    [154316.123435] BUG: unable to handle kernel NULL pointer dereference at 000000f4
    [154316.123515] IP: scsi_block_requests+0xa/0x30
    
    This is because aac_shutdown() does
    
            struct Scsi_Host *shost = pci_get_drvdata(dev);
            scsi_block_requests(shost);
    
    and that assumes shost has been assigned with pci_set_drvdata().
    
    However, pci_set_drvdata(pdev, shost) is done in aac_probe_one() far
    after bailing out with error from calling the init function
    ((*aac_drivers[index].init)(aac)), and when the init function fails, no
    error is returned from aac_probe_one() so PCI layer assumes there is
    driver attached, and tries to shut it down later.
    
    Fix it by returning error from aac_probe_one() when card-specific init
    function fails.
    
    This fixes reboot on my HP NetRAID-4M with dead battery.
    
    Signed-off-by: Meelis Roos <mroos@linux.ee>
    Reviewed-by: Dave Carroll <david.carroll@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd8acc46808b3e7f209c8168094d85d988a2229e
Author: Michael Kelley (EOSG) <Michael.H.Kelley@microsoft.com>
Date:   Wed Jan 24 22:49:57 2018 +0000

    scsi: storvsc: Increase cmd_per_lun for higher speed devices
    
    [ Upstream commit cabe92a55e3a12005a4ac4d3954c9a174b0efe2a ]
    
    Increase cmd_per_lun to allow more I/Os in progress per device,
    particularly for NVMe's.  The Hyper-V host side can handle the higher
    count with no issues.
    
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Acked-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4646c1af466c3999afa6fe36965206a7ca4449de
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Jan 25 08:24:29 2018 -0800

    scsi: qla2xxx: Avoid triggering undefined behavior in qla2x00_mbx_completion()
    
    [ Upstream commit c02189e12ce3bf3808cb880569d3b10249f50bd9 ]
    
    A left shift must shift less than the bit width of the left argument.
    Avoid triggering undefined behavior if ha->mbx_count == 32.
    
    This patch avoids that UBSAN reports the following complaint:
    
    UBSAN: Undefined behaviour in drivers/scsi/qla2xxx/qla_isr.c:275:14
    shift exponent 32 is too large for 32-bit type 'int'
    Call Trace:
     dump_stack+0x4e/0x6c
     ubsan_epilogue+0xd/0x3b
     __ubsan_handle_shift_out_of_bounds+0x112/0x14c
     qla2x00_mbx_completion+0x1c5/0x25d [qla2xxx]
     qla2300_intr_handler+0x1ea/0x3bb [qla2xxx]
     qla2x00_mailbox_command+0x77b/0x139a [qla2xxx]
     qla2x00_mbx_reg_test+0x83/0x114 [qla2xxx]
     qla2x00_chip_diag+0x354/0x45f [qla2xxx]
     qla2x00_initialize_adapter+0x2c2/0xa4e [qla2xxx]
     qla2x00_probe_one+0x1681/0x392e [qla2xxx]
     pci_device_probe+0x10b/0x1f1
     driver_probe_device+0x21f/0x3a4
     __driver_attach+0xa9/0xe1
     bus_for_each_dev+0x6e/0xb5
     driver_attach+0x22/0x3c
     bus_add_driver+0x1d1/0x2ae
     driver_register+0x78/0x130
     __pci_register_driver+0x75/0xa8
     qla2x00_module_init+0x21b/0x267 [qla2xxx]
     do_one_initcall+0x5a/0x1e2
     do_init_module+0x9d/0x285
     load_module+0x20db/0x38e3
     SYSC_finit_module+0xa8/0xbc
     SyS_finit_module+0x9/0xb
     do_syscall_64+0x77/0x271
     entry_SYSCALL64_slow_path+0x25/0x25
    
    Reported-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95bcf5b14e31a232bdeb606219c5eaa5b96e285c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jan 25 17:27:27 2018 +0300

    scsi: mptfusion: Add bounds check in mptctl_hp_targetinfo()
    
    [ Upstream commit a7043e9529f3c367cc4d82997e00be034cbe57ca ]
    
    My static checker complains about an out of bounds read:
    
        drivers/message/fusion/mptctl.c:2786 mptctl_hp_targetinfo()
        error: buffer overflow 'hd->sel_timeout' 255 <= u32max.
    
    It's true that we probably should have a bounds check here.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13a3e883ce6f2c740b4e75c1f907792fab493470
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jan 25 17:13:40 2018 +0300

    scsi: sym53c8xx_2: iterator underflow in sym_getsync()
    
    [ Upstream commit e6f791d95313c85f3dd4a26141e28e50ae9aa0ae ]
    
    We wanted to exit the loop with "div" set to zero, but instead, if we
    don't hit the break then "div" is -1 when we finish the loop.  It leads
    to an array underflow a few lines later.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Acked-by: Matthew Wilcox <mawilcox@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac6572952cbbac58381636a7e28cb57fffe90adb
Author: Chad Dupuis <chad.dupuis@cavium.com>
Date:   Wed Jan 24 08:07:06 2018 -0800

    scsi: bnx2fc: Fix check in SCSI completion handler for timed out request
    
    [ Upstream commit ecf7ff49945f5741fa1da112f994939f942031d3 ]
    
    When a request times out we set the io_req flag BNX2FC_FLAG_IO_COMPL so
    that if a subsequent completion comes in on that task ID we will ignore
    it.  The issue is that in the check for this flag there is a missing
    return so we will continue to process a request which may have already
    been returned to the ownership of the SCSI layer.  This can cause
    unpredictable results.
    
    Solution is to add in the missing return.
    
    [mkp: typo plus title shortening]
    
    Signed-off-by: Chad Dupuis <chad.dupuis@cavium.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Tested-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9760af4d2eca3e836b43de41f4108b582ff7c02b
Author: Sujit Reddy Thumma <sthumma@codeaurora.org>
Date:   Wed Jan 24 09:52:35 2018 +0530

    scsi: ufs: Enable quirk to ignore sending WRITE_SAME command
    
    [ Upstream commit 84af7e8b895088d89f246d6b0f82717fafdebf61 ]
    
    WRITE_SAME command is not supported by UFS. Enable a quirk for the upper
    level drivers to not send WRITE SAME command.
    
    [mkp: botched patch, applied by hand]
    
    Signed-off-by: Sujit Reddy Thumma <sthumma@codeaurora.org>
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c0fd4ba0587fa3e78c9b42cf50db0556b7e1c0b
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jan 18 14:16:38 2018 +0100

    scsi: fas216: fix sense buffer initialization
    
    [ Upstream commit 96d5eaa9bb74d299508d811d865c2c41b38b0301 ]
    
    While testing with the ARM specific memset() macro removed, I ran into a
    compiler warning that shows an old bug:
    
    drivers/scsi/arm/fas216.c: In function 'fas216_rq_sns_done':
    drivers/scsi/arm/fas216.c:2014:40: error: argument to 'sizeof' in 'memset' call is the same expression as the destination; did you mean to provide an explicit length? [-Werror=sizeof-pointer-memaccess]
    
    It turns out that the definition of the scsi_cmd structure changed back
    in linux-2.6.25, so now we clear only four bytes (sizeof(pointer))
    instead of 96 (SCSI_SENSE_BUFFERSIZE). I did not check whether we
    actually need to initialize the buffer here, but it's clear that if we
    do it, we should use the correct size.
    
    Fixes: de25deb18016 ("[SCSI] use dynamically allocated sense buffer")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e422d89fb59d05fd28a2e9bd9cfb496e3f50be81
Author: Peter Robinson <pbrobinson@gmail.com>
Date:   Sun Feb 11 23:15:37 2018 +0000

    crypto: sunxi-ss - Add MODULE_ALIAS to sun4i-ss
    
    [ Upstream commit 7c73cf4cc2ac16465f5102437dc0a12d66671bd6 ]
    
    The MODULE_ALIAS is required to enable the sun4i-ss driver to load
    automatically when built at a module. Tested on a Cubietruck.
    
    Fixes: 6298e948215f ("crypto: sunxi-ss - Add Allwinner Security System crypto accelerator")
    Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86a3f2d3b758e0ba5c02d56500fc273657ff941d
Author: NeilBrown <neilb@suse.com>
Date:   Fri Feb 23 09:09:33 2018 +1100

    staging: lustre: lmv: correctly iput lmo_root
    
    [ Upstream commit 17556cdbe6ed70a6a20e597b228628f7f34387f8 ]
    
    Commit 8f18c8a48b73 ("staging: lustre: lmv: separate master object
    with master stripe") changed how lmo_root inodes were managed,
    particularly when LMV_HASH_FLAG_MIGRATION is not set.
    Previously lsm_md_oinfo[0].lmo_root was always a borrowed
    inode reference and didn't need to by iput().
    Since the change, that special case only applies when
    LMV_HASH_FLAG_MIGRATION is set
    
    In the upstream (lustre-release) version of this patch [Commit
    60e07b972114 ("LU-4690 lod: separate master object with master
    stripe")] the for loop in the lmv_unpack_md() was changed to count
    from 0 and to ignore entry 0 if LMV_HASH_FLAG_MIGRATION is set.
    In the patch that got applied to Linux, that change was missing,
    so lsm_md_oinfo[0].lmo_root is never iput().
    This results in a "VFS: Busy inodes" warning at unmount.
    
    Fixes: 8f18c8a48b73 ("staging: lustre: lmv: separate master object with master stripe")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Reviewed-by: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c0344c493086357926ef9fe71312d414c238bee
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Feb 28 11:28:49 2018 +0000

    staging: rtl8192u: return -ENOMEM on failed allocation of priv->oldaddr
    
    [ Upstream commit e1a7418529e33bc4efc346324557251a16a3e79b ]
    
    Currently the allocation of priv->oldaddr is not null checked which will
    lead to subsequent errors when accessing priv->oldaddr.  Fix this with
    a null pointer check and a return of -ENOMEM on allocation failure.
    
    Detected with Coccinelle:
    drivers/staging/rtl8192u/r8192U_core.c:1708:2-15: alloc with no test,
    possible model on line 1723
    
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 602263054df7733f2ceeda7d1c61dd8d72145613
Author: NeilBrown <neilb@suse.com>
Date:   Fri Mar 2 10:31:25 2018 +1100

    staging: lustre: fix bug in osc_enter_cache_try
    
    [ Upstream commit 2fab9faf9b27298c4536c1c1b14072ab18b8f80b ]
    
    The lustre-release patch commit bdc5bb52c554 ("LU-4933 osc:
    Automatically increase the max_dirty_mb") changed
    
    -       if (cli->cl_dirty + PAGE_CACHE_SIZE <= cli->cl_dirty_max &&
    +       if (cli->cl_dirty_pages < cli->cl_dirty_max_pages &&
    
    When this patch landed in Linux a couple of years later, it landed as
    
    -       if (cli->cl_dirty + PAGE_SIZE <= cli->cl_dirty_max &&
    +       if (cli->cl_dirty_pages <= cli->cl_dirty_max_pages &&
    
    which is clearly different ('<=' vs '<'), and allows cl_dirty_pages to
    increase beyond cl_dirty_max_pages - which causes a latter assertion
    to fails.
    
    Fixes: 3147b268400a ("staging: lustre: osc: Automatically increase the max_dirty_mb")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6f521863130a0328cd46f08264dbab6c65787e6
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sun Feb 11 12:24:32 2018 -0600

    Bluetooth: btusb: Add device ID for RTL8822BE
    
    [ Upstream commit fed03fe7e55b7dc16077f672bd9d7bbe92b3a691 ]
    
    The Asus Z370-I contains a Realtek RTL8822BE device with an associated
    BT chip using a USB ID of 0b05:185c. This device is added to the driver.
    
    Signed-off-by: Hon Weng Chong <honwchong@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5104f3671139006e323afcdffaec50a2205c856b
Author: Brad Love <brad@nextdimension.cc>
Date:   Thu Jan 4 19:04:13 2018 -0500

    media: em28xx: USB bulk packet size fix
    
    [ Upstream commit c7c7e8d7803406daa21e96d00c357de8b77b6764 ]
    
    Hauppauge em28xx bulk devices exhibit continuity errors and corrupted
    packets, when run in VMWare virtual machines. Unknown if other
    manufacturers bulk models exhibit the same issue. KVM/Qemu is unaffected.
    
    According to documentation the maximum packet multiplier for em28xx in bulk
    transfer mode is 256 * 188 bytes. This changes the size of bulk transfers
    to maximum supported value and have a bonus beneficial alignment.
    
    Before:
    
    After:
    
    This sets up USB to expect just as many bytes as the em28xx is set to emit.
    
    Successful usage under load afterwards natively and in both VMWare
    and KVM/Qemu virtual machines.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Reviewed-by: Michael Ira Krufky <mkrufky@linuxtv.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf54f31e1fbe656cd8fea7a54404296e6077f9e9
Author: Chris Dickens <christopher.a.dickens@gmail.com>
Date:   Sun Dec 31 18:59:42 2017 -0800

    usb: gadget: composite: fix incorrect handling of OS desc requests
    
    [ Upstream commit 5d6ae4f0da8a64a185074dabb1b2f8c148efa741 ]
    
    When handling an OS descriptor request, one of the first operations is
    to zero out the request buffer using the wLength from the setup packet.
    There is no bounds checking, so a wLength > 4096 would clobber memory
    adjacent to the request buffer. Fix this by taking the min of wLength
    and the request buffer length prior to the memset. While at it, define
    the buffer length in a header file so that magic numbers don't appear
    throughout the code.
    
    When returning data to the host, the data length should be the min of
    the wLength and the valid data we have to return. Currently we are
    returning wLength, thus requests for a wLength greater than the amount
    of data in the OS descriptor buffer would return invalid (albeit zero'd)
    data following the valid descriptor data. Fix this by counting the
    number of bytes when constructing the data and using this when
    determining the length of the request.
    
    Signed-off-by: Chris Dickens <christopher.a.dickens@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e94f8cde34742ccfe9642ac42d31bbe76d1e77d
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Tue Feb 6 09:50:40 2018 +0100

    usb: gadget: udc: change comparison to bitshift when dealing with a mask
    
    [ Upstream commit ac87e560f7c0f91b62012e9a159c0681a373b922 ]
    
    Due to a typo, the mask was destroyed by a comparison instead of a bit
    shift.
    
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5209c778346ac9e34a4100b55a7dd23503821fe1
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Jan 12 11:05:02 2018 +0100

    usb: gadget: ffs: Execute copy_to_user() with USER_DS set
    
    [ Upstream commit 4058ebf33cb0be88ca516f968eda24ab7b6b93e4 ]
    
    When using a AIO read() operation on the function FS gadget driver a URB is
    submitted asynchronously and on URB completion the received data is copied
    to the userspace buffer associated with the read operation.
    
    This is done from a kernel worker thread invoking copy_to_user() (through
    copy_to_iter()). And while the user space process memory is made available
    to the kernel thread using use_mm(), some architecture require in addition
    to this that the operation runs with USER_DS set. Otherwise the userspace
    memory access will fail.
    
    For example on ARM64 with Privileged Access Never (PAN) and User Access
    Override (UAO) enabled the following crash occurs.
    
            Internal error: Accessing user space memory with fs=KERNEL_DS: 9600004f [#1] SMP
            Modules linked in:
            CPU: 2 PID: 1636 Comm: kworker/2:1 Not tainted 4.9.0-04081-g8ab2dfb-dirty #487
            Hardware name: ZynqMP ZCU102 Rev1.0 (DT)
            Workqueue: events ffs_user_copy_worker
            task: ffffffc87afc8080 task.stack: ffffffc87a00c000
            PC is at __arch_copy_to_user+0x190/0x220
            LR is at copy_to_iter+0x78/0x3c8
            [...]
            [<ffffff800847b790>] __arch_copy_to_user+0x190/0x220
            [<ffffff80086f25d8>] ffs_user_copy_worker+0x70/0x130
            [<ffffff80080b8c64>] process_one_work+0x1dc/0x460
            [<ffffff80080b8f38>] worker_thread+0x50/0x4b0
            [<ffffff80080bf5a0>] kthread+0xd8/0xf0
            [<ffffff8008083680>] ret_from_fork+0x10/0x50
    
    Address this by placing a set_fs(USER_DS) before of the copy operation
    and revert it again once the copy operation has finished.
    
    This patch is analogous to commit d7ffde35e31a ("vhost: use USER_DS in
    vhost_worker thread") which addresses the same underlying issue.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10be2659c629f815edbb12a9ec9e4f73f31b73fe
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Jan 12 11:26:16 2018 +0100

    usb: gadget: ffs: Let setup() return USB_GADGET_DELAYED_STATUS
    
    [ Upstream commit 946ef68ad4e45aa048a5fb41ce8823ed29da866a ]
    
    Some UDC drivers (like the DWC3) expect that the response to a setup()
    request is queued from within the setup function itself so that it is
    available as soon as setup() has completed.
    
    Upon receiving a setup request the function fs driver creates an event that
    is made available to userspace. And only once userspace has acknowledged
    that event the response to the setup request is queued.
    
    So it violates the requirement of those UDC drivers and random failures can
    be observed. This is basically a race condition and if userspace is able to
    read the event and queue the response fast enough all is good. But if it is
    not, for example because other processes are currently scheduled to run,
    the USB host that sent the setup request will observe an error.
    
    To avoid this the gadget framework provides the USB_GADGET_DELAYED_STATUS
    return code. If a setup() callback returns this value the UDC driver is
    aware that response is not yet available and can uses the appropriate
    methods to handle this case.
    
    Since in the case of function fs the response will never be available when
    the setup() function returns make sure that this status code is used.
    
    This fixed random occasional failures that were previously observed on a
    DWC3 based system under high system load.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26f4a6d638d52351f3e2583b61ef3f79e26d0a7d
Author: Minas Harutyunyan <hminas@synopsys.com>
Date:   Fri Jan 19 14:44:20 2018 +0400

    usb: dwc2: host: Fix transaction errors in host mode
    
    [ Upstream commit 92a8dd26464e1f21f1d869ec53717bd2c1200d63 ]
    
    Added missing GUSBCFG programming in host mode, which fixes
    transaction errors issue on HiKey and Altera Cyclone V boards.
    
    These field even if was programmed in device mode (in function
    dwc2_hsotg_core_init_disconnected()) will be resetting to POR values
    after core soft reset applied.
    So, each time when switching to host mode required to set this field
    to correct value.
    
    Acked-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fba46ae2cd7a5117299c435d71adcaf30acd8b01
Author: Grigor Tovmasyan <Grigor.Tovmasyan@synopsys.com>
Date:   Tue Feb 6 19:07:38 2018 +0400

    usb: dwc2: Fix interval type issue
    
    [ Upstream commit 12814a3f8f9b247531d7863170cc82b3fe4218fd ]
    
    The maximum value that unsigned char can hold is 255, meanwhile
    the maximum value of interval is  2^(bIntervalMax-1)=2^15.
    
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48701a8f4adbaa04a046edb68871b76f809fd57b
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Mar 16 16:33:01 2018 +0200

    xhci: zero usb device slot_id member when disabling and freeing a xhci slot
    
    [ Upstream commit a400efe455f7b61ac9a801ac8d0d01f8c8d82dd5 ]
    
    set udev->slot_id to zero when disabling and freeing the xhci slot.
    Prevents usb core from calling xhci with a stale slot id.
    
    xHC controller may be reset during resume to recover from some error.
    All slots are unusable as they are disabled and freed.
    xhci driver starts slot enumeration again from 1 in the order they are
    enabled. In the worst case a stale udev->slot_id for one device matches
    a newly enabled slot_id for a different device, causing us to
    perform a action on the wrong device.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f46a9164454acb84db8e814866f6a506c18037b
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Mar 16 15:33:54 2018 -0700

    usb: dwc3: Update DWC_usb31 GTXFIFOSIZ reg fields
    
    [ Upstream commit 0cab8d26d6e5e053b2bed3356992aaa71dc93628 ]
    
    Update two GTXFIFOSIZ bit fields for the DWC_usb31 controller. TXFDEP
    is a 15-bit value instead of 16-bit value, and bit 15 is TXFRAMNUM.
    
    The GTXFIFOSIZ register for DWC_usb31 is as follows:
     +-------+-----------+----------------------------------+
     | BITS  | Name      | Description                      |
     +=======+===========+==================================+
     | 31:16 | TXFSTADDR | Transmit FIFOn RAM Start Address |
     | 15    | TXFRAMNUM | Asynchronous/Periodic TXFIFO     |
     | 14:0  | TXFDEP    | TXFIFO Depth                     |
     +-------+-----------+----------------------------------+
    
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0acea84f20dbc938200a796fa15d682511bb07e1
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Mar 16 15:33:48 2018 -0700

    usb: dwc3: Add SoftReset PHY synchonization delay
    
    [ Upstream commit fab3833338779e1e668bd58d1f76d601657304b8 ]
    
    >From DWC_usb31 programming guide section 1.3.2, once DWC3_DCTL_CSFTRST
    bit is cleared, we must wait at least 50ms before accessing the PHY
    domain (synchronization delay).
    
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70d79bf9fbb997cb3de6f7af08a1f430d576636c
Author: Nobutaka Okabe <nob77413@gmail.com>
Date:   Fri Mar 23 19:18:22 2018 +0900

    ALSA: usb-audio: Add native DSD support for Luxman DA-06
    
    [ Upstream commit 71426535f49fe6034d0e0db77608b91a0c1a022d ]
    
    Add native DSD support quirk for Luxman DA-06 DAC, by adding the
    PID/VID 1852:5065.
    
    Rename "is_marantz_denon_dac()" function to "is_itf_usb_dsd_2alts_dac()"
    to cover broader device family sharing the same USB audio
    implementation(*).
    For the same reason, rename "is_teac_dsd_dac()" function to
    "is_itf_usb_dsd_3alts_dac()".
    
    (*)
    These devices have the same USB controller "ITF-USB DSD", supplied by
    INTERFACE Co., Ltd.
    "ITF-USB DSD" USB controller has two patterns,
    
    Pattern 1. (2 altsets version)
    - Altset 0: for control
    - Altset 1: for stream (S32)
    - Altset 2: for stream (S32, DSD_U32)
    
    Pattern 2. (3 altsets version)
    - Altset 0: for control
    - Altset 1: for stream (S16)
    - Altset 2: for stream (S32)
    - Altset 3: for stream (S32, DSD_U32)
    
    "is_itf_usb_dsd_2alts_dac()" returns true, if the DAC has "Pattern 1"
    USB controller, and "is_itf_usb_dsd_3alts_dac()" returns true, if
    "Pattern2".
    
    Signed-off-by: Nobutaka Okabe <nob77413@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e57a8592a931ded050662a9ec37986e1fc83de
Author: Vicente Bergas <vicencb@gmail.com>
Date:   Tue Mar 20 19:41:10 2018 +0100

    Bluetooth: btusb: Add USB ID 7392:a611 for Edimax EW-7611ULB
    
    [ Upstream commit a41e0796396eeceff673af4a38feaee149c6ff86 ]
    
    This WiFi/Bluetooth USB dongle uses a Realtek chipset, so, use btrtl for it.
    
    Product information:
    https://wikidevi.com/wiki/Edimax_EW-7611ULB
    
    >From /sys/kernel/debug/usb/devices
    T:  Bus=02 Lev=02 Prnt=02 Port=00 Cnt=01 Dev#=  3 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=7392 ProdID=a611 Rev= 2.00
    S:  Manufacturer=Realtek
    S:  Product=Edimax Wi-Fi N150 Bluetooth4.0 USB Adapter
    S:  SerialNumber=00e04c000001
    C:* #Ifs= 3 Cfg#= 1 Atr=e0 MxPwr=500mA
    A:  FirstIf#= 0 IfCount= 2 Cls=e0(wlcon) Sub=01 Prot=01
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    I:* If#= 2 Alt= 0 #EPs= 6 Cls=ff(vend.) Sub=ff Prot=ff Driver=rtl8723bu
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=87(I) Atr=03(Int.) MxPS=  64 Ivl=500us
    E:  Ad=08(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=09(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Tested-by: Vicente Bergas <vicencb@gmail.com>
    Signed-off-by: Vicente Bergas <vicencb@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9dc2614bbebd18277319de0f35e89bf2956f669
Author: Giuseppe Lippolis <giu.lippolis@gmail.com>
Date:   Mon Mar 26 16:34:39 2018 +0200

    net-usb: add qmi_wwan if on lte modem wistron neweb d18q1
    
    [ Upstream commit d4c4bc11353f3bea6754f7d21e3612c9f32d1d64 ]
    
    This modem is embedded on dlink dwr-921 router.
        The oem configuration states:
    
        T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=480 MxCh= 0
        D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
        P:  Vendor=1435 ProdID=0918 Rev= 2.32
        S:  Manufacturer=Android
        S:  Product=Android
        S:  SerialNumber=0123456789ABCDEF
        C:* #Ifs= 7 Cfg#= 1 Atr=80 MxPwr=500mA
        I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
        E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
        E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
        E:  Ad=84(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
        E:  Ad=86(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
        E:  Ad=88(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
        E:  Ad=8a(I) Atr=03(Int.) MxPS=  64 Ivl=32ms
        E:  Ad=89(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=06(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        I:* If#= 6 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=(none)
        E:  Ad=8b(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
        E:  Ad=07(O) Atr=02(Bulk) MxPS= 512 Ivl=125us
    
    Tested on openwrt distribution
    
    Signed-off-by: Giuseppe Lippolis <giu.lippolis@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a76b68bf31c54afc585730cd0b4bcac800aaff00
Author: Torsten Hilbrich <torsten.hilbrich@secunet.com>
Date:   Mon Mar 26 07:19:57 2018 +0200

    net/usb/qmi_wwan.c: Add USB id for lt4120 modem
    
    [ Upstream commit f3d801baf118c9d452ee7c278df16880c892e669 ]
    
    This is needed to support the modem found in HP EliteBook 820 G3.
    
    Signed-off-by: Torsten Hilbrich <torsten.hilbrich@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb30834f103a46bca83334ab1efbefe6c75f372e
Author: Fredrik Noring <noring@nocrew.org>
Date:   Fri Mar 9 18:34:34 2018 +0100

    USB: OHCI: Fix NULL dereference in HCDs using HCD_LOCAL_MEM
    
    [ Upstream commit d6c931ea32dc08ac2665bb5f009f9c40ad1bbdb3 ]
    
    Scatter-gather needs to be disabled when using dma_declare_coherent_memory
    and HCD_LOCAL_MEM. Andrea Righi made the equivalent fix for EHCI drivers
    in commit 4307a28eb01284 "USB: EHCI: fix NULL pointer dererence in HCDs
    that use HCD_LOCAL_MEM".
    
    The following NULL pointer WARN_ON_ONCE triggered with OHCI drivers:
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 49 at drivers/usb/core/hcd.c:1379 hcd_alloc_coherent+0x4c/0xc8
    Modules linked in:
    CPU: 0 PID: 49 Comm: usb-storage Not tainted 4.15.0+ #1014
    Stack : 00000000 00000000 805a78d2 0000003a 81f5c2cc 8053d367 804d77fc 00000031
            805a3a08 00000563 81ee9400 805a0000 00000000 10058c00 81f61b10 805c0000
            00000000 00000000 805a0000 00d9038e 00000004 803ee818 00000006 312e3420
            805c0000 00000000 00000073 81f61958 00000000 00000000 802eb380 804fd538
            00000009 00000563 81ee9400 805a0000 00000002 80056148 00000000 805a0000
            ...
    Call Trace:
    [<578af360>] show_stack+0x74/0x104
    [<2f3702c6>] __warn+0x118/0x120
    [<ae93fc9e>] warn_slowpath_null+0x44/0x58
    [<a891a517>] hcd_alloc_coherent+0x4c/0xc8
    [<3578fa36>] usb_hcd_map_urb_for_dma+0x4d8/0x534
    [<110bc94c>] usb_hcd_submit_urb+0x82c/0x834
    [<02eb5baf>] usb_sg_wait+0x14c/0x1a0
    [<ccd09e85>] usb_stor_bulk_transfer_sglist.part.1+0xac/0x124
    [<87a5c34c>] usb_stor_bulk_srb+0x40/0x60
    [<ff1792ac>] usb_stor_Bulk_transport+0x160/0x37c
    [<b9e2709c>] usb_stor_invoke_transport+0x3c/0x500
    [<004754f4>] usb_stor_control_thread+0x258/0x28c
    [<22edf42e>] kthread+0x134/0x13c
    [<a419ffd0>] ret_from_kernel_thread+0x14/0x1c
    ---[ end trace bcdb825805eefdcc ]---
    
    Signed-off-by: Fredrik Noring <noring@nocrew.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f271cf4114fe3871679da7b819f55b02c4894a5
Author: Dominik Bozek <dominikx.bozek@intel.com>
Date:   Thu Feb 15 21:27:48 2018 -0800

    usb: cdc_acm: prevent race at write to acm while system resumes
    
    [ Upstream commit b86b8eb6fecb5a4bac1ed0ca925c4082a61ea6e9 ]
    
    ACM driver may accept data to transmit while system is not fully
    resumed. In this case ACM driver buffers data and prepare URBs
    on usb anchor list.
    There is a little chance that two tasks put a char and initiate
    acm_tty_flush_chars(). In such a case, driver will put one URB
    twice on usb anchor list.
    This patch also reset length of data before resue of a buffer.
    This not only prevent sending rubbish, but also lower risc of race.
    
    Without this patch we hit following kernel panic in one of our
    stabilty/stress tests.
    
    [   46.884442] *list_add double add*: new=ffff9b2ab7289330, prev=ffff9b2ab7289330, next=ffff9b2ab81e28e0.
    [   46.884476] Modules linked in: hci_uart btbcm bluetooth rfkill_gpio igb_avb(O) cfg80211 snd_soc_sst_bxt_tdf8532 snd_soc_skl snd_soc_skl_ipc snd_soc_sst_ipc snd_soc_sst_dsp snd_soc_sst_acpi snd_soc_sst_match snd_hda_ext_core snd_hda_core trusty_timer trusty_wall trusty_log trusty_virtio trusty_ipc trusty_mem trusty_irq trusty virtio_ring virtio intel_ipu4_mmu_bxtB0 lib2600_mod_bxtB0 intel_ipu4_isys_mod_bxtB0 lib2600psys_mod_bxtB0 intel_ipu4_psys_mod_bxtB0 intel_ipu4_mod_bxtB0 intel_ipu4_wrapper_bxtB0 intel_ipu4_acpi videobuf2_dma_contig as3638 dw9714 lm3643 crlmodule smiapp smiapp_pll
    [   46.884480] CPU: 1 PID: 33 Comm: kworker/u8:1 Tainted: G     U  W  O    4.9.56-quilt-2e5dc0ac-g618ed69ced6e-dirty #4
    [   46.884489] Workqueue: events_unbound flush_to_ldisc
    [   46.884494]  ffffb98ac012bb08 ffffffffad3e82e5 ffffb98ac012bb58 0000000000000000
    [   46.884497]  ffffb98ac012bb48 ffffffffad0a23d1 00000024ad6374dd ffff9b2ab7289330
    [   46.884500]  ffff9b2ab81e28e0 ffff9b2ab7289330 0000000000000002 0000000000000000
    [   46.884501] Call Trace:
    [   46.884507]  [<ffffffffad3e82e5>] dump_stack+0x67/0x92
    [   46.884511]  [<ffffffffad0a23d1>] __warn+0xd1/0xf0
    [   46.884513]  [<ffffffffad0a244f>] warn_slowpath_fmt+0x5f/0x80
    [   46.884516]  [<ffffffffad407443>] __list_add+0xb3/0xc0
    [   46.884521]  [<ffffffffad71133c>] *usb_anchor_urb*+0x4c/0xa0
    [   46.884524]  [<ffffffffad782c6f>] *acm_tty_flush_chars*+0x8f/0xb0
    [   46.884527]  [<ffffffffad782cd1>] *acm_tty_put_char*+0x41/0x100
    [   46.884530]  [<ffffffffad4ced34>] tty_put_char+0x24/0x40
    [   46.884533]  [<ffffffffad4d3bf5>] do_output_char+0xa5/0x200
    [   46.884535]  [<ffffffffad4d3e98>] __process_echoes+0x148/0x290
    [   46.884538]  [<ffffffffad4d654c>] n_tty_receive_buf_common+0x57c/0xb00
    [   46.884541]  [<ffffffffad4d6ae4>] n_tty_receive_buf2+0x14/0x20
    [   46.884543]  [<ffffffffad4d9662>] tty_ldisc_receive_buf+0x22/0x50
    [   46.884545]  [<ffffffffad4d9c05>] flush_to_ldisc+0xc5/0xe0
    [   46.884549]  [<ffffffffad0bcfe8>] process_one_work+0x148/0x440
    [   46.884551]  [<ffffffffad0bdc19>] worker_thread+0x69/0x4a0
    [   46.884554]  [<ffffffffad0bdbb0>] ? max_active_store+0x80/0x80
    [   46.884556]  [<ffffffffad0c2e10>] kthread+0x110/0x130
    [   46.884559]  [<ffffffffad0c2d00>] ? kthread_park+0x60/0x60
    [   46.884563]  [<ffffffffadad9917>] ret_from_fork+0x27/0x40
    [   46.884566] ---[ end trace 3bd599058b8a9eb3 ]---
    
    Signed-off-by: Dominik Bozek <dominikx.bozek@intel.com>
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e025f5b63713f850bdd7bea7a2bedf8fb23f75d
Author: Vardan Mikayelyan <mvardan@synopsys.com>
Date:   Tue Jan 16 16:04:24 2018 +0400

    usb: dwc2: Fix dwc2_hsotg_core_init_disconnected()
    
    [ Upstream commit 755d739534f998d92e348fba8ffb0478416576e7 ]
    
    We should call dwc2_hsotg_enqueue_setup() after properly
    setting lx_state. Because it may cause error-out from
    dwc2_hsotg_enqueue_setup() due to wrong value in lx_state.
    
    Issue can be reproduced by loading driver while connected
    A-Connector (start in A-HOST mode) then disconnect A-Connector
    to switch to B-DEVICE.
    
    Acked-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Vardan Mikayelyan <mvardan@synopsys.com>
    Signed-off-by: Grigor Tovmasyan <tovmasya@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20eeffc5ba328afbf73550ae8aa9e43be3a8dd6e
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Feb 12 00:14:42 2018 +0100

    usb: gadget: fsl_udc_core: fix ep valid checks
    
    [ Upstream commit 20c63f4089cceab803438c383631963e34c4d8e5 ]
    
    Clang reports the following warning:
      drivers/usb/gadget/udc/fsl_udc_core.c:1312:10: warning: address of array
      'ep->name' will always evaluate to 'true' [-Wpointer-bool-conversion]
            if (ep->name)
            ~~  ~~~~^~~~
    
    It seems that the authors intention was to check if the ep has been
    configured through struct_ep_setup. Check whether struct usb_ep name
    pointer has been set instead.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36d64865d33462851aaf35c1f8e021889beec15a
Author: Manu Gautam <mgautam@codeaurora.org>
Date:   Thu Dec 21 09:54:25 2017 +0530

    usb: gadget: core: Fix use-after-free of usb_request
    
    [ Upstream commit e74bd4d358e5455233f1dcc3975425905b270b91 ]
    
    Driver is tracing usb_request after freeing it.
    Fix it by changing the order.
    
    Signed-off-by: Manu Gautam <mgautam@codeaurora.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a1edc325506d2671429e27753a29fc829847858
Author: Roger Quadros <rogerq@ti.com>
Date:   Mon Jan 22 15:01:42 2018 +0200

    usb: dwc3: omap: don't miss events during suspend/resume
    
    [ Upstream commit c49f63055e252810e5d6c83a4943b18db16b3cd8 ]
    
    The USB cable state can change during suspend/resume
    so be sure to check and update the extcon state.
    
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6a43f20ff3e1e7fdfba7e12d17ba1898e5421bf
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Jan 17 13:22:49 2018 -0800

    usb: dwc3: Undo PHY init if soft reset fails
    
    [ Upstream commit 00b42170c86f90ac9dea83a7dfcd3f0c38098fe2 ]
    
    In this function, we init the USB2 and USB3 PHYs, but if soft reset
    times out, we don't unwind this.
    
    Noticed by inspection.
    
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9a19ff1fa9a627f4cae3e7608532ac807f66963
Author: John Keeping <john@metanate.com>
Date:   Fri Jan 12 18:43:32 2018 +0000

    usb: gadget: f_uac2: fix bFirstInterface in composite gadget
    
    [ Upstream commit 8813a59ed892305b5ac1b5b901740b1ad4b5fefa ]
    
    If there are multiple functions associated with a configuration, then
    the UAC2 interfaces may not start at zero.  Set the correct first
    interface number in the association descriptor so that the audio
    interfaces are enumerated correctly in this case.
    
    Reviewed-by: Krzysztof Opasiak <k.opasiak@samsung.com>
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a81f401585737316b29bef95fe6cfb3a4f0bbe5d
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed May 9 19:42:20 2018 +0900

    x86/kexec: Avoid double free_page() upon do_kexec_load() failure
    
    commit a466ef76b815b86748d9870ef2a430af7b39c710 upstream.
    
    >From ff82bedd3e12f0d3353282054ae48c3bd8c72012 Mon Sep 17 00:00:00 2001
    From: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Date: Wed, 9 May 2018 12:12:39 +0900
    Subject: x86/kexec: Avoid double free_page() upon do_kexec_load() failure
    
    syzbot is reporting crashes after memory allocation failure inside
    do_kexec_load() [1]. This is because free_transition_pgtable() is called
    by both init_transition_pgtable() and machine_kexec_cleanup() when memory
    allocation failed inside init_transition_pgtable().
    
    Regarding 32bit code, machine_kexec_free_page_tables() is called by both
    machine_kexec_alloc_page_tables() and machine_kexec_cleanup() when memory
    allocation failed inside machine_kexec_alloc_page_tables().
    
    Fix this by leaving the error handling to machine_kexec_cleanup()
    (and optionally setting NULL after free_page()).
    
    [1] https://syzkaller.appspot.com/bug?id=91e52396168cf2bdd572fe1e1bc0bc645c1c6b40
    
    Fixes: f5deb79679af6eb4 ("x86: kexec: Use one page table in x86_64 machine_kexec")
    Fixes: 92be3d6bdf2cb349 ("kexec/i386: allocate page table pages dynamically")
    Reported-by: syzbot <syzbot+d96f60296ef613fe1d69@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Baoquan He <bhe@redhat.com>
    Cc: thomas.lendacky@amd.com
    Cc: prudo@linux.vnet.ibm.com
    Cc: Huang Ying <ying.huang@intel.com>
    Cc: syzkaller-bugs@googlegroups.com
    Cc: takahiro.akashi@linaro.org
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: akpm@linux-foundation.org
    Cc: dyoung@redhat.com
    Cc: kirill.shutemov@linux.intel.com
    Link: https://lkml.kernel.org/r/201805091942.DGG12448.tMFVFSJFQOOLHO@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2595f213a4ad5071d419e2f5e15d3ca81679c231
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri May 18 16:09:16 2018 -0700

    hfsplus: stop workqueue when fill_super() failed
    
    commit 66072c29328717072fd84aaff3e070e3f008ba77 upstream.
    
    syzbot is reporting ODEBUG messages at hfsplus_fill_super() [1].  This
    is because hfsplus_fill_super() forgot to call cancel_delayed_work_sync().
    
    As far as I can see, it is hfsplus_mark_mdb_dirty() from
    hfsplus_new_inode() in hfsplus_fill_super() that calls
    queue_delayed_work().  Therefore, I assume that hfsplus_new_inode() does
    not fail if queue_delayed_work() was called, and the out_put_hidden_dir
    label is the appropriate location to call cancel_delayed_work_sync().
    
    [1] https://syzkaller.appspot.com/bug?id=a66f45e96fdbeb76b796bf46eb25ea878c42a6c9
    
    Link: http://lkml.kernel.org/r/964a8b27-cd69-357c-fe78-76b066056201@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+4f2e5f086147d543ab03@syzkaller.appspotmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Ernesto A. Fernandez <ernesto.mnd.fernandez@gmail.com>
    Cc: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d73a8c07d8486c3d1fd7d22bacc7dd7c19007cb
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Apr 3 14:33:49 2018 +0200

    cfg80211: limit wiphy names to 128 bytes
    
    commit a7cfebcb7594a24609268f91299ab85ba064bf82 upstream.
    
    There's currently no limit on wiphy names, other than netlink
    message size and memory limitations, but that causes issues when,
    for example, the wiphy name is used in a uevent, e.g. in rfkill
    where we use the same name for the rfkill instance, and then the
    buffer there is "only" 2k for the environment variables.
    
    This was reported by syzkaller, which used a 4k name.
    
    Limit the name to something reasonable, I randomly picked 128.
    
    Reported-by: syzbot+230d9e642a85d3fec29c@syzkaller.appspotmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c65719153f983dc3ac6afd321fd463cba22ee13
Author: Jens Remus <jremus@linux.ibm.com>
Date:   Thu May 3 13:52:47 2018 +0200

    scsi: zfcp: fix infinite iteration on ERP ready list
    
    commit fa89adba1941e4f3b213399b81732a5c12fd9131 upstream.
    
    zfcp_erp_adapter_reopen() schedules blocking of all of the adapter's
    rports via zfcp_scsi_schedule_rports_block() and enqueues a reopen
    adapter ERP action via zfcp_erp_action_enqueue(). Both are separately
    processed asynchronously and concurrently.
    
    Blocking of rports is done in a kworker by zfcp_scsi_rport_work(). It
    calls zfcp_scsi_rport_block(), which then traces a DBF REC "scpdely" via
    zfcp_dbf_rec_trig().  zfcp_dbf_rec_trig() acquires the DBF REC spin lock
    and then iterates with list_for_each() over the adapter's ERP ready list
    without holding the ERP lock. This opens a race window in which the
    current list entry can be moved to another list, causing list_for_each()
    to iterate forever on the wrong list, as the erp_ready_head is never
    encountered as terminal condition.
    
    Meanwhile the ERP action can be processed in the ERP thread by
    zfcp_erp_thread(). It calls zfcp_erp_strategy(), which acquires the ERP
    lock and then calls zfcp_erp_action_to_running() to move the ERP action
    from the ready to the running list.  zfcp_erp_action_to_running() can
    move the ERP action using list_move() just during the aforementioned
    race window. It then traces a REC RUN "erator1" via zfcp_dbf_rec_run().
    zfcp_dbf_rec_run() tries to acquire the DBF REC spin lock. If this is
    held by the infinitely looping kworker, it effectively spins forever.
    
    Example Sequence Diagram:
    
    Process                ERP Thread             rport_work
    -------------------    -------------------    -------------------
    zfcp_erp_adapter_reopen()
    zfcp_erp_adapter_block()
    zfcp_scsi_schedule_rports_block()
    lock ERP                                      zfcp_scsi_rport_work()
    zfcp_erp_action_enqueue(ZFCP_ERP_ACTION_REOPEN_ADAPTER)
    list_add_tail() on ready                      !(rport_task==RPORT_ADD)
    wake_up() ERP thread                          zfcp_scsi_rport_block()
    zfcp_dbf_rec_trig()    zfcp_erp_strategy()    zfcp_dbf_rec_trig()
    unlock ERP                                    lock DBF REC
    zfcp_erp_wait()        lock ERP
    |                      zfcp_erp_action_to_running()
    |                                             list_for_each() ready
    |                      list_move()              current entry
    |                        ready to running
    |                      zfcp_dbf_rec_run()       endless loop over running
    |                      zfcp_dbf_rec_run_lvl()
    |                      lock DBF REC spins forever
    
    Any adapter recovery can trigger this, such as setting the device offline
    or reboot.
    
    V4.9 commit 4eeaa4f3f1d6 ("zfcp: close window with unblocked rport
    during rport gone") introduced additional tracing of (un)blocking of
    rports. It missed that the adapter->erp_lock must be held when calling
    zfcp_dbf_rec_trig().
    
    This fix uses the approach formerly introduced by commit aa0fec62391c
    ("[SCSI] zfcp: Fix sparse warning by providing new entry in dbf") that got
    later removed by commit ae0904f60fab ("[SCSI] zfcp: Redesign of the debug
    tracing for recovery actions.").
    
    Introduce zfcp_dbf_rec_trig_lock(), a wrapper for zfcp_dbf_rec_trig() that
    acquires and releases the adapter->erp_lock for read.
    
    Reported-by: Sebastian Ott <sebott@linux.ibm.com>
    Signed-off-by: Jens Remus <jremus@linux.ibm.com>
    Fixes: 4eeaa4f3f1d6 ("zfcp: close window with unblocked rport during rport gone")
    Cc: <stable@vger.kernel.org> # 2.6.32+
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad2518320bc440ed3db072e2444a1bb226a9cf7a
Author: Alexander Potapenko <glider@google.com>
Date:   Fri May 18 16:23:18 2018 +0200

    scsi: sg: allocate with __GFP_ZERO in sg_build_indirect()
    
    commit a45b599ad808c3c982fdcdc12b0b8611c2f92824 upstream.
    
    This shall help avoid copying uninitialized memory to the userspace when
    calling ioctl(fd, SG_IO) with an empty command.
    
    Reported-by: syzbot+7d26fc1eea198488deab@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e420d98384760f55ffac9951b9b5cccbf2edd752
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Mar 8 10:34:53 2018 +0800

    scsi: libsas: defer ata device eh commands to libata
    
    commit 318aaf34f1179b39fa9c30fa0f3288b645beee39 upstream.
    
    When ata device doing EH, some commands still attached with tasks are
    not passed to libata when abort failed or recover failed, so libata did
    not handle these commands. After these commands done, sas task is freed,
    but ata qc is not freed. This will cause ata qc leak and trigger a
    warning like below:
    
    WARNING: CPU: 0 PID: 28512 at drivers/ata/libata-eh.c:4037
    ata_eh_finish+0xb4/0xcc
    CPU: 0 PID: 28512 Comm: kworker/u32:2 Tainted: G     W  OE 4.14.0#1
    ......
    Call trace:
    [<ffff0000088b7bd0>] ata_eh_finish+0xb4/0xcc
    [<ffff0000088b8420>] ata_do_eh+0xc4/0xd8
    [<ffff0000088b8478>] ata_std_error_handler+0x44/0x8c
    [<ffff0000088b8068>] ata_scsi_port_error_handler+0x480/0x694
    [<ffff000008875fc4>] async_sas_ata_eh+0x4c/0x80
    [<ffff0000080f6be8>] async_run_entry_fn+0x4c/0x170
    [<ffff0000080ebd70>] process_one_work+0x144/0x390
    [<ffff0000080ec100>] worker_thread+0x144/0x418
    [<ffff0000080f2c98>] kthread+0x10c/0x138
    [<ffff0000080855dc>] ret_from_fork+0x10/0x18
    
    If ata qc leaked too many, ata tag allocation will fail and io blocked
    for ever.
    
    As suggested by Dan Williams, defer ata device commands to libata and
    merge sas_eh_finish_cmd() with sas_eh_defer_cmd(). libata will handle
    ata qcs correctly after this.
    
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: Xiaofei Tan <tanxiaofei@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6089a72d44deb251f347a5d4e4e5f1e99245c0cc
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:52 2018 +0200

    s390: use expoline thunks in the BPF JIT
    
    [ Upstream commit de5cb6eb514ebe241e3edeb290cb41deb380b81d ]
    
    The BPF JIT need safe guarding against spectre v2 in the sk_load_xxx
    assembler stubs and the indirect branches generated by the JIT itself
    need to be converted to expolines.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ace5fcb2263afab21852dd4ac95db70e2bb03cf
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:51 2018 +0200

    s390: extend expoline to BC instructions
    
    [ Upstream commit 6deaa3bbca804b2a3627fd685f75de64da7be535 ]
    
    The BPF JIT uses a 'b <disp>(%r<x>)' instruction in the definition
    of the sk_load_word and sk_load_half functions.
    
    Add support for branch-on-condition instructions contained in the
    thunk code of an expoline.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b004790d7ec587024443c3194411f6a89a93a3d1
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:50 2018 +0200

    s390: move spectre sysfs attribute code
    
    [ Upstream commit 4253b0e0627ee3461e64c2495c616f1c8f6b127b ]
    
    The nospec-branch.c file is compiled without the gcc options to
    generate expoline thunks. The return branch of the sysfs show
    functions cpu_show_spectre_v1 and cpu_show_spectre_v2 is an indirect
    branch as well. These need to be compiled with expolines.
    
    Move the sysfs functions for spectre reporting to a separate file
    and loose an '.' for one of the messages.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: d424986f1d ("s390: add sysfs attributes for spectre")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b35421ab5735f08b58a7e0cee03228f91465ed99
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:49 2018 +0200

    s390/kernel: use expoline for indirect branches
    
    [ Upstream commit c50c84c3ac4d5db683904bdb3257798b6ef980ae ]
    
    The assember code in arch/s390/kernel uses a few more indirect branches
    which need to be done with execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caa47e1f7fb8c35137f1d683cd2f9d43775be009
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:48 2018 +0200

    s390/ftrace: use expoline for indirect branches
    
    [ Upstream commit 23a4d7fd34856da8218c4cfc23dba7a6ec0a423a ]
    
    The return from the ftrace_stub, _mcount, ftrace_caller and
    return_to_handler functions is done with "br %r14" and "br %r1".
    These are indirect branches as well and need to use execute
    trampolines for CONFIG_EXPOLINE=y.
    
    The ftrace_caller function is a special case as it returns to the
    start of a function and may only use %r0 and %r1. For a pre z10
    machine the standard execute trampoline uses a LARL + EX to do
    this, but this requires *two* registers in the range %r1..%r15.
    To get around this the 'br %r1' located in the lowcore is used,
    then the EX instruction does not need an address register.
    But the lowcore trick may only be used for pre z14 machines,
    with noexec=on the mapping for the first page may not contain
    instructions. The solution for that is an ALTERNATIVE in the
    expoline THUNK generated by 'GEN_BR_THUNK %r1' to switch to
    EXRL, this relies on the fact that a machine that supports
    noexec=on has EXRL as well.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cba0d6c2d6301f32b0b5d86ad70f3fdd8574d43b
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:47 2018 +0200

    s390/lib: use expoline for indirect branches
    
    [ Upstream commit 97489e0663fa700d6e7febddc43b58df98d7bcda ]
    
    The return from the memmove, memset, memcpy, __memset16, __memset32 and
    __memset64 functions are done with "br %r14". These are indirect branches
    as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f37bfc0d20a0031f82ec46c1107501c40c1626b2
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:46 2018 +0200

    s390/crc32-vx: use expoline for indirect branches
    
    [ Upstream commit 467a3bf219cee12259182c5cb4821f88fd518a51 ]
    
    The return from the crc32_le_vgfm_16/crc32c_le_vgfm_16 and the
    crc32_be_vgfm_16 functions are done with "br %r14". These are indirect
    branches as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a5c26ddfb8657402073f8b43393ede53ad82e6a
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:45 2018 +0200

    s390: move expoline assembler macros to a header
    
    [ Upstream commit 6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba ]
    
    To be able to use the expoline branches in different assembler
    files move the associated macros from entry.S to a new header
    nospec-insn.h.
    
    While we are at it make the macros a bit nicer to use.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63257f26cec0ef8461d1f1d8a8f81384dcfff93f
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:21:44 2018 +0200

    s390: add assembler macros for CPU alternatives
    
    [ Upstream commit fba9eb7946251d6e420df3bdf7bc45195be7be9a ]
    
    Add a header with macros usable in assembler files to emit alternative
    code sequences. It works analog to the alternatives for inline assmeblies
    in C files, with the same restrictions and capabilities.
    The syntax is
    
         ALTERNATIVE "<default instructions sequence>", \
                     "<alternative instructions sequence>", \
                     "<features-bit>"
    and
    
         ALTERNATIVE_2 "<default instructions sequence>", \
                       "<alternative instructions sqeuence #1>", \
                       "<feature-bit #1>",
                       "<alternative instructions sqeuence #2>", \
                       "<feature-bit #2>"
    
    Reviewed-by: Vasily Gorbik <gor@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 808449d2bc56bf0de49e03b6784e0986da526ea7
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu May 17 17:18:30 2018 -0400

    ext2: fix a block leak
    
    commit 5aa1437d2d9a068c0334bd7c9dafa8ec4f97f13b upstream.
    
    open file, unlink it, then use ioctl(2) to make it immutable or
    append only.  Now close it and watch the blocks *not* freed...
    
    Immutable/append-only checks belong in ->setattr().
    Note: the bug is old and backport to anything prior to 737f2e93b972
    ("ext2: convert to use the new truncate convention") will need
    these checks lifted into ext2_setattr().
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aab32922616365dc84d26972ade407f6ceb7bdff
Author: hpreg@vmware.com <hpreg@vmware.com>
Date:   Mon May 14 08:14:49 2018 -0400

    vmxnet3: use DMA memory barriers where required
    
    [ Upstream commit f3002c1374fb2367c9d8dbb28852791ef90d2bac ]
    
    The gen bits must be read first from (resp. written last to) DMA memory.
    The proper way to enforce this on Linux is to call dma_rmb() (resp.
    dma_wmb()).
    
    Signed-off-by: Regis Duchesne <hpreg@vmware.com>
    Acked-by: Ronak Doshi <doshir@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 779fd38b60d86511f1ff17c29c2fc9ee2adb0697
Author: hpreg@vmware.com <hpreg@vmware.com>
Date:   Mon May 14 08:14:34 2018 -0400

    vmxnet3: set the DMA mask before the first DMA map operation
    
    [ Upstream commit 61aeecea40afb2b89933e27cd4adb10fc2e75cfd ]
    
    The DMA mask must be set before, not after, the first DMA map operation, or
    the first DMA map operation could in theory fail on some systems.
    
    Fixes: b0eb57cb97e78 ("VMXNET3: Add support for virtual IOMMU")
    Signed-off-by: Regis Duchesne <hpreg@vmware.com>
    Acked-by: Ronak Doshi <doshir@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74a4c09d4b05c67ed6bd6aed088a5552f4f64aaa
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 14 21:14:26 2018 -0700

    tcp: purge write queue in tcp_connect_init()
    
    [ Upstream commit 7f582b248d0a86bae5788c548d7bb5bca6f7691a ]
    
    syzkaller found a reliable way to crash the host, hitting a BUG()
    in __tcp_retransmit_skb()
    
    Malicous MSG_FASTOPEN is the root cause. We need to purge write queue
    in tcp_connect_init() at the point we init snd_una/write_seq.
    
    This patch also replaces the BUG() by a less intrusive WARN_ON_ONCE()
    
    kernel BUG at net/ipv4/tcp_output.c:2837!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 0 PID: 5276 Comm: syz-executor0 Not tainted 4.17.0-rc3+ #51
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__tcp_retransmit_skb+0x2992/0x2eb0 net/ipv4/tcp_output.c:2837
    RSP: 0000:ffff8801dae06ff8 EFLAGS: 00010206
    RAX: ffff8801b9fe61c0 RBX: 00000000ffc18a16 RCX: ffffffff864e1a49
    RDX: 0000000000000100 RSI: ffffffff864e2e12 RDI: 0000000000000005
    RBP: ffff8801dae073a0 R08: ffff8801b9fe61c0 R09: ffffed0039c40dd2
    R10: ffffed0039c40dd2 R11: ffff8801ce206e93 R12: 00000000421eeaad
    R13: ffff8801ce206d4e R14: ffff8801ce206cc0 R15: ffff8801cd4f4a80
    FS:  0000000000000000(0000) GS:ffff8801dae00000(0063) knlGS:00000000096bc900
    CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
    CR2: 0000000020000000 CR3: 00000001c47b6000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <IRQ>
     tcp_retransmit_skb+0x2e/0x250 net/ipv4/tcp_output.c:2923
     tcp_retransmit_timer+0xc50/0x3060 net/ipv4/tcp_timer.c:488
     tcp_write_timer_handler+0x339/0x960 net/ipv4/tcp_timer.c:573
     tcp_write_timer+0x111/0x1d0 net/ipv4/tcp_timer.c:593
     call_timer_fn+0x230/0x940 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x79e/0xc50 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2e0/0xaf5 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1d1/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:525 [inline]
     smp_apic_timer_interrupt+0x17e/0x710 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:863
    
    Fixes: cf60af03ca4e ("net-tcp: Fast Open client - sendmsg(MSG_FASTOPEN)")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5e907c347211d94727da350d8b784a68ac18a24
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri May 18 04:47:55 2018 -0700

    sock_diag: fix use-after-free read in __sk_free
    
    [ Upstream commit 9709020c86f6bf8439ca3effc58cfca49a5de192 ]
    
    We must not call sock_diag_has_destroy_listeners(sk) on a socket
    that has no reference on net structure.
    
    BUG: KASAN: use-after-free in sock_diag_has_destroy_listeners include/linux/sock_diag.h:75 [inline]
    BUG: KASAN: use-after-free in __sk_free+0x329/0x340 net/core/sock.c:1609
    Read of size 8 at addr ffff88018a02e3a0 by task swapper/1/0
    
    CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.17.0-rc5+ #54
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1b9/0x294 lib/dump_stack.c:113
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0x242/0x2fe mm/kasan/report.c:412
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:433
     sock_diag_has_destroy_listeners include/linux/sock_diag.h:75 [inline]
     __sk_free+0x329/0x340 net/core/sock.c:1609
     sk_free+0x42/0x50 net/core/sock.c:1623
     sock_put include/net/sock.h:1664 [inline]
     reqsk_free include/net/request_sock.h:116 [inline]
     reqsk_put include/net/request_sock.h:124 [inline]
     inet_csk_reqsk_queue_drop_and_put net/ipv4/inet_connection_sock.c:672 [inline]
     reqsk_timer_handler+0xe27/0x10e0 net/ipv4/inet_connection_sock.c:739
     call_timer_fn+0x230/0x940 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x79e/0xc50 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2e0/0xaf5 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1d1/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:525 [inline]
     smp_apic_timer_interrupt+0x17e/0x710 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:863
     </IRQ>
    RIP: 0010:native_safe_halt+0x6/0x10 arch/x86/include/asm/irqflags.h:54
    RSP: 0018:ffff8801d9ae7c38 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff13
    RAX: dffffc0000000000 RBX: 1ffff1003b35cf8a RCX: 0000000000000000
    RDX: 1ffffffff11a30d0 RSI: 0000000000000001 RDI: ffffffff88d18680
    RBP: ffff8801d9ae7c38 R08: ffffed003b5e46c3 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000001
    R13: ffff8801d9ae7cf0 R14: ffffffff897bef20 R15: 0000000000000000
     arch_safe_halt arch/x86/include/asm/paravirt.h:94 [inline]
     default_idle+0xc2/0x440 arch/x86/kernel/process.c:354
     arch_cpu_idle+0x10/0x20 arch/x86/kernel/process.c:345
     default_idle_call+0x6d/0x90 kernel/sched/idle.c:93
     cpuidle_idle_call kernel/sched/idle.c:153 [inline]
     do_idle+0x395/0x560 kernel/sched/idle.c:262
     cpu_startup_entry+0x104/0x120 kernel/sched/idle.c:368
     start_secondary+0x426/0x5b0 arch/x86/kernel/smpboot.c:269
     secondary_startup_64+0xa5/0xb0 arch/x86/kernel/head_64.S:242
    
    Allocated by task 4557:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc4/0xe0 mm/kasan/kasan.c:553
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:490
     kmem_cache_alloc+0x12e/0x760 mm/slab.c:3554
     kmem_cache_zalloc include/linux/slab.h:691 [inline]
     net_alloc net/core/net_namespace.c:383 [inline]
     copy_net_ns+0x159/0x4c0 net/core/net_namespace.c:423
     create_new_namespaces+0x69d/0x8f0 kernel/nsproxy.c:107
     unshare_nsproxy_namespaces+0xc3/0x1f0 kernel/nsproxy.c:206
     ksys_unshare+0x708/0xf90 kernel/fork.c:2408
     __do_sys_unshare kernel/fork.c:2476 [inline]
     __se_sys_unshare kernel/fork.c:2474 [inline]
     __x64_sys_unshare+0x31/0x40 kernel/fork.c:2474
     do_syscall_64+0x1b1/0x800 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Freed by task 69:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x11a/0x170 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kmem_cache_free+0x86/0x2d0 mm/slab.c:3756
     net_free net/core/net_namespace.c:399 [inline]
     net_drop_ns.part.14+0x11a/0x130 net/core/net_namespace.c:406
     net_drop_ns net/core/net_namespace.c:405 [inline]
     cleanup_net+0x6a1/0xb20 net/core/net_namespace.c:541
     process_one_work+0xc1e/0x1b50 kernel/workqueue.c:2145
     worker_thread+0x1cc/0x1440 kernel/workqueue.c:2279
     kthread+0x345/0x410 kernel/kthread.c:240
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:412
    
    The buggy address belongs to the object at ffff88018a02c140
     which belongs to the cache net_namespace of size 8832
    The buggy address is located 8800 bytes inside of
     8832-byte region [ffff88018a02c140, ffff88018a02e3c0)
    The buggy address belongs to the page:
    page:ffffea0006280b00 count:1 mapcount:0 mapping:ffff88018a02c140 index:0x0 compound_mapcount: 0
    flags: 0x2fffc0000008100(slab|head)
    raw: 02fffc0000008100 ffff88018a02c140 0000000000000000 0000000100000001
    raw: ffffea00062a1320 ffffea0006268020 ffff8801d9bdde40 0000000000000000
    page dumped because: kasan: bad access detected
    
    Fixes: b922622ec6ef ("sock_diag: don't broadcast kernel sockets")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Craig Gallek <kraig@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6190cce26e40bf71c4d375b21eea74bb07b6a0f3
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri May 11 13:24:25 2018 -0400

    packet: in packet_snd start writing at link layer allocation
    
    [ Upstream commit b84bbaf7a6c8cca24f8acf25a2c8e46913a947ba ]
    
    Packet sockets allow construction of packets shorter than
    dev->hard_header_len to accommodate protocols with variable length
    link layer headers. These packets are padded to dev->hard_header_len,
    because some device drivers interpret that as a minimum packet size.
    
    packet_snd reserves dev->hard_header_len bytes on allocation.
    SOCK_DGRAM sockets call skb_push in dev_hard_header() to ensure that
    link layer headers are stored in the reserved range. SOCK_RAW sockets
    do the same in tpacket_snd, but not in packet_snd.
    
    Syzbot was able to send a zero byte packet to a device with massive
    116B link layer header, causing padding to cross over into skb_shinfo.
    Fix this by writing from the start of the llheader reserved range also
    in the case of packet_snd/SOCK_RAW.
    
    Update skb_set_network_header to the new offset. This also corrects
    it for SOCK_DGRAM, where it incorrectly double counted reserve due to
    the skb_push in dev_hard_header.
    
    Fixes: 9ed988cd5915 ("packet: validate variable length ll headers")
    Reported-by: syzbot+71d74a5406d02057d559@syzkaller.appspotmail.com
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ef22bd08dcff6a8d761829647e5eb321576a83a
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu May 17 13:13:29 2018 -0400

    net: test tailroom before appending to linear skb
    
    [ Upstream commit 113f99c3358564a0647d444c2ae34e8b1abfd5b9 ]
    
    Device features may change during transmission. In particular with
    corking, a device may toggle scatter-gather in between allocating
    and writing to an skb.
    
    Do not unconditionally assume that !NETIF_F_SG at write time implies
    that the same held at alloc time and thus the skb has sufficient
    tailroom.
    
    This issue predates git history.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97b7270c3dc8bee6bf43df84595fd898014e3e0c
Author: Tarick Bedeir <tarick@google.com>
Date:   Sun May 13 16:38:45 2018 -0700

    net/mlx4_core: Fix error handling in mlx4_init_port_info.
    
    [ Upstream commit 57f6f99fdad9984801cde05c1db68fe39b474a10 ]
    
    Avoid exiting the function with a lingering sysfs file (if the first
    call to device_create_file() fails while the second succeeds), and avoid
    calling devlink_port_unregister() twice.
    
    In other words, either mlx4_init_port_info() succeeds and returns zero, or
    it fails, returns non-zero, and requires no cleanup.
    
    Fixes: 096335b3f983 ("mlx4_core: Allow dynamic MTU configuration for IB ports")
    Signed-off-by: Tarick Bedeir <tarick@google.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
