commit a472efc75989c7092187fe00f0400e02c495c436
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Dec 16 09:09:56 2014 -0800

    Linux 3.10.63

commit 4b36a914ae129171631ade18ff3e6c417e21a84c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Dec 6 18:02:55 2014 +0100

    ALSA: usb-audio: Don't resubmit pending URBs at MIDI error recovery
    
    commit 66139a48cee1530c91f37c145384b4ee7043f0b7 upstream.
    
    In snd_usbmidi_error_timer(), the driver tries to resubmit MIDI input
    URBs to reactivate the MIDI stream, but this causes the error when
    some of URBs are still pending like:
    
     WARNING: CPU: 0 PID: 0 at ../drivers/usb/core/urb.c:339 usb_submit_urb+0x5f/0x70()
     URB ef705c40 submitted while active
     CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.16.6-2-desktop #1
     Hardware name: FOXCONN TPS01/TPS01, BIOS 080015  03/23/2010
      c0984bfa f4009ed4 c078deaf f4009ee4 c024c884 c09a135c f4009f00 00000000
      c0984bfa 00000153 c061ac4f c061ac4f 00000009 00000001 ef705c40 e854d1c0
      f4009eec c024c8d3 00000009 f4009ee4 c09a135c f4009f00 f4009f04 c061ac4f
     Call Trace:
      [<c0205df6>] try_stack_unwind+0x156/0x170
      [<c020482a>] dump_trace+0x5a/0x1b0
      [<c0205e56>] show_trace_log_lvl+0x46/0x50
      [<c02049d1>] show_stack_log_lvl+0x51/0xe0
      [<c0205eb7>] show_stack+0x27/0x50
      [<c078deaf>] dump_stack+0x45/0x65
      [<c024c884>] warn_slowpath_common+0x84/0xa0
      [<c024c8d3>] warn_slowpath_fmt+0x33/0x40
      [<c061ac4f>] usb_submit_urb+0x5f/0x70
      [<f7974104>] snd_usbmidi_submit_urb+0x14/0x60 [snd_usbmidi_lib]
      [<f797483a>] snd_usbmidi_error_timer+0x6a/0xa0 [snd_usbmidi_lib]
      [<c02570c0>] call_timer_fn+0x30/0x130
      [<c0257442>] run_timer_softirq+0x1c2/0x260
      [<c0251493>] __do_softirq+0xc3/0x270
      [<c0204732>] do_softirq_own_stack+0x22/0x30
      [<c025186d>] irq_exit+0x8d/0xa0
      [<c0795228>] smp_apic_timer_interrupt+0x38/0x50
      [<c0794a3c>] apic_timer_interrupt+0x34/0x3c
      [<c0673d9e>] cpuidle_enter_state+0x3e/0xd0
      [<c028bb8d>] cpu_idle_loop+0x29d/0x3e0
      [<c028bd23>] cpu_startup_entry+0x53/0x60
      [<c0bfac1e>] start_kernel+0x415/0x41a
    
    For avoiding these errors, check the pending URBs and skip
    resubmitting such ones.
    
    Reported-and-tested-by: Stefan Seyfried <stefan.seyfried@googlemail.com>
    Acked-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4088246f870e3d64b70cf4ff597910d0612d9893
Author: Anton Blanchard <anton@samba.org>
Date:   Thu Nov 27 08:11:28 2014 +1100

    powerpc: 32 bit getcpu VDSO function uses 64 bit instructions
    
    commit 152d44a853e42952f6c8a504fb1f8eefd21fd5fd upstream.
    
    I used some 64 bit instructions when adding the 32 bit getcpu VDSO
    function. Fix it.
    
    Fixes: 18ad51dd342a ("powerpc: Add VDSO version of getcpu")
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f45ce8f415f1aed22af1d0a8c551053ad540c8b
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Mon Jun 17 15:40:58 2013 -0700

    ARM: sched_clock: Load cycle count after epoch stabilizes
    
    commit 336ae1180df5f69b9e0fb6561bec01c5f64361cf upstream.
    
    There is a small race between when the cycle count is read from
    the hardware and when the epoch stabilizes. Consider this
    scenario:
    
     CPU0                           CPU1
     ----                           ----
     cyc = read_sched_clock()
     cyc_to_sched_clock()
                                     update_sched_clock()
                                      ...
                                      cd.epoch_cyc = cyc;
      epoch_cyc = cd.epoch_cyc;
      ...
      epoch_ns + cyc_to_ns((cyc - epoch_cyc)
    
    The cyc on cpu0 was read before the epoch changed. But we
    calculate the nanoseconds based on the new epoch by subtracting
    the new epoch from the old cycle count. Since epoch is most likely
    larger than the old cycle count we calculate a large number that
    will be converted to nanoseconds and added to epoch_ns, causing
    time to jump forward too much.
    
    Fix this problem by reading the hardware after the epoch has
    stabilized.
    
    Cc: Russell King <linux@arm.linux.org.uk>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a18c108e386866325b3b6e986f612ee512787c
Author: Todd Fujinaka <todd.fujinaka@intel.com>
Date:   Tue Jun 17 06:58:11 2014 +0000

    igb: bring link up when PHY is powered up
    
    commit aec653c43b0c55667355e26d7de1236bda9fb4e3 upstream.
    
    Call igb_setup_link() when the PHY is powered up.
    
    Signed-off-by: Todd Fujinaka <todd.fujinaka@intel.com>
    Reported-by: Jeff Westfahl <jeff.westfahl@ni.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Cc: Vincent Donnefort <vdonnefort@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b083f7cd529b45344f3129d5de9a73a06dd1cc7e
Author: Jan Kara <jack@suse.cz>
Date:   Tue Dec 3 11:20:06 2013 +0100

    ext2: Fix oops in ext2_get_block() called from ext2_quota_write()
    
    commit df4e7ac0bb70abc97fbfd9ef09671fc084b3f9db upstream.
    
    ext2_quota_write() doesn't properly setup bh it passes to
    ext2_get_block() and thus we hit assertion BUG_ON(maxblocks == 0) in
    ext2_get_blocks() (or we could actually ask for mapping arbitrary number
    of blocks depending on whatever value was on stack).
    
    Fix ext2_quota_write() to properly fill in number of blocks to map.
    
    Reviewed-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reported-by: Christoph Hellwig <hch@infradead.org>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ca178ae0f426c595e62ebde92fc713255ccd101
Author: Nadav Har'El <nyh@il.ibm.com>
Date:   Mon Aug 5 11:07:17 2013 +0300

    nEPT: Nested INVEPT
    
    commit bfd0a56b90005f8c8a004baf407ad90045c2b11e upstream.
    
    If we let L1 use EPT, we should probably also support the INVEPT instruction.
    
    In our current nested EPT implementation, when L1 changes its EPT table
    for L2 (i.e., EPT12), L0 modifies the shadow EPT table (EPT02), and in
    the course of this modification already calls INVEPT. But if last level
    of shadow page is unsync not all L1's changes to EPT12 are intercepted,
    which means roots need to be synced when L1 calls INVEPT. Global INVEPT
    should not be different since roots are synced by kvm_mmu_load() each
    time EPTP02 changes.
    
    Reviewed-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
    Signed-off-by: Nadav Har'El <nyh@il.ibm.com>
    Signed-off-by: Jun Nakajima <jun.nakajima@intel.com>
    Signed-off-by: Xinhao Xu <xinhao.xu@intel.com>
    Signed-off-by: Yang Zhang <yang.z.zhang@Intel.com>
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.2:
     - Adjust context, filename
     - Simplify handle_invept() as recommended by Paolo - nEPT is not
       supported so we always raise #UD]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Vinson Lee <vlee@twopensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 751e5624915f39d16f935a06002cba2a4712df42
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Dec 3 12:13:58 2014 +0100

    net: sctp: use MAX_HEADER for headroom reserve in output path
    
    [ Upstream commit 9772b54c55266ce80c639a80aa68eeb908f8ecf5 ]
    
    To accomodate for enough headroom for tunnels, use MAX_HEADER instead
    of LL_MAX_HEADER. Robert reported that he has hit after roughly 40hrs
    of trinity an skb_under_panic() via SCTP output path (see reference).
    I couldn't reproduce it from here, but not using MAX_HEADER as elsewhere
    in other protocols might be one possible cause for this.
    
    In any case, it looks like accounting on chunks themself seems to look
    good as the skb already passed the SCTP output path and did not hit
    any skb_over_panic(). Given tunneling was enabled in his .config, the
    headroom would have been expanded by MAX_HEADER in this case.
    
    Reported-by: Robert Święcki <robert@swiecki.net>
    Reference: https://lkml.org/lkml/2014/12/1/507
    Fixes: 594ccc14dfe4d ("[SCTP] Replace incorrect use of dev_alloc_skb with alloc_skb in sctp_packet_transmit().")
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Acked-by: Vlad Yasevich <vyasevich@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8df2d2d784394efd9ab16d8f05bdc49ce46ac32c
Author: willy tarreau <w@1wt.eu>
Date:   Tue Dec 2 08:13:04 2014 +0100

    net: mvneta: fix Tx interrupt delay
    
    [ Upstream commit aebea2ba0f7495e1a1c9ea5e753d146cb2f6b845 ]
    
    The mvneta driver sets the amount of Tx coalesce packets to 16 by
    default. Normally that does not cause any trouble since the driver
    uses a much larger Tx ring size (532 packets). But some sockets
    might run with very small buffers, much smaller than the equivalent
    of 16 packets. This is what ping is doing for example, by setting
    SNDBUF to 324 bytes rounded up to 2kB by the kernel.
    
    The problem is that there is no documented method to force a specific
    packet to emit an interrupt (eg: the last of the ring) nor is it
    possible to make the NIC emit an interrupt after a given delay.
    
    In this case, it causes trouble, because when ping sends packets over
    its raw socket, the few first packets leave the system, and the first
    15 packets will be emitted without an IRQ being generated, so without
    the skbs being freed. And since the socket's buffer is small, there's
    no way to reach that amount of packets, and the ping ends up with
    "send: no buffer available" after sending 6 packets. Running with 3
    instances of ping in parallel is enough to hide the problem, because
    with 6 packets per instance, that's 18 packets total, which is enough
    to grant a Tx interrupt before all are sent.
    
    The original driver in the LSP kernel worked around this design flaw
    by using a software timer to clean up the Tx descriptors. This timer
    was slow and caused terrible network performance on some Tx-bound
    workloads (such as routing) but was enough to make tools like ping
    work correctly.
    
    Instead here, we simply set the packet counts before interrupt to 1.
    This ensures that each packet sent will produce an interrupt. NAPI
    takes care of coalescing interrupts since the interrupt is disabled
    once generated.
    
    No measurable performance impact nor CPU usage were observed on small
    nor large packets, including when saturating the link on Tx, and this
    fixes tools like ping which rely on too small a send buffer. If one
    wants to increase this value for certain workloads where it is safe
    to do so, "ethtool -C $dev tx-frames" will override this default
    setting.
    
    This fix needs to be applied to stable kernels starting with 3.10.
    
    Tested-By: Maggie Mae Roxas <maggie.mae.roxas@gmail.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1973ac37c15ab85b170aa166b6192f45c03a3a5d
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Thu Nov 27 10:16:15 2014 +0100

    rtnetlink: release net refcnt on error in do_setlink()
    
    [ Upstream commit e0ebde0e131b529fd721b24f62872def5ec3718c ]
    
    rtnl_link_get_net() holds a reference on the 'struct net', we need to release
    it in case of error.
    
    CC: Eric W. Biederman <ebiederm@xmission.com>
    Fixes: b51642f6d77b ("net: Enable a userns root rtnl calls that are safe for unprivilged users")
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Reviewed-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfcff6abc8bc6c4b9aa9e9cc93c2924a5c96b22d
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Tue Nov 25 11:54:31 2014 +0200

    net/mlx4_core: Limit count field to 24 bits in qp_alloc_res
    
    [ Upstream commit 2d5c57d7fbfaa642fb7f0673df24f32b83d9066c ]
    
    Some VF drivers use the upper byte of "param1" (the qp count field)
    in mlx4_qp_reserve_range() to pass flags which are used to optimize
    the range allocation.
    
    Under the current code, if any of these flags are set, the 32-bit
    count field yields a count greater than 2^24, which is out of range,
    and this VF fails.
    
    As these flags represent a "best-effort" allocation hint anyway, they may
    safely be ignored. Therefore, the PF driver may simply mask out the bits.
    
    Fixes: c82e9aa0a8 "mlx4_core: resource tracking for HCA resources used by guests"
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a72e06f5ed0af18baecee57adf2659583de8cdbf
Author: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
Date:   Tue Nov 25 14:21:11 2014 -0200

    tg3: fix ring init when there are more TX than RX channels
    
    [ Upstream commit a620a6bc1c94c22d6c312892be1e0ae171523125 ]
    
    If TX channels are set to 4 and RX channels are set to less than 4,
    using ethtool -L, the driver will try to initialize more RX channels
    than it has allocated, causing an oops.
    
    This fix only initializes the RX ring if it has been allocated.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c556ebe8c839cdf2f4e03d5daab4f9d0df35d935
Author: Yuri Chislov <yuri.chislov@gmail.com>
Date:   Mon Nov 24 11:25:15 2014 +0100

    ipv6: gre: fix wrong skb->protocol in WCCP
    
    [ Upstream commit be6572fdb1bfbe23b2624d477de50af50b02f5d6 ]
    
    When using GRE redirection in WCCP, it sets the wrong skb->protocol,
    that is, ETH_P_IP instead of ETH_P_IPV6 for the encapuslated traffic.
    
    Fixes: c12b395a4664 ("gre: Support GRE over IPv6")
    Cc: Dmitry Kozlov <xeb@mail.ru>
    Signed-off-by: Yuri Chislov <yuri.chislov@gmail.com>
    Tested-by: Yuri Chislov <yuri.chislov@gmail.com>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69052167b48fb6878001073cfe44f5b1949538ae
Author: Dmitry Torokhov <dtor@chromium.org>
Date:   Fri Nov 14 13:39:05 2014 -0800

    sata_fsl: fix error handling of irq_of_parse_and_map
    
    commit aad0b624129709c94c2e19e583b6053520353fa8 upstream.
    
    irq_of_parse_and_map() returns 0 on error (the result is unsigned int),
    so testing for negative result never works.
    
    Signed-off-by: Dmitry Torokhov <dtor@chromium.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d1da805838186a88316ef3b08df458b1acd6296
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Dec 4 13:13:28 2014 -0500

    ahci: disable MSI on SAMSUNG 0xa800 SSD
    
    commit 2b21ef0aae65f22f5ba86b13c4588f6f0c2dbefb upstream.
    
    Just like 0x1600 which got blacklisted by 66a7cbc303f4 ("ahci: disable
    MSI instead of NCQ on Samsung pci-e SSDs on macbooks"), 0xa800 chokes
    on NCQ commands if MSI is enabled.  Disable MSI.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Dominik Mierzejewski <dominik@greysector.net>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=89171
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c2098f864b10dbb018ae82d50ffa0dfb0928175
Author: Devin Ryles <devin.ryles@intel.com>
Date:   Fri Nov 7 17:59:05 2014 -0500

    AHCI: Add DeviceIDs for Sunrise Point-LP SATA controller
    
    commit 249cd0a187ed4ef1d0af7f74362cc2791ec5581b upstream.
    
    This patch adds DeviceIDs for Sunrise Point-LP.
    
    Signed-off-by: Devin Ryles <devin.ryles@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df3300033604498941be3519b2c403977c148674
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Thu Nov 6 17:49:45 2014 -0300

    media: smiapp: Only some selection targets are settable
    
    commit b31eb901c4e5eeef4c83c43dfbc7fe0d4348cb21 upstream.
    
    Setting a non-settable selection target caused BUG() to be called. The check
    for valid selections only takes the selection target into account, but does
    not tell whether it may be set, or only get. Fix the issue by simply
    returning an error to the user.
    
    Signed-off-by: Sakari Ailus <sakari.ailus@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca372d75eb86d01367ca8e5f6f684eb30a8b8195
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Mon Dec 1 17:56:54 2014 +0100

    drm/i915: Unlock panel even when LVDS is disabled
    
    commit b0616c5306b342ceca07044dbc4f917d95c4f825 upstream.
    
    Otherwise we'll have backtraces in assert_panel_unlocked because the
    BIOS locks the register. In the reporter's case this regression was
    introduced in
    
    commit c31407a3672aaebb4acddf90944a114fa5c8af7b
    Author: Chris Wilson <chris@chris-wilson.co.uk>
    Date:   Thu Oct 18 21:07:01 2012 +0100
    
        drm/i915: Add no-lvds quirk for Supermicro X7SPA-H
    
    Reported-by: Alexey Orishko <alexey.orishko@gmail.com>
    Cc: Alexey Orishko <alexey.orishko@gmail.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Francois Tigeot <ftigeot@wolfpond.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Tested-by: Alexey Orishko <alexey.orishko@gmail.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eae1f51fce481c2d3897ec49e6f457ffa8d7db3b
Author: Petr Mladek <pmladek@suse.cz>
Date:   Thu Nov 27 16:57:21 2014 +0100

    drm/radeon: kernel panic in drm_calc_vbltimestamp_from_scanoutpos with 3.18.0-rc6
    
    commit f5475cc43c899e33098d4db44b7c5e710f16589d upstream.
    
    I was unable too boot 3.18.0-rc6 because of the following kernel
    panic in drm_calc_vbltimestamp_from_scanoutpos():
    
        [drm] Initialized drm 1.1.0 20060810
        [drm] radeon kernel modesetting enabled.
        [drm] initializing kernel modesetting (RV100 0x1002:0x515E 0x15D9:0x8080).
        [drm] register mmio base: 0xC8400000
        [drm] register mmio size: 65536
        radeon 0000:0b:01.0: VRAM: 128M 0x00000000D0000000 - 0x00000000D7FFFFFF (16M used)
        radeon 0000:0b:01.0: GTT: 512M 0x00000000B0000000 - 0x00000000CFFFFFFF
        [drm] Detected VRAM RAM=128M, BAR=128M
        [drm] RAM width 16bits DDR
        [TTM] Zone  kernel: Available graphics memory: 3829346 kiB
        [TTM] Zone   dma32: Available graphics memory: 2097152 kiB
        [TTM] Initializing pool allocator
        [TTM] Initializing DMA pool allocator
        [drm] radeon: 16M of VRAM memory ready
        [drm] radeon: 512M of GTT memory ready.
        [drm] GART: num cpu pages 131072, num gpu pages 131072
        [drm] PCI GART of 512M enabled (table at 0x0000000037880000).
        radeon 0000:0b:01.0: WB disabled
        radeon 0000:0b:01.0: fence driver on ring 0 use gpu addr 0x00000000b0000000 and cpu addr 0xffff8800bbbfa000
        [drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
        [drm] Driver supports precise vblank timestamp query.
        [drm] radeon: irq initialized.
        [drm] Loading R100 Microcode
        radeon 0000:0b:01.0: Direct firmware load for radeon/R100_cp.bin failed with error -2
        radeon_cp: Failed to load firmware "radeon/R100_cp.bin"
        [drm:r100_cp_init] *ERROR* Failed to load firmware!
        radeon 0000:0b:01.0: failed initializing CP (-2).
        radeon 0000:0b:01.0: Disabling GPU acceleration
        [drm] radeon: cp finalized
        BUG: unable to handle kernel NULL pointer dereference at 000000000000025c
        IP: [<ffffffff8150423b>] drm_calc_vbltimestamp_from_scanoutpos+0x4b/0x320
        PGD 0
        Oops: 0000 [#1] SMP
        Modules linked in:
        CPU: 1 PID: 1 Comm: swapper/0 Not tainted 3.18.0-rc6-4-default #2649
        Hardware name: Supermicro X7DB8/X7DB8, BIOS 6.00 07/26/2006
        task: ffff880234da2010 ti: ffff880234da4000 task.ti: ffff880234da4000
        RIP: 0010:[<ffffffff8150423b>]  [<ffffffff8150423b>] drm_calc_vbltimestamp_from_scanoutpos+0x4b/0x320
        RSP: 0000:ffff880234da7918  EFLAGS: 00010086
        RAX: ffffffff81557890 RBX: 0000000000000000 RCX: ffff880234da7a48
        RDX: ffff880234da79f4 RSI: 0000000000000000 RDI: ffff880232e15000
        RBP: ffff880234da79b8 R08: 0000000000000000 R09: 0000000000000000
        R10: 000000000000000a R11: 0000000000000001 R12: ffff880232dda1c0
        R13: ffff880232e1518c R14: 0000000000000292 R15: ffff880232e15000
        FS:  0000000000000000(0000) GS:ffff88023fc40000(0000) knlGS:0000000000000000
        CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
        CR2: 000000000000025c CR3: 0000000002014000 CR4: 00000000000007e0
        Stack:
         ffff880234da79d8 0000000000000286 ffff880232dcbc00 0000000000002480
         ffff880234da7958 0000000000000296 ffff880234da7998 ffffffff8151b51d
         ffff880234da7a48 0000000032dcbeb0 ffff880232dcbc00 ffff880232dcbc58
        Call Trace:
         [<ffffffff8151b51d>] ? drm_vma_offset_remove+0x1d/0x110
         [<ffffffff8152dc98>] radeon_get_vblank_timestamp_kms+0x38/0x60
         [<ffffffff8152076a>] ? ttm_bo_release_list+0xba/0x180
         [<ffffffff81503751>] drm_get_last_vbltimestamp+0x41/0x70
         [<ffffffff81503933>] vblank_disable_and_save+0x73/0x1d0
         [<ffffffff81106b2f>] ? try_to_del_timer_sync+0x4f/0x70
         [<ffffffff81505245>] drm_vblank_cleanup+0x65/0xa0
         [<ffffffff815604fa>] radeon_irq_kms_fini+0x1a/0x70
         [<ffffffff8156c07e>] r100_init+0x26e/0x410
         [<ffffffff8152ae3e>] radeon_device_init+0x7ae/0xb50
         [<ffffffff8152d57f>] radeon_driver_load_kms+0x8f/0x210
         [<ffffffff81506965>] drm_dev_register+0xb5/0x110
         [<ffffffff8150998f>] drm_get_pci_dev+0x8f/0x200
         [<ffffffff815291cd>] radeon_pci_probe+0xad/0xe0
         [<ffffffff8141a365>] local_pci_probe+0x45/0xa0
         [<ffffffff8141b741>] pci_device_probe+0xd1/0x130
         [<ffffffff81633dad>] driver_probe_device+0x12d/0x3e0
         [<ffffffff8163413b>] __driver_attach+0x9b/0xa0
         [<ffffffff816340a0>] ? __device_attach+0x40/0x40
         [<ffffffff81631cd3>] bus_for_each_dev+0x63/0xa0
         [<ffffffff8163378e>] driver_attach+0x1e/0x20
         [<ffffffff81633390>] bus_add_driver+0x180/0x240
         [<ffffffff81634914>] driver_register+0x64/0xf0
         [<ffffffff81419cac>] __pci_register_driver+0x4c/0x50
         [<ffffffff81509bf5>] drm_pci_init+0xf5/0x120
         [<ffffffff821dc871>] ? ttm_init+0x6a/0x6a
         [<ffffffff821dc908>] radeon_init+0x97/0xb5
         [<ffffffff810002fc>] do_one_initcall+0xbc/0x1f0
         [<ffffffff810e3278>] ? __wake_up+0x48/0x60
         [<ffffffff8218e256>] kernel_init_freeable+0x18a/0x215
         [<ffffffff8218d983>] ? initcall_blacklist+0xc0/0xc0
         [<ffffffff818a78f0>] ? rest_init+0x80/0x80
         [<ffffffff818a78fe>] kernel_init+0xe/0xf0
         [<ffffffff818c0c3c>] ret_from_fork+0x7c/0xb0
         [<ffffffff818a78f0>] ? rest_init+0x80/0x80
        Code: 45 ac 0f 88 a8 01 00 00 3b b7 d0 01 00 00 49 89 ff 0f 83 99 01 00 00 48 8b 47 20 48 8b 80 88 00 00 00 48 85 c0 0f 84 cd 01 00 00 <41> 8b b1 5c 02 00 00 41 8b 89 58 02 00 00 89 75 98 41 8b b1 60
        RIP  [<ffffffff8150423b>] drm_calc_vbltimestamp_from_scanoutpos+0x4b/0x320
         RSP <ffff880234da7918>
        CR2: 000000000000025c
        ---[ end trace ad2c0aadf48e2032 ]---
        Kernel panic - not syncing: Attempted to kill init! exitcode=0x00000009
    
    It has helped me to add a NULL pointer check that was suggested at
    http://lists.freedesktop.org/archives/dri-devel/2014-October/070663.html
    
    I am not familiar with the code. But the change looks sane
    and we need something fast at this stage of 3.18 development.
    
    Suggested-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Petr Mladek <pmladek@suse.cz>
    Tested-by: Petr Mladek <pmladek@suse.cz>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99dfbb31e4544a9a89632240b3ca2bd715636ed8
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Mon Dec 1 17:34:04 2014 +0200

    i2c: davinci: generate STP always when NACK is received
    
    commit 9ea359f7314132cbcb5a502d2d8ef095be1f45e4 upstream.
    
    According to I2C specification the NACK should be handled as follows:
    "When SDA remains HIGH during this ninth clock pulse, this is defined as the Not
    Acknowledge signal. The master can then generate either a STOP condition to
    abort the transfer, or a repeated START condition to start a new transfer."
    [I2C spec Rev. 6, 3.1.6: http://www.nxp.com/documents/user_manual/UM10204.pdf]
    
    Currently the Davinci i2c driver interrupts the transfer on receipt of a
    NACK but fails to send a STOP in some situations and so makes the bus
    stuck until next I2C IP reset (idle/enable).
    
    For example, the issue will happen during SMBus read transfer which
    consists from two i2c messages write command/address and read data:
    
    S Slave Address Wr A Command Code A Sr Slave Address Rd A D1..Dn A P
    <--- write -----------------------> <--- read --------------------->
    
    The I2C client device will send NACK if it can't recognize "Command Code"
    and it's expected from I2C master to generate STP in this case.
    But now, Davinci i2C driver will just exit with -EREMOTEIO and STP will
    not be generated.
    
    Hence, fix it by generating Stop condition (STP) always when NACK is received.
    
    This patch fixes Davinci I2C in the same way it was done for OMAP I2C
    commit cda2109a26eb ("i2c: omap: query STP always when NACK is received").
    
    Reviewed-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reported-by: Hein Tibosch <hein_tibosch@yahoo.es>
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cf69220fb211f3d565675dc356bb01697080e5f
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Fri Nov 21 04:16:51 2014 +0400

    i2c: omap: fix i207 errata handling
    
    commit ccfc866356674cb3a61829d239c685af6e85f197 upstream.
    
    commit 6d9939f651419a63e091105663821f9c7d3fec37 (i2c: omap: split out [XR]DR
    and [XR]RDY) changed the way how errata i207 (I2C: RDR Flag May Be Incorrectly
    Set) get handled. 6d9939f6514 code doesn't correspond to workaround provided by
    errata.
    
    According to errata ISR must filter out spurious RDR before data read not after.
    ISR must read RXSTAT to get number of bytes available to read. Because RDR
    could be set while there could no data in the receive FIFO.
    
    Restored pre 6d9939f6514 way of handling errata.
    
    Found by code review. Real impact haven't seen.
    Tested on Beagleboard XM C.
    
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Fixes: 6d9939f651419a63e09110 i2c: omap: split out [XR]DR and [XR]RDY
    Tested-by: Felipe Balbi <balbi@ti.com>
    Reviewed-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daeac09879f0b1491bb5ebdb4405428f3ab95a21
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Tue Nov 18 21:00:58 2014 +0400

    i2c: omap: fix NACK and Arbitration Lost irq handling
    
    commit 27caca9d2e01c92b26d0690f065aad093fea01c7 upstream.
    
    commit 1d7afc95946487945cc7f5019b41255b72224b70 (i2c: omap: ack IRQ in parts)
    changed the interrupt handler to complete transfers without clearing
    XRDY (AL case) and ARDY (NACK case) flags. XRDY or ARDY interrupts will be
    fired again. As a result, ISR keep processing transfer after it was already
    complete (from the driver code point of view).
    
    A didn't see real impacts of the 1d7afc9, but it is really bad idea to
    have ISR running on user data after transfer was complete.
    
    It looks, what 1d7afc9 violate TI specs in what how AL and NACK should be
    handled (see Note 1, sprugn4r, Figure 17-31 and Figure 17-32).
    
    According to specs (if I understood correctly), in case of NACK and AL driver
    must reset NACK, AL, ARDY, RDR, and RRDY (Master Receive Mode), and
    NACK, AL, ARDY, and XDR (Master Transmitter Mode).
    
    All that is done down the code under the if condition:
    if (stat & (OMAP_I2C_STAT_ARDY | OMAP_I2C_STAT_NACK | OMAP_I2C_STAT_AL)) ...
    
    The patch restore pre 1d7afc9 logic of handling NACK and AL interrupts, so
    no interrupts is fired after ISR informs the rest of driver what transfer
    complete.
    
    Note: instead of removing break under NACK case, we could just replace 'break'
    with 'continue' and allow NACK transfer to finish using ARDY event. I found
    that NACK and ARDY bits usually set together. That case confirm TI wiki:
    http://processors.wiki.ti.com/index.php/I2C_Tips#Detecting_and_handling_NACK
    
    In order if someone interested in the event traces for NACK and AL cases,
    I sent them to mailing list.
    
    Tested on Beagleboard XM C.
    
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Fixes: 1d7afc9 i2c: omap: ack IRQ in parts
    Acked-by: Felipe Balbi <balbi@ti.com>
    Tested-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a8c00c7edd66707bc60fb0dee21bdb2740baf4e
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Tue Nov 25 20:28:24 2014 -0600

    xen-netfront: Remove BUGs on paged skb data which crosses a page boundary
    
    commit 8d609725d4357f499e2103e46011308b32f53513 upstream.
    
    These BUGs can be erroneously triggered by frags which refer to
    tail pages within a compound page. The data in these pages may
    overrun the hardware page while still being contained within the
    compound page, but since compound_order() evaluates to 0 for tail
    pages the assertion fails. The code already iterates through
    subsequent pages correctly in this scenario, so the BUGs are
    unnecessary and can be removed.
    
    Fixes: f36c374782e4 ("xen/netfront: handle compound page fragments on transmit")
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Reviewed-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4542246879ccdb5f3cc58d8e66955246a74a9494
Author: Hugh Dickins <hughd@google.com>
Date:   Tue Dec 2 15:59:39 2014 -0800

    mm: fix swapoff hang after page migration and fork
    
    commit 2022b4d18a491a578218ce7a4eca8666db895a73 upstream.
    
    I've been seeing swapoff hangs in recent testing: it's cycling around
    trying unsuccessfully to find an mm for some remaining pages of swap.
    
    I have been exercising swap and page migration more heavily recently,
    and now notice a long-standing error in copy_one_pte(): it's trying to
    add dst_mm to swapoff's mmlist when it finds a swap entry, but is doing
    so even when it's a migration entry or an hwpoison entry.
    
    Which wouldn't matter much, except it adds dst_mm next to src_mm,
    assuming src_mm is already on the mmlist: which may not be so.  Then if
    pages are later swapped out from dst_mm, swapoff won't be able to find
    where to replace them.
    
    There's already a !non_swap_entry() test for stats: move that up before
    the swap_duplicate() and the addition to mmlist.
    
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Cc: Kelley Nielsen <kelleynnn@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22fff283762550ddc75c2ae070e71321559a29ac
Author: Weijie Yang <weijie.yang@samsung.com>
Date:   Tue Dec 2 15:59:25 2014 -0800

    mm: frontswap: invalidate expired data on a dup-store failure
    
    commit fb993fa1a2f669215fa03a09eed7848f2663e336 upstream.
    
    If a frontswap dup-store failed, it should invalidate the expired page
    in the backend, or it could trigger some data corruption issue.
    Such as:
     1. use zswap as the frontswap backend with writeback feature
     2. store a swap page(version_1) to entry A, success
     3. dup-store a newer page(version_2) to the same entry A, fail
     4. use __swap_writepage() write version_2 page to swapfile, success
     5. zswap do shrink, writeback version_1 page to swapfile
     6. version_2 page is overwrited by version_1, data corrupt.
    
    This patch fixes this issue by invalidating expired data immediately
    when meet a dup-store failure.
    
    Signed-off-by: Weijie Yang <weijie.yang@samsung.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Seth Jennings <sjennings@variantweb.net>
    Cc: Dan Streetman <ddstreet@ieee.org>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Bob Liu <bob.liu@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
