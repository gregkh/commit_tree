commit ad8c735b1497520df959f675718f39dca8cb8019
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Aug 19 08:27:10 2020 +0200

    Linux 5.8.2
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e430e763be2a0c7eefe2675fc574d8ed6b00874
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Aug 13 09:01:38 2020 -0600

    task_work: only grab task signal lock when needed
    
    commit ebf0d100df0731901c16632f78d78d35f4123bc4 upstream.
    
    If JOBCTL_TASK_WORK is already set on the targeted task, then we need
    not go through {lock,unlock}_task_sighand() to set it again and queue
    a signal wakeup. This is safe as we're checking it _after_ adding the
    new task_work with cmpxchg().
    
    The ordering is as follows:
    
    task_work_add()                         get_signal()
    --------------------------------------------------------------
    STORE(task->task_works, new_work);      STORE(task->jobctl);
    mb();                                   mb();
    LOAD(task->jobctl);                     LOAD(task->task_works);
    
    This speeds up TWA_SIGNAL handling quite a bit, which is important now
    that io_uring is relying on it for all task_work deliveries.
    
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Jann Horn <jannh@google.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df18711f9c002335f278628206ffc65af6fdf1f6
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Aug 12 17:33:30 2020 -0600

    io_uring: enable lookup of links holding inflight files
    
    commit f254ac04c8744cf7bfed012717eac34eacc65dfb upstream.
    
    When a process exits, we cancel whatever requests it has pending that
    are referencing the file table. However, if a link is holding a
    reference, then we cannot find it by simply looking at the inflight
    list.
    
    Enable checking of the poll and timeout list to find the link, and
    cancel it appropriately.
    
    Cc: stable@vger.kernel.org
    Reported-by: Josef <josef.grieb@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d181cfc89885486af0cad9e89e3fec29eb333957
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Aug 10 10:54:02 2020 -0600

    io_uring: add missing REQ_F_COMP_LOCKED for nested requests
    
    commit 9b7adba9eaec28e0e4343c96d0dbeb9578802f5f upstream.
    
    When we traverse into failing links or timeouts, we need to ensure we
    propagate the REQ_F_COMP_LOCKED flag to ensure that we correctly signal
    to the completion side that we already hold the completion lock.
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 960ea38bfe7a0edd403d6a9e2d358018b4ce3bfa
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Aug 11 08:04:14 2020 -0600

    io_uring: hold 'ctx' reference around task_work queue + execute
    
    commit 6d816e088c359866f9867057e04f244c608c42fe upstream.
    
    We're holding the request reference, but we need to go one higher
    to ensure that the ctx remains valid after the request has finished.
    If the ring is closed with pending task_work inflight, and the
    given io_kiocb finishes sync during issue, then we need a reference
    to the ring itself around the task_work execution cycle.
    
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: syzbot+9b260fc33297966f5a8e@syzkaller.appspotmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4418e11cf9b617b0d433ec9507291dc785d3501
Author: Guoyu Huang <hgy5945@gmail.com>
Date:   Wed Aug 5 03:53:50 2020 -0700

    io_uring: Fix NULL pointer dereference in loop_rw_iter()
    
    commit 2dd2111d0d383df104b144e0d1f6b5a00cb7cd88 upstream.
    
    loop_rw_iter() does not check whether the file has a read or
    write function. This can lead to NULL pointer dereference
    when the user passes in a file descriptor that does not have
    read or write function.
    
    The crash log looks like this:
    
    [   99.834071] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [   99.835364] #PF: supervisor instruction fetch in kernel mode
    [   99.836522] #PF: error_code(0x0010) - not-present page
    [   99.837771] PGD 8000000079d62067 P4D 8000000079d62067 PUD 79d8c067 PMD 0
    [   99.839649] Oops: 0010 [#2] SMP PTI
    [   99.840591] CPU: 1 PID: 333 Comm: io_wqe_worker-0 Tainted: G      D           5.8.0 #2
    [   99.842622] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014
    [   99.845140] RIP: 0010:0x0
    [   99.845840] Code: Bad RIP value.
    [   99.846672] RSP: 0018:ffffa1c7c01ebc08 EFLAGS: 00010202
    [   99.848018] RAX: 0000000000000000 RBX: ffff92363bd67300 RCX: ffff92363d461208
    [   99.849854] RDX: 0000000000000010 RSI: 00007ffdbf696bb0 RDI: ffff92363bd67300
    [   99.851743] RBP: ffffa1c7c01ebc40 R08: 0000000000000000 R09: 0000000000000000
    [   99.853394] R10: ffffffff9ec692a0 R11: 0000000000000000 R12: 0000000000000010
    [   99.855148] R13: 0000000000000000 R14: ffff92363d461208 R15: ffffa1c7c01ebc68
    [   99.856914] FS:  0000000000000000(0000) GS:ffff92363dd00000(0000) knlGS:0000000000000000
    [   99.858651] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   99.860032] CR2: ffffffffffffffd6 CR3: 000000007ac66000 CR4: 00000000000006e0
    [   99.861979] Call Trace:
    [   99.862617]  loop_rw_iter.part.0+0xad/0x110
    [   99.863838]  io_write+0x2ae/0x380
    [   99.864644]  ? kvm_sched_clock_read+0x11/0x20
    [   99.865595]  ? sched_clock+0x9/0x10
    [   99.866453]  ? sched_clock_cpu+0x11/0xb0
    [   99.867326]  ? newidle_balance+0x1d4/0x3c0
    [   99.868283]  io_issue_sqe+0xd8f/0x1340
    [   99.869216]  ? __switch_to+0x7f/0x450
    [   99.870280]  ? __switch_to_asm+0x42/0x70
    [   99.871254]  ? __switch_to_asm+0x36/0x70
    [   99.872133]  ? lock_timer_base+0x72/0xa0
    [   99.873155]  ? switch_mm_irqs_off+0x1bf/0x420
    [   99.874152]  io_wq_submit_work+0x64/0x180
    [   99.875192]  ? kthread_use_mm+0x71/0x100
    [   99.876132]  io_worker_handle_work+0x267/0x440
    [   99.877233]  io_wqe_worker+0x297/0x350
    [   99.878145]  kthread+0x112/0x150
    [   99.878849]  ? __io_worker_unuse+0x100/0x100
    [   99.879935]  ? kthread_park+0x90/0x90
    [   99.880874]  ret_from_fork+0x22/0x30
    [   99.881679] Modules linked in:
    [   99.882493] CR2: 0000000000000000
    [   99.883324] ---[ end trace 4453745f4673190b ]---
    [   99.884289] RIP: 0010:0x0
    [   99.884837] Code: Bad RIP value.
    [   99.885492] RSP: 0018:ffffa1c7c01ebc08 EFLAGS: 00010202
    [   99.886851] RAX: 0000000000000000 RBX: ffff92363acd7f00 RCX: ffff92363d461608
    [   99.888561] RDX: 0000000000000010 RSI: 00007ffe040d9e10 RDI: ffff92363acd7f00
    [   99.890203] RBP: ffffa1c7c01ebc40 R08: 0000000000000000 R09: 0000000000000000
    [   99.891907] R10: ffffffff9ec692a0 R11: 0000000000000000 R12: 0000000000000010
    [   99.894106] R13: 0000000000000000 R14: ffff92363d461608 R15: ffffa1c7c01ebc68
    [   99.896079] FS:  0000000000000000(0000) GS:ffff92363dd00000(0000) knlGS:0000000000000000
    [   99.898017] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   99.899197] CR2: ffffffffffffffd6 CR3: 000000007ac66000 CR4: 00000000000006e0
    
    Fixes: 32960613b7c3 ("io_uring: correctly handle non ->{read,write}_iter() file_operations")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guoyu Huang <hgy5945@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f96778837e6c846dabd90fd4bcbd94930a1d53
Author: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
Date:   Wed Jul 29 22:22:34 2020 +0200

    s390/gmap: improve THP splitting
    
    commit ba925fa35057a062ac98c3e8138b013ce4ce351c upstream.
    
    During s390_enable_sie(), we need to take care of splitting all qemu user
    process THP mappings. This is currently done with follow_page(FOLL_SPLIT),
    by simply iterating over all vma ranges, with PAGE_SIZE increment.
    
    This logic is sub-optimal and can result in a lot of unnecessary overhead,
    especially when using qemu and ASAN with large shadow map. Ilya reported
    significant system slow-down with one CPU busy for a long time and overall
    unresponsiveness.
    
    Fix this by using walk_page_vma() and directly calling split_huge_pmd()
    only for present pmds, which greatly reduces overhead.
    
    Cc: <stable@vger.kernel.org> # v5.4+
    Reported-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Tested-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74e0d05fc6828be5de766e204db9b208c2932138
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Tue Aug 4 20:35:49 2020 +0200

    s390/numa: set node distance to LOCAL_DISTANCE
    
    commit 535e4fc623fab2e09a0653fc3a3e17f382ad0251 upstream.
    
    The node distance is hardcoded to 0, which causes a trouble
    for some user-level applications. In particular, "libnuma"
    expects the distance of a node to itself as LOCAL_DISTANCE.
    This update removes the offending node distance override.
    
    Cc: <stable@vger.kernel.org> # 4.4
    Fixes: 3a368f742da1 ("s390/numa: add core infrastructure")
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7776a09f52af41faed105ec0642cc60a282404d
Author: Stefan Haberland <sth@linux.ibm.com>
Date:   Tue Jul 14 22:03:26 2020 +0200

    s390/dasd: fix inability to use DASD with DIAG driver
    
    commit 9f4aa52387c68049403b59939df5c0dd8e3872cc upstream.
    
    During initialization of the DASD DIAG driver a request is issued
    that has a bio structure that resides on the stack. With virtually
    mapped kernel stacks this bio address might be in virtual storage
    which is unsuitable for usage with the diag250 call.
    In this case the device can not be set online using the DIAG
    discipline and fails with -EOPNOTSUP.
    In the system journal the following error message is presented:
    
    dasd: X.X.XXXX Setting the DASD online with discipline DIAG failed
    with rc=-95
    
    Fix by allocating the bio structure instead of having it on the stack.
    
    Fixes: ce3dc447493f ("s390: add support for virtually mapped kernel stacks")
    Signed-off-by: Stefan Haberland <sth@linux.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Cc: stable@vger.kernel.org #4.20
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2026a268071e0622ccb122a345866830702ed292
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Thu Aug 13 09:21:10 2020 +0300

    drm/xen-front: Fix misused IS_ERR_OR_NULL checks
    
    commit 14dee058610446aa464254fc5c8e88c7535195e0 upstream.
    
    The patch c575b7eeb89f: "drm/xen-front: Add support for Xen PV
    display frontend" from Apr 3, 2018, leads to the following static
    checker warning:
    
            drivers/gpu/drm/xen/xen_drm_front_gem.c:140 xen_drm_front_gem_create()
            warn: passing zero to 'ERR_CAST'
    
    drivers/gpu/drm/xen/xen_drm_front_gem.c
       133  struct drm_gem_object *xen_drm_front_gem_create(struct drm_device *dev,
       134                                                  size_t size)
       135  {
       136          struct xen_gem_object *xen_obj;
       137
       138          xen_obj = gem_create(dev, size);
       139          if (IS_ERR_OR_NULL(xen_obj))
       140                  return ERR_CAST(xen_obj);
    
    Fix this and the rest of misused places with IS_ERR_OR_NULL in the
    driver.
    
    Fixes:  c575b7eeb89f: "drm/xen-front: Add support for Xen PV display frontend"
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200813062113.11030-3-andr2000@gmail.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f798d7de4a01e214525e7236a1824dd9a043522a
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Thu Aug 13 09:21:09 2020 +0300

    xen/gntdev: Fix dmabuf import with non-zero sgt offset
    
    commit 5fa4e6f1c2d8c9a4e47e1931b42893172d388f2b upstream.
    
    It is possible that the scatter-gather table during dmabuf import has
    non-zero offset of the data, but user-space doesn't expect that.
    Fix this by failing the import, so user-space doesn't access wrong data.
    
    Fixes: bf8dc55b1358 ("xen/gntdev: Implement dma-buf import functionality")
    
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Acked-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200813062113.11030-2-andr2000@gmail.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cd690215d307f0f8d129cb6c438fe99feb54a5a
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Mon Jul 27 11:13:40 2020 +0200

    xen/balloon: make the balloon wait interruptible
    
    commit 88a479ff6ef8af7f07e11593d58befc644244ff7 upstream.
    
    So it can be killed, or else processes can get hung indefinitely
    waiting for balloon pages.
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200727091342.52325-3-roger.pau@citrix.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e26aab6587b16036043adc17414eefb7bcdb9fd4
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Mon Jul 27 11:13:39 2020 +0200

    xen/balloon: fix accounting in alloc_xenballooned_pages error path
    
    commit 1951fa33ec259abdf3497bfee7b63e7ddbb1a394 upstream.
    
    target_unpopulated is incremented with nr_pages at the start of the
    function, but the call to free_xenballooned_pages will only subtract
    pgno number of pages, and thus the rest need to be subtracted before
    returning or else accounting will be skewed.
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200727091342.52325-2-roger.pau@citrix.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a28452465545dd05e589501a2d0531e45570090
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jul 24 14:36:24 2020 -0700

    firmware_loader: EFI firmware loader must handle pre-allocated buffer
    
    commit 4fb60b158afd3ac9e0fe9975aa476213f5cc0a4d upstream.
    
    The EFI platform firmware fallback would clobber any pre-allocated
    buffers. Instead, correctly refuse to reallocate when too small (as
    already done in the sysfs fallback), or perform allocation normally
    when needed.
    
    Fixes: e4c2c0ff00ec ("firmware: Add new platform fallback mechanism and firmware_request_platform()")
    Cc: stable@vger.kernel.org
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200724213640.389191-4-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6573d3c1f4024429b46d3e98020ae869e9219810
Author: Jon Derrick <jonathan.derrick@intel.com>
Date:   Tue Jul 21 14:26:09 2020 -0600

    irqdomain/treewide: Free firmware node after domain removal
    
    commit ec0160891e387f4771f953b888b1fe951398e5d9 upstream.
    
    Commit 711419e504eb ("irqdomain: Add the missing assignment of
    domain->fwnode for named fwnode") unintentionally caused a dangling pointer
    page fault issue on firmware nodes that were freed after IRQ domain
    allocation. Commit e3beca48a45b fixed that dangling pointer issue by only
    freeing the firmware node after an IRQ domain allocation failure. That fix
    no longer frees the firmware node immediately, but leaves the firmware node
    allocated after the domain is removed.
    
    The firmware node must be kept around through irq_domain_remove, but should be
    freed it afterwards.
    
    Add the missing free operations after domain removal where where appropriate.
    
    Fixes: e3beca48a45b ("irqdomain/treewide: Keep firmware node unconditionally allocated")
    Signed-off-by: Jon Derrick <jonathan.derrick@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>   # drivers/pci
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1595363169-7157-1-git-send-email-jonathan.derrick@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86caf5d8ac3ee6bd94ddec51524f960317fd06e4
Author: Jonathan McDowell <noodles@earth.li>
Date:   Sat Jul 4 18:23:34 2020 +0100

    firmware: qcom_scm: Fix legacy convention SCM accessors
    
    commit b88c28280c3f7097546db93824686db1e7dceee1 upstream.
    
    The move to a combined driver for the QCOM SCM hardware changed the
    io_writel and io_readl helpers to use non-atomic calls, despite the
    commit message saying that atomic was a better option. This breaks these
    helpers on hardware that uses the old legacy convention (access fails
    with a -95 return code). Switch back to using the atomic calls.
    
    Observed as a failure routing GPIO interrupts to the Apps processor on
    an IPQ8064; fix is confirmed as correctly allowing the interrupts to be
    routed and observed.
    
    Reviewed-by: Elliot Berman <eberman@codeaurora.org>
    Fixes: 57d3b816718c ("firmware: qcom_scm: Remove thin wrappers")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonathan McDowell <noodles@earth.li>
    Link: https://lore.kernel.org/r/20200704172334.GA759@earth.li
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0255b5803332a972610d11e32454f00065e960f3
Author: Nathan Huckleberry <nhuck@google.com>
Date:   Fri Jul 10 20:23:37 2020 +0100

    ARM: 8992/1: Fix unwind_frame for clang-built kernels
    
    commit b4d5ec9b39f8b31d98f65bc5577b5d15d93795d7 upstream.
    
    Since clang does not push pc and sp in function prologues, the current
    implementation of unwind_frame does not work. By using the previous
    frame's lr/fp instead of saved pc/sp we get valid unwinds on clang-built
    kernels.
    
    The bounds check on next frame pointer must be changed as well since
    there are 8 less bytes between frames.
    
    This fixes /proc/<pid>/stack.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/912
    
    Reported-by: Miles Chen <miles.chen@mediatek.com>
    Tested-by: Miles Chen <miles.chen@mediatek.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Nathan Huckleberry <nhuck@google.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89a16b68221c0b20d61032fc14cb645e68cdd243
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu May 28 10:15:25 2020 +0200

    ARM: dts: exynos: Extend all Exynos5800 A15's OPPs with max voltage data
    
    commit d644853ff8fcbb7a4e3757f9d8ccc39d930b7e3c upstream.
    
    On Exynos5422/5800 the regulator supply for the A15 cores ("vdd_arm") is
    coupled with the regulator supply for the SoC internal circuits
    ("vdd_int"), thus all operating points that modify one of those supplies
    have to specify a triplet of the min/target/max values to properly work
    with regulator coupling.
    
    Fixes: eaffc4de16c6 ("ARM: dts: exynos: Add missing CPU frequencies for Exynos5422/5800")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc12363fb7ff8d3e5d97d6e0a90642a28fc429af
Author: Sven Schnelle <svens@stackframe.org>
Date:   Tue Aug 11 18:19:19 2020 +0200

    parisc: mask out enable and reserved bits from sba imask
    
    commit 5b24993c21cbf2de11aff077a48c5cb0505a0450 upstream.
    
    When using kexec the SBA IOMMU IBASE might still have the RE
    bit set. This triggers a WARN_ON when trying to write back the
    IBASE register later, and it also makes some mask calculations fail.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c33370975ce43143663d113602c9f2f5d73ff507
Author: John David Anglin <dave.anglin@bell.net>
Date:   Thu Jul 30 08:59:12 2020 -0400

    parisc: Implement __smp_store_release and __smp_load_acquire barriers
    
    commit e96ebd589debd9a6a793608c4ec7019c38785dea upstream.
    
    This patch implements the __smp_store_release and __smp_load_acquire barriers
    using ordered stores and loads.  This avoids the sync instruction present in
    the generic implementation.
    
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Dave Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5efde215825863d9bf6356623252babb021eef06
Author: John David Anglin <dave.anglin@bell.net>
Date:   Tue Jul 28 19:13:20 2020 +0200

    parisc: Do not use an ordered store in pa_tlb_lock()
    
    commit e72b23dec1da5e62a0090c5da1d926778284e230 upstream.
    
    No need to use an ordered store in pa_tlb_lock() and update the comment
    regarng usage of the sid register to unlocak a spinlock in
    tlb_unlock0().
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.0+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0730d6cd49e057ce75f77d6be4098abb80ff86fb
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:56:14 2020 +0200

    Revert "parisc: Revert "Release spinlocks using ordered store""
    
    commit 157e9afcc4fa25068b0e8743bc254a9b56010e13 upstream.
    
    This reverts commit 86d4d068df573a8c2105554624796c086d6bec3d.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.0+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56b60c71143a9c24e776c0d542a76e91edfaa451
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:54:40 2020 +0200

    Revert "parisc: Use ldcw instruction for SMP spinlock release barrier"
    
    commit 6e9f06ee6c9566f3606d93182ac8f803a148504b upstream.
    
    This reverts commit 9e5c602186a692a7e848c0da17aed40f49d30519.
    No need to use the ldcw instruction as SMP spinlock release barrier.
    Revert it to gain back speed again.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40ab3539bc7cfd49299a8bb8a2f899dbbcfa26a1
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:52:58 2020 +0200

    Revert "parisc: Drop LDCW barrier in CAS code when running UP"
    
    commit 462fb756c7de1ffe5bc6099149136031c2d9c02a upstream.
    
    This reverts commit e6eb5fe9123f05dcbf339ae5c0b6d32fcc0685d5.
    We need to optimize it differently. A follow up patch will correct it.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6044b0d92ac6c52dec214b061cd3d5bc4202cc55
Author: Helge Deller <deller@gmx.de>
Date:   Tue Jul 28 18:49:45 2020 +0200

    Revert "parisc: Improve interrupt handling in arch_spin_lock_flags()"
    
    commit 3d05b8aebc5f10ee3ab129b61100196855dd7249 upstream.
    
    This reverts commit 2772f0efd5bbd5413db3d22e363b779ca0fa5310.
    It turns out that we want to implement the spinlock code differently.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org> # v5.7+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49b9263b2a15fc548e106ac41003db4d5cd557e9
Author: Baoquan He <bhe@redhat.com>
Date:   Fri Aug 14 17:30:07 2020 -0700

    Revert "mm/vmstat.c: do not show lowmem reserve protection information of empty zone"
    
    commit a8a4b7aeaf841311cb13ff0f6c4710c7a00e68d4 upstream.
    
    This reverts commit 26e7deadaae175.
    
    Sonny reported that one of their tests started failing on the latest
    kernel on their Chrome OS platform.  The root cause is that the above
    commit removed the protection line of empty zone, while the parser used in
    the test relies on the protection line to mark the end of each zone.
    
    Let's revert it to avoid breaking userspace testing or applications.
    
    Fixes: 26e7deadaae175 ("mm/vmstat.c: do not show lowmem reserve protection information of empty zone)"
    Reported-by: Sonny Rao <sonnyrao@chromium.org>
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Cc: <stable@vger.kernel.org>    [5.8.x]
    Link: http://lkml.kernel.org/r/20200811075412.12872-1-bhe@redhat.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e2d35b348916e059b7e7eda1ed4c721f1036e1f
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Thu Jul 30 01:58:01 2020 +0800

    erofs: fix extended inode could cross boundary
    
    commit 0dcd3c94e02438f4a571690e26f4ee997524102a upstream.
    
    Each ondisk inode should be aligned with inode slot boundary
    (32-byte alignment) because of nid calculation formula, so all
    compact inodes (32 byte) cannot across page boundary. However,
    extended inode is now 64-byte form, which can across page boundary
    in principle if the location is specified on purpose, although
    it's hard to be generated by mkfs due to the allocation policy
    and rarely used by Android use case now mainly for > 4GiB files.
    
    For now, only two fields `i_ctime_nsec` and `i_nlink' couldn't
    be read from disk properly and cause out-of-bound memory read
    with random value.
    
    Let's fix now.
    
    Fixes: 431339ba9042 ("staging: erofs: add inode operations")
    Cc: <stable@vger.kernel.org> # 4.19+
    Link: https://lore.kernel.org/r/20200729175801.GA23973@xiangao.remote.csb
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00a43cd24d66d7cbd58e0866aa8504bdec00ce25
Author: Alexander Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Jul 22 16:01:36 2020 +0200

    mtd: spi-nor: intel-spi: Simulate WRDI command
    
    commit 44a80df4bfce02f5d51fe5040bdbdf10d0d78f4e upstream.
    
    After spi_nor_write_disable() return code checks were introduced in the
    spi-nor front end intel-spi backend stopped to work because WRDI was never
    supported and always failed.
    
    Just pretend it was sucessful and ignore the command itself. HW sequencer
    shall do the right thing automatically, while with SW sequencer we cannot
    do it anyway, because the only tool we had was preopcode and it makes no
    sense for WRDI.
    
    Fixes: bce679e5ae3a ("mtd: spi-nor: Check for errors after each Register Operation")
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/282e1305-fd08-e446-1a22-eb4dff78cfb4@nokia.com
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2e5af466884abcc4ea32c144bc748ffd1d240d1
Author: Sivaprakash Murugesan <sivaprak@codeaurora.org>
Date:   Fri Jun 12 13:28:15 2020 +0530

    mtd: rawnand: qcom: avoid write to unavailable register
    
    commit 443440cc4a901af462239d286cd10721aa1c7dfc upstream.
    
    SFLASHC_BURST_CFG is only available on older ipq NAND platforms, this
    register has been removed when the NAND controller got implemented in
    the qpic controller.
    
    Avoid writing this register on devices which are based on qpic NAND
    controller.
    
    Fixes: dce84760b09f ("mtd: nand: qcom: Support for IPQ8074 QPIC NAND controller")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sivaprakash Murugesan <sivaprak@codeaurora.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/1591948696-16015-2-git-send-email-sivaprak@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 118612569083e7094fc2050dbc51ba0168f9220e
Author: Christian Eggers <ceggers@arri.de>
Date:   Tue Jul 28 12:08:32 2020 +0200

    spi: spidev: Align buffers for DMA
    
    commit aa9e862d7d5bcecd4dca9f39e8b684b93dd84ee7 upstream.
    
    Simply copying all xfers from userspace into one bounce buffer causes
    alignment problems if the SPI controller uses DMA.
    
    Ensure that all transfer data blocks within the rx and tx bounce buffers
    are aligned for DMA (according to ARCH_KMALLOC_MINALIGN).
    
    Alignment may increase the usage of the bounce buffers. In some cases,
    the buffers may need to be increased using the "bufsiz" module
    parameter.
    
    Signed-off-by: Christian Eggers <ceggers@arri.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200728100832.24788-1-ceggers@arri.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e4d8a76f09e89864900c2c503891f16845ef154
Author: Chanwoo Choi <cw00.choi@samsung.com>
Date:   Thu Jul 9 15:51:34 2020 +0900

    PM / devfreq: Fix indentaion of devfreq_summary debugfs node
    
    commit 0aae11bcdefb4894b6100656ad24cbd85ff34b52 upstream.
    
    The commit 66d0e797bf09 ("Revert "PM / devfreq: Modify the device name
    as devfreq(X) for sysfs"") roll back the device name from 'devfreqX'
    to device name explained in DT. After applied commit 66d0e797bf09,
    the indentation of devfreq_summary debugfs node was broken.
    
    So, fix indentaion of devfreq_summary debugfs node as following:
    
    For example on Exynos5422-based Odroid-XU3 board,
    $ cat /sys/kernel/debug/devfreq/devfreq_summary
    dev                            parent_dev                     governor        polling_ms  cur_freq_Hz  min_freq_Hz  max_freq_Hz
    ------------------------------ ------------------------------ --------------- ---------- ------------ ------------ ------------
    10c20000.memory-controller     null                           simple_ondemand          0    413000000    165000000    825000000
    soc:bus_wcore                  null                           simple_ondemand         50     88700000     88700000    532000000
    soc:bus_noc                    soc:bus_wcore                  passive                  0     66600000     66600000    111000000
    soc:bus_fsys_apb               soc:bus_wcore                  passive                  0    111000000    111000000    222000000
    soc:bus_fsys                   soc:bus_wcore                  passive                  0     75000000     75000000    200000000
    soc:bus_fsys2                  soc:bus_wcore                  passive                  0     75000000     75000000    200000000
    soc:bus_mfc                    soc:bus_wcore                  passive                  0     83250000     83250000    333000000
    soc:bus_gen                    soc:bus_wcore                  passive                  0     88700000     88700000    266000000
    soc:bus_peri                   soc:bus_wcore                  passive                  0     66600000     66600000     66600000
    soc:bus_g2d                    soc:bus_wcore                  passive                  0     83250000     83250000    333000000
    soc:bus_g2d_acp                soc:bus_wcore                  passive                  0            0     66500000    266000000
    soc:bus_jpeg                   soc:bus_wcore                  passive                  0            0     75000000    300000000
    soc:bus_jpeg_apb               soc:bus_wcore                  passive                  0            0     83250000    166500000
    soc:bus_disp1_fimd             soc:bus_wcore                  passive                  0            0    120000000    200000000
    soc:bus_disp1                  soc:bus_wcore                  passive                  0            0    120000000    300000000
    soc:bus_gscl_scaler            soc:bus_wcore                  passive                  0            0    150000000    300000000
    soc:bus_mscl                   soc:bus_wcore                  passive                  0            0     84000000    666000000
    
    Cc: stable@vger.kernel.org
    Fixes: 66d0e797bf09 ("Revert "PM / devfreq: Modify the device name as devfreq(X) for sysfs"")
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83e35713b3d4d682c8e1e994754288b97a471bf9
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Jun 30 11:05:46 2020 +0100

    PM / devfreq: rk3399_dmc: Fix kernel oops when rockchip,pmu is absent
    
    commit 63ef91f24f9bfc70b6446319f6cabfd094481372 upstream.
    
    Booting a recent kernel on a rk3399-based system (nanopc-t4),
    equipped with a recent u-boot and ATF results in an Oops due
    to a NULL pointer dereference.
    
    This turns out to be due to the rk3399-dmc driver looking for
    an *undocumented* property (rockchip,pmu), and happily using
    a NULL pointer when the property isn't there.
    
    Instead, make most of what was brought in with 9173c5ceb035
    ("PM / devfreq: rk3399_dmc: Pass ODT and auto power down parameters
    to TF-A.") conditioned on finding this property in the device-tree,
    preventing the driver from exploding.
    
    Cc: stable@vger.kernel.org
    Fixes: 9173c5ceb035 ("PM / devfreq: rk3399_dmc: Pass ODT and auto power down parameters to TF-A.")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4eeeaca1e9353fa5e907ee7fa2b9d2c5dab246b6
Author: Romain Naour <romain.naour@gmail.com>
Date:   Fri Aug 14 17:31:57 2020 -0700

    include/asm-generic/vmlinux.lds.h: align ro_after_init
    
    commit 7f897acbe5d57995438c831670b7c400e9c0dc00 upstream.
    
    Since the patch [1], building the kernel using a toolchain built with
    binutils 2.33.1 prevents booting a sh4 system under Qemu.  Apply the patch
    provided by Alan Modra [2] that fix alignment of rodata.
    
    [1] https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;h=ebd2263ba9a9124d93bbc0ece63d7e0fae89b40e
    [2] https://www.sourceware.org/ml/binutils/2019-12/msg00112.html
    
    Signed-off-by: Romain Naour <romain.naour@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alan Modra <amodra@gmail.com>
    Cc: Bin Meng <bin.meng@windriver.com>
    Cc: Chen Zhou <chenzhou10@huawei.com>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Cc: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: <stable@vger.kernel.org>
    Link: https://marc.info/?l=linux-sh&m=158429470221261
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 768eb23b7670f4bffb948ef6c1312a1d3c751e40
Author: Huacai Chen <chenhc@lemote.com>
Date:   Sat Aug 8 20:50:52 2020 +0800

    MIPS: VZ: Only include loongson_regs.h for CPU_LOONGSON64
    
    commit cf99c505cf7a5b6d3deee91e3571871f20320d31 upstream.
    
    Only Loongson64 platform has and needs loongson_regs.h, including it
    unconditionally will cause build errors.
    
    Fixes: 7f2a83f1c2a941ebfee5 ("KVM: MIPS: Add CPUCFG emulation for Loongson-3")
    Cc: stable@vger.kernel.org
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Message-Id: <1596891052-24052-1-git-send-email-chenhc@lemote.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9bb92d06d9abfd1ab454aa4004411841d9b9345
Author: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
Date:   Sat Jun 20 17:44:49 2020 +0100

    cpufreq: dt: fix oops on armada37xx
    
    commit 10470dec3decaf5ed3c596f85debd7c42777ae12 upstream.
    
    Commit 0c868627e617e43a295d8 (cpufreq: dt: Allow platform specific
    intermediate callbacks) added two function pointers to the
    struct cpufreq_dt_platform_data. However, armada37xx_cpufreq_driver_init()
    has this struct (pdata) located on the stack and uses only "suspend"
    and "resume" fields. So these newly added "get_intermediate" and
    "target_intermediate" pointers are uninitialized and contain arbitrary
    non-null values, causing all kinds of trouble.
    
    For instance, here is an oops on espressobin after an attempt to change
    the cpefreq governor:
    
    [   29.174554] Unable to handle kernel execute from non-executable memory at virtual address ffff00003f87bdc0
    ...
    [   29.269373] pc : 0xffff00003f87bdc0
    [   29.272957] lr : __cpufreq_driver_target+0x138/0x580
    ...
    
    Fixed by zeroing out pdata before use.
    
    Cc: <stable@vger.kernel.org> # v5.7+
    Signed-off-by: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e147c355b717ebf3c610aa7e991f02557311c94b
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Mon Jun 29 13:54:58 2020 +0530

    cpufreq: Fix locking issues with governors
    
    commit 8cc46ae565c393f77417cb9530b1265eb50f5d2e upstream.
    
    The locking around governors handling isn't adequate currently.
    
    The list of governors should never be traversed without the locking
    in place. Also governor modules must not be removed while the code
    in them is still in use.
    
    Reported-by: Quentin Perret <qperret@google.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: All applicable <stable@vger.kernel.org>
    [ rjw: Changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ad74327fb4b1d633395802b6fe666f49ef860b1
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Aug 5 09:03:56 2020 -0400

    NFS: Don't return layout segments that are in use
    
    commit d474f96104bd4377573526ebae2ee212205a6839 upstream.
    
    If the NFS_LAYOUT_RETURN_REQUESTED flag is set, we want to return the
    layout as soon as possible, meaning that the affected layout segments
    should be marked as invalid, and should no longer be in use for I/O.
    
    Fixes: f0b429819b5f ("pNFS: Ignore non-recalled layouts in pnfs_layout_need_return()")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a7dfccb581f8e86396dec5db8fa9cb8b4dad4b9
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Aug 4 16:30:30 2020 -0400

    NFS: Don't move layouts to plh_return_segs list while in use
    
    commit ff041727e9e029845857cac41aae118ead5e261b upstream.
    
    If the layout segment is still in use for a read or a write, we should
    not move it to the layout plh_return_segs list. If we do, we can end
    up returning the layout while I/O is still in progress.
    
    Fixes: e0b7d420f72a ("pNFS: Don't discard layout segments that are marked for return")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4db216cc1d59b445df85b57be025394f8d5cc723
Author: Jens Axboe <axboe@kernel.dk>
Date:   Sat Aug 15 11:44:50 2020 -0700

    io_uring: sanitize double poll handling
    
    commit d4e7cd36a90e38e0276d6ce0c20f5ccef17ec38c upstream.
    
    There's a bit of confusion on the matching pairs of poll vs double poll,
    depending on if the request is a pure poll (IORING_OP_POLL_ADD) or
    poll driven retry.
    
    Add io_poll_get_double() that returns the double poll waitqueue, if any,
    and io_poll_get_single() that returns the original poll waitqueue. With
    that, remove the argument to io_poll_remove_double().
    
    Finally ensure that wait->private is cleared once the double poll handler
    has run, so that remove knows it's already been seen.
    
    Cc: stable@vger.kernel.org # v5.8
    Reported-by: syzbot+7f617d4a9369028b8a2c@syzkaller.appspotmail.com
    Fixes: 18bceab101ad ("io_uring: allow POLL_ADD with double poll_wait() users")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe552346a87b9890fab5aac4a87abd27a11db255
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Aug 11 09:50:19 2020 -0600

    io_uring: fail poll arm on queue proc failure
    
    commit a36da65c46565d2527eec3efdb546251e38253fd upstream.
    
    Check the ipt.error value, it must have been either cleared to zero or
    set to another error than the default -EINVAL if we don't go through the
    waitqueue proc addition. Just give up on poll at that point and return
    failure, this will fallback to async work.
    
    io_poll_add() doesn't suffer from this failure case, as it returns the
    error value directly.
    
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: syzbot+a730016dc0bdce4f6ff5@syzkaller.appspotmail.com
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c5d00a211282436a31d4665d11e59b45e4425be
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Aug 6 19:41:50 2020 -0600

    io_uring: use TWA_SIGNAL for task_work uncondtionally
    
    commit 0ba9c9edcd152158a0e321a4c13ac1dfc571ff3d upstream.
    
    An earlier commit:
    
    b7db41c9e03b ("io_uring: fix regression with always ignoring signals in io_cqring_wait()")
    
    ensured that we didn't get stuck waiting for eventfd reads when it's
    registered with the io_uring ring for event notification, but we still
    have cases where the task can be waiting on other events in the kernel and
    need a bigger nudge to make forward progress. Or the task could be in the
    kernel and running, but on its way to blocking.
    
    This means that TWA_RESUME cannot reliably be used to ensure we make
    progress. Use TWA_SIGNAL unconditionally.
    
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: Josef <josef.grieb@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93bc88750e69a594a56dbbb341171ec589d72cca
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Aug 5 12:58:23 2020 -0600

    io_uring: set ctx sq/cq entry count earlier
    
    commit bd74048108c179cea0ff52979506164c80f29da7 upstream.
    
    If we hit an earlier error path in io_uring_create(), then we will have
    accounted memory, but not set ctx->{sq,cq}_entries yet. Then when the
    ring is torn down in error, we use those values to unaccount the memory.
    
    Ensure we set the ctx entries before we're able to hit a potential error
    path.
    
    Cc: stable@vger.kernel.org
    Reported-by: Tomáš Chaloupka <chalucha@gmail.com>
    Tested-by: Tomáš Chaloupka <chalucha@gmail.com>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c374f0e63d7261dce2e556ac3df4e0541dd775a
Author: Dave Airlie <airlied@redhat.com>
Date:   Tue Jul 28 14:17:36 2020 +1000

    drm/ttm/nouveau: don't call tt destroy callback on alloc failure.
    
    commit 5de5b6ecf97a021f29403aa272cb4e03318ef586 upstream.
    
    This is confusing, and from my reading of all the drivers only
    nouveau got this right.
    
    Just make the API act under driver control of it's own allocation
    failing, and don't call destroy, if the page table fails to
    create there is nothing to cleanup here.
    
    (I'm willing to believe I've missed something here, so please
    review deeply).
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200728041736.20689-1-airlied@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 441ba3c8300bd086ac790bb44648ffd1925f1f07
Author: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
Date:   Sun Jun 21 13:30:40 2020 +0200

    media: media-request: Fix crash if memory allocation fails
    
    commit e30cc79cc80fd919b697a15c5000d9f57487de8e upstream.
    
    Syzbot reports a NULL-ptr deref in the kref_put() call:
    
    BUG: KASAN: null-ptr-deref in media_request_put drivers/media/mc/mc-request.c:81 [inline]
     kref_put include/linux/kref.h:64 [inline]
     media_request_put drivers/media/mc/mc-request.c:81 [inline]
     media_request_close+0x4d/0x170 drivers/media/mc/mc-request.c:89
     __fput+0x2ed/0x750 fs/file_table.c:281
     task_work_run+0x147/0x1d0 kernel/task_work.c:123
     tracehook_notify_resume include/linux/tracehook.h:188 [inline]
     exit_to_usermode_loop arch/x86/entry/common.c:165 [inline]
     prepare_exit_to_usermode+0x48e/0x600 arch/x86/entry/common.c:196
    
    What led to this crash was an injected memory allocation failure in
    media_request_alloc():
    
    FAULT_INJECTION: forcing a failure.
    name failslab, interval 1, probability 0, space 0, times 0
     should_failslab+0x5/0x20
     kmem_cache_alloc_trace+0x57/0x300
     ? anon_inode_getfile+0xe5/0x170
     media_request_alloc+0x339/0x440
     media_device_request_alloc+0x94/0xc0
     media_device_ioctl+0x1fb/0x330
     ? do_vfs_ioctl+0x6ea/0x1a00
     ? media_ioctl+0x101/0x120
     ? __media_device_usb_init+0x430/0x430
     ? media_poll+0x110/0x110
     __se_sys_ioctl+0xf9/0x160
     do_syscall_64+0xf3/0x1b0
    
    When that allocation fails, filp->private_data is left uninitialized
    which media_request_close() does not expect and crashes.
    
    To avoid this, reorder media_request_alloc() such that
    allocating the struct file happens as the last step thus
    media_request_close() will no longer get called for a partially created
    media request.
    
    Reported-by: syzbot+6bed2d543cf7e48b822b@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>
    Fixes: 10905d70d788 ("media: media-request: implement media requests")
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a4d8f8bc3c9dc0859fa6905fc42cd98b435745b
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Jul 13 11:12:54 2020 +0900

    driver core: Fix probe_count imbalance in really_probe()
    
    commit b292b50b0efcc7095d8bf15505fba6909bb35dce upstream.
    
    syzbot is reporting hung task in wait_for_device_probe() [1]. At least,
    we always need to decrement probe_count if we incremented probe_count in
    really_probe().
    
    However, since I can't find "Resources present before probing" message in
    the console log, both "this message simply flowed off" and "syzbot is not
    hitting this path" will be possible. Therefore, while we are at it, let's
    also prepare for concurrent wait_for_device_probe() calls by replacing
    wake_up() with wake_up_all().
    
    [1] https://syzkaller.appspot.com/bug?id=25c833f1983c9c1d512f4ff860dd0d7f5a2e2c0f
    
    Reported-by: syzbot <syzbot+805f5f6ae37411f15b64@syzkaller.appspotmail.com>
    Fixes: 7c35e699c88bd607 ("driver core: Print device when resources present in really_probe()")
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: stable <stable@kernel.org>
    Link: https://lore.kernel.org/r/20200713021254.3444-1-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb0b64b4817c3a36e1c7ebac462d4a57af5ff245
Author: Zheng Bin <zhengbin13@huawei.com>
Date:   Mon Jun 15 09:21:53 2020 +0800

    9p: Fix memory leak in v9fs_mount
    
    commit cb0aae0e31c632c407a2cab4307be85a001d4d98 upstream.
    
    v9fs_mount
      v9fs_session_init
        v9fs_cache_session_get_cookie
          v9fs_random_cachetag                     -->alloc cachetag
          v9ses->fscache = fscache_acquire_cookie  -->maybe NULL
      sb = sget                                    -->fail, goto clunk
    clunk_fid:
      v9fs_session_close
        if (v9ses->fscache)                        -->NULL
          kfree(v9ses->cachetag)
    
    Thus memleak happens.
    
    Link: http://lkml.kernel.org/r/20200615012153.89538-1-zhengbin13@huawei.com
    Fixes: 60e78d2c993e ("9p: Add fscache support to 9p")
    Cc: <stable@vger.kernel.org> # v2.6.32+
    Signed-off-by: Zheng Bin <zhengbin13@huawei.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72bc544c0dd41ec7b68f295025c4e8e06f75e575
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Wed Jul 8 14:57:31 2020 +0300

    kvm: x86: replace kvm_spec_ctrl_test_value with runtime test on the host
    
    commit 841c2be09fe4f495fe5224952a419bd8c7e5b455 upstream.
    
    To avoid complex and in some cases incorrect logic in
    kvm_spec_ctrl_test_value, just try the guest's given value on the host
    processor instead, and if it doesn't #GP, allow the guest to set it.
    
    One such case is when host CPU supports STIBP mitigation
    but doesn't support IBRS (as is the case with some Zen2 AMD cpus),
    and in this case we were giving guest #GP when it tried to use STIBP
    
    The reason why can can do the host test is that IA32_SPEC_CTRL msr is
    passed to the guest, after the guest sets it to a non zero value
    for the first time (due to performance reasons),
    and as as result of this, it is pointless to emulate #GP condition on
    this first access, in a different way than what the host CPU does.
    
    This is based on a patch from Sean Christopherson, who suggested this idea.
    
    Fixes: 6441fa6178f5 ("KVM: x86: avoid incorrect writes to host MSR_IA32_SPEC_CTRL")
    Cc: stable@vger.kernel.org
    Suggested-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Message-Id: <20200708115731.180097-1-mlevitsk@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e91bbf598b284e27d57bd77a37f8764dcf64d93
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Aug 11 18:35:30 2020 -0700

    fs/minix: reject too-large maximum file size
    
    commit 270ef41094e9fa95273f288d7d785313ceab2ff3 upstream.
    
    If the minix filesystem tries to map a very large logical block number to
    its on-disk location, block_to_path() can return offsets that are too
    large, causing out-of-bounds memory accesses when accessing indirect index
    blocks.  This should be prevented by the check against the maximum file
    size, but this doesn't work because the maximum file size is read directly
    from the on-disk superblock and isn't validated itself.
    
    Fix this by validating the maximum file size at mount time.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+c7d9ec7a1a7272dd71b3@syzkaller.appspotmail.com
    Reported-by: syzbot+3b7b03a0c28948054fb5@syzkaller.appspotmail.com
    Reported-by: syzbot+6e056ee473568865f3e6@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Qiujun Huang <anenbupt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200628060846.682158-4-ebiggers@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ded4aeb84a7aaa2304acaa7b5bfa4b3b75cc5fd
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Aug 11 18:35:27 2020 -0700

    fs/minix: don't allow getting deleted inodes
    
    commit facb03dddec04e4aac1bb2139accdceb04deb1f3 upstream.
    
    If an inode has no links, we need to mark it bad rather than allowing it
    to be accessed.  This avoids WARNINGs in inc_nlink() and drop_nlink() when
    doing directory operations on a fuzzed filesystem.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+a9ac3de1b5de5fb10efc@syzkaller.appspotmail.com
    Reported-by: syzbot+df958cf5688a96ad3287@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Qiujun Huang <anenbupt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200628060846.682158-3-ebiggers@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3362c7fb3f9af137da5e02abf6f00527a230da68
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Aug 11 18:35:24 2020 -0700

    fs/minix: check return value of sb_getblk()
    
    commit da27e0a0e5f655f0d58d4e153c3182bb2b290f64 upstream.
    
    Patch series "fs/minix: fix syzbot bugs and set s_maxbytes".
    
    This series fixes all syzbot bugs in the minix filesystem:
    
            KASAN: null-ptr-deref Write in get_block
            KASAN: use-after-free Write in get_block
            KASAN: use-after-free Read in get_block
            WARNING in inc_nlink
            KMSAN: uninit-value in get_block
            WARNING in drop_nlink
    
    It also fixes the minix filesystem to set s_maxbytes correctly, so that
    userspace sees the correct behavior when exceeding the max file size.
    
    This patch (of 6):
    
    sb_getblk() can fail, so check its return value.
    
    This fixes a NULL pointer dereference.
    
    Originally from Qiujun Huang.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+4a88b2b9dc280f47baf4@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Qiujun Huang <anenbupt@gmail.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20200628060846.682158-1-ebiggers@kernel.org
    Link: http://lkml.kernel.org/r/20200628060846.682158-2-ebiggers@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77e0be9e821207b52344f8e8ebb45878e0a0032b
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Aug 10 11:21:11 2020 -0700

    bitfield.h: don't compile-time validate _val in FIELD_FIT
    
    commit 444da3f52407d74c9aa12187ac6b01f76ee47d62 upstream.
    
    When ur_load_imm_any() is inlined into jeq_imm(), it's possible for the
    compiler to deduce a case where _val can only have the value of -1 at
    compile time. Specifically,
    
    /* struct bpf_insn: _s32 imm */
    u64 imm = insn->imm; /* sign extend */
    if (imm >> 32) { /* non-zero only if insn->imm is negative */
      /* inlined from ur_load_imm_any */
      u32 __imm = imm >> 32; /* therefore, always 0xffffffff */
      if (__builtin_constant_p(__imm) && __imm > 255)
        compiletime_assert_XXX()
    
    This can result in tripping a BUILD_BUG_ON() in __BF_FIELD_CHECK() that
    checks that a given value is representable in one byte (interpreted as
    unsigned).
    
    FIELD_FIT() should return true or false at runtime for whether a value
    can fit for not. Don't break the build over a value that's too large for
    the mask. We'd prefer to keep the inlining and compiler optimizations
    though we know this case will always return false.
    
    Cc: stable@vger.kernel.org
    Fixes: 1697599ee301a ("bitfield.h: add FIELD_FIT() helper")
    Link: https://lore.kernel.org/kernel-hardening/CAK7LNASvb0UDJ0U5wkYYRzTAdnEs64HjXpEUL7d=V0CXiAXcNw@mail.gmail.com/
    Reported-by: Masahiro Yamada <masahiroy@kernel.org>
    Debugged-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d613f0186778f92c407c22f0a7dd9d80ad6718c5
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Fri May 15 02:34:29 2020 +0200

    tick/nohz: Narrow down noise while setting current task's tick dependency
    
    commit 3c8920e2dbd1a55f72dc14d656df9d0097cf5c72 upstream.
    
    Setting a tick dependency on any task, including the case where a task
    sets that dependency on itself, triggers an IPI to all CPUs.  That is
    of course suboptimal but it had previously not been an issue because it
    was only used by POSIX CPU timers on nohz_full, which apparently never
    occurs in latency-sensitive workloads in production.  (Or users of such
    systems are suffering in silence on the one hand or venting their ire
    on the wrong people on the other.)
    
    But RCU now sets a task tick dependency on the current task in order
    to fix stall issues that can occur during RCU callback processing.
    Thus, RCU callback processing triggers frequent system-wide IPIs from
    nohz_full CPUs.  This is quite counter-productive, after all, avoiding
    IPIs is what nohz_full is supposed to be all about.
    
    This commit therefore optimizes tasks' self-setting of a task tick
    dependency by using tick_nohz_full_kick() to avoid the system-wide IPI.
    Instead, only the execution of the one task is disturbed, which is
    acceptable given that this disturbance is well down into the noise
    compared to the degree to which the RCU callback processing itself
    disturbs execution.
    
    Fixes: 6a949b7af82d (rcu: Force on tick when invoking lots of callbacks)
    Reported-by: Matt Fleming <matt@codeblueprint.co.uk>
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Cc: stable@kernel.org
    Cc: Paul E. McKenney <paulmck@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8720986cf5ab1a2feac5ae4735d309e4cc8a9313
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jun 17 09:48:56 2020 -0400

    crypto: cpt - don't sleep of CRYPTO_TFM_REQ_MAY_SLEEP was not specified
    
    commit 9e27c99104707f083dccd3b4d79762859b5a0614 upstream.
    
    There is this call chain:
    cvm_encrypt -> cvm_enc_dec -> cptvf_do_request -> process_request -> kzalloc
    where we call sleeping allocator function even if CRYPTO_TFM_REQ_MAY_SLEEP
    was not specified.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org      # v4.11+
    Fixes: c694b233295b ("crypto: cavium - Add the Virtual Function driver for CPT")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a412ab6211b33b7ba6c4e9877888c1875e17cd3
Author: John Allen <john.allen@amd.com>
Date:   Mon Jun 22 15:24:02 2020 -0500

    crypto: ccp - Fix use of merged scatterlists
    
    commit 8a302808c60d441d9884cb00ea7f2b534f2e3ca5 upstream.
    
    Running the crypto manager self tests with
    CONFIG_CRYPTO_MANAGER_EXTRA_TESTS may result in several types of errors
    when using the ccp-crypto driver:
    
    alg: skcipher: cbc-des3-ccp encryption failed on test vector 0; expected_error=0, actual_error=-5 ...
    
    alg: skcipher: ctr-aes-ccp decryption overran dst buffer on test vector 0 ...
    
    alg: ahash: sha224-ccp test failed (wrong result) on test vector ...
    
    These errors are the result of improper processing of scatterlists mapped
    for DMA.
    
    Given a scatterlist in which entries are merged as part of mapping the
    scatterlist for DMA, the DMA length of a merged entry will reflect the
    combined length of the entries that were merged. The subsequent
    scatterlist entry will contain DMA information for the scatterlist entry
    after the last merged entry, but the non-DMA information will be that of
    the first merged entry.
    
    The ccp driver does not take this scatterlist merging into account. To
    address this, add a second scatterlist pointer to track the current
    position in the DMA mapped representation of the scatterlist. Both the DMA
    representation and the original representation of the scatterlist must be
    tracked as while most of the driver can use just the DMA representation,
    scatterlist_map_and_copy() must use the original representation and
    expects the scatterlist pointer to be accurate to the original
    representation.
    
    In order to properly walk the original scatterlist, the scatterlist must
    be walked until the combined lengths of the entries seen is equal to the
    DMA length of the current entry being processed in the DMA mapped
    representation.
    
    Fixes: 63b945091a070 ("crypto: ccp - CCP device driver and interface support")
    Signed-off-by: John Allen <john.allen@amd.com>
    Cc: stable@vger.kernel.org
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98df3304a1fcf5195d107b5d3c41d07f6c7d9543
Author: Tom Rix <trix@redhat.com>
Date:   Mon Jul 13 07:06:34 2020 -0700

    crypto: qat - fix double free in qat_uclo_create_batch_init_list
    
    commit c06c76602e03bde24ee69a2022a829127e504202 upstream.
    
    clang static analysis flags this error
    
    qat_uclo.c:297:3: warning: Attempt to free released memory
      [unix.Malloc]
                    kfree(*init_tab_base);
                    ^~~~~~~~~~~~~~~~~~~~~
    
    When input *init_tab_base is null, the function allocates memory for
    the head of the list.  When there is problem allocating other list
    elements the list is unwound and freed.  Then a check is made if the
    list head was allocated and is also freed.
    
    Keeping track of the what may need to be freed is the variable 'tail_old'.
    The unwinding/freeing block is
    
            while (tail_old) {
                    mem_init = tail_old->next;
                    kfree(tail_old);
                    tail_old = mem_init;
            }
    
    The problem is that the first element of tail_old is also what was
    allocated for the list head
    
                    init_header = kzalloc(sizeof(*init_header), GFP_KERNEL);
                    ...
                    *init_tab_base = init_header;
                    flag = 1;
            }
            tail_old = init_header;
    
    So *init_tab_base/init_header are freed twice.
    
    There is another problem.
    When the input *init_tab_base is non null the tail_old is calculated by
    traveling down the list to first non null entry.
    
            tail_old = init_header;
            while (tail_old->next)
                    tail_old = tail_old->next;
    
    When the unwinding free happens, the last entry of the input list will
    be freed.
    
    So the freeing needs a general changed.
    If locally allocated the first element of tail_old is freed, else it
    is skipped.  As a bit of cleanup, reset *init_tab_base if it came in
    as null.
    
    Fixes: b4b7e67c917f ("crypto: qat - Intel(R) QAT ucode part of fw loader")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a256a5c33ab3608c20e3cb8406fb98805266e02d
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jun 17 09:49:52 2020 -0400

    crypto: hisilicon - don't sleep of CRYPTO_TFM_REQ_MAY_SLEEP was not specified
    
    commit 5ead051780404b5cb22147170acadd1994dc3236 upstream.
    
    There is this call chain:
    sec_alg_skcipher_encrypt -> sec_alg_skcipher_crypto ->
    sec_alg_alloc_and_calc_split_sizes -> kcalloc
    where we call sleeping allocator function even if CRYPTO_TFM_REQ_MAY_SLEEP
    was not specified.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org      # v4.19+
    Fixes: 915e4e8413da ("crypto: hisilicon - SEC security accelerator driver")
    Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6158e615334a6d81ff95c4f3a3f5cc5766dfa5aa
Author: Matteo Croce <mcroce@linux.microsoft.com>
Date:   Mon Jul 6 19:37:36 2020 -0700

    pstore: Fix linking when crypto API disabled
    
    commit fd49e03280e596e54edb93a91bc96170f8e97e4a upstream.
    
    When building a kernel with CONFIG_PSTORE=y and CONFIG_CRYPTO not set,
    a build error happens:
    
        ld: fs/pstore/platform.o: in function `pstore_dump':
        platform.c:(.text+0x3f9): undefined reference to `crypto_comp_compress'
        ld: fs/pstore/platform.o: in function `pstore_get_backend_records':
        platform.c:(.text+0x784): undefined reference to `crypto_comp_decompress'
    
    This because some pstore code uses crypto_comp_(de)compress regardless
    of the CONFIG_CRYPTO status. Fix it by wrapping the (de)compress usage
    by IS_ENABLED(CONFIG_PSTORE_COMPRESS)
    
    Signed-off-by: Matteo Croce <mcroce@linux.microsoft.com>
    Link: https://lore.kernel.org/lkml/20200706234045.9516-1-mcroce@linux.microsoft.com
    Fixes: cb3bee0369bc ("pstore: Use crypto compress API")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32e110843422ba95c7d5be74a5c19b72a77881ca
Author: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Date:   Fri Jul 3 01:55:59 2020 +0300

    tpm: Unify the mismatching TPM space buffer sizes
    
    commit 6c4e79d99e6f42b79040f1a33cd4018f5425030b upstream.
    
    The size of the buffers for storing context's and sessions can vary from
    arch to arch as PAGE_SIZE can be anything between 4 kB and 256 kB (the
    maximum for PPC64). Define a fixed buffer size set to 16 kB. This should be
    enough for most use with three handles (that is how many we allow at the
    moment). Parametrize the buffer size while doing this, so that it is easier
    to revisit this later on if required.
    
    Cc: stable@vger.kernel.org
    Reported-by: Stefan Berger <stefanb@linux.ibm.com>
    Fixes: 745b361e989a ("tpm: infrastructure for TPM spaces")
    Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
    Tested-by: Stefan Berger <stefanb@linux.ibm.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec0cf56ee03190bda9477fcc7bffdb92b53d988f
Author: Hector Martin <marcan@marcan.st>
Date:   Mon Aug 10 17:25:02 2020 +0900

    ALSA: usb-audio: add quirk for Pioneer DDJ-RB
    
    commit 6e8596172ee1cd46ec0bfd5adcf4ff86371478b6 upstream.
    
    This is just another Pioneer device with fixed endpoints. Input is dummy
    but used as feedback (it always returns silence).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200810082502.225979-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8b0754bb14193feb7a1868c9cf3ddb20b535b89
Author: Hector Martin <marcan@marcan.st>
Date:   Mon Aug 10 17:24:00 2020 +0900

    ALSA: usb-audio: work around streaming quirk for MacroSilicon MS2109
    
    commit 1b7ecc241a67ad6b584e071bd791a54e0cd5f097 upstream.
    
    Further investigation of the L-R swap problem on the MS2109 reveals that
    the problem isn't that the channels are swapped, but rather that they
    are swapped and also out of phase by one sample. In other words, the
    issue is actually that the very first frame that comes from the hardware
    is a half-frame containing only the right channel, and after that
    everything becomes offset.
    
    So introduce a new quirk field to drop the very first 2 bytes that come
    in after the format is configured and a capture stream starts. This puts
    the channels in phase and in the correct order.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200810082400.225858-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 184f08d3789fea141018daed2c293ead37e2f805
Author: Hector Martin <marcan@marcan.st>
Date:   Mon Aug 10 13:53:19 2020 +0900

    ALSA: usb-audio: fix overeager device match for MacroSilicon MS2109
    
    commit 14a720dc1f5332f3bdf30a23a3bc549e81be974c upstream.
    
    Matching by device matches all interfaces, which breaks the video/HID
    portions of the device depending on module load order.
    
    Fixes: e337bf19f6af ("ALSA: usb-audio: add quirk for MacroSilicon MS2109")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20200810045319.128745-1-marcan@marcan.st
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b4d81f58d9daa0333c0e1198bffb8e73ee0d59a
Author: Mirko Dietrich <buzz@l4m1.de>
Date:   Thu Aug 6 14:48:50 2020 +0200

    ALSA: usb-audio: Creative USB X-Fi Pro SB1095 volume knob support
    
    commit fec9008828cde0076aae595ac031bfcf49d335a4 upstream.
    
    Adds an entry for Creative USB X-Fi to the rc_config array in
    mixer_quirks.c to allow use of volume knob on the device.
    Adds support for newer X-Fi Pro card, known as "Model No. SB1095"
    with USB ID "041e:3263"
    
    Signed-off-by: Mirko Dietrich <buzz@l4m1.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200806124850.20334-1-buzz@l4m1.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9af94db4d1b7c83ad8f5a1ef5c10e47872af25b5
Author: Hui Wang <hui.wang@canonical.com>
Date:   Tue Aug 11 20:24:30 2020 +0800

    ALSA: hda - reverse the setting value in the micmute_led_set
    
    commit 404690649e6a52ee39817168f2d984726412e091 upstream.
    
    Before the micmute_led_set() is introduced, the function of
    alc_gpio_micmute_update() will set the gpio value with the
    !micmute_led.led_value, and the machines have the correct micmute led
    status. After the micmute_led_set() is introduced, it sets the gpio
    value with !!micmute_led.led_value, so the led status is not correct
    anymore, we need to set micmute_led_polarity = 1 to workaround it.
    
    Now we fix the micmute_led_set() and remove micmute_led_polarity = 1.
    
    Fixes: 87dc36482cab ("ALSA: hda/realtek - Add LED class support for micmute LED")
    Reported-and-suggested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200811122430.6546-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d81a84e7bba0a42b6205f7a4a592f4214c86bb48
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Aug 10 10:16:59 2020 +0800

    ALSA: hda - fix the micmute led status for Lenovo ThinkCentre AIO
    
    commit 386a6539992b82fe9ac4f9dc3f548956fd894d8c upstream.
    
    After installing the Ubuntu Linux, the micmute led status is not
    correct. Users expect that the led is on if the capture is disabled,
    but with the current kernel, the led is off with the capture disabled.
    
    We tried the old linux kernel like linux-4.15, there is no this issue.
    It looks like we introduced this issue when switching to the led_cdev.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200810021659.7429-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09af2d0326b17009869c02ab504bfecbd2d19ea0
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Fri Jul 31 15:38:22 2020 +0800

    vdpasim: protect concurrent access to iommu iotlb
    
    commit 0ea9ee430e74b16c6b17e70757d1c26d8d140e1f upstream.
    
    Iommu iotlb can be accessed by different cores for performing IO using
    multiple virt queues. Add a spinlock to synchronize iotlb accesses.
    
    This could be easily reproduced when using more than 1 pktgen threads
    to inject traffic to vdpa simulator.
    
    Fixes: 2c53d0f64c06f("vdpasim: vDPA device simulator")
    Cc: stable@vger.kernel.org
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Link: https://lore.kernel.org/r/20200731073822.13326-1-jasowang@redhat.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53dcbd3acc7474124715b90479f7458bfa50e2cb
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Thu Jul 23 09:34:37 2020 +0800

    iommu/vt-d: Skip TE disabling on quirky gfx dedicated iommu
    
    commit b1012ca8dc4f9b1a1fe8e2cb1590dd6d43ea3849 upstream.
    
    The VT-d spec requires (10.4.4 Global Command Register, TE field) that:
    
    Hardware implementations supporting DMA draining must drain any in-flight
    DMA read/write requests queued within the Root-Complex before completing
    the translation enable command and reflecting the status of the command
    through the TES field in the Global Status register.
    
    Unfortunately, some integrated graphic devices fail to do so after some
    kind of power state transition. As the result, the system might stuck in
    iommu_disable_translation(), waiting for the completion of TE transition.
    
    This provides a quirk list for those devices and skips TE disabling if
    the qurik hits.
    
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=208363
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=206571
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Tested-by: Koba Ko <koba.ko@canonical.com>
    Tested-by: Jun Miao <jun.miao@windriver.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200723013437.2268-1-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56448553974fe3616c641f29ae32ea182b80e23c
Author: Peter Chen <peter.chen@nxp.com>
Date:   Wed Jul 22 11:06:19 2020 +0800

    usb: cdns3: gadget: always zeroed TRB buffer when enable endpoint
    
    commit 95f5acfc4f58f01a22b66d8c9c0ffb72aa96271c upstream.
    
    During the endpoint dequeue operation, it changes dequeued TRB as link
    TRB, when the endpoint is disabled and re-enabled, the DMA fetches the
    TRB before the link TRB, after it handles current TRB, the DMA pointer
    will advance to the TRB after link TRB, but enqueue and dequene
    variables don't know it due to no hardware interrupt at the time, when
    the next TRB is added to link TRB position, the DMA will not handle
    this TRB due to its pointer is already at the next TRB. See the trace
    log like below:
    
    file-storage-675   [001] d..1    86.585657: usb_ep_queue: ep0: req 00000000df9b3a4f length 0/0 sgs 0/0 stream 0 zsI status 0 --> 0
    file-storage-675   [001] d..1    86.585663: cdns3_ep_queue: ep1out: req: 000000002ebce364, req buff 00000000f5bc96b4, length: 0/1024 zsi, status: -115, trb: [start:0, end:0: virt addr (null)], flags:0 SID: 0
    file-storage-675   [001] d..1    86.585671: cdns3_prepare_trb: ep1out: trb 000000007f770303, dma buf: 0xbd195800, size: 1024, burst: 128 ctrl: 0x00000425 (C=1, T=0, ISP, IOC, Normal) SID:0 LAST_SID:0
    file-storage-675   [001] d..1    86.585676: cdns3_ring:
                Ring contents for ep1out:
                Ring deq index: 0, trb: 000000007f770303 (virt), 0xc4003000 (dma)
                Ring enq index: 1, trb: 0000000049c1ba21 (virt), 0xc400300c (dma)
                free trbs: 38, CCS=1, PCS=1
                @0x00000000c4003000 bd195800 80020400 00000425
                @0x00000000c400300c c4003018 80020400 00001811
                @0x00000000c4003018 bcfcc000 0000001f 00000426
                @0x00000000c4003024 bcfce800 0000001f 00000426
    
                ...
    
     irq/144-5b13000-698   [000] d...    87.619286: usb_gadget_giveback_request: ep1in: req 0000000031b832eb length 13/13 sgs 0/0 stream 0 zsI status 0 --> 0
        file-storage-675   [001] d..1    87.619287: cdns3_ep_queue: ep1out: req: 000000002ebce364, req buff 00000000f5bc96b4, length: 0/1024 zsi, status: -115, trb: [start:0, end:0: virt addr 0x80020400c400300c], flags:0 SID: 0
        file-storage-675   [001] d..1    87.619294: cdns3_prepare_trb: ep1out: trb 0000000049c1ba21, dma buf: 0xbd198000, size: 1024, burst: 128 ctrl: 0x00000425 (C=1, T=0, ISP, IOC, Normal) SID:0 LAST_SID:0
        file-storage-675   [001] d..1    87.619297: cdns3_ring:
                    Ring contents for ep1out:
                    Ring deq index: 1, trb: 0000000049c1ba21 (virt), 0xc400300c (dma)
                    Ring enq index: 2, trb: 0000000059b34b67 (virt), 0xc4003018 (dma)
                    free trbs: 38, CCS=1, PCS=1
                    @0x00000000c4003000 bd195800 0000001f 00000427
                    @0x00000000c400300c bd198000 80020400 00000425
                    @0x00000000c4003018 bcfcc000 0000001f 00000426
                    @0x00000000c4003024 bcfce800 0000001f 00000426
                    ...
    
        file-storage-675   [001] d..1    87.619305: cdns3_doorbell_epx: ep1out, ep_trbaddr c4003018
        file-storage-675   [001] ....    87.619308: usb_ep_queue: ep1out: req 000000002ebce364 length 0/1024 sgs 0/0 stream 0 zsI status -115 --> 0
     irq/144-5b13000-698   [000] d..1    87.619315: cdns3_epx_irq: IRQ for ep1out: 01000c80 TRBERR , ep_traddr: c4003018 ep_last_sid: 00000000 use_streams: 0
     irq/144-5b13000-698   [000] d..1    87.619395: cdns3_usb_irq: IRQ 00000008 = Hot Reset
    
    Fixes: f616c3bda47e ("usb: cdns3: Fix dequeue implementation")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1425bf7b1be0825556fc2e72e90532531ad1ef12
Author: Brant Merryman <brant.merryman@silabs.com>
Date:   Fri Jun 26 04:22:58 2020 +0000

    USB: serial: cp210x: enable usb generic throttle/unthrottle
    
    commit 4387b3dbb079d482d3c2b43a703ceed4dd27ed28 upstream.
    
    Assign the .throttle and .unthrottle functions to be generic function
    in the driver structure to prevent data loss that can otherwise occur
    if the host does not enable USB throttling.
    
    Signed-off-by: Brant Merryman <brant.merryman@silabs.com>
    Co-developed-by: Phu Luu <phu.luu@silabs.com>
    Signed-off-by: Phu Luu <phu.luu@silabs.com>
    Link: https://lore.kernel.org/r/57401AF3-9961-461F-95E1-F8AFC2105F5E@silabs.com
    [ johan: fix up tags ]
    Fixes: 39a66b8d22a3 ("[PATCH] USB: CP2101 Add support for flow control")
    Cc: stable <stable@vger.kernel.org>     # 2.6.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd5cc29fca5e7b65e5cb811bcf2e83865b3c894f
Author: Brant Merryman <brant.merryman@silabs.com>
Date:   Fri Jun 26 04:24:20 2020 +0000

    USB: serial: cp210x: re-enable auto-RTS on open
    
    commit c7614ff9b73a1e6fb2b1b51396da132ed22fecdb upstream.
    
    CP210x hardware disables auto-RTS but leaves auto-CTS when in hardware
    flow control mode and UART on cp210x hardware is disabled. When
    re-opening the port, if auto-CTS is enabled on the cp210x, then auto-RTS
    must be re-enabled in the driver.
    
    Signed-off-by: Brant Merryman <brant.merryman@silabs.com>
    Co-developed-by: Phu Luu <phu.luu@silabs.com>
    Signed-off-by: Phu Luu <phu.luu@silabs.com>
    Link: https://lore.kernel.org/r/ECCF8E73-91F3-4080-BE17-1714BC8818FB@silabs.com
    [ johan: fix up tags and problem description ]
    Fixes: 39a66b8d22a3 ("[PATCH] USB: CP2101 Add support for flow control")
    Cc: stable <stable@vger.kernel.org>     # 2.6.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9eb38791a1f79ac4c57a40facff4d0aaa7824b3
Author: Thierry Reding <treding@nvidia.com>
Date:   Fri Aug 7 09:36:32 2020 +0200

    r8152: Use MAC address from correct device tree node
    
    [ Upstream commit b9b40ee4db6cb186341b97bca4f0d7aa2a042a66 ]
    
    Query the USB device's device tree node when looking for a MAC address.
    The struct device embedded into the struct net_device does not have a
    device tree node attached at all.
    
    The reason why this went unnoticed is because the system where this was
    tested was one of the few development units that had its OTP programmed,
    as opposed to production systems where the MAC address is stored in a
    separate EEPROM and is passed via device tree by the firmware.
    
    Reported-by: EJ Hsu <ejh@nvidia.com>
    Fixes: acb6d3771a03 ("r8152: Use MAC address from device tree if available")
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Reviewed-by: EJ Hsu <ejh@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26121668ba978a4d7630314173983bf306001976
Author: Marek Behún <marek.behun@nic.cz>
Date:   Mon Aug 10 17:01:58 2020 +0200

    net: phy: marvell10g: fix null pointer dereference
    
    [ Upstream commit 1b8ef1423dbfd34de2439a2db457b84480b7c8a8 ]
    
    Commit c3e302edca24 ("net: phy: marvell10g: fix temperature sensor on 2110")
    added a check for PHY ID via phydev->drv->phy_id in a function which is
    called by devres at a time when phydev->drv is already set to null by
    phy_remove function.
    
    This null pointer dereference can be triggered via SFP subsystem with a
    SFP module containing this Marvell PHY. When the SFP interface is put
    down, the SFP subsystem removes the PHY.
    
    Fixes: c3e302edca24 ("net: phy: marvell10g: fix temperature sensor on 2110")
    Signed-off-by: Marek Behún <marek.behun@nic.cz>
    Cc: Maxime Chevallier <maxime.chevallier@bootlin.com>
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Baruch Siach <baruch@tkos.co.il>
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6979755c3473b26ca399bfce09a7011d7a9fdd70
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Wed Aug 12 14:56:02 2020 +0200

    vsock: fix potential null pointer dereference in vsock_poll()
    
    [ Upstream commit 1980c05844830a44708c98c96d600833aa3fae08 ]
    
    syzbot reported this issue where in the vsock_poll() we find the
    socket state at TCP_ESTABLISHED, but 'transport' is null:
      general protection fault, probably for non-canonical address 0xdffffc0000000012: 0000 [#1] PREEMPT SMP KASAN
      KASAN: null-ptr-deref in range [0x0000000000000090-0x0000000000000097]
      CPU: 0 PID: 8227 Comm: syz-executor.2 Not tainted 5.8.0-rc7-syzkaller #0
      Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
      RIP: 0010:vsock_poll+0x75a/0x8e0 net/vmw_vsock/af_vsock.c:1038
      Call Trace:
       sock_poll+0x159/0x460 net/socket.c:1266
       vfs_poll include/linux/poll.h:90 [inline]
       do_pollfd fs/select.c:869 [inline]
       do_poll fs/select.c:917 [inline]
       do_sys_poll+0x607/0xd40 fs/select.c:1011
       __do_sys_poll fs/select.c:1069 [inline]
       __se_sys_poll fs/select.c:1057 [inline]
       __x64_sys_poll+0x18c/0x440 fs/select.c:1057
       do_syscall_64+0x60/0xe0 arch/x86/entry/common.c:384
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    This issue can happen if the TCP_ESTABLISHED state is set after we read
    the vsk->transport in the vsock_poll().
    
    We could put barriers to synchronize, but this can only happen during
    connection setup, so we can simply check that 'transport' is valid.
    
    Fixes: c0cfa2d8a788 ("vsock: add multi-transports support")
    Reported-and-tested-by: syzbot+a61bac2fcc1a7c6623fe@syzkaller.appspotmail.com
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1a7c51485e17d90c6b0315565fbe52e8d1fe745
Author: Tim Froidcoeur <tim.froidcoeur@tessares.net>
Date:   Tue Aug 11 20:33:24 2020 +0200

    net: initialize fastreuse on inet_inherit_port
    
    [ Upstream commit d76f3351cea2d927fdf70dd7c06898235035e84e ]
    
    In the case of TPROXY, bind_conflict optimizations for SO_REUSEADDR or
    SO_REUSEPORT are broken, possibly resulting in O(n) instead of O(1) bind
    behaviour or in the incorrect reuse of a bind.
    
    the kernel keeps track for each bind_bucket if all sockets in the
    bind_bucket support SO_REUSEADDR or SO_REUSEPORT in two fastreuse flags.
    These flags allow skipping the costly bind_conflict check when possible
    (meaning when all sockets have the proper SO_REUSE option).
    
    For every socket added to a bind_bucket, these flags need to be updated.
    As soon as a socket that does not support reuse is added, the flag is
    set to false and will never go back to true, unless the bind_bucket is
    deleted.
    
    Note that there is no mechanism to re-evaluate these flags when a socket
    is removed (this might make sense when removing a socket that would not
    allow reuse; this leaves room for a future patch).
    
    For this optimization to work, it is mandatory that these flags are
    properly initialized and updated.
    
    When a child socket is created from a listen socket in
    __inet_inherit_port, the TPROXY case could create a new bind bucket
    without properly initializing these flags, thus preventing the
    optimization to work. Alternatively, a socket not allowing reuse could
    be added to an existing bind bucket without updating the flags, causing
    bind_conflict to never be called as it should.
    
    Call inet_csk_update_fastreuse when __inet_inherit_port decides to create
    a new bind_bucket or use a different bind_bucket than the one of the
    listen socket.
    
    Fixes: 093d282321da ("tproxy: fix hash locking issue when using port redirection in __inet_inherit_port()")
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe00aee967ec9710f184f7e9643bad43b786b27d
Author: Tim Froidcoeur <tim.froidcoeur@tessares.net>
Date:   Tue Aug 11 20:33:23 2020 +0200

    net: refactor bind_bucket fastreuse into helper
    
    [ Upstream commit 62ffc589abb176821662efc4525ee4ac0b9c3894 ]
    
    Refactor the fastreuse update code in inet_csk_get_port into a small
    helper function that can be called from other places.
    
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Tim Froidcoeur <tim.froidcoeur@tessares.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0306c15114e2c695fcbe00a7e35f3342f12f5dca
Author: Ronak Doshi <doshir@vmware.com>
Date:   Mon Aug 10 09:55:55 2020 -0700

    vmxnet3: use correct tcp hdr length when packet is encapsulated
    
    [ Upstream commit 8a7f280f29a80f6e0798f5d6e07c5dd8726620fe ]
    
    Commit dacce2be3312 ("vmxnet3: add geneve and vxlan tunnel offload
    support") added support for encapsulation offload. However, while
    calculating tcp hdr length, it does not take into account if the
    packet is encapsulated or not.
    
    This patch fixes this issue by using correct reference for inner
    tcp header.
    
    Fixes: dacce2be3312 ("vmxnet3: add geneve and vxlan tunnel offload support")
    Signed-off-by: Ronak Doshi <doshir@vmware.com>
    Acked-by: Guolin Yang <gyang@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 743ae9f790ec1e450d7bed0becd83f4999d475ed
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Aug 10 13:38:39 2020 -0400

    tcp: correct read of TFO keys on big endian systems
    
    [ Upstream commit f19008e676366c44e9241af57f331b6c6edf9552 ]
    
    When TFO keys are read back on big endian systems either via the global
    sysctl interface or via getsockopt() using TCP_FASTOPEN_KEY, the values
    don't match what was written.
    
    For example, on s390x:
    
    # echo "1-2-3-4" > /proc/sys/net/ipv4/tcp_fastopen_key
    # cat /proc/sys/net/ipv4/tcp_fastopen_key
    02000000-01000000-04000000-03000000
    
    Instead of:
    
    # cat /proc/sys/net/ipv4/tcp_fastopen_key
    00000001-00000002-00000003-00000004
    
    Fix this by converting to the correct endianness on read. This was
    reported by Colin Ian King when running the 'tcp_fastopen_backup_key' net
    selftest on s390x, which depends on the read value matching what was
    written. I've confirmed that the test now passes on big and little endian
    systems.
    
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Fixes: 438ac88009bc ("net: fastopen: robustness and endianness fixes for SipHash")
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Eric Dumazet <edumazet@google.com>
    Reported-and-tested-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cccda2d08882739e3c6574cb38bc1a361d50725
Author: Ira Weiny <ira.weiny@intel.com>
Date:   Mon Aug 10 17:02:58 2020 -0700

    net/tls: Fix kmap usage
    
    [ Upstream commit b06c19d9f827f6743122795570bfc0c72db482b0 ]
    
    When MSG_OOB is specified to tls_device_sendpage() the mapped page is
    never unmapped.
    
    Hold off mapping the page until after the flags are checked and the page
    is actually needed.
    
    Fixes: e8f69799810c ("net/tls: Add generic NIC offload infrastructure")
    Signed-off-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e356db45f43367b033ed137767dfcb197b4c93
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Thu Aug 6 19:53:16 2020 +0800

    net: Set fput_needed iff FDPUT_FPUT is set
    
    [ Upstream commit ce787a5a074a86f76f5d3fd804fa78e01bfb9e89 ]
    
    We should fput() file iff FDPUT_FPUT is set. So we should set fput_needed
    accordingly.
    
    Fixes: 00e188ef6a7e ("sockfd_lookup_light(): switch to fdget^W^Waway from fget_light")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5512f2549e3d725ba34fc6a0a10e47ae3de5630d
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Aug 6 17:37:53 2020 +0200

    net: phy: fix memory leak in device-create error path
    
    [ Upstream commit d02cbc46136105cf86f84ac355e16f04696f538d ]
    
    A recent commit introduced a late error path in phy_device_create()
    which fails to release the device name allocated by dev_set_name().
    
    Fixes: 13d0ab6750b2 ("net: phy: check return code when requesting PHY driver module")
    Cc: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d556aa7ab7b71592fc60ecdc4b917644ecea2c92
Author: Qingyu Li <ieatmuttonchuan@gmail.com>
Date:   Mon Aug 10 09:51:00 2020 +0800

    net/nfc/rawsock.c: add CAP_NET_RAW check.
    
    [ Upstream commit 26896f01467a28651f7a536143fe5ac8449d4041 ]
    
    When creating a raw AF_NFC socket, CAP_NET_RAW needs to be checked first.
    
    Signed-off-by: Qingyu Li <ieatmuttonchuan@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 469cb3bb42d13272b66b6c23ffd5057694bd4add
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Mon Aug 10 08:16:58 2020 -0400

    net: Fix potential memory leak in proto_register()
    
    [ Upstream commit 0f5907af39137f8183ed536aaa00f322d7365130 ]
    
    If we failed to assign proto idx, we free the twsk_slab_name but forget to
    free the twsk_slab. Add a helper function tw_prot_cleanup() to free these
    together and also use this helper function in proto_unregister().
    
    Fixes: b45ce32135d1 ("sock: fix potential memory leak in proto_register()")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4268aa35b6dd54bf380d29e6d3ba3e0473fc52f8
Author: Xie He <xie.he.0141@gmail.com>
Date:   Wed Aug 5 18:50:40 2020 -0700

    drivers/net/wan/lapbether: Added needed_headroom and a skb->len check
    
    [ Upstream commit c7ca03c216acb14466a713fedf1b9f2c24994ef2 ]
    
    1. Added a skb->len check
    
    This driver expects upper layers to include a pseudo header of 1 byte
    when passing down a skb for transmission. This driver will read this
    1-byte header. This patch added a skb->len check before reading the
    header to make sure the header exists.
    
    2. Changed to use needed_headroom instead of hard_header_len to request
    necessary headroom to be allocated
    
    In net/packet/af_packet.c, the function packet_snd first reserves a
    headroom of length (dev->hard_header_len + dev->needed_headroom).
    Then if the socket is a SOCK_DGRAM socket, it calls dev_hard_header,
    which calls dev->header_ops->create, to create the link layer header.
    If the socket is a SOCK_RAW socket, it "un-reserves" a headroom of
    length (dev->hard_header_len), and assumes the user to provide the
    appropriate link layer header.
    
    So according to the logic of af_packet.c, dev->hard_header_len should
    be the length of the header that would be created by
    dev->header_ops->create.
    
    However, this driver doesn't provide dev->header_ops, so logically
    dev->hard_header_len should be 0.
    
    So we should use dev->needed_headroom instead of dev->hard_header_len
    to request necessary headroom to be allocated.
    
    This change fixes kernel panic when this driver is used with AF_PACKET
    SOCK_RAW sockets.
    
    Call stack when panic:
    
    [  168.399197] skbuff: skb_under_panic: text:ffffffff819d95fb len:20
    put:14 head:ffff8882704c0a00 data:ffff8882704c09fd tail:0x11 end:0xc0
    dev:veth0
    ...
    [  168.399255] Call Trace:
    [  168.399259]  skb_push.cold+0x14/0x24
    [  168.399262]  eth_header+0x2b/0xc0
    [  168.399267]  lapbeth_data_transmit+0x9a/0xb0 [lapbether]
    [  168.399275]  lapb_data_transmit+0x22/0x2c [lapb]
    [  168.399277]  lapb_transmit_buffer+0x71/0xb0 [lapb]
    [  168.399279]  lapb_kick+0xe3/0x1c0 [lapb]
    [  168.399281]  lapb_data_request+0x76/0xc0 [lapb]
    [  168.399283]  lapbeth_xmit+0x56/0x90 [lapbether]
    [  168.399286]  dev_hard_start_xmit+0x91/0x1f0
    [  168.399289]  ? irq_init_percpu_irqstack+0xc0/0x100
    [  168.399291]  __dev_queue_xmit+0x721/0x8e0
    [  168.399295]  ? packet_parse_headers.isra.0+0xd2/0x110
    [  168.399297]  dev_queue_xmit+0x10/0x20
    [  168.399298]  packet_sendmsg+0xbf0/0x19b0
    ......
    
    Cc: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Cc: Martin Schiller <ms@dev.tdt.de>
    Cc: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e85a5151e5f9daeb4e17e3f3d7c32df9545e2ded
Author: John Ogness <john.ogness@linutronix.de>
Date:   Thu Aug 13 21:45:25 2020 +0206

    af_packet: TPACKET_V3: fix fill status rwlock imbalance
    
    [ Upstream commit 88fd1cb80daa20af063bce81e1fad14e945a8dc4 ]
    
    After @blk_fill_in_prog_lock is acquired there is an early out vnet
    situation that can occur. In that case, the rwlock needs to be
    released.
    
    Also, since @blk_fill_in_prog_lock is only acquired when @tp_version
    is exactly TPACKET_V3, only release it on that exact condition as
    well.
    
    And finally, add sparse annotation so that it is clearer that
    prb_fill_curr_block() and prb_clear_blk_fill_status() are acquiring
    and releasing @blk_fill_in_prog_lock, respectively. sparse is still
    unable to understand the balance, but the warnings are now on a
    higher level that make more sense.
    
    Fixes: 632ca50f2cbd ("af_packet: TPACKET_V3: replace busy-wait loop")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b879ed3103c16a7009868fdd2b9f49f91e93c8f5
Author: Jian Cai <caij2003@gmail.com>
Date:   Mon Jun 22 16:24:33 2020 -0700

    crypto: aesni - add compatibility with IAS
    
    [ Upstream commit 44069737ac9625a0f02f0f7f5ab96aae4cd819bc ]
    
    Clang's integrated assembler complains "invalid reassignment of
    non-absolute variable 'var_ddq_add'" while assembling
    arch/x86/crypto/aes_ctrby8_avx-x86_64.S. It was because var_ddq_add was
    reassigned with non-absolute values several times, which IAS did not
    support. We can avoid the reassignment by replacing the uses of
    var_ddq_add with its definitions accordingly to have compatilibility
    with IAS.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1008
    Reported-by: Sedat Dilek <sedat.dilek@gmail.com>
    Reported-by: Fangrui Song <maskray@google.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com> # build+boot Linux v5.7.5; clang v11.0.0-git
    Signed-off-by: Jian Cai <caij2003@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 335e8039fdddd2c8b9257393ea71ff5b64fcedac
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Aug 14 11:16:17 2020 -0700

    x86/fsgsbase/64: Fix NULL deref in 86_fsgsbase_read_task
    
    [ Upstream commit 8ab49526b53d3172d1d8dd03a75c7d1f5bd21239 ]
    
    syzbot found its way in 86_fsgsbase_read_task() and triggered this oops:
    
       KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
       CPU: 0 PID: 6866 Comm: syz-executor262 Not tainted 5.8.0-syzkaller #0
       RIP: 0010:x86_fsgsbase_read_task+0x16d/0x310 arch/x86/kernel/process_64.c:393
       Call Trace:
         putreg32+0x3ab/0x530 arch/x86/kernel/ptrace.c:876
         genregs32_set arch/x86/kernel/ptrace.c:1026 [inline]
         genregs32_set+0xa4/0x100 arch/x86/kernel/ptrace.c:1006
         copy_regset_from_user include/linux/regset.h:326 [inline]
         ia32_arch_ptrace arch/x86/kernel/ptrace.c:1061 [inline]
         compat_arch_ptrace+0x36c/0xd90 arch/x86/kernel/ptrace.c:1198
         __do_compat_sys_ptrace kernel/ptrace.c:1420 [inline]
         __se_compat_sys_ptrace kernel/ptrace.c:1389 [inline]
         __ia32_compat_sys_ptrace+0x220/0x2f0 kernel/ptrace.c:1389
         do_syscall_32_irqs_on arch/x86/entry/common.c:84 [inline]
         __do_fast_syscall_32+0x57/0x80 arch/x86/entry/common.c:126
         do_fast_syscall_32+0x2f/0x70 arch/x86/entry/common.c:149
         entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    This can happen if ptrace() or sigreturn() pokes an LDT selector into FS
    or GS for a task with no LDT and something tries to read the base before
    a return to usermode notices the bad selector and fixes it.
    
    The fix is to make sure ldt pointer is not NULL.
    
    Fixes: 07e1d88adaae ("x86/fsgsbase/64: Fix ptrace() to read the FS/GS base accurately")
    Co-developed-by: Jann Horn <jannh@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Cc: Chang S. Bae <chang.seok.bae@intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Markus T Metzger <markus.t.metzger@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Shankar <ravi.v.shankar@intel.com>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dcab7f26a723de921a6bff22b0a9d7735d02fae9
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Jul 24 17:08:57 2020 -0400

    SUNRPC: Fix ("SUNRPC: Add "@len" parameter to gss_unwrap()")
    
    [ Upstream commit 986a4b63d3bc5f2c0eb4083b05aff2bf883b7b2f ]
    
    Braino when converting "buf->len -=" to "buf->len = len -".
    
    The result is under-estimation of the ralign and rslack values. On
    krb5p mounts, this has caused READDIR to fail with EIO, and KASAN
    splats when decoding READLINK replies.
    
    As a result of fixing this oversight, the gss_unwrap method now
    returns a buf->len that can be shorter than priv_len for small
    RPC messages. The additional adjustment done in unwrap_priv_data()
    can underflow buf->len. This causes the nfsd_request_too_large
    check to fail during some NFSv3 operations.
    
    Reported-by: Marian Rainer-Harbach
    Reported-by: Pierre Sauter <pierre.sauter@stwm.de>
    BugLink: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1886277
    Fixes: 31c9590ae468 ("SUNRPC: Add "@len" parameter to gss_unwrap()")
    Reviewed-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c031aec62182d3aaa1902ec1610c68a4a44a051
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Jul 10 16:33:07 2020 -0400

    nfsd: avoid a NULL dereference in __cld_pipe_upcall()
    
    [ Upstream commit df60446cd1fb487becd1f36f4c0da9e0e523c0cf ]
    
    If the rpc_pipefs is unmounted, then the rpc_pipe->dentry becomes NULL
    and dereferencing the dentry->d_sb will trigger an oops.  The only
    reason we're doing that is to determine the nfsd_net, which could
    instead be passed in by the caller.  So do that instead.
    
    Fixes: 11a60d159259 ("nfsd: add a "GetVersion" upcall for nfsdcld")
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f84e3caf51097fdd8051d5495ccd8e7918c5034
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Jun 11 12:44:56 2020 -0400

    svcrdma: Fix page leak in svc_rdma_recv_read_chunk()
    
    [ Upstream commit e814eecbe3bbeaa8b004d25a4b8974d232b765a9 ]
    
    Commit 07d0ff3b0cd2 ("svcrdma: Clean up Read chunk path") moved the
    page saver logic so that it gets executed event when an error occurs.
    In that case, the I/O is never posted, and those pages are then
    leaked. Errors in this path, however, are quite rare.
    
    Fixes: 07d0ff3b0cd2 ("svcrdma: Clean up Read chunk path")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bf49b97ab0bee715f43ab008a9a8bd9a3a9915b
Author: Kamal Dasu <kdasu.kdev@gmail.com>
Date:   Fri Jun 12 17:29:01 2020 -0400

    mtd: rawnand: brcmnand: Don't default to edu transfer
    
    [ Upstream commit bee3ab8bdd3b13faf08e5b6e0218f59b0a49fcc3 ]
    
    When flash-dma is absent do not default to using flash-edu.
    Make sure flash-edu is enabled before setting EDU transfer
    function.
    
    Fixes: a5d53ad26a8b ("mtd: rawnand: brcmnand: Add support for flash-edu for dma transfers")
    Signed-off-by: Kamal Dasu <kdasu.kdev@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200612212902.21347-2-kdasu.kdev@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a75fc224ebe8088595883dd1f30ff8ee1a20d5e5
Author: Drew Fustini <drew@beagleboard.org>
Date:   Mon Jun 8 14:51:43 2020 +0200

    pinctrl-single: fix pcs_parse_pinconf() return value
    
    [ Upstream commit f46fe79ff1b65692a65266a5bec6dbe2bf7fc70f ]
    
    This patch causes pcs_parse_pinconf() to return -ENOTSUPP when no
    pinctrl_map is added.  The current behavior is to return 0 when
    !PCS_HAS_PINCONF or !nconfs.  Thus pcs_parse_one_pinctrl_entry()
    incorrectly assumes that a map was added and sets num_maps = 2.
    
    Analysis:
    =========
    The function pcs_parse_one_pinctrl_entry() calls pcs_parse_pinconf()
    if PCS_HAS_PINCONF is enabled.  The function pcs_parse_pinconf()
    returns 0 to indicate there was no error and num_maps is then set to 2:
    
     980 static int pcs_parse_one_pinctrl_entry(struct pcs_device *pcs,
     981                                                 struct device_node *np,
     982                                                 struct pinctrl_map **map,
     983                                                 unsigned *num_maps,
     984                                                 const char **pgnames)
     985 {
    <snip>
    1053         (*map)->type = PIN_MAP_TYPE_MUX_GROUP;
    1054         (*map)->data.mux.group = np->name;
    1055         (*map)->data.mux.function = np->name;
    1056
    1057         if (PCS_HAS_PINCONF && function) {
    1058                 res = pcs_parse_pinconf(pcs, np, function, map);
    1059                 if (res)
    1060                         goto free_pingroups;
    1061                 *num_maps = 2;
    1062         } else {
    1063                 *num_maps = 1;
    1064         }
    
    However, pcs_parse_pinconf() will also return 0 if !PCS_HAS_PINCONF or
    !nconfs.  I believe these conditions should indicate that no map was
    added by returning -ENOTSUPP. Otherwise pcs_parse_one_pinctrl_entry()
    will set num_maps = 2 even though no maps were successfully added, as
    it does not reach "m++" on line 940:
    
     895 static int pcs_parse_pinconf(struct pcs_device *pcs, struct device_node *np,
     896                              struct pcs_function *func,
     897                              struct pinctrl_map **map)
     898
     899 {
     900         struct pinctrl_map *m = *map;
    <snip>
     917         /* If pinconf isn't supported, don't parse properties in below. */
     918         if (!PCS_HAS_PINCONF)
     919                 return 0;
     920
     921         /* cacluate how much properties are supported in current node */
     922         for (i = 0; i < ARRAY_SIZE(prop2); i++) {
     923                 if (of_find_property(np, prop2[i].name, NULL))
     924                         nconfs++;
     925         }
     926         for (i = 0; i < ARRAY_SIZE(prop4); i++) {
     927                 if (of_find_property(np, prop4[i].name, NULL))
     928                         nconfs++;
     929         }
     930         if (!nconfs)
     919                 return 0;
     932
     933         func->conf = devm_kcalloc(pcs->dev,
     934                                   nconfs, sizeof(struct pcs_conf_vals),
     935                                   GFP_KERNEL);
     936         if (!func->conf)
     937                 return -ENOMEM;
     938         func->nconfs = nconfs;
     939         conf = &(func->conf[0]);
     940         m++;
    
    This situtation will cause a boot failure [0] on the BeagleBone Black
    (AM3358) when am33xx_pinmux node in arch/arm/boot/dts/am33xx-l4.dtsi
    has compatible = "pinconf-single" instead of "pinctrl-single".
    
    The patch fixes this issue by returning -ENOSUPP when !PCS_HAS_PINCONF
    or !nconfs, so that pcs_parse_one_pinctrl_entry() will know that no
    map was added.
    
    Logic is also added to pcs_parse_one_pinctrl_entry() to distinguish
    between -ENOSUPP and other errors.  In the case of -ENOSUPP, num_maps
    is set to 1 as it is valid for pinconf to be enabled and a given pin
    group to not any pinconf properties.
    
    [0] https://lore.kernel.org/linux-omap/20200529175544.GA3766151@x1/
    
    Fixes: 9dddb4df90d1 ("pinctrl: single: support generic pinconf")
    Signed-off-by: Drew Fustini <drew@beagleboard.org>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20200608125143.GA2789203@x1
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eba0e0f5ae94f9a51ed3644413beffa5989f5bcc
Author: Pavel Machek <pavel@ucw.cz>
Date:   Thu Aug 6 23:18:09 2020 -0700

    ocfs2: fix unbalanced locking
    
    [ Upstream commit 57c720d4144a9c2b88105c3e8f7b0e97e4b5cc93 ]
    
    Based on what fails, function can return with nfs_sync_rwlock either
    locked or unlocked. That can not be right.
    
    Always return with lock unlocked on error.
    
    Fixes: 4cd9973f9ff6 ("ocfs2: avoid inode removal while nfsd is accessing it")
    Signed-off-by: Pavel Machek (CIP) <pavel@denx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Link: http://lkml.kernel.org/r/20200724124443.GA28164@duo.ucw.cz
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e29f6ba2c10f8148fb83be580f2e70f791b21be9
Author: Wang Hai <wanghai38@huawei.com>
Date:   Mon Jun 15 11:25:33 2020 +0800

    dlm: Fix kobject memleak
    
    [ Upstream commit 0ffddafc3a3970ef7013696e7f36b3d378bc4c16 ]
    
    Currently the error return path from kobject_init_and_add() is not
    followed by a call to kobject_put() - which means we are leaking
    the kobject.
    
    Set do_unreg = 1 before kobject_init_and_add() to ensure that
    kobject_put() can be called in its error patch.
    
    Fixes: 901195ed7f4b ("Kobject: change GFS2 to use kobject_init_and_add")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bbe1b50734a417d1ab367060c38ab5d7d8bf0f7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 22 14:39:14 2020 +0200

    media: mtk-mdp: Fix a refcounting bug on error in init
    
    [ Upstream commit dd4eddc4ba31fbf4554fc5fa12d3a553b50e1469 ]
    
    We need to call of_node_put(comp->dev_node); on the error paths in this
    function.
    
    Fixes: c8eb2d7e8202 ("[media] media: Add Mediatek MDP Driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce1b309dd629dcef6796d1e5a7e145d03d509468
Author: Dean Nelson <dnelson@redhat.com>
Date:   Wed Aug 5 13:18:48 2020 -0500

    net: thunderx: initialize VF's mailbox mutex before first usage
    
    [ Upstream commit c1055b76ad00aed0e8b79417080f212d736246b6 ]
    
    A VF's mailbox mutex is not getting initialized by nicvf_probe() until after
    it is first used. And such usage is resulting in...
    
    [   28.270927] ------------[ cut here ]------------
    [   28.270934] DEBUG_LOCKS_WARN_ON(lock->magic != lock)
    [   28.270980] WARNING: CPU: 9 PID: 675 at kernel/locking/mutex.c:938 __mutex_lock+0xdac/0x12f0
    [   28.270985] Modules linked in: ast(+) nicvf(+) i2c_algo_bit drm_vram_helper drm_ttm_helper ttm nicpf(+) drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm ixgbe(+) sg thunder_bgx mdio i2c_thunderx mdio_thunder thunder_xcv mdio_cavium dm_mirror dm_region_hash dm_log dm_mod
    [   28.271064] CPU: 9 PID: 675 Comm: systemd-udevd Not tainted 4.18.0+ #1
    [   28.271070] Hardware name: GIGABYTE R120-T34-00/MT30-GS2-00, BIOS F02 08/06/2019
    [   28.271078] pstate: 60000005 (nZCv daif -PAN -UAO)
    [   28.271086] pc : __mutex_lock+0xdac/0x12f0
    [   28.271092] lr : __mutex_lock+0xdac/0x12f0
    [   28.271097] sp : ffff800d42146fb0
    [   28.271103] x29: ffff800d42146fb0 x28: 0000000000000000
    [   28.271113] x27: ffff800d24361180 x26: dfff200000000000
    [   28.271122] x25: 0000000000000000 x24: 0000000000000002
    [   28.271132] x23: ffff20001597cc80 x22: ffff2000139e9848
    [   28.271141] x21: 0000000000000000 x20: 1ffff001a8428e0c
    [   28.271151] x19: ffff200015d5d000 x18: 1ffff001ae0f2184
    [   28.271160] x17: 0000000000000000 x16: 0000000000000000
    [   28.271170] x15: ffff800d70790c38 x14: ffff20001597c000
    [   28.271179] x13: ffff20001597cc80 x12: ffff040002b2f779
    [   28.271189] x11: 1fffe40002b2f778 x10: ffff040002b2f778
    [   28.271199] x9 : 0000000000000000 x8 : 00000000f1f1f1f1
    [   28.271208] x7 : 00000000f2f2f2f2 x6 : 0000000000000000
    [   28.271217] x5 : 1ffff001ae0f2186 x4 : 1fffe400027eb03c
    [   28.271227] x3 : dfff200000000000 x2 : ffff1001a8428dbe
    [   28.271237] x1 : c87fdfac7ea11d00 x0 : 0000000000000000
    [   28.271246] Call trace:
    [   28.271254]  __mutex_lock+0xdac/0x12f0
    [   28.271261]  mutex_lock_nested+0x3c/0x50
    [   28.271297]  nicvf_send_msg_to_pf+0x40/0x3a0 [nicvf]
    [   28.271316]  nicvf_register_misc_interrupt+0x20c/0x328 [nicvf]
    [   28.271334]  nicvf_probe+0x508/0xda0 [nicvf]
    [   28.271344]  local_pci_probe+0xc4/0x180
    [   28.271352]  pci_device_probe+0x3ec/0x528
    [   28.271363]  driver_probe_device+0x21c/0xb98
    [   28.271371]  device_driver_attach+0xe8/0x120
    [   28.271379]  __driver_attach+0xe0/0x2a0
    [   28.271386]  bus_for_each_dev+0x118/0x190
    [   28.271394]  driver_attach+0x48/0x60
    [   28.271401]  bus_add_driver+0x328/0x558
    [   28.271409]  driver_register+0x148/0x398
    [   28.271416]  __pci_register_driver+0x14c/0x1b0
    [   28.271437]  nicvf_init_module+0x54/0x10000 [nicvf]
    [   28.271447]  do_one_initcall+0x18c/0xc18
    [   28.271457]  do_init_module+0x18c/0x618
    [   28.271464]  load_module+0x2bc0/0x4088
    [   28.271472]  __se_sys_finit_module+0x110/0x188
    [   28.271479]  __arm64_sys_finit_module+0x70/0xa0
    [   28.271490]  el0_svc_handler+0x15c/0x380
    [   28.271496]  el0_svc+0x8/0xc
    [   28.271502] irq event stamp: 52649
    [   28.271513] hardirqs last  enabled at (52649): [<ffff200011b4d790>] _raw_spin_unlock_irqrestore+0xc0/0xd8
    [   28.271522] hardirqs last disabled at (52648): [<ffff200011b4d3c4>] _raw_spin_lock_irqsave+0x3c/0xf0
    [   28.271530] softirqs last  enabled at (52330): [<ffff200010082af4>] __do_softirq+0xacc/0x117c
    [   28.271540] softirqs last disabled at (52313): [<ffff20001019b354>] irq_exit+0x3cc/0x500
    [   28.271545] ---[ end trace a9b90324c8a0d4ee ]---
    
    This problem is resolved by moving the call to mutex_init() up earlier
    in nicvf_probe().
    
    Fixes: 609ea65c65a0 ("net: thunderx: add mutex to protect mailbox from concurrent calls for same VF")
    Signed-off-by: Dean Nelson <dnelson@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8eb42c65f1627f53a13c236d28aa48a9c5bb7273
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Aug 5 04:40:45 2020 -0400

    selftests/net: relax cpu affinity requirement in msg_zerocopy test
    
    [ Upstream commit 16f6458f2478b55e2b628797bc81a4455045c74e ]
    
    The msg_zerocopy test pins the sender and receiver threads to separate
    cores to reduce variance between runs.
    
    But it hardcodes the cores and skips core 0, so it fails on machines
    with the selected cores offline, or simply fewer cores.
    
    The test mainly gives code coverage in automated runs. The throughput
    of zerocopy ('-z') and non-zerocopy runs is logged for manual
    inspection.
    
    Continue even when sched_setaffinity fails. Just log to warn anyone
    interpreting the data.
    
    Fixes: 07b65c5b31ce ("test: add msg_zerocopy test")
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 551cdcc12892034d4c5f83e867639a7307fb8c35
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Wed Aug 5 10:41:31 2020 +0800

    Revert "vxlan: fix tos value before xmit"
    
    [ Upstream commit a0dced17ad9dc08b1b25e0065b54c97a318e6e8b ]
    
    This reverts commit 71130f29979c7c7956b040673e6b9d5643003176.
    
    In commit 71130f29979c ("vxlan: fix tos value before xmit") we want to
    make sure the tos value are filtered by RT_TOS() based on RFC1349.
    
           0     1     2     3     4     5     6     7
        +-----+-----+-----+-----+-----+-----+-----+-----+
        |   PRECEDENCE    |          TOS          | MBZ |
        +-----+-----+-----+-----+-----+-----+-----+-----+
    
    But RFC1349 has been obsoleted by RFC2474. The new DSCP field defined like
    
           0     1     2     3     4     5     6     7
        +-----+-----+-----+-----+-----+-----+-----+-----+
        |          DS FIELD, DSCP           | ECN FIELD |
        +-----+-----+-----+-----+-----+-----+-----+-----+
    
    So with
    
    IPTOS_TOS_MASK          0x1E
    RT_TOS(tos)             ((tos)&IPTOS_TOS_MASK)
    
    the first 3 bits DSCP info will get lost.
    
    To take all the DSCP info in xmit, we should revert the patch and just push
    all tos bits to ip_tunnel_ecn_encap(), which will handling ECN field later.
    
    Fixes: 71130f29979c ("vxlan: fix tos value before xmit")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b187671275ac312fb47271388b225369dd02b3dd
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Tue Aug 4 09:54:15 2020 -0700

    hv_netvsc: do not use VF device if link is down
    
    [ Upstream commit 7c9864bbccc23e1812ac82966555d68c13ea4006 ]
    
    If the accelerated networking SRIOV VF device has lost carrier
    use the synthetic network device which is available as backup
    path. This is a rare case since if VF link goes down, normally
    the VMBus device will also loose external connectivity as well.
    But if the communication is between two VM's on the same host
    the VMBus device will still work.
    
    Reported-by: "Shah, Ashish N" <ashish.n.shah@intel.com>
    Fixes: 0c195567a8f6 ("netvsc: transparent VF management")
    Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
    Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adc38af984ad138c2a66cf6ac3de4140fa3a6a87
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Aug 4 21:26:43 2020 +0800

    dpaa2-eth: Fix passing zero to 'PTR_ERR' warning
    
    [ Upstream commit 02afa9c66bb954c6959877c70d9e128dcf0adce7 ]
    
    Fix smatch warning:
    
    drivers/net/ethernet/freescale/dpaa2/dpaa2-eth.c:2419
     alloc_channel() warn: passing zero to 'ERR_PTR'
    
    setup_dpcon() should return ERR_PTR(err) instead of zero in error
    handling case.
    
    Fixes: d7f5a9d89a55 ("dpaa2-eth: defer probe on object allocate")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f730f7b0edfb7c1f1a6382cb5bbd6da258723fb
Author: Stefan Roese <sr@denx.de>
Date:   Tue Aug 4 14:17:16 2020 +0200

    net: macb: Properly handle phylink on at91sam9x
    
    [ Upstream commit f7ba7dbf4f7af67b5936ff1cbd40a3254b409ebf ]
    
    I just recently noticed that ethernet does not work anymore since v5.5
    on the GARDENA smart Gateway, which is based on the AT91SAM9G25.
    Debugging showed that the "GEM bits" in the NCFGR register are now
    unconditionally accessed, which is incorrect for the !macb_is_gem()
    case.
    
    This patch adds the macb_is_gem() checks back to the code
    (in macb_mac_config() & macb_mac_link_up()), so that the GEM register
    bits are not accessed in this case any more.
    
    Fixes: 7897b071ac3b ("net: macb: convert to phylink")
    Signed-off-by: Stefan Roese <sr@denx.de>
    Cc: Reto Schneider <reto.schneider@husqvarnagroup.com>
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92bb2e6b119c85ac14f3623088ed1e8582f4e53e
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Aug 4 15:02:30 2020 +0800

    net: thunderx: use spin_lock_bh in nicvf_set_rx_mode_task()
    
    [ Upstream commit bab9693a9a8c6dd19f670408ec1e78e12a320682 ]
    
    A dead lock was triggered on thunderx driver:
    
            CPU0                    CPU1
            ----                    ----
       [01] lock(&(&nic->rx_mode_wq_lock)->rlock);
                               [11] lock(&(&mc->mca_lock)->rlock);
                               [12] lock(&(&nic->rx_mode_wq_lock)->rlock);
       [02] <Interrupt> lock(&(&mc->mca_lock)->rlock);
    
    The path for each is:
    
      [01] worker_thread() -> process_one_work() -> nicvf_set_rx_mode_task()
      [02] mld_ifc_timer_expire()
      [11] ipv6_add_dev() -> ipv6_dev_mc_inc() -> igmp6_group_added() ->
      [12] dev_mc_add() -> __dev_set_rx_mode() -> nicvf_set_rx_mode()
    
    To fix it, it needs to disable bh on [1], so that the timer on [2]
    wouldn't be triggered until rx_mode_wq_lock is released. So change
    to use spin_lock_bh() instead of spin_lock().
    
    Thanks to Paolo for helping with this.
    
    v1->v2:
      - post to netdev.
    
    Reported-by: Rafael P. <rparrazo@redhat.com>
    Tested-by: Dean Nelson <dnelson@redhat.com>
    Fixes: 469998c861fa ("net: thunderx: prevent concurrent data re-writing by nicvf_set_rx_mode")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 312efc83285417a71cc1262b7d146d6e7c452af1
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Fri Jul 31 14:38:36 2020 +0200

    gpio: don't use same lockdep class for all devm_gpiochip_add_data users
    
    [ Upstream commit 5f402bb17533113c21d61c2d4bc4ef4a6fa1c9a5 ]
    
    Commit 959bc7b22bd2 ("gpio: Automatically add lockdep keys") documents
    in its commits message its intention to "create a unique class key for
    each driver".
    
    It does so by having gpiochip_add_data add in-place the definition of
    two static lockdep classes for LOCKDEP use. That way, every caller of
    the macro adds their gpiochip with unique lockdep classes.
    
    There are many indirect callers of gpiochip_add_data, however, via
    use of devm_gpiochip_add_data. devm_gpiochip_add_data has external
    linkage and all its users will share the same lockdep classes, which
    probably is not intended.
    
    Fix this by replicating the gpio_chip_add_data statics-in-macro for
    the devm_ version as well.
    
    Fixes: 959bc7b22bd2 ("gpio: Automatically add lockdep keys")
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Reviewed-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Link: https://lore.kernel.org/r/20200731123835.8003-1-a.fatoum@pengutronix.de
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5543ea25c09dc2f8bcc143af1d018d2fb3951107
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:34 2020 +0300

    fsl/fman: fix eth hash table allocation
    
    [ Upstream commit 3207f715c34317d08e798e11a10ce816feb53c0f ]
    
    Fix memory allocation for ethernet address hash table.
    The code was wrongly allocating an array for eth hash table which
    is incorrect because this is the main structure for eth hash table
    (struct eth_hash_t) that contains inside a number of elements.
    
    Fixes: 57ba4c9b56d8 ("fsl/fman: Add FMan MAC support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5a4333e2cdf0afb5f98e8055169f5b6f415a0e2
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:33 2020 +0300

    fsl/fman: check dereferencing null pointer
    
    [ Upstream commit cc5d229a122106733a85c279d89d7703f21e4d4f ]
    
    Add a safe check to avoid dereferencing null pointer
    
    Fixes: 57ba4c9b56d8 ("fsl/fman: Add FMan MAC support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3d5c8c74008e335f968c3b390bee32958a79c20
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:32 2020 +0300

    fsl/fman: fix unreachable code
    
    [ Upstream commit cc79fd8f557767de90ff199d3b6fb911df43160a ]
    
    The parameter 'priority' is incorrectly forced to zero which ultimately
    induces logically dead code in the subsequent lines.
    
    Fixes: 57ba4c9b56d8 ("fsl/fman: Add FMan MAC support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47fe6d67f9410d7f35c4a24779a67d1475276224
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:31 2020 +0300

    fsl/fman: fix dereference null return value
    
    [ Upstream commit 0572054617f32670abab4b4e89a876954d54b704 ]
    
    Check before using returned value to avoid dereferencing null pointer.
    
    Fixes: 18a6c85fcc78 ("fsl/fman: Add FMan Port Support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9011251985459d78921f9336f9b529db2a11c3b
Author: Florinel Iordache <florinel.iordache@nxp.com>
Date:   Mon Aug 3 10:07:30 2020 +0300

    fsl/fman: use 32-bit unsigned integer
    
    [ Upstream commit 99f47abd9f7bf6e365820d355dc98f6955a562df ]
    
    Potentially overflowing expression (ts_freq << 16 and intgr << 16)
    declared as type u32 (32-bit unsigned) is evaluated using 32-bit
    arithmetic and then used in a context that expects an expression of
    type u64 (64-bit unsigned) which ultimately is used as 16-bit
    unsigned by typecasting to u16. Fixed by using an unsigned 32-bit
    integer since the value is truncated anyway in the end.
    
    Fixes: 414fd46e7762 ("fsl/fman: Add FMan support")
    Signed-off-by: Florinel Iordache <florinel.iordache@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d097ca1397c007a7612b67e98ae29cd86c18b2c0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 15:53:33 2020 +0200

    net: spider_net: Fix the size used in a 'dma_free_coherent()' call
    
    [ Upstream commit 36f28f7687a9ce665479cce5d64ce7afaa9e77ae ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()', in
    'spider_net_init_chain()'.
    
    Fixes: d4ed8f8d1fb7 ("Spidernet DMA coalescing")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66e007f01aa11d173fe2d3b96f37531e16ee9f1e
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 15:52:04 2020 +0200

    net: sgi: ioc3-eth: Fix the size used in some 'dma_free_coherent()' calls
    
    [ Upstream commit edab74e9cb1d073c70add0f9b75e17aebf0598ff ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()'.
    
    Fixes: 369a782af0f1 ("net: sgi: ioc3-eth: ensure tx ring is 16k aligned.")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0414b18f877108e72243a7c5e1c58e862c2e7ed
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:44 2020 +0800

    liquidio: Fix wrong return value in cn23xx_get_pf_num()
    
    [ Upstream commit aa027850a292ea65524b8fab83eb91a124ad362c ]
    
    On an error exit path, a negative error code should be returned
    instead of a positive return value.
    
    Fixes: 0c45d7fe12c7e ("liquidio: fix use of pf in pass-through mode in a virtual machine")
    Cc: Rick Farrington <ricardo.farrington@cavium.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17948294d0aebaa6ad0c2c1c4a3050e742a7e6ee
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:37 2020 +0800

    net: ethernet: aquantia: Fix wrong return value
    
    [ Upstream commit 0470a48880f8bc42ce26962b79c7b802c5a695ec ]
    
    In function hw_atl_a0_hw_multicast_list_set(), when an invalid
    request is encountered, a negative error code should be returned.
    
    Fixes: bab6de8fd180b ("net: ethernet: aquantia: Atlantic A0 and B0 specific functions")
    Cc: David VomLehn <vomlehn@texas.net>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fba2cf348d9eb50b2049a73cc09313dab6d293f1
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Fri Jul 31 10:38:32 2020 +0200

    net: mvpp2: fix memory leak in mvpp2_rx
    
    [ Upstream commit d6526926de7397a97308780911565e31a6b67b59 ]
    
    Release skb memory in mvpp2_rx() if mvpp2_rx_refill routine fails
    
    Fixes: b5015854674b ("net: mvpp2: fix refilling BM pools in RX path")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Acked-by: Matteo Croce <mcroce@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a6a61db6f4c93ed98b079ed102cc08c74248470
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Jul 24 20:50:48 2020 -0400

    ftrace: Fix ftrace_trace_task return value
    
    [ Upstream commit c58b6b0372de0d4cd0536d6585addd1b36b151ae ]
    
    I was attempting to use pid filtering with function_graph, but it wasn't
    allowing anything to make it through.  Turns out ftrace_trace_task
    returns false if ftrace_ignore_pid is not-empty, which isn't correct
    anymore.  We're now setting it to FTRACE_PID_IGNORE if we need to ignore
    that pid, otherwise it's set to the pid (which is weird considering the
    name) or to FTRACE_PID_TRACE.  Fix the check to check for !=
    FTRACE_PID_IGNORE.  With this we can now use function_graph with pid
    filtering.
    
    Link: https://lkml.kernel.org/r/20200725005048.1790-1-josef@toxicpanda.com
    
    Fixes: 717e3f5ebc82 ("ftrace: Make function trace pid filtering a bit more exact")
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f10a3fb43b027afd892abeee6abd813188c8d887
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Jul 19 11:04:30 2020 +0300

    net/mlx5: Delete extra dump stack that gives nothing
    
    [ Upstream commit 6c4e9bcfb48933d533ff975e152757991556294a ]
    
    The WARN_*() macros are intended to catch impossible situations
    from the SW point of view. They gave a little in case HW<->SW interface
    is out-of-sync.
    
    Such out-of-sync scenario can be due to SW errors that are not part
    of this flow or because some HW errors, where dump stack won't help
    either.
    
    This specific WARN_ON() is useless because mlx5_core code is prepared
    to handle such situations and will unfold everything correctly while
    providing enough information to the users to understand why FS is not
    working.
    
    WARNING: CPU: 0 PID: 3222 at drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:825 connect_fts_in_prio.isra.20+0x1dd/0x260 linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:825
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 0 PID: 3222 Comm: syz-executor861 Not tainted 5.5.0-rc6+ #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
    Call Trace:
     __dump_stack linux/lib/dump_stack.c:77 [inline]
     dump_stack+0x94/0xce linux/lib/dump_stack.c:118
     panic+0x234/0x56f linux/kernel/panic.c:221
     __warn+0x1cc/0x1e1 linux/kernel/panic.c:582
     report_bug+0x200/0x310 linux/lib/bug.c:195
     fixup_bug.part.11+0x32/0x80 linux/arch/x86/kernel/traps.c:174
     fixup_bug linux/arch/x86/kernel/traps.c:273 [inline]
     do_error_trap+0xd3/0x100 linux/arch/x86/kernel/traps.c:267
     do_invalid_op+0x31/0x40 linux/arch/x86/kernel/traps.c:286
     invalid_op+0x1e/0x30 linux/arch/x86/entry/entry_64.S:1027
    RIP: 0010:connect_fts_in_prio.isra.20+0x1dd/0x260
    linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:825
    Code: 00 00 48 c7 c2 60 8c 31 84 48 c7 c6 00 81 31 84 48 8b 38 e8 3c a8
    cb ff 41 83 fd 01 8b 04 24 0f 8e 29 ff ff ff e8 83 7b bc fe <0f> 0b 8b
    04 24 e9 1a ff ff ff 89 04 24 e8 c1 20 e0 fe 8b 04 24 eb
    RSP: 0018:ffffc90004bb7858 EFLAGS: 00010293
    RAX: ffff88805de98e80 RBX: 0000000000000c96 RCX: ffffffff827a853d
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: fffff52000976efa
    RBP: 0000000000000007 R08: ffffed100da060e3 R09: ffffed100da060e3
    R10: 0000000000000001 R11: ffffed100da060e2 R12: dffffc0000000000
    R13: 0000000000000002 R14: ffff8880683a1a10 R15: ffffed100d07bc1c
     connect_prev_fts linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:844 [inline]
     connect_flow_table linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:975 [inline]
     __mlx5_create_flow_table+0x8f8/0x1710 linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1064
     mlx5_create_flow_table linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1094 [inline]
     mlx5_create_auto_grouped_flow_table+0xe1/0x210 linux/drivers/net/ethernet/mellanox/mlx5/core/fs_core.c:1136
     _get_prio linux/drivers/infiniband/hw/mlx5/main.c:3286 [inline]
     get_flow_table+0x2ea/0x760 linux/drivers/infiniband/hw/mlx5/main.c:3376
     mlx5_ib_create_flow+0x331/0x11c0 linux/drivers/infiniband/hw/mlx5/main.c:3896
     ib_uverbs_ex_create_flow+0x13e8/0x1b40 linux/drivers/infiniband/core/uverbs_cmd.c:3311
     ib_uverbs_write+0xaa5/0xdf0 linux/drivers/infiniband/core/uverbs_main.c:769
     __vfs_write+0x7c/0x100 linux/fs/read_write.c:494
     vfs_write+0x168/0x4a0 linux/fs/read_write.c:558
     ksys_write+0xc8/0x200 linux/fs/read_write.c:611
     do_syscall_64+0x9c/0x390 linux/arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x45a059
    Code: 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 89 f8 48 89
    f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01
    f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007fcc17564c98 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007fcc17564ca0 RCX: 000000000045a059
    RDX: 0000000000000030 RSI: 00000000200003c0 RDI: 0000000000000005
    RBP: 0000000000000007 R08: 0000000000000002 R09: 0000000000003131
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000006e636c
    R13: 0000000000000000 R14: 00000000006e6360 R15: 00007ffdcbdaf6a0
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Kernel Offset: disabled
    Rebooting in 1 seconds..
    
    Fixes: f90edfd279f3 ("net/mlx5_core: Connect flow tables")
    Reviewed-by: Maor Gottlieb <maorg@mellanox.com>
    Reviewed-by: Mark Bloch <markb@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7855bad4c6ad687cc0e200058fb08512de803ea
Author: Alex Vesker <valex@mellanox.com>
Date:   Mon Jul 13 14:09:04 2020 +0300

    net/mlx5: DR, Change push vlan action sequence
    
    [ Upstream commit b206490940216542c68563699b279eed3c55107c ]
    
    The DR TX state machine supports the following order:
    modify header, push vlan and encapsulation.
    Instead fs_dr would pass:
    push vlan, modify header and encapsulation.
    
    The above caused the rule creation to fail on invalid action
    sequence provided error.
    
    Fixes: 6a48faeeca10 ("net/mlx5: Add direct rule fs_cmd implementation")
    Signed-off-by: Alex Vesker <valex@mellanox.com>
    Reviewed-by: Maor Gottlieb <maorg@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63d91a65f226a3acebc037583a945c7f6af0729d
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:40 2020 +0800

    tools, bpftool: Fix wrong return value in do_dump()
    
    [ Upstream commit 041549b7b2c7811ec40e705c439211f00ade2dda ]
    
    In case of btf_id does not exist, a negative error code -ENOENT
    should be returned.
    
    Fixes: c93cc69004df3 ("bpftool: add ability to dump BTF types")
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Tobias Klauser <tklauser@distanz.ch>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20200802111540.5384-1-tianjia.zhang@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fccac9cc36b0299e21b283c07eeb2cb9e3cabba3
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Thu Jul 30 19:42:44 2020 -0700

    tools, build: Propagate build failures from tools/build/Makefile.build
    
    [ Upstream commit a278f3d8191228212c553a5d4303fa603214b717 ]
    
    The '&&' command seems to have a bad effect when $(cmd_$(1)) exits with
    non-zero effect: the command failure is masked (despite `set -e`) and all but
    the first command of $(dep-cmd) is executed (successfully, as they are mostly
    printfs), thus overall returning 0 in the end.
    
    This means in practice that despite compilation errors, tools's build Makefile
    will return success. We see this very reliably with libbpf's Makefile, which
    doesn't get compilation error propagated properly. This in turns causes issues
    with selftests build, as well as bpftool and other projects that rely on
    building libbpf.
    
    The fix is simple: don't use &&. Given `set -e`, we don't need to chain
    commands with &&. The shell will exit on first failure, giving desired
    behavior and propagating error properly.
    
    Fixes: 275e2d95591e ("tools build: Move dependency copy into function")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Link: https://lore.kernel.org/bpf/20200731024244.872574-1-andriin@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 060bd61d4cc6b647b470db080e0f879ac39ef071
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Jul 30 15:39:39 2020 +0800

    wl1251: fix always return 0 error
    
    [ Upstream commit 20e6421344b5bc2f97b8e2db47b6994368417904 ]
    
    wl1251_event_ps_report() should not always return 0 because
    wl1251_ps_set_mode() may fail. Change it to return 'ret'.
    
    Fixes: f7ad1eed4d4b ("wl1251: retry power save entry")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200730073939.33704-1-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7565e834207cb24aa576cafbb60931f2e943b02
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Jul 30 14:49:10 2020 +0800

    qtnfmac: Missing platform_device_unregister() on error in qtnf_core_mac_alloc()
    
    [ Upstream commit 141bc9abbbffa89d020957caa9ac4a61d0ef1e26 ]
    
    Add the missing platform_device_unregister() before return from
    qtnf_core_mac_alloc() in the error handling case.
    
    Fixes: 616f5701f4ab ("qtnfmac: assign each wiphy to its own virtual platform device")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Reviewed-by: Sergey Matyukevich <geomatsi@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200730064910.37589-1-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e879051c0828b148614ad86a0629bf313ebc51ec
Author: Yan-Hsuan Chuang <yhchuang@realtek.com>
Date:   Fri Jul 17 14:49:34 2020 +0800

    rtw88: coex: only skip coex triggered by BT info
    
    [ Upstream commit 3f194bd4ca1cd9b8eef34d37d562279dbeb80319 ]
    
    The coex mechanism used to skip upon the freeze flag is raised.
    That will cause the coex mechanism being skipped unexpectedly.
    Coex only wanted to keep the TDMA table from being changed by
    BT side.
    
    So, check the freeze and reason, if the coex reason is coming
    from BT info, skip it, to make sure the coex triggered by Wifi
    itself can work.
    
    This is required for the AP mode, while the control flow is
    different with STA mode. When starting an AP mode, the AP mode
    needs to start working immedaitely after leaving IPS, and the
    freeze flag could be raised. If the coex info is skipped, then
    the AP mode will not set the antenna owner, leads to TX stuck.
    
    Fixes: 4136214f7c46 ("rtw88: add BT co-existence support")
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200717064937.27966-5-yhchuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a93abb6a68d012740ca316c374a27626b401bd5
Author: Tsang-Shian Lin <thlin@realtek.com>
Date:   Fri Jul 17 14:49:32 2020 +0800

    rtw88: fix short GI capability based on current bandwidth
    
    [ Upstream commit 4dd86b901d1373ef8446ecb50a7ca009f3475211 ]
    
    Fix the transmission is not sent with short GI under
    some conditions even if the receiver supports short GI.
    If VHT capability IE exists in the beacon, the original
    code uses the short GI for 80M field as driver's short GI
    setting for transmission, even the current bandwidth is
    not 80MHz.
    
    Short GI supported fields for 20M/40M are informed in HT
    capability information element, and short GI supported
    field for 80M is informed in VHT capability information
    element.
    
    These three fields may be set to different values.
    Driver needs to record each short GI support field for
    each bandwidth, and send correct info depends on current
    bandwidth to the WiFi firmware.
    
    Fixes: e3037485c68e ("rtw88: new Realtek 802.11ac driver")
    Signed-off-by: Tsang-Shian Lin <thlin@realtek.com>
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200717064937.27966-3-yhchuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2a4bd36a1265a55d4f24bf51d2d58ca58ab4b33
Author: Tsang-Shian Lin <thlin@realtek.com>
Date:   Fri Jul 17 14:49:31 2020 +0800

    rtw88: fix LDPC field for RA info
    
    [ Upstream commit ae44fa993e8e6c1a1d22e5ca03d9eadd53b2745b ]
    
    Convert the type of LDPC field to boolen because
    LDPC field of RA info H2C command to firmware
    is only one bit.
    
    Fixes: e3037485c68e ("rtw88: new Realtek 802.11ac driver")
    Signed-off-by: Tsang-Shian Lin <thlin@realtek.com>
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200717064937.27966-2-yhchuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 763c576f095bc23f02f0240de0265a8c1337aef1
Author: Florian Westphal <fw@strlen.de>
Date:   Sun Aug 2 03:27:03 2020 +0200

    netfilter: nft_meta: fix iifgroup matching
    
    [ Upstream commit 78470d9d0d9f2f8d16f28382a4071568e839c0d5 ]
    
    iifgroup matching erroneously checks the output interface.
    
    Fixes: 8724e819cc9a ("netfilter: nft_meta: move all interface related keys to helper")
    Reported-by: Demi M. Obenour <demiobenour@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae32b42b36410031ab1c39c579f91f73218d4f8d
Author: Surabhi Boob <surabhi.boob@intel.com>
Date:   Wed Jul 29 17:19:18 2020 -0700

    ice: Graceful error handling in HW table calloc failure
    
    [ Upstream commit bcc46cb8a077c6189b44f1555b8659837f748eb2 ]
    
    In the ice_init_hw_tbls, if the devm_kcalloc for es->written fails, catch
    that error and bail out gracefully, instead of continuing with a NULL
    pointer.
    
    Fixes: 32d63fa1e9f3 ("ice: Initialize DDP package structures")
    Signed-off-by: Surabhi Boob <surabhi.boob@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0c20782f63732606516f48553706c3bbeffa18c
Author: Vignesh Sridhar <vignesh.sridhar@intel.com>
Date:   Wed Jul 29 17:19:15 2020 -0700

    ice: Clear and free XLT entries on reset
    
    [ Upstream commit ec1d1d2302067e3ccbc4d0adcd36d72410933b70 ]
    
    This fix has been added to address memory leak issues resulting from
    triggering a sudden driver reset which does not allow us to follow our
    normal removal flows for SW XLT entries for advanced features.
    
    - Adding call to destroy flow profile locks when clearing SW XLT tables.
    
    - Extraction sequence entries were not correctly cleared previously
    which could cause ownership conflicts for repeated reset-replay calls.
    
    Fixes: 31ad4e4ee1e4 ("ice: Allocate flow profile")
    Signed-off-by: Vignesh Sridhar <vignesh.sridhar@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bd27fb14f7b5953354aa52b2f50cef6274fd6a3
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Thu Jul 30 17:01:20 2020 +0200

    s390/qeth: don't process empty bridge port events
    
    [ Upstream commit 02472e28b9a45471c6d8729ff2c7422baa9be46a ]
    
    Discard events that don't contain any entries. This shouldn't happen,
    but subsequent code relies on being able to use entry 0. So better
    be safe than accessing garbage.
    
    Fixes: b4d72c08b358 ("qeth: bridgeport support - basic control")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22697ca855c06a4a1264d5651542b7d98870a8c4
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Thu Jul 30 17:01:18 2020 +0200

    s390/qeth: tolerate pre-filled RX buffer
    
    [ Upstream commit eff73e16ee116f6eafa2be48fab42659a27cb453 ]
    
    When preparing a buffer for RX refill, tolerate that it already has a
    pool_entry attached. Otherwise we could easily leak such a pool_entry
    when re-driving the RX refill after an error (from eg. do_qdio()).
    
    This needs some minor adjustment in the code that drains RX buffer(s)
    prior to RX refill and during teardown, so that ->pool_entry is NULLed
    accordingly.
    
    Fixes: 4a71df50047f ("qeth: new qeth device driver")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee9f0d33c0243071047bb65ca615b92fa4ca7461
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Jul 31 14:28:15 2020 +0800

    ASoC: fsl_sai: Fix value of FSL_SAI_CR1_RFW_MASK
    
    [ Upstream commit 5aef1ff2397d021f93d874b57dff032fdfac73de ]
    
    The fifo_depth is 64 on i.MX8QM/i.MX8QXP, 128 on i.MX8MQ, 16 on
    i.MX7ULP.
    
    Original FSL_SAI_CR1_RFW_MASK value 0x1F is not suitable for
    these platform, the FIFO watermark mask should be updated
    according to the fifo_depth.
    
    Fixes: a860fac42097 ("ASoC: fsl_sai: Add support for imx7ulp/imx8mq")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/1596176895-28724-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d26a53f004d00c0d8220990d387b544bcf281fc
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Fri Jul 31 14:06:03 2020 +0200

    ASoC: meson: cards: deal dpcm flag change
    
    [ Upstream commit da3f23fde9d7b4a7e0ca9a9a096cec3104df1b82 ]
    
    Commit b73287f0b074 ("ASoC: soc-pcm: dpcm: fix playback/capture checks")
    changed the meaning of dpcm_playback/dpcm_capture and now requires the
    CPU DAI BE to aligned with those flags.
    
    This broke all Amlogic cards with uni-directional backends (All gx and
    most axg cards).
    
    While I'm still confused as to how this change is an improvement, those
    cards can't remain broken forever. Hopefully, next time an API change is
    done like that, all the users will be updated as part of the change, and
    not left to fend for themselves.
    
    Fixes: b73287f0b074 ("ASoC: soc-pcm: dpcm: fix playback/capture checks")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200731120603.2243261-1-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 224e149995885a4a47fdfa96a7db1485bd33120b
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jul 23 13:05:33 2020 -0500

    ASoC: core: use less strict tests for dailink capabilities
    
    [ Upstream commit 4f8721542f7b75954bfad98c51aa59d683d35b50 ]
    
    Previous updates to set dailink capabilities and check dailink
    capabilities were based on a flawed assumption that all dais support
    the same capabilities as the dailink. This is true for TDM
    configurations but existing configurations use an amplifier and a
    capture device on the same dailink, and the tests would prevent the
    card from probing.
    
    This patch modifies the snd_soc_dai_link_set_capabilities()
    helper so that the dpcm_playback (resp. dpcm_capture) dailink
    capabilities are set if at least one dai supports playback (resp. capture).
    
    Likewise the checks are modified so that an error is reported only
    when dpcm_playback (resp. dpcm_capture) is set but none of the CPU
    DAIs support playback (resp. capture).
    
    Fixes: 25612477d20b5 ('ASoC: soc-dai: set dai_link dpcm_ flags with a helper')
    Fixes: b73287f0b0745 ('ASoC: soc-pcm: dpcm: fix playback/capture checks')
    Suggested-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20200723180533.220312-1-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd82844099c4f668889ea95084cf499b179fa62e
Author: WANG Xuerui <git@xen0n.name>
Date:   Wed Jul 29 21:14:15 2020 +0800

    MIPS: only register FTLBPar exception handler for supported models
    
    [ Upstream commit efd1b4ad3d5178a74387bc5ff69a2d4585f586c6 ]
    
    Previously ExcCode 16 is unconditionally treated as the FTLB parity
    exception (FTLBPar), but in fact its semantic is implementation-
    dependent. Looking at various manuals it seems the FTLBPar exception is
    only present on some recent MIPS Technologies cores, so only register
    the handler on these.
    
    Fixes: 75b5b5e0a262790f ("MIPS: Add support for FTLBs")
    Reviewed-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: WANG Xuerui <git@xen0n.name>
    Cc: Paul Burton <paulburton@kernel.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6edc078a22a2bae964bc0ed4c4bbc5406ac41817
Author: Jerry Crunchtime <jerry.c.t@web.de>
Date:   Fri Jul 31 17:08:01 2020 +0200

    libbpf: Fix register in PT_REGS MIPS macros
    
    [ Upstream commit 1acf8f90ea7ee59006d0474275922145ac291331 ]
    
    The o32, n32 and n64 calling conventions require the return
    value to be stored in $v0 which maps to $2 register, i.e.,
    the register 2.
    
    Fixes: c1932cd ("bpf: Add MIPS support to samples/bpf.")
    Signed-off-by: Jerry Crunchtime <jerry.c.t@web.de>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/43707d31-0210-e8f0-9226-1af140907641@web.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbcedc1579f57222f2ff352f412746bbb758ce39
Author: Jonathan Marek <jonathan@marek.ca>
Date:   Fri Jul 10 20:47:27 2020 -0400

    drm/msm/dpu: don't use INTF_INPUT_CTRL feature on sdm845
    
    [ Upstream commit cace3ac4bc08c5261aa4360a7d7aacc45a362fc2 ]
    
    The INTF_INPUT_CTRL feature is not available on sdm845, so don't set it.
    
    This also adds separate feature bits for INTF (based on downstream) instead
    of using CTL feature bit for it, and removes the unnecessary NULL check in
    the added bind_pingpong_blk function.
    
    Fixes: 73bfb790ac786ca55fa2786a06f59 ("msm:disp:dpu1: setup display datapath for SC7180 target")
    
    Signed-off-by: Jonathan Marek <jonathan@marek.ca>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77c8cfdf808410be84be56aff7e0e186b8c5a879
Author: Wang Hai <wanghai38@huawei.com>
Date:   Thu Jul 30 15:24:19 2020 +0800

    net: ll_temac: Use devm_platform_ioremap_resource_byname()
    
    [ Upstream commit bd69058f50d5ffa659423bcfa6fe6280ce9c760a ]
    
    platform_get_resource() may fail and return NULL, so we had better
    check its return value to avoid a NULL pointer dereference a bit later
    in the code. Fix it to use devm_platform_ioremap_resource_byname()
    instead of calling platform_get_resource_byname() and devm_ioremap().
    
    Fixes: 8425c41d1ef7 ("net: ll_temac: Extend support to non-device-tree platforms")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a4c9d17c8bc33eaff046adc1baeda79a8cafede
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Jul 30 13:07:14 2020 +0100

    ASoC: soc-core: Fix regression causing sysfs entries to disappear
    
    [ Upstream commit 5c74c9d34aec1ac756de6979dd5580096aba8643 ]
    
    The allocation order of things in soc_new_pcm_runtime was changed to
    move the device_register before the allocation of the rtd structure.
    This was to allow the rtd allocation to be managed by devm. However
    currently the sysfs entries are added by device_register and their
    visibility depends on variables within the rtd structure, this causes
    the pmdown_time and dapm_widgets sysfs entries to be missing for all
    rtds.
    
    Correct this issue by manually calling device_add_groups after the
    appropriate information is available.
    
    Fixes: d918a37610b1 ("ASoC: soc-core: tidyup soc_new_pcm_runtime() alloc order")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20200730120715.637-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c7d64caaf132649f2f0fc6fbd58c38ffaed54f3
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jul 29 17:44:55 2020 +0200

    ASoC: meson: axg-tdm-formatters: fix sclk inversion
    
    [ Upstream commit 0d3f01dcdc234001f979a0af0b6b31cb9f25b6c1 ]
    
    After carefully checking, it appears that both tdmout and tdmin require the
    rising edge of the sclk they get to be synchronized with the frame sync
    event (which should be a rising edge of lrclk).
    
    TDMIN was improperly set before this patch. Remove the sclk_invert quirk
    which is no longer needed and fix the sclk phase.
    
    Fixes: 1a11d88f499c ("ASoC: meson: add tdm formatter base driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200729154456.1983396-4-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 036a8c923358442f1721ebf216356c96ff583cbd
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jul 29 17:44:54 2020 +0200

    ASoC: meson: axg-tdmin: fix g12a skew
    
    [ Upstream commit 80a254394fcfe55450b0351da298ca7231889219 ]
    
    After carefully checking the result provided by the TDMIN on the g12a and
    sm1 SoC families, the TDMIN skew offset appears to be 3 instead of 2 on the
    axg.
    
    Fixes: f01bc67f58fd ("ASoC: meson: axg-tdm-formatter: rework quirks settings")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200729154456.1983396-3-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30fde1d41d7370e2d336793fe11ac262725d1e7e
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jul 29 17:44:53 2020 +0200

    ASoC: meson: axg-tdm-interface: fix link fmt setup
    
    [ Upstream commit 6878ba91ce84f7a07887a0615af70f969508839f ]
    
    The .set_fmt() callback of the axg tdm interface incorrectly
    test the content of SND_SOC_DAIFMT_MASTER_MASK as if it was a
    bitfield, which it is not.
    
    Implement the test correctly.
    
    Fixes: d60e4f1e4be5 ("ASoC: meson: add tdm interface driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200729154456.1983396-2-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3369ed2127bb28658ee54c689637451827f2eed9
Author: Xi Wang <wangxi11@huawei.com>
Date:   Tue Jul 28 18:42:21 2020 +0800

    RDMA/hns: Fix the unneeded process when getting a general type of CQE error
    
    [ Upstream commit 395f2e8fd340c5bfad026f5968b56ec34cf20dd1 ]
    
    If the hns ROCEE reports a general error CQE (types not specified by the IB
    General Specifications), it's no need to change the QP state to error, and
    the driver should just skip it.
    
    Fixes: 7c044adca272 ("RDMA/hns: Simplify the cqe code of poll cq")
    Link: https://lore.kernel.org/r/1595932941-40613-8-git-send-email-liweihang@huawei.com
    Signed-off-by: Xi Wang <wangxi11@huawei.com>
    Signed-off-by: Weihang Li <liweihang@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6c7b76332b3c16ee1aac3997522b73dd4909d4f
Author: Lang Cheng <chenglang@huawei.com>
Date:   Tue Jul 28 18:42:20 2020 +0800

    RDMA/hns: Fix error during modify qp RTS2RTS
    
    [ Upstream commit 4327bd2c41412657ee2c8c0d8d3d1945268b4238 ]
    
    One qp state migrations legal configuration was deleted mistakenly.
    
    Fixes: 357f34294686 ("RDMA/hns: Simplify the state judgment code of qp")
    Link: https://lore.kernel.org/r/1595932941-40613-7-git-send-email-liweihang@huawei.com
    Signed-off-by: Lang Cheng <chenglang@huawei.com>
    Signed-off-by: Weihang Li <liweihang@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd926b32b9ca79625ca3fa5f74937a95230b77a2
Author: Sandipan Das <sandipan@linux.ibm.com>
Date:   Thu Jul 30 10:38:46 2020 +0530

    selftests/powerpc: Fix online CPU selection
    
    [ Upstream commit dfa03fff86027e58c8dba5c03ae68150d4e513ad ]
    
    The size of the CPU affinity mask must be large enough for
    systems with a very large number of CPUs. Otherwise, tests
    which try to determine the first online CPU by calling
    sched_getaffinity() will fail. This makes sure that the size
    of the allocated affinity mask is dependent on the number of
    CPUs as reported by get_nprocs_conf().
    
    Fixes: 3752e453f6ba ("selftests/powerpc: Add tests of PMU EBBs")
    Reported-by: Shirisha Ganta <shiganta@in.ibm.com>
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/a408c4b8e9a23bb39b539417a21eb0ff47bb5127.1596084858.git.sandipan@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e444bad470ead7f965d34f351e3b44ff214b6b4
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Thu Sep 19 18:16:33 2019 -0500

    powerpc/pseries/hotplug-cpu: Remove double free in error path
    
    [ Upstream commit a0ff72f9f5a780341e7ff5e9ba50a0dad5fa1980 ]
    
    In the unlikely event that the device tree lacks a /cpus node,
    find_dlpar_cpus_to_add() oddly frees the cpu_drcs buffer it has been
    passed before returning an error. Its only caller also frees the
    buffer on error.
    
    Remove the less conventional kfree() of a caller-supplied buffer from
    find_dlpar_cpus_to_add().
    
    Fixes: 90edf184b9b7 ("powerpc/pseries: Add CPU dlpar add functionality")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190919231633.1344-1-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2ff56c528463ca2259132ccfcb8ee7d4ff22f87
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Mon Jun 22 14:01:23 2020 +0200

    cpufreq: ap806: fix cpufreq driver needs ap cpu clk
    
    [ Upstream commit 8c37ad2f523396e15cf002b29f8f796447c71932 ]
    
    The Armada 8K cpufreq driver needs the Armada AP CPU CLK
    to work. This dependency is currently not satisfied and
    the ARMADA_AP_CPU_CLK can not be selected independently.
    
    Add it to the cpufreq Armada8k driver.
    
    Fixes: f525a670533d ("cpufreq: ap806: add cpufreq driver for Armada 8K")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40e453d8a9df78779891f3efa8bb8924cf388acf
Author: Hanjun Guo <guohanjun@huawei.com>
Date:   Wed Jul 22 17:44:28 2020 +0800

    PCI: Release IVRS table in AMD ACS quirk
    
    [ Upstream commit 090688fa4e448284aaa16136372397d7d10814db ]
    
    The acpi_get_table() should be coupled with acpi_put_table() if the mapped
    table is not used at runtime to release the table mapping.
    
    In pci_quirk_amd_sb_acs(), IVRS table is just used for checking AMD IOMMU
    is supported, not used at runtime, so put the table after using it.
    
    Fixes: 15b100dfd1c9 ("PCI: Claim ACS support for AMD southbridge devices")
    Link: https://lore.kernel.org/r/1595411068-15440-1-git-send-email-guohanjun@huawei.com
    Signed-off-by: Hanjun Guo <guohanjun@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c62142f3b48b997cf3d3d307b7562995e11f382b
Author: Mark Zhang <markz@mellanox.com>
Date:   Mon Jul 27 12:58:28 2020 +0300

    RDMA/netlink: Remove CAP_NET_RAW check when dump a raw QP
    
    [ Upstream commit 1d70ad0f85435a7262de802b104e49e6598c50ff ]
    
    When dumping QPs bound to a counter, raw QPs should be allowed to dump
    without the CAP_NET_RAW privilege. This is consistent with what "rdma res
    show qp" does.
    
    Fixes: c4ffee7c9bdb ("RDMA/netlink: Implement counter dumpit calback")
    Link: https://lore.kernel.org/r/20200727095828.496195-1-leon@kernel.org
    Signed-off-by: Mark Zhang <markz@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87ccb032ee9f7dc93fc18730dce8daf42b266739
Author: Jack Wang <jinpu.wang@cloud.ionos.com>
Date:   Fri Jul 24 16:45:08 2020 +0530

    RDMA/rtrs: remove WQ_MEM_RECLAIM for rtrs_wq
    
    [ Upstream commit 03ed5a8cda659e3c71d106b0dd4ce6520e4dcd6e ]
    
    lockdep triggers a warning from time to time when running a regression
    test:
    
     rnbd_client L685: </dev/nullb0@bla> Device disconnected.
     rnbd_client L1756: Unloading module
    
     workqueue: WQ_MEM_RECLAIM rtrs_client_wq:rtrs_clt_reconnect_work [rtrs_client] is flushing !WQ_MEM_RECLAIM ib_addr:process_one_req [ib_core]
     WARNING: CPU: 2 PID: 18824 at kernel/workqueue.c:2517 check_flush_dependency+0xad/0x130
    
    The root cause is workqueue core expect flushing should not be done for a
    !WQ_MEM_RECLAIM wq from a WQ_MEM_RECLAIM workqueue.
    
    In above case ib_addr workqueue without WQ_MEM_RECLAIM, but rtrs_wq
    WQ_MEM_RECLAIM.
    
    To avoid the warning, remove the WQ_MEM_RECLAIM flag.
    
    Fixes: 9cb837480424 ("RDMA/rtrs: server: main functionality")
    Fixes: 6a98d71daea1 ("RDMA/rtrs: client: main functionality")
    Link: https://lore.kernel.org/r/20200724111508.15734-4-haris.iqbal@cloud.ionos.com
    Signed-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: Md Haris Iqbal <haris.iqbal@cloud.ionos.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2247e03d820657de8e425312aa0b42ae492da089
Author: Danil Kipnis <danil.kipnis@cloud.ionos.com>
Date:   Fri Jul 24 16:45:06 2020 +0530

    RDMA/rtrs-clt: add an additional random 8 seconds before reconnecting
    
    [ Upstream commit 09e0dbbeed82e35ce2cd21e086a6fac934163e2a ]
    
    In order to avoid all the clients to start reconnecting at the same time
    schedule the reconnect dwork with a random jitter of +[0,8] seconds.
    
    Fixes: 6a98d71daea1 ("RDMA/rtrs: client: main functionality")
    Link: https://lore.kernel.org/r/20200724111508.15734-2-haris.iqbal@cloud.ionos.com
    Signed-off-by: Danil Kipnis <danil.kipnis@cloud.ionos.com>
    Signed-off-by: Md Haris Iqbal <haris.iqbal@cloud.ionos.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34503392af35c1c23cb5f8b257239c6010494689
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Wed Jul 22 11:06:52 2020 +0100

    nvmem: sprd: Fix return value of sprd_efuse_probe()
    
    [ Upstream commit bcd14bb7a68520bf88e45e91d354e43535624f82 ]
    
    When call function devm_platform_ioremap_resource(), we should use IS_ERR()
    to check the return value and return PTR_ERR() if failed.
    
    Fixes: 096030e7f449 ("nvmem: sprd: Add Spreadtrum SoCs eFuse support")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200722100705.7772-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 081428bc9c3b0b5f2f329724883879e30f55d548
Author: Harish <harish@linux.ibm.com>
Date:   Tue Jun 9 13:44:23 2020 +0530

    selftests/powerpc: Fix CPU affinity for child process
    
    [ Upstream commit 854eb5022be04f81e318765f089f41a57c8e5d83 ]
    
    On systems with large number of cpus, test fails trying to set
    affinity by calling sched_setaffinity() with smaller size for affinity
    mask. This patch fixes it by making sure that the size of allocated
    affinity mask is dependent on the number of CPUs as reported by
    get_nprocs().
    
    Fixes: 00b7ec5c9cf3 ("selftests/powerpc: Import Anton's context_switch2 benchmark")
    Reported-by: Shirisha Ganta <shiganta@in.ibm.com>
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Harish <harish@linux.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Reviewed-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200609081423.529664-1-harish@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e03270c6d95a5237b651e2ede6870d5de7f3f37
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Jul 24 23:17:26 2020 +1000

    powerpc/boot: Fix CONFIG_PPC_MPC52XX references
    
    [ Upstream commit e5eff89657e72a9050d95fde146b54c7dc165981 ]
    
    Commit 866bfc75f40e ("powerpc: conditionally compile platform-specific
    serial drivers") made some code depend on CONFIG_PPC_MPC52XX, which
    doesn't exist.
    
    Fix it to use CONFIG_PPC_MPC52xx.
    
    Fixes: 866bfc75f40e ("powerpc: conditionally compile platform-specific serial drivers")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200724131728.1643966-7-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5baa27249bf9caaf704f1941a3f9e6b2b138e83
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Jul 24 23:17:24 2020 +1000

    powerpc/32s: Fix CONFIG_BOOK3S_601 uses
    
    [ Upstream commit df4d4ef22446b3a789a4efd74d34f2ec1e24deb2 ]
    
    We have two uses of CONFIG_BOOK3S_601, which doesn't exist. Fix them
    to use CONFIG_PPC_BOOK3S_601 which is the correct symbol.
    
    Fixes: 12c3f1fd87bf ("powerpc/32s: get rid of CPU_FTR_601 feature")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200724131728.1643966-5-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94976f931d33b9499114a813c07acf27b4680e56
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Mon Jul 27 11:01:27 2020 +1000

    selftests/powerpc: Squash spurious errors due to device removal
    
    [ Upstream commit 5f8cf6475828b600ff6d000e580c961ac839cc61 ]
    
    For drivers that don't have the error handling callbacks we implement
    recovery by removing the device and re-probing it. This causes the sysfs
    directory for the PCI device to be removed which causes the following
    spurious error to be printed when checking the PE state:
    
    Breaking 0005:03:00.0...
    ./eeh-basic.sh: line 13: can't open /sys/bus/pci/devices/0005:03:00.0/eeh_pe_state: no such file
    0005:03:00.0, waited 0/60
    0005:03:00.0, waited 1/60
    0005:03:00.0, waited 2/60
    0005:03:00.0, waited 3/60
    0005:03:00.0, waited 4/60
    0005:03:00.0, waited 5/60
    0005:03:00.0, waited 6/60
    0005:03:00.0, waited 7/60
    0005:03:00.0, Recovered after 8 seconds
    
    We currently try to avoid this by checking if the PE state file exists
    before reading from it. This is however inherently racy so re-work the
    state checking so that we only read from the file once, and we squash any
    errors that occur while reading.
    
    Fixes: 85d86c8aa52e ("selftests/powerpc: Add basic EEH selftest")
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200727010127.23698-1-oohall@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c96e968f10c75b4503f43c8db2698ee01a16e24
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Jul 14 10:36:08 2020 -0700

    xfs: clear XFS_DQ_FREEING if we can't lock the dquot buffer to flush
    
    [ Upstream commit c97738a960a86081a147e7d436138e6481757445 ]
    
    In commit 8d3d7e2b35ea, we changed xfs_qm_dqpurge to bail out if we
    can't lock the dquot buf to flush the dquot.  This prevents the AIL from
    blocking on the dquot, but it also forgets to clear the FREEING flag on
    its way out.  A subsequent purge attempt will see the FREEING flag is
    set and bail out, which leads to dqpurge_all failing to purge all the
    dquots.
    
    (copy-pasting from Dave Chinner's identical patch)
    
    This was found by inspection after having xfs/305 hang 1 in ~50
    iterations in a quotaoff operation:
    
    [ 8872.301115] xfs_quota       D13888 92262  91813 0x00004002
    [ 8872.302538] Call Trace:
    [ 8872.303193]  __schedule+0x2d2/0x780
    [ 8872.304108]  ? do_raw_spin_unlock+0x57/0xd0
    [ 8872.305198]  schedule+0x6e/0xe0
    [ 8872.306021]  schedule_timeout+0x14d/0x300
    [ 8872.307060]  ? __next_timer_interrupt+0xe0/0xe0
    [ 8872.308231]  ? xfs_qm_dqusage_adjust+0x200/0x200
    [ 8872.309422]  schedule_timeout_uninterruptible+0x2a/0x30
    [ 8872.310759]  xfs_qm_dquot_walk.isra.0+0x15a/0x1b0
    [ 8872.311971]  xfs_qm_dqpurge_all+0x7f/0x90
    [ 8872.313022]  xfs_qm_scall_quotaoff+0x18d/0x2b0
    [ 8872.314163]  xfs_quota_disable+0x3a/0x60
    [ 8872.315179]  kernel_quotactl+0x7e2/0x8d0
    [ 8872.316196]  ? __do_sys_newstat+0x51/0x80
    [ 8872.317238]  __x64_sys_quotactl+0x1e/0x30
    [ 8872.318266]  do_syscall_64+0x46/0x90
    [ 8872.319193]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [ 8872.320490] RIP: 0033:0x7f46b5490f2a
    [ 8872.321414] Code: Bad RIP value.
    
    Returning -EAGAIN from xfs_qm_dqpurge() without clearing the
    XFS_DQ_FREEING flag means the xfs_qm_dqpurge_all() code can never
    free the dquot, and we loop forever waiting for the XFS_DQ_FREEING
    flag to go away on the dquot that leaked it via -EAGAIN.
    
    Fixes: 8d3d7e2b35ea ("xfs: trylock underlying buffer on dquot flush")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Allison Collins <allison.henderson@oracle.com>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5db458a8589217b9411e131811f19f9d9ff47951
Author: Brian Foster <bfoster@redhat.com>
Date:   Wed Jul 15 18:44:50 2020 -0700

    xfs: fix inode allocation block res calculation precedence
    
    [ Upstream commit b2a8864728683443f34a9fd33a2b78b860934cc1 ]
    
    The block reservation calculation for inode allocation is supposed
    to consist of the blocks required for the inode chunk plus
    (maxlevels-1) of the inode btree multiplied by the number of inode
    btrees in the fs (2 when finobt is enabled, 1 otherwise).
    
    Instead, the macro returns (ialloc_blocks + 2) due to a precedence
    error in the calculation logic. This leads to block reservation
    overruns via generic/531 on small block filesystems with finobt
    enabled. Add braces to fix the calculation and reserve the
    appropriate number of blocks.
    
    Fixes: 9d43b180af67 ("xfs: update inode allocation/free transaction reservations for finobt")
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03acd91927d231e380ff9cdced9d40bf0ac473e9
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jul 27 01:34:40 2020 +0200

    net: dsa: rtl8366: Fix VLAN set-up
    
    [ Upstream commit 788abc6d9d278ed6fa1fa94db2098481a04152b7 ]
    
    Alter the rtl8366_vlan_add() to call rtl8366_set_vlan()
    inside the loop that goes over all VIDs since we now
    properly support calling that function more than once.
    Augment the loop to postincrement as this is more
    intuitive.
    
    The loop moved past the last VID but called
    rtl8366_set_vlan() with the port number instead of
    the VID, assuming a 1-to-1 correspondence between
    ports and VIDs. This was also a bug.
    
    Cc: DENG Qingfang <dqfext@gmail.com>
    Cc: Mauri Sandberg <sandberg@mailfence.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 427fa4ecef773245e9987d28b0043ea7451a265f
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jul 27 01:34:39 2020 +0200

    net: dsa: rtl8366: Fix VLAN semantics
    
    [ Upstream commit 15ab7906cc9290afb006df1bb1074907fbcc7061 ]
    
    The RTL8366 would not handle adding new members (ports) to
    a VLAN: the code assumed that ->port_vlan_add() was only
    called once for a single port. When intializing the
    switch with .configure_vlan_while_not_filtering set to
    true, the function is called numerous times for adding
    all ports to VLAN1, which was something the code could
    not handle.
    
    Alter rtl8366_set_vlan() to just |= new members and
    untagged flags to 4k and MC VLAN table entries alike.
    This makes it possible to just add new ports to a
    VLAN.
    
    Put in some helpful debug code that can be used to find
    any further bugs here.
    
    Cc: DENG Qingfang <dqfext@gmail.com>
    Cc: Mauri Sandberg <sandberg@mailfence.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 536079c88a4ff3917114020fbd50705162884301
Author: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
Date:   Tue Jul 28 21:23:00 2020 +0530

    Bluetooth: hci_qca: Stop collecting memdump again for command timeout during SSR
    
    [ Upstream commit 58789a1990c1a849a461ac912e72a698a771951a ]
    
    Setting memdump state to idle prior to setting of callback function
    pointer for command timeout to NULL,causing the issue.Now moved the
    initialisation of memdump state to qca_setup().
    
    Fixes: d841502c79e3 ("Bluetooth: hci_qca: Collect controller memory dump during SSR")
    Signed-off-by: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d27182481fea8fc726b0bbafc17258ca86516fe
Author: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
Date:   Tue Jul 28 09:58:07 2020 -0700

    Bluetooth: Fix suspend notifier race
    
    [ Upstream commit 4e8c36c3b0d73d46aa27cfd4308aaa445a1067df ]
    
    Unregister from suspend notifications and cancel suspend preparations
    before running hci_dev_do_close. Otherwise, the suspend notifier may
    race with unregister and cause cmd_timeout even after hdev has been
    freed.
    
    Below is the trace from when this panic was seen:
    
    [  832.578518] Bluetooth: hci_core.c:hci_cmd_timeout() hci0: command 0x0c05 tx timeout
    [  832.586200] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [  832.586203] #PF: supervisor read access in kernel mode
    [  832.586205] #PF: error_code(0x0000) - not-present page
    [  832.586206] PGD 0 P4D 0
    [  832.586210] PM: suspend exit
    [  832.608870] Oops: 0000 [#1] PREEMPT SMP NOPTI
    [  832.613232] CPU: 3 PID: 10755 Comm: kworker/3:7 Not tainted 5.4.44-04894-g1e9dbb96a161 #1
    [  832.630036] Workqueue: events hci_cmd_timeout [bluetooth]
    [  832.630046] RIP: 0010:__queue_work+0xf0/0x374
    [  832.630051] RSP: 0018:ffff9b5285f1fdf8 EFLAGS: 00010046
    [  832.674033] RAX: ffff8a97681bac00 RBX: 0000000000000000 RCX: ffff8a976a000600
    [  832.681162] RDX: 0000000000000000 RSI: 0000000000000009 RDI: ffff8a976a000748
    [  832.688289] RBP: ffff9b5285f1fe38 R08: 0000000000000000 R09: ffff8a97681bac00
    [  832.695418] R10: 0000000000000002 R11: ffff8a976a0006d8 R12: ffff8a9745107600
    [  832.698045] usb 1-6: new full-speed USB device number 119 using xhci_hcd
    [  832.702547] R13: ffff8a9673658850 R14: 0000000000000040 R15: 000000000000001e
    [  832.702549] FS:  0000000000000000(0000) GS:ffff8a976af80000(0000) knlGS:0000000000000000
    [  832.702550] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  832.702550] CR2: 0000000000000000 CR3: 000000010415a000 CR4: 00000000003406e0
    [  832.702551] Call Trace:
    [  832.702558]  queue_work_on+0x3f/0x68
    [  832.702562]  process_one_work+0x1db/0x396
    [  832.747397]  worker_thread+0x216/0x375
    [  832.751147]  kthread+0x138/0x140
    [  832.754377]  ? pr_cont_work+0x58/0x58
    [  832.758037]  ? kthread_blkcg+0x2e/0x2e
    [  832.761787]  ret_from_fork+0x22/0x40
    [  832.846191] ---[ end trace fa93f466da517212 ]---
    
    Fixes: 9952d90ea2885 ("Bluetooth: Handle PM_SUSPEND_PREPARE and PM_POST_SUSPEND")
    Signed-off-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Reviewed-by: Miao-chen Chou <mcchou@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 226020402b1fd210bf5335efa919368147fc4e7d
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Mon Jul 27 15:47:15 2020 -0700

    bpf: Fix bpf_ringbuf_output() signature to return long
    
    [ Upstream commit e1613b5714ee6c186c9628e9958edf65e9d9cddd ]
    
    Due to bpf tree fix merge, bpf_ringbuf_output() signature ended up with int as
    a return type, while all other helpers got converted to returning long. So fix
    it in bpf-next now.
    
    Fixes: b0659d8a950d ("bpf: Fix definition of bpf_ringbuf_output() helper in UAPI comments")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20200727224715.652037-1-andriin@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a365b83f67ed82f6308f09c296e10df8d9179f4
Author: Nicolas Boichat <drinkcat@chromium.org>
Date:   Tue Jul 21 10:37:16 2020 +0800

    Bluetooth: hci_serdev: Only unregister device if it was registered
    
    [ Upstream commit 202798db9570104728dce8bb57dfeed47ce764bc ]
    
    We should not call hci_unregister_dev if the device was not
    successfully registered.
    
    Fixes: c34dc3bfa7642fd ("Bluetooth: hci_serdev: Introduce hci_uart_unregister_device()")
    Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 715faee64cea79465e5aff6b3cf120f2fd870976
Author: Nicolas Boichat <drinkcat@chromium.org>
Date:   Tue Jul 21 10:37:15 2020 +0800

    Bluetooth: hci_h5: Set HCI_UART_RESET_ON_INIT to correct flags
    
    [ Upstream commit a7ad4b6119d740b1ec5788f1b98be0fd1c1b5a5a ]
    
    HCI_UART_RESET_ON_INIT belongs in hdev_flags, not flags.
    
    Fixes: ce945552fde4a09 ("Bluetooth: hci_h5: Add support for serdev enumerated devices")
    Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 267dac50f18eb00cb43c81197907b4df57b8b4c4
Author: Ismael Ferreras Morezuelas <swyterzone@gmail.com>
Date:   Sun Jul 26 23:12:28 2020 +0200

    Bluetooth: btusb: Fix and detect most of the Chinese Bluetooth controllers
    
    [ Upstream commit cde1a8a992875a7479c4321b2a4a190c2e92ec2a ]
    
    For some reason they tend to squat on the very first CSR/
    Cambridge Silicon Radio VID/PID instead of paying fees.
    
    This is an extremely common problem; the issue goes as back as 2013
    and these devices are only getting more popular, even rebranded by
    reputable vendors and sold by retailers everywhere.
    
    So, at this point in time there are hundreds of modern dongles reusing
    the ID of what originally was an early Bluetooth 1.1 controller.
    
    Linux is the only place where they don't work due to spotty checks
    in our detection code. It only covered a minimum subset.
    
    So what's the big idea? Take advantage of the fact that all CSR
    chips report the same internal version as both the LMP sub-version and
    HCI revision number. It always matches, couple that with the manufacturer
    code, that rarely lies, and we now have a good idea of who is who.
    
    Additionally, by compiling a list of user-reported HCI/lsusb dumps, and
    searching around for legit CSR dongles in similar product ranges we can
    find what CSR BlueCore firmware supported which Bluetooth versions.
    
    That way we can narrow down ranges of fakes for each of them.
    
    e.g. Real CSR dongles with LMP subversion 0x73 are old enough that
         support BT 1.1 only; so it's a dead giveaway when some
         third-party BT 4.0 dongle reuses it.
    
    So, to sum things up; there are multiple classes of fake controllers
    reusing the same 0A12:0001 VID/PID. This has been broken for a while.
    
    Known 'fake' bcdDevices: 0x0100, 0x0134, 0x1915, 0x2520, 0x7558, 0x8891
      IC markings on 0x7558: FR3191AHAL 749H15143 (???)
    
    https://bugzilla.kernel.org/show_bug.cgi?id=60824
    
    Fixes: 81cac64ba258ae (Deal with USB devices that are faking CSR vendor)
    Reported-by: Michał Wiśniewski <brylozketrzyn@gmail.com>
    Tested-by: Mike Johnson <yuyuyak@gmail.com>
    Tested-by: Ricardo Rodrigues <ekatonb@gmail.com>
    Tested-by: M.Hanny Sabbagh <mhsabbagh@outlook.com>
    Tested-by: Oussama BEN BRAHIM <b.brahim.oussama@gmail.com>
    Tested-by: Ismael Ferreras Morezuelas <swyterzone@gmail.com>
    Signed-off-by: Ismael Ferreras Morezuelas <swyterzone@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7d08a5c1ed448488fd47b70d1090fbf9b6106b9
Author: Tom Rix <trix@redhat.com>
Date:   Sun Jul 12 12:23:51 2020 -0700

    power: supply: check if calc_soc succeeded in pm860x_init_battery
    
    [ Upstream commit ccf193dee1f0fff55b556928591f7818bac1b3b1 ]
    
    clang static analysis flags this error
    
    88pm860x_battery.c:522:19: warning: Assigned value is
      garbage or undefined [core.uninitialized.Assign]
                    info->start_soc = soc;
                                    ^ ~~~
    soc is set by calling calc_soc.
    But calc_soc can return without setting soc.
    
    So check the return status and bail similarly to other
    checks in pm860x_init_battery and initialize soc to
    silence the warning.
    
    Fixes: a830d28b48bf ("power_supply: Enable battery-charger for 88pm860x")
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fe77db0d48be086017524f1962d61564e71839a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 23 18:23:05 2020 +0300

    Smack: prevent underflow in smk_set_cipso()
    
    [ Upstream commit 42a2df3e829f3c5562090391b33714b2e2e5ad4a ]
    
    We have an upper bound on "maplevel" but forgot to check for negative
    values.
    
    Fixes: e114e473771c ("Smack: Simplified Mandatory Access Control Kernel")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdb83ad0c45b4c718ba46e6982f6d1eb5958d54b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 23 18:22:19 2020 +0300

    Smack: fix another vsscanf out of bounds
    
    [ Upstream commit a6bd4f6d9b07452b0b19842044a6c3ea384b0b88 ]
    
    This is similar to commit 84e99e58e8d1 ("Smack: slab-out-of-bounds in
    vsscanf") where we added a bounds check on "rule".
    
    Reported-by: syzbot+a22c6092d003d6fe1122@syzkaller.appspotmail.com
    Fixes: f7112e6c9abf ("Smack: allow for significantly longer Smack labels v4")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16b5b7dd945edc079daeec99409ce648d5267a13
Author: Li Heng <liheng40@huawei.com>
Date:   Sat Jul 25 10:56:27 2020 +0800

    RDMA/core: Fix return error value in _ib_modify_qp() to negative
    
    [ Upstream commit 47fda651d5af2506deac57d54887cf55ce26e244 ]
    
    The error codes in _ib_modify_qp() are supposed to be negative errno.
    
    Fixes: 7a5c938b9ed0 ("IB/core: Check for rdma_protocol_ib only after validating port_num")
    Link: https://lore.kernel.org/r/1595645787-20375-1-git-send-email-liheng40@huawei.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Li Heng <liheng40@huawei.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e415706d69fe7f39224e30a78a810d26a8a9b741
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Jul 22 16:33:11 2020 +0530

    PCI: cadence: Fix updating Vendor ID and Subsystem Vendor ID register
    
    [ Upstream commit e3bca37d15dca118f2ef1f0a068bb6e07846ea20 ]
    
    Commit 1b79c5284439 ("PCI: cadence: Add host driver for Cadence PCIe
    controller") in order to update Vendor ID, directly wrote to
    PCI_VENDOR_ID register. However PCI_VENDOR_ID in root port configuration
    space is read-only register and writing to it will have no effect.
    Use local management register to configure Vendor ID and Subsystem Vendor
    ID.
    
    Link: https://lore.kernel.org/r/20200722110317.4744-10-kishon@ti.com
    Fixes: 1b79c5284439 ("PCI: cadence: Add host driver for Cadence PCIe controller")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8398e98caec260495d1b422434d96adc83b7a12f
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Jul 22 16:33:04 2020 +0530

    PCI: cadence: Fix cdns_pcie_{host|ep}_setup() error path
    
    [ Upstream commit 19abcd790b51b26d775e1170ba2ac086823cceeb ]
    
    commit bd22885aa188 ("PCI: cadence: Refactor driver to use as a core
    library") while refactoring the Cadence PCIe driver to be used as
    library, removed pm_runtime_get_sync() from cdns_pcie_ep_setup()
    and cdns_pcie_host_setup() but missed to remove the corresponding
    pm_runtime_put_sync() in the error path. Fix it here.
    
    Link: https://lore.kernel.org/r/20200722110317.4744-3-kishon@ti.com
    Fixes: bd22885aa188 ("PCI: cadence: Refactor driver to use as a core library")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c7b87f485850ef2cf481ac0d9eb2d84bd155e3b
Author: Michael Walle <michael@walle.cc>
Date:   Sun Jul 26 01:23:37 2020 +0200

    gpio: regmap: fix type clash
    
    [ Upstream commit a070bdbbb06d7787ec7844a4f1e059cf8b55205d ]
    
    GPIO_REGMAP_ADDR_ZERO() cast to unsigned long but the actual config
    parameters are unsigned int. We use unsigned int here because that is
    the type which is used by the underlying regmap.
    
    Fixes: ebe363197e52 ("gpio: add a reusable generic gpio_chip using regmap")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Michael Walle <michael@walle.cc>
    Link: https://lore.kernel.org/r/20200725232337.27581-1-michael@walle.cc
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38c296c8632205e17dedaf2d4e248e493189f796
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun Jun 28 14:23:12 2020 +1000

    macintosh/via-macii: Access autopoll_devs when inside lock
    
    [ Upstream commit 59ea38f6b3af5636edf541768a1ed721eeaca99e ]
    
    The interrupt handler should be excluded when accessing the autopoll_devs
    variable.
    
    Fixes: d95fd5fce88f0 ("m68k: Mac II ADB fixes") # v5.0+
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/5952dd8a9bc9de90f1acc4790c51dd42b4c98065.1593318192.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2b414c7916e8dccc25c817e537dbf53117c0ebd
Author: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
Date:   Thu Jul 23 14:38:06 2020 +0530

    powerpc/watchpoint: Fix DAWR exception for CACHEOP
    
    [ Upstream commit f3c832f1350bcf1e6906113ee3168066f4235dbe ]
    
    'ea' returned by analyse_instr() needs to be aligned down to cache
    block size for CACHEOP instructions. analyse_instr() does not set
    size for CACHEOP, thus size also needs to be calculated manually.
    
    Fixes: 27985b2a640e ("powerpc/watchpoint: Don't ignore extraneous exceptions blindly")
    Fixes: 74c6881019b7 ("powerpc/watchpoint: Prepare handler to handle more than one watchpoint")
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200723090813.303838-4-ravi.bangoria@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50b0fe566b116959fcb37eceb3aa8ac784420bd6
Author: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
Date:   Thu Jul 23 14:38:05 2020 +0530

    powerpc/watchpoint: Fix DAWR exception constraint
    
    [ Upstream commit f6780ce619f8daa285760302d56e95892087bd1f ]
    
    Pedro Miraglia Franco de Carvalho noticed that on p8/p9, DAR value is
    inconsistent with different type of load/store. Like for byte,word
    etc. load/stores, DAR is set to the address of the first byte of
    overlap between watch range and real access. But for quadword load/
    store it's sometime set to the address of the first byte of real
    access whereas sometime set to the address of the first byte of
    overlap. This issue has been fixed in p10. In p10(ISA 3.1), DAR is
    always set to the address of the first byte of overlap. Commit 27985b2a640e
    ("powerpc/watchpoint: Don't ignore extraneous exceptions blindly")
    wrongly assumes that DAR is set to the address of the first byte of
    overlap for all load/stores on p8/p9 as well. Fix that. With the fix,
    we now rely on 'ea' provided by analyse_instr(). If analyse_instr()
    fails, generate event unconditionally on p8/p9, and on p10 generate
    event only if DAR is within a DAWR range.
    
    Note: 8xx is not affected.
    
    Fixes: 27985b2a640e ("powerpc/watchpoint: Don't ignore extraneous exceptions blindly")
    Fixes: 74c6881019b7 ("powerpc/watchpoint: Prepare handler to handle more than one watchpoint")
    Reported-by: Pedro Miraglia Franco de Carvalho <pedromfc@br.ibm.com>
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200723090813.303838-3-ravi.bangoria@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93f7e2100c93f0885dbce93dcedffbfe70228dfd
Author: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
Date:   Thu Jul 23 14:38:04 2020 +0530

    powerpc/watchpoint: Fix 512 byte boundary limit
    
    [ Upstream commit 3190ecbfeeb2ab17778887ce3fa964615d6460fd ]
    
    Milton Miller reported that we are aligning start and end address to
    wrong size SZ_512M. It should be SZ_512. Fix that.
    
    While doing this change I also found a case where ALIGN() comparison
    fails. Within a given aligned range, ALIGN() of two addresses does not
    match when start address is pointing to the first byte and end address
    is pointing to any other byte except the first one. But that's not true
    for ALIGN_DOWN(). ALIGN_DOWN() of any two addresses within that range
    will always point to the first byte. So use ALIGN_DOWN() instead of
    ALIGN().
    
    Fixes: e68ef121c1f4 ("powerpc/watchpoint: Use builtin ALIGN*() macros")
    Reported-by: Milton Miller <miltonm@us.ibm.com>
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Tested-by: Jordan Niethe <jniethe5@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200723090813.303838-2-ravi.bangoria@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e43aee1568e5ea9884111e02c3d1f722efaa192
Author: Yonghong Song <yhs@fb.com>
Date:   Wed Jul 22 12:51:56 2020 -0700

    bpf: Fix pos computation for bpf_iter seq_ops->start()
    
    [ Upstream commit 3f9969f2c040ba2ba635b6b5a7051f404bcc634d ]
    
    Currently, the pos pointer in bpf iterator map/task/task_file
    seq_ops->start() is always incremented.
    This is incorrect. It should be increased only if
    *pos is 0 (for SEQ_START_TOKEN) since these start()
    function actually returns the first real object.
    If *pos is not 0, it merely found the object
    based on the state in seq->private, and not really
    advancing the *pos. This patch fixed this issue
    by only incrementing *pos if it is 0.
    
    Note that the old *pos calculation, although not
    correct, does not affect correctness of bpf_iter
    as bpf_iter seq_file->read() does not support llseek.
    
    This patch also renamed "mid" in bpf_map iterator
    seq_file private data to "map_id" for better clarity.
    
    Fixes: 6086d29def80 ("bpf: Add bpf_map iterator")
    Fixes: eaaacd23910f ("bpf: Add task and task/file iterator targets")
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200722195156.4029817-1-yhs@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7aa88d36b692c5c390d865a5c951783f80b79bed
Author: Chris Packham <chris.packham@alliedtelesis.co.nz>
Date:   Fri Jul 24 11:21:20 2020 +1200

    net: dsa: mv88e6xxx: MV88E6097 does not support jumbo configuration
    
    [ Upstream commit 0f3c66a3c7b4e8b9f654b3c998e9674376a51b0f ]
    
    The MV88E6097 chip does not support configuring jumbo frames. Prior to
    commit 5f4366660d65 only the 6352, 6351, 6165 and 6320 chips configured
    jumbo mode. The refactor accidentally added the function for the 6097.
    Remove the erroneous function pointer assignment.
    
    Fixes: 5f4366660d65 ("net: dsa: mv88e6xxx: Refactor setting of jumbo frames")
    Signed-off-by: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04ce7e5016de8a2a008f34bb1b8711d1fe844ae6
Author: Ye Bin <yebin10@huawei.com>
Date:   Fri Jul 17 17:09:20 2020 +0800

    scsi: core: Add missing scsi_device_put() in scsi_host_block()
    
    [ Upstream commit f30785db7546520acd53aac7497d42352ff031e0 ]
    
    The scsi_host_block() case was missing in commit 4dea170f4fb2 ("scsi: core:
    Fix incorrect usage of shost_for_each_device").
    
    Link: https://lore.kernel.org/r/20200717090921.29243-1-yebin10@huawei.com
    Fixes: 2bb955840c1d ("scsi: core: add scsi_host_(block,unblock) helper function")
    Fixes: 4dea170f4fb2 ("scsi: core: Fix incorrect usage of shost_for_each_device")
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c16097b56df856e6b9988001e302fc06597f2405
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Thu Jul 23 09:25:51 2020 +1000

    scsi: mesh: Fix panic after host or bus reset
    
    [ Upstream commit edd7dd2292ab9c3628b65c4d04514c3068ad54f6 ]
    
    Booting Linux with a Conner CP3200 drive attached to the MESH SCSI bus
    results in EH measures and a panic:
    
    [   25.499838] mesh: configured for synchronous 5 MB/s
    [   25.787154] mesh: performing initial bus reset...
    [   29.867115] scsi host0: MESH
    [   29.929527] mesh: target 0 synchronous at 3.6 MB/s
    [   29.998763] scsi 0:0:0:0: Direct-Access     CONNER   CP3200-200mb-3.5 4040 PQ: 0 ANSI: 1 CCS
    [   31.989975] sd 0:0:0:0: [sda] 415872 512-byte logical blocks: (213 MB/203 MiB)
    [   32.070975] sd 0:0:0:0: [sda] Write Protect is off
    [   32.137197] sd 0:0:0:0: [sda] Mode Sense: 5b 00 00 08
    [   32.209661] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
    [   32.332708]  sda: [mac] sda1 sda2 sda3
    [   32.417733] sd 0:0:0:0: [sda] Attached SCSI disk
    ... snip ...
    [   76.687067] mesh_abort((ptrval))
    [   76.743606] mesh: state at (ptrval), regs at (ptrval), dma at (ptrval)
    [   76.810798]     ct=6000 seq=86 bs=4017 fc= 0 exc= 0 err= 0 im= 7 int= 0 sp=85
    [   76.880720]     dma stat=84e0 cmdptr=1f73d000
    [   76.941387]     phase=4 msgphase=0 conn_tgt=0 data_ptr=24576
    [   77.005567]     dma_st=1 dma_ct=0 n_msgout=0
    [   77.065456]     target 0: req=(ptrval) goes_out=0 saved_ptr=0
    [   77.130512] mesh_abort((ptrval))
    [   77.187670] mesh: state at (ptrval), regs at (ptrval), dma at (ptrval)
    [   77.255594]     ct=6000 seq=86 bs=4017 fc= 0 exc= 0 err= 0 im= 7 int= 0 sp=85
    [   77.325778]     dma stat=84e0 cmdptr=1f73d000
    [   77.387239]     phase=4 msgphase=0 conn_tgt=0 data_ptr=24576
    [   77.453665]     dma_st=1 dma_ct=0 n_msgout=0
    [   77.515900]     target 0: req=(ptrval) goes_out=0 saved_ptr=0
    [   77.582902] mesh_host_reset
    [   88.187083] Kernel panic - not syncing: mesh: double DMA start !
    [   88.254510] CPU: 0 PID: 358 Comm: scsi_eh_0 Not tainted 5.6.13-pmac #1
    [   88.323302] Call Trace:
    [   88.378854] [e16ddc58] [c0027080] panic+0x13c/0x308 (unreliable)
    [   88.446221] [e16ddcb8] [c02b2478] mesh_start.part.12+0x130/0x414
    [   88.513298] [e16ddcf8] [c02b2fc8] mesh_queue+0x54/0x70
    [   88.577097] [e16ddd18] [c02a1848] scsi_send_eh_cmnd+0x374/0x384
    [   88.643476] [e16dddc8] [c02a1938] scsi_eh_tur+0x5c/0xb8
    [   88.707878] [e16dddf8] [c02a1ab8] scsi_eh_test_devices+0x124/0x178
    [   88.775663] [e16dde28] [c02a2094] scsi_eh_ready_devs+0x588/0x8a8
    [   88.843124] [e16dde98] [c02a31d8] scsi_error_handler+0x344/0x520
    [   88.910697] [e16ddf08] [c00409c8] kthread+0xe4/0xe8
    [   88.975166] [e16ddf38] [c000f234] ret_from_kernel_thread+0x14/0x1c
    [   89.044112] Rebooting in 180 seconds..
    
    In theory, a panic can happen after a bus or host reset with dma_started
    flag set. Fix this by halting the DMA before reinitializing the host.
    Don't assume that ms->current_req is set when halt_dma() is invoked as it
    may not hold for bus or host reset.
    
    BTW, this particular Conner drive can be made to work by inhibiting
    disconnect/reselect with 'mesh.resel_targets=0'.
    
    Link: https://lore.kernel.org/r/3952bc691e150a7128b29120999b6092071b039a.1595460351.git.fthain@telegraphics.com.au
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: Paul Mackerras <paulus@ozlabs.org>
    Reported-and-tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14f820a1b601f05762b103534ad30ca3a7a86c9b
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Jul 9 15:31:44 2020 +0200

    scsi: megaraid_sas: Clear affinity hint
    
    [ Upstream commit 1eb81df5c53b1e785fdef298d533feab991381e4 ]
    
    To avoid a warning in free_irq, clear the affinity hint.
    
    Link: https://lore.kernel.org/r/20200709133144.8363-1-thenzl@redhat.com
    Fixes: f0b9e7bdc309 ("scsi: megaraid_sas: Set affinity for high IOPS reply queues")
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bcba06e588890cfc60366e14f83e0e61ea3c4b4
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Fri Jul 3 16:49:03 2020 +0300

    usb: gadget: f_uac2: fix AC Interface Header Descriptor wTotalLength
    
    [ Upstream commit a9cf8715180b18c62addbfe6f6267b8101903119 ]
    
    As per UAC2 spec (ch. 4.7.2), wTotalLength of AC Interface
    Header Descriptor "includes the combined length of this
    descriptor header and all Clock Source, Unit and Terminal
    descriptors."
    
    Thus add its size to its wTotalLength.
    
    Also after recent changes wTotalLength is calculated
    dynamically, update static definition of uac2_ac_header_descriptor
    accordingly
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88dcd13872b11bd60e6d4cb6317821e1d367e524
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Jul 16 14:09:48 2020 +0200

    usb: dwc2: Fix error path in gadget registration
    
    [ Upstream commit 33a06f1300a79cfd461cea0268f05e969d4f34ec ]
    
    When gadget registration fails, one should not call usb_del_gadget_udc().
    Ensure this by setting gadget->udc to NULL. Also in case of a failure
    there is no need to disable low-level hardware, so return immiedetly
    instead of jumping to error_init label.
    
    This fixes the following kernel NULL ptr dereference on gadget failure
    (can be easily triggered with g_mass_storage without any module
    parameters):
    
    dwc2 12480000.hsotg: dwc2_check_params: Invalid parameter besl=1
    dwc2 12480000.hsotg: dwc2_check_params: Invalid parameter g_np_tx_fifo_size=1024
    dwc2 12480000.hsotg: EPs: 16, dedicated fifos, 7808 entries in SPRAM
    Mass Storage Function, version: 2009/09/11
    LUN: removable file: (no medium)
    no file given for LUN0
    g_mass_storage 12480000.hsotg: failed to start g_mass_storage: -22
    8<--- cut here ---
    Unable to handle kernel NULL pointer dereference at virtual address 00000104
    pgd = (ptrval)
    [00000104] *pgd=00000000
    Internal error: Oops: 805 [#1] PREEMPT SMP ARM
    Modules linked in:
    CPU: 0 PID: 12 Comm: kworker/0:1 Not tainted 5.8.0-rc5 #3133
    Hardware name: Samsung Exynos (Flattened Device Tree)
    Workqueue: events deferred_probe_work_func
    PC is at usb_del_gadget_udc+0x38/0xc4
    LR is at __mutex_lock+0x31c/0xb18
    ...
    Process kworker/0:1 (pid: 12, stack limit = 0x(ptrval))
    Stack: (0xef121db0 to 0xef122000)
    ...
    [<c076bf3c>] (usb_del_gadget_udc) from [<c0726bec>] (dwc2_hsotg_remove+0x10/0x20)
    [<c0726bec>] (dwc2_hsotg_remove) from [<c0711208>] (dwc2_driver_probe+0x57c/0x69c)
    [<c0711208>] (dwc2_driver_probe) from [<c06247c0>] (platform_drv_probe+0x6c/0xa4)
    [<c06247c0>] (platform_drv_probe) from [<c0621df4>] (really_probe+0x200/0x48c)
    [<c0621df4>] (really_probe) from [<c06221e8>] (driver_probe_device+0x78/0x1fc)
    [<c06221e8>] (driver_probe_device) from [<c061fcd4>] (bus_for_each_drv+0x74/0xb8)
    [<c061fcd4>] (bus_for_each_drv) from [<c0621b54>] (__device_attach+0xd4/0x16c)
    [<c0621b54>] (__device_attach) from [<c0620c98>] (bus_probe_device+0x88/0x90)
    [<c0620c98>] (bus_probe_device) from [<c06211b0>] (deferred_probe_work_func+0x3c/0xd0)
    [<c06211b0>] (deferred_probe_work_func) from [<c0149280>] (process_one_work+0x234/0x7dc)
    [<c0149280>] (process_one_work) from [<c014986c>] (worker_thread+0x44/0x51c)
    [<c014986c>] (worker_thread) from [<c0150b1c>] (kthread+0x158/0x1a0)
    [<c0150b1c>] (kthread) from [<c0100114>] (ret_from_fork+0x14/0x20)
    Exception stack(0xef121fb0 to 0xef121ff8)
    ...
    ---[ end trace 9724c2fc7cc9c982 ]---
    
    While fixing this also fix the double call to dwc2_lowlevel_hw_disable()
    if dr_mode is set to USB_DR_MODE_PERIPHERAL. In such case low-level
    hardware is already disabled before calling usb_add_gadget_udc(). That
    function correctly preserves low-level hardware state, there is no need
    for the second unconditional dwc2_lowlevel_hw_disable() call.
    
    Fixes: 207324a321a8 ("usb: dwc2: Postponed gadget registration to the udc class driver")
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 816adf48d9fffde87f769812f0f4a4d81b79d026
Author: Dan Robertson <dan@dlrobertson.com>
Date:   Mon Jul 13 12:05:22 2020 -0400

    usb: dwc3: meson-g12a: fix shared reset control use
    
    [ Upstream commit 7a410953d1fb4dbe91ffcfdee9cbbf889d19b0d7 ]
    
    The reset is a shared reset line, but reset_control_reset is still used
    and reset_control_deassert is not guaranteed to have been called before
    the first reset_control_assert call. When suspending the following
    warning may be seen:
    
    WARNING: CPU: 1 PID: 5530 at drivers/reset/core.c:355 reset_control_assert+0x184/0x19c
    Hardware name: Hardkernel ODROID-N2 (DT)
    [..]
    pc : reset_control_assert+0x184/0x19c
    lr : dwc3_meson_g12a_suspend+0x68/0x7c
    [..]
    Call trace:
     reset_control_assert+0x184/0x19c
     dwc3_meson_g12a_suspend+0x68/0x7c
     platform_pm_suspend+0x28/0x54
     __device_suspend+0x590/0xabc
     dpm_suspend+0x104/0x404
     dpm_suspend_start+0x84/0x1bc
     suspend_devices_and_enter+0xc4/0x4fc
     pm_suspend+0x198/0x2d4
    
    Fixes: 6d9fa35a347a87 ("usb: dwc3: meson-g12a: get the reset as shared")
    Signed-off-by: Dan Robertson <dan@dlrobertson.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de27452f23087f5270179e612a24d047cf84a7e3
Author: Sumeet Pawnikar <sumeet.r.pawnikar@intel.com>
Date:   Fri Jul 24 13:22:26 2020 +0530

    thermal: int340x: processor_thermal: fix: update Jasper Lake PCI id
    
    [ Upstream commit 287d959558357e155c889bc35579eb35691a8fcb ]
    
    Update PCI device id for Jasper Lake processor thermal device.
    With this proc_thermal driver is getting loaded and processor
    thermal functionality works on Jasper Lake system.
    
    Fixes: f64a6583d3f5 ("thermal: int340x: processor_thermal: Add Jasper Lake support")
    Signed-off-by: Sumeet Pawnikar <sumeet.r.pawnikar@intel.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/1595577146-1221-1-git-send-email-sumeet.r.pawnikar@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0415ff8c7d6e532b474144a0de129ddac269178a
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Jul 21 21:47:18 2020 +0800

    MIPS: OCTEON: add missing put_device() call in dwc3_octeon_device_init()
    
    [ Upstream commit e8b9fc10f2615b9a525fce56981e40b489528355 ]
    
    if of_find_device_by_node() succeed, dwc3_octeon_device_init() doesn't have
    a corresponding put_device(). Thus add put_device() to fix the exception
    handling for this function implementation.
    
    Fixes: 93e502b3c2d4 ("MIPS: OCTEON: Platform support for OCTEON III USB controller")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 214d219e48a2688fe96acb16bb26f0ea691aa0ea
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Thu Jul 9 14:43:56 2020 +0800

    PCI: rcar: Fix runtime PM imbalance on error
    
    [ Upstream commit a68e06e729b1b06c50ee52917d6b825b43e7d269 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when the call returns an error code. Thus a corresponding decrement is
    needed on the error handling path to keep the counter balanced.
    
    Link: https://lore.kernel.org/r/20200709064356.8800-1-dinghao.liu@zju.edu.cn
    Fixes: 0df6150e7ceb ("PCI: rcar: Use runtime PM to control controller clock")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d4b670195f5be7a6e5205bb9b949ecb60be6b6a
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Jun 10 10:55:54 2020 +0200

    powerpc/spufs: Fix the type of ret in spufs_arch_write_note
    
    [ Upstream commit 7c7ff885c7bce40a487e41c68f1dac14dd2c8033 ]
    
    Both the ->dump method and snprintf return an int.  So switch to an
    int and properly handle errors from ->dump.
    
    Fixes: 5456ffdee666 ("powerpc/spufs: simplify spufs core dumping")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200610085554.5647-1-hch@lst.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1d76052b1e3822f006413de3a99eb3f03481510
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Fri Jul 17 13:19:50 2020 +0300

    ASoC: hdac_hda: fix deadlock after PCM open error
    
    [ Upstream commit 06f07e2365378d51eddd0b5bf23506e1237662b0 ]
    
    Commit 5bd70440cb0a ("ASoC: soc-dai: revert all changes to DAI
    startup/shutdown sequence"), introduced a slight change of semantics
    to DAI startup/shutdown. If startup() returns an error, shutdown()
    is now called for the DAI.
    
    This causes a deadlock in hdac_hda which issues a call to
    snd_hda_codec_pcm_put() in case open fails. Upon error, soc_pcm_open()
    will call shutdown(), and pcm_put() ends up getting called twice. Result
    is a deadlock on pcm->open_mutex, as snd_device_free() gets called from
    within snd_pcm_open(). Typical task backtrace looks like this:
    
    [  334.244627]  snd_pcm_dev_disconnect+0x49/0x340 [snd_pcm]
    [  334.244634]  __snd_device_disconnect.part.0+0x2c/0x50 [snd]
    [  334.244640]  __snd_device_free+0x7f/0xc0 [snd]
    [  334.244650]  snd_hda_codec_pcm_put+0x87/0x120 [snd_hda_codec]
    [  334.244660]  soc_pcm_open+0x6a0/0xbe0 [snd_soc_core]
    [  334.244676]  ? dpcm_add_paths.isra.0+0x491/0x590 [snd_soc_core]
    [  334.244679]  ? kfree+0x9a/0x230
    [  334.244686]  dpcm_be_dai_startup+0x255/0x300 [snd_soc_core]
    [  334.244695]  dpcm_fe_dai_open+0x20e/0xf30 [snd_soc_core]
    [  334.244701]  ? snd_pcm_hw_rule_muldivk+0x110/0x110 [snd_pcm]
    [  334.244709]  ? dpcm_be_dai_startup+0x300/0x300 [snd_soc_core]
    [  334.244714]  ? snd_pcm_attach_substream+0x3c4/0x540 [snd_pcm]
    [  334.244719]  snd_pcm_open_substream+0x69a/0xb60 [snd_pcm]
    [  334.244729]  ? snd_pcm_release_substream+0x30/0x30 [snd_pcm]
    [  334.244732]  ? __mutex_lock_slowpath+0x10/0x10
    [  334.244736]  snd_pcm_open+0x1b3/0x3c0 [snd_pcm]
    
    Fixes: 5bd70440cb0a ("ASoC: soc-dai: revert all changes to DAI startup/shutdown sequence")
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Rander Wang <rander.wang@linux.intel.com>
    BugLink: https://github.com/thesofproject/linux/issues/2159
    Link: https://lore.kernel.org/r/20200717101950.3885187-3-kai.vehmanen@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7593350d7b72a985440367431ce3f3ccdffc9dca
Author: Yuval Basson <ybason@marvell.com>
Date:   Tue Jul 21 14:34:26 2020 +0300

    qed: Fix ILT and XRCD bitmap memory leaks
    
    [ Upstream commit d4eae993fc45398526aed683e225d6fa713f8ddf ]
    
    - Free ILT lines used for XRC-SRQ's contexts.
    - Free XRCD bitmap
    
    Fixes: b8204ad878ce7 ("qed: changes to ILT to support XRC")
    Fixes: 7bfb399eca460 ("qed: Add XRC to RoCE")
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Yuval Basson <ybason@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a7063478d13ad9162be704f4e42440491670a02
Author: Dan Murphy <dmurphy@ti.com>
Date:   Mon Jul 20 13:12:02 2020 -0500

    ASoC: tas2770: Fix reset gpio property name
    
    [ Upstream commit 58b868f51d6e38146e44cb09fcd92b5fc35d83bc ]
    
    Fix the reset property name when allocating the GPIO descriptor.
    The gpiod_get_optional appends either the -gpio or -gpios suffix to the
    name.
    
    Fixes: 1a476abc723e6 ("tas2770: add tas2770 smart PA kernel driver")
    Signed-off-by: Dan Murphy <dmurphy@ti.com>
    Link: https://lore.kernel.org/r/20200720181202.31000-2-dmurphy@ti.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 360ee482151ce1c12253bcaef946092880122351
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Jul 17 20:30:59 2020 +0800

    tools/bpftool: Fix error handing in do_skeleton()
    
    [ Upstream commit 956fcfcd359512f15b19bcd157fa8206ed26605b ]
    
    Fix pass 0 to PTR_ERR, also dump more err info using
    libbpf_strerror.
    
    Fixes: 5dc7a8b21144 ("bpftool, selftests/bpf: Embed object file inside skeleton")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: Quentin Monnet <quentin@isovalent.com>
    Link: https://lore.kernel.org/bpf/20200717123059.29624-1-yuehaibing@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23072846b309a3da9a22f2fcb769615816a481bc
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Fri Jul 17 18:53:25 2020 +0200

    s390/bpf: Tolerate not converging code shrinking
    
    [ Upstream commit 1491b73311a15bb5beeab5d30e03bff761ef6c18 ]
    
    "BPF_MAXINSNS: Maximum possible literals" unnecessarily falls back to
    the interpreter because of failing sanity check in bpf_set_addr. The
    problem is that there are a lot of branches that can be shrunk, and
    doing so opens up the possibility to shrink even more. This process
    does not converge after 3 passes, causing code offsets to change during
    the codegen pass, which must never happen.
    
    Fix by inserting nops during codegen pass in order to preserve code
    offets.
    
    Fixes: 4e9b4a6883dd ("s390/bpf: Use relative long branches")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200717165326.6786-5-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a463d46b323c4acb4a8003f0745486de8aed6dfe
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Fri Jul 17 18:53:24 2020 +0200

    s390/bpf: Use brcl for jumping to exit_ip if necessary
    
    [ Upstream commit 5fa6974471c5518a50bdd814067508dbcb477251 ]
    
    "BPF_MAXINSNS: Maximum possible literals" test causes panic with
    bpf_jit_harden = 2. The reason is that BPF_JMP | BPF_EXIT is always
    emitted as brc, however, after removal of JITed image size
    limitations, brcl might be required.
    
    Fix by using brcl when necessary.
    
    Fixes: 4e9b4a6883dd ("s390/bpf: Use relative long branches")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200717165326.6786-4-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa9a83dab397b709869692b592acc37b506851f7
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Fri Jul 17 18:53:23 2020 +0200

    s390/bpf: Fix sign extension in branch_ku
    
    [ Upstream commit 7477d43be5b1448bc0d4c85cb185a0144cc080e1 ]
    
    Both signed and unsigned variants of BPF_JMP | BPF_K require
    sign-extending the immediate. JIT emits cgfi for the signed case,
    which is correct, and clgfi for the unsigned case, which is not
    correct: clgfi zero-extends the immediate.
    
    s390 does not provide an instruction that does sign-extension and
    unsigned comparison at the same time. Therefore, fix by first loading
    the sign-extended immediate into work register REG_1 and proceeding
    as if it's BPF_X.
    
    Fixes: 4e9b4a6883dd ("s390/bpf: Use relative long branches")
    Reported-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Tested-by: Seth Forshee <seth.forshee@canonical.com>
    Link: https://lore.kernel.org/bpf/20200717165326.6786-3-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cec737d79fa43a3f672d8dc0a61314e7accf25dc
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Jul 21 15:40:43 2020 +0100

    phy: armada-38x: fix NETA lockup when repeatedly switching speeds
    
    [ Upstream commit 1dea06cd643da38931382ebdc151efced201ffad ]
    
    The mvneta hardware appears to lock up in various random ways when
    repeatedly switching speeds between 1G and 2.5G, which involves
    reprogramming the COMPHY.  It is not entirely clear why this happens,
    but best guess is that reprogramming the COMPHY glitches mvneta clocks
    causing the hardware to fail.  It seems that rebooting resolves the
    failure, but not down/up cycling the interface alone.
    
    Various other approaches have been tried, such as trying to cleanly
    power down the COMPHY and then take it back through the power up
    initialisation, but this does not seem to help.
    
    It was finally noticed that u-boot's last step when configuring a
    COMPHY for "SGMII" mode was to poke at a register described as
    "GBE_CONFIGURATION_REG", which is undocumented in any external
    documentation.  All that we have is the fact that u-boot sets a bit
    corresponding to the "SGMII" lane at the end of COMPHY initialisation.
    
    Experimentation shows that if we clear this bit prior to changing the
    speed, and then set it afterwards, mvneta does not suffer this problem
    on the SolidRun Clearfog when switching speeds between 1G and 2.5G.
    
    This problem was found while script-testing phylink.
    
    This fix also requires the corresponding change to DT to be effective.
    See "ARM: dts: armada-38x: fix NETA lockup when repeatedly switching
    speeds".
    
    Fixes: 14dc100b4411 ("phy: armada38x: add common phy support")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/E1jxtRj-0003Tz-CG@rmk-PC.armlinux.org.uk
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5e386a909610008d9df7f0874e3e2a7b82d9c69
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Jul 21 10:19:22 2020 +0200

    mt76: mt7615: fix possible memory leak in mt7615_mcu_wtbl_sta_add
    
    [ Upstream commit 2bccc8415883c1cd5ae8836548d9783dbbd84999 ]
    
    Free the second mcu skb if __mt76_mcu_skb_send_msg() fails to transmit
    the first one in mt7615_mcu_wtbl_sta_add().
    
    Fixes: 99c457d902cf9 ("mt76: mt7615: move mt7615_mcu_set_bmc to mt7615_mcu_ops")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3432b568dec491f9e66032b3c20523d16dbf00ed
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Mon Jun 15 02:23:33 2020 +0800

    mt76: mt7915: add missing CONFIG_MAC80211_DEBUGFS
    
    [ Upstream commit a6e29d8ecd3d4eea8748d81d7b577083b4a7c441 ]
    
    Add CONFIG_MAC80211_DEBUGFS to fix a reported warning.
    
    Fixes: ec9742a8f38e ("mt76: mt7915: add .sta_add_debugfs support")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8177e088f108e9b1a258cbced2c16e6862f0183
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 9 14:04:35 2020 +0300

    mt76: mt7915: potential array overflow in mt7915_mcu_tx_rate_report()
    
    [ Upstream commit eb744e5df86cf7e377d0acc4e686101b0fd9663a ]
    
    Smatch complains that "wcidx" value comes from the network and thus
    cannot be trusted.  In this case, it actually seems to come from the
    firmware.  If your wireless firmware is malicious then probably no
    amount of carefulness can protect you.
    
    On the other hand, these days we still try to check the firmware as much
    as possible.  Verifying that the index is within bounds will silence a
    static checker warning.  And it's harmless and a good exercise in kernel
    hardening.  So I suggest that we do add a bounds check.
    
    Fixes: e57b7901469f ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbdc18979b1d4f03640f2803b54a7e1090b9431d
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Wed Jul 8 03:16:48 2020 +0800

    mt76: mt7615: fix potential memory leak in mcu message handler
    
    [ Upstream commit 9248c08c3fc4ef816c82aa49d01123f4746d349f ]
    
    Fix potential memory leak in mcu message handler on error condition.
    
    Fixes: 0e6a29e477f3 ("mt76: mt7615: add support to read temperature from mcu")
    Acked-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c2729a1ead86225a1d0654576c2f18cde853c39
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Wed Jul 8 03:16:47 2020 +0800

    mt76: mt7663u: fix potential memory leak in mcu message handler
    
    [ Upstream commit c876039e95559350ee101d4b6f6084d9803f2995 ]
    
    Fix potential memory leak in mcu message handler on error condition.
    
    Fixes: eb99cc95c3b6 ("mt76: mt7615: introduce mt7663u support")
    Acked-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aee19b46bc774a011ff68180694b77b07e4b558
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Wed Jul 8 03:16:46 2020 +0800

    mt76: mt7663u: fix memory leak in set key
    
    [ Upstream commit 4a850f8dc68b8c4a20333521b31600c9d31ccb5d ]
    
    Fix memory leak in set key.
    
    Fixes: eb99cc95c3b6 ("mt76: mt7615: introduce mt7663u support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Acked-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a73ed0f9bca14a2446526e2dd62dcf555d51a8a8
Author: Madhavan Srinivasan <maddy@linux.ibm.com>
Date:   Sun Jun 14 14:06:04 2020 +0530

    powerpc/perf: Fix missing is_sier_aviable() during build
    
    [ Upstream commit 3c9450c053f88e525b2db1e6990cdf34d14e7696 ]
    
    Compilation error:
      arch/powerpc/perf/perf_regs.c:80:undefined reference to `.is_sier_available'
    
    Currently is_sier_available() is part of core-book3s.c, which is added
    to build based on CONFIG_PPC_PERF_CTRS.
    
    A config with CONFIG_PERF_EVENTS and without CONFIG_PPC_PERF_CTRS will
    have a build break because of missing is_sier_available().
    
    In practice it only breaks when CONFIG_FSL_EMB_PERF_EVENT=n because
    that also guards the usage of is_sier_available(). That only happens
    with CONFIG_PPC_BOOK3E_64=y and CONFIG_FSL_SOC_BOOKE=n.
    
    Patch adds is_sier_available() in asm/perf_event.h to fix the build
    break for configs missing CONFIG_PPC_PERF_CTRS.
    
    Fixes: 333804dc3b7a ("powerpc/perf: Update perf_regs structure to include SIER")
    Reported-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Madhavan Srinivasan <maddy@linux.ibm.com>
    [mpe: Add detail about CONFIG_FSL_SOC_BOOKE]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200614083604.302611-1-maddy@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66ce4246d1d3cdbf1ad739e70b9684cb62060381
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Jul 16 11:57:46 2020 -0600

    coresight: etm4x: Fix save/restore during cpu idle
    
    [ Upstream commit 342c8a1d1d9e418d32fa02d635cf96989f9a986e ]
    
    The ETM state save/restore incorrectly reads/writes some of the 64bit
    registers (e.g, address comparators, vmid/cid comparators etc.) using
    32bit accesses. Ensure we use the appropriate width accessors for
    the registers.
    
    Fixes: f188b5e76aae ("coresight: etm4x: Save/restore state across CPU low power states")
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200716175746.3338735-18-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e75f65575c9eaa97102c4654e4b237ec5a9594a
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Thu Jul 16 11:57:42 2020 -0600

    coresight: tmc: Fix TMC mode read in tmc_read_unprepare_etb()
    
    [ Upstream commit d021f5c5ff679432c5e9faee0fd7350db2efb97c ]
    
    Reading TMC mode register without proper coresight power
    management can lead to exceptions like the one in the call
    trace below in tmc_read_unprepare_etb() when the trace data
    is read after the sink is disabled. So fix this by having
    a check for coresight sysfs mode before reading TMC mode
    management register in tmc_read_unprepare_etb() similar to
    tmc_read_prepare_etb().
    
      SError Interrupt on CPU6, code 0xbe000411 -- SError
      pstate: 80400089 (Nzcv daIf +PAN -UAO)
      pc : tmc_read_unprepare_etb+0x74/0x108
      lr : tmc_read_unprepare_etb+0x54/0x108
      sp : ffffff80d9507c30
      x29: ffffff80d9507c30 x28: ffffff80b3569a0c
      x27: 0000000000000000 x26: 00000000000a0001
      x25: ffffff80cbae9550 x24: 0000000000000010
      x23: ffffffd07296b0f0 x22: ffffffd0109ee028
      x21: 0000000000000000 x20: ffffff80d19e70e0
      x19: ffffff80d19e7080 x18: 0000000000000000
      x17: 0000000000000000 x16: 0000000000000000
      x15: 0000000000000000 x14: 0000000000000000
      x13: 0000000000000000 x12: 0000000000000000
      x11: 0000000000000000 x10: dfffffd000000001
      x9 : 0000000000000000 x8 : 0000000000000002
      x7 : ffffffd071d0fe78 x6 : 0000000000000000
      x5 : 0000000000000080 x4 : 0000000000000001
      x3 : ffffffd071d0fe98 x2 : 0000000000000000
      x1 : 0000000000000004 x0 : 0000000000000001
      Kernel panic - not syncing: Asynchronous SError Interrupt
    
    Fixes: 4525412a5046 ("coresight: tmc: making prepare/unprepare functions generic")
    Reported-by: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Tested-by: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200716175746.3338735-14-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91813b6c4a714e79bfe54ab4a0f8c1395de66908
Author: Mike Leach <mike.leach@linaro.org>
Date:   Thu Jul 16 11:57:39 2020 -0600

    coresight: etmv4: Counter values not saved on disable
    
    [ Upstream commit 8fa43700f69703f995ea715b76be6fabdd2f05de ]
    
    The counter value registers change during operation, however this change
    is not reflected in the values seen by the user in sysfs.
    
    This fixes the issue by reading back the values on disable.
    
    Signed-off-by: Mike Leach <mike.leach@linaro.org>
    Fixes: 2e1cdfe184b52 ("coresight-etm4x: Adding CoreSight ETM4x driver")
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200716175746.3338735-11-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b975cf2fb0589c923ac7753124db8db37d5a6c3
Author: Mike Leach <mike.leach@linaro.org>
Date:   Thu Jul 16 11:57:38 2020 -0600

    coresight: etmv4: Fix resource selector constant
    
    [ Upstream commit cb8bba907a4ff4ba42f1d245cb506d55829674b8 ]
    
    ETMv4 max resource selector constant incorrectly set to 16. Updated to the
    correct 32 value, and adjustments made to limited code using it.
    
    Signed-off-by: Mike Leach <mike.leach@linaro.org>
    Fixes: 2e1cdfe184b52 ("coresight-etm4x: Adding CoreSight ETM4x driver")
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200716175746.3338735-10-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d52214425ced4cf64d4665dbc5605983af215c0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jun 16 12:19:49 2020 +0300

    thermal: ti-soc-thermal: Fix reversed condition in ti_thermal_expose_sensor()
    
    [ Upstream commit 0f348db01fdf128813fdd659fcc339038fb421a4 ]
    
    This condition is reversed and will cause breakage.
    
    Fixes: 7440f518dad9 ("thermal/drivers/ti-soc-thermal: Avoid dereferencing ERR_PTR")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200616091949.GA11940@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99075b81545cbad9dd7419cc6f4491a582f32417
Author: Kars Mulder <kerneldev@karsmulder.nl>
Date:   Tue Jul 7 16:43:50 2020 +0200

    usb: core: fix quirks_param_set() writing to a const pointer
    
    [ Upstream commit b1b6bed3b5036509b449b5965285d5057ba42527 ]
    
    The function quirks_param_set() takes as argument a const char* pointer
    to the new value of the usbcore.quirks parameter. It then casts this
    pointer to a non-const char* pointer and passes it to the strsep()
    function, which overwrites the value.
    
    Fix this by creating a copy of the value using kstrdup() and letting
    that copy be written to by strsep().
    
    Fixes: 027bd6cafd9a ("usb: core: Add "quirks" parameter for usbcore")
    Signed-off-by: Kars Mulder <kerneldev@karsmulder.nl>
    
    Link: https://lore.kernel.org/r/5ee2-5f048a00-21-618c5c00@230659773
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9ba39efa669d6f54e69222ebda6ea3ccff20180
Author: Taniya Das <tdas@codeaurora.org>
Date:   Wed Jul 15 12:24:10 2020 +0530

    clk: qcom: gcc: Make disp gpll0 branch aon for sc7180/sdm845
    
    [ Upstream commit 9c3df2b1993da9ab1110702d7b2815d5cd8c02f3 ]
    
    The display gpll0 branch clock inside GCC needs to always be enabled.
    Otherwise the AHB clk (disp_cc_mdss_ahb_clk_src) for the display clk
    controller (dispcc) will stop clocking while sourcing from gpll0 when
    this branch inside GCC is turned off during unused clk disabling. We can
    never turn this branch off because the AHB clk for the display subsystem
    is needed to read/write any registers inside the display subsystem
    including clk related ones. This makes this branch a really easy way to
    turn off AHB access to the display subsystem and cause all sorts of
    mayhem. Let's just make the clk ops keep the clk enabled forever and
    ignore any attempts to disable this clk so that dispcc accesses keep
    working.
    
    Signed-off-by: Taniya Das <tdas@codeaurora.org>
    Reported-by: Evan Green <evgreen@chromium.org>
    Link: https://lore.kernel.org/r/1594796050-14511-1-git-send-email-tdas@codeaurora.org
    Fixes: 17269568f726 ("clk: qcom: Add Global Clock controller (GCC) driver for SC7180")
    Fixes: 06391eddb60a ("clk: qcom: Add Global Clock controller (GCC) driver for SDM845")
    [sboyd@kernel.org: Fill out commit text more]
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef54393965e4fa9b052056fbce3d0039b3ec0357
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jul 16 10:50:55 2020 +0200

    USB: serial: iuu_phoenix: fix led-activity helpers
    
    [ Upstream commit de37458f8c2bfc465500a1dd0d15dbe96d2a698c ]
    
    The set-led command is eight bytes long and starts with a command byte
    followed by six bytes of RGB data and ends with a byte encoding a
    frequency (see iuu_led() and iuu_rgbf_fill_buffer()).
    
    The led activity helpers had a few long-standing bugs which corrupted
    the command packets by inserting a second command byte and thereby
    offsetting the RGB data and dropping the frequency in non-xmas mode.
    
    In xmas mode, a related off-by-one error left the frequency field
    uninitialised.
    
    Fixes: 60a8fc017103 ("USB: add iuu_phoenix driver")
    Reported-by: George Spelvin <lkml@sdf.org>
    Link: https://lore.kernel.org/r/20200716085056.31471-1-johan@kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1ffb44461029f3078a344282a128dca44eacf69
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Sat Jul 18 17:39:36 2020 +0800

    PCI: loongson: Use DECLARE_PCI_FIXUP_EARLY for bridge_class_quirk()
    
    [ Upstream commit 14110af606965ce07abe4d121c100241c2e73b86 ]
    
    According to the datasheet of Loongson LS7A bridge chip, the old version
    of Loongson LS7A PCIE port has a wrong value about PCI class which is
    0x060000, the correct value should be 0x060400, this bug can be fixed by
    "dev->class = PCI_CLASS_BRIDGE_PCI << 8;" at the software level and it
    was fixed in hardware in the latest LS7A versions.
    
    In order to maintain downward compatibility, use DECLARE_PCI_FIXUP_EARLY
    instead of DECLARE_PCI_FIXUP_HEADER for bridge_class_quirk() to fix it as
    early as possible.
    
    Otherwise, in the function pci_setup_device(), the related code about
    "dev->class" such as "class = dev->class >> 8;" and "dev->transparent
    = ((dev->class & 0xff) == 1);" maybe get wrong value without EARLY fixup.
    
    Link: https://lore.kernel.org/r/1595065176-460-1-git-send-email-yangtiezhu@loongson.cn
    Fixes: 1f58cca5cf2b ("PCI: Add Loongson PCI Controller support")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d42c78119a0ba4b428cc4b6baa795f9b58373ef
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Fri Jul 17 23:56:48 2020 +0200

    spi: lantiq-ssc: Fix warning by using WQ_MEM_RECLAIM
    
    [ Upstream commit ba3548cf29616b58c93bbaffc3d636898d009858 ]
    
    The lantiq-ssc driver uses internally an own workqueue to wait till the
    data is not only written out of the FIFO but really written to the wire.
    This workqueue is flushed while the SPI subsystem is working in some
    other system workqueue.
    
    The system workqueue is marked as WQ_MEM_RECLAIM, but the workqueue in
    the lantiq-ssc driver does not use WQ_MEM_RECLAIM for now. Add this flag
    too to prevent this warning.
    
    This fixes the following warning:
    [    2.975956] WARNING: CPU: 1 PID: 17 at kernel/workqueue.c:2614 check_flush_dependency+0x168/0x184
    [    2.984752] workqueue: WQ_MEM_RECLAIM kblockd:blk_mq_run_work_fn is flushing !WQ_MEM_RECLAIM 1e100800.spi:0x0
    
    Fixes: 891b7c5fbf61 ("mtd_blkdevs: convert to blk-mq")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Link: https://lore.kernel.org/r/20200717215648.20522-1-hauke@hauke-m.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75d9f30b8b5696b5a3a60405e59add564f962062
Author: Steve Longerbeam <slongerbeam@gmail.com>
Date:   Wed Jun 17 15:40:36 2020 -0700

    gpu: ipu-v3: Restore RGB32, BGR32
    
    [ Upstream commit 22b2cfad752d4b278ea7c38c0ee961ca50198ce8 ]
    
    RGB32 and BGR32 formats were inadvertently removed from the switch
    statement in ipu_pixelformat_to_colorspace(). Restore them.
    
    Fixes: a59957172b0c ("gpu: ipu-v3: enable remaining 32-bit RGB V4L2 pixel formats")
    Signed-off-by: Steve Longerbeam <slongerbeam@gmail.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19a106b23be91841ae805c580876785a64bcd517
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Thu Jun 11 14:43:32 2020 +0200

    drm/imx: tve: fix regulator_disable error path
    
    [ Upstream commit 7bb58b987fee26da2a1665c01033022624986b7c ]
    
    Add missing regulator_disable() as devm_action to avoid dedicated
    unbind() callback and fix the missing error handling.
    
    Fixes: fcbc51e54d2a ("staging: drm/imx: Add support for Television Encoder (TVEv2)")
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68c15a6dbc77455a1c4edaa89c9958c18e477319
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Thu Jun 11 14:43:31 2020 +0200

    drm/imx: fix use after free
    
    [ Upstream commit ba807c94f67fd64b3051199810d9e4dd209fdc00 ]
    
    Component driver structures allocated with devm_kmalloc() in bind() are
    freed automatically after unbind(). Since the contained drm structures
    are accessed afterwards in drm_mode_config_cleanup(), move the
    allocation into probe() to extend the driver structure's lifetime to the
    lifetime of the device. This should eventually be changed to use drm
    resource managed allocations with lifetime of the drm device.
    
    We also need to ensure that all componets are available during the
    unbind() so we need to call component_unbind_all() before we free
    non-devres resources like planes.
    
    Note this patch fixes the the use after free bug but introduces a
    possible boot loop issue. The issue is triggered if the HDMI support is
    enabled and a component driver always return -EPROBE_DEFER, see
    discussion [1] for more details.
    
    [1] https://lkml.org/lkml/2020/3/24/1467
    
    Fixes: 17b5001b5143 ("imx-drm: convert to componentised device support")
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    [m.felsch@pengutronix: fix imx_tve_probe()]
    [m.felsch@pengutronix: resort component_unbind_all())
    [m.felsch@pengutronix: adapt commit message]
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20d2eba09230a69c8818afdb1b5c8a37cd66d10d
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Jul 9 08:59:24 2020 +0530

    powerpc/book3s64/pkeys: Use PVR check instead of cpu feature
    
    [ Upstream commit d79e7a5f26f1d179cbb915a8bf2469b6d7431c29 ]
    
    We are wrongly using CPU_FTRS_POWER8 to check for P8 support. Instead, we should
    use PVR value. Now considering we are using CPU_FTRS_POWER8, that
    implies we returned true for P9 with older firmware. Keep the same behavior
    by checking for P9 PVR value.
    
    Fixes: cf43d3b26452 ("powerpc: Enable pkey subsystem")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200709032946.881753-2-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa11151dd8927e51eb0fdeff57c3cb42bf0d5567
Author: Bharata B Rao <bharata@linux.ibm.com>
Date:   Thu Jul 9 18:49:23 2020 +0530

    powerpc/mm/radix: Free PUD table when freeing pagetable
    
    [ Upstream commit 9ce8853b4a735c8115f55ac0e9c2b27a4c8f80b5 ]
    
    remove_pagetable() isn't freeing PUD table. This causes memory
    leak during memory unplug. Fix this.
    
    Fixes: 4b5d62ca17a1 ("powerpc/mm: add radix__remove_section_mapping()")
    Signed-off-by: Bharata B Rao <bharata@linux.ibm.com>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200709131925.922266-3-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05d976032bb86874b57a913aad74e468edc3e73d
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Jul 17 20:44:56 2020 +0900

    phy: renesas: rcar-gen3-usb2: move irq registration to init
    
    [ Upstream commit 08b0ad375ca66181faee725b1b358bcae8d592ee ]
    
    If CONFIG_DEBUG_SHIRQ was enabled, r8a77951-salvator-xs could boot
    correctly. If we appended "earlycon keep_bootcon" to the kernel
    command like, we could get kernel log like below.
    
        SError Interrupt on CPU0, code 0xbf000002 -- SError
        CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.8.0-rc3-salvator-x-00505-g6c843129e6faaf01 #785
        Hardware name: Renesas Salvator-X 2nd version board based on r8a77951 (DT)
        pstate: 60400085 (nZCv daIf +PAN -UAO BTYPE=--)
        pc : rcar_gen3_phy_usb2_irq+0x14/0x54
        lr : free_irq+0xf4/0x27c
    
    This means free_irq() calls the interrupt handler while PM runtime
    is not getting if DEBUG_SHIRQ is enabled and rcar_gen3_phy_usb2_probe()
    failed. To fix the issue, move the irq registration place to
    rcar_gen3_phy_usb2_init() which is ready to handle the interrupts.
    
    Note that after the commit 549b6b55b005 ("phy: renesas: rcar-gen3-usb2:
    enable/disable independent irqs") which is merged into v5.2, since this
    driver creates multiple phy instances, needs to check whether one of
    phy instances is initialized. However, if we backport this patch to v5.1
    or less, we don't need to check it because such kernel have single
    phy instance.
    
    Reported-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Fixes: 9f391c574efc ("phy: rcar-gen3-usb2: add runtime ID/VBUS pin detection")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1594986297-12434-2-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27d42b1bcde19fbaecd59c98cfe8bc3940910a7f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Jun 25 22:19:47 2020 +0200

    media: s5p-g2d: Fix a memory leak in an error handling path in 'g2d_probe()'
    
    [ Upstream commit 94b9ce6870f9c90ac92505482689818b254312f7 ]
    
    Memory allocated with 'v4l2_m2m_init()' must be freed by a corresponding
    call to 'v4l2_m2m_release()'
    
    Also reorder the code at the end of the probe function so that
    'video_register_device()' is called last.
    Update the error handling path accordingly.
    
    Fixes: 5ce60d790a24 ("[media] s5p-g2d: Add DT based discovery support")
    Fixes: 918847341af0 ("[media] v4l: add G2D driver for s5p device family")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    [hverkuil-cisco@xs4all.nl: checkpatch: align with parenthesis]
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9922de2681e24959c3a4fa95995b59ebafd015f1
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue May 5 12:50:33 2020 +0200

    go7007: add sanity checking for endpoints
    
    [ Upstream commit 137641287eb40260783a4413847a0aef06023a6c ]
    
    A malicious USB device may lack endpoints the driver assumes to exist
    Accessing them leads to NULL pointer accesses. This patch introduces
    sanity checking.
    
    Reported-and-tested-by: syzbot+cabfa4b5b05ff6be4ef0@syzkaller.appspotmail.com
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Fixes: 866b8695d67e8 ("Staging: add the go7007 video driver")
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43a040aea142a74e9787ca9bbdb760e22ce6ebe1
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Jul 17 15:59:25 2020 +0800

    PCI/ASPM: Add missing newline in sysfs 'policy'
    
    [ Upstream commit 3167e3d340c092fd47924bc4d23117a3074ef9a9 ]
    
    When I cat ASPM parameter 'policy' by sysfs, it displays as follows.  Add a
    newline for easy reading.  Other sysfs attributes already include a
    newline.
    
      [root@localhost ~]# cat /sys/module/pcie_aspm/parameters/policy
      [default] performance powersave powersupersave [root@localhost ~]#
    
    Fixes: 7d715a6c1ae5 ("PCI: add PCI Express ASPM support")
    Link: https://lore.kernel.org/r/1594972765-10404-1-git-send-email-wangxiongfeng2@huawei.com
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94fbbc3cdd999b110dcc6e740cb118b8e87ef87a
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Fri Jul 17 16:22:42 2020 +0800

    ASoC: meson: fixes the missed kfree() for axg_card_add_tdm_loopback
    
    [ Upstream commit bd054ece7d9cdd88e900df6625e951a01d9f655e ]
    
    axg_card_add_tdm_loopback() misses to call kfree() in an error path. We
    can use devm_kasprintf() to fix the issue, also improve maintainability.
    So use it instead.
    
    Fixes: c84836d7f650 ("ASoC: meson: axg-card: use modern dai_link style")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Reviewed-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200717082242.130627-1-jingxiangfeng@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c660787eb906d77bd9abb354022ff07306d6ec75
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jul 16 16:47:20 2020 +0100

    staging: rtl8192u: fix a dubious looking mask before a shift
    
    [ Upstream commit c4283950a9a4d3bf4a3f362e406c80ab14f10714 ]
    
    Currently the masking of ret with 0xff and followed by a right shift
    of 8 bits always leaves a zero result.  It appears the mask of 0xff
    is incorrect and should be 0xff00, but I don't have the hardware to
    test this. Fix this to mask the upper 8 bits before shifting.
    
    [ Not tested ]
    
    Addresses-Coverity: ("Operands don't affect result")
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20200716154720.1710252-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 263875d7b6065bf789da2a46753d06822873ce2b
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:05 2020 -0500

    ima: Fail rule parsing when the KEY_CHECK hook is combined with an invalid cond
    
    [ Upstream commit eb624fe214a2e156ddafd9868377cf91499f789d ]
    
    The KEY_CHECK function only supports the uid, pcr, and keyrings
    conditionals. Make this clear at policy load so that IMA policy authors
    don't assume that other conditionals are supported.
    
    Fixes: 5808611cccb2 ("IMA: Add KEY_CHECK func to measure keys")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Reviewed-by: Lakshmi Ramasubramanian <nramas@linux.microsoft.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7e3b96d12290aad2a8392111d2739806f32845a
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:04 2020 -0500

    ima: Fail rule parsing when the KEXEC_CMDLINE hook is combined with an invalid cond
    
    [ Upstream commit db2045f5892a9db7354442bf77f9b03b50ff9ee1 ]
    
    The KEXEC_CMDLINE hook function only supports the pcr conditional. Make
    this clear at policy load so that IMA policy authors don't assume that
    other conditionals are supported.
    
    Since KEXEC_CMDLINE's inception, ima_match_rules() has always returned
    true on any loaded KEXEC_CMDLINE rule without any consideration for
    other conditionals present in the rule. Make it clear that pcr is the
    only supported KEXEC_CMDLINE conditional by returning an error during
    policy load.
    
    An example of why this is a problem can be explained with the following
    rule:
    
     dont_measure func=KEXEC_CMDLINE obj_type=foo_t
    
    An IMA policy author would have assumed that rule is valid because the
    parser accepted it but the result was that measurements for all
    KEXEC_CMDLINE operations would be disabled.
    
    Fixes: b0935123a183 ("IMA: Define a new hook to measure the kexec boot command line arguments")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Reviewed-by: Mimi Zohar <zohar@linux.ibm.com>
    Reviewed-by: Lakshmi Ramasubramanian <nramas@linux.microsoft.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e07cdb1778ec000a85a5fbce7697727e4593f32
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:03 2020 -0500

    ima: Fail rule parsing when buffer hook functions have an invalid action
    
    [ Upstream commit 712183437ebebc89cd086ef96cf9a521fd97fd09 ]
    
    Buffer based hook functions, such as KEXEC_CMDLINE and KEY_CHECK, can
    only measure. The process_buffer_measurement() function quietly ignores
    all actions except measure so make this behavior clear at the time of
    policy load.
    
    The parsing of the keyrings conditional had a check to ensure that it
    was only specified with measure actions but the check should be on the
    hook function and not the keyrings conditional since
    "appraise func=KEY_CHECK" is not a valid rule.
    
    Fixes: b0935123a183 ("IMA: Define a new hook to measure the kexec boot command line arguments")
    Fixes: 5808611cccb2 ("IMA: Add KEY_CHECK func to measure keys")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd6f756234dcb3f880e195f263112d799ab1fc78
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:02 2020 -0500

    ima: Free the entire rule if it fails to parse
    
    [ Upstream commit 2bdd737c5687d6dec30e205953146ede8a87dbdd ]
    
    Use ima_free_rule() to fix memory leaks of allocated ima_rule_entry
    members, such as .fsname and .keyrings, when an error is encountered
    during rule parsing.
    
    Set the args_p pointer to NULL after freeing it in the error path of
    ima_lsm_rule_init() so that it isn't freed twice.
    
    This fixes a memory leak seen when loading an rule that contains an
    additional piece of allocated memory, such as an fsname, followed by an
    invalid conditional:
    
     # echo "measure fsname=tmpfs bad=cond" > /sys/kernel/security/ima/policy
     -bash: echo: write error: Invalid argument
     # echo scan > /sys/kernel/debug/kmemleak
     # cat /sys/kernel/debug/kmemleak
     unreferenced object 0xffff98e7e4ece6c0 (size 8):
       comm "bash", pid 672, jiffies 4294791843 (age 21.855s)
       hex dump (first 8 bytes):
         74 6d 70 66 73 00 6b a5                          tmpfs.k.
       backtrace:
         [<00000000abab7413>] kstrdup+0x2e/0x60
         [<00000000f11ede32>] ima_parse_add_rule+0x7d4/0x1020
         [<00000000f883dd7a>] ima_write_policy+0xab/0x1d0
         [<00000000b17cf753>] vfs_write+0xde/0x1d0
         [<00000000b8ddfdea>] ksys_write+0x68/0xe0
         [<00000000b8e21e87>] do_syscall_64+0x56/0xa0
         [<0000000089ea7b98>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: f1b08bbcbdaf ("ima: define a new policy condition based on the filesystem name")
    Fixes: 2b60c0ecedf8 ("IMA: Read keyrings= option from the IMA policy")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 644a11adfcc7b14197ed8a3a0a513dcb3694af9a
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:01 2020 -0500

    ima: Free the entire rule when deleting a list of rules
    
    [ Upstream commit 465aee77aae857b5fcde56ee192b33dc369fba04 ]
    
    Create a function, ima_free_rule(), to free all memory associated with
    an ima_rule_entry. Use the new function to fix memory leaks of allocated
    ima_rule_entry members, such as .fsname and .keyrings, when deleting a
    list of rules.
    
    Make the existing ima_lsm_free_rule() function specific to the LSM
    audit rule array of an ima_rule_entry and require that callers make an
    additional call to kfree to free the ima_rule_entry itself.
    
    This fixes a memory leak seen when loading by a valid rule that contains
    an additional piece of allocated memory, such as an fsname, followed by
    an invalid rule that triggers a policy load failure:
    
     # echo -e "dont_measure fsname=securityfs\nbad syntax" > \
        /sys/kernel/security/ima/policy
     -bash: echo: write error: Invalid argument
     # echo scan > /sys/kernel/debug/kmemleak
     # cat /sys/kernel/debug/kmemleak
     unreferenced object 0xffff9bab67ca12c0 (size 16):
       comm "bash", pid 684, jiffies 4295212803 (age 252.344s)
       hex dump (first 16 bytes):
         73 65 63 75 72 69 74 79 66 73 00 6b 6b 6b 6b a5  securityfs.kkkk.
       backtrace:
         [<00000000adc80b1b>] kstrdup+0x2e/0x60
         [<00000000d504cb0d>] ima_parse_add_rule+0x7d4/0x1020
         [<00000000444825ac>] ima_write_policy+0xab/0x1d0
         [<000000002b7f0d6c>] vfs_write+0xde/0x1d0
         [<0000000096feedcf>] ksys_write+0x68/0xe0
         [<0000000052b544a2>] do_syscall_64+0x56/0xa0
         [<000000007ead1ba7>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: f1b08bbcbdaf ("ima: define a new policy condition based on the filesystem name")
    Fixes: 2b60c0ecedf8 ("IMA: Read keyrings= option from the IMA policy")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96022c3ddf63052dd5e3367552b2c6b91f91ff6c
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Thu Jul 9 01:19:00 2020 -0500

    ima: Have the LSM free its audit rule
    
    [ Upstream commit 9ff8a616dfab96a4fa0ddd36190907dc68886d9b ]
    
    Ask the LSM to free its audit rule rather than directly calling kfree().
    Both AppArmor and SELinux do additional work in their audit_rule_free()
    hooks. Fix memory leaks by allowing the LSMs to perform necessary work.
    
    Fixes: b16942455193 ("ima: use the lsm policy update notifier")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Cc: Janne Karhunen <janne.karhunen@gmail.com>
    Cc: Casey Schaufler <casey@schaufler-ca.com>
    Reviewed-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b76ca3f373b52c9be3838b703c1976cafe07752e
Author: Mikhail Malygin <m.malygin@yadro.com>
Date:   Thu Jul 16 22:03:41 2020 +0300

    RDMA/rxe: Prevent access to wr->next ptr afrer wr is posted to send queue
    
    [ Upstream commit 5f0b2a6093a4d9aab093964c65083fe801ef1e58 ]
    
    rxe_post_send_kernel() iterates over linked list of wr's, until the
    wr->next ptr is NULL.  However if we've got an interrupt after last wr is
    posted, control may be returned to the code after send completion callback
    is executed and wr memory is freed.
    
    As a result, wr->next pointer may contain incorrect value leading to
    panic. Store the wr->next on the stack before posting it.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20200716190340.23453-1-m.malygin@yadro.com
    Signed-off-by: Mikhail Malygin <m.malygin@yadro.com>
    Signed-off-by: Sergey Kojushev <s.kojushev@yadro.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdb550b1e4205881f7598e32d2fab9133ef0a694
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Tue Jul 7 09:31:00 2020 +0300

    RDMA/qedr: Add EDPM max size to alloc ucontext response
    
    [ Upstream commit eb7f84e379daad69b4c92538baeaf93bbf493c14 ]
    
    User space should receive the maximum edpm size from kernel driver,
    similar to other edpm/ldpm related limits.  Add an additional parameter to
    the alloc_ucontext_resp structure for the edpm maximum size.
    
    In addition, pass an indication from user-space to kernel
    (and not just kernel to user) that the DPM sizes are supported.
    
    This is for supporting backward-forward compatibility between driver and
    lib for everything related to DPM transaction and limit sizes.
    
    This should have been part of commit mentioned in Fixes tag.
    
    Link: https://lore.kernel.org/r/20200707063100.3811-3-michal.kalderon@marvell.com
    Fixes: 93a3d05f9d68 ("RDMA/qedr: Add kernel capability flags for dpm enabled mode")
    Signed-off-by: Ariel Elior <ariel.elior@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06e28eb3bcef5eefe3500feefd05b9b559cebbf3
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Tue Jul 7 09:30:59 2020 +0300

    RDMA/qedr: Add EDPM mode type for user-fw compatibility
    
    [ Upstream commit bbe4f4245271bd0f21bf826996c0c5d87a3529c9 ]
    
    In older FW versions the completion flag was treated as the ack flag in
    edpm messages.  commit ff937b916eb6 ("qed: Add EDPM mode type for user-fw
    compatibility") exposed the FW option of setting which mode the QP is in
    by adding a flag to the qedr <-> qed API.
    
    This patch adds the qedr <-> libqedr interface so that the libqedr can set
    the flag appropriately and qedr can pass it down to FW.  Flag is added for
    backward compatibility with libqedr.
    
    For older libs, this flag didn't exist and therefore set to zero.
    
    Fixes: ac1b36e55a51 ("qedr: Add support for user context verbs")
    Link: https://lore.kernel.org/r/20200707063100.3811-2-michal.kalderon@marvell.com
    Signed-off-by: Yuval Bason <yuval.bason@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01fdb8e7c330e5da875b5fd4a1cbb20e8707a0ab
Author: Yuval Basson <ybason@marvell.com>
Date:   Wed Jul 8 22:55:26 2020 +0300

    RDMA/qedr: SRQ's bug fixes
    
    [ Upstream commit acca72e2b031b9fbb4184511072bd246a0abcebc ]
    
    QP's with the same SRQ, working on different CQs and running in parallel
    on different CPUs could lead to a race when maintaining the SRQ consumer
    count, and leads to FW running out of SRQs. Update the consumer
    atomically.  Make sure the wqe_prod is updated after the sge_prod due to
    FW requirements.
    
    Fixes: 3491c9e799fb ("qedr: Add support for kernel mode SRQ's")
    Link: https://lore.kernel.org/r/20200708195526.31040-1-ybason@marvell.com
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Yuval Basson <ybason@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99d321c2a921e5315e72cc7199377b4b2c27b766
Author: Patrick Steinhardt <ps@pks.im>
Date:   Wed Jul 15 19:43:33 2020 +0200

    Bluetooth: Fix update of connection state in `hci_encrypt_cfm`
    
    [ Upstream commit 339ddaa626995bc6218972ca241471f3717cc5f4 ]
    
    Starting with the upgrade to v5.8-rc3, I've noticed I wasn't able to
    connect to my Bluetooth headset properly anymore. While connecting to
    the device would eventually succeed, bluetoothd seemed to be confused
    about the current connection state where the state was flapping hence
    and forth. Bisecting this issue led to commit 3ca44c16b0dc (Bluetooth:
    Consolidate encryption handling in hci_encrypt_cfm, 2020-05-19), which
    refactored `hci_encrypt_cfm` to also handle updating the connection
    state.
    
    The commit in question changed the code to call `hci_connect_cfm` inside
    `hci_encrypt_cfm` and to change the connection state. But with the
    conversion, we now only update the connection state if a status was set
    already. In fact, the reverse should be true: the status should be
    updated if no status is yet set. So let's fix the isuse by reversing the
    condition.
    
    Fixes: 3ca44c16b0dc ("Bluetooth: Consolidate encryption handling in hci_encrypt_cfm")
    Signed-off-by: Patrick Steinhardt <ps@pks.im>
    Acked-by:  Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13b052362be4b22c99a719d831f3044efafa15d6
Author: Milton Miller <miltonm@us.ibm.com>
Date:   Thu Jul 16 09:37:04 2020 +1000

    powerpc/vdso: Fix vdso cpu truncation
    
    [ Upstream commit a9f675f950a07d5c1dbcbb97aabac56f5ed085e3 ]
    
    The code in vdso_cpu_init that exposes the cpu and numa node to
    userspace via SPRG_VDSO incorrctly masks the cpu to 12 bits. This means
    that any kernel running on a box with more than 4096 threads (NR_CPUS
    advertises a limit of of 8192 cpus) would expose userspace to two cpu
    contexts running at the same time with the same cpu number.
    
    Note: I'm not aware of any distro shipping a kernel with support for more
    than 4096 threads today, nor of any system image that currently exceeds
    4096 threads. Found via code browsing.
    
    Fixes: 18ad51dd342a7eb09dbcd059d0b451b616d4dafc ("powerpc: Add VDSO version of getcpu")
    Signed-off-by: Milton Miller <miltonm@us.ibm.com>
    Signed-off-by: Anton Blanchard <anton@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200715233704.1352257-1-anton@ozlabs.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbbdd24341573893797cd563f40d8f1bbf7d747a
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Jun 12 00:12:22 2020 -0500

    powerpc/rtas: don't online CPUs for partition suspend
    
    [ Upstream commit ec2fc2a9e9bbad9023aab65bc472ce7a3ca8608f ]
    
    Partition suspension, used for hibernation and migration, requires
    that the OS place all but one of the LPAR's processor threads into one
    of two states prior to calling the ibm,suspend-me RTAS function:
    
      * the architected offline state (via RTAS stop-self); or
      * the H_JOIN hcall, which does not return until the partition
        resumes execution
    
    Using H_CEDE as the offline mode, introduced by
    commit 3aa565f53c39 ("powerpc/pseries: Add hooks to put the CPU into
    an appropriate offline state"), means that any threads which are
    offline from Linux's point of view must be moved to one of those two
    states before a partition suspension can proceed.
    
    This was eventually addressed in commit 120496ac2d2d ("powerpc: Bring
    all threads online prior to migration/hibernation"), which added code
    to temporarily bring up any offline processor threads so they can call
    H_JOIN. Conceptually this is fine, but the implementation has had
    multiple races with cpu hotplug operations initiated from user
    space[1][2][3], the error handling is fragile, and it generates
    user-visible cpu hotplug events which is a lot of noise for a platform
    feature that's supposed to minimize disruption to workloads.
    
    With commit 3aa565f53c39 ("powerpc/pseries: Add hooks to put the CPU
    into an appropriate offline state") reverted, this code becomes
    unnecessary, so remove it. Since any offline CPUs now are truly
    offline from the platform's point of view, it is no longer necessary
    to bring up CPUs only to have them call H_JOIN and then go offline
    again upon resuming. Only active threads are required to call H_JOIN;
    stopped threads can be left alone.
    
    [1] commit a6717c01ddc2 ("powerpc/rtas: use device model APIs and
        serialization during LPM")
    [2] commit 9fb603050ffd ("powerpc/rtas: retry when cpu offline races
        with suspend/migration")
    [3] commit dfd718a2ed1f ("powerpc/rtas: Fix a potential race between
        CPU-Offline & Migration")
    
    Fixes: 120496ac2d2d ("powerpc: Bring all threads online prior to migration/hibernation")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200612051238.1007764-3-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d411475796be1873e993e28d5c9d5a88adcc05ba
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Fri Jun 12 00:12:21 2020 -0500

    powerpc/pseries: remove cede offline state for CPUs
    
    [ Upstream commit 48f6e7f6d948b56489da027bc3284c709b939d28 ]
    
    This effectively reverts commit 3aa565f53c39 ("powerpc/pseries: Add
    hooks to put the CPU into an appropriate offline state"), which added
    an offline mode for CPUs which uses the H_CEDE hcall instead of the
    architected stop-self RTAS function in order to facilitate "folding"
    of dedicated mode processors on PowerVM platforms to achieve energy
    savings. This has been the default offline mode since its
    introduction.
    
    There's nothing about stop-self that would prevent the hypervisor from
    achieving the energy savings available via H_CEDE, so the original
    premise of this change appears to be flawed.
    
    I also have encountered the claim that the transition to and from
    ceded state is much faster than stop-self/start-cpu. Certainly we
    would not want to use stop-self as an *idle* mode. That is what H_CEDE
    is for. However, this difference is insignificant in the context of
    Linux CPU hotplug, where the latency of an offline or online operation
    on current systems is on the order of 100ms, mainly attributable to
    all the various subsystems' cpuhp callbacks.
    
    The cede offline mode also prevents accurate accounting, as discussed
    before:
    https://lore.kernel.org/linuxppc-dev/1571740391-3251-1-git-send-email-ego@linux.vnet.ibm.com/
    
    Unconditionally use stop-self to offline processor threads. This is
    the architected method for offlining CPUs on PAPR systems.
    
    The "cede_offline" boot parameter is rendered obsolete.
    
    Removing this code enables the removal of the partition suspend code
    which temporarily onlines all present CPUs.
    
    Fixes: 3aa565f53c39 ("powerpc/pseries: Add hooks to put the CPU into an appropriate offline state")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200612051238.1007764-2-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 358d38e35d6daee7c06cef75cadd751a98de62b2
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Wed Jul 8 14:11:40 2020 +0300

    kernfs: do not call fsnotify() with name without a parent
    
    [ Upstream commit 9991bb84b27a2594187898f261866cfc50255454 ]
    
    When creating an FS_MODIFY event on inode itself (not on parent)
    the file_name argument should be NULL.
    
    The change to send a non NULL name to inode itself was done on purpuse
    as part of another commit, as Tejun writes: "...While at it, supply the
    target file name to fsnotify() from kernfs_node->name.".
    
    But this is wrong practice and inconsistent with inotify behavior when
    watching a single file.  When a child is being watched (as opposed to the
    parent directory) the inotify event should contain the watch descriptor,
    but not the file name.
    
    Fixes: df6a58c5c5aa ("kernfs: don't depend on d_find_any_alias()...")
    Link: https://lore.kernel.org/r/20200708111156.24659-5-amir73il@gmail.com
    Acked-by: Tejun Heo <tj@kernel.org>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc2599182f8ec577ca81a6de40349e94fb9734df
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 8 14:58:57 2020 +0300

    mwifiex: Prevent memory corruption handling keys
    
    [ Upstream commit e18696786548244914f36ec3c46ac99c53df99c3 ]
    
    The length of the key comes from the network and it's a 16 bit number.  It
    needs to be capped to prevent a buffer overflow.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200708115857.GA13729@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63f6498a979a51a64dfdce9b04bceb999745a182
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Tue Jul 14 12:31:45 2020 -0700

    bpfilter: Initialize pos variable
    
    [ Upstream commit a4fa458950b40d3849946daa32466392811a3716 ]
    
    Make sure 'pos' is initialized to zero before calling kernel_write().
    
    Fixes: d2ba09c17a06 ("net: add skeleton of bpfilter kernel module")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a3c6b8c298770c36b37c902f1717ef68682ff2c
Author: John Garry <john.garry@huawei.com>
Date:   Thu Jul 9 20:23:19 2020 +0800

    scsi: scsi_debug: Add check for sdebug_max_queue during module init
    
    [ Upstream commit c87bf24cfb60bce27b4d2c7e56ebfd86fb9d16bb ]
    
    sdebug_max_queue should not exceed SDEBUG_CANQUEUE, otherwise crashes like
    this can be triggered by passing an out-of-range value:
    
    Hardware name: Huawei D06 /D06, BIOS Hisilicon D06 UEFI RC0 - V1.16.01 03/15/2019
     pstate: 20400009 (nzCv daif +PAN -UAO BTYPE=--)
     pc : schedule_resp+0x2a4/0xa70 [scsi_debug]
     lr : schedule_resp+0x52c/0xa70 [scsi_debug]
     sp : ffff800022ab36f0
     x29: ffff800022ab36f0 x28: ffff0023a935a610
     x27: ffff800008e0a648 x26: 0000000000000003
     x25: ffff0023e84f3200 x24: 00000000003d0900
     x23: 0000000000000000 x22: 0000000000000000
     x21: ffff0023be60a320 x20: ffff0023be60b538
     x19: ffff800008e13000 x18: 0000000000000000
     x17: 0000000000000000 x16: 0000000000000000
     x15: 0000000000000000 x14: 0000000000000000
     x13: 0000000000000000 x12: 0000000000000000
     x11: 0000000000000000 x10: 0000000000000000
     x9 : 0000000000000001 x8 : 0000000000000000
     x7 : 0000000000000000 x6 : 00000000000000c1
     x5 : 0000020000200000 x4 : dead0000000000ff
     x3 : 0000000000000200 x2 : 0000000000000200
     x1 : ffff800008e13d88 x0 : 0000000000000000
     Call trace:
    schedule_resp+0x2a4/0xa70 [scsi_debug]
    scsi_debug_queuecommand+0x2c4/0x9e0 [scsi_debug]
    scsi_queue_rq+0x698/0x840
    __blk_mq_try_issue_directly+0x108/0x228
    blk_mq_request_issue_directly+0x58/0x98
    blk_mq_try_issue_list_directly+0x5c/0xf0
    blk_mq_sched_insert_requests+0x18c/0x200
    blk_mq_flush_plug_list+0x11c/0x190
    blk_flush_plug_list+0xdc/0x110
    blk_finish_plug+0x38/0x210
    blkdev_direct_IO+0x450/0x4d8
    generic_file_read_iter+0x84/0x180
    blkdev_read_iter+0x3c/0x50
    aio_read+0xc0/0x170
    io_submit_one+0x5c8/0xc98
    __arm64_sys_io_submit+0x1b0/0x258
    el0_svc_common.constprop.3+0x68/0x170
    do_el0_svc+0x24/0x90
    el0_sync_handler+0x13c/0x1a8
    el0_sync+0x158/0x180
     Code: 528847e0 72a001e0 6b00003f 540018cd (3941c340)
    
    In addition, it should not be less than 1.
    
    So add checks for these, and fail the module init for those cases.
    
    [mkp: changed if condition to match error message]
    
    Link: https://lore.kernel.org/r/1594297400-24756-2-git-send-email-john.garry@huawei.com
    Fixes: c483739430f1 ("scsi_debug: add multiple queue support")
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b62846a209d85790743d586b1e55048092824482
Author: Tom Rix <trix@redhat.com>
Date:   Sun Jul 12 08:24:53 2020 -0700

    drm/bridge: sil_sii8620: initialize return of sii8620_readb
    
    [ Upstream commit 02cd2d3144653e6e2a0c7ccaa73311e48e2dc686 ]
    
    clang static analysis flags this error
    
    sil-sii8620.c:184:2: warning: Undefined or garbage value
      returned to caller [core.uninitialized.UndefReturn]
            return ret;
            ^~~~~~~~~~
    
    sii8620_readb calls sii8620_read_buf.
    sii8620_read_buf can return without setting its output
    pararmeter 'ret'.
    
    So initialize ret.
    
    Fixes: ce6e153f414a ("drm/bridge: add Silicon Image SiI8620 driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200712152453.27510-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43e8b3c268aaa53876303c1adcb1585524d3a42c
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Tue Jun 9 00:22:26 2020 +0800

    mmc: sdhci-of-arasan: Add missed checks for devm_clk_register()
    
    [ Upstream commit c99e1d0c91ac8d7db3062ea1af315f21295701d7 ]
    
    These functions do not check the return value of devm_clk_register():
      - sdhci_arasan_register_sdcardclk()
      - sdhci_arasan_register_sampleclk()
    
    Therefore, add the missed checks to fix them.
    
    Fixes: c390f2110adf1 ("mmc: sdhci-of-arasan: Add ability to export card clock")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20200608162226.3259186-1-hslester96@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adb10d0dc59271c37593bc66b20a803d5fe4c014
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Jul 8 15:38:00 2020 +0200

    phy: exynos5-usbdrd: Calibrating makes sense only for USB2.0 PHY
    
    [ Upstream commit dcbabfeb17c3c2fdb6bc92a3031ecd37df1834a8 ]
    
    PHY calibration is needed only for USB2.0 (UTMI) PHY, so skip calling
    calibration code when phy_calibrate() is called for USB3.0 (PIPE3) PHY.
    
    Fixes: d8c80bb3b55b ("phy: exynos5-usbdrd: Calibrate LOS levels for exynos5420/5800")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20200708133800.3336-1-m.szyprowski@samsung.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4fc32a7cebdc7ca6476db08905595e78f7069be
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Wed Jul 8 17:57:44 2020 +0900

    dt-bindings: phy: uniphier: Fix incorrect clocks and clock-names for PXs3 usb3-hsphy
    
    [ Upstream commit 03815930c162561a5c204494b4160d6ccf631b0b ]
    
    The usb3-hsphy for PXs3 SoC needs to accept 3 clocks like usb3-ssphy.
    
    Fixes: 134ab2845acb ("dt-bindings: phy: Convert UniPhier USB3-PHY conroller to json-schema")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Link: https://lore.kernel.org/r/1594198664-29381-1-git-send-email-hayashi.kunihiko@socionext.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84cbf55c6744499d79d4704659c3b6870a42549e
Author: Peter Chen <peter.chen@nxp.com>
Date:   Fri Jul 3 14:46:00 2020 +0800

    phy: cadence: salvo: fix wrong bit definition
    
    [ Upstream commit 270ff6048f45759d31a7b62d3983b084153837f5 ]
    
    It fixes RX detect wakeup using USB3 device, otherwise, the USB3
    device can't wakeup USB PHY when the PHY is in 32Khz clock.
    
    Fixes: 50d35aa8c15f ("phy: cadence: salvo: add salvo phy driver")
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20200703064600.14181-1-peter.chen@nxp.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16835dc05924b46148ff30e5832a150cde779d86
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Sun Jul 12 01:53:17 2020 +0300

    drm: panel: simple: Fix bpc for LG LB070WV8 panel
    
    [ Upstream commit a6ae2fe5c9f9fd355a48fb7d21c863e5b20d6c9c ]
    
    The LG LB070WV8 panel incorrectly reports a 16 bits per component value,
    while the panel uses 8 bits per component. Fix it.
    
    Fixes: dd0150026901 ("drm/panel: simple: Add support for LG LB070WV8 800x480 7" panel")
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200711225317.28476-1-laurent.pinchart+renesas@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 413d189f9a3c3bab7a6a94de45112fe6b38fc87f
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Jul 2 13:45:00 2020 +0800

    leds: core: Flush scheduled work for system suspend
    
    [ Upstream commit 302a085c20194bfa7df52e0fe684ee0c41da02e6 ]
    
    Sometimes LED won't be turned off by LED_CORE_SUSPENDRESUME flag upon
    system suspend.
    
    led_set_brightness_nopm() uses schedule_work() to set LED brightness.
    However, there's no guarantee that the scheduled work gets executed
    because no one flushes the work.
    
    So flush the scheduled work to make sure LED gets turned off.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Fixes: 81fe8e5b73e3 ("leds: core: Add led_set_brightness_nosleep{nopm} functions")
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5450ee5eb1a760702c6f7c0ac5b3aed62bef00e
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Thu Jun 4 19:46:46 2020 +0200

    kobject: Avoid premature parent object freeing in kobject_cleanup()
    
    [ Upstream commit 079ad2fb4bf9eba8a0aaab014b49705cd7f07c66 ]
    
    If kobject_del() is invoked by kobject_cleanup() to delete the
    target kobject, it may cause its parent kobject to be freed
    before invoking the target kobject's ->release() method, which
    effectively means freeing the parent before dealing with the
    child entirely.
    
    That is confusing at best and it may also lead to functional
    issues if the callers of kobject_cleanup() are not careful enough
    about the order in which these calls are made, so avoid the
    problem by making kobject_cleanup() drop the last reference to
    the target kobject's parent at the end, after invoking the target
    kobject's ->release() method.
    
    [ rjw: Rewrite the subject and changelog, make kobject_cleanup()
      drop the parent reference only when __kobject_del() has been
      called. ]
    
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Fixes: 7589238a8cf3 ("Revert "software node: Simplify software_node_release() function"")
    Suggested-by: Rafael J. Wysocki <rafael@kernel.org>
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lore.kernel.org/r/1908555.IiAGLGrh1Z@kreacher
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49d6de41c9da98f63cb2599955e1389717aaa886
Author: Marek Vasut <marex@denx.de>
Date:   Sat Feb 29 23:16:49 2020 +0100

    drm/stm: repair runtime power management
    
    [ Upstream commit ebd267b2e3c25d5f93a08528b47c036569eb8744 ]
    
    Add missing pm_runtime_get_sync() into ltdc_crtc_atomic_enable() to
    match pm_runtime_put_sync() in ltdc_crtc_atomic_disable(), otherwise
    the LTDC might suspend via runtime PM, disable clock, and then fail
    to resume later on.
    
    The test which triggers it is roughly -- run qt5 application which
    uses eglfs platform and etnaviv, stop the application, sleep for 15
    minutes, run the application again. This leads to a timeout waiting
    for vsync, because the LTDC has suspended, but did not resume.
    
    Fixes: 35ab6cfbf211 ("drm/stm: support runtime power management")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Yannick Fertré <yannick.fertre@st.com>
    Cc: Philippe Cornu <philippe.cornu@st.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Vincent Abriou <vincent.abriou@st.com>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    To: dri-devel@lists.freedesktop.org
    Cc: linux-stm32@st-md-mailman.stormreply.com
    Cc: linux-arm-kernel@lists.infradead.org
    Acked-by: Philippe Cornu <philippe.cornu@st.com>
    Tested-by: Yannick Fertre <yannick.fertre@st.com>
    Signed-off-by: Benjamin Gaignard <benjamin.gaignard@st.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200229221649.90813-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f59499bcd70d0a64775ddf5b5fee74f37a13ca89
Author: Daniel T. Lee <danieltimlee@gmail.com>
Date:   Wed Jul 8 03:48:52 2020 +0900

    samples: bpf: Fix bpf programs with kprobe/sys_connect event
    
    [ Upstream commit af9bd3e3331b8af42b6606c75797d041ab39380c ]
    
    Currently, BPF programs with kprobe/sys_connect does not work properly.
    
    Commit 34745aed515c ("samples/bpf: fix kprobe attachment issue on x64")
    This commit modifies the bpf_load behavior of kprobe events in the x64
    architecture. If the current kprobe event target starts with "sys_*",
    add the prefix "__x64_" to the front of the event.
    
    Appending "__x64_" prefix with kprobe/sys_* event was appropriate as a
    solution to most of the problems caused by the commit below.
    
        commit d5a00528b58c ("syscalls/core, syscalls/x86: Rename struct
        pt_regs-based sys_*() to __x64_sys_*()")
    
    However, there is a problem with the sys_connect kprobe event that does
    not work properly. For __sys_connect event, parameters can be fetched
    normally, but for __x64_sys_connect, parameters cannot be fetched.
    
        ffffffff818d3520 <__x64_sys_connect>:
        ffffffff818d3520: e8 fb df 32 00        callq   0xffffffff81c01520
        <__fentry__>
        ffffffff818d3525: 48 8b 57 60           movq    96(%rdi), %rdx
        ffffffff818d3529: 48 8b 77 68           movq    104(%rdi), %rsi
        ffffffff818d352d: 48 8b 7f 70           movq    112(%rdi), %rdi
        ffffffff818d3531: e8 1a ff ff ff        callq   0xffffffff818d3450
        <__sys_connect>
        ffffffff818d3536: 48 98                 cltq
        ffffffff818d3538: c3                    retq
        ffffffff818d3539: 0f 1f 80 00 00 00 00  nopl    (%rax)
    
    As the assembly code for __x64_sys_connect shows, parameters should be
    fetched and set into rdi, rsi, rdx registers prior to calling
    __sys_connect.
    
    Because of this problem, this commit fixes the sys_connect event by
    first getting the value of the rdi register and then the value of the
    rdi, rsi, and rdx register through an offset based on that value.
    
    Fixes: 34745aed515c ("samples/bpf: fix kprobe attachment issue on x64")
    Signed-off-by: Daniel T. Lee <danieltimlee@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200707184855.30968-2-danieltimlee@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c7ca8d75dce7af44ebc1d212c75e74947ed3e7d
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Thu Jun 25 18:14:55 2020 -0500

    PCI: Fix pci_cfg_wait queue locking problem
    
    [ Upstream commit 2a7e32d0547f41c5ce244f84cf5d6ca7fccee7eb ]
    
    The pci_cfg_wait queue is used to prevent user-space config accesses to
    devices while they are recovering from reset.
    
    Previously we used these operations on pci_cfg_wait:
    
      __add_wait_queue(&pci_cfg_wait, ...)
      __remove_wait_queue(&pci_cfg_wait, ...)
      wake_up_all(&pci_cfg_wait)
    
    The wake_up acquires the wait queue lock, but the add and remove do not.
    
    Originally these were all protected by the pci_lock, but cdcb33f98244
    ("PCI: Avoid possible deadlock on pci_lock and p->pi_lock"), moved
    wake_up_all() outside pci_lock, so it could race with add/remove
    operations, which caused occasional kernel panics, e.g., during vfio-pci
    hotplug/unplug testing:
    
      Unable to handle kernel read from unreadable memory at virtual address ffff802dac469000
    
    Resolve this by using wait_event() instead of __add_wait_queue() and
    __remove_wait_queue().  The wait queue lock is held by both wait_event()
    and wake_up_all(), so it provides mutual exclusion.
    
    Fixes: cdcb33f98244 ("PCI: Avoid possible deadlock on pci_lock and p->pi_lock")
    Link: https://lore.kernel.org/linux-pci/79827f2f-9b43-4411-1376-b9063b67aee3@huawei.com/T/#u
    Based-on: https://lore.kernel.org/linux-pci/20191210031527.40136-1-zhengxiang9@huawei.com/
    Based-on-patch-by: Xiang Zheng <zhengxiang9@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Tested-by: Xiang Zheng <zhengxiang9@huawei.com>
    Cc: Heyi Guo <guoheyi@huawei.com>
    Cc: Biaoxiang Ye <yebiaoxiang@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e36653b51177223b2ee654a77136d9ae35c35a72
Author: Zhu Yanjun <yanjunz@mellanox.com>
Date:   Tue Jun 30 15:36:05 2020 +0300

    RDMA/rxe: Skip dgid check in loopback mode
    
    [ Upstream commit 5c99274be8864519328aa74bc550ba410095bc1c ]
    
    In the loopback tests, the following call trace occurs.
    
     Call Trace:
      __rxe_do_task+0x1a/0x30 [rdma_rxe]
      rxe_qp_destroy+0x61/0xa0 [rdma_rxe]
      rxe_destroy_qp+0x20/0x60 [rdma_rxe]
      ib_destroy_qp_user+0xcc/0x220 [ib_core]
      uverbs_free_qp+0x3c/0xc0 [ib_uverbs]
      destroy_hw_idr_uobject+0x24/0x70 [ib_uverbs]
      uverbs_destroy_uobject+0x43/0x1b0 [ib_uverbs]
      uobj_destroy+0x41/0x70 [ib_uverbs]
      __uobj_get_destroy+0x39/0x70 [ib_uverbs]
      ib_uverbs_destroy_qp+0x88/0xc0 [ib_uverbs]
      ib_uverbs_handler_UVERBS_METHOD_INVOKE_WRITE+0xb9/0xf0 [ib_uverbs]
      ib_uverbs_cmd_verbs+0xb16/0xc30 [ib_uverbs]
    
    The root cause is that the actual RDMA connection is not created in the
    loopback tests and the rxe_match_dgid will fail randomly.
    
    To fix this call trace which appear in the loopback tests, skip check of
    the dgid.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20200630123605.446959-1-leon@kernel.org
    Signed-off-by: Zhu Yanjun <yanjunz@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d283e10b30fb1bf9ffe6d6434b9eefd9f64fb9e
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Jun 29 14:47:18 2020 -0700

    xfs: fix reflink quota reservation accounting error
    
    [ Upstream commit 83895227aba1ade33e81f586aa7b6b1e143096a5 ]
    
    Quota reservations are supposed to account for the blocks that might be
    allocated due to a bmap btree split.  Reflink doesn't do this, so fix
    this to make the quota accounting more accurate before we start
    rearranging things.
    
    Fixes: 862bb360ef56 ("xfs: reflink extents from one file to another")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95c286034452ac00bfbbadf1881b1e826346ebba
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Jun 29 14:47:17 2020 -0700

    xfs: don't eat an EIO/ENOSPC writeback error when scrubbing data fork
    
    [ Upstream commit eb0efe5063bb10bcb653e4f8e92a74719c03a347 ]
    
    The data fork scrubber calls filemap_write_and_wait to flush dirty pages
    and delalloc reservations out to disk prior to checking the data fork's
    extent mappings.  Unfortunately, this means that scrub can consume the
    EIO/ENOSPC errors that would otherwise have stayed around in the address
    space until (we hope) the writer application calls fsync to persist data
    and collect errors.  The end result is that programs that wrote to a
    file might never see the error code and proceed as if nothing were
    wrong.
    
    xfs_scrub is not in a position to notify file writers about the
    writeback failure, and it's only here to check metadata, not file
    contents.  Therefore, if writeback fails, we should stuff the error code
    back into the address space so that an fsync by the writer application
    can pick that up.
    
    Fixes: 99d9d8d05da2 ("xfs: scrub inode block mappings")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ff3281d903fd2bcbeea707a83cf0c5e3612422d
Author: Brian Foster <bfoster@redhat.com>
Date:   Mon Jun 29 14:44:36 2020 -0700

    xfs: preserve rmapbt swapext block reservation from freed blocks
    
    [ Upstream commit f74681ba2006434be195402e0b15fc5763cddd7e ]
    
    The rmapbt extent swap algorithm remaps individual extents between
    the source inode and the target to trigger reverse mapping metadata
    updates. If either inode straddles a format or other bmap allocation
    boundary, the individual unmap and map cycles can trigger repeated
    bmap block allocations and frees as the extent count bounces back
    and forth across the boundary. While net block usage is bound across
    the swap operation, this behavior can prematurely exhaust the
    transaction block reservation because it continuously drains as the
    transaction rolls. Each allocation accounts against the reservation
    and each free returns to global free space on transaction roll.
    
    The previous workaround to this problem attempted to detect this
    boundary condition and provide surplus block reservation to
    acommodate it. This is insufficient because more remaps can occur
    than implied by the extent counts; if start offset boundaries are
    not aligned between the two inodes, for example.
    
    To address this problem more generically and dynamically, add a
    transaction accounting mode that returns freed blocks to the
    transaction reservation instead of the superblock counters on
    transaction roll and use it when the rmapbt based algorithm is
    active. This allows the chain of remap transactions to preserve the
    block reservation based own its own frees and prevent premature
    exhaustion regardless of the remap pattern. Note that this is only
    safe for superblocks with lazy sb accounting, but the latter is
    required for v5 supers and the rmap feature depends on v5.
    
    Fixes: b3fed434822d0 ("xfs: account format bouncing into rmapbt swapext tx reservation")
    Root-caused-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4173d4194d7731eed1394aa6ad56039f597aaf66
Author: Dariusz Marcinkiewicz <darekm@google.com>
Date:   Mon Jun 22 13:46:36 2020 +0200

    media: cros-ec-cec: do not bail on device_init_wakeup failure
    
    [ Upstream commit 6f01dfb760c027d5dd6199d91ee9599f2676b5c6 ]
    
    Do not fail probing when device_init_wakeup fails.
    
    device_init_wakeup fails when the device is already enabled as wakeup
    device. Hence, the driver fails to probe the device if:
    - The device has already been enabled for wakeup (by e.g. sysfs)
    - The driver has been unloaded and is being loaded again.
    
    This goal of the patch is to fix the above cases.
    
    Overwhelming majority of the drivers do not check device_init_wakeup
    return code.
    
    Fixes: cd70de2d356ee ("media: platform: Add ChromeOS EC CEC driver")
    Signed-off-by: Dariusz Marcinkiewicz <darekm@google.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 050f814243b67a0bd96b897402ab684fe07010b4
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Thu May 28 08:41:47 2020 +0200

    media: exynos4-is: Add missed check for pinctrl_lookup_state()
    
    [ Upstream commit 18ffec750578f7447c288647d7282c7d12b1d969 ]
    
    fimc_md_get_pinctrl() misses a check for pinctrl_lookup_state().
    Add the missed check to fix it.
    
    Fixes: 4163851f7b99 ("[media] s5p-fimc: Use pinctrl API for camera ports configuration]")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 200a75ac7e466f1c30e5b9fc88afb67fe6ba3227
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Sat Jun 6 16:39:18 2020 +0200

    media: tvp5150: Add missed media_entity_cleanup()
    
    [ Upstream commit d000e9b5e4a23dd700b3f58a4738c94bb5179ff0 ]
    
    This driver does not call media_entity_cleanup() in the error handler
    of tvp5150_registered() and tvp5150_remove(), while it has called
    media_entity_pads_init() at first.
    Add the missed calls to fix it.
    
    Fixes: 0556f1d580d4 ("media: tvp5150: add input source selection of_graph support")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Reviewed-by: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc2ac5c3a96a8bfbcbfffc50502d475ac3f6e520
Author: Helen Koike <helen.koike@collabora.com>
Date:   Wed Jun 17 20:08:01 2020 +0200

    media: staging: rkisp1: rsz: fix resolution limitation on sink pad
    
    [ Upstream commit 906dceb48dfa1e7c99c32e6b25878d47023e916b ]
    
    Resizer sink pad is limited by what the ISP can generate.
    The configurations describes what the resizer can produce.
    
    This was tested on a Scarlet device with ChromiumOs, where the selfpath
    receives 2592x1944 and produces 1600x1200 (which isn't possible without
    this fix).
    
    Fixes: 56e3b29f9f6b2 ("media: staging: rkisp1: add streaming paths")
    Signed-off-by: Helen Koike <helen.koike@collabora.com>
    Reviewed-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39e5b396bc9d50518cd7897579bf8f9e5a072ef5
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Thu Jun 18 13:35:15 2020 +0200

    media: staging: rkisp1: rsz: supported formats are the isp's src formats, not sink formats
    
    [ Upstream commit 7b8ce1f2763b9351a4cb04b802835470e76770a5 ]
    
    The rkisp1_resizer's enum callback 'rkisp1_rsz_enum_mbus_code'
    calls the enum callback of the 'rkisp1_isp' on it's video sink pad.
    This is a bug, the resizer should support the same formats
    supported by the 'rkisp1_isp' on the source pad (not the sink pad).
    
    Fixes: 56e3b29f9f6b "media: staging: rkisp1: add streaming paths"
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Acked-by: Helen Koike <helen.koike@collabora.com>
    Reviewed-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94f0fc91b3fd6d6b6c1f264512e800f294af43d5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jun 19 16:30:07 2020 +0200

    media: allegro: Fix some NULL vs IS_ERR() checks in probe
    
    [ Upstream commit d93d45ab716e4107056be54969c8c70e50a8346d ]
    
    The devm_ioremap() function doesn't return error pointers, it returns
    NULL on error.
    
    Fixes: f20387dfd065 ("media: allegro: add Allegro DVT video IP core driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f32f439a33ffaa7eef8089bea900b4f2e4dd159
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri May 8 16:40:22 2020 +0200

    media: firewire: Using uninitialized values in node_probe()
    
    [ Upstream commit 2505a210fc126599013aec2be741df20aaacc490 ]
    
    If fw_csr_string() returns -ENOENT, then "name" is uninitialized.  So
    then the "strlen(model_names[i]) <= name_len" is true because strlen()
    is unsigned and -ENOENT is type promoted to a very high positive value.
    Then the "strncmp(name, model_names[i], name_len)" uses uninitialized
    data because "name" is uninitialized.
    
    Fixes: 92374e886c75 ("[media] firedtv: drop obsolete backend abstraction")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 101df88a583759bd151bc770c7fc3390f6e317df
Author: Julian Anastasov <ja@ssi.bg>
Date:   Wed Jul 1 18:17:19 2020 +0300

    ipvs: allow connection reuse for unconfirmed conntrack
    
    [ Upstream commit f0a5e4d7a594e0fe237d3dfafb069bb82f80f42f ]
    
    YangYuxi is reporting that connection reuse
    is causing one-second delay when SYN hits
    existing connection in TIME_WAIT state.
    Such delay was added to give time to expire
    both the IPVS connection and the corresponding
    conntrack. This was considered a rare case
    at that time but it is causing problem for
    some environments such as Kubernetes.
    
    As nf_conntrack_tcp_packet() can decide to
    release the conntrack in TIME_WAIT state and
    to replace it with a fresh NEW conntrack, we
    can use this to allow rescheduling just by
    tuning our check: if the conntrack is
    confirmed we can not schedule it to different
    real server and the one-second delay still
    applies but if new conntrack was created,
    we are free to select new real server without
    any delays.
    
    YangYuxi lists some of the problem reports:
    
    - One second connection delay in masquerading mode:
    https://marc.info/?t=151683118100004&r=1&w=2
    
    - IPVS low throughput #70747
    https://github.com/kubernetes/kubernetes/issues/70747
    
    - Apache Bench can fill up ipvs service proxy in seconds #544
    https://github.com/cloudnativelabs/kube-router/issues/544
    
    - Additional 1s latency in `host -> service IP -> pod`
    https://github.com/kubernetes/kubernetes/issues/90854
    
    Fixes: f719e3754ee2 ("ipvs: drop first packet to redirect conntrack")
    Co-developed-by: YangYuxi <yx.atom1@gmail.com>
    Signed-off-by: YangYuxi <yx.atom1@gmail.com>
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 013c7b012461c73ef55294c2637ebac1fa574acf
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Jun 26 06:05:53 2020 +0200

    scsi: eesox: Fix different dev_id between request_irq() and free_irq()
    
    [ Upstream commit 86f2da1112ccf744ad9068b1d5d9843faf8ddee6 ]
    
    The dev_id used in request_irq() and free_irq() should match. Use 'info' in
    both cases.
    
    Link: https://lore.kernel.org/r/20200626040553.944352-1-christophe.jaillet@wanadoo.fr
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64c6cd408d9827646d8968e996b72cb86f1a96ed
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Jun 26 05:59:48 2020 +0200

    scsi: powertec: Fix different dev_id between request_irq() and free_irq()
    
    [ Upstream commit d179f7c763241c1dc5077fca88ddc3c47d21b763 ]
    
    The dev_id used in request_irq() and free_irq() should match. Use 'info' in
    both cases.
    
    Link: https://lore.kernel.org/r/20200626035948.944148-1-christophe.jaillet@wanadoo.fr
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b470925a9dcf47ea9a84ba090099e27b3438346
Author: Jason Gunthorpe <jgg@nvidia.com>
Date:   Fri Jun 26 14:49:10 2020 -0300

    RDMA/core: Fix bogus WARN_ON during ib_unregister_device_queued()
    
    [ Upstream commit 0cb42c0265837fafa2b4f302c8a7fed2631d7869 ]
    
    ib_unregister_device_queued() can only be used by drivers using the new
    dealloc_device callback flow, and it has a safety WARN_ON to ensure
    drivers are using it properly.
    
    However, if unregister and register are raced there is a special
    destruction path that maintains the uniform error handling semantic of
    'caller does ib_dealloc_device() on failure'. This requires disabling the
    dealloc_device callback which triggers the WARN_ON.
    
    Instead of using NULL to disable the callback use a special function
    pointer so the WARN_ON does not trigger.
    
    Fixes: d0899892edd0 ("RDMA/device: Provide APIs from the core code to help unregistration")
    Link: https://lore.kernel.org/r/0-v1-a36d512e0a99+762-syz_dealloc_driver_jgg@nvidia.com
    Reported-by: syzbot+4088ed905e4ae2b0e13b@syzkaller.appspotmail.com
    Suggested-by: Hillf Danton <hdanton@sina.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cb26b10f5b7859cddfdf9d7ba993350e4b9e8fc
Author: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Date:   Thu Jun 25 15:34:43 2020 +0300

    dma-buf: fix dma-fence-chain out of order test
    
    [ Upstream commit 4cca2e641641767593583749dec26bfebd8f6f2d ]
    
    There was probably a misunderstand on how the dma-fence-chain is
    supposed to work or what dma_fence_chain_find_seqno() is supposed to
    return.
    
    dma_fence_chain_find_seqno() is here to give us the fence to wait upon
    for a particular point in the timeline. The timeline progresses only
    when all the points prior to a given number have completed.
    
    Signed-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
    Fixes: dc2f7e67a28a5c ("dma-buf: Exercise dma-fence-chain under selftests")
    Link: https://patchwork.freedesktop.org/patch/372960/
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b48e8758634a372a2297af6879acf4426beb9f4f
Author: Tony Nguyen <anthony.l.nguyen@intel.com>
Date:   Wed Jun 24 09:04:22 2020 -0700

    iavf: Fix updating statistics
    
    [ Upstream commit 9358076642f14cec8c414850d5a909cafca3a9d6 ]
    
    Commit bac8486116b0 ("iavf: Refactor the watchdog state machine") inverted
    the logic for when to update statistics. Statistics should be updated when
    no other commands are pending, instead they were only requested when a
    command was processed. iavf_request_stats() would see a pending request
    and not request statistics to be updated. This caused statistics to never
    be updated; fix the logic.
    
    Fixes: bac8486116b0 ("iavf: Refactor the watchdog state machine")
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c5da372e87ec237f4c28fb1c0609cfd1394c21f
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jun 18 14:19:53 2020 +0000

    iavf: fix error return code in iavf_init_get_resources()
    
    [ Upstream commit 753f3884f253de6b6d3a516e6651bda0baf4aede ]
    
    Fix to return negative error code -ENOMEM from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: b66c7bc1cd4d ("iavf: Refactor init state machine")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 290ca6a856276039d02502bb046dd0ad0fce72d5
Author: Phil Elwell <phil@raspberrypi.com>
Date:   Mon Jun 29 17:09:06 2020 +0200

    staging: vchiq_arm: Add a matching unregister call
    
    [ Upstream commit 5d9272e28a9a6117fb63f5f930991304765caa32 ]
    
    All the registered children of vchiq have a corresponding call to
    platform_device_unregister except bcm2835_audio. Fix that.
    
    Fixes: 25c7597af20d ("staging: vchiq_arm: Register a platform device for audio")
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.com>
    Signed-off-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Link: https://lore.kernel.org/r/20200629150945.10720-9-nsaenzjulienne@suse.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6545d3462e35184eb7f52fbf099ba7c4dcaf1416
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jun 24 13:07:10 2020 +0100

    drm/radeon: fix array out-of-bounds read and write issues
    
    [ Upstream commit 7ee78aff9de13d5dccba133f4a0de5367194b243 ]
    
    There is an off-by-one bounds check on the index into arrays
    table->mc_reg_address and table->mc_reg_table_entry[k].mc_data[j] that
    can lead to reads and writes outside of arrays. Fix the bound checking
    off-by-one error.
    
    Addresses-Coverity: ("Out-of-bounds read/write")
    Fixes: cc8dbbb4f62a ("drm/radeon: add dpm support for CI dGPUs (v2)")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9707e1a7f8ac6b9c762fe0cdd9f00d034502a9ea
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jun 24 15:54:18 2020 +0100

    drm/amdgpu: ensure 0 is returned for success in jpeg_v2_5_wait_for_idle
    
    [ Upstream commit 57f01856645afe4c3d0f9915ee2bb043e8dd7982 ]
    
    In the cases where adev->jpeg.num_jpeg_inst is zero or the condition
    adev->jpeg.harvest_config & (1 << i) is always non-zero the variable
    ret is never set to an error condition and the function returns
    an uninitialized value in ret.  Since the only exit condition at
    the end if the function is a success then explicitly return
    0 rather than a potentially uninitialized value in ret.
    
    Addresses-Coverity: ("Uninitialized scalar variable")
    Fixes: 14f43e8f88c5 ("drm/amdgpu: move JPEG2.5 out from VCN2.5")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ee5083de2019faaa4396a3af055936bc9dd7021
Author: Chen Tao <chentao107@huawei.com>
Date:   Wed Jun 17 18:51:30 2020 +0800

    drm/amdgpu/debugfs: fix memory leak when amdgpu_virt_enable_access_debugfs failed
    
    [ Upstream commit 888e32d71115e26b57bdcbc717c68e9c5026bac3 ]
    
    Fix memory leak in amdgpu_debugfs_gpr_read not freeing data when
    amdgpu_virt_enable_access_debugfs failed.
    
    Fixes: 95a2f917387a2 ("drm/amdgpu: restrict debugfs register access under SR-IOV")
    Signed-off-by: Chen Tao <chentao107@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e3b4e09c9b9299ac81c0d4ccc9e946ddcdf5617
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Jun 29 15:54:51 2020 -0700

    scsi: qla2xxx: Make __qla2x00_alloc_iocbs() initialize 32 bits of request_t.handle
    
    [ Upstream commit f8f12bda53eae87ca2dea42b36d19e48c9851b9f ]
    
    The request_t 'handle' member is 32-bits wide, hence use wrt_reg_dword().
    Change the cast in the wrt_reg_byte() call to make it clear that a regular
    pointer is casted to an __iomem pointer.
    
    Note: 'pkt' points to I/O memory for the qlafx00 adapter family and to
    coherent memory for all other adapter families.
    
    This patch fixes the following Coverity complaint:
    
    CID 358864 (#1 of 1): Reliance on integer endianness (INCOMPATIBLE_CAST)
    incompatible_cast: Pointer &pkt->handle points to an object whose effective
    type is unsigned int (32 bits, unsigned) but is dereferenced as a narrower
    unsigned short (16 bits, unsigned). This may lead to unexpected results
    depending on machine endianness.
    
    Link: https://lore.kernel.org/r/20200629225454.22863-7-bvanassche@acm.org
    Fixes: 8ae6d9c7eb10 ("[SCSI] qla2xxx: Enhancements to support ISPFx00.")
    Cc: Nilesh Javali <njavali@marvell.com>
    Cc: Quinn Tran <qutran@marvell.com>
    Cc: Himanshu Madhani <himanshu.madhani@oracle.com>
    Cc: Martin Wilck <mwilck@suse.com>
    Cc: Roman Bolshakov <r.bolshakov@yadro.com>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da3684003dc1761813c60ddcd69c2dbc4cbec6b9
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Jun 29 23:45:56 2020 -0400

    tracing: Move pipe reference to trace array instead of current_tracer
    
    [ Upstream commit 7ef282e05132d56b6f6b71e3873f317664bea78b ]
    
    If a process has the trace_pipe open on a trace_array, the current tracer
    for that trace array should not be changed. This was original enforced by a
    global lock, but when instances were introduced, it was moved to the
    current_trace. But this structure is shared by all instances, and a
    trace_pipe is for a single instance. There's no reason that a process that
    has trace_pipe open on one instance should prevent another instance from
    changing its current tracer. Move the reference counter to the trace_array
    instead.
    
    This is marked as "Fixes" but is more of a clean up than a true fix.
    Backport if you want, but its not critical.
    
    Fixes: cf6ab6d9143b1 ("tracing: Add ref count to tracer for when they are being read by pipe")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d579cc130a281d9fe7f24a4f4f15e282bc33f669
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Fri Jun 26 21:17:04 2020 +0300

    net: ethernet: ti: am65-cpsw-nuss: restore vlan configuration while down/up
    
    [ Upstream commit 7bcffde02152dd3cb180f6f3aef27e8586b2a905 ]
    
    The vlan configuration is not restored after interface down/up sequence.
    
    Steps to check:
     # ip link add link eth0 name eth0.100 type vlan id 100
     # ifconfig eth0 down
     # ifconfig eth0 up
    
    This patch fixes it, restoring vlan ALE entries on .ndo_open().
    
    Fixes: 93a76530316a ("net: ethernet: ti: introduce am65x/j721e gigabit eth subsystem driver")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33333c08d28a2ae7a988ddd88f2b545a3b7c4d1d
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jun 25 13:37:04 2020 -0700

    lkdtm: Make arch-specific tests always available
    
    [ Upstream commit ae56942c14740c2963222efdc36c667ab19555ef ]
    
    I'd like arch-specific tests to XFAIL when on a mismatched architecture
    so that we can more easily compare test coverage across all systems.
    Lacking kernel configs or CPU features count as a FAIL, not an XFAIL.
    
    Additionally fixes a build failure under 32-bit UML.
    
    Fixes: b09511c253e5 ("lkdtm: Add a DOUBLE_FAULT crash type on x86")
    Fixes: cea23efb4de2 ("lkdtm/bugs: Make double-fault test always available")
    Fixes: 6cb6982f42cb ("lkdtm: arm64: test kernel pointer authentication")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200625203704.317097-5-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4c1f53143275b65b3c97492fd5110798296108f
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jun 25 13:37:03 2020 -0700

    selftests/lkdtm: Reset WARN_ONCE to avoid false negatives
    
    [ Upstream commit 4fccc8c0ff740e62343b6de38426a48b345b95f4 ]
    
    Since we expect to see warnings every time for many tests, just reset
    the WARN_ONCE flags each time the script runs.
    
    Fixes: 46d1a0f03d66 ("selftests/lkdtm: Add tests for LKDTM targets")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200625203704.317097-4-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5397915bf77b63222899dc55e7e76a2c63678a4b
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Jun 25 13:37:01 2020 -0700

    lkdtm: Avoid more compiler optimizations for bad writes
    
    [ Upstream commit 464e86b4abadfc490f426954b431e2ec6a9d7bd2 ]
    
    It seems at least Clang is able to throw away writes it knows are
    destined for read-only memory, which makes things like the WRITE_RO test
    fail, as the write gets elided. Instead, force the variable to be
    volatile, and make similar changes through-out other tests in an effort
    to avoid needing to repeat fixing these kinds of problems. Also includes
    pr_err() calls in failure paths so that kernel logs are more clear in
    the failure case.
    
    Reported-by: Prasad Sodagudi <psodagud@codeaurora.org>
    Suggested-by: Sami Tolvanen <samitolvanen@google.com>
    Fixes: 9ae113ce5faf ("lkdtm: add tests for additional page permissions")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20200625203704.317097-2-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe1f13b572b23581d49c61036c9ee36e0b0c4382
Author: Wang Hai <wanghai38@huawei.com>
Date:   Tue Jun 2 20:07:33 2020 +0800

    cxl: Fix kobject memleak
    
    [ Upstream commit 85c5cbeba8f4fb28e6b9bfb3e467718385f78f76 ]
    
    Currently the error return path from kobject_init_and_add() is not
    followed by a call to kobject_put() - which means we are leaking
    the kobject.
    
    Fix it by adding a call to kobject_put() in the error path of
    kobject_init_and_add().
    
    Fixes: b087e6190ddc ("cxl: Export optional AFU configuration record in sysfs")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Acked-by: Andrew Donnellan <ajd@linux.ibm.com>
    Acked-by: Frederic Barrat <fbarrat@linux.ibm.com>
    Link: https://lore.kernel.org/r/20200602120733.5943-1-wanghai38@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb52bc02e65dcf6d7c25d94e6c2892c4f8c69750
Author: Emil Velikov <emil.velikov@collabora.com>
Date:   Tue May 5 17:03:29 2020 +0100

    drm/mipi: use dcs write for mipi_dsi_dcs_set_tear_scanline
    
    [ Upstream commit 7a05c3b6d24b8460b3cec436cf1d33fac43c8450 ]
    
    The helper uses the MIPI_DCS_SET_TEAR_SCANLINE, although it's currently
    using the generic write. This does not look right.
    
    Perhaps some platforms don't distinguish between the two writers?
    
    Cc: Robert Chiras <robert.chiras@nxp.com>
    Cc: Vinay Simha BN <simhavcs@gmail.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Fixes: e83950816367 ("drm/dsi: Implement set tear scanline")
    Signed-off-by: Emil Velikov <emil.velikov@collabora.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200505160329.2976059-3-emil.l.velikov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdcfb32178164913dc948ca65e9c4af47f15d5be
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Jun 25 11:04:30 2020 +0800

    scsi: ufs: Disable WriteBooster capability for non-supported UFS devices
    
    [ Upstream commit a7f1e69d4974666ea40886ee4801aebb2729ea81 ]
    
    If a UFS device is not qualified to use WriteBooster, either due to wrong
    UFS version or device-specific quirks, then the capability in host shall be
    disabled to prevent any WriteBooster operations in the future.
    
    Link: https://lore.kernel.org/r/20200625030430.25048-1-stanley.chu@mediatek.com
    Fixes: 3d17b9b5ab11 ("scsi: ufs: Add write booster feature support")
    Tested-by: Steev Klimaszewski <steev@kali.org>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5118d2bbb8e7766605c20d4f6ef6912ad8fe9dd
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Jun 25 22:47:30 2020 +0200

    scsi: cumana_2: Fix different dev_id between request_irq() and free_irq()
    
    [ Upstream commit 040ab9c4fd0070cd5fa71ba3a7b95b8470db9b4d ]
    
    The dev_id used in request_irq() and free_irq() should match.  Use 'info'
    in both cases.
    
    Link: https://lore.kernel.org/r/20200625204730.943520-1-christophe.jaillet@wanadoo.fr
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Acked-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36428bc924e6360b1ebdec5ac8838379ca757ff6
Author: Mark Starovoytov <mstarovoitov@marvell.com>
Date:   Fri Jun 26 21:40:31 2020 +0300

    net: atlantic: MACSec offload statistics checkpatch fix
    
    [ Upstream commit 3a8b44546979cf682324bd2fd61e539f428911b4 ]
    
    This patch fixes a checkpatch warning.
    
    Fixes: aec0f1aac58e ("net: atlantic: MACSec offload statistics implementation")
    
    Signed-off-by: Mark Starovoytov <mstarovoitov@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10b8d2696578858486629b21411422fd75f7d952
Author: Fred Oh <fred.oh@linux.intel.com>
Date:   Thu Jun 25 14:13:02 2020 -0500

    ASoC: Intel: Boards: cml_rt1011_rt5682: use statically define codec config
    
    [ Upstream commit 8a473c39ae54c27e694a131c34a739d0f8aa5300 ]
    
    When the cml_rt1011_rt5682_dailink[].codecs pointer is overridden by
    a quirk with a devm allocated structure and the probe is deferred,
    in the next probe we will see an use-after-free condition
    (verified with KASAN). This can be avoided by using statically allocated
    configurations - which simplifies the code quite a bit as well.
    
    KASAN issue fixed.
    [   23.301373] cml_rt1011_rt5682 cml_rt1011_rt5682: sof_rt1011_quirk = f
    [   23.301875] ==================================================================
    [   23.302018] BUG: KASAN: use-after-free in snd_cml_rt1011_probe+0x23a/0x3d0 [snd_soc_cml_rt1011_rt5682]
    [   23.302178] Read of size 8 at addr ffff8881ec6acae0 by task kworker/0:2/105
    [   23.302320] CPU: 0 PID: 105 Comm: kworker/0:2 Not tainted 5.7.0-rc7-test+ #3
    [   23.302322] Hardware name: Google Helios/Helios, BIOS  01/21/2020
    [   23.302329] Workqueue: events deferred_probe_work_func
    [   23.302331] Call Trace:
    [   23.302339]  dump_stack+0x76/0xa0
    [   23.302345]  print_address_description.constprop.0.cold+0xd3/0x43e
    [   23.302351]  ? _raw_spin_lock_irqsave+0x7b/0xd0
    [   23.302355]  ? _raw_spin_trylock_bh+0xf0/0xf0
    [   23.302362]  ? snd_cml_rt1011_probe+0x23a/0x3d0 [snd_soc_cml_rt1011_rt5682]
    [   23.302365]  __kasan_report.cold+0x37/0x86
    [   23.302371]  ? snd_cml_rt1011_probe+0x23a/0x3d0 [snd_soc_cml_rt1011_rt5682]
    [   23.302375]  kasan_report+0x38/0x50
    [   23.302382]  snd_cml_rt1011_probe+0x23a/0x3d0 [snd_soc_cml_rt1011_rt5682]
    [   23.302389]  platform_drv_probe+0x66/0xc0
    
    Fixes: 629ba12e9998 ("ASoC: Intel: boards: split woofer and tweeter support")
    Suggested-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Fred Oh <fred.oh@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-12-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6046c52f1271c58fc3084110351baa6ea2a84f0
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jun 25 14:12:55 2020 -0500

    ASoC: Intel: bxt_rt298: add missing .owner field
    
    [ Upstream commit 88cee34b776f80d2da04afb990c2a28c36799c43 ]
    
    This field is required for ASoC cards. Not setting it will result in a
    module->name pointer being NULL and generate problems such as
    
    cat /proc/asound/modules
     0 (efault)
    
    Fixes: 76016322ec56 ('ASoC: Intel: Add Broxton-P machine driver')
    Reported-by: Jaroslav Kysela <perex@perex.cz>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-5-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ee90079d049ada0c2c21df851c6b1e07ff0f201
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jun 25 14:12:54 2020 -0500

    ASoC: Intel: sof_sdw: add missing .owner field
    
    [ Upstream commit fb4b42f68972d6bc905c8b6e21a43a490dedfca7 ]
    
    This field is required for ASoC cards. Not setting it will result in a
    module->name pointer being NULL and generate problems such as
    
    cat /proc/asound/modules
     0 (efault)
    
    Fixes: 52db12d193d4 ('ASoC: Intel: boards: add sof_sdw machine driver')
    Reported-by: Jaroslav Kysela <perex@perex.cz>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-4-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f678fb5fd3ba844d3059bef3b3563ce04f74f3a4
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jun 25 14:12:53 2020 -0500

    ASoC: Intel: cml_rt1011_rt5682: add missing .owner field
    
    [ Upstream commit 299120928897d6cb893c7165df7cd232d835e259 ]
    
    This field is required for ASoC cards. Not setting it will result in a
    module->name pointer being NULL and generate problems such as
    
    cat /proc/asound/modules
     0 (efault)
    
    Fixes: 17fe95d6df93 ('ASoC: Intel: boards: Add CML m/c using RT1011 and RT5682')
    Reported-by: Jaroslav Kysela <perex@perex.cz>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-3-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72425036a6c512b3c0e5029875992d940ca3bf61
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jun 25 14:12:52 2020 -0500

    ASoC: SOF: nocodec: add missing .owner field
    
    [ Upstream commit 8753889e2720c1ef7ebf03370e384f5bf5ff4fab ]
    
    This field is required for ASoC cards. Not setting it will result in a
    module->name pointer being NULL and generate problems such as
    
    cat /proc/asound/modules
     0 (efault)
    
    Fixes: 8017b8fd37bf ('ASoC: SOF: Add Nocodec machine driver support')
    Reported-by: Jaroslav Kysela <perex@perex.cz>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20200625191308.3322-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37c77ff3b1cc35b4a08e6140184ce7e6bc9231b7
Author: Ioana Ciornei <ioana.ciornei@nxp.com>
Date:   Wed Jun 24 14:34:19 2020 +0300

    dpaa2-eth: fix condition for number of buffer acquire retries
    
    [ Upstream commit 0e5ad75b02d9341eb9ca22627247f9a02cc20d6f ]
    
    We should keep retrying to acquire buffers through the software portals
    as long as the function returns -EBUSY and the number of retries is
    __below__ DPAA2_ETH_SWP_BUSY_RETRIES.
    
    Fixes: ef17bd7cc0c8 ("dpaa2-eth: Avoid unbounded while loops")
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed3f590f2ac6d2740f3482656dfc335670d83a83
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Jun 24 17:39:57 2020 +0100

    staging: most: avoid null pointer dereference when iface is null
    
    [ Upstream commit e4463e49e29f43eecec86e2e2b2e2ab4feb7d867 ]
    
    In the case where the pointer iface is null then the reporting of this
    error will dereference iface when printing an error message causing which
    is not ideal.  Since the majority of callers to most_register_interface
    report an error when -EINVAL is returned a simple fix is to just remove
    the error message, I doubt it will be missed.
    
    Addresses-Coverity: ("Dereference after null check")
    Fixes: 57562a72414c ("Staging: most: add MOST driver's core module")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20200624163957.11676-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10738d622ef01c3fef20774960a2dff3b536e100
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Jun 3 18:41:22 2020 +0200

    media: omap3isp: Add missed v4l2_ctrl_handler_free() for preview_init_entities()
    
    [ Upstream commit dc7690a73017e1236202022e26a6aa133f239c8c ]
    
    preview_init_entities() does not call v4l2_ctrl_handler_free() when
    it fails.
    Add the missed function to fix it.
    
    Fixes: de1135d44f4f ("[media] omap3isp: CCDC, preview engine and resizer")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41013c90d84c8dad63ed0a7a43c87808481f76a7
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Jun 3 18:40:48 2020 +0200

    media: marvell-ccic: Add missed v4l2_async_notifier_cleanup()
    
    [ Upstream commit 4603a5b4a87ccd6fb90cbfa10195291cfcf6ba34 ]
    
    mccic_register() forgets to cleanup the notifier in its error handler.
    mccic_shutdown() also misses calling v4l2_async_notifier_cleanup().
    Add the missed calls to fix them.
    
    Fixes: 3eefe36cc00c ("media: marvell-ccic: use async notifier to get the sensor")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eadd4aa1c520b81b93ba4fcde55bebaee368c1ed
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu May 7 23:33:14 2020 +0200

    media: cxusb-analog: fix V4L2 dependency
    
    [ Upstream commit 1a55caf010c46d4f2073f9e92e97ef65358c16bf ]
    
    CONFIG_DVB_USB_CXUSB_ANALOG is a 'bool' symbol with a dependency on the
    tristate CONFIG_VIDEO_V4L2, which means it can be enabled as =y even
    when its dependency is =m. This leads to a link failure:
    
    drivers/media/usb/dvb-usb/cxusb-analog.o: In function `cxusb_medion_analog_init':
    cxusb-analog.c:(.text+0x92): undefined reference to `v4l2_subdev_call_wrappers'
    drivers/media/usb/dvb-usb/cxusb-analog.o: In function `cxusb_medion_register_analog':
    cxusb-analog.c:(.text+0x466): undefined reference to `v4l2_device_register'
    cxusb-analog.c:(.text+0x4c3): undefined reference to `v4l2_i2c_new_subdev'
    cxusb-analog.c:(.text+0x4fb): undefined reference to `v4l2_subdev_call_wrappers'
    ...
    
    Change the dependency only disallow the analog portion of the driver
    in that configuration.
    
    Fixes: e478d4054054 ("media: cxusb: add analog mode support for Medion MD95700")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b50202c0770ca33d08e08d2a7fa874aadc9e6c7b
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Jun 19 19:52:02 2020 +0000

    Bluetooth: btmtksdio: fix up firmware download sequence
    
    [ Upstream commit 737cd06072a72e8984e41af8e5919338d0c5bf2b ]
    
    Data RAM on the device have to be powered on before starting to download
    the firmware.
    
    Fixes: 9aebfd4a2200 ("Bluetooth: mediatek: add support for MediaTek MT7663S and MT7668S SDIO devices")
    Co-developed-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fb4ccc66e0106faff5ce41b7dba765e69c382f7
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Jun 19 19:52:01 2020 +0000

    Bluetooth: btusb: fix up firmware download sequence
    
    [ Upstream commit f645125711c80f9651e4a57403d799070c6ad13b ]
    
    Data RAM on the device have to be powered on before starting to download
    the firmware.
    
    Fixes: a1c49c434e15 ("Bluetooth: btusb: Add protocol support for MediaTek MT7668U USB devices")
    Co-developed-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Mark Chen <Mark-YW.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56704a6ba1c7aad5fbc4482e121b5fa94e9a84dc
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Mon Jun 22 17:03:31 2020 +0800

    ASoC: fsl_easrc: Fix uninitialized scalar variable in fsl_easrc_set_ctx_format
    
    [ Upstream commit 5748f4eb01a4df7a42024fe8bc7855f05febb7c5 ]
    
    The "ret" in fsl_easrc_set_ctx_format is not initialized, then
    the unknown value maybe returned by this function.
    
    Fixes: 955ac624058f ("ASoC: fsl_easrc: Add EASRC ASoC CPU DAI drivers")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Link: https://lore.kernel.org/r/1592816611-16297-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d304a3f78d1bd24f4207825e2e08f6b158009080
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue May 5 16:19:17 2020 +0200

    leds: lm355x: avoid enum conversion warning
    
    [ Upstream commit 985b1f596f9ed56f42b8c2280005f943e1434c06 ]
    
    clang points out that doing arithmetic between diffent enums is usually
    a mistake:
    
    drivers/leds/leds-lm355x.c:167:28: warning: bitwise operation between different enumeration types ('enum lm355x_tx2' and 'enum lm355x_ntc') [-Wenum-enum-conversion]
                    reg_val = pdata->pin_tx2 | pdata->ntc_pin;
                              ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
    drivers/leds/leds-lm355x.c:178:28: warning: bitwise operation between different enumeration types ('enum lm355x_tx2' and 'enum lm355x_ntc') [-Wenum-enum-conversion]
                    reg_val = pdata->pin_tx2 | pdata->ntc_pin | pdata->pass_mode;
                              ~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~
    
    In this driver, it is intentional, so add a cast to hide the false-positive
    warning. It appears to be the only instance of this warning at the moment.
    
    Fixes: b98d13c72592 ("leds: Add new LED driver for lm355x chips")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d95947426c4206623f4c7711e4cc1944c9f2e775
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Jun 15 07:48:25 2020 +0000

    powerpc/fixmap: Fix FIX_EARLY_DEBUG_BASE when page size is 256k
    
    [ Upstream commit 03fd42d458fb9cb69e712600bd69ff77ff3a45a8 ]
    
    FIX_EARLY_DEBUG_BASE reserves a 128k area for debuging.
    
    When page size is 256k, the calculation results in a 0 number of
    pages, leading to the following failure:
    
      CC      arch/powerpc/kernel/asm-offsets.s
    In file included from ./arch/powerpc/include/asm/nohash/32/pgtable.h:77:0,
                     from ./arch/powerpc/include/asm/nohash/pgtable.h:8,
                     from ./arch/powerpc/include/asm/pgtable.h:20,
                     from ./include/linux/pgtable.h:6,
                     from ./arch/powerpc/include/asm/kup.h:42,
                     from ./arch/powerpc/include/asm/uaccess.h:9,
                     from ./include/linux/uaccess.h:11,
                     from ./include/linux/crypto.h:21,
                     from ./include/crypto/hash.h:11,
                     from ./include/linux/uio.h:10,
                     from ./include/linux/socket.h:8,
                     from ./include/linux/compat.h:15,
                     from arch/powerpc/kernel/asm-offsets.c:14:
    ./arch/powerpc/include/asm/fixmap.h:75:2: error: overflow in enumeration values
      __end_of_permanent_fixed_addresses,
      ^
    make[2]: *** [arch/powerpc/kernel/asm-offsets.s] Error 1
    
    Ensure the debug area is at least one page.
    
    Fixes: b8e8efaa8639 ("powerpc: reserve fixmap entries for early debug")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/ca8c9f8249f523b1fab873e67b81b11989d46553.1592207216.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10057c82dd626f2564c321bec1b87671c4d3770a
Author: Joe Perches <joe@perches.com>
Date:   Fri Jun 5 07:18:06 2020 -0700

    powerpc/mm: Fix typo in IS_ENABLED()
    
    [ Upstream commit 55bd9ac468397c4f12a33b7ec714b5d0362c3aa2 ]
    
    IS_ENABLED() matches names exactly, so the missing "CONFIG_" prefix
    means this code would never be built.
    
    Also fixes a missing newline in pr_warn().
    
    Fixes: 970d54f99cea ("powerpc/book3s64/hash: Disable 16M linear mapping size if not aligned")
    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/202006050717.A2F9809E@keescook
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47fea4d1a23f36c60704c1290f9fc2fa2b6c936d
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Tue Jun 9 13:08:46 2020 +0200

    clk: bcm63xx-gate: fix last clock availability
    
    [ Upstream commit cf8030d7035bd3e89c9e66f7193a7fc8057a9b9a ]
    
    In order to make the last clock available, maxbit has to be set to the
    highest bit value plus 1.
    
    Fixes: 1c099779c1e2 ("clk: add BCM63XX gated clock controller driver")
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Link: https://lore.kernel.org/r/20200609110846.4029620-1-noltari@gmail.com
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a290307411074d5466183f5e8283051662c7ff46
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jun 18 11:04:00 2020 +0100

    drm/arm: fix unintentional integer overflow on left shift
    
    [ Upstream commit 5f368ddea6fec519bdb93b5368f6a844b6ea27a6 ]
    
    Shifting the integer value 1 is evaluated using 32-bit arithmetic
    and then used in an expression that expects a long value leads to
    a potential integer overflow. Fix this by using the BIT macro to
    perform the shift to avoid the overflow.
    
    Addresses-Coverity: ("Unintentional integer overflow")
    Fixes: ad49f8602fe8 ("drm/arm: Add support for Mali Display Processors")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Liviu Dudau <Liviu.Dudau@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200618100400.11464-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ea4204a722a1f7e5a757e3895e7594327225ad8
Author: Steven Price <steven.price@arm.com>
Date:   Fri May 22 16:36:53 2020 +0100

    drm/panfrost: Fix inbalance of devfreq record_busy/idle()
    
    [ Upstream commit b99773ef258e628bd53cab22d450a755b73b4d55 ]
    
    The calls to panfrost_devfreq_record_busy() and
    panfrost_devfreq_record_idle() must be balanced to ensure that the
    devfreq utilisation is correctly reported. But there are two cases where
    this doesn't work correctly.
    
    In panfrost_job_hw_submit() if pm_runtime_get_sync() fails or the
    WARN_ON() fires then no call to panfrost_devfreq_record_busy() is made,
    but when the job times out the corresponding _record_idle() call is
    still made in panfrost_job_timedout(). Move the call up to ensure that
    it always happens.
    
    Secondly panfrost_job_timedout() only makes a single call to
    panfrost_devfreq_record_idle() even if it is cleaning up multiple jobs.
    Move the call inside the loop to ensure that the number of
    _record_idle() calls matches the number of _record_busy() calls.
    
    Fixes: 9e62b885f715 ("drm/panfrost: Simplify devfreq utilisation tracking")
    Acked-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200522153653.40754-1-steven.price@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9af8ae89d51249d2edf20fe44a9a78df6307564
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Tue Jun 16 23:21:24 2020 +0200

    drm/etnaviv: Fix error path on failure to enable bus clk
    
    [ Upstream commit f8794feaf65cdc97767604cf864775d20b97f397 ]
    
    Since commit 65f037e8e908 ("drm/etnaviv: add support for slave interface
    clock") the reg clock is enabled before the bus clock and we need to undo
    its enablement on error.
    
    Fixes: 65f037e8e908 ("drm/etnaviv: add support for slave interface clock")
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7022baca7cfbe5f26e83db250a200e2e7f4c99e7
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Thu Jun 11 18:10:43 2020 +0800

    scsi: ufs: Fix imprecise load calculation in devfreq window
    
    [ Upstream commit b1bf66d1d5a8fcb54f0e584db5d196ef015b5172 ]
    
    The UFS load calculation is based on "total_time" and "busy_time" in a
    devfreq window.  However, the source of time is different for both
    parameters: "busy_time" is assigned from "jiffies" thus has different
    accuracy from "total_time" which is assigned from ktime_get().
    
    In addition, the time of window boundary is not exactly the same as the
    starting busy time in this window if UFS is actually busy in the beginning
    of the window. A similar accuracy error may also happen for the end of busy
    time in current window.
    
    To guarantee the precision of load calculation, we need to
    
    1. Align time accuracy of both devfreq_dev_status.total_time and
       devfreq_dev_status.busy_time. For example, use "ktime_get()" directly.
    
    2. Align the following timelines:
       - The beginning time of devfreq windows
       - The beginning of busy time in a new window
       - The end of busy time in the current window
    
    Link: https://lore.kernel.org/r/20200611101043.6379-1-stanley.chu@mediatek.com
    Fixes: a3cd5ec55f6c ("scsi: ufs: add load based scaling of UFS gear")
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c53b4ac934e40713f7cc90d33d9062e09ef1641b
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Jun 3 17:26:10 2020 +0800

    iio: amplifiers: ad8366: Change devm_gpiod_get() to optional and add the missed check
    
    [ Upstream commit 9ca39411f9a9c833727750431da8dfd96ff80005 ]
    
    Since if there is no GPIO, nothing happens, replace devm_gpiod_get()
    with devm_gpiod_get_optional().
    Also add IS_ERR() to fix the missing-check warning.
    
    Fixes: cee211f4e5a0 ("iio: amplifiers: ad8366: Add support for the ADA4961 DGA")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Acked-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f3ff5cba631df7430dc5ca511a37ae2c1183564
Author: Tomasz Duszynski <tomasz.duszynski@octakon.com>
Date:   Mon Jun 1 18:15:52 2020 +0200

    iio: improve IIO_CONCENTRATION channel type description
    
    [ Upstream commit df16c33a4028159d1ba8a7061c9fa950b58d1a61 ]
    
    IIO_CONCENTRATION together with INFO_RAW specifier is used for reporting
    raw concentrations of pollutants. Raw value should be meaningless
    before being properly scaled. Because of that description shouldn't
    mention raw value unit whatsoever.
    
    Fix this by rephrasing existing description so it follows conventions
    used throughout IIO ABI docs.
    
    Fixes: 8ff6b3bc94930 ("iio: chemical: Add IIO_CONCENTRATION channel type")
    Signed-off-by: Tomasz Duszynski <tomasz.duszynski@octakon.com>
    Acked-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5af9cf807b5e36f18c689153a402231bd3c3614f
Author: Balakrishna Godavarthi <bgodavar@codeaurora.org>
Date:   Fri Jun 12 17:51:31 2020 +0530

    Bluetooth: hci_qca: Increase SoC idle timeout to 200ms
    
    [ Upstream commit 2d68476cfc2afa1a1a2d9007a23264ffc6308e77 ]
    
    In some version of WCN399x, SoC idle timeout is configured
    as 80ms instead of 20ms or 40ms. To honor all the SoC's
    supported in the driver increasing SoC idle timeout to 200ms.
    
    Fixes: 41d5b25fed0a0 ("Bluetooth: hci_qca: add PM support")
    Signed-off-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d22f52161b2997dfff6434d5507ff580c8b7fe0
Author: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
Date:   Tue Jun 9 21:27:08 2020 +0530

    Bluetooth: hci_qca: Bug fix during SSR timeout
    
    [ Upstream commit f98aa80ff78c34fe328eb9cd3e2cc3058e42bcfd ]
    
    Due to race conditions between qca_hw_error and qca_controller_memdump
    during SSR timeout,the same pointer is freed twice. This results in a
    double free. Now a lock is acquired before checking the stauts of SSR
    state.
    
    Fixes: d841502c79e3 ("Bluetooth: hci_qca: Collect controller memory dump during SSR")
    Signed-off-by: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
    Reviewed-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17e8eb2db9ccf872ead7f8a70ed6020fb71116da
Author: Evan Green <evgreen@chromium.org>
Date:   Thu Jun 4 10:59:11 2020 -0700

    ath10k: Acquire tx_lock in tx error paths
    
    [ Upstream commit a738e766e3ed92c4ee5ec967777276b5ce11dd2c ]
    
    ath10k_htt_tx_free_msdu_id() has a lockdep assertion that htt->tx_lock
    is held. Acquire the lock in a couple of error paths when calling that
    function to ensure this condition is met.
    
    Fixes: 6421969f248fd ("ath10k: refactor tx pending management")
    Fixes: e62ee5c381c59 ("ath10k: Add support for htt_data_tx_desc_64 descriptor")
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200604105901.1.I5b8b0c7ee0d3e51a73248975a9da61401b8f3900@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b1cacc13022797a5695a715eaea5b572fb51559
Author: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
Date:   Fri Jun 5 13:50:15 2020 -0700

    Bluetooth: Allow suspend even when preparation has failed
    
    [ Upstream commit a9ec8423134a54c9f0ae8d4ef59e1e833ca917c2 ]
    
    It is preferable to allow suspend even when Bluetooth has problems
    preparing for sleep. When Bluetooth fails to finish preparing for
    suspend, log the error and allow the suspend notifier to continue
    instead.
    
    To also make it clearer why suspend failed, change bt_dev_dbg to
    bt_dev_err when handling the suspend timeout.
    
    Fixes: dd522a7429b07e ("Bluetooth: Handle LE devices during suspend")
    Reported-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f87bf4b50b5615147585f6e6602ca1bbf16e974
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Fri Jun 5 11:46:09 2020 -0700

    Bluetooth: hci_qca: Only remove TX clock vote after TX is completed
    
    [ Upstream commit eff981f6579d5797d68d27afc0eede529ac8778a ]
    
    qca_suspend() removes the vote for the UART TX clock after
    writing an IBS sleep request to the serial buffer. This is
    not a good idea since there is no guarantee that the request
    has been sent at this point. Instead remove the vote after
    successfully entering IBS sleep. This also fixes the issue
    of the vote being removed in case of an aborted suspend due
    to a failure of entering IBS sleep.
    
    Fixes: 41d5b25fed0a0 ("Bluetooth: hci_qca: add PM support")
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88959e705f04925712eba624748781b1b078abe8
Author: Nirmoy Das <nirmoy.aiemd@gmail.com>
Date:   Fri May 29 16:04:01 2020 +0200

    drm/mm: fix hole size comparison
    
    [ Upstream commit 18ece75d7d74eb108f6a7325cf247077a666cba8 ]
    
    Fixes: 0cdea4455acd350a ("drm/mm: optimize rb_hole_addr rbtree search")
    
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Reported-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/367726/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe7a5d7fdea56bd7087624471eff5ee3f882c72d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri May 29 12:59:48 2020 +0300

    Bluetooth: hci_qca: Fix an error pointer dereference
    
    [ Upstream commit 4c07a5d7aeb39f559b29aa58ec9a8a5ab4282cb0 ]
    
    When a function like devm_clk_get_optional() function returns both error
    pointers on error and NULL then the NULL return means that the optional
    feature is deliberately disabled.  It is a special sort of success and
    should not trigger an error message.  The surrounding code should be
    written to check for NULL and not crash.
    
    On the other hand, if we encounter an error, then the probe from should
    clean up and return a failure.
    
    In this code, if devm_clk_get_optional() returns an error pointer then
    the kernel will crash inside the call to:
    
            clk_set_rate(qcadev->susclk, SUSCLK_RATE_32KHZ);
    
    The error handling must be updated to prevent that.
    
    Fixes: 77131dfec6af ("Bluetooth: hci_qca: Replace devm_gpiod_get() with devm_gpiod_get_optional()")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1785f21b6be608f9963a4c3f79ff4bff4d30f21
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Apr 29 10:45:05 2020 +0200

    video: pxafb: Fix the function used to balance a 'dma_alloc_coherent()' call
    
    [ Upstream commit 499a2c41b954518c372873202d5e7714e22010c4 ]
    
    'dma_alloc_coherent()' must be balanced by a call to 'dma_free_coherent()'
    not 'dma_free_wc()'.
    The correct dma_free_ function is already used in the error handling path
    of the probe function.
    
    Fixes: 77e196752bdd ("[ARM] pxafb: allow video memory size to be configurable")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: Jani Nikula <jani.nikula@intel.com>
    cc: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Cc: Eric Miao <eric.miao@marvell.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200429084505.108897-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92f18805fd07b7021516807429c1895ac0397ed3
Author: Dejin Zheng <zhengdejin5@gmail.com>
Date:   Fri Apr 24 00:42:51 2020 +0800

    console: newport_con: fix an issue about leak related system resources
    
    [ Upstream commit fd4b8243877250c05bb24af7fea5567110c9720b ]
    
    A call of the function do_take_over_console() can fail here.
    The corresponding system resources were not released then.
    Thus add a call of iounmap() and release_mem_region()
    together with the check of a failure predicate. and also
    add release_mem_region() on device removal.
    
    Fixes: e86bb8acc0fdc ("[PATCH] VT binding: Make newport_con support binding")
    Suggested-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Dejin Zheng <zhengdejin5@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200423164251.3349-1-zhengdejin5@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec47a810703357b356bbfe4a16bf592b2f7a423e
Author: Dejin Zheng <zhengdejin5@gmail.com>
Date:   Thu Apr 23 00:07:19 2020 +0800

    video: fbdev: sm712fb: fix an issue about iounmap for a wrong address
    
    [ Upstream commit 98bd4f72988646c35569e1e838c0ab80d06c77f6 ]
    
    the sfb->fb->screen_base is not save the value get by iounmap() when
    the chip id is 0x720. so iounmap() for address sfb->fb->screen_base
    is not right.
    
    Fixes: 1461d6672864854 ("staging: sm7xxfb: merge sm712fb with fbdev")
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Teddy Wang <teddy.wang@siliconmotion.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Dejin Zheng <zhengdejin5@gmail.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200422160719.27763-1-zhengdejin5@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d2663776cae3f0acc5b25932f7ca73113a00c6d
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:29 2020 +0200

    btmrvl: Fix firmware filename for sd8997 chipset
    
    [ Upstream commit 00eb0cb36fad53315047af12e83c643d3a2c2e49 ]
    
    Firmware for sd8997 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8997_combo_v4.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8997.
    
    Fixes: f0ef67485f591 ("Bluetooth: btmrvl: add sd8997 chipset support")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e00553ce46ea19f979a7a5da8a34d9548b638f3
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:28 2020 +0200

    btmrvl: Fix firmware filename for sd8977 chipset
    
    [ Upstream commit dbec3af5f13b88a96e31f252957ae1a82484a923 ]
    
    Firmware for sd8977 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8977_combo_v2.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8977.
    
    Fixes: 8c57983bf7a79 ("Bluetooth: btmrvl: add support for sd8977 chipset")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86faf4735ccfd992e02893b4a81c9df0e766f7a5
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:27 2020 +0200

    mwifiex: Fix firmware filename for sd8997 chipset
    
    [ Upstream commit 2e1fcac52a9ea53e5a13a585d48a29a0fb4a9daf ]
    
    Firmware for sd8997 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8997_combo_v4.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8997.
    
    Fixes: 6d85ef00d9dfe ("mwifiex: add support for 8997 chipset")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d41c930387d378a3447cd08ca52e36f2c00bc358
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Jun 3 10:22:26 2020 +0200

    mwifiex: Fix firmware filename for sd8977 chipset
    
    [ Upstream commit 47fd3ee25e13cc5add48ba2ed71f7ee964b9c3a4 ]
    
    Firmware for sd8977 chipset is distributed by Marvell package and also as
    part of the linux-firmware repository in filename sdsd8977_combo_v2.bin.
    
    This patch fixes mwifiex driver to load correct firmware file for sd8977.
    
    Fixes: 1a0f547831dce ("mwifiex: add support for sd8977 chipset")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f82ecd46efe9a9f663976cb61ac282e3596f049
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Fri May 22 09:34:51 2020 +0100

    agp/intel: Fix a memory leak on module initialisation failure
    
    [ Upstream commit b975abbd382fe442713a4c233549abb90e57c22b ]
    
    In intel_gtt_setup_scratch_page(), pointer "page" is not released if
    pci_dma_mapping_error() return an error, leading to a memory leak on
    module initialisation failure.  Simply fix this issue by freeing "page"
    before return.
    
    Fixes: 0e87d2b06cb46 ("intel-gtt: initialize our own scratch page")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200522083451.7448-1-chris@chris-wilson.co.uk
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86a94d97881d28770c040b32852ed14dc82e5a49
Author: Emil Velikov <emil.velikov@collabora.com>
Date:   Fri May 15 10:50:47 2020 +0100

    drm/amdgpu: use the unlocked drm_gem_object_put
    
    [ Upstream commit 1a87f67a66de4ad0c0d79fd86b6c5273143387c3 ]
    
    The driver does not hold struct_mutex, thus using the locked version of
    the helper is incorrect.
    
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Christian König <christian.koenig@amd.com>
    Cc: amd-gfx@lists.freedesktop.org
    Fixes: a39414716ca0 ("drm/amdgpu: add independent DMA-buf import v9")
    Signed-off-by: Emil Velikov <emil.velikov@collabora.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200515095118.2743122-8-emil.l.velikov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d2ead5d4b39ee835ea9f4c14e14bc2656a53952
Author: Douglas Anderson <dianders@chromium.org>
Date:   Mon May 4 21:32:29 2020 -0700

    drm/bridge: ti-sn65dsi86: Fix off-by-one error in clock choice
    
    [ Upstream commit fe3d7a35497c807d0dad0642afd87d6ba5b6fc86 ]
    
    If the rate in our table is _equal_ to the rate we want then it's OK
    to pick it.  It doesn't need to be greater than the one we want.
    
    Fixes: a095f15c00e2 ("drm/bridge: add support for sn65dsi86 bridge driver")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200504213225.1.I21646c7c37ff63f52ae6cdccc9bc829fbc3d9424@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b81b4959137549d249a03ee44eed3511e7bf16d4
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri May 8 16:33:29 2020 -0700

    drm/bridge: ti-sn65dsi86: Clear old error bits before AUX transfers
    
    [ Upstream commit baef4d56195b6d6e0f681f6eac03d8c6db011d34 ]
    
    The AUX channel transfer error bits in the status register are latched
    and need to be cleared.  Clear them before doing our transfer so we
    don't see old bits and get confused.
    
    Without this patch having a single failure would mean that all future
    transfers would look like they failed.
    
    Fixes: b814ec6d4535 ("drm/bridge: ti-sn65dsi86: Implement AUX channel")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200508163314.1.Idfa69d5d3fc9623083c0ff78572fea87dccb199c@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d65751086ca79afbbe471e7e735b6b85a783b404
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 20 16:23:34 2020 +0300

    drm/gem: Fix a leak in drm_gem_objects_lookup()
    
    [ Upstream commit ec0bb482de0ad5e4aba2a4537ea53eaeb77d11a6 ]
    
    If the "handles" allocation or the copy_from_user() fails then we leak
    "objs".  It's supposed to be freed in panfrost_job_cleanup().
    
    Fixes: c117aa4d8701 ("drm: Add a drm_gem_objects_lookup helper")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Emil Velikov <emil.l.velikov@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200320132334.GC95012@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c83c509085055eaedfc6eb1d011cd35217638c0
Author: Rob Clark <robdclark@chromium.org>
Date:   Wed Jul 1 13:36:00 2020 -0700

    drm/msm: ratelimit crtc event overflow error
    
    [ Upstream commit 5e16372b5940b1fecc3cc887fc02a50ba148d373 ]
    
    This can happen a lot when things go pear shaped.  Lets not flood dmesg
    when this happens.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Abhinav Kumar <abhinavk@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46c8b2e8255c376e05a8eb9c221e904be6182bef
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Wed Jul 22 15:14:55 2020 +0300

    crypto: caam - silence .setkey in case of bad key length
    
    [ Upstream commit da6a66853a381864f4b040832cf11f0dbba0a097 ]
    
    In case of bad key length, driver emits "key size mismatch" messages,
    but only for xts(aes) algorithms.
    
    Reduce verbosity by making them visible only when debugging.
    This way crypto fuzz testing log cleans up a bit.
    
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5c9f20e4ad771bcc07a89c8109de1719fc576b2
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Thu Jul 30 18:43:48 2020 +0300

    io_uring: fix stalled deferred requests
    
    [ Upstream commit dd9dfcdf5a603680458f5e7b0d2273c66e5417db ]
    
    Always do io_commit_cqring() after completing a request, even if it was
    accounted as overflowed on the CQ side. Failing to do that may lead to
    not to pushing deferred requests when needed, and so stalling the whole
    ring.
    
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 458ae14d4ce589e7201be151f6b6a0151907985d
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Thu Jul 30 18:43:47 2020 +0300

    io_uring: fix racy overflow count reporting
    
    [ Upstream commit b2bd1cf99f3e7c8fbf12ea07af2c6998e1209e25 ]
    
    All ->cq_overflow modifications should be under completion_lock,
    otherwise it can report a wrong number to the userspace. Fix it in
    io_uring_cancel_files().
    
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ab9b92b614dece92380c5dc7d4e0e0a455ce0e2
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Mon Jul 20 10:31:20 2020 -0700

    ACPICA: Do not increment operation_region reference counts for field units
    
    [ Upstream commit 6a54ebae6d047c988a31f5ac5a64ab5cf83797a2 ]
    
    ACPICA commit e17b28cfcc31918d0db9547b6b274b09c413eb70
    
    Object reference counts are used as a part of ACPICA's garbage
    collection mechanism. This mechanism keeps track of references to
    heap-allocated structures such as the ACPI operand objects.
    
    Recent server firmware has revealed that this reference count can
    overflow on large servers that declare many field units under the
    same operation_region. This occurs because each field unit declaration
    will add a reference count to the source operation_region.
    
    This change solves the reference count overflow for operation_regions
    objects by preventing fieldunits from incrementing their
    operation_region's reference count. Each operation_region's reference
    count will not be changed by named objects declared under the Field
    operator. During namespace deletion, the operation_region namespace
    node will be deleted and each fieldunit will be deleted without
    touching the deleted operation_region object.
    
    Link: https://github.com/acpica/acpica/commit/e17b28cf
    Signed-off-by: Erik Kaneda <erik.kaneda@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 064c5272a19d50e0b514d1723707c76044cca16b
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Jul 14 09:12:20 2020 +0800

    btrfs: qgroup: free per-trans reserved space when a subvolume gets dropped
    
    [ Upstream commit a3cf0e4342b6af9e6b34a4b913c630fbd03a82ea ]
    
    [BUG]
    Sometime fsstress could lead to qgroup warning for case like
    generic/013:
    
      BTRFS warning (device dm-3): qgroup 0/259 has unreleased space, type 1 rsv 81920
      ------------[ cut here ]------------
      WARNING: CPU: 9 PID: 24535 at fs/btrfs/disk-io.c:4142 close_ctree+0x1dc/0x323 [btrfs]
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
      RIP: 0010:close_ctree+0x1dc/0x323 [btrfs]
      Call Trace:
       btrfs_put_super+0x15/0x17 [btrfs]
       generic_shutdown_super+0x72/0x110
       kill_anon_super+0x18/0x30
       btrfs_kill_super+0x17/0x30 [btrfs]
       deactivate_locked_super+0x3b/0xa0
       deactivate_super+0x40/0x50
       cleanup_mnt+0x135/0x190
       __cleanup_mnt+0x12/0x20
       task_work_run+0x64/0xb0
       __prepare_exit_to_usermode+0x1bc/0x1c0
       __syscall_return_slowpath+0x47/0x230
       do_syscall_64+0x64/0xb0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      ---[ end trace 6c341cdf9b6cc3c1 ]---
      BTRFS error (device dm-3): qgroup reserved space leaked
    
    While that subvolume 259 is no longer in that filesystem.
    
    [CAUSE]
    Normally per-trans qgroup reserved space is freed when a transaction is
    committed, in commit_fs_roots().
    
    However for completely dropped subvolume, that subvolume is completely
    gone, thus is no longer in the fs_roots_radix, and its per-trans
    reserved qgroup will never be freed.
    
    Since the subvolume is already gone, leaked per-trans space won't cause
    any trouble for end users.
    
    [FIX]
    Just call btrfs_qgroup_free_meta_all_pertrans() before a subvolume is
    completely dropped.
    
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16a35c7dd8f4f9560a3431481cd255df72bf3e1a
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Jun 24 07:23:50 2020 +0800

    btrfs: allow btrfs_truncate_block() to fallback to nocow for data space reservation
    
    [ Upstream commit 6d4572a9d71d5fc2affee0258d8582d39859188c ]
    
    [BUG]
    When the data space is exhausted, even if the inode has NOCOW attribute,
    we will still refuse to truncate unaligned range due to ENOSPC.
    
    The following script can reproduce it pretty easily:
      #!/bin/bash
    
      dev=/dev/test/test
      mnt=/mnt/btrfs
    
      umount $dev &> /dev/null
      umount $mnt &> /dev/null
    
      mkfs.btrfs -f $dev -b 1G
      mount -o nospace_cache $dev $mnt
      touch $mnt/foobar
      chattr +C $mnt/foobar
    
      xfs_io -f -c "pwrite -b 4k 0 4k" $mnt/foobar > /dev/null
      xfs_io -f -c "pwrite -b 4k 0 1G" $mnt/padding &> /dev/null
      sync
    
      xfs_io -c "fpunch 0 2k" $mnt/foobar
      umount $mnt
    
    Currently this will fail at the fpunch part.
    
    [CAUSE]
    Because btrfs_truncate_block() always reserves space without checking
    the NOCOW attribute.
    
    Since the writeback path follows NOCOW bit, we only need to bother the
    space reservation code in btrfs_truncate_block().
    
    [FIX]
    Make btrfs_truncate_block() follow btrfs_buffered_write() to try to
    reserve data space first, and fall back to NOCOW check only when we
    don't have enough space.
    
    Such always-try-reserve is an optimization introduced in
    btrfs_buffered_write(), to avoid expensive btrfs_check_can_nocow() call.
    
    This patch will export check_can_nocow() as btrfs_check_can_nocow(), and
    use it in btrfs_truncate_block() to fix the problem.
    
    Reported-by: Martin Doucha <martin.doucha@suse.com>
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11bf4638158aff0d18ce898af37a48a486326394
Author: Coly Li <colyli@suse.de>
Date:   Sat Jul 25 20:00:26 2020 +0800

    bcache: fix super block seq numbers comparision in register_cache_set()
    
    [ Upstream commit 117f636ea695270fe492d0c0c9dfadc7a662af47 ]
    
    In register_cache_set(), c is pointer to struct cache_set, and ca is
    pointer to struct cache, if ca->sb.seq > c->sb.seq, it means this
    registering cache has up to date version and other members, the in-
    memory version and other members should be updated to the newer value.
    
    But current implementation makes a cache set only has a single cache
    device, so the above assumption works well except for a special case.
    The execption is when a cache device new created and both ca->sb.seq and
    c->sb.seq are 0, because the super block is never flushed out yet. In
    the location for the following if() check,
    2156         if (ca->sb.seq > c->sb.seq) {
    2157                 c->sb.version           = ca->sb.version;
    2158                 memcpy(c->sb.set_uuid, ca->sb.set_uuid, 16);
    2159                 c->sb.flags             = ca->sb.flags;
    2160                 c->sb.seq               = ca->sb.seq;
    2161                 pr_debug("set version = %llu\n", c->sb.version);
    2162         }
    c->sb.version is not initialized yet and valued 0. When ca->sb.seq is 0,
    the if() check will fail (because both values are 0), and the cache set
    version, set_uuid, flags and seq won't be updated.
    
    The above problem is hiden for current code, because the bucket size is
    compatible among different super block version. And the next time when
    running cache set again, ca->sb.seq will be larger than 0 and cache set
    super block version will be updated properly.
    
    But if the large bucket feature is enabled,  sb->bucket_size is the low
    16bits of the bucket size. For a power of 2 value, when the actual
    bucket size exceeds 16bit width, sb->bucket_size will always be 0. Then
    read_super_common() will fail because the if() check to
    is_power_of_2(sb->bucket_size) is false. This is how the long time
    hidden bug is triggered.
    
    This patch modifies the if() check to the following way,
    2156         if (ca->sb.seq > c->sb.seq || c->sb.seq == 0) {
    Then cache set's version, set_uuid, flags and seq will always be updated
    corectly including for a new created cache device.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20fa1e9929e8ffa050e0d7c371bb8e95ecc3b33e
Author: Jim Cromie <jim.cromie@gmail.com>
Date:   Sun Jul 19 17:10:47 2020 -0600

    dyndbg: fix a BUG_ON in ddebug_describe_flags
    
    [ Upstream commit f678ce8cc3cb2ad29df75d8824c74f36398ba871 ]
    
    ddebug_describe_flags() currently fills a caller provided string buffer,
    after testing its size (also passed) in a BUG_ON.  Fix this by
    replacing them with a known-big-enough string buffer wrapped in a
    struct, and passing that instead.
    
    Also simplify ddebug_describe_flags() flags parameter from a struct to
    a member in that struct, and hoist the member deref up to the caller.
    This makes the function reusable (soon) where flags are unpacked.
    
    Acked-by: <jbaron@akamai.com>
    Signed-off-by: Jim Cromie <jim.cromie@gmail.com>
    Link: https://lore.kernel.org/r/20200719231058.1586423-8-jim.cromie@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f92047fea41b49d906e652020861cec78f68f04
Author: Danesh Petigara <danesh.petigara@broadcom.com>
Date:   Wed Jul 22 13:07:45 2020 -0400

    usb: bdc: Halt controller on suspend
    
    [ Upstream commit 5fc453d7de3d0c345812453823a3a56783c5f82c ]
    
    GISB bus error kernel panics have been observed during S2 transition
    tests on the 7271t platform. The errors are a result of the BDC
    interrupt handler trying to access BDC register space after the
    system's suspend callbacks have completed.
    
    Adding a suspend hook to the BDC driver that halts the controller before
    S2 entry thus preventing unwanted access to the BDC register space during
    this transition.
    
    Signed-off-by: Danesh Petigara <danesh.petigara@broadcom.com>
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8415df3d6eb1ad078c70c3838a650f7b612f27ba
Author: Sasi Kumar <sasi.kumar@broadcom.com>
Date:   Wed Jul 22 13:07:42 2020 -0400

    bdc: Fix bug causing crash after multiple disconnects
    
    [ Upstream commit a95bdfd22076497288868c028619bc5995f5cc7f ]
    
    Multiple connects/disconnects can cause a crash on the second
    disconnect. The driver had a problem where it would try to send
    endpoint commands after it was disconnected which is not allowed
    by the hardware. The fix is to only allow the endpoint commands
    when the endpoint is connected. This will also fix issues that
    showed up when using configfs to create gadgets.
    
    Signed-off-by: Sasi Kumar <sasi.kumar@broadcom.com>
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7677cbd18b99568993e79941c3d2e272db970a7d
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Tue Jul 21 23:15:58 2020 +0300

    usb: gadget: net2280: fix memory leak on probe error handling paths
    
    [ Upstream commit 2468c877da428ebfd701142c4cdfefcfb7d4c00e ]
    
    Driver does not release memory for device on error handling paths in
    net2280_probe() when gadget_release() is not registered yet.
    
    The patch fixes the bug like in other similar drivers.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa979805e400ec37f27a9b393bfad84e53a50b64
Author: shirley her <shirley.her@bayhubtech.com>
Date:   Mon Jul 20 18:17:33 2020 -0700

    mmc: sdhci-pci-o2micro: Bug fix for O2 host controller Seabird1
    
    [ Upstream commit cdd2b769789ae1a030e1a26f6c37c5833cabcb34 ]
    
    To fix support for the O2 host controller Seabird1, set the quirk
    SDHCI_QUIRK2_PRESET_VALUE_BROKEN and the capability bit MMC_CAP2_NO_SDIO.
    Moreover, assign the ->get_cd() callback.
    
    Signed-off-by: Shirley Her <shirley.her@bayhubtech.com>
    Link: https://lore.kernel.org/r/20200721011733.8416-1-shirley.her@bayhubtech.com
    [Ulf: Updated the commit message]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5bf76c14acdf669a754f72ac85a329875b07820
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Mon Jul 20 13:49:25 2020 -0700

    x86/uaccess: Make __get_user_size() Clang compliant on 32-bit
    
    [ Upstream commit 158807de5822d1079e162a3762956fd743dd483e ]
    
    Clang fails to compile __get_user_size() on 32-bit for the following code:
    
          long long val;
    
          __get_user(val, usrptr);
    
    with: error: invalid output size for constraint '=q'
    
    GCC compiles the same code without complaints.
    
    The reason is that GCC and Clang are architecturally different, which leads
    to subtle issues for code that's invalid but clearly dead, i.e. with code
    that emulates polymorphism with the preprocessor and sizeof.
    
    GCC will perform semantic analysis after early inlining and dead code
    elimination, so it will not warn on invalid code that's dead. Clang
    strictly performs optimizations after semantic analysis, so it will warn
    for dead code.
    
    Neither Clang nor GCC like this very much with -m32:
    
    long long ret;
    asm ("movb $5, %0" : "=q" (ret));
    
    However, GCC can tolerate this variant:
    
    long long ret;
    switch (sizeof(ret)) {
    case 1:
            asm ("movb $5, %0" : "=q" (ret));
            break;
    case 8:;
    }
    
    Clang, on the other hand, won't accept that because it validates the inline
    asm for the '1' case before the optimisation phase where it realises that
    it wouldn't have to emit it anyway.
    
    If LLVM (Clang's "back end") fails such as during instruction selection or
    register allocation, it cannot provide accurate diagnostics (warnings /
    errors) that contain line information, as the AST has been discarded from
    memory at that point.
    
    While there have been early discussions about having C/C++ specific
    language optimizations in Clang via the use of MLIR, which would enable
    such earlier optimizations, such work is not scoped and likely a multi-year
    endeavor.
    
    It was discussed to change the asm output constraint for the one byte case
    from "=q" to "=r". While it works for 64-bit, it fails on 32-bit. With '=r'
    the compiler could fail to chose a register accessible as high/low which is
    required for the byte operation. If that happens the assembly will fail.
    
    Use a local temporary variable of type 'unsigned char' as output for the
    byte copy inline asm and then assign it to the real output variable. This
    prevents Clang from failing the semantic analysis in the above case.
    
    The resulting code for the actual one byte copy is not affected as the
    temporary variable is optimized out.
    
    [ tglx: Amended changelog ]
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: David Woodhouse <dwmw2@infradead.org>
    Reported-by: Dmitry Golovin <dima@golovin.in>
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Dennis Zhou <dennis@kernel.org>
    Link: https://bugs.llvm.org/show_bug.cgi?id=33587
    Link: https://github.com/ClangBuiltLinux/linux/issues/3
    Link: https://github.com/ClangBuiltLinux/linux/issues/194
    Link: https://github.com/ClangBuiltLinux/linux/issues/781
    Link: https://lore.kernel.org/lkml/20180209161833.4605-1-dwmw2@infradead.org/
    Link: https://lore.kernel.org/lkml/CAK8P3a1EBaWdbAEzirFDSgHVJMtWjuNt2HGG8z+vpXeNHwETFQ@mail.gmail.com/
    Link: https://lkml.kernel.org/r/20200720204925.3654302-12-ndesaulniers@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c234811c3754f068bd97bb3fd5cac3548baeab91
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Jul 21 13:34:07 2020 -0700

    ionic: update eid test for overflow
    
    [ Upstream commit 3fbc9bb6ca32d12d4d32a7ae32abef67ac95f889 ]
    
    Fix up our comparison to better handle a potential (but largely
    unlikely) wrap around.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ee88f37ad1bc811541545e87323c8b181fa6496
Author: Evan Quan <evan.quan@amd.com>
Date:   Wed Jul 15 14:01:29 2020 +0800

    drm/amd/powerplay: suppress compile error around BUG_ON
    
    [ Upstream commit 75bc07e2403caea9ecac69f766dfb7dc33547594 ]
    
    To suppress the compile error below for "ARCH=arc".
       drivers/gpu/drm/amd/amdgpu/../powerplay/arcturus_ppt.c: In function 'arcturus_fill_eeprom_i2c_req':
    >> arch/arc/include/asm/bug.h:22:2: error: implicit declaration of function 'pr_warn'; did you mean 'pci_warn'? [-Werror=implicit-function-declaration]
          22 |  pr_warn("BUG: failure at %s:%d/%s()!\n", __FILE__, __LINE__, __func__); \
             |  ^~~~~~~
       include/asm-generic/bug.h:62:57: note: in expansion of macro 'BUG'
          62 | #define BUG_ON(condition) do { if (unlikely(condition)) BUG(); } while (0)
             |                                                         ^~~
       drivers/gpu/drm/amd/amdgpu/../powerplay/arcturus_ppt.c:2157:2: note: in expansion of macro 'BUG_ON'
        2157 |  BUG_ON(numbytes > MAX_SW_I2C_COMMANDS);
    
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ae6cbe7652ac246625f3041d35618357832035b
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Mon Jun 29 06:18:41 2020 +0300

    gpu: host1x: debug: Fix multiple channels emitting messages simultaneously
    
    [ Upstream commit 35681862808472a0a4b9a8817ae2789c0b5b3edc ]
    
    Once channel's job is hung, it dumps the channel's state into KMSG before
    tearing down the offending job. If multiple channels hang at once, then
    they dump messages simultaneously, making the debug info unreadable, and
    thus, useless. This patch adds mutex which allows only one channel to emit
    debug messages at a time.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e701b476f489ab8bf4680662e55b1e88de95b76
Author: Bolarinwa Olayemi Saheed <refactormyself@gmail.com>
Date:   Mon Jul 13 19:55:27 2020 +0200

    iwlegacy: Check the return value of pcie_capability_read_*()
    
    [ Upstream commit 9018fd7f2a73e9b290f48a56b421558fa31e8b75 ]
    
    On failure pcie_capability_read_dword() sets it's last parameter, val
    to 0. However, with Patch 14/14, it is possible that val is set to ~0 on
    failure. This would introduce a bug because (x & x) == (~0 & x).
    
    This bug can be avoided without changing the function's behaviour if the
    return value of pcie_capability_read_dword is checked to confirm success.
    
    Check the return value of pcie_capability_read_dword() to ensure success.
    
    Suggested-by: Bjorn Helgaas <bjorn@helgaas.com>
    Signed-off-by: Bolarinwa Olayemi Saheed <refactormyself@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200713175529.29715-3-refactormyself@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79f477d1beac36e81cba0e121728f34df6fc4c92
Author: Armas Spann <zappel@retarded.farm>
Date:   Sat Jul 11 11:43:21 2020 +0200

    platform/x86: asus-nb-wmi: add support for ASUS ROG Zephyrus G14 and G15
    
    [ Upstream commit 13bceda68fb9ef388ad40d355ab8d03ee64d14c2 ]
    
    Add device support for the new ASUS ROG Zephyrus G14 (GA401I) and
    G15 (GA502I) series.
    
    This is accomplished by two new quirk entries (one per each series),
    as well as all current available G401I/G502I DMI_PRODUCT_NAMEs to match
    the corresponding devices.
    
    Signed-off-by: Armas Spann <zappel@retarded.farm>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b195c3db843437784ad5dfca940d978f4722e3f8
Author: Wright Feng <wright.feng@cypress.com>
Date:   Wed Jun 24 04:16:07 2020 -0500

    brcmfmac: set state of hanger slot to FREE when flushing PSQ
    
    [ Upstream commit fcdd7a875def793c38d7369633af3eba6c7cf089 ]
    
    When USB or SDIO device got abnormal bus disconnection, host driver
    tried to clean up the skbs in PSQ and TXQ (The skb's pointer in hanger
    slot linked to PSQ and TSQ), so we should set the state of skb hanger slot
    to BRCMF_FWS_HANGER_ITEM_STATE_FREE before freeing skb.
    In brcmf_fws_bus_txq_cleanup it already sets
    BRCMF_FWS_HANGER_ITEM_STATE_FREE before freeing skb, therefore we add the
    same thing in brcmf_fws_psq_flush to avoid following warning message.
    
       [ 1580.012880] ------------   [ cut here ]------------
       [ 1580.017550] WARNING: CPU: 3 PID: 3065 at
    drivers/net/wireless/broadcom/brcm80211/brcmutil/utils.c:49
    brcmu_pkt_buf_free_skb+0x21/0x30 [brcmutil]
       [ 1580.184017] Call Trace:
       [ 1580.186514]  brcmf_fws_cleanup+0x14e/0x190 [brcmfmac]
       [ 1580.191594]  brcmf_fws_del_interface+0x70/0x90 [brcmfmac]
       [ 1580.197029]  brcmf_proto_bcdc_del_if+0xe/0x10 [brcmfmac]
       [ 1580.202418]  brcmf_remove_interface+0x69/0x190 [brcmfmac]
       [ 1580.207888]  brcmf_detach+0x90/0xe0 [brcmfmac]
       [ 1580.212385]  brcmf_usb_disconnect+0x76/0xb0 [brcmfmac]
       [ 1580.217557]  usb_unbind_interface+0x72/0x260
       [ 1580.221857]  device_release_driver_internal+0x141/0x200
       [ 1580.227152]  device_release_driver+0x12/0x20
       [ 1580.231460]  bus_remove_device+0xfd/0x170
       [ 1580.235504]  device_del+0x1d9/0x300
       [ 1580.239041]  usb_disable_device+0x9e/0x270
       [ 1580.243160]  usb_disconnect+0x94/0x270
       [ 1580.246980]  hub_event+0x76d/0x13b0
       [ 1580.250499]  process_one_work+0x144/0x360
       [ 1580.254564]  worker_thread+0x4d/0x3c0
       [ 1580.258247]  kthread+0x109/0x140
       [ 1580.261515]  ? rescuer_thread+0x340/0x340
       [ 1580.265543]  ? kthread_park+0x60/0x60
       [ 1580.269237]  ? SyS_exit_group+0x14/0x20
       [ 1580.273118]  ret_from_fork+0x25/0x30
       [ 1580.300446] ------------   [ cut here ]------------
    
    Acked-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200624091608.25154-2-wright.feng@cypress.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f41a2583e10bf371cb64c3af9269cff77653f32c
Author: Prasanna Kerekoppa <prasanna.kerekoppa@cypress.com>
Date:   Thu Jun 4 02:18:35 2020 -0500

    brcmfmac: To fix Bss Info flag definition Bug
    
    [ Upstream commit fa3266541b13f390eb35bdbc38ff4a03368be004 ]
    
    Bss info flag definition need to be fixed from 0x2 to 0x4
    This flag is for rssi info received on channel.
    All Firmware branches defined as 0x4 and this is bug in brcmfmac.
    
    Signed-off-by: Prasanna Kerekoppa <prasanna.kerekoppa@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200604071835.3842-6-wright.feng@cypress.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38a031bbdfd36fbf5162517991d11ebdcf8e491a
Author: Wright Feng <wright.feng@cypress.com>
Date:   Thu Jun 4 02:18:33 2020 -0500

    brcmfmac: keep SDIO watchdog running when console_interval is non-zero
    
    [ Upstream commit eccbf46b15bb3e35d004148f7c3a8fa8e9b26c1e ]
    
    brcmfmac host driver makes SDIO bus sleep and stops SDIO watchdog if no
    pending event or data. As a result, host driver does not poll firmware
    console buffer before buffer overflow, which leads to missing firmware
    logs. We should not stop SDIO watchdog if console_interval is non-zero
    in debug build.
    
    Signed-off-by: Wright Feng <wright.feng@cypress.com>
    Signed-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200604071835.3842-4-wright.feng@cypress.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93e05fd717de5be53e6d31c6c44870201135407b
Author: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
Date:   Sat Jul 11 17:01:12 2020 +0530

    Bluetooth: hci_qca: Bug fixes for SSR
    
    [ Upstream commit 3344537f614b966f726c1ec044d1c70a8cabe178 ]
    
    1.During SSR for command time out if BT SoC goes to inresponsive
    state, power cycling of BT SoC was not happening. Given the fix by
    sending hw error event to reset the BT SoC.
    
    2.If SSR is triggered then ignore the transmit data requests to
    BT SoC until SSR is completed.
    
    Signed-off-by: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a82baea4babd1b1b3c33c9c48bd10180c06b630e
Author: Wenbo Zhang <ethercflow@gmail.com>
Date:   Fri Jul 10 05:20:35 2020 -0400

    bpf: Fix fds_example SIGSEGV error
    
    [ Upstream commit eef8a42d6ce087d1c81c960ae0d14f955b742feb ]
    
    The `BPF_LOG_BUF_SIZE`'s value is `UINT32_MAX >> 8`, so define an array
    with it on stack caused an overflow.
    
    Signed-off-by: Wenbo Zhang <ethercflow@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200710092035.28919-1-ethercflow@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9496b4f3165d39e83be3cba284431788f40d2aa
Author: Evan Quan <evan.quan@amd.com>
Date:   Sun Jun 28 19:12:42 2020 +0800

    drm/amd/powerplay: fix compile error with ARCH=arc
    
    [ Upstream commit 9822ba2ead1baa3de4860ad9472f652c4cc78c9c ]
    
    Fix the compile error below:
    drivers/gpu/drm/amd/amdgpu/../powerplay/smu_v11_0.c: In function 'smu_v11_0_init_microcode':
    >> arch/arc/include/asm/bug.h:22:2: error: implicit declaration of function 'pr_warn'; did you mean 'pci_warn'? [-Werror=implicit-function-declaration]
          22 |  pr_warn("BUG: failure at %s:%d/%s()!\n", __FILE__, __LINE__, __func__); \
             |  ^~~~~~~
    drivers/gpu/drm/amd/amdgpu/../powerplay/smu_v11_0.c:176:3: note: in expansion of macro 'BUG'
         176 |   BUG();
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4c9ade43bc592f866715237707811539d1a103c
Author: Wenjing Liu <wenjing.liu@amd.com>
Date:   Mon Jun 8 15:16:00 2020 -0400

    drm/amd/display: allow query ddc data over aux to be read only operation
    
    [ Upstream commit 26b4750d6cf84cb2b3f0a84c9b345e7b71886410 ]
    
    [why]
    Two issues:
    1. Add read only operation support for query ddc data over aux.
    2. Fix a bug where if read size is multiple of 16,
    mot of the last read transaction will not be set to 0.
    
    Signed-off-by: Wenjing Liu <wenjing.liu@amd.com>
    Reviewed-by: Jun Lei <Jun.Lei@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81ece245ce786f60973b0524e2a8ddf98d7dff72
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 17 16:36:05 2020 -0400

    drm/amdgpu/display: properly guard the calls to swSMU functions
    
    [ Upstream commit 4072327a2622af8688b88f5cd0a472136d3bf33d ]
    
    It's only applicable on newer asics.  We could end up here when
    using DC on older asics like SI or KV.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1170
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53812570f84cbf7ae4f00af01e8fa9edf13317f0
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 17 16:33:47 2020 -0400

    drm/amdgpu/display bail early in dm_pp_get_static_clocks
    
    [ Upstream commit 376814f5fcf1aadda501d1413d56e8af85d19a97 ]
    
    If there are no supported callbacks.  We'll fall back to the
    nominal clocks.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1170
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 865e2dbadf6856c9219626fbd6154cac44e5fbca
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Jun 17 14:30:17 2020 -0400

    drm/amdgpu/debugfs: fix ref count leak when pm_runtime_get_sync fails
    
    [ Upstream commit 9eee152aab56d374edb9ad21b3db05f5cdda2fe6 ]
    
    The call to pm_runtime_get_sync increments the counter even in case of
    failure, leading to incorrect ref count.
    In case of failure, decrement the ref count before returning.
    
    Acked-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1adb2ff1f6b170cdbc3925a359c8f39d2215dc20
Author: Aric Cyr <aric.cyr@amd.com>
Date:   Tue May 26 13:56:53 2020 -0400

    drm/amd/display: Improve DisplayPort monitor interop
    
    [ Upstream commit eec3303de3378cdfaa0bb86f43546dbbd88f94e2 ]
    
    [Why]
    DC is very fast at link training and stream enablement
    which causes issues such as blackscreens for non-compliant
    monitors.
    
    [How]
    After debugging with scaler vendors we implement the
    minimum delays at the necessary locations to ensure
    the monitor does not hang.  Delays are generic due to
    lack of IEEE OUI information on the failing displays.
    
    Signed-off-by: Aric Cyr <aric.cyr@amd.com>
    Reviewed-by: Wenjing Liu <Wenjing.Liu@amd.com>
    Acked-by: Qingqing Zhuo <qingqing.zhuo@amd.com>
    Acked-by: Tony Cheng <Tony.Cheng@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1839d11b9bb2c5b5ec388722176d08a7e4c65600
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Thu Apr 16 16:46:10 2020 -0700

    mm/mmap.c: Add cond_resched() for exit_mmap() CPU stalls
    
    [ Upstream commit 0a3b3c253a1eb2c7fe7f34086d46660c909abeb3 ]
    
    A large process running on a heavily loaded system can encounter the
    following RCU CPU stall warning:
    
      rcu: INFO: rcu_sched self-detected stall on CPU
      rcu:  3-....: (20998 ticks this GP) idle=4ea/1/0x4000000000000002 softirq=556558/556558 fqs=5190
            (t=21013 jiffies g=1005461 q=132576)
      NMI backtrace for cpu 3
      CPU: 3 PID: 501900 Comm: aio-free-ring-w Kdump: loaded Not tainted 5.2.9-108_fbk12_rc3_3858_gb83b75af7909 #1
      Hardware name: Wiwynn   HoneyBadger/PantherPlus, BIOS HBM6.71 02/03/2016
      Call Trace:
       <IRQ>
       dump_stack+0x46/0x60
       nmi_cpu_backtrace.cold.3+0x13/0x50
       ? lapic_can_unplug_cpu.cold.27+0x34/0x34
       nmi_trigger_cpumask_backtrace+0xba/0xca
       rcu_dump_cpu_stacks+0x99/0xc7
       rcu_sched_clock_irq.cold.87+0x1aa/0x397
       ? tick_sched_do_timer+0x60/0x60
       update_process_times+0x28/0x60
       tick_sched_timer+0x37/0x70
       __hrtimer_run_queues+0xfe/0x270
       hrtimer_interrupt+0xf4/0x210
       smp_apic_timer_interrupt+0x5e/0x120
       apic_timer_interrupt+0xf/0x20
       </IRQ>
      RIP: 0010:kmem_cache_free+0x223/0x300
      Code: 88 00 00 00 0f 85 ca 00 00 00 41 8b 55 18 31 f6 f7 da 41 f6 45 0a 02 40 0f 94 c6 83 c6 05 9c 41 5e fa e8 a0 a7 01 00 41 56 9d <49> 8b 47 08 a8 03 0f 85 87 00 00 00 65 48 ff 08 e9 3d fe ff ff 65
      RSP: 0018:ffffc9000e8e3da8 EFLAGS: 00000206 ORIG_RAX: ffffffffffffff13
      RAX: 0000000000020000 RBX: ffff88861b9de960 RCX: 0000000000000030
      RDX: fffffffffffe41e8 RSI: 000060777fe3a100 RDI: 000000000001be18
      RBP: ffffea00186e7780 R08: ffffffffffffffff R09: ffffffffffffffff
      R10: ffff88861b9dea28 R11: ffff88887ffde000 R12: ffffffff81230a1f
      R13: ffff888854684dc0 R14: 0000000000000206 R15: ffff8888547dbc00
       ? remove_vma+0x4f/0x60
       remove_vma+0x4f/0x60
       exit_mmap+0xd6/0x160
       mmput+0x4a/0x110
       do_exit+0x278/0xae0
       ? syscall_trace_enter+0x1d3/0x2b0
       ? handle_mm_fault+0xaa/0x1c0
       do_group_exit+0x3a/0xa0
       __x64_sys_exit_group+0x14/0x20
       do_syscall_64+0x42/0x100
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    And on a PREEMPT=n kernel, the "while (vma)" loop in exit_mmap() can run
    for a very long time given a large process.  This commit therefore adds
    a cond_resched() to this loop, providing RCU any needed quiescent states.
    
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: <linux-mm@kvack.org>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b70d115ebdcf97cc605716329c754676df881617
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Mon Jun 15 09:44:45 2020 +0200

    irqchip/irq-mtk-sysirq: Replace spinlock with raw_spinlock
    
    [ Upstream commit 6eeb997ab5075e770a002c51351fa4ec2c6b5c39 ]
    
    This driver may take a regular spinlock when a raw spinlock
    (irq_desc->lock) is already taken which results in the following
    lockdep splat:
    
    =============================
    [ BUG: Invalid wait context ]
    5.7.0-rc7 #1 Not tainted
    -----------------------------
    swapper/0/0 is trying to lock:
    ffffff800303b798 (&chip_data->lock){....}-{3:3}, at: mtk_sysirq_set_type+0x48/0xc0
    other info that might help us debug this:
    context-{5:5}
    2 locks held by swapper/0/0:
     #0: ffffff800302ee68 (&desc->request_mutex){....}-{4:4}, at: __setup_irq+0xc4/0x8a0
     #1: ffffff800302ecf0 (&irq_desc_lock_class){....}-{2:2}, at: __setup_irq+0xe4/0x8a0
    stack backtrace:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.7.0-rc7 #1
    Hardware name: Pumpkin MT8516 (DT)
    Call trace:
     dump_backtrace+0x0/0x180
     show_stack+0x14/0x20
     dump_stack+0xd0/0x118
     __lock_acquire+0x8c8/0x2270
     lock_acquire+0xf8/0x470
     _raw_spin_lock_irqsave+0x50/0x78
     mtk_sysirq_set_type+0x48/0xc0
     __irq_set_trigger+0x58/0x170
     __setup_irq+0x420/0x8a0
     request_threaded_irq+0xd8/0x190
     timer_of_init+0x1e8/0x2c4
     mtk_gpt_init+0x5c/0x1dc
     timer_probe+0x74/0xf4
     time_init+0x14/0x44
     start_kernel+0x394/0x4f0
    
    Replace the spinlock_t with raw_spinlock_t to avoid this warning.
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200615074445.3579-1-brgl@bgdev.pl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d77ecc91b0d8ea23d01cb8131fefdfef36f6b588
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Thu Jun 25 17:42:09 2020 +0200

    net: phy: mscc: restore the base page in vsc8514/8584_config_init
    
    [ Upstream commit 6119dda34e5d0821959e37641b287576826b6378 ]
    
    In the vsc8584_config_init and vsc8514_config_init, the base page is set
    to 'GPIO', configuration is done, and the page is never explicitly
    restored to the standard page. No bug was triggered as it turns out
    helpers called in those config_init functions do modify the base page,
    and set it back to standard. But that is dangerous and any modification
    to those functions would introduce bugs. This patch fixes this, to
    improve maintenance, by restoring the base page to 'standard' once
    'GPIO' accesses are completed.
    
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit befe5de6250b560980c8af253db4fc858d8271cb
Author: Christian König <christian.koenig@amd.com>
Date:   Tue May 12 10:55:58 2020 +0200

    drm/radeon: disable AGP by default
    
    [ Upstream commit ba806f98f868ce107aa9c453fef751de9980e4af ]
    
    Always use the PCI GART instead. We just have to many cases
    where AGP still causes problems. This means a performance
    regression for some GPUs, but also a bug fix for some others.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 175bbacf669b35ca42ce8ef70184f7d4d277641d
Author: Michael Tretter <m.tretter@pengutronix.de>
Date:   Thu Aug 17 12:43:07 2017 +0200

    drm/debugfs: fix plain echo to connector "force" attribute
    
    [ Upstream commit c704b17071c4dc571dca3af4e4151dac51de081a ]
    
    Using plain echo to set the "force" connector attribute fails with
    -EINVAL, because echo appends a newline to the output.
    
    Replace strcmp with sysfs_streq to also accept strings that end with a
    newline.
    
    v2: use sysfs_streq instead of stripping trailing whitespace
    
    Signed-off-by: Michael Tretter <m.tretter@pengutronix.de>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Emil Velikov <emil.l.velikov@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170817104307.17124-1-m.tretter@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 376bf3ddda59aa3c770f956485aea0732cbf65df
Author: Akhil P Oommen <akhilpo@codeaurora.org>
Date:   Fri Jul 10 02:01:55 2020 +0530

    drm/msm: Fix a null pointer access in msm_gem_shrinker_count()
    
    [ Upstream commit 3cbdc8d8b7f39a7af3ea7b8dfa75caaebfda4e56 ]
    
    Adding an msm_gem_object object to the inactive_list before completing
    its initialization is a bad idea because shrinker may pick it up from the
    inactive_list. Fix this by making sure that the initialization is complete
    before moving the msm_obj object to the inactive list.
    
    This patch fixes the below error:
    [10027.553044] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000068
    [10027.573305] Mem abort info:
    [10027.590160]   ESR = 0x96000006
    [10027.597905]   EC = 0x25: DABT (current EL), IL = 32 bits
    [10027.614430]   SET = 0, FnV = 0
    [10027.624427]   EA = 0, S1PTW = 0
    [10027.632722] Data abort info:
    [10027.638039]   ISV = 0, ISS = 0x00000006
    [10027.647459]   CM = 0, WnR = 0
    [10027.654345] user pgtable: 4k pages, 39-bit VAs, pgdp=00000001e3a6a000
    [10027.672681] [0000000000000068] pgd=0000000198c31003, pud=0000000198c31003, pmd=0000000000000000
    [10027.693900] Internal error: Oops: 96000006 [#1] PREEMPT SMP
    [10027.738261] CPU: 3 PID: 214 Comm: kswapd0 Tainted: G S                5.4.40 #1
    [10027.745766] Hardware name: Qualcomm Technologies, Inc. SC7180 IDP (DT)
    [10027.752472] pstate: 80c00009 (Nzcv daif +PAN +UAO)
    [10027.757409] pc : mutex_is_locked+0x14/0x2c
    [10027.761626] lr : msm_gem_shrinker_count+0x70/0xec
    [10027.766454] sp : ffffffc011323ad0
    [10027.769867] x29: ffffffc011323ad0 x28: ffffffe677e4b878
    [10027.775324] x27: 0000000000000cc0 x26: 0000000000000000
    [10027.780783] x25: ffffff817114a708 x24: 0000000000000008
    [10027.786242] x23: ffffff8023ab7170 x22: 0000000000000001
    [10027.791701] x21: ffffff817114a080 x20: 0000000000000119
    [10027.797160] x19: 0000000000000068 x18: 00000000000003bc
    [10027.802621] x17: 0000000004a34210 x16: 00000000000000c0
    [10027.808083] x15: 0000000000000000 x14: 0000000000000000
    [10027.813542] x13: ffffffe677e0a3c0 x12: 0000000000000000
    [10027.819000] x11: 0000000000000000 x10: ffffff8174b94340
    [10027.824461] x9 : 0000000000000000 x8 : 0000000000000000
    [10027.829919] x7 : 00000000000001fc x6 : ffffffc011323c88
    [10027.835373] x5 : 0000000000000001 x4 : ffffffc011323d80
    [10027.840832] x3 : ffffffff0477b348 x2 : 0000000000000000
    [10027.846290] x1 : ffffffc011323b68 x0 : 0000000000000068
    [10027.851748] Call trace:
    [10027.854264]  mutex_is_locked+0x14/0x2c
    [10027.858121]  msm_gem_shrinker_count+0x70/0xec
    [10027.862603]  shrink_slab+0xc0/0x4b4
    [10027.866187]  shrink_node+0x4a8/0x818
    [10027.869860]  kswapd+0x624/0x890
    [10027.873097]  kthread+0x11c/0x12c
    [10027.876424]  ret_from_fork+0x10/0x18
    [10027.880102] Code: f9000bf3 910003fd aa0003f3 d503201f (f9400268)
    [10027.886362] ---[ end trace df5849a1a3543251 ]---
    [10027.891518] Kernel panic - not syncing: Fatal exception
    
    Signed-off-by: Akhil P Oommen <akhilpo@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37f45e55b596ee4e7d32f7b33349f3b60756388b
Author: Akhil P Oommen <akhilpo@codeaurora.org>
Date:   Fri Jul 17 20:04:18 2020 +0530

    drm: msm: a6xx: fix gpu failure after system resume
    
    [ Upstream commit 57c0bd517c06b088106b0236ed604056c8e06da5 ]
    
    On targets where GMU is available, GMU takes over the ownership of GX GDSC
    during its initialization. So, move the refcount-get on GX PD before we
    initialize the GMU. This ensures that nobody can collapse the GX GDSC
    once GMU owns the GX GDSC. This patch fixes some GMU OOB errors seen
    during GPU wake up during a system resume.
    
    Reported-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Akhil P Oommen <akhilpo@codeaurora.org>
    Tested-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Jordan Crouse <jcrouse@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2ea1e1877d02f7605a1cf1ecaf03aa0db8a85ee
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Jul 27 15:14:59 2020 +0800

    usb: mtu3: clear dual mode of u3port when disable device
    
    [ Upstream commit f1e51e99ed498d4aa9ae5df28e43d558ea627781 ]
    
    If not clear u3port's dual mode when disable device, the IP
    will fail to enter sleep mode when suspend.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/1595834101-13094-10-git-send-email-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 870ed79fc2b70129e7f08eaee1369ba0cb12237f
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Jul 17 15:12:29 2020 -0400

    btrfs: fix lockdep splat from btrfs_dump_space_info
    
    [ Upstream commit ab0db043c35da3477e57d4d516492b2d51a5ca0f ]
    
    When running with -o enospc_debug you can get the following splat if one
    of the dump_space_info's trip
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc5+ #20 Tainted: G           OE
      ------------------------------------------------------
      dd/563090 is trying to acquire lock:
      ffff9e7dbf4f1e18 (&ctl->tree_lock){+.+.}-{2:2}, at: btrfs_dump_free_space+0x2b/0xa0 [btrfs]
    
      but task is already holding lock:
      ffff9e7e2284d428 (&cache->lock){+.+.}-{2:2}, at: btrfs_dump_space_info+0xaa/0x120 [btrfs]
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #3 (&cache->lock){+.+.}-{2:2}:
             _raw_spin_lock+0x25/0x30
             btrfs_add_reserved_bytes+0x3c/0x3c0 [btrfs]
             find_free_extent+0x7ef/0x13b0 [btrfs]
             btrfs_reserve_extent+0x9b/0x180 [btrfs]
             btrfs_alloc_tree_block+0xc1/0x340 [btrfs]
             alloc_tree_block_no_bg_flush+0x4a/0x60 [btrfs]
             __btrfs_cow_block+0x122/0x530 [btrfs]
             btrfs_cow_block+0x106/0x210 [btrfs]
             commit_cowonly_roots+0x55/0x300 [btrfs]
             btrfs_commit_transaction+0x4ed/0xac0 [btrfs]
             sync_filesystem+0x74/0x90
             generic_shutdown_super+0x22/0x100
             kill_anon_super+0x14/0x30
             btrfs_kill_super+0x12/0x20 [btrfs]
             deactivate_locked_super+0x36/0x70
             cleanup_mnt+0x104/0x160
             task_work_run+0x5f/0x90
             __prepare_exit_to_usermode+0x1bd/0x1c0
             do_syscall_64+0x5e/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #2 (&space_info->lock){+.+.}-{2:2}:
             _raw_spin_lock+0x25/0x30
             btrfs_block_rsv_release+0x1a6/0x3f0 [btrfs]
             btrfs_inode_rsv_release+0x4f/0x170 [btrfs]
             btrfs_clear_delalloc_extent+0x155/0x480 [btrfs]
             clear_state_bit+0x81/0x1a0 [btrfs]
             __clear_extent_bit+0x25c/0x5d0 [btrfs]
             clear_extent_bit+0x15/0x20 [btrfs]
             btrfs_invalidatepage+0x2b7/0x3c0 [btrfs]
             truncate_cleanup_page+0x47/0xe0
             truncate_inode_pages_range+0x238/0x840
             truncate_pagecache+0x44/0x60
             btrfs_setattr+0x202/0x5e0 [btrfs]
             notify_change+0x33b/0x490
             do_truncate+0x76/0xd0
             path_openat+0x687/0xa10
             do_filp_open+0x91/0x100
             do_sys_openat2+0x215/0x2d0
             do_sys_open+0x44/0x80
             do_syscall_64+0x52/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #1 (&tree->lock#2){+.+.}-{2:2}:
             _raw_spin_lock+0x25/0x30
             find_first_extent_bit+0x32/0x150 [btrfs]
             write_pinned_extent_entries.isra.0+0xc5/0x100 [btrfs]
             __btrfs_write_out_cache+0x172/0x480 [btrfs]
             btrfs_write_out_cache+0x7a/0xf0 [btrfs]
             btrfs_write_dirty_block_groups+0x286/0x3b0 [btrfs]
             commit_cowonly_roots+0x245/0x300 [btrfs]
             btrfs_commit_transaction+0x4ed/0xac0 [btrfs]
             close_ctree+0xf9/0x2f5 [btrfs]
             generic_shutdown_super+0x6c/0x100
             kill_anon_super+0x14/0x30
             btrfs_kill_super+0x12/0x20 [btrfs]
             deactivate_locked_super+0x36/0x70
             cleanup_mnt+0x104/0x160
             task_work_run+0x5f/0x90
             __prepare_exit_to_usermode+0x1bd/0x1c0
             do_syscall_64+0x5e/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #0 (&ctl->tree_lock){+.+.}-{2:2}:
             __lock_acquire+0x1240/0x2460
             lock_acquire+0xab/0x360
             _raw_spin_lock+0x25/0x30
             btrfs_dump_free_space+0x2b/0xa0 [btrfs]
             btrfs_dump_space_info+0xf4/0x120 [btrfs]
             btrfs_reserve_extent+0x176/0x180 [btrfs]
             __btrfs_prealloc_file_range+0x145/0x550 [btrfs]
             cache_save_setup+0x28d/0x3b0 [btrfs]
             btrfs_start_dirty_block_groups+0x1fc/0x4f0 [btrfs]
             btrfs_commit_transaction+0xcc/0xac0 [btrfs]
             btrfs_alloc_data_chunk_ondemand+0x162/0x4c0 [btrfs]
             btrfs_check_data_free_space+0x4c/0xa0 [btrfs]
             btrfs_buffered_write.isra.0+0x19b/0x740 [btrfs]
             btrfs_file_write_iter+0x3cf/0x610 [btrfs]
             new_sync_write+0x11e/0x1b0
             vfs_write+0x1c9/0x200
             ksys_write+0x68/0xe0
             do_syscall_64+0x52/0xb0
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      other info that might help us debug this:
    
      Chain exists of:
        &ctl->tree_lock --> &space_info->lock --> &cache->lock
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(&cache->lock);
                                     lock(&space_info->lock);
                                     lock(&cache->lock);
        lock(&ctl->tree_lock);
    
       *** DEADLOCK ***
    
      6 locks held by dd/563090:
       #0: ffff9e7e21d18448 (sb_writers#14){.+.+}-{0:0}, at: vfs_write+0x195/0x200
       #1: ffff9e7dd0410ed8 (&sb->s_type->i_mutex_key#19){++++}-{3:3}, at: btrfs_file_write_iter+0x86/0x610 [btrfs]
       #2: ffff9e7e21d18638 (sb_internal#2){.+.+}-{0:0}, at: start_transaction+0x40b/0x5b0 [btrfs]
       #3: ffff9e7e1f05d688 (&cur_trans->cache_write_mutex){+.+.}-{3:3}, at: btrfs_start_dirty_block_groups+0x158/0x4f0 [btrfs]
       #4: ffff9e7e2284ddb8 (&space_info->groups_sem){++++}-{3:3}, at: btrfs_dump_space_info+0x69/0x120 [btrfs]
       #5: ffff9e7e2284d428 (&cache->lock){+.+.}-{2:2}, at: btrfs_dump_space_info+0xaa/0x120 [btrfs]
    
      stack backtrace:
      CPU: 3 PID: 563090 Comm: dd Tainted: G           OE     5.8.0-rc5+ #20
      Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./890FX Deluxe5, BIOS P1.40 05/03/2011
      Call Trace:
       dump_stack+0x96/0xd0
       check_noncircular+0x162/0x180
       __lock_acquire+0x1240/0x2460
       ? wake_up_klogd.part.0+0x30/0x40
       lock_acquire+0xab/0x360
       ? btrfs_dump_free_space+0x2b/0xa0 [btrfs]
       _raw_spin_lock+0x25/0x30
       ? btrfs_dump_free_space+0x2b/0xa0 [btrfs]
       btrfs_dump_free_space+0x2b/0xa0 [btrfs]
       btrfs_dump_space_info+0xf4/0x120 [btrfs]
       btrfs_reserve_extent+0x176/0x180 [btrfs]
       __btrfs_prealloc_file_range+0x145/0x550 [btrfs]
       ? btrfs_qgroup_reserve_data+0x1d/0x60 [btrfs]
       cache_save_setup+0x28d/0x3b0 [btrfs]
       btrfs_start_dirty_block_groups+0x1fc/0x4f0 [btrfs]
       btrfs_commit_transaction+0xcc/0xac0 [btrfs]
       ? start_transaction+0xe0/0x5b0 [btrfs]
       btrfs_alloc_data_chunk_ondemand+0x162/0x4c0 [btrfs]
       btrfs_check_data_free_space+0x4c/0xa0 [btrfs]
       btrfs_buffered_write.isra.0+0x19b/0x740 [btrfs]
       ? ktime_get_coarse_real_ts64+0xa8/0xd0
       ? trace_hardirqs_on+0x1c/0xe0
       btrfs_file_write_iter+0x3cf/0x610 [btrfs]
       new_sync_write+0x11e/0x1b0
       vfs_write+0x1c9/0x200
       ksys_write+0x68/0xe0
       do_syscall_64+0x52/0xb0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    This is because we're holding the block_group->lock while trying to dump
    the free space cache.  However we don't need this lock, we just need it
    to read the values for the printk, so move the free space cache dumping
    outside of the block group lock.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14fad4e83050cfcee91ec30cf747b41ebc6ed7d4
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Jul 20 15:11:41 2020 +0900

    mmc: sdhci-cadence: do not use hardware tuning for SD mode
    
    [ Upstream commit adc40a5179df30421a5537bfeb4545100ab97d5e ]
    
    As commit ef6b75671b5f ("mmc: sdhci-cadence: send tune request twice to
    work around errata") stated, this IP has an errata. This commit applies
    the second workaround for the SD mode.
    
    Due to the errata, it is not possible to use the hardware tuning provided
    by SDHCI_HOST_CONTROL2.
    
    Use the software-controlled tuning like the eMMC mode.
    
    Set sdhci_host_ops::platform_execute_tuning instead of overriding
    mmc_host_ops::execute_tuning.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Link: https://lore.kernel.org/r/20200720061141.172944-1-yamada.masahiro@socionext.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 085af96b1506b34b7239d64e918d8a3b68edbb3a
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 20:41:56 2020 -0500

    drm/nouveau: fix multiple instances of reference count leaks
    
    [ Upstream commit 659fb5f154c3434c90a34586f3b7aa1c39cf6062 ]
    
    On calling pm_runtime_get_sync() the reference count of the device
    is incremented. In case of failure, decrement the
    ref count before returning the error.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff0ef144057ef8c234eb4d4a9fa016a1ff2ce816
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 20:48:37 2020 -0500

    drm/nouveau: fix reference count leak in nouveau_debugfs_strap_peek
    
    [ Upstream commit 8f29432417b11039ef960ab18987c7d61b2b5396 ]
    
    nouveau_debugfs_strap_peek() calls pm_runtime_get_sync() that
    increments the reference count. In case of failure, decrement the
    ref count before returning the error.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef11e2b533dedea923b60d88fd53c0a98dbf6bee
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jul 20 13:03:01 2020 +0200

    memory: samsung: exynos5422-dmc: Do not ignore return code of regmap_read()
    
    [ Upstream commit c4f16e96d8fdd62ef12898fc0965c42093bed237 ]
    
    Check for regmap_read() return code before using the read value in
    following write in exynos5_switch_timing_regs().  Pass reading error
    code to the callers.
    
    This does not introduce proper error handling for such failed reads (and
    obviously regmap_write() error is still ignored) because the driver
    ignored this in all places.  Therefor it only fixes reported issue while
    matching current driver coding style:
    
           drivers/memory/samsung/exynos5422-dmc.c: In function 'exynos5_switch_timing_regs':
        >> drivers/memory/samsung/exynos5422-dmc.c:216:6: warning: variable 'ret' set but not used [-Wunused-but-set-variable]
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1020d869babfd8c8cd6a9649b494479e8c1f56e5
Author: Shannon Nelson <snelson@pensando.io>
Date:   Tue Jul 21 13:34:08 2020 -0700

    ionic: rearrange reset and bus-master control
    
    [ Upstream commit 6a6014e2fb276753d4dc9b803370e7af7f57e30b ]
    
    We can prevent potential incorrect DMA access attempts from the
    NIC by enabling bus-master after the reset, and by disabling
    bus-master earlier in cleanup.
    
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51d26960fcb0d0bf32520f8e738e33d80c01dcd5
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Mon Jun 15 01:12:20 2020 -0500

    drm/etnaviv: fix ref count leak via pm_runtime_get_sync
    
    [ Upstream commit c5d5a32ead1e3a61a07a1e59eb52a53e4a6b2a7f ]
    
    in etnaviv_gpu_submit, etnaviv_gpu_recover_hang, etnaviv_gpu_debugfs,
    and etnaviv_gpu_init the call to pm_runtime_get_sync increments the
    counter even in case of failure, leading to incorrect ref count.
    In case of failure, decrement the ref count before returning.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49395a64e5f55edc15acc6cfa04470f471077ce0
Author: Ricardo Cañuelo <ricardo.canuelo@collabora.com>
Date:   Mon Jun 1 08:33:06 2020 +0200

    arm64: dts: hisilicon: hikey: fixes to comply with adi, adv7533 DT binding
    
    [ Upstream commit bbe28fc3cbabbef781bcdf847615d52ce2e26e42 ]
    
    hi3660-hikey960.dts:
      Define a 'ports' node for 'adv7533: adv7533@39' and the
      'adi,dsi-lanes' property to make it compliant with the adi,adv7533 DT
      binding.
    
      This fills the requirements to meet the binding requirements,
      remote endpoints are not defined.
    
    hi6220-hikey.dts:
      Change property name s/pd-gpio/pd-gpios, gpio properties should be
      plural. This is just a cosmetic change.
    
    Signed-off-by: Ricardo Cañuelo <ricardo.canuelo@collabora.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 256d7e3a6752f0818d10660e7fa3770fc29308f0
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Mar 17 14:54:06 2020 -0400

    drm/nouveau/kms/nv50-: Fix disabling dithering
    
    [ Upstream commit fb2420b701edbf96c2b6d557f0139902f455dc2b ]
    
    While we expose the ability to turn off hardware dithering for nouveau,
    we actually make the mistake of turning it on anyway, due to
    dithering_depth containing a non-zero value if our dithering depth isn't
    also set to 6 bpc.
    
    So, fix it by never enabling dithering when it's disabled.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Ben Skeggs <bskeggs@redhat.com>
    Acked-by: Dave Airlie <airlied@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200627194657.156514-6-lyude@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77a318a4da3eea8edd4b5631fc84a3e811f1b77d
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Jun 12 16:27:45 2020 +0800

    rtw88: 8822ce: add support for device ID 0xc82f
    
    [ Upstream commit 7d428b1c9ffc9ddcdd64c6955836bbb17a233ef3 ]
    
    New device ID 0xc82f found on Lenovo ThinkCenter.
    Tested it with c822 driver, works good.
    
    PCI id:
    03:00.0 Network controller [0280]: Realtek Semiconductor Co., Ltd.
    Device [10ec:c82f]
            Subsystem: Lenovo Device [17aa:c02f]
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200612082745.204400-1-aaron.ma@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 679d3baca18fcae7c51e2eedab784ae276ed78fb
Author: Zhao Heming <heming.zhao@suse.com>
Date:   Thu Jul 9 11:29:29 2020 +0800

    md-cluster: fix wild pointer of unlock_all_bitmaps()
    
    [ Upstream commit 60f80d6f2d07a6d8aee485a1d1252327eeee0c81 ]
    
    reproduction steps:
    ```
    node1 # mdadm -C /dev/md0 -b clustered -e 1.2 -n 2 -l mirror /dev/sda
    /dev/sdb
    node2 # mdadm -A /dev/md0 /dev/sda /dev/sdb
    node1 # mdadm -G /dev/md0 -b none
    mdadm: failed to remove clustered bitmap.
    node1 # mdadm -S --scan
    ^C  <==== mdadm hung & kernel crash
    ```
    
    kernel stack:
    ```
    [  335.230657] general protection fault: 0000 [#1] SMP NOPTI
    [...]
    [  335.230848] Call Trace:
    [  335.230873]  ? unlock_all_bitmaps+0x5/0x70 [md_cluster]
    [  335.230886]  unlock_all_bitmaps+0x3d/0x70 [md_cluster]
    [  335.230899]  leave+0x10f/0x190 [md_cluster]
    [  335.230932]  ? md_super_wait+0x93/0xa0 [md_mod]
    [  335.230947]  ? leave+0x5/0x190 [md_cluster]
    [  335.230973]  md_cluster_stop+0x1a/0x30 [md_mod]
    [  335.230999]  md_bitmap_free+0x142/0x150 [md_mod]
    [  335.231013]  ? _cond_resched+0x15/0x40
    [  335.231025]  ? mutex_lock+0xe/0x30
    [  335.231056]  __md_stop+0x1c/0xa0 [md_mod]
    [  335.231083]  do_md_stop+0x160/0x580 [md_mod]
    [  335.231119]  ? 0xffffffffc05fb078
    [  335.231148]  md_ioctl+0xa04/0x1930 [md_mod]
    [  335.231165]  ? filename_lookup+0xf2/0x190
    [  335.231179]  blkdev_ioctl+0x93c/0xa10
    [  335.231205]  ? _cond_resched+0x15/0x40
    [  335.231214]  ? __check_object_size+0xd4/0x1a0
    [  335.231224]  block_ioctl+0x39/0x40
    [  335.231243]  do_vfs_ioctl+0xa0/0x680
    [  335.231253]  ksys_ioctl+0x70/0x80
    [  335.231261]  __x64_sys_ioctl+0x16/0x20
    [  335.231271]  do_syscall_64+0x65/0x1f0
    [  335.231278]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    ```
    
    Signed-off-by: Zhao Heming <heming.zhao@suse.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ff3a2b771b9bc7f80f3b7d2635695726fc0cd6c
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jul 13 09:59:47 2020 -0700

    bus: ti-sysc: Add missing quirk flags for usb_host_hs
    
    [ Upstream commit 4254632dba27271f6de66efd87e444ee405dee29 ]
    
    Similar to what we have for the legacy platform data, we need to
    configure SWSUP_SIDLE and SWSUP_MSTANDBY quirks for usb_host_hs.
    
    These are needed to drop the legacy platform data for usb_host_hs.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8131c27f80887a46266da2c7173ce1e0f9bee634
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Tue Jun 30 22:54:51 2020 +0300

    video: fbdev: neofb: fix memory leak in neo_scan_monitor()
    
    [ Upstream commit edcb3895a751c762a18d25c8d9846ce9759ed7e1 ]
    
    neofb_probe() calls neo_scan_monitor() that can successfully allocate a
    memory for info->monspecs.modedb and proceed to case 0x03. There it does
    not free the memory and returns -1. neofb_probe() goes to label
    err_scan_monitor, thus, it does not free this memory through calling
    fb_destroy_modedb() as well. We can not go to label err_init_hw since
    neo_scan_monitor() can fail during memory allocation. So, the patch frees
    the memory directly for case 0x03.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200630195451.18675-1-novikov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cc3bdb0aea5bb63920969678f02385f156e7901
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Fri Jun 19 19:21:36 2020 +0300

    video: fbdev: savage: fix memory leak on error handling path in probe
    
    [ Upstream commit e8d35898a78e34fc854ed9680bc3f9caedab08cd ]
    
    savagefb_probe() calls savage_init_fb_info() that can successfully
    allocate memory for info->pixmap.addr but then fail when
    fb_alloc_cmap() fails. savagefb_probe() goes to label failed_init and
    does not free allocated memory. It is not valid to go to label
    failed_mmio since savage_init_fb_info() can fail during memory
    allocation as well. So, the patch free allocated memory on the error
    handling path in savage_init_fb_info() itself.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Cc: Antonino Daplas <adaplas@gmail.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200619162136.9010-1-novikov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cccec0d3e0ef2280d47bb171e986509cb8e611a3
Author: Sedat Dilek <sedat.dilek@gmail.com>
Date:   Fri Jul 3 16:32:06 2020 +0200

    crypto: aesni - Fix build with LLVM_IAS=1
    
    [ Upstream commit 3347c8a079d67af21760a78cc5f2abbcf06d9571 ]
    
    When building with LLVM_IAS=1 means using Clang's Integrated Assembly (IAS)
    from LLVM/Clang >= v10.0.1-rc1+ instead of GNU/as from GNU/binutils
    I see the following breakage in Debian/testing AMD64:
    
    <instantiation>:15:74: error: too many positional arguments
     PRECOMPUTE 8*3+8(%rsp), %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7,
                                                                             ^
     arch/x86/crypto/aesni-intel_asm.S:1598:2: note: while in macro instantiation
     GCM_INIT %r9, 8*3 +8(%rsp), 8*3 +16(%rsp), 8*3 +24(%rsp)
     ^
    <instantiation>:47:2: error: unknown use of instruction mnemonic without a size suffix
     GHASH_4_ENCRYPT_4_PARALLEL_dec %xmm9, %xmm10, %xmm11, %xmm12, %xmm13, %xmm14, %xmm0, %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7, %xmm8, enc
     ^
    arch/x86/crypto/aesni-intel_asm.S:1599:2: note: while in macro instantiation
     GCM_ENC_DEC dec
     ^
    <instantiation>:15:74: error: too many positional arguments
     PRECOMPUTE 8*3+8(%rsp), %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7,
                                                                             ^
    arch/x86/crypto/aesni-intel_asm.S:1686:2: note: while in macro instantiation
     GCM_INIT %r9, 8*3 +8(%rsp), 8*3 +16(%rsp), 8*3 +24(%rsp)
     ^
    <instantiation>:47:2: error: unknown use of instruction mnemonic without a size suffix
     GHASH_4_ENCRYPT_4_PARALLEL_enc %xmm9, %xmm10, %xmm11, %xmm12, %xmm13, %xmm14, %xmm0, %xmm1, %xmm2, %xmm3, %xmm4, %xmm5, %xmm6, %xmm7, %xmm8, enc
     ^
    arch/x86/crypto/aesni-intel_asm.S:1687:2: note: while in macro instantiation
     GCM_ENC_DEC enc
    
    Craig Topper suggested me in ClangBuiltLinux issue #1050:
    
    > I think the "too many positional arguments" is because the parser isn't able
    > to handle the trailing commas.
    >
    > The "unknown use of instruction mnemonic" is because the macro was named
    > GHASH_4_ENCRYPT_4_PARALLEL_DEC but its being instantiated with
    > GHASH_4_ENCRYPT_4_PARALLEL_dec I guess gas ignores case on the
    > macro instantiation, but llvm doesn't.
    
    First, I removed the trailing comma in the PRECOMPUTE line.
    
    Second, I substituted:
    1. GHASH_4_ENCRYPT_4_PARALLEL_DEC -> GHASH_4_ENCRYPT_4_PARALLEL_dec
    2. GHASH_4_ENCRYPT_4_PARALLEL_ENC -> GHASH_4_ENCRYPT_4_PARALLEL_enc
    
    With these changes I was able to build with LLVM_IAS=1 and boot on bare metal.
    
    I confirmed that this works with Linux-kernel v5.7.5 final.
    
    NOTE: This patch is on top of Linux v5.7 final.
    
    Thanks to Craig and especially Nick for double-checking and his comments.
    
    Suggested-by: Craig Topper <craig.topper@intel.com>
    Suggested-by: Craig Topper <craig.topper@gmail.com>
    Suggested-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: "ClangBuiltLinux" <clang-built-linux@googlegroups.com>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1050
    Link: https://bugs.llvm.org/show_bug.cgi?id=24494
    Signed-off-by: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90bcb927d66d6919631a0a005ba53470dad4e638
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sat Jun 13 21:21:22 2020 -0500

    drm/radeon: Fix reference count leaks caused by pm_runtime_get_sync
    
    [ Upstream commit 9fb10671011143d15b6b40d6d5fa9c52c57e9d63 ]
    
    On calling pm_runtime_get_sync() the reference count of the device
    is incremented. In case of failure, decrement the
    reference count before returning the error.
    
    Acked-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59fed9e55e175ea70346496b7283254694cf76d5
Author: Jack Xiao <Jack.Xiao@amd.com>
Date:   Wed Jun 5 16:30:13 2019 +0800

    drm/amdgpu: avoid dereferencing a NULL pointer
    
    [ Upstream commit 55611b507fd6453d26030c0c0619fdf0c262766d ]
    
    Check if irq_src is NULL to avoid dereferencing a NULL pointer,
    for MES ring is uneccessary to recieve an interrupt notification.
    
    Signed-off-by: Jack Xiao <Jack.Xiao@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cd01fb89ac9f25b191f27a0b59f951138753cc6
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri May 8 14:15:37 2020 -0700

    fs/btrfs: Add cond_resched() for try_release_extent_mapping() stalls
    
    [ Upstream commit 9f47eb5461aaeb6cb8696f9d11503ae90e4d5cb0 ]
    
    Very large I/Os can cause the following RCU CPU stall warning:
    
    RIP: 0010:rb_prev+0x8/0x50
    Code: 49 89 c0 49 89 d1 48 89 c2 48 89 f8 e9 e5 fd ff ff 4c 89 48 10 c3 4c =
    89 06 c3 4c 89 40 10 c3 0f 1f 00 48 8b 0f 48 39 cf 74 38 <48> 8b 47 10 48 85 c0 74 22 48 8b 50 08 48 85 d2 74 0c 48 89 d0 48
    RSP: 0018:ffffc9002212bab0 EFLAGS: 00000287 ORIG_RAX: ffffffffffffff13
    RAX: ffff888821f93630 RBX: ffff888821f93630 RCX: ffff888821f937e0
    RDX: 0000000000000000 RSI: 0000000000102000 RDI: ffff888821f93630
    RBP: 0000000000103000 R08: 000000000006c000 R09: 0000000000000238
    R10: 0000000000102fff R11: ffffc9002212bac8 R12: 0000000000000001
    R13: ffffffffffffffff R14: 0000000000102000 R15: ffff888821f937e0
     __lookup_extent_mapping+0xa0/0x110
     try_release_extent_mapping+0xdc/0x220
     btrfs_releasepage+0x45/0x70
     shrink_page_list+0xa39/0xb30
     shrink_inactive_list+0x18f/0x3b0
     shrink_lruvec+0x38e/0x6b0
     shrink_node+0x14d/0x690
     do_try_to_free_pages+0xc6/0x3e0
     try_to_free_mem_cgroup_pages+0xe6/0x1e0
     reclaim_high.constprop.73+0x87/0xc0
     mem_cgroup_handle_over_high+0x66/0x150
     exit_to_usermode_loop+0x82/0xd0
     do_syscall_64+0xd4/0x100
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    On a PREEMPT=n kernel, the try_release_extent_mapping() function's
    "while" loop might run for a very long time on a large I/O.  This commit
    therefore adds a cond_resched() to this loop, providing RCU any needed
    quiescent states.
    
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a4f7281d5a61e7330a43ef13b0bb5fa5f8279c4
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sat Jun 27 14:04:59 2020 +0300

    io_uring: fix req->work corruption
    
    [ Upstream commit 8ef77766ba8694968ed4ba24311b4bacee14f235 ]
    
    req->work and req->task_work are in a union, so io_req_task_queue() screws
    everything that was in work. De-union them for now.
    
    [  704.367253] BUG: unable to handle page fault for address:
            ffffffffaf7330d0
    [  704.367256] #PF: supervisor write access in kernel mode
    [  704.367256] #PF: error_code(0x0003) - permissions violation
    [  704.367261] CPU: 6 PID: 1654 Comm: io_wqe_worker-0 Tainted: G
    I       5.8.0-rc2-00038-ge28d0bdc4863-dirty #498
    [  704.367265] RIP: 0010:_raw_spin_lock+0x1e/0x36
    ...
    [  704.367276]  __alloc_fd+0x35/0x150
    [  704.367279]  __get_unused_fd_flags+0x25/0x30
    [  704.367280]  io_openat2+0xcb/0x1b0
    [  704.367283]  io_issue_sqe+0x36a/0x1320
    [  704.367294]  io_wq_submit_work+0x58/0x160
    [  704.367295]  io_worker_handle_work+0x2a3/0x430
    [  704.367296]  io_wqe_worker+0x2a0/0x350
    [  704.367301]  kthread+0x136/0x180
    [  704.367304]  ret_from_fork+0x22/0x30
    
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b51a31ec3e7c0ed31bb02aa0f1b637312f460361
Author: Luis Chamberlain <mcgrof@kernel.org>
Date:   Fri Jun 19 20:47:27 2020 +0000

    loop: be paranoid on exit and prevent new additions / removals
    
    [ Upstream commit 200f93377220504c5e56754823e7adfea6037f1a ]
    
    Be pedantic on removal as well and hold the mutex.
    This should prevent uses of addition while we exit.
    
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35dfb4f8423eee481c1b5ce29ef22dfe389fcae2
Author: Lihong Kou <koulihong@huawei.com>
Date:   Tue Jun 23 20:28:41 2020 +0800

    Bluetooth: add a mutex lock to avoid UAF in do_enale_set
    
    [ Upstream commit f9c70bdc279b191da8d60777c627702c06e4a37d ]
    
    In the case we set or free the global value listen_chan in
    different threads, we can encounter the UAF problems because
    the method is not protected by any lock, add one to avoid
    this bug.
    
    BUG: KASAN: use-after-free in l2cap_chan_close+0x48/0x990
    net/bluetooth/l2cap_core.c:730
    Read of size 8 at addr ffff888096950000 by task kworker/1:102/2868
    
    CPU: 1 PID: 2868 Comm: kworker/1:102 Not tainted 5.5.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine,
    BIOS Google 01/01/2011
    Workqueue: events do_enable_set
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1fb/0x318 lib/dump_stack.c:118
     print_address_description+0x74/0x5c0 mm/kasan/report.c:374
     __kasan_report+0x149/0x1c0 mm/kasan/report.c:506
     kasan_report+0x26/0x50 mm/kasan/common.c:641
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:135
     l2cap_chan_close+0x48/0x990 net/bluetooth/l2cap_core.c:730
     do_enable_set+0x660/0x900 net/bluetooth/6lowpan.c:1074
     process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264
     worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410
     kthread+0x332/0x350 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    Allocated by task 2870:
     save_stack mm/kasan/common.c:72 [inline]
     set_track mm/kasan/common.c:80 [inline]
     __kasan_kmalloc+0x118/0x1c0 mm/kasan/common.c:515
     kasan_kmalloc+0x9/0x10 mm/kasan/common.c:529
     kmem_cache_alloc_trace+0x221/0x2f0 mm/slab.c:3551
     kmalloc include/linux/slab.h:555 [inline]
     kzalloc include/linux/slab.h:669 [inline]
     l2cap_chan_create+0x50/0x320 net/bluetooth/l2cap_core.c:446
     chan_create net/bluetooth/6lowpan.c:640 [inline]
     bt_6lowpan_listen net/bluetooth/6lowpan.c:959 [inline]
     do_enable_set+0x6a4/0x900 net/bluetooth/6lowpan.c:1078
     process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264
     worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410
     kthread+0x332/0x350 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    Freed by task 2870:
     save_stack mm/kasan/common.c:72 [inline]
     set_track mm/kasan/common.c:80 [inline]
     kasan_set_free_info mm/kasan/common.c:337 [inline]
     __kasan_slab_free+0x12e/0x1e0 mm/kasan/common.c:476
     kasan_slab_free+0xe/0x10 mm/kasan/common.c:485
     __cache_free mm/slab.c:3426 [inline]
     kfree+0x10d/0x220 mm/slab.c:3757
     l2cap_chan_destroy net/bluetooth/l2cap_core.c:484 [inline]
     kref_put include/linux/kref.h:65 [inline]
     l2cap_chan_put+0x170/0x190 net/bluetooth/l2cap_core.c:498
     do_enable_set+0x66c/0x900 net/bluetooth/6lowpan.c:1075
     process_one_work+0x7f5/0x10f0 kernel/workqueue.c:2264
     worker_thread+0xbbc/0x1630 kernel/workqueue.c:2410
     kthread+0x332/0x350 kernel/kthread.c:255
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    The buggy address belongs to the object at ffff888096950000
     which belongs to the cache kmalloc-2k of size 2048
    The buggy address is located 0 bytes inside of
     2048-byte region [ffff888096950000, ffff888096950800)
    The buggy address belongs to the page:
    page:ffffea00025a5400 refcount:1 mapcount:0 mapping:ffff8880aa400e00 index:0x0
    flags: 0xfffe0000000200(slab)
    raw: 00fffe0000000200 ffffea00027d1548 ffffea0002397808 ffff8880aa400e00
    raw: 0000000000000000 ffff888096950000 0000000100000001 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88809694ff00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff88809694ff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    >ffff888096950000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                       ^
     ffff888096950080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff888096950100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Reported-by: syzbot+96414aa0033c363d8458@syzkaller.appspotmail.com
    Signed-off-by: Lihong Kou <koulihong@huawei.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fd31dbc8ece17c7ee14190dd9300f14b2ad2c59
Author: Guillaume Tucker <guillaume.tucker@collabora.com>
Date:   Fri Jun 12 14:58:37 2020 +0100

    ARM: exynos: clear L310_AUX_CTRL_FULL_LINE_ZERO in default l2c_aux_val
    
    [ Upstream commit 5b17a04addc29201dc142c8d2c077eb7745d2e35 ]
    
    This "alert" error message can be seen on exynos4412-odroidx2:
    
        L2C: platform modifies aux control register: 0x02070000 -> 0x3e470001
        L2C: platform provided aux values permit register corruption.
    
    Followed by this plain error message:
    
        L2C-310: enabling full line of zeros but not enabled in Cortex-A9
    
    To fix it, don't set the L310_AUX_CTRL_FULL_LINE_ZERO flag (bit 0) in
    the default value of l2c_aux_val.  It may instead be enabled when
    applicable by the logic in l2c310_enable() if the attribute
    "arm,full-line-zero-disable" was set in the device tree.
    
    The initial commit that introduced this default value was in v2.6.38
    commit 1cf0eb799759 ("ARM: S5PV310: Add L2 cache init function in
    cpu.c").
    
    However, the code to set the L310_AUX_CTRL_FULL_LINE_ZERO flag and
    manage that feature was added much later and the default value was not
    updated then.  So this seems to have been a subtle oversight
    especially since enabling it only in the cache and not in the A9 core
    doesn't actually prevent the platform from running.  According to the
    TRM, the opposite would be a real issue, if the feature was enabled in
    the A9 core but not in the cache controller.
    
    Reported-by: "kernelci.org bot" <bot@kernelci.org>
    Signed-off-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be90ca6b1f536981094f02c670ba34fb64858087
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Jun 21 14:45:59 2020 +0300

    net: mscc: ocelot: fix encoding destination ports into multicast IPv4 address
    
    [ Upstream commit 0897ecf7532577bda3dbcb043ce046a96948889d ]
    
    The ocelot hardware designers have made some hacks to support multicast
    IPv4 and IPv6 addresses. Normally, the MAC table matches on MAC
    addresses and the destination ports are selected through the DEST_IDX
    field of the respective MAC table entry. The DEST_IDX points to a Port
    Group ID (PGID) which contains the bit mask of ports that frames should
    be forwarded to. But there aren't a lot of PGIDs (only 80 or so) and
    there are clearly many more IP multicast addresses than that, so it
    doesn't scale to use this PGID mechanism, so something else was done.
    Since the first portion of the MAC address is known, the hack they did
    was to use a single PGID for _flooding_ unknown IPv4 multicast
    (PGID_MCIPV4 == 62), but for known IP multicast, embed the destination
    ports into the first 3 bytes of the MAC address recorded in the MAC
    table.
    
    The VSC7514 datasheet explains it like this:
    
        3.9.1.5 IPv4 Multicast Entries
    
        MAC table entries with the ENTRY_TYPE = 2 settings are interpreted
        as IPv4 multicast entries.
        IPv4 multicasts entries match IPv4 frames, which are classified to
        the specified VID, and which have DMAC = 0x01005Exxxxxx, where
        xxxxxx is the lower 24 bits of the MAC address in the entry.
        Instead of a lookup in the destination mask table (PGID), the
        destination set is programmed as part of the entry MAC address. This
        is shown in the following table.
    
        Table 78: IPv4 Multicast Destination Mask
    
            Destination Ports            Record Bit Field
            ---------------------------------------------
            Ports 10-0                   MAC[34-24]
    
        Example: All IPv4 multicast frames in VLAN 12 with MAC 01005E112233 are
        to be forwarded to ports 3, 8, and 9. This is done by inserting the
        following entry in the MAC table entry:
        VALID = 1
        VID = 12
        MAC = 0x000308112233
        ENTRY_TYPE = 2
        DEST_IDX = 0
    
    But this procedure is not at all what's going on in the driver. In fact,
    the code that embeds the ports into the MAC address looks like it hasn't
    actually been tested. This patch applies the procedure described in the
    datasheet.
    
    Since there are many other fixes to be made around multicast forwarding
    until it works properly, there is no real reason for this patch to be
    backported to stable trees, or considered a real fix of something that
    should have worked.
    
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9638ef9db8392fdc10d2bb4f7fd2288f13dd27bf
Author: Maulik Shah <mkshah@codeaurora.org>
Date:   Mon Jun 22 12:23:25 2020 +0530

    soc: qcom: rpmh-rsc: Set suppress_bind_attrs flag
    
    [ Upstream commit 1a53ce9ab4faeb841b33d62d23283dc76c0e7c5a ]
    
    rpmh-rsc driver is fairly core to system and should not be removable
    once its probed. However it allows to unbind driver from sysfs using
    below command which results into a crash on sc7180.
    
    echo 18200000.rsc > /sys/bus/platform/drivers/rpmh/unbind
    
    Lets prevent unbind at runtime by setting suppress_bind_attrs flag.
    
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Maulik Shah <mkshah@codeaurora.org>
    Link: https://lore.kernel.org/r/1592808805-2437-1-git-send-email-mkshah@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47b94c5c6604f0c286c9fce9aaddeefc275690c6
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Wed Apr 29 13:42:32 2020 +0300

    drm/tilcdc: fix leak & null ref in panel_connector_get_modes
    
    [ Upstream commit 3f9c1c872cc97875ddc8d63bc9fe6ee13652b933 ]
    
    If videomode_from_timings() returns true, the mode allocated with
    drm_mode_create will be leaked.
    
    Also, the return value of drm_mode_create() is never checked, and thus
    could cause NULL deref.
    
    Fix these two issues.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200429104234.18910-1-tomi.valkeinen@ti.com
    Reviewed-by: Jyri Sarha <jsarha@ti.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22ca8cb2a5b9b34034ae19d0e4c1c969d5576051
Author: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Date:   Thu Jul 30 20:25:17 2020 +0900

    block: don't do revalidate zones on invalid devices
    
    [ Upstream commit 1a1206dc4cf02cee4b5cbce583ee4c22368b4c28 ]
    
    When we loose a device for whatever reason while (re)scanning zones, we
    trip over a NULL pointer in blk_revalidate_zone_cb, like in the following
    log:
    
    sd 0:0:0:0: [sda] 3418095616 4096-byte logical blocks: (14.0 TB/12.7 TiB)
    sd 0:0:0:0: [sda] 52156 zones of 65536 logical blocks
    sd 0:0:0:0: [sda] Write Protect is off
    sd 0:0:0:0: [sda] Mode Sense: 37 00 00 08
    sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
    sd 0:0:0:0: [sda] REPORT ZONES start lba 1065287680 failed
    sd 0:0:0:0: [sda] REPORT ZONES: Result: hostbyte=0x00 driverbyte=0x08
    sd 0:0:0:0: [sda] Sense Key : 0xb [current]
    sd 0:0:0:0: [sda] ASC=0x0 ASCQ=0x6
    sda: failed to revalidate zones
    sd 0:0:0:0: [sda] 0 4096-byte logical blocks: (0 B/0 B)
    sda: detected capacity change from 14000519643136 to 0
    ==================================================================
    BUG: KASAN: null-ptr-deref in blk_revalidate_zone_cb+0x1b7/0x550
    Write of size 8 at addr 0000000000000010 by task kworker/u4:1/58
    
    CPU: 1 PID: 58 Comm: kworker/u4:1 Not tainted 5.8.0-rc1 #692
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4-rebuilt.opensuse.org 04/01/2014
    Workqueue: events_unbound async_run_entry_fn
    Call Trace:
     dump_stack+0x7d/0xb0
     ? blk_revalidate_zone_cb+0x1b7/0x550
     kasan_report.cold+0x5/0x37
     ? blk_revalidate_zone_cb+0x1b7/0x550
     check_memory_region+0x145/0x1a0
     blk_revalidate_zone_cb+0x1b7/0x550
     sd_zbc_parse_report+0x1f1/0x370
     ? blk_req_zone_write_trylock+0x200/0x200
     ? sectors_to_logical+0x60/0x60
     ? blk_req_zone_write_trylock+0x200/0x200
     ? blk_req_zone_write_trylock+0x200/0x200
     sd_zbc_report_zones+0x3c4/0x5e0
     ? sd_dif_config_host+0x500/0x500
     blk_revalidate_disk_zones+0x231/0x44d
     ? _raw_write_lock_irqsave+0xb0/0xb0
     ? blk_queue_free_zone_bitmaps+0xd0/0xd0
     sd_zbc_read_zones+0x8cf/0x11a0
     sd_revalidate_disk+0x305c/0x64e0
     ? __device_add_disk+0x776/0xf20
     ? read_capacity_16.part.0+0x1080/0x1080
     ? blk_alloc_devt+0x250/0x250
     ? create_object.isra.0+0x595/0xa20
     ? kasan_unpoison_shadow+0x33/0x40
     sd_probe+0x8dc/0xcd2
     really_probe+0x20e/0xaf0
     __driver_attach_async_helper+0x249/0x2d0
     async_run_entry_fn+0xbe/0x560
     process_one_work+0x764/0x1290
     ? _raw_read_unlock_irqrestore+0x30/0x30
     worker_thread+0x598/0x12f0
     ? __kthread_parkme+0xc6/0x1b0
     ? schedule+0xed/0x2c0
     ? process_one_work+0x1290/0x1290
     kthread+0x36b/0x440
     ? kthread_create_worker_on_cpu+0xa0/0xa0
     ret_from_fork+0x22/0x30
    ==================================================================
    
    When the device is already gone we end up with the following scenario:
    The device's capacity is 0 and thus the number of zones will be 0 as well. When
    allocating the bitmap for the conventional zones, we then trip over a NULL
    pointer.
    
    So if we encounter a zoned block device with a 0 capacity, don't dare to
    revalidate the zones sizes.
    
    Fixes: 6c6b35491422 ("block: set the zone size in blk_revalidate_disk_zones atomically")
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c3aeda8791c0480d4eb434d9c69bde9d3cef585
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Jul 30 16:51:30 2020 +0800

    irqchip/loongson-pch-pic: Fix the misused irq flow handler
    
    [ Upstream commit ac62460c24126eb2442e3653a266ebbf05b004d8 ]
    
    Loongson PCH PIC is a standard level triggered PIC, and it need to clear
    interrupt during unmask.
    
    Fixes: ef8c01eb64ca6719da449dab0 ("irqchip: Add Loongson PCH PIC controller")
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Tested-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Link: https://lore.kernel.org/r/1596099090-23516-6-git-send-email-chenhc@lemote.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c790d6a2306bab6d01d3dcfdb7f97cec0e9fff0c
Author: Hannes Reinecke <hare@suse.de>
Date:   Mon Jul 27 18:08:03 2020 +0200

    nvme-multipath: do not fall back to __nvme_find_path() for non-optimized paths
    
    [ Upstream commit fbd6a42d8932e172921c7de10468a2e12c34846b ]
    
    When nvme_round_robin_path() finds a valid namespace we should be using it;
    falling back to __nvme_find_path() for non-optimized paths will cause the
    result from nvme_round_robin_path() to be ignored for non-optimized paths.
    
    Fixes: 75c10e732724 ("nvme-multipath: round-robin I/O policy")
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebd5b7f6b99eb2c0d99a97a14860c674c5a6009c
Author: Martin Wilck <mwilck@suse.com>
Date:   Mon Jul 27 18:08:02 2020 +0200

    nvme-multipath: fix logic for non-optimized paths
    
    [ Upstream commit 3f6e3246db0e6f92e784965d9d0edb8abe6c6b74 ]
    
    Handle the special case where we have exactly one optimized path,
    which we should keep using in this case.
    
    Fixes: 75c10e732724 ("nvme-multipath: round-robin I/O policy")
    Signed off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7e15f57766cf5e42b630612a144f15bf571a05a
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Jul 27 17:32:09 2020 -0700

    nvme-rdma: fix controller reset hang during traffic
    
    [ Upstream commit 9f98772ba307dd89a3d17dc2589f213d3972fc64 ]
    
    commit fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    exposed an issue where we may hang trying to wait for queue freeze
    during I/O. We call blk_mq_update_nr_hw_queues which in case of multiple
    queue maps (which we have now for default/read/poll) is attempting to
    freeze the queue. However we never started queue freeze when starting the
    reset, which means that we have inflight pending requests that entered the
    queue that we will not complete once the queue is quiesced.
    
    So start a freeze before we quiesce the queue, and unfreeze the queue
    after we successfully connected the I/O queues (and make sure to call
    blk_mq_update_nr_hw_queues only after we are sure that the queue was
    already frozen).
    
    This follows to how the pci driver handles resets.
    
    Fixes: fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c11521f04ed9883d3bb3dfa5665329bb033c5238
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Fri Jul 24 15:10:12 2020 -0700

    nvme-tcp: fix controller reset hang during traffic
    
    [ Upstream commit 2875b0aecabe2f081a8432e2bc85b85df0529490 ]
    
    commit fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    exposed an issue where we may hang trying to wait for queue freeze
    during I/O. We call blk_mq_update_nr_hw_queues which in case of multiple
    queue maps (which we have now for default/read/poll) is attempting to
    freeze the queue. However we never started queue freeze when starting the
    reset, which means that we have inflight pending requests that entered the
    queue that we will not complete once the queue is quiesced.
    
    So start a freeze before we quiesce the queue, and unfreeze the queue
    after we successfully connected the I/O queues (and make sure to call
    blk_mq_update_nr_hw_queues only after we are sure that the queue was
    already frozen).
    
    This follows to how the pci driver handles resets.
    
    Fixes: fe35ec58f0d3 ("block: update hctx map when use multiple maps")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac26d372f1a333d8ea9dd47d043e41dd2cc35e3d
Author: Zenghui Yu <yuzenghui@huawei.com>
Date:   Tue Jun 30 21:37:46 2020 +0800

    irqchip/gic-v4.1: Use GFP_ATOMIC flag in allocate_vpe_l1_table()
    
    [ Upstream commit d1bd7e0ba533a2a6f313579ec9b504f6614c35c4 ]
    
    Booting the latest kernel with DEBUG_ATOMIC_SLEEP=y on a GICv4.1 enabled
    box, I get the following kernel splat:
    
    [    0.053766] BUG: sleeping function called from invalid context at mm/slab.h:567
    [    0.053767] in_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 0, name: swapper/1
    [    0.053769] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.8.0-rc3+ #23
    [    0.053770] Call trace:
    [    0.053774]  dump_backtrace+0x0/0x218
    [    0.053775]  show_stack+0x2c/0x38
    [    0.053777]  dump_stack+0xc4/0x10c
    [    0.053779]  ___might_sleep+0xfc/0x140
    [    0.053780]  __might_sleep+0x58/0x90
    [    0.053782]  slab_pre_alloc_hook+0x7c/0x90
    [    0.053783]  kmem_cache_alloc_trace+0x60/0x2f0
    [    0.053785]  its_cpu_init+0x6f4/0xe40
    [    0.053786]  gic_starting_cpu+0x24/0x38
    [    0.053788]  cpuhp_invoke_callback+0xa0/0x710
    [    0.053789]  notify_cpu_starting+0xcc/0xd8
    [    0.053790]  secondary_start_kernel+0x148/0x200
    
     # ./scripts/faddr2line vmlinux its_cpu_init+0x6f4/0xe40
    its_cpu_init+0x6f4/0xe40:
    allocate_vpe_l1_table at drivers/irqchip/irq-gic-v3-its.c:2818
    (inlined by) its_cpu_init_lpis at drivers/irqchip/irq-gic-v3-its.c:3138
    (inlined by) its_cpu_init at drivers/irqchip/irq-gic-v3-its.c:5166
    
    It turned out that we're allocating memory using GFP_KERNEL (may sleep)
    within the CPU hotplug notifier, which is indeed an atomic context. Bad
    thing may happen if we're playing on a system with more than a single
    CommonLPIAff group. Avoid it by turning this into an atomic allocation.
    
    Fixes: 5e5168461c22 ("irqchip/gic-v4.1: VPE table (aka GICR_VPROPBASER) allocation")
    Signed-off-by: Zenghui Yu <yuzenghui@huawei.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200630133746.816-1-yuzenghui@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc654671a4524f11d383f1918197cc91fd9642cd
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Jul 24 11:41:56 2020 -0700

    irqchip/irq-bcm7038-l1: Guard uses of cpu_logical_map
    
    [ Upstream commit 9808357ff2e5bfe1e0dcafef5e78cc5b617a7078 ]
    
    cpu_logical_map is only defined for CONFIG_SMP builds, when we are in an
    UP configuration, the boot CPU is 0.
    
    Fixes: 6468fc18b006 ("irqchip/irq-bcm7038-l1: Add PM support")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200724184157.29150-1-f.fainelli@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee9db7fc3a2ba7bcdd634d46f111923dd4b88790
Author: Brendan Higgins <brendanhiggins@google.com>
Date:   Tue Jul 14 13:41:30 2020 -0700

    kunit: tool: fix improper treatment of file location
    
    [ Upstream commit d43c7fb05765152d4d4a39a8ef957c4ea14d8847 ]
    
    Commit 01397e822af4 ("kunit: Fix TabError, remove defconfig code and
    handle when there is no kunitconfig") and commit 45ba7a893ad8 ("kunit:
    kunit_tool: Separate out config/build/exec/parse") introduced two
    closely related issues which built off of each other: they excessively
    created the build directory when not present and modified a constant
    (constants in Python only exist by convention).
    
    Together these issues broken a number of unit tests for KUnit tool, so
    fix them.
    
    Fixed up commit log to fic checkpatch commit description style error.
    Shuah Khan <skhan@linuxfoundation.org>
    
    Fixes: 01397e822af4 ("kunit: Fix TabError, remove defconfig code and handle when there is no kunitconfig")
    Fixes: 45ba7a893ad8 ("kunit: kunit_tool: Separate out config/build/exec/parse")
    Signed-off-by: Brendan Higgins <brendanhiggins@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0044496d944056264570b1ee3da19f80e81f77eb
Author: Brendan Higgins <brendanhiggins@google.com>
Date:   Tue Jul 14 13:41:29 2020 -0700

    kunit: tool: fix broken default args in unit tests
    
    [ Upstream commit 6816fe61bda8c819c368ad2002cd27172ecb79de ]
    
    Commit ddbd60c779b4 ("kunit: use --build_dir=.kunit as default") changed
    the default build directory for KUnit tests, but failed to update
    associated unit tests for kunit_tool, so update them.
    
    Fixes: ddbd60c779b4 ("kunit: use --build_dir=.kunit as default")
    Signed-off-by: Brendan Higgins <brendanhiggins@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dda3d66364ed14a8ebe87546d06b83fb586b0648
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Jul 7 10:12:51 2020 +0800

    irqchip/loongson-liointc: Fix potential dead lock
    
    [ Upstream commit fa03587cad9bd32aa552377de4f05c50181a35a8 ]
    
    In the function liointc_set_type(), we need to call the function
    irq_gc_unlock_irqrestore() before returning.
    
    Fixes: dbb152267908 ("irqchip: Add driver for Loongson I/O Local Interrupt Controller")
    Reported-by: Jianmin Lv <lvjianmin@loongson.cn>
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/1594087972-21715-8-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 922ce733868ab2600b1d80cd3dfb018352307672
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Jul 7 10:12:49 2020 +0800

    irqchip/loongson-pch-pic: Check return value of irq_domain_translate_twocell()
    
    [ Upstream commit 66a535c495f72e1deacc37dfa34acca2a06e3578 ]
    
    Check the return value of irq_domain_translate_twocell() due to
    it may returns -EINVAL if failed and use variable fwspec for it,
    and then use a new variable parent_fwspec which is proper for
    irq_domain_alloc_irqs_parent().
    
    Fixes: ef8c01eb64ca ("irqchip: Add Loongson PCH PIC controller")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/1594087972-21715-6-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 594496eccb4c9daedd81bb32bc73b6bf4861c147
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Jul 7 10:12:48 2020 +0800

    irqchip/loongson-htvec: Check return value of irq_domain_translate_onecell()
    
    [ Upstream commit dbec37048d27cee36e103e113b5f9b1852bfe997 ]
    
    Check the return value of irq_domain_translate_onecell() due to
    it may returns -EINVAL if failed.
    
    Fixes: 818e915fbac5 ("irqchip: Add Loongson HyperTransport Vector support")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/1594087972-21715-5-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6affe6f7db79da099ea38be56a69577e2721c77e
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Jul 7 10:12:47 2020 +0800

    irqchip/loongson-htvec: Fix potential resource leak
    
    [ Upstream commit 652d54e77a438cf38a5731d8f9983c81e72dc429 ]
    
    In the function htvec_of_init(), system resource "parent_irq"
    was not released in an error case. Thus add a jump target for
    the completion of the desired exception handling.
    
    Fixes: 818e915fbac5 ("irqchip: Add Loongson HyperTransport Vector support")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/1594087972-21715-4-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1926d2da825f2ffc3f0626f4df63474ed85032a1
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jul 2 12:35:02 2020 +0100

    md: raid0/linear: fix dereference before null check on pointer mddev
    
    [ Upstream commit 9a5a85972c073f720d81a7ebd08bfe278e6e16db ]
    
    Pointer mddev is being dereferenced with a test_bit call before mddev
    is being null checked, this may cause a null pointer dereference. Fix
    this by moving the null pointer checks to sanity check mddev before
    it is dereferenced.
    
    Addresses-Coverity: ("Dereference before null check")
    Fixes: 62f7b1989c02 ("md raid0/linear: Mark array as 'broken' and fail BIOs if a member is gone")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51ef07ca87be36941e869f34896b95e15729b706
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jun 15 15:42:46 2020 -0700

    seccomp: Fix ioctl number for SECCOMP_IOCTL_NOTIF_ID_VALID
    
    [ Upstream commit 47e33c05f9f07cac3de833e531bcac9ae052c7ca ]
    
    When SECCOMP_IOCTL_NOTIF_ID_VALID was first introduced it had the wrong
    direction flag set. While this isn't a big deal as nothing currently
    enforces these bits in the kernel, it should be defined correctly. Fix
    the define and provide support for the old command until it is no longer
    needed for backward compatibility.
    
    Fixes: 6a21cc50f0c7 ("seccomp: add a return code to trap to userspace")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2d09105657dc3bf3b1ace05ac9eb05b435642ab
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Sat Jun 6 17:50:16 2020 +0800

    irqchip/ti-sci-inta: Fix return value about devm_ioremap_resource()
    
    [ Upstream commit 4b127a14cb1385dd355c7673d975258d5d668922 ]
    
    When call function devm_ioremap_resource(), we should use IS_ERR()
    to check the return value and return PTR_ERR() if failed.
    
    Fixes: 9f1463b86c13 ("irqchip/ti-sci-inta: Add support for Interrupt Aggregator driver")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Link: https://lore.kernel.org/r/1591437017-5295-2-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8705ff60b829f04bb8a566c2d1addd79e7bea08f
Author: Stephen Smalley <stephen.smalley.work@gmail.com>
Date:   Wed Jun 17 15:22:16 2020 -0400

    scripts/selinux/mdp: fix initial SID handling
    
    [ Upstream commit 382c2b5d23b4245f1818f69286db334355488dc4 ]
    
    commit e3e0b582c321 ("selinux: remove unused initial SIDs and improve
    handling") broke scripts/selinux/mdp since the unused initial SID names
    were removed and the corresponding generation of policy initial SID
    definitions by mdp was not updated accordingly.  Fix it.  With latest
    upstream checkpolicy it is no longer necessary to include the SID context
    definitions for the unused initial SIDs but retain them for compatibility
    with older checkpolicy.
    
    Fixes: e3e0b582c321 ("selinux: remove unused initial SIDs and improve handling")
    Signed-off-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35d16397b2abba10e25c4ad05965ef0ec7ff681e
Author: Chengming Zhou <zhouchengming@bytedance.com>
Date:   Thu Jul 30 17:03:21 2020 +0800

    iocost: Fix check condition of iocg abs_vdebt
    
    [ Upstream commit d9012a59db54442d5b2fcfdfcded35cf566397d3 ]
    
    We shouldn't skip iocg when its abs_vdebt is not zero.
    
    Fixes: 0b80f9866e6b ("iocost: protect iocg->abs_vdebt with iocg->waitq.lock")
    Signed-off-by: Chengming Zhou <zhouchengming@bytedance.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 793788d7848cbbbbc328cd57ac61156e0f3677a5
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Jul 21 21:45:51 2020 +0800

    ARM: socfpga: PM: add missing put_device() call in socfpga_setup_ocram_self_refresh()
    
    [ Upstream commit 3ad7b4e8f89d6bcc9887ca701cf2745a6aedb1a0 ]
    
    if of_find_device_by_node() succeed, socfpga_setup_ocram_self_refresh
    doesn't have a corresponding put_device(). Thus add a jump target to
    fix the exception handling for this function implementation.
    
    Fixes: 44fd8c7d4005 ("ARM: socfpga: support suspend to ram")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e16025c365777a86f10b628c805dec381580d13
Author: Jon Lin <jon.lin@rock-chips.com>
Date:   Thu Jul 23 08:43:56 2020 +0800

    spi: rockchip: Fix error in SPI slave pio read
    
    [ Upstream commit 4294e4accf8d695ea5605f6b189008b692e3e82c ]
    
    The RXFLR is possible larger than rx_left in Rockchip SPI, fix it.
    
    Fixes: 01b59ce5dac8 ("spi: rockchip: use irq rather than polling")
    Signed-off-by: Jon Lin <jon.lin@rock-chips.com>
    Tested-by: Emil Renner Berthing <kernel@esmil.dk>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Reviewed-by: Emil Renner Berthing <kernel@esmil.dk>
    Link: https://lore.kernel.org/r/20200723004356.6390-3-jon.lin@rock-chips.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ca8cc7b3ee00b37cf93237d9f4dffd482fa267b
Author: Sibi Sankar <sibis@codeaurora.org>
Date:   Thu Jul 2 01:29:54 2020 +0530

    soc: qcom: pdr: Reorder the PD state indication ack
    
    [ Upstream commit 72fe996f9643043c8f84e32c0610975b01aa555b ]
    
    The Protection Domains (PD) have a mechanism to keep its resources
    enabled until the PD down indication is acked. Reorder the PD state
    indication ack so that clients get to release the relevant resources
    before the PD goes down.
    
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Rishabh Bhatnagar <rishabhb@codeaurora.org>
    Fixes: fbe639b44a82 ("soc: qcom: Introduce Protection Domain Restart helpers")
    Reported-by: Rishabh Bhatnagar <rishabhb@codeaurora.org>
    Signed-off-by: Sibi Sankar <sibis@codeaurora.org>
    Link: https://lore.kernel.org/r/20200701195954.9007-1-sibis@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f743813ff463751b8f1c16d8db9d902bbf35c469
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Tue Jul 21 01:59:50 2020 +0000

    arm64: dts: meson: fix mmc0 tuning error on Khadas VIM3
    
    [ Upstream commit f1bb924e8f5b50752a80fa5b48c43003680a7b64 ]
    
    Similar to other G12B devices using the W400 dtsi, I see reports of mmc0
    tuning errors on VIM3 after a few hours uptime:
    
    [12483.917391] mmc0: tuning execution failed: -5
    [30535.551221] mmc0: tuning execution failed: -5
    [35359.953671] mmc0: tuning execution failed: -5
    [35561.875332] mmc0: tuning execution failed: -5
    [61733.348709] mmc0: tuning execution failed: -5
    
    I do not see the same on VIM3L, so remove sd-uhs-sdr50 from the common dtsi
    to silence the error, then (re)add it to the VIM3L dts.
    
    Fixes: 4f26cc1c96c9 ("arm64: dts: khadas-vim3: move common nodes into meson-khadas-vim3.dtsi")
    Fixes: 700ab8d83927 ("arm64: dts: khadas-vim3: add support for the SM1 based VIM3L")
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Link: https://lore.kernel.org/r/20200721015950.11816-1-christianshewitt@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dcdb3754ffd2ced16d108b524cd8a5ab88a435d
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Tue Jul 21 01:39:52 2020 +0000

    arm64: dts: meson: misc fixups for w400 dtsi
    
    [ Upstream commit 2fa17dd09533d5d83201be3229a28c1010a8ea3e ]
    
    Current devices using the W400 dtsi show mmc tuning errors:
    
    [12483.917391] mmc0: tuning execution failed: -5
    [30535.551221] mmc0: tuning execution failed: -5
    [35359.953671] mmc0: tuning execution failed: -5
    [35561.875332] mmc0: tuning execution failed: -5
    [61733.348709] mmc0: tuning execution failed: -5
    
    Removing "sd-uhs-sdr50" from the SDIO node prevents this. We also add
    keep-power-in-suspend to the SDIO node and fix an indentation.
    
    Fixes: 3cb74db9b256 ("arm64: dts: meson: convert ugoos-am6 to common w400 dtsi")
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Link: https://lore.kernel.org/r/20200721013952.11635-1-christianshewitt@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff316db596a86fce8728f86c1f4d6dc0d6f84200
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Sat Jul 11 11:31:11 2020 +0200

    io_uring: fix sq array offset calculation
    
    [ Upstream commit b36200f543ff07a1cb346aa582349141df2c8068 ]
    
    rings_size() sets sq_offset to the total size of the rings (the returned
    value which is used for memory allocation). This is wrong: sq array should
    be located within the rings, not after them. Set sq_offset to where it
    should be.
    
    Fixes: 75b28affdd6a ("io_uring: allocate the two rings together")
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Hristo Venev <hristo@venev.name>
    Cc: io-uring@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 680283e6992db44d51637bfbce60f94451636332
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Fri Jul 24 03:50:13 2020 +0300

    regulator: fix memory leak on error path of regulator_register()
    
    [ Upstream commit 9177514ce34902b3adb2abd490b6ad05d1cfcb43 ]
    
    The change corrects registration and deregistration on error path
    of a regulator, the problem was manifested by a reported memory
    leak on deferred probe:
    
        as3722-regulator as3722-regulator: regulator 13 register failed -517
    
        # cat /sys/kernel/debug/kmemleak
        unreferenced object 0xecc43740 (size 64):
          comm "swapper/0", pid 1, jiffies 4294937640 (age 712.880s)
          hex dump (first 32 bytes):
            72 65 67 75 6c 61 74 6f 72 2e 32 34 00 5a 5a 5a  regulator.24.ZZZ
            5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a  ZZZZZZZZZZZZZZZZ
          backtrace:
            [<0c4c3d1c>] __kmalloc_track_caller+0x15c/0x2c0
            [<40c0ad48>] kvasprintf+0x64/0xd4
            [<109abd29>] kvasprintf_const+0x70/0x84
            [<c4215946>] kobject_set_name_vargs+0x34/0xa8
            [<62282ea2>] dev_set_name+0x40/0x64
            [<a39b6757>] regulator_register+0x3a4/0x1344
            [<16a9543f>] devm_regulator_register+0x4c/0x84
            [<51a4c6a1>] as3722_regulator_probe+0x294/0x754
            ...
    
    The memory leak problem was introduced as a side ef another fix in
    regulator_register() error path, I believe that the proper fix is
    to decouple device_register() function into its two compounds and
    initialize a struct device before assigning any values to its fields
    and then using it before actual registration of a device happens.
    
    This lets to call put_device() safely after initialization, and, since
    now a release callback is called, kfree(rdev->constraints) shall be
    removed to exclude a double free condition.
    
    Fixes: a3cde9534ebd ("regulator: core: fix regulator_register() error paths to properly release rdev")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Cc: Wen Yang <wenyang@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20200724005013.23278-1-vz@mleia.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca1c202927397d2cbe0f956ed8d0884ba27cd32e
Author: Gregory Herrero <gregory.herrero@oracle.com>
Date:   Fri Jul 17 16:33:38 2020 +0200

    recordmcount: only record relocation of type R_AARCH64_CALL26 on arm64.
    
    [ Upstream commit ea0eada45632f4807b2f49de951072283e2d781c ]
    
    Currently, if a section has a relocation to '_mcount' symbol, a new
    __mcount_loc entry will be added whatever the relocation type is.
    This is problematic when a relocation to '_mcount' is in the middle of a
    section and is not a call for ftrace use.
    
    Such relocation could be generated with below code for example:
        bool is_mcount(unsigned long addr)
        {
            return (target == (unsigned long) &_mcount);
        }
    
    With this snippet of code, ftrace will try to patch the mcount location
    generated by this code on module load and fail with:
    
        Call trace:
         ftrace_bug+0xa0/0x28c
         ftrace_process_locs+0x2f4/0x430
         ftrace_module_init+0x30/0x38
         load_module+0x14f0/0x1e78
         __do_sys_finit_module+0x100/0x11c
         __arm64_sys_finit_module+0x28/0x34
         el0_svc_common+0x88/0x194
         el0_svc_handler+0x38/0x8c
         el0_svc+0x8/0xc
        ---[ end trace d828d06b36ad9d59 ]---
        ftrace failed to modify
        [<ffffa2dbf3a3a41c>] 0xffffa2dbf3a3a41c
         actual:   66:a9:3c:90
        Initializing ftrace call sites
        ftrace record flags: 2000000
         (0)
        expected tramp: ffffa2dc6cf66724
    
    So Limit the relocation type to R_AARCH64_CALL26 as in perl version of
    recordmcount.
    
    Fixes: af64d2aa872a ("ftrace: Add arm64 support to recordmcount")
    Signed-off-by: Gregory Herrero <gregory.herrero@oracle.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Link: https://lore.kernel.org/r/20200717143338.19302-1-gregory.herrero@oracle.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e7d79dec5046f65eb851239d70a190e06ee305c
Author: Tyler Hicks <tyhicks@linux.microsoft.com>
Date:   Fri Jul 10 14:29:55 2020 -0500

    tpm: Require that all digests are present in TCG_PCR_EVENT2 structures
    
    [ Upstream commit 7f3d176f5f7e3f0477bf82df0f600fcddcdcc4e4 ]
    
    Require that the TCG_PCR_EVENT2.digests.count value strictly matches the
    value of TCG_EfiSpecIdEvent.numberOfAlgorithms in the event field of the
    TCG_PCClientPCREvent event log header. Also require that
    TCG_EfiSpecIdEvent.numberOfAlgorithms is non-zero.
    
    The TCG PC Client Platform Firmware Profile Specification section 9.1
    (Family "2.0", Level 00 Revision 1.04) states:
    
     For each Hash algorithm enumerated in the TCG_PCClientPCREvent entry,
     there SHALL be a corresponding digest in all TCG_PCR_EVENT2 structures.
     Note: This includes EV_NO_ACTION events which do not extend the PCR.
    
    Section 9.4.5.1 provides this description of
    TCG_EfiSpecIdEvent.numberOfAlgorithms:
    
     The number of Hash algorithms in the digestSizes field. This field MUST
     be set to a value of 0x01 or greater.
    
    Enforce these restrictions, as required by the above specification, in
    order to better identify and ignore invalid sequences of bytes at the
    end of an otherwise valid TPM2 event log. Firmware doesn't always have
    the means necessary to inform the kernel of the actual event log size so
    the kernel's event log parsing code should be stringent when parsing the
    event log for resiliency against firmware bugs. This is true, for
    example, when firmware passes the event log to the kernel via a reserved
    memory region described in device tree.
    
    POWER and some ARM systems use the "linux,sml-base" and "linux,sml-size"
    device tree properties to describe the memory region used to pass the
    event log from firmware to the kernel. Unfortunately, the
    "linux,sml-size" property describes the size of the entire reserved
    memory region rather than the size of the event long within the memory
    region and the event log format does not include information describing
    the size of the event log.
    
    tpm_read_log_of(), in drivers/char/tpm/eventlog/of.c, is where the
    "linux,sml-size" property is used. At the end of that function,
    log->bios_event_log_end is pointing at the end of the reserved memory
    region. That's typically 0x10000 bytes offset from "linux,sml-base",
    depending on what's defined in the device tree source.
    
    The firmware event log only fills a portion of those 0x10000 bytes and
    the rest of the memory region should be zeroed out by firmware. Even in
    the case of a properly zeroed bytes in the remainder of the memory
    region, the only thing allowing the kernel's event log parser to detect
    the end of the event log is the following conditional in
    __calc_tpm2_event_size():
    
            if (event_type == 0 && event_field->event_size == 0)
                    size = 0;
    
    If that wasn't there, __calc_tpm2_event_size() would think that a 16
    byte sequence of zeroes, following an otherwise valid event log, was
    a valid event.
    
    However, problems can occur if a single bit is set in the offset
    corresponding to either the TCG_PCR_EVENT2.eventType or
    TCG_PCR_EVENT2.eventSize fields, after the last valid event log entry.
    This could confuse the parser into thinking that an additional entry is
    present in the event log and exposing this invalid entry to userspace in
    the /sys/kernel/security/tpm0/binary_bios_measurements file. Such
    problems have been seen if firmware does not fully zero the memory
    region upon a warm reboot.
    
    This patch significantly raises the bar on how difficult it is for
    stale/invalid memory to confuse the kernel's event log parser but
    there's still, ultimately, a reliance on firmware to properly initialize
    the remainder of the memory region reserved for the event log as the
    parser cannot be expected to detect a stale but otherwise properly
    formatted firmware event log entry.
    
    Fixes: fd5c78694f3f ("tpm: fix handling of the TPM 2.0 event logs")
    Signed-off-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81fd1c90e7483452b209f61012e81cb2d2e5e5f9
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed May 27 16:17:40 2020 +0200

    crypto: x86/crc32c - fix building with clang ias
    
    [ Upstream commit 44623b2818f4a442726639572f44fd9b6d0ef68c ]
    
    The clang integrated assembler complains about movzxw:
    
    arch/x86/crypto/crc32c-pcl-intel-asm_64.S:173:2: error: invalid instruction mnemonic 'movzxw'
    
    It seems that movzwq is the mnemonic that it expects instead,
    and this is what objdump prints when disassembling the file.
    
    Fixes: 6a8ce1ef3940 ("crypto: crc32c - Optimize CRC32C calculation with PCLMULQDQ instruction")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6760df0358ef51f3a491aba31f0d89b17d7a0b0e
Author: Dilip Kota <eswara.kota@linux.intel.com>
Date:   Fri Jul 17 14:27:50 2020 +0800

    spi: lantiq: fix: Rx overflow error in full duplex mode
    
    [ Upstream commit 661ccf2b3f1360be50242726f7c26ced6a9e7d52 ]
    
    In full duplex mode, rx overflow error is observed. To overcome the error,
    wait until the complete data got received and proceed further.
    
    Fixes: 17f84b793c01 ("spi: lantiq-ssc: add support for Lantiq SSC SPI controller")
    Signed-off-by: Dilip Kota <eswara.kota@linux.intel.com>
    Link: https://lore.kernel.org/r/efb650b0faa49a00788c4e0ca8ef7196bdba851d.1594957019.git.eswara.kota@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 067345b6863f528f177fd8b508c99c1d9fcb5612
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Tue Jul 21 23:39:51 2020 +0300

    spi: dw-dma: Fix Tx DMA channel working too fast
    
    [ Upstream commit affe93dd5b35bb0e7b0aa0505ae432dd0ac72c3f ]
    
    It turns out having a Rx DMA channel serviced with higher priority than
    a Tx DMA channel is not enough to provide a well balanced DMA-based SPI
    transfer interface. There might still be moments when the Tx DMA channel
    is occasionally handled faster than the Rx DMA channel. That in its turn
    will eventually cause the SPI Rx FIFO overflow if SPI bus speed is high
    enough to fill the SPI Rx FIFO in before it's cleared by the Rx DMA
    channel. That's why having the DMA-based SPI Tx interface too optimized
    is the errors prone, so the commit 0b2b66514fc9 ("spi: dw: Use DMA max
    burst to set the request thresholds") though being perfectly normal from
    the standard functionality point of view implicitly introduced the problem
    described above. In order to fix that the Tx DMA activity is intentionally
    slowed down by limiting the SPI Tx FIFO depth with a value twice bigger
    than the Tx burst length calculated earlier by the
    dw_spi_dma_maxburst_init() method.
    
    Fixes: 0b2b66514fc9 ("spi: dw: Use DMA max burst to set the request thresholds")
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Alexey Malahov <Alexey.Malahov@baikalelectronics.ru>
    Cc: Feng Tang <feng.tang@intel.com>
    Link: https://lore.kernel.org/r/20200721203951.2159-1-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af58be14b8c11cb41e62de9bfb4597308ca492c0
Author: Patrick Delaunay <patrick.delaunay@st.com>
Date:   Wed Jul 8 13:43:24 2020 +0200

    ARM: dts: stm32: Fix spi4 pins in stm32mp15-pinctrl
    
    [ Upstream commit 4fe663890ac5b3b099f458b20cce13fe8efec12b ]
    
    Move spi4_pins_a nodes from pinctrl_z to pinctrl as the associated pins
    are not in BANK Z.
    
    Fixes: 498a7014989d ("ARM: dts: stm32: Add missing pinctrl entries for STM32MP15")
    
    Signed-off-by: Patrick Delaunay <patrick.delaunay@st.com>
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19798aa6945c152b8976a6a5abe45a496f1daf39
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sat Jul 18 00:00:48 2020 +0800

    ARM: dts: sunxi: bananapi-m2-plus-v1.2: Fix CPU supply voltages
    
    [ Upstream commit e4dae01bf08b754de79072441c357737220b873f ]
    
    The Bananapi M2+ uses a GPIO line to change the effective resistance of
    the CPU supply regulator's feedback resistor network. The voltages
    described in the device tree were given directly by the vendor. This
    turns out to be slightly off compared to the real values.
    
    The updated voltages are based on calculations of the feedback resistor
    network, and verified down to three decimal places with a multi-meter.
    
    Fixes: 6eeb4180d4b9 ("ARM: dts: sunxi: h3-h5: Add Bananapi M2+ v1.2 device trees")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200717160053.31191-4-wens@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f2b61f5cb0c3fdc5c0aa2275d8df43e7bcf0fb7
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Sat Jul 18 00:00:47 2020 +0800

    ARM: dts: sunxi: bananapi-m2-plus-v1.2: Add regulator supply to all CPU cores
    
    [ Upstream commit 55b271af765b0e03d1ff29502f81644b1a3c87fd ]
    
    The device tree currently only assigns the a supply for the first CPU
    core, when in reality the regulator supply is shared by all four cores.
    This might cause an issue if the implementation does not realize the
    sharing of the supply.
    
    Assign the same regulator supply to the remaining CPU cores to address
    this.
    
    Fixes: 6eeb4180d4b9 ("ARM: dts: sunxi: h3-h5: Add Bananapi M2+ v1.2 device trees")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200717160053.31191-3-wens@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b50431615415cde6b55e4ff219f37e3f9dee1dc
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sat Jul 18 01:36:44 2020 +0200

    ARM: dts: at91: sama5d3_xplained: change phy-mode
    
    [ Upstream commit 7dbf4bbf1c320d82058878bd44805724d171e1e8 ]
    
    Since commit bcf3440c6dd7 ("net: phy: micrel: add phy-mode support for the
    KSZ9031 PHY"), networking is broken on sama5d3 xplained.
    
    The device tree has phy-mode = "rgmii" and this worked before, because
    KSZ9031 PHY started with default RGMII internal delays configuration (TX
    off, RX on 1.2 ns) and MAC provided TX delay. After above commit, the
    KSZ9031 PHY starts handling phy mode properly and disables RX delay, as
    result networking is become broken.
    
    Fix it by switching to phy-mode = "rgmii-rxid" to reflect previous
    behavior.
    
    Fixes: bcf3440c6dd78bfe ("net: phy: micrel: add phy-mode support for the KSZ9031 PHY")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20200717233644.841080-1-alexandre.belloni@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea2c9ccdbb33afc7761ad8c324eac4a8ef3b5541
Author: Dejin Zheng <zhengdejin5@gmail.com>
Date:   Fri Jun 26 21:00:41 2020 +0800

    reset: intel: fix a compile warning about REG_OFFSET redefined
    
    [ Upstream commit 308646785e51976dea7e20d29a1842d14bf0b9bd ]
    
    kernel test robot reports a compile warning about REG_OFFSET redefined
    in the reset-intel-gw.c after merging commit e44ab4e14d6f4 ("regmap:
    Simplify implementation of the regmap_read_poll_timeout() macro"). the
    warning is like that:
    
    drivers/reset/reset-intel-gw.c:18:0: warning: "REG_OFFSET" redefined
     #define REG_OFFSET GENMASK(31, 16)
    
    In file included from ./arch/arm/mach-ixp4xx/include/mach/hardware.h:30:0,
                     from ./arch/arm/mach-ixp4xx/include/mach/io.h:15,
                     from ./arch/arm/include/asm/io.h:198,
                     from ./include/linux/io.h:13,
                     from ./include/linux/iopoll.h:14,
                     from ./include/linux/regmap.h:20,
                     from drivers/reset/reset-intel-gw.c:12:
    ./arch/arm/mach-ixp4xx/include/mach/platform.h:25:0: note: this is the location of the previous definition
     #define REG_OFFSET 3
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: c9aef213e38cde ("reset: intel: Add system reset controller driver")
    Signed-off-by: Dejin Zheng <zhengdejin5@gmail.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14ae200d052bb9fd2384d419bc5718c46f898bac
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Jul 14 08:47:59 2020 +0200

    ARM: dts: exynos: Disable frequency scaling for FSYS bus on Odroid XU3 family
    
    [ Upstream commit 9ff416cf45a08f28167b75045222c762a0347930 ]
    
    Commit 1019fe2c7280 ("ARM: dts: exynos: Adjust bus related OPPs to the
    values correct for Exynos5422 Odroids") changed the parameters of the
    OPPs for the FSYS bus. Besides the frequency adjustments, it also removed
    the 'shared-opp' property from the OPP table used for FSYS_APB and FSYS
    busses.
    
    This revealed that in fact the FSYS bus frequency scaling never worked.
    When one OPP table is marked as 'opp-shared', only the first bus which
    selects the OPP sets the rate of its clock. Then OPP core assumes that
    the other busses have been changed to that OPP and no change to their
    clock rates are needed. Thus when FSYS_APB bus, which was registered
    first, set the rate for its clock, the OPP core did not change the FSYS
    bus clock later.
    
    The mentioned commit removed that behavior, what introduced a regression
    on some Odroid XU3 boards. Frequency scaling of the FSYS bus causes
    instability of the USB host operation, what can be observed as network
    hangs. To restore old behavior, simply disable frequency scaling for the
    FSYS bus.
    
    Reported-by: Willy Wolff <willy.mh.wolff.ml@gmail.com>
    Fixes: 1019fe2c7280 ("ARM: dts: exynos: Adjust bus related OPPs to the values correct for Exynos5422 Odroids")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1e877ce5e12409c1a637a057e77f6c5762049c0
Author: yu kuai <yukuai3@huawei.com>
Date:   Thu Jun 4 20:33:01 2020 +0800

    ARM: at91: pm: add missing put_device() call in at91_pm_sram_init()
    
    [ Upstream commit f87a4f022c44e5b87e842a9f3e644fba87e8385f ]
    
    if of_find_device_by_node() succeed, at91_pm_sram_init() doesn't have
    a corresponding put_device(). Thus add a jump target to fix the exception
    handling for this function implementation.
    
    Fixes: d2e467905596 ("ARM: at91: pm: use the mmio-sram pool to access SRAM")
    Signed-off-by: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20200604123301.3905837-1-yukuai3@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f8c0858195c888469b9ce2e121b535dc57b320b
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Mon Jul 13 13:10:16 2020 +0200

    ARM: dts: gose: Fix ports node name for adv7612
    
    [ Upstream commit 59692ac5a7bb8c97ff440fc8917828083fbc38d6 ]
    
    When adding the adv7612 device node the ports node was misspelled as
    port, fix this.
    
    Fixes: bc63cd87f3ce924f ("ARM: dts: gose: add HDMI input")
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20200713111016.523189-1-niklas.soderlund+renesas@ragnatech.se
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 141b07accc60f2da86e3ae3784c1bd4fa75a94aa
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Jul 10 21:03:54 2020 +0900

    arm64: dts: renesas: Fix SD Card/eMMC interface device node names
    
    [ Upstream commit a6cb262af1e1adfa6287cb43f09021ee42beb21c ]
    
    Fix the device node names as "mmc@".
    
    Fixes: 663386c3e1aa ("arm64: dts: renesas: r8a774a1: Add SDHI nodes")
    Fixes: 9b33e3001b67 ("arm64: dts: renesas: Initial r8a774b1 SoC device tree")
    Fixes: 77223211f44d ("arm64: dts: renesas: r8a774c0: Add SDHI nodes")
    Fixes: d9d67010e0c6 ("arm64: dts: r8a7795: Add SDHI support to dtsi")
    Fixes: a513cf1e6457 ("arm64: dts: r8a7796: add SDHI nodes")
    Fixes: 111cc9ace2b5 ("arm64: dts: renesas: r8a77961: Add SDHI nodes")
    Fixes: f51746ad7d1f ("arm64: dts: renesas: Add Renesas R8A77961 SoC support")
    Fixes: df863d6f95f5 ("arm64: dts: renesas: initial R8A77965 SoC device tree")
    Fixes: 9aa3558a02f0 ("arm64: dts: renesas: ebisu: Add and enable SDHI device nodes")
    Fixes: 83f18749c2f6 ("arm64: dts: renesas: r8a77995: Add SDHI (MMC) support")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1594382634-13714-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 459fae59fa50c163b8043f624d412a644f14b727
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Sat Jul 4 17:58:55 2020 +0200

    ARM: dts: gose: Fix ports node name for adv7180
    
    [ Upstream commit d344234abde938ae1062edb6c05852b0bafb4a03 ]
    
    When adding the adv7180 device node the ports node was misspelled as
    port, fix this.
    
    Fixes: 8cae359049a88b75 ("ARM: dts: gose: add composite video input")
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20200704155856.3037010-2-niklas.soderlund+renesas@ragnatech.se
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b49da0dd3f4c22e680eacf57c567fc7c6145add
Author: Lu Wei <luwei32@huawei.com>
Date:   Fri Jul 10 17:30:18 2020 +0800

    platform/x86: intel-vbtn: Fix return value check in check_acpi_dev()
    
    [ Upstream commit 64dd4a5a7d214a07e3d9f40227ec30ac8ba8796e ]
    
    In the function check_acpi_dev(), if it fails to create
    platform device, the return value is ERR_PTR() or NULL.
    Thus it must use IS_ERR_OR_NULL() to check return value.
    
    Fixes: 332e081225fc ("intel-vbtn: new driver for Intel Virtual Button")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Lu Wei <luwei32@huawei.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54ba0892aabcf4b950d8d371676eaeb24f50f4bd
Author: Lu Wei <luwei32@huawei.com>
Date:   Fri Jul 10 17:30:17 2020 +0800

    platform/x86: intel-hid: Fix return value check in check_acpi_dev()
    
    [ Upstream commit 71fbe886ce6dd0be17f20aded9c63fe58edd2806 ]
    
    In the function check_acpi_dev(), if it fails to create
    platform device, the return value is ERR_PTR() or NULL.
    Thus it must use IS_ERR_OR_NULL() to check return value.
    
    Fixes: ecc83e52b28c ("intel-hid: new hid event driver for hotkeys")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Lu Wei <luwei32@huawei.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40bd5e36e27e3419aba2265167f74df7c9f9154b
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun May 31 09:12:13 2020 +1000

    m68k: mac: Fix IOP status/control register writes
    
    [ Upstream commit 931fc82a6aaf4e2e4a5490addaa6a090d78c24a7 ]
    
    When writing values to the IOP status/control register make sure those
    values do not have any extraneous bits that will clear interrupt flags.
    
    To place the SCC IOP into bypass mode would be desirable but this is not
    achieved by writing IOP_DMAINACTIVE | IOP_RUN | IOP_AUTOINC | IOP_BYPASS
    to the control register. Drop this ineffective register write.
    
    Remove the flawed and unused iop_bypass() function. Make use of the
    unused iop_stop() function.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Cc: Joshua Thompson <funaho@jurai.org>
    Link: https://lore.kernel.org/r/09bcb7359a1719a18b551ee515da3c4c3cf709e6.1590880333.git.fthain@telegraphics.com.au
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b4132d29576d76506600f04aeb1090304ac33ab
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sun May 31 09:12:13 2020 +1000

    m68k: mac: Don't send IOP message until channel is idle
    
    [ Upstream commit aeb445bf2194d83e12e85bf5c65baaf1f093bd8f ]
    
    In the following sequence of calls, iop_do_send() gets called when the
    "send" channel is not in the IOP_MSG_IDLE state:
    
            iop_ism_irq()
                    iop_handle_send()
                            (msg->handler)()
                                    iop_send_message()
                            iop_do_send()
    
    Avoid this by testing the channel state before calling iop_do_send().
    
    When sending, and iop_send_queue is empty, call iop_do_send() because
    the channel is idle. If iop_send_queue is not empty, iop_do_send() will
    get called later by iop_handle_send().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Cc: Joshua Thompson <funaho@jurai.org>
    Link: https://lore.kernel.org/r/6d667c39e53865661fa5a48f16829d18ed8abe54.1590880333.git.fthain@telegraphics.com.au
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3e1f3ea5877694bc5c6e319b65f064575808a9a
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu Jul 9 09:17:05 2020 +0100

    clk: scmi: Fix min and max rate when registering clocks with discrete rates
    
    [ Upstream commit fcd2e0deae50bce48450f14c8fc5611b08d7438c ]
    
    Currently we are not initializing the scmi clock with discrete rates
    correctly. We fetch the min_rate and max_rate value only for clocks with
    ranges and ignore the ones with discrete rates. This will lead to wrong
    initialization of rate range when clock supports discrete rate.
    
    Fix this by using the first and the last rate in the sorted list of the
    discrete clock rates while registering the clock.
    
    Link: https://lore.kernel.org/r/20200709081705.46084-2-sudeep.holla@arm.com
    Fixes: 6d6a1d82eaef7 ("clk: add support for clocks provided by SCMI")
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reported-and-tested-by: Dien Pham <dien.pham.ry@renesas.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02a4e7bc34eb31914208bd021f474a7fe4d49cbf
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Mon Jun 29 18:16:17 2020 +0100

    crypto: qat - allow xts requests not multiple of block
    
    [ Upstream commit 528f776df67c440361b2847b4da400d8754bf030 ]
    
    Allow AES-XTS requests that are not multiple of the block size.
    If a request is smaller than the block size, return -EINVAL.
    
    This fixes the following issue reported by the crypto testmgr self-test:
    
      alg: skcipher: qat_aes_xts encryption failed on test vector "random: len=116 klen=64"; expected_error=0, actual_error=-22, cfg="random: inplace may_sleep use_finup src_divs=[<reimport>45.85%@+4077, <flush>54.15%@alignmask+18]"
    
    Fixes: 96ee111a659e ("crypto: qat - return error for block...")
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4ec29ee883657d6f5ed7eeb6fa47e0c8331133e
Author: Qais Yousef <qais.yousef@arm.com>
Date:   Tue Jun 30 12:21:22 2020 +0100

    sched/uclamp: Fix initialization of struct uclamp_rq
    
    [ Upstream commit d81ae8aac85ca2e307d273f6dc7863a721bf054e ]
    
    struct uclamp_rq was zeroed out entirely in assumption that in the first
    call to uclamp_rq_inc() they'd be initialized correctly in accordance to
    default settings.
    
    But when next patch introduces a static key to skip
    uclamp_rq_{inc,dec}() until userspace opts in to use uclamp, schedutil
    will fail to perform any frequency changes because the
    rq->uclamp[UCLAMP_MAX].value is zeroed at init and stays as such. Which
    means all rqs are capped to 0 by default.
    
    Fix it by making sure we do proper initialization at init without
    relying on uclamp_rq_inc() doing it later.
    
    Fixes: 69842cba9ace ("sched/uclamp: Add CPU's clamp buckets refcounting")
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Tested-by: Lukasz Luba <lukasz.luba@arm.com>
    Link: https://lkml.kernel.org/r/20200630112123.12076-2-qais.yousef@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d67baf624c64737407cf803ec2ce1d635792560
Author: Alim Akhtar <alim.akhtar@samsung.com>
Date:   Sun Jul 5 12:39:17 2020 +0530

    arm64: dts: exynos: Fix silent hang after boot on Espresso
    
    [ Upstream commit b072714bfc0e42c984b8fd6e069f3ca17de8137a ]
    
    Once regulators are disabled after kernel boot, on Espresso board silent
    hang observed because of LDO7 being disabled.  LDO7 actually provide
    power to CPU cores and non-cpu blocks circuitries.  Keep this regulator
    always-on to fix this hang.
    
    Fixes: 9589f7721e16 ("arm64: dts: Add S2MPS15 PMIC node on exynos7-espresso")
    Signed-off-by: Alim Akhtar <alim.akhtar@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c348e7b038085d1f3a8fcbafdb7ff52512cd78e
Author: Ondrej Jirman <megous@megous.com>
Date:   Fri Jul 3 21:48:42 2020 +0200

    arm64: dts: sun50i-pinephone: dldo4 must not be >= 1.8V
    
    [ Upstream commit 86be5c789690eb08656b08c072c50a7b02bf41f1 ]
    
    Some outputs from the RTL8723CS are connected to the PL port (BT_WAKE_AP),
    which runs at 1.8V. When BT_WAKE_AP is high, the PL pin this signal is
    connected to is overdriven, and the whole PL port's voltage rises
    somewhat. This results in changing voltage on the R_PWM pin (PL10),
    which is the cause for backlight flickering very noticeably when typing
    on a Bluetooth keyboard, because backlight intensity is highly sensitive
    to the voltage of the R_PWM pin.
    
    Limit the maximum WiFi/BT I/O voltage to 1.8V to avoid overdriving
    the PL port pins via BT and WiFi IO port signals. WiFi and BT
    functionality is unaffected by this change.
    
    This completely stops the backlight flicker when using bluetooth.
    
    Fixes: 91f480d40942 ("arm64: dts: allwinner: Add initial support for Pine64 PinePhone")
    Signed-off-by: Ondrej Jirman <megous@megous.com>
    Link: https://lore.kernel.org/r/20200703194842.111845-4-megous@megous.com
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 660f9b20f5254ba4185f18e142456e39fc001f5f
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Fri Jun 19 23:03:30 2020 +0100

    firmware: arm_scmi: Fix SCMI genpd domain probing
    
    [ Upstream commit e0f1a30cf184821499eeb67daedd7a3f21bbcb0b ]
    
    When, at probe time, an SCMI communication failure inhibits the capacity
    to query power domains states, such domains should be skipped.
    
    Registering partially initialized SCMI power domains with genpd will
    causes kernel panic.
    
     arm-scmi timed out in resp(caller: scmi_power_state_get+0xa4/0xd0)
     scmi-power-domain scmi_dev.2: failed to get state for domain 9
     Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
     Mem abort info:
       ESR = 0x96000006
       EC = 0x25: DABT (current EL), IL = 32 bits
       SET = 0, FnV = 0
       EA = 0, S1PTW = 0
     Data abort info:
       ISV = 0, ISS = 0x00000006
       CM = 0, WnR = 0
     user pgtable: 4k pages, 48-bit VAs, pgdp=00000009f3691000
     [0000000000000000] pgd=00000009f1ca0003, p4d=00000009f1ca0003, pud=00000009f35ea003, pmd=0000000000000000
     Internal error: Oops: 96000006 [#1] PREEMPT SMP
     CPU: 2 PID: 381 Comm: bash Not tainted 5.8.0-rc1-00011-gebd118c2cca8 #2
     Hardware name: ARM LTD ARM Juno Development Platform/ARM Juno Development Platform, BIOS EDK II Jan  3 2020
     Internal error: Oops: 96000006 [#1] PREEMPT SMP
     pstate: 80000005 (Nzcv daif -PAN -UAO BTYPE=--)
     pc : of_genpd_add_provider_onecell+0x98/0x1f8
     lr : of_genpd_add_provider_onecell+0x48/0x1f8
     Call trace:
      of_genpd_add_provider_onecell+0x98/0x1f8
      scmi_pm_domain_probe+0x174/0x1e8
      scmi_dev_probe+0x90/0xe0
      really_probe+0xe4/0x448
      driver_probe_device+0xfc/0x168
      device_driver_attach+0x7c/0x88
      bind_store+0xe8/0x128
      drv_attr_store+0x2c/0x40
      sysfs_kf_write+0x4c/0x60
      kernfs_fop_write+0x114/0x230
      __vfs_write+0x24/0x50
      vfs_write+0xbc/0x1e0
      ksys_write+0x70/0xf8
      __arm64_sys_write+0x24/0x30
      el0_svc_common.constprop.3+0x94/0x160
      do_el0_svc+0x2c/0x98
      el0_sync_handler+0x148/0x1a8
      el0_sync+0x158/0x180
    
    Do not register any power domain that failed to be queried with genpd.
    
    Fixes: 898216c97ed2 ("firmware: arm_scmi: add device power domain support using genpd")
    Link: https://lore.kernel.org/r/20200619220330.12217-1-cristian.marussi@arm.com
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ea14136a7d4f56b7e06b708f13d14791fe5c03c
Author: Uladzislau Rezki (Sony) <urezki@gmail.com>
Date:   Mon May 25 23:47:47 2020 +0200

    rcu/tree: Repeat the monitor if any free channel is busy
    
    [ Upstream commit 594aa5975b9b5cfe9edaec06170e43b8c0607377 ]
    
    It is possible that one of the channels cannot be detached
    because its free channel is busy and previously queued data
    has not been processed yet. On the other hand, another
    channel can be successfully detached causing the monitor
    work to stop.
    
    Prevent that by rescheduling the monitor work if there are
    any channels in the pending state after a detach attempt.
    
    Fixes: 34c881745549e ("rcu: Support kfree_bulk() interface in kfree_rcu()")
    Acked-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Uladzislau Rezki (Sony) <urezki@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1e2c6d58bd8f29a05b0d5c4312536321434042e
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Jun 29 12:02:18 2020 +0200

    ARM: exynos: MCPM: Restore big.LITTLE cpuidle support
    
    [ Upstream commit ea9dd8f61c8a890843f68e8dc0062ce78365aab8 ]
    
    Call exynos_cpu_power_up(cpunr) unconditionally. This is needed by the
    big.LITTLE cpuidle driver and has no side-effects on other code paths.
    
    The additional soft-reset call during little core power up has been added
    to properly boot all cores on the Exynos5422-based boards with secure
    firmware (like Odroid XU3/XU4 family). This however broke big.LITTLE
    CPUidle driver, which worked only on boards without secure firmware (like
    Peach-Pit/Pi Chromebooks). Apply the workaround only when board is
    running under secure firmware.
    
    Fixes: 833b5794e330 ("ARM: EXYNOS: reset Little cores when cpu is up")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Lukasz Luba <lukasz.luba@arm.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7b6519619aa237ee14638eba7ff040484eaaef0
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Sun Jun 21 14:19:57 2020 +0300

    crypto: ccree - fix resource leak on error path
    
    [ Upstream commit 9bc6165d608d676f05d8bf156a2c9923ee38d05b ]
    
    Fix a small resource leak on the error path of cipher processing.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Fixes: 63ee04c8b491e ("crypto: ccree - add skcipher support")
    Cc: Markus Elfring <Markus.Elfring@web.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06769a572492f56c6bcc824a17f8055ecc100136
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu May 28 07:48:34 2020 -0700

    soc: qcom: rpmh-rsc: Don't use ktime for timeout in write_tcs_reg_sync()
    
    [ Upstream commit be24c6a71ecfbd9436ea1f496eb518a53e06368c ]
    
    The write_tcs_reg_sync() may be called after timekeeping is suspended
    so it's not OK to use ktime.  The readl_poll_timeout_atomic() macro
    implicitly uses ktime.  This was causing a warning at suspend time.
    
    Change to just loop 1000000 times with a delay of 1 us between loops.
    This may give a timeout of more than 1 second but never less and is
    safe even if timekeeping is suspended.
    
    NOTE: I don't have any actual evidence that we need to loop here.
    It's possibly that all we really need to do is just read the value
    back to ensure that the pipes are cleaned and the looping/comparing is
    totally not needed.  I never saw the loop being needed in my tests.
    However, the loop shouldn't hurt.
    
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Maulik Shah <mkshah@codeaurora.org>
    Fixes: 91160150aba0 ("soc: qcom: rpmh-rsc: Timeout after 1 second in write_tcs_reg_sync()")
    Reported-by: Maulik Shah <mkshah@codeaurora.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20200528074530.1.Ib86e5b406fe7d16575ae1bb276d650faa144b63c@changeid
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00734ff000fc72cb48a1aec214f024824f8b7419
Author: Luis Chamberlain <mcgrof@kernel.org>
Date:   Fri Jun 19 20:47:28 2020 +0000

    blktrace: fix debugfs use after free
    
    [ Upstream commit bad8e64fb19d3a0de5e564d9a7271c31bd684369 ]
    
    On commit 6ac93117ab00 ("blktrace: use existing disk debugfs directory")
    merged on v4.12 Omar fixed the original blktrace code for request-based
    drivers (multiqueue). This however left in place a possible crash, if you
    happen to abuse blktrace while racing to remove / add a device.
    
    We used to use asynchronous removal of the request_queue, and with that
    the issue was easier to reproduce. Now that we have reverted to
    synchronous removal of the request_queue, the issue is still possible to
    reproduce, its however just a bit more difficult.
    
    We essentially run two instances of break-blktrace which add/remove
    a loop device, and setup a blktrace and just never tear the blktrace
    down. We do this twice in parallel. This is easily reproduced with the
    script run_0004.sh from break-blktrace [0].
    
    We can end up with two types of panics each reflecting where we
    race, one a failed blktrace setup:
    
    [  252.426751] debugfs: Directory 'loop0' with parent 'block' already present!
    [  252.432265] BUG: kernel NULL pointer dereference, address: 00000000000000a0
    [  252.436592] #PF: supervisor write access in kernel mode
    [  252.439822] #PF: error_code(0x0002) - not-present page
    [  252.442967] PGD 0 P4D 0
    [  252.444656] Oops: 0002 [#1] SMP NOPTI
    [  252.446972] CPU: 10 PID: 1153 Comm: break-blktrace Tainted: G            E     5.7.0-rc2-next-20200420+ #164
    [  252.452673] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1 04/01/2014
    [  252.456343] RIP: 0010:down_write+0x15/0x40
    [  252.458146] Code: eb ca e8 ae 22 8d ff cc cc cc cc cc cc cc cc cc cc cc cc
                   cc cc 0f 1f 44 00 00 55 48 89 fd e8 52 db ff ff 31 c0 ba 01 00
                   00 00 <f0> 48 0f b1 55 00 75 0f 48 8b 04 25 c0 8b 01 00 48 89
                   45 08 5d
    [  252.463638] RSP: 0018:ffffa626415abcc8 EFLAGS: 00010246
    [  252.464950] RAX: 0000000000000000 RBX: ffff958c25f0f5c0 RCX: ffffff8100000000
    [  252.466727] RDX: 0000000000000001 RSI: ffffff8100000000 RDI: 00000000000000a0
    [  252.468482] RBP: 00000000000000a0 R08: 0000000000000000 R09: 0000000000000001
    [  252.470014] R10: 0000000000000000 R11: ffff958d1f9227ff R12: 0000000000000000
    [  252.471473] R13: ffff958c25ea5380 R14: ffffffff8cce15f1 R15: 00000000000000a0
    [  252.473346] FS:  00007f2e69dee540(0000) GS:ffff958c2fc80000(0000) knlGS:0000000000000000
    [  252.475225] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  252.476267] CR2: 00000000000000a0 CR3: 0000000427d10004 CR4: 0000000000360ee0
    [  252.477526] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  252.478776] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  252.479866] Call Trace:
    [  252.480322]  simple_recursive_removal+0x4e/0x2e0
    [  252.481078]  ? debugfs_remove+0x60/0x60
    [  252.481725]  ? relay_destroy_buf+0x77/0xb0
    [  252.482662]  debugfs_remove+0x40/0x60
    [  252.483518]  blk_remove_buf_file_callback+0x5/0x10
    [  252.484328]  relay_close_buf+0x2e/0x60
    [  252.484930]  relay_open+0x1ce/0x2c0
    [  252.485520]  do_blk_trace_setup+0x14f/0x2b0
    [  252.486187]  __blk_trace_setup+0x54/0xb0
    [  252.486803]  blk_trace_ioctl+0x90/0x140
    [  252.487423]  ? do_sys_openat2+0x1ab/0x2d0
    [  252.488053]  blkdev_ioctl+0x4d/0x260
    [  252.488636]  block_ioctl+0x39/0x40
    [  252.489139]  ksys_ioctl+0x87/0xc0
    [  252.489675]  __x64_sys_ioctl+0x16/0x20
    [  252.490380]  do_syscall_64+0x52/0x180
    [  252.491032]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    And the other on the device removal:
    
    [  128.528940] debugfs: Directory 'loop0' with parent 'block' already present!
    [  128.615325] BUG: kernel NULL pointer dereference, address: 00000000000000a0
    [  128.619537] #PF: supervisor write access in kernel mode
    [  128.622700] #PF: error_code(0x0002) - not-present page
    [  128.625842] PGD 0 P4D 0
    [  128.627585] Oops: 0002 [#1] SMP NOPTI
    [  128.629871] CPU: 12 PID: 544 Comm: break-blktrace Tainted: G            E     5.7.0-rc2-next-20200420+ #164
    [  128.635595] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1 04/01/2014
    [  128.640471] RIP: 0010:down_write+0x15/0x40
    [  128.643041] Code: eb ca e8 ae 22 8d ff cc cc cc cc cc cc cc cc cc cc cc cc
                   cc cc 0f 1f 44 00 00 55 48 89 fd e8 52 db ff ff 31 c0 ba 01 00
                   00 00 <f0> 48 0f b1 55 00 75 0f 65 48 8b 04 25 c0 8b 01 00 48 89
                   45 08 5d
    [  128.650180] RSP: 0018:ffffa9c3c05ebd78 EFLAGS: 00010246
    [  128.651820] RAX: 0000000000000000 RBX: ffff8ae9a6370240 RCX: ffffff8100000000
    [  128.653942] RDX: 0000000000000001 RSI: ffffff8100000000 RDI: 00000000000000a0
    [  128.655720] RBP: 00000000000000a0 R08: 0000000000000002 R09: ffff8ae9afd2d3d0
    [  128.657400] R10: 0000000000000056 R11: 0000000000000000 R12: 0000000000000000
    [  128.659099] R13: 0000000000000000 R14: 0000000000000003 R15: 00000000000000a0
    [  128.660500] FS:  00007febfd995540(0000) GS:ffff8ae9afd00000(0000) knlGS:0000000000000000
    [  128.662204] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  128.663426] CR2: 00000000000000a0 CR3: 0000000420042003 CR4: 0000000000360ee0
    [  128.664776] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  128.666022] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  128.667282] Call Trace:
    [  128.667801]  simple_recursive_removal+0x4e/0x2e0
    [  128.668663]  ? debugfs_remove+0x60/0x60
    [  128.669368]  debugfs_remove+0x40/0x60
    [  128.669985]  blk_trace_free+0xd/0x50
    [  128.670593]  __blk_trace_remove+0x27/0x40
    [  128.671274]  blk_trace_shutdown+0x30/0x40
    [  128.671935]  blk_release_queue+0x95/0xf0
    [  128.672589]  kobject_put+0xa5/0x1b0
    [  128.673188]  disk_release+0xa2/0xc0
    [  128.673786]  device_release+0x28/0x80
    [  128.674376]  kobject_put+0xa5/0x1b0
    [  128.674915]  loop_remove+0x39/0x50 [loop]
    [  128.675511]  loop_control_ioctl+0x113/0x130 [loop]
    [  128.676199]  ksys_ioctl+0x87/0xc0
    [  128.676708]  __x64_sys_ioctl+0x16/0x20
    [  128.677274]  do_syscall_64+0x52/0x180
    [  128.677823]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The common theme here is:
    
    debugfs: Directory 'loop0' with parent 'block' already present
    
    This crash happens because of how blktrace uses the debugfs directory
    where it places its files. Upon init we always create the same directory
    which would be needed by blktrace but we only do this for make_request
    drivers (multiqueue) block drivers. When you race a removal of these
    devices with a blktrace setup you end up in a situation where the
    make_request recursive debugfs removal will sweep away the blktrace
    files and then later blktrace will also try to remove individual
    dentries which are already NULL. The inverse is also possible and hence
    the two types of use after frees.
    
    We don't create the block debugfs directory on init for these types of
    block devices:
    
      * request-based block driver block devices
      * every possible partition
      * scsi-generic
    
    And so, this race should in theory only be possible with make_request
    drivers.
    
    We can fix the UAF by simply re-using the debugfs directory for
    make_request drivers (multiqueue) and only creating the ephemeral
    directory for the other type of block devices. The new clarifications
    on relying on the q->blk_trace_mutex *and* also checking for q->blk_trace
    *prior* to processing a blktrace ensures the debugfs directories are
    only created if no possible directory name clashes are possible.
    
    This goes tested with:
    
      o nvme partitions
      o ISCSI with tgt, and blktracing against scsi-generic with:
        o block
        o tape
        o cdrom
        o media changer
      o blktests
    
    This patch is part of the work which disputes the severity of
    CVE-2019-19770 which shows this issue is not a core debugfs issue, but
    a misuse of debugfs within blktace.
    
    Fixes: 6ac93117ab00 ("blktrace: use existing disk debugfs directory")
    Reported-by: syzbot+603294af2d01acfdd6da@syzkaller.appspotmail.com
    Signed-off-by: Luis Chamberlain <mcgrof@kernel.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: Omar Sandoval <osandov@fb.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Nicolai Stange <nstange@suse.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: "James E.J. Bottomley" <jejb@linux.ibm.com>
    Cc: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71fc8e5f4cc39348d44eb56ea1efdce450e5c48c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed May 6 22:09:07 2020 +0200

    memory: tegra: Fix an error handling path in tegra186_emc_probe()
    
    [ Upstream commit c3d4eb3bf6ad32466555b31094f33a299444f795 ]
    
    The call to tegra_bpmp_get() must be balanced by a call to
    tegra_bpmp_put() in case of error, as already done in the remove
    function.
    
    Add an error handling path and corresponding goto.
    
    Fixes: 52d15dd23f0b ("memory: tegra: Support DVFS on Tegra186 and later")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d84a71c79a0c39eb0af07c2bdbf2cf1831adedcb
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Fri Jun 5 20:59:14 2020 +0200

    arm64: dts: qcom: msm8916: Replace invalid bias-pull-none property
    
    [ Upstream commit 1b6a1a162defe649c5599d661b58ac64bb6f31b6 ]
    
    msm8916-pins.dtsi specifies "bias-pull-none" for most of the audio
    pin configurations. This was likely copied from the qcom kernel fork
    where the same property was used for these audio pins.
    
    However, "bias-pull-none" actually does not exist at all - not in
    mainline and not in downstream. I can only guess that the original
    intention was to configure "no pull", i.e. bias-disable.
    
    Change it to that instead.
    
    Fixes: 143bb9ad85b7 ("arm64: dts: qcom: add audio pinctrls")
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200605185916.318494-2-stephan@gerhold.net
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6ab00652486c53fa0c9ea1192b80db34d745760
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jun 5 16:59:18 2020 +1000

    crc-t10dif: Fix potential crypto notify dead-lock
    
    [ Upstream commit 3906f640224dbe7714b52b66d7d68c0812808e19 ]
    
    The crypto notify call occurs with a read mutex held so you must
    not do any substantial work directly.  In particular, you cannot
    call crypto_alloc_* as they may trigger further notifications
    which may dead-lock in the presence of another writer.
    
    This patch fixes this by postponing the work into a work queue and
    taking the same lock in the module init function.
    
    While we're at it this patch also ensures that all RCU accesses are
    marked appropriately (tested with sparse).
    
    Finally this also reveals a race condition in module param show
    function as it may be called prior to the module init function.
    It's fixed by testing whether crct10dif_tfm is NULL (this is true
    iff the init function has not completed assuming fallback is false).
    
    Fixes: 11dcb1037f40 ("crc-t10dif: Allow current transform to be...")
    Fixes: b76377543b73 ("crc-t10dif: Pick better transform if one...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 012f0e4c9732b6025902db52e74d80af59a50d9f
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Thu May 28 15:22:37 2020 -0500

    EDAC: Fix reference count leaks
    
    [ Upstream commit 17ed808ad243192fb923e4e653c1338d3ba06207 ]
    
    When kobject_init_and_add() returns an error, it should be handled
    because kobject_init_and_add() takes a reference even when it fails. If
    this function returns an error, kobject_put() must be called to properly
    clean up the memory associated with the object.
    
    Therefore, replace calling kfree() and call kobject_put() and add a
    missing kobject_put() in the edac_device_register_sysfs_main_kobj()
    error path.
    
     [ bp: Massage and merge into a single patch. ]
    
    Fixes: b2ed215a3338 ("Kobject: change drivers/edac to use kobject_init_and_add")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200528202238.18078-1-wu000273@umn.edu
    Link: https://lkml.kernel.org/r/20200528203526.20908-1-wu000273@umn.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b069187f3044b97aa4992df898151a14475a3b63
Author: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
Date:   Wed Jun 3 15:28:36 2020 +0200

    arm64: dts: rockchip: fix rk3399-puma gmac reset gpio
    
    [ Upstream commit 8a445086f8af0b7b9bd8d1901d6f306bb154f70d ]
    
    The puma gmac node currently uses opposite active-values for the
    gmac phy reset pin. The gpio-declaration uses active-high while the
    separate snps,reset-active-low property marks the pin as active low.
    
    While on the kernel side this works ok, other DT users may get
    confused - as seen with uboot right now.
    
    So bring this in line and make both properties match, similar to the
    other Rockchip board.
    
    Fixes: 2c66fc34e945 ("arm64: dts: rockchip: add RK3399-Q7 (Puma) SoM")
    Signed-off-by: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20200603132836.362519-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae3da7d2be00517e91afc1027cacfdc8e64b9390
Author: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
Date:   Thu Jun 4 11:12:39 2020 +0200

    arm64: dts: rockchip: fix rk3399-puma vcc5v0-host gpio
    
    [ Upstream commit 7a7184f6cfa9279f1a1c10a1845d247d7fad54ff ]
    
    The puma vcc5v0_host regulator node currently uses opposite active-values
    for the enable pin. The gpio-declaration uses active-high while the
    separate enable-active-low property marks the pin as active low.
    
    While on the kernel side this works ok, other DT users may get
    confused - as seen with uboot right now.
    
    So bring this in line and make both properties match, similar to the
    gmac fix.
    
    Fixes: 2c66fc34e945 ("arm64: dts: rockchip: add RK3399-Q7 (Puma) SoM")
    Signed-off-by: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20200604091239.424318-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4df058114a1c93bcbbe4535442c9d3e2b5a43676
Author: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
Date:   Sun Jun 7 23:29:09 2020 +0200

    arm64: dts: rockchip: fix rk3368-lion gmac reset gpio
    
    [ Upstream commit 2300e6dab473e93181cf76e4fe6671aa3d24c57b ]
    
    The lion gmac node currently uses opposite active-values for the
    gmac phy reset pin. The gpio-declaration uses active-high while the
    separate snps,reset-active-low property marks the pin as active low.
    
    While on the kernel side this works ok, other DT users may get
    confused - as seen with uboot right now.
    
    So bring this in line and make both properties match, similar to the
    other Rockchip board.
    
    Fixes: d99a02bcfa81 ("arm64: dts: rockchip: add RK3368-uQ7 (Lion) SoM")
    Signed-off-by: Heiko Stuebner <heiko.stuebner@theobroma-systems.com>
    Link: https://lore.kernel.org/r/20200607212909.920575-1-heiko@sntech.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6624632301bc1605a57dbb29c7d3e5e7975b71b2
Author: Peng Liu <iwtbavbm@gmail.com>
Date:   Tue Jun 9 23:09:36 2020 +0800

    sched: correct SD_flags returned by tl->sd_flags()
    
    [ Upstream commit 9b1b234bb86bcdcdb142e900d39b599185465dbb ]
    
    During sched domain init, we check whether non-topological SD_flags are
    returned by tl->sd_flags(), if found, fire a waning and correct the
    violation, but the code failed to correct the violation. Correct this.
    
    Fixes: 143e1e28cb40 ("sched: Rework sched_domain topology definition")
    Signed-off-by: Peng Liu <iwtbavbm@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Link: https://lkml.kernel.org/r/20200609150936.GA13060@iZj6chx1xj0e0buvshuecpZ
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b53a8f2aed2a59b5149a67abfa623fe9adfe927
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Tue Jun 9 14:37:48 2020 +0200

    sched/fair: Fix NOHZ next idle balance
    
    [ Upstream commit 3ea2f097b17e13a8280f1f9386c331b326a3dbef ]
    
    With commit:
      'b7031a02ec75 ("sched/fair: Add NOHZ_STATS_KICK")'
    rebalance_domains of the local cfs_rq happens before others idle cpus have
    updated nohz.next_balance and its value is overwritten.
    
    Move the update of nohz.next_balance for other idles cpus before balancing
    and updating the next_balance of local cfs_rq.
    
    Also, the nohz.next_balance is now updated only if all idle cpus got a
    chance to rebalance their domains and the idle balance has not been aborted
    because of new activities on the CPU. In case of need_resched, the idle
    load balance will be kick the next jiffie in order to address remaining
    ilb.
    
    Fixes: b7031a02ec75 ("sched/fair: Add NOHZ_STATS_KICK")
    Reported-by: Peng Liu <iwtbavbm@gmail.com>
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Link: https://lkml.kernel.org/r/20200609123748.18636-1-vincent.guittot@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f08ce56b56fe3ad18708ff0b5784ddb93e47ddb2
Author: Giovanni Gherdovich <ggherdovich@suse.cz>
Date:   Sun May 31 20:24:53 2020 +0200

    x86, sched: Bail out of frequency invariance if turbo_freq/base_freq gives 0
    
    [ Upstream commit f4291df103315a696f0b8c4f45ca8ae773c17441 ]
    
    Be defensive against the case where the processor reports a base_freq
    larger than turbo_freq (the ratio would be zero).
    
    Fixes: 1567c3e3467c ("x86, sched: Add support for frequency invariance")
    Signed-off-by: Giovanni Gherdovich <ggherdovich@suse.cz>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lkml.kernel.org/r/20200531182453.15254-4-ggherdovich@suse.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ddc271a3a55a0077f9d703523ead1700b867419
Author: Giovanni Gherdovich <ggherdovich@suse.cz>
Date:   Sun May 31 20:24:52 2020 +0200

    x86, sched: Bail out of frequency invariance if turbo frequency is unknown
    
    [ Upstream commit 51beea8862a3095559862df39554f05042e1195b ]
    
    There may be CPUs that support turbo boost but don't declare any turbo
    ratio, i.e. their MSR_TURBO_RATIO_LIMIT is all zeroes. In that condition
    scale-invariant calculations can't be performed.
    
    Fixes: 1567c3e3467c ("x86, sched: Add support for frequency invariance")
    Suggested-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Signed-off-by: Giovanni Gherdovich <ggherdovich@suse.cz>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Link: https://lkml.kernel.org/r/20200531182453.15254-3-ggherdovich@suse.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b611e8adc574f4cb735c4e56a1489328f6516ae
Author: Giovanni Gherdovich <ggherdovich@suse.cz>
Date:   Sun May 31 20:24:51 2020 +0200

    x86, sched: check for counters overflow in frequency invariant accounting
    
    [ Upstream commit e2b0d619b400ae326f954a018a1d65d736c237c5 ]
    
    The product mcnt * arch_max_freq_ratio can overflows u64.
    
    For context, a large value for arch_max_freq_ratio would be 5000,
    corresponding to a turbo_freq/base_freq ratio of 5 (normally it's more like
    1500-2000). A large increment frequency for the MPERF counter would be 5GHz
    (the base clock of all CPUs on the market today is less than that). With
    these figures, a CPU would need to go without a scheduler tick for around 8
    days for the u64 overflow to happen. It is unlikely, but the check is
    warranted.
    
    Under similar conditions, the difference acnt of two consecutive APERF
    readings can overflow as well.
    
    In these circumstances is appropriate to disable frequency invariant
    accounting: the feature relies on measures of the clock frequency done at
    every scheduler tick, which need to be "fresh" to be at all meaningful.
    
    A note on i386: prior to version 5.1, the GCC compiler didn't have the
    builtin function __builtin_mul_overflow. In these GCC versions the macro
    check_mul_overflow needs __udivdi3() to do (u64)a/b, which the kernel
    doesn't provide. For this reason this change fails to build on i386 if
    GCC<5.1, and we protect the entire frequency invariant code behind
    CONFIG_X86_64 (special thanks to "kbuild test robot" <lkp@intel.com>).
    
    Fixes: 1567c3e3467c ("x86, sched: Add support for frequency invariance")
    Signed-off-by: Giovanni Gherdovich <ggherdovich@suse.cz>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lkml.kernel.org/r/20200531182453.15254-2-ggherdovich@suse.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 792aececc15db9db2be4e64670e84544688297f7
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Thu May 28 08:19:27 2020 -0700

    perf/x86/intel/uncore: Fix oops when counting IMC uncore events on some TGL
    
    [ Upstream commit 2af834f1faab3f1e218fcbcab70a399121620d62 ]
    
    When counting IMC uncore events on some TGL machines, an oops will be
    triggered.
      [ 393.101262] BUG: unable to handle page fault for address:
      ffffb45200e15858
      [ 393.101269] #PF: supervisor read access in kernel mode
      [ 393.101271] #PF: error_code(0x0000) - not-present page
    
    Current perf uncore driver still use the IMC MAP SIZE inherited from
    SNB, which is 0x6000.
    However, the offset of IMC uncore counters is larger than 0x6000,
    e.g. 0xd8a0.
    
    Enlarge the IMC MAP SIZE for TGL to 0xe000.
    
    Fixes: fdb64822443e ("perf/x86: Add Intel Tiger Lake uncore support")
    Reported-by: Ammy Yi <ammy.yi@intel.com>
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Ammy Yi <ammy.yi@intel.com>
    Tested-by: Chao Qin <chao.qin@intel.com>
    Link: https://lkml.kernel.org/r/1590679169-61823-1-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 421caf5e2ba931f8ed84c4edc03e2cf484aa5e8b
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Thu Jun 11 10:32:38 2020 +0800

    x86/mce/inject: Fix a wrong assignment of i_mce.status
    
    [ Upstream commit 5d7f7d1d5e01c22894dee7c9c9266500478dca99 ]
    
    The original code is a nop as i_mce.status is or'ed with part of itself,
    fix it.
    
    Fixes: a1300e505297 ("x86/ras/mce_amd_inj: Trigger deferred and thresholding errors interrupts")
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Link: https://lkml.kernel.org/r/20200611023238.3830-1-zhenzhong.duan@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e5993c9e22c62a9f416148a2c5e610a6aed28cd
Author: Erwan Le Ray <erwan.leray@st.com>
Date:   Thu May 28 09:40:03 2020 +0200

    ARM: dts: stm32: fix uart7_pins_a comments in stm32mp15-pinctrl
    
    [ Upstream commit 391e437eedc0dab0a9f2c26997e68e040ae04ea3 ]
    
    Fix uart7_pins_a comments to indicate UART7 pins instead of UART4 pins.
    
    Fixes: bf4b5f379fed ("ARM: dts: stm32: Add missing pinctrl definitions for STM32MP157")
    
    Signed-off-by: Erwan Le Ray <erwan.leray@st.com>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca1e6f9272accb038f7d92a992de469f285bc406
Author: Erwan Le Ray <erwan.leray@st.com>
Date:   Thu May 28 09:40:02 2020 +0200

    ARM: dts: stm32: fix uart nodes ordering in stm32mp15-pinctrl
    
    [ Upstream commit f6b43d89d3b5a31bf4251a26c61e92bf659e74c5 ]
    
    Fix usart and uart nodes ordering. Several usart nodes didn't respect
    expecting ordering.
    
    Fixes: 077e0638fc83 ("ARM: dts: stm32: Add alternate pinmux for USART2 pins on stm32mp15")
    
    Signed-off-by: Erwan Le Ray <erwan.leray@st.com>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6828c99ab8a9a4a1945ea90d911e0bd175e69f4
Author: Grant Likely <grant.likely@secretlab.ca>
Date:   Fri Jul 10 16:19:39 2020 +0100

    HID: input: Fix devices that return multiple bytes in battery report
    
    commit 4f57cace81438cc873a96f9f13f08298815c9b51 upstream.
    
    Some devices, particularly the 3DConnexion Spacemouse wireless 3D
    controllers, return more than just the battery capacity in the battery
    report. The Spacemouse devices return an additional byte with a device
    specific field. However, hidinput_query_battery_capacity() only
    requests a 2 byte transfer.
    
    When a spacemouse is connected via USB (direct wire, no wireless dongle)
    and it returns a 3 byte report instead of the assumed 2 byte battery
    report the larger transfer confuses and frightens the USB subsystem
    which chooses to ignore the transfer. Then after 2 seconds assume the
    device has stopped responding and reset it. This can be reproduced
    easily by using a wired connection with a wireless spacemouse. The
    Spacemouse will enter a loop of resetting every 2 seconds which can be
    observed in dmesg.
    
    This patch solves the problem by increasing the transfer request to 4
    bytes instead of 2. The fix isn't particularly elegant, but it is simple
    and safe to backport to stable kernels. A further patch will follow to
    more elegantly handle battery reports that contain additional data.
    
    Signed-off-by: Grant Likely <grant.likely@secretlab.ca>
    Cc: Darren Hart <darren@dvhart.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: stable@vger.kernel.org
    Tested-by: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7701efa45b5bd5c28e09ada3a446c3c7ca7fe62b
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Aug 11 12:48:13 2020 -0400

    io_uring: abstract out task work running
    
    [ Upstream commit 4c6e277c4cc4a6b3b2b9c66a7b014787ae757cc1 ]
    
    Provide a helper to run task_work instead of checking and running
    manually in a bunch of different spots. While doing so, also move the
    task run state setting where we run the task work. Then we can move it
    out of the callback helpers. This also helps ensure we only do this once
    per task_work list run, not per task_work item.
    
    Suggested-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f2bf462d1d4db59421cfad48c49709a067b42d8
Author: Will Chen <chenwi@google.com>
Date:   Wed Jul 8 14:35:43 2020 -0700

    kunit: capture stderr on all make subprocess calls
    
    [ Upstream commit 5a9fcad71caa970f30aef99134a1cd19bc4b8eea ]
    
    Direct stderr to subprocess.STDOUT so error messages get included in the
    subprocess.CalledProcessError exceptions output field. This results in
    more meaningful error messages for the user.
    
    This is already being done in the make_allyesconfig method. Do the same
    for make_mrproper, make_olddefconfig, and make methods.
    
    With this, failures on unclean trees [1] will give users an error
    message that includes:
    "The source tree is not clean, please run 'make ARCH=um mrproper'"
    
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=205219
    
    Signed-off-by: Will Chen <chenwi@google.com>
    Reviewed-by: Brendan Higgins <brendanhiggins@google.com>
    Tested-by: Brendan Higgins <brendanhiggins@google.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0534d726fffea535e38f94ade81b3890a8e261d6
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Thu Jul 30 15:45:54 2020 -0700

    tracepoint: Mark __tracepoint_string's __used
    
    commit f3751ad0116fb6881f2c3c957d66a9327f69cefb upstream.
    
    __tracepoint_string's have their string data stored in .rodata, and an
    address to that data stored in the "__tracepoint_str" section. Functions
    that refer to those strings refer to the symbol of the address. Compiler
    optimization can replace those address references with references
    directly to the string data. If the address doesn't appear to have other
    uses, then it appears dead to the compiler and is removed. This can
    break the /tracing/printk_formats sysfs node which iterates the
    addresses stored in the "__tracepoint_str" section.
    
    Like other strings stored in custom sections in this header, mark these
    __used to inform the compiler that there are other non-obvious users of
    the address, so they should still be emitted.
    
    Link: https://lkml.kernel.org/r/20200730224555.2142154-2-ndesaulniers@google.com
    
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Cc: stable@vger.kernel.org
    Fixes: 102c9323c35a8 ("tracing: Add __tracepoint_string() to export string pointers")
    Reported-by: Tim Murray <timmurray@google.com>
    Reported-by: Simon MacMullen <simonmacm@google.com>
    Suggested-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
