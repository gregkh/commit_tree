commit 10f9e3bce7f3ab7ab4d09a9b78c7208c9a1455f7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Oct 27 09:52:28 2015 +0900

    Linux 4.1.12

commit 57293d164ce7c9cc91dd27050f6622edabbe0c02
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Wed Jul 15 12:52:03 2015 +0300

    sched/preempt, powerpc, kvm: Use need_resched() instead of should_resched()
    
    commit c56dadf39761a6157239cac39e3988998c994f98 upstream.
    
    Function should_resched() is equal to (!preempt_count() && need_resched()).
    In preemptive kernel preempt_count here is non-zero because of vc->lock.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Graf <agraf@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150715095203.12246.72922.stgit@buzz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d906a24a7ab60868a191c25e437f92f48948b5ca
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Wed Jul 15 12:52:01 2015 +0300

    sched/preempt, xen: Use need_resched() instead of should_resched()
    
    commit 0fa2f5cb2b0ecd8d56baa51f35f09aab234eb0bf upstream.
    
    This code is used only when CONFIG_PREEMPT=n and only in non-atomic context:
    xen_in_preemptible_hcall is set only in privcmd_ioctl_hypercall().
    Thus preempt_count is zero and should_resched() is equal to need_resched().
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Graf <agraf@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150715095201.12246.49283.stgit@buzz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41c4e0825b9d43a5d43a90c050ac9de4387865ba
Author: Jeff Layton <jeff.layton@primarydata.com>
Date:   Sat Jul 11 06:43:03 2015 -0400

    nfs4: have do_vfs_lock take an inode pointer
    
    commit 83bfff23e9ed19f37c4ef0bba84e75bd88e5cf21 upstream.
    
    Now that we have file locking helpers that can deal with an inode
    instead of a filp, we can change the NFSv4 locking code to use that
    instead.
    
    This should fix the case where we have a filp that is closed while flock
    or OFD locks are set on it, and the task is signaled so that it doesn't
    wait for the LOCKU reply to come in before the filp is freed. At that
    point we can end up with a use-after-free with the current code, which
    relies on dereferencing the fl_file in the lock request.
    
    Signed-off-by: Jeff Layton <jeff.layton@primarydata.com>
    Reviewed-by: "J. Bruce Fields" <bfields@fieldses.org>
    Tested-by: "J. Bruce Fields" <bfields@fieldses.org>
    Cc: William Dauchy <william@gandi.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7fc0d83869f71e89bdc7cb4ee65ff02ac66159f
Author: Jeff Layton <jeff.layton@primarydata.com>
Date:   Sat Jul 11 06:43:03 2015 -0400

    locks: inline posix_lock_file_wait and flock_lock_file_wait
    
    commit ee296d7c5709440f8abd36b5b65c6b3e388538d9 upstream.
    
    They just call file_inode and then the corresponding *_inode_file_wait
    function. Just make them static inlines instead.
    
    Signed-off-by: Jeff Layton <jeff.layton@primarydata.com>
    Cc: William Dauchy <william@gandi.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2540f146402c1cf28ea5a84ec5bb1f4c332e59e
Author: Jeff Layton <jeff.layton@primarydata.com>
Date:   Sat Jul 11 06:43:02 2015 -0400

    locks: new helpers - flock_lock_inode_wait and posix_lock_inode_wait
    
    commit 29d01b22eaa18d8b46091d3c98c6001c49f78e4a upstream.
    
    Allow callers to pass in an inode instead of a filp.
    
    Signed-off-by: Jeff Layton <jeff.layton@primarydata.com>
    Reviewed-by: "J. Bruce Fields" <bfields@fieldses.org>
    Tested-by: "J. Bruce Fields" <bfields@fieldses.org>
    Cc: William Dauchy <william@gandi.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bdb53e1b4b3d99acb7579cf68ffdaee9ebb4e4f
Author: Jeff Layton <jeff.layton@primarydata.com>
Date:   Sat Jul 11 06:43:02 2015 -0400

    locks: have flock_lock_file take an inode pointer instead of a filp
    
    commit bcd7f78d078ff6197715c1ed070c92aca57ec12c upstream.
    
    ...and rename it to better describe how it works.
    
    In order to fix a use-after-free in NFS, we need to be able to remove
    locks from an inode after the filp associated with them may have already
    been freed. flock_lock_file already only dereferences the filp to get to
    the inode, so just change it so the callers do that.
    
    All of the callers already pass in a lock request that has the fl_file
    set properly, so we don't need to pass it in individually. With that
    change it now only dereferences the filp to get to the inode, so just
    push that out to the callers.
    
    Signed-off-by: Jeff Layton <jeff.layton@primarydata.com>
    Reviewed-by: "J. Bruce Fields" <bfields@fieldses.org>
    Tested-by: "J. Bruce Fields" <bfields@fieldses.org>
    Cc: William Dauchy <william@gandi.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23a0f8cd351ed6908c24273a174c8c2bd807134f
Author: Steve Wise <larrystevenwise@gmail.com>
Date:   Mon Sep 28 16:46:06 2015 -0500

    svcrdma: handle rdma read with a non-zero initial page offset
    
    commit c91aed9896946721bb30705ea2904edb3725dd61 upstream.
    
    The server rdma_read_chunk_lcl() and rdma_read_chunk_frmr() functions
    were not taking into account the initial page_offset when determining
    the rdma read length.  This resulted in a read who's starting address
    and length exceeded the base/bounds of the frmr.
    
    The server gets an async error from the rdma device and kills the
    connection, and the client then reconnects and resends.  This repeats
    indefinitely, and the application hangs.
    
    Most work loads don't tickle this bug apparently, but one test hit it
    every time: building the linux kernel on a 16 core node with 'make -j
    16 O=/mnt/0' where /mnt/0 is a ramdisk mounted via NFSRDMA.
    
    This bug seems to only be tripped with devices having small fastreg page
    list depths.  I didn't see it with mlx4, for instance.
    
    Fixes: 0bf4828983df ('svcrdma: refactor marshalling logic')
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae7d500538b57f329614db03ed2e46d1e54d8192
Author: Steve Capper <steve.capper@linaro.org>
Date:   Thu Oct 1 13:06:07 2015 +0100

    arm64: Fix THP protection change logic
    
    commit 1a541b4e3cd6f5795022514114854b3e1345f24e upstream.
    
    6910fa1 ("arm64: enable PTE type bit in the mask for pte_modify") fixes
    a problem whereby a large block of PROT_NONE mapped memory is
    incorrectly mapped as block descriptors when mprotect is called.
    
    Unfortunately, a subtle bug was introduced by this fix to the THP logic.
    
    If one mmaps a large block of memory, then faults it such that it is
    collapsed into THPs; resulting calls to mprotect on this area of memory
    will lead to incorrect table descriptors being written instead of block
    descriptors. This is because pmd_modify calls pte_modify which is now
    allowed to modify the type of the page table entry.
    
    This patch reverts commit 6910fa16dbe142f6a0fd0fd7c249f9883ff7fc8a, and
    fixes the problem it was trying to address by adjusting PAGE_NONE to
    represent a table entry. Thus no change in pte type is required when
    moving from PROT_NONE to a different protection.
    
    Fixes: 6910fa16dbe1 ("arm64: enable PTE type bit in the mask for pte_modify")
    Cc: <stable@vger.kernel.org> # 4.0+
    Cc: Feng Kan <fkan@apm.com>
    Reported-by: Ganapatrao Kulkarni <Ganapatrao.Kulkarni@caviumnetworks.com>
    Tested-by: Ganapatrao Kulkarni <gkulkarni@caviumnetworks.com>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    [SteveC: backported 1a541b4e3cd6f5795022514114854b3e1345f24e to 4.1 and
     4.2 stable. Just one minor fix to second part to allow patch to apply
    cleanly, no logic changed.]
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e44ddb67769172af7ef7d2b37e6a65df56317698
Author: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
Date:   Wed Sep 23 16:35:09 2015 +0200

    pinctrl: imx25: ensure that a pin with id i is at position i in the info array
    
    commit 9911a2d5e9d14e39692b751929a92cb5a1d9d0e0 upstream.
    
    The code in pinctrl-imx.c only works correctly if in the
    imx_pinctrl_soc_info passed to imx_pinctrl_probe we have:
    
            info->pins[i].number = i
            conf_reg(info->pins[i]) = 4 * i
    
    (which conf_reg(pin) being the offset of the pin's configuration
    register).
    
    When the imx25 specific part was introduced in b4a87c9b966f ("pinctrl:
    pinctrl-imx: add imx25 pinctrl driver") we had:
    
            info->pins[i].number = i + 1
            conf_reg(info->pins[i]) = 4 * i
    
    . Commit 34027ca2bbc6 ("pinctrl: imx25: fix numbering for pins") tried
    to fix that but made the situation:
    
            info->pins[i-1].number = i
            conf_reg(info->pins[i-1]) = 4 * i
    
    which is hardly better but fixed the error seen back then.
    
    So insert another reserved entry in the array to finally yield:
    
            info->pins[i].number = i
            conf_reg(info->pins[i]) = 4 * i
    
    Fixes: 34027ca2bbc6 ("pinctrl: imx25: fix numbering for pins")
    Signed-off-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98197d3de58a62785be3e421864d6145955f197d
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Wed Jul 15 12:52:04 2015 +0300

    sched/preempt: Fix cond_resched_lock() and cond_resched_softirq()
    
    commit fe32d3cd5e8eb0f82e459763374aa80797023403 upstream.
    
    These functions check should_resched() before unlocking spinlock/bh-enable:
    preempt_count always non-zero => should_resched() always returns false.
    cond_resched_lock() worked iff spin_needbreak is set.
    
    This patch adds argument "preempt_offset" to should_resched().
    
    preempt_count offset constants for that:
    
      PREEMPT_DISABLE_OFFSET  - offset after preempt_disable()
      PREEMPT_LOCK_OFFSET     - offset after spin_lock()
      SOFTIRQ_DISABLE_OFFSET  - offset after local_bh_distable()
      SOFTIRQ_LOCK_OFFSET     - offset after spin_lock_bh()
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Graf <agraf@suse.de>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: bdb438065890 ("sched: Extract the basic add/sub preempt_count modifiers")
    Link: http://lkml.kernel.org/r/20150715095204.12246.98268.stgit@buzz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3905f7abd0410acdd497661e84c7f6ef672c1e04
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue May 12 16:41:48 2015 +0200

    sched/preempt: Rename PREEMPT_CHECK_OFFSET to PREEMPT_DISABLE_OFFSET
    
    commit 90b62b5129d5cb50f62f40e684de7a1961e57197 upstream.
    
    "CHECK" suggests it's only used as a comparison mask. But now it's used
    further as a config-conditional preempt disabler offset. Lets
    disambiguate this name.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1431441711-29753-4-git-send-email-fweisbec@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd703751ffe7818e43c85f4fea509c2868dce937
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Mon Aug 31 15:21:39 2015 +0300

    rbd: fix double free on rbd_dev->header_name
    
    commit 3ebe138ac642a195c7f2efdb918f464734421fd6 upstream.
    
    If rbd_dev_image_probe() in rbd_dev_probe_parent() fails, header_name
    is freed twice: once in rbd_dev_probe_parent() and then in its caller
    rbd_dev_image_probe() (rbd_dev_image_probe() is called recursively to
    handle parent images).
    
    rbd_dev_probe_parent() is responsible for probing the parent, so it
    shouldn't muck with clone's fields.
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 015ec5d44756f18dc887fb9b55288cccb1a659ef
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Oct 13 12:04:28 2015 -0400

    dm thin: fix missing pool reference count decrement in pool_ctr error path
    
    commit ba30670f4d5292c4e7f7980bbd5071f7c4794cdd upstream.
    
    Fixes: ac8c3f3df ("dm thin: generate event when metadata threshold passed")
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e4887f08f2ece9e7f1975af4c3dc797b1ad557b
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Sep 30 16:45:52 2015 -0400

    drm/radeon: add pm sysfs files late
    
    commit 51a4726b04e880fdd9b4e0e58b13f70b0a68a7f5 upstream.
    
    They were added relatively early in the driver init process
    which meant that in some cases the driver was not finished
    initializing before external tools tried to use them which
    could result in a crash depending on the timing.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17c5761b02dc7c815193d1a66a8a51c860e58e4d
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Oct 15 09:04:21 2015 +1000

    drm/radeon: attach tile property to mst connector
    
    commit bc8c131ccdd62d4ed4f33c6b50f92907e7c32dee upstream.
    
    This allows tiled monitors to work with radeon once mst is enabled.
    
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 510035b39ccbbbc0e5d9018796d60c009c3becba
Author: Dave Airlie <airlied@gmail.com>
Date:   Wed Oct 14 18:51:17 2015 +1000

    drm/dp/mst: make mst i2c transfer code more robust.
    
    commit ae491542cbbbcca0ec8938c37d4079a985e58440 upstream.
    
    This zeroes the msg so no random stack data ends up getting
    sent, it also limits the function to not accepting > 4
    i2c msgs.
    
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db531487d7f87820533fa37be4e52439034075d1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Oct 2 14:03:19 2015 +1000

    drm/nouveau/fbcon: take runpm reference when userspace has an open fd
    
    commit f231976c2e8964ceaa9250e57d27c35ff03825c2 upstream.
    
    We need to do this in order to prevent accesses to the device while it's
    powered down.  Userspace may have an mmap of the fb, and there's no good
    way (that I know of) to prevent it from touching the device otherwise.
    
    This fixes some nasty races between runpm and plymouth on some systems,
    which result in the GPU getting very upset and hanging the boot.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65825ff6388e1905ea128cb5341822840ddda62e
Author: Shaohua Li <shli@fb.com>
Date:   Wed Sep 30 09:05:30 2015 -0700

    workqueue: make sure delayed work run in local cpu
    
    commit 874bbfe600a660cba9c776b3957b1ce393151b76 upstream.
    
    My system keeps crashing with below message. vmstat_update() schedules a delayed
    work in current cpu and expects the work runs in the cpu.
    schedule_delayed_work() is expected to make delayed work run in local cpu. The
    problem is timer can be migrated with NO_HZ. __queue_work() queues work in
    timer handler, which could run in a different cpu other than where the delayed
    work is scheduled. The end result is the delayed work runs in different cpu.
    The patch makes __queue_delayed_work records local cpu earlier. Where the timer
    runs doesn't change where the work runs with the change.
    
    [   28.010131] ------------[ cut here ]------------
    [   28.010609] kernel BUG at ../mm/vmstat.c:1392!
    [   28.011099] invalid opcode: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN
    [   28.011860] Modules linked in:
    [   28.012245] CPU: 0 PID: 289 Comm: kworker/0:3 Tainted: G        W4.3.0-rc3+ #634
    [   28.013065] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140709_153802- 04/01/2014
    [   28.014160] Workqueue: events vmstat_update
    [   28.014571] task: ffff880117682580 ti: ffff8800ba428000 task.ti: ffff8800ba428000
    [   28.015445] RIP: 0010:[<ffffffff8115f921>]  [<ffffffff8115f921>]vmstat_update+0x31/0x80
    [   28.016282] RSP: 0018:ffff8800ba42fd80  EFLAGS: 00010297
    [   28.016812] RAX: 0000000000000000 RBX: ffff88011a858dc0 RCX:0000000000000000
    [   28.017585] RDX: ffff880117682580 RSI: ffffffff81f14d8c RDI:ffffffff81f4df8d
    [   28.018366] RBP: ffff8800ba42fd90 R08: 0000000000000001 R09:0000000000000000
    [   28.019169] R10: 0000000000000000 R11: 0000000000000121 R12:ffff8800baa9f640
    [   28.019947] R13: ffff88011a81e340 R14: ffff88011a823700 R15:0000000000000000
    [   28.020071] FS:  0000000000000000(0000) GS:ffff88011a800000(0000)knlGS:0000000000000000
    [   28.020071] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [   28.020071] CR2: 00007ff6144b01d0 CR3: 00000000b8e93000 CR4:00000000000006f0
    [   28.020071] Stack:
    [   28.020071]  ffff88011a858dc0 ffff8800baa9f640 ffff8800ba42fe00ffffffff8106bd88
    [   28.020071]  ffffffff8106bd0b 0000000000000096 0000000000000000ffffffff82f9b1e8
    [   28.020071]  ffffffff829f0b10 0000000000000000 ffffffff81f18460ffff88011a81e340
    [   28.020071] Call Trace:
    [   28.020071]  [<ffffffff8106bd88>] process_one_work+0x1c8/0x540
    [   28.020071]  [<ffffffff8106bd0b>] ? process_one_work+0x14b/0x540
    [   28.020071]  [<ffffffff8106c214>] worker_thread+0x114/0x460
    [   28.020071]  [<ffffffff8106c100>] ? process_one_work+0x540/0x540
    [   28.020071]  [<ffffffff81071bf8>] kthread+0xf8/0x110
    [   28.020071]  [<ffffffff81071b00>] ?kthread_create_on_node+0x200/0x200
    [   28.020071]  [<ffffffff81a6522f>] ret_from_fork+0x3f/0x70
    [   28.020071]  [<ffffffff81071b00>] ?kthread_create_on_node+0x200/0x200
    
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90e210c2de3e70d92f1b77b707714f0ad5bd4540
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Oct 9 10:39:24 2015 +0100

    i2c: designware-platdrv: enable RuntimePM before registering to the core
    
    commit 36d48fb5766aee9717e429f772046696b215282d upstream.
    
    The core may register clients attached to this master which may use
    funtionality from the master. So, RuntimePM must be enabled before, otherwise
    this will fail.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67e6df4ba36ac3f15a229a7aab69349e6b82cf10
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Sep 24 12:06:54 2015 +0300

    i2c: designware: Do not use parameters from ACPI on Dell Inspiron 7348
    
    commit 56d4b8a24cef5d66f0d10ac778a520d3c2c68a48 upstream.
    
    ACPI SSCN/FMCN methods were originally added because then the platform can
    provide the most accurate HCNT/LCNT values to the driver. However, this
    seems not to be true for Dell Inspiron 7348 where using these causes the
    touchpad to fail in boot:
    
      i2c_hid i2c-DLL0675:00: failed to retrieve report from device.
      i2c_designware INT3433:00: i2c_dw_handle_tx_abort: lost arbitration
      i2c_hid i2c-DLL0675:00: failed to retrieve report from device.
      i2c_designware INT3433:00: controller timed out
    
    The values received from ACPI are (in fast mode):
    
      HCNT: 72
      LCNT: 160
    
    this translates to following timings (input clock is 100MHz on Broadwell):
    
      tHIGH: 720 ns (spec min 600 ns)
      tLOW: 1600 ns (spec min 1300 ns)
      Bus period: 2920 ns (assuming 300 ns tf and tr)
      Bus speed: 342.5 kHz
    
    Both tHIGH and tLOW are within the I2C specification.
    
    The calculated values when ACPI parameters are not used are (in fast mode):
    
      HCNT: 87
      LCNT: 159
    
    which translates to:
    
      tHIGH: 870 ns (spec min 600 ns)
      tLOW: 1590 ns (spec min 1300 ns)
      Bus period 3060 ns (assuming 300 ns tf and tr)
      Bus speed 326.8 kHz
    
    These values are also within the I2C specification.
    
    Since both ACPI and calculated values meet the I2C specification timing
    requirements it is hard to say why the touchpad does not function properly
    with the ACPI values except that the bus speed is higher in this case (but
    still well below the max 400kHz).
    
    Solve this by adding DMI quirk to the driver that disables using ACPI
    parameters on this particulare machine.
    
    Reported-by: Pavel Roskin <plroskin@gmail.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Tested-by: Pavel Roskin <plroskin@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d07e907e6a7a6d887f9641915529f8415195d468
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sat Oct 10 08:24:23 2015 +0100

    i2c: s3c2410: enable RuntimePM before registering to the core
    
    commit eadd709f5d2e8aebb1b7bf49460e97a68d81a9b0 upstream.
    
    The core may register clients attached to this master which may use
    funtionality from the master. So, RuntimePM must be enabled before, otherwise
    this will fail. While here, move drvdata, too.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Acked-by: Kukjin Kim <kgene@kernel.org>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4689c5051cc7caf95d51916d191fa575931c5adc
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Oct 9 10:39:25 2015 +0100

    i2c: rcar: enable RuntimePM before registering to the core
    
    commit 4f7effddf4549d57114289f273710f077c4c330a upstream.
    
    The core may register clients attached to this master which may use
    funtionality from the master. So, RuntimePM must be enabled before, otherwise
    this will fail. While here, move drvdata, too.
    
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6af04a2106867e49fa1351bf7ab7426a8c2b63c
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Mon Sep 21 14:26:54 2015 +0200

    mfd: max77843: Fix max77843_chg_init() return on error
    
    commit 1b52e50f2a402a266f1ba2281f0a57e87637a047 upstream.
    
    If i2c_new_dummy() fails in max77843_chg_init(), an PTR_ERR(NULL) is
    returned which is 0. So the function was wrongly returning a success
    value instead of an error code.
    
    Fixes: c7f585fe46d8 ("mfd: max77843: Add max77843 MFD driver core driver")
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 271759afb5a49f1d1e5a3cef5c0fdec867f9bba4
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Oct 9 15:03:26 2015 +0200

    nfsd/blocklayout: accept any minlength
    
    commit 8c3ad9cb7343dc5f61b8cf3cdbe1016c5e7c2c8b upstream.
    
    Recent Linux clients have started to send GETLAYOUT requests with
    minlength less than blocksize.
    
    Servers aren't really allowed to impose this kind of restriction on
    layouts; see RFC 5661 section 18.43.3 for details.
    
    This has been observed to cause indefinite hangs on fsx runs on some
    clients.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a20f5eac880c215ef9aeaa147aa991e0f42dd8b0
Author: Will Deacon <will@kernel.org>
Date:   Thu Oct 8 11:11:17 2015 +0100

    arm64: errata: use KBUILD_CFLAGS_MODULE for erratum #843419
    
    commit b6dd8e0719c0d2d01429639a11b7bc2677de240c upstream.
    
    Commit df057cc7b4fa ("arm64: errata: add module build workaround for
    erratum #843419") sets CFLAGS_MODULE to ensure that the large memory
    model is used by the compiler when building kernel modules.
    
    However, CFLAGS_MODULE is an environment variable and intended to be
    overridden on the command line, which appears to be the case with the
    Ubuntu kernel packaging system, so use KBUILD_CFLAGS_MODULE instead.
    
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Fixes: df057cc7b4fa ("arm64: errata: add module build workaround for erratum #843419")
    Reported-by: Dann Frazier <dann.frazier@canonical.com>
    Tested-by: Dann Frazier <dann.frazier@canonical.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6780e0d1b043cad12625e0cb293b8d2ce5e39973
Author: Chris Mason <clm@fb.com>
Date:   Tue Oct 13 14:06:48 2015 -0400

    btrfs: fix use after free iterating extrefs
    
    commit dc6c5fb3b514221f2e9d21ee626a9d95d3418dff upstream.
    
    The code for btrfs inode-resolve has never worked properly for
    files with enough hard links to trigger extrefs.  It was trying to
    get the leaf out of a path after freeing the path:
    
            btrfs_release_path(path);
            leaf = path->nodes[0];
            item_size = btrfs_item_size_nr(leaf, slot);
    
    The fix here is to use the extent buffer we cloned just a little higher
    up to avoid deadlocks caused by using the leaf in the path.
    
    Signed-off-by: Chris Mason <clm@fb.com>
    cc: Mark Fasheh <mfasheh@suse.de>
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Mark Fasheh <mfasheh@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2382a147ed804d66fbfd1c1c97b88bc5f15c49db
Author: David Sterba <dsterba@suse.com>
Date:   Mon Oct 12 16:55:54 2015 +0200

    btrfs: check unsupported filters in balance arguments
    
    commit 8eb934591f8bf584969454a658f629cd06e59f3a upstream.
    
    We don't verify that all the balance filter arguments supplemented by
    the flags are actually known to the kernel. Thus we let it silently pass
    and do nothing.
    
    At the moment this means only the 'limit' filter, but we're going to add
    a few more soon so it's better to have that fixed. Also in older stable
    kernels so that it works with newer userspace tools.
    
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Chris Mason <clm@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2105f9aec785cbc4679132abb44645bb3c59a93e
Author: Shaohua Li <shli@fb.com>
Date:   Thu Oct 15 15:28:29 2015 -0700

    memcg: convert threshold to bytes
    
    commit 424cdc14138088ada1b0e407a2195b2783c6e5ef upstream.
    
    page_counter_memparse() returns pages for the threshold, while
    mem_cgroup_usage() returns bytes for memory usage.  Convert the
    threshold to bytes.
    
    Fixes: 3e32cb2e0a12b6915 ("memcg: rename cgroup_event to mem_cgroup_event").
    Signed-off-by: Shaohua Li <shli@fb.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ae2c7951214fd5926101e817432feabb7f72feb
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Fri Oct 9 20:43:33 2015 +0100

    crypto: ahash - ensure statesize is non-zero
    
    commit 8996eafdcbad149ac0f772fb1649fbb75c482a6a upstream.
    
    Unlike shash algorithms, ahash drivers must implement export
    and import as their descriptors may contain hardware state and
    cannot be exported as is.  Unfortunately some ahash drivers did
    not provide them and end up causing crashes with algif_hash.
    
    This patch adds a check to prevent these drivers from registering
    ahash algorithms until they are fixed.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ebf06eb1dec3ed5603107d0b7c192e3a515479a
Author: Dave Kleikamp <dave.kleikamp@oracle.com>
Date:   Mon Oct 5 10:08:51 2015 -0500

    crypto: sparc - initialize blkcipher.ivsize
    
    commit a66d7f724a96d6fd279bfbd2ee488def6b081bea upstream.
    
    Some of the crypto algorithms write to the initialization vector,
    but no space has been allocated for it. This clobbers adjacent memory.
    
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d96105a5fefafefc110e964a75889e2dda8a8434
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Tue Sep 29 09:56:53 2015 +0200

    drm: Fix locking for sysfs dpms file
    
    commit 621bd0f6982badd6483acb191eb7b6226a578328 upstream.
    
    With atomic drivers we need to make sure that (at least in general)
    property reads hold the right locks. But the legacy dpms property is
    special and can be read locklessly. Since userspace loves to just
    randomly look at that all the time (like with "status") do that.
    
    To make it clear that we play tricks use the READ_ONCE compiler
    barrier (and also for paranoia).
    
    Note that there's not really anything bad going on since even with the
    new atomic paths we eventually end up not chasing any pointers (and
    hence possibly freed memory and other fun stuff). The locking WARNING
    has been added in
    
    commit 88a48e297b3a3bac6022c03babfb038f1a886cea
    Author: Rob Clark <robdclark@gmail.com>
    Date:   Thu Dec 18 16:01:50 2014 -0500
    
        drm: add atomic properties
    
    but since drivers are converting not everyone will have seen this from
    the start.
    
    Jens reported this and submitted a patch to just grab the
    mode_config.connection_mutex, but we can do a bit better.
    
    v2: Remove unused variables I failed to git add for real.
    
    Reference: http://mid.gmane.org/20150928194822.GA3930@kernel.dk
    Reported-by: Jens Axboe <axboe@fb.com>
    Tested-by: Jens Axboe <axboe@fb.com>
    Cc: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e09e88967de067453d19bdf102808ce3cfb266d4
Author: Andrey Vagin <avagin@openvz.org>
Date:   Fri Oct 2 00:05:36 2015 +0300

    net/unix: fix logic about sk_peek_offset
    
    [ Upstream commit e9193d60d363e4dff75ff6d43a48f22be26d59c7 ]
    
    Now send with MSG_PEEK can return data from multiple SKBs.
    
    Unfortunately we take into account the peek offset for each skb,
    that is wrong. We need to apply the peek offset only once.
    
    In addition, the peek offset should be used only if MSG_PEEK is set.
    
    Cc: "David S. Miller" <davem@davemloft.net> (maintainer:NETWORKING
    Cc: Eric Dumazet <edumazet@google.com> (commit_signer:1/14=7%)
    Cc: Aaron Conole <aconole@bytheb.org>
    Fixes: 9f389e35674f ("af_unix: return data from multiple SKBs on recv() with MSG_PEEK flag")
    Signed-off-by: Andrey Vagin <avagin@openvz.org>
    Tested-by: Aaron Conole <aconole@bytheb.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bf31c538f5f370013cadbb18a40398b0c00d9e2
Author: Aaron Conole <aconole@bytheb.org>
Date:   Sat Sep 26 18:50:43 2015 -0400

    af_unix: return data from multiple SKBs on recv() with MSG_PEEK flag
    
    [ Upstream commit 9f389e35674f5b086edd70ed524ca0f287259725 ]
    
    AF_UNIX sockets now return multiple skbs from recv() when MSG_PEEK flag
    is set.
    
    This is referenced in kernel bugzilla #12323 @
    https://bugzilla.kernel.org/show_bug.cgi?id=12323
    
    As described both in the BZ and lkml thread @
    http://lkml.org/lkml/2008/1/8/444 calling recv() with MSG_PEEK on an
    AF_UNIX socket only reads a single skb, where the desired effect is
    to return as much skb data has been queued, until hitting the recv
    buffer size (whichever comes first).
    
    The modified MSG_PEEK path will now move to the next skb in the tree
    and jump to the again: label, rather than following the natural loop
    structure. This requires duplicating some of the loop head actions.
    
    This was tested using the python socketpair python code attached to
    the bugzilla issue.
    
    Signed-off-by: Aaron Conole <aconole@bytheb.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a96cb1c6030aa565bcf15e0b03dee3ca5bb1d05a
Author: Aaron Conole <aconole@bytheb.org>
Date:   Sat Sep 26 18:50:42 2015 -0400

    af_unix: Convert the unix_sk macro to an inline function for type safety
    
    [ Upstream commit 4613012db1d911f80897f9446a49de817b2c4c47 ]
    
    As suggested by Eric Dumazet this change replaces the
    #define with a static inline function to enjoy
    complaints by the compiler when misusing the API.
    
    Signed-off-by: Aaron Conole <aconole@bytheb.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e962218b42896856642f8d37bb69c4f1feaa8ad9
Author: Arad, Ronen <ronen.arad@intel.com>
Date:   Thu Oct 15 01:55:17 2015 -0700

    netlink: Trim skb to alloc size to avoid MSG_TRUNC
    
    [ Upstream commit db65a3aaf29ecce2e34271d52e8d2336b97bd9fe ]
    
    netlink_dump() allocates skb based on the calculated min_dump_alloc or
    a per socket max_recvmsg_len.
    min_alloc_size is maximum space required for any single netdev
    attributes as calculated by rtnl_calcit().
    max_recvmsg_len tracks the user provided buffer to netlink_recvmsg.
    It is capped at 16KiB.
    The intention is to avoid small allocations and to minimize the number
    of calls required to obtain dump information for all net devices.
    
    netlink_dump packs as many small messages as could fit within an skb
    that was sized for the largest single netdev information. The actual
    space available within an skb is larger than what is requested. It could
    be much larger and up to near 2x with align to next power of 2 approach.
    
    Allowing netlink_dump to use all the space available within the
    allocated skb increases the buffer size a user has to provide to avoid
    truncaion (i.e. MSG_TRUNG flag set).
    
    It was observed that with many VLANs configured on at least one netdev,
    a larger buffer of near 64KiB was necessary to avoid "Message truncated"
    error in "ip link" or "bridge [-c[ompressvlans]] vlan show" when
    min_alloc_size was only little over 32KiB.
    
    This patch trims skb to allocated size in order to allow the user to
    avoid truncation with more reasonable buffer size.
    
    Signed-off-by: Ronen Arad <ronen.arad@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b61554c25cbc110338d3191809daecd584682fa
Author: Jon Paul Maloy <jon.maloy@ericsson.com>
Date:   Wed Oct 14 09:23:18 2015 -0400

    tipc: move fragment importance field to new header position
    
    [ Upstream commit dde4b5ae65de659b9ec64bafdde0430459fcb495 ]
    
    In commit e3eea1eb47a ("tipc: clean up handling of message priorities")
    we introduced a field in the packet header for keeping track of the
    priority of fragments, since this value is not present in the specified
    protocol header. Since the value so far only is used at the transmitting
    end of the link, we have not yet officially defined it as part of the
    protocol.
    
    Unfortunately, the field we use for keeping this value, bits 13-15 in
    in word 5, has turned out to be a poor choice; it is already used by the
    broadcast protocol for carrying the 'network id' field of the sending
    node. Since packet fragments also need to be transported across the
    broadcast protocol, the risk of conflict is obvious, and we see this
    happen when we use network identities larger than 2^13-1. This has
    escaped our testing because we have so far only been using small network
    id values.
    
    We now move this field to bits 0-2 in word 9, a field that is guaranteed
    to be unused by all involved protocols.
    
    Fixes: e3eea1eb47a ("tipc: clean up handling of message priorities")
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f90898b43b4e7fea7a58f34f886a78b9f753e52
Author: Joe Perches <joe@perches.com>
Date:   Wed Oct 14 01:09:40 2015 -0700

    ethtool: Use kcalloc instead of kmalloc for ethtool_get_strings
    
    [ Upstream commit 077cb37fcf6f00a45f375161200b5ee0cd4e937b ]
    
    It seems that kernel memory can leak into userspace by a
    kmalloc, ethtool_get_strings, then copy_to_user sequence.
    
    Avoid this by using kcalloc to zero fill the copied buffer.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Acked-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3043def89ac220e0719f0c1b97f27b139a44f2b5
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Tue Oct 6 17:23:47 2015 -0700

    act_mirred: clear sender cpu before sending to tx
    
    [ Upstream commit d40496a56430eac0d330378816954619899fe303 ]
    
    Similar to commit c29390c6dfee ("xps: must clear sender_cpu before forwarding")
    the skb->sender_cpu needs to be cleared when moving from Rx
    Tx, otherwise kernel could crash.
    
    Fixes: 2bd82484bb4c ("xps: fix xps for stacked devices")
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <cwang@twopensource.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc845f677c04e09fa988ac95ce3f335df9d2ba0b
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Fri Oct 2 13:18:22 2015 +0300

    ovs: do not allocate memory from offline numa node
    
    [ Upstream commit 598c12d0ba6de9060f04999746eb1e015774044b ]
    
    When openvswitch tries allocate memory from offline numa node 0:
    stats = kmem_cache_alloc_node(flow_stats_cache, GFP_KERNEL | __GFP_ZERO, 0)
    It catches VM_BUG_ON(nid < 0 || nid >= MAX_NUMNODES || !node_online(nid))
    [ replaced with VM_WARN_ON(!node_online(nid)) recently ] in linux/gfp.h
    This patch disables numa affinity in this case.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Pravin B Shelar <pshelar@nicira.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a54d12792c87a5ebe32f5e54c46a0932f4ff774a
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Oct 2 12:06:03 2015 +0200

    bpf: fix panic in SO_GET_FILTER with native ebpf programs
    
    [ Upstream commit 93d08b6966cf730ea669d4d98f43627597077153 ]
    
    When sockets have a native eBPF program attached through
    setsockopt(sk, SOL_SOCKET, SO_ATTACH_BPF, ...), and then try to
    dump these over getsockopt(sk, SOL_SOCKET, SO_GET_FILTER, ...),
    the following panic appears:
    
      [49904.178642] BUG: unable to handle kernel NULL pointer dereference at (null)
      [49904.178762] IP: [<ffffffff81610fd9>] sk_get_filter+0x39/0x90
      [49904.182000] PGD 86fc9067 PUD 531a1067 PMD 0
      [49904.185196] Oops: 0000 [#1] SMP
      [...]
      [49904.224677] Call Trace:
      [49904.226090]  [<ffffffff815e3d49>] sock_getsockopt+0x319/0x740
      [49904.227535]  [<ffffffff812f59e3>] ? sock_has_perm+0x63/0x70
      [49904.228953]  [<ffffffff815e2fc8>] ? release_sock+0x108/0x150
      [49904.230380]  [<ffffffff812f5a43>] ? selinux_socket_getsockopt+0x23/0x30
      [49904.231788]  [<ffffffff815dff36>] SyS_getsockopt+0xa6/0xc0
      [49904.233267]  [<ffffffff8171b9ae>] entry_SYSCALL_64_fastpath+0x12/0x71
    
    The underlying issue is the very same as in commit b382c0865600
    ("sock, diag: fix panic in sock_diag_put_filterinfo"), that is,
    native eBPF programs don't store an original program since this
    is only needed in cBPF ones.
    
    However, sk_get_filter() wasn't updated to test for this at the
    time when eBPF could be attached. Just throw an error to the user
    to indicate that eBPF cannot be dumped over this interface.
    That way, it can also be known that a program _is_ attached (as
    opposed to just return 0), and a different (future) method needs
    to be consulted for a dump.
    
    Fixes: 89aa075832b0 ("net: sock: allow eBPF programs to be attached to sockets")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@plumgrid.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ae3dfacdd8257691332d98f258ac8858bcd6585
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 1 05:39:26 2015 -0700

    inet: fix race in reqsk_queue_unlink()
    
    [ Upstream commit 2306c704ce280c97a60d1f45333b822b40281dea ]
    
    reqsk_timer_handler() tests if icsk_accept_queue.listen_opt
    is NULL at its beginning.
    
    By the time it calls inet_csk_reqsk_queue_drop() and
    reqsk_queue_unlink(), listener might have been closed and
    inet_csk_listen_stop() had called reqsk_queue_yank_acceptq()
    which sets icsk_accept_queue.listen_opt to NULL
    
    We therefore need to correctly check listen_opt being NULL
    after holding syn_wait_lock for proper synchronization.
    
    Fixes: fa76ce7328b2 ("inet: get rid of central tcp/dccp listener timer")
    Fixes: b357a364c57c ("inet: fix possible panic in reqsk_queue_unlink()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbc89a6195a2310a182cf583e9825dfc1ebe58ce
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Wed Sep 30 11:45:33 2015 +0200

    ppp: don't override sk->sk_state in pppoe_flush_dev()
    
    [ Upstream commit e6740165b8f7f06d8caee0fceab3fb9d790a6fed ]
    
    Since commit 2b018d57ff18 ("pppoe: drop PPPOX_ZOMBIEs in pppoe_release"),
    pppoe_release() calls dev_put(po->pppoe_dev) if sk is in the
    PPPOX_ZOMBIE state. But pppoe_flush_dev() can set sk->sk_state to
    PPPOX_ZOMBIE _and_ reset po->pppoe_dev to NULL. This leads to the
    following oops:
    
    [  570.140800] BUG: unable to handle kernel NULL pointer dereference at 00000000000004e0
    [  570.142931] IP: [<ffffffffa018c701>] pppoe_release+0x50/0x101 [pppoe]
    [  570.144601] PGD 3d119067 PUD 3dbc1067 PMD 0
    [  570.144601] Oops: 0000 [#1] SMP
    [  570.144601] Modules linked in: l2tp_ppp l2tp_netlink l2tp_core ip6_udp_tunnel udp_tunnel pppoe pppox ppp_generic slhc loop crc32c_intel ghash_clmulni_intel jitterentropy_rng sha256_generic hmac drbg ansi_cprng aesni_intel aes_x86_64 ablk_helper cryptd lrw gf128mul glue_helper acpi_cpufreq evdev serio_raw processor button ext4 crc16 mbcache jbd2 virtio_net virtio_blk virtio_pci virtio_ring virtio
    [  570.144601] CPU: 1 PID: 15738 Comm: ppp-apitest Not tainted 4.2.0 #1
    [  570.144601] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Debian-1.8.2-1 04/01/2014
    [  570.144601] task: ffff88003d30d600 ti: ffff880036b60000 task.ti: ffff880036b60000
    [  570.144601] RIP: 0010:[<ffffffffa018c701>]  [<ffffffffa018c701>] pppoe_release+0x50/0x101 [pppoe]
    [  570.144601] RSP: 0018:ffff880036b63e08  EFLAGS: 00010202
    [  570.144601] RAX: 0000000000000000 RBX: ffff880034340000 RCX: 0000000000000206
    [  570.144601] RDX: 0000000000000006 RSI: ffff88003d30dd20 RDI: ffff88003d30dd20
    [  570.144601] RBP: ffff880036b63e28 R08: 0000000000000001 R09: 0000000000000000
    [  570.144601] R10: 00007ffee9b50420 R11: ffff880034340078 R12: ffff8800387ec780
    [  570.144601] R13: ffff8800387ec7b0 R14: ffff88003e222aa0 R15: ffff8800387ec7b0
    [  570.144601] FS:  00007f5672f48700(0000) GS:ffff88003fc80000(0000) knlGS:0000000000000000
    [  570.144601] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  570.144601] CR2: 00000000000004e0 CR3: 0000000037f7e000 CR4: 00000000000406a0
    [  570.144601] Stack:
    [  570.144601]  ffffffffa018f240 ffff8800387ec780 ffffffffa018f240 ffff8800387ec7b0
    [  570.144601]  ffff880036b63e48 ffffffff812caabe ffff880039e4e000 0000000000000008
    [  570.144601]  ffff880036b63e58 ffffffff812cabad ffff880036b63ea8 ffffffff811347f5
    [  570.144601] Call Trace:
    [  570.144601]  [<ffffffff812caabe>] sock_release+0x1a/0x75
    [  570.144601]  [<ffffffff812cabad>] sock_close+0xd/0x11
    [  570.144601]  [<ffffffff811347f5>] __fput+0xff/0x1a5
    [  570.144601]  [<ffffffff811348cb>] ____fput+0x9/0xb
    [  570.144601]  [<ffffffff81056682>] task_work_run+0x66/0x90
    [  570.144601]  [<ffffffff8100189e>] prepare_exit_to_usermode+0x8c/0xa7
    [  570.144601]  [<ffffffff81001a26>] syscall_return_slowpath+0x16d/0x19b
    [  570.144601]  [<ffffffff813babb1>] int_ret_from_sys_call+0x25/0x9f
    [  570.144601] Code: 48 8b 83 c8 01 00 00 a8 01 74 12 48 89 df e8 8b 27 14 e1 b8 f7 ff ff ff e9 b7 00 00 00 8a 43 12 a8 0b 74 1c 48 8b 83 a8 04 00 00 <48> 8b 80 e0 04 00 00 65 ff 08 48 c7 83 a8 04 00 00 00 00 00 00
    [  570.144601] RIP  [<ffffffffa018c701>] pppoe_release+0x50/0x101 [pppoe]
    [  570.144601]  RSP <ffff880036b63e08>
    [  570.144601] CR2: 00000000000004e0
    [  570.200518] ---[ end trace 46956baf17349563 ]---
    
    pppoe_flush_dev() has no reason to override sk->sk_state with
    PPPOX_ZOMBIE. pppox_unbind_sock() already sets sk->sk_state to
    PPPOX_DEAD, which is the correct state given that sk is unbound and
    po->pppoe_dev is NULL.
    
    Fixes: 2b018d57ff18 ("pppoe: drop PPPOX_ZOMBIEs in pppoe_release")
    Tested-by: Oleksii Berezhniak <core@irc.lg.ua>
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fac948a1c4188780633c4ef509941876dcc99502
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Sep 29 18:52:25 2015 -0700

    net: add pfmemalloc check in sk_add_backlog()
    
    [ Upstream commit c7c49b8fde26b74277188bdc6c9dca38db6fa35b ]
    
    Greg reported crashes hitting the following check in __sk_backlog_rcv()
    
            BUG_ON(!sock_flag(sk, SOCK_MEMALLOC));
    
    The pfmemalloc bit is currently checked in sk_filter().
    
    This works correctly for TCP, because sk_filter() is ran in
    tcp_v[46]_rcv() before hitting the prequeue or backlog checks.
    
    For UDP or other protocols, this does not work, because the sk_filter()
    is ran from sock_queue_rcv_skb(), which might be called _after_ backlog
    queuing if socket is owned by user by the time packet is processed by
    softirq handler.
    
    Fixes: b4b9e35585089 ("netvm: set PF_MEMALLOC as appropriate during SKB processing")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Greg Thelen <gthelen@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31b8abd140ad0be5f63bae0e4e6beb9d52b16f85
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Sep 19 09:48:04 2015 -0700

    inet: fix races in reqsk_queue_hash_req()
    
    [ Upstream commit 29c6852602e259d2c1882f320b29d5c3fec0de04 ]
    
    Before allowing lockless LISTEN processing, we need to make
    sure to arm the SYN_RECV timer before the req socket is visible
    in hash tables.
    
    Also, req->rsk_hash should be written before we set rsk_refcnt
    to a non zero value.
    
    Fixes: fa76ce7328b2 ("inet: get rid of central tcp/dccp listener timer")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Ying Cai <ycai@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bdfdea4cc4617aaa3a4f291904fe85e6ca2c9a6
Author: Pravin B Shelar <pshelar@nicira.com>
Date:   Mon Sep 28 17:24:25 2015 -0700

    skbuff: Fix skb checksum partial check.
    
    [ Upstream commit 31b33dfb0a144469dd805514c9e63f4993729a48 ]
    
    Earlier patch 6ae459bda tried to detect void ckecksum partial
    skb by comparing pull length to checksum offset. But it does
    not work for all cases since checksum-offset depends on
    updates to skb->data.
    
    Following patch fixes it by validating checksum start offset
    after skb-data pointer is updated. Negative value of checksum
    offset start means there is no need to checksum.
    
    Fixes: 6ae459bda ("skbuff: Fix skb checksum flag on skb pull")
    Reported-by: Andrew Vagin <avagin@odin.com>
    Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7017f73bb9837ca8cc5d0a4116aae679bdd8df22
Author: Pravin B Shelar <pshelar@nicira.com>
Date:   Tue Sep 22 12:57:53 2015 -0700

    skbuff: Fix skb checksum flag on skb pull
    
    [ Upstream commit 6ae459bdaaeebc632b16e54dcbabb490c6931d61 ]
    
    VXLAN device can receive skb with checksum partial. But the checksum
    offset could be in outer header which is pulled on receive. This results
    in negative checksum offset for the skb. Such skb can cause the assert
    failure in skb_checksum_help(). Following patch fixes the bug by setting
    checksum-none while pulling outer header.
    
    Following is the kernel panic msg from old kernel hitting the bug.
    
    ------------[ cut here ]------------
    kernel BUG at net/core/dev.c:1906!
    RIP: 0010:[<ffffffff81518034>] skb_checksum_help+0x144/0x150
    Call Trace:
    <IRQ>
    [<ffffffffa0164c28>] queue_userspace_packet+0x408/0x470 [openvswitch]
    [<ffffffffa016614d>] ovs_dp_upcall+0x5d/0x60 [openvswitch]
    [<ffffffffa0166236>] ovs_dp_process_packet_with_key+0xe6/0x100 [openvswitch]
    [<ffffffffa016629b>] ovs_dp_process_received_packet+0x4b/0x80 [openvswitch]
    [<ffffffffa016c51a>] ovs_vport_receive+0x2a/0x30 [openvswitch]
    [<ffffffffa0171383>] vxlan_rcv+0x53/0x60 [openvswitch]
    [<ffffffffa01734cb>] vxlan_udp_encap_recv+0x8b/0xf0 [openvswitch]
    [<ffffffff8157addc>] udp_queue_rcv_skb+0x2dc/0x3b0
    [<ffffffff8157b56f>] __udp4_lib_rcv+0x1cf/0x6c0
    [<ffffffff8157ba7a>] udp_rcv+0x1a/0x20
    [<ffffffff8154fdbd>] ip_local_deliver_finish+0xdd/0x280
    [<ffffffff81550128>] ip_local_deliver+0x88/0x90
    [<ffffffff8154fa7d>] ip_rcv_finish+0x10d/0x370
    [<ffffffff81550365>] ip_rcv+0x235/0x300
    [<ffffffff8151ba1d>] __netif_receive_skb+0x55d/0x620
    [<ffffffff8151c360>] netif_receive_skb+0x80/0x90
    [<ffffffff81459935>] virtnet_poll+0x555/0x6f0
    [<ffffffff8151cd04>] net_rx_action+0x134/0x290
    [<ffffffff810683d8>] __do_softirq+0xa8/0x210
    [<ffffffff8162fe6c>] call_softirq+0x1c/0x30
    [<ffffffff810161a5>] do_softirq+0x65/0xa0
    [<ffffffff810687be>] irq_exit+0x8e/0xb0
    [<ffffffff81630733>] do_IRQ+0x63/0xe0
    [<ffffffff81625f2e>] common_interrupt+0x6e/0x6e
    
    Reported-by: Anupam Chanda <achanda@vmware.com>
    Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
    Acked-by: Tom Herbert <tom@herbertland.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d55cd294a22769515cfc3c97783669369fb4b111
Author: Alexander Couzens <lynxis@fe80.eu>
Date:   Mon Sep 28 11:32:42 2015 +0200

    l2tp: protect tunnel->del_work by ref_count
    
    [ Upstream commit 06a15f51cf3618e32a73871ee6a547ef7fd902b5 ]
    
    There is a small chance that tunnel_free() is called before tunnel->del_work scheduled
    resulting in a zero pointer dereference.
    
    Signed-off-by: Alexander Couzens <lynxis@fe80.eu>
    Acked-by: James Chapman <jchapman@katalix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cda65f34d0d0aed35effe37d9f85d6d9b5285fd
Author: Ivan Mikhaylov <ivan@ru.ibm.com>
Date:   Fri Sep 25 11:52:27 2015 +0400

    net/ibm/emac: bump version numbers for correct work with ethtool
    
    [ Upstream commit 661dfc65f7981481ba2e31aaa702371e82336e56 ]
    
    The size of the MAC register dump used to be the size specified by the
    reg property in the device tree.  Userland has no good way of finding
    out that size, and it was not specified consistently for each MAC type,
    so ethtool would end up printing junk at the end of the register dump
    if the device tree didn't match the size it assumed.
    
    Using the new version numbers indicates unambiguously that the size of
    the MAC register dump is dependent only on the MAC type.
    
    Fixes: 5369c71f7ca2 ("net/ibm/emac: fix size of emac dump memory areas")
    Signed-off-by: Ivan Mikhaylov <ivan@ru.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
