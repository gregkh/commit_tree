commit dbb78762365d0e506110f50dd5a0b95d11e46bf8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 13 19:50:28 2018 +0200

    Linux 4.4.128

commit f02dc098662b788382c5bb6792bd885bc46ca4c4
Author: Greg Hackmann <ghackmann@google.com>
Date:   Thu Apr 12 17:29:51 2018 -0700

    Revert "xhci: plat: Register shutdown for xhci_plat"
    
    Pixel 2 field testers reported that when they tried to reboot their
    phones with some USB devices plugged in, the reboot would get wedged and
    eventually trigger watchdog reset.  Once the Pixel kernel team found a
    reliable repro case, they narrowed it down to this commit's 4.4.y
    backport.  Reverting the change made the issue go away.
    
    This reverts commit b07c12517f2aed0add8ce18146bb426b14099392.
    
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56f8ae4e07d2f9d1513ad79d5a44a2c2a29b5a67
Author: David Ahern <dsahern@gmail.com>
Date:   Thu Mar 29 12:49:52 2018 -0700

    vrf: Fix use after free and double free in vrf_finish_output
    
    commit 82dd0d2a9a76fc8fa2b18d80b987d455728bf83a upstream.
    
    Miguel reported an skb use after free / double free in vrf_finish_output
    when neigh_output returns an error. The vrf driver should return after
    the call to neigh_output as it takes over the skb on error path as well.
    
    Patch is a simplified version of Miguel's patch which was written for 4.9,
    and updated to top of tree.
    
    Fixes: 8f58336d3f78a ("net: Add ethernet header for pass through VRF device")
    Signed-off-by: Miguel Fadon Perlines <mfadon@teldat.com>
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [ backport to 4.4 and 4.9 dropped the sock_confirm_neigh and
      changed neigh_output to dst_neigh_output ]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7d9a326879134129637eb1c570475b6cb5d90ae
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Fri Mar 23 14:47:30 2018 +0100

    ipv6: the entire IPv6 header chain must fit the first fragment
    
    
    [ Upstream commit 10b8a3de603df7b96004179b1b33b1708c76d144 ]
    
    While building ipv6 datagram we currently allow arbitrary large
    extheaders, even beyond pmtu size. The syzbot has found a way
    to exploit the above to trigger the following splat:
    
    kernel BUG at ./include/linux/skbuff.h:2073!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 4230 Comm: syzkaller672661 Not tainted 4.16.0-rc2+ #326
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:__skb_pull include/linux/skbuff.h:2073 [inline]
    RIP: 0010:__ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636
    RSP: 0018:ffff8801bc18f0f0 EFLAGS: 00010293
    RAX: ffff8801b17400c0 RBX: 0000000000000738 RCX: ffffffff84f01828
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff8801b415ac18
    RBP: ffff8801bc18f360 R08: ffff8801b4576844 R09: 0000000000000000
    R10: ffff8801bc18f380 R11: ffffed00367aee4e R12: 00000000000000d6
    R13: ffff8801b415a740 R14: dffffc0000000000 R15: ffff8801b45767c0
    FS:  0000000001535880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000002000b000 CR3: 00000001b4123001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      ip6_finish_skb include/net/ipv6.h:969 [inline]
      udp_v6_push_pending_frames+0x269/0x3b0 net/ipv6/udp.c:1073
      udpv6_sendmsg+0x2a96/0x3400 net/ipv6/udp.c:1343
      inet_sendmsg+0x11f/0x5e0 net/ipv4/af_inet.c:764
      sock_sendmsg_nosec net/socket.c:630 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:640
      ___sys_sendmsg+0x320/0x8b0 net/socket.c:2046
      __sys_sendmmsg+0x1ee/0x620 net/socket.c:2136
      SYSC_sendmmsg net/socket.c:2167 [inline]
      SyS_sendmmsg+0x35/0x60 net/socket.c:2162
      do_syscall_64+0x280/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x4404c9
    RSP: 002b:00007ffdce35f948 EFLAGS: 00000217 ORIG_RAX: 0000000000000133
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004404c9
    RDX: 0000000000000003 RSI: 0000000020001f00 RDI: 0000000000000003
    RBP: 00000000006cb018 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 0000000020000080 R11: 0000000000000217 R12: 0000000000401df0
    R13: 0000000000401e80 R14: 0000000000000000 R15: 0000000000000000
    Code: ff e8 1d 5e b9 fc e9 15 e9 ff ff e8 13 5e b9 fc e9 44 e8 ff ff e8 29
    5e b9 fc e9 c0 e6 ff ff e8 3f f3 80 fc 0f 0b e8 38 f3 80 fc <0f> 0b 49 8d
    87 80 00 00 00 4d 8d 87 84 00 00 00 48 89 85 20 fe
    RIP: __skb_pull include/linux/skbuff.h:2073 [inline] RSP: ffff8801bc18f0f0
    RIP: __ip6_make_skb+0x1ac8/0x2190 net/ipv6/ip6_output.c:1636 RSP:
    ffff8801bc18f0f0
    
    As stated by RFC 7112 section 5:
    
       When a host fragments an IPv6 datagram, it MUST include the entire
       IPv6 Header Chain in the First Fragment.
    
    So this patch addresses the issue dropping datagrams with excessive
    extheader length. It also updates the error path to report to the
    calling socket nonnegative pmtu values.
    
    The issue apparently predates git history.
    
    v1 -> v2: cleanup error path, as per Eric's suggestion
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+91e6f9932ff122fa4410@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdef35f27d63811872fde4a88196fffbd2a5d253
Author: Jeff Barnhill <0xeffeff@gmail.com>
Date:   Thu Apr 5 21:29:47 2018 +0000

    net/ipv6: Increment OUTxxx counters after netfilter hook
    
    
    [ Upstream commit 71a1c915238c970cd9bdd5bf158b1279d6b6d55b ]
    
    At the end of ip6_forward(), IPSTATS_MIB_OUTFORWDATAGRAMS and
    IPSTATS_MIB_OUTOCTETS are incremented immediately before the NF_HOOK call
    for NFPROTO_IPV6 / NF_INET_FORWARD.  As a result, these counters get
    incremented regardless of whether or not the netfilter hook allows the
    packet to continue being processed.  This change increments the counters
    in ip6_forward_finish() so that it will not happen if the netfilter hook
    chooses to terminate the packet, which is similar to how IPv4 works.
    
    Signed-off-by: Jeff Barnhill <0xeffeff@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdcffff5fd9c4246755db2db96c1083dbddd82b3
Author: Craig Dillabaugh <cdillaba@mojatatu.com>
Date:   Mon Mar 26 14:58:32 2018 -0400

    net sched actions: fix dumping which requires several messages to user space
    
    
    [ Upstream commit 734549eb550c0c720bc89e50501f1b1e98cdd841 ]
    
    Fixes a bug in the tcf_dump_walker function that can cause some actions
    to not be reported when dumping a large number of actions. This issue
    became more aggrevated when cookies feature was added. In particular
    this issue is manifest when large cookie values are assigned to the
    actions and when enough actions are created that the resulting table
    must be dumped in multiple batches.
    
    The number of actions returned in each batch is limited by the total
    number of actions and the memory buffer size.  With small cookies
    the numeric limit is reached before the buffer size limit, which avoids
    the code path triggering this bug. When large cookies are used buffer
    fills before the numeric limit, and the erroneous code path is hit.
    
    For example after creating 32 csum actions with the cookie
    aaaabbbbccccdddd
    
    $ tc actions ls action csum
    total acts 26
    
        action order 0: csum (tcp) action continue
        index 1 ref 1 bind 0
        cookie aaaabbbbccccdddd
    
        .....
    
        action order 25: csum (tcp) action continue
        index 26 ref 1 bind 0
        cookie aaaabbbbccccdddd
    total acts 6
    
        action order 0: csum (tcp) action continue
        index 28 ref 1 bind 0
        cookie aaaabbbbccccdddd
    
        ......
    
        action order 5: csum (tcp) action continue
        index 32 ref 1 bind 0
        cookie aaaabbbbccccdddd
    
    Note that the action with index 27 is omitted from the report.
    
    Fixes: 4b3550ef530c ("[NET_SCHED]: Use nla_nest_start/nla_nest_end")"
    Signed-off-by: Craig Dillabaugh <cdillaba@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce42e0de85a0dc4933016b2394c35872b8fd1f51
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Mon Mar 26 19:19:30 2018 +0200

    r8169: fix setting driver_data after register_netdev
    
    
    [ Upstream commit 19c9ea363a244f85f90a424f9936e6d56449e33c ]
    
    pci_set_drvdata() is called only after registering the net_device,
    therefore we could run into a NPE if one of the functions using
    driver_data is called before it's set.
    
    Fix this by calling pci_set_drvdata() before registering the
    net_device.
    
    This fix is a candidate for stable. As far as I can see the
    bug has been there in kernel version 3.2 already, therefore
    I can't provide a reference which commit is fixed by it.
    
    The fix may need small adjustments per kernel version because
    due to other changes the label which is jumped to if
    register_netdev() fails has changed over time.
    
    Reported-by: David Miller <davem@davemloft.net>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ad677cf551bb019d06dd2842e9972bd62c81d3d
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:31 2018 -0700

    vti6: better validate user provided tunnel names
    
    
    [ Upstream commit 537b361fbcbcc3cd6fe2bb47069fd292b9256d16 ]
    
    Use valid_name() to make sure user does not provide illegal
    device name.
    
    Fixes: ed1efb2aefbb ("ipv6: Add support for IPsec virtual tunnel interfaces")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f791712490719c61789a9676a3d5746cf9ad1e1f
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:30 2018 -0700

    ip6_tunnel: better validate user provided tunnel names
    
    
    [ Upstream commit db7a65e3ab78e5b1c4b17c0870ebee35a4ee3257 ]
    
    Use valid_name() to make sure user does not provide illegal
    device name.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e55589d1bdffa17c4ce1be803d75697e34873a5
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:29 2018 -0700

    ip6_gre: better validate user provided tunnel names
    
    
    [ Upstream commit 5f42df013b8bc1b6511af7a04bf93b014884ae2a ]
    
    Use dev_valid_name() to make sure user does not provide illegal
    device name.
    
    syzbot caught the following bug :
    
    BUG: KASAN: stack-out-of-bounds in strlcpy include/linux/string.h:300 [inline]
    BUG: KASAN: stack-out-of-bounds in ip6gre_tunnel_locate+0x334/0x860 net/ipv6/ip6_gre.c:339
    Write of size 20 at addr ffff8801afb9f7b8 by task syzkaller851048/4466
    
    CPU: 1 PID: 4466 Comm: syzkaller851048 Not tainted 4.16.0+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1b9/0x29f lib/dump_stack.c:53
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0xac/0x2f5 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     memcpy+0x37/0x50 mm/kasan/kasan.c:303
     strlcpy include/linux/string.h:300 [inline]
     ip6gre_tunnel_locate+0x334/0x860 net/ipv6/ip6_gre.c:339
     ip6gre_tunnel_ioctl+0x69d/0x12e0 net/ipv6/ip6_gre.c:1195
     dev_ifsioc+0x43e/0xb90 net/core/dev_ioctl.c:334
     dev_ioctl+0x69a/0xcc0 net/core/dev_ioctl.c:525
     sock_ioctl+0x47e/0x680 net/socket.c:1015
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:500 [inline]
     do_vfs_ioctl+0x1cf/0x1650 fs/ioctl.c:684
     ksys_ioctl+0xa9/0xd0 fs/ioctl.c:701
     SYSC_ioctl fs/ioctl.c:708 [inline]
     SyS_ioctl+0x24/0x30 fs/ioctl.c:706
     do_syscall_64+0x29e/0x9d0 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: c12b395a4664 ("gre: Support GRE over IPv6")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03d22b8295389cf42445c28966ebd92f3692b021
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:28 2018 -0700

    ipv6: sit: better validate user provided tunnel names
    
    
    [ Upstream commit b95211e066fc3494b7c115060b2297b4ba21f025 ]
    
    Use dev_valid_name() to make sure user does not provide illegal
    device name.
    
    syzbot caught the following bug :
    
    BUG: KASAN: stack-out-of-bounds in strlcpy include/linux/string.h:300 [inline]
    BUG: KASAN: stack-out-of-bounds in ipip6_tunnel_locate+0x63b/0xaa0 net/ipv6/sit.c:254
    Write of size 33 at addr ffff8801b64076d8 by task syzkaller932654/4453
    
    CPU: 0 PID: 4453 Comm: syzkaller932654 Not tainted 4.16.0+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1b9/0x29f lib/dump_stack.c:53
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0xac/0x2f5 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     memcpy+0x37/0x50 mm/kasan/kasan.c:303
     strlcpy include/linux/string.h:300 [inline]
     ipip6_tunnel_locate+0x63b/0xaa0 net/ipv6/sit.c:254
     ipip6_tunnel_ioctl+0xe71/0x241b net/ipv6/sit.c:1221
     dev_ifsioc+0x43e/0xb90 net/core/dev_ioctl.c:334
     dev_ioctl+0x69a/0xcc0 net/core/dev_ioctl.c:525
     sock_ioctl+0x47e/0x680 net/socket.c:1015
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:500 [inline]
     do_vfs_ioctl+0x1cf/0x1650 fs/ioctl.c:684
     ksys_ioctl+0xa9/0xd0 fs/ioctl.c:701
     SYSC_ioctl fs/ioctl.c:708 [inline]
     SyS_ioctl+0x24/0x30 fs/ioctl.c:706
     do_syscall_64+0x29e/0x9d0 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c696a3abdaa11e475b379aa26d35131cf2e1c316
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:27 2018 -0700

    ip_tunnel: better validate user provided tunnel names
    
    
    [ Upstream commit 9cb726a212a82c88c98aa9f0037fd04777cd8fe5 ]
    
    Use dev_valid_name() to make sure user does not provide illegal
    device name.
    
    syzbot caught the following bug :
    
    BUG: KASAN: stack-out-of-bounds in strlcpy include/linux/string.h:300 [inline]
    BUG: KASAN: stack-out-of-bounds in __ip_tunnel_create+0xca/0x6b0 net/ipv4/ip_tunnel.c:257
    Write of size 20 at addr ffff8801ac79f810 by task syzkaller268107/4482
    
    CPU: 0 PID: 4482 Comm: syzkaller268107 Not tainted 4.16.0+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1b9/0x29f lib/dump_stack.c:53
     print_address_description+0x6c/0x20b mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.7+0xac/0x2f5 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     memcpy+0x37/0x50 mm/kasan/kasan.c:303
     strlcpy include/linux/string.h:300 [inline]
     __ip_tunnel_create+0xca/0x6b0 net/ipv4/ip_tunnel.c:257
     ip_tunnel_create net/ipv4/ip_tunnel.c:352 [inline]
     ip_tunnel_ioctl+0x818/0xd40 net/ipv4/ip_tunnel.c:861
     ipip_tunnel_ioctl+0x1c5/0x420 net/ipv4/ipip.c:350
     dev_ifsioc+0x43e/0xb90 net/core/dev_ioctl.c:334
     dev_ioctl+0x69a/0xcc0 net/core/dev_ioctl.c:525
     sock_ioctl+0x47e/0x680 net/socket.c:1015
     vfs_ioctl fs/ioctl.c:46 [inline]
     file_ioctl fs/ioctl.c:500 [inline]
     do_vfs_ioctl+0x1cf/0x1650 fs/ioctl.c:684
     ksys_ioctl+0xa9/0xd0 fs/ioctl.c:701
     SYSC_ioctl fs/ioctl.c:708 [inline]
     SyS_ioctl+0x24/0x30 fs/ioctl.c:706
     do_syscall_64+0x29e/0x9d0 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: c54419321455 ("GRE: Refactor GRE tunneling code.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 954d71e7c63fe55e707a899345a504aa97510121
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Apr 5 06:39:26 2018 -0700

    net: fool proof dev_valid_name()
    
    
    [ Upstream commit a9d48205d0aedda021fc3728972a9e9934c2b9de ]
    
    We want to use dev_valid_name() to validate tunnel names,
    so better use strnlen(name, IFNAMSIZ) than strlen(name) to make
    sure to not upset KASAN.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6773caa6ac54b84281113ce42d0557d4962380d7
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:47 2018 +0800

    bonding: process the err returned by dev_set_allmulti properly in bond_enslave
    
    
    [ Upstream commit 9f5a90c107741b864398f4ac0014711a8c1d8474 ]
    
    When dev_set_promiscuity(1) succeeds but dev_set_allmulti(1) fails,
    dev_set_promiscuity(-1) should be done before going to the err path.
    Otherwise, dev->promiscuity will leak.
    
    Fixes: 7e1a1ac1fbaa ("bonding: Check return of dev_set_promiscuity/allmulti")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efc484e07b5b70b2e59760d6ddde77d4de3cec63
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:46 2018 +0800

    bonding: move dev_mc_sync after master_upper_dev_link in bond_enslave
    
    
    [ Upstream commit ae42cc62a9f07f1f6979054ed92606b9c30f4a2e ]
    
    Beniamino found a crash when adding vlan as slave of bond which is also
    the parent link:
    
      ip link add bond1 type bond
      ip link set bond1 up
      ip link add link bond1 vlan1 type vlan id 80
      ip link set vlan1 master bond1
    
    The call trace is as below:
    
      [<ffffffffa850842a>] queued_spin_lock_slowpath+0xb/0xf
      [<ffffffffa8515680>] _raw_spin_lock+0x20/0x30
      [<ffffffffa83f6f07>] dev_mc_sync+0x37/0x80
      [<ffffffffc08687dc>] vlan_dev_set_rx_mode+0x1c/0x30 [8021q]
      [<ffffffffa83efd2a>] __dev_set_rx_mode+0x5a/0xa0
      [<ffffffffa83f7138>] dev_mc_sync_multiple+0x78/0x80
      [<ffffffffc084127c>] bond_enslave+0x67c/0x1190 [bonding]
      [<ffffffffa8401909>] do_setlink+0x9c9/0xe50
      [<ffffffffa8403bf2>] rtnl_newlink+0x522/0x880
      [<ffffffffa8403ff7>] rtnetlink_rcv_msg+0xa7/0x260
      [<ffffffffa8424ecb>] netlink_rcv_skb+0xab/0xc0
      [<ffffffffa83fe498>] rtnetlink_rcv+0x28/0x30
      [<ffffffffa8424850>] netlink_unicast+0x170/0x210
      [<ffffffffa8424bf8>] netlink_sendmsg+0x308/0x420
      [<ffffffffa83cc396>] sock_sendmsg+0xb6/0xf0
    
    This is actually a dead lock caused by sync slave hwaddr from master when
    the master is the slave's 'slave'. This dead loop check is actually done
    by netdev_master_upper_dev_link. However, Commit 1f718f0f4f97 ("bonding:
    populate neighbour's private on enslave") moved it after dev_mc_sync.
    
    This patch is to fix it by moving dev_mc_sync after master_upper_dev_link,
    so that this loop check would be earlier than dev_mc_sync. It also moves
    if (mode == BOND_MODE_8023AD) into if (!bond_uses_primary) clause as an
    improvement.
    
    Note team driver also has this issue, I will fix it in another patch.
    
    Fixes: 1f718f0f4f97 ("bonding: populate neighbour's private on enslave")
    Reported-by: Beniamino Galvani <bgalvani@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92e782de7ef4503eef03abb8db9477907c2bfc69
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Mar 26 01:16:45 2018 +0800

    bonding: fix the err path for dev hwaddr sync in bond_enslave
    
    
    [ Upstream commit 5c78f6bfae2b10ff70e21d343e64584ea6280c26 ]
    
    vlan_vids_add_by_dev is called right after dev hwaddr sync, so on
    the err path it should unsync dev hwaddr. Otherwise, the slave
    dev's hwaddr will never be unsync when this err happens.
    
    Fixes: 1ff412ad7714 ("bonding: change the bond's vlan syncing functions with the standard ones")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eea440360677ef7a84b4b1e84f2500c66395d1a1
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Mar 30 09:44:00 2018 +0800

    vlan: also check phy_driver ts_info for vlan's real device
    
    
    [ Upstream commit ec1d8ccb07deaf30fd0508af6755364ac47dc08d ]
    
    Just like function ethtool_get_ts_info(), we should also consider the
    phy_driver ts_info call back. For example, driver dp83640.
    
    Fixes: 37dd9255b2f6 ("vlan: Pass ethtool get_ts_info queries to real device.")
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0445d2c3f6a5680cf947d24ba8e8ef849557f670
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Mar 27 20:50:52 2018 +0800

    vhost: correctly remove wait queue during poll failure
    
    
    [ Upstream commit dc6455a71c7fc5117977e197f67f71b49f27baba ]
    
    We tried to remove vq poll from wait queue, but do not check whether
    or not it was in a list before. This will lead double free. Fixing
    this by switching to use vhost_poll_stop() which zeros poll->wqh after
    removing poll from waitqueue to make sure it won't be freed twice.
    
    Cc: Darren Kenny <darren.kenny@oracle.com>
    Reported-by: syzbot+c0272972b01b872e604a@syzkaller.appspotmail.com
    Fixes: 2b8b328b61c79 ("vhost_net: handle polling errors when setting backend")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc74c7bd24fc9e03623326862c9f063717241124
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Sat Mar 31 23:42:03 2018 +0800

    sky2: Increase D3 delay to sky2 stops working after suspend
    
    
    [ Upstream commit afb133637071be6deeb8b3d0e55593ffbf63c527 ]
    
    The sky2 ethernet stops working after system resume from suspend:
    [ 582.852065] sky2 0000:04:00.0: Refused to change power state, currently in D3
    
    The current 150ms delay is not enough, change it to 200ms can solve the
    issue.
    
    BugLink: https://bugs.launchpad.net/bugs/1758507
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb2f3af62b92ae3ce46b92ede2a0fbf50afdfc6c
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Apr 8 07:52:08 2018 -0700

    sctp: sctp_sockaddr_af must check minimal addr length for AF_INET6
    
    
    [ Upstream commit 81e98370293afcb58340ce8bd71af7b97f925c26 ]
    
    Check must happen before call to ipv6_addr_v4mapped()
    
    syzbot report was :
    
    BUG: KMSAN: uninit-value in sctp_sockaddr_af net/sctp/socket.c:359 [inline]
    BUG: KMSAN: uninit-value in sctp_do_bind+0x60f/0xdc0 net/sctp/socket.c:384
    CPU: 0 PID: 3576 Comm: syzkaller968804 Not tainted 4.16.0+ #82
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:53
     kmsan_report+0x142/0x240 mm/kmsan/kmsan.c:1067
     __msan_warning_32+0x6c/0xb0 mm/kmsan/kmsan_instr.c:676
     sctp_sockaddr_af net/sctp/socket.c:359 [inline]
     sctp_do_bind+0x60f/0xdc0 net/sctp/socket.c:384
     sctp_bind+0x149/0x190 net/sctp/socket.c:332
     inet6_bind+0x1fd/0x1820 net/ipv6/af_inet6.c:293
     SYSC_bind+0x3f2/0x4b0 net/socket.c:1474
     SyS_bind+0x54/0x80 net/socket.c:1460
     do_syscall_64+0x309/0x430 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    RIP: 0033:0x43fd49
    RSP: 002b:00007ffe99df3d28 EFLAGS: 00000213 ORIG_RAX: 0000000000000031
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 000000000043fd49
    RDX: 0000000000000010 RSI: 0000000020000000 RDI: 0000000000000003
    RBP: 00000000006ca018 R08: 00000000004002c8 R09: 00000000004002c8
    R10: 00000000004002c8 R11: 0000000000000213 R12: 0000000000401670
    R13: 0000000000401700 R14: 0000000000000000 R15: 0000000000000000
    
    Local variable description: ----address@SYSC_bind
    Variable was created at:
     SYSC_bind+0x6f/0x4b0 net/socket.c:1461
     SyS_bind+0x54/0x80 net/socket.c:1460
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 706a813e22492355e698fc4258b327b3e5f5eb80
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Apr 7 17:15:22 2018 -0700

    sctp: do not leak kernel memory to user space
    
    
    [ Upstream commit 6780db244d6b1537d139dea0ec8aad10cf9e4adb ]
    
    syzbot produced a nice report [1]
    
    Issue here is that a recvmmsg() managed to leak 8 bytes of kernel memory
    to user space, because sin_zero (padding field) was not properly cleared.
    
    [1]
    BUG: KMSAN: uninit-value in copy_to_user include/linux/uaccess.h:184 [inline]
    BUG: KMSAN: uninit-value in move_addr_to_user+0x32e/0x530 net/socket.c:227
    CPU: 1 PID: 3586 Comm: syzkaller481044 Not tainted 4.16.0+ #82
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:53
     kmsan_report+0x142/0x240 mm/kmsan/kmsan.c:1067
     kmsan_internal_check_memory+0x164/0x1d0 mm/kmsan/kmsan.c:1176
     kmsan_copy_to_user+0x69/0x160 mm/kmsan/kmsan.c:1199
     copy_to_user include/linux/uaccess.h:184 [inline]
     move_addr_to_user+0x32e/0x530 net/socket.c:227
     ___sys_recvmsg+0x4e2/0x810 net/socket.c:2211
     __sys_recvmmsg+0x54e/0xdb0 net/socket.c:2313
     SYSC_recvmmsg+0x29b/0x3e0 net/socket.c:2394
     SyS_recvmmsg+0x76/0xa0 net/socket.c:2378
     do_syscall_64+0x309/0x430 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    RIP: 0033:0x4401c9
    RSP: 002b:00007ffc56f73098 EFLAGS: 00000217 ORIG_RAX: 000000000000012b
    RAX: ffffffffffffffda RBX: 00000000004002c8 RCX: 00000000004401c9
    RDX: 0000000000000001 RSI: 0000000020003ac0 RDI: 0000000000000003
    RBP: 00000000006ca018 R08: 0000000020003bc0 R09: 0000000000000010
    R10: 0000000000000000 R11: 0000000000000217 R12: 0000000000401af0
    R13: 0000000000401b80 R14: 0000000000000000 R15: 0000000000000000
    
    Local variable description: ----addr@___sys_recvmsg
    Variable was created at:
     ___sys_recvmsg+0xd5/0x810 net/socket.c:2172
     __sys_recvmmsg+0x54e/0xdb0 net/socket.c:2313
    
    Bytes 8-15 of 16 are uninitialized
    
    ==================================================================
    Kernel panic - not syncing: panic_on_warn set ...
    
    CPU: 1 PID: 3586 Comm: syzkaller481044 Tainted: G    B            4.16.0+ #82
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x185/0x1d0 lib/dump_stack.c:53
     panic+0x39d/0x940 kernel/panic.c:183
     kmsan_report+0x238/0x240 mm/kmsan/kmsan.c:1083
     kmsan_internal_check_memory+0x164/0x1d0 mm/kmsan/kmsan.c:1176
     kmsan_copy_to_user+0x69/0x160 mm/kmsan/kmsan.c:1199
     copy_to_user include/linux/uaccess.h:184 [inline]
     move_addr_to_user+0x32e/0x530 net/socket.c:227
     ___sys_recvmsg+0x4e2/0x810 net/socket.c:2211
     __sys_recvmmsg+0x54e/0xdb0 net/socket.c:2313
     SYSC_recvmmsg+0x29b/0x3e0 net/socket.c:2394
     SyS_recvmmsg+0x76/0xa0 net/socket.c:2378
     do_syscall_64+0x309/0x430 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc:     Vlad Yasevich <vyasevich@gmail.com>
    Cc:     Neil Horman <nhorman@tuxdriver.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b5f818cd68d29badbff5556f699e92d1fde4e8c
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Apr 2 18:48:37 2018 -0700

    pptp: remove a buggy dst release in pptp_connect()
    
    
    [ Upstream commit bfacfb457b36911a10140b8cb3ce76a74883ac5a ]
    
    Once dst has been cached in socket via sk_setup_caps(),
    it is illegal to call ip_rt_put() (or dst_release()),
    since sk_setup_caps() did not change dst refcount.
    
    We can still dereference it since we hold socket lock.
    
    Caugth by syzbot :
    
    BUG: KASAN: use-after-free in atomic_dec_return include/asm-generic/atomic-instrumented.h:198 [inline]
    BUG: KASAN: use-after-free in dst_release+0x27/0xa0 net/core/dst.c:185
    Write of size 4 at addr ffff8801c54dc040 by task syz-executor4/20088
    
    CPU: 1 PID: 20088 Comm: syz-executor4 Not tainted 4.16.0+ #376
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x1a7/0x27d lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x23c/0x360 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x137/0x190 mm/kasan/kasan.c:267
     kasan_check_write+0x14/0x20 mm/kasan/kasan.c:278
     atomic_dec_return include/asm-generic/atomic-instrumented.h:198 [inline]
     dst_release+0x27/0xa0 net/core/dst.c:185
     sk_dst_set include/net/sock.h:1812 [inline]
     sk_dst_reset include/net/sock.h:1824 [inline]
     sock_setbindtodevice net/core/sock.c:610 [inline]
     sock_setsockopt+0x431/0x1b20 net/core/sock.c:707
     SYSC_setsockopt net/socket.c:1845 [inline]
     SyS_setsockopt+0x2ff/0x360 net/socket.c:1828
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x4552d9
    RSP: 002b:00007f4878126c68 EFLAGS: 00000246 ORIG_RAX: 0000000000000036
    RAX: ffffffffffffffda RBX: 00007f48781276d4 RCX: 00000000004552d9
    RDX: 0000000000000019 RSI: 0000000000000001 RDI: 0000000000000013
    RBP: 000000000072bea0 R08: 0000000000000010 R09: 0000000000000000
    R10: 00000000200010c0 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 0000000000000526 R14: 00000000006fac30 R15: 0000000000000000
    
    Allocated by task 20088:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459 [inline]
     kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:552
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:489
     kmem_cache_alloc+0x12e/0x760 mm/slab.c:3542
     dst_alloc+0x11f/0x1a0 net/core/dst.c:104
     rt_dst_alloc+0xe9/0x540 net/ipv4/route.c:1520
     __mkroute_output net/ipv4/route.c:2265 [inline]
     ip_route_output_key_hash_rcu+0xa49/0x2c60 net/ipv4/route.c:2493
     ip_route_output_key_hash+0x20b/0x370 net/ipv4/route.c:2322
     __ip_route_output_key include/net/route.h:126 [inline]
     ip_route_output_flow+0x26/0xa0 net/ipv4/route.c:2577
     ip_route_output_ports include/net/route.h:163 [inline]
     pptp_connect+0xa84/0x1170 drivers/net/ppp/pptp.c:453
     SYSC_connect+0x213/0x4a0 net/socket.c:1639
     SyS_connect+0x24/0x30 net/socket.c:1620
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Freed by task 20082:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459 [inline]
     __kasan_slab_free+0x11a/0x170 mm/kasan/kasan.c:520
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:527
     __cache_free mm/slab.c:3486 [inline]
     kmem_cache_free+0x83/0x2a0 mm/slab.c:3744
     dst_destroy+0x266/0x380 net/core/dst.c:140
     dst_destroy_rcu+0x16/0x20 net/core/dst.c:153
     __rcu_reclaim kernel/rcu/rcu.h:178 [inline]
     rcu_do_batch kernel/rcu/tree.c:2675 [inline]
     invoke_rcu_callbacks kernel/rcu/tree.c:2930 [inline]
     __rcu_process_callbacks kernel/rcu/tree.c:2897 [inline]
     rcu_process_callbacks+0xd6c/0x17b0 kernel/rcu/tree.c:2914
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
    
    The buggy address belongs to the object at ffff8801c54dc000
     which belongs to the cache ip_dst_cache of size 168
    The buggy address is located 64 bytes inside of
     168-byte region [ffff8801c54dc000, ffff8801c54dc0a8)
    The buggy address belongs to the page:
    page:ffffea0007153700 count:1 mapcount:0 mapping:ffff8801c54dc000 index:0x0
    flags: 0x2fffc0000000100(slab)
    raw: 02fffc0000000100 ffff8801c54dc000 0000000000000000 0000000100000010
    raw: ffffea0006b34b20 ffffea0006b6c1e0 ffff8801d674a1c0 0000000000000000
    page dumped because: kasan: bad access detected
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c8ee26b52b86c1b6e173188509ff57cdbfba407
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Fri Apr 6 01:19:37 2018 +0200

    net/sched: fix NULL dereference in the error path of tcf_bpf_init()
    
    
    [ Upstream commit 3239534a79ee6f20cffd974173a1e62e0730e8ac ]
    
    when tcf_bpf_init_from_ops() fails (e.g. because of program having invalid
    number of instructions), tcf_bpf_cfg_cleanup() calls bpf_prog_put(NULL) or
    bpf_prog_destroy(NULL). Unless CONFIG_BPF_SYSCALL is unset, this causes
    the following error:
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
     PGD 800000007345a067 P4D 800000007345a067 PUD 340e1067 PMD 0
     Oops: 0000 [#1] SMP PTI
     Modules linked in: act_bpf(E) ip6table_filter ip6_tables iptable_filter binfmt_misc ext4 mbcache jbd2 crct10dif_pclmul crc32_pclmul ghash_clmulni_intel snd_hda_codec_generic pcbc snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep snd_seq snd_seq_device snd_pcm aesni_intel crypto_simd glue_helper cryptd joydev snd_timer snd virtio_balloon pcspkr soundcore i2c_piix4 nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables xfs libcrc32c ata_generic pata_acpi qxl drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops ttm virtio_blk drm virtio_net virtio_console i2c_core crc32c_intel serio_raw virtio_pci ata_piix libata virtio_ring floppy virtio dm_mirror dm_region_hash dm_log dm_mod [last unloaded: act_bpf]
     CPU: 3 PID: 5654 Comm: tc Tainted: G            E    4.16.0.bpf_test+ #408
     Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011
     RIP: 0010:__bpf_prog_put+0xc/0xc0
     RSP: 0018:ffff9594003ef728 EFLAGS: 00010202
     RAX: 0000000000000000 RBX: ffff9594003ef758 RCX: 0000000000000024
     RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000000
     RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000044
     R10: 0000000000000220 R11: ffff8a7ab9f17131 R12: 0000000000000000
     R13: ffff8a7ab7c3c8e0 R14: 0000000000000001 R15: ffff8a7ab88f1054
     FS:  00007fcb2f17c740(0000) GS:ffff8a7abfd80000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000020 CR3: 000000007c888006 CR4: 00000000001606e0
     Call Trace:
      tcf_bpf_cfg_cleanup+0x2f/0x40 [act_bpf]
      tcf_bpf_cleanup+0x4c/0x70 [act_bpf]
      __tcf_idr_release+0x79/0x140
      tcf_bpf_init+0x125/0x330 [act_bpf]
      tcf_action_init_1+0x2cc/0x430
      ? get_page_from_freelist+0x3f0/0x11b0
      tcf_action_init+0xd3/0x1b0
      tc_ctl_action+0x18b/0x240
      rtnetlink_rcv_msg+0x29c/0x310
      ? _cond_resched+0x15/0x30
      ? __kmalloc_node_track_caller+0x1b9/0x270
      ? rtnl_calcit.isra.29+0x100/0x100
      netlink_rcv_skb+0xd2/0x110
      netlink_unicast+0x17c/0x230
      netlink_sendmsg+0x2cd/0x3c0
      sock_sendmsg+0x30/0x40
      ___sys_sendmsg+0x27a/0x290
      ? mem_cgroup_commit_charge+0x80/0x130
      ? page_add_new_anon_rmap+0x73/0xc0
      ? do_anonymous_page+0x2a2/0x560
      ? __handle_mm_fault+0xc75/0xe20
      __sys_sendmsg+0x58/0xa0
      do_syscall_64+0x6e/0x1a0
      entry_SYSCALL_64_after_hwframe+0x3d/0xa2
     RIP: 0033:0x7fcb2e58eba0
     RSP: 002b:00007ffc93c496c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
     RAX: ffffffffffffffda RBX: 00007ffc93c497f0 RCX: 00007fcb2e58eba0
     RDX: 0000000000000000 RSI: 00007ffc93c49740 RDI: 0000000000000003
     RBP: 000000005ac6a646 R08: 0000000000000002 R09: 0000000000000000
     R10: 00007ffc93c49120 R11: 0000000000000246 R12: 0000000000000000
     R13: 00007ffc93c49804 R14: 0000000000000001 R15: 000000000066afa0
     Code: 5f 00 48 8b 43 20 48 c7 c7 70 2f 7c b8 c7 40 10 00 00 00 00 5b e9 a5 8b 61 00 0f 1f 44 00 00 0f 1f 44 00 00 41 54 55 48 89 fd 53 <48> 8b 47 20 f0 ff 08 74 05 5b 5d 41 5c c3 41 89 f4 0f 1f 44 00
     RIP: __bpf_prog_put+0xc/0xc0 RSP: ffff9594003ef728
     CR2: 0000000000000020
    
    Fix it in tcf_bpf_cfg_cleanup(), ensuring that bpf_prog_{put,destroy}(f)
    is called only when f is not NULL.
    
    Fixes: bbc09e7842a5 ("net/sched: fix idr leak on the error path of tcf_bpf_init()")
    Reported-by: Lucas Bates <lucasb@mojatatu.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbced83a1b813db1d948e2773fbb8e62f3ae26ab
Author: Alexander Potapenko <glider@google.com>
Date:   Fri Mar 23 13:49:02 2018 +0100

    netlink: make sure nladdr has correct size in netlink_connect()
    
    
    [ Upstream commit 7880287981b60a6808f39f297bb66936e8bdf57a ]
    
    KMSAN reports use of uninitialized memory in the case when |alen| is
    smaller than sizeof(struct sockaddr_nl), and therefore |nladdr| isn't
    fully copied from the userspace.
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Fixes: 1da177e4c3f41524 ("Linux-2.6.12-rc2")
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd01e762a37bbf2358d1fe6b10f500c6186afb93
Author: David Ahern <dsahern@gmail.com>
Date:   Thu Mar 29 17:44:57 2018 -0700

    net/ipv6: Fix route leaking between VRFs
    
    
    [ Upstream commit b6cdbc85234b072340b8923e69f49ec293f905dc ]
    
    Donald reported that IPv6 route leaking between VRFs is not working.
    The root cause is the strict argument in the call to rt6_lookup when
    validating the nexthop spec.
    
    ip6_route_check_nh validates the gateway and device (if given) of a
    route spec. It in turn could call rt6_lookup (e.g., lookup in a given
    table did not succeed so it falls back to a full lookup) and if so
    sets the strict argument to 1. That means if the egress device is given,
    the route lookup needs to return a result with the same device. This
    strict requirement does not work with VRFs (IPv4 or IPv6) because the
    oif in the flow struct is overridden with the index of the VRF device
    to trigger a match on the l3mdev rule and force the lookup to its table.
    
    The right long term solution is to add an l3mdev index to the flow
    struct such that the oif is not overridden. That solution will not
    backport well, so this patch aims for a simpler solution to relax the
    strict argument if the route spec device is an l3mdev slave. As done
    in other places, use the FLOWI_FLAG_SKIP_NH_OIF to know that the
    RT6_LOOKUP_F_IFACE flag needs to be removed.
    
    Fixes: ca254490c8df ("net: Add VRF support to IPv6 stack")
    Reported-by: Donald Sharp <sharpd@cumulusnetworks.com>
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae1ed37bae9cc34821a06c3920bb041e94e0fe2d
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 26 08:08:07 2018 -0700

    net: fix possible out-of-bound read in skb_network_protocol()
    
    
    [ Upstream commit 1dfe82ebd7d8fd43dba9948fdfb31f145014baa0 ]
    
    skb mac header is not necessarily set at the time skb_network_protocol()
    is called. Use skb->data instead.
    
    BUG: KASAN: slab-out-of-bounds in skb_network_protocol+0x46b/0x4b0 net/core/dev.c:2739
    Read of size 2 at addr ffff8801b3097a0b by task syz-executor5/14242
    
    CPU: 1 PID: 14242 Comm: syz-executor5 Not tainted 4.16.0-rc6+ #280
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x24d lib/dump_stack.c:53
     print_address_description+0x73/0x250 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x23c/0x360 mm/kasan/report.c:412
     __asan_report_load_n_noabort+0xf/0x20 mm/kasan/report.c:443
     skb_network_protocol+0x46b/0x4b0 net/core/dev.c:2739
     harmonize_features net/core/dev.c:2924 [inline]
     netif_skb_features+0x509/0x9b0 net/core/dev.c:3011
     validate_xmit_skb+0x81/0xb00 net/core/dev.c:3084
     validate_xmit_skb_list+0xbf/0x120 net/core/dev.c:3142
     packet_direct_xmit+0x117/0x790 net/packet/af_packet.c:256
     packet_snd net/packet/af_packet.c:2944 [inline]
     packet_sendmsg+0x3aed/0x60b0 net/packet/af_packet.c:2969
     sock_sendmsg_nosec net/socket.c:629 [inline]
     sock_sendmsg+0xca/0x110 net/socket.c:639
     ___sys_sendmsg+0x767/0x8b0 net/socket.c:2047
     __sys_sendmsg+0xe5/0x210 net/socket.c:2081
    
    Fixes: 19acc327258a ("gso: Handle Trans-Ether-Bridging protocol in skb_network_protocol()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Pravin B Shelar <pshelar@ovn.org>
    Reported-by: Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 451495e016614a116c7b8b26e940062acfcbde93
Author: Miguel Fadon Perlines <mfadon@teldat.com>
Date:   Thu Apr 5 10:25:38 2018 +0200

    arp: fix arp_filter on l3slave devices
    
    
    [ Upstream commit 58b35f27689b5eb514fc293c332966c226b1b6e4 ]
    
    arp_filter performs an ip_route_output search for arp source address and
    checks if output device is the same where the arp request was received,
    if it is not, the arp request is not answered.
    
    This route lookup is always done on main route table so l3slave devices
    never find the proper route and arp is not answered.
    
    Passing l3mdev_master_ifindex_rcu(dev) return value as oif fixes the
    lookup for l3slave devices while maintaining same behavior for non
    l3slave devices as this function returns 0 in that case.
    
    Fixes: 613d09b30f8b ("net: Use VRF device index for lookups on TX")
    Signed-off-by: Miguel Fadon Perlines <mfadon@teldat.com>
    Acked-by: David Ahern <dsa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db4f72022e89f7ca0e4daf41ec8ec3f2a7fdec28
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Feb 8 15:38:32 2016 +0100

    Kbuild: provide a __UNIQUE_ID for clang
    
    commit b41c29b0527c7fd6a95d0f71274abb79933bf960 upstream.
    
    The default __UNIQUE_ID macro in compiler.h fails to work for some drivers:
    
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c:615:1: error: redefinition of
          '__UNIQUE_ID_firmware615'
    BRCMF_FW_NVRAM_DEF(4354, "brcmfmac4354-sdio.bin", "brcmfmac4354-sdio.txt");
    
    This adds a copy of the version we use for gcc-4.3 and higher, as the same
    one works with all versions of clang that I could find in svn (2.6 and higher).
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Cc: Matthias Kaehlcke <mka@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93dcb09e29bb24a86aa7b7eff65e424f7dc98af2
Author: Mel Gorman <mgorman@suse.de>
Date:   Tue Feb 9 11:15:14 2016 -0800

    futex: Remove requirement for lock_page() in get_futex_key()
    
    commit 65d8fc777f6dcfee12785c057a6b57f679641c90 upstream.
    
    When dealing with key handling for shared futexes, we can drastically reduce
    the usage/need of the page lock. 1) For anonymous pages, the associated futex
    object is the mm_struct which does not require the page lock. 2) For inode
    based, keys, we can check under RCU read lock if the page mapping is still
    valid and take reference to the inode. This just leaves one rare race that
    requires the page lock in the slow path when examining the swapcache.
    
    Additionally realtime users currently have a problem with the page lock being
    contended for unbounded periods of time during futex operations.
    
    Task A
         get_futex_key()
         lock_page()
        ---> preempted
    
    Now any other task trying to lock that page will have to wait until
    task A gets scheduled back in, which is an unbound time.
    
    With this patch, we pretty much have a lockless futex_get_key().
    
    Experiments show that this patch can boost/speedup the hashing of shared
    futexes with the perf futex benchmarks (which is good for measuring such
    change) by up to 45% when there are high (> 100) thread counts on a 60 core
    Westmere. Lower counts are pretty much in the noise range or less than 10%,
    but mid range can be seen at over 30% overall throughput (hash ops/sec).
    This makes anon-mem shared futexes much closer to its private counterpart.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    [ Ported on top of thp refcount rework, changelog, comments, fixes. ]
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Chris Mason <clm@fb.com>
    Cc: Darren Hart <dvhart@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: dave@stgolabs.net
    Link: http://lkml.kernel.org/r/1455045314-8305-3-git-send-email-dave@stgolabs.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Chenbo Feng <fengc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 031987b6beaa02f64aa4428329e34ee3c5b3c76f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Jun 7 19:01:32 2017 -0400

    random: use lockless method of accessing and updating f->reg_idx
    
    commit 92e75428ffc90e2a0321062379f883f3671cfebe upstream.
    
    Linus pointed out that there is a much more efficient way of avoiding
    the problem that we were trying to address in commit 9dfa7bba35ac0:
    "fix race in drivers/char/random.c:get_reg()".
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db203ab2402dbb9b58b038b8f9097a997f4d8a76
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Apr 9 18:21:47 2018 -0700

    virtio_net: check return value of skb_to_sgvec in one more location
    
    Kernels that do not have f6b10209b90d ("virtio-net: switch to use
    build_skb() for small buffer") will have an extra call to skb_to_sgvec
    that is not handled by e2fcad58fd23 ("virtio_net: check return value of
    skb_to_sgvec always"). Since the former does not appear to be stable
    material, just fix the call up directly.
    
    Cc: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f483e77b0fd425d64e99095f497dbf3cf9f27fb
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:26 2017 +0200

    virtio_net: check return value of skb_to_sgvec always
    
    commit e2fcad58fd230f635a74e4e983c6f4ea893642d2 upstream.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [natechancellor: backport to 4.4]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea63eca9b1c613f29885bf1236a0c5843bd613dd
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:24 2017 +0200

    rxrpc: check return value of skb_to_sgvec always
    
    commit 89a5ea99662505d2d61f2a3030a6896c2cb3cdb0 upstream.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Acked-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [natechancellor: backport to 4.4]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d55d3849645565927e4b8411463a6b8df58903a8
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:23 2017 +0200

    ipsec: check return value of skb_to_sgvec always
    
    commit 3f29770723fe498a5c5f57c3a31a996ebdde03e1 upstream.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [natechancellor: Adjusted context due to lack of fca11ebde3f0]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6c1f1fec89da12284e08623f837180e00f0c973
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Tue Jan 9 14:39:23 2018 +0100

    perf tools: Fix copyfile_offset update of output offset
    
    
    [ Upstream commit fa1195ccc0af2d121abe0fe266a1caee8c265eea ]
    
    We need to increase output offset in each iteration, not decrease it as
    we currently do.
    
    I guess we were lucky to finish in most cases in first iteration, so the
    bug never showed. However it shows a lot when working with big (~4GB)
    size data.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: 9c9f5a2f1944 ("perf tools: Introduce copyfile_offset() function")
    Link: http://lkml.kernel.org/r/20180109133923.25406-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d431624e86e565243259373d61a9e57eb973548
Author: Arjun Vynipadath <arjun@chelsio.com>
Date:   Wed Jan 10 12:02:13 2018 +0530

    cxgb4vf: Fix SGE FL buffer initialization logic for 64K pages
    
    
    [ Upstream commit ea0a42109aee7b92e631c4eb3f2219fadf58acdd ]
    
    We'd come in with SGE_FL_BUFFER_SIZE[0] and [1] both equal to 64KB and
    the extant logic would flag that as an error. This was already fixed in
    cxgb4 driver with "92ddcc7 cxgb4: Fix some small bugs in
    t4_sge_init_soft() when our Page Size is 64KB".
    
    Original Work by: Casey Leedom <leedom@chelsio.com>
    Signed-off-by: Arjun Vynipadath <arjun@chelsio.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 997a9f3363fa5a199a4c5b0075ac6a875642bd08
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 7 21:54:00 2018 +0100

    EDAC, mv64x60: Fix an error handling path
    
    
    [ Upstream commit 68fa24f9121c04ef146b5158f538c8b32f285be5 ]
    
    We should not call edac_mc_del_mc() if a corresponding call to
    edac_mc_add_mc() has not been performed yet.
    
    So here, we should go to err instead of err2 to branch at the right
    place of the error handling path.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180107205400.14068-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cab2ea2186013f49414ad2505a725bd1a244c464
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Jan 3 10:18:03 2018 -0800

    tty: n_gsm: Allow ADM response in addition to UA for control dlci
    
    
    [ Upstream commit ea3d8465ab9b3e01be329ac5195970a84bef76c5 ]
    
    Some devices have the control dlci stay in ADM mode instead of the UA
    mode. This can seen at least on droid 4 when trying to open the ts
    27.010 mux port. Enabling n_gsm debug mode shows the control dlci
    always respond with DM to SABM instead of UA:
    
    # modprobe n_gsm debug=0xff
    # ldattach -d GSM0710 /dev/ttyS0 &
    gsmld_output: 00000000: f9 03 3f 01 1c f9
    --> 0) C: SABM(P)
    gsmld_receive: 00000000: f9 03 1f 01 36 f9
    <-- 0) C: DM(P)
    ...
    $ minicom -D /dev/gsmtty1
    minicom: cannot open /dev/gsmtty1: No error information
    $ strace minicom -D /dev/gsmtty1
    ...
    open("/dev/gsmtty1", O_RDWR|O_NOCTTY|O_NONBLOCK|O_LARGEFILE) = -1 EL2HLT
    
    Note that this is different issue from other n_gsm -EL2HLT issues such
    as timeouts when the control dlci does not respond at all.
    
    The ADM mode seems to be a quite common according to "RF Wireless World"
    article "GSM Issue-UE sends SABM and gets a DM response instead of
    UA response":
    
      This issue is most commonly observed in GSM networks where in UE sends
      SABM and expects network to send UA response but it ends up receiving
      DM response from the network. SABM stands for Set asynchronous balanced
      mode, UA stands for Unnumbered Acknowledge and DA stands for
      Disconnected Mode.
    
      An RLP entity can be in one of two modes:
      - Asynchronous Balanced Mode (ABM)
      - Asynchronous Disconnected Mode (ADM)
    
    Currently Linux kernel closes the control dlci after several retries
    in gsm_dlci_t1() on DM. This causes n_gsm /dev/gsmtty ports to produce
    error code -EL2HLT when trying to open them as the closing of control
    dlci has already set gsm->dead.
    
    Let's fix the issue by allowing control dlci stay in ADM mode after the
    retries so the /dev/gsmtty ports can be opened and used. It seems that
    it might take several attempts to get any response from the control
    dlci, so it's best to allow ADM mode only after the SABM retries are
    done.
    
    Note that for droid 4 additional patches are needed to mux the ttyS0
    pins and to toggle RTS gpio_149 to wake up the mdm6600 modem are also
    needed to use n_gsm. And the mdm6600 modem needs to be powered on.
    
    Cc: linux-serial@vger.kernel.org
    Cc: Alan Cox <alan@llwyncelyn.cymru>
    Cc: Jiri Prchal <jiri.prchal@aksignal.cz>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Marcel Partap <mpartap@gmx.net>
    Cc: Michael Scott <michael.scott@linaro.org>
    Cc: Peter Hurley <peter@hurleysoftware.com>
    Cc: Russ Gorby <russ.gorby@intel.com>
    Cc: Sascha Hauer <s.hauer@pengutronix.de>
    Cc: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84f34c638d49b7e0e261307424dc3fce652d7ab6
Author: Ming Lei <ming.lei@redhat.com>
Date:   Tue Jan 9 21:28:29 2018 +0800

    blk-mq: fix kernel oops in blk_mq_tag_idle()
    
    
    [ Upstream commit 8ab0b7dc73e1b3e2987d42554b2bff503f692772 ]
    
    HW queues may be unmapped in some cases, such as blk_mq_update_nr_hw_queues(),
    then we need to check it before calling blk_mq_tag_idle(), otherwise
    the following kernel oops can be triggered, so fix it by checking if
    the hw queue is unmapped since it doesn't make sense to idle the tags
    any more after hw queues are unmapped.
    
    [  440.771298] Workqueue: nvme-wq nvme_rdma_del_ctrl_work [nvme_rdma]
    [  440.779104] task: ffff894bae755ee0 ti: ffff893bf9bc8000 task.ti: ffff893bf9bc8000
    [  440.788359] RIP: 0010:[<ffffffffb730e2b4>]  [<ffffffffb730e2b4>] __blk_mq_tag_idle+0x24/0x40
    [  440.798697] RSP: 0018:ffff893bf9bcbd10  EFLAGS: 00010286
    [  440.805538] RAX: 0000000000000000 RBX: ffff895bb131dc00 RCX: 000000000000011f
    [  440.814426] RDX: 00000000ffffffff RSI: 0000000000000120 RDI: ffff895bb131dc00
    [  440.823301] RBP: ffff893bf9bcbd10 R08: 000000000001b860 R09: 4a51d361c00c0000
    [  440.832193] R10: b5907f32b4cc7003 R11: ffffd6cabfb57000 R12: ffff894bafd1e008
    [  440.841091] R13: 0000000000000001 R14: ffff895baf770000 R15: 0000000000000080
    [  440.849988] FS:  0000000000000000(0000) GS:ffff894bbdcc0000(0000) knlGS:0000000000000000
    [  440.859955] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  440.867274] CR2: 0000000000000008 CR3: 000000103d098000 CR4: 00000000001407e0
    [  440.876169] Call Trace:
    [  440.879818]  [<ffffffffb7309d68>] blk_mq_exit_hctx+0xd8/0xe0
    [  440.887051]  [<ffffffffb730dc40>] blk_mq_free_queue+0xf0/0x160
    [  440.894465]  [<ffffffffb72ff679>] blk_cleanup_queue+0xd9/0x150
    [  440.901881]  [<ffffffffc08a802b>] nvme_ns_remove+0x5b/0xb0 [nvme_core]
    [  440.910068]  [<ffffffffc08a811b>] nvme_remove_namespaces+0x3b/0x60 [nvme_core]
    [  440.919026]  [<ffffffffc08b817b>] __nvme_rdma_remove_ctrl+0x2b/0xb0 [nvme_rdma]
    [  440.928079]  [<ffffffffc08b8237>] nvme_rdma_del_ctrl_work+0x17/0x20 [nvme_rdma]
    [  440.937126]  [<ffffffffb70ab58a>] process_one_work+0x17a/0x440
    [  440.944517]  [<ffffffffb70ac3a8>] worker_thread+0x278/0x3c0
    [  440.951607]  [<ffffffffb70ac130>] ? manage_workers.isra.24+0x2a0/0x2a0
    [  440.959760]  [<ffffffffb70b352f>] kthread+0xcf/0xe0
    [  440.966055]  [<ffffffffb70b3460>] ? insert_kthread_work+0x40/0x40
    [  440.973715]  [<ffffffffb76d8658>] ret_from_fork+0x58/0x90
    [  440.980586]  [<ffffffffb70b3460>] ? insert_kthread_work+0x40/0x40
    [  440.988229] Code: 5b 41 5c 5d c3 66 90 0f 1f 44 00 00 48 8b 87 20 01 00 00 f0 0f ba 77 40 01 19 d2 85 d2 75 08 c3 0f 1f 80 00 00 00 00 55 48 89 e5 <f0> ff 48 08 48 8d 78 10 e8 7f 0f 05 00 5d c3 0f 1f 00 66 2e 0f
    [  441.011620] RIP  [<ffffffffb730e2b4>] __blk_mq_tag_idle+0x24/0x40
    [  441.019301]  RSP <ffff893bf9bcbd10>
    [  441.024052] CR2: 0000000000000008
    
    Reported-by: Zhang Yi <yizhan@redhat.com>
    Tested-by: Zhang Yi <yizhan@redhat.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5818fb08a7a98b6806369fc6d79f3bb43ea086e5
Author: chenxiang <chenxiang66@hisilicon.com>
Date:   Thu Jan 4 21:04:33 2018 +0800

    scsi: libsas: initialize sas_phy status according to response of DISCOVER
    
    
    [ Upstream commit affc67788fe5dfffad5cda3d461db5cf2b2ff2b0 ]
    
    The status of SAS PHY is in sas_phy->enabled. There is an issue that the
    status of a remote SAS PHY may be initialized incorrectly: if disable
    remote SAS PHY through sysfs interface (such as echo 0 >
    /sys/class/sas_phy/phy-1:0:0/enable), then reboot the system, and we
    will find the status of remote SAS PHY which is disabled before is
    1 (cat /sys/class/sas_phy/phy-1:0:0/enable). But actually the status of
    remote SAS PHY is disabled and the device attached is not found.
    
    In SAS protocol, NEGOTIATED LOGICAL LINK RATE field of DISCOVER response
    is 0x1 when remote SAS PHY is disabled. So initialize sas_phy->enabled
    according to the value of NEGOTIATED LOGICAL LINK RATE field.
    
    Signed-off-by: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4da0deac9c43420d1b459545e2ae397b068f1e72
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:32 2018 +0800

    scsi: libsas: fix error when getting phy events
    
    
    [ Upstream commit 2b23d9509fd7174b362482cf5f3b5f9a2265bc33 ]
    
    The intend purpose here was to goto out if smp_execute_task() returned
    error. Obviously something got screwed up. We will never get these link
    error statistics below:
    
    ~:/sys/class/sas_phy/phy-1:0:12 # cat invalid_dword_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat running_disparity_error_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat loss_of_dword_sync_count
    0
    ~:/sys/class/sas_phy/phy-1:0:12 # cat phy_reset_problem_count
    0
    
    Obviously we should goto error handler if smp_execute_task() returns
    non-zero.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92b72d2f84389e27d81c93beaf9093f8cf1ef449
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:31 2018 +0800

    scsi: libsas: fix memory leak in sas_smp_get_phy_events()
    
    
    [ Upstream commit 4a491b1ab11ca0556d2fda1ff1301e862a2d44c4 ]
    
    We've got a memory leak with the following producer:
    
    while true;
    do cat /sys/class/sas_phy/phy-1:0:12/invalid_dword_count >/dev/null;
    done
    
    The buffer req is allocated and not freed after we return. Fix it.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebd67e20fba8f6318d06d69cf043a6caacf3dbbb
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Jan 8 12:21:21 2018 -0800

    bcache: segregate flash only volume write streams
    
    
    [ Upstream commit 4eca1cb28d8b0574ca4f1f48e9331c5f852d43b9 ]
    
    In such scenario that there are some flash only volumes
    , and some cached devices, when many tasks request these devices in
    writeback mode, the write IOs may fall to the same bucket as bellow:
    | cached data | flash data | cached data | cached data| flash data|
    then after writeback of these cached devices, the bucket would
    be like bellow bucket:
    | free | flash data | free | free | flash data |
    
    So, there are many free space in this bucket, but since data of flash
    only volumes still exists, so this bucket cannot be reclaimable,
    which would cause waste of bucket space.
    
    In this patch, we segregate flash only volume write streams from
    cached devices, so data from flash only volumes and cached devices
    can store in different buckets.
    
    Compare to v1 patch, this patch do not add a additionally open bucket
    list, and it is try best to segregate flash only volume write streams
    from cached devices, sectors of flash only volumes may still be mixed
    with dirty sectors of cached device, but the number is very small.
    
    [mlyle: fixed commit log formatting, permissions, line endings]
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b14663a935db70b3d528b2b37eecbc15d0096c7
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Jan 8 12:21:19 2018 -0800

    bcache: stop writeback thread after detaching
    
    
    [ Upstream commit 8d29c4426b9f8afaccf28de414fde8a722b35fdf ]
    
    Currently, when a cached device detaching from cache, writeback thread is
    not stopped, and writeback_rate_update work is not canceled. For example,
    after the following command:
    echo 1 >/sys/block/sdb/bcache/detach
    you can still see the writeback thread. Then you attach the device to the
    cache again, bcache will create another writeback thread, for example,
    after below command:
    echo  ba0fb5cd-658a-4533-9806-6ce166d883b9 > /sys/block/sdb/bcache/attach
    then you will see 2 writeback threads.
    This patch stops writeback thread and cancels writeback_rate_update work
    when cached device detaching from cache.
    
    Compare with patch v1, this v2 patch moves code down into the register
    lock for safety in case of any future changes as Coly and Mike suggested.
    
    [edit by mlyle: commit log spelling/formatting]
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f077d960298a1db90a4658ba529e210704b83c16
Author: Roopa Prabhu <roopa@cumulusnetworks.com>
Date:   Sun Jun 11 16:32:50 2017 -0700

    vxlan: dont migrate permanent fdb entries during learn
    
    
    [ Upstream commit e0090a9e979de5202c7d16c635dea2f005221073 ]
    
    This patch fixes vxlan_snoop to not move permanent fdb entries
    on learn events. This is consistent with the bridge fdb
    handling of permanent entries.
    
    Fixes: 26a41ae60438 ("vxlan: only migrate dynamic FDB entries")
    Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f33d9068b0a582d0bf2ff2f3dd0e2350e9075f3
Author: Stefan Haberland <sth@linux.vnet.ibm.com>
Date:   Thu May 18 13:24:45 2017 +0200

    s390/dasd: fix hanging safe offline
    
    
    [ Upstream commit e8ac01555d9e464249e8bb122337d6d6e5589ccc ]
    
    The safe offline processing may hang forever because it waits for I/O
    which can not be started because of the offline flag that prevents new
    I/O from being started.
    
    Allow I/O to be started during safe offline processing because in this
    special case we take care that the queues are empty before throwing away
    the device.
    
    Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ab8ad5317699389e19d00618996eaae2da6f2d8
Author: Bob Moore <robert.moore@intel.com>
Date:   Mon Jun 5 16:40:34 2017 +0800

    ACPICA: Disassembler: Abort on an invalid/unknown AML opcode
    
    
    [ Upstream commit 6f0527b77d9e0129dd8e50945b0d610ed943d6b2 ]
    
    ACPICA commit ed0389cb11a61e63c568ac1f67948fc6a7bd1aeb
    
    An invalid opcode indicates something seriously wrong with the
    input AML file. The AML parser is immediately confused and lost,
    causing the resulting parse tree to be ill-formed. The actual
    disassembly can then cause numerous unrelated errors and faults.
    
    This change aborts the disassembly upon discovery of such an
    opcode during the AML parse phase.
    
    Link: https://github.com/acpica/acpica/commit/ed0389cb
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07bd736446c1e187d68cdfd3ad4b1def4f2241ce
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Mon Jun 5 16:40:02 2017 +0800

    ACPICA: Events: Add runtime stub support for event APIs
    
    
    [ Upstream commit 861ba6351c520328e94a78c923b415faa9116287 ]
    
    ACPICA commit 99bc3beca92c6574ea1d69de42e54f872e6373ce
    
    It is reported that on Linux, RTC driver complains wrong errors on
    hardware reduced platform:
      [    4.085420] ACPI Warning: Could not enable fixed event - real_time_clock (4) (20160422/evxface-654)
    
    This patch fixes this by correctly adding runtime reduced hardware check.
    Reported by Chandan Tagore, fixed by Lv Zheng.
    
    Link: https://github.com/acpica/acpica/commit/99bc3bec
    Tested-by: Chandan Tagore <tagore.chandan@gmail.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7c0ef3478cab074ec59d42ba7e5db70c198ae50
Author: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
Date:   Sun Jun 11 14:28:54 2017 +0200

    cpuidle: dt: Add missing 'of_node_put()'
    
    
    [ Upstream commit b2cdd8e1b54849477a32d820acc2e87828a38f3d ]
    
    'of_node_put()' should be called on pointer returned by
    'of_parse_phandle()' when done. In this function this is done in all path
    except this 'continue', so add it.
    
    Fixes: 97735da074fd (drivers: cpuidle: Add status property to ARM idle states)
    Signed-off-by: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd783a46caff12880f934aad3fb624aa9ca2cd8
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Fri Jun 9 18:43:56 2017 +0200

    Bluetooth: Send HCI Set Event Mask Page 2 command only when needed
    
    
    [ Upstream commit 313f6888c8fbb1bc8b36c9012ce4e1de848df696 ]
    
    The Broadcom BCM20702 Bluetooth controller in ThinkPad-T530 devices
    report support for the Set Event Mask Page 2 command, but actually do
    return an error when trying to use it.
    
      < HCI Command: Read Local Supported Commands (0x04|0x0002) plen 0
      > HCI Event: Command Complete (0x0e) plen 68
           Read Local Supported Commands (0x04|0x0002) ncmd 1
             Status: Success (0x00)
             Commands: 162 entries
               ...
               Set Event Mask Page 2 (Octet 22 - Bit 2)
               ...
    
      < HCI Command: Set Event Mask Page 2 (0x03|0x0063) plen 8
             Mask: 0x0000000000000000
      > HCI Event: Command Complete (0x0e) plen 4
           Set Event Mask Page 2 (0x03|0x0063) ncmd 1
             Status: Unknown HCI Command (0x01)
    
    Since these controllers do not support any feature that would require
    the event mask page 2 to be modified, it is safe to not send this
    command at all. The default value is all bits set to zero.
    
    T:  Bus=01 Lev=02 Prnt=02 Port=03 Cnt=03 Dev#=  9 Spd=12   MxCh= 0
    D:  Ver= 2.00 Cls=ff(vend.) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=0a5c ProdID=21e6 Rev= 1.12
    S:  Manufacturer=Broadcom Corp
    S:  Product=BCM20702A0
    S:  SerialNumber=F82FA8E8CFC0
    C:* #Ifs= 4 Cfg#= 1 Atr=e0 MxPwr=  0mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=ff(vend.) Sub=01 Prot=01 Driver=btusb
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=btusb
    E:  Ad=84(I) Atr=02(Bulk) MxPS=  32 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS=  32 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 0 Cls=fe(app. ) Sub=01 Prot=01 Driver=(none)
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Reported-by: Sedat Dilek <sedat.dilek@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Szymon Janc <szymon.janc@codecoup.pl>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 857fb4eb565e898efa719f5c2d9fef4349d4a6c3
Author: Lorenzo Bianconi <lorenzo.bianconi83@gmail.com>
Date:   Tue Jun 6 22:51:24 2017 +0200

    iio: magnetometer: st_magn_spi: fix spi_device_id table
    
    
    [ Upstream commit c83761ff0aac954aa368c623bb0f0d1a3214e834 ]
    
    Remove LSM303DLHC, LSM303DLM from st_magn_id_table since LSM303DL series
    does not support spi interface
    
    Fixes: 872e79add756 (iio: magn: Add STMicroelectronics magn driver)
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@st.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 818f9c4dec1be94f71fcf5b085d658d33f0c5d20
Author: Jag Raman <jag.raman@oracle.com>
Date:   Fri Jun 9 12:29:31 2017 -0400

    sparc64: ldc abort during vds iso boot
    
    
    [ Upstream commit 6c95483b768c62f8ee933ae08a1bdbcb78b5410f ]
    
    Orabug: 20902628
    
    When an ldc control-only packet is received during data exchange in
    read_nonraw(), a new rx head is calculated but the rx queue head is not
    actually advanced (rx_set_head() is not called) and a branch is taken to
    'no_data' at which point two things can happen depending on the value
    of the newly calculated rx head and the current rx tail:
    
    - If the rx queue is determined to be not empty, then the wrong packet
      is picked up.
    
    - If the rx queue is determined to be empty, then a read error (EAGAIN)
      is eventually returned since it is falsely assumed that more data was
      expected.
    
    The fix is to update the rx head and return in case of a control only
    packet during data exchange.
    
    Signed-off-by: Jagannathan Raman <jag.raman@oracle.com>
    Reviewed-by: Aaron Young <aaron.young@oracle.com>
    Reviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>
    Reviewed-by: Bijan Mottahedeh <bijan.mottahedeh@oracle.com>
    Reviewed-by: Liam Merwick <liam.merwick@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c19ae2f66bf98729e9be4032a6a03874c06673a7
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Jun 10 14:56:56 2017 +0800

    sctp: fix recursive locking warning in sctp_do_peeloff
    
    
    [ Upstream commit 6dfe4b97e08ec3d1a593fdaca099f0ef0a3a19e6 ]
    
    Dmitry got the following recursive locking report while running syzkaller
    fuzzer, the Call Trace:
     __dump_stack lib/dump_stack.c:16 [inline]
     dump_stack+0x2ee/0x3ef lib/dump_stack.c:52
     print_deadlock_bug kernel/locking/lockdep.c:1729 [inline]
     check_deadlock kernel/locking/lockdep.c:1773 [inline]
     validate_chain kernel/locking/lockdep.c:2251 [inline]
     __lock_acquire+0xef2/0x3430 kernel/locking/lockdep.c:3340
     lock_acquire+0x2a1/0x630 kernel/locking/lockdep.c:3755
     lock_sock_nested+0xcb/0x120 net/core/sock.c:2536
     lock_sock include/net/sock.h:1460 [inline]
     sctp_close+0xcd/0x9d0 net/sctp/socket.c:1497
     inet_release+0xed/0x1c0 net/ipv4/af_inet.c:425
     inet6_release+0x50/0x70 net/ipv6/af_inet6.c:432
     sock_release+0x8d/0x1e0 net/socket.c:597
     __sock_create+0x38b/0x870 net/socket.c:1226
     sock_create+0x7f/0xa0 net/socket.c:1237
     sctp_do_peeloff+0x1a2/0x440 net/sctp/socket.c:4879
     sctp_getsockopt_peeloff net/sctp/socket.c:4914 [inline]
     sctp_getsockopt+0x111a/0x67e0 net/sctp/socket.c:6628
     sock_common_getsockopt+0x95/0xd0 net/core/sock.c:2690
     SYSC_getsockopt net/socket.c:1817 [inline]
     SyS_getsockopt+0x240/0x380 net/socket.c:1799
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    This warning is caused by the lock held by sctp_getsockopt() is on one
    socket, while the other lock that sctp_close() is getting later is on
    the newly created (which failed) socket during peeloff operation.
    
    This patch is to avoid this warning by use lock_sock with subclass
    SINGLE_DEPTH_NESTING as Wang Cong and Marcelo's suggestion.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Suggested-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Suggested-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d85cbd9470c2edff556959487b0d98832d4874d8
Author: Mintz, Yuval <Yuval.Mintz@cavium.com>
Date:   Fri Jun 9 17:17:01 2017 +0300

    bnx2x: Allow vfs to disable txvlan offload
    
    
    [ Upstream commit 92f85f05caa51d844af6ea14ffbc7a786446a644 ]
    
    VF clients are configured as enforced, meaning firmware is validating
    the correctness of their ethertype/vid during transmission.
    Once txvlan is disabled, VF would start getting SKBs for transmission
    here vlan is on the payload - but it'll pass the packet's ethertype
    instead of the vid, leading to firmware declaring it as malicious.
    
    Signed-off-by: Yuval Mintz <Yuval.Mintz@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30b1cd18477f31b191b231f7cc5a19abbf7c3991
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jun 8 10:53:10 2017 +0200

    xen: avoid type warning in xchg_xen_ulong
    
    
    [ Upstream commit 9cc91f212111cdcbefa02dcdb7dd443f224bf52c ]
    
    The improved type-checking version of container_of() triggers a warning for
    xchg_xen_ulong, pointing out that 'xen_ulong_t' is unsigned, but atomic64_t
    contains a signed value:
    
    drivers/xen/events/events_2l.c: In function 'evtchn_2l_handle_events':
    drivers/xen/events/events_2l.c:187:1020: error: call to '__compiletime_assert_187' declared with attribute error: pointer type mismatch in container_of()
    
    This adds a cast to work around the warning.
    
    Cc: Ian Abbott <abbotti@mev.co.uk>
    Fixes: 85323a991d40 ("xen: arm: mandate EABI and use generic atomic operations.")
    Fixes: daa2ac80834d ("kernel.h: handle pointers to arrays better in container_of()")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Acked-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1088bcb0e947d037a0e4441d84fcefd87aa8a2e
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu Jun 8 11:35:03 2017 -0400

    skbuff: only inherit relevant tx_flags
    
    
    [ Upstream commit fff88030b3ff930ca7a3d74acfee0472f33887ea ]
    
    When inheriting tx_flags from one skbuff to another, always apply a
    mask to avoid overwriting unrelated other bits in the field.
    
    The two SKBTX_SHARED_FRAG cases clears all other bits. In practice,
    tx_flags are zero at this point now. But this is fragile. Timestamp
    flags are set, for instance, if in tcp_gso_segment, after this clear
    in skb_segment.
    
    The SKBTX_ANY_TSTAMP mask in __skb_tstamp_tx ensures that new
    skbs do not accidentally inherit flags such as SKBTX_SHARED_FRAG.
    
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0761b57e0bf11ada4c45e68f4cba1370363d90d
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Thu Jun 8 16:31:07 2017 +0900

    perf tests: Decompress kernel module before objdump
    
    
    [ Upstream commit 94df1040b1e6aacd8dec0ba3c61d7e77cd695f26 ]
    
    If a kernel modules is compressed, it should be decompressed before
    running objdump to parse binary data correctly.  This fixes a failure of
    object code reading test for me.
    
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: kernel-team@lge.com
    Link: http://lkml.kernel.org/r/20170608073109.30699-8-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 389110fae282c1610fc93512060f1c91884f34d1
Author: Christian Lamparter <chunkeey@googlemail.com>
Date:   Wed Jun 7 15:51:15 2017 +0200

    net: emac: fix reset timeout with AR8035 phy
    
    
    [ Upstream commit 19d90ece81da802207a9b91ce95a29fbdc40626e ]
    
    This patch fixes a problem where the AR8035 PHY can't be
    detected on an Cisco Meraki MR24, if the ethernet cable is
    not connected on boot.
    
    Russell Senior provided steps to reproduce the issue:
    |Disconnect ethernet cable, apply power, wait until device has booted,
    |plug in ethernet, check for interfaces, no eth0 is listed.
    |
    |This appears to be a problem during probing of the AR8035 Phy chip.
    |When ethernet has no link, the phy detection fails, and eth0 is not
    |created. Plugging ethernet later has no effect, because there is no
    |interface as far as the kernel is concerned. The relevant part of
    |the boot log looks like this:
    |this is the failing case:
    |
    |[    0.876611] /plb/opb/emac-rgmii@ef601500: input 0 in RGMII mode
    |[    0.882532] /plb/opb/ethernet@ef600c00: reset timeout
    |[    0.888546] /plb/opb/ethernet@ef600c00: can't find PHY!
    |and the succeeding case:
    |
    |[    0.876672] /plb/opb/emac-rgmii@ef601500: input 0 in RGMII mode
    |[    0.883952] eth0: EMAC-0 /plb/opb/ethernet@ef600c00, MAC 00:01:..
    |[    0.890822] eth0: found Atheros 8035 Gigabit Ethernet PHY (0x01)
    
    Based on the comment and the commit message of
    commit 23fbb5a87c56 ("emac: Fix EMAC soft reset on 460EX/GT").
    This is because the AR8035 PHY doesn't provide the TX Clock,
    if the ethernet cable is not attached. This causes the reset
    to timeout and the PHY detection code in emac_init_phy() is
    unable to detect the AR8035 PHY. As a result, the emac driver
    bails out early and the user left with no ethernet.
    
    In order to stay compatible with existing configurations, the driver
    tries the current reset approach at first. Only if the first attempt
    timed out, it does perform one more retry with the clock temporarily
    switched to the internal source for just the duration of the reset.
    
    LEDE-Bug: #687 <https://bugs.lede-project.org/index.php?do=details&task_id=687>
    
    Cc: Chris Blake <chrisrblake93@gmail.com>
    Reported-by: Russell Senior <russell@personaltelco.net>
    Fixes: 23fbb5a87c56e98 ("emac: Fix EMAC soft reset on 460EX/GT")
    Signed-off-by: Christian Lamparter <chunkeey@googlemail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa9b09e739026bdefe4de6f7c9633558ce1656bc
Author: James Wang <jnwang@suse.com>
Date:   Thu Jun 8 14:52:51 2017 +0800

    Fix loop device flush before configure v3
    
    
    [ Upstream commit 6460495709aeb651896bc8e5c134b2e4ca7d34a8 ]
    
    While installing SLES-12 (based on v4.4), I found that the installer
    will stall for 60+ seconds during LVM disk scan.  The root cause was
    determined to be the removal of a bound device check in loop_flush()
    by commit b5dd2f6047ca ("block: loop: improve performance via blk-mq").
    
    Restoring this check, examining ->lo_state as set by loop_set_fd()
    eliminates the bad behavior.
    
    Test method:
    modprobe loop max_loop=64
    dd if=/dev/zero of=disk bs=512 count=200K
    for((i=0;i<4;i++))do losetup -f disk; done
    mkfs.ext4 -F /dev/loop0
    for((i=0;i<4;i++))do mkdir t$i; mount /dev/loop$i t$i;done
    for f in `ls /dev/loop[0-9]*|sort`; do \
            echo $f; dd if=$f of=/dev/null  bs=512 count=1; \
            done
    
    Test output:  stock          patched
    /dev/loop0    18.1217e-05    8.3842e-05
    /dev/loop1     6.1114e-05    0.000147979
    /dev/loop10    0.414701      0.000116564
    /dev/loop11    0.7474        6.7942e-05
    /dev/loop12    0.747986      8.9082e-05
    /dev/loop13    0.746532      7.4799e-05
    /dev/loop14    0.480041      9.3926e-05
    /dev/loop15    1.26453       7.2522e-05
    
    Note that from loop10 onward, the device is not mounted, yet the
    stock kernel consumes several orders of magnitude more wall time
    than it does for a mounted device.
    (Thanks for Mike Galbraith <efault@gmx.de>, give a changelog review.)
    
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: James Wang <jnwang@suse.com>
    Fixes: b5dd2f6047ca ("block: loop: improve performance via blk-mq")
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 781af39aaa9e27a841fb1bc8868fda771b56337a
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Thu Jun 8 15:20:32 2017 +0200

    MIPS: kprobes: flush_insn_slot should flush only if probe initialised
    
    
    [ Upstream commit 698b851073ddf5a894910d63ca04605e0473414e ]
    
    When ftrace is used with kprobes, it is possible for a kprobe to contain
    an invalid location (ie. only initialised to 0 and not to a specific
    location in the code). Trying to perform a cache flush on such location
    leads to a crash r4k_flush_icache_range().
    
    Fixes: c1bf207d6ee1 ("MIPS: kprobe: Add support.")
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16296/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16119beefc4ad69709d28a14ecf73920d0dcd443
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Tue Apr 11 09:00:36 2017 +0200

    MIPS: mm: adjust PKMAP location
    
    
    [ Upstream commit c56e7a4c3e77f6fbd9b55c06c14eda65aae58958 ]
    
    Space reserved for PKMap should span from PKMAP_BASE to FIXADDR_START.
    For large page sizes this is not the case as eg. for 64k pages the range
    currently defined is from 0xfe000000 to 0x102000000(!!) which obviously
    isn't right.
    Remove the hardcoded location and set the BASE address as an offset from
    FIXADDR_START.
    
    Since all PKMAP ptes have to be placed in a contiguous memory, ensure
    that this is the case by placing them all in a single page. This is
    achieved by aligning the end address to pkmap pages count pages.
    
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15950/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32e58badfe8e0cd274fbe6091b62d2a448a31134
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Tue Apr 11 09:00:34 2017 +0200

    MIPS: mm: fixed mappings: correct initialisation
    
    
    [ Upstream commit 71eb989ab5a110df8bcbb9609bacde73feacbedd ]
    
    fixrange_init operates at PMD-granularity and expects the addresses to
    be PMD-size aligned, but currently that might not be the case for
    PKMAP_BASE unless it is defined properly, so ensure a correct alignment
    is used before passing the address to fixrange_init.
    
    fixed mappings: only align the start address that is passed to
    fixrange_init rather than the value before adding the size, as we may
    end up with uninitialised upper part of the range.
    
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15948/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8dd3dfefcf5d0213e28e22ce7863d0dc17f2eb9
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue May 30 11:45:12 2017 +0200

    perf/core: Correct event creation with PERF_FORMAT_GROUP
    
    
    [ Upstream commit ba5213ae6b88fb170c4771fef6553f759c7d8cdd ]
    
    Andi was asking about PERF_FORMAT_GROUP vs inherited events, which led
    to the discovery of a bug from commit:
    
      3dab77fb1bf8 ("perf: Rework/fix the whole read vs group stuff")
    
     -       PERF_SAMPLE_GROUP                       = 1U << 4,
     +       PERF_SAMPLE_READ                        = 1U << 4,
    
     -       if (attr->inherit && (attr->sample_type & PERF_SAMPLE_GROUP))
     +       if (attr->inherit && (attr->read_format & PERF_FORMAT_GROUP))
    
    is a clear fail :/
    
    While this changes user visible behaviour; it was previously possible
    to create an inherited event with PERF_SAMPLE_READ; this is deemed
    acceptible because its results were always incorrect.
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vince@deater.net>
    Fixes:  3dab77fb1bf8 ("perf: Rework/fix the whole read vs group stuff")
    Link: http://lkml.kernel.org/r/20170530094512.dy2nljns2uq7qa3j@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aec0f7859616d2f260deefe034461077684a9a8e
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed May 31 18:50:43 2017 +0300

    e1000e: Undo e1000e_pm_freeze if __e1000_shutdown fails
    
    
    [ Upstream commit 833521ebc65b1c3092e5c0d8a97092f98eec595d ]
    
    An error during suspend (e100e_pm_suspend),
    
    [  429.994338] ACPI : EC: event blocked
    [  429.994633] e1000e: EEE TX LPI TIMER: 00000011
    [  430.955451] pci_pm_suspend(): e1000e_pm_suspend+0x0/0x30 [e1000e] returns -2
    [  430.955454] dpm_run_callback(): pci_pm_suspend+0x0/0x140 returns -2
    [  430.955458] PM: Device 0000:00:19.0 failed to suspend async: error -2
    [  430.955581] PM: Some devices failed to suspend, or early wake event detected
    [  430.957709] ACPI : EC: event unblocked
    
    lead to complete failure:
    
    [  432.585002] ------------[ cut here ]------------
    [  432.585013] WARNING: CPU: 3 PID: 8372 at kernel/irq/manage.c:1478 __free_irq+0x9f/0x280
    [  432.585015] Trying to free already-free IRQ 20
    [  432.585016] Modules linked in: cdc_ncm usbnet x86_pkg_temp_thermal intel_powerclamp coretemp mii crct10dif_pclmul crc32_pclmul ghash_clmulni_intel snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep lpc_ich snd_hda_core snd_pcm mei_me mei sdhci_pci sdhci i915 mmc_core e1000e ptp pps_core prime_numbers
    [  432.585042] CPU: 3 PID: 8372 Comm: kworker/u16:40 Tainted: G     U          4.10.0-rc8-CI-Patchwork_3870+ #1
    [  432.585044] Hardware name: LENOVO 2356GCG/2356GCG, BIOS G7ET31WW (1.13 ) 07/02/2012
    [  432.585050] Workqueue: events_unbound async_run_entry_fn
    [  432.585051] Call Trace:
    [  432.585058]  dump_stack+0x67/0x92
    [  432.585062]  __warn+0xc6/0xe0
    [  432.585065]  warn_slowpath_fmt+0x4a/0x50
    [  432.585070]  ? _raw_spin_lock_irqsave+0x49/0x60
    [  432.585072]  __free_irq+0x9f/0x280
    [  432.585075]  free_irq+0x34/0x80
    [  432.585089]  e1000_free_irq+0x65/0x70 [e1000e]
    [  432.585098]  e1000e_pm_freeze+0x7a/0xb0 [e1000e]
    [  432.585106]  e1000e_pm_suspend+0x21/0x30 [e1000e]
    [  432.585113]  pci_pm_suspend+0x71/0x140
    [  432.585118]  dpm_run_callback+0x6f/0x330
    [  432.585122]  ? pci_pm_freeze+0xe0/0xe0
    [  432.585125]  __device_suspend+0xea/0x330
    [  432.585128]  async_suspend+0x1a/0x90
    [  432.585132]  async_run_entry_fn+0x34/0x160
    [  432.585137]  process_one_work+0x1f4/0x6d0
    [  432.585140]  ? process_one_work+0x16e/0x6d0
    [  432.585143]  worker_thread+0x49/0x4a0
    [  432.585145]  kthread+0x107/0x140
    [  432.585148]  ? process_one_work+0x6d0/0x6d0
    [  432.585150]  ? kthread_create_on_node+0x40/0x40
    [  432.585154]  ret_from_fork+0x2e/0x40
    [  432.585156] ---[ end trace 6712df7f8c4b9124 ]---
    
    The unwind failures stems from commit 2800209994f8 ("e1000e: Refactor PM
    flows"), but it may be a later patch that introduced the non-recoverable
    behaviour.
    
    Fixes: 2800209994f8 ("e1000e: Refactor PM flows")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=99847
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a35e18b99ad1dfef049631045519cff826e4211
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Tue Jun 6 20:50:42 2017 +0300

    ARM: imx: Add MXC_CPU_IMX6ULL and cpu_is_imx6ull
    
    
    [ Upstream commit b3ea575770c7eeb259c77b6861cd14d00eb309df ]
    
    Support for imx6ull is already present but it's based on
    of_machine_is_compatible("fsl,imx6ull") checks. Add it to the MXC_CPU_*
    enumeration as well.
    
    This also fixes /sys/devices/soc0/soc_id reading "Unknown".
    
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87ddeaaa0b32b511b267b3584be1229b50fae1d2
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Jun 5 12:22:55 2017 +0100

    net: phy: avoid genphy_aneg_done() for PHYs without clause 22 support
    
    
    [ Upstream commit 41408ad519f7a2a1c5229e61f2a97f4df1b61adc ]
    
    Avoid calling genphy_aneg_done() for PHYs that do not implement the
    Clause 22 register set.
    
    Clause 45 PHYs may implement the Clause 22 register set along with the
    Clause 22 extension MMD.  Hence, we can't simply block access to the
    Clause 22 functions based on the PHY being a Clause 45 PHY.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70cd74ca9724497b0983df52f99d773d1cbddec9
Author: A Sun <as1033x@comcast.net>
Date:   Sun Mar 26 15:33:07 2017 -0300

    mceusb: sporadic RX truncation corruption fix
    
    
    [ Upstream commit 8e175b22e8640bf3a58e071af54190b909e4a944 ]
    
    Intermittent RX truncation and loss of IR received data. This resulted
    in receive stream synchronization errors where driver attempted to
    incorrectly parse IR data (eg 0x90 below) as command response.
    
    [ 3969.139898] mceusb 1-1.2:1.0: processed IR data
    [ 3969.151315] mceusb 1-1.2:1.0: rx data: 00 90 (length=2)
    [ 3969.151321] mceusb 1-1.2:1.0: Unknown command 0x00 0x90
    [ 3969.151336] mceusb 1-1.2:1.0: rx data: 98 0a 8d 0a 8e 0a 8e 0a 8e 0a 8e 0a 9a 0a 8e 0a 0b 3a 8e 00 80 41 59 00 00 (length=25)
    [ 3969.151341] mceusb 1-1.2:1.0: Raw IR data, 24 pulse/space samples
    [ 3969.151348] mceusb 1-1.2:1.0: Storing space with duration 500000
    
    Bug trigger appears to be normal, but heavy, IR receiver use.
    
    Signed-off-by: A Sun <as1033x@comcast.net>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40343d06f727faf9125ae61ce66fee27787abd4c
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Apr 23 10:06:36 2017 -0300

    cx25840: fix unchecked return values
    
    
    [ Upstream commit 35378ce143071c2a6bad4b59a000e9b9f8f6ea67 ]
    
    In functions cx25840_initialize(), cx231xx_initialize(), and
    cx23885_initialize(), the return value of create_singlethread_workqueue()
    is used without validation. This may result in NULL dereference and cause
    kernel crash. This patch fixes it.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 766da58378855d4216ae47cfe63517acf005af0b
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed May 3 10:28:50 2017 -0700

    e1000e: fix race condition around skb_tstamp_tx()
    
    
    [ Upstream commit 5012863b7347866764c4a4e58b62fb05346b0d06 ]
    
    The e1000e driver and related hardware has a limitation on Tx PTP
    packets which requires we limit to timestamping a single packet at once.
    We do this by verifying that we never request a new Tx timestamp while
    we still have a tx_hwtstamp_skb pointer.
    
    Unfortunately the driver suffers from a race condition around this. The
    tx_hwtstamp_skb pointer is not set to NULL until after skb_tstamp_tx()
    is called. This function notifies the stack and applications of a new
    timestamp. Even a well behaved application that only sends a new request
    when the first one is finished might be woken up and possibly send
    a packet before we can free the timestamp in the driver again. The
    result is that we needlessly ignore some Tx timestamp requests in this
    corner case.
    
    Fix this by assigning the tx_hwtstamp_skb pointer prior to calling
    skb_tstamp_tx() and use a temporary pointer to hold the timestamped skb
    until that function finishes. This ensures that the application is not
    woken up until the driver is ready to begin timestamping a new packet.
    
    This ensures that well behaved applications do not accidentally race
    with condition to skip Tx timestamps. Obviously an application which
    sends multiple Tx timestamp requests at once will still only timestamp
    one packet at a time. Unfortunately there is nothing we can do about
    this.
    
    Reported-by: David Mirabito <davidm@metamako.com>
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04e22d2e31777698ffb463740496db13c3b5aa22
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Mon Jun 5 13:59:15 2017 +0200

    tags: honor COMPILED_SOURCE with apart output directory
    
    
    [ Upstream commit cbf52a3e6a8a92beec6e0c70abf4111cd8f8faf7 ]
    
    When the kernel is compiled with an "O=" argument, the object files are
    not in the source tree, but in the build tree.
    
    This patch fixes O= build by looking for object files in the build tree.
    
    Fixes: 923e02ecf3f8 ("scripts/tags.sh: Support compiled source")
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ddfd31afc5ffbc9907ca2cbfa3cefc6fd7e0a5b
Author: Milian Wolff <milian.wolff@kdab.com>
Date:   Fri Jun 2 16:37:52 2017 +0200

    perf report: Ensure the perf DSO mapping matches what libdw sees
    
    
    [ Upstream commit 2538b9e2450ae255337c04356e9e0f8cb9ec48d9 ]
    
    In some situations the libdw unwinder stopped working properly.  I.e.
    with libunwind we see:
    
    ~~~~~
    heaptrack_gui  2228 135073.400112:     641314 cycles:
                        e8ed _dl_fixup (/usr/lib/ld-2.25.so)
                       15f06 _dl_runtime_resolve_sse_vex (/usr/lib/ld-2.25.so)
                       ed94c KDynamicJobTracker::KDynamicJobTracker (/home/milian/projects/compiled/kf5/lib64/libKF5KIOWidgets.so.5.35.0)
                       608f3 _GLOBAL__sub_I_kdynamicjobtracker.cpp (/home/milian/projects/compiled/kf5/lib64/libKF5KIOWidgets.so.5.35.0)
                        f199 call_init.part.0 (/usr/lib/ld-2.25.so)
                        f2a5 _dl_init (/usr/lib/ld-2.25.so)
                         db9 _dl_start_user (/usr/lib/ld-2.25.so)
    ~~~~~
    
    But with libdw and without this patch this sample is not properly
    unwound:
    
    ~~~~~
    heaptrack_gui  2228 135073.400112:     641314 cycles:
                        e8ed _dl_fixup (/usr/lib/ld-2.25.so)
                       15f06 _dl_runtime_resolve_sse_vex (/usr/lib/ld-2.25.so)
                       ed94c KDynamicJobTracker::KDynamicJobTracker (/home/milian/projects/compiled/kf5/lib64/libKF5KIOWidgets.so.5.35.0)
    ~~~~~
    
    Debug output showed me that libdw found a module for the last frame
    address, but it thinks it belongs to /usr/lib/ld-2.25.so. This patch
    double-checks what libdw sees and what perf knows. If the mappings
    mismatch, we now report the elf known to perf. This fixes the situation
    above, and the libdw unwinder produces the same stack as libunwind.
    
    Signed-off-by: Milian Wolff <milian.wolff@kdab.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lkml.kernel.org/r/20170602143753.16907-1-milian.wolff@kdab.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ac7e0da9be874f108b3e72762c0b494c5468e0b
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Wed May 31 21:01:03 2017 +0900

    perf header: Set proper module name when build-id event found
    
    
    [ Upstream commit 1deec1bd96ccd8beb04d2112a6d12fe20505c3a6 ]
    
    When perf processes build-id event, it creates DSOs with the build-id.
    But it didn't set the module short name (like '[module-name]') so when
    processing a kernel mmap event of the module, it cannot found the DSO as
    it only checks the short names.
    
    That leads for perf to create a same DSO without the build-id info and
    it'll lookup the system path even if the DSO is already in the build-id
    cache.  After kernel was updated, perf cannot find the DSO  and cannot
    show symbols in it anymore.
    
    You can see this if you have an old data file (w/ old kernel version):
    
      $ perf report -i perf.data.old -v |& grep scsi_mod
      build id event received for /lib/modules/3.19.2-1-ARCH/kernel/drivers/scsi/scsi_mod.ko.gz : cafe1ce6ca13a98a5d9ed3425cde249e57a27fc1
      Failed to open /lib/modules/3.19.2-1-ARCH/kernel/drivers/scsi/scsi_mod.ko.gz, continuing without symbols
      ...
    
    The second message didn't show the build-id.  With this patch:
    
      $ perf report -i perf.data.old -v |& grep scsi_mod
      build id event received for /lib/modules/3.19.2-1-ARCH/kernel/drivers/scsi/scsi_mod.ko.gz: cafe1ce6ca13a98a5d9ed3425cde249e57a27fc1
      /lib/modules/3.19.2-1-ARCH/kernel/drivers/scsi/scsi_mod.ko.gz with build id cafe1ce6ca13a98a5d9ed3425cde249e57a27fc1 not found, continuing without symbols
      ...
    
    Now it shows the build-id but still cannot load the symbol table.  This
    is a different problem which will be fixed in the next patch.
    
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: kernel-team@lge.com
    Link: http://lkml.kernel.org/r/20170531120105.21731-1-namhyung@kernel.org
    [ Fix the build on older compilers (debian <= 8, fedora <= 21, etc) wrt kmod_path var init ]
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bdfa0ecc200afa32defb2503a2fc81983bfddb2
Author: Ido Shamay <idos@mellanox.com>
Date:   Mon Jun 5 10:44:56 2017 +0300

    net/mlx4: Check if Granular QoS per VF has been enabled before updating QP qos_vport
    
    
    [ Upstream commit 269f9883fe254d109afdfc657875c456d6fabb08 ]
    
    The Granular QoS per VF feature must be enabled in FW before it can be
    used.
    
    Thus, the driver cannot modify a QP's qos_vport value (via the UPDATE_QP FW
    command) if the feature has not been enabled -- the FW returns an error if
    this is attempted.
    
    Fixes: 08068cd5683f ("net/mlx4: Added qos_vport QP configuration in VST mode")
    Signed-off-by: Ido Shamay <idos@mellanox.com>
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca3a1bc7b6360dd791348a8d1f9fc73d39d8e645
Author: Talat Batheesh <talatb@mellanox.com>
Date:   Sun Jun 4 14:30:07 2017 +0300

    net/mlx4: Fix the check in attaching steering rules
    
    
    [ Upstream commit 6dc06c08bef1c746ff8da33dab677cfbacdcad32 ]
    
    Our previous patch (cited below) introduced a regression
    for RAW Eth QPs.
    
    Fix it by checking if the QP number provided by user-space
    exists, hence allowing steering rules to be added for valid
    QPs only.
    
    Fixes: 89c557687a32 ("net/mlx4_en: Avoid adding steering rules with invalid ring")
    Reported-by: Or Gerlitz <gerlitz.or@gmail.com>
    Signed-off-by: Talat Batheesh <talatb@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Acked-by: Or Gerlitz <ogerlitz@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 466d844cc205ff3b97c202ec9fb57632080811ab
Author: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
Date:   Sun Jun 4 14:43:43 2017 +0800

    sit: reload iphdr in ipip6_rcv
    
    
    [ Upstream commit b699d0035836f6712917a41e7ae58d84359b8ff9 ]
    
    Since iptunnel_pull_header() can call pskb_may_pull(),
    we must reload any pointer that was related to skb->head.
    
    Fixes: a09a4c8dd1ec ("tunnels: Remove encapsulation offloads on decap")
    Signed-off-by: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d4f8dbb3504101ec459d8fc9e52563a4c3eacd9
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sun Jun 4 04:16:22 2017 +0200

    skbuff: return -EMSGSIZE in skb_to_sgvec to prevent overflow
    
    
    [ Upstream commit 48a1df65334b74bd7531f932cca5928932abf769 ]
    
    This is a defense-in-depth measure in response to bugs like
    4d6fa57b4dab ("macsec: avoid heap overflow in skb_to_sgvec"). There's
    not only a potential overflow of sglist items, but also a stack overflow
    potential, so we fix this by limiting the amount of recursion this function
    is allowed to do. Not actually providing a bounded base case is a future
    disaster that we can easily avoid here.
    
    As a small matter of house keeping, we take this opportunity to move the
    documentation comment over the actual function the documentation is for.
    
    While this could be implemented by using an explicit stack of skbuffs,
    when implementing this, the function complexity increased considerably,
    and I don't think such complexity and bloat is actually worth it. So,
    instead I built this and tested it on x86, x86_64, ARM, ARM64, and MIPS,
    and measured the stack usage there. I also reverted the recent MIPS
    changes that give it a separate IRQ stack, so that I could experience
    some worst-case situations. I found that limiting it to 24 layers deep
    yielded a good stack usage with room for safety, as well as being much
    deeper than any driver actually ever creates.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Sabrina Dubroca <sd@queasysnail.net>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6af9fc4273c18b0f9f85d79928b93a4e7c16e542
Author: Dmitry Monakhov <dmonakhov@openvz.org>
Date:   Wed May 10 19:20:44 2017 +0400

    bio-integrity: Do not allocate integrity context for bio w/o data
    
    
    [ Upstream commit 3116a23bb30272d74ea81baf5d0ee23f602dd15b ]
    
    If bio has no data, such as ones from blkdev_issue_flush(),
    then we have nothing to protect.
    
    This patch prevent bugon like follows:
    
    kfree_debugcheck: out of range ptr ac1fa1d106742a5ah
    kernel BUG at mm/slab.c:2773!
    invalid opcode: 0000 [#1] SMP
    Modules linked in: bcache
    CPU: 0 PID: 4428 Comm: xfs_io Tainted: G        W       4.11.0-rc4-ext4-00041-g2ef0043-dirty #43
    Hardware name: Virtuozzo KVM, BIOS seabios-1.7.5-11.vz7.4 04/01/2014
    task: ffff880137786440 task.stack: ffffc90000ba8000
    RIP: 0010:kfree_debugcheck+0x25/0x2a
    RSP: 0018:ffffc90000babde0 EFLAGS: 00010082
    RAX: 0000000000000034 RBX: ac1fa1d106742a5a RCX: 0000000000000007
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff88013f3ccb40
    RBP: ffffc90000babde8 R08: 0000000000000000 R09: 0000000000000000
    R10: 00000000fcb76420 R11: 00000000725172ed R12: 0000000000000282
    R13: ffffffff8150e766 R14: ffff88013a145e00 R15: 0000000000000001
    FS:  00007fb09384bf40(0000) GS:ffff88013f200000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fd0172f9e40 CR3: 0000000137fa9000 CR4: 00000000000006f0
    Call Trace:
     kfree+0xc8/0x1b3
     bio_integrity_free+0xc3/0x16b
     bio_free+0x25/0x66
     bio_put+0x14/0x26
     blkdev_issue_flush+0x7a/0x85
     blkdev_fsync+0x35/0x42
     vfs_fsync_range+0x8e/0x9f
     vfs_fsync+0x1c/0x1e
     do_fsync+0x31/0x4a
     SyS_fsync+0x10/0x14
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Dmitry Monakhov <dmonakhov@openvz.org>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 458a81e0680db6a0fb5a1f93f51819c6dfb183ed
Author: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
Date:   Wed May 31 22:21:03 2017 +0200

    Fix serial console on SNI RM400 machines
    
    
    [ Upstream commit e279e6d98e0cf2c2fe008b3c29042b92f0e17b1d ]
    
    sccnxp driver doesn't get the correct uart clock rate, if CONFIG_HAVE_CLOCK
    is disabled. Correct usage of clk API to make it work with/without it.
    
    Fixes: 90efa75f7ab0 (serial: sccnxp: Using CLK API for getting UART clock)
    
    Suggested-by: Russell King - ARM Linux <linux@armlinux.org.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3437da32899e61d5c4f1d200d68bcd9fe9782232
Author: Ganesh Goudar <ganeshgr@chelsio.com>
Date:   Wed May 31 19:10:21 2017 +0530

    cxgb4: fix incorrect cim_la output for T6
    
    
    [ Upstream commit a97051f4553551d13e586ab3cb6ae13093a44a81 ]
    
    take care of UpDbgLaRdPtr[0-3] restriction for T6.
    
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f973300dbd1628ebd51f2df4ed4e4d49ac365b90
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Thu May 18 11:51:51 2017 +0300

    drm/omap: fix tiled buffer stride calculations
    
    
    [ Upstream commit cc8dd7661ccc2d8dc88921da8e6cc7c2fcdb0341 ]
    
    omap_gem uses page alignment for buffer stride. The related calculations
    are a bit off, though, as byte stride of 4096 gets aligned to 8192,
    instead of 4096.
    
    This patch changes the code to use DIV_ROUND_UP(), which fixes those
    calculations and makes them more readable.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1c442743717cd98c4043b24f4d0efe0c87127ce
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Wed May 31 15:08:25 2017 +0800

    mISDN: Fix a sleep-in-atomic bug
    
    
    [ Upstream commit 93818da5eed63fbc17b64080406ea53b86b23309 ]
    
    The driver may sleep under a read spin lock, and the function call path is:
    send_socklist (acquire the lock by read_lock)
      skb_copy(GFP_KERNEL) --> may sleep
    
    To fix it, the "GFP_KERNEL" is replaced with "GFP_ATOMIC".
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819bb2c00f329088a5f9291f48aeda740b3dcec9
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Thu Jun 1 16:18:10 2017 +0800

    qlcnic: Fix a sleep-in-atomic bug in qlcnic_82xx_hw_write_wx_2M and qlcnic_82xx_hw_read_wx_2M
    
    
    [ Upstream commit 5ea6d691aac6c93b790f0905e3460d44cc4c449b ]
    
    The driver may sleep under a write spin lock, and the function
    call path is:
    qlcnic_82xx_hw_write_wx_2M (acquire the lock by write_lock_irqsave)
      crb_win_lock
        qlcnic_pcie_sem_lock
          usleep_range
    qlcnic_82xx_hw_read_wx_2M (acquire the lock by write_lock_irqsave)
      crb_win_lock
        qlcnic_pcie_sem_lock
          usleep_range
    
    To fix it, the usleep_range is replaced with udelay.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 615855388d8597e8522a5e5f972da704e470f63a
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed May 31 13:35:57 2017 +0200

    perf trace: Add mmap alias for s390
    
    
    [ Upstream commit 54265664c15a68905d8d67d19205e9a767636434 ]
    
    The s390 architecture maps sys_mmap (nr 90) into sys_old_mmap.  For this
    reason perf trace can't find the proper syscall event to get args format
    from and displays it wrongly as 'continued'.
    
    To fix that fill the "alias" field with "old_mmap" for trace's mmap record
    to get the correct translation.
    
    Before:
         0.042 ( 0.011 ms): vest/43052 fstat(statbuf: 0x3ffff89fd90                ) = 0
         0.042 ( 0.028 ms): vest/43052  ... [continued]: mmap()) = 0x3fffd6e2000
         0.072 ( 0.025 ms): vest/43052 read(buf: 0x3fffd6e2000, count: 4096        ) = 6
    
    After:
         0.045 ( 0.011 ms): fstat(statbuf: 0x3ffff8a0930                           ) = 0
         0.057 ( 0.018 ms): mmap(arg: 0x3ffff8a0858                                ) = 0x3fffd14a000
         0.076 ( 0.025 ms): read(buf: 0x3fffd14a000, count: 4096                   ) = 6
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/20170531113557.19175-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d43905a430e828afc132e61e1150d65b168b0562
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon May 29 20:26:07 2017 +1000

    powerpc/spufs: Fix coredump of SPU contexts
    
    
    [ Upstream commit 99acc9bede06bbb2662aafff51f5b9e529fa845e ]
    
    If a process dumps core while it has SPU contexts active then we have
    code to also dump information about the SPU contexts.
    
    Unfortunately it's been broken for 3 1/2 years, and we didn't notice. In
    commit 7b1f4020d0d1 ("spufs: get rid of dump_emit() wrappers") the nread
    variable was removed and rc used instead. That means when the loop exits
    successfully, rc has the number of bytes read, but it's then used as the
    return value for the function, which should return 0 on success.
    
    So fix it by setting rc = 0 before returning in the success case.
    
    Fixes: 7b1f4020d0d1 ("spufs: get rid of dump_emit() wrappers")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Jeremy Kerr <jk@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89d648f65930f2ec6b0894974189f2cf51fc2624
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Mon May 15 11:58:59 2017 +0100

    clk: Fix __set_clk_rates error print-string
    
    
    [ Upstream commit ee177c5d6369f8e5d3e4793dce501cf4431313a1 ]
    
    When failing to set a clock the printout emitted is incorrect.
    "u32 rate" is formatted as %d and should be %u whereas "unsigned long
    clk_set_rate()" is formatted as %ld and should be %lu as per
    Documentation/printk-formats.txt.
    
    Fixes: 2885c3b2a3da ("clk: Show correct information when fail to set clock rate")
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e9eed3eec5a7568bf0cc4b659743f175c422324
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu May 18 17:19:28 2017 +0100

    clk: scpi: fix return type of __scpi_dvfs_round_rate
    
    
    [ Upstream commit 7374aec95636ca39409545eba4ef5ff3125c2346 ]
    
    The frequencies above the maximum value of signed integer(i.e. 2^31 -1)
    will overflow with the current code.
    
    This patch fixes the return type of __scpi_dvfs_round_rate from 'int'
    to 'unsigned long'.
    
    Fixes: cd52c2a4b5c4 ("clk: add support for clocks provided by SCP(System Control Processor)")
    Cc: Michael Turquette <mturquette@baylibre.com>
    Cc: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8397e89f99e8f691fec92358c533c78abe3c3339
Author: Roman Pen <roman.penyaev@profitbricks.com>
Date:   Thu Jun 1 10:55:03 2017 +0200

    KVM: SVM: do not zero out segment attributes if segment is unusable or not present
    
    
    [ Upstream commit d9c1b5431d5f0e07575db785a022bce91051ac1d ]
    
    This is a fix for the problem [1], where VMCB.CPL was set to 0 and interrupt
    was taken on userspace stack.  The root cause lies in the specific AMD CPU
    behaviour which manifests itself as unusable segment attributes on SYSRET.
    The corresponding work around for the kernel is the following:
    
    61f01dd941ba ("x86_64, asm: Work around AMD SYSRET SS descriptor attribute issue")
    
    In other turn virtualization side treated unusable segment incorrectly and
    restored CPL from SS attributes, which were zeroed out few lines above.
    
    In current patch it is assured only that P bit is cleared in VMCB.save state
    and segment attributes are not zeroed out if segment is not presented or is
    unusable, therefore CPL can be safely restored from DPL field.
    
    This is only one part of the fix, since QEMU side should be fixed accordingly
    not to zero out attributes on its side.  Corresponding patch will follow.
    
    [1] Message id: CAJrWOzD6Xq==b-zYCDdFLgSRMPM-NkNuTSDFEtX=7MreT45i7Q@mail.gmail.com
    
    Signed-off-by: Roman Pen <roman.penyaev@profitbricks.com>
    Signed-off-by: Mikhail Sennikovskii <mikhail.sennikovskii@profitbricks.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim KrÄmÃ¡Å™ <rkrcmar@redhat.com>
    Cc: kvm@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2f0185fc376748981d9082df21d87c1c76c53b3
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Tue May 30 17:38:43 2017 -0500

    net: freescale: fix potential null pointer dereference
    
    
    [ Upstream commit 06d2d6431bc8d41ef5ffd8bd4b52cea9f72aed22 ]
    
    Add NULL check before dereferencing pointer _id_ in order to avoid
    a potential NULL pointer dereference.
    
    Addresses-Coverity-ID: 1397995
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35900a9e6a26261ad5f998ea5676f09faa5b7d7a
Author: NeilBrown <neilb@suse.com>
Date:   Thu May 25 17:00:32 2017 +1000

    SUNRPC: ensure correct error is reported by xs_tcp_setup_socket()
    
    
    [ Upstream commit 6ea44adce91526700535b3150f77f8639ae8c82d ]
    
    If you attempt a TCP mount from an host that is unreachable in a way
    that triggers an immediate error from kernel_connect(), that error
    does not propagate up, instead EAGAIN is reported.
    
    This results in call_connect_status receiving the wrong error.
    
    A case that it easy to demonstrate is to attempt to mount from an
    address that results in ENETUNREACH, but first deleting any default
    route.
    Without this patch, the mount.nfs process is persistently runnable
    and is hard to kill.  With this patch it exits as it should.
    
    The problem is caused by the fact that xs_tcp_force_close() eventually
    calls
          xprt_wake_pending_tasks(xprt, -EAGAIN);
    which causes an error return of -EAGAIN.  so when xs_tcp_setup_sock()
    calls
          xprt_wake_pending_tasks(xprt, status);
    the status is ignored.
    
    Fixes: 4efdd92c9211 ("SUNRPC: Remove TCP client connection reset hack")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcd5dd9083e5f78823256a86f04a007b5c537e4d
Author: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
Date:   Fri May 19 22:18:55 2017 +0530

    rtc: interface: Validate alarm-time before handling rollover
    
    
    [ Upstream commit da96aea0ed177105cb13ee83b328f6c61e061d3f ]
    
    In function __rtc_read_alarm() its possible for an alarm time-stamp to
    be invalid even after replacing missing components with current
    time-stamp. The condition 'alarm->time.tm_year < 70' will trigger this
    case and will cause the call to 'rtc_tm_to_time64(&alarm->time)'
    return a negative value for variable t_alm.
    
    While handling alarm rollover this negative t_alm (assumed to seconds
    offset from '1970-01-01 00:00:00') is converted back to rtc_time via
    rtc_time64_to_tm() which results in this error log with seemingly
    garbage values:
    
    "rtc rtc0: invalid alarm value: -2-1--1041528741
    2005511117:71582844:32"
    
    This error was generated when the rtc driver (rtc-opal in this case)
    returned an alarm time-stamp of '00-00-00 00:00:00' to indicate that
    the alarm is disabled. Though I have submitted a separate fix for the
    rtc-opal driver, this issue may potentially impact other
    existing/future rtc drivers.
    
    To fix this issue the patch validates the alarm time-stamp just after
    filling up the missing datetime components and if rtc_valid_tm() still
    reports it to be invalid then bails out of the function without
    handling the rollover.
    
    Reported-by: Steve Best <sbest@redhat.com>
    Signed-off-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 756b0f10ff34e4b8fdfbb7ba62c4c92f33ec011b
Author: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
Date:   Fri May 19 15:35:09 2017 +0530

    rtc: opal: Handle disabled TPO in opal_get_tpo_time()
    
    
    [ Upstream commit 6dc1cf6f932bb0ea4d8f5e913a0a401ecacd2f03 ]
    
    On PowerNV platform when Timed-Power-On(TPO) is disabled, read of
    stored TPO yields value with all date components set to '0' inside
    opal_get_tpo_time(). The function opal_to_tm() then converts it to an
    offset from year 1900 yielding alarm-time == "1900-00-01
    00:00:00". This causes problems with __rtc_read_alarm() that
    expecting an offset from "1970-00-01 00:00:00" and returned alarm-time
    results in a -ve value for time64_t. Which ultimately results in this
    error reported in kernel logs with a seemingly garbage value:
    
    "rtc rtc0: invalid alarm value: -2-1--1041528741
    2005511117:71582844:32"
    
    We fix this by explicitly handling the case of all alarm date-time
    components being '0' inside opal_get_tpo_time() and returning -ENOENT
    in such a case. This signals generic rtc that no alarm is set and it
    bails out from the alarm initialization flow without reporting the
    above error.
    
    Signed-off-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Reported-by: Steve Best <sbest@redhat.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2368800e4f26172a7c217fc2257d05946866e24c
Author: Arjun Vynipadath <arjun@chelsio.com>
Date:   Tue May 30 18:06:06 2017 +0530

    cxgb4: FW upgrade fixes
    
    
    [ Upstream commit 26747211486c5bc7dd014c3caab206576e00c0d0 ]
    
    Disable FW_OK flag while flashing Firmware. This will help to fix any
    potential mailbox timeouts during Firmware flash.
    
    Grab new devlog parameters after Firmware restart. When we FLASH new
    Firmware onto an adapter, the new Firmware may have the Firmware Device Log
    located at a different memory address or have a different size for it.
    
    Signed-off-by: Arjun Vynipadath <arjun@chelsio.com>
    Signed-off-by: Casey Leedom <leedom@chelsio.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17a01a6641d90e066593f90ff51be61210225e72
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon May 29 15:00:17 2017 +0200

    net/mlx5: avoid build warning for uniprocessor
    
    
    [ Upstream commit f0d7ae95fff4ab444b8433f07afc4b077ef1a285 ]
    
    Building the driver with CONFIG_SMP disabled results in a harmless
    warning:
    
    ethernet/mellanox/mlx5/core/main.c: In function 'mlx5_irq_set_affinity_hint':
    ethernet/mellanox/mlx5/core/main.c:615:6: error: unused variable 'irq' [-Werror=unused-variable]
    
    It's better to express the conditional compilation using IS_ENABLED()
    here, as that lets the compiler see what the intented use for the variable
    is, and that it can be silently discarded.
    
    Fixes: b665d98edc9a ("net/mlx5: Tolerate irq_set_affinity_hint() failures")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d259b77139684e2b655aec4db79519138976bd73
Author: Will Deacon <will@kernel.org>
Date:   Wed Apr 5 11:14:05 2017 +0100

    arm64: futex: Fix undefined behaviour with FUTEX_OP_OPARG_SHIFT usage
    
    
    [ Upstream commit 5f16a046f8e144c294ef98cd29d9458b5f8273e5 ]
    
    FUTEX_OP_OPARG_SHIFT instructs the futex code to treat the 12-bit oparg
    field as a shift value, potentially leading to a left shift value that
    is negative or with an absolute value that is significantly larger then
    the size of the type. UBSAN chokes with:
    
    ================================================================================
    UBSAN: Undefined behaviour in ./arch/arm64/include/asm/futex.h:60:13
    shift exponent -1 is negative
    CPU: 1 PID: 1449 Comm: syz-executor0 Not tainted 4.11.0-rc4-00005-g977eb52-dirty #11
    Hardware name: linux,dummy-virt (DT)
    Call trace:
    [<ffff200008094778>] dump_backtrace+0x0/0x538 arch/arm64/kernel/traps.c:73
    [<ffff200008094cd0>] show_stack+0x20/0x30 arch/arm64/kernel/traps.c:228
    [<ffff200008c194a8>] __dump_stack lib/dump_stack.c:16 [inline]
    [<ffff200008c194a8>] dump_stack+0x120/0x188 lib/dump_stack.c:52
    [<ffff200008cc24b8>] ubsan_epilogue+0x18/0x98 lib/ubsan.c:164
    [<ffff200008cc3098>] __ubsan_handle_shift_out_of_bounds+0x250/0x294 lib/ubsan.c:421
    [<ffff20000832002c>] futex_atomic_op_inuser arch/arm64/include/asm/futex.h:60 [inline]
    [<ffff20000832002c>] futex_wake_op kernel/futex.c:1489 [inline]
    [<ffff20000832002c>] do_futex+0x137c/0x1740 kernel/futex.c:3231
    [<ffff200008320504>] SYSC_futex kernel/futex.c:3281 [inline]
    [<ffff200008320504>] SyS_futex+0x114/0x268 kernel/futex.c:3249
    [<ffff200008084770>] el0_svc_naked+0x24/0x28
    ================================================================================
    syz-executor1 uses obsolete (PF_INET,SOCK_PACKET)
    sock: process `syz-executor0' is using obsolete setsockopt SO_BSDCOMPAT
    
    This patch attempts to fix some of this by:
    
      * Making encoded_op an unsigned type, so we can shift it left even if
        the top bit is set.
    
      * Casting to signed prior to shifting right when extracting oparg
        and cmparg
    
      * Consider only the bottom 5 bits of oparg when using it as a left-shift
        value.
    
    Whilst I think this catches all of the issues, I'd much prefer to remove
    this stuff, as I think it's unused and the bugs are copy-pasted between
    a bunch of architectures.
    
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 365d5376e2c42dad82625148cafa23723b4e3121
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Wed May 24 12:09:53 2017 +0530

    dmaengine: imx-sdma: Handle return value of clk_prepare_enable
    
    
    [ Upstream commit fb9caf370f4d0457789d13a1a1b110a8db846e5e ]
    
    clk_prepare_enable() can fail here and we must check its return value.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c9fe4770b1ae81e182114358184e370e1d78dd4
Author: Ivan Mikhaylov <ivan@de.ibm.com>
Date:   Fri May 19 18:47:05 2017 +0300

    powerpc/[booke|4xx]: Don't clobber TCR[WP] when setting TCR[DIE]
    
    
    [ Upstream commit 6e2f03e292ef46eed2b31b0a344a91d514f9cd81 ]
    
    Prevent a kernel panic caused by unintentionally clearing TCR watchdog
    bits. At this point in the kernel boot, the watchdog may have already
    been enabled by u-boot. The original code's attempt to write to the TCR
    register results in an inadvertent clearing of the watchdog
    configuration bits, causing the 476 to reset.
    
    Signed-off-by: Ivan Mikhaylov <ivan@de.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d88cbbe7ba0c9d75846d82e0ad6d7d82ef246e31
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon May 29 15:15:27 2017 +0200

    ovl: filter trusted xattr for non-admin
    
    
    [ Upstream commit a082c6f680da298cf075886ff032f32ccb7c5e1a ]
    
    Filesystems filter out extended attributes in the "trusted." domain for
    unprivlieged callers.
    
    Overlay calls underlying filesystem's method with elevated privs, so need
    to do the filtering in overlayfs too.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b32436defcd0a531677700b93a3174619eb3f1e8
Author: Firo Yang <firogm@gmail.com>
Date:   Fri May 26 22:37:38 2017 +0800

    hdlcdrv: Fix divide by zero in hdlcdrv_ioctl
    
    
    [ Upstream commit fb3ce90b7d7761b6f7f28f0ff5c456ef6b5229a1 ]
    
    syszkaller fuzzer triggered a divide by zero, when set calibration
    through ioctl().
    
    To fix it, test 'bitrate' if it is negative or 0, just return -EINVAL.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Firo Yang <firogm@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65bd5b002cb4b46cbc066891cd1f9eacae363157
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Dec 26 17:33:18 2017 +0000

    wl1251: check return from call to wl1251_acx_arp_ip_filter
    
    
    [ Upstream commit ac1181c60822292176ab96912208ec9f9819faf8 ]
    
    Currently the less than zero error check on ret is incorrect
    as it is checking a far earlier ret assignment rather than the
    return from the call to wl1251_acx_arp_ip_filter. Fix this by
    adding in the missing assginment.
    
    Detected by CoverityScan, CID#1164835 ("Logically dead code")
    
    Fixes: 204cc5c44fb6 ("wl1251: implement hardware ARP filtering")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abbdead1dd2b2ec7a47fc220edf45e0f4bda7845
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 6 21:18:24 2018 +0100

    ASoC: Intel: sst: Fix the return value of 'sst_send_byte_stream_mrfld()'
    
    
    [ Upstream commit eaadb1caa966a91128297b754e90b7c92b350a00 ]
    
    In some error handling paths, an error code is assiegned to 'ret'.
    However, the function always return 0.
    
    Fix it and return the error code if such an error paths is taken.
    
    Fixes: 3d9ff34622ba ("ASoC: Intel: sst: add stream operations")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a60a3a280f58dd4d25bc0f2e0a503731734fc052
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Thu Jan 4 22:31:11 2018 +0100

    gpio: label descriptors using the device name
    
    
    [ Upstream commit 24e78079bf2250874e33da2e7cfbb6db72d3caf4 ]
    
    Some GPIO lines appear named "?" in the lsgpio dump due to their
    requesting drivers not passing a reasonable label.
    
    Most typically this happens if a device tree node just defines
    gpios = <...> and not foo-gpios = <...>, the former gets named
    "foo" and the latter gets named "?".
    
    However the struct device passed in is always valid so let's
    just label the GPIO with dev_name() on the device if no proper
    label was passed.
    
    Cc: Reported-by: Jason Kridner <jkridner@beagleboard.org>
    Reported-by: Jason Kridner <jkridner@beagleboard.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a10b85649aada90807e3a53b3a5d669479196ff7
Author: Pieter \"PoroCYon\" Sluys <pcy@national.shitposting.agency>
Date:   Thu Jan 4 16:53:50 2018 +0100

    vfb: fix video mode and line_length being set when loaded
    
    
    [ Upstream commit 7b9faf5df0ac495a1a3d7cdb64921c179f9008ac ]
    
    Currently, when loading the vfb module, the newly created fbdev
    has a line_length of 0, and its video mode would be PSEUDOCOLOR
    regardless of color depth. (The former could be worked around by
    calling the FBIOPUT_VSCREENINFO ioctl with having the FBACTIVIATE_FORCE
    flag set.) This patch automatically sets the line_length correctly,
    and the video mode is derived from the bit depth now as well.
    
    Thanks to Geert Uytterhoeven for confirming the bug and helping me with
    the patch.
    
    Output of `fbset -i' before the patch:
    mode "1366x768-60"
        # D: 72.432 MHz, H: 47.403 kHz, V: 60.004 Hz
        geometry 1366 768 1366 768 32
        timings 13806 120 10 14 3 32 5
        rgba 8/0,8/8,8/16,8/24
    endmode
    
    Frame buffer device information:
        Name        : Virtual FB
        Address     : 0xffffaa1405d85000
        Size        : 4196352
        Type        : PACKED PIXELS
        Visual      : PSEUDOCOLOR
        XPanStep    : 1
        YPanStep    : 1
        YWrapStep   : 1
        LineLength  : 0                    <-- note this
        Accelerator : No
    
    After:
    mode "1366x768-60"
        # D: 72.432 MHz, H: 47.403 kHz, V: 60.004 Hz
        geometry 1366 768 1366 768 32
        timings 13806 120 10 14 3 32 5
        rgba 8/0,8/8,8/16,8/24
    endmode
    
    Frame buffer device information:
        Name        : Virtual FB
        Address     : 0xffffaa1405d85000
        Size        : 4196352
        Type        : PACKED PIXELS
        Visual      : TRUECOLOR
        XPanStep    : 1
        YPanStep    : 1
        YWrapStep   : 1
        LineLength  : 5464
        Accelerator : No
    
    Signed-off-by: "Pieter \"PoroCYon\" Sluys" <pcy@national.shitposting.agency>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    [b.zolnierkie: minor fixups]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c4c4129cc7b7d63189a9049c9ee9ba81834d2ae
Author: Chaitra P B <chaitra.basappa@broadcom.com>
Date:   Wed Dec 27 23:09:11 2017 -0800

    scsi: mpt3sas: Proper handling of set/clear of "ATA command pending" flag.
    
    
    [ Upstream commit f49d4aed1315a7b766d855f1367142e682b0cc87 ]
    
    1. In IO path, setting of "ATA command pending" flag early before device
       removal, invalid device handle etc., checks causes any new commands
       to be always returned with SAM_STAT_BUSY and when the driver removes
       the drive the SML issues SYNC Cache command and that command is
       always returned with SAM_STAT_BUSY and thus making SYNC Cache command
       to requeued.
    
    2. If the driver gets an ATA PT command for a SATA drive then the driver
       set "ATA command pending" flag in device specific data structure not
       to allow any further commands until the ATA PT command is completed.
       However, after setting the flag if the driver decides to return the
       command back to upper layers without actually issuing to the firmware
       (i.e., returns from qcmd failure return paths) then the corresponding
       flag is not cleared and this prevents the driver from sending any new
       commands to the drive.
    
    This patch fixes above two issues by setting of "ATA command pending"
    flag after checking for whether device deleted, invalid device handle,
    device busy with task management. And by setting "ATA command pending"
    flag to false in all of the qcmd failure return paths after setting the
    flag.
    
    Signed-off-by: Chaitra P B <chaitra.basappa@broadcom.com>
    Signed-off-by: Suganath Prabu S <suganath-prabu.subramani@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6294172f629ca9afe644e9ec4369a66805f73df2
Author: Rafael David Tinoco <rafael.tinoco@canonical.com>
Date:   Thu Dec 7 19:59:13 2017 -0200

    scsi: libiscsi: Allow sd_shutdown on bad transport
    
    
    [ Upstream commit d754941225a7dbc61f6dd2173fa9498049f9a7ee ]
    
    If, for any reason, userland shuts down iscsi transport interfaces
    before proper logouts - like when logging in to LUNs manually, without
    logging out on server shutdown, or when automated scripts can't
    umount/logout from logged LUNs - kernel will hang forever on its
    sd_sync_cache() logic, after issuing the SYNCHRONIZE_CACHE cmd to all
    still existent paths.
    
    PID: 1 TASK: ffff8801a69b8000 CPU: 1 COMMAND: "systemd-shutdow"
     #0 [ffff8801a69c3a30] __schedule at ffffffff8183e9ee
     #1 [ffff8801a69c3a80] schedule at ffffffff8183f0d5
     #2 [ffff8801a69c3a98] schedule_timeout at ffffffff81842199
     #3 [ffff8801a69c3b40] io_schedule_timeout at ffffffff8183e604
     #4 [ffff8801a69c3b70] wait_for_completion_io_timeout at ffffffff8183fc6c
     #5 [ffff8801a69c3bd0] blk_execute_rq at ffffffff813cfe10
     #6 [ffff8801a69c3c88] scsi_execute at ffffffff815c3fc7
     #7 [ffff8801a69c3cc8] scsi_execute_req_flags at ffffffff815c60fe
     #8 [ffff8801a69c3d30] sd_sync_cache at ffffffff815d37d7
     #9 [ffff8801a69c3da8] sd_shutdown at ffffffff815d3c3c
    
    This happens because iscsi_eh_cmd_timed_out(), the transport layer
    timeout helper, would tell the queue timeout function (scsi_times_out)
    to reset the request timer over and over, until the session state is
    back to logged in state. Unfortunately, during server shutdown, this
    might never happen again.
    
    Other option would be "not to handle" the issue in the transport
    layer. That would trigger the error handler logic, which would also need
    the session state to be logged in again.
    
    Best option, for such case, is to tell upper layers that the command was
    handled during the transport layer error handler helper, marking it as
    DID_NO_CONNECT, which will allow completion and inform about the
    problem.
    
    After the session was marked as ISCSI_STATE_FAILED, due to the first
    timeout during the server shutdown phase, all subsequent cmds will fail
    to be queued, allowing upper logic to fail faster.
    
    Signed-off-by: Rafael David Tinoco <rafael.tinoco@canonical.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a34ee45949e2d04a7172652b1a8930dd1b2f4348
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Jan 2 19:53:14 2018 +0100

    ASoC: Intel: cht_bsw_rt5645: Analog Mic support
    
    
    [ Upstream commit b70b309950418437bbd2a30afd169c4f09dee3e5 ]
    
    Various Cherry Trail boards with a rt5645 codec have an analog mic
    connected to IN2P + IN2N. The mic on this boards also needs micbias to
    be enabled, on some boards micbias1 is used and on others micbias2, so
    we enable both.
    
    This commit adds a new "Int Analog Mic" DAPM widget for this, so that we
    do not end up enabling micbias on boards with a digital mic which uses
    the already present "Int Mic" widget. Some existing UCM files already
    refer to "Int Mic" for their "Internal Analog Microphones" SectionDevice,
    but these don't work anyways since they enable the RECMIX BST1 Switch
    instead of the BST2 switch.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fba5c7a0acf466dce56548e4375965accc1a488
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Thu Dec 28 09:16:47 2017 -0500

    media: videobuf2-core: don't go out of the buffer range
    
    
    [ Upstream commit df93dc61b0d8b19a5c9db545cf3fcc24f88dfde4 ]
    
    Currently, there's no check if an invalid buffer range
    is passed. However, while testing DVB memory mapped apps,
    I got this:
    
       videobuf2_core: VB: num_buffers -2143943680, buffer 33, index -2143943647
       unable to handle kernel paging request at ffff888b773c0890
       IP: __vb2_queue_alloc+0x134/0x4e0 [videobuf2_core]
       PGD 4142c7067 P4D 4142c7067 PUD 0
       Oops: 0002 [#1] SMP
       Modules linked in: xt_CHECKSUM iptable_mangle ipt_MASQUERADE nf_nat_masquerade_ipv4 iptable_nat nf_nat_ipv4 nf_nat nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack tun bridge stp llc ebtable_filter ebtables ip6table_filter ip6_tables bluetooth rfkill ecdh_generic binfmt_misc rc_dvbsky sp2 ts2020 intel_rapl x86_pkg_temp_thermal dvb_usb_dvbsky intel_powerclamp dvb_usb_v2 coretemp m88ds3103 kvm_intel i2c_mux dvb_core snd_hda_codec_hdmi crct10dif_pclmul crc32_pclmul videobuf2_vmalloc videobuf2_memops snd_hda_intel ghash_clmulni_intel videobuf2_core snd_hda_codec rc_core mei_me intel_cstate snd_hwdep snd_hda_core videodev intel_uncore snd_pcm mei media tpm_tis tpm_tis_core intel_rapl_perf tpm snd_timer lpc_ich snd soundcore kvm irqbypass libcrc32c i915 i2c_algo_bit drm_kms_helper
       e1000e ptp drm crc32c_intel video pps_core
       CPU: 3 PID: 1776 Comm: dvbv5-zap Not tainted 4.14.0+ #78
       Hardware name:                  /NUC5i7RYB, BIOS RYBDWi35.86A.0364.2017.0511.0949 05/11/2017
       task: ffff88877c73bc80 task.stack: ffffb7c402418000
       RIP: 0010:__vb2_queue_alloc+0x134/0x4e0 [videobuf2_core]
       RSP: 0018:ffffb7c40241bc60 EFLAGS: 00010246
       RAX: 0000000080360421 RBX: 0000000000000021 RCX: 000000000000000a
       RDX: ffffb7c40241bcf4 RSI: ffff888780362c60 RDI: ffff888796d8e130
       RBP: ffffb7c40241bcc8 R08: 0000000000000316 R09: 0000000000000004
       R10: ffff888780362c00 R11: 0000000000000001 R12: 000000000002f000
       R13: ffff8887758be700 R14: 0000000000021000 R15: 0000000000000001
       FS:  00007f2849024740(0000) GS:ffff888796d80000(0000) knlGS:0000000000000000
       CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
       CR2: ffff888b773c0890 CR3: 000000043beb2005 CR4: 00000000003606e0
       Call Trace:
        vb2_core_reqbufs+0x226/0x420 [videobuf2_core]
        dvb_vb2_reqbufs+0x2d/0xc0 [dvb_core]
        dvb_dvr_do_ioctl+0x98/0x1d0 [dvb_core]
        dvb_usercopy+0x53/0x1b0 [dvb_core]
        ? dvb_demux_ioctl+0x20/0x20 [dvb_core]
        ? tty_ldisc_deref+0x16/0x20
        ? tty_write+0x1f9/0x310
        ? process_echoes+0x70/0x70
        dvb_dvr_ioctl+0x15/0x20 [dvb_core]
        do_vfs_ioctl+0xa5/0x600
        SyS_ioctl+0x79/0x90
        entry_SYSCALL_64_fastpath+0x1a/0xa5
       RIP: 0033:0x7f28486f7ea7
       RSP: 002b:00007ffc13b2db18 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
       RAX: ffffffffffffffda RBX: 000055b10fc06130 RCX: 00007f28486f7ea7
       RDX: 00007ffc13b2db48 RSI: 00000000c0086f3c RDI: 0000000000000007
       RBP: 0000000000000203 R08: 000055b10df1e02c R09: 000000000000002e
       R10: 0036b42415108357 R11: 0000000000000246 R12: 0000000000000000
       R13: 00007f2849062f60 R14: 00000000000001f1 R15: 00007ffc13b2da54
       Code: 74 0a 60 8b 0a 48 83 c0 30 48 83 c2 04 89 48 d0 89 48 d4 48 39 f0 75 eb 41 8b 42 08 83 7d d4 01 41 c7 82 ec 01 00 00 ff ff ff ff <4d> 89 94 c5 88 00 00 00 74 14 83 c3 01 41 39 dc 0f 85 f1 fe ff
       RIP: __vb2_queue_alloc+0x134/0x4e0 [videobuf2_core] RSP: ffffb7c40241bc60
       CR2: ffff888b773c0890
    
    So, add a sanity check in order to prevent going past array.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b11e68ac5c259368fb34a8ac56354cddf3cc2603
Author: Maciej Purski <m.purski@samsung.com>
Date:   Wed Nov 22 16:32:15 2017 +0100

    hwmon: (ina2xx) Make calibration register value fixed
    
    
    [ Upstream commit 5d389b125186cf254ad5b8015763ac07c151aea4 ]
    
    Calibration register is used for calculating current register in
    hardware according to datasheet:
    current = shunt_volt * calib_register / 2048 (ina 226)
    current = shunt_volt * calib_register / 4096 (ina 219)
    
    Fix calib_register value to 2048 for ina226 and 4096 for ina 219 in
    order to avoid truncation error and provide best precision allowed
    by shunt_voltage measurement. Make current scale value follow changes
    of shunt_resistor from sysfs as calib_register value is now fixed.
    
    Power_lsb value should also follow shunt_resistor changes as stated in
    datasheet:
    power_lsb = 25 * current_lsb (ina 226)
    power_lsb = 20 * current_lsb (ina 219)
    
    Signed-off-by: Maciej Purski <m.purski@samsung.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f69275de10aa4c7d5dab4855b0299d2fc68a3cc7
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Fri Dec 22 09:38:59 2017 -0800

    rds; Reset rs->rs_bound_addr in rds_add_bound() failure path
    
    
    [ Upstream commit 7ae0c649c47f1c5d2db8cee6dd75855970af1669 ]
    
    If the rds_sock is not added to the bind_hash_table, we must
    reset rs_bound_addr so that rds_remove_bound will not trip on
    this rds_sock.
    
    rds_add_bound() does a rds_sock_put() in this failure path, so
    failing to reset rs_bound_addr will result in a socket refcount
    bug, and will trigger a WARN_ON with the stack shown below when
    the application subsequently tries to close the PF_RDS socket.
    
         WARNING: CPU: 20 PID: 19499 at net/rds/af_rds.c:496 \
                    rds_sock_destruct+0x15/0x30 [rds]
           :
         __sk_destruct+0x21/0x190
         rds_remove_bound.part.13+0xb6/0x140 [rds]
         rds_release+0x71/0x120 [rds]
         sock_release+0x1a/0x70
         sock_close+0xe/0x20
         __fput+0xd5/0x210
         task_work_run+0x82/0xa0
         do_exit+0x2ce/0xb30
         ? syscall_trace_enter+0x1cc/0x2b0
         do_group_exit+0x39/0xa0
         SyS_exit_group+0x10/0x10
         do_syscall_64+0x61/0x1a0
    
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dfd6274d3f8afc723bc3e80d583607ed9b7ce44
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Dec 22 15:10:17 2017 +0100

    l2tp: fix missing print session offset info
    
    
    [ Upstream commit 820da5357572715c6235ba3b3daa2d5b43a1198f ]
    
    Report offset parameter in L2TP_CMD_SESSION_GET command if
    it has been configured by userspace
    
    Fixes: 309795f4bec ("l2tp: Add netlink control API for L2TP")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f192874afddd170e10b77353a2b5ae0f4ed19d89
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Dec 9 01:26:46 2017 +0900

    perf probe: Add warning message if there is unexpected event name
    
    
    [ Upstream commit 9f5c6d8777a2d962b0eeacb2a16f37da6bea545b ]
    
    This improve the error message so that user can know event-name error
    before writing new events to kprobe-events interface.
    
    E.g.
       ======
       #./perf probe -x /lib64/libc-2.25.so malloc_get_state*
       Internal error: "malloc_get_state@GLIBC_2" is an invalid event name.
         Error: Failed to add events.
       ======
    
    Reported-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Reviewed-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Paul Clarke <pc@us.ibm.com>
    Cc: bhargavb <bhargavaramudu@gmail.com>
    Cc: linux-rt-users@vger.kernel.org
    Link: http://lkml.kernel.org/r/151275040665.24652.5188568529237584489.stgit@devbox
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8ccbd169118b0490a6b8c70427f9b220dbe13be
Author: Yi Zeng <yizeng@asrmicro.com>
Date:   Tue Dec 26 19:22:26 2017 +0800

    thermal: power_allocator: fix one race condition issue for thermal_instances list
    
    
    [ Upstream commit a5de11d67dcd268b8d0beb73dc374de5e97f0caf ]
    
    When invoking allow_maximum_power and traverse tz->thermal_instances,
    we should grab thermal_zone_device->lock to avoid race condition. For
    example, during the system reboot, if the mali GPU device implements
    device shutdown callback and unregister GPU devfreq cooling device,
    the deleted list head may be accessed to cause panic, as the following
    log shows:
    
    [   33.551070] c3 25 (kworker/3:0) Unable to handle kernel paging request at virtual address dead000000000070
    [   33.566708] c3 25 (kworker/3:0) pgd = ffffffc0ed290000
    [   33.572071] c3 25 (kworker/3:0) [dead000000000070] *pgd=00000001ed292003, *pud=00000001ed292003, *pmd=0000000000000000
    [   33.581515] c3 25 (kworker/3:0) Internal error: Oops: 96000004 [#1] PREEMPT SMP
    [   33.599761] c3 25 (kworker/3:0) CPU: 3 PID: 25 Comm: kworker/3:0 Not tainted 4.4.35+ #912
    [   33.614137] c3 25 (kworker/3:0) Workqueue: events_freezable thermal_zone_device_check
    [   33.620245] c3 25 (kworker/3:0) task: ffffffc0f32e4200 ti: ffffffc0f32f0000 task.ti: ffffffc0f32f0000
    [   33.629466] c3 25 (kworker/3:0) PC is at power_allocator_throttle+0x7c8/0x8a4
    [   33.636609] c3 25 (kworker/3:0) LR is at power_allocator_throttle+0x808/0x8a4
    [   33.643742] c3 25 (kworker/3:0) pc : [<ffffff8008683dd0>] lr : [<ffffff8008683e10>] pstate: 20000145
    [   33.652874] c3 25 (kworker/3:0) sp : ffffffc0f32f3bb0
    [   34.468519] c3 25 (kworker/3:0) Process kworker/3:0 (pid: 25, stack limit = 0xffffffc0f32f0020)
    [   34.477220] c3 25 (kworker/3:0) Stack: (0xffffffc0f32f3bb0 to 0xffffffc0f32f4000)
    [   34.819822] c3 25 (kworker/3:0) Call trace:
    [   34.824021] c3 25 (kworker/3:0) Exception stack(0xffffffc0f32f39c0 to 0xffffffc0f32f3af0)
    [   34.924993] c3 25 (kworker/3:0) [<ffffff8008683dd0>] power_allocator_throttle+0x7c8/0x8a4
    [   34.933184] c3 25 (kworker/3:0) [<ffffff80086807f4>] handle_thermal_trip.part.25+0x70/0x224
    [   34.941545] c3 25 (kworker/3:0) [<ffffff8008680a68>] thermal_zone_device_update+0xc0/0x20c
    [   34.949818] c3 25 (kworker/3:0) [<ffffff8008680bd4>] thermal_zone_device_check+0x20/0x2c
    [   34.957924] c3 25 (kworker/3:0) [<ffffff80080b93a4>] process_one_work+0x168/0x458
    [   34.965414] c3 25 (kworker/3:0) [<ffffff80080ba068>] worker_thread+0x13c/0x4b4
    [   34.972650] c3 25 (kworker/3:0) [<ffffff80080c0a4c>] kthread+0xe8/0xfc
    [   34.979187] c3 25 (kworker/3:0) [<ffffff8008084e90>] ret_from_fork+0x10/0x40
    [   34.986244] c3 25 (kworker/3:0) Code: f9405e73 eb1302bf d102e273 54ffc460 (b9402a61)
    [   34.994339] c3 25 (kworker/3:0) ---[ end trace 32057901e3b7e1db ]---
    
    Signed-off-by: Yi Zeng <yizeng@asrmicro.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50eeba86822250c39fa9913261105573957bfb79
Author: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
Date:   Thu Nov 16 13:15:26 2017 +0100

    ARM: dts: ls1021a: add "fsl,ls1021a-esdhc" compatible string to esdhc node
    
    
    [ Upstream commit d5c7b4d5ac2237a6da7ced3adfe6b8bf769f8cc6 ]
    
    Commit a22950c888e3 (mmc: sdhci-of-esdhc: add quirk
    SDHCI_QUIRK_BROKEN_TIMEOUT_VAL for ls1021a) added logic to the driver to
    enable the broken timeout val quirk for ls1021a, but did not add the
    corresponding compatible string to the device tree, so it didn't really
    have any effect. Fix that.
    
    Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b3e13e2444a2602a30a3d3a09c793c26aa124b0
Author: linzhang <xiaolou4617@gmail.com>
Date:   Thu May 25 14:07:18 2017 +0800

    net: llc: add lock_sock in llc_ui_bind to avoid a race condition
    
    
    [ Upstream commit 0908cf4dfef35fc6ac12329007052ebe93ff1081 ]
    
    There is a race condition in llc_ui_bind if two or more processes/threads
    try to bind a same socket.
    
    If more processes/threads bind a same socket success that will lead to
    two problems, one is this action is not what we expected, another is
    will lead to kernel in unstable status or oops(in my simple test case,
    cause llc2.ko can't unload).
    
    The current code is test SOCK_ZAPPED bit to avoid a process to
    bind a same socket twice but that is can't avoid more processes/threads
    try to bind a same socket at the same time.
    
    So, add lock_sock in llc_ui_bind like others, such as llc_ui_connect.
    
    Signed-off-by: Lin Zhang <xiaolou4617@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2967094c22ee46a5c7e316cdd4e6f1556c06ef99
Author: Jan H. Schönherr <jschoenh@amazon.de>
Date:   Sat May 20 13:22:56 2017 +0200

    KVM: nVMX: Fix handling of lmsw instruction
    
    
    [ Upstream commit e1d39b17e044e8ae819827810d87d809ba5f58c0 ]
    
    The decision whether or not to exit from L2 to L1 on an lmsw instruction is
    based on bogus values: instead of using the information encoded within the
    exit qualification, it uses the data also used for the mov-to-cr
    instruction, which boils down to using whatever is in %eax at that point.
    
    Use the correct values instead.
    
    Without this fix, an L1 may not get notified when a 32-bit Linux L2
    switches its secondary CPUs to protected mode; the L1 is only notified on
    the next modification of CR0. This short time window poses a problem, when
    there is some other reason to exit to L1 in between. Then, L2 will be
    resumed in real mode and chaos ensues.
    
    Signed-off-by: Jan H. Schönherr <jschoenh@amazon.de>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e1aa8a09b52b1bf72cc7efaa8cd8ad80cc60d6c
Author: Nithin Sujir <nsujir@tintri.com>
Date:   Wed May 24 19:45:17 2017 -0700

    bonding: Don't update slave->link until ready to commit
    
    
    [ Upstream commit 797a93647a48d6cb8a20641a86a71713a947f786 ]
    
    In the loadbalance arp monitoring scheme, when a slave link change is
    detected, the slave->link is immediately updated and slave_state_changed
    is set. Later down the function, the rtnl_lock is acquired and the
    changes are committed, updating the bond link state.
    
    However, the acquisition of the rtnl_lock can fail. The next time the
    monitor runs, since slave->link is already updated, it determines that
    link is unchanged. This results in the bond link state permanently out
    of sync with the slave link.
    
    This patch modifies bond_loadbalance_arp_mon() to handle link changes
    identical to bond_ab_arp_{inspect/commit}(). The new link state is
    maintained in slave->new_link until we're ready to commit at which point
    it's copied into slave->link.
    
    NOTE: miimon_{inspect/commit}() has a more complex state machine
    requiring the use of the bond_{propose,commit}_link_state() functions
    which maintains the intermediate state in slave->link_new_state. The arp
    monitors don't require that.
    
    Testing: This bug is very easy to reproduce with the following steps.
    1. In a loop, toggle a slave link of a bond slave interface.
    2. In a separate loop, do ifconfig up/down of an unrelated interface to
    create contention for rtnl_lock.
    Within a few iterations, the bond link goes out of sync with the slave
    link.
    
    Signed-off-by: Nithin Nayak Sujir <nsujir@tintri.com>
    Cc: Mahesh Bandewar <maheshb@google.com>
    Cc: Jay Vosburgh <jay.vosburgh@canonical.com>
    Acked-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12e0201eb2e7a0aff5cb41c65d21382655619c72
Author: KT Liao <kt.liao@emc.com.tw>
Date:   Thu May 25 10:06:21 2017 -0700

    Input: elan_i2c - clear INT before resetting controller
    
    
    [ Upstream commit 4b3c7dbbfff0673e8a89575414b864d8b001d3bb ]
    
    Some old touchpad FWs need to have interrupt cleared before issuing reset
    command after updating firmware. We clear interrupt by attempting to read
    full report from the controller, and discarding any data read.
    
    Signed-off-by: KT Liao <kt.liao@emc.com.tw>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78aa52dab5174f36696e2024cc08088d83756119
Author: Roman Kapl <roman.kapl@sysgo.com>
Date:   Wed May 24 10:22:22 2017 +0200

    net: move somaxconn init from sysctl code
    
    
    [ Upstream commit 7c3f1875c66fbc19762760097cabc91849ea0bbb ]
    
    The default value for somaxconn is set in sysctl_core_net_init(), but this
    function is not called when kernel is configured without CONFIG_SYSCTL.
    
    This results in the kernel not being able to accept TCP connections,
    because the backlog has zero size. Usually, the user ends up with:
    "TCP: request_sock_TCP: Possible SYN flooding on port 7. Dropping request.  Check SNMP counters."
    If SYN cookies are not enabled the connection is rejected.
    
    Before ef547f2ac16 (tcp: remove max_qlen_log), the effects were less
    severe, because the backlog was always at least eight slots long.
    
    Signed-off-by: Roman Kapl <roman.kapl@sysgo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87d96d1ba2f1adbd9ec3bdd20c3ed44fca64d53f
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue May 23 15:24:46 2017 -0700

    tcp: better validation of received ack sequences
    
    
    [ Upstream commit d0e1a1b5a833b625c93d3d49847609350ebd79db ]
    
    Paul Fiterau Brostean reported :
    
    <quote>
    Linux TCP stack we analyze exhibits behavior that seems odd to me.
    The scenario is as follows (all packets have empty payloads, no window
    scaling, rcv/snd window size should not be a factor):
    
           TEST HARNESS (CLIENT)                        LINUX SERVER
    
       1.  -                                          LISTEN (server listen,
    then accepts)
    
       2.  - --> <SEQ=100><CTL=SYN>               --> SYN-RECEIVED
    
       3.  - <-- <SEQ=300><ACK=101><CTL=SYN,ACK>  <-- SYN-RECEIVED
    
       4.  - --> <SEQ=101><ACK=301><CTL=ACK>      --> ESTABLISHED
    
       5.  - <-- <SEQ=301><ACK=101><CTL=FIN,ACK>  <-- FIN WAIT-1 (server
    opts to close the data connection calling "close" on the connection
    socket)
    
       6.  - --> <SEQ=101><ACK=99999><CTL=FIN,ACK> --> CLOSING (client sends
    FIN,ACK with not yet sent acknowledgement number)
    
       7.  - <-- <SEQ=302><ACK=102><CTL=ACK>      <-- CLOSING (ACK is 102
    instead of 101, why?)
    
    ... (silence from CLIENT)
    
       8.  - <-- <SEQ=301><ACK=102><CTL=FIN,ACK>  <-- CLOSING
    (retransmission, again ACK is 102)
    
    Now, note that packet 6 while having the expected sequence number,
    acknowledges something that wasn't sent by the server. So I would
    expect
    the packet to maybe prompt an ACK response from the server, and then be
    ignored. Yet it is not ignored and actually leads to an increase of the
    acknowledgement number in the server's retransmission of the FIN,ACK
    packet. The explanation I found is that the FIN  in packet 6 was
    processed, despite the acknowledgement number being unacceptable.
    Further experiments indeed show that the server processes this FIN,
    transitioning to CLOSING, then on receiving an ACK for the FIN it had
    send in packet 5, the server (or better said connection) transitions
    from CLOSING to TIME_WAIT (as signaled by netstat).
    
    </quote>
    
    Indeed, tcp_rcv_state_process() calls tcp_ack() but
    does not exploit the @acceptable status but for TCP_SYN_RECV
    state.
    
    What we want here is to send a challenge ACK, if not in TCP_SYN_RECV
    state. TCP_FIN_WAIT1 state is not the only state we should fix.
    
    Add a FLAG_NO_CHALLENGE_ACK so that tcp_rcv_state_process()
    can choose to send a challenge ACK and discard the packet instead
    of wrongly change socket state.
    
    With help from Neal Cardwell.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Paul Fiterau Brostean <p.fiterau-brostean@science.ru.nl>
    Cc: Neal Cardwell <ncardwell@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8857ead4938172a6775dacbc4addad45304f55c
Author: Eryu Guan <eguan@redhat.com>
Date:   Wed May 24 18:02:20 2017 -0400

    ext4: fix off-by-one on max nr_pages in ext4_find_unwritten_pgoff()
    
    
    [ Upstream commit 624327f8794704c5066b11a52f9da6a09dce7f9a ]
    
    ext4_find_unwritten_pgoff() is used to search for offset of hole or
    data in page range [index, end] (both inclusive), and the max number
    of pages to search should be at least one, if end == index.
    Otherwise the only page is missed and no hole or data is found,
    which is not correct.
    
    When block size is smaller than page size, this can be demonstrated
    by preallocating a file with size smaller than page size and writing
    data to the last block. E.g. run this xfs_io command on a 1k block
    size ext4 on x86_64 host.
    
      # xfs_io -fc "falloc 0 3k" -c "pwrite 2k 1k" \
                -c "seek -d 0" /mnt/ext4/testfile
      wrote 1024/1024 bytes at offset 2048
      1 KiB, 1 ops; 0.0000 sec (42.459 MiB/sec and 43478.2609 ops/sec)
      Whence  Result
      DATA    EOF
    
    Data at offset 2k was missed, and lseek(2) returned ENXIO.
    
    This is unconvered by generic/285 subtest 07 and 08 on ppc64 host,
    where pagesize is 64k. Because a recent change to generic/285
    reduced the preallocated file size to smaller than 64k.
    
    Signed-off-by: Eryu Guan <eguan@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e520c43132c0518df5d1ac947fa0ba48ab392852
Author: Michael Schmitz <schmitzmic@gmail.com>
Date:   Sun Apr 30 19:49:21 2017 +1200

    fix race in drivers/char/random.c:get_reg()
    
    
    [ Upstream commit 9dfa7bba35ac08a63565d58c454dccb7e1bb0a08 ]
    
    get_reg() can be reentered on architectures with prioritized interrupts
    (m68k in this case), causing f->reg_index to be incremented after the
    range check. Out of bounds memory access past the pt_regs struct results.
    This will go mostly undetected unless access is beyond end of memory.
    
    Prevent the race by disabling interrupts in get_reg().
    
    Tested on m68k (Atari Falcon, and ARAnyM emulator).
    
    Kudos to Geert Uytterhoeven for helping to trace this race.
    
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a051639c498ad0f6e52db7e09230da866fa9cb0
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Wed May 24 14:09:44 2017 +0200

    scsi: bnx2fc: fix race condition in bnx2fc_get_host_stats()
    
    
    [ Upstream commit c2dd893a3b0772d1c680e109b9d5715d7f73022b ]
    
    If multiple tasks attempt to read the stats, it may happen that the
    start_req_done completion is re-initialized while still being used by
    another task, causing a list corruption.
    
    This patch fixes the bug by adding a mutex to serialize the calls to
    bnx2fc_get_host_stats().
    
    WARNING: at lib/list_debug.c:48 list_del+0x6e/0xa0() (Not tainted)
    Hardware name: PowerEdge R820
    list_del corruption. prev->next should be ffff882035627d90, but was ffff884069541588
    
    Pid: 40267, comm: perl Not tainted 2.6.32-642.3.1.el6.x86_64 #1
    Call Trace:
     [<ffffffff8107c691>] ? warn_slowpath_common+0x91/0xe0
     [<ffffffff8107c796>] ? warn_slowpath_fmt+0x46/0x60
     [<ffffffff812ad16e>] ? list_del+0x6e/0xa0
     [<ffffffff81547eed>] ? wait_for_common+0x14d/0x180
     [<ffffffff8106c4a0>] ? default_wake_function+0x0/0x20
     [<ffffffff81547fd3>] ? wait_for_completion_timeout+0x13/0x20
     [<ffffffffa05410b1>] ? bnx2fc_get_host_stats+0xa1/0x280 [bnx2fc]
     [<ffffffffa04cf630>] ? fc_stat_show+0x90/0xc0 [scsi_transport_fc]
     [<ffffffffa04cf8b6>] ? show_fcstat_tx_frames+0x16/0x20 [scsi_transport_fc]
     [<ffffffff8137c647>] ? dev_attr_show+0x27/0x50
     [<ffffffff8113b9be>] ? __get_free_pages+0xe/0x50
     [<ffffffff812170e1>] ? sysfs_read_file+0x111/0x200
     [<ffffffff8119a305>] ? vfs_read+0xb5/0x1a0
     [<ffffffff8119b0b6>] ? fget_light_pos+0x16/0x50
     [<ffffffff8119a651>] ? sys_read+0x51/0xb0
     [<ffffffff810ee1fe>] ? __audit_syscall_exit+0x25e/0x290
     [<ffffffff8100b0d2>] ? system_call_fastpath+0x16/0x1b
    
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Acked-by: Chad Dupuis <chad.dupuis@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e019b423a63defc0c86582683c1e56904c5d4c63
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed May 24 01:17:10 2017 +0000

    ASoC: rsnd: SSI PIO adjust to 24bit mode
    
    
    [ Upstream commit 7819a942de7b993771bd9377babc80485fe7606b ]
    
    commit 90431eb49bff ("ASoC: rsnd: don't use PDTA bit for 24bit on SSI")
    fixups 24bit mode data alignment, but PIO was not cared.
    This patch fixes PIO mode 24bit data alignment
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f3e50a54b188798cf07916ea5eb28c98a89f8c7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat May 20 00:31:12 2017 +0300

    pNFS/flexfiles: missing error code in ff_layout_alloc_lseg()
    
    
    [ Upstream commit 662f9a105b4322b8559d448f86110e6ec24b8738 ]
    
    If xdr_inline_decode() fails then we end up returning ERR_PTR(0).  The
    caller treats NULL returns as -ENOMEM so it doesn't really hurt runtime,
    but obviously we intended to set an error code here.
    
    Fixes: d67ae825a59d ("pnfs/flexfiles: Add the FlexFile Layout Driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2847cd27cce54658d1fead0a90544f0681726dea
Author: Liping Zhang <zlpnobody@gmail.com>
Date:   Sun May 21 07:22:49 2017 +0800

    netfilter: ctnetlink: fix incorrect nf_ct_put during hash resize
    
    
    [ Upstream commit fefa92679dbe0c613e62b6c27235dcfbe9640ad1 ]
    
    If nf_conntrack_htable_size was adjusted by the user during the ct
    dump operation, we may invoke nf_ct_put twice for the same ct, i.e.
    the "last" ct. This will cause the ct will be freed but still linked
    in hash buckets.
    
    It's very easy to reproduce the problem by the following commands:
      # while : ; do
      echo $RANDOM > /proc/sys/net/netfilter/nf_conntrack_buckets
      done
      # while : ; do
      conntrack -L
      done
      # iperf -s 127.0.0.1 &
      # iperf -c 127.0.0.1 -P 60 -t 36000
    
    After a while, the system will hang like this:
      NMI watchdog: BUG: soft lockup - CPU#1 stuck for 22s! [bash:20184]
      NMI watchdog: BUG: soft lockup - CPU#0 stuck for 22s! [iperf:20382]
      ...
    
    So at last if we find cb->args[1] is equal to "last", this means hash
    resize happened, then we can set cb->args[1] to 0 to fix the above
    issue.
    
    Fixes: d205dc40798d ("[NETFILTER]: ctnetlink: fix deadlock in table dumping")
    Signed-off-by: Liping Zhang <zlpnobody@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23ae585a2f0b6a7cba25dbeeaecd094d1d5552f5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 23 17:25:10 2017 +0300

    libceph: NULL deref on crush_decode() error path
    
    
    [ Upstream commit 293dffaad8d500e1a5336eeb90d544cf40d4fbd8 ]
    
    If there is not enough space then ceph_decode_32_safe() does a goto bad.
    We need to return an error code in that situation.  The current code
    returns ERR_PTR(0) which is NULL.  The callers are not expecting that
    and it results in a NULL dereference.
    
    Fixes: f24e9980eb86 ("ceph: OSD client")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f277940b15eaf529f3a9a8c770044feb19cfd6d2
Author: Lin Zhang <xiaolou4617@gmail.com>
Date:   Tue May 23 13:29:39 2017 +0800

    net: ieee802154: fix net_device reference release too early
    
    
    [ Upstream commit a611c58b3d42a92e6b23423e166dd17c0c7fffce ]
    
    This patch fixes the kernel oops when release net_device reference in
    advance. In function raw_sendmsg(i think the dgram_sendmsg has the same
    problem), there is a race condition between dev_put and dev_queue_xmit
    when the device is gong that maybe lead to dev_queue_ximt to see
    an illegal net_device pointer.
    
    My test kernel is 3.13.0-32 and because i am not have a real 802154
    device, so i change lowpan_newlink function to this:
    
            /* find and hold real wpan device */
            real_dev = dev_get_by_index(src_net, nla_get_u32(tb[IFLA_LINK]));
            if (!real_dev)
                    return -ENODEV;
    //      if (real_dev->type != ARPHRD_IEEE802154) {
    //              dev_put(real_dev);
    //              return -EINVAL;
    //      }
            lowpan_dev_info(dev)->real_dev = real_dev;
            lowpan_dev_info(dev)->fragment_tag = 0;
            mutex_init(&lowpan_dev_info(dev)->dev_list_mtx);
    
    Also, in order to simulate preempt, i change the raw_sendmsg function
    to this:
    
            skb->dev = dev;
            skb->sk  = sk;
            skb->protocol = htons(ETH_P_IEEE802154);
            dev_put(dev);
            //simulate preempt
            schedule_timeout_uninterruptible(30 * HZ);
            err = dev_queue_xmit(skb);
            if (err > 0)
                    err = net_xmit_errno(err);
    
    and this is my userspace test code named test_send_data:
    
    int main(int argc, char **argv)
    {
            char buf[127];
            int sockfd;
            sockfd = socket(AF_IEEE802154, SOCK_RAW, 0);
            if (sockfd < 0) {
                    printf("create sockfd error: %s\n", strerror(errno));
                    return -1;
            }
            send(sockfd, buf, sizeof(buf), 0);
            return 0;
    }
    
    This is my test case:
    
    root@zhanglin-x-computer:~/develop/802154# uname -a
    Linux zhanglin-x-computer 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15
    03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
    root@zhanglin-x-computer:~/develop/802154# ip link add link eth0 name
    lowpan0 type lowpan
    root@zhanglin-x-computer:~/develop/802154#
    //keep the lowpan0 device down
    root@zhanglin-x-computer:~/develop/802154# ./test_send_data &
    //wait a while
    root@zhanglin-x-computer:~/develop/802154# ip link del link dev lowpan0
    //the device is gone
    //oops
    [381.303307] general protection fault: 0000 [#1]SMP
    [381.303407] Modules linked in: af_802154 6lowpan bnep rfcomm
    bluetooth nls_iso8859_1 snd_hda_codec_hdmi snd_hda_codec_realtek
    rts5139(C) snd_hda_intel
    snd_had_codec snd_hwdep snd_pcm snd_page_alloc snd_seq_midi
    snd_seq_midi_event snd_rawmidi snd_req intel_rapl snd_seq_device
    coretemp i915 kvm_intel
    kvm snd_timer snd crct10dif_pclmul crc32_pclmul ghash_clmulni_intel
    cypted drm_kms_helper drm i2c_algo_bit soundcore video mac_hid
    parport_pc ppdev ip parport hid_generic
    usbhid hid ahci r8169 mii libahdi
    [381.304286] CPU:1 PID: 2524 Commm: 1 Tainted: G C 0 3.13.0-32-generic
    [381.304409] Hardware name: Haier Haier DT Computer/Haier DT Codputer,
    BIOS FIBT19H02_X64 06/09/2014
    [381.304546] tasks: ffff000096965fc0 ti: ffffB0013779c000 task.ti:
    ffffB8013779c000
    [381.304659] RIP: 0010:[<ffffffff01621fe1>] [<ffffffff81621fe1>]
    __dev_queue_ximt+0x61/0x500
    [381.304798] RSP: 0018:ffffB8013779dca0 EFLAGS: 00010202
    [381.304880] RAX: 272b031d57565351 RBX: 0000000000000000 RCX: ffff8800968f1a00
    [381.304987] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff8800968f1a00
    [381.305095] RBP: ffff8e013773dce0 R08: 0000000000000266 R09: 0000000000000004
    [381.305202] R10: 0000000000000004 R11: 0000000000000005 R12: ffff88013902e000
    [381.305310] R13: 000000000000007f R14: 000000000000007f R15: ffff8800968f1a00
    [381.305418] FS:  00007fc57f50f740(0000) GS: ffff88013fc80000(0000)
    knlGS: 0000000000000000
    [381.305540] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [381.305627] CR2: 00007fad0841c000 CR3: 00000001368dd000 CR4: 00000000001007e0
    [361.905734] Stack:
    [381.305768]  00000000002052d0 000000003facb30a ffff88013779dcc0
    ffff880137764000
    [381.305898]  ffff88013779de70 000000000000007f 000000000000007f
    ffff88013902e000
    [381.306026]  ffff88013779dcf0 ffffffff81622490 ffff88013779dd39
    ffffffffa03af9f1
    [381.306155] Call Trace:
    [381.306202]  [<ffffffff81622490>] dev_queue_xmit+0x10/0x20
    [381.306294]  [<ffffffffa03af9f1>] raw_sendmsg+0x1b1/0x270 [af_802154]
    [381.306396]  [<ffffffffa03af054>] ieee802154_sock_sendmsg+0x14/0x20 [af_802154]
    [381.306512]  [<ffffffff816079eb>] sock_sendmsg+0x8b/0xc0
    [381.306600]  [<ffffffff811d52a5>] ? __d_alloc+0x25/0x180
    [381.306687]  [<ffffffff811a1f56>] ? kmem_cache_alloc_trace+0x1c6/0x1f0
    [381.306791]  [<ffffffff81607b91>] SYSC_sendto+0x121/0x1c0
    [381.306878]  [<ffffffff8109ddf4>] ? vtime_account_user+x54/0x60
    [381.306975]  [<ffffffff81020d45>] ? syscall_trace_enter+0x145/0x250
    [381.307073]  [<ffffffff816086ae>] SyS_sendto+0xe/0x10
    [381.307156]  [<ffffffff8172c87f>] tracesys+0xe1/0xe6
    [381.307233] Code: c6 a1 a4 ff 41 8b 57 78 49 8b 47 20 85 d2 48 8b 80
    78 07 00 00 75 21 49 8b 57 18 48 85 d2 74 18 48 85 c0 74 13 8b 92 ac
    01 00 00 <3b> 50 10 73 08 8b 44 90 14 41 89 47 78 41 f6 84 24 d5 00 00
    00
    [381.307801] RIP [<ffffffff81621fe1>] _dev_queue_xmit+0x61/0x500
    [381.307901]  RSP <ffff88013779dca0>
    [381.347512] Kernel panic - not syncing: Fatal exception in interrupt
    [381.347747] drm_kms_helper: panic occurred, switching back to text console
    
    In my opinion, there is always exist a chance that the device is gong
    before call dev_queue_xmit.
    
    I think the latest kernel is have the same problem and that
    dev_put should be behind of the dev_queue_xmit.
    
    Signed-off-by: Lin Zhang <xiaolou4617@gmail.com>
    Acked-by: Stefan Schmidt <stefan@osg.samsung.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b23f1c33a2082b1e54fe6b2d0189c1afd2c9875f
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Mon May 22 20:13:07 2017 +0200

    mlx5: fix bug reading rss_hash_type from CQE
    
    
    [ Upstream commit 12e8b570e732eaa5eae3a2895ba3fbcf91bde2b4 ]
    
    Masks for extracting part of the Completion Queue Entry (CQE)
    field rss_hash_type was swapped, namely CQE_RSS_HTYPE_IP and
    CQE_RSS_HTYPE_L4.
    
    The bug resulted in setting skb->l4_hash, even-though the
    rss_hash_type indicated that hash was NOT computed over the
    L4 (UDP or TCP) part of the packet.
    
    Added comments from the datasheet, to make it more clear what
    these masks are selecting.
    
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddec2acd13e4a32109bddcd5fa41a98ddeb3fe3d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 23 17:28:36 2017 +0300

    block: fix an error code in add_partition()
    
    
    [ Upstream commit 7bd897cfce1eb373892d35d7f73201b0f9b221c4 ]
    
    We don't set an error code on this path.  It means that we return NULL
    instead of an error pointer and the caller does a NULL dereference.
    
    Fixes: 6d1d8050b4bc ("block, partition: add partition_meta_info to hd_struct")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60c26da547da81cfe9ea1e7d65d514cc89deb82e
Author: Stephen Smalley <sds@tycho.nsa.gov>
Date:   Fri May 12 12:41:24 2017 -0400

    selinux: do not check open permission on sockets
    
    
    [ Upstream commit ccb544781d34afdb73a9a73ae53035d824d193bf ]
    
    open permission is currently only defined for files in the kernel
    (COMMON_FILE_PERMS rather than COMMON_FILE_SOCK_PERMS). Construction of
    an artificial test case that tries to open a socket via /proc/pid/fd will
    generate a recvfrom avc denial because recvfrom and open happen to map to
    the same permission bit in socket vs file classes.
    
    open of a socket via /proc/pid/fd is not supported by the kernel regardless
    and will ultimately return ENXIO. But we hit the permission check first and
    can thus produce these odd/misleading denials.  Omit the open check when
    operating on a socket.
    
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f58c2e97cf347121220f9c0a12eb910196e50eb
Author: Tariq Toukan <tariqt@mellanox.com>
Date:   Thu May 18 13:34:43 2017 +0300

    net/mlx5: Tolerate irq_set_affinity_hint() failures
    
    
    [ Upstream commit b665d98edc9ab295169be2fc5bb4e89a46de0a1a ]
    
    Add tolerance to failures of irq_set_affinity_hint().
    Its role is to give hints that optimizes performance,
    and should not block the driver load.
    
    In non-SMP systems, functionality is not available as
    there is a single core, and all these calls definitely
    fail.  Hence, do not call the function and avoid the
    warning prints.
    
    Fixes: db058a186f98 ("net/mlx5_core: Set irq affinity hints")
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Cc: kernel-team@fb.com
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5367b8982446d191d60e57f1335726958c6242f
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Mon May 15 15:13:16 2017 +0200

    sched/numa: Use down_read_trylock() for the mmap_sem
    
    
    [ Upstream commit 8655d5497735b288f8a9b458bd22e7d1bf95bb61 ]
    
    A customer has reported a soft-lockup when running an intensive
    memory stress test, where the trace on multiple CPU's looks like this:
    
     RIP: 0010:[<ffffffff810c53fe>]
      [<ffffffff810c53fe>] native_queued_spin_lock_slowpath+0x10e/0x190
    ...
     Call Trace:
      [<ffffffff81182d07>] queued_spin_lock_slowpath+0x7/0xa
      [<ffffffff811bc331>] change_protection_range+0x3b1/0x930
      [<ffffffff811d4be8>] change_prot_numa+0x18/0x30
      [<ffffffff810adefe>] task_numa_work+0x1fe/0x310
      [<ffffffff81098322>] task_work_run+0x72/0x90
    
    Further investigation showed that the lock contention here is pmd_lock().
    
    The task_numa_work() function makes sure that only one thread is let to perform
    the work in a single scan period (via cmpxchg), but if there's a thread with
    mmap_sem locked for writing for several periods, multiple threads in
    task_numa_work() can build up a convoy waiting for mmap_sem for read and then
    all get unblocked at once.
    
    This patch changes the down_read() to the trylock version, which prevents the
    build up. For a workload experiencing mmap_sem contention, it's probably better
    to postpone the NUMA balancing work anyway. This seems to have fixed the soft
    lockups involving pmd_lock(), which is in line with the convoy theory.
    
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Rik van Riel <riel@redhat.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170515131316.21909-1-vbabka@suse.cz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7147749b69ffe8b87f53104f770c796d437780b
Author: Tin Huynh <tnhuynh@apm.com>
Date:   Mon May 22 16:19:20 2017 +0700

    leds: pca955x: Correct I2C Functionality
    
    
    [ Upstream commit aace34c0bb8ea3c8bdcec865b6a4be4db0a68e33 ]
    
    The driver checks an incorrect flag of functionality of adapter.
    When a driver requires i2c_smbus_read_byte_data and
    i2c_smbus_write_byte_data, it should check I2C_FUNC_SMBUS_BYTE_DATA
    instead I2C_FUNC_I2C.
    This patch fixes the problem.
    
    Signed-off-by: Tin Huynh <tnhuynh@apm.com>
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26c8b9a5fd541b146c696b5354d966a86fd7fdac
Author: Kees Cook <keescook@chromium.org>
Date:   Fri May 5 15:38:41 2017 -0700

    ray_cs: Avoid reading past end of buffer
    
    
    [ Upstream commit e48d661eb13f2f83861428f001c567fdb3f317e8 ]
    
    Using memcpy() from a buffer that is shorter than the length copied means
    the destination buffer is being filled with arbitrary data from the kernel
    rodata segment. In this case, the source was made longer, since it did not
    match the destination structure size. Additionally removes a needless cast.
    
    This was found with the future CONFIG_FORTIFY_SOURCE feature.
    
    Cc: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 121ed59565ed80023f7efbd49459eb1501b416b1
Author: Suman Anna <s-anna@ti.com>
Date:   Tue May 16 17:13:45 2017 -0500

    ARM: davinci: da8xx: Create DSP device only when assigned memory
    
    
    [ Upstream commit f97f03578b997a8ec2b9bc4928f958a865137268 ]
    
    The DSP device on Davinci platforms does not have an MMU and requires
    specific DDR memory to boot. This memory is reserved using the rproc_mem
    kernel boot parameter and is assigned to the device on non-DT boots.
    The remoteproc core uses the DMA API and so will fall back to assigning
    random memory if this memory is not assigned to the device, but the DSP
    remote processor boot will not be successful in such cases. So, check
    that memory has been reserved and assigned to the device specifically
    before even creating the DSP device.
    
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0850cb7b028b6b57ca72843ff7d4ad6d7858c068
Author: Guoqing Jiang <gqjiang@suse.com>
Date:   Tue May 16 14:01:25 2017 +0800

    md-cluster: fix potential lock issue in add_new_disk
    
    
    [ Upstream commit 2dffdc0724004f38f5e39907747b53e4b0d80e59 ]
    
    The add_new_disk returns with communication locked if
    __sendmsg returns failure, fix it with call unlock_comm
    before return.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    CC: Goldwyn Rodrigues <rgoldwyn@suse.com>
    Signed-off-by: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c01f95c2048a683f56aa7c7adb4464d9c28dc2c
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sun May 21 22:35:23 2017 -0400

    ext4: handle the rest of ext4_mb_load_buddy() ENOMEM errors
    
    
    [ Upstream commit 9651e6b2e20648d04d5e1fe6479a3056047e8781 ]
    
    I've got another report about breaking ext4 by ENOMEM error returned from
    ext4_mb_load_buddy() caused by memory shortage in memory cgroup.
    This time inside ext4_discard_preallocations().
    
    This patch replaces ext4_error() with ext4_warning() where errors returned
    from ext4_mb_load_buddy() are not fatal and handled by caller:
    * ext4_mb_discard_group_preallocations() - called before generating ENOSPC,
      we'll try to discard other group or return ENOSPC into user-space.
    * ext4_trim_all_free() - just stop trimming and return ENOMEM from ioctl.
    
    Some callers cannot handle errors, thus __GFP_NOFAIL is used for them:
    * ext4_discard_preallocations()
    * ext4_mb_discard_lg_preallocations()
    
    Fixes: adb7ef600cc9 ("ext4: use __GFP_NOFAIL in ext4_free_blocks()")
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a091f8aba517114ddf4922492b6e110d580cadbd
Author: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date:   Fri May 19 17:48:02 2017 +0300

    iio: hi8435: cleanup reset gpio
    
    
    [ Upstream commit 61305664a542f874283f74bf0b27ddb31f5045d7 ]
    
    Reset GPIO is active low.
    
    Currently driver uses gpiod_set_value(1) to clean reset, which depends
    on device tree to contain GPIO_ACTIVE_HIGH - that does not match reality.
    
    This fixes driver to use _raw version of gpiod_set_value() to enforce
    active-low semantics despite of what's written in device tree. Allowing
    device tree to override that only opens possibility for errors and does
    not add any value.
    
    Additionally, use _cansleep version to make things work with i2c-gpio
    and other sleeping gpio drivers.
    
    Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce839ed8186ca60a95373df042f806a64284f2e7
Author: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date:   Fri May 19 17:48:00 2017 +0300

    iio: hi8435: avoid garbage event at first enable
    
    
    [ Upstream commit ee19ac340c5fdfd89c6348be4563453c61ab54a9 ]
    
    Currently, driver generates events for channels if new reading differs
    from previous one. This "previous value" is initialized to zero, which
    results into event if value is constant-one.
    
    Fix that by initializing "previous value" by reading at event enable
    time.
    
    This provides reliable sequence for userspace:
    - enable event,
    - AFTER THAT read current value,
    - AFTER THAT each event will correspond to change.
    
    Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1799ba22a8455deba44d5188513291ced8388e79
Author: Antony Antony <antony@phenome.org>
Date:   Fri May 19 12:47:00 2017 +0200

    xfrm: fix state migration copy replay sequence numbers
    
    
    [ Upstream commit a486cd23661c9387fb076c3f6ae8b2aa9d20d54a ]
    
    During xfrm migration copy replay and preplay sequence numbers
    from the previous state.
    
    Here is a tcpdump output showing the problem.
    10.0.10.46 is running vanilla kernel, is the IKE/IPsec responder.
    After the migration it sent wrong sequence number, reset to 1.
    The migration is from 10.0.0.52 to 10.0.0.53.
    
    IP 10.0.0.52.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7cf), length 136
    IP 10.0.10.46.4500 > 10.0.0.52.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x7cf), length 136
    IP 10.0.0.52.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7d0), length 136
    IP 10.0.10.46.4500 > 10.0.0.52.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x7d0), length 136
    
    IP 10.0.0.53.4500 > 10.0.10.46.4500: NONESP-encap: isakmp: child_sa  inf2[I]
    IP 10.0.10.46.4500 > 10.0.0.53.4500: NONESP-encap: isakmp: child_sa  inf2[R]
    IP 10.0.0.53.4500 > 10.0.10.46.4500: NONESP-encap: isakmp: child_sa  inf2[I]
    IP 10.0.10.46.4500 > 10.0.0.53.4500: NONESP-encap: isakmp: child_sa  inf2[R]
    
    IP 10.0.0.53.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7d1), length 136
    
    NOTE: next sequence is wrong 0x1
    
    IP 10.0.10.46.4500 > 10.0.0.53.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x1), length 136
    IP 10.0.0.53.4500 > 10.0.10.46.4500: UDP-encap: ESP(spi=0x43ef462d,seq=0x7d2), length 136
    IP 10.0.10.46.4500 > 10.0.0.53.4500: UDP-encap: ESP(spi=0xca1c282d,seq=0x2), length 136
    
    Signed-off-by: Antony Antony <antony@phenome.org>
    Reviewed-by: Richard Guy Briggs <rgb@tricolour.ca>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8494e99ba7b9bdfdc91d6ff637f9a7ed2ef867b8
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri May 19 11:29:04 2017 +1000

    selftests/powerpc: Fix TM resched DSCR test with some compilers
    
    
    [ Upstream commit fe06fe860250a4f01d0eaf70a2563b1997174a74 ]
    
    The tm-resched-dscr test has started failing sometimes, depending on
    what compiler it's built with, eg:
    
      test: tm_resched_dscr
      Check DSCR TM context switch: tm-resched-dscr: tm-resched-dscr.c:76: test_body: Assertion `rv' failed.
      !! child died by signal 6
    
    When it fails we see that the compiler doesn't initialise rv to 1 before
    entering the inline asm block. Although that's counter intuitive, it
    is allowed because we tell the compiler that the inline asm will write
    to rv (using "=r"), meaning the original value is irrelevant.
    
    Marking it as a read/write parameter would presumably work, but it seems
    simpler to fix it by setting the initial value of rv in the inline asm.
    
    Fixes: 96d016108640 ("powerpc: Correct DSCR during TM context switch")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39687738a9faf2deb22db02848630b61a5d5784a
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed May 3 15:26:00 2017 +0100

    ath5k: fix memory leak on buf on failed eeprom read
    
    
    [ Upstream commit 8fed6823e06e43ee9cf7c0ffecec2f9111ce6201 ]
    
    The AR5K_EEPROM_READ macro returns with -EIO if a read error
    occurs causing a memory leak on the allocated buffer buf. Fix
    this by explicitly calling ath5k_hw_nvram_read and exiting on
    the via the freebuf label that performs the necessary free'ing
    of buf when a read error occurs.
    
    Detected by CoverityScan, CID#1248782 ("Resource Leak")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aebd78d5fd28591bfcc10da25bf90d525f211ec5
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu May 18 20:37:31 2017 +1000

    powerpc/mm: Fix virt_addr_valid() etc. on 64-bit hash
    
    
    [ Upstream commit e41e53cd4fe331d0d1f06f8e4ed7e2cc63ee2c34 ]
    
    virt_addr_valid() is supposed to tell you if it's OK to call virt_to_page() on
    an address. What this means in practice is that it should only return true for
    addresses in the linear mapping which are backed by a valid PFN.
    
    We are failing to properly check that the address is in the linear mapping,
    because virt_to_pfn() will return a valid looking PFN for more or less any
    address. That bug is actually caused by __pa(), used in virt_to_pfn().
    
    eg: __pa(0xc000000000010000) = 0x10000  # Good
        __pa(0xd000000000010000) = 0x10000  # Bad!
        __pa(0x0000000000010000) = 0x10000  # Bad!
    
    This started happening after commit bdbc29c19b26 ("powerpc: Work around gcc
    miscompilation of __pa() on 64-bit") (Aug 2013), where we changed the definition
    of __pa() to work around a GCC bug. Prior to that we subtracted PAGE_OFFSET from
    the value passed to __pa(), meaning __pa() of a 0xd or 0x0 address would give
    you something bogus back.
    
    Until we can verify if that GCC bug is no longer an issue, or come up with
    another solution, this commit does the minimal fix to make virt_addr_valid()
    work, by explicitly checking that the address is in the linear mapping region.
    
    Fixes: bdbc29c19b26 ("powerpc: Work around gcc miscompilation of __pa() on 64-bit")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Paul Mackerras <paulus@ozlabs.org>
    Reviewed-by: Balbir Singh <bsingharora@gmail.com>
    Tested-by: Breno Leitao <breno.leitao@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59cb416436f440aae2fb10fb020239d1131825e0
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed May 17 20:30:43 2017 +0530

    scsi: csiostor: fix use after free in csio_hw_use_fwconfig()
    
    
    [ Upstream commit a351e40b6de550049423a26f7ded7b639e363d89 ]
    
    mbp pointer is passed to csio_hw_validate_caps() so call mempool_free()
    after calling csio_hw_validate_caps().
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Fixes: 541c571fa2fd ("csiostor:Use firmware version from cxgb4/t4fw_version.h")
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76751d98394f337b05713e8ef9836b86b19e7f7e
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu May 18 15:01:34 2017 +0200

    sh_eth: Use platform device for printing before register_netdev()
    
    
    [ Upstream commit 5f5c5449acad0cd3322e53e1ac68c044483b0aa5 ]
    
    The MDIO initialization failure message is printed using the network
    device, before it has been registered, leading to:
    
         (null): failed to initialise MDIO
    
    Use the platform device instead to fix this:
    
        sh-eth ee700000.ethernet: failed to initialise MDIO
    
    Fixes: daacf03f0bbfefee ("sh_eth: Register MDIO bus before registering the network device")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62570d247648cc024066f0ff2be2ea540b98dbc7
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Apr 25 20:15:35 2017 +0200

    serial: sh-sci: Fix race condition causing garbage during shutdown
    
    
    [ Upstream commit 1cf4a7efdc71cab84c42cfea7200608711ea954f ]
    
    If DMA is enabled and used, a burst of old data may be seen on the
    serial console during "poweroff" or "reboot".  uart_flush_buffer()
    clears the circular buffer, but sci_port.tx_dma_len is not reset.
    This leads to a circular buffer overflow, dumping (UART_XMIT_SIZE -
    sci_port.tx_dma_len) bytes.
    
    To fix this, add a .flush_buffer() callback that resets
    sci_port.tx_dma_len.
    
    Inspired by commit 31ca2c63fdc0aee7 ("tty/serial: atmel: fix race
    condition (TX+DMA)").
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 462af9d545e9d15f31c8173ae4df856f4e8a1171
Author: Vignesh R <vigneshr@ti.com>
Date:   Sat Apr 22 18:37:19 2017 +0530

    serial: 8250: omap: Disable DMA for console UART
    
    
    [ Upstream commit 84b40e3b57eef1417479c00490dd4c9f6e5ffdbc ]
    
    Kernel always writes log messages to console via
    serial8250_console_write()->serial8250_console_putchar() which directly
    accesses UART_TX register _without_ using DMA.
    
    But, if other processes like systemd using same UART port, then these
    writes are handled by a different code flow using 8250_omap driver where
    there is provision to use DMA.
    
    It seems that it is possible that both DMA and CPU might simultaneously
    put data to UART FIFO and lead to potential loss of data due to FIFO
    overflow and weird data corruption. This happens when both kernel
    console and userspace tries to write simultaneously to the same UART
    port. Therefore, disable DMA on kernel console port to avoid potential
    race between CPU and DMA.
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 495633bc1d3550ff8dc2ddd8b9f4ae00bcd2a305
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue May 16 11:47:52 2017 -0400

    USB: ene_usb6250: fix SCSI residue overwriting
    
    
    [ Upstream commit aa18c4b6e0e39bfb00af48734ec24bc189ac9909 ]
    
    In the ene_usb6250 sub-driver for usb-storage, the SCSI residue is not
    reported correctly.  The residue is initialized to 0, but this value
    is overwritten whenever the driver sends firmware to the card reader
    before performing the current command.  As a result, a valid READ or
    WRITE operation appears to have failed, causing the SCSI core to retry
    the command multiple times and eventually fail.
    
    This patch fixes the problem by resetting the SCSI residue to 0 after
    sending firmware to the device.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Andreas Hartmann <andihartmann@01019freenet.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b5b5893e1dfdf86bda616832b34eb1f5a67926
Author: linzhang <xiaolou4617@gmail.com>
Date:   Wed May 17 12:05:07 2017 +0800

    net: x25: fix one potential use-after-free issue
    
    
    [ Upstream commit 64df6d525fcff1630098db9238bfd2b3e092d5c1 ]
    
    The function x25_init is not properly unregister related resources
    on error handler.It is will result in kernel oops if x25_init init
    failed, so add properly unregister call on error handler.
    
    Also, i adjust the coding style and make x25_register_sysctl properly
    return failure.
    
    Signed-off-by: linzhang <xiaolou4617@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9b095614952306c3111f2f039274534ce550fd4
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue May 16 11:47:42 2017 -0400

    USB: ene_usb6250: fix first command execution
    
    
    [ Upstream commit 4b309f1c4972c8f09e03ac64fc63510dbf5591a4 ]
    
    In the ene_usb6250 sub-driver for usb-storage, the ene_transport()
    routine is supposed to initialize the driver before executing the
    current command, if the initialization has not already been performed.
    However, a bug in the routine causes it to skip the command after
    doing the initialization.  Also, the routine does not return an
    appropriate error code if either the initialization or the command
    fails.
    
    As a result of the first bug, the first command (a SCSI INQUIRY) is
    not carried out.  The results can be seen in the system log, in the
    form of a warning message and empty or garbage INQUIRY data:
    
    Apr 18 22:40:08 notebook2 kernel: scsi host6: scsi scan: INQUIRY result too short (5), using 36
    Apr 18 22:40:08 notebook2 kernel: scsi 6:0:0:0: Direct-Access                                    PQ: 0 ANSI: 0
    
    This patch fixes both errors.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: Andreas Hartmann <andihartmann@01019freenet.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10b7c3b33c02257b574f8f00df4b1e4a722fd630
Author: Jisheng Zhang <jszhang@marvell.com>
Date:   Wed Apr 26 16:59:34 2017 +0800

    usb: chipidea: properly handle host or gadget initialization failure
    
    
    [ Upstream commit c4a0bbbdb7f6e3c37fa6deb3ef28c5ed99da6175 ]
    
    If ci_hdrc_host_init() or ci_hdrc_gadget_init() returns error and the
    error != -ENXIO, as Peter pointed out, "it stands for initialization
    for host or gadget has failed", so we'd better return failure rather
    continue.
    
    And before destroying the otg, i.e ci_hdrc_otg_destroy(ci), we should
    also check ci->roles[CI_ROLE_GADGET].
    
    Signed-off-by: Jisheng Zhang <jszhang@marvell.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cac18a2f4b25c087811028d74ee4552e382e3f29
Author: Ihar Hrachyshka <ihrachys@redhat.com>
Date:   Tue May 16 07:53:43 2017 -0700

    arp: honour gratuitous ARP _replies_
    
    
    [ Upstream commit 23d268eb240954e6e78f7cfab04f2b1e79f84489 ]
    
    When arp_accept is 1, gratuitous ARPs are supposed to override matching
    entries irrespective of whether they arrive during locktime. This was
    implemented in commit 56022a8fdd87 ("ipv4: arp: update neighbour address
    when a gratuitous arp is received and arp_accept is set")
    
    There is a glitch in the patch though. RFC 2002, section 4.6, "ARP,
    Proxy ARP, and Gratuitous ARP", defines gratuitous ARPs so that they can
    be either of Request or Reply type. Those Reply gratuitous ARPs can be
    triggered with standard tooling, for example, arping -A option does just
    that.
    
    This patch fixes the glitch, making both Request and Reply flavours of
    gratuitous ARPs to behave identically.
    
    As per RFC, if gratuitous ARPs are of Reply type, their Target Hardware
    Address field should also be set to the link-layer address to which this
    cache entry should be updated. The field is present in ARP over Ethernet
    but not in IEEE 1394. In this patch, I don't consider any broadcasted
    ARP replies as gratuitous if the field is not present, to conform the
    standard. It's not clear whether there is such a thing for IEEE 1394 as
    a gratuitous ARP reply; until it's cleared up, we will ignore such
    broadcasts. Note that they will still update existing ARP cache entries,
    assuming they arrive out of locktime time interval.
    
    Signed-off-by: Ihar Hrachyshka <ihrachys@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 009f58797c46d06ebf0c2abc39e9b1ed672fe997
Author: Ihar Hrachyshka <ihrachys@redhat.com>
Date:   Tue May 16 08:44:24 2017 -0700

    neighbour: update neigh timestamps iff update is effective
    
    
    [ Upstream commit 77d7123342dcf6442341b67816321d71da8b2b16 ]
    
    It's a common practice to send gratuitous ARPs after moving an
    IP address to another device to speed up healing of a service. To
    fulfill service availability constraints, the timing of network peers
    updating their caches to point to a new location of an IP address can be
    particularly important.
    
    Sometimes neigh_update calls won't touch neither lladdr nor state, for
    example if an update arrives in locktime interval. The neigh->updated
    value is tested by the protocol specific neigh code, which in turn
    will influence whether NEIGH_UPDATE_F_OVERRIDE gets set in the
    call to neigh_update() or not. As a result, we may effectively ignore
    the update request, bailing out of touching the neigh entry, except that
    we still bump its timestamps inside neigh_update.
    
    This may be a problem for updates arriving in quick succession. For
    example, consider the following scenario:
    
    A service is moved to another device with its IP address. The new device
    sends three gratuitous ARP requests into the network with ~1 seconds
    interval between them. Just before the first request arrives to one of
    network peer nodes, its neigh entry for the IP address transitions from
    STALE to DELAY.  This transition, among other things, updates
    neigh->updated. Once the kernel receives the first gratuitous ARP, it
    ignores it because its arrival time is inside the locktime interval. The
    kernel still bumps neigh->updated. Then the second gratuitous ARP
    request arrives, and it's also ignored because it's still in the (new)
    locktime interval. Same happens for the third request. The node
    eventually heals itself (after delay_first_probe_time seconds since the
    initial transition to DELAY state), but it just wasted some time and
    require a new ARP request/reply round trip. This unfortunate behaviour
    both puts more load on the network, as well as reduces service
    availability.
    
    This patch changes neigh_update so that it bumps neigh->updated (as well
    as neigh->confirmed) only once we are sure that either lladdr or entry
    state will change). In the scenario described above, it means that the
    second gratuitous ARP request will actually update the entry lladdr.
    
    Ideally, we would update the neigh entry on the very first gratuitous
    ARP request. The locktime mechanism is designed to ignore ARP updates in
    a short timeframe after a previous ARP update was honoured by the kernel
    layer. This would require tracking timestamps for state transitions
    separately from timestamps when actual updates are received. This would
    probably involve changes in neighbour struct. Therefore, the patch
    doesn't tackle the issue of the first gratuitous APR ignored, leaving
    it for a follow-up.
    
    Signed-off-by: Ihar Hrachyshka <ihrachys@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49b5cd2667c11726f6da3a004cbd3a2dc330e076
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue May 16 14:06:12 2017 +0200

    ata: libahci: properly propagate return value of platform_get_irq()
    
    
    [ Upstream commit c034640a32f8456018d9c8c83799ead683046b95 ]
    
    When platform_get_irq() fails, it returns an error code, which
    libahci_platform and replaces it by -EINVAL. This commit fixes that by
    propagating the error code. It fixes the situation where
    platform_get_irq() returns -EPROBE_DEFER because the interrupt
    controller is not available yet, and generally looks like the right
    thing to do.
    
    We pay attention to not show the "no irq" message when we are in an
    EPROBE_DEFER situation, because the driver probing will be retried
    later on, once the interrupt controller becomes available to provide
    the interrupt.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef51fe4d409b8f944345875345d75702a6b31a65
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue May 9 18:14:01 2017 +0100

    btrfs: fix incorrect error return ret being passed to mapping_set_error
    
    
    [ Upstream commit bff5baf8aa37a97293725a16c03f49872249c07e ]
    
    The setting of return code ret should be based on the error code
    passed into function end_extent_writepage and not on ret. Thanks
    to Liu Bo for spotting this mistake in the original fix I submitted.
    
    Detected by CoverityScan, CID#1414312 ("Logically dead code")
    
    Fixes: 5dca6eea91653e ("Btrfs: mark mapping with error flag to report errors to userspace")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 413d35ed7e6582ef7d060befbdca1459cba29df0
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Apr 23 13:55:13 2017 +0800

    usb: dwc3: keystone: check return value
    
    
    [ Upstream commit 018047a1dba7636e1f7fdae2cc290a528991d648 ]
    
    Function devm_clk_get() returns an ERR_PTR when it fails. However, in
    function kdwc3_probe(), its return value is not checked, which may
    result in a bad memory access bug. This patch fixes the bug.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d353b9389846e1fdd027987cd61b5ffc956be3d1
Author: Anup Patel <anup.patel@broadcom.com>
Date:   Mon May 15 10:34:53 2017 +0530

    async_tx: Fix DMA_PREP_FENCE usage in do_async_gen_syndrome()
    
    
    [ Upstream commit baae03a0e2497f49704628fd0aaf993cf98e1b99 ]
    
    The DMA_PREP_FENCE is to be used when preparing Tx descriptor if output
    of Tx descriptor is to be used by next/dependent Tx descriptor.
    
    The DMA_PREP_FENSE will not be set correctly in do_async_gen_syndrome()
    when calling dma->device_prep_dma_pq() under following conditions:
    1. ASYNC_TX_FENCE not set in submit->flags
    2. DMA_PREP_FENCE not set in dma_flags
    3. src_cnt (= (disks - 2)) is greater than dma_maxpq(dma, dma_flags)
    
    This patch fixes DMA_PREP_FENCE usage in do_async_gen_syndrome() taking
    inspiration from do_async_xor() implementation.
    
    Signed-off-by: Anup Patel <anup.patel@broadcom.com>
    Reviewed-by: Ray Jui <ray.jui@broadcom.com>
    Reviewed-by: Scott Branden <scott.branden@broadcom.com>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c88ce9a59982da0886f01133c80289037ffe4c6
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Fri May 12 17:03:39 2017 -0700

    ipv6: avoid dad-failures for addresses with NODAD
    
    
    [ Upstream commit 66eb9f86e50547ec2a8ff7a75997066a74ef584b ]
    
    Every address gets added with TENTATIVE flag even for the addresses with
    IFA_F_NODAD flag and dad-work is scheduled for them. During this DAD process
    we realize it's an address with NODAD and complete the process without
    sending any probe. However the TENTATIVE flags stays on the
    address for sometime enough to cause misinterpretation when we receive a NS.
    While processing NS, if the address has TENTATIVE flag, we mark it DADFAILED
    and endup with an address that was originally configured as NODAD with
    DADFAILED.
    
    We can't avoid scheduling dad_work for addresses with NODAD but we can
    avoid adding TENTATIVE flag to avoid this racy situation.
    
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9de3a3bfed892608dc30a6bc3fd8bdbeae5b51a5
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Sun May 14 11:50:50 2017 -0300

    ARM: dts: imx6qdl-wandboard: Fix audio channel swap
    
    
    [ Upstream commit 79935915300c5eb88a0e94fa9148a7505c14a02a ]
    
    When running a stress playback/stop loop test on a mx6wandboard channel
    swaps can be noticed randomly.
    
    Increasing the SGTL5000 LRCLK pad strength to its maximum value fixes
    the issue, so add the 'lrclk-strength' property to avoid the audio
    channel swaps.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6851e22a8b476270099ec4db914e2209ea60e56b
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Apr 13 14:56:44 2017 +0200

    x86/tsc: Provide 'tsc=unstable' boot parameter
    
    
    [ Upstream commit 8309f86cd41e8714526867177facf7a316d9be53 ]
    
    Since the clocksource watchdog will only detect broken TSC after the
    fact, all TSC based clocks will likely have observed non-continuous
    values before/when switching away from TSC.
    
    Therefore only thing to fully avoid random clock movement when your
    BIOS randomly mucks with TSC values from SMI handlers is reporting the
    TSC as unstable at boot.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2aff8800caf38d4d098e560ecddde1c0e9ba004
Author: Andrea della Porta <sfaragnaus@gmail.com>
Date:   Sat Apr 29 07:30:23 2017 +0100

    staging: wlan-ng: prism2mgmt.c: fixed a double endian conversion before calling hfa384x_drvr_setconfig16, also fixes relative sparse warning
    
    
    [ Upstream commit dea20579a69ab68cdca6adf79bb7c0c162eb9b72 ]
    
    staging: wlan-ng: prism2mgmt.c: This patches fixes a double endian conversion.
    cpu_to_le16() was called twice first in prism2mgmt_scan and again inside
    hfa384x_drvr_setconfig16() for the same variable, hence it was swapped
    twice. Incidentally, it also fixed the following sparse warning:
    
    drivers/staging/wlan-ng/prism2mgmt.c:173:30: warning: incorrect type in assignment (different base types)
    drivers/staging/wlan-ng/prism2mgmt.c:173:30:    expected unsigned short [unsigned] [usertype] word
    drivers/staging/wlan-ng/prism2mgmt.c:173:30:    got restricted __le16 [usertype] <noident>
    
    Unfortunately, only compile tested.
    
    Signed-off-by: Andrea della Porta <sfaragnaus@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2da2764bb75658354f3c763a34eba5e8214444d
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Wed Apr 12 18:31:18 2017 -0300

    ARM: dts: imx53-qsrb: Pulldown PMIC IRQ pin
    
    
    [ Upstream commit 2fe4bff3516924a37e083e3211364abe59db1161 ]
    
    Currently the following errors are seen:
    
    [   14.015056] mc13xxx 0-0008: Failed to read IRQ status: -6
    [   27.321093] mc13xxx 0-0008: Failed to read IRQ status: -6
    [   27.411681] mc13xxx 0-0008: Failed to read IRQ status: -6
    [   27.456281] mc13xxx 0-0008: Failed to read IRQ status: -6
    [   30.527106] mc13xxx 0-0008: Failed to read IRQ status: -6
    [   36.596900] mc13xxx 0-0008: Failed to read IRQ status: -6
    
    Also when reading the interrupts via 'cat /proc/interrupts' the
    PMIC GPIO interrupt counter does not stop increasing.
    
    The reason for the storm of interrupts is that the PUS field of
    register IOMUXC_SW_PAD_CTL_PAD_CSI0_DAT5 is currently configured as:
    10 : 100k pullup
    
    and the PMIC interrupt is being registered as IRQ_TYPE_LEVEL_HIGH type,
    which is the correct type as per the MC34708 datasheet.
    
    Use the default power on value for the IOMUX, which sets PUS field as:
    00: 360k pull down
    
    This prevents the spurious PMIC interrupts from happening.
    
    Commit e1ffceb078c6 ("ARM: imx53: qsrb: fix PMIC interrupt level")
    correctly described the irq type as IRQ_TYPE_LEVEL_HIGH, but
    missed to update the IOMUX of the PMIC GPIO as pull down.
    
    Fixes: e1ffceb078c6 ("ARM: imx53: qsrb: fix PMIC interrupt level")
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d57f7ddcc20589ba05b30fc48dd42a40ece32e56
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed May 10 22:40:06 2017 +0300

    PowerCap: Fix an error code in powercap_register_zone()
    
    
    [ Upstream commit 216c4e9db4c9d1d2a382b42880442dc632cd47d9 ]
    
    In the current code we accidentally return the successful result from
    idr_alloc() instead of a negative error pointer.  The caller is looking
    for an error pointer and so it treats the returned value as a valid
    pointer.
    
    This one might be a bit serious because if it lets people get around the
    kernel's protection for remapping NULL.  I'm not sure.
    
    Fixes: 75d2364ea0ca (PowerCap: Add class driver)
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0abaff3c28055046afffd0c2a3fd3ad702481991
Author: Doug Berger <opendmb@gmail.com>
Date:   Wed Mar 29 17:29:10 2017 -0700

    bus: brcmstb_gisb: correct support for 64-bit address output
    
    
    [ Upstream commit 0c2aa0e4b308815e877601845c1a89913f9bd2b9 ]
    
    The GISB bus can support addresses beyond 32-bits.  So this commit
    corrects support for reading a captured 64-bit address into a 64-bit
    variable by obtaining the high bits from the ARB_ERR_CAP_HI_ADDR
    register (when present) and then outputting the full 64-bit value.
    
    It also removes unused definitions.
    
    Fixes: 44127b771d9c ("bus: add Broadcom GISB bus arbiter timeout/error handler")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Gregory Fong <gregory.0xf0@gmail.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48564f69835690e62405ec64845522b63d75b20e
Author: Doug Berger <opendmb@gmail.com>
Date:   Wed Mar 29 17:29:09 2017 -0700

    bus: brcmstb_gisb: Use register offsets with writes too
    
    
    [ Upstream commit 856c7ccb9ce7a061f04bdf586f649cb93654e294 ]
    
    This commit corrects the bug introduced in commit f80835875d3d
    ("bus: brcmstb_gisb: Look up register offsets in a table") such
    that gisb_write() translates the register enumeration into an
    offset from the base address for writes as well as reads.
    
    Fixes: f80835875d3d ("bus: brcmstb_gisb: Look up register offsets in a table")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Gregory Fong <gregory.0xf0@gmail.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e38311ff9e4d8a1365c92e84d085484161caeb12
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri May 12 17:59:32 2017 +0200

    SMB2: Fix share type handling
    
    
    [ Upstream commit cd1230070ae1c12fd34cf6a557bfa81bf9311009 ]
    
    In fs/cifs/smb2pdu.h, we have:
    #define SMB2_SHARE_TYPE_DISK    0x01
    #define SMB2_SHARE_TYPE_PIPE    0x02
    #define SMB2_SHARE_TYPE_PRINT   0x03
    
    Knowing that, with the current code, the SMB2_SHARE_TYPE_PRINT case can
    never trigger and printer share would be interpreted as disk share.
    
    So, test the ShareType value for equality instead.
    
    Fixes: faaf946a7d5b ("CIFS: Add tree connect/disconnect capability for SMB2")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d74c63d62b7fcbd76dd324755755a71fec23a79
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Fri May 12 12:00:01 2017 -0400

    vmxnet3: ensure that adapter is in proper state during force_close
    
    
    [ Upstream commit 1c4d5f51a812a82de97beee24f48ed05c65ebda5 ]
    
    There are several paths in vmxnet3, where settings changes cause the
    adapter to be brought down and back up (vmxnet3_set_ringparam among
    them).  Should part of the reset operation fail, these paths call
    vmxnet3_force_close, which enables all napi instances prior to calling
    dev_close (with the expectation that vmxnet3_close will then properly
    disable them again).  However, vmxnet3_force_close neglects to clear
    VMXNET3_STATE_BIT_QUIESCED prior to calling dev_close.  As a result
    vmxnet3_quiesce_dev (called from vmxnet3_close), returns early, and
    leaves all the napi instances in a enabled state while the device itself
    is closed.  If a device in this state is activated again, napi_enable
    will be called on already enabled napi_instances, leading to a BUG halt.
    
    The fix is to simply enausre that the QUIESCED bit is cleared in
    vmxnet3_force_close to allow quesence to be completed properly on close.
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Shrikrishna Khare <skhare@vmware.com>
    CC: "VMware, Inc." <pv-drivers@vmware.com>
    CC: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 980e7ad46093e25718d9e57a2bacad58806a9834
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu May 11 11:33:30 2017 +1000

    KVM: PPC: Book3S PR: Check copy_to/from_user return values
    
    
    [ Upstream commit 67325e988faea735d663799b6d152b5f4254093c ]
    
    The PR KVM implementation of the PAPR HPT hypercalls (H_ENTER etc.)
    access an image of the HPT in userspace memory using copy_from_user
    and copy_to_user.  Recently, the declarations of those functions were
    annotated to indicate that the return value must be checked.  Since
    this code doesn't currently check the return value, this causes
    compile warnings like the ones shown below, and since on PPC the
    default is to compile arch/powerpc with -Werror, this causes the
    build to fail.
    
    To fix this, we check the return values, and if non-zero, fail the
    hypercall being processed with a H_FUNCTION error return value.
    There is really no good error return value to use since PAPR didn't
    envisage the possibility that the hypervisor may not be able to access
    the guest's HPT, and H_FUNCTION (function not supported) seems as
    good as any.
    
    The typical compile warnings look like this:
    
      CC      arch/powerpc/kvm/book3s_pr_papr.o
    /home/paulus/kernel/kvm/arch/powerpc/kvm/book3s_pr_papr.c: In function ‘kvmppc_h_pr_enter’:
    /home/paulus/kernel/kvm/arch/powerpc/kvm/book3s_pr_papr.c:53:2: error: ignoring return value of ‘copy_from_user’, declared with attribute warn_unused_result [-Werror=unused-result]
      copy_from_user(pteg, (void __user *)pteg_addr, sizeof(pteg));
      ^
    /home/paulus/kernel/kvm/arch/powerpc/kvm/book3s_pr_papr.c:74:2: error: ignoring return value of ‘copy_to_user’, declared with attribute warn_unused_result [-Werror=unused-result]
      copy_to_user((void __user *)pteg_addr, hpte, HPTE_SIZE);
      ^
    
    ... etc.
    
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c15a3d7665d315f91c19d963c8d6bcf8ab595d88
Author: KT Liao <kt.liao@emc.com.tw>
Date:   Mon Dec 12 11:03:42 2016 -0800

    Input: elantech - force relative mode on a certain module
    
    
    [ Upstream commit d899520b0431e70279bfb5066ecb6dc91d0b7072 ]
    
    One of Elan modules with sample version is 0x74 and hw_version is 0x03 has
    a bug in absolute mode implementation, so let it run in default PS/2
    relative mode.
    
    Signed-off-by: KT Liao <kt.liao@emc.com.tw>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29ecdc27ab23dee219035645c2fe6f4ec9b136b7
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Dec 19 12:57:49 2014 -0800

    Input: elan_i2c - check if device is there before really probing
    
    
    [ Upstream commit c5928551fd41b2eecdad78fa2be2a4a13ed5fde9 ]
    
    Before trying to properly initialize the touchpad and generate bunch of
    errors, let's first see it there is anything at the given address. If we
    get error, fail silently with -ENXIO.
    
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7bd99f2d1036ddcdb73b771aca5f2e6b4cde748
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue May 9 17:19:42 2017 +0100

    netxen_nic: set rcode to the return status from the call to netxen_issue_cmd
    
    
    [ Upstream commit 0fe20fafd1791f993806d417048213ec57b81045 ]
    
    Currently rcode is being initialized to NX_RCODE_SUCCESS and later it
    is checked to see if it is not NX_RCODE_SUCCESS which is never true. It
    appears that there is an unintentional missing assignment of rcode from
    the return of the call to netxen_issue_cmd() that was dropped in
    an earlier fix, so add it in.
    
    Detected by CoverityScan, CID#401900 ("Logically dead code")
    
    Fixes: 2dcd5d95ad6b2 ("netxen_nic: fix cdrp race condition")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 255dcf3609fcd12d2db155e1356a1a64305491ef
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Tue May 9 15:40:38 2017 +0200

    net: qca_spi: Fix alignment issues in rx path
    
    
    [ Upstream commit 8d66c30b12ed3cb533696dea8b9a9eadd5da426a ]
    
    The qca_spi driver causes alignment issues on ARM devices.
    So fix this by using netdev_alloc_skb_ip_align().
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: 291ab06ecf67 ("net: qualcomm: new Ethernet over SPI driver for QCA7000")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6155848b7ea4730e70133c8a4a59c8ab2b17fc6
Author: Wen Xiong <wenxiong@linux.vnet.ibm.com>
Date:   Wed May 10 08:54:11 2017 -0500

    blk-mq: NVMe 512B/4K+T10 DIF/DIX format returns I/O error on dd with split op
    
    
    [ Upstream commit f36ea50ca0043e7b1204feaf1d2ba6bd68c08d36 ]
    
    When formatting NVMe to 512B/4K + T10 DIf/DIX, dd with split op returns
    "Input/output error". Looks block layer split the bio after calling
    bio_integrity_prep(bio). This patch fixes the issue.
    
    Below is how we debug this issue:
    (1)format nvme to 4K block # size with type 2 DIF
    (2)dd with block size bigger than 1024k.
    oflag=direct
    dd: error writing '/dev/nvme0n1': Input/output error
    
    We added some debug code in nvme device driver. It showed us the first
    op and the second op have the same bi and pi address. This is not
    correct.
    
    1st op: nvme0n1 Op:Wr slba 0x505 length 0x100, PI ctrl=0x1400,
            dsmgmt=0x0, AT=0x0 & RT=0x505
            Guard 0x00b1, AT 0x0000, RT physical 0x00000505 RT virtual 0x00002828
    
    2nd op: nvme0n1 Op:Wr slba 0x605 length 0x1, PI ctrl=0x1400, dsmgmt=0x0,
            AT=0x0 & RT=0x605  ==> This op fails and subsequent 5 retires..
            Guard 0x00b1, AT 0x0000, RT physical 0x00000605 RT virtual 0x00002828
    
    With the fix, It showed us both of the first op and the second op have
    correct bi and pi address.
    
    1st op: nvme2n1 Op:Wr slba 0x505 length 0x100, PI ctrl=0x1400,
            dsmgmt=0x0, AT=0x0 & RT=0x505
            Guard 0x5ccb, AT 0x0000, RT physical 0x00000505 RT virtual
            0x00002828
    2nd op: nvme2n1 Op:Wr slba 0x605 length 0x1, PI ctrl=0x1400, dsmgmt=0x0,
            AT=0x0 & RT=0x605
            Guard 0xab4c, AT 0x0000, RT physical 0x00000605 RT virtual
            0x00003028
    
    Signed-off-by: Wen Xiong <wenxiong@linux.vnet.ibm.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 407078971b894f9eaec6671cea5750a2d78ac1d1
Author: Rabin Vincent <rabinv@axis.com>
Date:   Wed May 3 17:17:21 2017 +0200

    CIFS: silence lockdep splat in cifs_relock_file()
    
    
    [ Upstream commit 560d388950ceda5e7c7cdef7f3d9a8ff297bbf9d ]
    
    cifs_relock_file() can perform a down_write() on the inode's lock_sem even
    though it was already performed in cifs_strict_readv().  Lockdep complains
    about this.  AFAICS, there is no problem here, and lockdep just needs to be
    told that this nesting is OK.
    
     =============================================
     [ INFO: possible recursive locking detected ]
     4.11.0+ #20 Not tainted
     ---------------------------------------------
     cat/701 is trying to acquire lock:
      (&cifsi->lock_sem){++++.+}, at: cifs_reopen_file+0x7a7/0xc00
    
     but task is already holding lock:
      (&cifsi->lock_sem){++++.+}, at: cifs_strict_readv+0x177/0x310
    
     other info that might help us debug this:
      Possible unsafe locking scenario:
    
            CPU0
            ----
       lock(&cifsi->lock_sem);
       lock(&cifsi->lock_sem);
    
      *** DEADLOCK ***
    
      May be due to missing lock nesting notation
    
     1 lock held by cat/701:
      #0:  (&cifsi->lock_sem){++++.+}, at: cifs_strict_readv+0x177/0x310
    
     stack backtrace:
     CPU: 0 PID: 701 Comm: cat Not tainted 4.11.0+ #20
     Call Trace:
      dump_stack+0x85/0xc2
      __lock_acquire+0x17dd/0x2260
      ? trace_hardirqs_on_thunk+0x1a/0x1c
      ? preempt_schedule_irq+0x6b/0x80
      lock_acquire+0xcc/0x260
      ? lock_acquire+0xcc/0x260
      ? cifs_reopen_file+0x7a7/0xc00
      down_read+0x2d/0x70
      ? cifs_reopen_file+0x7a7/0xc00
      cifs_reopen_file+0x7a7/0xc00
      ? printk+0x43/0x4b
      cifs_readpage_worker+0x327/0x8a0
      cifs_readpage+0x8c/0x2a0
      generic_file_read_iter+0x692/0xd00
      cifs_strict_readv+0x29f/0x310
      generic_file_splice_read+0x11c/0x1c0
      do_splice_to+0xa5/0xc0
      splice_direct_to_actor+0xfa/0x350
      ? generic_pipe_buf_nosteal+0x10/0x10
      do_splice_direct+0xb5/0xe0
      do_sendfile+0x278/0x3a0
      SyS_sendfile64+0xc4/0xe0
      entry_SYSCALL_64_fastpath+0x1f/0xbe
    
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Acked-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff151a614671fa7db3854f5b578a165af9de11a2
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Tue May 9 15:47:15 2017 -0400

    NFSv4.1: Work around a Linux server bug...
    
    
    [ Upstream commit f4b23de3dda1536590787c9e5c3d16b8738ab108 ]
    
    It turns out the Linux server has a bug in its implementation of
    supattr_exclcreat; it returns the set of all attributes, whether
    or not they are supported by minor version 1.
    In order to avoid a regression, we therefore apply the supported_attrs
    as a mask on top of whatever the server sent us.
    
    Reported-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecd9a27e6d4aaaf64563daf98201cf19a94890bf
Author: Talat Batheesh <talatb@mellanox.com>
Date:   Tue May 9 14:45:23 2017 +0300

    net/mlx4_en: Avoid adding steering rules with invalid ring
    
    
    [ Upstream commit 89c557687a32c294e9d25670a96e9287c09f2d5f ]
    
    Inserting steering rules with illegal ring is an invalid operation,
    block it.
    
    Fixes: 820672812f82 ('net/mlx4_en: Manage flow steering rules with ethtool')
    Signed-off-by: Talat Batheesh <talatb@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cebe1ddda977b57011fa788e6a18c5e1a66977de
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu May 4 09:42:22 2017 +0200

    s390: move _text symbol to address higher than zero
    
    
    [ Upstream commit d04a4c76f71dd5335f8e499b59617382d84e2b8d ]
    
    The perf tool assumes that kernel symbols are never present at address
    zero. In fact it assumes if functions that map symbols to addresses
    return zero, that the symbol was not found.
    
    Given that s390's _text symbol historically is located at address zero
    this yields at least a couple of false errors and warnings in one of
    perf's test cases about not present symbols ("perf test 1").
    
    To fix this simply move the _text symbol to address 0x200, just behind
    the initial psw and channel program located at the beginning of the
    kernel image. This is now hard coded within the linker script.
    
    I tried a nicer solution which moves the initial psw and channel
    program into an own section. However that would move the symbols
    within the "real" head.text section to different addresses, since the
    ".org" statements within head.S are relative to the head.text
    section. If there is a new section in front, everything else will be
    moved. Alternatively I could have adjusted all ".org" statements. But
    this current solution seems to be the easiest one, since nobody really
    cares where the _text symbol is actually located.
    
    Reported-by: Zvonko Kosic <zkosic@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b355536c1f6257103fc0a0c8b234bef2737164c3
Author: Kirill Tkhai <ktkhai@virtuozzo.com>
Date:   Mon May 8 15:56:34 2017 -0700

    pidns: disable pid allocation if pid_ns_prepare_proc() is failed in alloc_pid()
    
    
    [ Upstream commit 8896c23d2ef803f1883fea73117a435925c2b4c4 ]
    
    alloc_pidmap() advances pid_namespace::last_pid.  When first pid
    allocation fails, then next created process will have pid 2 and
    pid_ns_prepare_proc() won't be called.  So, pid_namespace::proc_mnt will
    never be initialized (not to mention that there won't be a child
    reaper).
    
    I saw crash stack of such case on kernel 3.10:
    
        BUG: unable to handle kernel NULL pointer dereference at (null)
        IP: proc_flush_task+0x8f/0x1b0
        Call Trace:
            release_task+0x3f/0x490
            wait_consider_task.part.10+0x7ff/0xb00
            do_wait+0x11f/0x280
            SyS_wait4+0x7d/0x110
    
    We may fix this by restore of last_pid in 0 or by prohibiting of futher
    allocations.  Since there was a similar issue in Oleg Nesterov's commit
    314a8ad0f18a ("pidns: fix free_pid() to handle the first fork failure").
    and it was fixed via prohibiting allocation, let's follow this way, and
    do the same.
    
    Link: http://lkml.kernel.org/r/149201021004.4863.6762095011554287922.stgit@localhost.localdomain
    Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Andrei Vagin <avagin@virtuozzo.com>
    Cc: Andreas Gruenbacher <agruenba@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Michael Kerrisk <mtk.manpages@googlemail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Paul Moore <paul@paul-moore.com>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Serge Hallyn <serge@hallyn.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ada1278f772af126426d9649cdbc2236b71d77e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon May 8 15:55:14 2017 -0700

    drivers/misc/vmw_vmci/vmci_queue_pair.c: fix a couple integer overflow tests
    
    
    [ Upstream commit 146180c052a00172f4dc08eaade836fd02f61fb5 ]
    
    The "DIV_ROUND_UP(size, PAGE_SIZE)" operation can overflow if "size" is
    more than ULLONG_MAX - PAGE_SIZE.
    
    Link: http://lkml.kernel.org/r/20170322111950.GA11279@mwanda
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Jorgen Hansen <jhansen@vmware.com>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1d74fa2dbb1d447fd62de91872cff5a4d5b442a
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Mar 28 21:25:08 2017 -0400

    lockd: fix lockd shutdown race
    
    
    [ Upstream commit efda760fe95ea15291853c8fa9235c32d319cd98 ]
    
    As reported by David Jeffery: "a signal was sent to lockd while lockd
    was shutting down from a request to stop nfs.  The signal causes lockd
    to call restart_grace() which puts the lockd_net structure on the grace
    list.  If this signal is received at the wrong time, it will occur after
    lockd_down_net() has called locks_end_grace() but before
    lockd_down_net() stops the lockd thread.  This leads to lockd putting
    the lockd_net structure back on the grace list, then exiting without
    anything removing it from the list."
    
    So, perform the final locks_end_grace() from the the lockd thread; this
    ensures it's serialized with respect to restart_grace().
    
    Reported-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 246db5901f4a7f0823a37ff0aa4237813bf44e81
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Mon May 8 14:21:21 2017 -0500

    net: ethernet: ti: cpsw: adjust cpsw fifos depth for fullduplex flow control
    
    
    [ Upstream commit 48f5bccc60675f8426a6159935e8636a1fd89f56 ]
    
    When users set flow control using ethtool the bits are set properly in the
    CPGMAC_SL MACCONTROL register, but the FIFO depth in the respective Port n
    Maximum FIFO Blocks (Pn_MAX_BLKS) registers remains set to the minimum size
    reset value. When receive flow control is enabled on a port, the port's
    associated FIFO block allocation must be adjusted. The port RX allocation
    must increase to accommodate the flow control runout. The TRM recommends
    numbers of 5 or 6.
    
    Hence, apply required Port FIFO configuration to
    Pn_MAX_BLKS.Pn_TX_MAX_BLKS=0xF and Pn_MAX_BLKS.Pn_RX_MAX_BLKS=0x5 during
    interface initialization.
    
    Cc: Schuyler Patton <spatton@ti.com>
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c81deea4de1c24a8613ce1ee25aaee5f99098fdf
Author: Jim Baxter <jim_baxter@mentor.com>
Date:   Mon May 8 13:49:57 2017 +0100

    net: cdc_ncm: Fix TX zero padding
    
    
    [ Upstream commit aeca3a77b1e0ed06a095933b89c86aed007383eb ]
    
    The zero padding that is added to NTB's does
    not zero the memory correctly.
    This is because the skb_put modifies the value
    of skb_out->len which results in the memset
    command not setting any memory to zero as
    (ctx->tx_max - skb_out->len) == 0.
    
    I have resolved this by storing the size of
    the memory to be zeroed before the skb_put
    and using this in the memset call.
    
    Signed-off-by: Jim Baxter <jim_baxter@mentor.com>
    Reviewed-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 008da9d04c57dc4def240b15b0bbed112fe7f420
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri May 5 08:33:24 2017 +0300

    ipmi_ssif: unlock on allocation failure
    
    
    [ Upstream commit cf9806f32ef63b745f2486e0dbb2ac21f4ca44f0 ]
    
    We should unlock and re-enable IRQs if this allocation fails.
    
    Fixes: 259307074bfc ("ipmi: Add SMBus interface driver (SSIF) ")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2e24f7b2ef0fa2ba5c95fc057959d9e8c73e8b8
Author: Kees Cook <keescook@chromium.org>
Date:   Fri May 5 15:34:34 2017 -0700

    qlge: Avoid reading past end of buffer
    
    
    [ Upstream commit df5303a8aa9a0a6934f4cea7427f1edf771f21c2 ]
    
    Using memcpy() from a string that is shorter than the length copied means
    the destination buffer is being filled with arbitrary data from the kernel
    rodata segment. Instead, use strncpy() which will fill the trailing bytes
    with zeros.
    
    This was found with the future CONFIG_FORTIFY_SOURCE feature.
    
    Cc: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1db0c29e6d38e876098041896b855288d8f2dd6
Author: Kees Cook <keescook@chromium.org>
Date:   Fri May 5 15:25:32 2017 -0700

    bna: Avoid reading past end of buffer
    
    
    [ Upstream commit 9e4eb1ce472fbf7b007f23c88ec11c37265e401c ]
    
    Using memcpy() from a string that is shorter than the length copied means
    the destination buffer is being filled with arbitrary data from the kernel
    rodata segment. Instead, use strncpy() which will fill the trailing bytes
    with zeros.
    
    This was found with the future CONFIG_FORTIFY_SOURCE feature.
    
    Cc: Daniel Micay <danielmicay@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41a00b47fa91fd4953dfbcbfbd877157a446fd2c
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Tue May 2 17:56:21 2017 +0300

    mac80211: bail out from prep_connection() if a reconfig is ongoing
    
    
    [ Upstream commit f8860ce836f2d502b07ef99559707fe55d90f5bc ]
    
    If ieee80211_hw_restart() is called during authentication, the
    authentication process will continue, causing the driver to be called
    in a wrong state.  This ultimately causes an oops in the iwlwifi
    driver (at least).
    
    This fixes bugzilla 195299 partly.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=195299
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f477b9157b6f703ae802ada7f5a3438a80b68976
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Fri May 5 07:40:42 2017 +0200

    af_key: Fix slab-out-of-bounds in pfkey_compile_policy.
    
    
    [ Upstream commit d90c902449a7561f1b1d58ba5a0d11728ce8b0b2 ]
    
    The sadb_x_sec_len is stored in the unit 'byte divided by eight'.
    So we have to multiply this value by eight before we can do
    size checks. Otherwise we may get a slab-out-of-bounds when
    we memcpy the user sec_ctx.
    
    Fixes: df71837d502 ("[LSM-IPSec]: Security association restriction.")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 727631ffc04979fe38434c200cb0d5e04bcc923f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu May 4 15:50:53 2017 -0700

    IB/srpt: Fix abort handling
    
    
    [ Upstream commit 55d694275f41a1c0eef4ef49044ff29bc3999490 ]
    
    Let the target core check the CMD_T_ABORTED flag instead of the SRP
    target driver. Hence remove the transport_check_aborted_status()
    call. Since state == SRPT_STATE_CMD_RSP_SENT is something that really
    should not happen, do not try to recover if srpt_queue_response() is
    called for an I/O context that is in that state. This patch is a bug
    fix because the srpt_abort_cmd() call is misplaced - if that function
    is called from srpt_queue_response() it should either be called
    before the command state is changed or after the response has been
    sent.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Cc: Doug Ledford <dledford@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88824fe7a89c7dad7fe9e79754a0a1a24fe53117
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Thu May 4 13:44:04 2017 -0400

    NFSv4.1: RECLAIM_COMPLETE must handle NFS4ERR_CONN_NOT_BOUND_TO_SESSION
    
    
    [ Upstream commit 0048fdd06614a4ea088f9fcad11511956b795698 ]
    
    If the server returns NFS4ERR_CONN_NOT_BOUND_TO_SESSION because we
    are trunking, then RECLAIM_COMPLETE must handle that by calling
    nfs4_schedule_session_recovery() and then retrying.
    
    Reported-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ea10d0dd2a009352217990e26ea263363f1d9c7
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu May 4 09:51:40 2017 -0500

    x86/asm: Don't use RBP as a temporary register in csum_partial_copy_generic()
    
    
    [ Upstream commit 42fc6c6cb1662ba2fa727dd01c9473c63be4e3b6 ]
    
    Andrey Konovalov reported the following warning while fuzzing the kernel
    with syzkaller:
    
      WARNING: kernel stack regs at ffff8800686869f8 in a.out:4933 has bad 'bp' value c3fc855a10167ec0
    
    The unwinder dump revealed that RBP had a bad value when an interrupt
    occurred in csum_partial_copy_generic().
    
    That function saves RBP on the stack and then overwrites it, using it as
    a scratch register.  That's problematic because it breaks stack traces
    if an interrupt occurs in the middle of the function.
    
    Replace the usage of RBP with another callee-saved register (R15) so
    stack traces are no longer affected.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Kostya Serebryany <kcc@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: linux-sctp@vger.kernel.org
    Cc: netdev <netdev@vger.kernel.org>
    Cc: syzkaller <syzkaller@googlegroups.com>
    Link: http://lkml.kernel.org/r/4b03a961efda5ec9bfe46b7b9c9ad72d1efad343.1493909486.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdd8b15f86e2f27823f4e4380bd2d4ddfff58cab
Author: Pan Bian <bianpan2016@163.com>
Date:   Sun Apr 23 13:43:24 2017 +0800

    rtc: snvs: fix an incorrect check of return value
    
    
    [ Upstream commit 758929005f06f954b7e1c87a1c9fdb44157b228f ]
    
    Function devm_regmap_init_mmio() returns an ERR_PTR on error. However,
    in function snvs_rtc_probe() its return value is checked against NULL.
    This patch fixes it by checking the return value with IS_ERR().
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c6230241a858905eadbfcbfa19d715191d9d394
Author: Julia Cartwright <julia@ni.com>
Date:   Fri Apr 28 12:41:02 2017 -0500

    md/raid5: make use of spin_lock_irq over local_irq_disable + spin_lock
    
    
    [ Upstream commit 3d05f3aed5d721c2c77d20288c29ab26c6193ed5 ]
    
    On mainline, there is no functional difference, just less code, and
    symmetric lock/unlock paths.
    
    On PREEMPT_RT builds, this fixes the following warning, seen by
    Alexander GQ Gerasiov, due to the sleeping nature of spinlocks.
    
       BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:993
       in_atomic(): 0, irqs_disabled(): 1, pid: 58, name: kworker/u12:1
       CPU: 5 PID: 58 Comm: kworker/u12:1 Tainted: G        W       4.9.20-rt16-stand6-686 #1
       Hardware name: Supermicro SYS-5027R-WRF/X9SRW-F, BIOS 3.2a 10/28/2015
       Workqueue: writeback wb_workfn (flush-253:0)
       Call Trace:
        dump_stack+0x47/0x68
        ? migrate_enable+0x4a/0xf0
        ___might_sleep+0x101/0x180
        rt_spin_lock+0x17/0x40
        add_stripe_bio+0x4e3/0x6c0 [raid456]
        ? preempt_count_add+0x42/0xb0
        raid5_make_request+0x737/0xdd0 [raid456]
    
    Reported-by: Alexander GQ Gerasiov <gq@redlab-i.ru>
    Tested-by: Alexander GQ Gerasiov <gq@redlab-i.ru>
    Signed-off-by: Julia Cartwright <julia@ni.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 773c7f0933d8f26591d1f66fabcc093c911ea47d
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu May 4 08:42:30 2017 +0200

    cfg80211: make RATE_INFO_BW_20 the default
    
    
    [ Upstream commit 842be75c77cb72ee546a2b19da9c285fb3ded660 ]
    
    Due to the way I did the RX bitrate conversions in mac80211 with
    spatch, going setting flags to setting the value, many drivers now
    don't set the bandwidth value for 20 MHz, since with the flags it
    wasn't necessary to (there was no 20 MHz flag, only the others.)
    
    Rather than go through and try to fix up all the drivers, instead
    renumber the enum so that 20 MHz, which is the typical bandwidth,
    actually has the value 0, making those drivers all work again.
    
    If VHT was hit used with a driver not reporting it, e.g. iwlmvm,
    this manifested in hitting the bandwidth warning in
    cfg80211_calculate_bitrate_vht().
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
