commit 3781db07c79e7e4c5273c902f9c4718795866a1c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Dec 9 22:01:57 2017 +0100

    Linux 4.9.68

commit 3671e6728f796dee5c557f0782725eeb6a9ad721
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Thu May 11 13:58:06 2017 +0200

    xen-netfront: avoid crashing on resume after a failure in talk_to_netback()
    
    commit d86b5672b1adb98b4cdd6fbf0224bbfb03db6e2e upstream.
    
    Unavoidable crashes in netfront_resume() and netback_changed() after a
    previous fail in talk_to_netback() (e.g. when we fail to read MAC from
    xenstore) were discovered. The failure path in talk_to_netback() does
    unregister/free for netdev but we don't reset drvdata and we try accessing
    it after resume.
    
    Fix the bug by removing the whole xen device completely with
    device_unregister(), this guarantees we won't have any calls into netfront
    after a failure.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08dd03812e8b1dba97eb00092a8cfbe8a7ebc13c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 7 16:45:04 2017 +0000

    usb: host: fix incorrect updating of offset
    
    commit 1d5a31582ef046d3b233f0da1a68ae26519b2f0a upstream.
    
    The variable temp is incorrectly being updated, instead it should
    be offset otherwise the loop just reads the same capability value
    and loops forever.  Thanks to Alan Stern for pointing out the
    correct fix to my original fix.  Fix also cleans up clang warning:
    
    drivers/usb/host/ehci-dbg.c:840:4: warning: Value stored to 'temp'
    is never read
    
    Fixes: d49d43174400 ("USB: misc ehci updates")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20c315ebabc5a63b0bb169ddd60455ee0b70633e
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 23 16:39:52 2017 +0100

    USB: usbfs: Filter flags passed in from user space
    
    commit 446f666da9f019ce2ffd03800995487e79a91462 upstream.
    
    USBDEVFS_URB_ISO_ASAP must be accepted only for ISO endpoints.
    Improve sanity checking.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 545c10375330c9212227a6a7efd84f49ccd6c9b2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 22 23:43:25 2017 +0300

    USB: devio: Prevent integer overflow in proc_do_submiturb()
    
    commit 57999d1107c1e60c2ca7088f2ac0f819e2f554b3 upstream.
    
    There used to be an integer overflow check in proc_do_submiturb() but
    we removed it.  It turns out that it's still required.  The
    uurb->buffer_length variable is a signed integer and it's controlled by
    the user.  It can lead to an integer overflow when we do:
    
            num_sgs = DIV_ROUND_UP(uurb->buffer_length, USB_SG_SIZE);
    
    If we strip away the macro then that line looks like this:
    
            num_sgs = (uurb->buffer_length + USB_SG_SIZE - 1) / USB_SG_SIZE;
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    It's the first addition which can overflow.
    
    Fixes: 1129d270cbfb ("USB: Increase usbfs transfer limit")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6ab871c432dbb30d8a186347f4d9ebd22041b6a
Author: Mateusz Berezecki <mateuszb@fastmail.fm>
Date:   Wed Dec 21 09:19:14 2016 -0800

    USB: Increase usbfs transfer limit
    
    commit 1129d270cbfbb7e2b1ec3dede4a13930bdd10e41 upstream.
    
    Promote a variable keeping track of USB transfer memory usage to a
    wider data type and allow for higher bandwidth transfers from a large
    number of USB devices connected to a single host.
    
    Signed-off-by: Mateusz Berezecki <mateuszb@fastmail.fm>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05ffc7ed55279d659a3e6786e1ffa54eb280a80d
Author: Masakazu Mokuno <masakazu.mokuno@gmail.com>
Date:   Fri Nov 10 01:25:50 2017 +0900

    USB: core: Add type-specific length check of BOS descriptors
    
    commit 81cf4a45360f70528f1f64ba018d61cb5767249a upstream.
    
    As most of BOS descriptors are longer in length than their header
    'struct usb_dev_cap_header', comparing solely with it is not sufficient
    to avoid out-of-bounds access to BOS descriptors.
    
    This patch adds descriptor type specific length check in
    usb_get_bos_descriptor() to fix the issue.
    
    Signed-off-by: Masakazu Mokuno <masakazu.mokuno@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34ba2f04a480101c3d60918a45f68ff66973ef49
Author: Yu Chen <chenyu56@huawei.com>
Date:   Fri Dec 1 13:41:20 2017 +0200

    usb: xhci: fix panic in xhci_free_virt_devices_depth_first
    
    commit 80e457699a8dbdd70f2d26911e46f538645c55fc upstream.
    
    Check vdev->real_port 0 to avoid panic
    [    9.261347] [<ffffff800884a390>] xhci_free_virt_devices_depth_first+0x58/0x108
    [    9.261352] [<ffffff800884a814>] xhci_mem_cleanup+0x1bc/0x570
    [    9.261355] [<ffffff8008842de8>] xhci_stop+0x140/0x1c8
    [    9.261365] [<ffffff80087ed304>] usb_remove_hcd+0xfc/0x1d0
    [    9.261369] [<ffffff80088551c4>] xhci_plat_remove+0x6c/0xa8
    [    9.261377] [<ffffff80086e928c>] platform_drv_remove+0x2c/0x70
    [    9.261384] [<ffffff80086e6ea0>] __device_release_driver+0x80/0x108
    [    9.261387] [<ffffff80086e7a1c>] device_release_driver+0x2c/0x40
    [    9.261392] [<ffffff80086e5f28>] bus_remove_device+0xe0/0x120
    [    9.261396] [<ffffff80086e2e34>] device_del+0x114/0x210
    [    9.261399] [<ffffff80086e9e00>] platform_device_del+0x30/0xa0
    [    9.261403] [<ffffff8008810bdc>] dwc3_otg_work+0x204/0x488
    [    9.261407] [<ffffff80088133fc>] event_work+0x304/0x5b8
    [    9.261414] [<ffffff80080e31b0>] process_one_work+0x148/0x490
    [    9.261417] [<ffffff80080e3548>] worker_thread+0x50/0x4a0
    [    9.261421] [<ffffff80080e9ea0>] kthread+0xe8/0x100
    [    9.261427] [<ffffff8008083680>] ret_from_fork+0x10/0x50
    
    The problem can occur if xhci_plat_remove() is called shortly after
    xhci_plat_probe(). While xhci_free_virt_devices_depth_first been
    called before the device has been setup and get real_port initialized.
    The problem occurred on Hikey960 and was reproduced by Guenter Roeck
    on Kevin with chromeos-4.4.
    
    Fixes: ee8665e28e8d ("xhci: free xhci virtual devices with leaf nodes first")
    Cc: Guenter Roeck <groeck@google.com>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Fan Ning <fanning4@hisilicon.com>
    Signed-off-by: Li Rui <lirui39@hisilicon.com>
    Signed-off-by: yangdi <yangdi10@hisilicon.com>
    Signed-off-by: Yu Chen <chenyu56@huawei.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e328dff288e68a94ae1ef0c43e3f8c6ad9fbf297
Author: Mike Looijmans <mike.looijmans@topic.nl>
Date:   Thu Nov 9 13:16:46 2017 +0100

    usb: hub: Cycle HUB power when initialization fails
    
    commit 973593a960ddac0f14f0d8877d2d0abe0afda795 upstream.
    
    Sometimes the USB device gets confused about the state of the initialization and
    the connection fails. In particular, the device thinks that it's already set up
    and running while the host thinks the device still needs to be configured. To
    work around this issue, power-cycle the hub's output to issue a sort of "reset"
    to the device. This makes the device restart its state machine and then the
    initialization succeeds.
    
    This fixes problems where the kernel reports a list of errors like this:
    
    usb 1-1.3: device not accepting address 19, error -71
    
    The end result is a non-functioning device. After this patch, the sequence
    becomes like this:
    
    usb 1-1.3: new high-speed USB device number 18 using ci_hdrc
    usb 1-1.3: device not accepting address 18, error -71
    usb 1-1.3: new high-speed USB device number 19 using ci_hdrc
    usb 1-1.3: device not accepting address 19, error -71
    usb 1-1-port3: attempt power cycle
    usb 1-1.3: new high-speed USB device number 21 using ci_hdrc
    usb-storage 1-1.3:1.2: USB Mass Storage device detected
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0af23e49316d7870b8f2550a72052bf7d608f230
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Fri Dec 9 19:53:06 2016 +0100

    dma-buf: Update kerneldoc for sync_file_create
    
    commit 24a367348a017555f982a9ee137070a7a821fa97 upstream.
    
    This was missed when adding a dma_fence_get call. While at it also
    remove the kerneldoc for the static inline helper - no point
    documenting internals down to every detail.
    
    Fixes: 30cd85dd6edc ("dma-buf/sync_file: hold reference to fence when creating sync_file")
    Cc: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: linux-doc@vger.kernel.org
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Reviewed-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161209185309.1682-3-daniel.vetter@ffwll.ch
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a83421d482e7d7c6f4251dcd825548e5262c054
Author: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
Date:   Wed Oct 19 15:48:32 2016 -0200

    dma-buf/sync_file: hold reference to fence when creating sync_file
    
    commit 30cd85dd6edc86ea8d8589efb813f1fad41ef233 upstream.
    
    fence referencing was out of balance. It was not taking any ref to the
    fence at creating time, but it was putting a reference when freeing the
    sync file.
    
    This patch fixes the balancing issue by getting a reference for the fence
    when creating the sync_file.
    
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/1476899313-22241-1-git-send-email-gustavo@padovan.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 424bdc5df002f9f9d802f488f27696a68c0a5c59
Author: Dominik Behr <dbehr@chromium.org>
Date:   Thu Sep 7 16:02:46 2017 -0300

    dma-buf/sw_sync: force signal all unsignaled fences on dying timeline
    
    commit ea4d5a270b57fa8d4871f372ca9b97b7697fdfda upstream.
    
    To avoid hanging userspace components that might have been waiting on the
    active fences of the destroyed timeline we need to signal with error all
    remaining fences on such timeline.
    
    This restore the default behaviour of the Android sw_sync framework, which
    Android still relies on. It was broken on the dma fence conversion a few
    years ago and never fixed.
    
    v2: Do not bother with cleanup do the list (Chris Wilson)
    
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Dominik Behr <dbehr@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170907190246.16425-2-gustavo@padovan.org
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5e0724e76c2c8efb4d3dc43c24228b409bbbfe9
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Jan 4 14:12:22 2017 +0000

    dma-fence: Introduce drm_fence_set_error() helper
    
    commit a009e975da5c7d42a7f5eaadc54946eb5f76c9af upstream.
    
    The dma_fence.error field (formerly known as dma_fence.status) is an
    optional field that may be set by drivers before calling
    dma_fence_signal(). The field can be used to indicate that the fence was
    completed in err rather than with success, and is visible to other
    consumers of the fence and to userspace via sync_file.
    
    This patch renames the field from status to error so that its meaning is
    hopefully more clear (and distinct from dma_fence_get_status() which is
    a composite between the error state and signal state) and adds a helper
    that validates the preconditions of when it is suitable to adjust the
    error field.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170104141222.6992-3-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3b029a44e14f5226fd9b410a0a70eb9b7ed6beb
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Jan 4 14:12:21 2017 +0000

    dma-fence: Wrap querying the fence->status
    
    commit d6c99f4bf093a58d3ab47caaec74b81f18bc4e3f upstream.
    
    The fence->status is an optional field that is only valid once the fence
    has been signaled. (Driver may fill the fence->status with an error code
    prior to calling dma_fence_signal().) Given the restriction upon its
    validity, wrap querying of the fence->status into a helper
    dma_fence_get_status().
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170104141222.6992-2-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f55d17e9c3af7bf2fdb38c52a9abe4d4cfc0137c
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Jan 4 14:12:20 2017 +0000

    dma-fence: Clear fence->status during dma_fence_init()
    
    commit 83dd1376fd92f33bdeca9e83d479534a4e7f870b upstream.
    
    As the fence->status is an optional field that may be set before
    dma_fence_signal() is called to convey that the fence completed with an
    error, we have to ensure that it is always set to zero on initialisation
    so that the typical use (i.e. unset) always flags a successful completion.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170104141222.6992-1-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ae85fabdfc0c74c2ac32219e116546e2a5a6309
Author: Gustavo Padovan <gustavo.padovan@collabora.com>
Date:   Sat Jul 29 12:22:16 2017 -0300

    dma-buf/sw_sync: clean up list before signaling the fence
    
    commit 3792b7c1a70815fe4e954221c096f9278638fd21 upstream.
    
    If userspace already dropped its own reference by closing the sw_sync
    fence fd we might end up in a deadlock where
    dma_fence_is_signaled_locked() will trigger the release of the fence and
    thus try to hold the lock to remove the fence from the list.
    
    dma_fence_is_signaled_locked() tries to release/free the fence and hold
    the lock in the process.
    
    We fix that by changing the order operation and clean up the list and
    rb-tree first.
    
    v2: Drop fence get/put dance and manipulate the list first (Chris Wilson)
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170729152217.8362-2-gustavo@padovan.org
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4496b88c06744a9a92088e1924c0b39e225898b2
Author: Gustavo Padovan <gustavo.padovan@collabora.com>
Date:   Sat Jul 29 12:22:15 2017 -0300

    dma-buf/sw_sync: move timeline_fence_ops around
    
    commit 150b6a9d7d6fffb95c0a5349960a10569e8218b5 upstream.
    
    We are going to use timeline_fence_signaled() in a internal function in
    the next commit.
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170729152217.8362-1-gustavo@padovan.org
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db767404ad09b419779704fff4709a25f1dc252b
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 22:12:53 2017 +0100

    dma-buf/sw-sync: Use an rbtree to sort fences in the timeline
    
    commit f1e8c67123cf171e2b0357e885e426328b241d7d upstream.
    
    Reduce the list iteration when incrementing the timeline by storing the
    fences in increasing order.
    
    v2: Prevent spinlock recursion on free during create
    v3: Fixup rebase conflict inside comments that escaped the compiler.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629211253.22766-1-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e82ecb230924314b848b68f5dade1ccf38bea838
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 22:05:32 2017 +0100

    dma-buf/sw-sync: Fix locking around sync_timeline lists
    
    commit d3862e44daa7a0c94d2f6193502a8c49379acfce upstream.
    
    The sync_pt were not adding themselves atomically to the timeline lists,
    corruption imminent.  Only a single list is required to track the
    unsignaled sync_pt, so reduce it and rename the lock more appropriately
    along with using idiomatic names to distinguish a list from links along
    it.
    
    v2: Prevent spinlock recursion on free during create (next patch) and
    fixup crossref in kerneldoc
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629210532.5617-1-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bf0b23c07f1e23f23c05d4f8223ebdebd13c3f1
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 13:59:28 2017 +0100

    dma-buf/sw-sync: sync_pt is private and of fixed size
    
    commit 3b52ce44e720c240afc4c4b03140d7b7811b23bd upstream.
    
    Since sync_pt is only allocated from a single location and is no longer
    the base class for fences (that is struct dma_fence) it no longer needs
    a generic unsized allocator.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629125930.821-5-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f14ad42b8743897d140808467ed4ae3ce93bd0a5
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 13:59:27 2017 +0100

    dma-buf/sw-sync: Reduce irqsave/irqrestore from known context
    
    commit a6aa8fca4d792c72947e341d7842d2f700534335 upstream.
    
    If we know the context under which we are called, then we can use the
    simpler form of spin_lock_irq (saving the save/restore).
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629125930.821-4-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 985b5b238436f015e4368d82c032d3ce085efe17
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 13:59:26 2017 +0100

    dma-buf/sw-sync: Prevent user overflow on timeline advance
    
    commit 8f66d3aa1735bc95ae58d846a157357e8d41abb8 upstream.
    
    The timeline is u32, which limits any single advance to INT_MAX so that
    we can detect all fences that need signaling.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629125930.821-3-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc839ecb8edae9ec6fc757e6874f14ffecda7b3d
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 13:59:25 2017 +0100

    dma-buf/sw-sync: Fix the is-signaled test to handle u32 wraparound
    
    commit 61894b02716f122dd7662d5d89f5b2245ca551e2 upstream.
    
    Use the canonical __dma_fence_is_later() to compare the fence seqno
    against the timeline seqno to check if the fence is signaled.
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629125930.821-2-chris@chris-wilson.co.uk
    [s/dma_fence/fence/g - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b53525eaac5590d06785f5fbdd8265b73ecbc911
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Jun 29 13:59:24 2017 +0100

    dma-buf/dma-fence: Extract __dma_fence_is_later()
    
    commit 8111477663813caa1a4469cfe6afaae36cd04513 upstream.
    
    Often we have the task of comparing two seqno known to be on the same
    context, so provide a common __dma_fence_is_later().
    
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170629125930.821-1-chris@chris-wilson.co.uk
    [renamed to __fence_is_later() - gregkh]
    Cc: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c13a05a8017b01cae73edf90098f1702a5aa1c77
Author: Rui Sousa <rui.sousa@nxp.com>
Date:   Mon Feb 13 10:01:25 2017 +0800

    net: fec: fix multicast filtering hardware setup
    
    
    [ Upstream commit 01f8902bcf3ff124d0aeb88a774180ebcec20ace ]
    
    Fix hardware setup of multicast address hash:
    - Never clear the hardware hash (to avoid packet loss)
    - Construct the hash register values in software and then write once
    to hardware
    
    Signed-off-by: Rui Sousa <rui.sousa@nxp.com>
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a767c866735c0f23e53aa2a4153c7db76988d230
Author: Mart van Santen <mart@greenhost.nl>
Date:   Fri Feb 10 12:02:18 2017 +0000

    xen-netback: vif counters from int/long to u64
    
    
    [ Upstream commit ebf692f85ff78092cd238166d8d7ec51419f9c02 ]
    
    This patch fixes an issue where the type of counters in the queue(s)
    and interface are not in sync (queue counters are int, interface
    counters are long), causing incorrect reporting of tx/rx values
    of the vif interface and unclear counter overflows.
    This patch sets both counters to the u64 type.
    
    Signed-off-by: Mart van Santen <mart@greenhost.nl>
    Reviewed-by: Paul Durrant <paul.durrant@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 959b8e0ba293fe0fddf6bbd5c9c874b7ab1feeb8
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sat Feb 11 09:24:46 2017 -0200

    cec: initiator should be the same as the destination for, poll
    
    
    [ Upstream commit 42980da2eb7eb9695d8efc0c0ef145cbbb993b2c ]
    
    Poll messages that are used to allocate a logical address should
    use the same initiator as the destination. Instead, it expected that
    the initiator was 0xf which is not according to the standard.
    
    This also had consequences for the message checks in cec_transmit_msg_fh
    that incorrectly rejected poll messages with the same initiator and
    destination.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 017a499be5746df215a664775b14e80c087bc941
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Wed Feb 8 10:57:37 2017 +0000

    xen-netfront: Improve error handling during initialization
    
    
    [ Upstream commit e2e004acc7cbe3c531e752a270a74e95cde3ea48 ]
    
    This fixes a crash when running out of grant refs when creating many
    queues across many netdevs.
    
    * If creating queues fails (i.e. there are no grant refs available),
    call xenbus_dev_fatal() to ensure that the xenbus device is set to the
    closed state.
    * If no queues are created, don't call xennet_disconnect_backend as
    netdev->real_num_tx_queues will not have been set correctly.
    * If setup_netfront() fails, ensure that all the queues created are
    cleaned up, not just those that have been set up.
    * If any queues were set up and an error occurs, call
    xennet_destroy_queues() to clean up the napi context.
    * If any fatal error occurs, unregister and destroy the netdev to avoid
    leaving around a half setup network device.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c93c09a057b71fa152de9d56f971fd82248d6499
Author: Jan Kara <jack@suse.cz>
Date:   Wed Feb 8 14:30:53 2017 -0800

    mm: avoid returning VM_FAULT_RETRY from ->page_mkwrite handlers
    
    
    [ Upstream commit 0911d0041c22922228ca52a977d7b0b0159fee4b ]
    
    Some ->page_mkwrite handlers may return VM_FAULT_RETRY as its return
    code (GFS2 or Lustre can definitely do this).  However VM_FAULT_RETRY
    from ->page_mkwrite is completely unhandled by the mm code and results
    in locking and writeably mapping the page which definitely is not what
    the caller wanted.
    
    Fix Lustre and block_page_mkwrite_ret() used by other filesystems
    (notably GFS2) to return VM_FAULT_NOPAGE instead which results in
    bailing out from the fault code, the CPU then retries the access, and we
    fault again effectively doing what the handler wanted.
    
    Link: http://lkml.kernel.org/r/20170203150729.15863-1-jack@suse.cz
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Reviewed-by: Jinshan Xiong <jinshan.xiong@intel.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e550debcf7557ca966388d5462519063aa75524
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Feb 1 14:26:16 2017 +1100

    vfio/spapr: Fix missing mutex unlock when creating a window
    
    
    [ Upstream commit 2da64d20a0b20046d688e44f4033efd09157e29d ]
    
    Commit d9c728949ddc ("vfio/spapr: Postpone default window creation")
    added an additional exit to the VFIO_IOMMU_SPAPR_TCE_CREATE case and
    made it possible to return from tce_iommu_ioctl() without unlocking
    container->lock; this fixes the issue.
    
    Fixes: d9c728949ddc ("vfio/spapr: Postpone default window creation")
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6129fd98822520dccf60389a4e2ef5d0148aad78
Author: Ivan Vecera <cera@cera.cz>
Date:   Tue Jan 31 20:01:31 2017 +0100

    be2net: fix initial MAC setting
    
    
    [ Upstream commit 4993b39ab04b083ff6ee1147e7e7f120feb6bf7f ]
    
    Recent commit 34393529163a ("be2net: fix MAC addr setting on privileged
    BE3 VFs") allows privileged BE3 VFs to set its MAC address during
    initialization. Although the initial MAC for such VFs is already
    programmed by parent PF the subsequent setting performed by VF is OK,
    but in certain cases (after fresh boot) this command in VF can fail.
    
    The MAC should be initialized only when:
    1) no MAC is programmed (always except BE3 VFs during first init)
    2) programmed MAC is different from requested (e.g. MAC is set when
       interface is down). In this case the initial MAC programmed by PF
       needs to be deleted.
    
    The adapter->dev_mac contains MAC address currently programmed in HW so
    it should be zeroed when the MAC is deleted from HW and should not be
    filled when MAC is set when interface is down in be_mac_addr_set() as
    no programming is performed in this case.
    
    Example of failure without the fix (immediately after fresh boot):
    
    # ip link set eth0 up  <- eth0 is BE3 PF
    be2net 0000:01:00.0 eth0: Link is Up
    
    # echo 1 > /sys/class/net/eth0/device/sriov_numvfs  <- Create 1 VF
    ...
    be2net 0000:01:04.0: Emulex OneConnect(be3): VF  port 0
    
    # ip link set eth8 up  <- eth8 is created privileged VF
    be2net 0000:01:04.0: opcode 59-1 failed:status 1-76
    RTNETLINK answers: Input/output error
    
    # echo 0 > /sys/class/net/eth0/device/sriov_numvfs  <- Delete VF
    iommu: Removing device 0000:01:04.0 from group 33
    ...
    
    # echo 1 > /sys/class/net/eth0/device/sriov_numvfs  <- Create it again
    iommu: Removing device 0000:01:04.0 from group 33
    ...
    
    # ip link set eth8 up
    be2net 0000:01:04.0 eth8: Link is Up
    
    Initialization is now OK.
    
    v2 - Corrected the comment and condition check suggested by Suresh & Harsha
    
    Fixes: 34393529163a ("be2net: fix MAC addr setting on privileged BE3 VFs")
    Cc: Sathya Perla <sathya.perla@broadcom.com>
    Cc: Ajit Khaparde <ajit.khaparde@broadcom.com>
    Cc: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
    Cc: Somnath Kotur <somnath.kotur@broadcom.com>
    Signed-off-by: Ivan Vecera <cera@cera.cz>
    Acked-by: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a9ffb5a87d874b038a35e5687a502e5afe6dad4
Author: Vincent <vincent.stehle@laposte.net>
Date:   Mon Jan 30 15:06:43 2017 +0100

    net: thunderx: avoid dereferencing xcv when NULL
    
    
    [ Upstream commit c73e44269369e936165f0f9b61f1f09a11dae01c ]
    
    This fixes the following smatch and coccinelle warnings:
    
      drivers/net/ethernet/cavium/thunder/thunder_xcv.c:119 xcv_setup_link() error: we previously assumed 'xcv' could be null (see line 118) [smatch]
      drivers/net/ethernet/cavium/thunder/thunder_xcv.c:119:16-20: ERROR: xcv is NULL but dereferenced. [coccinelle]
    
    Fixes: 6465859aba1e66a5 ("net: thunderx: Add RGMII interface type support")
    Signed-off-by: Vincent Stehlé <vincent.stehle@laposte.net>
    Cc: Sunil Goutham <sgoutham@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3325615d2b500b9c84f908adbdb843a31acc3126
Author: Sean Nyekjaer <sean@geanix.com>
Date:   Fri Jan 27 21:39:03 2017 +0100

    net: phy: micrel: KSZ8795 do not set SUPPORTED_[Asym_]Pause
    
    
    [ Upstream commit cf626c3b252b2c9d131be0dd66096ec3bf729e54 ]
    
    As pr commit "net: phy: phy drivers should not set SUPPORTED_[Asym_]Pause"
    this phy driver should not set these feature bits.
    
    Signed-off-by: Sean Nyekjaer <sean.nyekjaer@prevas.dk>
    Fixes: 9d162ed69f51 ("net: phy: micrel: add support for KSZ8795")
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8d6f83d3b6e2a16d542d44e757c67a4bbb35a28
Author: Andreas Schultz <aschultz@tpip.net>
Date:   Fri Jan 27 10:40:58 2017 +0100

    gtp: fix cross netns recv on gtp socket
    
    
    [ Upstream commit 3ab1b469e847ba425af3c5ad5068cc94b55b38d0 ]
    
    The use of the passed through netlink src_net to check for a
    cross netns operation was wrong. Using the GTP socket and the
    GTP netdevice is always correct (even if the netdev has been
    moved to new netns after link creation).
    
    Remove the now obsolete net field from gtp_dev.
    
    Signed-off-by: Andreas Schultz <aschultz@tpip.net>
    Acked-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d812be8288325ea28297e6bbbd8afb24b7d80f65
Author: Andreas Schultz <aschultz@tpip.net>
Date:   Fri Jan 27 10:40:57 2017 +0100

    gtp: clear DF bit on GTP packet tx
    
    
    [ Upstream commit c6ce1d08eede4c2968ed08aafa3165e8e183c5a1 ]
    
    3GPP TS 29.281 and 3GPP TS 29.060 imply that GTP-U packets should be
    sent with the DF bit cleared. For example 3GPP TS 29.060, Release 8,
    Section 13.2.2:
    
    > Backbone router: Any router in the backbone may fragment the GTP
    > packet if needed, according to IPv4.
    
    Signed-off-by: Andreas Schultz <aschultz@tpip.net>
    Acked-by: Harald Welte <laforge@netfilter.org>
    Acked-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3976dd677e891c0b2c63d08028d445663539472c
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Jan 1 13:41:56 2017 +0200

    nvmet: cancel fatal error and flush async work before free controller
    
    
    [ Upstream commit 06406d81a2d7cfb8abcc4fa6cdfeb8e5897007c5 ]
    
    Make sure they are not running and we can free the controller
    safely.
    
    Signed-off-by: Roy Shterman <roys@lightbitslabs.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bd89953fb1f8e45dc9f93ab59f50c950ef44187
Author: Mike Looijmans <mike.looijmans@topic.nl>
Date:   Mon Jan 16 15:49:38 2017 +0100

    i2c: i2c-cadence: Initialize configuration before probing devices
    
    
    [ Upstream commit 0e1929dedea36781e25902118c93edd8d8f09af1 ]
    
    The cadence I2C driver calls cdns_i2c_writereg(..) to setup a workaround
    in the controller, but did so after calling i2c_add_adapter() which starts
    probing devices on the bus. Change the order so that the configuration is
    completely finished before using the adapter.
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe8bdc9b79ee644177715a9f72a7b332dd881847
Author: Jason Baron <jbaron@akamai.com>
Date:   Tue Jan 24 21:49:41 2017 -0500

    tcp: correct memory barrier usage in tcp_check_space()
    
    
    [ Upstream commit 56d806222ace4c3aeae516cd7a855340fb2839d8 ]
    
    sock_reset_flag() maps to __clear_bit() not the atomic version clear_bit().
    Thus, we need smp_mb(), smp_mb__after_atomic() is not sufficient.
    
    Fixes: 3c7151275c0c ("tcp: add memory barriers to write space paths")
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49c3164e6d84ce32121d18f060bc05825001df8e
Author: Iago Abal <mail@iagoabal.eu>
Date:   Wed Jan 11 14:00:21 2017 +0100

    dmaengine: pl330: fix double lock
    
    
    [ Upstream commit 91539eb1fda2d530d3b268eef542c5414e54bf1a ]
    
    The static bug finder EBA (http://www.iagoabal.eu/eba/) reported the
    following double-lock bug:
    
        Double lock:
        1. spin_lock_irqsave(pch->lock, flags) at pl330_free_chan_resources:2236;
        2. call to function `pl330_release_channel' immediately after;
        3. call to function `dma_pl330_rqcb' in line 1753;
        4. spin_lock_irqsave(pch->lock, flags) at dma_pl330_rqcb:1505.
    
    I have fixed it as suggested by Marek Szyprowski.
    
    First, I have replaced `pch->lock' with `pl330->lock' in functions
    `pl330_alloc_chan_resources' and `pl330_free_chan_resources'. This avoids
    the double-lock by acquiring a different lock than `dma_pl330_rqcb'.
    
    NOTE that, as a result, `pl330_free_chan_resources' executes
    `list_splice_tail_init' on `pch->work_list' under lock `pl330->lock',
    whereas in the rest of the code `pch->work_list' is protected by
    `pch->lock'. I don't know if this may cause race conditions. Similarly
    `pch->cyclic' is written by `pl330_alloc_chan_resources' under
    `pl330->lock' but read by `pl330_tx_submit' under `pch->lock'.
    
    Second, I have removed locking from `pl330_request_channel' and
    `pl330_release_channel' functions. Function `pl330_request_channel' is
    only called from `pl330_alloc_chan_resources', so the lock is already
    held. Function `pl330_release_channel' is called from
    `pl330_free_chan_resources', which already holds the lock, and from
    `pl330_del'. Function `pl330_del' is called in an error path of
    `pl330_probe' and at the end of `pl330_remove', but I assume that there
    cannot be concurrent accesses to the protected data at those points.
    
    Signed-off-by: Iago Abal <mail@iagoabal.eu>
    Reviewed-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aad54ba21dd8742810f195527e62f99ee0a1cee1
Author: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
Date:   Tue Jan 24 13:00:48 2017 +0100

    tipc: fix cleanup at module unload
    
    
    [ Upstream commit 35e22e49a5d6a741ebe7f2dd280b2052c3003ef7 ]
    
    In tipc_server_stop(), we iterate over the connections with limiting
    factor as server's idr_in_use. We ignore the fact that this variable
    is decremented in tipc_close_conn(), leading to premature exit.
    
    In this commit, we iterate until the we have no connections left.
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Tested-by: John Thompson <thompa.atl@gmail.com>
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6313adb8de021b841184115ca0e232cb0d533634
Author: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
Date:   Tue Jan 24 13:00:46 2017 +0100

    tipc: fix nametbl_lock soft lockup at module exit
    
    
    [ Upstream commit 9dc3abdd1f7ea524e8552e0a3ef01219892ed1f4 ]
    
    Commit 333f796235a527 ("tipc: fix a race condition leading to
    subscriber refcnt bug") reveals a soft lockup while acquiring
    nametbl_lock.
    
    Before commit 333f796235a527, we call tipc_conn_shutdown() from
    tipc_close_conn() in the context of tipc_topsrv_stop(). In that
    context, we are allowed to grab the nametbl_lock.
    
    Commit 333f796235a527, moved tipc_conn_release (renamed from
    tipc_conn_shutdown) to the connection refcount cleanup. This allows
    either tipc_nametbl_withdraw() or tipc_topsrv_stop() to the cleanup.
    
    Since tipc_exit_net() first calls tipc_topsrv_stop() and then
    tipc_nametble_withdraw() increases the chances for the later to
    perform the connection cleanup.
    
    The soft lockup occurs in the call chain of tipc_nametbl_withdraw(),
    when it performs the tipc_conn_kref_release() as it tries to grab
    nametbl_lock again while holding it already.
    tipc_nametbl_withdraw() grabs nametbl_lock
      tipc_nametbl_remove_publ()
        tipc_subscrp_report_overlap()
          tipc_subscrp_send_event()
            tipc_conn_sendmsg()
              << if (con->flags != CF_CONNECTED) we do conn_put(),
                 triggering the cleanup as refcount=0. >>
              tipc_conn_kref_release
                tipc_sock_release
                  tipc_conn_release
                    tipc_subscrb_delete
                      tipc_subscrp_delete
                        tipc_nametbl_unsubscribe << Soft Lockup >>
    
    The previous changes in this series fixes the race conditions fixed
    by commit 333f796235a527. Hence we can now revert the commit.
    
    Fixes: 333f796235a52727 ("tipc: fix a race condition leading to subscriber refcnt bug")
    Reported-and-Tested-by: John Thompson <thompa.atl@gmail.com>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8240244880b1a88ff9e0baf1fda8eccf6b7590b
Author: Ram Amrani <Ram.Amrani@Cavium.com>
Date:   Tue Jan 24 13:51:41 2017 +0200

    RDMA/qedr: Fix RDMA CM loopback
    
    
    [ Upstream commit af2b14b8b8ae21b0047a52c767ac8b44f435a280 ]
    
    The loopback logic in RDMA CM packets compares Ethernet addresses and
    was accidently inverse.
    
    Signed-off-by: Ram Amrani <Ram.Amrani@cavium.com>
    Signed-off-by: Ariel Elior <Ariel.Elior@cavium.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d4198f8c66bff208cf5c6191ce8d9ad71e2c048
Author: Ram Amrani <Ram.Amrani@Cavium.com>
Date:   Tue Jan 24 13:50:34 2017 +0200

    RDMA/qedr: Return success when not changing QP state
    
    
    [ Upstream commit 865cea40b69741c3da2574176876463233b2b67c ]
    
    If the user is requesting us to change the QP state to the same state
    that it is already in, return success instead of failure.
    
    Signed-off-by: Ram Amrani <Ram.Amrani@cavium.com>
    Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dee48e57ae22d8dedb37eda71e029e731034b0e6
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 23 09:29:09 2017 +0100

    mac80211: don't try to sleep in rate_control_rate_init()
    
    
    [ Upstream commit 115865fa0826ed18ca04717cf72d0fe874c0fe7f ]
    
    In my previous patch, I missed that rate_control_rate_init() is
    called from some places that cannot sleep, so it cannot call
    ieee80211_recalc_min_chandef(). Remove that call for now to fix
    the context bug, we'll have to find a different way to fix the
    minimum channel width issue.
    
    Fixes: 96aa2e7cf126 ("mac80211: calculate min channel width correctly")
    Reported-by: Xiaolong Ye (via lkp-robot) <xiaolong.ye@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cab00a9c16c07045bdaaf9e6b4e92de81790f386
Author: Xiangliang Yu <Xiangliang.Yu@amd.com>
Date:   Thu Jan 19 09:57:41 2017 +0800

    drm/amdgpu: fix unload driver issue for virtual display
    
    
    [ Upstream commit 3a1d19a29670aa7eb58576a31883d0aa9fb77549 ]
    
    Virtual display doesn't allocate amdgpu_encoder when initializing,
    so will get invaild pointer if try to free amdgpu_encoder when
    unloading driver.
    
    Signed-off-by: Xiangliang Yu <Xiangliang.Yu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b75e47cf84390b8be2d93a08977270166831a2b3
Author: Kevin Hao <haokexin@gmail.com>
Date:   Sun Jan 22 16:50:23 2017 +0800

    x86/fpu: Set the xcomp_bv when we fake up a XSAVES area
    
    
    [ Upstream commit 4c833368f0bf748d4147bf301b1f95bc8eccb3c0 ]
    
    I got the following calltrace on a Apollo Lake SoC with 32-bit kernel:
    
      WARNING: CPU: 2 PID: 261 at arch/x86/include/asm/fpu/internal.h:363 fpu__restore+0x1f5/0x260
      [...]
      Hardware name: Intel Corp. Broxton P/NOTEBOOK, BIOS APLIRVPA.X64.0138.B35.1608091058 08/09/2016
      Call Trace:
       dump_stack()
       __warn()
       ? fpu__restore()
       warn_slowpath_null()
       fpu__restore()
       __fpu__restore_sig()
       fpu__restore_sig()
       restore_sigcontext.isra.9()
       sys_sigreturn()
       do_int80_syscall_32()
       entry_INT80_32()
    
    The reason is that a #GP occurs when executing XRSTORS. The root cause
    is that we forget to set the xcomp_bv when we fake up the XSAVES area
    in the copyin_to_xsaves() function.
    
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yu-cheng Yu <yu-cheng.yu@intel.com>
    Link: http://lkml.kernel.org/r/1485075023-30161-1-git-send-email-haokexin@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05071c058d20c4b5e0b670c5c4fd6976e0547413
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jan 20 13:01:57 2017 +0000

    net: sctp: fix array overrun read on sctp_timer_tbl
    
    
    [ Upstream commit 0e73fc9a56f22f2eec4d2b2910c649f7af67b74d ]
    
    The comparison on the timeout can lead to an array overrun
    read on sctp_timer_tbl because of an off-by-one error. Fix
    this by using < instead of <= and also compare to the array
    size rather than SCTP_EVENT_TIMEOUT_MAX.
    
    Fixes CoverityScan CID#1397639 ("Out-of-bounds read")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2001ccb4dea45907e11b6e53888777d7d202beb9
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Tue Jan 17 15:15:20 2017 +0100

    drm/exynos/decon5433: set STANDALONE_UPDATE_F on output enablement
    
    
    [ Upstream commit 11d8bcef7a0399e1d2519f207fd575fc404306b4 ]
    
    DECON_TV requires STANDALONE_UPDATE after output enabling, otherwise it does
    not start. This change is neutral for DECON.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ee340c06bf2b271641cf08792c5173f55736184
Author: Rex Zhu <Rex.Zhu@amd.com>
Date:   Tue Jan 10 20:00:40 2017 +0800

    drm/amdgpu: fix bug set incorrect value to vce register
    
    
    [ Upstream commit e05208ded1905e500cd5b369d624b071951c68b9 ]
    
    Set the proper bits for clockgating setup.
    
    Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8a544c920878780506ee757f11fc2076c0ba724
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Fri Dec 23 18:06:05 2016 -0800

    qla2xxx: Fix wrong IOCB type assumption
    
    
    [ Upstream commit bb1181c9a8b46b6f10e749d9ed94480336445d7f ]
    
    qlt_reset is called with Immedidate Notify IOCB only.
    Current code wrongly cast it as ATIO IOCB.
    
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57e76dbbc5609c49c8abb2199561e92f54bdd7eb
Author: Reza Arbab <arbab@linux.vnet.ibm.com>
Date:   Tue Jan 3 14:39:51 2017 -0600

    powerpc/mm: Fix memory hotplug BUG() on radix
    
    
    [ Upstream commit 32b53c012e0bfe20b2745962a89db0dc72ef3270 ]
    
    Memory hotplug is leading to hash page table calls, even on radix:
    
      arch_add_memory
        create_section_mapping
          htab_bolt_mapping
            BUG_ON(!ppc_md.hpte_insert);
    
    To fix, refactor {create,remove}_section_mapping() into hash__ and
    radix__ variants. Leave the radix versions stubbed for now.
    
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Acked-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Reza Arbab <arbab@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a88ff235e8adf50bb50f5243c242f5f82f7549fa
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed Dec 28 14:31:03 2016 +0100

    perf/x86/intel: Account interrupts for PEBS errors
    
    
    [ Upstream commit 475113d937adfd150eb82b5e2c5507125a68e7af ]
    
    It's possible to set up PEBS events to get only errors and not
    any data, like on SNB-X (model 45) and IVB-EP (model 62)
    via 2 perf commands running simultaneously:
    
        taskset -c 1 ./perf record -c 4 -e branches:pp -j any -C 10
    
    This leads to a soft lock up, because the error path of the
    intel_pmu_drain_pebs_nhm() does not account event->hw.interrupt
    for error PEBS interrupts, so in case you're getting ONLY
    errors you don't have a way to stop the event when it's over
    the max_samples_per_tick limit:
    
      NMI watchdog: BUG: soft lockup - CPU#22 stuck for 22s! [perf_fuzzer:5816]
      ...
      RIP: 0010:[<ffffffff81159232>]  [<ffffffff81159232>] smp_call_function_single+0xe2/0x140
      ...
      Call Trace:
       ? trace_hardirqs_on_caller+0xf5/0x1b0
       ? perf_cgroup_attach+0x70/0x70
       perf_install_in_context+0x199/0x1b0
       ? ctx_resched+0x90/0x90
       SYSC_perf_event_open+0x641/0xf90
       SyS_perf_event_open+0x9/0x10
       do_syscall_64+0x6c/0x1f0
       entry_SYSCALL64_slow_path+0x25/0x25
    
    Add perf_event_account_interrupt() which does the interrupt
    and frequency checks and call it from intel_pmu_drain_pebs_nhm()'s
    error path.
    
    We keep the pending_kill and pending_wakeup logic only in the
    __perf_event_overflow() path, because they make sense only if
    there's any data to deliver.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vince@deater.net>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/1482931866-6018-2-git-send-email-jolsa@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72232a3bc5df33b6908a0590049c97158e2f9b58
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Jan 13 13:31:32 2017 -0500

    NFSv4: Fix client recovery when server reboots multiple times
    
    
    [ Upstream commit c6180a6237174f481dc856ed6e890d8196b6f0fb ]
    
    If the server reboots multiple times, the client should rely on the
    server to tell it that it cannot reclaim state as per section 9.6.3.4
    in RFC7530 and section 8.4.2.1 in RFC5661.
    Currently, the client is being to conservative, and is assuming that
    if the server reboots while state recovery is in progress, then it must
    ignore state that was not recovered before the reboot.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cda72bbb7bac1b1ab0cd06051e7a223530689002
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Fri Jan 13 13:32:51 2017 +0100

    mac80211: prevent skb/txq mismatch
    
    
    [ Upstream commit dbef53621116474bb883f76f0ba6b7640bc42332 ]
    
    Station structure is considered as not uploaded
    (to driver) until drv_sta_state() finishes. This
    call is however done after the structure is
    attached to mac80211 internal lists and hashes.
    This means mac80211 can lookup (and use) station
    structure before it is uploaded to a driver.
    
    If this happens (structure exists, but
    sta->uploaded is false) fast_tx path can still be
    taken. Deep in the fastpath call the sta->uploaded
    is checked against to derive "pubsta" argument for
    ieee80211_get_txq(). If sta->uploaded is false
    (and sta is actually non-NULL) ieee80211_get_txq()
    effectively downgraded to vif->txq.
    
    At first glance this may look innocent but coerces
    mac80211 into a state that is almost guaranteed
    (codel may drop offending skb) to crash because a
    station-oriented skb gets queued up on
    vif-oriented txq. The ieee80211_tx_dequeue() ends
    up looking at info->control.flags and tries to use
    txq->sta which in the fail case is NULL.
    
    It's probably pointless to pretend one can
    downgrade skb from sta-txq to vif-txq.
    
    Since downgrading unicast traffic to vif->txq must
    not be done there's no txq to put a frame on if
    sta->uploaded is false. Therefore the code is made
    to fall back to regular tx() op path if the
    described condition is hit.
    
    Only drivers using wake_tx_queue were affected.
    
    Example crash dump before fix:
    
     Unable to handle kernel paging request at virtual address ffffe26c
     PC is at ieee80211_tx_dequeue+0x204/0x690 [mac80211]
     [<bf4252a4>] (ieee80211_tx_dequeue [mac80211]) from
     [<bf4b1388>] (ath10k_mac_tx_push_txq+0x54/0x1c0 [ath10k_core])
     [<bf4b1388>] (ath10k_mac_tx_push_txq [ath10k_core]) from
     [<bf4bdfbc>] (ath10k_htt_txrx_compl_task+0xd78/0x11d0 [ath10k_core])
     [<bf4bdfbc>] (ath10k_htt_txrx_compl_task [ath10k_core])
     [<bf51c5a4>] (ath10k_pci_napi_poll+0x54/0xe8 [ath10k_pci])
     [<bf51c5a4>] (ath10k_pci_napi_poll [ath10k_pci]) from
     [<c0572e90>] (net_rx_action+0xac/0x160)
    
    Reported-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee01c59bf8386609fb87720c7c77e01b00941176
Author: Christoffer Dall <christoffer.dall@linaro.org>
Date:   Mon Jan 9 12:18:56 2017 +0100

    KVM: arm/arm64: Fix occasional warning from the timer work function
    
    
    [ Upstream commit 63e41226afc3f7a044b70325566fa86ac3142538 ]
    
    When a VCPU blocks (WFI) and has programmed the vtimer, we program a
    soft timer to expire in the future to wake up the vcpu thread when
    appropriate.  Because such as wake up involves a vcpu kick, and the
    timer expire function can get called from interrupt context, and the
    kick may sleep, we have to schedule the kick in the work function.
    
    The work function currently has a warning that gets raised if it turns
    out that the timer shouldn't fire when it's run, which was added because
    the idea was that in that case the work should never have been cancelled.
    
    However, it turns out that this whole thing is racy and we can get
    spurious warnings.  The problem is that we clear the armed flag in the
    work function, which may run in parallel with the
    kvm_timer_unschedule->timer_disarm() call.  This results in a possible
    situation where the timer_disarm() call does not call
    cancel_work_sync(), which effectively synchronizes the completion of the
    work function with running the VCPU.  As a result, the VCPU thread
    proceeds before the work function completees, causing changes to the
    timer state such that kvm_timer_should_fire(vcpu) returns false in the
    work function.
    
    All we do in the work function is to kick the VCPU, and an occasional
    rare extra kick never harmed anyone.  Since the race above is extremely
    rare, we don't bother checking if the race happens but simply remove the
    check and the clearing of the armed flag from the work function.
    
    Reported-by: Matthias Brugger <mbrugger@suse.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72afbf76344ff89272b9971716bb74855bc99157
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Fri Jan 13 10:20:58 2017 +0100

    drm/exynos/decon5433: set STANDALONE_UPDATE_F also if planes are disabled
    
    
    [ Upstream commit 821b40b79db7dedbfe15ab330dfd181e661a533f ]
    
    STANDALONE_UPDATE_F should be set if something changed in plane configurations,
    including plane disable.
    The patch fixes page-faults bugs, caused by decon still using framebuffers
    of disabled planes.
    
    v2: fixed clear-bit code (Thx Marek)
    v3: use test_and_clear_bit (Thx Joonyoung)
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Tested-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cca6bca0097359468c635876d726c657df5733f0
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Mon Jan 9 15:33:02 2017 +0100

    drm/exynos/decon5433: update shadow registers iff there are active windows
    
    
    [ Upstream commit f65a7c9cb3770ed4d3e7c57c66d7032689081b5e ]
    
    Improper usage of DECON_UPDATE register leads to subtle errors.
    If it set in decon_commit when there are no active windows it results
    in slow registry updates - all subsequent shadow registry updates takes more
    than full vblank. On the other side if it is not set when there are
    active windows it results in garbage on the screen after suspend/resume of
    FB console.
    
    The patch hopefully fixes it.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f800573a31b8993313a8c11eef4e0bd881c785a
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Thu Jan 5 10:20:16 2017 -0500

    nfs: Don't take a reference on fl->fl_file for LOCK operation
    
    
    [ Upstream commit 4b09ec4b14a168bf2c687e1f598140c3c11e9222 ]
    
    I have reports of a crash that look like __fput() was called twice for
    a NFSv4.0 file.  It seems possible that the state manager could try to
    reclaim a lock and take a reference on the fl->fl_file at the same time the
    file is being released if, during the close(), a signal interrupts the wait
    for outstanding IO while removing locks which then skips the removal
    of that lock.
    
    Since 83bfff23e9ed ("nfs4: have do_vfs_lock take an inode pointer") has
    removed the need to traverse fl->fl_file->f_inode in nfs4_lock_done(),
    taking that reference is no longer necessary.
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c682ae717759622c32d3bbd720a6acfbd54c9726
Author: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Date:   Thu Jan 12 13:21:06 2017 +0100

    ravb: Remove Rx overflow log messages
    
    
    [ Upstream commit 18a3ed59d09cf81a6447aadf6931bf0c9ffec5e0 ]
    
    Remove Rx overflow log messages as in an environment where logging results
    in network traffic logging may cause further overflows.
    
    Fixes: c156633f1353 ("Renesas Ethernet AVB driver proper")
    Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
    [simon: reworked changelog]
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc13325a2410c5190478caa5c807e4c23edf4093
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Oct 7 12:23:49 2016 +0200

    mac80211: calculate min channel width correctly
    
    
    [ Upstream commit 96aa2e7cf126773b16c6c19b7474a8a38d3c707e ]
    
    In the current minimum chandef code there's an issue in that the
    recalculation can happen after rate control is initialized for a
    station that has a wider bandwidth than the current chanctx, and
    then rate control can immediately start using those higher rates
    which could cause problems.
    
    Observe that first of all that this problem is because we don't
    take non-associated and non-uploaded stations into account. The
    restriction to non-associated is quite pointless and is one of
    the causes for the problem described above, since the rate init
    will happen before the station is set to associated; no frames
    could actually be sent until associated, but the rate table can
    already contain higher rates and that might cause problems.
    
    Also, rejecting non-uploaded stations is wrong, since the rate
    control can select higher rates for those as well.
    
    Secondly, it's then necessary to recalculate the minimal config
    before initializing rate control, so that when rate control is
    initialized, the higher rates are already available. This can be
    done easily by adding the necessary function call in rate init.
    
    Change-Id: Ib9bc02d34797078db55459d196993f39dcd43070
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fae478cd9311b1e8bf85f318a2098defabfb71e5
Author: Michal Hocko <mhocko@suse.com>
Date:   Tue Jan 10 16:57:39 2017 -0800

    mm: fix remote numa hits statistics
    
    
    [ Upstream commit 2df26639e708a88dcc22171949da638a9998f3bc ]
    
    Jia He has noticed that commit b9f00e147f27 ("mm, page_alloc: reduce
    branches in zone_statistics") has an unintentional side effect that
    remote node allocation requests are accounted as NUMA_MISS rathat than
    NUMA_HIT and NUMA_OTHER if such a request doesn't use __GFP_OTHER_NODE.
    
    There are many of these potentially because the flag is used very rarely
    while we have many users of __alloc_pages_node.
    
    Fix this by simply ignoring __GFP_OTHER_NODE (it can be removed in a
    follow up patch) and treat all allocations that were satisfied from the
    preferred zone's node as NUMA_HITS because this is the same node we
    requested the allocation from in most cases.  If this is not the local
    node then we just account it as NUMA_OTHER rather than NUMA_LOCAL.
    
    One downsize would be that an allocation request for a node which is
    outside of the mempolicy nodemask would be reported as a hit which is a
    bit weird but that was the case before b9f00e147f27 already.
    
    Fixes: b9f00e147f27 ("mm, page_alloc: reduce branches in zone_statistics")
    Link: http://lkml.kernel.org/r/20170102153057.9451-2-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Jia He <hejianet@gmail.com>
    Reviewed-by: Vlastimil Babka <vbabka@suse.cz> # with cbmc[1] superpowers
    Acked-by: Mel Gorman <mgorman@suse.de>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Taku Izumi <izumi.taku@jp.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71ab86262b66a594976259e1be18879ecfb16c7c
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Mon Jan 9 14:31:58 2017 -0800

    net: qrtr: Mark 'buf' as little endian
    
    
    [ Upstream commit 3512a1ad56174308a9fd3e10f4b1e3e152e9ec01 ]
    
    Failure to mark this pointer as __le32 causes checkers like
    sparse to complain:
    
    net/qrtr/qrtr.c:274:16: warning: incorrect type in assignment (different base types)
    net/qrtr/qrtr.c:274:16:    expected unsigned int [unsigned] [usertype] <noident>
    net/qrtr/qrtr.c:274:16:    got restricted __le32 [usertype] <noident>
    net/qrtr/qrtr.c:275:16: warning: incorrect type in assignment (different base types)
    net/qrtr/qrtr.c:275:16:    expected unsigned int [unsigned] [usertype] <noident>
    net/qrtr/qrtr.c:275:16:    got restricted __le32 [usertype] <noident>
    net/qrtr/qrtr.c:276:16: warning: incorrect type in assignment (different base types)
    net/qrtr/qrtr.c:276:16:    expected unsigned int [unsigned] [usertype] <noident>
    net/qrtr/qrtr.c:276:16:    got restricted __le32 [usertype] <noident>
    
    Silence it.
    
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Acked-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4081f91981b9db6ef27d4cbf9b475ccaf9a56fe
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Jan 4 17:37:27 2017 +1300

    libfs: Modify mount_pseudo_xattr to be clear it is not a userspace mount
    
    
    [ Upstream commit 75422726b0f717d67db3283c2eb5bc14fa2619c5 ]
    
    Add MS_KERNMOUNT to the flags that are passed.
    Use sget_userns and force &init_user_ns instead of calling sget so that
    even if called from a weird context the internal filesystem will be
    considered to be in the intial user namespace.
    
    Luis Ressel reported that the the failure to pass MS_KERNMOUNT into
    mount_pseudo broke his in development graphics driver that uses the
    generic drm infrastructure.  I am not certain the deriver was bug
    free in it's usage of that infrastructure but since
    mount_pseudo_xattr can never be triggered by userspace it is clearer
    and less error prone, and less problematic for the code to be explicit.
    
    Reported-by: Luis Ressel <aranea@aixah.de>
    Tested-by: Luis Ressel <aranea@aixah.de>
    Acked-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9a4e70f23c3b648a1cb60827f2580a897642963
Author: Vlad Tsyrklevich <vlad@tsyrklevich.net>
Date:   Mon Jan 9 20:57:48 2017 +0700

    net/appletalk: Fix kernel memory disclosure
    
    
    [ Upstream commit ce7e40c432ba84da104438f6799d460a4cad41bc ]
    
    ipddp_route structs contain alignment padding so kernel heap memory
    is leaked when they are copied to user space in
    ipddp_ioctl(SIOCFINDIPDDPRT). Change kmalloc() to kzalloc() to clear
    that memory.
    
    Signed-off-by: Vlad Tsyrklevich <vlad@tsyrklevich.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3a252a9924cb80678092e841cada6c48773eef2
Author: Ivan Vecera <cera@cera.cz>
Date:   Fri Jan 6 21:59:30 2017 +0100

    be2net: fix unicast list filling
    
    
    [ Upstream commit 6052cd1af86f9833b6b0b60d5d4787c4a06d65ea ]
    
    The adapter->pmac_id[0] item is used for primary MAC address but
    this is not true for adapter->uc_list[0] as is assumed in
    be_set_uc_list(). There are N UC addresses copied first from net_device
    to adapter->uc_list[1..N] and then N UC addresses from
    adapter->uc_list[0..N-1] are sent to HW. So the last UC address is never
    stored into HW and address 00:00:00:00;00:00 (from uc_list[0]) is used
    instead.
    
    Cc: Sathya Perla <sathya.perla@broadcom.com>
    Cc: Ajit Khaparde <ajit.khaparde@broadcom.com>
    Cc: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
    Cc: Somnath Kotur <somnath.kotur@broadcom.com>
    Fixes: b717241 be2net: replace polling with sleeping in the FW completion path
    Signed-off-by: Ivan Vecera <cera@cera.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4c3022e673a0c368e16d296691719a6f920ad74
Author: Ivan Vecera <cera@cera.cz>
Date:   Fri Jan 6 20:30:02 2017 +0100

    be2net: fix accesses to unicast list
    
    
    [ Upstream commit 1d0f110a2c6c4bca3dbcc4b0e27f1e3dc2d44a2c ]
    
    Commit 988d44b "be2net: Avoid redundant addition of mac address in HW"
    introduced be_dev_mac_add & be_uc_mac_add helpers that incorrectly
    access adapter->uc_list as an array of bytes instead of an array of
    be_eth_addr. Consequently NIC is not filled with valid data so unicast
    filtering is broken.
    
    Cc: Sathya Perla <sathya.perla@broadcom.com>
    Cc: Ajit Khaparde <ajit.khaparde@broadcom.com>
    Cc: Sriharsha Basavapatna <sriharsha.basavapatna@broadcom.com>
    Cc: Somnath Kotur <somnath.kotur@broadcom.com>
    Fixes: 988d44b be2net: Avoid redundant addition of mac address in HW
    Signed-off-by: Ivan Vecera <cera@cera.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 105b403ba0dedc930882e8aeae361d650b9c49d3
Author: David Forster <dforster@brocade.com>
Date:   Fri Jan 6 10:27:59 2017 +0000

    vti6: fix device register to report IFLA_INFO_KIND
    
    
    [ Upstream commit 93e246f783e6bd1bc64fdfbfe68b18161f69b28e ]
    
    vti6 interface is registered before the rtnl_link_ops block
    is attached. As a result the resulting RTM_NEWLINK is missing
    IFLA_INFO_KIND. Re-order attachment of rtnl_link_ops block to fix.
    
    Signed-off-by: Dave Forster <dforster@brocade.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08bd389c9ef830e5463fa0dda69370b4e3b14de3
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Tue Jan 3 13:22:34 2017 +0200

    ARM: OMAP1: DMA: Correct the number of logical channels
    
    
    [ Upstream commit 657279778af54f35e54b07b6687918f254a2992c ]
    
    OMAP1510, OMAP5910 and OMAP310 have only 9 logical channels.
    OMAP1610, OMAP5912, OMAP1710, OMAP730, and OMAP850 have 16 logical channels
    available.
    
    The wired 17 for the lch_count must have been used to cover the 16 + 1
    dedicated LCD channel, in reality we can only use 9 or 16 channels.
    
    The d->chan_count is not used by the omap-dma stack, so we can skip the
    setup. chan_count was configured to the number of logical channels and not
    the actual number of physical channels anyways.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Acked-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a777021eeb49279014e490835617dcb5f09d85c
Author: Adam Ford <aford173@gmail.com>
Date:   Tue Jan 3 11:37:48 2017 -0600

    ARM: OMAP2+: Fix WL1283 Bluetooth Baud Rate
    
    
    [ Upstream commit a3ac350793d90d1da631c8beeee9352387974ed5 ]
    
    Commit 485fa1261f78 ("ARM: OMAP2+: LogicPD Torpedo + Wireless: Add Bluetooth")
    set the wrong baud rate for the UART. The Baud rate was 300,000 and it should
    be 3,000,000 for WL1283.
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a97b72427e5f30c0711605fa16eed070ddb0a1b7
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Jan 3 16:34:49 2017 -0800

    net: systemport: Pad packet before inserting TSB
    
    
    [ Upstream commit 38e5a85562a6cd911fc26d951d576551a688574c ]
    
    Inserting the TSB means adding an extra 8 bytes in front the of packet
    that is going to be used as metadata information by the TDMA engine, but
    stripped off, so it does not really help with the packet padding.
    
    For some odd packet sizes that fall below the 60 bytes payload (e.g: ARP)
    we can end-up padding them after the TSB insertion, thus making them 64
    bytes, but with the TDMA stripping off the first 8 bytes, they could
    still be smaller than 64 bytes which is required to ingress the switch.
    
    Fix this by swapping the padding and TSB insertion, guaranteeing that
    the packets have the right sizes.
    
    Fixes: 80105befdb4b ("net: systemport: add Broadcom SYSTEMPORT Ethernet MAC driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcc7511ef2566a1ca1945f449122e7e34d43de2a
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Jan 3 16:34:48 2017 -0800

    net: systemport: Utilize skb_put_padto()
    
    
    [ Upstream commit bb7da333d0a9f3bddc08f84187b7579a3f68fd24 ]
    
    Since we need to pad our packets, utilize skb_put_padto() which
    increases skb->len by how much we need to pad, allowing us to eliminate
    the test on skb->len right below.
    
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30bd002c454ad54ccca08dc056577c94021085af
Author: Varun Prakash <varun@chelsio.com>
Date:   Tue Jan 3 21:25:48 2017 +0530

    libcxgb: fix error check for ip6_route_output()
    
    
    [ Upstream commit a9a8cdb368d99bb655b5cdabea560446db0527cc ]
    
    ip6_route_output() never returns NULL so
    check dst->error instead of !dst.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5eb97be8798189ee1080b225d0c8f14f54736bca
Author: Vincent Pelletier <plr.vincent@gmail.com>
Date:   Thu Dec 15 12:47:42 2016 +0000

    usb: gadget: f_fs: Fix ExtCompat descriptor validation
    
    
    [ Upstream commit 354bc45bf329494ef6051f3229ef50b9e2a7ea2a ]
    
    Reserved1 is documented as expected to be set to 0, but this test fails
    when it it set to 0. Reverse the condition.
    
    Signed-off-by: Vincent Pelletier <plr.vincent@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7468e767d8f2115427f2066203e5262f5dee8c5c
Author: M'boumba Cedric Madianga <cedric.madianga@gmail.com>
Date:   Tue Dec 13 14:40:46 2016 +0100

    dmaengine: stm32-dma: Fix null pointer dereference in stm32_dma_tx_status
    
    
    [ Upstream commit 57b5a32135c813f2ab669039fb4ec16b30cb3305 ]
    
    chan->desc is always set to NULL when a DMA transfer is complete.
    As a DMA transfer could be complete during the call of stm32_dma_tx_status,
    we need to be sure that chan->desc is not NULL before using this variable
    to avoid a null pointer deference issue.
    
    Signed-off-by: M'boumba Cedric Madianga <cedric.madianga@gmail.com>
    Reviewed-by: Ludovic BARRE <ludovic.barre@st.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Pierre-Yves MORDRET <pierre-yves.mordret@st.com>

commit 000e7180633f254aef401a8cbca7f470ead41fed
Author: M'boumba Cedric Madianga <cedric.madianga@gmail.com>
Date:   Tue Dec 13 14:40:43 2016 +0100

    dmaengine: stm32-dma: Set correct args number for DMA request from DT
    
    
    [ Upstream commit 7e96304d99477de1f70db42035071e56439da817 ]
    
    This patch sets the right number of arguments to be used for DMA clients
    which request channels from DT.
    
    Signed-off-by: M'boumba Cedric Madianga <cedric.madianga@gmail.com>
    Reviewed-by: Ludovic BARRE <ludovic.barre@st.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2d74d0e58b20d4464f9f24b33e083a3f6766aa6
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Fri Dec 30 19:48:20 2016 +0100

    l2tp: take remote address into account in l2tp_ip and l2tp_ip6 socket lookups
    
    
    [ Upstream commit a9b2dff80be979432484afaf7f8d8e73f9e8838a ]
    
    For connected sockets, __l2tp_ip{,6}_bind_lookup() needs to check the
    remote IP when looking for a matching socket. Otherwise a connected
    socket can receive traffic not originating from its peer.
    
    Drop l2tp_ip_bind_lookup() and l2tp_ip6_bind_lookup() instead of
    updating their prototype, as these functions aren't used.
    
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55c050ae5165bbeff669aaf32c7ed4dfc8f513b4
Author: Slava Shwartsman <slavash@mellanox.com>
Date:   Thu Dec 29 18:37:12 2016 +0200

    net/mlx4_en: Fix type mismatch for 32-bit systems
    
    
    [ Upstream commit 61b6034c6cfdcb265bb453505c3d688e7567727a ]
    
    is_power_of_2 expects unsigned long and we pass u64 max_val_cycles,
    this will be truncated on 32 bit systems, and the result is not what we
    were expecting.
    div_u64 expects u32 as a second argument and we pass
    max_val_cycles_rounded which is u64 hence it will always be truncated.
    Fix was tested on both 64 and 32 bit systems and got same results for
    max_val_cycles and max_val_cycles_rounded.
    
    Fixes: 4850cf458157 ("net/mlx4_en: Resolve dividing by zero in 32-bit system")
    Signed-off-by: Slava Shwartsman <slavash@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 771c831c1bdef159ff6fa01a6c49f0890b1f3066
Author: Jan Kara <jack@suse.cz>
Date:   Wed Aug 10 17:10:28 2016 +0200

    dax: Avoid page invalidation races and unnecessary radix tree traversals
    
    
    [ Upstream commit e3fce68cdbed297d927e993b3ea7b8b1cee545da ]
    
    Currently dax_iomap_rw() takes care of invalidating page tables and
    evicting hole pages from the radix tree when write(2) to the file
    happens. This invalidation is only necessary when there is some block
    allocation resulting from write(2). Furthermore in current place the
    invalidation is racy wrt page fault instantiating a hole page just after
    we have invalidated it.
    
    So perform the page invalidation inside dax_iomap_actor() where we can
    do it only when really necessary and after blocks have been allocated so
    nobody will be instantiating new hole pages anymore.
    
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2383ba62b5352e02df75d3b6dff2dfd156ce8f1c
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Fri Aug 25 07:39:16 2017 +0200

    iio: adc: ti-ads1015: add 10% to conversion wait time
    
    
    [ Upstream commit fe895ac88b9fbdf2026f0bfd56c82747bb9d7c48 ]
    
    As user's guide "ADS1015EVM, ADS1115EVM, ADS1015EVM-PDK, ADS1115EVM-PDK
    User Guide (Rev. B)" (http://www.ti.com/lit/ug/sbau157b/sbau157b.pdf)
    states at page 16:
    "Note that both the ADS1115 and ADS1015 have internal clocks with a ±10%
    accuracy. If performing FFT tests, frequencies may appear to be incorrect
    as a result of this tolerance range.", add those 10% to converion wait
    time.
    
    Cc: Daniel Baluta <daniel.baluta@gmail.com>
    Cc: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Reviewed-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7aa534b8a33f25dbaef0381c86b4c49bf0fedf25
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Sep 21 12:12:17 2017 -0300

    tools include: Do not use poison with C++
    
    
    [ Upstream commit 6ae8eefc6c8fe050f057781b70a83262eb0a61ee ]
    
    LIST_POISON[12] are used to initialize list_head and hlist_node
    pointers, and do void pointer arithmetic, which C++ doesn't like, so, to
    avoid drifting from the kernel by introducing some HLIST_POISON to do
    away with void pointer math, just make those poisoned pointers be NULL
    when building it with a C++ compiler.
    
    Noticed with:
    
      $ make LLVM_CONFIG=/usr/bin/llvm-config-3.9 LIBCLANGLLVM=1
        CXX      util/c++/clang.o
        CXX    util/c++/clang-test.o
      In file included from /home/lizj/linux/tools/include/linux/list.h:5:0,
                       from /home/lizj/linux/tools/perf/util/namespaces.h:13,
                       from /home/lizj/linux/tools/perf/util/util.h:15,
                       from /home/lizj/linux/tools/perf/util/util-cxx.h:20,
                       from util/c++/clang-c.h:5,
                       from util/c++/clang-test.cpp:2:
      /home/lizj/linux/tools/include/linux/list.h: In function ‘void list_del(list_head*)’:
      /home/lizj/linux/tools/include/linux/poison.h:14:31: error: pointer of type ‘void *’ used in arithmetic [-Werror=pointer-arith]
       # define POISON_POINTER_DELTA 0
                                     ^
      /home/lizj/linux/tools/include/linux/poison.h:22:41: note: in expansion of macro ‘POISON_POINTER_DELTA’
       #define LIST_POISON1  ((void *) 0x100 + POISON_POINTER_DELTA)
                                               ^
      /home/lizj/linux/tools/include/linux/list.h:107:16: note: in expansion of macro ‘LIST_POISON1’
        entry->next = LIST_POISON1;
                      ^
      In file included from /home/lizj/linux/tools/perf/util/namespaces.h:13:0,
                       from /home/lizj/linux/tools/perf/util/util.h:15,
                       from /home/lizj/linux/tools/perf/util/util-cxx.h:20,
                       from util/c++/clang-c.h:5,
                       from util/c++/clang-test.cpp:2:
      /home/lizj/linux/tools/include/linux/list.h:107:14: error: invalid conversion from ‘void*’ to ‘list_head*’ [-fpermissive]
    
    Reported-by: Li Zhijian <lizhijian@cn.fujitsu.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Philip Li <philip.li@intel.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/n/tip-m5ei2o0mjshucbr28baf5lqz@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a65f24aac76b3834743ec1eaf9281cbd42658269
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Sep 19 19:01:40 2017 +0900

    kprobes/x86: Disable preemption in ftrace-based jprobes
    
    
    [ Upstream commit 5bb4fc2d8641219732eb2bb654206775a4219aca ]
    
    Disable preemption in ftrace-based jprobe handlers as
    described in Documentation/kprobes.txt:
    
      "Probe handlers are run with preemption disabled."
    
    This will fix jprobes behavior when CONFIG_PREEMPT=y.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexei Starovoitov <ast@fb.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E . McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/150581530024.32348.9863783558598926771.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a730e156bb75094da4deb3d704a7b00c5fbff34e
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Wed Sep 13 10:12:09 2017 +0200

    perf test attr: Fix ignored test case result
    
    
    [ Upstream commit 22905582f6dd4bbd0c370fe5732c607452010c04 ]
    
    Command perf test -v 16 (Setup struct perf_event_attr test) always
    reports success even if the test case fails.  It works correctly if you
    also specify -F (for don't fork).
    
       root@s35lp76 perf]# ./perf test -v 16
       15: Setup struct perf_event_attr               :
       --- start ---
       running './tests/attr/test-record-no-delay'
       [ perf record: Woken up 1 times to write data ]
       [ perf record: Captured and wrote 0.002 MB /tmp/tmp4E1h7R/perf.data
         (1 samples) ]
       expected task=0, got 1
       expected precise_ip=0, got 3
       expected wakeup_events=1, got 0
       FAILED './tests/attr/test-record-no-delay' - match failure
       test child finished with 0
       ---- end ----
       Setup struct perf_event_attr: Ok
    
    The reason for the wrong error reporting is the return value of the
    system() library call. It is called in run_dir() file tests/attr.c and
    returns the exit status, in above case 0xff00.
    
    This value is given as parameter to the exit() function which can only
    handle values 0-0xff.
    
    The child process terminates with exit value of 0 and the parent does
    not detect any error.
    
    This patch corrects the error reporting and prints the correct test
    result.
    
    Signed-off-by: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Thomas-Mich Richter <tmricht@linux.vnet.ibm.com>
    LPU-Reference: 20170913081209.39570-2-tmricht@linux.vnet.ibm.com
    Link: http://lkml.kernel.org/n/tip-rdube6rfcjsr1nzue72c7lqn@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f6e33aad04888d65c3571986dc9b4e81a6f9a92
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Oct 1 02:18:37 2017 +0100

    usbip: tools: Install all headers needed for libusbip development
    
    
    [ Upstream commit c15562c0dcb2c7f26e891923b784cf1926b8c833 ]
    
    usbip_host_driver.h now depends on several additional headers, which
    need to be installed along with it.
    
    Fixes: 021aed845303 ("staging: usbip: userspace: migrate usbip_host_driver ...")
    Fixes: 3391ba0e2792 ("usbip: tools: Extract generic code to be shared with ...")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5840a285a1a2d21c27bb9443236b09220ba40679
Author: Jibin Xu <jibin.xu@windriver.com>
Date:   Sun Sep 10 20:11:42 2017 -0700

    sysrq : fix Show Regs call trace on ARM
    
    
    [ Upstream commit b00bebbc301c8e1f74f230dc82282e56b7e7a6db ]
    
    When kernel configuration SMP,PREEMPT and DEBUG_PREEMPT are enabled,
    echo 1 >/proc/sys/kernel/sysrq
    echo p >/proc/sysrq-trigger
    kernel will print call trace as below:
    
    sysrq: SysRq : Show Regs
    BUG: using __this_cpu_read() in preemptible [00000000] code: sh/435
    caller is __this_cpu_preempt_check+0x18/0x20
    Call trace:
    [<ffffff8008088e80>] dump_backtrace+0x0/0x1d0
    [<ffffff8008089074>] show_stack+0x24/0x30
    [<ffffff8008447970>] dump_stack+0x90/0xb0
    [<ffffff8008463950>] check_preemption_disabled+0x100/0x108
    [<ffffff8008463998>] __this_cpu_preempt_check+0x18/0x20
    [<ffffff80084c9194>] sysrq_handle_showregs+0x1c/0x40
    [<ffffff80084c9c7c>] __handle_sysrq+0x12c/0x1a0
    [<ffffff80084ca140>] write_sysrq_trigger+0x60/0x70
    [<ffffff8008251e00>] proc_reg_write+0x90/0xd0
    [<ffffff80081f1788>] __vfs_write+0x48/0x90
    [<ffffff80081f241c>] vfs_write+0xa4/0x190
    [<ffffff80081f3354>] SyS_write+0x54/0xb0
    [<ffffff80080833f0>] el0_svc_naked+0x24/0x28
    
    This can be seen on a common board like an r-pi3.
    This happens because when echo p >/proc/sysrq-trigger,
    get_irq_regs() is called outside of IRQ context,
    if preemption is enabled in this situation,kernel will
    print the call trace. Since many prior discussions on
    the mailing lists have made it clear that get_irq_regs
    either just returns NULL or stale data when used outside
    of IRQ context,we simply avoid calling it outside of
    IRQ context.
    
    Signed-off-by: Jibin Xu <jibin.xu@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f44b524a0ad75c5c7821d3cfb83e35dafbc5ab8
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Oct 16 12:40:29 2017 -0500

    EDAC, sb_edac: Fix missing break in switch
    
    
    [ Upstream commit a8e9b186f153a44690ad0363a56716e7077ad28c ]
    
    Add missing break statement in order to prevent the code from falling
    through.
    
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20171016174029.GA19757@embeddedor.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61b7a6f1cea31d5b96419e25054b0f4177e1f576
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Wed Oct 18 10:21:07 2017 -0700

    x86/entry: Use SYSCALL_DEFINE() macros for sys_modify_ldt()
    
    
    [ Upstream commit da20ab35180780e4a6eadc804544f1fa967f3567 ]
    
    We do not have tracepoints for sys_modify_ldt() because we define
    it directly instead of using the normal SYSCALL_DEFINEx() macros.
    
    However, there is a reason sys_modify_ldt() does not use the macros:
    it has an 'int' return type instead of 'unsigned long'.  This is
    a bug, but it's a bug cemented in the ABI.
    
    What does this mean?  If we return -EINVAL from a function that
    returns 'int', we have 0x00000000ffffffea in %rax.  But, if we
    return -EINVAL from a function returning 'unsigned long', we end
    up with 0xffffffffffffffea in %rax, which is wrong.
    
    To work around this and maintain the 'int' behavior while using
    the SYSCALL_DEFINEx() macros, so we add a cast to 'unsigned int'
    in both implementations of sys_modify_ldt().
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Brian Gerst <brgerst@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20171018172107.1A79C532@viggo.jf.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a816a7e1e70b757bd54528240b34d3c9b6049e1e
Author: Aaron Sierra <asierra@xes-inc.com>
Date:   Wed Oct 4 10:01:28 2017 -0500

    serial: 8250: Preserve DLD[7:4] for PORT_XR17V35X
    
    
    [ Upstream commit 0ab84da2e076948c49d36197ee7d254125c53eab ]
    
    The upper four bits of the XR17V35x fractional divisor register (DLD)
    control general chip function (RS-485 direction pin polarity, multidrop
    mode, XON/XOFF parity check, and fast IR mode). Don't allow these bits
    to be clobbered when setting the baudrate.
    
    Signed-off-by: Aaron Sierra <asierra@xes-inc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68dfd4dd09003e6171208ea12c521186c809d8db
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Oct 21 01:02:07 2017 +0300

    usb: phy: tahvo: fix error handling in tahvo_usb_probe()
    
    
    [ Upstream commit ce035409bfa892a2fabb89720b542e1b335c3426 ]
    
    If devm_extcon_dev_allocate() fails, we should disable clk before return.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: 860d2686fda7 ("usb: phy: tahvo: Use devm_extcon_dev_[allocate|register]() and replace deprecated API")
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de139e81d350526d2b44f5e5192a32443be08238
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Wed Sep 27 11:04:40 2017 +0530

    mmc: sdhci-msm: fix issue with power irq
    
    
    [ Upstream commit c7ccee224d2d551f712752c4a16947f6529d6506 ]
    
    SDCC controller reset (SW_RST) during probe may trigger power irq if
    previous status of PWRCTL was either BUS_ON or IO_HIGH_V. So before we
    enable the power irq interrupt in GIC (by registering the interrupt
    handler), we need to ensure that any pending power irq interrupt status
    is acknowledged otherwise power irq interrupt handler would be fired
    prematurely.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Vijay Viswanath <vviswana@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e042fd0f03181475711c5350e88ac1f9ed5dce12
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 30 11:35:27 2017 +0100

    spi: spi-axi: fix potential use-after-free after deregistration
    
    
    [ Upstream commit 4d5e0689dc9d5640ad46cdfbe1896b74d8df1661 ]
    
    Take an extra reference to the controller before deregistering it to
    prevent use-after-free in the interrupt handler in case an interrupt
    fires before the line is disabled.
    
    Fixes: b1353d1c1d45 ("spi: Add Analog Devices AXI SPI Engine controller support")
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3d7cc5a84b438cf738fe89310cac92f7f8dc7fe
Author: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
Date:   Thu Nov 2 10:32:36 2017 +0100

    spi: sh-msiof: Fix DMA transfer size check
    
    
    [ Upstream commit 36735783fdb599c94b9c86824583df367c65900b ]
    
    DMA supports 32-bit words only,
    even if BITLEN1 of SITMDR2 register is 16bit.
    
    Fixes: b0d0ce8b6b91 ("spi: sh-msiof: Add DMA support")
    Signed-off-by: Hiromitsu Yamasaki <hiromitsu.yamasaki.ym@renesas.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Dirk Behme <dirk.behme@de.bosch.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee08fca9a14d846120d5c00af803002dbac8223b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Oct 20 20:40:24 2017 +0200

    staging: rtl8188eu: avoid a null dereference on pmlmepriv
    
    
    [ Upstream commit 123c0aab0050cd0e07ce18e453389fbbb0a5a425 ]
    
    There is a check on pmlmepriv before dereferencing it when
    vfree'ing pmlmepriv->free_bss_buf however the previous call
    to rtw_free_mlme_priv_ie_data deferences pmlmepriv causing
    a null pointer deference if it is null.  Avoid this by also
    calling rtw_free_mlme_priv_ie_data if the pointer is non-null.
    
    Detected by CoverityScan, CID#1230262 ("Dereference before null check")
    Fixes: 7b464c9fa5cc ("staging: r8188eu: Add files for new driver - part 4")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 946d33e1e6cd99e7191a6446c82ebc66d5432aab
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Oct 28 11:35:49 2017 +0200

    serial: 8250_fintek: Fix rs485 disablement on invalid ioctl()
    
    
    [ Upstream commit 3236a965486ba0c6043cf2c7b51943d8b382ae29 ]
    
    This driver's ->rs485_config callback checks if SER_RS485_RTS_ON_SEND
    and SER_RS485_RTS_AFTER_SEND have the same value.  If they do, it means
    the user has passed in invalid data with the TIOCSRS485 ioctl()
    since RTS must have a different polarity when sending and when not
    sending.  In this case, rs485 mode is not enabled (the RS485_URA bit
    is not set in the RS485 Enable Register) and this is supposed to be
    signaled back to the user by clearing the SER_RS485_ENABLED bit in
    struct serial_rs485 ... except a missing tilde character is preventing
    that from happening.
    
    Fixes: 28e3fb6c4dce ("serial: Add support for Fintek F81216A LPC to 4 UART")
    Cc: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Cc: "Ji-Ze Hong (Peter Hong)" <hpeter@gmail.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 510f6573ef5da5cc678e0fdb955f95c6125cd3bd
Author: Greg Ungerer <gerg@linux-m68k.org>
Date:   Tue Sep 5 22:57:06 2017 +1000

    m68k: fix ColdFire node shift size calculation
    
    
    [ Upstream commit f55ab8f27548ff3431a6567d400c6757c49fd520 ]
    
    The m68k pg_data_table is a fix size array defined in arch/m68k/mm/init.c.
    Index numbers within it are defined based on memory size. But for Coldfire
    these don't take into account a non-zero physical RAM base address, and this
    causes us to access past the end of this array at system start time.
    
    Change the node shift calculation so that we keep the index inside its range.
    
    Reported-by: Angelo Dureghello <angelo@sysam.it>
    Tested-by: Angelo Dureghello <angelo@sysam.it>
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5f2421df13523e46697d453575c020af57c945b
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Mon Nov 6 01:32:20 2017 +0000

    staging: greybus: loopback: Fix iteration count on async path
    
    
    [ Upstream commit 44b02da39210e6dd67e39ff1f48d30c56d384240 ]
    
    Commit 12927835d211 ("greybus: loopback: Add asynchronous bi-directional
    support") does what it says on the tin - namely, adds support for
    asynchronous bi-directional loopback operations.
    
    What it neglects to do though is increment the per-connection
    gb->iteration_count on an asynchronous operation error. This patch fixes
    that omission.
    
    Fixes: 12927835d211 ("greybus: loopback: Add asynchronous bi-directional support")
    
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Reported-by: Mitch Tasman <tasman@leaflabs.com>
    Reviewed-by: Johan Hovold <johan@kernel.org>
    Cc: Alex Elder <elder@kernel.org>
    Cc: Mitch Tasman <tasman@leaflabs.com>
    Cc: greybus-dev@lists.linaro.org
    Cc: devel@driverdev.osuosl.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a95afc485767641f712a46086b858e4c7ae2996
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sat Nov 4 04:19:52 2017 -0700

    selftests/x86/ldt_get: Add a few additional tests for limits
    
    
    [ Upstream commit fec8f5ae1715a01c72ad52cb2ecd8aacaf142302 ]
    
    We weren't testing the .limit and .limit_in_pages fields very well.
    Add more tests.
    
    This addition seems to trigger the "bits 16:19 are undefined" issue
    that was fixed in an earlier patch.  I think that, at least on my
    CPU, the high nibble of the limit ends in LAR bits 16:19.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/5601c15ea9b3113d288953fd2838b18bedf6bc67.1509794321.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63074a793d69d9fd56e1456d598f4df9d35d9b70
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Mon Oct 30 14:38:58 2017 +0100

    s390/pci: do not require AIS facility
    
    
    [ Upstream commit 48070c73058be6de9c0d754d441ed7092dfc8f12 ]
    
    As of today QEMU does not provide the AIS facility to its guest.  This
    prevents Linux guests from using PCI devices as the ais facility is
    checked during init. As this is just a performance optimization, we can
    move the ais check into the code where we need it (calling the SIC
    instruction). This is used at initialization and on interrupt. Both
    places do not require any serialization, so we can simply skip the
    instruction.
    
    Since we will now get all interrupts, we can also avoid the 2nd scan.
    As we can have multiple interrupts in parallel we might trigger spurious
    irqs more often for the non-AIS case but the core code can handle that.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>
    Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Acked-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0a46089fe818d33b42fc7c399239db5e4f7bfcf
Author: Boshi Wang <wangboshi@huawei.com>
Date:   Fri Oct 20 16:01:03 2017 +0800

    ima: fix hash algorithm initialization
    
    
    [ Upstream commit ebe7c0a7be92bbd34c6ff5b55810546a0ee05bee ]
    
    The hash_setup function always sets the hash_setup_done flag, even
    when the hash algorithm is invalid.  This prevents the default hash
    algorithm defined as CONFIG_IMA_DEFAULT_HASH from being used.
    
    This patch sets hash_setup_done flag only for valid hash algorithms.
    
    Fixes: e7a2ad7eb6f4 "ima: enable support for larger default filedata hash algorithms"
    Signed-off-by: Boshi Wang <wangboshi@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4f12192d9e2fae46661b4be364c3ec375d3d7c3
Author: Sebastian Sjoholm <ssjoholm@mac.com>
Date:   Mon Nov 20 19:29:32 2017 +0100

    USB: serial: option: add Quectel BG96 id
    
    commit c654b21ede93845863597de9ad774fd30db5f2ab upstream.
    
    Quectel BG96 is an Qualcomm MDM9206 based IoT modem, supporting both
    CAT-M and NB-IoT. Tested hardware is BG96 mounted on Quectel
    development board (EVB). The USB id is added to option.c to allow
    DIAG,GPS,AT and modem communication with the BG96.
    
    Signed-off-by: Sebastian Sjoholm <ssjoholm@mac.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 232b47b3c88af1da737cd7760f247c4ed58168cf
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/runtime instrumentation: simplify task exit handling
    
    commit 8d9047f8b967ce6181fd824ae922978e1b055cc0 upstream.
    
    Free data structures required for runtime instrumentation from
    arch_release_task_struct(). This allows to simplify the code a bit,
    and also makes the semantics a bit easier: arch_release_task_struct()
    is never called from the task that is being removed.
    
    In addition this allows to get rid of exit_thread() in a later patch.
    
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65e6599937d1006a278d29d4b8e742759947ac8f
Author: Matt Wilson <msw@amazon.com>
Date:   Mon Nov 13 11:31:31 2017 -0800

    serial: 8250_pci: Add Amazon PCI serial device ID
    
    commit 3bfd1300abfe3adb18e84a89d97a0e82a22124bb upstream.
    
    This device will be used in future Amazon EC2 instances as the primary
    serial port (i.e., data sent to this port will be available via the
    GetConsoleOuput [1] EC2 API).
    
    [1] http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html
    
    Signed-off-by: Matt Wilson <msw@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ad14c9c646b6d8accb48e8bbcfb201506a9884b
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Nov 14 01:31:15 2017 -0500

    usb: quirks: Add no-lpm quirk for KY-688 USB 3.1 Type-C Hub
    
    commit e43a12f1793ae1fe006e26fe9327a8840a92233c upstream.
    
    KY-688 USB 3.1 Type-C Hub internally uses a Genesys Logic hub to connect
    to Realtek r8153.
    
    Similar to commit ("7496cfe5431f2 usb: quirks: Add no-lpm quirk for Moshi
    USB to Ethernet Adapter"), no-lpm can make r8153 ethernet work.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3789201628f5b2d58289682bc38f7a601807e2b3
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Nov 14 19:27:22 2017 +0100

    uas: Always apply US_FL_NO_ATA_1X quirk to Seagate devices
    
    commit 7fee72d5e8f1e7b8d8212e28291b1a0243ecf2f1 upstream.
    
    We've been adding this as a quirk on a per device basis hoping that
    newer disk enclosures would do better, but that has not happened,
    so simply apply this quirk to all Seagate devices.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee23ae915fa74956503507c1e55cbb2102f349ec
Author: Wang Nan <wangnan0@huawei.com>
Date:   Wed Nov 29 16:09:58 2017 -0800

    mm, oom_reaper: gather each vma to prevent leaking TLB entry
    
    commit 687cb0884a714ff484d038e9190edc874edcf146 upstream.
    
    tlb_gather_mmu(&tlb, mm, 0, -1) means gathering the whole virtual memory
    space.  In this case, tlb->fullmm is true.  Some archs like arm64
    doesn't flush TLB when tlb->fullmm is true:
    
      commit 5a7862e83000 ("arm64: tlbflush: avoid flushing when fullmm == 1").
    
    Which causes leaking of tlb entries.
    
    Will clarifies his patch:
     "Basically, we tag each address space with an ASID (PCID on x86) which
      is resident in the TLB. This means we can elide TLB invalidation when
      pulling down a full mm because we won't ever assign that ASID to
      another mm without doing TLB invalidation elsewhere (which actually
      just nukes the whole TLB).
    
      I think that means that we could potentially not fault on a kernel
      uaccess, because we could hit in the TLB"
    
    There could be a window between complete_signal() sending IPI to other
    cores and all threads sharing this mm are really kicked off from cores.
    In this window, the oom reaper may calls tlb_flush_mmu_tlbonly() to
    flush TLB then frees pages.  However, due to the above problem, the TLB
    entries are not really flushed on arm64.  Other threads are possible to
    access these pages through TLB entries.  Moreover, a copy_to_user() can
    also write to these pages without generating page fault, causes
    use-after-free bugs.
    
    This patch gathers each vma instead of gathering full vm space.  In this
    case tlb->fullmm is not true.  The behavior of oom reaper become similar
    to munmapping before do_exit, which should be safe for all archs.
    
    Link: http://lkml.kernel.org/r/20171107095453.179940-1-wangnan0@huawei.com
    Fixes: aac453635549 ("mm, oom: introduce oom reaper")
    Signed-off-by: Wang Nan <wangnan0@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Bob Liu <liubo95@huawei.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [backported to 4.9 stable tree]
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0de12a778b923807017d133ba5c0ef2d2a8444e1
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Wed Nov 9 10:46:21 2016 +0200

    Revert "crypto: caam - get rid of tasklet"
    
    commit 2b163b5bce04546da72617bfb6c8bf07a45c4b17 upstream.
    
    This reverts commit 66d2e2028091a074aa1290d2eeda5ddb1a6c329c.
    
    Quoting from Russell's findings:
    https://www.mail-archive.com/linux-crypto@vger.kernel.org/msg21136.html
    
    [quote]
    Okay, I've re-tested, using a different way of measuring, because using
    openssl speed is impractical for off-loaded engines.  I've decided to
    use this way to measure the performance:
    
    dd if=/dev/zero bs=1048576 count=128 | /usr/bin/time openssl dgst -md5
    
    For the threaded IRQs case gives:
    
    0.05user 2.74system 0:05.30elapsed 52%CPU (0avgtext+0avgdata 2400maxresident)k
    0.06user 2.52system 0:05.18elapsed 49%CPU (0avgtext+0avgdata 2404maxresident)k
    0.12user 2.60system 0:05.61elapsed 48%CPU (0avgtext+0avgdata 2460maxresident)k
            => 5.36s => 25.0MB/s
    
    and the tasklet case:
    
    0.08user 2.53system 0:04.83elapsed 54%CPU (0avgtext+0avgdata 2468maxresident)k
    0.09user 2.47system 0:05.16elapsed 49%CPU (0avgtext+0avgdata 2368maxresident)k
    0.10user 2.51system 0:04.87elapsed 53%CPU (0avgtext+0avgdata 2460maxresident)k
            => 4.95 => 27.1MB/s
    
    which corresponds to an 8% slowdown for the threaded IRQ case.  So,
    tasklets are indeed faster than threaded IRQs.
    
    [...]
    
    I think I've proven from the above that this patch needs to be reverted
    due to the performance regression, and that there _is_ most definitely
    a deterimental effect of switching from tasklets to threaded IRQs.
    [/quote]
    
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cffc01d24d2591cd2184c13fba32f50abfd20e68
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Nov 10 10:15:28 2017 +0100

    drm/fsl-dcu: enable IRQ before drm_atomic_helper_resume()
    
    commit 9fd99f4f3f5e13ce959900ae57d64b1bdb51d823 upstream.
    
    The resume helpers wait for a vblank to occurre hence IRQ need
    to be enabled. This avoids a warning as follows during resume:
      WARNING: CPU: 0 PID: 314 at drivers/gpu/drm/drm_atomic_helper.c:1249 drm_atomic_helper_wait_for_vblanks.part.1+0x284/0x288
      [CRTC:28:crtc-0] vblank wait timed out
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48f4d1f7fe48627a4c5c9332bcdf0f2a906e2f20
Author: Stefan Agner <stefan@agner.ch>
Date:   Thu Nov 9 15:39:56 2017 +0100

    drm/fsl-dcu: avoid disabling pixel clock twice on suspend
    
    commit 9306e996574f7f57136a62e49cd0075f85713623 upstream.
    
    With commit 0a70c998d0c5 ("drm/fsl-dcu: enable pixel clock when
    enabling CRTC") the pixel clock is controlled by the CRTC code.
    Disabling the pixel clock in suspend leads to a warning due to
    the second clk_disable_unprepare call:
      WARNING: CPU: 0 PID: 359 at drivers/clk/clk.c:594 clk_core_disable+0x8c/0x90
    
    Remove clk_disable_unprepare call for pixel clock to avoid
    unbalanced clock disable on suspend.
    
    Fixes: 0a70c998d0c5 ("drm/fsl-dcu: enable pixel clock when enabling CRTC")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9db9b5f2b1b691c78b239a71a4b6a8d950323a78
Author: Rui Hua <huarui.dev@gmail.com>
Date:   Fri Nov 24 15:14:26 2017 -0800

    bcache: recover data from backing when data is clean
    
    commit e393aa2446150536929140739f09c6ecbcbea7f0 upstream.
    
    When we send a read request and hit the clean data in cache device, there
    is a situation called cache read race in bcache(see the commit in the tail
    of cache_look_up(), the following explaination just copy from there):
    The bucket we're reading from might be reused while our bio is in flight,
    and we could then end up reading the wrong data. We guard against this
    by checking (in bch_cache_read_endio()) if the pointer is stale again;
    if so, we treat it as an error (s->iop.error = -EINTR) and reread from
    the backing device (but we don't pass that error up anywhere)
    
    It should be noted that cache read race happened under normal
    circumstances, not the circumstance when SSD failed, it was counted
    and shown in  /sys/fs/bcache/XXX/internal/cache_read_races.
    
    Without this patch, when we use writeback mode, we will never reread from
    the backing device when cache read race happened, until the whole cache
    device is clean, because the condition
    (s->recoverable && (dc && !atomic_read(&dc->has_dirty))) is false in
    cached_dev_read_error(). In this situation, the s->iop.error(= -EINTR)
    will be passed up, at last, user will receive -EINTR when it's bio end,
    this is not suitable, and wield to up-application.
    
    In this patch, we use s->read_dirty_data to judge whether the read
    request hit dirty data in cache device, it is safe to reread data from
    the backing device when the read request hit clean data. This can not
    only handle cache read race, but also recover data when failed read
    request from cache device.
    
    [edited by mlyle to fix up whitespace, commit log title, comment
    spelling]
    
    Fixes: d59b23795933 ("bcache: only permit to recovery read error when cache device is clean")
    Signed-off-by: Hua Rui <huarui.dev@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 322e659a03dcec9e19a2bbd116ee8f1c978a7030
Author: Coly Li <colyli@suse.de>
Date:   Mon Oct 30 14:46:31 2017 -0700

    bcache: only permit to recovery read error when cache device is clean
    
    commit d59b23795933678c9638fd20c942d2b4f3cd6185 upstream.
    
    When bcache does read I/Os, for example in writeback or writethrough mode,
    if a read request on cache device is failed, bcache will try to recovery
    the request by reading from cached device. If the data on cached device is
    not synced with cache device, then requester will get a stale data.
    
    For critical storage system like database, providing stale data from
    recovery may result an application level data corruption, which is
    unacceptible.
    
    With this patch, for a failed read request in writeback or writethrough
    mode, recovery a recoverable read request only happens when cache device
    is clean. That is to say, all data on cached device is up to update.
    
    For other cache modes in bcache, read request will never hit
    cached_dev_read_error(), they don't need this patch.
    
    Please note, because cache mode can be switched arbitrarily in run time, a
    writethrough mode might be switched from a writeback mode. Therefore
    checking dc->has_data in writethrough mode still makes sense.
    
    Changelog:
    V4: Fix parens error pointed by Michael Lyle.
    v3: By response from Kent Oversteet, he thinks recovering stale data is a
        bug to fix, and option to permit it is unnecessary. So this version
        the sysfs file is removed.
    v2: rename sysfs entry from allow_stale_data_on_failure  to
        allow_stale_data_on_failure, and fix the confusing commit log.
    v1: initial patch posted.
    
    [small change to patch comment spelling by mlyle]
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reported-by: Arne Wolf <awolf@lenovo.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Cc: Kent Overstreet <kent.overstreet@gmail.com>
    Cc: Nix <nix@esperi.org.uk>
    Cc: Kai Krakow <hurikhan77@gmail.com>
    Cc: Eric Wheeler <bcache@lists.ewheeler.net>
    Cc: Junhui Tang <tang.junhui@zte.com.cn>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
