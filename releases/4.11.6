commit abb04342fcae06b3f6fd5831da6dcb4d26196e58
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jun 17 06:47:27 2017 +0200

    Linux 4.11.6

commit 6a9a78ba17df6ee1e2d990bc67f362abac3e999e
Author: Kai Chen <kai.chen@intel.com>
Date:   Tue May 23 14:58:11 2017 -0700

    drm/i915: Disable decoupled MMIO
    
    commit 4c4c565513cca1c53a12956640b5915727431631 upstream.
    
    The decoupled MMIO feature doesn't work as intended by HW team. Enabling
    it with forcewake will only make debugging efforts more difficult, so
    let's disable it.
    
    Fixes: 85ee17ebeedd ("drm/i915/bxt: Broxton decoupled MMIO")
    Cc: Zhe Wang <zhe1.wang@intel.com>
    Cc: Praveen Paneri <praveen.paneri@intel.com>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: Daniel Vetter <daniel.vetter@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: intel-gfx@lists.freedesktop.org
    Signed-off-by: Kai Chen <kai.chen@intel.com>
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170523215812.18328-2-kai.chen@intel.com
    (cherry picked from commit 0051c10acabb631cfd439eae73289e6e4c39b2b7)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b094fd12b937cf73dc35b521b401595ad6e5791b
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Wed May 31 17:42:36 2017 +0200

    drm/i915: Always recompute watermarks when distrust_bios_wm is set, v2.
    
    commit 4e3aed844547f63614363a386de126e6304e55fb upstream.
    
    On some systems there can be a race condition in which no crtc state is
    added to the first atomic commit. This results in all crtc's having a
    null DDB allocation, causing a FIFO underrun on any update until the
    first modeset.
    
    Changes since v1:
    - Do not take the connection_mutex, this is already done below.
    
    Reported-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Inspired-by: Mahesh Kumar <mahesh1.kumar@intel.com>
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Fixes: 98d39494d375 ("drm/i915/gen9: Compute DDB allocation at atomic
    check time (v4)")
    Cc: Mahesh Kumar <mahesh1.kumar@intel.com>
    Cc: Matt Roper <matthew.d.roper@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170531154236.27180-1-maarten.lankhorst@linux.intel.com
    Reviewed-by: Mahesh Kumar <mahesh1.kumar@intel.com>
    Reviewed-by: Matt Roper <matthew.d.roper@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    (cherry picked from commit 367d73d2806085bb507ab44c1f532640917fd5ca)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>

commit dcdac1c29f1655943bf7353f28fe3f02a9e4599d
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed May 31 20:05:14 2017 +0100

    drm/i915: Guard against i915_ggtt_disable_guc() being invoked unconditionally
    
    commit d90c98905afd00c15d5d255d845b646a37173ce9 upstream.
    
    Commit 7c3f86b6dc51 ("drm/i915: Invalidate the guc ggtt TLB upon
    insertion") added the restoration of the invalidation routine after the
    GuC was disabled, but missed that the GuC was unconditionally disabled
    when not used. This then overwrites the invalidate routine for the older
    chipsets, causing havoc and breaking resume as the most obvious victim.
    
    We place the guard inside i915_ggtt_disable_guc() to be backport
    friendly (the bug was introduced into v4.11) but it would be preferred
    to be in more control over when this was guard (i.e. do not try and
    teardown the data structures before we have enabled them). That should
    be true with the reorganisation of the guc loaders.
    
    Reported-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Fixes: 7c3f86b6dc51 ("drm/i915: Invalidate the guc ggtt TLB upon insertion")
    Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Oscar Mateo <oscar.mateo@intel.com>
    Cc: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
    Cc: Michal Wajdeczko <michal.wajdeczko@intel.com>
    Cc: Arkadiusz Hiler <arkadiusz.hiler@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170531190514.3691-1-chris@chris-wilson.co.uk
    Reviewed-by: Michel Thierry <michel.thierry@intel.com>
    (cherry picked from commit cb60606d835ca8b2f744835116bcabe64ce88849)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d2c473f9f999010788962facee5d7d47e8dedf8
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Dec 15 19:47:34 2016 +0200

    drm/i915: Workaround VLV/CHV DSI scanline counter hardware fail
    
    commit 8f4d38099b3098eae75f7755e1801931f8141350 upstream.
    
    The scanline counter is bonkers on VLV/CHV DSI. The scanline counter
    increment is not lined up with the start of vblank like it is on
    every other platform and output type. This causes problems for
    both the vblank timestamping and atomic update vblank evasion.
    
    On my FFRD8 machine at least, the scanline counter increment
    happens about 1/3 of a scanline ahead of the start of vblank (which
    is where all register latching happens still). That means we can't
    trust the scanline counter to tell us whether we're in vblank or not
    while we're on that particular line. In order to keep vblank
    timestamping in working condition when called from the vblank irq,
    we'll leave scanline_offset at one, which means that the entire
    line containing the start of vblank is considered to be inside
    the vblank.
    
    For the vblank evasion we'll need to consider that entire line
    to be bad, since we can't tell whether the registers already
    got latched or not. And we can't actually use the start of vblank
    interrupt to get us past that line as the interrupt would fire
    too soon, and then we'd up waiting for the next start of vblank
    instead. One way around that would using the frame start
    interrupt instead since that wouldn't fire until the next
    scanline, but that would require some bigger changes in the
    interrupt code. So for simplicity we'll just poll until we get
    past the bad line.
    
    v2: Adjust the comments a bit
    
    Cc: Jonas Aaberg <cja@gmx.net>
    Tested-by: Jonas Aaberg <cja@gmx.net>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=99086
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161215174734.28779-1-ville.syrjala@linux.intel.com
    Tested-by: Mika Kahola <mika.kahola@intel.com>
    Reviewed-by: Mika Kahola <mika.kahola@intel.com>
    (cherry picked from commit ec1b4ee2834e66884e5b0d3d465f347ff212e372)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b981b2388cbd600f242020ae3dc891347b42d85
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Mar 31 21:00:56 2017 +0300

    drm/i915: Fix 90/270 rotated coordinates for FBC
    
    commit 1065467ed8e2601bf2d7018cf47c557ccbea3769 upstream.
    
    The clipped src coordinates have already been rotated by 270 degrees for
    when the plane rotation is 90/270 degrees, hence the FBC code should no
    longer swap the width and height.
    
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Fixes: b63a16f6cd89 ("drm/i915: Compute display surface offset in the plane check hook for SKL+")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170331180056.14086-4-ville.syrjala@linux.intel.com
    Reviewed-by: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Tested-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    (cherry picked from commit 73714c05df97d7527e7eaaa771472ef2ede46fa3)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b31ae00ac55226008933aef0d2bbb2839176523
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed May 17 15:15:57 2017 +0200

    Revert "drm/i915: Restore lost "Initialized i915" welcome message"
    
    commit d38162e4b5c643733792f32be4ea107c831827b4 upstream.
    
    This reverts commit bc5ca47c0af4f949ba889e666b7da65569e36093.
    
    Gabriel put this back into generic code with
    
    commit 75f6dfe3e652e1adef8cc1b073c89f3e22103a8f
    Author: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Date:   Wed Dec 28 12:32:11 2016 -0200
    
        drm: Deduplicate driver initialization message
    
    but somehow he missed Chris' patch to add the message meanwhile.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=101025
    Fixes: 75f6dfe3e652 ("drm: Deduplicate driver initialization message")
    Cc: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170517131557.7836-1-daniel.vetter@ffwll.ch
    (cherry picked from commit 6bdba81979b2c3c8fed0be62ca31c32c3129d85f)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c094b10c3c19eb5f288a77490dee916f00f1b59b
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Mon May 15 14:11:03 2017 +0200

    s390/kvm: do not rely on the ILC on kvm host protection fauls
    
    commit c0e7bb38c07cbd8269549ee0a0566021a3c729de upstream.
    
    For most cases a protection exception in the host (e.g. copy
    on write or dirty tracking) on the sie instruction will indicate
    an instruction length of 4. Turns out that there are some corner
    cases (e.g. runtime instrumentation) where this is not necessarily
    true and the ILC is unpredictable.
    
    Let's replace our 4 byte rewind_pad with 3 byte nops to prepare for
    all possible ILCs.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22733022586be17e0d28162c2fc3f91b9cbe78e8
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Jun 5 02:43:51 2017 -0700

    xtensa: don't use linux IRQ #0
    
    commit e5c86679d5e864947a52fb31e45a425dea3e7fa9 upstream.
    
    Linux IRQ #0 is reserved for error reporting and may not be used.
    Increase NR_IRQS for one additional slot and increase
    irq_domain_add_legacy parameter first_irq value to 1, so that linux
    IRQ #0 is not associated with hardware IRQ #0 in legacy IRQ domains.
    Introduce macro XTENSA_PIC_LINUX_IRQ for static translation of xtensa
    PIC hardware IRQ # to linux IRQ #. Use this macro in XTFPGA platform
    data definitions.
    
    This fixes inability to use hardware IRQ #0 in configurations that don't
    use device tree and allows for non-identity mapping between linux IRQ #
    and hardware IRQ #.
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f3271eb1074e6706bf72bd3e10c869f0ffba0b4
Author: Dave Young <dyoung@redhat.com>
Date:   Fri Jun 9 08:45:58 2017 +0000

    efi: Fix boot panic because of invalid BGRT image address
    
    commit 792ef14df5c585c19b2831673a077504a09e5203 upstream.
    
    Maniaxx reported a kernel boot crash in the EFI code, which I emulated
    by using same invalid phys addr in code:
    
      BUG: unable to handle kernel paging request at ffffffffff280001
      IP: efi_bgrt_init+0xfb/0x153
      ...
      Call Trace:
       ? bgrt_init+0xbc/0xbc
       acpi_parse_bgrt+0xe/0x12
       acpi_table_parse+0x89/0xb8
       acpi_boot_init+0x445/0x4e2
       ? acpi_parse_x2apic+0x79/0x79
       ? dmi_ignore_irq0_timer_override+0x33/0x33
       setup_arch+0xb63/0xc82
       ? early_idt_handler_array+0x120/0x120
       start_kernel+0xb7/0x443
       ? early_idt_handler_array+0x120/0x120
       x86_64_start_reservations+0x29/0x2b
       x86_64_start_kernel+0x154/0x177
       secondary_startup_64+0x9f/0x9f
    
    There is also a similar bug filed in bugzilla.kernel.org:
    
      https://bugzilla.kernel.org/show_bug.cgi?id=195633
    
    The crash is caused by this commit:
    
      7b0a911478c7 efi/x86: Move the EFI BGRT init code to early init code
    
    The root cause is the firmware on those machines provides invalid BGRT
    image addresses.
    
    In a kernel before above commit BGRT initializes late and uses ioremap()
    to map the image address. Ioremap validates the address, if it is not a
    valid physical address ioremap() just fails and returns. However in current
    kernel EFI BGRT initializes early and uses early_memremap() which does not
    validate the image address, and kernel panic happens.
    
    According to ACPI spec the BGRT image address should fall into
    EFI_BOOT_SERVICES_DATA, see the section 5.2.22.4 of below document:
    
      http://www.uefi.org/sites/default/files/resources/ACPI_6_1.pdf
    
    Fix this issue by validating the image address in efi_bgrt_init(). If the
    image address does not fall into any EFI_BOOT_SERVICES_DATA areas we just
    bail out with a warning message.
    
    Reported-by: Maniaxx <tripleshiftone@gmail.com>
    Signed-off-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 7b0a911478c7 ("efi/x86: Move the EFI BGRT init code to early init code")
    Link: http://lkml.kernel.org/r/20170609084558.26766-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 041d665eb189edb5069cb0b696b73ad67a9dc155
Author: Richard <richard@aaazen.com>
Date:   Sun May 21 12:27:00 2017 -0700

    partitions/msdos: FreeBSD UFS2 file systems are not recognized
    
    commit 223220356d5ebc05ead9a8d697abb0c0a906fc81 upstream.
    
    The code in block/partitions/msdos.c recognizes FreeBSD, OpenBSD
    and NetBSD partitions and does a reasonable job picking out OpenBSD
    and NetBSD UFS subpartitions.
    
    But for FreeBSD the subpartitions are always "bad".
    
        Kernel: <bsd:bad subpartition - ignored
    
    Though all 3 of these BSD systems use UFS as a file system, only
    FreeBSD uses relative start addresses in the subpartition
    declarations.
    
    The following patch fixes this for FreeBSD partitions and leaves
    the code for OpenBSD and NetBSD intact:
    
    Signed-off-by: Richard Narron <comet.berkeley@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99f5ba009efddddb9d0ac34e735b2caf2c64e4a3
Author: Imre Deak <imre.deak@intel.com>
Date:   Tue May 2 15:04:09 2017 +0300

    drm/i915: Prevent the system suspend complete optimization
    
    commit 6ab92afc95c9bd6877cb42e7b24f65be887a5440 upstream.
    
    Since
    
    commit bac2a909a096c9110525c18cbb8ce73c660d5f71
    Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Date:   Wed Jan 21 02:17:42 2015 +0100
    
        PCI / PM: Avoid resuming PCI devices during system suspend
    
    PCI devices will default to allowing the system suspend complete
    optimization where devices are not woken up during system suspend if
    they were already runtime suspended. This however breaks the i915/HDA
    drivers for two reasons:
    
    - The i915 driver has system suspend specific steps that it needs to
      run, that bring the device to a different state than its runtime
      suspended state.
    
    - The HDA driver's suspend handler requires power that it will request
      from the i915 driver's power domain handler. This in turn requires the
      i915 driver to runtime resume itself, but this won't be possible if the
      suspend complete optimization is in effect: in this case the i915
      runtime PM is disabled and trying to get an RPM reference returns
      -EACCESS.
    
    Solve this by requiring the PCI/PM core to resume the device during
    system suspend which in effect disables the suspend complete optimization.
    
    Regardless of the above commit the optimization stayed disabled for DRM
    devices until
    
    commit d14d2a8453d650bea32a1c5271af1458cd283a0f
    Author: Lukas Wunner <lukas@wunner.de>
    Date:   Wed Jun 8 12:49:29 2016 +0200
    
        drm: Remove dev_pm_ops from drm_class
    
    so this patch is in practice a fix for this commit. Another reason for
    the bug staying hidden for so long is that the optimization for a device
    is disabled if it's disabled for any of its children devices. i915 may
    have a backlight device as its child which doesn't support runtime PM
    and so doesn't allow the optimization either.  So if this backlight
    device got registered the bug stayed hidden.
    
    Credits to Marta, Tomi and David who enabled pstore logging,
    that caught one instance of this issue across a suspend/
    resume-to-ram and Ville who rememberd that the optimization was enabled
    for some devices at one point.
    
    The first WARN triggered by the problem:
    
    [ 6250.746445] WARNING: CPU: 2 PID: 17384 at drivers/gpu/drm/i915/intel_runtime_pm.c:2846 intel_runtime_pm_get+0x6b/0xd0 [i915]
    [ 6250.746448] pm_runtime_get_sync() failed: -13
    [ 6250.746451] Modules linked in: snd_hda_intel i915 vgem snd_hda_codec_hdmi x86_pkg_temp_thermal intel_powerclamp coretemp crct10dif_pclmul crc32_pclmul
    snd_hda_codec_realtek snd_hda_codec_generic ghash_clmulni_intel e1000e snd_hda_codec snd_hwdep snd_hda_core ptp mei_me pps_core snd_pcm lpc_ich mei prime_
    numbers i2c_hid i2c_designware_platform i2c_designware_core [last unloaded: i915]
    [ 6250.746512] CPU: 2 PID: 17384 Comm: kworker/u8:0 Tainted: G     U  W       4.11.0-rc5-CI-CI_DRM_334+ #1
    [ 6250.746515] Hardware name:                  /NUC5i5RYB, BIOS RYBDWi35.86A.0362.2017.0118.0940 01/18/2017
    [ 6250.746521] Workqueue: events_unbound async_run_entry_fn
    [ 6250.746525] Call Trace:
    [ 6250.746530]  dump_stack+0x67/0x92
    [ 6250.746536]  __warn+0xc6/0xe0
    [ 6250.746542]  ? pci_restore_standard_config+0x40/0x40
    [ 6250.746546]  warn_slowpath_fmt+0x46/0x50
    [ 6250.746553]  ? __pm_runtime_resume+0x56/0x80
    [ 6250.746584]  intel_runtime_pm_get+0x6b/0xd0 [i915]
    [ 6250.746610]  intel_display_power_get+0x1b/0x40 [i915]
    [ 6250.746646]  i915_audio_component_get_power+0x15/0x20 [i915]
    [ 6250.746654]  snd_hdac_display_power+0xc8/0x110 [snd_hda_core]
    [ 6250.746661]  azx_runtime_resume+0x218/0x280 [snd_hda_intel]
    [ 6250.746667]  pci_pm_runtime_resume+0x76/0xa0
    [ 6250.746672]  __rpm_callback+0xb4/0x1f0
    [ 6250.746677]  ? pci_restore_standard_config+0x40/0x40
    [ 6250.746682]  rpm_callback+0x1f/0x80
    [ 6250.746686]  ? pci_restore_standard_config+0x40/0x40
    [ 6250.746690]  rpm_resume+0x4ba/0x740
    [ 6250.746698]  __pm_runtime_resume+0x49/0x80
    [ 6250.746703]  pci_pm_suspend+0x57/0x140
    [ 6250.746709]  dpm_run_callback+0x6f/0x330
    [ 6250.746713]  ? pci_pm_freeze+0xe0/0xe0
    [ 6250.746718]  __device_suspend+0xf9/0x370
    [ 6250.746724]  ? dpm_watchdog_set+0x60/0x60
    [ 6250.746730]  async_suspend+0x1a/0x90
    [ 6250.746735]  async_run_entry_fn+0x34/0x160
    [ 6250.746741]  process_one_work+0x1f2/0x6d0
    [ 6250.746749]  worker_thread+0x49/0x4a0
    [ 6250.746755]  kthread+0x107/0x140
    [ 6250.746759]  ? process_one_work+0x6d0/0x6d0
    [ 6250.746763]  ? kthread_create_on_node+0x40/0x40
    [ 6250.746768]  ret_from_fork+0x2e/0x40
    [ 6250.746778] ---[ end trace 102a62fd2160f5e6 ]---
    
    v2:
    - Use the new pci_dev->needs_resume flag, to avoid any overhead during
      the ->pm_prepare hook. (Rafael)
    
    v3:
    - Update commit message to reference the actual regressing commit.
      (Lukas)
    
    v4:
    - Rebase on v4 of patch 1/2.
    
    Fixes: d14d2a8453d6 ("drm: Remove dev_pm_ops from drm_class")
    References: https://bugs.freedesktop.org/show_bug.cgi?id=100378
    References: https://bugs.freedesktop.org/show_bug.cgi?id=100770
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Marta Lofstedt <marta.lofstedt@intel.com>
    Cc: David Weinehall <david.weinehall@linux.intel.com>
    Cc: Tomi Sarvela <tomi.p.sarvela@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Mika Kuoppala <mika.kuoppala@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Lukas Wunner <lukas@wunner.de>
    Cc: linux-pci@vger.kernel.org
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reported-and-tested-by: Marta Lofstedt <marta.lofstedt@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1493726649-32094-2-git-send-email-imre.deak@intel.com
    (cherry picked from commit adfdf85d795f4d4f487b61ee0b169d64c6e19081)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7c0a50b21011054896e1755600f6f3aa6986d41
Author: Imre Deak <imre.deak@intel.com>
Date:   Tue May 23 14:18:17 2017 -0500

    PCI/PM: Add needs_resume flag to avoid suspend complete optimization
    
    commit 4d071c3238987325b9e50e33051a40d1cce311cc upstream.
    
    Some drivers - like i915 - may not support the system suspend direct
    complete optimization due to differences in their runtime and system
    suspend sequence.  Add a flag that when set resumes the device before
    calling the driver's system suspend handlers which effectively disables
    the optimization.
    
    Needed by a future patch fixing suspend/resume on i915.
    
    Suggested by Rafael.
    
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: stable@vger.kernel.org
    (rebased on v4.8, added kernel version to commit message stable tag)
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92220696d5d07525443d9280c08c498e77d0386c
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri May 26 10:29:06 2017 +0200

    drm/i915: Do not drop pagetables when empty
    
    This is the minimal backport for stable of the upstream commit:
    
    commit dd19674bacba227ae5d3ce680cbc5668198894dc
    Author: Chris Wilson <chris@chris-wilson.co.uk>
    Date:   Wed Feb 15 08:43:46 2017 +0000
    
        drm/i915: Remove bitmap tracking for used-ptes
    
    Due to a race with the shrinker, when we try to allocate a pagetable, we
    may end up shrinking it instead. This comes as a nasty surprise as we
    try to dereference it to fill in the pagetable entries for the object.
    
    In linus/master this is fixed by pinning the pagetables prior to
    allocation, but that backport is roughly
     drivers/gpu/drm/i915/i915_gem_gtt.c |   10 ----------
     1 file changed, 10 deletions(-)
    i.e. unsuitable for stable. Instead we neuter the code that tried to
    free the pagetables.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=99295
    Fixes: 2ce5179fe826 ("drm/i915/gtt: Free unused lower-level page tables")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Michel Thierry <michel.thierry@intel.com>
    Cc: Mika Kuoppala <mika.kuoppala@intel.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Michał Winiarski <michal.winiarski@intel.com>
    Cc: Daniel Vetter <daniel.vetter@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v4.10+
    Tested-by: Maël Lavault <mael.lavault@protonmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
