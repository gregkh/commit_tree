commit 01fd1694b93c92ad54fa684dac9c8068ecda8288
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Aug 29 08:26:46 2019 +0200

    Linux 4.14.141

commit c632aeedc6de6a504092a46afd712575871efd5a
Author: Sasha Levin <sashal@kernel.org>
Date:   Tue Aug 27 22:58:51 2019 -0400

    Revert "perf test 6: Fix missing kvm module load for s390"
    
    This reverts commit 0e8529143a212a2f93fd5dfa63f83275f7c44655.
    
    Which was upstream commit 53fe307dfd309e425b171f6272d64296a54f4dff.
    
    Ben Hutchings reports that this commit depends on new code added in
    v4.18, and so is irrelevant on older kernels, and breaks the build.
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54de4ef852b644c2eb2741ec338d1750196e3733
Author: Alastair D'Silva <alastair@d-silva.org>
Date:   Wed Aug 21 10:19:27 2019 +1000

    powerpc: Allow flush_(inval_)dcache_range to work across ranges >4GB
    
    The upstream commit:
    22e9c88d486a ("powerpc/64: reuse PPC32 static inline flush_dcache_range()")
    has a similar effect, but since it is a rewrite of the assembler to C, is
    too invasive for stable. This patch is a minimal fix to address the issue in
    assembler.
    
    This patch applies cleanly to v5.2, v4.19 & v4.14.
    
    When calling flush_(inval_)dcache_range with a size >4GB, we were masking
    off the upper 32 bits, so we would incorrectly flush a range smaller
    than intended.
    
    This patch replaces the 32 bit shifts with 64 bit ones, so that
    the full size is accounted for.
    
    Signed-off-by: Alastair D'Silva <alastair@d-silva.org>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d156087598d21db3a099da21dd39226549fbb2c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Aug 19 12:58:14 2019 +0300

    dm zoned: fix potential NULL dereference in dmz_do_reclaim()
    
    [ Upstream commit e0702d90b79d430b0ccc276ead4f88440bb51352 ]
    
    This function is supposed to return error pointers so it matches the
    dmz_get_rnd_zone_for_reclaim() function.  The current code could lead to
    a NULL dereference in dmz_do_reclaim()
    
    Fixes: b234c6d7a703 ("dm zoned: improve error handling in reclaim")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 044d098441df8fabffba3b084a70beba0e77f8d4
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Thu Aug 22 20:55:54 2019 -0700

    xfs: fix missing ILOCK unlock when xfs_setattr_nonsize fails due to EDQUOT
    
    commit 1fb254aa983bf190cfd685d40c64a480a9bafaee upstream.
    
    Benjamin Moody reported to Debian that XFS partially wedges when a chgrp
    fails on account of being out of disk quota.  I ran his reproducer
    script:
    
    # adduser dummy
    # adduser dummy plugdev
    
    # dd if=/dev/zero bs=1M count=100 of=test.img
    # mkfs.xfs test.img
    # mount -t xfs -o gquota test.img /mnt
    # mkdir -p /mnt/dummy
    # chown -c dummy /mnt/dummy
    # xfs_quota -xc 'limit -g bsoft=100k bhard=100k plugdev' /mnt
    
    (and then as user dummy)
    
    $ dd if=/dev/urandom bs=1M count=50 of=/mnt/dummy/foo
    $ chgrp plugdev /mnt/dummy/foo
    
    and saw:
    
    ================================================
    WARNING: lock held when returning to user space!
    5.3.0-rc5 #rc5 Tainted: G        W
    ------------------------------------------------
    chgrp/47006 is leaving the kernel with locks still held!
    1 lock held by chgrp/47006:
     #0: 000000006664ea2d (&xfs_nondir_ilock_class){++++}, at: xfs_ilock+0xd2/0x290 [xfs]
    
    ...which is clearly caused by xfs_setattr_nonsize failing to unlock the
    ILOCK after the xfs_qm_vop_chown_reserve call fails.  Add the missing
    unlock.
    
    Reported-by: benjamin.moody@gmail.com
    Fixes: 253f4911f297 ("xfs: better xfs_trans_alloc interface")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a439560bb31f8422404e9a394d4c3d1fac19764
Author: Henry Burns <henryburns@google.com>
Date:   Sat Aug 24 17:55:06 2019 -0700

    mm/zsmalloc.c: fix race condition in zs_destroy_pool
    
    commit 701d678599d0c1623aaf4139c03eea260a75b027 upstream.
    
    In zs_destroy_pool() we call flush_work(&pool->free_work).  However, we
    have no guarantee that migration isn't happening in the background at
    that time.
    
    Since migration can't directly free pages, it relies on free_work being
    scheduled to free the pages.  But there's nothing preventing an
    in-progress migrate from queuing the work *after*
    zs_unregister_migration() has called flush_work().  Which would mean
    pages still pointing at the inode when we free it.
    
    Since we know at destroy time all objects should be free, no new
    migrations can come in (since zs_page_isolate() fails for fully-free
    zspages).  This means it is sufficient to track a "# isolated zspages"
    count by class, and have the destroy logic ensure all such pages have
    drained before proceeding.  Keeping that state under the class spinlock
    keeps the logic straightforward.
    
    In this case a memory leak could lead to an eventual crash if compaction
    hits the leaked page.  This crash would only occur if people are
    changing their zswap backend at runtime (which eventually starts
    destruction).
    
    Link: http://lkml.kernel.org/r/20190809181751.219326-2-henryburns@google.com
    Fixes: 48b4800a1c6a ("zsmalloc: page migration support")
    Signed-off-by: Henry Burns <henryburns@google.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Henry Burns <henrywolfeburns@gmail.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Jonathan Adams <jwadams@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaa98c18d47ed74ea7eb7358a9e4577f6e7abac9
Author: Henry Burns <henryburns@google.com>
Date:   Sat Aug 24 17:55:03 2019 -0700

    mm/zsmalloc.c: migration can leave pages in ZS_EMPTY indefinitely
    
    commit 1a87aa03597efa9641e92875b883c94c7f872ccb upstream.
    
    In zs_page_migrate() we call putback_zspage() after we have finished
    migrating all pages in this zspage.  However, the return value is
    ignored.  If a zs_free() races in between zs_page_isolate() and
    zs_page_migrate(), freeing the last object in the zspage,
    putback_zspage() will leave the page in ZS_EMPTY for potentially an
    unbounded amount of time.
    
    To fix this, we need to do the same thing as zs_page_putback() does:
    schedule free_work to occur.
    
    To avoid duplicated code, move the sequence to a new
    putback_zspage_deferred() function which both zs_page_migrate() and
    zs_page_putback() call.
    
    Link: http://lkml.kernel.org/r/20190809181751.219326-1-henryburns@google.com
    Fixes: 48b4800a1c6a ("zsmalloc: page migration support")
    Signed-off-by: Henry Burns <henryburns@google.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Henry Burns <henrywolfeburns@gmail.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Jonathan Adams <jwadams@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58eba200b0a95859526898bec5c42e0621968a22
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Sat Aug 24 17:54:59 2019 -0700

    mm, page_owner: handle THP splits correctly
    
    commit f7da677bc6e72033f0981b9d58b5c5d409fa641e upstream.
    
    THP splitting path is missing the split_page_owner() call that
    split_page() has.
    
    As a result, split THP pages are wrongly reported in the page_owner file
    as order-9 pages.  Furthermore when the former head page is freed, the
    remaining former tail pages are not listed in the page_owner file at
    all.  This patch fixes that by adding the split_page_owner() call into
    __split_huge_page().
    
    Link: http://lkml.kernel.org/r/20190820131828.22684-2-vbabka@suse.cz
    Fixes: a9627bc5e34e ("mm/page_owner: introduce split_page_owner and replace manual handling")
    Reported-by: Kirill A. Shutemov <kirill@shutemov.name>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc8eb1ef0c2c4cdd178c5c884c3ae78e7a884b76
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Thu Aug 1 23:53:53 2019 +0000

    genirq: Properly pair kobject_del() with kobject_add()
    
    commit d0ff14fdc987303aeeb7de6f1bd72c3749ae2a9b upstream.
    
    If alloc_descs() fails before irq_sysfs_init() has run, free_desc() in the
    cleanup path will call kobject_del() even though the kobject has not been
    added with kobject_add().
    
    Fix this by making the call to kobject_del() conditional on whether
    irq_sysfs_init() has run.
    
    This problem surfaced because commit aa30f47cf666 ("kobject: Add support
    for default attribute groups to kobj_type") makes kobject_del() stricter
    about pairing with kobject_add(). If the pairing is incorrrect, a WARNING
    and backtrace occur in sysfs_remove_group() because there is no parent.
    
    [ tglx: Add a comment to the code and make it work with CONFIG_SYSFS=n ]
    
    Fixes: ecb3f394c5db ("genirq: Expose interrupt information through sysfs")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1564703564-4116-1-git-send-email-mikelley@microsoft.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c4291bd94eeccd9d81dc575d9fb873274b80555
Author: Dmitry Fomichev <dmitry.fomichev@wdc.com>
Date:   Sat Aug 10 14:43:11 2019 -0700

    dm zoned: properly handle backing device failure
    
    commit 75d66ffb48efb30f2dd42f041ba8b39c5b2bd115 upstream.
    
    dm-zoned is observed to lock up or livelock in case of hardware
    failure or some misconfiguration of the backing zoned device.
    
    This patch adds a new dm-zoned target function that checks the status of
    the backing device. If the request queue of the backing device is found
    to be in dying state or the SCSI backing device enters offline state,
    the health check code sets a dm-zoned target flag prompting all further
    incoming I/O to be rejected. In order to detect backing device failures
    timely, this new function is called in the request mapping path, at the
    beginning of every reclaim run and before performing any metadata I/O.
    
    The proper way out of this situation is to do
    
    dmsetup remove <dm-zoned target>
    
    and recreate the target when the problem with the backing device
    is resolved.
    
    Fixes: 3b1a94c88b79 ("dm zoned: drive-managed zoned block device target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17e9b177ebab3a328c7b31c798bd2b3d800ea225
Author: Dmitry Fomichev <dmitry.fomichev@wdc.com>
Date:   Sat Aug 10 14:43:10 2019 -0700

    dm zoned: improve error handling in i/o map code
    
    commit d7428c50118e739e672656c28d2b26b09375d4e0 upstream.
    
    Some errors are ignored in the I/O path during queueing chunks
    for processing by chunk works. Since at least these errors are
    transient in nature, it should be possible to retry the failed
    incoming commands.
    
    The fix -
    
    Errors that can happen while queueing chunks are carried upwards
    to the main mapping function and it now returns DM_MAPIO_REQUEUE
    for any incoming requests that can not be properly queued.
    
    Error logging/debug messages are added where needed.
    
    Fixes: 3b1a94c88b79 ("dm zoned: drive-managed zoned block device target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8de46598d048922b90fd080d57a0874322ca5fdb
Author: Dmitry Fomichev <dmitry.fomichev@wdc.com>
Date:   Sat Aug 10 14:43:09 2019 -0700

    dm zoned: improve error handling in reclaim
    
    commit b234c6d7a703661b5045c5bf569b7c99d2edbf88 upstream.
    
    There are several places in reclaim code where errors are not
    propagated to the main function, dmz_reclaim(). This function
    is responsible for unlocking zones that might be still locked
    at the end of any failed reclaim iterations. As the result,
    some device zones may be left permanently locked for reclaim,
    degrading target's capability to reclaim zones.
    
    This patch fixes these issues as follows -
    
    Make sure that dmz_reclaim_buf(), dmz_reclaim_seq_data() and
    dmz_reclaim_rnd_data() return error codes to the caller.
    
    dmz_reclaim() function is renamed to dmz_do_reclaim() to avoid
    clashing with "struct dmz_reclaim" and is modified to return the
    error to the caller.
    
    dmz_get_zone_for_reclaim() now returns an error instead of NULL
    pointer and reclaim code checks for that error.
    
    Error logging/debug messages are added where necessary.
    
    Fixes: 3b1a94c88b79 ("dm zoned: drive-managed zoned block device target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64ba80c86eaab854eaf7d118e2cbac45c4d4b199
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Aug 23 09:54:09 2019 -0400

    dm table: fix invalid memory accesses with too high sector number
    
    commit 1cfd5d3399e87167b7f9157ef99daa0e959f395d upstream.
    
    If the sector number is too high, dm_table_find_target() should return a
    pointer to a zeroed dm_target structure (the caller should test it with
    dm_target_is_valid).
    
    However, for some table sizes, the code in dm_table_find_target() that
    performs btree lookup will access out of bound memory structures.
    
    Fix this bug by testing the sector number at the beginning of
    dm_table_find_target(). Also, add an "inline" keyword to the function
    dm_table_get_size() because this is a hot path.
    
    Fixes: 512875bd9661 ("dm: table detect io beyond device")
    Cc: stable@vger.kernel.org
    Reported-by: Zhang Tao <kontais@zoho.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 013d13ae72d3061708ab45593cb0ba9b3dd8ffae
Author: ZhangXiaoxu <zhangxiaoxu5@huawei.com>
Date:   Mon Aug 19 11:31:21 2019 +0800

    dm space map metadata: fix missing store of apply_bops() return value
    
    commit ae148243d3f0816b37477106c05a2ec7d5f32614 upstream.
    
    In commit 6096d91af0b6 ("dm space map metadata: fix occasional leak
    of a metadata block on resize"), we refactor the commit logic to a new
    function 'apply_bops'.  But when that logic was replaced in out() the
    return value was not stored.  This may lead out() returning a wrong
    value to the caller.
    
    Fixes: 6096d91af0b6 ("dm space map metadata: fix occasional leak of a metadata block on resize")
    Cc: stable@vger.kernel.org
    Signed-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09f142a8591c3310a64f98c8e0e2d7f99b986eab
Author: ZhangXiaoxu <zhangxiaoxu5@huawei.com>
Date:   Sat Aug 17 13:32:40 2019 +0800

    dm btree: fix order of block initialization in btree_split_beneath
    
    commit e4f9d6013820d1eba1432d51dd1c5795759aa77f upstream.
    
    When btree_split_beneath() splits a node to two new children, it will
    allocate two blocks: left and right.  If right block's allocation
    failed, the left block will be unlocked and marked dirty.  If this
    happened, the left block'ss content is zero, because it wasn't
    initialized with the btree struct before the attempot to allocate the
    right block.  Upon return, when flushing the left block to disk, the
    validator will fail when check this block.  Then a BUG_ON is raised.
    
    Fix this by completely initializing the left block before allocating and
    initializing the right block.
    
    Fixes: 4dcb8b57df359 ("dm btree: fix leak of bufio-backed block in btree_split_beneath error path")
    Cc: stable@vger.kernel.org
    Signed-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e64ca30aefc1fa8810529e5f654a80ae868ed07
Author: Dmitry Fomichev <dmitry.fomichev@wdc.com>
Date:   Mon Aug 5 16:56:03 2019 -0700

    dm kcopyd: always complete failed jobs
    
    commit d1fef41465f0e8cae0693fb184caa6bfafb6cd16 upstream.
    
    This patch fixes a problem in dm-kcopyd that may leave jobs in
    complete queue indefinitely in the event of backing storage failure.
    
    This behavior has been observed while running 100% write file fio
    workload against an XFS volume created on top of a dm-zoned target
    device. If the underlying storage of dm-zoned goes to offline state
    under I/O, kcopyd sometimes never issues the end copy callback and
    dm-zoned reclaim work hangs indefinitely waiting for that completion.
    
    This behavior was traced down to the error handling code in
    process_jobs() function that places the failed job to complete_jobs
    queue, but doesn't wake up the job handler. In case of backing device
    failure, all outstanding jobs may end up going to complete_jobs queue
    via this code path and then stay there forever because there are no
    more successful I/O jobs to wake up the job handler.
    
    This patch adds a wake() call to always wake up kcopyd job wait queue
    for all I/O jobs that fail before dm_io() gets called for that job.
    
    The patch also sets the write error status in all sub jobs that are
    failed because their master job has failed.
    
    Fixes: b73c67c2cbb00 ("dm kcopyd: add sequential write feature")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Fomichev <dmitry.fomichev@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20622d5544267114b087f73f11a06a2c033408cc
Author: John Hubbard <jhubbard@nvidia.com>
Date:   Wed Aug 21 12:25:13 2019 -0700

    x86/boot: Fix boot regression caused by bootparam sanitizing
    
    commit 7846f58fba964af7cb8cf77d4d13c33254725211 upstream.
    
    commit a90118c445cc ("x86/boot: Save fields explicitly, zero out everything
    else") had two errors:
    
        * It preserved boot_params.acpi_rsdp_addr, and
        * It failed to preserve boot_params.hdr
    
    Therefore, zero out acpi_rsdp_addr, and preserve hdr.
    
    Fixes: a90118c445cc ("x86/boot: Save fields explicitly, zero out everything else")
    Reported-by: Neil MacLeod <neil@nmacleod.com>
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: John Hubbard <jhubbard@nvidia.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Neil MacLeod <neil@nmacleod.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190821192513.20126-1-jhubbard@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b779f7f653a3cba097cb764b72b20a4fc65d0d
Author: John Hubbard <jhubbard@nvidia.com>
Date:   Tue Jul 30 22:46:27 2019 -0700

    x86/boot: Save fields explicitly, zero out everything else
    
    commit a90118c445cc7f07781de26a9684d4ec58bfcfd1 upstream.
    
    Recent gcc compilers (gcc 9.1) generate warnings about an out of bounds
    memset, if the memset goes accross several fields of a struct. This
    generated a couple of warnings on x86_64 builds in sanitize_boot_params().
    
    Fix this by explicitly saving the fields in struct boot_params
    that are intended to be preserved, and zeroing all the rest.
    
    [ tglx: Tagged for stable as it breaks the warning free build there as well ]
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Suggested-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: John Hubbard <jhubbard@nvidia.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190731054627.5627-2-jhubbard@nvidia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bfaf1c88b589d51d9cbf0758e5fd987004ce789
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Aug 19 15:52:35 2019 +0000

    x86/CPU/AMD: Clear RDRAND CPUID bit on AMD family 15h/16h
    
    commit c49a0a80137c7ca7d6ced4c812c9e07a949f6f24 upstream.
    
    There have been reports of RDRAND issues after resuming from suspend on
    some AMD family 15h and family 16h systems. This issue stems from a BIOS
    not performing the proper steps during resume to ensure RDRAND continues
    to function properly.
    
    RDRAND support is indicated by CPUID Fn00000001_ECX[30]. This bit can be
    reset by clearing MSR C001_1004[62]. Any software that checks for RDRAND
    support using CPUID, including the kernel, will believe that RDRAND is
    not supported.
    
    Update the CPU initialization to clear the RDRAND CPUID bit for any family
    15h and 16h processor that supports RDRAND. If it is known that the family
    15h or family 16h system does not have an RDRAND resume issue or that the
    system will not be placed in suspend, the "rdrand=force" kernel parameter
    can be used to stop the clearing of the RDRAND CPUID bit.
    
    Additionally, update the suspend and resume path to save and restore the
    MSR C001_1004 value to ensure that the RDRAND CPUID setting remains in
    place after resuming from suspend.
    
    Note, that clearing the RDRAND CPUID bit does not prevent a processor
    that normally supports the RDRAND instruction from executing it. So any
    code that determined the support based on family and model won't #UD.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Chen Yu <yu.c.chen@intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: "linux-doc@vger.kernel.org" <linux-doc@vger.kernel.org>
    Cc: "linux-pm@vger.kernel.org" <linux-pm@vger.kernel.org>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: <stable@vger.kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: "x86@kernel.org" <x86@kernel.org>
    Link: https://lkml.kernel.org/r/7543af91666f491547bd86cebb1e17c66824ab9f.1566229943.git.thomas.lendacky@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64aee648603fa5377cd5d440bb06aec0c0c6c7cd
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Aug 9 14:54:07 2019 +0200

    x86/apic: Handle missing global clockevent gracefully
    
    commit f897e60a12f0b9146357780d317879bce2a877dc upstream.
    
    Some newer machines do not advertise legacy timers. The kernel can handle
    that situation if the TSC and the CPU frequency are enumerated by CPUID or
    MSRs and the CPU supports TSC deadline timer. If the CPU does not support
    TSC deadline timer the local APIC timer frequency has to be known as well.
    
    Some Ryzens machines do not advertize legacy timers, but there is no
    reliable way to determine the bus frequency which feeds the local APIC
    timer when the machine allows overclocking of that frequency.
    
    As there is no legacy timer the local APIC timer calibration crashes due to
    a NULL pointer dereference when accessing the not installed global clock
    event device.
    
    Switch the calibration loop to a non interrupt based one, which polls
    either TSC (if frequency is known) or jiffies. The latter requires a global
    clockevent. As the machines which do not have a global clockevent installed
    have a known TSC frequency this is a non issue. For older machines where
    TSC frequency is not known, there is no known case where the legacy timers
    do not exist as that would have been reported long ago.
    
    Reported-by: Daniel Drake <drake@endlessm.com>
    Reported-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Daniel Drake <drake@endlessm.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/alpine.DEB.2.21.1908091443030.21433@nanos.tec.linutronix.de
    Link: http://bugzilla.opensuse.org/show_bug.cgi?id=1142926#c12
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5814788cce87aac11f1307373daeca0c1304807
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Aug 22 14:11:22 2019 -0700

    x86/retpoline: Don't clobber RFLAGS during CALL_NOSPEC on i386
    
    commit b63f20a778c88b6a04458ed6ffc69da953d3a109 upstream.
    
    Use 'lea' instead of 'add' when adjusting %rsp in CALL_NOSPEC so as to
    avoid clobbering flags.
    
    KVM's emulator makes indirect calls into a jump table of sorts, where
    the destination of the CALL_NOSPEC is a small blob of code that performs
    fast emulation by executing the target instruction with fixed operands.
    
      adcb_al_dl:
         0x000339f8 <+0>:   adc    %dl,%al
         0x000339fa <+2>:   ret
    
    A major motiviation for doing fast emulation is to leverage the CPU to
    handle consumption and manipulation of arithmetic flags, i.e. RFLAGS is
    both an input and output to the target of CALL_NOSPEC.  Clobbering flags
    results in all sorts of incorrect emulation, e.g. Jcc instructions often
    take the wrong path.  Sans the nops...
    
      asm("push %[flags]; popf; " CALL_NOSPEC " ; pushf; pop %[flags]\n"
         0x0003595a <+58>:  mov    0xc0(%ebx),%eax
         0x00035960 <+64>:  mov    0x60(%ebx),%edx
         0x00035963 <+67>:  mov    0x90(%ebx),%ecx
         0x00035969 <+73>:  push   %edi
         0x0003596a <+74>:  popf
         0x0003596b <+75>:  call   *%esi
         0x000359a0 <+128>: pushf
         0x000359a1 <+129>: pop    %edi
         0x000359a2 <+130>: mov    %eax,0xc0(%ebx)
         0x000359b1 <+145>: mov    %edx,0x60(%ebx)
    
      ctxt->eflags = (ctxt->eflags & ~EFLAGS_MASK) | (flags & EFLAGS_MASK);
         0x000359a8 <+136>: mov    -0x10(%ebp),%eax
         0x000359ab <+139>: and    $0x8d5,%edi
         0x000359b4 <+148>: and    $0xfffff72a,%eax
         0x000359b9 <+153>: or     %eax,%edi
         0x000359bd <+157>: mov    %edi,0x4(%ebx)
    
    For the most part this has gone unnoticed as emulation of guest code
    that can trigger fast emulation is effectively limited to MMIO when
    running on modern hardware, and MMIO is rarely, if ever, accessed by
    instructions that affect or consume flags.
    
    Breakage is almost instantaneous when running with unrestricted guest
    disabled, in which case KVM must emulate all instructions when the guest
    has invalid state, e.g. when the guest is in Big Real Mode during early
    BIOS.
    
    Fixes: 776b043848fd2 ("x86/retpoline: Add initial retpoline support")
    Fixes: 1a29b5b7f347a ("KVM: x86: Make indirect calls in emulator speculation safe")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190822211122.27579-1-sean.j.christopherson@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc2a69242f707891d8c6ef98e3ed4dad32a5f37e
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Sat Aug 24 17:54:56 2019 -0700

    userfaultfd_release: always remove uffd flags and clear vm_userfaultfd_ctx
    
    commit 46d0b24c5ee10a15dfb25e20642f5a5ed59c5003 upstream.
    
    userfaultfd_release() should clear vm_flags/vm_userfaultfd_ctx even if
    mm->core_state != NULL.
    
    Otherwise a page fault can see userfaultfd_missing() == T and use an
    already freed userfaultfd_ctx.
    
    Link: http://lkml.kernel.org/r/20190820160237.GB4983@redhat.com
    Fixes: 04f5866e41fb ("coredump: fix race condition between mmget_not_zero()/get_task_mm() and core dumping")
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Reviewed-by: Andrea Arcangeli <aarcange@redhat.com>
    Tested-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Peter Xu <peterx@redhat.com>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Jann Horn <jannh@google.com>
    Cc: Jason Gunthorpe <jgg@mellanox.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0570fc57e3421f6b3196691bfd766a01d481bc27
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Tue Aug 6 13:41:51 2019 +0200

    gpiolib: never report open-drain/source lines as 'input' to user-space
    
    commit 2c60e6b5c9241b24b8b523fefd3e44fb85622cda upstream.
    
    If the driver doesn't support open-drain/source config options, we
    emulate this behavior when setting the direction by calling
    gpiod_direction_input() if the default value is 0 (open-source) or
    1 (open-drain), thus not actively driving the line in those cases.
    
    This however clears the FLAG_IS_OUT bit for the GPIO line descriptor
    and makes the LINEINFO ioctl() incorrectly report this line's mode as
    'input' to user-space.
    
    This commit modifies the ioctl() to always set the GPIOLINE_FLAG_IS_OUT
    bit in the lineinfo structure's flags field. Since it's impossible to
    use the input mode and open-drain/source options at the same time, we
    can be sure the reported information will be correct.
    
    Fixes: 521a2ad6f862 ("gpio: add userspace ABI for GPIO line information")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Link: https://lore.kernel.org/r/20190806114151.17652-1-brgl@bgdev.pl
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ba408f45ee01c3871248d0c8fcb80bdb21ea4fe
Author: Lyude Paul <lyude@redhat.com>
Date:   Thu Jul 25 15:40:01 2019 -0400

    drm/nouveau: Don't retry infinitely when receiving no data on i2c over AUX
    
    commit c358ebf59634f06d8ed176da651ec150df3c8686 upstream.
    
    While I had thought I had fixed this issue in:
    
    commit 342406e4fbba ("drm/nouveau/i2c: Disable i2c bus access after
    ->fini()")
    
    It turns out that while I did fix the error messages I was seeing on my
    P50 when trying to access i2c busses with the GPU in runtime suspend, I
    accidentally had missed one important detail that was mentioned on the
    bug report this commit was supposed to fix: that the CPU would only lock
    up when trying to access i2c busses _on connected devices_ _while the
    GPU is not in runtime suspend_. Whoops. That definitely explains why I
    was not able to get my machine to hang with i2c bus interactions until
    now, as plugging my P50 into it's dock with an HDMI monitor connected
    allowed me to finally reproduce this locally.
    
    Now that I have managed to reproduce this issue properly, it looks like
    the problem is much simpler then it looks. It turns out that some
    connected devices, such as MST laptop docks, will actually ACK i2c reads
    even if no data was actually read:
    
    [  275.063043] nouveau 0000:01:00.0: i2c: aux 000a: 1: 0000004c 1
    [  275.063447] nouveau 0000:01:00.0: i2c: aux 000a: 00 01101000 10040000
    [  275.063759] nouveau 0000:01:00.0: i2c: aux 000a: rd 00000001
    [  275.064024] nouveau 0000:01:00.0: i2c: aux 000a: rd 00000000
    [  275.064285] nouveau 0000:01:00.0: i2c: aux 000a: rd 00000000
    [  275.064594] nouveau 0000:01:00.0: i2c: aux 000a: rd 00000000
    
    Because we don't handle the situation of i2c ack without any data, we
    end up entering an infinite loop in nvkm_i2c_aux_i2c_xfer() since the
    value of cnt always remains at 0. This finally properly explains how
    this could result in a CPU hang like the ones observed in the
    aforementioned commit.
    
    So, fix this by retrying transactions if no data is written or received,
    and give up and fail the transaction if we continue to not write or
    receive any data after 32 retries.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17017ebb8676295a1b896c4c405fd587b794c299
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Tue Aug 20 16:40:33 2019 +0200

    libceph: fix PG split vs OSD (re)connect race
    
    commit a561372405cf6bc6f14239b3a9e57bb39f2788b0 upstream.
    
    We can't rely on ->peer_features in calc_target() because it may be
    called both when the OSD session is established and open and when it's
    not.  ->peer_features is not valid unless the OSD session is open.  If
    this happens on a PG split (pg_num increase), that could mean we don't
    resend a request that should have been resent, hanging the client
    indefinitely.
    
    In userspace this was fixed by looking at require_osd_release and
    get_xinfo[osd].features fields of the osdmap.  However these fields
    belong to the OSD section of the osdmap, which the kernel doesn't
    decode (only the client section is decoded).
    
    Instead, let's drop this feature check.  It effectively checks for
    luminous, so only pre-luminous OSDs would be affected in that on a PG
    split the kernel might resend a request that should not have been
    resent.  Duplicates can occur in other scenarios, so both sides should
    already be prepared for them: see dup/replay logic on the OSD side and
    retry_attempt check on the client side.
    
    Cc: stable@vger.kernel.org
    Fixes: 7de030d6b10a ("libceph: resend on PG splits if OSD has RESEND_ON_SPLIT")
    Link: https://tracker.ceph.com/issues/41162
    Reported-by: Jerry Lee <leisurelysw24@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Tested-by: Jerry Lee <leisurelysw24@gmail.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a1bf13502beaa3a7d912c040f87b82272ea1d8
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Aug 15 06:23:38 2019 -0400

    ceph: don't try fill file_lock on unsuccessful GETFILELOCK reply
    
    commit 28a282616f56990547b9dcd5c6fbd2001344664c upstream.
    
    When ceph_mdsc_do_request returns an error, we can't assume that the
    filelock_reply pointer will be set. Only try to fetch fields out of
    the r_reply_info when it returns success.
    
    Cc: stable@vger.kernel.org
    Reported-by: Hector Martin <hector@marcansoft.com>
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: "Yan, Zheng" <zyan@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2cbe6a3e39323bc30145ac5dfc5abb107315c15
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Aug 8 05:40:04 2019 -0400

    Revert "dm bufio: fix deadlock with loop device"
    
    commit cf3591ef832915892f2499b7e54b51d4c578b28c upstream.
    
    Revert the commit bd293d071ffe65e645b4d8104f9d8fe15ea13862. The proper
    fix has been made available with commit d0a255e795ab ("loop: set
    PF_MEMALLOC_NOIO for the worker thread").
    
    Note that the fix offered by commit bd293d071ffe doesn't really prevent
    the deadlock from occuring - if we look at the stacktrace reported by
    Junxiao Bi, we see that it hangs in bit_wait_io and not on the mutex -
    i.e. it has already successfully taken the mutex. Changing the mutex
    from mutex_lock to mutex_trylock won't help with deadlocks that happen
    afterwards.
    
    PID: 474    TASK: ffff8813e11f4600  CPU: 10  COMMAND: "kswapd0"
       #0 [ffff8813dedfb938] __schedule at ffffffff8173f405
       #1 [ffff8813dedfb990] schedule at ffffffff8173fa27
       #2 [ffff8813dedfb9b0] schedule_timeout at ffffffff81742fec
       #3 [ffff8813dedfba60] io_schedule_timeout at ffffffff8173f186
       #4 [ffff8813dedfbaa0] bit_wait_io at ffffffff8174034f
       #5 [ffff8813dedfbac0] __wait_on_bit at ffffffff8173fec8
       #6 [ffff8813dedfbb10] out_of_line_wait_on_bit at ffffffff8173ff81
       #7 [ffff8813dedfbb90] __make_buffer_clean at ffffffffa038736f [dm_bufio]
       #8 [ffff8813dedfbbb0] __try_evict_buffer at ffffffffa0387bb8 [dm_bufio]
       #9 [ffff8813dedfbbd0] dm_bufio_shrink_scan at ffffffffa0387cc3 [dm_bufio]
      #10 [ffff8813dedfbc40] shrink_slab at ffffffff811a87ce
      #11 [ffff8813dedfbd30] shrink_zone at ffffffff811ad778
      #12 [ffff8813dedfbdc0] kswapd at ffffffff811ae92f
      #13 [ffff8813dedfbec0] kthread at ffffffff810a8428
      #14 [ffff8813dedfbf50] ret_from_fork at ffffffff81745242
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: bd293d071ffe ("dm bufio: fix deadlock with loop device")
    Depends-on: d0a255e795ab ("loop: set PF_MEMALLOC_NOIO for the worker thread")
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fec7a845f6befba0a8988f474fc36d79a2512f86
Author: Jason Gerecke <jason.gerecke@wacom.com>
Date:   Wed Aug 7 14:11:55 2019 -0700

    HID: wacom: Correct distance scale for 2nd-gen Intuos devices
    
    commit b72fb1dcd2ea9d29417711cb302cef3006fa8d5a upstream.
    
    Distance values reported by 2nd-gen Intuos tablets are on an inverted
    scale (0 == far, 63 == near). We need to change them over to a normal
    scale before reporting to userspace or else userspace drivers and
    applications can get confused.
    
    Ref: https://github.com/linuxwacom/input-wacom/issues/98
    Fixes: eda01dab53 ("HID: wacom: Add four new Intuos devices")
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76f66b8e77bc1e3fb7e7c1b8ef74076772ab7b51
Author: Aaron Armstrong Skomra <skomra@gmail.com>
Date:   Fri Aug 16 12:00:54 2019 -0700

    HID: wacom: correct misreported EKR ring values
    
    commit fcf887e7caaa813eea821d11bf2b7619a37df37a upstream.
    
    The EKR ring claims a range of 0 to 71 but actually reports
    values 1 to 72. The ring is used in relative mode so this
    change should not affect users.
    
    Signed-off-by: Aaron Armstrong Skomra <aaron.skomra@wacom.com>
    Fixes: 72b236d60218f ("HID: wacom: Add support for Express Key Remote.")
    Cc: <stable@vger.kernel.org> # v4.3+
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Reviewed-by: Jason Gerecke <jason.gerecke@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8512973ac6811a8c6837b8514d8061c40f35a2fe
Author: Naresh Kamboju <naresh.kamboju () linaro ! org>
Date:   Wed Aug 7 13:58:14 2019 +0000

    selftests: kvm: Adding config fragments
    
    [ Upstream commit c096397c78f766db972f923433031f2dec01cae0 ]
    
    selftests kvm test cases need pre-required kernel configs for the test
    to get pass.
    
    Signed-off-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fae00a62820ea457f2e6190a7c4162dd47c02ad2
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Mon Jul 29 15:27:55 2019 +0800

    perf pmu-events: Fix missing "cpu_clk_unhalted.core" event
    
    [ Upstream commit 8e6e5bea2e34c61291d00cb3f47560341aa84bc3 ]
    
    The events defined in pmu-events JSON are parsed and added into perf
    tool. For fixed counters, we handle the encodings between JSON and perf
    by using a static array fixed[].
    
    But the fixed[] has missed an important event "cpu_clk_unhalted.core".
    
    For example, on the Tremont platform,
    
      [root@localhost ~]# perf stat -e cpu_clk_unhalted.core -a
      event syntax error: 'cpu_clk_unhalted.core'
                           \___ parser error
    
    With this patch, the event cpu_clk_unhalted.core can be parsed.
    
      [root@localhost perf]# ./perf stat -e cpu_clk_unhalted.core -a -vvv
      ------------------------------------------------------------
      perf_event_attr:
        type                             4
        size                             112
        config                           0x3c
        sample_type                      IDENTIFIER
        read_format                      TOTAL_TIME_ENABLED|TOTAL_TIME_RUNNING
        disabled                         1
        inherit                          1
        exclude_guest                    1
      ------------------------------------------------------------
    ...
    
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jin Yao <yao.jin@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20190729072755.2166-1-yao.jin@linux.intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5db6357cc4116b096868c7ef101965d9fd3029ac
Author: He Zhe <zhe.he@windriver.com>
Date:   Fri Aug 2 16:29:52 2019 +0800

    perf cpumap: Fix writing to illegal memory in handling cpumap mask
    
    [ Upstream commit 5f5e25f1c7933a6e1673515c0b1d5acd82fea1ed ]
    
    cpu_map__snprint_mask() would write to illegal memory pointed by
    zalloc(0) when there is only one cpu.
    
    This patch fixes the calculation and adds sanity check against the input
    parameters.
    
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Fixes: 4400ac8a9a90 ("perf cpumap: Introduce cpu_map__snprint_mask()")
    Link: http://lkml.kernel.org/r/1564734592-15624-2-git-send-email-zhe.he@windriver.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5411aefc01894b274ed7c3c20fbbf36e38540363
Author: He Zhe <zhe.he@windriver.com>
Date:   Fri Aug 2 16:29:51 2019 +0800

    perf ftrace: Fix failure to set cpumask when only one cpu is present
    
    [ Upstream commit cf30ae726c011e0372fd4c2d588466c8b50a8907 ]
    
    The buffer containing the string used to set cpumask is overwritten at
    the end of the string later in cpu_map__snprint_mask due to not enough
    memory space, when there is only one cpu.
    
    And thus causes the following failure:
    
      $ perf ftrace ls
      failed to reset ftrace
      $
    
    This patch fixes the calculation of the cpumask string size.
    
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Fixes: dc23103278c5 ("perf ftrace: Add support for -a and -C option")
    Link: http://lkml.kernel.org/r/1564734592-15624-1-git-send-email-zhe.he@windriver.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93a6504dda134b18b8b16d40d38a4bff8ace5978
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Jun 24 09:39:59 2019 -0700

    drm/vmwgfx: fix memory leak when too many retries have occurred
    
    [ Upstream commit 6b7c3b86f0b63134b2ab56508921a0853ffa687a ]
    
    Currently when too many retries have occurred there is a memory
    leak on the allocation for reply on the error return path. Fix
    this by kfree'ing reply before returning.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: a9cd9c044aa9 ("drm/vmwgfx: Add a check to handle host message failure")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Deepak Rawat <drawat@vmware.com>
    Signed-off-by: Deepak Rawat <drawat@vmware.com>
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73898d72ca35eeeab58c029724806d69e3e11be9
Author: Valdis Kletnieks <valdis.kletnieks@vt.edu>
Date:   Wed Aug 7 23:27:17 2019 -0400

    x86/lib/cpu: Address missing prototypes warning
    
    [ Upstream commit 04f5bda84b0712d6f172556a7e8dca9ded5e73b9 ]
    
    When building with W=1, warnings about missing prototypes are emitted:
    
      CC      arch/x86/lib/cpu.o
    arch/x86/lib/cpu.c:5:14: warning: no previous prototype for 'x86_family' [-Wmissing-prototypes]
        5 | unsigned int x86_family(unsigned int sig)
          |              ^~~~~~~~~~
    arch/x86/lib/cpu.c:18:14: warning: no previous prototype for 'x86_model' [-Wmissing-prototypes]
       18 | unsigned int x86_model(unsigned int sig)
          |              ^~~~~~~~~
    arch/x86/lib/cpu.c:33:14: warning: no previous prototype for 'x86_stepping' [-Wmissing-prototypes]
       33 | unsigned int x86_stepping(unsigned int sig)
          |              ^~~~~~~~~~~~
    
    Add the proper include file so the prototypes are there.
    
    Signed-off-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/42513.1565234837@turing-police
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01b9d50557ea829b5fa5a1fb31b2667be8ff39e9
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Aug 7 12:23:57 2019 -0600

    libata: add SG safety checks in SFF pio transfers
    
    [ Upstream commit 752ead44491e8c91e14d7079625c5916b30921c5 ]
    
    Abort processing of a command if we run out of mapped data in the
    SG list. This should never happen, but a previous bug caused it to
    be possible. Play it safe and attempt to abort nicely if we don't
    have more SG segments left.
    
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b853d7cbd238400d4e6f8767e839c14ed7a06a45
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Aug 7 12:20:52 2019 -0600

    libata: have ata_scsi_rw_xlat() fail invalid passthrough requests
    
    [ Upstream commit 2d7271501720038381d45fb3dcbe4831228fc8cc ]
    
    For passthrough requests, libata-scsi takes what the user passes in
    as gospel. This can be problematic if the user fills in the CDB
    incorrectly. One example of that is in request sizes. For read/write
    commands, the CDB contains fields describing the transfer length of
    the request. These should match with the SG_IO header fields, but
    libata-scsi currently does no validation of that.
    
    Check that the number of blocks in the CDB for passthrough requests
    matches what was mapped into the request. If the CDB asks for more
    data then the validated SG_IO header fields, error it.
    
    Reported-by: Krishna Ram Prakash R <krp@gtux.in>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e47a7963485c636a0e75b192c898d72d16bac38
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Sat Aug 3 20:31:41 2019 +0800

    net: hisilicon: Fix dma_map_single failed on arm64
    
    [ Upstream commit 96a50c0d907ac8f5c3d6b051031a19eb8a2b53e3 ]
    
    On the arm64 platform, executing "ifconfig eth0 up" will fail,
    returning "ifconfig: SIOCSIFFLAGS: Input/output error."
    
    ndev->dev is not initialized, dma_map_single->get_dma_ops->
    dummy_dma_ops->__dummy_map_page will return DMA_ERROR_CODE
    directly, so when we use dma_map_single, the first parameter
    is to use the device of platform_device.
    
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 414938c46365c6e4cde9049fdf17a56801be8bdb
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Sat Aug 3 20:31:40 2019 +0800

    net: hisilicon: fix hip04-xmit never return TX_BUSY
    
    [ Upstream commit f2243b82785942be519016067ee6c55a063bbfe2 ]
    
    TX_DESC_NUM is 256, in tx_count, the maximum value of
    mod(TX_DESC_NUM - 1) is 254, the variable "count" in
    the hip04_mac_start_xmit function is never equal to
    (TX_DESC_NUM - 1), so hip04_mac_start_xmit never
    return NETDEV_TX_BUSY.
    
    tx_count is modified to mod(TX_DESC_NUM) so that
    the maximum value of tx_count can reach
    (TX_DESC_NUM - 1), then hip04_mac_start_xmit can reurn
    NETDEV_TX_BUSY.
    
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a888f6790bf05d4f67f16c466631a422bc221a31
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Sat Aug 3 20:31:39 2019 +0800

    net: hisilicon: make hip04_tx_reclaim non-reentrant
    
    [ Upstream commit 1a2c070ae805910a853b4a14818481ed2e17c727 ]
    
    If hip04_tx_reclaim is interrupted while it is running
    and then __napi_schedule continues to execute
    hip04_rx_poll->hip04_tx_reclaim, reentrancy occurs
    and oops is generated. So you need to mask the interrupt
    during the hip04_tx_reclaim run.
    
    The kernel oops exception stack is as follows:
    
    Unable to handle kernel NULL pointer dereference
    at virtual address 00000050
    pgd = c0003000
    [00000050] *pgd=80000000a04003, *pmd=00000000
    Internal error: Oops: 206 [#1] SMP ARM
    Modules linked in: hip04_eth mtdblock mtd_blkdevs mtd
    ohci_platform ehci_platform ohci_hcd ehci_hcd
    vfat fat sd_mod usb_storage scsi_mod usbcore usb_common
    CPU: 0 PID: 0 Comm: swapper/0 Tainted: G           O    4.4.185 #1
    Hardware name: Hisilicon A15
    task: c0a250e0 task.stack: c0a00000
    PC is at hip04_tx_reclaim+0xe0/0x17c [hip04_eth]
    LR is at hip04_tx_reclaim+0x30/0x17c [hip04_eth]
    pc : [<bf30c3a4>]    lr : [<bf30c2f4>]    psr: 600e0313
    sp : c0a01d88  ip : 00000000  fp : c0601f9c
    r10: 00000000  r9 : c3482380  r8 : 00000001
    r7 : 00000000  r6 : 000000e1  r5 : c3482000  r4 : 0000000c
    r3 : f2209800  r2 : 00000000  r1 : 00000000  r0 : 00000000
    Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment kernel
    Control: 32c5387d  Table: 03d28c80  DAC: 55555555
    Process swapper/0 (pid: 0, stack limit = 0xc0a00190)
    Stack: (0xc0a01d88 to 0xc0a02000)
    [<bf30c3a4>] (hip04_tx_reclaim [hip04_eth]) from [<bf30d2e0>]
                                                    (hip04_rx_poll+0x88/0x368 [hip04_eth])
    [<bf30d2e0>] (hip04_rx_poll [hip04_eth]) from [<c04c2d9c>] (net_rx_action+0x114/0x34c)
    [<c04c2d9c>] (net_rx_action) from [<c021eed8>] (__do_softirq+0x218/0x318)
    [<c021eed8>] (__do_softirq) from [<c021f284>] (irq_exit+0x88/0xac)
    [<c021f284>] (irq_exit) from [<c0240090>] (msa_irq_exit+0x11c/0x1d4)
    [<c0240090>] (msa_irq_exit) from [<c02677e0>] (__handle_domain_irq+0x110/0x148)
    [<c02677e0>] (__handle_domain_irq) from [<c0201588>] (gic_handle_irq+0xd4/0x118)
    [<c0201588>] (gic_handle_irq) from [<c0551700>] (__irq_svc+0x40/0x58)
    Exception stack(0xc0a01f30 to 0xc0a01f78)
    1f20:                                     c0ae8b40 00000000 00000000 00000000
    1f40: 00000002 ffffe000 c0601f9c 00000000 ffffffff c0a2257c c0a22440 c0831a38
    1f60: c0a01ec4 c0a01f80 c0203714 c0203718 600e0213 ffffffff
    [<c0551700>] (__irq_svc) from [<c0203718>] (arch_cpu_idle+0x20/0x3c)
    [<c0203718>] (arch_cpu_idle) from [<c025bfd8>] (cpu_startup_entry+0x244/0x29c)
    [<c025bfd8>] (cpu_startup_entry) from [<c054b0d8>] (rest_init+0xc8/0x10c)
    [<c054b0d8>] (rest_init) from [<c0800c58>] (start_kernel+0x468/0x514)
    Code: a40599e5 016086e2 018088e2 7660efe6 (503090e5)
    ---[ end trace 1db21d6d09c49d74 ]---
    Kernel panic - not syncing: Fatal exception in interrupt
    CPU3: stopping
    CPU: 3 PID: 0 Comm: swapper/3 Tainted: G      D    O    4.4.185 #1
    
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04766b8cf2a4510c420973943c0088fc1e0a1f9a
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Aug 6 10:55:12 2019 +0200

    net: cxgb3_main: Fix a resource leak in a error path in 'init_one()'
    
    [ Upstream commit debea2cd3193ac868289e8893c3a719c265b0612 ]
    
    A call to 'kfree_skb()' is missing in the error handling path of
    'init_one()'.
    This is already present in 'remove_one()' but is missing here.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a166c83eeadf349ffd91bc787fd0dae1bc5ff6c
Author: Sebastien Tisserant <stisserant@wallix.com>
Date:   Thu Aug 1 12:06:08 2019 -0500

    SMB3: Kernel oops mounting a encryptData share with CONFIG_DEBUG_VIRTUAL
    
    [ Upstream commit ee9d66182392695535cc9fccfcb40c16f72de2a9 ]
    
    Fix kernel oops when mounting a encryptData CIFS share with
    CONFIG_DEBUG_VIRTUAL
    
    Signed-off-by: Sebastien Tisserant <stisserant@wallix.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b019c0b081ccd581d766cd1602ee2f6d17982e8
Author: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
Date:   Tue Jun 11 14:13:20 2019 +0200

    HID: input: fix a4tech horizontal wheel custom usage
    
    [ Upstream commit 1c703b53e5bfb5c2205c30f0fb157ce271fd42fb ]
    
    Some a4tech mice use the 'GenericDesktop.00b8' usage to inform whether
    the previous wheel report was horizontal or vertical. Before
    c01908a14bf73 ("HID: input: add mapping for "Toggle Display" key") this
    usage was being mapped to 'Relative.Misc'. After the patch it's simply
    ignored (usage->type == 0 & usage->code == 0). Which ultimately makes
    hid-a4tech ignore the WHEEL/HWHEEL selection event, as it has no
    usage->type.
    
    We shouldn't rely on a mapping for that usage as it's nonstandard and
    doesn't really map to an input event. So we bypass the mapping and make
    sure the custom event handling properly handles both reports.
    
    Fixes: c01908a14bf73 ("HID: input: add mapping for "Toggle Display" key")
    Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6bc6d20e00a0baa357572fb7dd010cb9ffce49e
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sat Aug 3 10:11:27 2019 -0400

    NFSv4: Fix a potential sleep while atomic in nfs4_do_reclaim()
    
    [ Upstream commit c77e22834ae9a11891cb613bd9a551be1b94f2bc ]
    
    John Hubbard reports seeing the following stack trace:
    
    nfs4_do_reclaim
       rcu_read_lock /* we are now in_atomic() and must not sleep */
           nfs4_purge_state_owners
               nfs4_free_state_owner
                   nfs4_destroy_seqid_counter
                       rpc_destroy_wait_queue
                           cancel_delayed_work_sync
                               __cancel_work_timer
                                   __flush_work
                                       start_flush_work
                                           might_sleep:
                                            (kernel/workqueue.c:2975: BUG)
    
    The solution is to separate out the freeing of the state owners
    from nfs4_purge_state_owners(), and perform that outside the atomic
    context.
    
    Reported-by: John Hubbard <jhubbard@nvidia.com>
    Fixes: 0aaaf5c424c7f ("NFS: Cache state owners after files are closed")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77a6e51271f08e6b10426477afa3b4afa9bfa221
Author: Wang Xiayang <xywang.sjtu@sjtu.edu.cn>
Date:   Wed Jul 31 16:15:42 2019 +0800

    net/ethernet/qlogic/qed: force the string buffer NULL-terminated
    
    [ Upstream commit 3690c8c9a8edff0db077a38783112d8fe12a7dd2 ]
    
    strncpy() does not ensure NULL-termination when the input string
    size equals to the destination buffer size 30.
    The output string is passed to qed_int_deassertion_aeu_bit()
    which calls DP_INFO() and relies NULL-termination.
    
    Use strlcpy instead. The other conditional branch above strncpy()
    needs no fix as snprintf() ensures NULL-termination.
    
    This issue is identified by a Coccinelle script.
    
    Signed-off-by: Wang Xiayang <xywang.sjtu@sjtu.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4132b908c8fe5cbdac619911f116aec7e6fa1910
Author: Wang Xiayang <xywang.sjtu@sjtu.edu.cn>
Date:   Wed Jul 31 15:25:59 2019 +0800

    can: peak_usb: force the string buffer NULL-terminated
    
    [ Upstream commit e787f19373b8a5fa24087800ed78314fd17b984a ]
    
    strncpy() does not ensure NULL-termination when the input string size
    equals to the destination buffer size IFNAMSIZ. The output string is
    passed to dev_info() which relies on the NULL-termination.
    
    Use strlcpy() instead.
    
    This issue is identified by a Coccinelle script.
    
    Signed-off-by: Wang Xiayang <xywang.sjtu@sjtu.edu.cn>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02c2a3118e9946deb53c45dd31d5048c258ead65
Author: Wang Xiayang <xywang.sjtu@sjtu.edu.cn>
Date:   Wed Jul 31 15:31:14 2019 +0800

    can: sja1000: force the string buffer NULL-terminated
    
    [ Upstream commit cd28aa2e056cd1ea79fc5f24eed0ce868c6cab5c ]
    
    strncpy() does not ensure NULL-termination when the input string size
    equals to the destination buffer size IFNAMSIZ. The output string
    'name' is passed to dev_info which relies on NULL-termination.
    
    Use strlcpy() instead.
    
    This issue is identified by a Coccinelle script.
    
    Signed-off-by: Wang Xiayang <xywang.sjtu@sjtu.edu.cn>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d349ff8270129c9aa3d75c1b558a91218f9f9b4
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Thu Aug 1 16:26:42 2019 +0200

    perf bench numa: Fix cpu0 binding
    
    [ Upstream commit 6bbfe4e602691b90ac866712bd4c43c51e546a60 ]
    
    Michael reported an issue with perf bench numa failing with binding to
    cpu0 with '-0' option.
    
      # perf bench numa mem -p 3 -t 1 -P 512 -s 100 -zZcm0 --thp 1 -M 1 -ddd
      # Running 'numa/mem' benchmark:
    
       # Running main, "perf bench numa numa-mem -p 3 -t 1 -P 512 -s 100 -zZcm0 --thp 1 -M 1 -ddd"
      binding to node 0, mask: 0000000000000001 => -1
      perf: bench/numa.c:356: bind_to_memnode: Assertion `!(ret)' failed.
      Aborted (core dumped)
    
    This happens when the cpu0 is not part of node0, which is the benchmark
    assumption and we can see that's not the case for some powerpc servers.
    
    Using correct node for cpu0 binding.
    
    Reported-by: Michael Petlan <mpetlan@redhat.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Link: http://lkml.kernel.org/r/20190801142642.28004-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e11cafa958675deb912f81693b644f94eb38428
Author: Juliana Rodrigueiro <juliana.rodrigueiro@intra2net.com>
Date:   Wed Jul 31 15:17:23 2019 +0200

    isdn: hfcsusb: Fix mISDN driver crash caused by transfer buffer on the stack
    
    [ Upstream commit d8a1de3d5bb881507602bc02e004904828f88711 ]
    
    Since linux 4.9 it is not possible to use buffers on the stack for DMA transfers.
    
    During usb probe the driver crashes with "transfer buffer is on stack" message.
    
    This fix k-allocates a buffer to be used on "read_reg_atomic", which is a macro
    that calls "usb_control_msg" under the hood.
    
    Kernel 4.19 backtrace:
    
    usb_hcd_submit_urb+0x3e5/0x900
    ? sched_clock+0x9/0x10
    ? log_store+0x203/0x270
    ? get_random_u32+0x6f/0x90
    ? cache_alloc_refill+0x784/0x8a0
    usb_submit_urb+0x3b4/0x550
    usb_start_wait_urb+0x4e/0xd0
    usb_control_msg+0xb8/0x120
    hfcsusb_probe+0x6bc/0xb40 [hfcsusb]
    usb_probe_interface+0xc2/0x260
    really_probe+0x176/0x280
    driver_probe_device+0x49/0x130
    __driver_attach+0xa9/0xb0
    ? driver_probe_device+0x130/0x130
    bus_for_each_dev+0x5a/0x90
    driver_attach+0x14/0x20
    ? driver_probe_device+0x130/0x130
    bus_add_driver+0x157/0x1e0
    driver_register+0x51/0xe0
    usb_register_driver+0x5d/0x120
    ? 0xf81ed000
    hfcsusb_drv_init+0x17/0x1000 [hfcsusb]
    do_one_initcall+0x44/0x190
    ? free_unref_page_commit+0x6a/0xd0
    do_init_module+0x46/0x1c0
    load_module+0x1dc1/0x2400
    sys_init_module+0xed/0x120
    do_fast_syscall_32+0x7a/0x200
    entry_SYSENTER_32+0x6b/0xbe
    
    Signed-off-by: Juliana Rodrigueiro <juliana.rodrigueiro@intra2net.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa79a247cbbbd047f07cc39b3875017b613c1040
Author: Jozsef Kadlecsik <kadlec@netfilter.org>
Date:   Tue Jul 23 10:25:55 2019 +0200

    netfilter: ipset: Fix rename concurrency with listing
    
    [ Upstream commit 6c1f7e2c1b96ab9b09ac97c4df2bd9dc327206f6 ]
    
    Shijie Luo reported that when stress-testing ipset with multiple concurrent
    create, rename, flush, list, destroy commands, it can result
    
    ipset <version>: Broken LIST kernel message: missing DATA part!
    
    error messages and broken list results. The problem was the rename operation
    was not properly handled with respect of listing. The patch fixes the issue.
    
    Reported-by: Shijie Luo <luoshijie1@huawei.com>
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80688abcb90ae32bd425df6e6e34746242eb0a3f
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Jul 26 16:27:36 2019 +0800

    isdn: mISDN: hfcsusb: Fix possible null-pointer dereferences in start_isoc_chain()
    
    [ Upstream commit a0d57a552b836206ad7705a1060e6e1ce5a38203 ]
    
    In start_isoc_chain(), usb_alloc_urb() on line 1392 may fail
    and return NULL. At this time, fifo->iso[i].urb is assigned to NULL.
    
    Then, fifo->iso[i].urb is used at some places, such as:
    LINE 1405:    fill_isoc_urb(fifo->iso[i].urb, ...)
                      urb->number_of_packets = num_packets;
                      urb->transfer_flags = URB_ISO_ASAP;
                      urb->actual_length = 0;
                      urb->interval = interval;
    LINE 1416:    fifo->iso[i].urb->...
    LINE 1419:    fifo->iso[i].urb->...
    
    Thus, possible null-pointer dereferences may occur.
    
    To fix these bugs, "continue" is added to avoid using fifo->iso[i].urb
    when it is NULL.
    
    These bugs are found by a static analysis tool STCheck written by us.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9fe87b7fbcddb51f050ab63651cb99a2c671f922
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Thu Jul 25 13:59:55 2019 +0300

    qed: RDMA - Fix the hw_ver returned in device attributes
    
    [ Upstream commit 81af04b432fdfabcdbd2c06be2ee647e3ca41a22 ]
    
    The hw_ver field was initialized to zero. Return the chip revision.
    This is relevant for rdma driver.
    
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccaf6f84778388bd649e8d718633c03d860ba078
Author: Bob Ham <bob.ham@puri.sm>
Date:   Wed Jul 24 07:52:27 2019 -0700

    net: usb: qmi_wwan: Add the BroadMobi BM818 card
    
    [ Upstream commit 9a07406b00cdc6ec689dc142540739575c717f3c ]
    
    The BroadMobi BM818 M.2 card uses the QMI protocol
    
    Signed-off-by: Bob Ham <bob.ham@puri.sm>
    Signed-off-by: Angus Ainslie (Purism) <angus@akkea.ca>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a25aea719825c1f6b738ae27569685b0ba9c2059
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Fri Jul 26 09:42:43 2019 +0300

    ASoC: ti: davinci-mcasp: Correct slot_width posed constraint
    
    [ Upstream commit 1e112c35e3c96db7c8ca6ddaa96574f00c06e7db ]
    
    The slot_width is a property for the bus while the constraint for
    SNDRV_PCM_HW_PARAM_SAMPLE_BITS is for the in memory format.
    
    Applying slot_width constraint to sample_bits works most of the time, but
    it will blacklist valid formats in some cases.
    
    With slot_width 24 we can support S24_3LE and S24_LE formats as they both
    look the same on the bus, but a a 24 constraint on sample_bits would not
    allow S24_LE as it is stored in 32bits in memory.
    
    Implement a simple hw_rule function to allow all formats which require less
    or equal number of bits on the bus as slot_width (if configured).
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lore.kernel.org/r/20190726064244.3762-2-peter.ujfalusi@ti.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e5e5f149dbfe86cab537d13591abe9826c12a3b
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Tue Jul 23 17:11:51 2019 -0500

    st_nci_hci_connectivity_event_received: null check the allocation
    
    [ Upstream commit 3008e06fdf0973770370f97d5f1fba3701d8281d ]
    
    devm_kzalloc may fail and return NULL. So the null check is needed.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd8f6058951ab4d90bbc2e4f10fee73f01a7bb1c
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Tue Jul 23 17:04:30 2019 -0500

    st21nfca_connectivity_event_received: null check the allocation
    
    [ Upstream commit 9891d06836e67324c9e9c4675ed90fc8b8110034 ]
    
    devm_kzalloc may fail and return null. So the null check is needed.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a56c79efe4dc8ae560eb2c9a4b755d57c8c2e8f4
Author: Ricard Wanderlof <ricard.wanderlof@axis.com>
Date:   Wed Jul 24 11:38:44 2019 +0200

    ASoC: Fail card instantiation if DAI format setup fails
    
    [ Upstream commit 40aa5383e393d72f6aa3943a4e7b1aae25a1e43b ]
    
    If the DAI format setup fails, there is no valid communication format
    between CPU and CODEC, so fail card instantiation, rather than continue
    with a card that will most likely not function properly.
    
    Signed-off-by: Ricard Wanderlof <ricardw@axis.com>
    Link: https://lore.kernel.org/r/alpine.DEB.2.20.1907241132350.6338@lnxricardw1.se.axis.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16c832681f7e14866f821af6ca76937bd347d493
Author: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
Date:   Mon Jun 24 08:34:13 2019 +0000

    can: dev: call netif_carrier_off() in register_candev()
    
    [ Upstream commit c63845609c4700488e5eacd6ab4d06d5d420e5ef ]
    
    CONFIG_CAN_LEDS is deprecated. When trying to use the generic netdev
    trigger as suggested, there's a small inconsistency with the link
    property: The LED is on initially, stays on when the device is brought
    up, and then turns off (as expected) when the device is brought down.
    
    Make sure the LED always reflects the state of the CAN device.
    
    Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2a74958ee0d27f05c016cfcc821b0d3d11b9f45
Author: Thomas Falcon <tlfalcon@linux.ibm.com>
Date:   Tue Jul 16 17:25:10 2019 -0500

    bonding: Force slave speed check after link state recovery for 802.3ad
    
    [ Upstream commit 12185dfe44360f814ac4ead9d22ad2af7511b2e9 ]
    
    The following scenario was encountered during testing of logical
    partition mobility on pseries partitions with bonded ibmvnic
    adapters in LACP mode.
    
    1. Driver receives a signal that the device has been
       swapped, and it needs to reset to initialize the new
       device.
    
    2. Driver reports loss of carrier and begins initialization.
    
    3. Bonding driver receives NETDEV_CHANGE notifier and checks
       the slave's current speed and duplex settings. Because these
       are unknown at the time, the bond sets its link state to
       BOND_LINK_FAIL and handles the speed update, clearing
       AD_PORT_LACP_ENABLE.
    
    4. Driver finishes recovery and reports that the carrier is on.
    
    5. Bond receives a new notification and checks the speed again.
       The speeds are valid but miimon has not altered the link
       state yet.  AD_PORT_LACP_ENABLE remains off.
    
    Because the slave's link state is still BOND_LINK_FAIL,
    no further port checks are made when it recovers. Though
    the slave devices are operational and have valid speed
    and duplex settings, the bond will not send LACPDU's. The
    simplest fix I can see is to force another speed check
    in bond_miimon_commit. This way the bond will update
    AD_PORT_LACP_ENABLE if needed when transitioning from
    BOND_LINK_FAIL to BOND_LINK_UP.
    
    CC: Jarod Wilson <jarod@redhat.com>
    CC: Jay Vosburgh <j.vosburgh@gmail.com>
    CC: Veaceslav Falico <vfalico@gmail.com>
    CC: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed896480d445e09a55279f15c76101bc3db0615d
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Jul 18 09:43:33 2019 +0100

    ASoC: dapm: Fix handling of custom_stop_condition on DAPM graph walks
    
    [ Upstream commit 8dd26dff00c0636b1d8621acaeef3f6f3a39dd77 ]
    
    DPCM uses snd_soc_dapm_dai_get_connected_widgets to build a
    list of the widgets connected to a specific front end DAI so it
    can search through this list for available back end DAIs. The
    custom_stop_condition was added to is_connected_ep to facilitate this
    list not containing more widgets than is necessary. Doing so both
    speeds up the DPCM handling as less widgets need to be searched and
    avoids issues with CODEC to CODEC links as these would be confused
    with back end DAIs if they appeared in the list of available widgets.
    
    custom_stop_condition was implemented by aborting the graph walk
    when the condition is triggered, however there is an issue with this
    approach. Whilst walking the graph is_connected_ep should update the
    endpoints cache on each widget, if the walk is aborted the number
    of attached end points is unknown for that sub-graph. When the stop
    condition triggered, the original patch ignored the triggering widget
    and returned zero connected end points; a later patch updated this
    to set the triggering widget's cache to 1 and return that. Both of
    these approaches result in inaccurate values being stored in various
    end point caches as the values propagate back through the graph,
    which can result in later issues with widgets powering/not powering
    unexpectedly.
    
    As the original goal was to reduce the size of the widget list passed
    to the DPCM code, the simplest solution is to limit the functionality
    of the custom_stop_condition to the widget list. This means the rest
    of the graph will still be processed resulting in correct end point
    caches, but only widgets up to the stop condition will be added to the
    returned widget list.
    
    Fixes: 6742064aef7f ("ASoC: dapm: support user-defined stop condition in dai_get_connected_widgets")
    Fixes: 5fdd022c2026 ("ASoC: dpcm: play nice with CODEC<->CODEC links")
    Fixes: 09464974eaa8 ("ASoC: dapm: Fix to return correct path list in is_connected_ep.")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20190718084333.15598-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdfb3b352767c98cefe6ca50ba4ed4b34d4aea20
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Sat Jul 20 07:22:45 2019 -0500

    netfilter: ebtables: fix a memory leak bug in compat
    
    [ Upstream commit 15a78ba1844a8e052c1226f930133de4cef4e7ad ]
    
    In compat_do_replace(), a temporary buffer is allocated through vmalloc()
    to hold entries copied from the user space. The buffer address is firstly
    saved to 'newinfo->entries', and later on assigned to 'entries_tmp'. Then
    the entries in this temporary buffer is copied to the internal kernel
    structure through compat_copy_entries(). If this copy process fails,
    compat_do_replace() should be terminated. However, the allocated temporary
    buffer is not freed on this path, leading to a memory leak.
    
    To fix the bug, free the buffer before returning from compat_do_replace().
    
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bb56df55934237ae7a35299fb17f231a46e3e31
Author: Vladimir Kondratiev <vladimir.kondratiev@linux.intel.com>
Date:   Tue Jul 16 10:36:56 2019 +0300

    mips: fix cacheinfo
    
    [ Upstream commit b8bea8a5e5d942e62203416ab41edecaed4fda02 ]
    
    Because CONFIG_OF defined for MIPS, cacheinfo attempts to fill information
    from DT, ignoring data filled by architecture routine. This leads to error
    reported
    
     cacheinfo: Unable to detect cache hierarchy for CPU 0
    
    Way to fix this provided in
    commit fac51482577d ("drivers: base: cacheinfo: fix x86 with
     CONFIG_OF enabled")
    
    Utilize same mechanism to report that cacheinfo set by architecture
    specific function
    
    Signed-off-by: Vladimir Kondratiev <vladimir.kondratiev@linux.intel.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15b5ebb148f79ac970d40c0f70cf3bc4fdac6885
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Mon May 13 13:47:25 2019 +0200

    MIPS: kernel: only use i8253 clocksource with periodic clockevent
    
    [ Upstream commit a07e3324538a989b7cdbf2c679be6a7f9df2544f ]
    
    i8253 clocksource needs a free running timer. This could only
    be used, if i8253 clockevent is set up as periodic.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27608c8e4092b899732948c9c200d9af97e92e21
Author: Ilya Trukhanov <lahvuun@gmail.com>
Date:   Tue Jul 2 13:37:16 2019 +0300

    HID: Add 044f:b320 ThrustMaster, Inc. 2 in 1 DT
    
    [ Upstream commit 65f11c72780fa9d598df88def045ccb6a885cf80 ]
    
    Enable force feedback for the Thrustmaster Dual Trigger 2 in 1 Rumble Force
    gamepad. Compared to other Thrustmaster devices, left and right rumble
    motors here are swapped.
    
    Signed-off-by: Ilya Trukhanov <lahvuun@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
