commit 5c43c539346972b9a1d5f38dc62db5a39997488d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Apr 19 10:11:58 2015 +0200

    Linux 3.14.39

commit 01c343844ceb1d4a1dc25763b633f73e05fe93e7
Author: Majd Dibbiny <majd@mellanox.com>
Date:   Wed Mar 18 16:51:37 2015 +0200

    IB/mlx4: Saturate RoCE port PMA counters in case of overflow
    
    commit 61a3855bb726cbb062ef02a31a832dea455456e0 upstream.
    
    For RoCE ports, we set the u32 PMA values based on u64 HCA counters. In case of
    overflow, according to the IB spec, we have to saturate a counter to its
    max value, do that.
    
    Fixes: c37791349cc7 ('IB/mlx4: Support PMA counters for IBoE')
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Hadar Hen Zion <hadarh@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecca64226ce2960280921e09ae33e90f82b5c408
Author: Sasha Levin <sasha.levin@oracle.com>
Date:   Fri Jan 23 20:47:00 2015 -0500

    net: llc: use correct size for sysctl timeout entries
    
    commit 6b8d9117ccb4f81b1244aafa7bc70ef8fa45fc49 upstream.
    
    The timeout entries are sizeof(int) rather than sizeof(long), which
    means that when they were getting read we'd also leak kernel memory
    to userspace along with the timeout values.
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a9eb844a4c126b7e975a086f99f35699e88c011
Author: Sasha Levin <sasha.levin@oracle.com>
Date:   Tue Feb 3 08:55:58 2015 -0500

    net: rds: use correct size for max unacked packets and bytes
    
    commit db27ebb111e9f69efece08e4cb6a34ff980f8896 upstream.
    
    Max unacked packets/bytes is an int while sizeof(long) was used in the
    sysctl table.
    
    This means that when they were getting read we'd also leak kernel memory
    to userspace along with the timeout values.
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f9fe6e3fbdf1d3c6ffc874ec93f1eb59eaaee77
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Mar 4 05:55:21 2015 -0800

    media: s5p-mfc: fix mmap support for 64bit arch
    
    commit 05b676ab42f624425d5f6519276e506b812fa058 upstream.
    
    TASK_SIZE is depends on the systems architecture (32 or 64 bits) and it
    should not be used for defining offset boundary for mmaping buffers for
    CAPTURE and OUTPUT queues. This patch fixes support for MMAP calls on
    the CAPTURE queue on 64bit architectures (like ARM64).
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Kamil Debski <k.debski@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60b9edff89a168839693a793d5847b01f3d2aefe
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Wed Dec 10 12:35:34 2014 -0300

    sh_veu: v4l2_dev wasn't set
    
    commit ab3120300be067a2d41a027c41db0b2c662ab200 upstream.
    
    The v4l2_dev field of struct video_device must be set correctly.
    This was never done for this driver, so no video nodes were created
    anymore.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07d3fa2cdb860b7b17a7d8ce1c2d53841c91aa71
Author: Mike Christie <michaelc@cs.wisc.edu>
Date:   Fri Apr 10 02:47:27 2015 -0500

    iscsi target: fix oops when adding reject pdu
    
    commit b815fc12d4dd2b5586184fb4f867caff05a810d4 upstream.
    
    This fixes a oops due to a double list add when adding a reject PDU for
    iscsit_allocate_iovecs allocation failures. The cmd has already been
    added to the conn_cmd_list in iscsit_setup_scsi_cmd, so this has us call
    iscsit_reject_cmd.
    
    Note that for ERL0 the reject PDU is not actually sent, so this patch
    is not completely tested. Just verified we do not oops. The problem is the
    add reject functions return -1 which is returned all the way up to
    iscsi_target_rx_thread which for ERL0 will drop the connection.
    
    Signed-off-by: Mike Christie <michaelc@cs.wisc.edu>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6642619b3a74771f7ace0f0a653dde628815eaeb
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Apr 6 17:57:44 2015 -0400

    ioctx_alloc(): fix vma (and file) leak on failure
    
    commit deeb8525f9bcea60f5e86521880c1161de7a5829 upstream.
    
    If we fail past the aio_setup_ring(), we need to destroy the
    mapping.  We don't need to care about anybody having found ctx,
    or added requests to it, since the last failure exit is exactly
    the failure to make ctx visible to lookups.
    
    Reproducer (based on one by Joe Mario <jmario@redhat.com>):
    
    void count(char *p)
    {
            char s[80];
            printf("%s: ", p);
            fflush(stdout);
            sprintf(s, "/bin/cat /proc/%d/maps|/bin/fgrep -c '/[aio] (deleted)'", getpid());
            system(s);
    }
    
    int main()
    {
            io_context_t *ctx;
            int created, limit, i, destroyed;
            FILE *f;
    
            count("before");
            if ((f = fopen("/proc/sys/fs/aio-max-nr", "r")) == NULL)
                    perror("opening aio-max-nr");
            else if (fscanf(f, "%d", &limit) != 1)
                    fprintf(stderr, "can't parse aio-max-nr\n");
            else if ((ctx = calloc(limit, sizeof(io_context_t))) == NULL)
                    perror("allocating aio_context_t array");
            else {
                    for (i = 0, created = 0; i < limit; i++) {
                            if (io_setup(1000, ctx + created) == 0)
                                    created++;
                    }
                    for (i = 0, destroyed = 0; i < created; i++)
                            if (io_destroy(ctx[i]) == 0)
                                    destroyed++;
                    printf("created %d, failed %d, destroyed %d\n",
                            created, limit - created, destroyed);
                    count("after");
            }
    }
    
    Found-by: Joe Mario <jmario@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c82bd1171466bac9d9ab5c33896008bbdaf0aeb1
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Apr 8 17:00:32 2015 -0400

    ocfs2: _really_ sync the right range
    
    commit 64b4e2526d1cf6e6a4db6213d6e2b6e6ab59479a upstream.
    
    "ocfs2 syncs the wrong range" had been broken; prior to it the
    code was doing the wrong thing in case of O_APPEND, all right,
    but _after_ it we were syncing the wrong range in 100% cases.
    *ppos, aka iocb->ki_pos is incremented prior to that point,
    so we are always doing sync on the area _after_ the one we'd
    written to.
    
    Spotted by Joseph Qi <joseph.qi@huawei.com> back in January;
    unfortunately, I'd missed his mail back then ;-/
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9fda3f26cd849651cd4592d910a211979e3bff6
Author: John Soni Jose <sony.john-n@emulex.com>
Date:   Thu Feb 12 06:45:47 2015 +0530

    be2iscsi: Fix kernel panic when device initialization fails
    
    commit 2e7cee027b26cbe7e6685a7a14bd2850bfe55d33 upstream.
    
    Kernel panic was happening as iscsi_host_remove() was called on
    a host which was not yet added.
    
    Signed-off-by: John Soni Jose <sony.john-n@emulex.com>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db6312ab779380004590b29612ce84af981ca374
Author: David Disseldorp <ddiss@suse.de>
Date:   Fri Mar 13 14:20:29 2015 +0100

    cifs: fix use-after-free bug in find_writable_file
    
    commit e1e9bda22d7ddf88515e8fe401887e313922823e upstream.
    
    Under intermittent network outages, find_writable_file() is susceptible
    to the following race condition, which results in a user-after-free in
    the cifs_writepages code-path:
    
    Thread 1                                        Thread 2
    ========                                        ========
    
    inv_file = NULL
    refind = 0
    spin_lock(&cifs_file_list_lock)
    
    // invalidHandle found on openFileList
    
    inv_file = open_file
    // inv_file->count currently 1
    
    cifsFileInfo_get(inv_file)
    // inv_file->count = 2
    
    spin_unlock(&cifs_file_list_lock);
    
    cifs_reopen_file()                            cifs_close()
    // fails (rc != 0)                            ->cifsFileInfo_put()
                                           spin_lock(&cifs_file_list_lock)
                                           // inv_file->count = 1
                                           spin_unlock(&cifs_file_list_lock)
    
    spin_lock(&cifs_file_list_lock);
    list_move_tail(&inv_file->flist,
          &cifs_inode->openFileList);
    spin_unlock(&cifs_file_list_lock);
    
    cifsFileInfo_put(inv_file);
    ->spin_lock(&cifs_file_list_lock)
    
      // inv_file->count = 0
      list_del(&cifs_file->flist);
      // cleanup!!
      kfree(cifs_file);
    
      spin_unlock(&cifs_file_list_lock);
    
    spin_lock(&cifs_file_list_lock);
    ++refind;
    // refind = 1
    goto refind_writable;
    
    At this point we loop back through with an invalid inv_file pointer
    and a refind value of 1. On second pass, inv_file is not overwritten on
    openFileList traversal, and is subsequently dereferenced.
    
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Reviewed-by: Jeff Layton <jlayton@samba.org>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b397872340adb46737dc2002ade846834d32cb1
Author: Sachin Prabhu <sprabhu@redhat.com>
Date:   Wed Feb 4 13:10:26 2015 +0000

    cifs: smb2_clone_range() - exit on unhandled error
    
    commit 2477bc58d49edb1c0baf59df7dc093dce682af2b upstream.
    
    While attempting to clone a file on a samba server, we receive a
    STATUS_INVALID_DEVICE_REQUEST. This is mapped to -EOPNOTSUPP which
    isn't handled in smb2_clone_range(). We end up looping in the while loop
    making same call to the samba server over and over again.
    
    The proposed fix is to exit and return the error value when encountered
    with an unhandled error.
    
    Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a673d7acafe13f7ff23dd292ff185623517bf2c
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Fri Jan 16 15:05:39 2015 -0500

    n_tty: Fix read buffer overwrite when no newline
    
    commit fb5ef9e7da39968fec6d6f37f20a23d23740c75e upstream.
    
    In canon mode, the read buffer head will advance over the buffer tail
    if the input > 4095 bytes without receiving a line termination char.
    
    Discard additional input until a line termination is received.
    Before evaluating for overflow, the 'room' value is normalized for
    I_PARMRK and 1 byte is reserved for line termination (even in !icanon
    mode, in case the mode is switched). The following table shows the
    transform:
    
     actual buffer |  'room' value before overflow calc
      space avail  |    !I_PARMRK    |    I_PARMRK
     --------------------------------------------------
          0        |       -1        |       -1
          1        |        0        |        0
          2        |        1        |        0
          3        |        2        |        0
          4+       |        3        |        1
    
    When !icanon or when icanon and the read buffer contains newlines,
    normalized 'room' values of -1 and 0 are clamped to 0, and
    'overflow' is 0, so read_head is not adjusted and the input i/o loop
    exits (setting no_room if called from flush_to_ldisc()). No input
    is discarded since the reader does have input available to read
    which ensures forward progress.
    
    When icanon and the read buffer does not contain newlines and the
    normalized 'room' value is 0, then overflow and room are reset to 1,
    so that the i/o loop will process the next input char normally
    (except for parity errors which are ignored). Thus, erasures, signalling
    chars, 7-bit mode, etc. will continue to be handled properly.
    
    If the input char processed was not a line termination char, then
    the canon_head index will not have advanced, so the normalized 'room'
    value will now be -1 and 'overflow' will be set, which indicates the
    read_head can safely be reset, effectively erasing the last char
    processed.
    
    If the input char processed was a line termination, then the
    canon_head index will have advanced, so 'overflow' is cleared to 0,
    the read_head is not reset, and 'room' is cleared to 0, which exits
    the i/o loop (because the reader now have input available to read
    which ensures forward progress).
    
    Note that it is possible for a line termination to be received, and
    for the reader to copy the line to the user buffer before the
    input i/o loop is ready to process the next input char. This is
    why the i/o loop recomputes the room/overflow state with every
    input char while handling overflow.
    
    Finally, if the input data was processed without receiving
    a line termination (so that overflow is still set), the pty
    driver must receive a write wakeup. A pty writer may be waiting
    to write more data in n_tty_write() but without unthrottling
    here that wakeup will not arrive, and forward progress will halt.
    (Normally, the pty writer is woken when the reader reads data out
    of the buffer and more space become available).
    
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    (backported from commit fb5ef9e7da39968fec6d6f37f20a23d23740c75e)
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>

commit 9185aae67a63b81187f28225137595208895b5c1
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Mar 13 14:51:51 2015 +0100

    tty: serial: fsl_lpuart: clear receive flag on FIFO flush
    
    commit 8e4934c6d6c659e22b1b746af4196683e77ce6ca upstream.
    
    When the receiver was enabled during startup, a character could
    have been in the FIFO when the UART get initially used. The
    driver configures the (receive) watermark level, and flushes the
    FIFO. However, the receive flag (RDRF) could still be set at that
    stage (as mentioned in the register description of UARTx_RWFIFO).
    This leads to an interrupt which won't be handled properly in
    interrupt mode: The receive interrupt function lpuart_rxint checks
    the FIFO count, which is 0 at that point (due to the flush
    during initialization). The problem does not manifest when using
    DMA to receive characters.
    
    Fix this situation by explicitly read the status register, which
    leads to clearing of the RDRF flag. Due to the flush just after
    the status flag read, a explicit data read is not to required.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1f3c3bf135c3f43c4a0db789645e9b0886241fc
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Mon Mar 23 18:27:42 2015 +0200

    usb: xhci: apply XHCI_AVOID_BEI quirk to all Intel xHCI controllers
    
    commit 227a4fd801c8a9fa2c4700ab98ec1aec06e3b44d upstream.
    
    When a device with an isochronous endpoint is plugged into the Intel
    xHCI host controller, and the driver submits multiple frames per URB,
    the xHCI driver will set the Block Event Interrupt (BEI) flag on all
    but the last TD for the URB. This causes the host controller to place
    an event on the event ring, but not send an interrupt. When the last
    TD for the URB completes, BEI is cleared, and we get an interrupt for
    the whole URB.
    
    However, under Intel xHCI host controllers, if the event ring is full
    of events from transfers with BEI set,  an "Event Ring is Full" event
    will be posted to the last entry of the event ring,  but no interrupt
    is generated. Host will cease all transfer and command executions and
    wait until software completes handling the pending events in the event
    ring.  That means xHC stops, but event of "event ring is full" is not
    notified. As the result, the xHC looks like dead to user.
    
    This patch is to apply XHCI_AVOID_BEI quirk to Intel xHC devices. And
    it should be backported to kernels as old as 3.0, that contains the
    commit 69e848c2090a ("Intel xhci: Support EHCI/xHCI port switching.").
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Tested-by: Alistair Grant <akgrant0710@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adedb712076cdd762ddcf1f97f94d866bb3cc4a7
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Mon Mar 23 18:27:41 2015 +0200

    usb: xhci: handle Config Error Change (CEC) in xhci driver
    
    commit 9425183d177aa4a2f09d01a74925124f0778b595 upstream.
    
    Linux xHCI driver doesn't report and handle port cofig error change.
    If Port Configure Error for root hub port occurs, CEC bit in PORTSC
    would be set by xHC and remains 1. This happends when the root port
    fails to configure its link partner, e.g. the port fails to exchange
    port capabilities information using Port Capability LMPs.
    
    Then the Port Status Change Events will be blocked until all status
    change bits(CEC is one of the change bits) are cleared('0') (refer to
    xHCI spec 4.19.2). Otherwise, the port status change event for this
    root port will not be generated anymore, then root port would look
    like dead for user and can't be recovered until a Host Controller
    Reset(HCRST).
    
    This patch is to check CEC bit in PORTSC in xhci_get_port_status()
    and set a Config Error in the return status if CEC is set. This will
    cause a ClearPortFeature request, where CEC bit is cleared in
    xhci_clear_port_change_bit().
    
    [The commit log is based on initial Marvell patch posted at
    http://marc.info/?l=linux-kernel&m=142323612321434&w=2]
    
    Reported-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1d9552b16f62bd4683df89905bb61e14d0b6f20
Author: Thomas Schlichter <thomas.schlichter@web.de>
Date:   Tue Mar 31 20:24:39 2015 +0200

    cpuidle: ACPI: do not overwrite name and description of C0
    
    commit c7e8bdf5872c5a8f5a6494e16fe839c38a0d3d3d upstream.
    
    Fix a bug that leads to showing the name and description of C-state C0
    as "<null>" in sysfs after the ACPI C-states changed (e.g. after AC->DC
    or DC->AC
    transition).
    
    The function poll_idle_init() in drivers/cpuidle/driver.c initializes the
    state 0 during cpuidle_register_driver(), so we better do not overwrite it
    again with '\0' during acpi_processor_cst_has_changed().
    
    Signed-off-by: Thomas Schlichter <thomas.schlichter@web.de>
    Reviewed-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ac0e0a446a0d07b83bd8bc09b439b7785a9f089
Author: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Date:   Tue Mar 31 20:15:09 2015 +0200

    cpuidle: remove state_count field from struct cpuidle_device
    
    commit d75e4af14e228bbe3f86e29bcecb8e6be98d4e04 upstream.
    
    Thomas Schlichter reports the following issue on his Samsung NC20:
    
    "The C-states C1 and C2 to the OS when connected to AC, and additionally
     provides the C3 C-state when disconnected from AC.  However, the number
     of C-states shown in sysfs is fixed to the number of C-states present
     at boot.
       If I boot with AC connected, I always only see the C-states up to C2
       even if I disconnect AC.
    
       The reason is commit 130a5f692425 (ACPI / cpuidle: remove dev->state_count
       setting).  It removes the update of dev->state_count, but sysfs uses
       exactly this variable to show the C-states.
    
       The fix is to use drv->state_count in sysfs.  As this is currently the
       last user of dev->state_count, this variable can be completely removed."
    
    Remove dev->state_count as per the above.
    
    Reported-by: Thomas Schlichter <thomas.schlichter@web.de>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    [ rjw: Changelog ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92fe878fdabf6b29d1550f40dc65eaa249c19e57
Author: Andreas Werner <kernel@andy89.org>
Date:   Sun Mar 22 17:35:52 2015 +0100

    can: flexcan: Deferred on Regulator return EPROBE_DEFER
    
    commit 555828ef45f825d6ee06559f0304163550eed380 upstream.
    
    Return EPROBE_DEFER if Regulator returns EPROBE_DEFER
    
    If the Flexcan driver is built into kernel and a regulator is used to
    enable the CAN transceiver, the Flexcan driver may not use the regulator.
    
    When initializing the Flexcan device with a regulator defined in the device
    tree, but not initialized, the regulator subsystem returns EPROBE_DEFER, hence
    the Flexcan init fails.
    
    The solution for this is to return EPROBE_DEFER if regulator is not initialized
    and wait until the regulator is initialized.
    
    Signed-off-by: Andreas Werner <kernel@andy89.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a5845d8b9b6a68b9a1d50abd4739418fc17c855
Author: Stefan Lippers-Hollmann <s.l-h@gmx.de>
Date:   Mon Mar 30 22:44:27 2015 +0200

    x86/reboot: Add ASRock Q1900DC-ITX mainboard reboot quirk
    
    commit 80313b3078fcd2ca51970880d90757f05879a193 upstream.
    
    The ASRock Q1900DC-ITX mainboard (Baytrail-D) hangs randomly in
    both BIOS and UEFI mode while rebooting unless reboot=pci is
    used. Add a quirk to reboot via the pci method.
    
    The problem is very intermittent and hard to debug, it might succeed
    rebooting just fine 40 times in a row - but fails half a dozen times
    the next day. It seems to be slightly less common in BIOS CSM mode
    than native UEFI (with the CSM disabled), but it does happen in either
    mode. Since I've started testing this patch in late january, rebooting
    has been 100% reliable.
    
    Most of the time it already hangs during POST, but occasionally it
    might even make it through the bootloader and the kernel might even
    start booting, but then hangs before the mode switch. The same symptoms
    occur with grub-efi, gummiboot and grub-pc, just as well as (at least)
    kernel 3.16-3.19 and 4.0-rc6 (I haven't tried older kernels than 3.16).
    Upgrading to the most current mainboard firmware of the ASRock
    Q1900DC-ITX, version 1.20, does not improve the situation.
    
    ( Searching the web seems to suggest that other Bay Trail-D mainboards
      might be affected as well. )
    --
    Signed-off-by: Stefan Lippers-Hollmann <s.l-h@gmx.de>
    Cc: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/20150330224427.0fb58e42@mir
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b4104be9c087876bd89b47ad29f2dc136655465
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Fri Mar 27 13:35:52 2015 +0200

    dmaengine: omap-dma: Fix memory leak when terminating running transfer
    
    commit 02d88b735f5a60f04dbf6d051b76e1877a0d0844 upstream.
    
    In omap_dma_start_desc the vdesc->node is removed from the virt-dma
    framework managed lists (to be precise from the desc_issued list).
    If a terminate_all comes before the transfer finishes the omap_desc will
    not be freed up because it is not in any of the lists and we stopped the
    DMA channel so the transfer will not going to complete.
    There is no special sequence for leaking memory when using cyclic (audio)
    transfer: with every start and stop of a cyclic transfer the driver leaks
    struct omap_desc worth of memory.
    
    Free up the allocated memory directly in omap_dma_terminate_all() since the
    framework will not going to do that for us.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    CC: <linux-omap@vger.kernel.org>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aef709320362aa4c86e96e1e48fb6c3aa357d17f
Author: Darshana Padmadas <darshanapadmadas@gmail.com>
Date:   Sat Mar 28 12:07:14 2015 +0530

    iio: imu: Use iio_trigger_get for indio_dev->trig assignment
    
    commit 4ce7ca89d6e8eae9e201cd0e972ba323f33e2fb4 upstream.
    
    This patch uses iio_trigger_get to increment the reference
    count of trigger device, to avoid incorrect assignment.
    Can result in a null pointer dereference during removal if the
    trigger has been changed before removal.
    
    This patch refers to a similar situation encountered through the
    following discussion:
    http://www.spinics.net/lists/linux-iio/msg13669.html
    
    Signed-off-by: Darshana Padmadas <darshanapadmadas@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d780d7aa25a0f0081144b5a63db23e16e9ba320
Author: Viorel Suman <viorel.suman@gmail.com>
Date:   Wed Feb 18 20:05:21 2015 +0200

    iio: inv_mpu6050: Clear timestamps fifo while resetting hardware fifo
    
    commit 4dac0a8eefd55bb1f157d1a5a084531334a2d74c upstream.
    
    A hardware fifo reset always imply an invalidation of the
    existing timestamps, so we'll clear timestamps fifo on
    successfull hardware fifo reset.
    
    Signed-off-by: Viorel Suman <viorel.suman@gmail.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d4f2fa495097c0992d7a2cad197295f60179c41
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Mar 4 10:31:47 2015 +0100

    Defer processing of REQ_PREEMPT requests for blocked devices
    
    commit bba0bdd7ad4713d82338bcd9b72d57e9335a664b upstream.
    
    SCSI transport drivers and SCSI LLDs block a SCSI device if the
    transport layer is not operational. This means that in this state
    no requests should be processed, even if the REQ_PREEMPT flag has
    been set. This patch avoids that a rescan shortly after a cable
    pull sporadically triggers the following kernel oops:
    
    BUG: unable to handle kernel paging request at ffffc9001a6bc084
    IP: [<ffffffffa04e08f2>] mlx4_ib_post_send+0xd2/0xb30 [mlx4_ib]
    Process rescan-scsi-bus (pid: 9241, threadinfo ffff88053484a000, task ffff880534aae100)
    Call Trace:
     [<ffffffffa0718135>] srp_post_send+0x65/0x70 [ib_srp]
     [<ffffffffa071b9df>] srp_queuecommand+0x1cf/0x3e0 [ib_srp]
     [<ffffffffa0001ff1>] scsi_dispatch_cmd+0x101/0x280 [scsi_mod]
     [<ffffffffa0009ad1>] scsi_request_fn+0x411/0x4d0 [scsi_mod]
     [<ffffffff81223b37>] __blk_run_queue+0x27/0x30
     [<ffffffff8122a8d2>] blk_execute_rq_nowait+0x82/0x110
     [<ffffffff8122a9c2>] blk_execute_rq+0x62/0xf0
     [<ffffffffa000b0e8>] scsi_execute+0xe8/0x190 [scsi_mod]
     [<ffffffffa000b2f3>] scsi_execute_req+0xa3/0x130 [scsi_mod]
     [<ffffffffa000c1aa>] scsi_probe_lun+0x17a/0x450 [scsi_mod]
     [<ffffffffa000ce86>] scsi_probe_and_add_lun+0x156/0x480 [scsi_mod]
     [<ffffffffa000dc2f>] __scsi_scan_target+0xdf/0x1f0 [scsi_mod]
     [<ffffffffa000dfa3>] scsi_scan_host_selected+0x183/0x1c0 [scsi_mod]
     [<ffffffffa000edfb>] scsi_scan+0xdb/0xe0 [scsi_mod]
     [<ffffffffa000ee13>] store_scan+0x13/0x20 [scsi_mod]
     [<ffffffff811c8d9b>] sysfs_write_file+0xcb/0x160
     [<ffffffff811589de>] vfs_write+0xce/0x140
     [<ffffffff81158b53>] sys_write+0x53/0xa0
     [<ffffffff81464592>] system_call_fastpath+0x16/0x1b
     [<00007f611c9d9300>] 0x7f611c9d92ff
    
    Reported-by: Max Gurtuvoy <maxg@mellanox.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Mike Christie <michaelc@cs.wisc.edu>
    Signed-off-by: James Bottomley <JBottomley@Odin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 244f310987d1764dfdf890b43c13b883dada745d
Author: Doug Goldstein <cardoe@cardoe.com>
Date:   Mon Mar 23 20:34:48 2015 -0500

    USB: ftdi_sio: Use jtag quirk for SNAP Connect E10
    
    commit b229a0f840f774d29d8fedbf5deb344ca36b7f1a upstream.
    
    This patch uses the existing CALAO Systems ftdi_8u2232c_probe in order
    to avoid attaching a TTY to the JTAG port as this board is based on the
    CALAO Systems reference design and needs the same fix up.
    
    Signed-off-by: Doug Goldstein <cardoe@cardoe.com>
    [johan: clean up probe logic ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd4ce47308e2987035ddc3293757914b2dcff2a4
Author: Doug Goldstein <cardoe@cardoe.com>
Date:   Sun Mar 15 21:56:04 2015 -0500

    USB: ftdi_sio: Added custom PID for Synapse Wireless product
    
    commit 4899c054a90439477b24da8977db8d738376fe90 upstream.
    
    Synapse Wireless uses the FTDI VID with a custom PID of 0x9090 for their
    SNAP Stick 200 product.
    
    Signed-off-by: Doug Goldstein <cardoe@cardoe.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76a1444b9961eca2697f4b121a40e76b70e87a82
Author: David Miller <davem@davemloft.net>
Date:   Wed Mar 18 23:18:40 2015 -0400

    radeon: Do not directly dereference pointers to BIOS area.
    
    commit f2c9e560b406f2f6b14b345c7da33467dee9cdf2 upstream.
    
    Use readb() and memcpy_fromio() accessors instead.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbcec5461485e43b7a3324aa06b5a22e1b872e41
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 23 00:18:48 2015 -0400

    writeback: fix possible underflow in write bandwidth calculation
    
    commit c72efb658f7c8b27ca3d0efb5cfd5ded9fcac89e upstream.
    
    From 1ebf33901ecc75d9496862dceb1ef0377980587c Mon Sep 17 00:00:00 2001
    From: Tejun Heo <tj@kernel.org>
    Date: Mon, 23 Mar 2015 00:08:19 -0400
    
    2f800fbd777b ("writeback: fix dirtied pages accounting on redirty")
    introduced account_page_redirty() which reverts stat updates for a
    redirtied page, making BDI_DIRTIED no longer monotonically increasing.
    
    bdi_update_write_bandwidth() uses the delta in BDI_DIRTIED as the
    basis for bandwidth calculation.  While unlikely, since the above
    patch, the newer value may be lower than the recorded past value and
    underflow the bandwidth calculation leading to a wild result.
    
    Fix it by subtracing min of the old and new values when calculating
    delta.  AFAIK, there hasn't been any report of it happening but the
    resulting erratic behavior would be non-critical and temporary, so
    it's possible that the issue is happening without being reported.  The
    risk of the fix is very low, so tagged for -stable.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Wu Fengguang <fengguang.wu@intel.com>
    Cc: Greg Thelen <gthelen@google.com>
    Fixes: 2f800fbd777b ("writeback: fix dirtied pages accounting on redirty")
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8b274f40cb5cf5ef5cd18f9830a60233011b631
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Mar 4 10:37:43 2015 -0500

    writeback: add missing INITIAL_JIFFIES init in global_update_bandwidth()
    
    commit 7d70e15480c0450d2bfafaad338a32e884fc215e upstream.
    
    global_update_bandwidth() uses static variable update_time as the
    timestamp for the last update but forgets to initialize it to
    INITIALIZE_JIFFIES.
    
    This means that global_dirty_limit will be 5 mins into the future on
    32bit and some large amount jiffies into the past on 64bit.  This
    isn't critical as the only effect is that global_dirty_limit won't be
    updated for the first 5 mins after booting on 32bit machines,
    especially given the auxiliary nature of global_dirty_limit's role -
    protecting against global dirty threshold's sudden dips; however, it
    does lead to unintended suboptimal behavior.  Fix it.
    
    Fixes: c42843f2f0bb ("writeback: introduce smoothed global dirty limit")
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Jan Kara <jack@suse.cz>
    Cc: Wu Fengguang <fengguang.wu@intel.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da715490285d40afb34148891a2b720043633ad8
Author: Brian Silverman <brian@peloton-tech.com>
Date:   Wed Feb 18 16:23:56 2015 -0800

    sched: Fix RLIMIT_RTTIME when PI-boosting to RT
    
    commit 746db9443ea57fd9c059f62c4bfbf41cf224fe13 upstream.
    
    When non-realtime tasks get priority-inheritance boosted to a realtime
    scheduling class, RLIMIT_RTTIME starts to apply to them. However, the
    counter used for checking this (the same one used for SCHED_RR
    timeslices) was not getting reset. This meant that tasks running with a
    non-realtime scheduling class which are repeatedly boosted to a realtime
    one, but never block while they are running realtime, eventually hit the
    timeout without ever running for a time over the limit. This patch
    resets the realtime timeslice counter when un-PI-boosting from an RT to
    a non-RT scheduling class.
    
    I have some test code with two threads and a shared PTHREAD_PRIO_INHERIT
    mutex which induces priority boosting and spins while boosted that gets
    killed by a SIGXCPU on non-fixed kernels but doesn't with this patch
    applied. It happens much faster with a CONFIG_PREEMPT_RT kernel, and
    does happen eventually with PREEMPT_VOLUNTARY kernels.
    
    Signed-off-by: Brian Silverman <brian@peloton-tech.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: austin@peloton-tech.com
    Link: http://lkml.kernel.org/r/1424305436-6716-1-git-send-email-brian@peloton-tech.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c605b1d706cff4c4c43e1d0712d19478ef880ab
Author: Gu Zheng <guz.fnst@cn.fujitsu.com>
Date:   Wed Mar 25 15:55:20 2015 -0700

    mm/memory hotplug: postpone the reset of obsolete pgdat
    
    commit b0dc3a342af36f95a68fe229b8f0f73552c5ca08 upstream.
    
    Qiu Xishi reported the following BUG when testing hot-add/hot-remove node under
    stress condition:
    
      BUG: unable to handle kernel paging request at 0000000000025f60
      IP: next_online_pgdat+0x1/0x50
      PGD 0
      Oops: 0000 [#1] SMP
      ACPI: Device does not support D3cold
      Modules linked in: fuse nls_iso8859_1 nls_cp437 vfat fat loop dm_mod coretemp mperf crc32c_intel ghash_clmulni_intel aesni_intel ablk_helper cryptd lrw gf128mul glue_helper aes_x86_64 pcspkr microcode igb dca i2c_algo_bit ipv6 megaraid_sas iTCO_wdt i2c_i801 i2c_core iTCO_vendor_support tg3 sg hwmon ptp lpc_ich pps_core mfd_core acpi_pad rtc_cmos button ext3 jbd mbcache sd_mod crc_t10dif scsi_dh_alua scsi_dh_rdac scsi_dh_hp_sw scsi_dh_emc scsi_dh ahci libahci libata scsi_mod [last unloaded: rasf]
      CPU: 23 PID: 238 Comm: kworker/23:1 Tainted: G           O 3.10.15-5885-euler0302 #1
      Hardware name: HUAWEI TECHNOLOGIES CO.,LTD. Huawei N1/Huawei N1, BIOS V100R001 03/02/2015
      Workqueue: events vmstat_update
      task: ffffa800d32c0000 ti: ffffa800d32ae000 task.ti: ffffa800d32ae000
      RIP: 0010: next_online_pgdat+0x1/0x50
      RSP: 0018:ffffa800d32afce8  EFLAGS: 00010286
      RAX: 0000000000001440 RBX: ffffffff81da53b8 RCX: 0000000000000082
      RDX: 0000000000000000 RSI: 0000000000000082 RDI: 0000000000000000
      RBP: ffffa800d32afd28 R08: ffffffff81c93bfc R09: ffffffff81cbdc96
      R10: 00000000000040ec R11: 00000000000000a0 R12: ffffa800fffb3440
      R13: ffffa800d32afd38 R14: 0000000000000017 R15: ffffa800e6616800
      FS:  0000000000000000(0000) GS:ffffa800e6600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000025f60 CR3: 0000000001a0b000 CR4: 00000000001407e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
        refresh_cpu_vm_stats+0xd0/0x140
        vmstat_update+0x11/0x50
        process_one_work+0x194/0x3d0
        worker_thread+0x12b/0x410
        kthread+0xc6/0xd0
        ret_from_fork+0x7c/0xb0
    
    The cause is the "memset(pgdat, 0, sizeof(*pgdat))" at the end of
    try_offline_node, which will reset all the content of pgdat to 0, as the
    pgdat is accessed lock-free, so that the users still using the pgdat
    will panic, such as the vmstat_update routine.
    
    process A:                              offline node XX:
    
    vmstat_updat()
       refresh_cpu_vm_stats()
         for_each_populated_zone()
           find online node XX
         cond_resched()
                                            offline cpu and memory, then try_offline_node()
                                            node_set_offline(nid), and memset(pgdat, 0, sizeof(*pgdat))
           zone = next_zone(zone)
             pg_data_t *pgdat = zone->zone_pgdat;  // here pgdat is NULL now
               next_online_pgdat(pgdat)
                 next_online_node(pgdat->node_id);  // NULL pointer access
    
    So the solution here is postponing the reset of obsolete pgdat from
    try_offline_node() to hotadd_new_pgdat(), and just resetting
    pgdat->nr_zones and pgdat->classzone_idx to be 0 rather than the memset
    0 to avoid breaking pointer information in pgdat.
    
    Signed-off-by: Gu Zheng <guz.fnst@cn.fujitsu.com>
    Reported-by: Xishi Qiu <qiuxishi@huawei.com>
    Suggested-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Cc: Taku Izumi <izumi.taku@jp.fujitsu.com>
    Cc: Tang Chen <tangchen@cn.fujitsu.com>
    Cc: Xie XiuQi <xiexiuqi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95d7ade78a9dc90b71396d1ddb9da403e03418f2
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Tue Jan 27 18:08:22 2015 +0530

    nbd: fix possible memory leak
    
    commit ff6b8090e26ef7649ef0cc6b42389141ef48b0cf upstream.
    
    we have already allocated memory for nbd_dev, but we were not
    releasing that memory and just returning the error value.
    
    Signed-off-by: Sudip Mukherjee <sudip@vectorindia.org>
    Acked-by: Paul Clements <Paul.Clements@SteelEye.com>
    Signed-off-by: Markus Pargmann <mpa@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98163132369d94dbd1d6268d7f549342fa6c4e7a
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Mar 16 09:08:07 2015 +0200

    iwlwifi: dvm: run INIT firmware again upon .start()
    
    commit 9c8928f5176766bec79f272bd47b7124e11cccbd upstream.
    
    The assumption before this patch was that we don't need to
    run again the INIT firmware after the system booted. The
    INIT firmware runs calibrations which impact the physical
    layer's behavior.
    Users reported that it may be helpful to run these
    calibrations again every time the interface is brought up.
    The penatly is minimal, since the calibrations run fast.
    This fixes:
    https://bugzilla.kernel.org/show_bug.cgi?id=94341
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f40fc98d0b046ba153442b3bfd7887437f2ebd30
Author: Shachar Raindel <raindel@mellanox.com>
Date:   Wed Mar 18 17:39:08 2015 +0000

    IB/uverbs: Prevent integer overflow in ib_umem_get address arithmetic
    
    commit 8494057ab5e40df590ef6ef7d66324d3ae33356b upstream.
    
    Properly verify that the resulting page aligned end address is larger
    than both the start address and the length of the memory area requested.
    
    Both the start and length arguments for ib_umem_get are controlled by
    the user. A misbehaving user can provide values which will cause an
    integer overflow when calculating the page aligned end address.
    
    This overflow can cause also miscalculation of the number of pages
    mapped, and additional logic issues.
    
    Addresses: CVE-2014-8159
    Signed-off-by: Shachar Raindel <raindel@mellanox.com>
    Signed-off-by: Jack Morgenstein <jackm@mellanox.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 485d37770f43e476566ec83c8059c81989a86301
Author: Eli Cohen <eli@dev.mellanox.co.il>
Date:   Sun Sep 14 16:47:52 2014 +0300

    IB/core: Avoid leakage from kernel to user space
    
    commit 377b513485fd885dea1083a9a5430df65b35e048 upstream.
    
    Clear the reserved field of struct ib_uverbs_async_event_desc which is
    copied to user space.
    
    Signed-off-by: Eli Cohen <eli@mellanox.com>
    Reviewed-by: Yann Droneaud <ydroneaud@opteya.com>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ab0f4da798ac88c2f320806b872212cabbc7f5d
Author: David Sterba <dsterba@suse.cz>
Date:   Fri Jan 2 19:12:57 2015 +0100

    btrfs: simplify insert_orphan_item
    
    commit 9c4f61f01d269815bb7c37be3ede59c5587747c6 upstream.
    
    We can search and add the orphan item in one go,
    btrfs_insert_orphan_item will find out if the item already exists.
    
    Signed-off-by: David Sterba <dsterba@suse.cz>
    Cc: Chris Mason <clm@fb.com>
    Cc: Roman Mamedov <rm@romanrm.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79ea2bfc7d9cac1949bec2cb09b622becb7d54b6
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Apr 15 19:00:32 2015 +0100

    tcp: Fix crash in TCP Fast Open
    
    Commit 355a901e6cf1 ("tcp: make connect() mem charging friendly")
    changed tcp_send_syn_data() to perform an open-coded copy of the 'syn'
    skb rather than using skb_copy_expand().
    
    The open-coded copy does not cover the skb_shared_info::gso_segs
    field, so in the new skb it is left set to 0.  When this commit was
    backported into stable branches between 3.10.y and 3.16.7-ckty
    inclusive, it triggered the BUG() in tcp_transmit_skb().
    
    Since Linux 3.18 the GSO segment count is kept in the
    tcp_skb_cb::tcp_gso_segs field and tcp_send_syn_data() does copy the
    tcp_skb_cb structure to the new skb, so mainline and newer stable
    branches are not affected.
    
    Set skb_shared_info::gso_segs to the correct value of 1.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93aad6489861adb737296b48c9f4484ab7b04b7c
Author: Joe Perches <joe@perches.com>
Date:   Mon Mar 23 18:01:35 2015 -0700

    selinux: fix sel_write_enforce broken return value
    
    commit 6436a123a147db51a0b06024a8350f4c230e73ff upstream.
    
    Return a negative error value like the rest of the entries in this function.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Acked-by:  Stephen Smalley <sds@tycho.nsa.gov>
    [PM: tweaked subject line]
    Signed-off-by: Paul Moore <pmoore@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4188b15dbacf9d21b3308d3c5d798b20a459e9a7
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Thu Mar 26 09:25:44 2015 +0530

    ARC: SA_SIGINFO ucontext regs off-by-one
    
    commit 6914e1e3f63caa829431160f0f7093292daef2d5 upstream.
    
    The regfile provided to SA_SIGINFO signal handler as ucontext was off by
    one due to pt_regs gutter cleanups in 2013.
    
    Before handling signal, user pt_regs are copied onto user_regs_struct and copied
    back later. Both structs are binary compatible. This was all fine until
    commit 2fa919045b72 (ARC: pt_regs update #2) which removed the empty stack slot
    at top of pt_regs (corresponding to first pad) and made the corresponding
    fixup in struct user_regs_struct (the pad in there was moved out of
    @scratch - not removed altogether as it is part of ptrace ABI)
    
     struct user_regs_struct {
    +       long pad;
            struct {
    -               long pad;
                    long bta, lp_start, lp_end,....
            } scratch;
     ...
     }
    
    This meant that now user_regs_struct was off by 1 reg w.r.t pt_regs and
    signal code needs to user_regs_struct.scratch to reflect it as pt_regs,
    which is what this commit does.
    
    This problem was hidden for 2 years, because both save/restore, despite
    using wrong location, were using the same location. Only an interim
    inspection (reproducer below) exposed the issue.
    
         void handle_segv(int signo, siginfo_t *info, void *context)
         {
            ucontext_t *uc = context;
            struct user_regs_struct *regs = &(uc->uc_mcontext.regs);
    
            printf("regs %x %x\n",               <=== prints 7 8 (vs. 8 9)
                   regs->scratch.r8, regs->scratch.r9);
         }
    
         int main()
         {
            struct sigaction sa;
    
            sa.sa_sigaction = handle_segv;
            sa.sa_flags = SA_SIGINFO;
            sigemptyset(&sa.sa_mask);
            sigaction(SIGSEGV, &sa, NULL);
    
            asm volatile(
            "mov    r7, 7   \n"
            "mov    r8, 8   \n"
            "mov    r9, 9   \n"
            "mov    r10, 10 \n"
            :::"r7","r8","r9","r10");
    
            *((unsigned int*)0x10) = 0;
         }
    
    Fixes: 2fa919045b72ec892e "ARC: pt_regs update #2: Remove unused gutter at start of pt_regs"
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a4188fdc3846b89f2ee85fcd64ca708d9fa96be
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Thu Feb 26 09:55:03 2015 +0100

    PCI/AER: Avoid info leak in __print_tlp_header()
    
    commit a1b7f2f6367944d445c6853035830a35c6343939 upstream.
    
    Commit fab4c256a58b ("PCI/AER: Add a TLP header print helper") introduced
    the helper function __print_tlp_header(), but contrary to the intention,
    the behaviour did change: Since we're taking the address of the parameter
    t, the first 4 or 8 bytes printed will be the value of the pointer t
    itself, and the remaining 12 or 8 bytes will be who-knows-what (something
    from the stack).
    
    We want to show the values of the four members of the struct
    aer_header_log_regs; that can be done without ugly and error-prone casts.
    On little-endian this should produce the same output as originally
    intended, and since no-one has complained about getting garbage output so
    far, I think big-endian should be ok too.
    
    Fixes: fab4c256a58b ("PCI/AER: Add a TLP header print helper")
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 613adacd18f72858ccf92aed9ce0735b14dc25c5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 8 20:47:55 2015 +0200

    ALSA: hda - Fix headphone pin config for Lifebook T731
    
    commit cc7016ab1a22fb26f388c2fb2b692b89897cbc3e upstream.
    
    Some BIOS version of Fujitsu Lifebook T731 seems to set up the
    headphone pin (0x21) without the assoc number 0x0f while it's set only
    to the output on the docking port (0x1a).  With the recent commit
    [03ad6a8c93b6: ALSA: hda - Fix "PCM" name being used on one DAC when
     there are two DACs], this resulted in the weird mixer element
    mapping where the headphone on the laptop is assigned as a shared
    volume with the speaker and the docking port is assigned as an
    individual headphone.
    
    This patch improves the situation by correcting the headphone pin
    config to the more appropriate value.
    
    Reported-and-tested-by: Taylor Smock <smocktaylor@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 328927c7aaf8d7743ccd1f0df514155ff46af694
Author: Kailang Yang <kailang@realtek.com>
Date:   Wed Apr 8 16:34:00 2015 +0800

    ALSA: hda/realtek - Make more stable to get pin sense for ALC283
    
    commit a59d7199f62b8336570972dcc288321d0ec999fe upstream.
    
    Pin sense will active when power pin is wake up.
    Power pin will not wake up immediately during resume state.
    Add some delay to wait for power pin activated.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a8bc76409acd4bc64250f43f974d4e6463a39fa
Author: Dmitry M. Fedin <dmitry.fedin@gmail.com>
Date:   Thu Apr 9 17:37:03 2015 +0300

    ALSA: usb - Creative USB X-Fi Pro SB1095 volume knob support
    
    commit 3dc8523fa7412e731441c01fb33f003eb3cfece1 upstream.
    
    Adds an entry for Creative USB X-Fi to the rc_config array in
    mixer_quirks.c to allow use of volume knob on the device.
    Adds support for newer X-Fi Pro card, known as "Model No. SB1095"
    with USB ID "041e:3237"
    
    Signed-off-by: Dmitry M. Fedin <dmitry.fedin@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f858097eb8433b0c28ceaca8e992b338fb392772
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Mar 26 17:14:55 2015 +0800

    ALSA: hda - Add one more node in the EAPD supporting candidate list
    
    commit af95b41426e0b58279f8ff0ebe420df49a4e96b8 upstream.
    
    We have a HP machine which use the codec node 0x17 connecting the
    internal speaker, and from the node capability, we saw the EAPD,
    if we don't set the EAPD on for this node, the internal speaker
    can't output any sound.
    
    BugLink: https://bugs.launchpad.net/bugs/1436745
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
