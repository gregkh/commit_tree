commit e74e2950a0d6f800858e54860d7124c86e494f62
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Sep 26 14:07:14 2021 +0200

    Linux 5.4.149
    
    Link: https://lore.kernel.org/r/20210924124332.229289734@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20210925120748.206179334@linuxfoundation.org
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 382526348612be42873ec92bc4948996bd421c07
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 12:08:17 2021 -0700

    drm/nouveau/nvkm: Replace -ENOSYS with -ENODEV
    
    commit e8f71f89236ef82d449991bfbc237e3cb6ea584f upstream.
    
    nvkm test builds fail with the following error.
    
      drivers/gpu/drm/nouveau/nvkm/engine/device/ctrl.c: In function 'nvkm_control_mthd_pstate_info':
      drivers/gpu/drm/nouveau/nvkm/engine/device/ctrl.c:60:35: error: overflow in conversion from 'int' to '__s8' {aka 'signed char'} changes value from '-251' to '5'
    
    The code builds on most architectures, but fails on parisc where ENOSYS
    is defined as 251.
    
    Replace the error code with -ENODEV (-19).  The actual error code does
    not really matter and is not passed to userspace - it just has to be
    negative.
    
    Fixes: 7238eca4cf18 ("drm/nouveau: expose pstate selection per-power source in sysfs")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 409cb0b3d45ad6a9b809f9ec77166a02b13740b6
Author: Yu-Tung Chang <mtwget@gmail.com>
Date:   Mon Aug 30 13:25:32 2021 +0800

    rtc: rx8010: select REGMAP_I2C
    
    [ Upstream commit 0c45d3e24ef3d3d87c5e0077b8f38d1372af7176 ]
    
    The rtc-rx8010 uses the I2C regmap but doesn't select it in Kconfig so
    depending on the configuration the build may fail. Fix it.
    
    Signed-off-by: Yu-Tung Chang <mtwget@gmail.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210830052532.40356-1-mtwget@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43832bf76363d7c9730e42a0ddbe3e22772ffcfe
Author: Li Jinlin <lijinlin3@huawei.com>
Date:   Tue Sep 7 20:12:42 2021 +0800

    blk-throttle: fix UAF by deleteing timer in blk_throtl_exit()
    
    [ Upstream commit 884f0e84f1e3195b801319c8ec3d5774e9bf2710 ]
    
    The pending timer has been set up in blk_throtl_init(). However, the
    timer is not deleted in blk_throtl_exit(). This means that the timer
    handler may still be running after freeing the timer, which would
    result in a use-after-free.
    
    Fix by calling del_timer_sync() to delete the timer in blk_throtl_exit().
    
    Signed-off-by: Li Jinlin <lijinlin3@huawei.com>
    Link: https://lore.kernel.org/r/20210907121242.2885564-1-lijinlin3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c37a34d7975fcff432bbd6178215951ef1559654
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:53 2021 +0200

    pwm: stm32-lp: Don't modify HW state in .remove() callback
    
    [ Upstream commit d44084c93427bb0a9261432db1a8ca76a42d805e ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a29e68ea8e8d8492c1d0d7d9931d45861b50593
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:52 2021 +0200

    pwm: rockchip: Don't modify HW state in .remove() callback
    
    [ Upstream commit 9d768cd7fd42bb0be16f36aec48548fca5260759 ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed60d2db3171d2686540cfcb951054610300e0cb
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:51 2021 +0200

    pwm: img: Don't modify HW state in .remove() callback
    
    [ Upstream commit c68eb29c8e9067c08175dd0414f6984f236f719d ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b16f4acf6b65a22a01783fc62b669287bb9d8b0a
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:23 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_delete_snapshot_group
    
    [ Upstream commit 17243e1c3072b8417a5ebfc53065d0a87af7ca77 ]
    
    kobject_put() should be used to cleanup the memory associated with the
    kobject instead of kobject_del().  See the section "Kobject removal" of
    "Documentation/core-api/kobject.rst".
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-7-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-7-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 594addd4369e1255bb5bbe8e5ee104cb4eca2bbc
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:21 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_snapshot_group
    
    [ Upstream commit b2fe39c248f3fa4bbb2a20759b4fdd83504190f7 ]
    
    If kobject_init_and_add returns with error, kobject_put() is needed here
    to avoid memory leak, because kobject_init_and_add may return error
    without freeing the memory associated with the kobject it allocated.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-6-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-6-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 237ca37ca5ac45d8b91f145000dece214ce45a7e
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:18 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_delete_##name##_group
    
    [ Upstream commit a3e181259ddd61fd378390977a1e4e2316853afa ]
    
    The kobject_put() should be used to cleanup the memory associated with the
    kobject instead of kobject_del.  See the section "Kobject removal" of
    "Documentation/core-api/kobject.rst".
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-5-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-5-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 288c8b5ba52dbe08d1e753c4e42dca9d39ac7b8f
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:15 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_##name##_group
    
    [ Upstream commit 24f8cb1ed057c840728167dab33b32e44147c86f ]
    
    If kobject_init_and_add return with error, kobject_put() is needed here to
    avoid memory leak, because kobject_init_and_add may return error without
    freeing the memory associated with the kobject it allocated.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-4-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-4-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc70f0c8c3deb1f0af5bf9c9574af12fbcf8a3f9
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:12 2021 -0700

    nilfs2: fix NULL pointer in nilfs_##name##_attr_release
    
    [ Upstream commit dbc6e7d44a514f231a64d9d5676e001b660b6448 ]
    
    In nilfs_##name##_attr_release, kobj->parent should not be referenced
    because it is a NULL pointer.  The release() method of kobject is always
    called in kobject_put(kobj), in the implementation of kobject_put(), the
    kobj->parent will be assigned as NULL before call the release() method.
    So just use kobj to get the subgroups, which is more efficient and can fix
    a NULL pointer reference problem.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-3-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-3-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c3ba404881d77181f566441c14ecd48bfab3266
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:09 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_device_group
    
    [ Upstream commit 5f5dec07aca7067216ed4c1342e464e7307a9197 ]
    
    Patch series "nilfs2: fix incorrect usage of kobject".
    
    This patchset from Nanyong Sun fixes memory leak issues and a NULL
    pointer dereference issue caused by incorrect usage of kboject in nilfs2
    sysfs implementation.
    
    This patch (of 6):
    
    Reported by syzkaller:
    
      BUG: memory leak
      unreferenced object 0xffff888100ca8988 (size 8):
      comm "syz-executor.1", pid 1930, jiffies 4294745569 (age 18.052s)
      hex dump (first 8 bytes):
      6c 6f 6f 70 31 00 ff ff loop1...
      backtrace:
        kstrdup+0x36/0x70 mm/util.c:60
        kstrdup_const+0x35/0x60 mm/util.c:83
        kvasprintf_const+0xf1/0x180 lib/kasprintf.c:48
        kobject_set_name_vargs+0x56/0x150 lib/kobject.c:289
        kobject_add_varg lib/kobject.c:384 [inline]
        kobject_init_and_add+0xc9/0x150 lib/kobject.c:473
        nilfs_sysfs_create_device_group+0x150/0x7d0 fs/nilfs2/sysfs.c:986
        init_nilfs+0xa21/0xea0 fs/nilfs2/the_nilfs.c:637
        nilfs_fill_super fs/nilfs2/super.c:1046 [inline]
        nilfs_mount+0x7b4/0xe80 fs/nilfs2/super.c:1316
        legacy_get_tree+0x105/0x210 fs/fs_context.c:592
        vfs_get_tree+0x8e/0x2d0 fs/super.c:1498
        do_new_mount fs/namespace.c:2905 [inline]
        path_mount+0xf9b/0x1990 fs/namespace.c:3235
        do_mount+0xea/0x100 fs/namespace.c:3248
        __do_sys_mount fs/namespace.c:3456 [inline]
        __se_sys_mount fs/namespace.c:3433 [inline]
        __x64_sys_mount+0x14b/0x1f0 fs/namespace.c:3433
        do_syscall_x64 arch/x86/entry/common.c:50 [inline]
        do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80
        entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    If kobject_init_and_add return with error, then the cleanup of kobject
    is needed because memory may be allocated in kobject_init_and_add
    without freeing.
    
    And the place of cleanup_dev_kobject should use kobject_put to free the
    memory associated with the kobject.  As the section "Kobject removal" of
    "Documentation/core-api/kobject.rst" says, kobject_del() just makes the
    kobject "invisible", but it is not cleaned up.  And no more cleanup will
    do after cleanup_dev_kobject, so kobject_put is needed here.
    
    Link: https://lkml.kernel.org/r/1625651306-10829-1-git-send-email-konishi.ryusuke@gmail.com
    Link: https://lkml.kernel.org/r/1625651306-10829-2-git-send-email-konishi.ryusuke@gmail.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Link: https://lkml.kernel.org/r/20210629022556.3985106-2-sunnanyong@huawei.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb4c7d2923de74ea73faabb8a69bc377c27f7fdb
Author: Anand Jain <anand.jain@oracle.com>
Date:   Tue Aug 31 09:21:28 2021 +0800

    btrfs: fix lockdep warning while mounting sprout fs
    
    [ Upstream commit c124706900c20dee70f921bb3a90492431561a0a ]
    
    Following test case reproduces lockdep warning.
    
      Test case:
    
      $ mkfs.btrfs -f <dev1>
      $ btrfstune -S 1 <dev1>
      $ mount <dev1> <mnt>
      $ btrfs device add <dev2> <mnt> -f
      $ umount <mnt>
      $ mount <dev2> <mnt>
      $ umount <mnt>
    
    The warning claims a possible ABBA deadlock between the threads
    initiated by [#1] btrfs device add and [#0] the mount.
    
      [ 540.743122] WARNING: possible circular locking dependency detected
      [ 540.743129] 5.11.0-rc7+ #5 Not tainted
      [ 540.743135] ------------------------------------------------------
      [ 540.743142] mount/2515 is trying to acquire lock:
      [ 540.743149] ffffa0c5544c2ce0 (&fs_devs->device_list_mutex){+.+.}-{4:4}, at: clone_fs_devices+0x6d/0x210 [btrfs]
      [ 540.743458] but task is already holding lock:
      [ 540.743461] ffffa0c54a7932b8 (btrfs-chunk-00){++++}-{4:4}, at: __btrfs_tree_read_lock+0x32/0x200 [btrfs]
      [ 540.743541] which lock already depends on the new lock.
      [ 540.743543] the existing dependency chain (in reverse order) is:
    
      [ 540.743546] -> #1 (btrfs-chunk-00){++++}-{4:4}:
      [ 540.743566] down_read_nested+0x48/0x2b0
      [ 540.743585] __btrfs_tree_read_lock+0x32/0x200 [btrfs]
      [ 540.743650] btrfs_read_lock_root_node+0x70/0x200 [btrfs]
      [ 540.743733] btrfs_search_slot+0x6c6/0xe00 [btrfs]
      [ 540.743785] btrfs_update_device+0x83/0x260 [btrfs]
      [ 540.743849] btrfs_finish_chunk_alloc+0x13f/0x660 [btrfs] <--- device_list_mutex
      [ 540.743911] btrfs_create_pending_block_groups+0x18d/0x3f0 [btrfs]
      [ 540.743982] btrfs_commit_transaction+0x86/0x1260 [btrfs]
      [ 540.744037] btrfs_init_new_device+0x1600/0x1dd0 [btrfs]
      [ 540.744101] btrfs_ioctl+0x1c77/0x24c0 [btrfs]
      [ 540.744166] __x64_sys_ioctl+0xe4/0x140
      [ 540.744170] do_syscall_64+0x4b/0x80
      [ 540.744174] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      [ 540.744180] -> #0 (&fs_devs->device_list_mutex){+.+.}-{4:4}:
      [ 540.744184] __lock_acquire+0x155f/0x2360
      [ 540.744188] lock_acquire+0x10b/0x5c0
      [ 540.744190] __mutex_lock+0xb1/0xf80
      [ 540.744193] mutex_lock_nested+0x27/0x30
      [ 540.744196] clone_fs_devices+0x6d/0x210 [btrfs]
      [ 540.744270] btrfs_read_chunk_tree+0x3c7/0xbb0 [btrfs]
      [ 540.744336] open_ctree+0xf6e/0x2074 [btrfs]
      [ 540.744406] btrfs_mount_root.cold.72+0x16/0x127 [btrfs]
      [ 540.744472] legacy_get_tree+0x38/0x90
      [ 540.744475] vfs_get_tree+0x30/0x140
      [ 540.744478] fc_mount+0x16/0x60
      [ 540.744482] vfs_kern_mount+0x91/0x100
      [ 540.744484] btrfs_mount+0x1e6/0x670 [btrfs]
      [ 540.744536] legacy_get_tree+0x38/0x90
      [ 540.744537] vfs_get_tree+0x30/0x140
      [ 540.744539] path_mount+0x8d8/0x1070
      [ 540.744541] do_mount+0x8d/0xc0
      [ 540.744543] __x64_sys_mount+0x125/0x160
      [ 540.744545] do_syscall_64+0x4b/0x80
      [ 540.744547] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      [ 540.744551] other info that might help us debug this:
      [ 540.744552] Possible unsafe locking scenario:
    
      [ 540.744553] CPU0                            CPU1
      [ 540.744554] ----                            ----
      [ 540.744555] lock(btrfs-chunk-00);
      [ 540.744557]                                         lock(&fs_devs->device_list_mutex);
      [ 540.744560]                                         lock(btrfs-chunk-00);
      [ 540.744562] lock(&fs_devs->device_list_mutex);
      [ 540.744564]
       *** DEADLOCK ***
    
      [ 540.744565] 3 locks held by mount/2515:
      [ 540.744567] #0: ffffa0c56bf7a0e0 (&type->s_umount_key#42/1){+.+.}-{4:4}, at: alloc_super.isra.16+0xdf/0x450
      [ 540.744574] #1: ffffffffc05a9628 (uuid_mutex){+.+.}-{4:4}, at: btrfs_read_chunk_tree+0x63/0xbb0 [btrfs]
      [ 540.744640] #2: ffffa0c54a7932b8 (btrfs-chunk-00){++++}-{4:4}, at: __btrfs_tree_read_lock+0x32/0x200 [btrfs]
      [ 540.744708]
       stack backtrace:
      [ 540.744712] CPU: 2 PID: 2515 Comm: mount Not tainted 5.11.0-rc7+ #5
    
    But the device_list_mutex in clone_fs_devices() is redundant, as
    explained below.  Two threads [1]  and [2] (below) could lead to
    clone_fs_device().
    
      [1]
      open_ctree <== mount sprout fs
       btrfs_read_chunk_tree()
        mutex_lock(&uuid_mutex) <== global lock
        read_one_dev()
         open_seed_devices()
          clone_fs_devices() <== seed fs_devices
           mutex_lock(&orig->device_list_mutex) <== seed fs_devices
    
      [2]
      btrfs_init_new_device() <== sprouting
       mutex_lock(&uuid_mutex); <== global lock
       btrfs_prepare_sprout()
         lockdep_assert_held(&uuid_mutex)
         clone_fs_devices(seed_fs_device) <== seed fs_devices
    
    Both of these threads hold uuid_mutex which is sufficient to protect
    getting the seed device(s) freed while we are trying to clone it for
    sprouting [2] or mounting a sprout [1] (as above). A mounted seed device
    can not free/write/replace because it is read-only. An unmounted seed
    device can be freed by btrfs_free_stale_devices(), but it needs
    uuid_mutex.  So this patch removes the unnecessary device_list_mutex in
    clone_fs_devices().  And adds a lockdep_assert_held(&uuid_mutex) in
    clone_fs_devices().
    
    Reported-by: Su Yue <l@damenly.su>
    Tested-by: Su Yue <l@damenly.su>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f2d5c11bef8d29438391bed4b44380d9a0c220e
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Sep 2 08:31:03 2021 -0400

    ceph: lockdep annotations for try_nonblocking_invalidate
    
    [ Upstream commit 3eaf5aa1cfa8c97c72f5824e2e9263d6cc977b03 ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bbb11261a75d4c8fc2fcf3c2ee2a8507c76fdbb
Author: Jeff Layton <jlayton@kernel.org>
Date:   Wed Aug 11 06:40:42 2021 -0400

    ceph: request Fw caps before updating the mtime in ceph_write_iter
    
    [ Upstream commit b11ed50346683a749632ea664959b28d524d7395 ]
    
    The current code will update the mtime and then try to get caps to
    handle the write. If we end up having to request caps from the MDS, then
    the mtime in the cap grant will clobber the updated mtime and it'll be
    lost.
    
    This is most noticable when two clients are alternately writing to the
    same file. Fw caps are continually being granted and revoked, and the
    mtime ends up stuck because the updated mtimes are always being
    overwritten with the old one.
    
    Fix this by changing the order of operations in ceph_write_iter to get
    the caps before updating the times. Also, make sure we check the pool
    full conditions before even getting any caps or uninlining.
    
    URL: https://tracker.ceph.com/issues/46574
    Reported-by: Jozef Kováč <kovac@firma.zoznam.sk>
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Luis Henriques <lhenriques@suse.de>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c89a856fa491ab83f55c4c14d3ab1f93ea79e1a
Author: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
Date:   Thu Aug 19 14:28:48 2021 +0530

    dmaengine: xilinx_dma: Set DMA mask for coherent APIs
    
    [ Upstream commit aac6c0f90799d66b8989be1e056408f33fd99fe6 ]
    
    The xilinx dma driver uses the consistent allocations, so for correct
    operation also set the DMA mask for coherent APIs. It fixes the below
    kernel crash with dmatest client when DMA IP is configured with 64-bit
    address width and linux is booted from high (>4GB) memory.
    
    Call trace:
    [  489.531257]  dma_alloc_from_pool+0x8c/0x1c0
    [  489.535431]  dma_direct_alloc+0x284/0x330
    [  489.539432]  dma_alloc_attrs+0x80/0xf0
    [  489.543174]  dma_pool_alloc+0x160/0x2c0
    [  489.547003]  xilinx_cdma_prep_memcpy+0xa4/0x180
    [  489.551524]  dmatest_func+0x3cc/0x114c
    [  489.555266]  kthread+0x124/0x130
    [  489.558486]  ret_from_fork+0x10/0x3c
    [  489.562051] ---[ end trace 248625b2d596a90a ]---
    
    Signed-off-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Reviewed-by: Harini Katakam <harini.katakam@xilinx.com>
    Link: https://lore.kernel.org/r/1629363528-30347-1-git-send-email-radhey.shyam.pandey@xilinx.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f3206199dc957d5cf0d7bfa19a992e60aebc602
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Aug 9 11:24:09 2021 +0200

    dmaengine: ioat: depends on !UML
    
    [ Upstream commit bbac7a92a46f0876e588722ebe552ddfe6fd790f ]
    
    Now that UML has PCI support, this driver must depend also on
    !UML since it pokes at X86_64 architecture internals that don't
    exist on ARCH=um.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20210809112409.a3a0974874d2.I2ffe3d11ed37f735da2f39884a74c953b258b995@changeid
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 644f1e87fe73435d80ea45f60a4b94c81b6259da
Author: Zou Wei <zou_wei@huawei.com>
Date:   Tue May 4 10:22:57 2021 +0800

    dmaengine: sprd: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit 4faee8b65ec32346f8096e64c5fa1d5a73121742 ]
    
    This patch adds missing MODULE_DEVICE_TABLE definition which generates
    correct modalias for automatic loading of this driver when it is built
    as an external module.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zou Wei <zou_wei@huawei.com>
    Reviewed-by: Baolin Wang <baolin.wang7@gmail.com>
    Link: https://lore.kernel.org/r/1620094977-70146-1-git-send-email-zou_wei@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 445a3379f6dff613ed3608ac2e0b00dc6eee4597
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 08:30:41 2021 -0700

    parisc: Move pci_dev_is_behind_card_dino to where it is used
    
    [ Upstream commit 907872baa9f1538eed02ec737b8e89eba6c6e4b9 ]
    
    parisc build test images fail to compile with the following error.
    
    drivers/parisc/dino.c:160:12: error:
            'pci_dev_is_behind_card_dino' defined but not used
    
    Move the function just ahead of its only caller to avoid the error.
    
    Fixes: 5fa1659105fa ("parisc: Disable HP HSC-PCI Cards to prevent kernel crash")
    Cc: Helge Deller <deller@gmx.de>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f7bfc07e38662077f802abe56715b5e92663364
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Aug 31 13:48:34 2021 +0200

    drivers: base: cacheinfo: Get rid of DEFINE_SMP_CALL_CACHE_FUNCTION()
    
    [ Upstream commit 4b92d4add5f6dcf21275185c997d6ecb800054cd ]
    
    DEFINE_SMP_CALL_CACHE_FUNCTION() was usefel before the CPU hotplug rework
    to ensure that the cache related functions are called on the upcoming CPU
    because the notifier itself could run on any online CPU.
    
    The hotplug state machine guarantees that the callbacks are invoked on the
    upcoming CPU. So there is no need to have this SMP function call
    obfuscation. That indirection was missed when the hotplug notifiers were
    converted.
    
    This also solves the problem of ARM64 init_cache_level() invoking ACPI
    functions which take a semaphore in that context. That's invalid as SMP
    function calls run with interrupts disabled. Running it just from the
    callback in context of the CPU hotplug thread solves this.
    
    Fixes: 8571890e1513 ("arm64: Add support for ACPI based firmware tables")
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Will Deacon <will@kernel.org>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/871r69ersb.ffs@tglx
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a12743d0724976b838bc5928f367da063b0487a4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jul 22 11:06:44 2021 +0200

    thermal/core: Fix thermal_cooling_device_register() prototype
    
    [ Upstream commit fb83610762dd5927212aa62a468dd3b756b57a88 ]
    
    There are two pairs of declarations for thermal_cooling_device_register()
    and thermal_of_cooling_device_register(), and only one set was changed
    in a recent patch, so the other one now causes a compile-time warning:
    
    drivers/net/wireless/mediatek/mt76/mt7915/init.c: In function 'mt7915_thermal_init':
    drivers/net/wireless/mediatek/mt76/mt7915/init.c:134:48: error: passing argument 1 of 'thermal_cooling_device_register' discards 'const' qualifier from pointer target type [-Werror=discarded-qualifiers]
      134 |         cdev = thermal_cooling_device_register(wiphy_name(wiphy), phy,
          |                                                ^~~~~~~~~~~~~~~~~
    In file included from drivers/net/wireless/mediatek/mt76/mt7915/init.c:7:
    include/linux/thermal.h:407:39: note: expected 'char *' but argument is of type 'const char *'
      407 | thermal_cooling_device_register(char *type, void *devdata,
          |                                 ~~~~~~^~~~
    
    Change the dummy helper functions to have the same arguments as the
    normal version.
    
    Fixes: f991de53a8ab ("thermal: make device_register's type argument const")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Jean-Francois Dagenais <jeff.dagenais@gmail.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210722090717.1116748-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7b9a866ee2547984ae29c30f40299b07f99d04a
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Sep 7 20:00:47 2021 -0700

    Kconfig.debug: drop selecting non-existing HARDLOCKUP_DETECTOR_ARCH
    
    [ Upstream commit 6fe26259b4884b657cbc233fb9cdade9d704976e ]
    
    Commit 05a4a9527931 ("kernel/watchdog: split up config options") adds a
    new config HARDLOCKUP_DETECTOR, which selects the non-existing config
    HARDLOCKUP_DETECTOR_ARCH.
    
    Hence, ./scripts/checkkconfigsymbols.py warns:
    
    HARDLOCKUP_DETECTOR_ARCH Referencing files: lib/Kconfig.debug
    
    Simply drop selecting the non-existing HARDLOCKUP_DETECTOR_ARCH.
    
    Link: https://lkml.kernel.org/r/20210806115618.22088-1-lukas.bulwahn@gmail.com
    Fixes: 05a4a9527931 ("kernel/watchdog: split up config options")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Babu Moger <babu.moger@oracle.com>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c1d9b650c0802c003ed70bab4fc01476000bb46
Author: Jongsung Kim <neidhard.kim@lge.com>
Date:   Fri Dec 6 20:40:00 2019 +0900

    net: stmmac: reset Tx desc base address before restarting Tx
    
    commit f421031e3ff0dd288a6e1bbde9aa41a25bb814e6 upstream.
    
    Refer to the databook of DesignWare Cores Ethernet MAC Universal:
    
    6.2.1.5 Register 4 (Transmit Descriptor List Address Register
    
    If this register is not changed when the ST bit is set to 0, then
    the DMA takes the descriptor address where it was stopped earlier.
    
    The stmmac_tx_err() does zero indices to Tx descriptors, but does
    not reset HW current Tx descriptor address. To fix inconsistency,
    the base address of the Tx descriptors should be rewritten before
    restarting Tx.
    
    Signed-off-by: Jongsung Kim <neidhard.kim@lge.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Macpaul Lin <macpaul.lin@mediatek.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 729f9d5ee3740196071dc15031ce48f3e7659b9a
Author: Petr Oros <poros@redhat.com>
Date:   Tue Feb 18 10:35:55 2020 +0100

    phy: avoid unnecessary link-up delay in polling mode
    
    commit e96bd2d3b1f83170d1d5c1a99e439b39a22a5b58 upstream.
    
    commit 93c0970493c71f ("net: phy: consider latched link-down status in
    polling mode") removed double-read of latched link-state register for
    polling mode from genphy_update_link(). This added extra ~1s delay into
    sequence link down->up.
    Following scenario:
     - After boot link goes up
     - phy_start() is called triggering an aneg restart, hence link goes
       down and link-down info is latched.
     - After aneg has finished link goes up. In phy_state_machine is checked
       link state but it is latched "link is down". The state machine is
       scheduled after one second and there is detected "link is up". This
       extra delay can be avoided when we keep link-state register double read
       in case when link was down previously.
    
    With this solution we don't miss a link-down event in polling mode and
    link-up is faster.
    
    Details about this quirky behavior on Realtek phy:
    Without patch:
    T0:    aneg is started, link goes down, link-down status is latched
    T0+3s: state machine runs, up-to-date link-down is read
    T0+4s: state machine runs, aneg is finished (BMSR_ANEGCOMPLETE==1),
           here i read link-down (BMSR_LSTATUS==0),
    T0+5s: state machine runs, aneg is finished (BMSR_ANEGCOMPLETE==1),
           up-to-date link-up is read (BMSR_LSTATUS==1),
           phydev->link goes up, state change PHY_NOLINK to PHY_RUNNING
    
    With patch:
    T0:    aneg is started, link goes down, link-down status is latched
    T0+3s: state machine runs, up-to-date link-down is read
    T0+4s: state machine runs, aneg is finished (BMSR_ANEGCOMPLETE==1),
           first BMSR read: BMSR_ANEGCOMPLETE==1 and BMSR_LSTATUS==0,
           second BMSR read: BMSR_ANEGCOMPLETE==1 and BMSR_LSTATUS==1,
           phydev->link goes up, state change PHY_NOLINK to PHY_RUNNING
    
    Signed-off-by: Petr Oros <poros@redhat.com>
    Reviewed-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Macpaul Lin <macpaul.lin@mediatek.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81e6b51709da162b94e40a445bb60856406beaa1
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:49 2021 +0200

    pwm: lpc32xx: Don't modify HW state in .probe() after the PWM chip was registered
    
    commit 3d2813fb17e5fd0d73c1d1442ca0192bde4af10e upstream.
    
    This fixes a race condition: After pwmchip_add() is called there might
    already be a consumer and then modifying the hardware behind the
    consumer's back is bad. So set the default before.
    
    (Side-note: I don't know what this register setting actually does, if
    this modifies the polarity there is an inconsistency because the
    inversed polarity isn't considered if the PWM is already running during
    .probe().)
    
    Fixes: acfd92fdfb93 ("pwm: lpc32xx: Set PWM_PIN_LEVEL bit to default value")
    Cc: Sylvain Lemieux <slemieux@tycoint.com>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b94def8a475ffc1a32f447db062bb2f0cf3e7125
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Tue Sep 7 19:58:21 2021 -0700

    profiling: fix shift-out-of-bounds bugs
    
    commit 2d186afd04d669fe9c48b994c41a7405a3c9f16d upstream.
    
    Syzbot reported shift-out-of-bounds bug in profile_init().
    The problem was in incorrect prof_shift. Since prof_shift value comes from
    userspace we need to clamp this value into [0, BITS_PER_LONG -1]
    boundaries.
    
    Second possible shiht-out-of-bounds was found by Tetsuo:
    sample_step local variable in read_profile() had "unsigned int" type,
    but prof_shift allows to make a BITS_PER_LONG shift. So, to prevent
    possible shiht-out-of-bounds sample_step type was changed to
    "unsigned long".
    
    Also, "unsigned short int" will be sufficient for storing
    [0, BITS_PER_LONG] value, that's why there is no need for
    "unsigned long" prof_shift.
    
    Link: https://lkml.kernel.org/r/20210813140022.5011-1-paskripkin@gmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+e68c89a9510c159d9684@syzkaller.appspotmail.com
    Suggested-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e98111cb28e595dd8571ee181bc03986ce66d1f
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Tue Sep 7 20:00:26 2021 -0700

    nilfs2: use refcount_dec_and_lock() to fix potential UAF
    
    commit 98e2e409e76ef7781d8511f997359e9c504a95c1 upstream.
    
    When the refcount is decreased to 0, the resource reclamation branch is
    entered.  Before CPU0 reaches the race point (1), CPU1 may obtain the
    spinlock and traverse the rbtree to find 'root', see
    nilfs_lookup_root().
    
    Although CPU1 will call refcount_inc() to increase the refcount, it is
    obviously too late.  CPU0 will release 'root' directly, CPU1 then
    accesses 'root' and triggers UAF.
    
    Use refcount_dec_and_lock() to ensure that both the operations of
    decrease refcount to 0 and link deletion are lock protected eliminates
    this risk.
    
                 CPU0                      CPU1
            nilfs_put_root():
                        <-------- (1)
                                    spin_lock(&nilfs->ns_cptree_lock);
                                    rb_erase(&root->rb_node, &nilfs->ns_cptree);
                                    spin_unlock(&nilfs->ns_cptree_lock);
    
            kfree(root);
                        <-------- use-after-free
    
      refcount_t: underflow; use-after-free.
      WARNING: CPU: 2 PID: 9476 at lib/refcount.c:28 \
      refcount_warn_saturate+0x1cf/0x210 lib/refcount.c:28
      Modules linked in:
      CPU: 2 PID: 9476 Comm: syz-executor.0 Not tainted 5.10.45-rc1+ #3
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), ...
      RIP: 0010:refcount_warn_saturate+0x1cf/0x210 lib/refcount.c:28
      ... ...
      Call Trace:
         __refcount_sub_and_test include/linux/refcount.h:283 [inline]
         __refcount_dec_and_test include/linux/refcount.h:315 [inline]
         refcount_dec_and_test include/linux/refcount.h:333 [inline]
         nilfs_put_root+0xc1/0xd0 fs/nilfs2/the_nilfs.c:795
         nilfs_segctor_destroy fs/nilfs2/segment.c:2749 [inline]
         nilfs_detach_log_writer+0x3fa/0x570 fs/nilfs2/segment.c:2812
         nilfs_put_super+0x2f/0xf0 fs/nilfs2/super.c:467
         generic_shutdown_super+0xcd/0x1f0 fs/super.c:464
         kill_block_super+0x4a/0x90 fs/super.c:1446
         deactivate_locked_super+0x6a/0xb0 fs/super.c:335
         deactivate_super+0x85/0x90 fs/super.c:366
         cleanup_mnt+0x277/0x2e0 fs/namespace.c:1118
         __cleanup_mnt+0x15/0x20 fs/namespace.c:1125
         task_work_run+0x8e/0x110 kernel/task_work.c:151
         tracehook_notify_resume include/linux/tracehook.h:188 [inline]
         exit_to_user_mode_loop kernel/entry/common.c:164 [inline]
         exit_to_user_mode_prepare+0x13c/0x170 kernel/entry/common.c:191
         syscall_exit_to_user_mode+0x16/0x30 kernel/entry/common.c:266
         do_syscall_64+0x45/0x80 arch/x86/entry/common.c:56
         entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    There is no reproduction program, and the above is only theoretical
    analysis.
    
    Link: https://lkml.kernel.org/r/1629859428-5906-1-git-send-email-konishi.ryusuke@gmail.com
    Fixes: ba65ae4729bf ("nilfs2: add checkpoint tree to nilfs object")
    Link: https://lkml.kernel.org/r/20210723012317.4146-1-thunder.leizhen@huawei.com
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5607b1bae1c852a794f777ee3a60eae981fcdb7d
Author: Cyrill Gorcunov <gorcunov@gmail.com>
Date:   Tue Sep 7 20:00:41 2021 -0700

    prctl: allow to setup brk for et_dyn executables
    
    commit e1fbbd073137a9d63279f6bf363151a938347640 upstream.
    
    Keno Fischer reported that when a binray loaded via ld-linux-x the
    prctl(PR_SET_MM_MAP) doesn't allow to setup brk value because it lays
    before mm:end_data.
    
    For example a test program shows
    
     | # ~/t
     |
     | start_code      401000
     | end_code        401a15
     | start_stack     7ffce4577dd0
     | start_data      403e10
     | end_data        40408c
     | start_brk       b5b000
     | sbrk(0)         b5b000
    
    and when executed via ld-linux
    
     | # /lib64/ld-linux-x86-64.so.2 ~/t
     |
     | start_code      7fc25b0a4000
     | end_code        7fc25b0c4524
     | start_stack     7fffcc6b2400
     | start_data      7fc25b0ce4c0
     | end_data        7fc25b0cff98
     | start_brk       55555710c000
     | sbrk(0)         55555710c000
    
    This of course prevent criu from restoring such programs.  Looking into
    how kernel operates with brk/start_brk inside brk() syscall I don't see
    any problem if we allow to setup brk/start_brk without checking for
    end_data.  Even if someone pass some weird address here on a purpose then
    the worst possible result will be an unexpected unmapping of existing vma
    (own vma, since prctl works with the callers memory) but test for
    RLIMIT_DATA is still valid and a user won't be able to gain more memory in
    case of expanding VMAs via new values shipped with prctl call.
    
    Link: https://lkml.kernel.org/r/20210121221207.GB2174@grain
    Fixes: bbdc6076d2e5 ("binfmt_elf: move brk out of mmap when doing direct loader exec")
    Signed-off-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reported-by: Keno Fischer <keno@juliacomputing.com>
    Acked-by: Andrey Vagin <avagin@gmail.com>
    Tested-by: Andrey Vagin <avagin@gmail.com>
    Cc: Dmitry Safonov <0x7f454c46@gmail.com>
    Cc: Kirill Tkhai <ktkhai@virtuozzo.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Cc: Alexander Mikhalitsyn <alexander.mikhalitsyn@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b40301607ca8f97e251fb1bde0719b100f6ca708
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Mon May 17 16:35:57 2021 +0800

    9p/trans_virtio: Remove sysfs file on probe failure
    
    commit f997ea3b7afc108eb9761f321b57de2d089c7c48 upstream.
    
    This ensures we don't leak the sysfs file if we failed to
    allocate chan->vc_wq during probe.
    
    Link: http://lkml.kernel.org/r/20210517083557.172-1-xieyongji@bytedance.com
    Fixes: 86c8437383ac ("net/9p: Add sysfs mount_tag file for virtio 9P device")
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3b45ea0a3c890f807519311e70853c8310151d9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 10 11:44:13 2021 +0300

    thermal/drivers/exynos: Fix an error code in exynos_tmu_probe()
    
    commit 02d438f62c05f0d055ceeedf12a2f8796b258c08 upstream.
    
    This error path return success but it should propagate the negative
    error code from devm_clk_get().
    
    Fixes: 6c247393cfdd ("thermal: exynos: Add TMU support for Exynos7 SoC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210810084413.GA23810@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1060803039dbc5608f21ab8c319f4d01e8b24aa
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jul 30 23:27:15 2021 +0300

    dmaengine: acpi: Avoid comparison GSI with Linux vIRQ
    
    commit 67db87dc8284070adb15b3c02c1c31d5cf51c5d6 upstream.
    
    Currently the CRST parsing relies on the fact that on most of x86 devices
    the IRQ mapping is 1:1 with Linux vIRQ. However, it may be not true for
    some. Fix this by converting GSI to Linux vIRQ before checking it.
    
    Fixes: ee8209fd026b ("dma: acpi-dma: parse CSRT to extract additional resources")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210730202715.24375-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93f8a98ad89cd1dfdc844804b84152f1c0181790
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jun 25 10:34:37 2021 +0200

    um: virtio_uml: fix memory leak on init failures
    
    commit 7ad28e0df7ee9dbcb793bb88dd81d4d22bb9a10e upstream.
    
    If initialization fails, e.g. because the connection failed,
    we leak the 'vu_dev'. Fix that. Reported by smatch.
    
    Fixes: 5d38f324993f ("um: drivers: Add virtio vhost-user driver")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-By: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cd05e390a3bd70de662f6380177a25b69bcedb9
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Sat Aug 14 16:56:26 2021 -0700

    staging: rtl8192u: Fix bitwise vs logical operator in TranslateRxSignalStuff819xUsb()
    
    commit 099ec97ac92911abfb102bb5c68ed270fc12e0dd upstream.
    
    clang warns:
    
    drivers/staging/rtl8192u/r8192U_core.c:4268:20: warning: bitwise and of
    boolean expressions; did you mean logical and? [-Wbool-operation-and]
            bpacket_toself =  bpacket_match_bssid &
                              ^~~~~~~~~~~~~~~~~~~~~
                                                  &&
    1 warning generated.
    
    Replace the bitwise AND with a logical one to clear up the warning, as
    that is clearly what was intended.
    
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/r/20210814235625.1780033-1-nathan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f4b67bceb09cabbaeceeb278eeed27862c386ec
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jun 28 16:13:44 2021 -0300

    sctp: add param size validation for SCTP_PARAM_SET_PRIMARY
    
    commit ef6c8d6ccf0c1dccdda092ebe8782777cd7803c9 upstream.
    
    When SCTP handles an INIT chunk, it calls for example:
    sctp_sf_do_5_1B_init
      sctp_verify_init
        sctp_verify_param
      sctp_process_init
        sctp_process_param
          handling of SCTP_PARAM_SET_PRIMARY
    
    sctp_verify_init() wasn't doing proper size validation and neither the
    later handling, allowing it to work over the chunk itself, possibly being
    uninitialized memory.
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbd10b118902ca8a86851e5c4749fbb12cd9ebad
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jun 28 16:13:43 2021 -0300

    sctp: validate chunk size in __rcv_asconf_lookup
    
    commit b6ffe7671b24689c09faa5675dd58f93758a97ae upstream.
    
    In one of the fallbacks that SCTP has for identifying an association for an
    incoming packet, it looks for AddIp chunk (from ASCONF) and take a peek.
    Thing is, at this stage nothing was validating that the chunk actually had
    enough content for that, allowing the peek to happen over uninitialized
    memory.
    
    Similar check already exists in actual asconf handling in
    sctp_verify_asconf().
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a12918e906582bd0ea00c7eb83e3a3555847e31
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 10:00:34 2021 -0700

    ARM: 9098/1: ftrace: MODULE_PLT: Fix build problem without DYNAMIC_FTRACE
    
    commit 6fa630bf473827aee48cbf0efbbdf6f03134e890 upstream
    
    FTRACE_ADDR is only defined when CONFIG_DYNAMIC_FTRACE is defined, the
    latter is even stronger requirement than CONFIG_FUNCTION_TRACER (which is
    enough for MCOUNT_ADDR).
    
    Link: https://lists.01.org/hyperkitty/list/kbuild-all@lists.01.org/thread/ZUVCQBHDMFVR7CCB7JPESLJEWERZDJ3T/
    
    Fixes: 1f12fb25c5c5d22f ("ARM: 9079/1: ftrace: Add MODULE_PLTS support")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f7974cd7b12ae219b11942ac9015341e3f0ba15
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 10:00:33 2021 -0700

    ARM: 9079/1: ftrace: Add MODULE_PLTS support
    
    commit 79f32b221b18c15a98507b101ef4beb52444cc6f upstream
    
    Teach ftrace_make_call() and ftrace_make_nop() about PLTs.
    Teach PLT code about FTRACE and all its callbacks.
    Otherwise the following might happen:
    
    ------------[ cut here ]------------
    WARNING: CPU: 14 PID: 2265 at .../arch/arm/kernel/insn.c:14 __arm_gen_branch+0x83/0x8c()
    ...
    Hardware name: LSI Axxia AXM55XX
    [<c0314a49>] (unwind_backtrace) from [<c03115e9>] (show_stack+0x11/0x14)
    [<c03115e9>] (show_stack) from [<c0519f51>] (dump_stack+0x81/0xa8)
    [<c0519f51>] (dump_stack) from [<c032185d>] (warn_slowpath_common+0x69/0x90)
    [<c032185d>] (warn_slowpath_common) from [<c03218f3>] (warn_slowpath_null+0x17/0x1c)
    [<c03218f3>] (warn_slowpath_null) from [<c03143cf>] (__arm_gen_branch+0x83/0x8c)
    [<c03143cf>] (__arm_gen_branch) from [<c0314337>] (ftrace_make_nop+0xf/0x24)
    [<c0314337>] (ftrace_make_nop) from [<c038ebcb>] (ftrace_process_locs+0x27b/0x3e8)
    [<c038ebcb>] (ftrace_process_locs) from [<c0378d79>] (load_module+0x11e9/0x1a44)
    [<c0378d79>] (load_module) from [<c037974d>] (SyS_finit_module+0x59/0x84)
    [<c037974d>] (SyS_finit_module) from [<c030e981>] (ret_fast_syscall+0x1/0x18)
    ---[ end trace e1b64ced7a89adcc ]---
    ------------[ cut here ]------------
    WARNING: CPU: 14 PID: 2265 at .../kernel/trace/ftrace.c:1979 ftrace_bug+0x1b1/0x234()
    ...
    Hardware name: LSI Axxia AXM55XX
    [<c0314a49>] (unwind_backtrace) from [<c03115e9>] (show_stack+0x11/0x14)
    [<c03115e9>] (show_stack) from [<c0519f51>] (dump_stack+0x81/0xa8)
    [<c0519f51>] (dump_stack) from [<c032185d>] (warn_slowpath_common+0x69/0x90)
    [<c032185d>] (warn_slowpath_common) from [<c03218f3>] (warn_slowpath_null+0x17/0x1c)
    [<c03218f3>] (warn_slowpath_null) from [<c038e87d>] (ftrace_bug+0x1b1/0x234)
    [<c038e87d>] (ftrace_bug) from [<c038ebd5>] (ftrace_process_locs+0x285/0x3e8)
    [<c038ebd5>] (ftrace_process_locs) from [<c0378d79>] (load_module+0x11e9/0x1a44)
    [<c0378d79>] (load_module) from [<c037974d>] (SyS_finit_module+0x59/0x84)
    [<c037974d>] (SyS_finit_module) from [<c030e981>] (ret_fast_syscall+0x1/0x18)
    ---[ end trace e1b64ced7a89adcd ]---
    ftrace failed to modify [<e9ef7006>] 0xe9ef7006
    actual: 02:f0:3b:fa
    ftrace record flags: 0
    (0) expected tramp: c0314265
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b27a03d1292875989c5bbdd86932d1e128fe743
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 10:00:32 2021 -0700

    ARM: 9078/1: Add warn suppress parameter to arm_gen_branch_link()
    
    commit 890cb057a46d323fd8c77ebecb6485476614cd21 upstream
    
    Will be used in the following patch. No functional change.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 490be340c86cb8d52401477381d2e36946ad675f
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 10:00:31 2021 -0700

    ARM: 9077/1: PLT: Move struct plt_entries definition to header
    
    commit 4e271701c17dee70c6e1351c4d7d42e70405c6a9 upstream
    
    No functional change, later it will be re-used in several files.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 278df0646003b28ff394e2e42a73262b452832ed
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Dec 15 20:47:16 2020 -0800

    apparmor: remove duplicate macro list_entry_is_head()
    
    commit 9801ca279ad37f72f71234fa81722afd95a3f997 upstream.
    
    Strangely I hadn't had noticed the existence of the list_entry_is_head()
    in apparmor code when added the same one in the list.h.  Luckily it's
    fully identical and didn't break builds.  In any case we don't need a
    duplicate anymore, thus remove it from apparmor code.
    
    Link: https://lkml.kernel.org/r/20201208100639.88182-1-andriy.shevchenko@linux.intel.com
    Fixes: e130816164e244 ("include/linux/list.h: add a macro to test if entry is pointing to the head")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: John Johansen <john.johansen@canonical.com>
    Cc: James Morris <jmorris@namei.org>
    Cc: "Serge E . Hallyn " <serge@hallyn.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Nobuhiro Iwamatsu (CIP) <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f23763ab464f1eaf90912516540165a6e163ad4f
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Mar 18 21:03:33 2021 -0700

    ARM: Qualify enabling of swiotlb_init()
    
    commit fcf044891c84e38fc90eb736b818781bccf94e38 upstream.
    
    We do not need a SWIOTLB unless we have DRAM that is addressable beyond
    the arm_dma_limit. Compare max_pfn with arm_dma_pfn_limit to determine
    whether we do need a SWIOTLB to be initialized.
    
    Fixes: ad3c7b18c5b3 ("arm: use swiotlb for bounce buffering on LPAE configs")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bfdc3056ca81323870e7c2bee3a62aa9faa78d9
Author: David Hildenbrand <david@redhat.com>
Date:   Thu Sep 9 16:59:42 2021 +0200

    s390/pci_mmio: fully validate the VMA before calling follow_pte()
    
    commit a8b92b8c1eac8d655a97b1e90f4d83c25d9b9a18 upstream.
    
    We should not walk/touch page tables outside of VMA boundaries when
    holding only the mmap sem in read mode. Evil user space can modify the
    VMA layout just before this function runs and e.g., trigger races with
    page table removal code since commit dd2283f2605e ("mm: mmap: zap pages
    with read mmap_sem in munmap").
    
    find_vma() does not check if the address is >= the VMA start address;
    use vma_lookup() instead.
    
    Reviewed-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Reviewed-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Fixes: dd2283f2605e ("mm: mmap: zap pages with read mmap_sem in munmap")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd292c687390859d85cdedcf53c93f5e49c1f814
Author: nick black <dankamongmen@gmail.com>
Date:   Mon Aug 30 04:56:15 2021 -0400

    console: consume APC, DM, DCS
    
    commit 3a2b2eb55681158d3e3ef464fbf47574cf0c517c upstream.
    
    The Linux console's VT102 implementation already consumes OSC
    ("Operating System Command") sequences, probably because that's how
    palette changes are transmitted.
    
    In addition to OSC, there are three other major clases of ANSI control
    strings: APC ("Application Program Command"), PM ("Privacy Message"),
    and DCS ("Device Control String").  They are handled similarly to OSC in
    terms of termination.
    
    Source: vt100.net
    
    Add three new enumerated states, one for each of these types.  All three
    are handled the same way right now--they simply consume input until
    terminated.  I hope to expand upon this firmament in the future.  Add
    new predicate ansi_control_string(), returning true for any of these
    states.  Replace explicit checks against ESosc with calls to this
    function.  Transition to these states appropriately from the escape
    initiation (ESesc) state.
    
    This was motivated by the following Notcurses bugs:
    
     https://github.com/dankamongmen/notcurses/issues/2050
     https://github.com/dankamongmen/notcurses/issues/1828
     https://github.com/dankamongmen/notcurses/issues/2069
    
    where standard VT sequences are not consumed by the Linux console.  It's
    not necessary that the Linux console *support* these sequences, but it
    ought *consume* these well-specified classes of sequences.
    
    Tested by sending a variety of escape sequences to the console, and
    verifying that they still worked, or were now properly consumed.
    Verified that the escapes were properly terminated at a generic level.
    Verified that the Notcurses tools continued to show expected output on
    the Linux console, except now without escape bleedthrough.
    
    Link: https://lore.kernel.org/lkml/YSydL0q8iaUfkphg@schwarzgerat.orthanc/
    Signed-off-by: nick black <dankamongmen@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c813fbbf75cf3b459c09f06a0e93b84995cb24
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Thu Nov 7 07:53:42 2019 -0500

    KVM: remember position in kvm->vcpus array
    
    commit 8750e72a79dda2f665ce17b62049f4d62130d991 upstream.
    
    Fetching an index for any vcpu in kvm->vcpus array by traversing
    the entire array everytime is costly.
    This patch remembers the position of each vcpu in kvm->vcpus array
    by storing it in vcpus_idx under kvm_vcpu structure.
    
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Nitesh Narayan Lal <nitesh@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [borntraeger@de.ibm.com]: backport to 4.19 (also fits for 5.4)
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5163578e9d0b66509eb41567b1d2f4d4f81c2d70
Author: Tuan Phan <tuanphan@os.amperecomputing.com>
Date:   Thu Aug 6 14:57:34 2020 -0700

    PCI/ACPI: Add Ampere Altra SOC MCFG quirk
    
    commit 877c1a5f79c6984bbe3f2924234c08e2f4f1acd5 upstream.
    
    Ampere Altra SOC supports only 32-bit ECAM reads.  Add an MCFG quirk for
    the platform.
    
    Link: https://lore.kernel.org/r/1596751055-12316-1-git-send-email-tuanphan@os.amperecomputing.com
    Signed-off-by: Tuan Phan <tuanphan@os.amperecomputing.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    [ dannf: backport drops const qualifier from pci_32b_read_ops for
      consistency with the other quirks that weren't yet constified in v5.4 ]
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec29e33e5cba79b0703f21192c00e18b0eeb2206
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 22 16:40:41 2021 +0200

    PCI: aardvark: Fix reporting CRS value
    
    commit 43f5c77bcbd27cce70bf33c2b86d6726ce95dd66 upstream.
    
    Set CRSVIS flag in emulated root PCI bridge to indicate support for
    Completion Retry Status.
    
    Add check for CRSSVE flag from root PCI brige when issuing Configuration
    Read Request via PIO to correctly returns fabricated CRS value as it is
    required by PCIe spec.
    
    Link: https://lore.kernel.org/r/20210722144041.12661-5-pali@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org # e0d9d30b7354 ("PCI: pci-bridge-emul: Fix big-endian support")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f0e275e43f6201c0f4fbe29ab8b5d7a224bf6e0
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 22 16:40:40 2021 +0200

    PCI: pci-bridge-emul: Add PCIe Root Capabilities Register
    
    commit e902bb7c24a7099d0eb0eb4cba06f2d91e9299f3 upstream.
    
    The 16-bit Root Capabilities register is at offset 0x1e in the PCIe
    Capability. Rename current 'rsvd' struct member to 'rootcap'.
    
    Link: https://lore.kernel.org/r/20210722144041.12661-4-pali@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 296895c4f0c803f31ff715d831ef4f7fc7e22c44
Author: Pali Rohár <pali@kernel.org>
Date:   Mon Jun 1 15:03:15 2020 +0200

    PCI: aardvark: Indicate error in 'val' when config read fails
    
    commit b1bd5714472cc72e14409f5659b154c765a76c65 upstream.
    
    Most callers of config read do not check for return value. But most of the
    ones that do, checks for error indication in 'val' variable.
    
    This patch updates error handling in advk_pcie_rd_conf() function. If PIO
    transfer fails then 'val' variable is set to 0xffffffff which indicates
    failture.
    
    Link: https://lore.kernel.org/r/20200528162604.GA323482@bjorn-Precision-5520
    Link: https://lore.kernel.org/r/20200601130315.18895-1-pali@kernel.org
    Reported-by: Bjorn Helgaas <helgaas@kernel.org>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fcb7b7a1d209bdd48474718c9471cd31b60b22c
Author: Grzegorz Jaszczyk <jaz@semihalf.com>
Date:   Tue Jul 16 14:13:46 2019 +0200

    PCI: pci-bridge-emul: Fix big-endian support
    
    commit e0d9d30b73548fbfe5c024ed630169bdc9a08aee upstream.
    
    Perform conversion to little-endian before every write to configuration
    space and convert it back to CPU endianness on reads.
    
    Additionally, initialise every multiple byte field of config space with
    the cpu_to_le* macro, which is required since the structure describing
    config space of emulated bridge assumes little-endian convention.
    
    Signed-off-by: Grzegorz Jaszczyk <jaz@semihalf.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
