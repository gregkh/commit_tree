commit a7fac751ddba9e30101093fef61f2682cce039de
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Oct 7 15:03:33 2016 +0200

    Linux 4.8.1

commit 8cf61e57d856a29d227700ab212bb5d6e706003e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Sep 27 16:44:49 2016 +0200

    ALSA: hda - Add the top speaker pin config for HP Spectre x360
    
    commit 0eec880966e77bdbee0112989a2be67d92e39929 upstream.
    
    HP Spectre x360 with CX20724 codec has two speaker outputs while the
    BIOS sets up only the bottom one (NID 0x17) and disables the top one
    (NID 0x1d).
    
    This patch adds a fixup simply defining the proper pincfg for NID 0x1d
    so that the top speaker works as is.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=169071
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35e0251bfab3d9cf6874153e7ffb6f6619f8b900
Author: Hui Wang <hui.wang@canonical.com>
Date:   Sun Sep 11 11:26:16 2016 +0800

    ALSA: hda - Fix headset mic detection problem for several Dell laptops
    
    commit 3f640970a41429f0a076c01270bbd014c9eae61c upstream.
    
    One of the laptops has the codec ALC256 on it, applying the
    ALC255_FIXUP_DELL1_MIC_NO_PRESENCE can fix the problem, the rest
    of laptops have the codec ALC295 on them, they are similar to machines
    with ALC225, applying the ALC269_FIXUP_DELL1_MIC_NO_PRESENCE can fix
    the problem.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f090888f591096fafe2c89054dc6fd79b60e8c08
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Sep 26 10:59:38 2016 +0800

    ALSA: hda - Adding one more ALC255 pin definition for headset problem
    
    commit 392c9da24a994f238c5d7ea611c6245be4617014 upstream.
    
    We have two new Dell laptop models, they have the same ALC255 pin
    definition, but not in the pin quirk table yet, as a result, the
    headset microphone can't work. After adding the definition in the
    table, the headset microphone works well.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec370e27f4e910fbaa21c5a1f73e5dd9771c2fc0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 28 11:48:44 2016 +0200

    Revert "usbtmc: convert to devm_kzalloc"
    
    commit ab21b63e8aedfc73565dd9cdd51eb338341177cb upstream.
    
    This reverts commit e6c7efdcb76f11b04e3d3f71c8d764ab75c9423b.
    
    Turns out it was totally wrong.  The memory is supposed to be bound to
    the kref, as the original code was doing correctly, not the
    device/driver binding as the devm_kzalloc() would cause.
    
    This fixes an oops when read would be called after the device was
    unbound from the driver.
    
    Reported-by: Ladislav Michl <ladis@linux-mips.org>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bd1000a333d9ec19e4866e15b2f441d2e35134d
Author: Kyle Jones <kyle@kf5jwc.us>
Date:   Fri Sep 23 13:28:37 2016 -0500

    USB: serial: cp210x: Add ID for a Juniper console
    
    commit decc5360f23e9efe0252094f47f57f254dcbb3a9 upstream.
    
    Signed-off-by: Kyle Jones <kyle@kf5jwc.us>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f38d80a51b490a2bad8d7986cefd52381f0729dd
Author: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date:   Tue Aug 23 17:13:29 2016 +0200

    usb: usbip: vudc: fix left shift overflow
    
    commit 238b7bd91b16d5a08326f858db42229b212e53d8 upstream.
    
    In v_recv_cmd_submit(), urb_p->urb->pipe has the type unsigned int
    (which is 32-bit long on x86_64) but 11<<30 results in a 34-bit integer.
    Therefore the 2 leading bits are truncated and
    
        urb_p->urb->pipe &= ~(11 << 30);
    
    has the same meaning as
    
        urb_p->urb->pipe &= ~(3 << 30);
    
    This second statement seems to be how the code was intended to be
    written, as PIPE_ constants have values between 0 and 3.
    
    The overflow has been detected with a clang warning:
    
        drivers/usb/usbip/vudc_rx.c:145:27: warning: signed shift result
        (0x2C0000000) requires 35 bits to represent, but 'int' only has 32
        bits [-Wshift-overflow]
                urb_p->urb->pipe &= ~(11 << 30);
                                      ~~ ^  ~~
    
    Fixes: 79c02cb1fd5c ("usbip: vudc: Add vudc_rx")
    Signed-off-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e87e0de4b547310081fa1999b9405f81d8875e9d
Author: Ksenija Stanojevic <ksenija.stanojevic@gmail.com>
Date:   Sun Oct 2 17:42:35 2016 +0200

    Staging: fbtft: Fix bug in fbtft-core
    
    commit fc1e2c8ea85e109acf09e74789e9b852f6eed251 upstream.
    
    Commit 367e8560e8d7a62d96e9b1d644028a3816e04206 introduced a bug
    in fbtft-core where fps is always 0, this is because variable
    update_time is not assigned correctly.
    
    Signed-off-by: Ksenija Stanojevic <ksenija.stanojevic@gmail.com>
    Fixes: 367e8560e8d7 ("Staging: fbtbt: Replace timespec with ktime_t")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 540ce809d333a4579a61146777b0bea4c3263e31
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Sep 19 19:09:51 2016 +0100

    usb: misc: legousbtower: Fix NULL pointer deference
    
    commit 2fae9e5a7babada041e2e161699ade2447a01989 upstream.
    
    This patch fixes a NULL pointer dereference caused by a race codition in
    the probe function of the legousbtower driver. It re-structures the
    probe function to only register the interface after successfully reading
    the board's firmware ID.
    
    The probe function does not deregister the usb interface after an error
    receiving the devices firmware ID. The device file registered
    (/dev/usb/legousbtower%d) may be read/written globally before the probe
    function returns. When tower_delete is called in the probe function
    (after an r/w has been initiated), core dev structures are deleted while
    the file operation functions are still running. If the 0 address is
    mappable on the machine, this vulnerability can be used to create a
    Local Priviege Escalation exploit via a write-what-where condition by
    remapping dev->interrupt_out_buffer in tower_write. A forged USB device
    and local program execution would be required for LPE. The USB device
    would have to delay the control message in tower_probe and accept
    the control urb in tower_open whilst guest code initiated a write to the
    device file as tower_delete is called from the error in tower_probe.
    
    This bug has existed since 2003. Patch tested by emulated device.
    
    Reported-by: James Patrick-Evans <james@jmp-e.com>
    Tested-by: James Patrick-Evans <james@jmp-e.com>
    Signed-off-by: James Patrick-Evans <james@jmp-e.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b09f2d43201472327b80f9978cd768b46353a34
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 3 21:03:48 2016 -0700

    Using BUG_ON() as an assert() is _never_ acceptable
    
    commit 21f54ddae449f4bdd9f1498124901d67202243d9 upstream.
    
    That just generally kills the machine, and makes debugging only much
    harder, since the traces may long be gone.
    
    Debugging by assert() is a disease.  Don't do it.  If you can continue,
    you're much better off doing so with a live machine where you have a
    much higher chance that the report actually makes it to the system logs,
    rather than result in a machine that is just completely dead.
    
    The only valid situation for BUG_ON() is when continuing is not an
    option, because there is massive corruption.  But if you are just
    verifying that something is true, you warn about your broken assumptions
    (preferably just once), and limp on.
    
    Fixes: 22f2ac51b6d6 ("mm: workingset: fix crash in shadow node shrinker caused by replace_page_cache_page()")
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Miklos Szeredi <miklos@szeredi.hu>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 107d026ae1c80ac0881f791a58cd115321d111ca
Author: Will Deacon <will@kernel.org>
Date:   Fri Aug 26 11:36:39 2016 +0100

    arm64: debug: avoid resetting stepping state machine when TIF_SINGLESTEP
    
    commit 3a402a709500c5a3faca2111668c33d96555e35a upstream.
    
    When TIF_SINGLESTEP is set for a task, the single-step state machine is
    enabled and we must take care not to reset it to the active-not-pending
    state if it is already in the active-pending state.
    
    Unfortunately, that's exactly what user_enable_single_step does, by
    unconditionally setting the SS bit in the SPSR for the current task.
    This causes failures in the GDB testsuite, where GDB ends up missing
    expected step traps if the instruction being stepped generates another
    trap, e.g. PTRACE_EVENT_FORK from an SVC instruction.
    
    This patch fixes the problem by preserving the current state of the
    stepping state machine when TIF_SINGLESTEP is set on the current thread.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Yao Qi <yao.qi@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
