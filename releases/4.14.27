commit 9b1fb9cc922dbf27959287ad75009bb388d115fe
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 15 10:54:38 2018 +0100

    Linux 4.14.27

commit 24e955e591007a5175dd317b2b3e65cdb953994d
Author: Francis Deslauriers <francis.deslauriers@efficios.com>
Date:   Thu Mar 8 22:18:12 2018 -0500

    x86/kprobes: Fix kernel crash when probing .entry_trampoline code
    
    commit c07a8f8b08ba683ea24f3ac9159f37ae94daf47f upstream.
    
    Disable the kprobe probing of the entry trampoline:
    
    .entry_trampoline is a code area that is used to ensure page table
    isolation between userspace and kernelspace.
    
    At the beginning of the execution of the trampoline, we load the
    kernel's CR3 register. This has the effect of enabling the translation
    of the kernel virtual addresses to physical addresses. Before this
    happens most kernel addresses can not be translated because the running
    process' CR3 is still used.
    
    If a kprobe is placed on the trampoline code before that change of the
    CR3 register happens the kernel crashes because int3 handling pages are
    not accessible.
    
    To fix this, add the .entry_trampoline section to the kprobe blacklist
    to prohibit the probing of code before all the kernel pages are
    accessible.
    
    Signed-off-by: Francis Deslauriers <francis.deslauriers@efficios.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: mathieu.desnoyers@efficios.com
    Cc: mhiramat@kernel.org
    Link: http://lkml.kernel.org/r/1520565492-4637-2-git-send-email-francis.deslauriers@efficios.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8be8ff1f75751502b6773b725d830211a2d970a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Mar 6 17:58:15 2018 -0600

    objtool: Fix 32-bit build
    
    commit 63474dc4ac7ed3848a4786b9592dd061901f606d upstream.
    
    Fix the objtool build when cross-compiling a 64-bit kernel on a 32-bit
    host.  This also simplifies read_retpoline_hints() a bit and makes its
    implementation similar to most of the other annotation reading
    functions.
    
    Reported-by: Sven Joachim <svenjoac@gmx.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: b5bc2231b8ad ("objtool: Add retpoline validation")
    Link: http://lkml.kernel.org/r/2ca46c636c23aa9c9d57d53c75de4ee3ddf7a7df.1520380691.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a617f2e36d674c60d5983297f4e2d218bd25c272
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Wed Feb 28 07:19:21 2018 -0600

    objtool: Fix another switch table detection issue
    
    commit 1402fd8ed7e5bda1b3e7613b70780b0db392d1e6 upstream.
    
    Continue the switch table detection whack-a-mole.  Add a check to
    distinguish KASAN data reads from switch data reads.  The switch jump
    tables in .rodata have relocations associated with them.
    
    This fixes the following warning:
    
      crypto/asymmetric_keys/x509_cert_parser.o: warning: objtool: x509_note_pkey_algo()+0xa4: sibling call from callable instruction with modified stack frame
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/d7c8853022ad47d158cb81e953a40469fc08a95e.1519784382.git.jpoimboe@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3b9f72606ac4fda901ac6ee9040952e854422fb
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Feb 6 09:46:13 2018 +0100

    objtool, retpolines: Integrate objtool with retpoline support more closely
    
    commit d5028ba8ee5a18c9d0bb926d883c28b370f89009 upstream.
    
    Disable retpoline validation in objtool if your compiler sucks, and otherwise
    select the validation stuff for CONFIG_RETPOLINE=y (most builds would already
    have it set due to ORC).
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a69898c9eb0a2eac477a980e4b94d2f7f3ff0a43
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 31 10:18:28 2018 +0100

    objtool: Add module specific retpoline rules
    
    commit ca41b97ed9124fd62323a162de5852f6e28f94b8 upstream.
    
    David allowed retpolines in .init.text, except for modules, which will
    trip up objtool retpoline validation, fix that.
    
    Requested-by: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3945bbe1525f3c5f6612d8e905760b540b514c49
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Nov 27 21:15:13 2017 +0900

    kbuild: move cc-option and cc-disable-warning after incl. arch Makefile
    
    commit cfe17c9bbe6a673fdafdab179c32b355ed447f66 upstream.
    
    Geert reported commit ae6b289a3789 ("kbuild: Set KBUILD_CFLAGS before
    incl. arch Makefile") broke cross-compilation using a cross-compiler
    that supports less compiler options than the host compiler.
    
    For example,
    
      cc1: error: unrecognized command line option "-Wno-unused-but-set-variable"
    
    This problem happens on architectures that setup CROSS_COMPILE in their
    arch/*/Makefile.
    
    Move the cc-option and cc-disable-warning back to the original position,
    but keep the Clang target options untouched.
    
    Fixes: ae6b289a3789 ("kbuild: Set KBUILD_CFLAGS before incl. arch Makefile")
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Tested-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6288eb92cae86430ae9ac23ec396922eaf985ba9
Author: Chris Fries <cfries@google.com>
Date:   Tue Nov 7 11:46:13 2017 -0800

    kbuild: Set KBUILD_CFLAGS before incl. arch Makefile
    
    commit ae6b289a37890909fea0e4a1666e19377fa0ed2c upstream.
    
    Set the clang KBUILD_CFLAGS up before including arch/ Makefiles,
    so that ld-options (etc.) can work correctly.
    
    This fixes errors with clang such as ld-options trying to CC
    against your host architecture, but LD trying to link against
    your target architecture.
    
    Signed-off-by: Chris Fries <cfries@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Matthias Kaehlcke <mka@chromium.org>
    Tested-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfe39acafbaf80504451e56ccb33d1481f13bbe7
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Oct 4 12:56:06 2017 +0900

    kbuild: re-order the code to not parse unnecessary variables
    
    commit 2c1f4f125159f10521944cea23e33a00fcf85ede upstream.
    
    The top Makefile is divided into some sections such as mixed targets,
    config targets, build targets, etc.
    
    When we build mixed targets, Kbuild just invokes submake to process
    them one by one.  In this case, compiler-related variables like CC,
    KBUILD_CFLAGS, etc. are unneeded.
    
    Check what kind of targets we are building first, and parse variables
    for building only when necessary.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6993149fa4d3700c66cf4607833588c052cca89
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jan 16 10:24:06 2018 +0100

    objtool: Add retpoline validation
    
    commit b5bc2231b8ad4387c9641f235ca0ad8cd300b6df upstream.
    
    David requested a objtool validation pass for CONFIG_RETPOLINE=y enabled
    builds, where it validates no unannotated indirect  jumps or calls are
    left.
    
    Add an additional .discard.retpoline_safe section to allow annotating
    the few indirect sites that are required and safe.
    
    Requested-by: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c2768139ffbcf4c85d4006d090e07f93d696073
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jan 16 17:16:32 2018 +0100

    objtool: Use existing global variables for options
    
    commit 43a4525f80534530077683f6472d8971646b0ace upstream.
    
    Use the existing global variables instead of passing them around and
    creating duplicate global variables.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9be9ef91a1449241d195c488159115f1704fd31
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jan 23 16:18:50 2018 +0100

    x86/mm/sme, objtool: Annotate indirect call in sme_encrypt_execute()
    
    commit 531bb52a869a9c6e08c8d17ba955fcbfc18037ad upstream.
    
    This is boot code and thus Spectre-safe: we run this _way_ before userspace
    comes along to have a chance to poison our branch predictor.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d840d9a1742ab3351a3873b666ab89f8b0e11f3
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jan 16 10:38:09 2018 +0100

    x86/boot, objtool: Annotate indirect jump in secondary_startup_64()
    
    commit bd89004f6305cbf7352238f61da093207ee518d6 upstream.
    
    The objtool retpoline validation found this indirect jump. Seeing how
    it's on CPU bringup before we run userspace it should be safe, annotate
    it.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fceef2e7febff5728ce64ef1cbb087075ec1acd
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 17 16:58:11 2018 +0100

    x86/paravirt, objtool: Annotate indirect calls
    
    commit 3010a0663fd949d122eca0561b06b0a9453f7866 upstream.
    
    Paravirt emits indirect calls which get flagged by objtool retpoline
    checks, annotate it away because all these indirect calls will be
    patched out before we start userspace.
    
    This patching happens through alternative_instructions() ->
    apply_paravirt() -> pv_init_ops.patch() which will eventually end up
    in paravirt_patch_default(). This function _will_ write direct
    alternatives.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5065490489ee87d5a898b8dc125e4f38ba295c43
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 21 09:20:37 2018 +0100

    x86/speculation: Move firmware_restrict_branch_speculation_*() from C to CPP
    
    commit d72f4e29e6d84b7ec02ae93088aa459ac70e733b upstream.
    
    firmware_restrict_branch_speculation_*() recently started using
    preempt_enable()/disable(), but those are relatively high level
    primitives and cause build failures on some 32-bit builds.
    
    Since we want to keep <asm/nospec-branch.h> low level, convert
    them to macros to avoid header hell...
    
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 945e3d00ecdc08e797ed2358c00b39ca941db82f
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 17 22:34:34 2018 +0100

    x86/speculation, objtool: Annotate indirect calls/jumps for objtool
    
    commit 9e0e3c5130e949c389caabc8033e9799b129e429 upstream.
    
    Annotate the indirect calls/jumps in the CALL_NOSPEC/JUMP_NOSPEC
    alternatives.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e76a9431f21a9f5c67efade07d4937e06129a5ca
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:57 2018 +0000

    x86/retpoline: Support retpoline builds with Clang
    
    commit 87358710c1fb4f1bf96bbe2349975ff9953fc9b2 upstream.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-5-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3ffdb5a2ed4a5f2488660cfbd310670e43fe803
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:54 2018 +0000

    x86/speculation: Use IBRS if available before calling into firmware
    
    commit dd84441a797150dcc49298ec95c459a8891d8bb1 upstream.
    
    Retpoline means the kernel is safe because it has no indirect branches.
    But firmware isn't, so use IBRS for firmware calls if it's available.
    
    Block preemption while IBRS is set, although in practice the call sites
    already had to be doing that.
    
    Ignore hpwdt.c for now. It's taking spinlocks and calling into firmware
    code, from an NMI handler. I don't want to touch that with a bargepole.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a66fe0437d85ee3528b79ccaaa5806e0acacb480
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Mon Feb 19 10:50:56 2018 +0000

    Revert "x86/retpoline: Simplify vmexit_fill_RSB()"
    
    commit d1c99108af3c5992640aa2afa7d2e88c3775c06e upstream.
    
    This reverts commit 1dde7415e99933bb7293d6b2843752cbdb43ec11. By putting
    the RSB filling out of line and calling it, we waste one RSB slot for
    returning from the function itself, which means one fewer actual function
    call we can make if we're doing the Skylake abomination of call-depth
    counting.
    
    It also changed the number of RSB stuffings we do on vmexit from 32,
    which was correct, to 16. Let's just stop with the bikeshedding; it
    didn't actually *fix* anything anyway.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: arjan.van.de.ven@intel.com
    Cc: bp@alien8.de
    Cc: dave.hansen@intel.com
    Cc: jmattson@google.com
    Cc: karahmed@amazon.de
    Cc: kvm@vger.kernel.org
    Cc: pbonzini@redhat.com
    Cc: rkrcmar@redhat.com
    Link: http://lkml.kernel.org/r/1519037457-7643-4-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cb4113443393481f753ae50bdb6e898b845e086
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Feb 19 08:06:14 2018 -0700

    x86-64/realmode: Add instruction suffix
    
    commit 8554004a0231dedf44d4d62147fb3d6a6db489aa upstream.
    
    Omitting suffixes from instructions in AT&T mode is bad practice when
    operand size cannot be determined by the assembler from register
    operands, and is likely going to be warned about by upstream GAS in the
    future (mine does already). Add the single missing suffix here.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/5A8AF5F602000078001A9230@prv-mh.provo.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd9547e515034740272c32f77f201a460ee89561
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Feb 19 07:52:10 2018 -0700

    x86/LDT: Avoid warning in 32-bit builds with older gcc
    
    commit f2f18b16c779978ece4a04f304a92ff9ac8fbce5 upstream.
    
    BUG() doesn't always imply "no return", and hence should be followed by
    a return statement even if that's obviously (to a human) unreachable.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/5A8AF2AA02000078001A91E9@prv-mh.provo.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e793e30063b90d4930f0ab490302113a79b62749
Author: Jan Beulich <JBeulich@suse.com>
Date:   Mon Feb 19 07:49:12 2018 -0700

    x86/asm: Improve how GEN_*_SUFFIXED_RMWcc() specify clobbers
    
    commit 700b7c5409c3e9da279fbea78cf28a78fbc176cd upstream.
    
    Commit:
    
      df3405245a ("x86/asm: Add suffix macro for GEN_*_RMWcc()")
    
    ... introduced "suffix" RMWcc operations, adding bogus clobber specifiers:
    For one, on x86 there's no point explicitly clobbering "cc".
    
    In fact, with GCC properly fixed, this results in an overlap being detected by
    the compiler between outputs and clobbers.
    
    Furthermore it seems bad practice to me to have clobber specification
    and use of the clobbered register(s) disconnected - it should rather be
    at the invocation place of that GEN_{UN,BIN}ARY_SUFFIXED_RMWcc() macros
    that the clobber is specified which this particular invocation needs.
    
    Drop the "cc" clobber altogether and move the "cx" one to refcount.h.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/5A8AF1F802000078001A91E1@prv-mh.provo.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c507f00d2b5e13743f6020d13d66aed725ce9a5d
Author: Jann Horn <jannh@google.com>
Date:   Mon Feb 19 18:50:39 2018 +0100

    x86/mm: Remove stale comment about KMEMCHECK
    
    commit 3b3a9268bba62b35a29bafe0931715b1725fdf26 upstream.
    
    This comment referred to a conditional call to kmemcheck_hide() that was
    here until commit 4950276672fc ("kmemcheck: remove annotations").
    
    Now that kmemcheck has been removed, it doesn't make sense anymore.
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20180219175039.253089-1-jannh@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f9d19a6c9e10112092a20fc7598fb1d53de81a3
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Wed Feb 14 18:59:24 2018 +0100

    x86/entry/64: Use 'xorl' for faster register clearing
    
    commit ced5d0bf603fa0baee8ea889e1d70971fd210894 upstream.
    
    On some x86 CPU microarchitectures using 'xorq' to clear general-purpose
    registers is slower than 'xorl'. As 'xorl' is sufficient to clear all
    64 bits of these registers due to zero-extension [*], switch the x86
    64-bit entry code to use 'xorl'.
    
    No change in functionality and no change in code size.
    
    [*] According to Intel 64 and IA-32 Architecture Software Developer's
        Manual, section 3.4.1.1, the result of 32-bit operands are "zero-
        extended to a 64-bit result in the destination general-purpose
        register." The AMD64 Architecture Programmer’s Manual Volume 3,
        Appendix B.1, describes the same behaviour.
    
    Suggested-by: Denys Vlasenko <dvlasenk@redhat.com>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180214175924.23065-3-linux@dominikbrodowski.net
    [ Improved on the changelog a bit. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b690fda31a4701d7ee847aa495f8fc7fb3927abc
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Wed Feb 14 18:59:23 2018 +0100

    x86/entry: Reduce the code footprint of the 'idtentry' macro
    
    commit 9e809d15d6b692fa061d74be7aaab1c79f6784b8 upstream.
    
    Play a little trick in the generic PUSH_AND_CLEAR_REGS macro
    to insert the GP registers "above" the original return address.
    
    This allows us to (re-)insert the macro in error_entry() and
    paranoid_entry() and to remove it from the idtentry macro. This
    reduces the static footprint significantly:
    
       text    data     bss     dec     hex filename
      24307       0       0   24307    5ef3 entry_64.o-orig
      20987       0       0   20987    51fb entry_64.o
    
    Co-developed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180214175924.23065-2-linux@dominikbrodowski.net
    [ Small tweaks to comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e19277e1df539cf94b435042fbad9bdb7775ab6
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Feb 16 13:20:54 2018 -0800

    nospec: Include <asm/barrier.h> dependency
    
    commit eb6174f6d1be16b19cfa43dac296bfed003ce1a6 upstream.
    
    The nospec.h header expects the per-architecture header file
    <asm/barrier.h> to optionally define array_index_mask_nospec(). Include
    that dependency to prevent inadvertent fallback to the default
    array_index_mask_nospec() implementation.
    
    The default implementation may not provide a full mitigation
    on architectures that perform data value speculation.
    
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arch@vger.kernel.org
    Link: http://lkml.kernel.org/r/151881605404.17395.1341935530792574707.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bebe3994ddafb0298cc0d3365ca2881a87e3fa39
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Feb 16 13:20:42 2018 -0800

    nospec: Kill array_index_nospec_mask_check()
    
    commit 1d91c1d2c80cb70e2e553845e278b87a960c04da upstream.
    
    There are multiple problems with the dynamic sanity checking in
    array_index_nospec_mask_check():
    
    * It causes unnecessary overhead in the 32-bit case since integer sized
      @index values will no longer cause the check to be compiled away like
      in the 64-bit case.
    
    * In the 32-bit case it may trigger with user controllable input when
      the expectation is that should only trigger during development of new
      kernel enabling.
    
    * The macro reuses the input parameter in multiple locations which is
      broken if someone passes an expression like 'index++' to
      array_index_nospec().
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arch@vger.kernel.org
    Link: http://lkml.kernel.org/r/151881604278.17395.6605847763178076520.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc2f0da8350e413923ad67e2e26d8d9f1fb97aff
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Jan 19 16:40:49 2018 +0100

    MIPS: CPC: Map registers using DT in mips_cpc_default_phys_base()
    
    commit 791412dafbbfd860e78983d45cf71db603a82f67 upstream.
    
    Reading mips_cpc_base value from the DT allows each platform to
    define it according to its needs. This is especially convenient
    for MIPS_GENERIC kernel where this kind of information should be
    determined in runtime.
    
    Use mti,mips-cpc compatible string with just a reg property to
    specify the register location for your platform.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Signed-off-by: Miodrag Dinic <miodrag.dinic@mips.com>
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Cc: linux-mips@linux-mips.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Patchwork: https://patchwork.linux-mips.org/patch/18513/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20b4c7f86df9dadfef0d3a63767c8f6feb50134e
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Jan 19 16:40:48 2018 +0100

    dt-bindings: Document mti,mips-cpc binding
    
    commit aece34cd576c7625181b0488a8129c1e165355f7 upstream.
    
    Document a binding for the MIPS Cluster Power Controller (CPC) that
    allows the device tree to specify where the CPC registers are located.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Cc: linux-mips@linux-mips.org
    Cc: devicetree@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/18512/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 608d96fc43a37d2c99e706683868bff38ac8271b
Author: himanshu.madhani@cavium.com <himanshu.madhani@cavium.com>
Date:   Mon Jan 15 20:46:47 2018 -0800

    scsi: qla2xxx: Fix recursion while sending terminate exchange
    
    commit 3efc31f76dd7fc8a71cd86683909f637e9b7cadb upstream.
    
    During error test case where switch port status is toggled from enable to
    disable, following stack trace is seen which indicates recursion trying to
    send terminate exchange.  This regression was introduced by commit
    82de802ad46e ("scsi: qla2xxx: Preparation for Target MQ.")
    
    BUG: stack guard page was hit at ffffb96488383ff8 (stack is ffffb96488384000..ffffb96488387fff)
    BUG: stack guard page was hit at ffffb964886c3ff8 (stack is ffffb964886c4000..ffffb964886c7fff)
    kernel stack overflow (double-fault): 0000 [#1] SMP
    qlt_term_ctio_exchange+0x9c/0xb0 [qla2xxx]
    qlt_term_ctio_exchange+0x9c/0xb0 [qla2xxx]
    qlt_term_ctio_exchange+0x9c/0xb0 [qla2xxx]
    qlt_term_ctio_exchange+0x9c/0xb0 [qla2xxx]
    qlt_term_ctio_exchange+0x9c/0xb0 [qla2xxx]
    
    Fixes: 82de802ad46e ("scsi: qla2xxx: Preparation for Target MQ.")
    Cc: <stable@vger.kernel.org> #4.10
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8540351ee8a4d540b1b7ee64b88d5e42c7c0bfbc
Author: himanshu.madhani@cavium.com <himanshu.madhani@cavium.com>
Date:   Mon Jan 15 20:46:46 2018 -0800

    scsi: qla2xxx: Fix NULL pointer crash due to probe failure
    
    commit d64d6c5671db5e693a0caaee79f2571b098749c9 upstream.
    
    This patch fixes regression added by commit d74595278f4ab
    ("scsi: qla2xxx: Add multiple queue pair functionality.").
    
    When driver is not able to get reqeusted IRQs from the system, driver will
    attempt tp clean up memory before failing hardware probe. During this cleanup,
    driver assigns NULL value to the pointer which has not been allocated by
    driver yet. This results in a NULL pointer access.
    
    Log file will show following message and stack trace
    
    qla2xxx [0000:a3:00.1]-00c7:21: MSI-X: Failed to enable support, giving up -- 32/-1.
    qla2xxx [0000:a3:00.1]-0037:21: Falling back-to MSI mode --1.
    qla2xxx [0000:a3:00.1]-003a:21: Failed to reserve interrupt 821 already in use.
    BUG: unable to handle kernel NULL pointer dereference at (null)
    IP: [<ffffffffc010c4b6>] qla2x00_probe_one+0x18b6/0x2730 [qla2xxx]
    PGD 0
    Oops: 0002 [#1] SMP
    
    Fixes: d74595278f4ab ("scsi: qla2xxx: Add multiple queue pair functionality.").
    Cc: <stable@vger.kernel.org> # 4.10
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3deecffb1b78aa73469c9c0cf473dc0bf3f6ee53
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 15:49:24 2018 +0100

    ALSA: hda: add dock and led support for HP ProBook 640 G2
    
    commit 099fd6ca0ad25bc19c5ade2ea4b25b8fadaa11b3 upstream.
    
    This patch adds missing initialisation for HP 2013 UltraSlim Dock
    Line-In/Out PINs and activates keyboard mute/micmute leds
    for HP ProBook 640 G2
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2ba41eb6290c66653529ae78da4180b8229c75f
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 15:49:03 2018 +0100

    ALSA: hda: add dock and led support for HP EliteBook 820 G3
    
    commit aea808172018ca01abf53db808323aed23281835 upstream.
    
    This patch adds missing initialisation for HP 2013 UltraSlim Dock
    Line-In/Out PINs and activates keyboard mute/micmute leds
    for HP EliteBook 820 G3
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 818b447d14e4384551f88b431344d17bd9d9a08d
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Mar 2 13:05:36 2018 +0800

    ALSA: hda - Fix a wrong FIXUP for alc289 on Dell machines
    
    commit d5078193e56bb24f4593f00102a3b5e07bb84ee0 upstream.
    
    With the alc289, the Pin 0x1b is Headphone-Mic, so we should assign
    ALC269_FIXUP_DELL4_MIC_NO_PRESENCE rather than
    ALC225_FIXUP_DELL1_MIC_NO_PRESENCE to it. And this change is suggested
    by Kailang of Realtek and is verified on the machine.
    
    Fixes: 3f2f7c553d07 ("ALSA: hda - Fix headset mic detection problem for two Dell machines")
    Cc: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d3a7dcba8c5ac740ef168621829aa163be4abc6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:06:09 2018 +0100

    ALSA: seq: More protection for concurrent write and ioctl races
    
    commit 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9 upstream.
    
    This patch is an attempt for further hardening against races between
    the concurrent write and ioctls.  The previous fix d15d662e89fc
    ("ALSA: seq: Fix racy pool initializations") covered the race of the
    pool initialization at writer and the pool resize ioctl by the
    client->ioctl_mutex (CVE-2018-1000004).  However, basically this mutex
    should be applied more widely to the whole write operation for
    avoiding the unexpected pool operations by another thread.
    
    The only change outside snd_seq_write() is the additional mutex
    argument to helper functions, so that we can unlock / relock the given
    mutex temporarily during schedule() call for blocking write.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Reviewed-and-tested-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9c724729d0d9122d45bdaa242f854d7368dfe09
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:00:55 2018 +0100

    ALSA: seq: Don't allow resizing pool in use
    
    commit d85739367c6d56e475c281945c68fdb05ca74b4c upstream.
    
    This is a fix for a (sort of) fallout in the recent commit
    d15d662e89fc ("ALSA: seq: Fix racy pool initializations") for
    CVE-2018-1000004.
    As the pool resize deletes the existing cells, it may lead to a race
    when another thread is writing concurrently, eventually resulting a
    UAF.
    
    A simple workaround is not to allow the pool resizing when the pool is
    in use.  It's an invalid behavior in anyway.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4e500bada3fec60ee72d1f8988e2883cde7a4a
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Thu Mar 8 13:17:54 2018 +0100

    ALSA: hda/realtek - Make dock sound work on ThinkPad L570
    
    commit e4c07b3b66b7d6a24c2fe3b1ddeff5cd9b378b3a upstream.
    
    One version of Lenovo Thinkpad T570 did not use ALC298
    (like other Kaby Lake devices). Instead it uses ALC292.
    In order to make the Lenovo dock working with that codec
    the dock quirk for ALC292 will be used.
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 816ee317d8a284a94e9af19810d9aed0b5cef28c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 6 12:14:17 2018 +0100

    ALSA: hda/realtek - Fix dock line-out volume on Dell Precision 7520
    
    commit e312a869cd726c698a75caca0d9e5c22fd3f1534 upstream.
    
    The dock line-out pin (NID 0x17 of ALC3254 codec) on Dell Precision
    7520 may route to three different DACs, 0x02, 0x03 and 0x06.  The
    first two DACS have the volume amp controls while the last one
    doesn't.  And unfortunately, the auto-parser assigns this pin to DAC3,
    resulting in the non-working volume control for the line out.
    
    Fix it by disabling the routing to DAC3 on the corresponding pin.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=199029
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c69eccc1ab1d5f10dff2508bbf31fa55eeb2e4e
Author: Benjamin Berg <bberg@redhat.com>
Date:   Wed Feb 14 13:29:39 2018 +0100

    ALSA: hda/realtek: Limit mic boost on T480
    
    commit 85981dfd6b0a0fd9ed87ca4a525981b67c21f098 upstream.
    
    The internal mic boost on the T480 is too high. Fix this by applying the
    ALC269_FIXUP_LIMIT_INT_MIC_BOOST fixup to the machine to limit the gain.
    
    Signed-off-by: Benjamin Berg <bberg@redhat.com>
    Tested-by: Benjamin Berg <bberg@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37872f84cc2d4ea6d6521f32b5e03c511a43df14
Author: Kailang Yang <kailang@realtek.com>
Date:   Mon Feb 5 16:07:20 2018 +0800

    ALSA: hda/realtek - Add headset mode support for Dell laptop
    
    commit ae104a21e52b1f9aab342cf6924405177b720069 upstream.
    
    This platform was only one phone Jack.
    Add dummy lineout verb to fix automute mode disable.
    This just the workaround.
    
    [ More background information:
      since the platform has only a headphone jack without speaker, the
      driver doesn't create the auto-mute control.  Meanwhile we do update
      the headset mode via the automute hook in the driver, thus with this
      setup, the headset won't be updated any longer.
    
      By adding a dummy line-out pin here, the auto-mute is added by the
      driver, and the headset update is triggered properly.
    
      Note that this is different from the other
      ALC274_FIXUP_DELL_AIO_LINEOUT_VERB, which has the real line-out pin,
      while this quirk adds a dummy line-out pin.  -- tiwai ]
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c269a2557a98e76f3511ce71e426fa066b1f467
Author: Kailang Yang <kailang@realtek.com>
Date:   Tue Jul 25 16:28:16 2017 +0800

    ALSA: hda/realtek - Add support headset mode for DELL WYSE
    
    commit 5f36413526677b11d3226ebf064f471894ea2e5d upstream.
    
    Enable headset mode support for WYSE platform.
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5bd1ad601d19c1d92adb33e6bb0673c39fbc0e7
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 26 09:35:01 2018 -0500

    x86/spectre_v2: Don't check microcode versions when running under hypervisors
    
    commit 36268223c1e9981d6cfc33aff8520b3bde4b8114 upstream.
    
    As:
    
     1) It's known that hypervisors lie about the environment anyhow (host
        mismatch)
    
     2) Even if the hypervisor (Xen, KVM, VMWare, etc) provided a valid
        "correct" value, it all gets to be very murky when migration happens
        (do you provide the "new" microcode of the machine?).
    
    And in reality the cloud vendors are the ones that should make sure that
    the microcode that is running is correct and we should just sing lalalala
    and trust them.
    
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Wanpeng Li <kernellwp@gmail.com>
    Cc: kvm <kvm@vger.kernel.org>
    Cc: Krčmář <rkrcmar@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180226213019.GE9497@char.us.oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c192a793f056c7b16525768595e6b9b60bc31654
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Feb 28 10:39:04 2018 +0200

    perf tools: Fix trigger class trigger_on()
    
    commit de19e5c3c51fdb1ff20d0f61d099db902ff7494b upstream.
    
    trigger_on() means that the trigger is available but not ready, however
    trigger_on() was making it ready. That can segfault if the signal comes
    before trigger_ready(). e.g. (USR2 signal delivery not shown)
    
      $ perf record -e intel_pt//u -S sleep 1
      perf: Segmentation fault
      Obtained 16 stack frames.
      /home/ahunter/bin/perf(sighandler_dump_stack+0x40) [0x4ec550]
      /lib/x86_64-linux-gnu/libc.so.6(+0x36caf) [0x7fa76411acaf]
      /home/ahunter/bin/perf(perf_evsel__disable+0x26) [0x4b9dd6]
      /home/ahunter/bin/perf() [0x43a45b]
      /lib/x86_64-linux-gnu/libc.so.6(+0x36caf) [0x7fa76411acaf]
      /lib/x86_64-linux-gnu/libc.so.6(__xstat64+0x15) [0x7fa7641d2cc5]
      /home/ahunter/bin/perf() [0x4ec6c9]
      /home/ahunter/bin/perf() [0x4ec73b]
      /home/ahunter/bin/perf() [0x4ec73b]
      /home/ahunter/bin/perf() [0x4ec73b]
      /home/ahunter/bin/perf() [0x4eca15]
      /home/ahunter/bin/perf(machine__create_kernel_maps+0x257) [0x4f0b77]
      /home/ahunter/bin/perf(perf_session__new+0xc0) [0x4f86f0]
      /home/ahunter/bin/perf(cmd_record+0x722) [0x43c132]
      /home/ahunter/bin/perf() [0x4a11ae]
      /home/ahunter/bin/perf(main+0x5d4) [0x427fb4]
    
    Note, for testing purposes, this is hard to hit unless you add some sleep()
    in builtin-record.c before record__open().
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Cc: stable@vger.kernel.org
    Fixes: 3dcc4436fa6f ("perf tools: Introduce trigger class")
    Link: http://lkml.kernel.org/r/1519807144-30694-1-git-send-email-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c1c405d393648da95339c3e0f2dcfd7a1021388
Author: Seunghun Han <kkamagui@gmail.com>
Date:   Tue Mar 6 15:21:43 2018 +0100

    x86/MCE: Serialize sysfs changes
    
    commit b3b7c4795ccab5be71f080774c45bbbcc75c2aaf upstream.
    
    The check_interval file in
    
      /sys/devices/system/machinecheck/machinecheck<cpu number>
    
    directory is a global timer value for MCE polling. If it is changed by one
    CPU, mce_restart() broadcasts the event to other CPUs to delete and restart
    the MCE polling timer and __mcheck_cpu_init_timer() reinitializes the
    mce_timer variable.
    
    If more than one CPU writes a specific value to the check_interval file
    concurrently, mce_timer is not protected from such concurrent accesses and
    all kinds of explosions happen. Since only root can write to those sysfs
    variables, the issue is not a big deal security-wise.
    
    However, concurrent writes to these configuration variables is void of
    reason so the proper thing to do is to serialize the access with a mutex.
    
    Boris:
    
     - Make store_int_with_restart() use device_store_ulong() to filter out
       negative intervals
     - Limit min interval to 1 second
     - Correct locking
     - Massage commit message
    
    Signed-off-by: Seunghun Han <kkamagui@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180302202706.9434-1-kkamagui@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 859334041d048412055a28ced61defbabb22d0f2
Author: Tony Luck <tony.luck@intel.com>
Date:   Tue Mar 6 15:21:41 2018 +0100

    x86/MCE: Save microcode revision in machine check records
    
    commit fa94d0c6e0f3431523f5701084d799c77c7d4a4f upstream.
    
    Updating microcode used to be relatively rare. Now that it has become
    more common we should save the microcode version in a machine check
    record to make sure that those people looking at the error have this
    important information bundled with the rest of the logged information.
    
    [ Borislav: Simplify a bit. ]
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yazen Ghannam <yazen.ghannam@amd.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180301233449.24311-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6a1c0caf2d0b21ba25752fe0909a79812ba9d12
Author: Michael Lyle <mlyle@lyle.org>
Date:   Mon Mar 5 13:41:55 2018 -0800

    bcache: don't attach backing with duplicate UUID
    
    commit 86755b7a96faed57f910f9e6b8061e019ac1ec08 upstream.
    
    This can happen e.g. during disk cloning.
    
    This is an incomplete fix: it does not catch duplicate UUIDs earlier
    when things are still unattached.  It does not unregister the device.
    Further changes to cope better with this are planned but conflict with
    Coly's ongoing improvements to handling device errors.  In the meantime,
    one can manually stop the device after this has happened.
    
    Attempts to attach a duplicate device result in:
    
    [  136.372404] loop: module loaded
    [  136.424461] bcache: register_bdev() registered backing device loop0
    [  136.424464] bcache: bch_cached_dev_attach() Tried to attach loop0 but duplicate UUID already attached
    
    My test procedure is:
    
      dd if=/dev/sdb1 of=imgfile bs=1024 count=262144
      losetup -f imgfile
    
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Tang Junhui <tang.junhui@zte.com.cn>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14c2230b83bc7ea2f120d2ab6b0bd8e0d7ab4c11
Author: Tang Junhui <tang.junhui@zte.com.cn>
Date:   Mon Mar 5 13:41:54 2018 -0800

    bcache: fix crashes in duplicate cache device register
    
    commit cc40daf91bdddbba72a4a8cd0860640e06668309 upstream.
    
    Kernel crashed when register a duplicate cache device, the call trace is
    bellow:
    [  417.643790] CPU: 1 PID: 16886 Comm: bcache-register Tainted: G
       W  OE    4.15.5-amd64-preempt-sysrq-20171018 #2
    [  417.643861] Hardware name: LENOVO 20ERCTO1WW/20ERCTO1WW, BIOS
    N1DET41W (1.15 ) 12/31/2015
    [  417.643870] RIP: 0010:bdevname+0x13/0x1e
    [  417.643876] RSP: 0018:ffffa3aa9138fd38 EFLAGS: 00010282
    [  417.643884] RAX: 0000000000000000 RBX: ffff8c8f2f2f8000 RCX: ffffd6701f8
    c7edf
    [  417.643890] RDX: ffffa3aa9138fd88 RSI: ffffa3aa9138fd88 RDI: 00000000000
    00000
    [  417.643895] RBP: ffffa3aa9138fde0 R08: ffffa3aa9138fae8 R09: 00000000000
    1850e
    [  417.643901] R10: ffff8c8eed34b271 R11: ffff8c8eed34b250 R12: 00000000000
    00000
    [  417.643906] R13: ffffd6701f78f940 R14: ffff8c8f38f80000 R15: ffff8c8ea7d
    90000
    [  417.643913] FS:  00007fde7e66f500(0000) GS:ffff8c8f61440000(0000) knlGS:
    0000000000000000
    [  417.643919] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  417.643925] CR2: 0000000000000314 CR3: 00000007e6fa0001 CR4: 00000000003
    606e0
    [  417.643931] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 00000000000
    00000
    [  417.643938] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 00000000000
    00400
    [  417.643946] Call Trace:
    [  417.643978]  register_bcache+0x1117/0x1270 [bcache]
    [  417.643994]  ? slab_pre_alloc_hook+0x15/0x3c
    [  417.644001]  ? slab_post_alloc_hook.isra.44+0xa/0x1a
    [  417.644013]  ? kernfs_fop_write+0xf6/0x138
    [  417.644020]  kernfs_fop_write+0xf6/0x138
    [  417.644031]  __vfs_write+0x31/0xcc
    [  417.644043]  ? current_kernel_time64+0x10/0x36
    [  417.644115]  ? __audit_syscall_entry+0xbf/0xe3
    [  417.644124]  vfs_write+0xa5/0xe2
    [  417.644133]  SyS_write+0x5c/0x9f
    [  417.644144]  do_syscall_64+0x72/0x81
    [  417.644161]  entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    [  417.644169] RIP: 0033:0x7fde7e1c1974
    [  417.644175] RSP: 002b:00007fff13009a38 EFLAGS: 00000246 ORIG_RAX: 0000000
    000000001
    [  417.644183] RAX: ffffffffffffffda RBX: 0000000001658280 RCX: 00007fde7e1c
    1974
    [  417.644188] RDX: 000000000000000a RSI: 0000000001658280 RDI: 000000000000
    0001
    [  417.644193] RBP: 000000000000000a R08: 0000000000000003 R09: 000000000000
    0077
    [  417.644198] R10: 000000000000089e R11: 0000000000000246 R12: 000000000000
    0001
    [  417.644203] R13: 000000000000000a R14: 7fffffffffffffff R15: 000000000000
    0000
    [  417.644213] Code: c7 c2 83 6f ee 98 be 20 00 00 00 48 89 df e8 6c 27 3b 0
    0 48 89 d8 5b c3 0f 1f 44 00 00 48 8b 47 70 48 89 f2 48 8b bf 80 00 00 00 <8
    b> b0 14 03 00 00 e9 73 ff ff ff 0f 1f 44 00 00 48 8b 47 40 39
    [  417.644302] RIP: bdevname+0x13/0x1e RSP: ffffa3aa9138fd38
    [  417.644306] CR2: 0000000000000314
    
    When registering duplicate cache device in register_cache(), after failure
    on calling register_cache_set(), bch_cache_release() will be called, then
    bdev will be freed, so bdevname(bdev, name) caused kernel crash.
    
    Since bch_cache_release() will free bdev, so in this patch we make sure
    bdev being freed if register_cache() fail, and do not free bdev again in
    register_bcache() when register_cache() fail.
    
    Signed-off-by: Tang Junhui <tang.junhui@zte.com.cn>
    Reported-by: Marc MERLIN <marc@merlins.org>
    Tested-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1833eb13078778b908f60ad9457f374b1b8b44c
Author: Sergey Gorenko <sergeygo@mellanox.com>
Date:   Sun Feb 25 13:39:48 2018 +0200

    IB/mlx5: Fix incorrect size of klms in the memory region
    
    commit da343b6d90e11132f1e917d865d88ee35d6e6d00 upstream.
    
    The value of mr->ndescs greater than mr->max_descs is set in the
    function mlx5_ib_sg_to_klms() if sg_nents is greater than
    mr->max_descs. This is an invalid value and it causes the
    following error when registering mr:
    
    mlx5_0:dump_cqe:276:(pid 193): dump error cqe
    00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    00000030: 00 00 00 00 0f 00 78 06 25 00 00 8b 08 1e 8f d3
    
    Cc: <stable@vger.kernel.org> # 4.5
    Fixes: b005d3164713 ("mlx5: Add arbitrary sg list support")
    Signed-off-by: Sergey Gorenko <sergeygo@mellanox.com>
    Tested-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 525673339fb136e6dfb7628284bf8a88d6886502
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 22 16:56:16 2018 +0100

    dm bufio: avoid false-positive Wmaybe-uninitialized warning
    
    commit 590347e4000356f55eb10b03ced2686bd74dab40 upstream.
    
    gcc-6.3 and earlier show a new warning after a seemingly unrelated
    change to the arm64 PAGE_KERNEL definition:
    
    In file included from drivers/md/dm-bufio.c:14:0:
    drivers/md/dm-bufio.c: In function 'alloc_buffer':
    include/linux/sched/mm.h:182:56: warning: 'noio_flag' may be used uninitialized in this function [-Wmaybe-uninitialized]
      current->flags = (current->flags & ~PF_MEMALLOC_NOIO) | flags;
                                                            ^
    
    The same warning happened earlier on linux-3.18 for MIPS and I did a
    workaround for that, but now it's come back.
    
    gcc-7 and newer are apparently smart enough to figure this out, and
    other architectures don't show it, so the best I could come up with is
    to rework the caller slightly in a way that makes it obvious enough to
    all arm64 compilers what is happening here.
    
    Fixes: 41acec624087 ("arm64: kpti: Make use of nG dependent on arm64_kernel_unmapped_at_el0()")
    Link: https://patchwork.kernel.org/patch/9692829/
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    [snitzer: moved declarations inside conditional, altered vmalloc return]
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffced04184f55cadbc657b820af4f1faf536568f
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Mar 8 11:02:46 2018 +0000

    kbuild: Handle builtin dtb file names containing hyphens
    
    commit 55fe6da9efba102866e2fb5b40b04b6a4b26c19e upstream.
    
    cmd_dt_S_dtb constructs the assembly source to incorporate a devicetree
    FDT (that is, the .dtb file) as binary data in the kernel image. This
    assembly source contains labels before and after the binary data. The
    label names incorporate the file name of the corresponding .dtb file.
    Hyphens are not legal characters in labels, so .dtb files built into the
    kernel with hyphens in the file name result in errors like the
    following:
    
    bcm3368-netgear-cvg834g.dtb.S: Assembler messages:
    bcm3368-netgear-cvg834g.dtb.S:5: Error: : no such section
    bcm3368-netgear-cvg834g.dtb.S:5: Error: junk at end of line, first unrecognized character is `-'
    bcm3368-netgear-cvg834g.dtb.S:6: Error: unrecognized opcode `__dtb_bcm3368-netgear-cvg834g_begin:'
    bcm3368-netgear-cvg834g.dtb.S:8: Error: unrecognized opcode `__dtb_bcm3368-netgear-cvg834g_end:'
    bcm3368-netgear-cvg834g.dtb.S:9: Error: : no such section
    bcm3368-netgear-cvg834g.dtb.S:9: Error: junk at end of line, first unrecognized character is `-'
    
    Fix this by updating cmd_dt_S_dtb to transform all hyphens from the file
    name to underscores when constructing the labels.
    
    As of v4.16-rc2, 1139 .dts files across ARM64, ARM, MIPS and PowerPC
    contain hyphens in their names, but the issue only currently manifests
    on Broadcom MIPS platforms, as that is the only place where such files
    are built into the kernel. For example when CONFIG_DT_NETGEAR_CVG834G=y,
    or on BMIPS kernels when the dtbs target is used (in the latter case it
    admittedly shouldn't really build all the dtb.o files, but thats a
    separate issue).
    
    Fixes: 695835511f96 ("MIPS: BMIPS: rename bcm96358nb4ser to bcm6358-neufbox4-sercom")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Reviewed-by: Frank Rowand <frowand.list@gmail.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Michal Marek <michal.lkml@markovi.net>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Kevin Cernekee <cernekee@gmail.com>
    Cc: <stable@vger.kernel.org> # 4.9+
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3a8c7b5d70760f56aef564a5ac17115cfc0b5f5
Author: Parav Pandit <parav@mellanox.com>
Date:   Sun Feb 25 13:39:56 2018 +0200

    IB/core: Fix missing RDMA cgroups release in case of failure to register device
    
    commit 2fb4f4eadd180a50112618dd9c5fef7fc50d4f08 upstream.
    
    During IB device registration process, if query_device() fails or if
    ib_core fails to registers sysfs entries, rdma cgroup cleanup is
    skipped.
    
    Cc: <stable@vger.kernel.org> # v4.2+
    Fixes: 4be3a4fa51f4 ("IB/core: Fix kernel crash during fail to initialize device")
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1badd7b65c41b4742a9719b13be623fc3cfdcaf
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Feb 23 18:04:48 2018 +0000

    arm64: mm: fix thinko in non-global page table attribute check
    
    commit 753e8abc36b2c966caea075db0c845563c8a19bf upstream.
    
    The routine pgattr_change_is_safe() was extended in commit 4e6020565596
    ("arm64: mm: Permit transitioning from Global to Non-Global without BBM")
    to permit changing the nG attribute from not set to set, but did so in a
    way that inadvertently disallows such changes if other permitted attribute
    changes take place at the same time. So update the code to take this into
    account.
    
    Fixes: 4e6020565596 ("arm64: mm: Permit transitioning from Global to ...")
    Cc: <stable@vger.kernel.org> # 4.14.x-
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3da2a62a61d1d228228894b16021e85cccdbe173
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Mar 6 14:27:58 2018 +0100

    KVM: s390: fix memory overwrites when not using SCA entries
    
    commit f07afa0462b76a5b9c4f3a43d5ac24fdb86a90c2 upstream.
    
    Even if we don't have extended SCA support, we can have more than 64 CPUs
    if we don't enable any HW features that might use the SCA entries.
    
    Now, this works just fine, but we missed a return, which is why we
    would actually store the SCA entries. If we have more than 64 CPUs, this
    means writing outside of the basic SCA - bad.
    
    Let's fix this. This allows > 64 CPUs when running nested (under vSIE)
    without random crashes.
    
    Fixes: a6940674c384 ("KVM: s390: allow 255 VCPUs when sca entries aren't used")
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Message-Id: <20180306132758.21034-1-david@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 583cc79b7380178b924f9a85a23272de2cbd5c6f
Author: Tiwei Bie <tiwei.bie@intel.com>
Date:   Fri Feb 23 19:41:30 2018 +0800

    virtio_ring: fix num_free handling in error case
    
    commit e82df670235138575b37ff0ec24412a471efd97f upstream.
    
    The vq->vq.num_free hasn't been changed when error happens,
    so it shouldn't be changed when handling the error.
    
    Fixes: 780bc7903a32 ("virtio_ring: Support DMA APIs")
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Tiwei Bie <tiwei.bie@intel.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f9113db06a4799fadd432b36c951aab8abd5af8
Author: Ross Zwisler <zwisler@kernel.org>
Date:   Fri Mar 9 08:36:36 2018 -0700

    loop: Fix lost writes caused by missing flag
    
    commit 1d037577c323e5090ce281e96bc313ab2eee5be2 upstream.
    
    The following commit:
    
    commit aa4d86163e4e ("block: loop: switch to VFS ITER_BVEC")
    
    replaced __do_lo_send_write(), which used ITER_KVEC iterators, with
    lo_write_bvec() which uses ITER_BVEC iterators.  In this change, though,
    the WRITE flag was lost:
    
    -       iov_iter_kvec(&from, ITER_KVEC | WRITE, &kvec, 1, len);
    +       iov_iter_bvec(&i, ITER_BVEC, bvec, 1, bvec->bv_len);
    
    This flag is necessary for the DAX case because we make decisions based on
    whether or not the iterator is a READ or a WRITE in dax_iomap_actor() and
    in dax_iomap_rw().
    
    We end up going through this path in configurations where we combine a PMEM
    device with 4k sectors, a loopback device and DAX.  The consequence of this
    missed flag is that what we intend as a write actually turns into a read in
    the DAX code, so no data is ever written.
    
    The very simplest test case is to create a loopback device and try and
    write a small string to it, then hexdump a few bytes of the device to see
    if the write took.  Without this patch you read back all zeros, with this
    you read back the string you wrote.
    
    For XFS this causes us to fail or panic during the following xfstests:
    
            xfs/074 xfs/078 xfs/216 xfs/217 xfs/250
    
    For ext4 we have a similar issue where writes never happen, but we don't
    currently have any xfstests that use loopback and show this issue.
    
    Fix this by restoring the WRITE flag argument to iov_iter_bvec().  This
    causes the xfstests to all pass.
    
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: stable@vger.kernel.org
    Fixes: commit aa4d86163e4e ("block: loop: switch to VFS ITER_BVEC")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f18a19b21135e9dd535406e80b9b73f2f1cadb8
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Mar 2 10:40:14 2018 -0800

    Documentation/sphinx: Fix Directive import error
    
    commit ff690eeed804f112242f9a0614eafdf559f9276a upstream.
    
    Sphinx 1.7 removed sphinx.util.compat.Directive so people
    who have upgraded cannot build the documentation.  Switch to
    docutils.parsers.rst.Directive which has been available since
    docutils 0.5 released in 2009.
    
    Bugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=1083694
    Co-developed-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Jani Nikula <jani.nikula@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b3e6acbae0d4213d4f0f253cc142ac036e955a
Author: Daniel Vacek <neelx@redhat.com>
Date:   Fri Mar 9 15:51:09 2018 -0800

    mm/memblock.c: hardcode the end_pfn being -1
    
    commit 379b03b7fa05f7db521b7732a52692448a3c34fe upstream.
    
    This is just a cleanup.  It aids handling the special end case in the
    next commit.
    
    [akpm@linux-foundation.org: make it work against current -linus, not against -mm]
    [akpm@linux-foundation.org: make it work against current -linus, not against -mm some more]
    Link: http://lkml.kernel.org/r/1ca478d4269125a99bcfb1ca04d7b88ac1aee924.1520011944.git.neelx@redhat.com
    Signed-off-by: Daniel Vacek <neelx@redhat.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Pavel Tatashin <pasha.tatashin@oracle.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d50cb5cedb6f44487df565ed7218329e2bb571eb
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Mar 9 15:51:02 2018 -0800

    lib/bug.c: exclude non-BUG/WARN exceptions from report_bug()
    
    commit 1b4cfe3c0a30dde968fb43c577a8d7e262a145ee upstream.
    
    Commit b8347c219649 ("x86/debug: Handle warnings before the notifier
    chain, to fix KGDB crash") changed the ordering of fixups, and did not
    take into account the case of x86 processing non-WARN() and non-BUG()
    exceptions.  This would lead to output of a false BUG line with no other
    information.
    
    In the case of a refcount exception, it would be immediately followed by
    the refcount WARN(), producing very strange double-"cut here":
    
      lkdtm: attempting bad refcount_inc() overflow
      ------------[ cut here ]------------
      Kernel BUG at 0000000065f29de5 [verbose debug info unavailable]
      ------------[ cut here ]------------
      refcount_t overflow at lkdtm_REFCOUNT_INC_OVERFLOW+0x6b/0x90 in cat[3065], uid/euid: 0/0
      WARNING: CPU: 0 PID: 3065 at kernel/panic.c:657 refcount_error_report+0x9a/0xa4
      ...
    
    In the prior ordering, exceptions were searched first:
    
       do_trap_no_signal(struct task_struct *tsk, int trapnr, char *str,
       ...
                    if (fixup_exception(regs, trapnr))
                            return 0;
    
      -               if (fixup_bug(regs, trapnr))
      -                       return 0;
      -
    
    As a result, fixup_bugs()'s is_valid_bugaddr() didn't take into account
    needing to search the exception list first, since that had already
    happened.
    
    So, instead of searching the exception list twice (once in
    is_valid_bugaddr() and then again in fixup_exception()), just add a
    simple sanity check to report_bug() that will immediately bail out if a
    BUG() (or WARN()) entry is not found.
    
    Link: http://lkml.kernel.org/r/20180301225934.GA34350@beast
    Fixes: b8347c219649 ("x86/debug: Handle warnings before the notifier chain, to fix KGDB crash")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Richard Weinberger <richard.weinberger@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89d3fccd8bab549d4202cbe130a2373d45c9641c
Author: Zhang Bo <zbsdta@126.com>
Date:   Mon Feb 5 14:56:21 2018 -0800

    Input: matrix_keypad - fix race when disabling interrupts
    
    commit ea4f7bd2aca9f68470e9aac0fc9432fd180b1fe7 upstream.
    
    If matrix_keypad_stop() is executing and the keypad interrupt is triggered,
    disable_row_irqs() may be called by both matrix_keypad_interrupt() and
    matrix_keypad_stop() at the same time, causing interrupts to be disabled
    twice and the keypad being "stuck" after resuming.
    
    Take lock when setting keypad->stopped to ensure that ISR will not race
    with matrix_keypad_stop() disabling interrupts.
    
    Signed-off-by: Zhang Bo <zbsdta@126.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91e019af29cd79e300135f8103338f027cfc27af
Author: Koen Vandeputte <koen.vandeputte@ncentric.com>
Date:   Wed Mar 7 10:46:39 2018 -0600

    PCI: dwc: Fix enumeration end when reaching root subordinate
    
    commit fc110ebdd014dd1368c98e7685b47789c31fab42 upstream.
    
    The subordinate value indicates the highest bus number which can be
    reached downstream though a certain device.
    
    Commit a20c7f36bd3d ("PCI: Do not allocate more buses than available in
    parent") ensures that downstream devices cannot assign busnumbers higher
    than the upstream device subordinate number, which was indeed illogical.
    
    By default, dw_pcie_setup_rc() inits the Root Complex subordinate to a
    value of 0x01.
    
    Due to this combined with above commit, enumeration stops digging deeper
    downstream as soon as bus num 0x01 has been assigned, which is always the
    case for a bridge device.
    
    This results in all devices behind a bridge bus remaining undetected, as
    these would be connected to bus 0x02 or higher.
    
    Fix this by initializing the RC to a subordinate value of 0xff, which is
    not altering hardware behaviour in any way, but informs probing function
    pci_scan_bridge() later on which reads this value back from register.
    
    The following nasty errors during boot are also fixed by this:
    
      pci_bus 0000:02: busn_res: can not insert [bus 02-ff] under [bus 01] (conflicts with (null) [bus 01])
      ...
      pci_bus 0000:03: [bus 03] partially hidden behind bridge 0000:01 [bus 01]
      ...
      pci_bus 0000:04: [bus 04] partially hidden behind bridge 0000:01 [bus 01]
      ...
      pci_bus 0000:05: [bus 05] partially hidden behind bridge 0000:01 [bus 01]
      pci_bus 0000:02: busn_res: [bus 02-ff] end is updated to 05
      pci_bus 0000:02: busn_res: can not insert [bus 02-05] under [bus 01] (conflicts with (null) [bus 01])
      pci_bus 0000:02: [bus 02-05] partially hidden behind bridge 0000:01 [bus 01]
    
    Fixes: a20c7f36bd3d ("PCI: Do not allocate more buses than available in
    parent")
    Tested-by: Niklas Cassel <niklas.cassel@axis.com>
    Tested-by: Fabio Estevam <fabio.estevam@nxp.com>
    Tested-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Koen Vandeputte <koen.vandeputte@ncentric.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Lucas Stach <l.stach@pengutronix.de>
    Cc: stable@vger.kernel.org      # v4.15+
    Cc: Binghui Wang <wangbinghui@hisilicon.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Jianguo Sun <sunjianguo1@huawei.com>
    Cc: Jingoo Han <jingoohan1@gmail.com>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Minghuan Lian <minghuan.Lian@freescale.com>
    Cc: Mingkai Hu <mingkai.hu@freescale.com>
    Cc: Murali Karicheri <m-karicheri2@ti.com>
    Cc: Pratyush Anand <pratyush.anand@gmail.com>
    Cc: Richard Zhu <hongxing.zhu@nxp.com>
    Cc: Roy Zang <tie-fei.zang@freescale.com>
    Cc: Shawn Guo <shawn.guo@linaro.org>
    Cc: Stanimir Varbanov <svarbanov@mm-sol.com>
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Xiaowei Song <songxiaowei@hisilicon.com>
    Cc: Zhou Wang <wangzhou1@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d90bb7c6806b3c59a70b2fb6d09b92b1707cee33
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 22 18:08:53 2018 +0000

    MIPS: OCTEON: irq: Check for null return on kzalloc allocation
    
    commit 902f4d067a50ccf645a58dd5fb1d113b6e0f9b5b upstream.
    
    The allocation of host_data is not null checked, leading to a null
    pointer dereference if the allocation fails. Fix this by adding a null
    check and return with -ENOMEM.
    
    Fixes: 64b139f97c01 ("MIPS: OCTEON: irq: add CIB and other fixes")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: David Daney <david.daney@cavium.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: "Steven J. Hill" <Steven.Hill@cavium.com>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 4.0+
    Patchwork: https://patchwork.linux-mips.org/patch/18658/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e06fe592577174c01bb194866bb2c7d253f51397
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 22 17:50:12 2018 +0000

    MIPS: ath25: Check for kzalloc allocation failure
    
    commit 1b22b4b28fd5fbc51855219e3238b3ab81da8466 upstream.
    
    Currently there is no null check on a failed allocation of board_data,
    and hence a null pointer dereference will occurr. Fix this by checking
    for the out of memory null pointer.
    
    Fixes: a7473717483e ("MIPS: ath25: add board configuration detection")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 3.19+
    Patchwork: https://patchwork.linux-mips.org/patch/18657/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26f1a4666090145a8b4f5d43f65d7fc3be2594a1
Author: Justin Chen <justinpopo6@gmail.com>
Date:   Wed Sep 27 17:15:15 2017 -0700

    MIPS: BMIPS: Do not mask IPIs during suspend
    
    commit 06a3f0c9f2725f5d7c63c4203839373c9bd00c28 upstream.
    
    Commit a3e6c1eff548 ("MIPS: IRQ: Fix disable_irq on CPU IRQs") fixes an
    issue where disable_irq did not actually disable the irq. The bug caused
    our IPIs to not be disabled, which actually is the correct behavior.
    
    With the addition of commit a3e6c1eff548 ("MIPS: IRQ: Fix disable_irq on
    CPU IRQs"), the IPIs were getting disabled going into suspend, thus
    schedule_ipi() was not being called. This caused deadlocks where
    schedulable task were not being scheduled and other cpus were waiting
    for them to do something.
    
    Add the IRQF_NO_SUSPEND flag so an irq_disable will not be called on the
    IPIs during suspend.
    
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Fixes: a3e6c1eff548 ("MIPS: IRQ: Fix disabled_irq on CPU IRQs")
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17385/
    [jhogan@kernel.org: checkpatch: wrap long lines and fix commit refs]
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c6f1e60b5e4be19edf3978123fc13cb1b8d68f9
Author: James Zhu <James.Zhu@amd.com>
Date:   Tue Mar 6 14:52:35 2018 -0500

    drm/amdgpu:Always save uvd vcpu_bo in VM Mode
    
    commit f8bee6135e167f5b35b7789c74c2956dad14d0d5 upstream.
    
    When UVD is in VM mode, there is not uvd handle exchanged,
    uvd.handles are always 0. So vcpu_bo always need save,
    Otherwise amdgpu driver will fail during suspend/resume.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=105021
    Signed-off-by: James Zhu <James.Zhu@amd.com>
    Reviewed-by: Leo Liu <leo.liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 783fd8eb86fc415dfff9c13dfe3289836888fc97
Author: James Zhu <James.Zhu@amd.com>
Date:   Tue Mar 6 14:43:50 2018 -0500

    drm/amdgpu:Correct max uvd handles
    
    commit 0e5ee33d2a54e4c55fe92857f23e1cbb0440d6de upstream.
    
    Max uvd handles should use adev->uvd.max_handles instead of
    AMDGPU_MAX_UVD_HANDLES here.
    
    Signed-off-by: James Zhu <James.Zhu@amd.com>
    Reviewed-by: Leo Liu <leo.liu@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e919af14fa1789415c21b5f03d2c522174962e18
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Mar 1 11:05:31 2018 -0500

    drm/amdgpu: fix KV harvesting
    
    commit 545b0bcde7fbd3ee408fa842ea0731451dc4bd0a upstream.
    
    Always set the graphics values to the max for the
    asic type.  E.g., some 1 RB chips are actually 1 RB chips,
    others are actually harvested 2 RB chips.
    
    Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=99353
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f641c63d750acf83002aa32ab9a06cc866026108
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Mar 1 11:03:27 2018 -0500

    drm/radeon: fix KV harvesting
    
    commit 0b58d90f89545e021d188c289fa142e5ff9e708b upstream.
    
    Always set the graphics values to the max for the
    asic type.  E.g., some 1 RB chips are actually 1 RB chips,
    others are actually harvested 2 RB chips.
    
    Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=99353
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 755e5527e57faf7e90d7300c4ed4350505d45277
Author: Rex Zhu <Rex.Zhu@amd.com>
Date:   Tue Feb 27 18:20:53 2018 +0800

    drm/amdgpu: Notify sbios device ready before send request
    
    commit 1bced75f4ab04bec55aecb57d99435dc6d0ae5a0 upstream.
    
    it is required if a platform supports PCIe root complex
    core voltage reduction. After receiving this notification,
    SBIOS can apply default PCIe root complex power policy.
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20f3ff9738c04226209f606e239ad013e95f43b6
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Feb 26 11:05:10 2018 -0500

    drm/amdgpu: used cached pcie gen info for SI (v2)
    
    commit 05656e5e4917a08296300dc0530aed1539202c25 upstream.
    
    Rather than querying it every time we need it.
    Also fixes a crash in VM pass through if there is no
    root bridge because the cached value fetch already checks
    this properly.
    
    v2: fix includes
    
    Fixes: https://bugs.freedesktop.org/show_bug.cgi?id=105244
    Acked-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Rex Zhu<rezhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26078a2d862d99f296f25165a429536c2a8a7f38
Author: Eric Huang <JinHuiEric.Huang@amd.com>
Date:   Mon Feb 26 17:36:19 2018 -0500

    drm/amd/powerplay: fix power over limit on Fiji
    
    commit a0aaa03062be252aacad60a776f3374dd53e3f98 upstream.
    
    power containment disabled only on Fiji and compute
    power profile. It violates PCIe spec and may cause power
    supply failed. Enabling it will fix the issue, even the
    fix will drop performance of some compute tests.
    
    Signed-off-by: Eric Huang <JinHuiEric.Huang@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c1192dcb7ba194ef76e33df41225fc0b35d0b17
Author: Ben Crocker <bcrocker@redhat.com>
Date:   Thu Feb 22 17:52:19 2018 -0500

    drm/radeon: insist on 32-bit DMA for Cedar on PPC64/PPC64LE
    
    commit 2c83029cda55a5e7665c7c6326909427d6a01350 upstream.
    
    In radeon_device_init, set the need_dma32 flag for Cedar chips
    (e.g. FirePro 2270).  This fixes, or at least works around, a bug
    on PowerPC exposed by last year's commits
    
    8e3f1b1d8255105f31556aacf8aeb6071b00d469 (Russell Currey)
    
    and
    
    253fd51e2f533552ae35a0c661705da6c4842c1b (Alistair Popple)
    
    which enabled the 64-bit DMA iommu bypass.
    
    This caused the device to freeze, in some cases unrecoverably, and is
    the subject of several bug reports internal to Red Hat.
    
    Signed-off-by: Ben Crocker <bcrocker@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd93412438e7637ba510fc9e8908543b05e7f7f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Feb 15 08:40:30 2018 -0500

    Revert "drm/radeon/pm: autoswitch power state when in balanced mode"
    
    commit 53bf277b487eb5ae6695db01bede0fe406792119 upstream.
    
    This reverts commit 1c331f75aa6ccbf64ebcc5a019183e617c9d818a.
    
    Breaks resume on some systems.
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=100759
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfc381d215af6995bd5f1af4ac7635b7d6f56592
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Feb 13 14:25:11 2018 -0500

    drm/amd/powerplay/vega10: allow mclk switching with no displays
    
    commit 5825acf5c958a6820b04e9811caeb2f5e572bcd8 upstream.
    
    If there are no displays attached, there is no reason to disable
    mclk switching.
    
    Fixes mclks getting set to high when there are no displays attached.
    
    Reviewed-by: Eric Huang <JinhuiEric.Huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 396ff36876744a8359fb6d56c484f66bdb677842
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Feb 13 14:26:54 2018 -0500

    drm/amd/powerplay/smu7: allow mclk switching with no displays
    
    commit 51954e17914aaadf18d97b21c2a2cee16fa29513 upstream.
    
    If there are no displays attached, there is no reason to disable
    mclk switching.
    
    Fixes mclks getting set to high when there are no displays attached.
    
    Reviewed-by: Eric Huang <JinhuiEric.Huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b9a82c0e2e1e9ca1f838beae51d6791e69a8a85
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Sat Feb 3 14:11:23 2018 -0500

    drm/nouveau: prefer XBGR2101010 for addfb ioctl
    
    commit c20bb155c2c5acb775f68be5d84fe679687c3c1e upstream.
    
    Nouveau only exposes support for XBGR2101010. Prior to the atomic
    conversion, drm would pass in the wrong format in the framebuffer, but
    it was always ignored -- both userspace (xf86-video-nouveau) and the
    kernel driver agreed on the layout, so the fact that the format was
    wrong didn't matter.
    
    With the atomic conversion, nouveau all of a sudden started caring about
    the exact format, and so the previously-working code in
    xf86-video-nouveau no longer functioned since the (internally-assigned)
    format from the addfb ioctl was wrong.
    
    This change adds infrastructure to allow a drm driver to specify that it
    prefers the XBGR format variant for the addfb ioctl, and makes nouveau's
    nv50 display driver set it. (Prior gens had no support for 30bpp at all.)
    
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Cc: stable@vger.kernel.org # v4.10+
    Acked-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180203191123.31507-1-imirkin@alum.mit.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a23183d800c1155527d174729851943bf1146c
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/amdgpu: Fix deadlock on runtime suspend
    
    commit aa0aad57909eb321746325951d66af88a83bc956 upstream.
    
    amdgpu's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    amdgpu's ->detect hooks, which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if the ->detect hooks are called
    in the output poll worker's context.  This is safe because the poll
    worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Fixes: d38ceaf99ed0 ("drm/amdgpu: add core driver (v4)")
    Cc: stable@vger.kernel.org # v4.2+: 27d4ee03078a: workqueue: Allow retrieval of current task's work struct
    Cc: stable@vger.kernel.org # v4.2+: 25c058ccaf2e: drm: Allow determining if current task is output poll worker
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Tested-by: Mike Lothian <mike@fireburn.co.uk>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/4c9bf72aacae1eef062bd134cd112e0770a7f121.1518338789.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c1508eff805c81e81be88dec99dccc36c59fd4c
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/radeon: Fix deadlock on runtime suspend
    
    commit 15734feff2bdac24aa3266c437cffa42851990e3 upstream.
    
    radeon's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    radeon's ->detect hooks, which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if the ->detect hooks are called
    in the output poll worker's context.  This is safe because the poll
    worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Stack trace for posterity:
    
      INFO: task kworker/0:3:31847 blocked for more than 120 seconds
      Workqueue: events output_poll_execute [drm_kms_helper]
      Call Trace:
       schedule+0x3c/0x90
       rpm_resume+0x1e2/0x690
       __pm_runtime_resume+0x3f/0x60
       radeon_lvds_detect+0x39/0xf0 [radeon]
       output_poll_execute+0xda/0x1e0 [drm_kms_helper]
       process_one_work+0x14b/0x440
       worker_thread+0x48/0x4a0
    
      INFO: task kworker/2:0:10493 blocked for more than 120 seconds.
      Workqueue: pm pm_runtime_work
      Call Trace:
       schedule+0x3c/0x90
       schedule_timeout+0x1b3/0x240
       wait_for_common+0xc2/0x180
       wait_for_completion+0x1d/0x20
       flush_work+0xfc/0x1a0
       __cancel_work_timer+0xa5/0x1d0
       cancel_delayed_work_sync+0x13/0x20
       drm_kms_helper_poll_disable+0x1f/0x30 [drm_kms_helper]
       radeon_pmops_runtime_suspend+0x3d/0xa0 [radeon]
       pci_pm_runtime_suspend+0x61/0x1a0
       vga_switcheroo_runtime_suspend+0x21/0x70
       __rpm_callback+0x32/0x70
       rpm_callback+0x24/0x80
       rpm_suspend+0x12b/0x640
       pm_runtime_work+0x6f/0xb0
       process_one_work+0x14b/0x440
       worker_thread+0x48/0x4a0
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=94147
    Fixes: 10ebc0bc0934 ("drm/radeon: add runtime PM support (v2)")
    Cc: stable@vger.kernel.org # v3.13+: 27d4ee03078a: workqueue: Allow retrieval of current task's work struct
    Cc: stable@vger.kernel.org # v3.13+: 25c058ccaf2e: drm: Allow determining if current task is output poll worker
    Cc: Ismo Toijala <ismo.toijala@gmail.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/64ea02c44f91dda19bc563902b97bbc699040392.1518338789.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c13b37c887db3531970f31955d6b0445061995a
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    drm/nouveau: Fix deadlock on runtime suspend
    
    commit d61a5c1063515e855bedb1b81e20e50b0ac3541e upstream.
    
    nouveau's ->runtime_suspend hook calls drm_kms_helper_poll_disable(),
    which waits for the output poll worker to finish if it's running.
    
    The output poll worker meanwhile calls pm_runtime_get_sync() in
    nouveau_connector_detect() which waits for the ongoing suspend to finish,
    causing a deadlock.
    
    Fix by not acquiring a runtime PM ref if nouveau_connector_detect() is
    called in the output poll worker's context.  This is safe because
    the poll worker is only enabled while runtime active and we know that
    ->runtime_suspend waits for it to finish.
    
    Other contexts calling nouveau_connector_detect() do require a runtime
    PM ref, these comprise:
    
      status_store() drm sysfs interface
      ->fill_modes drm callback
      drm_fb_helper_probe_connector_modes()
      drm_mode_getconnector()
      nouveau_connector_hotplug()
      nouveau_display_hpd_work()
      nv17_tv_set_property()
    
    Stack trace for posterity:
    
      INFO: task kworker/0:1:58 blocked for more than 120 seconds.
      Workqueue: events output_poll_execute [drm_kms_helper]
      Call Trace:
       schedule+0x28/0x80
       rpm_resume+0x107/0x6e0
       __pm_runtime_resume+0x47/0x70
       nouveau_connector_detect+0x7e/0x4a0 [nouveau]
       nouveau_connector_detect_lvds+0x132/0x180 [nouveau]
       drm_helper_probe_detect_ctx+0x85/0xd0 [drm_kms_helper]
       output_poll_execute+0x11e/0x1c0 [drm_kms_helper]
       process_one_work+0x184/0x380
       worker_thread+0x2e/0x390
    
      INFO: task kworker/0:2:252 blocked for more than 120 seconds.
      Workqueue: pm pm_runtime_work
      Call Trace:
       schedule+0x28/0x80
       schedule_timeout+0x1e3/0x370
       wait_for_completion+0x123/0x190
       flush_work+0x142/0x1c0
       nouveau_pmops_runtime_suspend+0x7e/0xd0 [nouveau]
       pci_pm_runtime_suspend+0x5c/0x180
       vga_switcheroo_runtime_suspend+0x1e/0xa0
       __rpm_callback+0xc1/0x200
       rpm_callback+0x1f/0x70
       rpm_suspend+0x13c/0x640
       pm_runtime_work+0x6e/0x90
       process_one_work+0x184/0x380
       worker_thread+0x2e/0x390
    
    Bugzilla: https://bugs.archlinux.org/task/53497
    Bugzilla: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=870523
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=70388#c33
    Fixes: 5addcf0a5f0f ("nouveau: add runtime PM support (v0.9)")
    Cc: stable@vger.kernel.org # v3.12+: 27d4ee03078a: workqueue: Allow retrieval of current task's work struct
    Cc: stable@vger.kernel.org # v3.12+: 25c058ccaf2e: drm: Allow determining if current task is output poll worker
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/b7d2cbb609a80f59ccabfdf479b9d5907c603ea1.1518338789.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c261d5a4e5bfa0666f72fa1dfa99f80ea18c46f4
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Feb 14 06:41:25 2018 +0100

    drm: Allow determining if current task is output poll worker
    
    commit 25c058ccaf2ebbc3e250ec1e199e161f91fe27d4 upstream.
    
    Introduce a helper to determine if the current task is an output poll
    worker.
    
    This allows us to fix a long-standing deadlock in several DRM drivers
    wherein the ->runtime_suspend callback waits for the output poll worker
    to finish and the worker in turn calls a ->detect callback which waits
    for runtime suspend to finish.  The ->detect callback is invoked from
    multiple call sites and waiting for runtime suspend to finish is the
    correct thing to do except if it's executing in the context of the
    worker.
    
    v2: Expand kerneldoc to specifically mention deadlock between
        output poll worker and autosuspend worker as use case. (Lyude)
    
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/3549ce32e7f1467102e70d3e9cbf70c46bfe108e.1518593424.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 363e3fd5fa49dd429a6f4473da0fa0fa3cbfdbb5
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Feb 11 10:38:28 2018 +0100

    workqueue: Allow retrieval of current task's work struct
    
    commit 27d4ee03078aba88c5e07dcc4917e8d01d046f38 upstream.
    
    Introduce a helper to retrieve the current task's work struct if it is
    a workqueue worker.
    
    This allows us to fix a long-standing deadlock in several DRM drivers
    wherein the ->runtime_suspend callback waits for a specific worker to
    finish and that worker in turn calls a function which waits for runtime
    suspend to finish.  That function is invoked from multiple call sites
    and waiting for runtime suspend to finish is the correct thing to do
    except if it's executing in the context of the worker.
    
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/2d8f603074131eb87e588d2b803a71765bd3a2fd.1518338788.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0547d11350811a664352d2917d48768598d41921
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Tue Jan 16 16:53:24 2018 +0100

    drm/i915: Always call to intel_display_set_init_power() in resume_early.
    
    commit d13a8479f3584613b6aacbb793eae64578b8f69a upstream.
    
    intel_power_domains_init_hw() calls set_init_power, but when using
    runtime power management this call is skipped. This prevents hw readout
    from taking place.
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=104172
    Link: https://patchwork.freedesktop.org/patch/msgid/20180116155324.75120-1-maarten.lankhorst@linux.intel.com
    Fixes: bc87229f323e ("drm/i915/skl: enable PC9/10 power states during suspend-to-idle")
    Cc: Nivedita Swaminathan <nivedita.swaminathan@intel.com>
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: Patrik Jakobsson <patrik.jakobsson@linux.intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: <stable@vger.kernel.org> # v4.5+
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    (cherry picked from commit ac25dfed15d470d7f23dd817e965b54aa3f94a1e)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07b7495465219afadb447b4d21c0af26d67a2edb
Author: himanshu.madhani@cavium.com <himanshu.madhani@cavium.com>
Date:   Mon Feb 12 10:28:14 2018 -0800

    scsi: qla2xxx: Fix NULL pointer crash due to active timer for ABTS
    
    commit 1514839b366417934e2f1328edb50ed1e8a719f5 upstream.
    
    This patch fixes NULL pointer crash due to active timer running for abort
    IOCB.
    
    From crash dump analysis it was discoverd that get_next_timer_interrupt()
    encountered a corrupted entry on the timer list.
    
     #9 [ffff95e1f6f0fd40] page_fault at ffffffff914fe8f8
        [exception RIP: get_next_timer_interrupt+440]
        RIP: ffffffff90ea3088  RSP: ffff95e1f6f0fdf0  RFLAGS: 00010013
        RAX: ffff95e1f6451028  RBX: 000218e2389e5f40  RCX: 00000001232ad600
        RDX: 0000000000000001  RSI: ffff95e1f6f0fdf0  RDI: 0000000001232ad6
        RBP: ffff95e1f6f0fe40   R8: ffff95e1f6451188   R9: 0000000000000001
        R10: 0000000000000016  R11: 0000000000000016  R12: 00000001232ad5f6
        R13: ffff95e1f6450000  R14: ffff95e1f6f0fdf8  R15: ffff95e1f6f0fe10
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
    
    Looking at the assembly of get_next_timer_interrupt(), address came
    from %r8 (ffff95e1f6451188) which is pointing to list_head with single
    entry at ffff95e5ff621178.
    
     0xffffffff90ea307a <get_next_timer_interrupt+426>:      mov    (%r8),%rdx
     0xffffffff90ea307d <get_next_timer_interrupt+429>:      cmp    %r8,%rdx
     0xffffffff90ea3080 <get_next_timer_interrupt+432>:      je     0xffffffff90ea30a7 <get_next_timer_interrupt+471>
     0xffffffff90ea3082 <get_next_timer_interrupt+434>:      nopw   0x0(%rax,%rax,1)
     0xffffffff90ea3088 <get_next_timer_interrupt+440>:      testb  $0x1,0x18(%rdx)
    
     crash> rd ffff95e1f6451188 10
     ffff95e1f6451188:  ffff95e5ff621178 ffff95e5ff621178   x.b.....x.b.....
     ffff95e1f6451198:  ffff95e1f6451198 ffff95e1f6451198   ..E.......E.....
     ffff95e1f64511a8:  ffff95e1f64511a8 ffff95e1f64511a8   ..E.......E.....
     ffff95e1f64511b8:  ffff95e77cf509a0 ffff95e77cf509a0   ...|.......|....
     ffff95e1f64511c8:  ffff95e1f64511c8 ffff95e1f64511c8   ..E.......E.....
    
     crash> rd ffff95e5ff621178 10
     ffff95e5ff621178:  0000000000000001 ffff95e15936aa00   ..........6Y....
     ffff95e5ff621188:  0000000000000000 00000000ffffffff   ................
     ffff95e5ff621198:  00000000000000a0 0000000000000010   ................
     ffff95e5ff6211a8:  ffff95e5ff621198 000000000000000c   ..b.............
     ffff95e5ff6211b8:  00000f5800000000 ffff95e751f8d720   ....X... ..Q....
    
     ffff95e5ff621178 belongs to freed mempool object at ffff95e5ff621080.
    
     CACHE            NAME                 OBJSIZE  ALLOCATED     TOTAL  SLABS  SSIZE
     ffff95dc7fd74d00 mnt_cache                384      19785     24948    594    16k
       SLAB              MEMORY            NODE  TOTAL  ALLOCATED  FREE
       ffffdc5dabfd8800  ffff95e5ff620000     1     42         29    13
       FREE / [ALLOCATED]
        ffff95e5ff621080  (cpu 6 cache)
    
    Examining the contents of that memory reveals a pointer to a constant string
    in the driver, "abort\0", which is set by qla24xx_async_abort_cmd().
    
     crash> rd ffffffffc059277c 20
     ffffffffc059277c:  6e490074726f6261 0074707572726574   abort.Interrupt.
     ffffffffc059278c:  00676e696c6c6f50 6920726576697244   Polling.Driver i
     ffffffffc059279c:  646f6d207325206e 6974736554000a65   n %s mode..Testi
     ffffffffc05927ac:  636976656420676e 786c252074612065   ng device at %lx
     ffffffffc05927bc:  6b63656843000a2e 646f727020676e69   ...Checking prod
     ffffffffc05927cc:  6f20444920746375 0a2e706968632066   uct ID of chip..
     ffffffffc05927dc:  5120646e756f4600 204130303232414c   .Found QLA2200A
     ffffffffc05927ec:  43000a2e70696843 20676e696b636568   Chip...Checking
     ffffffffc05927fc:  65786f626c69616d 6c636e69000a2e73   mailboxes...incl
     ffffffffc059280c:  756e696c2f656475 616d2d616d642f78   ude/linux/dma-ma
    
     crash> struct -ox srb_iocb
     struct srb_iocb {
               union {
                   struct {...} logio;
                   struct {...} els_logo;
                   struct {...} tmf;
                   struct {...} fxiocb;
                   struct {...} abt;
                   struct ct_arg ctarg;
                   struct {...} mbx;
                   struct {...} nack;
        [0x0 ] } u;
        [0xb8] struct timer_list timer;
        [0x108] void (*timeout)(void *);
     }
     SIZE: 0x110
    
     crash> ! bc
     ibase=16
     obase=10
     B8+40
     F8
    
    The object is a srb_t, and at offset 0xf8 within that structure
    (i.e. ffff95e5ff621080 + f8 -> ffff95e5ff621178) is a struct timer_list.
    
    Cc: <stable@vger.kernel.org> #4.4+
    Fixes: 4440e46d5db7 ("[SCSI] qla2xxx: Add IOCB Abort command asynchronous handling.")
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dbc3e4d8b281e7dcaf2063a94e67e7b5d1851a9
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Feb 22 11:30:20 2018 -0800

    scsi: core: Avoid that ATA error handling can trigger a kernel hang or oops
    
    commit 3be8828fc507cdafe7040a3dcf361a2bcd8e305b upstream.
    
    Avoid that the recently introduced call_rcu() call in the SCSI core
    triggers a double call_rcu() call.
    
    Reported-by: Natanael Copa <ncopa@alpinelinux.org>
    Reported-by: Damien Le Moal <damien.lemoal@wdc.com>
    References: https://bugzilla.kernel.org/show_bug.cgi?id=198861
    Fixes: 3bd6f43f5cb3 ("scsi: core: Ensure that the SCSI error handler gets woken up")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Tested-by: Damien Le Moal <damien.lemoal@wdc.com>
    Cc: Natanael Copa <ncopa@alpinelinux.org>
    Cc: Damien Le Moal <damien.lemoal@wdc.com>
    Cc: Alexandre Oliva <oliva@gnu.org>
    Cc: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e5033364e0d6fc8b9c19b5ffa63b9825a848624
Author: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
Date:   Thu Mar 1 11:06:13 2018 +0000

    drm/i915/perf: fix perf stream opening lock
    
    commit f616f2830c1ed79245cfeca900f7e8a3b3c08c06 upstream.
    
    We're seeing on CI that some contexts don't have the programmed OA
    period timer that directs the OA unit on how often to write reports.
    
    The issue is that we're not holding the drm lock from when we edit the
    context images down to when we set the exclusive_stream variable. This
    leaves a window for the deferred context allocation to call
    i915_oa_init_reg_state() that will not program the expected OA timer
    value, because we haven't set the exclusive_stream yet.
    
    v2: Drop need_lock from gen8_configure_all_contexts() (Matt)
    
    Signed-off-by: Lionel Landwerlin <lionel.g.landwerlin@intel.com>
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Fixes: 701f8231a2f ("drm/i915/perf: prune OA configs")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=102254
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103715
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=103755
    Link: https://patchwork.freedesktop.org/patch/msgid/20180301110613.1737-1-lionel.g.landwerlin@intel.com
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: <stable@vger.kernel.org> # v4.14+
    (cherry picked from commit 41d3fdcd15d5ecf29cc73e8b79c2327ebb54b960)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c16a67695cd684d08d546de370e9834bef628dae
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Sun Dec 31 23:34:54 2017 +0100

    drm/i915: Try EDID bitbanging on HDMI after failed read
    
    commit 90024a5951029685acc5396258f1b0de9b23cf4a upstream.
    
    The ACK/NACK implementation as found in e.g. the G965 has the falling
    clock edge and the release of the data line after the ACK for the received
    byte happen at the same time.
    
    This is conformant with the I2C specification, which allows a zero hold
    time, see footnote [3]: "A device must internally provide a hold time of
    at least 300 ns for the SDA signal (with respect to the V IH(min) of the
    SCL signal) to bridge the undefined region of the falling edge of SCL."
    
    Some HDMI-to-VGA converters apparently fail to adhere to this requirement
    and latch SDA at the falling clock edge, so instead of an ACK
    sometimes a NACK is read and the slave (i.e. the EDID ROM) ends the
    transfer.
    
    The bitbanging releases the data line for the ACK only 1/4 bit time after
    the falling clock edge, so a slave will see the correct value no matter
    if it samples at the rising or the falling clock edge or in the center.
    
    Fallback to bitbanging is already done for the CRT connector.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=92685
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/a39f080b-81a5-4c93-b3f7-7cb0a58daca3@rwthex-w2-a.rwth-ad.de
    (cherry picked from commit cfb926e148e99acc02351d72e8b85e32b5f786ef)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3accc34d793b55bf8f3f03cf5efa6b64a89b70b
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Fri Nov 10 12:34:53 2017 +0100

    drm/i915: Update watermark state correctly in sanitize_watermarks
    
    commit 556fe36d09da5f82879e92bafa0371b4b79f7d6f upstream.
    
    We no longer use intel_crtc->wm.active for watermarks any more,
    which was incorrect. But this uncovered a bug in sanitize_watermarks(),
    which meant that we wrote the correct watermarks, but the next
    update would still use the wrong hw watermarks for calculating.
    This caused all further updates to fail with -EINVAL and the
    log would reveal an error like the one below:
    
    [   10.043902] [drm:ilk_validate_wm_level.part.8 [i915]] Sprite WM0 too large 56 (max 0)
    [   10.043960] [drm:ilk_validate_pipe_wm [i915]] LP0 watermark invalid
    [   10.044030] [drm:intel_crtc_atomic_check [i915]] No valid intermediate pipe watermarks are possible
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Fixes: b6b178a77210 ("drm/i915: Calculate ironlake intermediate watermarks correctly, v2.")
    Cc: stable@vger.kernel.org #v4.8+
    Link: https://patchwork.freedesktop.org/patch/msgid/20171110113503.16253-1-maarten.lankhorst@linux.intel.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b3f881e41c5d38329a934269679e40f88b22604
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Dec 8 23:37:36 2017 +0200

    drm/i915: Disable DC states around GMBUS on GLK
    
    commit 156961ae7bdf6feb72778e8da83d321b273343fd upstream.
    
    Prevent the DMC from destroying GMBUS transfers on GLK. GMBUS
    lives in PG1 so DC off is all we need.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171208213739.16388-1-ville.syrjala@linux.intel.com
    Reviewed-by: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 492056f2944e12ee2eda1cfeccc84996ca51813f
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Feb 19 14:01:44 2018 +0000

    drm/i915: Clear the in-use marker on execbuf failure
    
    commit e659d14ed48096f87a678e7ebbdf286a817b4d0e upstream.
    
    If we fail to unbind the vma (due to a signal on an active buffer that
    needs to be moved for the next execbuf), then we need to clear the
    persistent tracking state we setup for this execbuf.
    
    Fixes: c7c6e46f913b ("drm/i915: Convert execbuf to use struct-of-array packing for critical fields")
    Testcase: igt/gem_fenced_exec_thrash/no-spare-fences-busy*
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v4.14+
    Reviewed-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180219140144.24004-1-chris@chris-wilson.co.uk
    (cherry picked from commit ed2f3532321083cf40e4da4e36234880e0136136)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f306b12928b993b8f76c8168cedb6ffc631cef21
Author: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
Date:   Wed Feb 14 11:18:25 2018 -0800

    drm/i915: Fix rsvd2 mask when out-fence is returned
    
    commit b1b13780ab06ef8c770dd9cbe31dac549a11630e upstream.
    
    GENMASK_ULL wants the high bit of the mask first. The current value
    cancels the in-fence when an out-fence is returned.
    
    Fixes: fec0445caa273 ("drm/i915: Support explicit fencing for execbuf")
    Testcase: igt/gem_exec_fence/keep-in-fence*
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Daniele Ceraolo Spurio <daniele.ceraolospurio@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180214191827.8465-1-daniele.ceraolospurio@intel.com
    Cc: <stable@vger.kernel.org> # v4.12+
    (cherry picked from commit b6a88e4a804cf5a71159906e16df2c1fc7196f92)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b26a307391ffb60197ef58e739fe28a666b6a72
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Thu Feb 8 14:43:05 2018 +0100

    regulator: stm32-vrefbuf: fix check on ready flag
    
    commit f63248fac563125fd5a2f0bc780ce7a299872cab upstream.
    
    stm32_vrefbuf_enable() wrongly checks VRR bit: 0 stands for not ready,
    1 for ready. It currently checks the opposite.
    This makes enable routine to exit immediately without waiting for ready
    flag.
    
    Fixes: 0cdbf481e927 ("regulator: Add support for stm32-vrefbuf")
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bba05fb6a13b355012bdca57dd0ae8218e6c51ee
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Feb 28 12:44:09 2018 +0100

    net/smc: fix NULL pointer dereference on sock_create_kern() error path
    
    commit a5dcb73b96a9d21431048bdaac02d9e96f386da3 upstream.
    
    when sock_create_kern(..., a) returns an error, 'a' might not be a valid
    pointer, so it shouldn't be dereferenced to read a->sk->sk_sndbuf and
    and a->sk->sk_rcvbuf; not doing that caused the following crash:
    
    general protection fault: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 0 PID: 4254 Comm: syzkaller919713 Not tainted 4.16.0-rc1+ #18
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:smc_create+0x14e/0x300 net/smc/af_smc.c:1410
    RSP: 0018:ffff8801b06afbc8 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: ffff8801b63457c0 RCX: ffffffff85a3e746
    RDX: 0000000000000004 RSI: 00000000ffffffff RDI: 0000000000000020
    RBP: ffff8801b06afbf0 R08: 00000000000007c0 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: ffff8801b6345c08 R14: 00000000ffffffe9 R15: ffffffff8695ced0
    FS:  0000000001afb880(0000) GS:ffff8801db200000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020000040 CR3: 00000001b0721004 CR4: 00000000001606f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      __sock_create+0x4d4/0x850 net/socket.c:1285
      sock_create net/socket.c:1325 [inline]
      SYSC_socketpair net/socket.c:1409 [inline]
      SyS_socketpair+0x1c0/0x6f0 net/socket.c:1366
      do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x26/0x9b
    RIP: 0033:0x4404b9
    RSP: 002b:00007fff44ab6908 EFLAGS: 00000246 ORIG_RAX: 0000000000000035
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00000000004404b9
    RDX: 0000000000000000 RSI: 0000000000000001 RDI: 000000000000002b
    RBP: 00007fff44ab6910 R08: 0000000000000002 R09: 00007fff44003031
    R10: 0000000020000040 R11: 0000000000000246 R12: ffffffffffffffff
    R13: 0000000000000006 R14: 0000000000000000 R15: 0000000000000000
    Code: 48 c1 ea 03 80 3c 02 00 0f 85 b3 01 00 00 4c 8b a3 48 04 00 00 48
    b8
    00 00 00 00 00 fc ff df 49 8d 7c 24 20 48 89 fa 48 c1 ea 03 <80> 3c 02
    00
    0f 85 82 01 00 00 4d 8b 7c 24 20 48 b8 00 00 00 00
    RIP: smc_create+0x14e/0x300 net/smc/af_smc.c:1410 RSP: ffff8801b06afbc8
    
    Fixes: cd6851f30386 smc: remote memory buffers (RMBs)
    Reported-and-tested-by: syzbot+aa0227369be2dcc26ebe@syzkaller.appspotmail.com
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: Ursula Braun <ubraun@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0486b303556ebbd03365eae88f4bb7cf1d789f6
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Feb 13 12:18:38 2018 +0200

    IB/uverbs: Improve lockdep_check
    
    commit 104f268d439b3c21c83708e52946a4d8d37f3d0f upstream.
    
    This is really being used as an assert that the expected usecnt
    is being held and implicitly that the usecnt is valid. Rename it to
    assert_uverbs_usecnt and tighten the checks to only accept valid
    values of usecnt (eg 0 and < -1 are invalid).
    
    The tigher checkes make the assertion cover more cases and is more
    likely to find bugs via syzkaller/etc.
    
    Fixes: 3832125624b7 ("IB/core: Add support for idr types")
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbfed071633c27242eba0fe710d396168fd2dba7
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 15:29:09 2018 +0200

    RDMA/mlx5: Fix integer overflow while resizing CQ
    
    commit 28e9091e3119933c38933cb8fc48d5618eb784c8 upstream.
    
    The user can provide very large cqe_size which will cause to integer
    overflow as it can be seen in the following UBSAN warning:
    
    =======================================================================
    UBSAN: Undefined behaviour in drivers/infiniband/hw/mlx5/cq.c:1192:53
    signed integer overflow:
    64870 * 65536 cannot be represented in type 'int'
    CPU: 0 PID: 267 Comm: syzkaller605279 Not tainted 4.15.0+ #90 Hardware
    name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.7.5-0-ge51488c-20140602_164612-nilsson.home.kraxel.org 04/01/2014
    Call Trace:
     dump_stack+0xde/0x164
     ? dma_virt_map_sg+0x22c/0x22c
     ubsan_epilogue+0xe/0x81
     handle_overflow+0x1f3/0x251
     ? __ubsan_handle_negate_overflow+0x19b/0x19b
     ? lock_acquire+0x440/0x440
     mlx5_ib_resize_cq+0x17e7/0x1e40
     ? cyc2ns_read_end+0x10/0x10
     ? native_read_msr_safe+0x6c/0x9b
     ? cyc2ns_read_end+0x10/0x10
     ? mlx5_ib_modify_cq+0x220/0x220
     ? sched_clock_cpu+0x18/0x200
     ? lookup_get_idr_uobject+0x200/0x200
     ? rdma_lookup_get_uobject+0x145/0x2f0
     ib_uverbs_resize_cq+0x207/0x3e0
     ? ib_uverbs_ex_create_cq+0x250/0x250
     ib_uverbs_write+0x7f9/0xef0
     ? cyc2ns_read_end+0x10/0x10
     ? print_irqtrace_events+0x280/0x280
     ? ib_uverbs_ex_create_cq+0x250/0x250
     ? uverbs_devnode+0x110/0x110
     ? sched_clock_cpu+0x18/0x200
     ? do_raw_spin_trylock+0x100/0x100
     ? __lru_cache_add+0x16e/0x290
     __vfs_write+0x10d/0x700
     ? uverbs_devnode+0x110/0x110
     ? kernel_read+0x170/0x170
     ? sched_clock_cpu+0x18/0x200
     ? security_file_permission+0x93/0x260
     vfs_write+0x1b0/0x550
     SyS_write+0xc7/0x1a0
     ? SyS_read+0x1a0/0x1a0
     ? trace_hardirqs_on_thunk+0x1a/0x1c
     entry_SYSCALL_64_fastpath+0x1e/0x8b
    RIP: 0033:0x433549
    RSP: 002b:00007ffe63bd1ea8 EFLAGS: 00000217
    =======================================================================
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 3.13
    Fixes: bde51583f49b ("IB/mlx5: Add support for resize CQ")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01b8c0e360634f820137e8ff8621abb75ae7e688
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 18:49:16 2018 +0200

    RDMA/ucma: Check that user doesn't overflow QP state
    
    commit a5880b84430316e3e1c1f5d23aa32ec6000cc717 upstream.
    
    The QP state is limited and declared in enum ib_qp_state,
    but ucma user was able to supply any possible (u32) value.
    
    Reported-by: syzbot+0df1ab766f8924b1edba@syzkaller.appspotmail.com
    Fixes: 75216638572f ("RDMA/cma: Export rdma cm interface to userspace")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b2d784a39d450f27960d5f2b8d40c16ac014004
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Mar 7 14:49:09 2018 +0200

    RDMA/ucma: Limit possible option size
    
    commit 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c upstream.
    
    Users of ucma are supposed to provide size of option level,
    in most paths it is supposed to be equal to u8 or u16, but
    it is not the case for the IB path record, where it can be
    multiple of struct ib_path_rec_data.
    
    This patch takes simplest possible approach and prevents providing
    values more than possible to allocate.
    
    Reported-by: syzbot+a38b0e9f694c379ca7ce@syzkaller.appspotmail.com
    Fixes: 7ce86409adcd ("RDMA/ucma: Allow user space to set service type")
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b7574e9b2095b191713dabe28d7b9291cdf6257
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Mar 7 15:22:31 2018 -0500

    NFS: Fix unstable write completion
    
    commit c4f24df942a181699c5bab01b8e5e82b925f77f3 upstream.
    
    We do want to respect the FLUSH_SYNC argument to nfs_commit_inode() to
    ensure that all outstanding COMMIT requests to the inode in question are
    complete. Currently we may exit early from both nfs_commit_inode() and
    nfs_write_inode() even if there are COMMIT requests in flight, or unstable
    writes on the commit list.
    
    In order to get the right semantics w.r.t. sync_inode(), we don't need
    to have nfs_commit_inode() reset the inode dirty flags when called from
    nfs_wb_page() and/or nfs_wb_all(). We just need to ensure that
    nfs_write_inode() leaves them in the right state if there are outstanding
    commits, or stable pages.
    
    Reported-by: Scott Mayhew <smayhew@redhat.com>
    Fixes: dc4fd9ab01ab ("nfs: don't wait on commit in nfs_commit_inode()...")
    Cc: stable@vger.kernel.org # v4.14+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e131a6d68cd5271c72ef36ad539509d3863f78cb
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Mar 7 14:49:06 2018 -0500

    pNFS: Prevent the layout header refcount going to zero in pnfs_roc()
    
    commit 9c6376ebddad585da4238532dd6d90ae23ffee67 upstream.
    
    Ensure that we hold a reference to the layout header when processing
    the pNFS return-on-close so that the refcount value does not inadvertently
    go to zero.
    
    Reported-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Cc: stable@vger.kernel.org # v4.10+
    Tested-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bca2c58d83bd8eb38ff2c125d15eaceb8a36d54
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Tue Mar 6 12:47:08 2018 -0500

    NFS: Fix an incorrect type in struct nfs_direct_req
    
    commit d9ee65539d3eabd9ade46cca1780e3309ad0f907 upstream.
    
    The start offset needs to be of type loff_t.
    
    Fixed: 5fadeb47dcc5c ("nfs: count DIO good bytes correctly with mirroring")
    Cc: stable@vger.kernel.org # v4.0+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29060ff7c1ed11f387d0ab843f3e21a105785f3d
Author: himanshu.madhani@cavium.com <himanshu.madhani@cavium.com>
Date:   Mon Dec 4 14:45:16 2017 -0800

    scsi: qla2xxx: Fix memory leak in dual/target mode
    
    commit 7867b98dceb7741065c9c1b645136facad5c2e93 upstream.
    
    When driver is loaded in Target/Dual mode, it creates QPair to support
    MQ and allocates resources for each QPair. This Qpair initialization is
    delayed until the FW personality is changed to Dual/Target mode by
    issuing chip reset. At the time of chip reset firmware is re-initilized
    in correct personality all the QPairs are initialized by sending
    MBC_INITIALIZE_MULTIQ (001Fh).
    
    This patch fixes memory leak by adding check to issue
    MBC_INITIALIZE_MULTIQ command only while deleting rsp/req queue when the
    flag is set for initiator mode, and clean up QPair resources correctly
    during the driver unload. This MBX does not need to be issued for
    Target/Dual mode because chip reset will reset ISP.
    
    Fixes: d65237c7f0860 ("scsi: qla2xxx: Fix mailbox failure while deleting Queue pairs")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0393270e9e58efca06378505dbd13ee160481d2f
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:15 2017 -0800

    scsi: qla2xxx: Fix system crash in qlt_plogi_ack_unref
    
    commit 19759033e0d0beed70421ab9258f5ede79e070ae upstream.
    
    Fix system crash due to NULL pointer access.
    
    qlt_plogi_ack_t and fc_port structures were not properly bound before
    calling qlt_plogi_ack_unref().
    
    RIP: 0010:qlt_plogi_ack_unref+0xa1/0x150 [qla2xxx]
    Call Trace:
    qla24xx_create_new_sess+0xb1/0x320 [qla2xxx]
    qla2x00_do_work+0x123/0x260 [qla2xxx]
    qla2x00_iocb_work_fn+0x30/0x40 [qla2xxx]
    process_one_work+0x1f3/0x530
    worker_thread+0x4e/0x480
    kthread+0x10c/0x140
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Giridhar Malavali <giridhar.malavali@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e62c1051a4fd1eb40bb3109084364e531a693cc0
Author: Giridhar Malavali <giridhar.malavali@cavium.com>
Date:   Mon Dec 4 14:45:14 2017 -0800

    scsi: qla2xxx: Remove aborting ELS IOCB call issued as part of timeout.
    
    commit bf07ef86e882013522876f7c834c8eea085f35b4 upstream.
    
    This fix the spinlock recursion issue seen while unloading the driver.
    
    14 [ffff9f2e21e03db8] native_queued_spin_lock_slowpath at ffffffffad0d8802
    15 [ffff9f2e21e03dc0] do_raw_spin_lock at ffffffffad0d99e4
    16 [ffff9f2e21e03dd8] _raw_spin_lock_irqsave at ffffffffad652471
    17 [ffff9f2e21e03e00] qla2x00_els_dcmd_iocb_timeout at ffffffffc070cd63
    18 [ffff9f2e21e03e40] qla2x00_sp_timeout at ffffffffc06f06d3 [qla2xxx]
    19 [ffff9f2e21e03e68] call_timer_fn at ffffffffad0f97d8
    20 [ffff9f2e21e03ed8] run_timer_softirq at ffffffffad0faf47
    21 [ffff9f2e21e03f68] __softirqentry_text_start at ffffffffad655f32
    
    Fixes: 6eb54715b54bb ("qla2xxx: Added interface to send explicit LOGO.")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Giridhar Malavali <giridhar.malavali@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ff7098d906528615c14f82f4a677f60972e2ca
Author: Giridhar Malavali <giridhar.malavali@cavium.com>
Date:   Mon Dec 4 14:45:13 2017 -0800

    scsi: qla2xxx: Defer processing of GS IOCB calls
    
    commit 5d3300a9b8b122b4743aed5a178bf12c87e2b8c9 upstream.
    
    This patch defers processing of GS IOCB calls from interrupt context to
    avoid hardware spinlock recursion.
    
    Following stack trace is seen
    
    ? mod_timer+0x193/0x330
    ? ql_dbg+0xa7/0xf0 [qla2xxx]
    _raw_spin_lock_irqsave+0x31/0x40
    qla2x00_start_sp+0x3b/0x250 [qla2xxx]
    qla24xx_async_gnl+0x1d3/0x240 [qla2xxx]
    qla24xx_fcport_handle_login+0x285/0x290 [qla2xxx]
    ? vprintk_func+0x20/0x50
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Giridhar Malavali <giridhar.malavali@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bc43df12141ac1ca9f440cf106e6a93a6f5ad4d
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:12 2017 -0800

    scsi: qla2xxx: Clear loop id after delete
    
    commit ba743f9148e951abe1c94f89c174ec8e44fb145b upstream.
    
    Clear loop id after delete to prevent session invalidation of stale
    session.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21e4e9c6d8abfdcbe6d347fd0c8198fbbd5d2fa9
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:11 2017 -0800

    scsi: qla2xxx: Fix scan state field for fcport
    
    commit 76f9a2dd4c60183879a1898bcd56a1dbab19a85d upstream.
    
    Add correct value of scan_state field indicating state of the FC port
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b42928ca54c2ab5e6f7daa21e570e12dd3065ed
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:10 2017 -0800

    scsi: qla2xxx: Replace fcport alloc with qla2x00_alloc_fcport
    
    commit 063b36d6b0ad74c748d536f5cb47bac2f850a0fa upstream.
    
    Current code manually allocate an fcport structure that is not properly
    initialize. Replace kzalloc with qla2x00_alloc_fcport, so that all
    fields are initialized.  Also set set scan flag to port found
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11739154e650aec048e95a86bf2ab58e91473fdb
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:09 2017 -0800

    scsi: qla2xxx: Fix abort command deadlock due to spinlock
    
    commit b0dcce746b32ac573343ad39cb3dc485030de95e upstream.
    
    Original code acquires hardware_lock to add Abort IOCB onto driver
    request queue for processing. However, abort_command() will also acquire
    hardware lock to look up sp pointer before issuing abort IOCB command
    resulting into a deadlock. This patch safely removes the possible
    deadlock scenario by removing extra spinlock.
    
    Fixes: 6eb54715b54bb ("qla2xxx: Added interface to send explicit LOGO.")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4929c452336c87863b134fac4683b6714304c7a7
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:08 2017 -0800

    scsi: qla2xxx: Fix PRLI state check
    
    commit 23c645595dab7b414f23639d0a428a07515807df upstream.
    
    Get Port Database MBX cmd is to validate current Login state upon PRLI
    completion. Current code looks at the last login state for re-validation
    which was incorrect. This patch removed incorrect state check.
    
    Fixes: 15f30a5752287 ("qla2xxx: Use IOCB interface to submit non-critical MBX.")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f92ec32f33baff10f61c2f0dc277aa6ad350ea99
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:06 2017 -0800

    scsi: qla2xxx: Fix Relogin being triggered too fast
    
    commit 4005a995668b8fd58f4cf1460dd4cf63efa18363 upstream.
    
    Current driver design schedules relogin process via DPC thread every 1
    second. In a large fabric, this DPC thread tries to schedule too many
    jobs and might get overloaded. As a result of this processing of DPC
    thread, it can schedule relogin earlier than 1 second.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1411448e0a1b96955f64478fc3f04d0ff1edc704
Author: Sawan Chandak <sawan.chandak@cavium.com>
Date:   Mon Dec 4 14:45:04 2017 -0800

    scsi: qla2xxx: Fix NPIV host cleanup in target mode
    
    commit 3be63b1e1838e35ce93e83f19573e949f4b389b4 upstream.
    
    Add check to make sure we are cleaning up global target host list only
    for NPIV hosts
    
    Fixes: bdbe24de281e2 ("scsi: qla2xxx: Cleanup NPIV host in target mode during config teardown")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Sawan Chandak <sawan.chandak@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4274e4a3bee9ea7010f411b6b6ae37cfcdcca7c4
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:03 2017 -0800

    scsi: qla2xxx: Fix login state machine stuck at GPDB
    
    commit 414d9ff3f8039f85d23f619dcbbd1ba2628a1a67 upstream.
    
    This patch returns discovery state machine back to Login Complete.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 585f4ebd9e66a4fc78dd9893529ed9cb4759063f
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:02 2017 -0800

    scsi: qla2xxx: Serialize GPNID for multiple RSCN
    
    commit 2d73ac6102d943c4be4945735a338005359c6abc upstream.
    
    GPNID is triggered by RSCN. For multiple RSCNs of the same affected
    NPORT ID, serialize the GPNID to prevent confusion.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6d50e89f119cc3717cfe01346a9f73f3a5f996a
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:01 2017 -0800

    scsi: qla2xxx: Retry switch command on time out
    
    commit 25ad76b703d9ad536f3411b15b1070aeb059ab55 upstream.
    
    Retry GID_PN & GPN_ID switch commands for time out case.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e6cbe51afee2058109b86232755f5f68179e2c7
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:45:00 2017 -0800

    scsi: qla2xxx: Fix re-login for Nport Handle in use
    
    commit a084fd68e1d26174c4cc1a13fbb0112f468ff7f4 upstream.
    
    When NPort Handle is in use, driver needs to mark the handle as used and
    pick another. Instead, the code clears the handle and re-pick the same
    handle.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fae72a2710013541910020c553db414d031282f6
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:44:59 2017 -0800

    scsi: qla2xxx: Skip IRQ affinity for Target QPairs
    
    commit d68b850e1bfb9afb24b888a946165a186a710195 upstream.
    
    Fix co-existence between Block MQ and Target Mode. Block MQ and
    initiator mode requires midlayer queue mapping to check for IRQ to be
    affinitized. For target mode, it's not the case.
    
    Fixes: 09620eeb62c41 ("scsi: qla2xxx: Add debug knob for user control workload")
    Cc: <stable@vger.kernel.org> # 4.12+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cd1f76b293eb44f39c8d6663fc49f52c5f65aa6
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:44:58 2017 -0800

    scsi: qla2xxx: Move session delete to driver work queue
    
    commit a01c77d2cbc45ba527e884e5c30363a1200a4130 upstream.
    
    Move session delete from system work queue to driver's work queue for in
    time processing.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0be82d7801a230bb4a3dad5382c88ae9927aa5f
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:44:57 2017 -0800

    scsi: qla2xxx: Fix gpnid error processing
    
    commit 22e786ea47f8795c561e1a01b6a66bb2cae2fc20 upstream.
    
    Stop GPNID command from advancing if command has failed.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f58abb5bbd23dc77b9826a7cba0d099bf640a8d9
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Mon Dec 4 14:44:56 2017 -0800

    scsi: qla2xxx: Fix system crash for Notify ack timeout handling
    
    commit 2e01d0ba868ec1d4d55ddcba519339e072b0bf4d upstream.
    
    Fix NULL pointer crash due to missing timeout handling callback for
    Notify Ack IOCB.
    
    Fixes: 726b85487067d ("qla2xxx: Add framework for async fabric discovery")
    Cc: <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b6f41b7377ad4c6a17b860bb60f13d1b42cff7d
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Mon Dec 25 03:22:51 2017 +0100

    tpm: only attempt to disable the LPC CLKRUN if is already enabled
    
    commit 6c9f0ce0dffe64da2204f38b0fd90f3ae2a8903c upstream.
    
    Commit 5e572cab92f0 ("tpm: Enable CLKRUN protocol for Braswell systems")
    added logic in the TPM TIS driver to disable the Low Pin Count CLKRUN
    signal during TPM transactions.
    
    Unfortunately this breaks other devices that are attached to the LPC bus
    like for example PS/2 mouse and keyboards.
    
    One flaw with the logic is that it assumes that the CLKRUN is always
    enabled, and so it unconditionally enables it after a TPM transaction.
    
    But it could be that the CLKRUN# signal was already disabled in the LPC
    bus and so after the driver probes, CLKRUN_EN will remain enabled which
    may break other devices that are attached to the LPC bus but don't have
    support for the CLKRUN protocol.
    
    Fixes: 5e572cab92f0 ("tpm: Enable CLKRUN protocol for Braswell systems")
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Tested-by: James Ettle <james@ettle.org.uk>
    Tested-by: Jeffery Miller <jmiller@neverware.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30c3b70e8d839a926e29dc1db6ba9c1b4deac1d8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 2 11:38:54 2018 +0100

    tpm: remove unused variables
    
    commit 68021bf4734d15c9a9ed1c1072b9ebcfda3e39cc upstream.
    
    The CLKRUN fix caused a few harmless compile-time warnings:
    
    drivers/char/tpm/tpm_tis.c: In function 'tpm_tis_pnp_remove':
    drivers/char/tpm/tpm_tis.c:274:23: error: unused variable 'priv' [-Werror=unused-variable]
    drivers/char/tpm/tpm_tis.c: In function 'tpm_tis_plat_remove':
    drivers/char/tpm/tpm_tis.c:324:23: error: unused variable 'priv' [-Werror=unused-variable]
    
    This removes the variables that have now become unused.
    
    Fixes: 6d0866cbc2d3 ("tpm: Keep CLKRUN enabled throughout the duration of transmit_cmd()")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reviewed-by: James Morris <jmorris@namei.org>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ef7d99cc8972e67438518a7529a67a29cb40720
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Mon Dec 25 03:22:49 2017 +0100

    tpm: delete the TPM_TIS_CLK_ENABLE flag
    
    commit 764325add6c2ad1641199edde7b2995495fc2d7c upstream.
    
    This flag is only used to warn if CLKRUN_EN wasn't disabled on Braswell
    systems, but the only way this can happen is if the code is not correct.
    
    So it's an unnecessary check that just makes the code harder to read.
    
    Suggested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cea3381216a304e12dc21fb050e51bf62ed7a11
Author: Azhar Shaikh <azhar.shaikh@intel.com>
Date:   Fri Dec 22 12:13:44 2017 -0800

    tpm: Keep CLKRUN enabled throughout the duration of transmit_cmd()
    
    commit b3e958ce4c585bf666de249dc794971ebc62d2d3 upstream.
    
    Commit 5e572cab92f0bb5 ("tpm: Enable CLKRUN protocol for Braswell
    systems") disabled CLKRUN protocol during TPM transactions and re-enabled
    once the transaction is completed. But there were still some corner cases
    observed where, reading of TPM header failed for savestate command
    while going to suspend, which resulted in suspend failure.
    To fix this issue keep the CLKRUN protocol disabled for the entire
    duration of a single TPM command and not disabling and re-enabling
    again for every TPM transaction. For the other TPM accesses outside
    TPM command flow, add a higher level of disabling and re-enabling
    the CLKRUN protocol, instead of doing for every TPM transaction.
    
    Fixes: 5e572cab92f0bb5 ("tpm: Enable CLKRUN protocol for Braswell systems")
    Signed-off-by: Azhar Shaikh <azhar.shaikh@intel.com>
    Reviewed-by: Jarkko Sakkinen  <jarkko.sakkinen@linux.intel.com>
    Tested-by: Jarkko Sakkinen  <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen  <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1bb2393fcd005b13857a002d25d9a4ebc6a2398
Author: Azhar Shaikh <azhar.shaikh@intel.com>
Date:   Fri Dec 22 12:13:43 2017 -0800

    tpm_tis: Move ilb_base_addr to tpm_tis_data
    
    commit c382babccba2c82fe57f9e647f290fb7bf4d130d upstream.
    
    Move static variable ilb_base_addr to tpm_tis_data.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Azhar Shaikh <azhar.shaikh@intel.com>
    Reviewed-by: Jarkko Sakkinen  <jarkko.sakkinen@linux.intel.com>
    Tested-by: Jarkko Sakkinen  <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen  <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9131a1b3d9c8fc22c3c2f5115f06c7c4332860a4
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Feb 25 11:49:07 2018 -0800

    netfilter: use skb_to_full_sk in ip6_route_me_harder
    
    commit 7d98386d55a5afaa65de77e1e9197edeb8a42079 upstream.
    
    For some reason, Florian forgot to apply to ip6_route_me_harder
    the fix that went in commit 29e09229d9f2 ("netfilter: use
    skb_to_full_sk in ip_route_me_harder")
    
    Fixes: ca6fb0651883 ("tcp: attach SYNACK messages to request sockets instead of listener") 
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39f154faecc23e42190a41e6225060c39092d1f8
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 08:10:17 2018 +0100

    netfilter: ipv6: fix use-after-free Write in nf_nat_ipv6_manip_pkt
    
    commit b078556aecd791b0e5cb3a59f4c3a14273b52121 upstream.
    
    l4proto->manip_pkt() can cause reallocation of skb head so pointer
    to the ipv6 header must be reloaded.
    
    Reported-and-tested-by: <syzbot+10005f4292fc9cc89de7@syzkaller.appspotmail.com>
    Fixes: 58a317f1061c89 ("netfilter: ipv6: add IPv6 NAT support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d7e07003950dadd2f918effff584b0c98501189
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 03:01:45 2018 +0100

    netfilter: bridge: ebt_among: add missing match size checks
    
    commit c4585a2823edf4d1326da44d1524ecbfda26bb37 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    Therefore it must check that the size of the match structure
    provided from userspace is sane by making sure em->match_size
    is at least the minimum size of the expected structure.
    
    The module has such a check, but its only done after accessing
    a structure that might be out of bounds.
    
    tested with: ebtables -A INPUT ... \
    --among-dst fe:fe:fe:fe:fe:fe
    --among-dst fe:fe:fe:fe:fe:fe --among-src fe:fe:fe:fe:ff:f,fe:fe:fe:fe:fe:fb,fe:fe:fe:fe:fc:fd,fe:fe:fe:fe:fe:fd,fe:fe:fe:fe:fe:fe
    --among-src fe:fe:fe:fe:ff:f,fe:fe:fe:fe:fe:fa,fe:fe:fe:fe:fe:fd,fe:fe:fe:fe:fe:fe,fe:fe:fe:fe:fe:fe
    
    Reported-by: <syzbot+fe0b19af568972814355@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaa06bfba8eabd44ce952758046492eebc973bbe
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Feb 19 01:24:15 2018 +0100

    netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets
    
    commit b71812168571fa55e44cdd0254471331b9c4c4c6 upstream.
    
    We need to make sure the offsets are not out of range of the
    total size.
    Also check that they are in ascending order.
    
    The WARN_ON triggered by syzkaller (it sets panic_on_warn) is
    changed to also bail out, no point in continuing parsing.
    
    Briefly tested with simple ruleset of
    -A INPUT --limit 1/s' --log
    plus jump to custom chains using 32bit ebtables binary.
    
    Reported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c89e04e5c06e682d95a18f1d286636183fd585fc
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Feb 16 19:36:28 2018 -0800

    netfilter: IDLETIMER: be syzkaller friendly
    
    commit cfc2c740533368b96e2be5e0a4e8c3cace7d9814 upstream.
    
    We had one report from syzkaller [1]
    
    First issue is that INIT_WORK() should be done before mod_timer()
    or we risk timer being fired too soon, even with a 1 second timer.
    
    Second issue is that we need to reject too big info->timeout
    to avoid overflows in msecs_to_jiffies(info->timeout * 1000), or
    risk looping, if result after overflow is 0.
    
    [1]
    WARNING: CPU: 1 PID: 5129 at kernel/workqueue.c:1444 __queue_work+0xdf4/0x1230 kernel/workqueue.c:1444
    Kernel panic - not syncing: panic_on_warn set ...
    
    CPU: 1 PID: 5129 Comm: syzkaller159866 Not tainted 4.16.0-rc1+ #230
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     panic+0x1e4/0x41c kernel/panic.c:183
     __warn+0x1dc/0x200 kernel/panic.c:547
     report_bug+0x211/0x2d0 lib/bug.c:184
     fixup_bug.part.11+0x37/0x80 arch/x86/kernel/traps.c:178
     fixup_bug arch/x86/kernel/traps.c:247 [inline]
     do_error_trap+0x2d7/0x3e0 arch/x86/kernel/traps.c:296
     do_invalid_op+0x1b/0x20 arch/x86/kernel/traps.c:315
     invalid_op+0x22/0x40 arch/x86/entry/entry_64.S:988
    RIP: 0010:__queue_work+0xdf4/0x1230 kernel/workqueue.c:1444
    RSP: 0018:ffff8801db507538 EFLAGS: 00010006
    RAX: ffff8801aeb46080 RBX: ffff8801db530200 RCX: ffffffff81481404
    RDX: 0000000000000100 RSI: ffffffff86b42640 RDI: 0000000000000082
    RBP: ffff8801db507758 R08: 1ffff1003b6a0de5 R09: 000000000000000c
    R10: ffff8801db5073f0 R11: 0000000000000020 R12: 1ffff1003b6a0eb6
    R13: ffff8801b1067ae0 R14: 00000000000001f8 R15: dffffc0000000000
     queue_work_on+0x16a/0x1c0 kernel/workqueue.c:1488
     queue_work include/linux/workqueue.h:488 [inline]
     schedule_work include/linux/workqueue.h:546 [inline]
     idletimer_tg_expired+0x44/0x60 net/netfilter/xt_IDLETIMER.c:116
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:829
     </IRQ>
    RIP: 0010:arch_local_irq_restore arch/x86/include/asm/paravirt.h:777 [inline]
    RIP: 0010:__raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:160 [inline]
    RIP: 0010:_raw_spin_unlock_irqrestore+0x5e/0xba kernel/locking/spinlock.c:184
    RSP: 0018:ffff8801c20173c8 EFLAGS: 00000282 ORIG_RAX: ffffffffffffff12
    RAX: dffffc0000000000 RBX: 0000000000000282 RCX: 0000000000000006
    RDX: 1ffffffff0d592cd RSI: 1ffff10035d68d23 RDI: 0000000000000282
    RBP: ffff8801c20173d8 R08: 1ffff10038402e47 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff8820e5c8
    R13: ffff8801b1067ad8 R14: ffff8801aea7c268 R15: ffff8801aea7c278
     __debug_object_init+0x235/0x1040 lib/debugobjects.c:378
     debug_object_init+0x17/0x20 lib/debugobjects.c:391
     __init_work+0x2b/0x60 kernel/workqueue.c:506
     idletimer_tg_create net/netfilter/xt_IDLETIMER.c:152 [inline]
     idletimer_tg_checkentry+0x691/0xb00 net/netfilter/xt_IDLETIMER.c:213
     xt_check_target+0x22c/0x7d0 net/netfilter/x_tables.c:850
     check_target net/ipv6/netfilter/ip6_tables.c:533 [inline]
     find_check_entry.isra.7+0x935/0xcf0 net/ipv6/netfilter/ip6_tables.c:575
     translate_table+0xf52/0x1690 net/ipv6/netfilter/ip6_tables.c:744
     do_replace net/ipv6/netfilter/ip6_tables.c:1160 [inline]
     do_ip6t_set_ctl+0x370/0x5f0 net/ipv6/netfilter/ip6_tables.c:1686
     nf_sockopt net/netfilter/nf_sockopt.c:106 [inline]
     nf_setsockopt+0x67/0xc0 net/netfilter/nf_sockopt.c:115
     ipv6_setsockopt+0x10b/0x130 net/ipv6/ipv6_sockglue.c:927
     udpv6_setsockopt+0x45/0x80 net/ipv6/udp.c:1422
     sock_common_setsockopt+0x95/0xd0 net/core/sock.c:2976
     SYSC_setsockopt net/socket.c:1850 [inline]
     SyS_setsockopt+0x189/0x360 net/socket.c:1829
     do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
    
    Fixes: 0902b469bd25 ("netfilter: xtables: idletimer target implementation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53f94e6110aa47cfac198030ddb9585b9cd8bd3f
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed Feb 14 17:21:19 2018 +0100

    netfilter: nat: cope with negative port range
    
    commit db57ccf0f2f4624b4c4758379f8165277504fbd7 upstream.
    
    syzbot reported a division by 0 bug in the netfilter nat code:
    
    divide error: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 4168 Comm: syzkaller034710 Not tainted 4.16.0-rc1+ #309
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:nf_nat_l4proto_unique_tuple+0x291/0x530
    net/netfilter/nf_nat_proto_common.c:88
    RSP: 0018:ffff8801b2466778 EFLAGS: 00010246
    RAX: 000000000000f153 RBX: ffff8801b2466dd8 RCX: ffff8801b2466c7c
    RDX: 0000000000000000 RSI: ffff8801b2466c58 RDI: ffff8801db5293ac
    RBP: ffff8801b24667d8 R08: ffff8801b8ba6dc0 R09: ffffffff88af5900
    R10: ffff8801b24666f0 R11: 0000000000000000 R12: 000000002990f153
    R13: 0000000000000001 R14: 0000000000000000 R15: ffff8801b2466c7c
    FS:  00000000017e3880(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000208fdfe4 CR3: 00000001b5340002 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      dccp_unique_tuple+0x40/0x50 net/netfilter/nf_nat_proto_dccp.c:30
      get_unique_tuple+0xc28/0x1c10 net/netfilter/nf_nat_core.c:362
      nf_nat_setup_info+0x1c2/0xe00 net/netfilter/nf_nat_core.c:406
      nf_nat_redirect_ipv6+0x306/0x730 net/netfilter/nf_nat_redirect.c:124
      redirect_tg6+0x7f/0xb0 net/netfilter/xt_REDIRECT.c:34
      ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365
      ip6table_nat_do_chain+0x65/0x80 net/ipv6/netfilter/ip6table_nat.c:41
      nf_nat_ipv6_fn+0x594/0xa80 net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:302
      nf_nat_ipv6_local_fn+0x33/0x5d0
    net/ipv6/netfilter/nf_nat_l3proto_ipv6.c:407
      ip6table_nat_local_fn+0x2c/0x40 net/ipv6/netfilter/ip6table_nat.c:69
      nf_hook_entry_hookfn include/linux/netfilter.h:120 [inline]
      nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483
      nf_hook include/linux/netfilter.h:243 [inline]
      NF_HOOK include/linux/netfilter.h:286 [inline]
      ip6_xmit+0x10ec/0x2260 net/ipv6/ip6_output.c:277
      inet6_csk_xmit+0x2fc/0x580 net/ipv6/inet6_connection_sock.c:139
      dccp_transmit_skb+0x9ac/0x10f0 net/dccp/output.c:142
      dccp_connect+0x369/0x670 net/dccp/output.c:564
      dccp_v6_connect+0xe17/0x1bf0 net/dccp/ipv6.c:946
      __inet_stream_connect+0x2d4/0xf00 net/ipv4/af_inet.c:620
      inet_stream_connect+0x58/0xa0 net/ipv4/af_inet.c:684
      SYSC_connect+0x213/0x4a0 net/socket.c:1639
      SyS_connect+0x24/0x30 net/socket.c:1620
      do_syscall_64+0x282/0x940 arch/x86/entry/common.c:287
      entry_SYSCALL_64_after_hwframe+0x26/0x9b
    RIP: 0033:0x441c69
    RSP: 002b:00007ffe50cc0be8 EFLAGS: 00000217 ORIG_RAX: 000000000000002a
    RAX: ffffffffffffffda RBX: ffffffffffffffff RCX: 0000000000441c69
    RDX: 000000000000001c RSI: 00000000208fdfe4 RDI: 0000000000000003
    RBP: 00000000006cc018 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000538 R11: 0000000000000217 R12: 0000000000403590
    R13: 0000000000403620 R14: 0000000000000000 R15: 0000000000000000
    Code: 48 89 f0 83 e0 07 83 c0 01 38 d0 7c 08 84 d2 0f 85 46 02 00 00 48 8b
    45 c8 44 0f b7 20 e8 88 97 04 fd 31 d2 41 0f b7 c4 4c 89 f9 <41> f7 f6 48
    c1 e9 03 48 b8 00 00 00 00 00 fc ff df 0f b6 0c 01
    RIP: nf_nat_l4proto_unique_tuple+0x291/0x530
    net/netfilter/nf_nat_proto_common.c:88 RSP: ffff8801b2466778
    
    The problem is that currently we don't have any check on the
    configured port range. A port range == -1 triggers the bug, while
    other negative values may require a very long time to complete the
    following loop.
    
    This commit addresses the issue swapping the two ends on negative
    ranges. The check is performed in nf_nat_l4proto_unique_tuple() since
    the nft nat loads the port values from nft registers at runtime.
    
    v1 -> v2: use the correct 'Fixes' tag
    v2 -> v3: update commit message, drop unneeded READ_ONCE()
    
    Fixes: 5b1158e909ec ("[NETFILTER]: Add NAT support for nf_conntrack")
    Reported-by: syzbot+8012e198bd037f4871e5@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab737b02b2fdb02640bac85432ad7a4ebbba2e14
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Mon Feb 12 18:49:39 2018 +0100

    netfilter: x_tables: fix missing timer initialization in xt_LED
    
    commit 10414014bc085aac9f787a5890b33b5605fbcfc4 upstream.
    
    syzbot reported that xt_LED may try to use the ledinternal->timer
    without previously initializing it:
    
    ------------[ cut here ]------------
    kernel BUG at kernel/time/timer.c:958!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 1826 Comm: kworker/1:2 Not tainted 4.15.0+ #306
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Workqueue: ipv6_addrconf addrconf_dad_work
    RIP: 0010:__mod_timer kernel/time/timer.c:958 [inline]
    RIP: 0010:mod_timer+0x7d6/0x13c0 kernel/time/timer.c:1102
    RSP: 0018:ffff8801d24fe9f8 EFLAGS: 00010293
    RAX: ffff8801d25246c0 RBX: ffff8801aec6cb50 RCX: ffffffff816052c6
    RDX: 0000000000000000 RSI: 00000000fffbd14b RDI: ffff8801aec6cb68
    RBP: ffff8801d24fec98 R08: 0000000000000000 R09: 1ffff1003a49fd6c
    R10: ffff8801d24feb28 R11: 0000000000000005 R12: dffffc0000000000
    R13: ffff8801d24fec70 R14: 00000000fffbd14b R15: ffff8801af608f90
    FS:  0000000000000000(0000) GS:ffff8801db500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000206d6fd0 CR3: 0000000006a22001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      led_tg+0x1db/0x2e0 net/netfilter/xt_LED.c:75
      ip6t_do_table+0xc2a/0x1a30 net/ipv6/netfilter/ip6_tables.c:365
      ip6table_raw_hook+0x65/0x80 net/ipv6/netfilter/ip6table_raw.c:42
      nf_hook_entry_hookfn include/linux/netfilter.h:120 [inline]
      nf_hook_slow+0xba/0x1a0 net/netfilter/core.c:483
      nf_hook.constprop.27+0x3f6/0x830 include/linux/netfilter.h:243
      NF_HOOK include/linux/netfilter.h:286 [inline]
      ndisc_send_skb+0xa51/0x1370 net/ipv6/ndisc.c:491
      ndisc_send_ns+0x38a/0x870 net/ipv6/ndisc.c:633
      addrconf_dad_work+0xb9e/0x1320 net/ipv6/addrconf.c:4008
      process_one_work+0xbbf/0x1af0 kernel/workqueue.c:2113
      worker_thread+0x223/0x1990 kernel/workqueue.c:2247
      kthread+0x33c/0x400 kernel/kthread.c:238
      ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:429
    Code: 85 2a 0b 00 00 4d 8b 3c 24 4d 85 ff 75 9f 4c 8b bd 60 fd ff ff e8 bb
    57 10 00 65 ff 0d 94 9a a1 7e e9 d9 fc ff ff e8 aa 57 10 00 <0f> 0b e8 a3
    57 10 00 e9 14 fb ff ff e8 99 57 10 00 4c 89 bd 70
    RIP: __mod_timer kernel/time/timer.c:958 [inline] RSP: ffff8801d24fe9f8
    RIP: mod_timer+0x7d6/0x13c0 kernel/time/timer.c:1102 RSP: ffff8801d24fe9f8
    ---[ end trace f661ab06f5dd8b3d ]---
    
    The ledinternal struct can be shared between several different
    xt_LED targets, but the related timer is currently initialized only
    if the first target requires it. Fix it by unconditionally
    initializing the timer struct.
    
    v1 -> v2: call del_timer_sync() unconditionally, too.
    
    Fixes: 268cb38e1802 ("netfilter: x_tables: add LED trigger target")
    Reported-by: syzbot+10c98dc5725c6c8fc7fb@syzkaller.appspotmail.com
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a7ebc07a1531a6dbe00434d3c69402c615dbd74
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 12 08:11:48 2018 -0800

    netfilter: xt_hashlimit: fix lock imbalance
    
    commit de526f401284e1638d4c97cb5a4c292ac3f37655 upstream.
    
    syszkaller found that rcu was not held in hashlimit_mt_common()
    
    We only need to enable BH at this point.
    
    Fixes: bea74641e378 ("netfilter: xt_hashlimit: add rate match mode")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4514a597aa4376a024927ecde3570dacac742e70
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Feb 7 21:59:17 2018 -0800

    netfilter: ipt_CLUSTERIP: fix a race condition of proc file creation
    
    commit b3e456fce9f51d6276e576d00271e2813c1b8b67 upstream.
    
    There is a race condition between clusterip_config_entry_put()
    and clusterip_config_init(), after we release the spinlock in
    clusterip_config_entry_put(), a new proc file with a same IP could
    be created immediately since it is already removed from the configs
    list, therefore it triggers this warning:
    
    ------------[ cut here ]------------
    proc_dir_entry 'ipt_CLUSTERIP/172.20.0.170' already registered
    WARNING: CPU: 1 PID: 4152 at fs/proc/generic.c:330 proc_register+0x2a4/0x370 fs/proc/generic.c:329
    Kernel panic - not syncing: panic_on_warn set ...
    
    As a quick fix, just move the proc_remove() inside the spinlock.
    
    Reported-by: <syzbot+03218bcdba6aa76441a3@syzkaller.appspotmail.com>
    Fixes: 6c5d5cfbe3c5 ("netfilter: ipt_CLUSTERIP: check duplicate config when initializing")
    Tested-by: Paolo Abeni <pabeni@redhat.com>
    Cc: Xin Long <lucien.xin@gmail.com>
    Cc: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 638c2e4eff89aae86593e80ac2be01eee195fccb
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Feb 7 13:46:25 2018 +0100

    netfilter: add back stackpointer size checks
    
    commit 57ebd808a97d7c5b1e1afb937c2db22beba3c1f8 upstream.
    
    The rationale for removing the check is only correct for rulesets
    generated by ip(6)tables.
    
    In iptables, a jump can only occur to a user-defined chain, i.e.
    because we size the stack based on number of user-defined chains we
    cannot exceed stack size.
    
    However, the underlying binary format has no such restriction,
    and the validation step only ensures that the jump target is a
    valid rule start point.
    
    IOW, its possible to build a rule blob that has no user-defined
    chains but does contain a jump.
    
    If this happens, no jump stack gets allocated and crash occurs
    because no jumpstack was allocated.
    
    Fixes: 7814b6ec6d0d6 ("netfilter: xtables: don't save/restore jumpstack offset")
    Reported-by: syzbot+e783f671527912cd9403@syzkaller.appspotmail.com
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 310f286ded5f1f7fd72dcb1cff936c0a02d5a4d2
Author: Vinod Koul <vkoul@kernel.org>
Date:   Tue Oct 31 16:47:27 2017 +0530

    ASoC: Intel: kbl: fix jack name
    
    commit cedb6415f9ece6d3368aa0ac8a433caff799792a upstream.
    
    Commit d1c4cb447a7e ("ASoC: Intel: Skylake: Fix jack name format
    substitution") added Jack name but erroneously added a space as well,
    so remove the space in Jack name.
    
    Fixes: d1c4cb447a7e ("ASoC: Intel: Skylake: Fix jack name format substitution")
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 314b54aae2ad9dc347be82112edfc9a612d2894c
Author: Chintan Patel <chintan.m.patel@intel.com>
Date:   Mon Sep 18 08:43:18 2017 -0700

    ASoC: Intel: Skylake: Fix jack name format substitution
    
    commit d1c4cb447a7efcb5608a33cdfed8ab4234378b0a upstream.
    
    Jack name is not getting formatted correctly hence resulting
    in invalid name for HDMI/DP input devices.
    
    This was recently exposed due changes brought by MST:
    commit 3a13347f05fd ("ASoC: Intel: kbl: Add jack port initialize
    in kbl machine drivers")
    
    Signed-off-by: Chintan Patel <chintan.m.patel@intel.com>
    Acked-By: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c116baf79f0ecedd94be496be622ab6b65a243e7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 14:17:17 2017 +0100

    ARM: omap2: hide omap3_save_secure_ram on non-OMAP3 builds
    
    commit 863204cfdae98626a92535ac928ad79f4d6b74ff upstream.
    
    In configurations without CONFIG_OMAP3 but with secure RAM support,
    we now run into a link failure:
    
    arch/arm/mach-omap2/omap-secure.o: In function `omap3_save_secure_ram':
    omap-secure.c:(.text+0x130): undefined reference to `save_secure_ram_context'
    
    The omap3_save_secure_ram() function is only called from the OMAP34xx
    power management code, so we can simply hide that function in the
    appropriate #ifdef.
    
    Fixes: d09220a887f7 ("ARM: OMAP2+: Fix SRAM virt to phys translation for save_secure_ram_context")
    Acked-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77fbdd1e2a0c316481313caa4246b87a95aa0f31
Author: Jerry Hoemann <jerry.hoemann@hpe.com>
Date:   Sun Feb 25 20:22:20 2018 -0700

    watchdog: hpwdt: Remove legacy NMI sourcing.
    
    commit 2b3d89b402b085b08498e896c65267a145bed486 upstream.
    
    Gen8 and prior Proliant systems supported the "CRU" interface
    to firmware.  This interfaces allows linux to "call back" into firmware
    to source the cause of an NMI.  This feature isn't fully utilized
    as the actual source of the NMI isn't printed, the driver only
    indicates that the source couldn't be determined when the call
    fails.
    
    With the advent of Gen9, iCRU replaces the CRU. The call back
    feature is no longer available in firmware.  To be compatible and
    not attempt to call back into firmware on system not supporting CRU,
    the SMBIOS table is consulted to determine if it is safe to
    make the call back or not.
    
    This results in about half of the driver code being devoted
    to either making CRU calls or determing if it is safe to make
    CRU calls.  As noted, the driver isn't really using the results of
    the CRU calls.
    
    Furthermore, as a consequence of the Spectre security issue, the
    BIOS/EFI calls are being wrapped into Spectre-disabling section.
    Removing the call back in hpwdt_pretimeout assists in this effort.
    
    As the CRU sourcing of the NMI isn't required for handling the
    NMI and there are security concerns with making the call back, remove
    the legacy (pre Gen9) NMI sourcing and the DMI code to determine if
    the system had the CRU interface.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41da51dbc3721cae1b9796a422610366e9ff851c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 22:02:37 2017 +0100

    watchdog: hpwdt: fix unused variable warning
    
    commit aeebc6ba88ba3758ad95467ff6191fabf2074c13 upstream.
    
    The new hpwdt_my_nmi() function is used conditionally, which produces
    a harmless warning in some configurations:
    
    drivers/watchdog/hpwdt.c:478:12: error: 'hpwdt_my_nmi' defined but not used [-Werror=unused-function]
    
    This moves it inside of the #ifdef that protects its caller, to silence
    the warning.
    
    Fixes: 621174a92851 ("watchdog: hpwdt: Check source of NMI")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d40d7b332592d9e15c57afb7c00a37f5e1cb1df6
Author: Jerry Hoemann <jerry.hoemann@hpe.com>
Date:   Mon Oct 23 16:46:17 2017 -0600

    watchdog: hpwdt: Check source of NMI
    
    commit 838534e50e2e5c1e644e30ab6cb28da88eb31368 upstream.
    
    Do not claim the NMI (i.e. return NMI_DONE) if the source of
    the NMI isn't the iLO watchdog or debug.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a07f4a6befc34d8f91e5fa0069d063283705f3a
Author: Jerry Hoemann <jerry.hoemann@hpe.com>
Date:   Mon Oct 23 16:46:16 2017 -0600

    watchdog: hpwdt: SMBIOS check
    
    commit c42cbe41727a138905a28f8e0b00c147be77ee93 upstream.
    
    This corrects:
    commit cce78da76601 ("watchdog: hpwdt: Add check for UEFI bits")
    
    The test on HPE SMBIOS extension type 219 record "Misc Features"
    bits for UEFI support is incorrect.  The definition of the Misc Features
    bits in the HPE SMBIOS OEM Extensions specification (and related
    firmware) was changed to use a different pair of bits to
    represent UEFI supported.  Howerver, a corresponding change
    to Linux was missed.
    
    Current code/platform work because the iCRU test is working.
    But purpose of cce78da766 is to ensure correct functionality
    on future systems where iCRU isn't supported.
    
    Signed-off-by: Jerry Hoemann <jerry.hoemann@hpe.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c4bc6e01e5219283c81fcfa61eb242d87965c7
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Oct 4 12:56:05 2017 +0900

    kbuild: move "_all" target out of $(KBUILD_SRC) conditional
    
    commit ba634eceb535d95e87ef09caae7814b3687c6036 upstream.
    
    The first "_all" occurrence around line 120 is only visible when
    KBUILD_SRC is unset.
    
    If O=... is specified, the working directory is relocated, then the
    only second occurrence around line 193 is visible, that is not set
    to PHONY.
    
    Move the first one to an always visible place.  This clarifies "_all"
    is our default target and it is always set to PHONY.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
