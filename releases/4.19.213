commit ff079d726eb62a88b582bfacc2880aad52ba0a56
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 20 11:23:05 2021 +0200

    Linux 4.19.213
    
    Link: https://lore.kernel.org/r/20211018132326.529486647@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20211018143033.725101193@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c872163141a0a40544b479a7c2c3506d8d17cd2
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Mon Oct 11 17:22:49 2021 +0200

    r8152: select CRC32 and CRYPTO/CRYPTO_HASH/CRYPTO_SHA256
    
    commit 9973a43012b6ad1720dbc4d5faf5302c28635b8c upstream.
    
    Fix the following build/link errors by adding a dependency on
    CRYPTO, CRYPTO_HASH, CRYPTO_SHA256 and CRC32:
    
      ld: drivers/net/usb/r8152.o: in function `rtl8152_fw_verify_checksum':
      r8152.c:(.text+0x2b2a): undefined reference to `crypto_alloc_shash'
      ld: r8152.c:(.text+0x2bed): undefined reference to `crypto_shash_digest'
      ld: r8152.c:(.text+0x2c50): undefined reference to `crypto_destroy_tfm'
      ld: drivers/net/usb/r8152.o: in function `_rtl8152_set_rx_mode':
      r8152.c:(.text+0xdcb0): undefined reference to `crc32_le'
    
    Fixes: 9370f2d05a2a1 ("r8152: support request_firmware for RTL8153")
    Fixes: ac718b69301c7 ("net/usb: new driver for RTL8152")
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0737ab232f631c366d3b2ca3b3c828d6dd6d309
Author: chongjiapeng <jiapeng.chong@linux.alibaba.com>
Date:   Sat Oct 9 16:09:26 2021 +0800

    qed: Fix missing error code in qed_slowpath_start()
    
    commit a5a14ea7b4e55604acb0dc9d88fdb4cb6945bc77 upstream.
    
    The error code is missing in this code scenario, add the error code
    '-EINVAL' to the return value 'rc'.
    
    Eliminate the follow smatch warning:
    
    drivers/net/ethernet/qlogic/qed/qed_main.c:1298 qed_slowpath_start()
    warn: missing error code 'rc'.
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Fixes: d51e4af5c209 ("qed: aRFS infrastructure support")
    Signed-off-by: chongjiapeng <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaa8097fa6ea34646cf9253044e151ce65889aab
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Oct 7 19:49:57 2021 +0200

    mqprio: Correct stats in mqprio_dump_class_stats().
    
    commit 14132690860e4d06aa3e1c4d7d8e9866ba7756dd upstream.
    
    Introduction of lockless subqueues broke the class statistics.
    Before the change stats were accumulated in `bstats' and `qstats'
    on the stack which was then copied to struct gnet_dump.
    
    After the change the `bstats' and `qstats' are initialized to 0
    and never updated, yet still fed to gnet_dump. The code updates
    the global qdisc->cpu_bstats and qdisc->cpu_qstats instead,
    clobbering them. Most likely a copy-paste error from the code in
    mqprio_dump().
    
    __gnet_stats_copy_basic() and __gnet_stats_copy_queue() accumulate
    the values for per-CPU case but for global stats they overwrite
    the value, so only stats from the last loop iteration / tc end up
    in sch->[bq]stats.
    
    Use the on-stack [bq]stats variables again and add the stats manually
    in the global case.
    
    Fixes: ce679e8df7ed2 ("net: sched: add support for TCQ_F_NOLOCK subqueues to sch_mqprio")
    Cc: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    https://lore.kernel.org/all/20211007175000.2334713-2-bigeasy@linutronix.de/
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 420824f45900b25739f01fa01c57569f8f59f55c
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Mon Aug 23 17:25:26 2021 +0800

    acpi/arm64: fix next_platform_timer() section mismatch error
    
    commit 596143e3aec35c93508d6b7a05ddc999ee209b61 upstream.
    
    Fix modpost Section mismatch error in next_platform_timer().
    
      [...]
      WARNING: modpost: vmlinux.o(.text.unlikely+0x26e60): Section mismatch in reference from the function next_platform_timer() to the variable .init.data:acpi_gtdt_desc
      The function next_platform_timer() references
      the variable __initdata acpi_gtdt_desc.
      This is often because next_platform_timer lacks a __initdata
      annotation or the annotation of acpi_gtdt_desc is wrong.
    
      WARNING: modpost: vmlinux.o(.text.unlikely+0x26e64): Section mismatch in reference from the function next_platform_timer() to the variable .init.data:acpi_gtdt_desc
      The function next_platform_timer() references
      the variable __initdata acpi_gtdt_desc.
      This is often because next_platform_timer lacks a __initdata
      annotation or the annotation of acpi_gtdt_desc is wrong.
    
      ERROR: modpost: Section mismatches detected.
      Set CONFIG_SECTION_MISMATCH_WARN_ONLY=y to allow them.
      make[1]: *** [scripts/Makefile.modpost:59: vmlinux.symvers] Error 1
      make[1]: *** Deleting file 'vmlinux.symvers'
      make: *** [Makefile:1176: vmlinux] Error 2
      [...]
    
    Fixes: a712c3ed9b8a ("acpi/arm64: Add memory-mapped timer support in GTDT driver")
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Acked-by: Hanjun Guo <guohanjun@huawei.com>
    Link: https://lore.kernel.org/r/20210823092526.2407526-1-liu.yun@linux.dev
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7dc9e5bd47dd7f7871fe7bf5c0416c1fae82899
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 1 15:34:09 2021 +0300

    drm/msm/dsi: fix off by one in dsi_bus_clk_enable error handling
    
    commit c8f01ffc83923a91e8087aaa077de13354a7aa59 upstream.
    
    This disables a lock which wasn't enabled and it does not disable
    the first lock in the array.
    
    Fixes: 6e0eb52eba9e ("drm/msm/dsi: Parse bus clocks from a list")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20211001123409.GG2283@kili
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6635d56798b289aa0437d1f709555e8bee301934
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 1 15:33:08 2021 +0300

    drm/msm/dsi: Fix an error code in msm_dsi_modeset_init()
    
    commit 739b4e7756d3301dd673ca517afca46a5f635562 upstream.
    
    Return an error code if msm_dsi_manager_validate_current_config().
    Don't return success.
    
    Fixes: 8b03ad30e314 ("drm/msm/dsi: Use one connector for dual DSI mode")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20211001123308.GF2283@kili
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f642b93710b6b1119bdff90be01e6b5a2a5d669
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Sep 29 13:18:57 2021 +0100

    drm/msm: Fix null pointer dereference on pointer edp
    
    commit 2133c4fc8e1348dcb752f267a143fe2254613b34 upstream.
    
    The initialization of pointer dev dereferences pointer edp before
    edp is null checked, so there is a potential null pointer deference
    issue. Fix this by only dereferencing edp after edp has been null
    checked.
    
    Addresses-Coverity: ("Dereference before null check")
    Fixes: ab5b0107ccf3 ("drm/msm: Initial add eDP support in msm drm driver (v5)")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20210929121857.213922-1-colin.king@canonical.com
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6560d144c4abbbd3c8164aa0be240387e0bad932
Author: Vadim Pasternak <vadimp@nvidia.com>
Date:   Mon Sep 27 17:22:13 2021 +0300

    platform/mellanox: mlxreg-io: Fix argument base in kstrtou32() call
    
    commit 9b024201693e397441668cca0d2df7055fe572eb upstream.
    
    Change kstrtou32() argument 'base' to be zero instead of 'len'.
    It works by chance for setting one bit value, but it is not supposed to
    work in case value passed to mlxreg_io_attr_store() is greater than 1.
    
    It works for example, for:
    echo 1 > /sys/devices/platform/mlxplat/mlxreg-io/hwmon/.../jtag_enable
    But it will fail for:
    echo n > /sys/devices/platform/mlxplat/mlxreg-io/hwmon/.../jtag_enable,
    where n > 1.
    
    The flow for input buffer conversion is as below:
    _kstrtoull(const char *s, unsigned int base, unsigned long long *res)
    calls:
    rv = _parse_integer(s, base, &_res);
    
    For the second case, where n > 1:
    - _parse_integer() converts 's' to 'val'.
      For n=2, 'len' is set to 2 (string buffer is 0x32 0x0a), for n=3
      'len' is set to 3 (string buffer 0x33 0x0a), etcetera.
    - 'base' is equal or greater then '2' (length of input buffer).
    
    As a result, _parse_integer() exits with result zero (rv):
            rv = 0;
            while (1) {
                    ...
                    if (val >= base)-> (2 >= 2)
                            break;
                    ...
                    rv++;
                    ...
            }
    
    And _kstrtoull() in their turn will fail:
            if (rv == 0)
                    return -EINVAL;
    
    Fixes: 5ec4a8ace06c ("platform/mellanox: Introduce support for Mellanox register access driver")
    Signed-off-by: Vadim Pasternak <vadimp@nvidia.com>
    Link: https://lore.kernel.org/r/20210927142214.2613929-2-vadimp@nvidia.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 091ede5caf61616712546908033508d824db5d94
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:34:19 2021 +0300

    pata_legacy: fix a couple uninitialized variable bugs
    
    commit 013923477cb311293df9079332cf8b806ed0e6f2 upstream.
    
    The last byte of "pad" is used without being initialized.
    
    Fixes: 55dba3120fbc ("libata: update ->data_xfer hook for ATAPI")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 071bdef36391958c89af5fa2172f691b31baa212
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Wed Oct 13 15:50:32 2021 +0800

    NFC: digital: fix possible memory leak in digital_in_send_sdd_req()
    
    commit 291c932fc3692e4d211a445ba8aa35663831bac7 upstream.
    
    'skb' is allocated in digital_in_send_sdd_req(), but not free when
    digital_in_send_cmd() failed, which will cause memory leak. Fix it
    by freeing 'skb' if digital_in_send_cmd() return failed.
    
    Fixes: 2c66daecc409 ("NFC Digital: Add NFC-A technology support")
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9881b0c860649f27ef2565deef011e516390f416
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Wed Oct 13 15:50:12 2021 +0800

    NFC: digital: fix possible memory leak in digital_tg_listen_mdaa()
    
    commit 58e7dcc9ca29c14e44267a4d0ea61e3229124907 upstream.
    
    'params' is allocated in digital_tg_listen_mdaa(), but not free when
    digital_send_cmd() failed, which will cause memory leak. Fix it by
    freeing 'params' if digital_send_cmd() return failed.
    
    Fixes: 1c7a4c24fbfd ("NFC Digital: Add target NFC-DEP support")
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 081d231e2aaf3f42fc56f49232c8abd3858ef5bc
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Wed Oct 13 11:49:32 2021 +0800

    nfc: fix error handling of nfc_proto_register()
    
    commit 0911ab31896f0e908540746414a77dd63912748d upstream.
    
    When nfc proto id is using, nfc_proto_register() return -EBUSY error
    code, but forgot to unregister proto. Fix it by adding proto_unregister()
    in the error handling case.
    
    Fixes: c7fe3b52c128 ("NFC: add NFC socket family")
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20211013034932.2833737-1-william.xuanziyang@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3999758c3b0de7a0d4ed240d546c1832da4ef1c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Oct 13 16:35:49 2021 +0200

    ethernet: s2io: fix setting mac address during resume
    
    commit 40507e7aada8422c38aafa0c8a1a09e4623c712a upstream.
    
    After recent cleanups, gcc started warning about a suspicious
    memcpy() call during the s2io_io_resume() function:
    
    In function '__dev_addr_set',
        inlined from 'eth_hw_addr_set' at include/linux/etherdevice.h:318:2,
        inlined from 's2io_set_mac_addr' at drivers/net/ethernet/neterion/s2io.c:5205:2,
        inlined from 's2io_io_resume' at drivers/net/ethernet/neterion/s2io.c:8569:7:
    arch/x86/include/asm/string_32.h:182:25: error: '__builtin_memcpy' accessing 6 bytes at offsets 0 and 2 overlaps 4 bytes at offset 2 [-Werror=restrict]
      182 | #define memcpy(t, f, n) __builtin_memcpy(t, f, n)
          |                         ^~~~~~~~~~~~~~~~~~~~~~~~~
    include/linux/netdevice.h:4648:9: note: in expansion of macro 'memcpy'
     4648 |         memcpy(dev->dev_addr, addr, len);
          |         ^~~~~~
    
    What apparently happened is that an old cleanup changed the calling
    conventions for s2io_set_mac_addr() from taking an ethernet address
    as a character array to taking a struct sockaddr, but one of the
    callers was not changed at the same time.
    
    Change it to instead call the low-level do_s2io_prog_unicast() function
    that still takes the old argument type.
    
    Fixes: 2fd376884558 ("S2io: Added support set_mac_address driver entry point")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211013143613.2049096-1-arnd@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e5494e6fc8a29c927e0478bec4a078a40da8901
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Oct 12 20:59:01 2021 +0800

    net: encx24j600: check error in devm_regmap_init_encx24j600
    
    commit f03dca0c9e2297c84a018e306f8a9cd534ee4287 upstream.
    
    devm_regmap_init may return error which caused by like out of memory,
    this will results in null pointer dereference later when reading
    or writing register:
    
    general protection fault in encx24j600_spi_probe
    KASAN: null-ptr-deref in range [0x0000000000000090-0x0000000000000097]
    CPU: 0 PID: 286 Comm: spi-encx24j600- Not tainted 5.15.0-rc2-00142-g9978db750e31-dirty #11 9c53a778c1306b1b02359f3c2bbedc0222cba652
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    RIP: 0010:regcache_cache_bypass drivers/base/regmap/regcache.c:540
    Code: 54 41 89 f4 55 53 48 89 fb 48 83 ec 08 e8 26 94 a8 fe 48 8d bb a0 00 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 4a 03 00 00 4c 8d ab b0 00 00 00 48 8b ab a0 00
    RSP: 0018:ffffc900010476b8 EFLAGS: 00010207
    RAX: dffffc0000000000 RBX: fffffffffffffff4 RCX: 0000000000000000
    RDX: 0000000000000012 RSI: ffff888002de0000 RDI: 0000000000000094
    RBP: ffff888013c9a000 R08: 0000000000000000 R09: fffffbfff3f9cc6a
    R10: ffffc900010476e8 R11: fffffbfff3f9cc69 R12: 0000000000000001
    R13: 000000000000000a R14: ffff888013c9af54 R15: ffff888013c9ad08
    FS:  00007ffa984ab580(0000) GS:ffff88801fe00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000055a6384136c8 CR3: 000000003bbe6003 CR4: 0000000000770ef0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     encx24j600_spi_probe drivers/net/ethernet/microchip/encx24j600.c:459
     spi_probe drivers/spi/spi.c:397
     really_probe drivers/base/dd.c:517
     __driver_probe_device drivers/base/dd.c:751
     driver_probe_device drivers/base/dd.c:782
     __device_attach_driver drivers/base/dd.c:899
     bus_for_each_drv drivers/base/bus.c:427
     __device_attach drivers/base/dd.c:971
     bus_probe_device drivers/base/bus.c:487
     device_add drivers/base/core.c:3364
     __spi_add_device drivers/spi/spi.c:599
     spi_add_device drivers/spi/spi.c:641
     spi_new_device drivers/spi/spi.c:717
     new_device_store+0x18c/0x1f1 [spi_stub 4e02719357f1ff33f5a43d00630982840568e85e]
     dev_attr_store drivers/base/core.c:2074
     sysfs_kf_write fs/sysfs/file.c:139
     kernfs_fop_write_iter fs/kernfs/file.c:300
     new_sync_write fs/read_write.c:508 (discriminator 4)
     vfs_write fs/read_write.c:594
     ksys_write fs/read_write.c:648
     do_syscall_64 arch/x86/entry/common.c:50
     entry_SYSCALL_64_after_hwframe arch/x86/entry/entry_64.S:113
    
    Add error check in devm_regmap_init_encx24j600 to avoid this situation.
    
    Fixes: 04fbfce7a222 ("net: Microchip encx24j600 driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Link: https://lore.kernel.org/r/20211012125901.3623144-1-sunnanyong@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 843280d81ff9c2a7eb32559d7cb05fecc45822f9
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Tue Oct 12 17:25:09 2021 +0200

    net: korina: select CRC32
    
    commit 427f974d9727ca681085ddcd0530c97ab5811ae0 upstream.
    
    Fix the following build/link error by adding a dependency on the CRC32
    routines:
    
      ld: drivers/net/ethernet/korina.o: in function `korina_multicast_list':
      korina.c:(.text+0x1af): undefined reference to `crc32_le'
    
    Fixes: ef11291bcd5f9 ("Add support the Korina (IDT RC32434) Ethernet MAC")
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Acked-by: Florian fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20211012152509.21771-1-vegard.nossum@oracle.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdcfccfca82eafca3ef9039b4aaf46611c173d52
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Tue Oct 12 11:34:46 2021 +0200

    net: arc: select CRC32
    
    commit e599ee234ad4fdfe241d937bbabd96e0d8f9d868 upstream.
    
    Fix the following build/link error by adding a dependency on the CRC32
    routines:
    
      ld: drivers/net/ethernet/arc/emac_main.o: in function `arc_emac_set_rx_mode':
      emac_main.c:(.text+0xb11): undefined reference to `crc32_le'
    
    The crc32_le() call comes through the ether_crc_le() call in
    arc_emac_set_rx_mode().
    
    [v2: moved the select to ARC_EMAC_CORE; the Makefile is a bit confusing,
    but the error comes from emac_main.o, which is part of the arc_emac module,
    which in turn is enabled by CONFIG_ARC_EMAC_CORE. Note that arc_emac is
    different from emac_arc...]
    
    Fixes: 775dd682e2b0ec ("arc_emac: implement promiscuous mode and multicast filtering")
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Link: https://lore.kernel.org/r/20211012093446.1575-1-vegard.nossum@oracle.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c57fdeff69b152185fafabd37e6bfecfce51efda
Author: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
Date:   Wed Oct 13 17:27:29 2021 -0300

    sctp: account stream padding length for reconf chunk
    
    commit a2d859e3fc97e79d907761550dbc03ff1b36479c upstream.
    
    sctp_make_strreset_req() makes repeated calls to sctp_addto_chunk()
    which will automatically account for padding on each call. inreq and
    outreq are already 4 bytes aligned, but the payload is not and doing
    SCTP_PAD4(a + b) (which _sctp_make_chunk() did implicitly here) is
    different from SCTP_PAD4(a) + SCTP_PAD4(b) and not enough. It led to
    possible attempt to use more buffer than it was allocated and triggered
    a BUG_ON.
    
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Fixes: cc16f00f6529 ("sctp: add support for generating stream reconf ssn reset request chunk")
    Reported-by: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
    Signed-off-by: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/b97c1f8b0c7ff79ac4ed206fc2c49d3612e0850c.1634156849.git.mleitner@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d6b4efde25a34b334b5105d628995a2187285e0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Aug 16 21:39:54 2021 +0300

    iio: dac: ti-dac5571: fix an error code in probe()
    
    commit f7a28df7db84eb3410e9eca37832efa5aed93338 upstream.
    
    If we have an unexpected number of channels then return -EINVAL instead
    of returning success.
    
    Fixes: df38a4a72a3b ("iio: dac: add TI DAC5571 family support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210816183954.GB2068@kili
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9a8362f654c577445b69183ed32b97fb364e6fe
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 14 13:53:33 2021 +0300

    iio: ssp_sensors: fix error code in ssp_print_mcu_debug()
    
    commit 4170d3dd1467e9d78cb9af374b19357dc324b328 upstream.
    
    The ssp_print_mcu_debug() function should return negative error codes on
    error.  Returning "length" is meaningless.  This change does not affect
    runtime because the callers only care about zero/non-zero.
    
    Reported-by: Jonathan Cameron <jic23@kernel.org>
    Fixes: 50dd64d57eee ("iio: common: ssp_sensors: Add sensorhub driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210914105333.GA11657@kili
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82a005bfb3b48b31734081ff2999885d70d29263
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 9 12:13:36 2021 +0300

    iio: ssp_sensors: add more range checking in ssp_parse_dataframe()
    
    commit 8167c9a375ccceed19048ad9d68cb2d02ed276e0 upstream.
    
    The "idx" is validated at the start of the loop but it gets incremented
    during the iteration so it needs to be checked again.
    
    Fixes: 50dd64d57eee ("iio: common: ssp_sensors: Add sensorhub driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210909091336.GA26312@kili
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e185b64585b8ef67f621cb59c8ee7796d024e47
Author: Jiri Valek - 2N <valek@2n.cz>
Date:   Mon Sep 20 14:53:48 2021 +0200

    iio: light: opt3001: Fixed timeout error when 0 lux
    
    commit 26d90b5590579def54382a2fc34cfbe8518a9851 upstream.
    
    Reading from sensor returned timeout error under
    zero light conditions.
    
    Signed-off-by: Jiri Valek - 2N <valek@2n.cz>
    Fixes: ac663db3678a ("iio: light: opt3001: enable operation w/o IRQ")
    Link: https://lore.kernel.org/r/20210920125351.6569-1-valek@2n.cz
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bf8535bc137a8baff7bafda5cd138672a98c3ea
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 21 12:37:24 2021 +0200

    iio: adc128s052: Fix the error handling path of 'adc128_probe()'
    
    commit bbcf40816b547b3c37af49168950491d20d81ce1 upstream.
    
    A successful 'regulator_enable()' call should be balanced by a
    corresponding 'regulator_disable()' call in the error handling path of the
    probe, as already done in the remove function.
    
    Update the error handling path accordingly.
    
    Fixes: 913b86468674 ("iio: adc: Add TI ADC128S052")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Alexandru Ardelean <ardeleanalex@gmail.com>
    Link: https://lore.kernel.org/r/85189f1cfcf6f5f7b42d8730966f2a074b07b5f5.1629542160.git.christophe.jaillet@wanadoo.fr
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a595db3e2192e61460f4476cfb7c2f31922e94e
Author: Billy Tsai <billy_tsai@aspeedtech.com>
Date:   Tue Aug 31 15:14:44 2021 +0800

    iio: adc: aspeed: set driver data when adc probe.
    
    commit eb795cd97365a3d3d9da3926d234a7bc32a3bb15 upstream.
    
    Fix the issue when adc remove will get the null driver data.
    
    Fixed: commit 573803234e72 ("iio: Aspeed ADC")
    Signed-off-by: Billy Tsai <billy_tsai@aspeedtech.com>
    Link: https://lore.kernel.org/r/20210831071458.2334-2-billy_tsai@aspeedtech.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dee3e2342709e6cde931c912effd80818145ed82
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Oct 6 19:34:55 2021 +0200

    x86/Kconfig: Do not enable AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT automatically
    
    commit 711885906b5c2df90746a51f4cd674f1ab9fbb1d upstream.
    
    This Kconfig option was added initially so that memory encryption is
    enabled by default on machines which support it.
    
    However, devices which have DMA masks that are less than the bit
    position of the encryption bit, aka C-bit, require the use of an IOMMU
    or the use of SWIOTLB.
    
    If the IOMMU is disabled or in passthrough mode, the kernel would switch
    to SWIOTLB bounce-buffering for those transfers.
    
    In order to avoid that,
    
      2cc13bb4f59f ("iommu: Disable passthrough mode when SME is active")
    
    disables the default IOMMU passthrough mode so that devices for which the
    default 256K DMA is insufficient, can use the IOMMU instead.
    
    However 2, there are cases where the IOMMU is disabled in the BIOS, etc.
    (think the usual hardware folk "oops, I dropped the ball there" cases) or a
    driver doesn't properly use the DMA APIs or a device has a firmware or
    hardware bug, e.g.:
    
      ea68573d408f ("drm/amdgpu: Fail to load on RAVEN if SME is active")
    
    However 3, in the above GPU use case, there are APIs like Vulkan and
    some OpenGL/OpenCL extensions which are under the assumption that
    user-allocated memory can be passed in to the kernel driver and both the
    GPU and CPU can do coherent and concurrent access to the same memory.
    That cannot work with SWIOTLB bounce buffers, of course.
    
    So, in order for those devices to function, drop the "default y" for the
    SME by default active option so that users who want to have SME enabled,
    will need to either enable it in their config or use "mem_encrypt=on" on
    the kernel command line.
    
     [ tlendacky: Generalize commit message. ]
    
    Fixes: 7744ccdbc16f ("x86/mm: Add Secure Memory Encryption (SME) support")
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/8bbacd0e-4580-3194-19d2-a0ecad7df09c@molgen.mpg.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb0fc8e7170e61eaf65d28dee4a8baf4e86b19ca
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Wed Oct 13 13:45:11 2021 +0100

    nvmem: Fix shift-out-of-bound (UBSAN) with byte size cells
    
    commit 5d388fa01fa6eb310ac023a363a6cb216d9d8fe9 upstream.
    
    If a cell has 'nbits' equal to a multiple of BITS_PER_BYTE the logic
    
     *p &= GENMASK((cell->nbits%BITS_PER_BYTE) - 1, 0);
    
    will become undefined behavior because nbits modulo BITS_PER_BYTE is 0, and we
    subtract one from that making a large number that is then shifted more than the
    number of bits that fit into an unsigned long.
    
    UBSAN reports this problem:
    
     UBSAN: shift-out-of-bounds in drivers/nvmem/core.c:1386:8
     shift exponent 64 is too large for 64-bit type 'unsigned long'
     CPU: 6 PID: 7 Comm: kworker/u16:0 Not tainted 5.15.0-rc3+ #9
     Hardware name: Google Lazor (rev3+) with KB Backlight (DT)
     Workqueue: events_unbound deferred_probe_work_func
     Call trace:
      dump_backtrace+0x0/0x170
      show_stack+0x24/0x30
      dump_stack_lvl+0x64/0x7c
      dump_stack+0x18/0x38
      ubsan_epilogue+0x10/0x54
      __ubsan_handle_shift_out_of_bounds+0x180/0x194
      __nvmem_cell_read+0x1ec/0x21c
      nvmem_cell_read+0x58/0x94
      nvmem_cell_read_variable_common+0x4c/0xb0
      nvmem_cell_read_variable_le_u32+0x40/0x100
      a6xx_gpu_init+0x170/0x2f4
      adreno_bind+0x174/0x284
      component_bind_all+0xf0/0x264
      msm_drm_bind+0x1d8/0x7a0
      try_to_bring_up_master+0x164/0x1ac
      __component_add+0xbc/0x13c
      component_add+0x20/0x2c
      dp_display_probe+0x340/0x384
      platform_probe+0xc0/0x100
      really_probe+0x110/0x304
      __driver_probe_device+0xb8/0x120
      driver_probe_device+0x4c/0xfc
      __device_attach_driver+0xb0/0x128
      bus_for_each_drv+0x90/0xdc
      __device_attach+0xc8/0x174
      device_initial_probe+0x20/0x2c
      bus_probe_device+0x40/0xa4
      deferred_probe_work_func+0x7c/0xb8
      process_one_work+0x128/0x21c
      process_scheduled_works+0x40/0x54
      worker_thread+0x1ec/0x2a8
      kthread+0x138/0x158
      ret_from_fork+0x10/0x20
    
    Fix it by making sure there are any bits to mask out.
    
    Fixes: 69aba7948cbe ("nvmem: Add a simple NVMEM framework for consumers")
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20211013124511.18726-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecbbc70f1bbc95bc23f0c68553de5b49fa69c829
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Mon Oct 11 07:39:21 2021 +0200

    virtio: write back F_VERSION_1 before validate
    
    commit 2f9a174f918e29608564c7a4e8329893ab604fb4 upstream.
    
    The virtio specification virtio-v1.1-cs01 states: "Transitional devices
    MUST detect Legacy drivers by detecting that VIRTIO_F_VERSION_1 has not
    been acknowledged by the driver."  This is exactly what QEMU as of 6.1
    has done relying solely on VIRTIO_F_VERSION_1 for detecting that.
    
    However, the specification also says: "... the driver MAY read (but MUST
    NOT write) the device-specific configuration fields to check that it can
    support the device ..." before setting FEATURES_OK.
    
    In that case, any transitional device relying solely on
    VIRTIO_F_VERSION_1 for detecting legacy drivers will return data in
    legacy format.  In particular, this implies that it is in big endian
    format for big endian guests. This naturally confuses the driver which
    expects little endian in the modern mode.
    
    It is probably a good idea to amend the spec to clarify that
    VIRTIO_F_VERSION_1 can only be relied on after the feature negotiation
    is complete. Before validate callback existed, config space was only
    read after FEATURES_OK. However, we already have two regressions, so
    let's address this here as well.
    
    The regressions affect the VIRTIO_NET_F_MTU feature of virtio-net and
    the VIRTIO_BLK_F_BLK_SIZE feature of virtio-blk for BE guests when
    virtio 1.0 is used on both sides. The latter renders virtio-blk unusable
    with DASD backing, because things simply don't work with the default.
    See Fixes tags for relevant commits.
    
    For QEMU, we can work around the issue by writing out the feature bits
    with VIRTIO_F_VERSION_1 bit set.  We (ab)use the finalize_features
    config op for this. This isn't enough to address all vhost devices since
    these do not get the features until FEATURES_OK, however it looks like
    the affected devices actually never handled the endianness for legacy
    mode correctly, so at least that's not a regression.
    
    No devices except virtio net and virtio blk seem to be affected.
    
    Long term the right thing to do is to fix the hypervisors.
    
    Cc: <stable@vger.kernel.org> #v4.11
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Fixes: 82e89ea077b9 ("virtio-blk: Add validation for block size in config space")
    Fixes: fe36cbe0671e ("virtio_net: clear MTU when out of range")
    Reported-by: markver@us.ibm.com
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Link: https://lore.kernel.org/r/20211011053921.1198936-1-pasic@linux.ibm.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e97c3fb5d0788c3daed0ccfc30819132c9b453e2
Author: Tomaz Solc <tomaz.solc@tablix.org>
Date:   Wed Oct 6 14:57:50 2021 +0200

    USB: serial: option: add prod. id for Quectel EG91
    
    commit c184accc4a42c7872dc8e8d0fc97a740dc61fe24 upstream.
    
    Adding support for Quectel EG91 LTE module.
    
    The interface layout is same as for EG95.
    
    usb-devices output:
    T:  Bus=01 Lev=02 Prnt=02 Port=00 Cnt=01 Dev#=  3 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0191 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    
    Interfaces:
    
    0: Diag
    1: GNSS
    2: AT-command interface/modem
    3: Modem
    4: QMI
    
    Signed-off-by: Tomaz Solc <tomaz.solc@tablix.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af18b129e060a1d65e2337ab3e30a3873453ac28
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Mon Oct 4 12:56:55 2021 +0200

    USB: serial: option: add Telit LE910Cx composition 0x1204
    
    commit f5a8a07edafed8bede17a95ef8940fe3a57a77d5 upstream.
    
    Add the following Telit LE910Cx composition:
    
    0x1204: tty, adb, mbim, tty, tty, tty, tty
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Link: https://lore.kernel.org/r/20211004105655.8515-1-dnlplm@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b1483f0f9c74db531ccee1ea787947c26c64588
Author: Yu-Tung Chang <mtwget@gmail.com>
Date:   Thu Sep 30 10:11:12 2021 +0800

    USB: serial: option: add Quectel EC200S-CN module support
    
    commit 2263eb7370060bdb0013bc14e1a7c9bf33617a55 upstream.
    
    Add usb product id of the Quectel EC200S-CN module.
    
    usb-devices output for 0x6002:
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  3 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=6002 Rev=03.18
    S:  Manufacturer=Android
    S:  Product=Android
    S:  SerialNumber=0000
    C:  #Ifs= 5 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=06 Prot=00 Driver=cdc_ether
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=cdc_ether
    I:  If#=0x2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    
    Signed-off-by: Yu-Tung Chang <mtwget@gmail.com>
    Link: https://lore.kernel.org/r/20210930021112.330396-1-mtwget@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d44e525dc475df3984e6e53a6642ec6bc67ed90
Author: Aleksander Morgado <aleksander@aleksander.es>
Date:   Thu Oct 7 14:25:01 2021 +0200

    USB: serial: qcserial: add EM9191 QDL support
    
    commit 11c52d250b34a0862edc29db03fbec23b30db6da upstream.
    
    When the module boots into QDL download mode it exposes the 1199:90d2
    ids, which can be mapped to the qcserial driver, and used to run
    firmware upgrades (e.g. with the qmi-firmware-update program).
    
      T:  Bus=01 Lev=03 Prnt=08 Port=03 Cnt=01 Dev#= 10 Spd=480 MxCh= 0
      D:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
      P:  Vendor=1199 ProdID=90d2 Rev=00.00
      S:  Manufacturer=Sierra Wireless, Incorporated
      S:  Product=Sierra Wireless EM9191
      S:  SerialNumber=8W0382004102A109
      C:  #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=2mA
      I:  If#=0x0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=10 Driver=qcserial
    
    Signed-off-by: Aleksander Morgado <aleksander@aleksander.es>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77558d69a2c844db9913f0d954c9425c5968395c
Author: Michael Cullen <michael@michaelcullen.name>
Date:   Fri Oct 15 13:17:50 2021 -0700

    Input: xpad - add support for another USB ID of Nacon GC-100
    
    commit 3378a07daa6cdd11e042797454c706d1c69f9ca6 upstream.
    
    The Nacon GX100XF is already mapped, but it seems there is a Nacon
    GC-100 (identified as NC5136Wht PCGC-100WHITE though I believe other
    colours exist) with a different USB ID when in XInput mode.
    
    Signed-off-by: Michael Cullen <michael@michaelcullen.name>
    Link: https://lore.kernel.org/r/20211015192051.5196-1-michael@michaelcullen.name
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e923bce31ffefe4f60edfc6b84f62d4a858f3676
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Oct 6 00:16:31 2021 +0200

    usb: musb: dsps: Fix the probe error path
    
    commit c2115b2b16421d93d4993f3fe4c520e91d6fe801 upstream.
    
    Commit 7c75bde329d7 ("usb: musb: musb_dsps: request_irq() after
    initializing musb") has inverted the calls to
    dsps_setup_optional_vbus_irq() and dsps_create_musb_pdev() without
    updating correctly the error path. dsps_create_musb_pdev() allocates and
    registers a new platform device which must be unregistered and freed
    with platform_device_unregister(), and this is missing upon
    dsps_setup_optional_vbus_irq() error.
    
    While on the master branch it seems not to trigger any issue, I observed
    a kernel crash because of a NULL pointer dereference with a v5.10.70
    stable kernel where the patch mentioned above was backported. With this
    kernel version, -EPROBE_DEFER is returned the first time
    dsps_setup_optional_vbus_irq() is called which triggers the probe to
    error out without unregistering the platform device. Unfortunately, on
    the Beagle Bone Black Wireless, the platform device still living in the
    system is being used by the USB Ethernet gadget driver, which during the
    boot phase triggers the crash.
    
    My limited knowledge of the musb world prevents me to revert this commit
    which was sent to silence a robot warning which, as far as I understand,
    does not make sense. The goal of this patch was to prevent an IRQ to
    fire before the platform device being registered. I think this cannot
    ever happen due to the fact that enabling the interrupts is done by the
    ->enable() callback of the platform musb device, and this platform
    device must be already registered in order for the core or any other
    user to use this callback.
    
    Hence, I decided to fix the error path, which might prevent future
    errors on mainline kernels while also fixing older ones.
    
    Fixes: 7c75bde329d7 ("usb: musb: musb_dsps: request_irq() after initializing musb")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/r/20211005221631.1529448-1-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 853985927c5629bbe43e3f1abb9a5c673b86bd61
Author: Zhang Jianhua <chris.zjh@huawei.com>
Date:   Thu Sep 23 10:53:40 2021 +0800

    efi: Change down_interruptible() in virt_efi_reset_system() to down_trylock()
    
    commit 38fa3206bf441911258e5001ac8b6738693f8d82 upstream.
    
    While reboot the system by sysrq, the following bug will be occur.
    
    BUG: sleeping function called from invalid context at kernel/locking/semaphore.c:90
    in_atomic(): 0, irqs_disabled(): 128, non_block: 0, pid: 10052, name: rc.shutdown
    CPU: 3 PID: 10052 Comm: rc.shutdown Tainted: G        W O      5.10.0 #1
    Call trace:
     dump_backtrace+0x0/0x1c8
     show_stack+0x18/0x28
     dump_stack+0xd0/0x110
     ___might_sleep+0x14c/0x160
     __might_sleep+0x74/0x88
     down_interruptible+0x40/0x118
     virt_efi_reset_system+0x3c/0xd0
     efi_reboot+0xd4/0x11c
     machine_restart+0x60/0x9c
     emergency_restart+0x1c/0x2c
     sysrq_handle_reboot+0x1c/0x2c
     __handle_sysrq+0xd0/0x194
     write_sysrq_trigger+0xbc/0xe4
     proc_reg_write+0xd4/0xf0
     vfs_write+0xa8/0x148
     ksys_write+0x6c/0xd8
     __arm64_sys_write+0x18/0x28
     el0_svc_common.constprop.3+0xe4/0x16c
     do_el0_svc+0x1c/0x2c
     el0_svc+0x20/0x30
     el0_sync_handler+0x80/0x17c
     el0_sync+0x158/0x180
    
    The reason for this problem is that irq has been disabled in
    machine_restart() and then it calls down_interruptible() in
    virt_efi_reset_system(), which would occur sleep in irq context,
    it is dangerous! Commit 99409b935c9a("locking/semaphore: Add
    might_sleep() to down_*() family") add might_sleep() in
    down_interruptible(), so the bug info is here. down_trylock()
    can solve this problem, cause there is no might_sleep.
    
    --------
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Zhang Jianhua <chris.zjh@huawei.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dca770d20f0e6ff4ede64211696b3553ec5d163
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Sep 1 08:33:19 2021 +0200

    efi/cper: use stack buffer for error record decoding
    
    commit b3a72ca80351917cc23f9e24c35f3c3979d3c121 upstream.
    
    Joe reports that using a statically allocated buffer for converting CPER
    error records into human readable text is probably a bad idea. Even
    though we are not aware of any actual issues, a stack buffer is clearly
    a better choice here anyway, so let's move the buffer into the stack
    frames of the two functions that refer to it.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Joe Perches <joe@perches.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbc03527872da4f4534d26076a0489711c7c3bab
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Sep 27 14:13:57 2021 +0200

    cb710: avoid NULL pointer subtraction
    
    commit 42641042c10c757fe10cc09088cf3f436cec5007 upstream.
    
    clang-14 complains about an unusual way of converting a pointer to
    an integer:
    
    drivers/misc/cb710/sgbuf2.c:50:15: error: performing pointer subtraction with a null pointer has undefined behavior [-Werror,-Wnull-pointer-subtraction]
            return ((ptr - NULL) & 3) != 0;
    
    Replace this with a normal cast to uintptr_t.
    
    Fixes: 5f5bac8272be ("mmc: Driver for CB710/720 memory card reader (MMC part)")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210927121408.939246-1-arnd@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c47709faa11395cebfed10bf9b0ffea3ce2f156a
Author: Nikolay Martynov <mar.kolya@gmail.com>
Date:   Fri Oct 8 12:25:47 2021 +0300

    xhci: Enable trust tx length quirk for Fresco FL11 USB controller
    
    commit ea0f69d8211963c4b2cc1998b86779a500adb502 upstream.
    
    Tested on SD5200T TB3 dock which has Fresco Logic FL1100 USB 3.0 Host
    Controller.
    Before this patch streaming video from USB cam made mouse and keyboard
    connected to the same USB bus unusable. Also video was jerky.
    With this patch streaming video doesn't have any effect on other
    periferals and video is smooth.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Nikolay Martynov <mar.kolya@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20211008092547.3996295-6-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62c182b5e763e5f4062e72678e72ce3e02dd4d1b
Author: Pavankumar Kondeti <pkondeti@codeaurora.org>
Date:   Fri Oct 8 12:25:46 2021 +0300

    xhci: Fix command ring pointer corruption while aborting a command
    
    commit ff0e50d3564f33b7f4b35cadeabd951d66cfc570 upstream.
    
    The command ring pointer is located at [6:63] bits of the command
    ring control register (CRCR). All the control bits like command stop,
    abort are located at [0:3] bits. While aborting a command, we read the
    CRCR and set the abort bit and write to the CRCR. The read will always
    give command ring pointer as all zeros. So we essentially write only
    the control bits. Since we split the 64 bit write into two 32 bit writes,
    there is a possibility of xHC command ring stopped before the upper
    dword (all zeros) is written. If that happens, xHC updates the upper
    dword of its internal command ring pointer with all zeros. Next time,
    when the command ring is restarted, we see xHC memory access failures.
    Fix this issue by only writing to the lower dword of CRCR where all
    control bits are located.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Pavankumar Kondeti <pkondeti@codeaurora.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20211008092547.3996295-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 310fa2019f5df297f7fa82bedfe2eba820cd61db
Author: Jonathan Bell <jonathan@raspberrypi.com>
Date:   Fri Oct 8 12:25:43 2021 +0300

    xhci: guard accesses to ep_state in xhci_endpoint_reset()
    
    commit a01ba2a3378be85538e0183ae5367c1bc1d5aaf3 upstream.
    
    See https://github.com/raspberrypi/linux/issues/3981
    
    Two read-modify-write cycles on ep->ep_state are not guarded by
    xhci->lock. Fix these.
    
    Fixes: f5249461b504 ("xhci: Clear the host side toggle manually when endpoint is soft reset")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonathan Bell <jonathan@raspberrypi.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20211008092547.3996295-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f67443c5faffde988543d0ebe16965a3812e1598
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Oct 1 20:36:44 2021 +0300

    mei: me: add Ice Lake-N device id.
    
    commit 75c10c5e7a715550afdd51ef8cfd1d975f48f9e1 upstream.
    
    Add Ice Lake-N device ID.
    
    The device can be found on MacBookPro16,2 [1].
    
    [1]: https://linux-hardware.org/?probe=f1c5cf0c43
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211001173644.16068-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f961a224e73138a93f4df8503ecd8c6928291c53
Author: James Morse <james.morse@arm.com>
Date:   Fri Sep 17 16:59:58 2021 +0000

    x86/resctrl: Free the ctrlval arrays when domain_setup_mon_state() fails
    
    commit 64e87d4bd3201bf8a4685083ee4daf5c0d001452 upstream.
    
    domain_add_cpu() is called whenever a CPU is brought online. The
    earlier call to domain_setup_ctrlval() allocates the control value
    arrays.
    
    If domain_setup_mon_state() fails, the control value arrays are not
    freed.
    
    Add the missing kfree() calls.
    
    Fixes: 1bd2a63b4f0de ("x86/intel_rdt/mba_sc: Add initialization support")
    Fixes: edf6fa1c4a951 ("x86/intel_rdt/cqm: Add RMID (Resource monitoring ID) management")
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Reinette Chatre <reinette.chatre@intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210917165958.28313-1-james.morse@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a262f5711aba89acaac59b1f8bb9629f3453da36
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 1 13:48:18 2021 +0100

    btrfs: check for error when looking up inode during dir entry replay
    
    commit cfd312695b71df04c3a2597859ff12c470d1e2e4 upstream.
    
    At replay_one_name(), we are treating any error from btrfs_lookup_inode()
    as if the inode does not exists. Fix this by checking for an error and
    returning it to the caller.
    
    CC: stable@vger.kernel.org # 4.14+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00c93450db581d5c83f3af9a6c169270e9cd863e
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 1 13:52:32 2021 +0100

    btrfs: deal with errors when adding inode reference during log replay
    
    commit 52db77791fe24538c8aa2a183248399715f6b380 upstream.
    
    At __inode_add_ref(), we treating any error returned from
    btrfs_lookup_dir_item() or from btrfs_lookup_dir_index_item() as meaning
    that there is no existing directory entry in the fs/subvolume tree.
    This is not correct since we can get errors such as, for example, -EIO
    when reading extent buffers while searching the fs/subvolume's btree.
    
    So fix that and return the error to the caller when it is not -ENOENT.
    
    CC: stable@vger.kernel.org # 4.14+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d733c5d59bed4e47e8688a70f9f7c9b819029d8
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 1 13:52:31 2021 +0100

    btrfs: deal with errors when replaying dir entry during log replay
    
    commit e15ac6413745e3def00e663de00aea5a717311c1 upstream.
    
    At replay_one_one(), we are treating any error returned from
    btrfs_lookup_dir_item() or from btrfs_lookup_dir_index_item() as meaning
    that there is no existing directory entry in the fs/subvolume tree.
    This is not correct since we can get errors such as, for example, -EIO
    when reading extent buffers while searching the fs/subvolume's btree.
    
    So fix that and return the error to the caller when it is not -ENOENT.
    
    CC: stable@vger.kernel.org # 4.14+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4331236e64dc38ef74956c337fa97935e3c80fe7
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Tue Oct 5 14:08:36 2021 +0200

    s390: fix strrchr() implementation
    
    commit 8e0ab8e26b72a80e991c66a8abc16e6c856abe3d upstream.
    
    Fix two problems found in the strrchr() implementation for s390
    architectures: evaluate empty strings (return the string address instead of
    NULL, if '\0' is passed as second argument); evaluate the first character
    of non-empty strings (the current implementation stops at the second).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Reported-by: Heiko Carstens <hca@linux.ibm.com> (incorrect behavior with empty strings)
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Link: https://lore.kernel.org/r/20211005120836.60630-1-roberto.sassu@huawei.com
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b25e0bf3cc59d7dd13771b1d4bc481aef0f37fe1
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Thu Oct 14 14:35:07 2021 -0400

    nds32/ftrace: Fix Error: invalid operands (*UND* and *UND* sections) for `^'
    
    commit be358af1191b1b2fedebd8f3421cafdc8edacc7d upstream.
    
    I received a build failure for a new patch I'm working on the nds32
    architecture, and when I went to test it, I couldn't get to my build error,
    because it failed to build with a bunch of:
    
      Error: invalid operands (*UND* and *UND* sections) for `^'
    
    issues with various files. Those files were temporary asm files that looked
    like:  kernel/.tmp_mc_fork.s
    
    I decided to look deeper, and found that the "mc" portion of that name
    stood for "mcount", and was created by the recordmcount.pl script. One that
    I wrote over a decade ago. Once I knew the source of the problem, I was
    able to investigate it further.
    
    The way the recordmcount.pl script works (BTW, there's a C version that
    simply modifies the ELF object) is by doing an "objdump" on the object
    file. Looks for all the calls to "mcount", and creates an offset of those
    locations from some global variable it can use (usually a global function
    name, found with <.*>:). Creates a asm file that is a table of references
    to these locations, using the found variable/function. Compiles it and
    links it back into the original object file. This asm file is called
    ".tmp_mc_<object_base_name>.s".
    
    The problem here is that the objdump produced by the nds32 object file,
    contains things that look like:
    
     0000159a <.L3^B1>:
        159a:       c6 00           beqz38 $r6, 159a <.L3^B1>
                            159a: R_NDS32_9_PCREL_RELA      .text+0x159e
        159c:       84 d2           movi55 $r6, #-14
        159e:       80 06           mov55 $r0, $r6
        15a0:       ec 3c           addi10.sp #0x3c
    
    Where ".L3^B1 is somehow selected as the "global" variable to index off of.
    
    Then the assembly file that holds the mcount locations looks like this:
    
            .section __mcount_loc,"a",@progbits
            .align 2
            .long .L3^B1 + -5522
            .long .L3^B1 + -5384
            .long .L3^B1 + -5270
            .long .L3^B1 + -5098
            .long .L3^B1 + -4970
            .long .L3^B1 + -4758
            .long .L3^B1 + -4122
            [...]
    
    And when it is compiled back to an object to link to the original object,
    the compile fails on the "^" symbol.
    
    Simple solution for now, is to have the perl script ignore using function
    symbols that have an "^" in the name.
    
    Link: https://lkml.kernel.org/r/20211014143507.4ad2c0f7@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Acked-by: Greentime Hu <green.hu@gmail.com>
    Fixes: fbf58a52ac088 ("nds32/ftrace: Add RECORD_MCOUNT support")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7ef5d15cf08f13dab451c46bd17fa975b03de98
Author: Kailang Yang <kailang@realtek.com>
Date:   Tue Oct 5 14:35:14 2021 +0800

    ALSA: hda/realtek - ALC236 headset MIC recording issue
    
    commit 5aec98913095ed3b4424ed6c5fdeb6964e9734da upstream.
    
    In power save mode, the recording voice from headset mic will 2s more delay.
    Add this patch will solve this issue.
    
    [ minor coding style fix by tiwai ]
    
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/ccb0cdd5bbd7486eabbd8d987d384cb0@realtek.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65811c5098832534851d7f3b5f04dec05c403e6d
Author: Werner Sembach <wse@tuxedocomputers.com>
Date:   Fri Oct 1 15:31:11 2021 +0200

    ALSA: hda/realtek: Add quirk for Clevo X170KM-G
    
    commit cc03069a397005da24f6783835c274d5aedf6043 upstream.
    
    This applies a SND_PCI_QUIRK(...) to the Clevo X170KM-G barebone. This
    fixes the issue of the devices internal Speaker not working.
    
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211001133111.428249-3-wse@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f30a2ba6bdfc39d065a7f1bec2c720c0ca0399e5
Author: Werner Sembach <wse@tuxedocomputers.com>
Date:   Fri Oct 1 15:31:10 2021 +0200

    ALSA: hda/realtek: Complete partial device name to avoid ambiguity
    
    commit 1f8d398e1cd8813f8ec16d55c086e8270a9c18ab upstream.
    
    The string "Clevo X170" is not enough to unambiguously identify the correct
    device.
    
    Fixing it so another Clevo barebone name starting with "X170" can be added
    without causing confusion.
    
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211001133111.428249-2-wse@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 811040415681e58cd66777e4bfa13b3848994e69
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Sep 30 13:41:14 2021 +0200

    ALSA: seq: Fix a potential UAF by wrong private_free call order
    
    commit 1f8763c59c4ec6254d629fe77c0a52220bd907aa upstream.
    
    John Keeping reported and posted a patch for a potential UAF in
    rawmidi sequencer destruction: the snd_rawmidi_dev_seq_free() may be
    called after the associated rawmidi object got already freed.
    After a deeper look, it turned out that the bug is rather the
    incorrect private_free call order for a snd_seq_device.  The
    snd_seq_device private_free gets called at the release callback of the
    sequencer device object, while this was rather expected to be executed
    at the snd_device call chains that runs at the beginning of the whole
    card-free procedure.  It's been broken since the rewrite of
    sequencer-device binding (although it hasn't surfaced because the
    sequencer device release happens usually right along with the card
    device release).
    
    This patch corrects the private_free call to be done in the right
    place, at snd_seq_device_dev_free().
    
    Fixes: 7c37ae5c625a ("ALSA: seq: Rewrite sequencer device binding with standard bus")
    Reported-and-tested-by: John Keeping <john@metanate.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210930114114.8645-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
