commit 1e6730483a6edd8f31becef8df0d0f9e2b258ae3
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 16 12:49:02 2022 +0100

    Linux 4.9.307
    
    Link: https://lore.kernel.org/r/20220314112730.388955049@linuxfoundation.org
    Link: https://lore.kernel.org/r/20220314145911.396358404@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43bfa08ba62a1ca7a22365c7092e491e04327efb
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Sep 14 14:57:59 2021 +0800

    btrfs: unlock newly allocated extent buffer after error
    
    commit 19ea40dddf1833db868533958ca066f368862211 upstream.
    
    [BUG]
    There is a bug report that injected ENOMEM error could leave a tree
    block locked while we return to user-space:
    
      BTRFS info (device loop0): enabling ssd optimizations
      FAULT_INJECTION: forcing a failure.
      name failslab, interval 1, probability 0, space 0, times 0
      CPU: 0 PID: 7579 Comm: syz-executor Not tainted 5.15.0-rc1 #16
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
      rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
      Call Trace:
       __dump_stack lib/dump_stack.c:88 [inline]
       dump_stack_lvl+0x8d/0xcf lib/dump_stack.c:106
       fail_dump lib/fault-inject.c:52 [inline]
       should_fail+0x13c/0x160 lib/fault-inject.c:146
       should_failslab+0x5/0x10 mm/slab_common.c:1328
       slab_pre_alloc_hook.constprop.99+0x4e/0xc0 mm/slab.h:494
       slab_alloc_node mm/slub.c:3120 [inline]
       slab_alloc mm/slub.c:3214 [inline]
       kmem_cache_alloc+0x44/0x280 mm/slub.c:3219
       btrfs_alloc_delayed_extent_op fs/btrfs/delayed-ref.h:299 [inline]
       btrfs_alloc_tree_block+0x38c/0x670 fs/btrfs/extent-tree.c:4833
       __btrfs_cow_block+0x16f/0x7d0 fs/btrfs/ctree.c:415
       btrfs_cow_block+0x12a/0x300 fs/btrfs/ctree.c:570
       btrfs_search_slot+0x6b0/0xee0 fs/btrfs/ctree.c:1768
       btrfs_insert_empty_items+0x80/0xf0 fs/btrfs/ctree.c:3905
       btrfs_new_inode+0x311/0xa60 fs/btrfs/inode.c:6530
       btrfs_create+0x12b/0x270 fs/btrfs/inode.c:6783
       lookup_open+0x660/0x780 fs/namei.c:3282
       open_last_lookups fs/namei.c:3352 [inline]
       path_openat+0x465/0xe20 fs/namei.c:3557
       do_filp_open+0xe3/0x170 fs/namei.c:3588
       do_sys_openat2+0x357/0x4a0 fs/open.c:1200
       do_sys_open+0x87/0xd0 fs/open.c:1216
       do_syscall_x64 arch/x86/entry/common.c:50 [inline]
       do_syscall_64+0x34/0xb0 arch/x86/entry/common.c:80
       entry_SYSCALL_64_after_hwframe+0x44/0xae
      RIP: 0033:0x46ae99
      Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48
      89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d
      01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
      RSP: 002b:00007f46711b9c48 EFLAGS: 00000246 ORIG_RAX: 0000000000000055
      RAX: ffffffffffffffda RBX: 000000000078c0a0 RCX: 000000000046ae99
      RDX: 0000000000000000 RSI: 00000000000000a1 RDI: 0000000020005800
      RBP: 00007f46711b9c80 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000017
      R13: 0000000000000000 R14: 000000000078c0a0 R15: 00007ffc129da6e0
    
      ================================================
      WARNING: lock held when returning to user space!
      5.15.0-rc1 #16 Not tainted
      ------------------------------------------------
      syz-executor/7579 is leaving the kernel with locks still held!
      1 lock held by syz-executor/7579:
       #0: ffff888104b73da8 (btrfs-tree-01/1){+.+.}-{3:3}, at:
      __btrfs_tree_lock+0x2e/0x1a0 fs/btrfs/locking.c:112
    
    [CAUSE]
    In btrfs_alloc_tree_block(), after btrfs_init_new_buffer(), the new
    extent buffer @buf is locked, but if later operations like adding
    delayed tree ref fail, we just free @buf without unlocking it,
    resulting above warning.
    
    [FIX]
    Unlock @buf in out_free_buf: label.
    
    Reported-by: Hao Sun <sunhao.th@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CACkBjsZ9O6Zr0KK1yGn=1rQi6Crh1yeCRdTSBxx9R99L4xdn-Q@mail.gmail.com/
    CC: stable@vger.kernel.org # 5.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Denis Efremov <denis.e.efremov@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7833a9b546775f9b2e3b327102b9e103c5ea2e72
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Fri Mar 11 17:13:17 2022 +0000

    ARM: fix Thumb2 regression with Spectre BHB
    
    commit 6c7cb60bff7aec24b834343ff433125f469886a3 upstream.
    
    When building for Thumb2, the vectors make use of a local label. Sadly,
    the Spectre BHB code also uses a local label with the same number which
    results in the Thumb2 reference pointing at the wrong place. Fix this
    by changing the number used for the Spectre BHB local label.
    
    Fixes: b9baf5c8c5c3 ("ARM: Spectre-BHB workaround")
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01b0a8c0479c9afff3b44a820ea3959f0b074f52
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Feb 27 23:23:49 2022 +0100

    batman-adv: Don't expect inter-netns unique iflink indices
    
    commit 6c1f41afc1dbe59d9d3c8bb0d80b749c119aa334 upstream.
    
    The ifindex doesn't have to be unique for multiple network namespaces on
    the same machine.
    
      $ ip netns add test1
      $ ip -net test1 link add dummy1 type dummy
      $ ip netns add test2
      $ ip -net test2 link add dummy2 type dummy
    
      $ ip -net test1 link show dev dummy1
      6: dummy1: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
          link/ether 96:81:55:1e:dd:85 brd ff:ff:ff:ff:ff:ff
      $ ip -net test2 link show dev dummy2
      6: dummy2: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000
          link/ether 5a:3c:af:35:07:c3 brd ff:ff:ff:ff:ff:ff
    
    But the batman-adv code to walk through the various layers of virtual
    interfaces uses this assumption because dev_get_iflink handles it
    internally and doesn't return the actual netns of the iflink. And
    dev_get_iflink only documents the situation where ifindex == iflink for
    physical devices.
    
    But only checking for dev->netdev_ops->ndo_get_iflink is also not an option
    because ipoib_get_iflink implements it even when it sometimes returns an
    iflink != ifindex and sometimes iflink == ifindex. The caller must
    therefore make sure itself to check both netns and iflink + ifindex for
    equality. Only when they are equal, a "physical" interface was detected
    which should stop the traversal. On the other hand, vxcan_get_iflink can
    also return 0 in case there was currently no valid peer. In this case, it
    is still necessary to stop.
    
    Fixes: b7eddd0b3950 ("batman-adv: prevent using any virtual device created on batman-adv as hard-interface")
    Fixes: 5ed4a460a1d3 ("batman-adv: additional checks for virtual interfaces on top of WiFi")
    Reported-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.9 backported: drop modification of non-existing batadv_get_real_netdevice. ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3e3c2578144580c58c423b304118d9d6a8bef56
Author: Sven Eckelmann <sven@narfation.org>
Date:   Mon Feb 28 00:01:24 2022 +0100

    batman-adv: Request iflink once in batadv-on-batadv check
    
    commit 690bb6fb64f5dc7437317153902573ecad67593d upstream.
    
    There is no need to call dev_get_iflink multiple times for the same
    net_device in batadv_is_on_batman_iface. And since some of the
    .ndo_get_iflink callbacks are dynamic (for example via RCUs like in
    vxcan_get_iflink), it could easily happen that the returned values are not
    stable. The pre-checks before __dev_get_by_index are then of course bogus.
    
    Fixes: b7eddd0b3950 ("batman-adv: prevent using any virtual device created on batman-adv as hard-interface")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [ bp: 4.9 backported: adjust context. ]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dc7b87c62423bfa68139fe95e85028aab584c9a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 28 10:43:31 2022 +0300

    staging: gdm724x: fix use after free in gdm_lte_rx()
    
    commit fc7f750dc9d102c1ed7bbe4591f991e770c99033 upstream.
    
    The netif_rx_ni() function frees the skb so we can't dereference it to
    save the skb->len.
    
    Fixes: 61e121047645 ("staging: gdm7240: adding LTE USB driver")
    Cc: stable <stable@vger.kernel.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20220228074331.GA13685@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55d2078cf0c1e3338d694e2c8c01df2a647f3460
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Mar 11 11:49:12 2022 -0800

    ARM: Spectre-BHB: provide empty stub for non-config
    
    commit 68453767131a5deec1e8f9ac92a9042f929e585d upstream.
    
    When CONFIG_GENERIC_CPU_VULNERABILITIES is not set, references
    to spectre_v2_update_state() cause a build error, so provide an
    empty stub for that function when the Kconfig option is not set.
    
    Fixes this build error:
    
      arm-linux-gnueabi-ld: arch/arm/mm/proc-v7-bugs.o: in function `cpu_v7_bugs_init':
      proc-v7-bugs.c:(.text+0x52): undefined reference to `spectre_v2_update_state'
      arm-linux-gnueabi-ld: proc-v7-bugs.c:(.text+0x82): undefined reference to `spectre_v2_update_state'
    
    Fixes: b9baf5c8c5c3 ("ARM: Spectre-BHB workaround")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: patches@armlinux.org.uk
    Acked-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 928fe20e8343efe0a8b66d1e34599d1382c1fd82
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Feb 25 19:11:26 2022 -0800

    selftests/memfd: clean up mapping in mfd_fail_write
    
    [ Upstream commit fda153c89af344d21df281009a9d046cf587ea0f ]
    
    Running the memfd script ./run_hugetlbfs_test.sh will often end in error
    as follows:
    
        memfd-hugetlb: CREATE
        memfd-hugetlb: BASIC
        memfd-hugetlb: SEAL-WRITE
        memfd-hugetlb: SEAL-FUTURE-WRITE
        memfd-hugetlb: SEAL-SHRINK
        fallocate(ALLOC) failed: No space left on device
        ./run_hugetlbfs_test.sh: line 60: 166855 Aborted                 (core dumped) ./memfd_test hugetlbfs
        opening: ./mnt/memfd
        fuse: DONE
    
    If no hugetlb pages have been preallocated, run_hugetlbfs_test.sh will
    allocate 'just enough' pages to run the test.  In the SEAL-FUTURE-WRITE
    test the mfd_fail_write routine maps the file, but does not unmap.  As a
    result, two hugetlb pages remain reserved for the mapping.  When the
    fallocate call in the SEAL-SHRINK test attempts allocate all hugetlb
    pages, it is short by the two reserved pages.
    
    Fix by making sure to unmap in mfd_fail_write.
    
    Link: https://lkml.kernel.org/r/20220219004340.56478-1-mike.kravetz@oracle.com
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Joel Fernandes <joel@joelfernandes.org>
    Cc: Shuah Khan <shuah@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f8ee5379bd59cad1353be0fc48e477000629c7d
Author: Sven Schnelle <svens@linux.ibm.com>
Date:   Mon Feb 14 14:44:56 2022 +0100

    tracing: Ensure trace buffer is at least 4096 bytes large
    
    [ Upstream commit 7acf3a127bb7c65ff39099afd78960e77b2ca5de ]
    
    Booting the kernel with 'trace_buf_size=1' give a warning at
    boot during the ftrace selftests:
    
    [    0.892809] Running postponed tracer tests:
    [    0.892893] Testing tracer function:
    [    0.901899] Callback from call_rcu_tasks_trace() invoked.
    [    0.983829] Callback from call_rcu_tasks_rude() invoked.
    [    1.072003] .. bad ring buffer .. corrupted trace buffer ..
    [    1.091944] Callback from call_rcu_tasks() invoked.
    [    1.097695] PASSED
    [    1.097701] Testing dynamic ftrace: .. filter failed count=0 ..FAILED!
    [    1.353474] ------------[ cut here ]------------
    [    1.353478] WARNING: CPU: 0 PID: 1 at kernel/trace/trace.c:1951 run_tracer_selftest+0x13c/0x1b0
    
    Therefore enforce a minimum of 4096 bytes to make the selftest pass.
    
    Link: https://lkml.kernel.org/r/20220214134456.1751749-1-svens@linux.ibm.com
    
    Signed-off-by: Sven Schnelle <svens@linux.ibm.com>
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 546b73615594b8741e8970aed86bd0a6cb3af87f
Author: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
Date:   Tue Feb 22 01:18:17 2022 +0100

    Revert "xen-netback: Check for hotplug-status existence before watching"
    
    [ Upstream commit e8240addd0a3919e0fd7436416afe9aa6429c484 ]
    
    This reverts commit 2afeec08ab5c86ae21952151f726bfe184f6b23d.
    
    The reasoning in the commit was wrong - the code expected to setup the
    watch even if 'hotplug-status' didn't exist. In fact, it relied on the
    watch being fired the first time - to check if maybe 'hotplug-status' is
    already set to 'connected'. Not registering a watch for non-existing
    path (which is the case if hotplug script hasn't been executed yet),
    made the backend not waiting for the hotplug script to execute. This in
    turns, made the netfront think the interface is fully operational, while
    in fact it was not (the vif interface on xen-netback side might not be
    configured yet).
    
    This was a workaround for 'hotplug-status' erroneously being removed.
    But since that is reverted now, the workaround is not necessary either.
    
    More discussion at
    https://lore.kernel.org/xen-devel/afedd7cb-a291-e773-8b0d-4db9b291fa98@ipxe.org/T/#u
    
    Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Reviewed-by: Paul Durrant <paul@xen.org>
    Reviewed-by: Michael Brown <mbrown@fensystems.co.uk>
    Link: https://lore.kernel.org/r/20220222001817.2264967-2-marmarek@invisiblethingslab.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7b9ab04c5932dee7ec95e0abc58b0df350c0dd2
Author: suresh kumar <suresh2514@gmail.com>
Date:   Thu Feb 17 07:25:18 2022 +0530

    net-sysfs: add check for netdevice being present to speed_show
    
    [ Upstream commit 4224cfd7fb6523f7a9d1c8bb91bb5df1e38eb624 ]
    
    When bringing down the netdevice or system shutdown, a panic can be
    triggered while accessing the sysfs path because the device is already
    removed.
    
        [  755.549084] mlx5_core 0000:12:00.1: Shutdown was called
        [  756.404455] mlx5_core 0000:12:00.0: Shutdown was called
        ...
        [  757.937260] BUG: unable to handle kernel NULL pointer dereference at           (null)
        [  758.031397] IP: [<ffffffff8ee11acb>] dma_pool_alloc+0x1ab/0x280
    
        crash> bt
        ...
        PID: 12649  TASK: ffff8924108f2100  CPU: 1   COMMAND: "amsd"
        ...
         #9 [ffff89240e1a38b0] page_fault at ffffffff8f38c778
            [exception RIP: dma_pool_alloc+0x1ab]
            RIP: ffffffff8ee11acb  RSP: ffff89240e1a3968  RFLAGS: 00010046
            RAX: 0000000000000246  RBX: ffff89243d874100  RCX: 0000000000001000
            RDX: 0000000000000000  RSI: 0000000000000246  RDI: ffff89243d874090
            RBP: ffff89240e1a39c0   R8: 000000000001f080   R9: ffff8905ffc03c00
            R10: ffffffffc04680d4  R11: ffffffff8edde9fd  R12: 00000000000080d0
            R13: ffff89243d874090  R14: ffff89243d874080  R15: 0000000000000000
            ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
        #10 [ffff89240e1a39c8] mlx5_alloc_cmd_msg at ffffffffc04680f3 [mlx5_core]
        #11 [ffff89240e1a3a18] cmd_exec at ffffffffc046ad62 [mlx5_core]
        #12 [ffff89240e1a3ab8] mlx5_cmd_exec at ffffffffc046b4fb [mlx5_core]
        #13 [ffff89240e1a3ae8] mlx5_core_access_reg at ffffffffc0475434 [mlx5_core]
        #14 [ffff89240e1a3b40] mlx5e_get_fec_caps at ffffffffc04a7348 [mlx5_core]
        #15 [ffff89240e1a3bb0] get_fec_supported_advertised at ffffffffc04992bf [mlx5_core]
        #16 [ffff89240e1a3c08] mlx5e_get_link_ksettings at ffffffffc049ab36 [mlx5_core]
        #17 [ffff89240e1a3ce8] __ethtool_get_link_ksettings at ffffffff8f25db46
        #18 [ffff89240e1a3d48] speed_show at ffffffff8f277208
        #19 [ffff89240e1a3dd8] dev_attr_show at ffffffff8f0b70e3
        #20 [ffff89240e1a3df8] sysfs_kf_seq_show at ffffffff8eedbedf
        #21 [ffff89240e1a3e18] kernfs_seq_show at ffffffff8eeda596
        #22 [ffff89240e1a3e28] seq_read at ffffffff8ee76d10
        #23 [ffff89240e1a3e98] kernfs_fop_read at ffffffff8eedaef5
        #24 [ffff89240e1a3ed8] vfs_read at ffffffff8ee4e3ff
        #25 [ffff89240e1a3f08] sys_read at ffffffff8ee4f27f
        #26 [ffff89240e1a3f50] system_call_fastpath at ffffffff8f395f92
    
        crash> net_device.state ffff89443b0c0000
          state = 0x5  (__LINK_STATE_START| __LINK_STATE_NOCARRIER)
    
    To prevent this scenario, we also make sure that the netdevice is present.
    
    Signed-off-by: suresh kumar <suresh2514@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fc0fd724d199e061432b66a8d85b7d48fe485f7
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 9 16:11:45 2022 -0800

    sctp: fix kernel-infoleak for SCTP sockets
    
    [ Upstream commit 633593a808980f82d251d0ca89730d8bb8b0220c ]
    
    syzbot reported a kernel infoleak [1] of 4 bytes.
    
    After analysis, it turned out r->idiag_expires is not initialized
    if inet_sctp_diag_fill() calls inet_diag_msg_common_fill()
    
    Make sure to clear idiag_timer/idiag_retrans/idiag_expires
    and let inet_diag_msg_sctpasoc_fill() fill them again if needed.
    
    [1]
    
    BUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:121 [inline]
    BUG: KMSAN: kernel-infoleak in copyout lib/iov_iter.c:154 [inline]
    BUG: KMSAN: kernel-infoleak in _copy_to_iter+0x6ef/0x25a0 lib/iov_iter.c:668
     instrument_copy_to_user include/linux/instrumented.h:121 [inline]
     copyout lib/iov_iter.c:154 [inline]
     _copy_to_iter+0x6ef/0x25a0 lib/iov_iter.c:668
     copy_to_iter include/linux/uio.h:162 [inline]
     simple_copy_to_iter+0xf3/0x140 net/core/datagram.c:519
     __skb_datagram_iter+0x2d5/0x11b0 net/core/datagram.c:425
     skb_copy_datagram_iter+0xdc/0x270 net/core/datagram.c:533
     skb_copy_datagram_msg include/linux/skbuff.h:3696 [inline]
     netlink_recvmsg+0x669/0x1c80 net/netlink/af_netlink.c:1977
     sock_recvmsg_nosec net/socket.c:948 [inline]
     sock_recvmsg net/socket.c:966 [inline]
     __sys_recvfrom+0x795/0xa10 net/socket.c:2097
     __do_sys_recvfrom net/socket.c:2115 [inline]
     __se_sys_recvfrom net/socket.c:2111 [inline]
     __x64_sys_recvfrom+0x19d/0x210 net/socket.c:2111
     do_syscall_x64 arch/x86/entry/common.c:51 [inline]
     do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:737 [inline]
     slab_alloc_node mm/slub.c:3247 [inline]
     __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4975
     kmalloc_reserve net/core/skbuff.c:354 [inline]
     __alloc_skb+0x545/0xf90 net/core/skbuff.c:426
     alloc_skb include/linux/skbuff.h:1158 [inline]
     netlink_dump+0x3e5/0x16c0 net/netlink/af_netlink.c:2248
     __netlink_dump_start+0xcf8/0xe90 net/netlink/af_netlink.c:2373
     netlink_dump_start include/linux/netlink.h:254 [inline]
     inet_diag_handler_cmd+0x2e7/0x400 net/ipv4/inet_diag.c:1341
     sock_diag_rcv_msg+0x24a/0x620
     netlink_rcv_skb+0x40c/0x7e0 net/netlink/af_netlink.c:2494
     sock_diag_rcv+0x63/0x80 net/core/sock_diag.c:277
     netlink_unicast_kernel net/netlink/af_netlink.c:1317 [inline]
     netlink_unicast+0x1093/0x1360 net/netlink/af_netlink.c:1343
     netlink_sendmsg+0x14d9/0x1720 net/netlink/af_netlink.c:1919
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     sock_write_iter+0x594/0x690 net/socket.c:1061
     do_iter_readv_writev+0xa7f/0xc70
     do_iter_write+0x52c/0x1500 fs/read_write.c:851
     vfs_writev fs/read_write.c:924 [inline]
     do_writev+0x645/0xe00 fs/read_write.c:967
     __do_sys_writev fs/read_write.c:1040 [inline]
     __se_sys_writev fs/read_write.c:1037 [inline]
     __x64_sys_writev+0xe5/0x120 fs/read_write.c:1037
     do_syscall_x64 arch/x86/entry/common.c:51 [inline]
     do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Bytes 68-71 of 2508 are uninitialized
    Memory access of size 2508 starts at ffff888114f9b000
    Data copied to user address 00007f7fe09ff2e0
    
    CPU: 1 PID: 3478 Comm: syz-executor306 Not tainted 5.17.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 8f840e47f190 ("sctp: add the sctp_diag.c file")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Cc: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/20220310001145.297371-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c9a947a6818b3b0c52c49e40eceede597602e78
Author: Mark Featherston <mark@embeddedTS.com>
Date:   Wed Mar 9 17:16:16 2022 -0800

    gpio: ts4900: Do not set DAT and OE together
    
    [ Upstream commit 03fe003547975680fdb9ff5ab0e41cb68276c4f2 ]
    
    This works around an issue with the hardware where both OE and
    DAT are exposed in the same register. If both are updated
    simultaneously, the harware makes no guarantees that OE or DAT
    will actually change in any given order and may result in a
    glitch of a few ns on a GPIO pin when changing direction and value
    in a single write.
    
    Setting direction to input now only affects OE bit. Setting
    direction to output updates DAT first, then OE.
    
    Fixes: 9c6686322d74 ("gpio: add Technologic I2C-FPGA gpio support")
    Signed-off-by: Mark Featherston <mark@embeddedTS.com>
    Signed-off-by: Kris Bahnsen <kris@embeddedTS.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 205c4ec78e71cbf561794e6043da80e7bae6790f
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Tue Mar 8 21:50:07 2022 +0300

    NFC: port100: fix use-after-free in port100_send_complete
    
    [ Upstream commit f80cfe2f26581f188429c12bd937eb905ad3ac7b ]
    
    Syzbot reported UAF in port100_send_complete(). The root case is in
    missing usb_kill_urb() calls on error handling path of ->probe function.
    
    port100_send_complete() accesses devm allocated memory which will be
    freed on probe failure. We should kill this urbs before returning an
    error from probe function to prevent reported use-after-free
    
    Fail log:
    
    BUG: KASAN: use-after-free in port100_send_complete+0x16e/0x1a0 drivers/nfc/port100.c:935
    Read of size 1 at addr ffff88801bb59540 by task ksoftirqd/2/26
    ...
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     print_address_description.constprop.0.cold+0x8d/0x303 mm/kasan/report.c:255
     __kasan_report mm/kasan/report.c:442 [inline]
     kasan_report.cold+0x83/0xdf mm/kasan/report.c:459
     port100_send_complete+0x16e/0x1a0 drivers/nfc/port100.c:935
     __usb_hcd_giveback_urb+0x2b0/0x5c0 drivers/usb/core/hcd.c:1670
    
    ...
    
    Allocated by task 1255:
     kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
     kasan_set_track mm/kasan/common.c:45 [inline]
     set_alloc_info mm/kasan/common.c:436 [inline]
     ____kasan_kmalloc mm/kasan/common.c:515 [inline]
     ____kasan_kmalloc mm/kasan/common.c:474 [inline]
     __kasan_kmalloc+0xa6/0xd0 mm/kasan/common.c:524
     alloc_dr drivers/base/devres.c:116 [inline]
     devm_kmalloc+0x96/0x1d0 drivers/base/devres.c:823
     devm_kzalloc include/linux/device.h:209 [inline]
     port100_probe+0x8a/0x1320 drivers/nfc/port100.c:1502
    
    Freed by task 1255:
     kasan_save_stack+0x1e/0x40 mm/kasan/common.c:38
     kasan_set_track+0x21/0x30 mm/kasan/common.c:45
     kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:370
     ____kasan_slab_free mm/kasan/common.c:366 [inline]
     ____kasan_slab_free+0xff/0x140 mm/kasan/common.c:328
     kasan_slab_free include/linux/kasan.h:236 [inline]
     __cache_free mm/slab.c:3437 [inline]
     kfree+0xf8/0x2b0 mm/slab.c:3794
     release_nodes+0x112/0x1a0 drivers/base/devres.c:501
     devres_release_all+0x114/0x190 drivers/base/devres.c:530
     really_probe+0x626/0xcc0 drivers/base/dd.c:670
    
    Reported-and-tested-by: syzbot+16bcb127fb73baeecb14@syzkaller.appspotmail.com
    Fixes: 0347a6ab300a ("NFC: port100: Commands mechanism implementation")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20220308185007.6987-1-paskripkin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2f9a69c136bab845f335ac87c6436f09754a205
Author: Mohammad Kabat <mohammadkab@nvidia.com>
Date:   Thu Mar 25 14:38:55 2021 +0200

    net/mlx5: Fix size field in bufferx_reg struct
    
    [ Upstream commit ac77998b7ac3044f0509b097da9637184598980d ]
    
    According to HW spec the field "size" should be 16 bits
    in bufferx register.
    
    Fixes: e281682bf294 ("net/mlx5_core: HW data structs/types definitions cleanup")
    Signed-off-by: Mohammad Kabat <mohammadkab@nvidia.com>
    Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cad71f1094834eb69f7ceec8100d300c26b43053
Author: Duoming Zhou <duoming@zju.edu.cn>
Date:   Tue Mar 8 16:12:23 2022 +0800

    ax25: Fix NULL pointer dereference in ax25_kill_by_device
    
    [ Upstream commit 71171ac8eb34ce7fe6b3267dce27c313ab3cb3ac ]
    
    When two ax25 devices attempted to establish connection, the requester use ax25_create(),
    ax25_bind() and ax25_connect() to initiate connection. The receiver use ax25_rcv() to
    accept connection and use ax25_create_cb() in ax25_rcv() to create ax25_cb, but the
    ax25_cb->sk is NULL. When the receiver is detaching, a NULL pointer dereference bug
    caused by sock_hold(sk) in ax25_kill_by_device() will happen. The corresponding
    fail log is shown below:
    
    ===============================================================
    BUG: KASAN: null-ptr-deref in ax25_device_event+0xfd/0x290
    Call Trace:
    ...
    ax25_device_event+0xfd/0x290
    raw_notifier_call_chain+0x5e/0x70
    dev_close_many+0x174/0x220
    unregister_netdevice_many+0x1f7/0xa60
    unregister_netdevice_queue+0x12f/0x170
    unregister_netdev+0x13/0x20
    mkiss_close+0xcd/0x140
    tty_ldisc_release+0xc0/0x220
    tty_release_struct+0x17/0xa0
    tty_release+0x62d/0x670
    ...
    
    This patch add condition check in ax25_kill_by_device(). If s->sk is
    NULL, it will goto if branch to kill device.
    
    Fixes: 4e0f718daf97 ("ax25: improve the incomplete fix to avoid UAF and NPD bugs")
    Reported-by: Thomas Osterried <thomas@osterried.de>
    Signed-off-by: Duoming Zhou <duoming@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ae3a7ee10c49908f3d0c979a6482848e8394c44
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Mar 8 14:57:39 2022 +0800

    net: ethernet: lpc_eth: Handle error for clk_enable
    
    [ Upstream commit 2169b79258c8be803d2595d6456b1e77129fe154 ]
    
    As the potential failure of the clk_enable(),
    it should be better to check it and return error
    if fails.
    
    Fixes: b7370112f519 ("lpc32xx: Added ethernet driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 669172ce976608b25a2f76f3c65d47f042d125c9
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Tue Mar 8 02:47:49 2022 +0000

    ethernet: Fix error handling in xemaclite_of_probe
    
    [ Upstream commit b19ab4b38b06aae12442b2de95ccf58b5dc53584 ]
    
    This node pointer is returned by of_parse_phandle() with refcount
    incremented in this function. Calling of_node_put() to avoid the
    refcount leak. As the remove function do.
    
    Fixes: 5cdaaa12866e ("net: emaclite: adding MDIO and phy lib support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20220308024751.2320-1-linmq006@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d8823af9571f0213724cd7dcff9ad4a0caf75b0
Author: Tom Rix <trix@redhat.com>
Date:   Sat Mar 5 07:06:42 2022 -0800

    qed: return status of qed_iov_get_link
    
    [ Upstream commit d9dc0c84ad2d4cc911ba252c973d1bf18d5eb9cf ]
    
    Clang static analysis reports this issue
    qed_sriov.c:4727:19: warning: Assigned value is
      garbage or undefined
      ivi->max_tx_rate = tx_rate ? tx_rate : link.speed;
                       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    link is only sometimes set by the call to qed_iov_get_link()
    qed_iov_get_link fails without setting link or returning
    status.  So change the decl to return status.
    
    Fixes: 73390ac9d82b ("qed*: support ndo_get_vf_config")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd742dd05b5449b8de13e99c7c452e02dd8fb859
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sat Mar 5 01:14:11 2022 -0800

    net: qlogic: check the return value of dma_alloc_coherent() in qed_vf_hw_prepare()
    
    [ Upstream commit e0058f0fa80f6e09c4d363779c241c45a3c56b94 ]
    
    The function dma_alloc_coherent() in qed_vf_hw_prepare() can fail, so
    its return value should be checked.
    
    Fixes: 1408cc1fa48c ("qed: Introduce VFs")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
