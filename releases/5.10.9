commit e2d133180bbc28a48316e67a003796885580b087
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jan 19 18:27:34 2021 +0100

    Linux 5.10.9
    
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210118113352.764293297@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88a5c90f39b0f8f4a747f24bb68d8b22d558daa7
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sat Jan 9 20:01:21 2021 +0800

    netfilter: nf_nat: Fix memleak in nf_nat_init
    
    commit 869f4fdaf4ca7bb6e0d05caf6fa1108dddc346a7 upstream.
    
    When register_pernet_subsys() fails, nf_nat_bysource
    should be freed just like when nf_ct_extend_register()
    fails.
    
    Fixes: 1cd472bf036ca ("netfilter: nf_nat: add nat hook register functions to nf_nat")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f14e31c169dc689f47929bc3729ac019eea02d89
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Fri Jan 8 12:44:33 2021 +0100

    netfilter: conntrack: fix reading nf_conntrack_buckets
    
    commit f6351c3f1c27c80535d76cac2299aec44c36291e upstream.
    
    The old way of changing the conntrack hashsize runtime was through changing
    the module param via file /sys/module/nf_conntrack/parameters/hashsize. This
    was extended to sysctl change in commit 3183ab8997a4 ("netfilter: conntrack:
    allow increasing bucket size via sysctl too").
    
    The commit introduced second "user" variable nf_conntrack_htable_size_user
    which shadow actual variable nf_conntrack_htable_size. When hashsize is
    changed via module param this "user" variable isn't updated. This results in
    sysctl net/netfilter/nf_conntrack_buckets shows the wrong value when users
    update via the old way.
    
    This patch fix the issue by always updating "user" variable when reading the
    proc file. This will take care of changes to the actual variable without
    sysctl need to be aware.
    
    Fixes: 3183ab8997a4 ("netfilter: conntrack: allow increasing bucket size via sysctl too")
    Reported-by: Yoel Caspersen <yoel@kviknet.dk>
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b984e538bdf2a9ba1c1b147c35ee191953f2b86
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 11 14:02:51 2021 +0100

    ALSA: firewire-tascam: Fix integer overflow in midi_port_work()
    
    commit 9f65df9c589f249435255da37a5dd11f1bc86f4d upstream.
    
    As snd_fw_async_midi_port.consume_bytes is unsigned int, and
    NSEC_PER_SEC is 1000000000L, the second multiplication in
    
        port->consume_bytes * 8 * NSEC_PER_SEC / 31250
    
    always overflows on 32-bit platforms, truncating the result.  Fix this
    by precalculating "NSEC_PER_SEC / 31250", which is an integer constant.
    
    Note that this assumes port->consume_bytes <= 16777.
    
    Fixes: 531f471834227d03 ("ALSA: firewire-lib/firewire-tascam: localize async midi port")
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20210111130251.361335-3-geert+renesas@glider.be
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0e1ac275f1f617a36d5d187c919985842249136
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 11 14:02:50 2021 +0100

    ALSA: fireface: Fix integer overflow in transmit_midi_msg()
    
    commit e7c22eeaff8565d9a8374f320238c251ca31480b upstream.
    
    As snd_ff.rx_bytes[] is unsigned int, and NSEC_PER_SEC is 1000000000L,
    the second multiplication in
    
        ff->rx_bytes[port] * 8 * NSEC_PER_SEC / 31250
    
    always overflows on 32-bit platforms, truncating the result.  Fix this
    by precalculating "NSEC_PER_SEC / 31250", which is an integer constant.
    
    Note that this assumes ff->rx_bytes[port] <= 16777.
    
    Fixes: 19174295788de77d ("ALSA: fireface: add transaction support")
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20210111130251.361335-2-geert+renesas@glider.be
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0eb56457d239f5ee555ad9dc0c086a0abd933f1b
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Wed Jan 6 18:19:05 2021 -0500

    dm: eliminate potential source of excessive kernel log noise
    
    commit 0378c625afe80eb3f212adae42cc33c9f6f31abf upstream.
    
    There wasn't ever a real need to log an error in the kernel log for
    ioctls issued with insufficient permissions. Simply return an error
    and if an admin/user is sufficiently motivated they can enable DM's
    dynamic debugging to see an explanation for why the ioctls were
    disallowed.
    
    Reported-by: Nir Soffer <nsoffer@redhat.com>
    Fixes: e980f62353c6 ("dm: don't allow ioctls to targets that don't map to whole devices")
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26865769ed8f03c49106c3e2e588733ca55c3525
Author: Chen Yi <yiche@redhat.com>
Date:   Tue Jan 5 23:31:20 2021 +0800

    selftests: netfilter: Pass family parameter "-f" to conntrack tool
    
    commit fab336b42441e0b2eb1d81becedb45fbdf99606e upstream.
    
    Fix nft_conntrack_helper.sh false fail report:
    
    1) Conntrack tool need "-f ipv6" parameter to show out ipv6 traffic items.
    
    2) Sleep 1 second after background nc send packet, to make sure check
    is after this statement executed.
    
    False report:
    FAIL: ns1-lkjUemYw did not show attached helper ip set via ruleset
    PASS: ns1-lkjUemYw connection on port 2121 has ftp helper attached
    ...
    
    After fix:
    PASS: ns1-2hUniwU2 connection on port 2121 has ftp helper attached
    PASS: ns2-2hUniwU2 connection on port 2121 has ftp helper attached
    ...
    
    Fixes: 619ae8e0697a6 ("selftests: netfilter: add test case for conntrack helper assignment")
    Signed-off-by: Chen Yi <yiche@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0cd3fba4eaeecac987bd490ad5efc6e54507511
Author: j.nixdorf@avm.de <j.nixdorf@avm.de>
Date:   Tue Jan 5 15:17:01 2021 +0100

    net: sunrpc: interpret the return value of kstrtou32 correctly
    
    commit 86b53fbf08f48d353a86a06aef537e78e82ba721 upstream.
    
    A return value of 0 means success. This is documented in lib/kstrtox.c.
    
    This was found by trying to mount an NFS share from a link-local IPv6
    address with the interface specified by its index:
    
      mount("[fe80::1%1]:/srv/nfs", "/mnt", "nfs", 0, "nolock,addr=fe80::1%1")
    
    Before this commit this failed with EINVAL and also caused the following
    message in dmesg:
    
      [...] NFS: bad IP address specified: addr=fe80::1%1
    
    The syscall using the same address based on the interface name instead
    of its index succeeds.
    
    Credits for this patch go to my colleague Christian Speich, who traced
    the origin of this bug to this line of code.
    
    Signed-off-by: Johannes Nixdorf <j.nixdorf@avm.de>
    Fixes: 00cfaa943ec3 ("replace strict_strto calls")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9bc9c9320accce897e82147c61c63d5d00b28e2
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Thu Dec 31 08:53:20 2020 +0800

    iommu/vt-d: Fix unaligned addresses for intel_flush_svm_range_dev()
    
    commit 2d6ffc63f12417b979955a5b22ad9a76d2af5de9 upstream.
    
    The VT-d hardware will ignore those Addr bits which have been masked by
    the AM field in the PASID-based-IOTLB invalidation descriptor. As the
    result, if the starting address in the descriptor is not aligned with
    the address mask, some IOTLB caches might not invalidate. Hence people
    will see below errors.
    
    [ 1093.704661] dmar_fault: 29 callbacks suppressed
    [ 1093.704664] DMAR: DRHD: handling fault status reg 3
    [ 1093.712738] DMAR: [DMA Read] Request device [7a:02.0] PASID 2
                   fault addr 7f81c968d000 [fault reason 113]
                   SM: Present bit in first-level paging entry is clear
    
    Fix this by using aligned address for PASID-based-IOTLB invalidation.
    
    Fixes: 1c4f88b7f1f9 ("iommu/vt-d: Shared virtual address in scalable mode")
    Reported-and-tested-by: Guo Kaijie <Kaijie.Guo@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20201231005323.2178523-2-baolu.lu@linux.intel.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff2ca5439c50456e09c11be187048f840df490f2
Author: Atish Patra <atish.patra@wdc.com>
Date:   Fri Dec 18 16:20:51 2020 -0800

    riscv: Trace irq on only interrupt is enabled
    
    commit 7cd1af107a92eb63b93a96dc07406dcbc5269436 upstream.
    
    We should call irq trace only if interrupt is going to be enabled during
    excecption handling. Otherwise, it results in following warning during
    boot with lock debugging enabled.
    
    [    0.000000] ------------[ cut here ]------------
    [    0.000000] DEBUG_LOCKS_WARN_ON(early_boot_irqs_disabled)
    [    0.000000] WARNING: CPU: 0 PID: 0 at kernel/locking/lockdep.c:4085 lockdep_hardirqs_on_prepare+0x22a/0x22e
    [    0.000000] Modules linked in:
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 5.10.0-00022-ge20097fb37e2-dirty #548
    [    0.000000] epc: c005d5d4 ra : c005d5d4 sp : c1c01e80
    [    0.000000]  gp : c1d456e0 tp : c1c0a980 t0 : 00000000
    [    0.000000]  t1 : ffffffff t2 : 00000000 s0 : c1c01ea0
    [    0.000000]  s1 : c100f360 a0 : 0000002d a1 : c00666ee
    [    0.000000]  a2 : 00000000 a3 : 00000000 a4 : 00000000
    [    0.000000]  a5 : 00000000 a6 : c1c6b390 a7 : 3ffff00e
    [    0.000000]  s2 : c2384fe8 s3 : 00000000 s4 : 00000001
    [    0.000000]  s5 : c1c0a980 s6 : c1d48000 s7 : c1613b4c
    [    0.000000]  s8 : 00000fff s9 : 80000200 s10: c1613b40
    [    0.000000]  s11: 00000000 t3 : 00000000 t4 : 00000000
    [    0.000000]  t5 : 00000001 t6 : 00000000
    
    Fixes: 3c4697982982 ("riscv:Enable LOCKDEP_SUPPORT & fixup TRACE_IRQFLAGS_SUPPORT")
    
    Signed-off-by: Atish Patra <atish.patra@wdc.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8c01da728ef65ad20d26a338819639a2ee25a13
Author: Jann Horn <jannh@google.com>
Date:   Tue Jan 12 15:49:04 2021 -0800

    mm, slub: consider rest of partial list if acquire_slab() fails
    
    commit 8ff60eb052eeba95cfb3efe16b08c9199f8121cf upstream.
    
    acquire_slab() fails if there is contention on the freelist of the page
    (probably because some other CPU is concurrently freeing an object from
    the page).  In that case, it might make sense to look for a different page
    (since there might be more remote frees to the page from other CPUs, and
    we don't want contention on struct page).
    
    However, the current code accidentally stops looking at the partial list
    completely in that case.  Especially on kernels without CONFIG_NUMA set,
    this means that get_partial() fails and new_slab_objects() falls back to
    new_slab(), allocating new pages.  This could lead to an unnecessary
    increase in memory fragmentation.
    
    Link: https://lkml.kernel.org/r/20201228130853.1871516-1-jannh@google.com
    Fixes: 7ced37197196 ("slub: Acquire_slab() avoid loop")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Acked-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecca0c675bdecebdeb2f2eb76fb33520c441dacf
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Jan 11 22:52:19 2021 +0000

    drm/i915/gt: Restore clear-residual mitigations for Ivybridge, Baytrail
    
    commit 09aa9e45863e9e25dfbf350bae89fc3c2964482c upstream.
    
    The mitigation is required for all gen7 platforms, now that it does not
    cause GPU hangs, restore it for Ivybridge and Baytrail.
    
    Fixes: 47f8253d2b89 ("drm/i915/gen7: Clear all EU/L3 residual contexts")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Cc: Prathap Kumar Valsan <prathap.kumar.valsan@intel.com>
    Cc: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
    Cc: Bloomfield Jon <jon.bloomfield@intel.com>
    Reviewed-by: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210111225220.3483-2-chris@chris-wilson.co.uk
    (cherry picked from commit 008ead6ef8f588a8c832adfe9db201d9be5fd410)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de3f572607c29f7fdd1bfd754646d08e32db0249
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Dec 9 17:39:52 2020 +0200

    drm/i915/icl: Fix initing the DSI DSC power refcount during HW readout
    
    commit 2af5268180410b874fc06be91a1b2fbb22b1be0c upstream.
    
    For an enabled DSC during HW readout the corresponding power reference
    is taken along the CRTC power domain references in
    get_crtc_power_domains(). Remove the incorrect get ref from the DSI
    encoder hook.
    
    Fixes: 2b68392e638d ("drm/i915/dsi: add support for DSC")
    Cc: Vandita Kulkarni <vandita.kulkarni@intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Anshuman Gupta <anshuman.gupta@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201209153952.3397959-1-imre.deak@intel.com
    (cherry picked from commit 3a9ec563a4ff770ae647f6ee539810f1866866c9)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54c9246a47fa8559c3ec6da2048e976a4b8750f6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Nov 18 13:40:58 2020 +0100

    drm/i915/dsi: Use unconditional msleep for the panel_on_delay when there is no reset-deassert MIPI-sequence
    
    commit 00cb645fd7e29bdd20967cd20fa8f77bcdf422f9 upstream.
    
    Commit 25b4620ee822 ("drm/i915/dsi: Skip delays for v3 VBTs in vid-mode")
    added an intel_dsi_msleep() helper which skips sleeping if the
    MIPI-sequences have a version of 3 or newer and the panel is in vid-mode;
    and it moved a bunch of msleep-s over to this new helper.
    
    This was based on my reading of the big comment around line 730 which
    starts with "Panel enable/disable sequences from the VBT spec.",
    where the "v3 video mode seq" column does not have any wait t# entries.
    
    Given that this code has been used on a lot of different devices without
    issues until now, it seems that my interpretation of the spec here is
    mostly correct.
    
    But now I have encountered one device, an Acer Aspire Switch 10 E
    SW3-016, where the panel will not light up unless we do actually honor the
    panel_on_delay after exexuting the MIPI_SEQ_PANEL_ON sequence.
    
    What seems to set this model apart is that it is lacking a
    MIPI_SEQ_DEASSERT_RESET sequence, which is where the power-on
    delay usually happens.
    
    Fix the panel not lighting up on this model by using an unconditional
    msleep(panel_on_delay) instead of intel_dsi_msleep() when there is
    no MIPI_SEQ_DEASSERT_RESET sequence.
    
    Fixes: 25b4620ee822 ("drm/i915/dsi: Skip delays for v3 VBTs in vid-mode")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201118124058.26021-1-hdegoede@redhat.com
    (cherry picked from commit 6fdb335f1c9c0845b50625de1624d8445c4c4a07)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6de06406411bfae3c1b7d4dad3fbab10a81e426
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sun Jan 3 22:40:51 2021 +0100

    dm zoned: select CONFIG_CRC32
    
    commit b690bd546b227c32b860dae985a18bed8aa946fe upstream.
    
    Without crc32 support, this driver fails to link:
    
    arm-linux-gnueabi-ld: drivers/md/dm-zoned-metadata.o: in function `dmz_write_sb':
    dm-zoned-metadata.c:(.text+0xe98): undefined reference to `crc32_le'
    arm-linux-gnueabi-ld: drivers/md/dm-zoned-metadata.o: in function `dmz_check_sb':
    dm-zoned-metadata.c:(.text+0x7978): undefined reference to `crc32_le'
    
    Fixes: 3b1a94c88b79 ("dm zoned: drive-managed zoned block device target")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6dc4f8e617b4c12c519d2e01305fe5e3343f01d
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Jan 4 15:25:34 2021 -0500

    umount(2): move the flag validity checks first
    
    commit a0a6df9afcaf439a6b4c88a3b522e3d05fdef46f upstream.
    
    Unfortunately, there's userland code that used to rely upon these
    checks being done before anything else to check for UMOUNT_NOFOLLOW
    support.  That broke in 41525f56e256 ("fs: refactor ksys_umount").
    Separate those from the rest of checks and move them to ksys_umount();
    unlike everything else in there, this can be sanely done there.
    
    Reported-by: Sargun Dhillon <sargun@sargun.me>
    Fixes: 41525f56e256 ("fs: refactor ksys_umount")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cd483a7e78800b56a20530ad7da209b11b41df0
Author: Parav Pandit <parav@nvidia.com>
Date:   Wed Jan 13 14:17:00 2021 +0200

    IB/mlx5: Fix error unwinding when set_has_smi_cap fails
    
    commit 2cb091f6293df898b47f4e0f2e54324e2bbaf816 upstream.
    
    When set_has_smi_cap() fails, multiport master cleanup is missed. Fix it
    by doing the correct error unwinding goto.
    
    Fixes: a989ea01cb10 ("RDMA/mlx5: Move SMI caps logic")
    Link: https://lore.kernel.org/r/20210113121703.559778-3-leon@kernel.org
    Signed-off-by: Parav Pandit <parav@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc296e43233ab8ac2250dcc8c9aa62baed54742f
Author: Mark Bloch <mbloch@nvidia.com>
Date:   Wed Jan 13 14:17:03 2021 +0200

    RDMA/mlx5: Fix wrong free of blue flame register on error
    
    commit 1c3aa6bd0b823105c2030af85d92d158e815d669 upstream.
    
    If the allocation of the fast path blue flame register fails, the driver
    should free the regular blue flame register allocated a statement above,
    not the one that it just failed to allocate.
    
    Fixes: 16c1975f1032 ("IB/mlx5: Create profile infrastructure to add and remove stages")
    Link: https://lore.kernel.org/r/20210113121703.559778-6-leon@kernel.org
    Reported-by: Hans Petter Selasky <hanss@nvidia.com>
    Signed-off-by: Mark Bloch <mbloch@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44693384c32462eb20a09e8eb6bce3ce343927e0
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Mon Jan 11 04:26:39 2021 -0500

    bnxt_en: Improve stats context resource accounting with RDMA driver loaded.
    
    commit 869c4d5eb1e6fbda66aa790c48bdb946d71494a0 upstream.
    
    The function bnxt_get_ulp_stat_ctxs() does not count the stats contexts
    used by the RDMA driver correctly when the RDMA driver is freeing the
    MSIX vectors.  It assumes that if the RDMA driver is registered, the
    additional stats contexts will be needed.  This is not true when the
    RDMA driver is about to unregister and frees the MSIX vectors.
    
    This slight error leads to over accouting of the stats contexts needed
    after the RDMA driver has unloaded.  This will cause some firmware
    warning and error messages in dmesg during subsequent config. changes
    or ifdown/ifup.
    
    Fix it by properly accouting for extra stats contexts only if the
    RDMA driver is registered and MSIX vectors have been successfully
    requested.
    
    Fixes: c027c6b4e91f ("bnxt_en: get rid of num_stat_ctxs variable")
    Reviewed-by: Yongping Zhang <yongping.zhang@broadcom.com>
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3090af5d1fb2357e987b777ea3e312d3899bec28
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sat Dec 26 15:42:48 2020 +0800

    RDMA/usnic: Fix memleak in find_free_vf_and_create_qp_grp
    
    commit a306aba9c8d869b1fdfc8ad9237f1ed718ea55e6 upstream.
    
    If usnic_ib_qp_grp_create() fails at the first call, dev_list
    will not be freed on error, which leads to memleak.
    
    Fixes: e3cf00d0a87f ("IB/usnic: Add Cisco VIC low-level hardware driver")
    Link: https://lore.kernel.org/r/20201226074248.2893-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35694924a60a543d5c0840a57a16856f3f23653c
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Dec 16 12:07:53 2020 +0200

    RDMA/restrack: Don't treat as an error allocation ID wrapping
    
    commit 3c638cdb8ecc0442552156e0fed8708dd2c7f35b upstream.
    
    xa_alloc_cyclic() call returns positive number if ID allocation
    succeeded but wrapped. It is not an error, so normalize the "ret"
    variable to zero as marker of not-an-error.
    
       drivers/infiniband/core/restrack.c:261 rdma_restrack_add()
       warn: 'ret' can be either negative or positive
    
    Fixes: fd47c2f99f04 ("RDMA/restrack: Convert internal DB from hash to XArray")
    Link: https://lore.kernel.org/r/20201216100753.1127638-1-leon@kernel.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd223237e792e86ae8b1c37df6e262a870ae11bc
Author: Jan Kara <jack@suse.cz>
Date:   Wed Dec 16 11:18:43 2020 +0100

    ext4: fix superblock checksum failure when setting password salt
    
    commit dfd56c2c0c0dbb11be939b804ddc8d5395ab3432 upstream.
    
    When setting password salt in the superblock, we forget to recompute the
    superblock checksum so it will not match until the next superblock
    modification which recomputes the checksum. Fix it.
    
    CC: Michael Halcrow <mhalcrow@google.com>
    Reported-by: Andreas Dilger <adilger@dilger.ca>
    Fixes: 9bd8212f981e ("ext4 crypto: add encryption policy and password salt support")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20201216101844.22917-8-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4351cf25cb5204c13d5edfa5074417c6988b5ce6
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Tue Dec 22 15:29:04 2020 +0800

    scsi: ufs: Fix possible power drain during system suspend
    
    commit 1d53864c3617f5235f891ca0fbe9347c4cd35d46 upstream.
    
    Currently if device needs to do flush or BKOP operations, the device VCC
    power is kept during runtime-suspend period.
    
    However, if system suspend is happening while device is runtime-suspended,
    such power may not be disabled successfully.
    
    The reasons may be,
    
    1. If current PM level is the same as SPM level, device will keep
       runtime-suspended by ufshcd_system_suspend().
    
    2. Flush recheck work may not be scheduled successfully during system
       suspend period. If it can wake up the system, this is also not the
       intention of the recheck work.
    
    To fix this issue, simply runtime-resume the device if the flush is allowed
    during runtime suspend period. Flush capability will be disabled while
    leaving runtime suspend, and also not be allowed in system suspend period.
    
    Link: https://lore.kernel.org/r/20201222072905.32221-2-stanley.chu@mediatek.com
    Fixes: 51dd905bd2f6 ("scsi: ufs: Fix WriteBooster flush during runtime suspend")
    Reviewed-by: Chaotian Jing <chaotian.jing@mediatek.com>
    Reviewed-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51121ea1d1e85c9ec2236c66a4c3fc9443cad1bf
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Jan 10 15:58:08 2021 -0500

    NFS: nfs_igrab_and_active must first reference the superblock
    
    commit 896567ee7f17a8a736cda8a28cc987228410a2ac upstream.
    
    Before referencing the inode, we must ensure that the superblock can be
    referenced. Otherwise, we can end up with iput() calling superblock
    operations that are no longer valid or accessible.
    
    Fixes: ea7c38fef0b7 ("NFSv4: Ensure we reference the inode for return-on-close in delegreturn")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4689562fa95100caf31b2190bba84cb0e10770f
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Jan 10 15:46:06 2021 -0500

    NFS: nfs_delegation_find_inode_server must first reference the superblock
    
    commit 113aac6d567bda783af36d08f73bfda47d8e9a40 upstream.
    
    Before referencing the inode, we must ensure that the superblock can be
    referenced. Otherwise, we can end up with iput() calling superblock
    operations that are no longer valid or accessible.
    
    Fixes: e39d8a186ed0 ("NFSv4: Fix an Oops during delegation callbacks")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01a12a24f9238024f69ee0b15ffa73511ba6c95f
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Jan 6 14:13:22 2021 -0500

    NFS/pNFS: Fix a leak of the layout 'plh_outstanding' counter
    
    commit cb2856c5971723910a86b7d1d0cf623d6919cbc4 upstream.
    
    If we exit _lgopen_prepare_attached() without setting a layout, we will
    currently leak the plh_outstanding counter.
    
    Fixes: 411ae722d10a ("pNFS: Wait for stale layoutget calls to complete in pnfs_update_layout()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b666f394d6b8858c579df5dbe906d59517d82889
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Jan 6 11:54:57 2021 -0500

    NFS/pNFS: Don't leak DS commits in pnfs_generic_retry_commit()
    
    commit 46c9ea1d4fee4cf1f8cc6001b9c14aae61b3d502 upstream.
    
    We must ensure that we pass a layout segment to nfs_retry_commit() when
    we're cleaning up after pnfs_bucket_alloc_ds_commits(). Otherwise,
    requests that should be committed to the DS will get committed to the
    MDS.
    Do so by ensuring that pnfs_bucket_get_committing() always tries to
    return a layout segment when it returns a non-empty page list.
    
    Fixes: c84bea59449a ("NFS/pNFS: Simplify bucket layout segment reference counting")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 067aefcdfc1e50662b9ac80d3662c4fff3075313
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Jan 6 11:28:30 2021 -0500

    NFS/pNFS: Don't call pnfs_free_bucket_lseg() before removing the request
    
    commit 1757655d780d9d29bc4b60e708342e94924f7ef3 upstream.
    
    In pnfs_generic_clear_request_commit(), we try calling
    pnfs_free_bucket_lseg() before we remove the request from the DS bucket.
    That will always fail, since the point is to test for whether or not
    that bucket is empty.
    
    Fixes: c84bea59449a ("NFS/pNFS: Simplify bucket layout segment reference counting")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6ae16467af19d2572a48af59946223bd089a06e
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Tue Jan 5 08:54:32 2021 -0500

    NFS: Adjust fs_context error logging
    
    commit c98e9daa59a611ff4e163689815f40380c912415 upstream.
    
    Several existing dprink()/dfprintk() calls were converted to use the new
    mount API logging macros by commit ce8866f0913f ("NFS: Attach
    supplementary error information to fs_context").  If the fs_context was
    not created using fsopen() then it will not have had a log buffer
    allocated for it, and the new mount API logging macros will wind up
    calling printk().
    
    This can result in syslog messages being logged where previously there
    were none... most notably "NFS4: Couldn't follow remote path", which can
    happen if the client is auto-negotiating a protocol version with an NFS
    server that doesn't support the higher v4.x versions.
    
    Convert the nfs_errorf(), nfs_invalf(), and nfs_warnf() macros to check
    for the existence of the fs_context's log buffer and call dprintk() if
    it doesn't exist.  Add nfs_ferrorf(), nfs_finvalf(), and nfs_warnf(),
    which do the same thing but take an NFS debug flag as an argument and
    call dfprintk().  Finally, modify the "NFS4: Couldn't follow remote
    path" message to use nfs_ferrorf().
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=207385
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Fixes: ce8866f0913f ("NFS: Attach supplementary error information to fs_context.")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f58dbc49a23c99e5c0f246879ed16667f7bf8f
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Jan 5 06:43:45 2021 -0500

    pNFS: Stricter ordering of layoutget and layoutreturn
    
    commit 2c8d5fc37fe2384a9bdb6965443ab9224d46f704 upstream.
    
    If a layout return is in progress, we should wait for it to complete,
    in case the layout segment we are picking up gets returned too.
    
    Fixes: 30cb3ee299cb ("pNFS: Handle NFS4ERR_OLD_STATEID on layoutreturn by bumping the state seqid")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecaaad18013317f8f5bbfd20a6bb77fb8e3c9380
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jan 4 13:35:46 2021 -0500

    pNFS: Mark layout for return if return-on-close was not sent
    
    commit 67bbceedc9bb8ad48993a8bd6486054756d711f4 upstream.
    
    If the layout return-on-close failed because the layoutreturn was never
    sent, then we should mark the layout for return again.
    
    Fixes: 9c47b18cf722 ("pNFS: Ensure we do clear the return-on-close layout stateid on fatal errors")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f128de17c8d46a0dba5db32206d198551b111e17
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jan 4 13:18:03 2021 -0500

    pNFS: We want return-on-close to complete when evicting the inode
    
    commit 078000d02d57f02dde61de4901f289672e98c8bc upstream.
    
    If the inode is being evicted, it should be safe to run return-on-close,
    so we should do it to ensure we don't inadvertently leak layout segments.
    
    Fixes: 1c5bd76d17cc ("pNFS: Enable layoutreturn operation for return-on-close")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b42712e43e5d574a985661e336e48b0f6ba06b6
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Fri Dec 11 05:12:51 2020 -0500

    NFS4: Fix use-after-free in trace_event_raw_event_nfs4_set_lock
    
    commit 3d1a90ab0ed93362ec8ac85cf291243c87260c21 upstream.
    
    It is only safe to call the tracepoint before rpc_put_task() because
    'data' is freed inside nfs4_lock_release (rpc_release).
    
    Fixes: 48c9579a1afe ("Adding stateid information to tracepoints")
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76600f633bb977eb758a7c9bc710b28f3bde3670
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Jan 13 14:03:04 2021 -0800

    nvme-tcp: Fix warning with CONFIG_DEBUG_PREEMPT
    
    commit ada831772188192243f9ea437c46e37e97a5975d upstream.
    
    We shouldn't call smp_processor_id() in a preemptible
    context, but this is advisory at best, so instead
    call __smp_processor_id().
    
    Fixes: db5ad6b7f8cd ("nvme-tcp: try to send request in queue_rq context")
    Reported-by: Or Gerlitz <gerlitz.or@gmail.com>
    Reported-by: Yi Zhang <yi.zhang@redhat.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1e9f635a5e3a2f2ba7461f73426ad54d247ac9c
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Jan 13 13:56:57 2021 -0800

    nvme-tcp: fix possible data corruption with bio merges
    
    commit ca1ff67d0fb14f39cf0cc5102b1fbcc3b14f6fb9 upstream.
    
    When a bio merges, we can get a request that spans multiple
    bios, and the overall request payload size is the sum of
    all bios. When we calculate how much we need to send
    from the existing bio (and bvec), we did not take into
    account the iov_iter byte count cap.
    
    Since multipage bvecs support, bvecs can split in the middle
    which means that when we account for the last bvec send we
    should also take the iov_iter byte count cap as it might be
    lower than the last bvec size.
    
    Reported-by: Hao Wang <pkuwangh@gmail.com>
    Fixes: 3f2304f8c6d6 ("nvme-tcp: add NVMe over TCP host driver")
    Tested-by: Hao Wang <pkuwangh@gmail.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c09af1ee7c232d22b0264fbc69b997b1b851ade8
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Jan 13 16:00:22 2021 -0800

    nvme: don't intialize hwmon for discovery controllers
    
    commit 5ab25a32cd90ce561ac28b9302766e565d61304c upstream.
    
    Discovery controllers usually don't support smart log page command.
    So when we connect to the discovery controller we see this warning:
    nvme nvme0: Failed to read smart log (error 24577)
    nvme nvme0: new ctrl: NQN "nqn.2014-08.org.nvmexpress.discovery", addr 192.168.123.1:8009
    nvme nvme0: Removing ctrl: NQN "nqn.2014-08.org.nvmexpress.discovery"
    
    Introduce a new helper to understand if the controller is a discovery
    controller and use this helper to skip nvme_init_hwmon (also use it in
    other places that we check if the controller is a discovery controller).
    
    Fixes: 400b6a7b13a3 ("nvme: Add hardware monitoring support")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a60c7aaaccf65c075aca32565c9d06a12fb0a95e
Author: Israel Rukshin <israelr@nvidia.com>
Date:   Sun Jan 10 14:09:05 2021 +0200

    nvmet-rdma: Fix NULL deref when setting pi_enable and traddr INADDR_ANY
    
    commit 7a84665619bb5da8c8b6517157875a1fd7632014 upstream.
    
    When setting port traddr to INADDR_ANY, the listening cm_id->device
    is NULL. The associate IB device is known only when a connect request
    event arrives, so checking T10-PI device capability should be done
    at this stage.
    
    Fixes: b09160c3996c ("nvmet-rdma: add metadata/T10-PI support")
    Signed-off-by: Israel Rukshin <israelr@nvidia.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a835cff329a52583cf48c67a46229ca524e418b3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 11 13:06:52 2020 +0300

    ASoC: Intel: fix error code cnl_set_dsp_D0()
    
    commit f373a811fd9a69fc8bafb9bcb41d2cfa36c62665 upstream.
    
    Return -ETIMEDOUT if the dsp boot times out instead of returning
    success.
    
    Fixes: cb6a55284629 ("ASoC: Intel: cnl: Add sst library functions for cnl platform")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/X9NEvCzuN+IObnTN@mwanda
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95e5df53675726f5784108797fcb55cb29050d46
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Dec 17 16:08:34 2020 +0100

    ASoC: meson: axg-tdmin: fix axg skew offset
    
    commit a84dfb3d55934253de6aed38ad75990278a2d21e upstream.
    
    The signal captured on from tdm decoder of the AXG SoC is incorrect. It
    appears amplified. The skew offset of the decoder is wrong.
    
    Setting the skew offset to 3, like the g12 and sm1 SoCs, solves and gives
    correct data.
    
    Fixes: 13a22e6a98f8 ("ASoC: meson: add tdm input driver")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20201217150834.3247526-1-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d11f18351ee692d18dda79119864c89b45dd4790
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Dec 17 16:08:12 2020 +0100

    ASoC: meson: axg-tdm-interface: fix loopback
    
    commit 671ee4db952449acde126965bf76817a3159040d upstream.
    
    When the axg-tdm-interface was introduced, the backend DAI was marked as an
    endpoint when DPCM was walking the DAPM graph to find a its BE.
    
    It is no longer the case since this
    commit 8dd26dff00c0 ("ASoC: dapm: Fix handling of custom_stop_condition on DAPM graph walks")
    Because of this, when DPCM finds a BE it does everything it needs on the
    DAIs but it won't power up the widgets between the FE and the BE if there
    is no actual endpoint after the BE.
    
    On meson-axg HWs, the loopback is a special DAI of the tdm-interface BE.
    It is only linked to the dummy codec since there no actual HW after it.
    >From the DAPM perspective, the DAI has no endpoint. Because of this, the TDM
    decoder, which is a widget between the FE and BE is not powered up.
    
    >From the user perspective, everything seems fine but no data is produced.
    
    Connecting the Loopback DAI to a dummy DAPM endpoint solves the problem.
    
    Fixes: 8dd26dff00c0 ("ASoC: dapm: Fix handling of custom_stop_condition on DAPM graph walks")
    Cc: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20201217150812.3247405-1-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3fddad7af2cd1c60d1ea639a94e7d63c693cd23
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Jan 5 14:43:46 2021 -0500

    dump_common_audit_data(): fix racy accesses to ->d_name
    
    commit d36a1dd9f77ae1e72da48f4123ed35627848507d upstream.
    
    We are not guaranteed the locking environment that would prevent
    dentry getting renamed right under us.  And it's possible for
    old long name to be freed after rename, leading to UAF here.
    
    Cc: stable@kernel.org # v2.6.2+
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09b3e0bc8e9a4db653e5a2a626658f96542c344c
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Thu Jan 7 19:41:59 2021 +0200

    perf intel-pt: Fix 'CPU too large' error
    
    commit 5501e9229a80d95a1ea68609f44c447a75d23ed5 upstream.
    
    In some cases, the number of cpus (nr_cpus_online) is confused with the
    maximum cpu number (nr_cpus_avail), which results in the error in the
    example below:
    
    Example on system with 8 cpus:
    
     Before:
       # echo 0 > /sys/devices/system/cpu/cpu2/online
       # ./perf record --kcore -e intel_pt// taskset --cpu-list 7 uname
       Linux
       [ perf record: Woken up 1 times to write data ]
       [ perf record: Captured and wrote 0.147 MB perf.data ]
       # ./perf script --itrace=e
       Requested CPU 7 too large. Consider raising MAX_NR_CPUS
       0x25908 [0x8]: failed to process type: 68 [Invalid argument]
    
     After:
       # ./perf script --itrace=e
       #
    
    Fixes: 8c7274691f0d ("perf machine: Replace MAX_NR_CPUS with perf_env::nr_cpus_online")
    Fixes: 7df4e36a4785 ("perf session: Replace MAX_NR_CPUS with perf_env::nr_cpus_online")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Tested-by: Kan Liang <kan.liang@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20210107174159.24897-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72c5ce89427feb277ac6f998a6ec27b820863fb5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 16 15:34:57 2021 -0800

    mm: don't put pinned pages into the swap cache
    
    [ Upstream commit feb889fb40fafc6933339cf1cca8f770126819fb ]
    
    So technically there is nothing wrong with adding a pinned page to the
    swap cache, but the pinning obviously means that the page can't actually
    be free'd right now anyway, so it's a bit pointless.
    
    However, the real problem is not with it being a bit pointless: the real
    issue is that after we've added it to the swap cache, we'll try to unmap
    the page.  That will succeed, because the code in mm/rmap.c doesn't know
    or care about pinned pages.
    
    Even the unmapping isn't fatal per se, since the page will stay around
    in memory due to the pinning, and we do hold the connection to it using
    the swap cache.  But when we then touch it next and take a page fault,
    the logic in do_swap_page() will map it back into the process as a
    possibly read-only page, and we'll then break the page association on
    the next COW fault.
    
    Honestly, this issue could have been fixed in any of those other places:
    (a) we could refuse to unmap a pinned page (which makes conceptual
    sense), or (b) we could make sure to re-map a pinned page writably in
    do_swap_page(), or (c) we could just make do_wp_page() not COW the
    pinned page (which was what we historically did before that "mm:
    do_wp_page() simplification" commit).
    
    But while all of them are equally valid models for breaking this chain,
    not putting pinned pages into the swap cache in the first place is the
    simplest one by far.
    
    It's also the safest one: the reason why do_wp_page() was changed in the
    first place was that getting the "can I re-use this page" wrong is so
    fraught with errors.  If you do it wrong, you end up with an incorrectly
    shared page.
    
    As a result, using "page_maybe_dma_pinned()" in either do_wp_page() or
    do_swap_page() would be a serious bug since it is only a (very good)
    heuristic.  Re-using the page requires a hard black-and-white rule with
    no room for ambiguity.
    
    In contrast, saying "this page is very likely dma pinned, so let's not
    add it to the swap cache and try to unmap it" is an obviously safe thing
    to do, and if the heuristic might very rarely be a false positive, no
    harm is done.
    
    Fixes: 09854ba94c6a ("mm: do_wp_page() simplification")
    Reported-and-tested-by: Martin Raiber <martin@urbackup.org>
    Cc: Pavel Begunkov <asml.silence@gmail.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Peter Xu <peterx@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eea108995a2411d46350bf43e4b316a9f1e30fd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 9 17:09:10 2021 -0800

    mm: don't play games with pinned pages in clear_page_refs
    
    [ Upstream commit 9348b73c2e1bfea74ccd4a44fb4ccc7276ab9623 ]
    
    Turning a pinned page read-only breaks the pinning after COW.  Don't do it.
    
    The whole "track page soft dirty" state doesn't work with pinned pages
    anyway, since the page might be dirtied by the pinning entity without
    ever being noticed in the page tables.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41b0b0c09e974ff9760db396097169a1891460d2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 8 13:13:41 2021 -0800

    mm: fix clear_refs_write locking
    
    [ Upstream commit 29a951dfb3c3263c3a0f3bd9f7f2c2cfde4baedb ]
    
    Turning page table entries read-only requires the mmap_sem held for
    writing.
    
    So stop doing the odd games with turning things from read locks to write
    locks and back.  Just get the write lock.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 847c76518c41ba45ec02742a5d03065ebd4b3c39
Author: John Garry <john.garry@huawei.com>
Date:   Fri Jan 8 16:55:37 2021 +0800

    blk-mq-debugfs: Add decode for BLK_MQ_F_TAG_HCTX_SHARED
    
    [ Upstream commit 02f938e9fed1681791605ca8b96c2d9da9355f6a ]
    
    Showing the hctx flags for when BLK_MQ_F_TAG_HCTX_SHARED is set gives
    something like:
    
    root@debian:/home/john# more /sys/kernel/debug/block/sda/hctx0/flags
    alloc_policy=FIFO SHOULD_MERGE|TAG_QUEUE_SHARED|3
    
    Add the decoding for that flag.
    
    Fixes: 32bc15afed04b ("blk-mq: Facilitate a shared sbitmap per tagset")
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9812b54310ade76386e14178505a2478a199bcb8
Author: Alaa Hleihel <alaa@nvidia.com>
Date:   Mon Jan 4 12:54:40 2021 +0200

    net/mlx5: E-Switch, fix changing vf VLANID
    
    [ Upstream commit 25c904b59aaf4816337acd415514b0c47715f604 ]
    
    Adding vf VLANID for the first time, or after having cleared previously
    defined VLANID works fine, however, attempting to change an existing vf
    VLANID clears the rules on the firmware, but does not add new rules for
    the new vf VLANID.
    
    Fix this by changing the logic in function esw_acl_egress_lgcy_setup()
    so that it will always configure egress rules.
    
    Fixes: ea651a86d468 ("net/mlx5: E-Switch, Refactor eswitch egress acl codes")
    Signed-off-by: Alaa Hleihel <alaa@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96d77cf22dd72d0a8d2ef09b7d61856b47c09323
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Dec 1 14:42:06 2020 -0800

    net/mlx5: Fix passing zero to 'PTR_ERR'
    
    [ Upstream commit 0c4accc41cb56e527c8c049f5495af9f3d6bef7e ]
    
    Fix smatch warnings:
    
    drivers/net/ethernet/mellanox/mlx5/core/esw/acl/egress_lgcy.c:105 esw_acl_egress_lgcy_setup() warn: passing zero to 'PTR_ERR'
    drivers/net/ethernet/mellanox/mlx5/core/esw/acl/egress_ofld.c:177 esw_acl_egress_ofld_setup() warn: passing zero to 'PTR_ERR'
    drivers/net/ethernet/mellanox/mlx5/core/esw/acl/ingress_lgcy.c:184 esw_acl_ingress_lgcy_setup() warn: passing zero to 'PTR_ERR'
    drivers/net/ethernet/mellanox/mlx5/core/esw/acl/ingress_ofld.c:262 esw_acl_ingress_ofld_setup() warn: passing zero to 'PTR_ERR'
    
    esw_acl_table_create() never returns NULL, so
    NULL test should be removed.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 452e34d6635c9ccf73fd4759c881a487ff1cb73d
Author: Oz Shlomo <ozsh@nvidia.com>
Date:   Mon Dec 7 08:15:18 2020 +0000

    net/mlx5e: CT: Use per flow counter when CT flow accounting is enabled
    
    [ Upstream commit eed38eeee734756596e2cc163bdc7dac3be501b1 ]
    
    Connection counters may be shared for both directions when the counter
    is used for connection aging purposes. However, if TC flow
    accounting is enabled then a unique counter is required per direction.
    
    Instantiate a unique counter per direction if the conntrack accounting
    extension is enabled. Use a shared counter when the connection accounting
    extension is disabled.
    
    Fixes: 1edae2335adf ("net/mlx5e: CT: Use the same counter for both directions")
    Signed-off-by: Oz Shlomo <ozsh@nvidia.com>
    Reported-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Reviewed-by: Paul Blakey <paulb@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 518606a84a0fb7c97afeb1746be07432190ff4c0
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Nov 24 16:20:55 2020 +0800

    iommu/vt-d: Update domain geometry in iommu_ops.at(de)tach_dev
    
    [ Upstream commit c062db039f40e868c371c36afe8d0fac64305b5d ]
    
    The iommu-dma constrains IOVA allocation based on the domain geometry
    that the driver reports. Update domain geometry everytime a domain is
    attached to or detached from a device.
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Tested-by: Logan Gunthorpe <logang@deltatee.com>
    Link: https://lore.kernel.org/r/20201124082057.2614359-6-baolu.lu@linux.intel.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1cd8c40936ff2b560e1f35159dd6a4602b558e5
Author: James Smart <james.smart@broadcom.com>
Date:   Tue Dec 1 17:52:43 2020 -0800

    nvme-fc: avoid calling _nvme_fc_abort_outstanding_ios from interrupt context
    
    [ Upstream commit 19fce0470f05031e6af36e49ce222d0f0050d432 ]
    
    Recent patches changed calling sequences. nvme_fc_abort_outstanding_ios
    used to be called from a timeout or work context. Now it is being called
    in an io completion context, which can be an interrupt handler.
    Unfortunately, the abort outstanding ios routine attempts to stop nvme
    queues and nested routines that may try to sleep, which is in conflict
    with the interrupt handler.
    
    Correct replacing the direct call with a work element scheduling, and the
    abort outstanding ios routine will be called in the work element.
    
    Fixes: 95ced8a2c72d ("nvme-fc: eliminate terminate_io use by nvme_fc_error_recovery")
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reported-by: Daniel Wagner <dwagner@suse.de>
    Tested-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ac5d20182c7d55c17f78b1e3afc0dfd1bc873cd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sun Jan 3 22:36:21 2021 +0100

    cfg80211: select CONFIG_CRC32
    
    [ Upstream commit 152a8a6c017bfdeda7f6d052fbc6e151891bd9b6 ]
    
    Without crc32 support, this fails to link:
    
    arm-linux-gnueabi-ld: net/wireless/scan.o: in function `cfg80211_scan_6ghz':
    scan.c:(.text+0x928): undefined reference to `crc32_le'
    
    Fixes: c8cb5b854b40 ("nl80211/cfg80211: support 6 GHz scanning")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e558b38b5e1177334debe520f8378e1d8fec62ea
Author: Peter Gonda <pgonda@google.com>
Date:   Tue Jan 5 08:33:11 2021 -0800

    x86/sev-es: Fix SEV-ES OUT/IN immediate opcode vc handling
    
    [ Upstream commit a8f7e08a81708920a928664a865208fdf451c49f ]
    
    The IN and OUT instructions with port address as an immediate operand
    only use an 8-bit immediate (imm8). The current VC handler uses the
    entire 32-bit immediate value but these instructions only set the first
    bytes.
    
    Cast the operand to an u8 for that.
    
     [ bp: Massage commit message. ]
    
    Fixes: 25189d08e5168 ("x86/sev-es: Add support for handling IOIO exceptions")
    Signed-off-by: Peter Gonda <pgonda@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: David Rientjes <rientjes@google.com>
    Link: https://lkml.kernel.org/r/20210105163311.221490-1-pgonda@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f63b3393baccf8c34319b16b6a70a7188026238
Author: Jonathan Lemon <bsd@fb.com>
Date:   Fri Dec 18 10:50:30 2020 -0800

    bpf: Save correct stopping point in file seq iteration
    
    [ Upstream commit 69ca310f34168eae0ada434796bfc22fb4a0fa26 ]
    
    On some systems, some variant of the following splat is
    repeatedly seen.  The common factor in all traces seems
    to be the entry point to task_file_seq_next().  With the
    patch, all warnings go away.
    
        rcu: INFO: rcu_sched self-detected stall on CPU
        rcu: \x0926-....: (20992 ticks this GP) idle=d7e/1/0x4000000000000002 softirq=81556231/81556231 fqs=4876
        \x09(t=21033 jiffies g=159148529 q=223125)
        NMI backtrace for cpu 26
        CPU: 26 PID: 2015853 Comm: bpftool Kdump: loaded Not tainted 5.6.13-0_fbk4_3876_gd8d1f9bf80bb #1
        Hardware name: Quanta Twin Lakes MP/Twin Lakes Passive MP, BIOS F09_3A12 10/08/2018
        Call Trace:
         <IRQ>
         dump_stack+0x50/0x70
         nmi_cpu_backtrace.cold.6+0x13/0x50
         ? lapic_can_unplug_cpu.cold.30+0x40/0x40
         nmi_trigger_cpumask_backtrace+0xba/0xca
         rcu_dump_cpu_stacks+0x99/0xc7
         rcu_sched_clock_irq.cold.90+0x1b4/0x3aa
         ? tick_sched_do_timer+0x60/0x60
         update_process_times+0x24/0x50
         tick_sched_timer+0x37/0x70
         __hrtimer_run_queues+0xfe/0x270
         hrtimer_interrupt+0xf4/0x210
         smp_apic_timer_interrupt+0x5e/0x120
         apic_timer_interrupt+0xf/0x20
         </IRQ>
        RIP: 0010:get_pid_task+0x38/0x80
        Code: 89 f6 48 8d 44 f7 08 48 8b 00 48 85 c0 74 2b 48 83 c6 55 48 c1 e6 04 48 29 f0 74 19 48 8d 78 20 ba 01 00 00 00 f0 0f c1 50 20 <85> d2 74 27 78 11 83 c2 01 78 0c 48 83 c4 08 c3 31 c0 48 83 c4 08
        RSP: 0018:ffffc9000d293dc8 EFLAGS: 00000202 ORIG_RAX: ffffffffffffff13
        RAX: ffff888637c05600 RBX: ffffc9000d293e0c RCX: 0000000000000000
        RDX: 0000000000000001 RSI: 0000000000000550 RDI: ffff888637c05620
        RBP: ffffffff8284eb80 R08: ffff88831341d300 R09: ffff88822ffd8248
        R10: ffff88822ffd82d0 R11: 00000000003a93c0 R12: 0000000000000001
        R13: 00000000ffffffff R14: ffff88831341d300 R15: 0000000000000000
         ? find_ge_pid+0x1b/0x20
         task_seq_get_next+0x52/0xc0
         task_file_seq_get_next+0x159/0x220
         task_file_seq_next+0x4f/0xa0
         bpf_seq_read+0x159/0x390
         vfs_read+0x8a/0x140
         ksys_read+0x59/0xd0
         do_syscall_64+0x42/0x110
         entry_SYSCALL_64_after_hwframe+0x44/0xa9
        RIP: 0033:0x7f95ae73e76e
        Code: Bad RIP value.
        RSP: 002b:00007ffc02c1dbf8 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
        RAX: ffffffffffffffda RBX: 000000000170faa0 RCX: 00007f95ae73e76e
        RDX: 0000000000001000 RSI: 00007ffc02c1dc30 RDI: 0000000000000007
        RBP: 00007ffc02c1ec70 R08: 0000000000000005 R09: 0000000000000006
        R10: fffffffffffff20b R11: 0000000000000246 R12: 00000000019112a0
        R13: 0000000000000000 R14: 0000000000000007 R15: 00000000004283c0
    
    If unable to obtain the file structure for the current task,
    proceed to the next task number after the one returned from
    task_seq_get_next(), instead of the next task number from the
    original iterator.
    
    Also, save the stopping task number from task_seq_get_next()
    on failure in case of restarts.
    
    Fixes: eaaacd23910f ("bpf: Add task and task/file iterator targets")
    Signed-off-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20201218185032.2464558-2-jonathan.lemon@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3a51c69c1a9a61ed4f2d5e372f3a761d39dd65d
Author: Song Liu <songliubraving@fb.com>
Date:   Thu Nov 19 16:28:33 2020 -0800

    bpf: Simplify task_file_seq_get_next()
    
    [ Upstream commit 91b2db27d3ff9ad29e8b3108dfbf1e2f49fe9bd3 ]
    
    Simplify task_file_seq_get_next() by removing two in/out arguments: task
    and fstruct. Use info->task and info->files instead.
    
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20201120002833.2481110-1-songliubraving@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30b491e2b6cc669b23179809ea47314fcae24941
Author: Uladzislau Rezki (Sony) <urezki@gmail.com>
Date:   Wed Dec 9 21:27:31 2020 +0100

    rcu-tasks: Move RCU-tasks initialization to before early_initcall()
    
    [ Upstream commit 1b04fa9900263b4e217ca2509fd778b32c2b4eb2 ]
    
    PowerPC testing encountered boot failures due to RCU Tasks not being
    fully initialized until core_initcall() time.  This commit therefore
    initializes RCU Tasks (along with Rude RCU and RCU Tasks Trace) just
    before early_initcall() time, thus allowing waiting on RCU Tasks grace
    periods from early_initcall() handlers.
    
    Link: https://lore.kernel.org/rcu/87eekfh80a.fsf@dja-thinkpad.axtens.net/
    Fixes: 36dadef23fcc ("kprobes: Init kprobes in early_initcall")
    Tested-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Uladzislau Rezki (Sony) <urezki@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc880f2040e0c22fa60893e20a7e64744cde7bfc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 7 09:43:54 2021 -0800

    poll: fix performance regression due to out-of-line __put_user()
    
    [ Upstream commit ef0ba05538299f1391cbe097de36895bb36ecfe6 ]
    
    The kernel test robot reported a -5.8% performance regression on the
    "poll2" test of will-it-scale, and bisected it to commit d55564cfc222
    ("x86: Make __put_user() generate an out-of-line call").
    
    I didn't expect an out-of-line __put_user() to matter, because no normal
    core code should use that non-checking legacy version of user access any
    more.  But I had overlooked the very odd poll() usage, which does a
    __put_user() to update the 'revents' values of the poll array.
    
    Now, Al Viro correctly points out that instead of updating just the
    'revents' field, it would be much simpler to just copy the _whole_
    pollfd entry, and then we could just use "copy_to_user()" on the whole
    array of entries, the same way we use "copy_from_user()" a few lines
    earlier to get the original values.
    
    But that is not what we've traditionally done, and I worry that threaded
    applications might be concurrently modifying the other fields of the
    pollfd array.  So while Al's suggestion is simpler - and perhaps worth
    trying in the future - this instead keeps the "just update revents"
    model.
    
    To fix the performance regression, use the modern "unsafe_put_user()"
    instead of __put_user(), with the proper "user_write_access_begin()"
    guarding in place. This improves code generation enormously.
    
    Link: https://lore.kernel.org/lkml/20210107134723.GA28532@xsang-OptiPlex-9020/
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Tested-by: Oliver Sang <oliver.sang@intel.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e30f6e1ac3ce73e2bfab7ac9ddd3c61d07a5a3cf
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 30 16:20:05 2020 +0100

    ARM: picoxcell: fix missing interrupt-parent properties
    
    [ Upstream commit bac717171971176b78c72d15a8b6961764ab197f ]
    
    dtc points out that the interrupts for some devices are not parsable:
    
    picoxcell-pc3x2.dtsi:45.19-49.5: Warning (interrupts_property): /paxi/gem@30000: Missing interrupt-parent
    picoxcell-pc3x2.dtsi:51.21-55.5: Warning (interrupts_property): /paxi/dmac@40000: Missing interrupt-parent
    picoxcell-pc3x2.dtsi:57.21-61.5: Warning (interrupts_property): /paxi/dmac@50000: Missing interrupt-parent
    picoxcell-pc3x2.dtsi:233.21-237.5: Warning (interrupts_property): /rwid-axi/axi2pico@c0000000: Missing interrupt-parent
    
    There are two VIC instances, so it's not clear which one needs to be
    used. I found the BSP sources that reference VIC0, so use that:
    
    https://github.com/r1mikey/meta-picoxcell/blob/master/recipes-kernel/linux/linux-picochip-3.0/0001-picoxcell-support-for-Picochip-picoXcell-SoC.patch
    
    Acked-by: Jamie Iles <jamie@jamieiles.com>
    Link: https://lore.kernel.org/r/20201230152010.3914962-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d565c626b4e14864be4f6886d73e86f3338f7bac
Author: Craig Tatlor <ctatlor97@gmail.com>
Date:   Wed Dec 30 17:29:42 2020 +0200

    drm/msm: Call msm_init_vram before binding the gpu
    
    [ Upstream commit d863f0c7b536288e2bd40cbc01c10465dd226b11 ]
    
    vram.size is needed when binding a gpu without an iommu and is defined
    in msm_init_vram(), so run that before binding it.
    
    Signed-off-by: Craig Tatlor <ctatlor97@gmail.com>
    Reviewed-by: Brian Masney <masneyb@onstation.org>
    Tested-by: Alexey Minnekhanov <alexeymin@postmarketos.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45f7e133f9e8182409fe7ac18256586442a513c6
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Thu Dec 31 19:35:25 2020 +0800

    ACPI: scan: add stub acpi_create_platform_device() for !CONFIG_ACPI
    
    [ Upstream commit ee61cfd955a64a58ed35cbcfc54068fcbd486945 ]
    
    It adds a stub acpi_create_platform_device() for !CONFIG_ACPI build, so
    that caller doesn't have to deal with !CONFIG_ACPI build issue.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4c84cd83c158df7f4e9c634cabbac0b9cade8cc
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Thu Dec 31 08:53:23 2020 +0800

    iommu/vt-d: Fix lockdep splat in sva bind()/unbind()
    
    [ Upstream commit 420d42f6f9db27d88bc4f83e3e668fcdacbf7e29 ]
    
    Lock(&iommu->lock) without disabling irq causes lockdep warnings.
    
    ========================================================
    WARNING: possible irq lock inversion dependency detected
    5.11.0-rc1+ #828 Not tainted
    --------------------------------------------------------
    kworker/0:1H/120 just changed the state of lock:
    ffffffffad9ea1b8 (device_domain_lock){..-.}-{2:2}, at:
    iommu_flush_dev_iotlb.part.0+0x32/0x120
    but this lock took another, SOFTIRQ-unsafe lock in the past:
     (&iommu->lock){+.+.}-{2:2}
    
    and interrupts could create inverse lock ordering between them.
    
    other info that might help us debug this:
     Possible interrupt unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&iommu->lock);
                                   local_irq_disable();
                                   lock(device_domain_lock);
                                   lock(&iommu->lock);
      <Interrupt>
        lock(device_domain_lock);
    
     *** DEADLOCK ***
    
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20201231005323.2178523-5-baolu.lu@linux.intel.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c7b7660c611ee995652f89eec3edea0fd5e237a
Author: Peter Robinson <pbrobinson@gmail.com>
Date:   Wed Jan 6 00:16:05 2021 +0000

    usb: typec: Fix copy paste error for NVIDIA alt-mode description
    
    [ Upstream commit 41952a66015466c3208aac96b14ffd92e0943589 ]
    
    The name of the module for the NVIDIA alt-mode is incorrect as it
    looks to be a copy-paste error from the entry above, update it to
    the correct typec_nvidia module name.
    
    Cc: Ajay Gupta <ajayg@nvidia.com>
    Cc: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Peter Robinson <pbrobinson@gmail.com>
    Link: https://lore.kernel.org/r/20210106001605.167917-1-pbrobinson@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 279af879c3df88a08d0d40fd42108d13a48a7bdf
Author: Jiawei Gu <Jiawei.Gu@amd.com>
Date:   Tue Dec 29 20:35:33 2020 +0800

    drm/amdgpu: fix potential memory leak during navi12 deinitialization
    
    [ Upstream commit e6d5c64efaa34aae3815a9afeb1314a976142e83 ]
    
    Navi12 HDCP & DTM deinitialization needs continue to free bo if already
    created though initialized flag is not set.
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Jiawei Gu <Jiawei.Gu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9910f52b4cb46ed65a0ebf59fd53b928b44715e7
Author: Xiaojian Du <Xiaojian.Du@amd.com>
Date:   Wed Dec 30 18:08:23 2020 +0800

    drm/amd/pm: fix the failure when change power profile for renoir
    
    [ Upstream commit 44cb39e19a05ca711bcb6e776e0a4399223204a0 ]
    
    This patch is to fix the failure when change power profile to
    "profile_peak" for renoir.
    
    Signed-off-by: Xiaojian Du <Xiaojian.Du@amd.com>
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a973bc7d8ab521e35846c793476027b11bbe5a3f
Author: Dennis Li <Dennis.Li@amd.com>
Date:   Wed Dec 30 19:45:15 2020 +0800

    drm/amdgpu: fix a GPU hang issue when remove device
    
    [ Upstream commit 88e21af1b3f887d217f2fb14fc7e7d3cd87ebf57 ]
    
    When GFXOFF is enabled and GPU is idle, driver will fail to access some
    registers. Therefore change to disable power gating before all access
    registers with MMIO.
    
    Dmesg log is as following:
    amdgpu 0000:03:00.0: amdgpu: amdgpu: finishing device.
    amdgpu: cp queue pipe 4 queue 0 preemption failed
    amdgpu 0000:03:00.0: amdgpu: failed to write reg 2890 wait reg 28a2
    amdgpu 0000:03:00.0: amdgpu: failed to write reg 1a6f4 wait reg 1a706
    amdgpu 0000:03:00.0: amdgpu: failed to write reg 2890 wait reg 28a2
    amdgpu 0000:03:00.0: amdgpu: failed to write reg 1a6f4 wait reg 1a706
    
    Signed-off-by: Dennis Li <Dennis.Li@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26f0adb0b4c80248b8c111fd4f34b324c9420970
Author: Kevin Wang <kevin1.wang@amd.com>
Date:   Tue Dec 29 14:10:28 2020 +0800

    drm/amd/display: fix sysfs amdgpu_current_backlight_pwm NULL pointer issue
    
    [ Upstream commit a7b5d9dd57298333e6e9f4c167f01385d922bbfb ]
    
    fix NULL pointer issue when read sysfs amdgpu_current_backlight_pwm sysfs node.
    
    Call Trace:
    [  248.273833] BUG: kernel NULL pointer dereference, address: 0000000000000130
    [  248.273930] #PF: supervisor read access in kernel mode
    [  248.273993] #PF: error_code(0x0000) - not-present page
    [  248.274054] PGD 0 P4D 0
    [  248.274092] Oops: 0000 [#1] SMP PTI
    [  248.274138] CPU: 2 PID: 1377 Comm: cat Tainted: G           OE     5.9.0-rc5-drm-next-5.9+ #1
    [  248.274233] Hardware name: System manufacturer System Product Name/Z170-A, BIOS 3802 03/15/2018
    [  248.274641] RIP: 0010:dc_link_get_backlight_level+0x5/0x70 [amdgpu]
    [  248.274718] Code: 67 ff ff ff 41 b9 03 00 00 00 e9 45 ff ff ff d1 ea e9 55 ff ff ff 0f 1f 44 00 00 66 2e
    0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 <48> 8b 87 30 01 00 00 48 8b 00 48 8b 88 88 03 00 00 48 8d 81 e8 01
    [  248.274919] RSP: 0018:ffffb5ad809b3df0 EFLAGS: 00010203
    [  248.274982] RAX: ffffa0f77d1c0010 RBX: ffffa0f793ae9168 RCX: 0000000000000001
    [  248.275064] RDX: ffffa0f79753db00 RSI: 0000000000000001 RDI: 0000000000000000
    [  248.275145] RBP: ffffb5ad809b3e00 R08: ffffb5ad809b3da0 R09: 0000000000000000
    [  248.275225] R10: ffffb5ad809b3e68 R11: 0000000000000000 R12: ffffa0f793ae9190
    [  248.275306] R13: ffffb5ad809b3ef0 R14: 0000000000000001 R15: ffffa0f793ae9168
    [  248.275388] FS:  00007f5f1ec4d540(0000) GS:ffffa0f79ec80000(0000) knlGS:0000000000000000
    [  248.275480] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  248.275547] CR2: 0000000000000130 CR3: 000000042a03c005 CR4: 00000000003706e0
    [  248.275628] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  248.275708] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  248.275789] Call Trace:
    [  248.276124]  ? current_backlight_read+0x24/0x40 [amdgpu]
    [  248.276194]  seq_read+0xc3/0x3f0
    [  248.276240]  full_proxy_read+0x5c/0x90
    [  248.276290]  vfs_read+0xa7/0x190
    [  248.276334]  ksys_read+0xa7/0xe0
    [  248.276379]  __x64_sys_read+0x1a/0x20
    [  248.276429]  do_syscall_64+0x37/0x80
    [  248.276477]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  248.276538] RIP: 0033:0x7f5f1e75c191
    [  248.276585] Code: fe ff ff 48 8d 3d b7 9d 0a 00 48 83 ec 08 e8 46 4d 02 00 66 0f 1f 44 00 00 48 8d 05 71 07
    2e 00 8b 00 85 c0 75 13 31 c0 0f 05 <48> 3d 00 f0 ff ff 77 57 f3 c3 0f 1f 44 00 00 41 54 55 49 89 d4 53Hw
    [  248.276784] RSP: 002b:00007ffcb1fc3f38 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
    [  248.276872] RAX: ffffffffffffffda RBX: 0000000000020000 RCX: 00007f5f1e75c191
    [  248.276953] RDX: 0000000000020000 RSI: 00007f5f1ec2b000 RDI: 0000000000000003
    [  248.277034] RBP: 0000000000020000 R08: 00000000ffffffff R09: 0000000000000000
    [  248.277115] R10: 0000000000000022 R11: 0000000000000246 R12: 00007f5f1ec2b000
    [  248.277195] R13: 0000000000000003 R14: 00007f5f1ec2b00f R15: 0000000000020000
    [  248.277279] Modules linked in: amdgpu(OE) iommu_v2 gpu_sched ttm(OE) drm_kms_helper cec drm
    i2c_algo_bit fb_sys_fops syscopyarea sysfillrect sysimgblt rpcsec_gss_krb5 auth_rpcgss nfsv4 nfs
    lockd grace fscache nls_iso8859_1 snd_hda_codec_realtek snd_hda_codec_hdmi snd_hda_codec_generic
    ledtrig_audio intel_rapl_msr intel_rapl_common snd_hda_intel snd_intel_dspcfg x86_pkg_temp_thermal
    intel_powerclamp snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_seq_midi snd_seq_midi_event mei_hdcp
    coretemp snd_rawmidi snd_seq kvm_intel kvm snd_seq_device snd_timer irqbypass joydev snd input_leds soundcore
    crct10dif_pclmul crc32_pclmul ghash_clmulni_intel aesni_intel crypto_simd cryptd glue_helper rapl intel_cstate
    mac_hid mei_me serio_raw mei eeepc_wmi wmi_bmof asus_wmi mxm_wmi intel_wmi_thunderbolt acpi_pad sparse_keymap
    efi_pstore sch_fq_codel parport_pc ppdev lp parport sunrpc ip_tables x_tables autofs4 hid_logitech_hidpp
    hid_logitech_dj hid_generic usbhid hid e1000e psmouse ahci libahci wmi video
    [  248.278211] CR2: 0000000000000130
    [  248.278221] ---[ end trace 1fbe72fe6f91091d ]---
    [  248.357226] RIP: 0010:dc_link_get_backlight_level+0x5/0x70 [amdgpu]
    [  248.357272] Code: 67 ff ff ff 41 b9 03 00 00 00 e9 45 ff ff ff d1 ea e9 55 ff ff ff 0f 1f 44 00 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 <48> 8b 87 30 01 00 00 48 8b 00 48 8b 88 88 03 00 00 48 8d 81 e8 01
    
    Signed-off-by: Kevin Wang <kevin1.wang@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e57baf3cdb3f752f92b424b8e6154b81723e267
Author: Israel Rukshin <israelr@nvidia.com>
Date:   Tue Jan 5 10:46:54 2021 +0200

    nvmet-rdma: Fix list_del corruption on queue establishment failure
    
    [ Upstream commit 9ceb7863537748c67fa43ac4f2f565819bbd36e4 ]
    
    When a queue is in NVMET_RDMA_Q_CONNECTING state, it may has some
    requests at rsp_wait_list. In case a disconnect occurs at this
    state, no one will empty this list and will return the requests to
    free_rsps list. Normally nvmet_rdma_queue_established() free those
    requests after moving the queue to NVMET_RDMA_Q_LIVE state, but in
    this case __nvmet_rdma_queue_disconnect() is called before. The
    crash happens at nvmet_rdma_free_rsps() when calling
    list_del(&rsp->free_list), because the request exists only at
    the wait list. To fix the issue, simply clear rsp_wait_list when
    destroying the queue.
    
    Signed-off-by: Israel Rukshin <israelr@nvidia.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74310d40e0a41483dc7125347a9ccc249655fd85
Author: Lalithambika Krishnakumar <lalithambika.krishnakumar@intel.com>
Date:   Wed Dec 23 14:09:00 2020 -0800

    nvme: avoid possible double fetch in handling CQE
    
    [ Upstream commit 62df80165d7f197c9c0652e7416164f294a96661 ]
    
    While handling the completion queue, keep a local copy of the command id
    from the DMA-accessible completion entry. This silences a time-of-check
    to time-of-use (TOCTOU) warning from KF/x[1], with respect to a
    Thunderclap[2] vulnerability analysis. The double-read impact appears
    benign.
    
    There may be a theoretical window for @command_id to be used as an
    adversary-controlled array-index-value for mounting a speculative
    execution attack, but that mitigation is saved for a potential follow-on.
    A man-in-the-middle attack on the data payload is out of scope for this
    analysis and is hopefully mitigated by filesystem integrity mechanisms.
    
    [1] https://github.com/intel/kernel-fuzzer-for-xen-project
    [2] http://thunderclap.io/thunderclap-paper-ndss2019.pdf
    Signed-off-by: Lalithambika Krishna Kumar <lalithambika.krishnakumar@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afc0002f639683ae98c337b272732fb47ff7ed31
Author: Gopal Tiwari <gtiwari@redhat.com>
Date:   Fri Dec 4 21:46:57 2020 +0530

    nvme-pci: mark Samsung PM1725a as IGNORE_DEV_SUBNQN
    
    [ Upstream commit 7ee5c78ca3895d44e918c38332921983ed678be0 ]
    
    A system with more than one of these SSDs will only have one usable.
    Hence the kernel fails to detect nvme devices due to duplicate cntlids.
    
    [    6.274554] nvme nvme1: Duplicate cntlid 33 with nvme0, rejecting
    [    6.274566] nvme nvme1: Removing after probe failure status: -22
    
    Adding the NVME_QUIRK_IGNORE_DEV_SUBNQN quirk to resolves the issue.
    
    Signed-off-by: Gopal Tiwari <gtiwari@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1151161dd029a7d736ffffa356a837441b47e515
Author: Po-Hsu Lin <po-hsu.lin@canonical.com>
Date:   Tue Jan 5 18:17:40 2021 +0800

    selftests: fix the return value for UDP GRO test
    
    [ Upstream commit 3503ee6c0bec5f173d606359e6384a5ef85492fb ]
    
    The udpgro.sh will always return 0 (unless the bpf selftest was not
    build first) even if there are some failed sub test-cases.
    
    Therefore the kselftest framework will report this case is OK.
    
    Check and return the exit status of each test to make it easier to
    spot real failures.
    
    Signed-off-by: Po-Hsu Lin <po-hsu.lin@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e1939396c77090d9be8f44a66fc7055acd122ec
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jan 5 20:15:15 2021 +1100

    net: ethernet: fs_enet: Add missing MODULE_LICENSE
    
    [ Upstream commit 445c6198fe7be03b7d38e66fe8d4b3187bc251d4 ]
    
    Since commit 1d6cd3929360 ("modpost: turn missing MODULE_LICENSE()
    into error") the ppc32_allmodconfig build fails with:
    
      ERROR: modpost: missing MODULE_LICENSE() in drivers/net/ethernet/freescale/fs_enet/mii-fec.o
      ERROR: modpost: missing MODULE_LICENSE() in drivers/net/ethernet/freescale/fs_enet/mii-bitbang.o
    
    Add the missing MODULE_LICENSEs to fix the build. Both files include a
    copyright header indicating they are GPL v2.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bd59057edf531d241979f458915d4d9cd5df359
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sun Jan 3 22:36:22 2021 +0100

    misdn: dsp: select CONFIG_BITREVERSE
    
    [ Upstream commit 51049bd903a81307f751babe15a1df8d197884e8 ]
    
    Without this, we run into a link error
    
    arm-linux-gnueabi-ld: drivers/isdn/mISDN/dsp_audio.o: in function `dsp_audio_generate_law_tables':
    (.text+0x30c): undefined reference to `byte_rev_table'
    arm-linux-gnueabi-ld: drivers/isdn/mISDN/dsp_audio.o:(.text+0x5e4): more undefined references to `byte_rev_table' follow
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb3700925c19d9e71668a3eacee05633542a2ac5
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Jan 4 19:44:53 2021 -0800

    arch/arc: add copy_user_page() to <asm/page.h> to fix build error on ARC
    
    [ Upstream commit 8a48c0a3360bf2bf4f40c980d0ec216e770e58ee ]
    
    fs/dax.c uses copy_user_page() but ARC does not provide that interface,
    resulting in a build error.
    
    Provide copy_user_page() in <asm/page.h>.
    
    ../fs/dax.c: In function 'copy_cow_page_dax':
    ../fs/dax.c:702:2: error: implicit declaration of function 'copy_user_page'; did you mean 'copy_to_user_page'? [-Werror=implicit-function-declaration]
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Dan Williams <dan.j.williams@intel.com>
    #Acked-by: Vineet Gupta <vgupta@synopsys.com> # v1
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Jan Kara <jack@suse.cz>
    Cc: linux-fsdevel@vger.kernel.org
    Cc: linux-nvdimm@lists.01.org
    #Reviewed-by: Ira Weiny <ira.weiny@intel.com> # v2
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fdaca86fc9b853c44e0104919989b6cb387cdc2
Author: Jan Kara <jack@suse.cz>
Date:   Thu Dec 10 10:44:33 2020 +0100

    bfq: Fix computation of shallow depth
    
    [ Upstream commit 6d4d273588378c65915acaf7b2ee74e9dd9c130a ]
    
    BFQ computes number of tags it allows to be allocated for each request type
    based on tag bitmap. However it uses 1 << bitmap.shift as number of
    available tags which is wrong. 'shift' is just an internal bitmap value
    containing logarithm of how many bits bitmap uses in each bitmap word.
    Thus number of tags allowed for some request types can be far to low.
    Use proper bitmap.depth which has the number of tags instead.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94dbb87fc0b25285a0eba2350f77316063151be5
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Mon Jan 4 20:43:29 2021 +0000

    io_uring: drop file refs after task cancel
    
    [ Upstream commit de7f1d9e99d8b99e4e494ad8fcd91f0c4c5c9357 ]
    
    io_uring fds marked O_CLOEXEC and we explicitly cancel all requests
    before going through exec, so we don't want to leave task's file
    references to not our anymore io_uring instances.
    
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 501e1875da3237a876f8d09e1a286ec2ff83d4fe
Author: Xu Yilun <yilun.xu@intel.com>
Date:   Mon Jan 4 09:29:09 2021 +0800

    spi: fix the divide by 0 error when calculating xfer waiting time
    
    [ Upstream commit 6170d077bf92c5b3dfbe1021688d3c0404f7c9e9 ]
    
    The xfer waiting time is the result of xfer->len / xfer->speed_hz. This
    patch makes the assumption of 100khz xfer speed if the xfer->speed_hz is
    not assigned and stays 0. This avoids the divide by 0 issue and ensures
    a reasonable tolerant waiting time.
    
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Link: https://lore.kernel.org/r/1609723749-3557-1-git-send-email-yilun.xu@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17a08680ab6a6c057949cb48c352933e09ea377a
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Wed Dec 23 15:35:42 2020 +0900

    kconfig: remove 'kvmconfig' and 'xenconfig' shorthands
    
    [ Upstream commit 9bba03d4473df0b707224d4d2067b62d1e1e2a77 ]
    
    Linux 5.10 is out. Remove the 'kvmconfig' and 'xenconfig' shorthands
    as previously announced.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2aa134d9abca5f31f09e3ad7610dd08b28c42b0a
Author: John Millikin <john@john-millikin.com>
Date:   Wed Dec 23 15:23:25 2020 +0900

    lib/raid6: Let $(UNROLL) rules work with macOS userland
    
    [ Upstream commit 0c36d88cff4d72149f94809303c5180b6f716d39 ]
    
    Older versions of BSD awk are fussy about the order of '-v' and '-f'
    flags, and require a space after the flag name. This causes build
    failures on platforms with an old awk, such as macOS and NetBSD.
    
    Since GNU awk and modern versions of BSD awk (distributed with
    FreeBSD/OpenBSD) are fine with either form, the definition of
    'cmd_unroll' can be trivially tweaked to let the lib/raid6 Makefile
    work with both old and new awk flag dialects.
    
    Signed-off-by: John Millikin <john@john-millikin.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3163d7c1fbd32d96d242557ad443fe595a9ee281
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue Dec 15 10:20:30 2020 +0100

    hwmon: (pwm-fan) Ensure that calculation doesn't discard big period values
    
    [ Upstream commit 1eda52334e6d13eb1a85f713ce06dd39342b5020 ]
    
    With MAX_PWM being defined to 255 the code
    
            unsigned long period;
            ...
            period = ctx->pwm->args.period;
            state.duty_cycle = DIV_ROUND_UP(pwm * (period - 1), MAX_PWM);
    
    calculates a too small value for duty_cycle if the configured period is
    big (either by discarding the 64 bit value ctx->pwm->args.period or by
    overflowing the multiplication). As this results in a too slow fan and
    so maybe an overheating machine better be safe than sorry and error out
    in .probe.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20201215092031.152243-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c3520e21f6b048901534463233d7aa73900a112
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sat Dec 26 15:27:14 2020 +0800

    habanalabs: Fix memleak in hl_device_reset
    
    [ Upstream commit b000700d6db50c933ce8b661154e26cf4ad06dba ]
    
    When kzalloc() fails, we should execute hl_mmu_fini()
    to release the MMU module. It's the same when
    hl_ctx_init() fails.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78755373aa48eb50367bcb674f99fdb79e236bff
Author: Xu Yilun <yilun.xu@intel.com>
Date:   Tue Dec 29 13:27:41 2020 +0800

    spi: altera: fix return value for altera_spi_txrx()
    
    [ Upstream commit ede090f5a438e97d0586f64067bbb956e30a2a31 ]
    
    This patch fixes the return value for altera_spi_txrx. It should return
    1 for interrupt transfer mode, and return 0 for polling transfer mode.
    
    The altera_spi_txrx() implements the spi_controller.transfer_one
    callback. According to the spi-summary.rst, the transfer_one should
    return 0 when transfer is finished, return 1 when transfer is still in
    progress.
    
    Signed-off-by: Xu Yilun <yilun.xu@intel.com>
    Link: https://lore.kernel.org/r/1609219662-27057-2-git-send-email-yilun.xu@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 560e9b900e12781706b686e7aa40fb59c9fa5dcb
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 13 16:11:05 2020 +0100

    staging: spmi: hisi-spmi-controller: Fix some error handling paths
    
    [ Upstream commit 12b38ea040b3bb2a30eb9cd488376df5be7ea81f ]
    
    IN the probe function, if an error occurs after calling
    'spmi_controller_alloc()', it must be undone by a corresponding
    'spmi_controller_put() call.
    
    In the remove function, use 'spmi_controller_put(ctrl)' instead of
    'kfree(ctrl)'.
    
    While a it fix an error message
    (s/spmi_add_controller/spmi_controller_add/)
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20201213151105.137731-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c78cff56baad24ebb10d748e1a1b78bae203debe
Author: Oded Gabbay <ogabbay@kernel.org>
Date:   Mon Dec 14 12:52:06 2020 +0200

    habanalabs: register to pci shutdown callback
    
    [ Upstream commit fcaebc7354188b0d708c79df4390fbabd4d9799d ]
    
    We need to make sure our device is idle when rebooting a virtual
    machine. This is done in the driver level.
    
    The firmware will later handle FLR but we want to be extra safe and
    stop the devices until the FLR is handled.
    
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68a9abf536ff3c54b80983780315d8426da43125
Author: Oded Gabbay <ogabbay@kernel.org>
Date:   Wed Dec 9 23:07:58 2020 +0200

    habanalabs/gaudi: retry loading TPC f/w on -EINTR
    
    [ Upstream commit 98e8781f008372057bd5cb059ca6b507371e473d ]
    
    If loading the firmware file for the TPC f/w was interrupted, try
    to do it again, up to 5 times.
    
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d0522d9688c787b33fa2dca17ee298829fafaba
Author: Oded Gabbay <ogabbay@kernel.org>
Date:   Wed Dec 9 19:50:46 2020 +0200

    habanalabs: adjust pci controller init to new firmware
    
    [ Upstream commit 377182a3cc5ae6cc17fb04d06864c975f9f71c18 ]
    
    When the firmware security is enabled, the pcie_aux_dbi_reg_addr
    register in the PCI controller is blocked. Therefore, ignore
    the result of writing to this register and assume it worked. Also
    remove the prints on errors in the internal ELBI write function.
    
    If the security is enabled, the firmware is responsible for setting
    this register correctly so we won't have any problem.
    
    If the security is disabled, the write will work (unless something
    is totally broken at the PCI level and then the whole sequence
    will fail).
    
    In addition, remove a write to register pcie_aux_dbi_reg_addr+4,
    which was never actually needed.
    
    Moreover, PCIE_DBI registers are blocked to access from host when
    firmware security is enabled. Use a different register to flush the
    writes.
    
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06b0d83b33b5b06e4228c56abbe32fb754813e8d
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Dec 14 23:34:13 2020 +0100

    ARM: dts: ux500/golden: Set display max brightness
    
    [ Upstream commit 7887cc89d5851cbdec49219e9614beec776af150 ]
    
    A too high brightness by default (default is max) makes the
    screen go blank. Set this to 15 as in the Vendor tree.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20201214223413.253893-1-linus.walleij@linaro.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5285a5eb3da527509a4b29b9d5aa03e99277bd8
Author: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
Date:   Fri Dec 18 11:55:37 2020 +0100

    ethernet: ucc_geth: fix definition and size of ucc_geth_tx_global_pram
    
    [ Upstream commit 887078de2a23689e29d6fa1b75d7cbc544c280be ]
    
    Table 8-53 in the QUICC Engine Reference manual shows definitions of
    fields up to a size of 192 bytes, not just 128. But in table 8-111,
    one does find the text
    
      Base Address of the Global Transmitter Parameter RAM Page. [...]
      The user needs to allocate 128 bytes for this page. The address must
      be aligned to the page size.
    
    I've checked both rev. 7 (11/2015) and rev. 9 (05/2018) of the manual;
    they both have this inconsistency (and the table numbers are the
    same).
    
    Adding a bit of debug printing, on my board the struct
    ucc_geth_tx_global_pram is allocated at offset 0x880, while
    the (opaque) ucc_geth_thread_data_tx gets allocated immediately
    afterwards, at 0x900. So whatever the engine writes into the thread
    data overlaps with the tail of the global tx pram (and devmem says
    that something does get written during a simple ping).
    
    I haven't observed any failure that could be attributed to this, but
    it seems to be the kind of thing that would be extremely hard to
    debug. So extend the struct definition so that we do allocate 192
    bytes.
    
    Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36afeaad76711ff80c2dc57450ad9c5f2f382b41
Author: Guido Günther <agx@sigxcpu.org>
Date:   Fri Dec 18 19:38:07 2020 +0100

    regulator: bd718x7: Add enable times
    
    [ Upstream commit 3b66e4a8e58a85af3212c7117d7a29c9ef6679a2 ]
    
    Use the typical startup times from the data sheet so boards get a
    reasonable default. Not setting any enable time can lead to board hangs
    when e.g. clocks are enabled too soon afterwards.
    
    This fixes gpu power domain resume on the Librem 5.
    
    [Moved #defines into driver, seems to be general agreement and avoids any
    cross tree issues -- broonie]
    
    Signed-off-by: Guido Günther <agx@sigxcpu.org>
    Reviewed-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Link: https://lore.kernel.org/r/41fb2ed19f584f138336344e2297ae7301f72b75.1608316658.git.agx@sigxcpu.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29543864c8b8d58e30ba1bc2feb99191f7971abb
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Dec 14 10:10:45 2020 +0000

    btrfs: fix transaction leak and crash after RO remount caused by qgroup rescan
    
    [ Upstream commit cb13eea3b49055bd78e6ddf39defd6340f7379fc ]
    
    If we remount a filesystem in RO mode while the qgroup rescan worker is
    running, we can end up having it still running after the remount is done,
    and at unmount time we may end up with an open transaction that ends up
    never getting committed. If that happens we end up with several memory
    leaks and can crash when hardware acceleration is unavailable for crc32c.
    Possibly it can lead to other nasty surprises too, due to use-after-free
    issues.
    
    The following steps explain how the problem happens.
    
    1) We have a filesystem mounted in RW mode and the qgroup rescan worker is
       running;
    
    2) We remount the filesystem in RO mode, and never stop/pause the rescan
       worker, so after the remount the rescan worker is still running. The
       important detail here is that the rescan task is still running after
       the remount operation committed any ongoing transaction through its
       call to btrfs_commit_super();
    
    3) The rescan is still running, and after the remount completed, the
       rescan worker started a transaction, after it finished iterating all
       leaves of the extent tree, to update the qgroup status item in the
       quotas tree. It does not commit the transaction, it only releases its
       handle on the transaction;
    
    4) A filesystem unmount operation starts shortly after;
    
    5) The unmount task, at close_ctree(), stops the transaction kthread,
       which had not had a chance to commit the open transaction since it was
       sleeping and the commit interval (default of 30 seconds) has not yet
       elapsed since the last time it committed a transaction;
    
    6) So after stopping the transaction kthread we still have the transaction
       used to update the qgroup status item open. At close_ctree(), when the
       filesystem is in RO mode and no transaction abort happened (or the
       filesystem is in error mode), we do not expect to have any transaction
       open, so we do not call btrfs_commit_super();
    
    7) We then proceed to destroy the work queues, free the roots and block
       groups, etc. After that we drop the last reference on the btree inode
       by calling iput() on it. Since there are dirty pages for the btree
       inode, corresponding to the COWed extent buffer for the quotas btree,
       btree_write_cache_pages() is invoked to flush those dirty pages. This
       results in creating a bio and submitting it, which makes us end up at
       btrfs_submit_metadata_bio();
    
    8) At btrfs_submit_metadata_bio() we end up at the if-then-else branch
       that calls btrfs_wq_submit_bio(), because check_async_write() returned
       a value of 1. This value of 1 is because we did not have hardware
       acceleration available for crc32c, so BTRFS_FS_CSUM_IMPL_FAST was not
       set in fs_info->flags;
    
    9) Then at btrfs_wq_submit_bio() we call btrfs_queue_work() against the
       workqueue at fs_info->workers, which was already freed before by the
       call to btrfs_stop_all_workers() at close_ctree(). This results in an
       invalid memory access due to a use-after-free, leading to a crash.
    
    When this happens, before the crash there are several warnings triggered,
    since we have reserved metadata space in a block group, the delayed refs
    reservation, etc:
    
      ------------[ cut here ]------------
      WARNING: CPU: 4 PID: 1729896 at fs/btrfs/block-group.c:125 btrfs_put_block_group+0x63/0xa0 [btrfs]
      Modules linked in: btrfs dm_snapshot dm_thin_pool (...)
      CPU: 4 PID: 1729896 Comm: umount Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      RIP: 0010:btrfs_put_block_group+0x63/0xa0 [btrfs]
      Code: f0 01 00 00 48 39 c2 75 (...)
      RSP: 0018:ffffb270826bbdd8 EFLAGS: 00010206
      RAX: 0000000000000001 RBX: ffff947ed73e4000 RCX: ffff947ebc8b29c8
      RDX: 0000000000000001 RSI: ffffffffc0b150a0 RDI: ffff947ebc8b2800
      RBP: ffff947ebc8b2800 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000001 R12: ffff947ed73e4110
      R13: ffff947ed73e4160 R14: ffff947ebc8b2988 R15: dead000000000100
      FS:  00007f15edfea840(0000) GS:ffff9481ad600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f37e2893320 CR3: 0000000138f68001 CR4: 00000000003706e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       btrfs_free_block_groups+0x17f/0x2f0 [btrfs]
       close_ctree+0x2ba/0x2fa [btrfs]
       generic_shutdown_super+0x6c/0x100
       kill_anon_super+0x14/0x30
       btrfs_kill_super+0x12/0x20 [btrfs]
       deactivate_locked_super+0x31/0x70
       cleanup_mnt+0x100/0x160
       task_work_run+0x68/0xb0
       exit_to_user_mode_prepare+0x1bb/0x1c0
       syscall_exit_to_user_mode+0x4b/0x260
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f15ee221ee7
      Code: ff 0b 00 f7 d8 64 89 01 48 (...)
      RSP: 002b:00007ffe9470f0f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      RAX: 0000000000000000 RBX: 00007f15ee347264 RCX: 00007f15ee221ee7
      RDX: ffffffffffffff78 RSI: 0000000000000000 RDI: 000056169701d000
      RBP: 0000561697018a30 R08: 0000000000000000 R09: 00007f15ee2e2be0
      R10: 000056169701efe0 R11: 0000000000000246 R12: 0000000000000000
      R13: 000056169701d000 R14: 0000561697018b40 R15: 0000561697018c60
      irq event stamp: 0
      hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      hardirqs last disabled at (0): [<ffffffff8bcae560>] copy_process+0x8a0/0x1d70
      softirqs last  enabled at (0): [<ffffffff8bcae560>] copy_process+0x8a0/0x1d70
      softirqs last disabled at (0): [<0000000000000000>] 0x0
      ---[ end trace dd74718fef1ed5c6 ]---
      ------------[ cut here ]------------
      WARNING: CPU: 2 PID: 1729896 at fs/btrfs/block-rsv.c:459 btrfs_release_global_block_rsv+0x70/0xc0 [btrfs]
      Modules linked in: btrfs dm_snapshot dm_thin_pool (...)
      CPU: 2 PID: 1729896 Comm: umount Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      RIP: 0010:btrfs_release_global_block_rsv+0x70/0xc0 [btrfs]
      Code: 48 83 bb b0 03 00 00 00 (...)
      RSP: 0018:ffffb270826bbdd8 EFLAGS: 00010206
      RAX: 000000000033c000 RBX: ffff947ed73e4000 RCX: 0000000000000000
      RDX: 0000000000000001 RSI: ffffffffc0b0d8c1 RDI: 00000000ffffffff
      RBP: ffff947ebc8b7000 R08: 0000000000000001 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000001 R12: ffff947ed73e4110
      R13: ffff947ed73e5278 R14: dead000000000122 R15: dead000000000100
      FS:  00007f15edfea840(0000) GS:ffff9481aca00000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000561a79f76e20 CR3: 0000000138f68006 CR4: 00000000003706e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       btrfs_free_block_groups+0x24c/0x2f0 [btrfs]
       close_ctree+0x2ba/0x2fa [btrfs]
       generic_shutdown_super+0x6c/0x100
       kill_anon_super+0x14/0x30
       btrfs_kill_super+0x12/0x20 [btrfs]
       deactivate_locked_super+0x31/0x70
       cleanup_mnt+0x100/0x160
       task_work_run+0x68/0xb0
       exit_to_user_mode_prepare+0x1bb/0x1c0
       syscall_exit_to_user_mode+0x4b/0x260
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f15ee221ee7
      Code: ff 0b 00 f7 d8 64 89 01 (...)
      RSP: 002b:00007ffe9470f0f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      RAX: 0000000000000000 RBX: 00007f15ee347264 RCX: 00007f15ee221ee7
      RDX: ffffffffffffff78 RSI: 0000000000000000 RDI: 000056169701d000
      RBP: 0000561697018a30 R08: 0000000000000000 R09: 00007f15ee2e2be0
      R10: 000056169701efe0 R11: 0000000000000246 R12: 0000000000000000
      R13: 000056169701d000 R14: 0000561697018b40 R15: 0000561697018c60
      irq event stamp: 0
      hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      hardirqs last disabled at (0): [<ffffffff8bcae560>] copy_process+0x8a0/0x1d70
      softirqs last  enabled at (0): [<ffffffff8bcae560>] copy_process+0x8a0/0x1d70
      softirqs last disabled at (0): [<0000000000000000>] 0x0
      ---[ end trace dd74718fef1ed5c7 ]---
      ------------[ cut here ]------------
      WARNING: CPU: 2 PID: 1729896 at fs/btrfs/block-group.c:3377 btrfs_free_block_groups+0x25d/0x2f0 [btrfs]
      Modules linked in: btrfs dm_snapshot dm_thin_pool (...)
      CPU: 5 PID: 1729896 Comm: umount Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      RIP: 0010:btrfs_free_block_groups+0x25d/0x2f0 [btrfs]
      Code: ad de 49 be 22 01 00 (...)
      RSP: 0018:ffffb270826bbde8 EFLAGS: 00010206
      RAX: ffff947ebeae1d08 RBX: ffff947ed73e4000 RCX: 0000000000000000
      RDX: 0000000000000001 RSI: ffff947e9d823ae8 RDI: 0000000000000246
      RBP: ffff947ebeae1d08 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000001 R12: ffff947ebeae1c00
      R13: ffff947ed73e5278 R14: dead000000000122 R15: dead000000000100
      FS:  00007f15edfea840(0000) GS:ffff9481ad200000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f1475d98ea8 CR3: 0000000138f68005 CR4: 00000000003706e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       close_ctree+0x2ba/0x2fa [btrfs]
       generic_shutdown_super+0x6c/0x100
       kill_anon_super+0x14/0x30
       btrfs_kill_super+0x12/0x20 [btrfs]
       deactivate_locked_super+0x31/0x70
       cleanup_mnt+0x100/0x160
       task_work_run+0x68/0xb0
       exit_to_user_mode_prepare+0x1bb/0x1c0
       syscall_exit_to_user_mode+0x4b/0x260
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f15ee221ee7
      Code: ff 0b 00 f7 d8 64 89 (...)
      RSP: 002b:00007ffe9470f0f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      RAX: 0000000000000000 RBX: 00007f15ee347264 RCX: 00007f15ee221ee7
      RDX: ffffffffffffff78 RSI: 0000000000000000 RDI: 000056169701d000
      RBP: 0000561697018a30 R08: 0000000000000000 R09: 00007f15ee2e2be0
      R10: 000056169701efe0 R11: 0000000000000246 R12: 0000000000000000
      R13: 000056169701d000 R14: 0000561697018b40 R15: 0000561697018c60
      irq event stamp: 0
      hardirqs last  enabled at (0): [<0000000000000000>] 0x0
      hardirqs last disabled at (0): [<ffffffff8bcae560>] copy_process+0x8a0/0x1d70
      softirqs last  enabled at (0): [<ffffffff8bcae560>] copy_process+0x8a0/0x1d70
      softirqs last disabled at (0): [<0000000000000000>] 0x0
      ---[ end trace dd74718fef1ed5c8 ]---
      BTRFS info (device sdc): space_info 4 has 268238848 free, is not full
      BTRFS info (device sdc): space_info total=268435456, used=114688, pinned=0, reserved=16384, may_use=0, readonly=65536
      BTRFS info (device sdc): global_block_rsv: size 0 reserved 0
      BTRFS info (device sdc): trans_block_rsv: size 0 reserved 0
      BTRFS info (device sdc): chunk_block_rsv: size 0 reserved 0
      BTRFS info (device sdc): delayed_block_rsv: size 0 reserved 0
      BTRFS info (device sdc): delayed_refs_rsv: size 524288 reserved 0
    
    And the crash, which only happens when we do not have crc32c hardware
    acceleration, produces the following trace immediately after those
    warnings:
    
      stack segment: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI
      CPU: 2 PID: 1749129 Comm: umount Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      RIP: 0010:btrfs_queue_work+0x36/0x190 [btrfs]
      Code: 54 55 53 48 89 f3 (...)
      RSP: 0018:ffffb27082443ae8 EFLAGS: 00010282
      RAX: 0000000000000004 RBX: ffff94810ee9ad90 RCX: 0000000000000000
      RDX: 0000000000000001 RSI: ffff94810ee9ad90 RDI: ffff947ed8ee75a0
      RBP: a56b6b6b6b6b6b6b R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000007 R11: 0000000000000001 R12: ffff947fa9b435a8
      R13: ffff94810ee9ad90 R14: 0000000000000000 R15: ffff947e93dc0000
      FS:  00007f3cfe974840(0000) GS:ffff9481ac600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f1b42995a70 CR3: 0000000127638003 CR4: 00000000003706e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       btrfs_wq_submit_bio+0xb3/0xd0 [btrfs]
       btrfs_submit_metadata_bio+0x44/0xc0 [btrfs]
       submit_one_bio+0x61/0x70 [btrfs]
       btree_write_cache_pages+0x414/0x450 [btrfs]
       ? kobject_put+0x9a/0x1d0
       ? trace_hardirqs_on+0x1b/0xf0
       ? _raw_spin_unlock_irqrestore+0x3c/0x60
       ? free_debug_processing+0x1e1/0x2b0
       do_writepages+0x43/0xe0
       ? lock_acquired+0x199/0x490
       __writeback_single_inode+0x59/0x650
       writeback_single_inode+0xaf/0x120
       write_inode_now+0x94/0xd0
       iput+0x187/0x2b0
       close_ctree+0x2c6/0x2fa [btrfs]
       generic_shutdown_super+0x6c/0x100
       kill_anon_super+0x14/0x30
       btrfs_kill_super+0x12/0x20 [btrfs]
       deactivate_locked_super+0x31/0x70
       cleanup_mnt+0x100/0x160
       task_work_run+0x68/0xb0
       exit_to_user_mode_prepare+0x1bb/0x1c0
       syscall_exit_to_user_mode+0x4b/0x260
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f3cfebabee7
      Code: ff 0b 00 f7 d8 64 89 01 (...)
      RSP: 002b:00007ffc9c9a05f8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      RAX: 0000000000000000 RBX: 00007f3cfecd1264 RCX: 00007f3cfebabee7
      RDX: ffffffffffffff78 RSI: 0000000000000000 RDI: 0000562b6b478000
      RBP: 0000562b6b473a30 R08: 0000000000000000 R09: 00007f3cfec6cbe0
      R10: 0000562b6b479fe0 R11: 0000000000000246 R12: 0000000000000000
      R13: 0000562b6b478000 R14: 0000562b6b473b40 R15: 0000562b6b473c60
      Modules linked in: btrfs dm_snapshot dm_thin_pool (...)
      ---[ end trace dd74718fef1ed5cc ]---
    
    Finally when we remove the btrfs module (rmmod btrfs), there are several
    warnings about objects that were allocated from our slabs but were never
    freed, consequence of the transaction that was never committed and got
    leaked:
    
      =============================================================================
      BUG btrfs_delayed_ref_head (Tainted: G    B   W        ): Objects remaining in btrfs_delayed_ref_head on __kmem_cache_shutdown()
      -----------------------------------------------------------------------------
    
      INFO: Slab 0x0000000094c2ae56 objects=24 used=2 fp=0x000000002bfa2521 flags=0x17fffc000010200
      CPU: 5 PID: 1729921 Comm: rmmod Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x8d/0xb5
       slab_err+0xb7/0xdc
       ? lock_acquired+0x199/0x490
       __kmem_cache_shutdown+0x1ac/0x3c0
       ? lock_release+0x20e/0x4c0
       kmem_cache_destroy+0x55/0x120
       btrfs_delayed_ref_exit+0x11/0x35 [btrfs]
       exit_btrfs_fs+0xa/0x59 [btrfs]
       __x64_sys_delete_module+0x194/0x260
       ? fpregs_assert_state_consistent+0x1e/0x40
       ? exit_to_user_mode_prepare+0x55/0x1c0
       ? trace_hardirqs_on+0x1b/0xf0
       do_syscall_64+0x33/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f693e305897
      Code: 73 01 c3 48 8b 0d f9 f5 (...)
      RSP: 002b:00007ffcf73eb508 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000559df504f760 RCX: 00007f693e305897
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000559df504f7c8
      RBP: 00007ffcf73eb568 R08: 0000000000000000 R09: 0000000000000000
      R10: 00007f693e378ac0 R11: 0000000000000206 R12: 00007ffcf73eb740
      R13: 00007ffcf73ec5a6 R14: 0000559df504f2a0 R15: 0000559df504f760
      INFO: Object 0x0000000050cbdd61 @offset=12104
      INFO: Allocated in btrfs_add_delayed_tree_ref+0xbb/0x480 [btrfs] age=1894 cpu=6 pid=1729873
            __slab_alloc.isra.0+0x109/0x1c0
            kmem_cache_alloc+0x7bb/0x830
            btrfs_add_delayed_tree_ref+0xbb/0x480 [btrfs]
            btrfs_free_tree_block+0x128/0x360 [btrfs]
            __btrfs_cow_block+0x489/0x5f0 [btrfs]
            btrfs_cow_block+0xf7/0x220 [btrfs]
            btrfs_search_slot+0x62a/0xc40 [btrfs]
            btrfs_del_orphan_item+0x65/0xd0 [btrfs]
            btrfs_find_orphan_roots+0x1bf/0x200 [btrfs]
            open_ctree+0x125a/0x18a0 [btrfs]
            btrfs_mount_root.cold+0x13/0xed [btrfs]
            legacy_get_tree+0x30/0x60
            vfs_get_tree+0x28/0xe0
            fc_mount+0xe/0x40
            vfs_kern_mount.part.0+0x71/0x90
            btrfs_mount+0x13b/0x3e0 [btrfs]
      INFO: Freed in __btrfs_run_delayed_refs+0x1117/0x1290 [btrfs] age=4292 cpu=2 pid=1729526
            kmem_cache_free+0x34c/0x3c0
            __btrfs_run_delayed_refs+0x1117/0x1290 [btrfs]
            btrfs_run_delayed_refs+0x81/0x210 [btrfs]
            commit_cowonly_roots+0xfb/0x300 [btrfs]
            btrfs_commit_transaction+0x367/0xc40 [btrfs]
            sync_filesystem+0x74/0x90
            generic_shutdown_super+0x22/0x100
            kill_anon_super+0x14/0x30
            btrfs_kill_super+0x12/0x20 [btrfs]
            deactivate_locked_super+0x31/0x70
            cleanup_mnt+0x100/0x160
            task_work_run+0x68/0xb0
            exit_to_user_mode_prepare+0x1bb/0x1c0
            syscall_exit_to_user_mode+0x4b/0x260
            entry_SYSCALL_64_after_hwframe+0x44/0xa9
      INFO: Object 0x0000000086e9b0ff @offset=12776
      INFO: Allocated in btrfs_add_delayed_tree_ref+0xbb/0x480 [btrfs] age=1900 cpu=6 pid=1729873
            __slab_alloc.isra.0+0x109/0x1c0
            kmem_cache_alloc+0x7bb/0x830
            btrfs_add_delayed_tree_ref+0xbb/0x480 [btrfs]
            btrfs_alloc_tree_block+0x2bf/0x360 [btrfs]
            alloc_tree_block_no_bg_flush+0x4f/0x60 [btrfs]
            __btrfs_cow_block+0x12d/0x5f0 [btrfs]
            btrfs_cow_block+0xf7/0x220 [btrfs]
            btrfs_search_slot+0x62a/0xc40 [btrfs]
            btrfs_del_orphan_item+0x65/0xd0 [btrfs]
            btrfs_find_orphan_roots+0x1bf/0x200 [btrfs]
            open_ctree+0x125a/0x18a0 [btrfs]
            btrfs_mount_root.cold+0x13/0xed [btrfs]
            legacy_get_tree+0x30/0x60
            vfs_get_tree+0x28/0xe0
            fc_mount+0xe/0x40
            vfs_kern_mount.part.0+0x71/0x90
      INFO: Freed in __btrfs_run_delayed_refs+0x1117/0x1290 [btrfs] age=3141 cpu=6 pid=1729803
            kmem_cache_free+0x34c/0x3c0
            __btrfs_run_delayed_refs+0x1117/0x1290 [btrfs]
            btrfs_run_delayed_refs+0x81/0x210 [btrfs]
            btrfs_write_dirty_block_groups+0x17d/0x3d0 [btrfs]
            commit_cowonly_roots+0x248/0x300 [btrfs]
            btrfs_commit_transaction+0x367/0xc40 [btrfs]
            close_ctree+0x113/0x2fa [btrfs]
            generic_shutdown_super+0x6c/0x100
            kill_anon_super+0x14/0x30
            btrfs_kill_super+0x12/0x20 [btrfs]
            deactivate_locked_super+0x31/0x70
            cleanup_mnt+0x100/0x160
            task_work_run+0x68/0xb0
            exit_to_user_mode_prepare+0x1bb/0x1c0
            syscall_exit_to_user_mode+0x4b/0x260
            entry_SYSCALL_64_after_hwframe+0x44/0xa9
      kmem_cache_destroy btrfs_delayed_ref_head: Slab cache still has objects
      CPU: 5 PID: 1729921 Comm: rmmod Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x8d/0xb5
       kmem_cache_destroy+0x119/0x120
       btrfs_delayed_ref_exit+0x11/0x35 [btrfs]
       exit_btrfs_fs+0xa/0x59 [btrfs]
       __x64_sys_delete_module+0x194/0x260
       ? fpregs_assert_state_consistent+0x1e/0x40
       ? exit_to_user_mode_prepare+0x55/0x1c0
       ? trace_hardirqs_on+0x1b/0xf0
       do_syscall_64+0x33/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f693e305897
      Code: 73 01 c3 48 8b 0d f9 f5 0b (...)
      RSP: 002b:00007ffcf73eb508 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000559df504f760 RCX: 00007f693e305897
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000559df504f7c8
      RBP: 00007ffcf73eb568 R08: 0000000000000000 R09: 0000000000000000
      R10: 00007f693e378ac0 R11: 0000000000000206 R12: 00007ffcf73eb740
      R13: 00007ffcf73ec5a6 R14: 0000559df504f2a0 R15: 0000559df504f760
      =============================================================================
      BUG btrfs_delayed_tree_ref (Tainted: G    B   W        ): Objects remaining in btrfs_delayed_tree_ref on __kmem_cache_shutdown()
      -----------------------------------------------------------------------------
    
      INFO: Slab 0x0000000011f78dc0 objects=37 used=2 fp=0x0000000032d55d91 flags=0x17fffc000010200
      CPU: 3 PID: 1729921 Comm: rmmod Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x8d/0xb5
       slab_err+0xb7/0xdc
       ? lock_acquired+0x199/0x490
       __kmem_cache_shutdown+0x1ac/0x3c0
       ? lock_release+0x20e/0x4c0
       kmem_cache_destroy+0x55/0x120
       btrfs_delayed_ref_exit+0x1d/0x35 [btrfs]
       exit_btrfs_fs+0xa/0x59 [btrfs]
       __x64_sys_delete_module+0x194/0x260
       ? fpregs_assert_state_consistent+0x1e/0x40
       ? exit_to_user_mode_prepare+0x55/0x1c0
       ? trace_hardirqs_on+0x1b/0xf0
       do_syscall_64+0x33/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f693e305897
      Code: 73 01 c3 48 8b 0d f9 f5 (...)
      RSP: 002b:00007ffcf73eb508 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000559df504f760 RCX: 00007f693e305897
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000559df504f7c8
      RBP: 00007ffcf73eb568 R08: 0000000000000000 R09: 0000000000000000
      R10: 00007f693e378ac0 R11: 0000000000000206 R12: 00007ffcf73eb740
      R13: 00007ffcf73ec5a6 R14: 0000559df504f2a0 R15: 0000559df504f760
      INFO: Object 0x000000001a340018 @offset=4408
      INFO: Allocated in btrfs_add_delayed_tree_ref+0x9e/0x480 [btrfs] age=1917 cpu=6 pid=1729873
            __slab_alloc.isra.0+0x109/0x1c0
            kmem_cache_alloc+0x7bb/0x830
            btrfs_add_delayed_tree_ref+0x9e/0x480 [btrfs]
            btrfs_free_tree_block+0x128/0x360 [btrfs]
            __btrfs_cow_block+0x489/0x5f0 [btrfs]
            btrfs_cow_block+0xf7/0x220 [btrfs]
            btrfs_search_slot+0x62a/0xc40 [btrfs]
            btrfs_del_orphan_item+0x65/0xd0 [btrfs]
            btrfs_find_orphan_roots+0x1bf/0x200 [btrfs]
            open_ctree+0x125a/0x18a0 [btrfs]
            btrfs_mount_root.cold+0x13/0xed [btrfs]
            legacy_get_tree+0x30/0x60
            vfs_get_tree+0x28/0xe0
            fc_mount+0xe/0x40
            vfs_kern_mount.part.0+0x71/0x90
            btrfs_mount+0x13b/0x3e0 [btrfs]
      INFO: Freed in __btrfs_run_delayed_refs+0x63d/0x1290 [btrfs] age=4167 cpu=4 pid=1729795
            kmem_cache_free+0x34c/0x3c0
            __btrfs_run_delayed_refs+0x63d/0x1290 [btrfs]
            btrfs_run_delayed_refs+0x81/0x210 [btrfs]
            btrfs_commit_transaction+0x60/0xc40 [btrfs]
            create_subvol+0x56a/0x990 [btrfs]
            btrfs_mksubvol+0x3fb/0x4a0 [btrfs]
            __btrfs_ioctl_snap_create+0x119/0x1a0 [btrfs]
            btrfs_ioctl_snap_create+0x58/0x80 [btrfs]
            btrfs_ioctl+0x1a92/0x36f0 [btrfs]
            __x64_sys_ioctl+0x83/0xb0
            do_syscall_64+0x33/0x80
            entry_SYSCALL_64_after_hwframe+0x44/0xa9
      INFO: Object 0x000000002b46292a @offset=13648
      INFO: Allocated in btrfs_add_delayed_tree_ref+0x9e/0x480 [btrfs] age=1923 cpu=6 pid=1729873
            __slab_alloc.isra.0+0x109/0x1c0
            kmem_cache_alloc+0x7bb/0x830
            btrfs_add_delayed_tree_ref+0x9e/0x480 [btrfs]
            btrfs_alloc_tree_block+0x2bf/0x360 [btrfs]
            alloc_tree_block_no_bg_flush+0x4f/0x60 [btrfs]
            __btrfs_cow_block+0x12d/0x5f0 [btrfs]
            btrfs_cow_block+0xf7/0x220 [btrfs]
            btrfs_search_slot+0x62a/0xc40 [btrfs]
            btrfs_del_orphan_item+0x65/0xd0 [btrfs]
            btrfs_find_orphan_roots+0x1bf/0x200 [btrfs]
            open_ctree+0x125a/0x18a0 [btrfs]
            btrfs_mount_root.cold+0x13/0xed [btrfs]
            legacy_get_tree+0x30/0x60
            vfs_get_tree+0x28/0xe0
            fc_mount+0xe/0x40
            vfs_kern_mount.part.0+0x71/0x90
      INFO: Freed in __btrfs_run_delayed_refs+0x63d/0x1290 [btrfs] age=3164 cpu=6 pid=1729803
            kmem_cache_free+0x34c/0x3c0
            __btrfs_run_delayed_refs+0x63d/0x1290 [btrfs]
            btrfs_run_delayed_refs+0x81/0x210 [btrfs]
            commit_cowonly_roots+0xfb/0x300 [btrfs]
            btrfs_commit_transaction+0x367/0xc40 [btrfs]
            close_ctree+0x113/0x2fa [btrfs]
            generic_shutdown_super+0x6c/0x100
            kill_anon_super+0x14/0x30
            btrfs_kill_super+0x12/0x20 [btrfs]
            deactivate_locked_super+0x31/0x70
            cleanup_mnt+0x100/0x160
            task_work_run+0x68/0xb0
            exit_to_user_mode_prepare+0x1bb/0x1c0
            syscall_exit_to_user_mode+0x4b/0x260
            entry_SYSCALL_64_after_hwframe+0x44/0xa9
      kmem_cache_destroy btrfs_delayed_tree_ref: Slab cache still has objects
      CPU: 5 PID: 1729921 Comm: rmmod Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x8d/0xb5
       kmem_cache_destroy+0x119/0x120
       btrfs_delayed_ref_exit+0x1d/0x35 [btrfs]
       exit_btrfs_fs+0xa/0x59 [btrfs]
       __x64_sys_delete_module+0x194/0x260
       ? fpregs_assert_state_consistent+0x1e/0x40
       ? exit_to_user_mode_prepare+0x55/0x1c0
       ? trace_hardirqs_on+0x1b/0xf0
       do_syscall_64+0x33/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f693e305897
      Code: 73 01 c3 48 8b 0d f9 f5 (...)
      RSP: 002b:00007ffcf73eb508 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000559df504f760 RCX: 00007f693e305897
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000559df504f7c8
      RBP: 00007ffcf73eb568 R08: 0000000000000000 R09: 0000000000000000
      R10: 00007f693e378ac0 R11: 0000000000000206 R12: 00007ffcf73eb740
      R13: 00007ffcf73ec5a6 R14: 0000559df504f2a0 R15: 0000559df504f760
      =============================================================================
      BUG btrfs_delayed_extent_op (Tainted: G    B   W        ): Objects remaining in btrfs_delayed_extent_op on __kmem_cache_shutdown()
      -----------------------------------------------------------------------------
    
      INFO: Slab 0x00000000f145ce2f objects=22 used=1 fp=0x00000000af0f92cf flags=0x17fffc000010200
      CPU: 5 PID: 1729921 Comm: rmmod Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x8d/0xb5
       slab_err+0xb7/0xdc
       ? lock_acquired+0x199/0x490
       __kmem_cache_shutdown+0x1ac/0x3c0
       ? __mutex_unlock_slowpath+0x45/0x2a0
       kmem_cache_destroy+0x55/0x120
       exit_btrfs_fs+0xa/0x59 [btrfs]
       __x64_sys_delete_module+0x194/0x260
       ? fpregs_assert_state_consistent+0x1e/0x40
       ? exit_to_user_mode_prepare+0x55/0x1c0
       ? trace_hardirqs_on+0x1b/0xf0
       do_syscall_64+0x33/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f693e305897
      Code: 73 01 c3 48 8b 0d f9 f5 (...)
      RSP: 002b:00007ffcf73eb508 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000559df504f760 RCX: 00007f693e305897
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000559df504f7c8
      RBP: 00007ffcf73eb568 R08: 0000000000000000 R09: 0000000000000000
      R10: 00007f693e378ac0 R11: 0000000000000206 R12: 00007ffcf73eb740
      R13: 00007ffcf73ec5a6 R14: 0000559df504f2a0 R15: 0000559df504f760
      INFO: Object 0x000000004cf95ea8 @offset=6264
      INFO: Allocated in btrfs_alloc_tree_block+0x1e0/0x360 [btrfs] age=1931 cpu=6 pid=1729873
            __slab_alloc.isra.0+0x109/0x1c0
            kmem_cache_alloc+0x7bb/0x830
            btrfs_alloc_tree_block+0x1e0/0x360 [btrfs]
            alloc_tree_block_no_bg_flush+0x4f/0x60 [btrfs]
            __btrfs_cow_block+0x12d/0x5f0 [btrfs]
            btrfs_cow_block+0xf7/0x220 [btrfs]
            btrfs_search_slot+0x62a/0xc40 [btrfs]
            btrfs_del_orphan_item+0x65/0xd0 [btrfs]
            btrfs_find_orphan_roots+0x1bf/0x200 [btrfs]
            open_ctree+0x125a/0x18a0 [btrfs]
            btrfs_mount_root.cold+0x13/0xed [btrfs]
            legacy_get_tree+0x30/0x60
            vfs_get_tree+0x28/0xe0
            fc_mount+0xe/0x40
            vfs_kern_mount.part.0+0x71/0x90
            btrfs_mount+0x13b/0x3e0 [btrfs]
      INFO: Freed in __btrfs_run_delayed_refs+0xabd/0x1290 [btrfs] age=3173 cpu=6 pid=1729803
            kmem_cache_free+0x34c/0x3c0
            __btrfs_run_delayed_refs+0xabd/0x1290 [btrfs]
            btrfs_run_delayed_refs+0x81/0x210 [btrfs]
            commit_cowonly_roots+0xfb/0x300 [btrfs]
            btrfs_commit_transaction+0x367/0xc40 [btrfs]
            close_ctree+0x113/0x2fa [btrfs]
            generic_shutdown_super+0x6c/0x100
            kill_anon_super+0x14/0x30
            btrfs_kill_super+0x12/0x20 [btrfs]
            deactivate_locked_super+0x31/0x70
            cleanup_mnt+0x100/0x160
            task_work_run+0x68/0xb0
            exit_to_user_mode_prepare+0x1bb/0x1c0
            syscall_exit_to_user_mode+0x4b/0x260
            entry_SYSCALL_64_after_hwframe+0x44/0xa9
      kmem_cache_destroy btrfs_delayed_extent_op: Slab cache still has objects
      CPU: 3 PID: 1729921 Comm: rmmod Tainted: G    B   W         5.10.0-rc4-btrfs-next-73 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
      Call Trace:
       dump_stack+0x8d/0xb5
       kmem_cache_destroy+0x119/0x120
       exit_btrfs_fs+0xa/0x59 [btrfs]
       __x64_sys_delete_module+0x194/0x260
       ? fpregs_assert_state_consistent+0x1e/0x40
       ? exit_to_user_mode_prepare+0x55/0x1c0
       ? trace_hardirqs_on+0x1b/0xf0
       do_syscall_64+0x33/0x80
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f693e305897
      Code: 73 01 c3 48 8b 0d f9 (...)
      RSP: 002b:00007ffcf73eb508 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000559df504f760 RCX: 00007f693e305897
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000559df504f7c8
      RBP: 00007ffcf73eb568 R08: 0000000000000000 R09: 0000000000000000
      R10: 00007f693e378ac0 R11: 0000000000000206 R12: 00007ffcf73eb740
      R13: 00007ffcf73ec5a6 R14: 0000559df504f2a0 R15: 0000559df504f760
      BTRFS: state leak: start 30408704 end 30425087 state 1 in tree 1 refs 1
    
    Fix this issue by having the remount path stop the qgroup rescan worker
    when we are remounting RO and teach the rescan worker to stop when a
    remount is in progress. If later a remount in RW mode happens, we are
    already resuming the qgroup rescan worker through the call to
    btrfs_qgroup_rescan_resume(), so we do not need to worry about that.
    
    Tested-by: Fabian Vogt <fvogt@suse.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f89d84b35af33b58ec67c78ac7cc670f57ae2466
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sun Dec 6 15:56:22 2020 +0000

    btrfs: merge critical sections of discard lock in workfn
    
    [ Upstream commit 8fc058597a283e9a37720abb0e8d68e342b9387d ]
    
    btrfs_discard_workfn() drops discard_ctl->lock just to take it again in
    a moment in btrfs_discard_schedule_work(). Avoid that and also reuse
    ktime.
    
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33061bd104cbf6798738cf2f5608f18910d9f9da
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Sun Dec 6 15:56:20 2020 +0000

    btrfs: fix async discard stall
    
    [ Upstream commit ea9ed87c73e87e044b2c58d658eb4ba5216bc488 ]
    
    Might happen that bg->discard_eligible_time was changed without
    rescheduling, so btrfs_discard_workfn() wakes up earlier than that new
    time, peek_discard_list() returns NULL, and all work halts and goes to
    sleep without further rescheduling even there are block groups to
    discard.
    
    It happens pretty often, but not so visible from the userspace because
    after some time it usually will be kicked off anyway by someone else
    calling btrfs_discard_reschedule_work().
    
    Fix it by continue rescheduling if block group discard lists are not
    empty.
    
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d18e04ce283a2aa28815a04d274157d27b1872cf
Author: Carl Huang <cjhuang@codeaurora.org>
Date:   Thu Dec 17 09:04:57 2020 +0200

    ath11k: qmi: try to allocate a big block of DMA memory first
    
    [ Upstream commit f6f92968e1e5a7a9d211faaebefc26ebe408dad7 ]
    
    Not all firmware versions support allocating DMA memory in smaller blocks so
    first try to allocate big block of DMA memory for QMI. If the allocation fails,
    let firmware request multiple blocks of DMA memory with smaller size.
    
    This also fixes an unnecessary error message seen during ath11k probe on
    QCA6390:
    
    ath11k_pci 0000:06:00.0: Respond mem req failed, result: 1, err: 0
    ath11k_pci 0000:06:00.0: qmi failed to respond fw mem req:-22
    
    Tested-on: QCA6390 hw2.0 PCI WLAN.HST.1.0.1-01740-QCAHSTSWPLZ_V2_TO_X86-1
    
    Signed-off-by: Carl Huang <cjhuang@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1608127593-15192-1-git-send-email-kvalo@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc77e4a020aa308265a67ed4cb3188100a1787a0
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Dec 17 11:53:40 2020 +0300

    netfilter: ipset: fixes possible oops in mtype_resize
    
    [ Upstream commit 2b33d6ffa9e38f344418976b06057e2fc2aa9e2a ]
    
    currently mtype_resize() can cause oops
    
            t = ip_set_alloc(htable_size(htable_bits));
            if (!t) {
                    ret = -ENOMEM;
                    goto out;
            }
            t->hregion = ip_set_alloc(ahash_sizeof_regions(htable_bits));
    
    Increased htable_bits can force htable_size() to return 0.
    In own turn ip_set_alloc(0) returns not 0 but ZERO_SIZE_PTR,
    so follwoing access to t->hregion should trigger an OOPS.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Acked-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c871060d3eaa64946133bfdce0d3d443741ed811
Author: Carl Huang <cjhuang@codeaurora.org>
Date:   Fri Dec 11 00:56:13 2020 -0500

    ath11k: fix crash caused by NULL rx_channel
    
    [ Upstream commit 3597010630d0aa96f5778901e691c6068bb86318 ]
    
    During connect and disconnect stress test, crashed happened
    because ar->rx_channel is NULL. Fix it by checking whether
    ar->rx_channel is NULL.
    
    Crash stack is as below:
    RIP: 0010:ath11k_dp_rx_h_ppdu+0x110/0x230 [ath11k]
    [ 5028.808963]  ath11k_dp_rx_wbm_err+0x14a/0x360 [ath11k]
    [ 5028.808970]  ath11k_dp_rx_process_wbm_err+0x41c/0x520 [ath11k]
    [ 5028.808978]  ath11k_dp_service_srng+0x25e/0x2d0 [ath11k]
    [ 5028.808982]  ath11k_pci_ext_grp_napi_poll+0x23/0x80 [ath11k_pci]
    [ 5028.808986]  net_rx_action+0x27e/0x400
    [ 5028.808990]  __do_softirq+0xfd/0x2bb
    [ 5028.808993]  irq_exit+0xa6/0xb0
    [ 5028.808995]  do_IRQ+0x56/0xe0
    [ 5028.808997]  common_interrupt+0xf/0xf
    
    Tested-on: QCA6390 hw2.0 PCI WLAN.HST.1.0.1-01740-QCAHSTSWPLZ_V2_TO_X86-1
    
    Signed-off-by: Carl Huang <cjhuang@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201211055613.9310-1-cjhuang@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54cfdd65070e51bd4ff55c7cef105f12f9c5d264
Author: Carl Philipp Klemm <philipp@uvos.xyz>
Date:   Mon Dec 7 20:58:01 2020 +0100

    ARM: omap2: pmic-cpcap: fix maximum voltage to be consistent with defaults on xt875
    
    [ Upstream commit c0bc969c176b10598b31d5d1a5edf9a5261f0a9f ]
    
    xt875 comes up with a iva voltage of 1375000 and android runs at this too. fix
    maximum voltage to be consistent with this.
    
    Signed-off-by: Carl Philipp Klemm <philipp@uvos.xyz>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6169a5cfaacc8294cd360d9b864a212f545bca95
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Nov 22 04:36:55 2020 +0900

    ARC: build: move symlink creation to arch/arc/Makefile to avoid race
    
    [ Upstream commit c5e6ae563c802c4d828d42e134af64004db2e58c ]
    
    If you run 'make uImage uImage.gz' with the parallel option, uImage.gz
    will be created by two threads simultaneously.
    
    This is because arch/arc/Makefile does not specify the dependency
    between uImage and uImage.gz. Hence, GNU Make assumes they can be
    built in parallel. One thread descends into arch/arc/boot/ to create
    uImage, and another to create uImage.gz.
    
    Please notice the same log is displayed twice in the following steps:
    
      $ export CROSS_COMPILE=<your-arc-compiler-prefix>
      $ make -s ARCH=arc defconfig
      $ make -j$(nproc) ARCH=arc uImage uImage.gz
      [ snip ]
        LD      vmlinux
        SORTTAB vmlinux
        SYSMAP  System.map
        OBJCOPY arch/arc/boot/vmlinux.bin
        OBJCOPY arch/arc/boot/vmlinux.bin
        GZIP    arch/arc/boot/vmlinux.bin.gz
        GZIP    arch/arc/boot/vmlinux.bin.gz
        UIMAGE  arch/arc/boot/uImage.gz
        UIMAGE  arch/arc/boot/uImage.gz
      Image Name:   Linux-5.10.0-rc4-00003-g62f23044
      Created:      Sun Nov 22 02:52:26 2020
      Image Type:   ARC Linux Kernel Image (gzip compressed)
      Data Size:    2109376 Bytes = 2059.94 KiB = 2.01 MiB
      Load Address: 80000000
      Entry Point:  80004000
        Image arch/arc/boot/uImage is ready
      Image Name:   Linux-5.10.0-rc4-00003-g62f23044
      Created:      Sun Nov 22 02:52:26 2020
      Image Type:   ARC Linux Kernel Image (gzip compressed)
      Data Size:    2815455 Bytes = 2749.47 KiB = 2.69 MiB
      Load Address: 80000000
      Entry Point:  80004000
    
    This is a race between the two threads trying to write to the same file
    arch/arc/boot/uImage.gz. This is a potential problem that can generate
    a broken file.
    
    I fixed a similar problem for ARM by commit 3939f3345050 ("ARM: 8418/1:
    add boot image dependencies to not generate invalid images").
    
    I highly recommend to avoid such build rules that cause a race condition.
    
    Move the uImage rule to arch/arc/Makefile.
    
    Another strangeness is that arch/arc/boot/Makefile compares the
    timestamps between $(obj)/uImage and $(obj)/uImage.*:
    
      $(obj)/uImage: $(obj)/uImage.$(suffix-y)
              @ln -sf $(notdir $<) $@
              @echo '  Image $@ is ready'
    
    This does not work as expected since $(obj)/uImage is a symlink.
    The symlink should be created in a phony target rule.
    
    I used $(kecho) instead of echo to suppress the message
    'Image arch/arc/boot/uImage is ready' when the -s option is given.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 443fb88d6dea55e7262923fb9f76213bc089ae45
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Nov 22 04:36:54 2020 +0900

    ARC: build: add boot_targets to PHONY
    
    [ Upstream commit 0cfccb3c04934cdef42ae26042139f16e805b5f7 ]
    
    The top-level boot_targets (uImage and uImage.*) should be phony
    targets. They just let Kbuild descend into arch/arc/boot/ and create
    files there.
    
    If a file exists in the top directory with the same name, the boot
    image will not be created.
    
    You can confirm it by the following steps:
    
      $ export CROSS_COMPILE=<your-arc-compiler-prefix>
      $ make -s ARCH=arc defconfig all   # vmlinux will be built
      $ touch uImage.gz
      $ make ARCH=arc uImage.gz
      CALL    scripts/atomic/check-atomics.sh
      CALL    scripts/checksyscalls.sh
      CHK     include/generated/compile.h
      # arch/arc/boot/uImage.gz is not created
    
    Specify the targets as PHONY to fix this.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1c4b5ff9655d643982a92fdf0d0ef38cf6c7875
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Nov 22 04:36:53 2020 +0900

    ARC: build: add uImage.lzma to the top-level target
    
    [ Upstream commit f2712ec76a5433e5ec9def2bd52a95df1f96d050 ]
    
    arch/arc/boot/Makefile supports uImage.lzma, but you cannot do
    'make uImage.lzma' because the corresponding target is missing
    in arch/arc/Makefile. Add it.
    
    I also changed the assignment operator '+=' to ':=' since this is the
    only place where we expect this variable to be set.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf4592a2d740a4eb6f663290fdf77d792bb23834
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Nov 22 04:36:52 2020 +0900

    ARC: build: remove non-existing bootpImage from KBUILD_IMAGE
    
    [ Upstream commit 9836720911cfec25d3fbdead1c438bf87e0f2841 ]
    
    The deb-pkg builds for ARCH=arc fail.
    
      $ export CROSS_COMPILE=<your-arc-compiler-prefix>
      $ make -s ARCH=arc defconfig
      $ make ARCH=arc bindeb-pkg
      SORTTAB vmlinux
      SYSMAP  System.map
      MODPOST Module.symvers
      make KERNELRELEASE=5.10.0-rc4 ARCH=arc KBUILD_BUILD_VERSION=2 -f ./Makefile intdeb-pkg
      sh ./scripts/package/builddeb
      cp: cannot stat 'arch/arc/boot/bootpImage': No such file or directory
      make[4]: *** [scripts/Makefile.package:87: intdeb-pkg] Error 1
      make[3]: *** [Makefile:1527: intdeb-pkg] Error 2
      make[2]: *** [debian/rules:13: binary-arch] Error 2
      dpkg-buildpackage: error: debian/rules binary subprocess returned exit status 2
      make[1]: *** [scripts/Makefile.package:83: bindeb-pkg] Error 2
      make: *** [Makefile:1527: bindeb-pkg] Error 2
    
    The reason is obvious; arch/arc/Makefile sets $(boot)/bootpImage as
    the default image, but there is no rule to build it.
    
    Remove the meaningless KBUILD_IMAGE assignment so it will fallback
    to the default vmlinux. With this change, you can build the deb package.
    
    I removed the 'bootpImage' target as well. At best, it provides
    'make bootpImage' as an alias of 'make vmlinux', but I do not see
    much sense in doing so.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7f32822a44af3b09a1641d26803a8fea714ff88
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Mon Jan 11 04:00:30 2021 +0000

    io_uring: drop mm and files after task_work_run
    
    [ Upstream commit d434ab6db524ab1efd0afad4ffa1ee65ca6ac097 ]
    
    __io_req_task_submit() run by task_work can set mm and files, but
    io_sq_thread() in some cases, and because __io_sq_thread_acquire_mm()
    and __io_sq_thread_acquire_files() do a simple current->mm/files check
    it may end up submitting IO with mm/files of another task.
    
    We also need to drop it after in the end to drop potentially grabbed
    references to them.
    
    Cc: stable@vger.kernel.org # 5.9+
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3647cddfee6f5368028ec61b6232d0e7283b652
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Mon Jan 11 04:00:31 2021 +0000

    io_uring: don't take files/mm for a dead task
    
    [ Upstream commit 621fadc22365f3cf307bcd9048e3372e9ee9cdcc ]
    
    In rare cases a task may be exiting while io_ring_exit_work() trying to
    cancel/wait its requests. It's ok for __io_sq_thread_acquire_mm()
    because of SQPOLL check, but is not for __io_sq_thread_acquire_files().
    Play safe and fail for both of them.
    
    Cc: stable@vger.kernel.org # 5.5+
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85958f60ebba739e9b762b8d160986aea5d90ea0
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Dec 17 13:24:15 2020 -0500

    ext4: don't leak old mountpoint samples
    
    [ Upstream commit 5a3b590d4b2db187faa6f06adc9a53d6199fb1f9 ]
    
    When the first file is opened, ext4 samples the mountpoint of the
    filesystem in 64 bytes of the super block.  It does so using
    strlcpy(), this means that the remaining bytes in the super block
    string buffer are untouched.  If the mount point before had a longer
    path than the current one, it can be reconstructed.
    
    Consider the case where the fs was mounted to "/media/johnjdeveloper"
    and later to "/".  The super block buffer then contains
    "/\x00edia/johnjdeveloper".
    
    This case was seen in the wild and caused confusion how the name
    of a developer ands up on the super block of a filesystem used
    in production...
    
    Fix this by using strncpy() instead of strlcpy().  The superblock
    field is defined to be a fixed-size char array, and it is already
    marked using __nonstring in fs/ext4/ext4.h.  The consumer of the field
    in e2fsprogs already assumes that in the case of a 64+ byte mount
    path, that s_last_mounted will not be NUL terminated.
    
    Link: https://lore.kernel.org/r/X9ujIOJG/HqMr88R@mit.edu
    Reported-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41b5ec745ccf590c5e9af7d6704df53755c3db44
Author: Su Yue <l@damenly.su>
Date:   Sun Jan 3 17:28:04 2021 +0800

    btrfs: tree-checker: check if chunk item end overflows
    
    [ Upstream commit 347fb0cfc9bab5195c6701e62eda488310d7938f ]
    
    While mounting a crafted image provided by user, kernel panics due to
    the invalid chunk item whose end is less than start.
    
      [66.387422] loop: module loaded
      [66.389773] loop0: detected capacity change from 262144 to 0
      [66.427708] BTRFS: device fsid a62e00e8-e94e-4200-8217-12444de93c2e devid 1 transid 12 /dev/loop0 scanned by mount (613)
      [66.431061] BTRFS info (device loop0): disk space caching is enabled
      [66.431078] BTRFS info (device loop0): has skinny extents
      [66.437101] BTRFS error: insert state: end < start 29360127 37748736
      [66.437136] ------------[ cut here ]------------
      [66.437140] WARNING: CPU: 16 PID: 613 at fs/btrfs/extent_io.c:557 insert_state.cold+0x1a/0x46 [btrfs]
      [66.437369] CPU: 16 PID: 613 Comm: mount Tainted: G           O      5.11.0-rc1-custom #45
      [66.437374] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ArchLinux 1.14.0-1 04/01/2014
      [66.437378] RIP: 0010:insert_state.cold+0x1a/0x46 [btrfs]
      [66.437420] RSP: 0018:ffff93e5414c3908 EFLAGS: 00010286
      [66.437427] RAX: 0000000000000000 RBX: 0000000001bfffff RCX: 0000000000000000
      [66.437431] RDX: 0000000000000000 RSI: ffffffffb90d4660 RDI: 00000000ffffffff
      [66.437434] RBP: ffff93e5414c3938 R08: 0000000000000001 R09: 0000000000000001
      [66.437438] R10: ffff93e5414c3658 R11: 0000000000000000 R12: ffff8ec782d72aa0
      [66.437441] R13: ffff8ec78bc71628 R14: 0000000000000000 R15: 0000000002400000
      [66.437447] FS:  00007f01386a8580(0000) GS:ffff8ec809000000(0000) knlGS:0000000000000000
      [66.437451] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [66.437455] CR2: 00007f01382fa000 CR3: 0000000109a34000 CR4: 0000000000750ee0
      [66.437460] PKRU: 55555554
      [66.437464] Call Trace:
      [66.437475]  set_extent_bit+0x652/0x740 [btrfs]
      [66.437539]  set_extent_bits_nowait+0x1d/0x20 [btrfs]
      [66.437576]  add_extent_mapping+0x1e0/0x2f0 [btrfs]
      [66.437621]  read_one_chunk+0x33c/0x420 [btrfs]
      [66.437674]  btrfs_read_chunk_tree+0x6a4/0x870 [btrfs]
      [66.437708]  ? kvm_sched_clock_read+0x18/0x40
      [66.437739]  open_ctree+0xb32/0x1734 [btrfs]
      [66.437781]  ? bdi_register_va+0x1b/0x20
      [66.437788]  ? super_setup_bdi_name+0x79/0xd0
      [66.437810]  btrfs_mount_root.cold+0x12/0xeb [btrfs]
      [66.437854]  ? __kmalloc_track_caller+0x217/0x3b0
      [66.437873]  legacy_get_tree+0x34/0x60
      [66.437880]  vfs_get_tree+0x2d/0xc0
      [66.437888]  vfs_kern_mount.part.0+0x78/0xc0
      [66.437897]  vfs_kern_mount+0x13/0x20
      [66.437902]  btrfs_mount+0x11f/0x3c0 [btrfs]
      [66.437940]  ? kfree+0x5ff/0x670
      [66.437944]  ? __kmalloc_track_caller+0x217/0x3b0
      [66.437962]  legacy_get_tree+0x34/0x60
      [66.437974]  vfs_get_tree+0x2d/0xc0
      [66.437983]  path_mount+0x48c/0xd30
      [66.437998]  __x64_sys_mount+0x108/0x140
      [66.438011]  do_syscall_64+0x38/0x50
      [66.438018]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
      [66.438023] RIP: 0033:0x7f0138827f6e
      [66.438033] RSP: 002b:00007ffecd79edf8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
      [66.438040] RAX: ffffffffffffffda RBX: 00007f013894c264 RCX: 00007f0138827f6e
      [66.438044] RDX: 00005593a4a41360 RSI: 00005593a4a33690 RDI: 00005593a4a3a6c0
      [66.438047] RBP: 00005593a4a33440 R08: 0000000000000000 R09: 0000000000000001
      [66.438050] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
      [66.438054] R13: 00005593a4a3a6c0 R14: 00005593a4a41360 R15: 00005593a4a33440
      [66.438078] irq event stamp: 18169
      [66.438082] hardirqs last  enabled at (18175): [<ffffffffb81154bf>] console_unlock+0x4ff/0x5f0
      [66.438088] hardirqs last disabled at (18180): [<ffffffffb8115427>] console_unlock+0x467/0x5f0
      [66.438092] softirqs last  enabled at (16910): [<ffffffffb8a00fe2>] asm_call_irq_on_stack+0x12/0x20
      [66.438097] softirqs last disabled at (16905): [<ffffffffb8a00fe2>] asm_call_irq_on_stack+0x12/0x20
      [66.438103] ---[ end trace e114b111db64298b ]---
      [66.438107] BTRFS error: found node 12582912 29360127 on insert of 37748736 29360127
      [66.438127] BTRFS critical: panic in extent_io_tree_panic:679: locking error: extent tree was modified by another thread while locked (errno=-17 Object already exists)
      [66.441069] ------------[ cut here ]------------
      [66.441072] kernel BUG at fs/btrfs/extent_io.c:679!
      [66.442064] invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
      [66.443018] CPU: 16 PID: 613 Comm: mount Tainted: G        W  O      5.11.0-rc1-custom #45
      [66.444538] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ArchLinux 1.14.0-1 04/01/2014
      [66.446223] RIP: 0010:extent_io_tree_panic.isra.0+0x23/0x25 [btrfs]
      [66.450878] RSP: 0018:ffff93e5414c3948 EFLAGS: 00010246
      [66.451840] RAX: 0000000000000000 RBX: 0000000001bfffff RCX: 0000000000000000
      [66.453141] RDX: 0000000000000000 RSI: ffffffffb90d4660 RDI: 00000000ffffffff
      [66.454445] RBP: ffff93e5414c3948 R08: 0000000000000001 R09: 0000000000000001
      [66.455743] R10: ffff93e5414c3658 R11: 0000000000000000 R12: ffff8ec782d728c0
      [66.457055] R13: ffff8ec78bc71628 R14: ffff8ec782d72aa0 R15: 0000000002400000
      [66.458356] FS:  00007f01386a8580(0000) GS:ffff8ec809000000(0000) knlGS:0000000000000000
      [66.459841] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [66.460895] CR2: 00007f01382fa000 CR3: 0000000109a34000 CR4: 0000000000750ee0
      [66.462196] PKRU: 55555554
      [66.462692] Call Trace:
      [66.463139]  set_extent_bit.cold+0x30/0x98 [btrfs]
      [66.464049]  set_extent_bits_nowait+0x1d/0x20 [btrfs]
      [66.490466]  add_extent_mapping+0x1e0/0x2f0 [btrfs]
      [66.514097]  read_one_chunk+0x33c/0x420 [btrfs]
      [66.534976]  btrfs_read_chunk_tree+0x6a4/0x870 [btrfs]
      [66.555718]  ? kvm_sched_clock_read+0x18/0x40
      [66.575758]  open_ctree+0xb32/0x1734 [btrfs]
      [66.595272]  ? bdi_register_va+0x1b/0x20
      [66.614638]  ? super_setup_bdi_name+0x79/0xd0
      [66.633809]  btrfs_mount_root.cold+0x12/0xeb [btrfs]
      [66.652938]  ? __kmalloc_track_caller+0x217/0x3b0
      [66.671925]  legacy_get_tree+0x34/0x60
      [66.690300]  vfs_get_tree+0x2d/0xc0
      [66.708221]  vfs_kern_mount.part.0+0x78/0xc0
      [66.725808]  vfs_kern_mount+0x13/0x20
      [66.742730]  btrfs_mount+0x11f/0x3c0 [btrfs]
      [66.759350]  ? kfree+0x5ff/0x670
      [66.775441]  ? __kmalloc_track_caller+0x217/0x3b0
      [66.791750]  legacy_get_tree+0x34/0x60
      [66.807494]  vfs_get_tree+0x2d/0xc0
      [66.823349]  path_mount+0x48c/0xd30
      [66.838753]  __x64_sys_mount+0x108/0x140
      [66.854412]  do_syscall_64+0x38/0x50
      [66.869673]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
      [66.885093] RIP: 0033:0x7f0138827f6e
      [66.945613] RSP: 002b:00007ffecd79edf8 EFLAGS: 00000246 ORIG_RAX: 00000000000000a5
      [66.977214] RAX: ffffffffffffffda RBX: 00007f013894c264 RCX: 00007f0138827f6e
      [66.994266] RDX: 00005593a4a41360 RSI: 00005593a4a33690 RDI: 00005593a4a3a6c0
      [67.011544] RBP: 00005593a4a33440 R08: 0000000000000000 R09: 0000000000000001
      [67.028836] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
      [67.045812] R13: 00005593a4a3a6c0 R14: 00005593a4a41360 R15: 00005593a4a33440
      [67.216138] ---[ end trace e114b111db64298c ]---
      [67.237089] RIP: 0010:extent_io_tree_panic.isra.0+0x23/0x25 [btrfs]
      [67.325317] RSP: 0018:ffff93e5414c3948 EFLAGS: 00010246
      [67.347946] RAX: 0000000000000000 RBX: 0000000001bfffff RCX: 0000000000000000
      [67.371343] RDX: 0000000000000000 RSI: ffffffffb90d4660 RDI: 00000000ffffffff
      [67.394757] RBP: ffff93e5414c3948 R08: 0000000000000001 R09: 0000000000000001
      [67.418409] R10: ffff93e5414c3658 R11: 0000000000000000 R12: ffff8ec782d728c0
      [67.441906] R13: ffff8ec78bc71628 R14: ffff8ec782d72aa0 R15: 0000000002400000
      [67.465436] FS:  00007f01386a8580(0000) GS:ffff8ec809000000(0000) knlGS:0000000000000000
      [67.511660] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [67.535047] CR2: 00007f01382fa000 CR3: 0000000109a34000 CR4: 0000000000750ee0
      [67.558449] PKRU: 55555554
      [67.581146] note: mount[613] exited with preempt_count 2
    
    The image has a chunk item which has a logical start 37748736 and length
    18446744073701163008 (-8M). The calculated end 29360127 overflows.
    EEXIST was caught by insert_state() because of the duplicate end and
    extent_io_tree_panic() was called.
    
    Add overflow check of chunk item end to tree checker so it can be
    detected early at mount time.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=208929
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Su Yue <l@damenly.su>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85905240bf79f42814c37cc81a7d05c616133e75
Author: Leon Schuermann <leon@is.currently.online>
Date:   Mon Jan 11 20:03:13 2021 +0100

    r8152: Add Lenovo Powered USB-C Travel Hub
    
    commit cb82a54904a99df9e8f9e9d282046055dae5a730 upstream.
    
    This USB-C Hub (17ef:721e) based on the Realtek RTL8153B chip used to
    use the cdc_ether driver. However, using this driver, with the system
    suspended the device constantly sends pause-frames as soon as the
    receive buffer fills up. This causes issues with other devices, where
    some Ethernet switches stop forwarding packets altogether.
    
    Using the Realtek driver (r8152) fixes this issue. Pause frames are no
    longer sent while the host system is suspended.
    
    Signed-off-by: Leon Schuermann <leon@is.currently.online>
    Tested-by: Leon Schuermann <leon@is.currently.online>
    Link: https://lore.kernel.org/r/20210111190312.12589-2-leon@is.currently.online
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53e976bb07081324aa6d8d35bc78e09e00e56b6a
Author: Voon Weifeng <weifeng.voon@intel.com>
Date:   Fri Nov 6 17:43:41 2020 +0800

    stmmac: intel: change all EHL/TGL to auto detect phy addr
    
    commit bff6f1db91e330d7fba56f815cdbc412c75fe163 upstream.
    
    Set all EHL/TGL phy_addr to -1 so that the driver will automatically
    detect it at run-time by probing all the possible 32 addresses.
    
    Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
    Signed-off-by: Wong Vee Khee <vee.khee.wong@intel.com>
    Link: https://lore.kernel.org/r/20201106094341.4241-1-vee.khee.wong@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c5b2049caadbaa4a30ccafc1a9817c12bb3ff98
Author: Ignat Korchagin <ignat@cloudflare.com>
Date:   Wed Jan 13 19:17:17 2021 +0000

    dm crypt: defer decryption to a tasklet if interrupts disabled
    
    commit c87a95dc28b1431c7e77e2c0c983cf37698089d2 upstream.
    
    On some specific hardware on early boot we occasionally get:
    
    [ 1193.920255][    T0] BUG: sleeping function called from invalid context at mm/mempool.c:381
    [ 1193.936616][    T0] in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper/69
    [ 1193.953233][    T0] no locks held by swapper/69/0.
    [ 1193.965871][    T0] irq event stamp: 575062
    [ 1193.977724][    T0] hardirqs last  enabled at (575061): [<ffffffffab73f662>] tick_nohz_idle_exit+0xe2/0x3e0
    [ 1194.002762][    T0] hardirqs last disabled at (575062): [<ffffffffab74e8af>] flush_smp_call_function_from_idle+0x4f/0x80
    [ 1194.029035][    T0] softirqs last  enabled at (575050): [<ffffffffad600fd2>] asm_call_irq_on_stack+0x12/0x20
    [ 1194.054227][    T0] softirqs last disabled at (575043): [<ffffffffad600fd2>] asm_call_irq_on_stack+0x12/0x20
    [ 1194.079389][    T0] CPU: 69 PID: 0 Comm: swapper/69 Not tainted 5.10.6-cloudflare-kasan-2021.1.4-dev #1
    [ 1194.104103][    T0] Hardware name: NULL R162-Z12-CD/MZ12-HD4-CD, BIOS R10 06/04/2020
    [ 1194.119591][    T0] Call Trace:
    [ 1194.130233][    T0]  dump_stack+0x9a/0xcc
    [ 1194.141617][    T0]  ___might_sleep.cold+0x180/0x1b0
    [ 1194.153825][    T0]  mempool_alloc+0x16b/0x300
    [ 1194.165313][    T0]  ? remove_element+0x160/0x160
    [ 1194.176961][    T0]  ? blk_mq_end_request+0x4b/0x490
    [ 1194.188778][    T0]  crypt_convert+0x27f6/0x45f0 [dm_crypt]
    [ 1194.201024][    T0]  ? rcu_read_lock_sched_held+0x3f/0x70
    [ 1194.212906][    T0]  ? module_assert_mutex_or_preempt+0x3e/0x70
    [ 1194.225318][    T0]  ? __module_address.part.0+0x1b/0x3a0
    [ 1194.237212][    T0]  ? is_kernel_percpu_address+0x5b/0x190
    [ 1194.249238][    T0]  ? crypt_iv_tcw_ctr+0x4a0/0x4a0 [dm_crypt]
    [ 1194.261593][    T0]  ? is_module_address+0x25/0x40
    [ 1194.272905][    T0]  ? static_obj+0x8a/0xc0
    [ 1194.283582][    T0]  ? lockdep_init_map_waits+0x26a/0x700
    [ 1194.295570][    T0]  ? __raw_spin_lock_init+0x39/0x110
    [ 1194.307330][    T0]  kcryptd_crypt_read_convert+0x31c/0x560 [dm_crypt]
    [ 1194.320496][    T0]  ? kcryptd_queue_crypt+0x1be/0x380 [dm_crypt]
    [ 1194.333203][    T0]  blk_update_request+0x6d7/0x1500
    [ 1194.344841][    T0]  ? blk_mq_trigger_softirq+0x190/0x190
    [ 1194.356831][    T0]  blk_mq_end_request+0x4b/0x490
    [ 1194.367994][    T0]  ? blk_mq_trigger_softirq+0x190/0x190
    [ 1194.379693][    T0]  flush_smp_call_function_queue+0x24b/0x560
    [ 1194.391847][    T0]  flush_smp_call_function_from_idle+0x59/0x80
    [ 1194.403969][    T0]  do_idle+0x287/0x450
    [ 1194.413891][    T0]  ? arch_cpu_idle_exit+0x40/0x40
    [ 1194.424716][    T0]  ? lockdep_hardirqs_on_prepare+0x286/0x3f0
    [ 1194.436399][    T0]  ? _raw_spin_unlock_irqrestore+0x39/0x40
    [ 1194.447759][    T0]  cpu_startup_entry+0x19/0x20
    [ 1194.458038][    T0]  secondary_startup_64_no_verify+0xb0/0xbb
    
    IO completion can be queued to a different CPU by the block subsystem as a "call
    single function/data". The CPU may run these routines from the idle task, but it
    does so with interrupts disabled.
    
    It is not a good idea to do decryption with irqs disabled even in an idle task
    context, so just defer it to a tasklet (as is done with requests from hard irqs).
    
    Fixes: 39d42fa96ba1 ("dm crypt: add flags to optionally bypass kcryptd workqueues")
    Cc: stable@vger.kernel.org # v5.9+
    Signed-off-by: Ignat Korchagin <ignat@cloudflare.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe40f6a6309fd4bbfd8290cc1ff517aaf1ac5abe
Author: Ignat Korchagin <ignat@cloudflare.com>
Date:   Sat Jan 9 15:17:06 2021 +0000

    dm crypt: do not call bio_endio() from the dm-crypt tasklet
    
    commit 8e14f610159d524cd7aac37982826d3ef75c09e8 upstream.
    
    Sometimes, when dm-crypt executes decryption in a tasklet, we may get
    "BUG: KASAN: use-after-free in tasklet_action_common.constprop..."
    with a kasan-enabled kernel.
    
    When the decryption fully completes in the tasklet, dm-crypt will call
    bio_endio(), which in turn will call clone_endio() from dm.c core code. That
    function frees the resources associated with the bio, including per bio private
    structures. For dm-crypt it will free the current struct dm_crypt_io, which
    contains our tasklet object, causing use-after-free, when the tasklet is being
    dequeued by the kernel.
    
    To avoid this, do not call bio_endio() from the current tasklet context, but
    delay its execution to the dm-crypt IO workqueue.
    
    Fixes: 39d42fa96ba1 ("dm crypt: add flags to optionally bypass kcryptd workqueues")
    Cc: <stable@vger.kernel.org> # v5.9+
    Signed-off-by: Ignat Korchagin <ignat@cloudflare.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8727884b7f80ed5b99b48141def9b3c491cffa54
Author: Ignat Korchagin <ignat@cloudflare.com>
Date:   Mon Jan 4 14:59:47 2021 +0000

    dm crypt: do not wait for backlogged crypto request completion in softirq
    
    commit 8abec36d1274bbd5ae8f36f3658b9abb3db56c31 upstream.
    
    Commit 39d42fa96ba1 ("dm crypt: add flags to optionally bypass kcryptd
    workqueues") made it possible for some code paths in dm-crypt to be
    executed in softirq context, when the underlying driver processes IO
    requests in interrupt/softirq context.
    
    When Crypto API backlogs a crypto request, dm-crypt uses
    wait_for_completion to avoid sending further requests to an already
    overloaded crypto driver. However, if the code is executing in softirq
    context, we might get the following stacktrace:
    
    [  210.235213][    C0] BUG: scheduling while atomic: fio/2602/0x00000102
    [  210.236701][    C0] Modules linked in:
    [  210.237566][    C0] CPU: 0 PID: 2602 Comm: fio Tainted: G        W         5.10.0+ #50
    [  210.239292][    C0] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 0.0.0 02/06/2015
    [  210.241233][    C0] Call Trace:
    [  210.241946][    C0]  <IRQ>
    [  210.242561][    C0]  dump_stack+0x7d/0xa3
    [  210.243466][    C0]  __schedule_bug.cold+0xb3/0xc2
    [  210.244539][    C0]  __schedule+0x156f/0x20d0
    [  210.245518][    C0]  ? io_schedule_timeout+0x140/0x140
    [  210.246660][    C0]  schedule+0xd0/0x270
    [  210.247541][    C0]  schedule_timeout+0x1fb/0x280
    [  210.248586][    C0]  ? usleep_range+0x150/0x150
    [  210.249624][    C0]  ? unpoison_range+0x3a/0x60
    [  210.250632][    C0]  ? ____kasan_kmalloc.constprop.0+0x82/0xa0
    [  210.251949][    C0]  ? unpoison_range+0x3a/0x60
    [  210.252958][    C0]  ? __prepare_to_swait+0xa7/0x190
    [  210.254067][    C0]  do_wait_for_common+0x2ab/0x370
    [  210.255158][    C0]  ? usleep_range+0x150/0x150
    [  210.256192][    C0]  ? bit_wait_io_timeout+0x160/0x160
    [  210.257358][    C0]  ? blk_update_request+0x757/0x1150
    [  210.258582][    C0]  ? _raw_spin_lock_irq+0x82/0xd0
    [  210.259674][    C0]  ? _raw_read_unlock_irqrestore+0x30/0x30
    [  210.260917][    C0]  wait_for_completion+0x4c/0x90
    [  210.261971][    C0]  crypt_convert+0x19a6/0x4c00
    [  210.263033][    C0]  ? _raw_spin_lock_irqsave+0x87/0xe0
    [  210.264193][    C0]  ? kasan_set_track+0x1c/0x30
    [  210.265191][    C0]  ? crypt_iv_tcw_ctr+0x4a0/0x4a0
    [  210.266283][    C0]  ? kmem_cache_free+0x104/0x470
    [  210.267363][    C0]  ? crypt_endio+0x91/0x180
    [  210.268327][    C0]  kcryptd_crypt_read_convert+0x30e/0x420
    [  210.269565][    C0]  blk_update_request+0x757/0x1150
    [  210.270563][    C0]  blk_mq_end_request+0x4b/0x480
    [  210.271680][    C0]  blk_done_softirq+0x21d/0x340
    [  210.272775][    C0]  ? _raw_spin_lock+0x81/0xd0
    [  210.273847][    C0]  ? blk_mq_stop_hw_queue+0x30/0x30
    [  210.275031][    C0]  ? _raw_read_lock_irq+0x40/0x40
    [  210.276182][    C0]  __do_softirq+0x190/0x611
    [  210.277203][    C0]  ? handle_edge_irq+0x221/0xb60
    [  210.278340][    C0]  asm_call_irq_on_stack+0x12/0x20
    [  210.279514][    C0]  </IRQ>
    [  210.280164][    C0]  do_softirq_own_stack+0x37/0x40
    [  210.281281][    C0]  irq_exit_rcu+0x110/0x1b0
    [  210.282286][    C0]  common_interrupt+0x74/0x120
    [  210.283376][    C0]  asm_common_interrupt+0x1e/0x40
    [  210.284496][    C0] RIP: 0010:_aesni_enc1+0x65/0xb0
    
    Fix this by making crypt_convert function reentrant from the point of
    a single bio and make dm-crypt defer further bio processing to a
    workqueue, if Crypto API backlogs a request in interrupt context.
    
    Fixes: 39d42fa96ba1 ("dm crypt: add flags to optionally bypass kcryptd workqueues")
    Cc: stable@vger.kernel.org # v5.9+
    Signed-off-by: Ignat Korchagin <ignat@cloudflare.com>
    Acked-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93edb8db94cf722c6b8b61f53c66d2eb80109d65
Author: Ignat Korchagin <ignat@cloudflare.com>
Date:   Mon Jan 4 14:59:48 2021 +0000

    dm crypt: use GFP_ATOMIC when allocating crypto requests from softirq
    
    commit d68b29584c25dbacd01ed44a3e45abb35353f1de upstream.
    
    Commit 39d42fa96ba1 ("dm crypt: add flags to optionally bypass kcryptd
    workqueues") made it possible for some code paths in dm-crypt to be
    executed in softirq context, when the underlying driver processes IO
    requests in interrupt/softirq context.
    
    In this case sometimes when allocating a new crypto request we may get
    a stacktrace like below:
    
    [  210.103008][    C0] BUG: sleeping function called from invalid context at mm/mempool.c:381
    [  210.104746][    C0] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 2602, name: fio
    [  210.106599][    C0] CPU: 0 PID: 2602 Comm: fio Tainted: G        W         5.10.0+ #50
    [  210.108331][    C0] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 0.0.0 02/06/2015
    [  210.110212][    C0] Call Trace:
    [  210.110921][    C0]  <IRQ>
    [  210.111527][    C0]  dump_stack+0x7d/0xa3
    [  210.112411][    C0]  ___might_sleep.cold+0x122/0x151
    [  210.113527][    C0]  mempool_alloc+0x16b/0x2f0
    [  210.114524][    C0]  ? __queue_work+0x515/0xde0
    [  210.115553][    C0]  ? mempool_resize+0x700/0x700
    [  210.116586][    C0]  ? crypt_endio+0x91/0x180
    [  210.117479][    C0]  ? blk_update_request+0x757/0x1150
    [  210.118513][    C0]  ? blk_mq_end_request+0x4b/0x480
    [  210.119572][    C0]  ? blk_done_softirq+0x21d/0x340
    [  210.120628][    C0]  ? __do_softirq+0x190/0x611
    [  210.121626][    C0]  crypt_convert+0x29f9/0x4c00
    [  210.122668][    C0]  ? _raw_spin_lock_irqsave+0x87/0xe0
    [  210.123824][    C0]  ? kasan_set_track+0x1c/0x30
    [  210.124858][    C0]  ? crypt_iv_tcw_ctr+0x4a0/0x4a0
    [  210.125930][    C0]  ? kmem_cache_free+0x104/0x470
    [  210.126973][    C0]  ? crypt_endio+0x91/0x180
    [  210.127947][    C0]  kcryptd_crypt_read_convert+0x30e/0x420
    [  210.129165][    C0]  blk_update_request+0x757/0x1150
    [  210.130231][    C0]  blk_mq_end_request+0x4b/0x480
    [  210.131294][    C0]  blk_done_softirq+0x21d/0x340
    [  210.132332][    C0]  ? _raw_spin_lock+0x81/0xd0
    [  210.133289][    C0]  ? blk_mq_stop_hw_queue+0x30/0x30
    [  210.134399][    C0]  ? _raw_read_lock_irq+0x40/0x40
    [  210.135458][    C0]  __do_softirq+0x190/0x611
    [  210.136409][    C0]  ? handle_edge_irq+0x221/0xb60
    [  210.137447][    C0]  asm_call_irq_on_stack+0x12/0x20
    [  210.138507][    C0]  </IRQ>
    [  210.139118][    C0]  do_softirq_own_stack+0x37/0x40
    [  210.140191][    C0]  irq_exit_rcu+0x110/0x1b0
    [  210.141151][    C0]  common_interrupt+0x74/0x120
    [  210.142171][    C0]  asm_common_interrupt+0x1e/0x40
    
    Fix this by allocating crypto requests with GFP_ATOMIC mask in
    interrupt context.
    
    Fixes: 39d42fa96ba1 ("dm crypt: add flags to optionally bypass kcryptd workqueues")
    Cc: stable@vger.kernel.org # v5.9+
    Reported-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Signed-off-by: Ignat Korchagin <ignat@cloudflare.com>
    Acked-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bf4fbaf7dade30f334dee1d43670d7527cd91ee
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Jan 12 14:54:47 2021 -0500

    dm integrity: fix the maximum number of arguments
    
    commit 17ffc193cdc6dc7a613d00d8ad47fc1f801b9bf0 upstream.
    
    Advance the maximum number of arguments from 9 to 15 to account for
    all potential feature flags that may be supplied.
    
    Linux 4.19 added "meta_device"
    (356d9d52e1221ba0c9f10b8b38652f78a5298329) and "recalculate"
    (a3fcf7253139609bf9ff901fbf955fba047e75dd) flags.
    
    Commit 468dfca38b1a6fbdccd195d875599cb7c8875cd9 added
    "sectors_per_bit" and "bitmap_flush_interval".
    
    Commit 84597a44a9d86ac949900441cea7da0af0f2f473 added
    "allow_discards".
    
    And the commit d537858ac8aaf4311b51240893add2fc62003b97 added
    "fix_padding".
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bba7eff6b33f14ad40cc70d5dea5a561b472191
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Jan 8 11:15:56 2021 -0500

    dm integrity: fix flush with external metadata device
    
    commit 9b5948267adc9e689da609eb61cf7ed49cae5fa8 upstream.
    
    With external metadata device, flush requests are not passed down to the
    data device.
    
    Fix this by submitting the flush request in dm_integrity_flush_buffers. In
    order to not degrade performance, we overlap the data device flush with
    the metadata device flush.
    
    Reported-by: Lukas Straub <lukasstraub2@web.de>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ac4156de54973e405393a5da1f17fc748252c1b
Author: Akilesh Kailash <akailash@google.com>
Date:   Mon Dec 28 07:14:07 2020 +0000

    dm snapshot: flush merged data before committing metadata
    
    commit fcc42338375a1e67b8568dbb558f8b784d0f3b01 upstream.
    
    If the origin device has a volatile write-back cache and the following
    events occur:
    
    1: After finishing merge operation of one set of exceptions,
       merge_callback() is invoked.
    2: Update the metadata in COW device tracking the merge completion.
       This update to COW device is flushed cleanly.
    3: System crashes and the origin device's cache where the recent
       merge was completed has not been flushed.
    
    During the next cycle when we read the metadata from the COW device,
    we will skip reading those metadata whose merge was completed in
    step (1). This will lead to data loss/corruption.
    
    To address this, flush the origin device post merge IO before
    updating the metadata.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Akilesh Kailash <akailash@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5de4f3a301f1090ee7096741c2d0fbf8e5570165
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Sep 24 13:14:52 2020 -0400

    dm raid: fix discard limits for raid1
    
    commit cc07d72bf350b77faeffee1c37bc52197171473f upstream.
    
    Block core warned that discard_granularity was 0 for dm-raid with
    personality of raid1.  Reason is that raid_io_hints() was incorrectly
    special-casing raid1 rather than raid0.
    
    Fix raid_io_hints() by removing discard limits settings for
    raid1. Check for raid0 instead.
    
    Fixes: 61697a6abd24a ("dm: eliminate 'split_discard_bios' flag from DM target interface")
    Cc: stable@vger.kernel.org
    Reported-by: Zdenek Kabelac <zkabelac@redhat.com>
    Reported-by: Mikulas Patocka <mpatocka@redhat.com>
    Reported-by: Stephan Bärwolf <stephan@matrixstorm.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccd903e26750b92c4cbb1bec0a451f8002838059
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Tue Jan 12 15:49:33 2021 -0800

    mm/process_vm_access.c: include compat.h
    
    commit eb351d75ce1e75b4f793d609efac08426ca50acd upstream.
    
    Fix the build error:
    
      mm/process_vm_access.c:277:5: error: implicit declaration of function 'in_compat_syscall'; did you mean 'in_ia32_syscall'? [-Werror=implicit-function-declaration]
    
    Fixes: 38dc5079da7081e "Fix compat regression in process_vm_rw()"
    Reported-by: syzbot+5b0d0de84d6c65b8dd2b@syzkaller.appspotmail.com
    Cc: Kyle Huey <me@kylehuey.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3e43af7c61f1a6396e7d1a3bc3e76b8fd96bfca
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue Jan 12 15:49:24 2021 -0800

    mm/hugetlb: fix potential missing huge page size info
    
    commit 0eb98f1588c2cc7a79816d84ab18a55d254f481c upstream.
    
    The huge page size is encoded for VM_FAULT_HWPOISON errors only.  So if
    we return VM_FAULT_HWPOISON, huge page size would just be ignored.
    
    Link: https://lkml.kernel.org/r/20210107123449.38481-1-linmiaohe@huawei.com
    Fixes: aa50d3a7aa81 ("Encode huge page size for VM_FAULT_HWPOISON errors")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4ecc259657c019f07e3142f5d2c162d2581a174
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue Jan 12 15:49:18 2021 -0800

    mm/vmalloc.c: fix potential memory leak
    
    commit c22ee5284cf58017fa8c6d21d8f8c68159b6faab upstream.
    
    In VM_MAP_PUT_PAGES case, we should put pages and free array in vfree.
    But we missed to set area->nr_pages in vmap().  So we would fail to put
    pages in __vunmap() because area->nr_pages = 0.
    
    Link: https://lkml.kernel.org/r/20210107123541.39206-1-linmiaohe@huawei.com
    Fixes: b944afc9d64d ("mm: add a VM_MAP_PUT_PAGES flag for vmap")
    Signed-off-by: Shijie Luo <luoshijie1@huawei.com>
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Uladzislau Rezki (Sony) <urezki@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33dbd5422c886eda939d092c5469537ce7b125b0
Author: Will Deacon <will@kernel.org>
Date:   Tue Jan 12 22:48:32 2021 +0000

    compiler.h: Raise minimum version of GCC to 5.1 for arm64
    
    commit dca5244d2f5b94f1809f0c02a549edf41ccd5493 upstream.
    
    GCC versions >= 4.9 and < 5.1 have been shown to emit memory references
    beyond the stack pointer, resulting in memory corruption if an interrupt
    is taken after the stack pointer has been adjusted but before the
    reference has been executed. This leads to subtle, infrequent data
    corruption such as the EXT4 problems reported by Russell King at the
    link below.
    
    Life is too short for buggy compilers, so raise the minimum GCC version
    required by arm64 to 5.1.
    
    Reported-by: Russell King <linux@armlinux.org.uk>
    Suggested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Will Deacon <will@kernel.org>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: <stable@vger.kernel.org>
    Cc: Theodore Ts'o <tytso@mit.edu>
    Cc: Florian Weimer <fweimer@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20210105154726.GD1551@shell.armlinux.org.uk
    Link: https://lore.kernel.org/r/20210112224832.10980-1-will@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 047ea5a8feff655326368fdbb827b563ed0ed1c9
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Tue Jan 12 12:53:58 2021 +0100

    xen/privcmd: allow fetching resource sizes
    
    commit ef3a575baf53571dc405ee4028e26f50856898e7 upstream.
    
    Allow issuing an IOCTL_PRIVCMD_MMAP_RESOURCE ioctl with num = 0 and
    addr = 0 in order to fetch the size of a specific resource.
    
    Add a shortcut to the default map resource path, since fetching the
    size requires no address to be passed in, and thus no VMA to setup.
    
    This is missing from the initial implementation, and causes issues
    when mapping resources that don't have fixed or known sizes.
    
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Tested-by: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: stable@vger.kernel.org # >= 4.18
    Link: https://lore.kernel.org/r/20210112115358.23346-1-roger.pau@citrix.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b9f7b0a19f7b6b1104d2b174f9dc1323325eed9
Author: Dexuan Cui <decui@microsoft.com>
Date:   Thu Jan 7 23:23:48 2021 -0800

    ACPI: scan: Harden acpi_device_add() against device ID overflows
    
    commit a58015d638cd4e4555297b04bec9b49028369075 upstream.
    
    Linux VM on Hyper-V crashes with the latest mainline:
    
    [    4.069624] detected buffer overflow in strcpy
    [    4.077733] kernel BUG at lib/string.c:1149!
    ..
    [    4.085819] RIP: 0010:fortify_panic+0xf/0x11
    ...
    [    4.085819] Call Trace:
    [    4.085819]  acpi_device_add.cold.15+0xf2/0xfb
    [    4.085819]  acpi_add_single_object+0x2a6/0x690
    [    4.085819]  acpi_bus_check_add+0xc6/0x280
    [    4.085819]  acpi_ns_walk_namespace+0xda/0x1aa
    [    4.085819]  acpi_walk_namespace+0x9a/0xc2
    [    4.085819]  acpi_bus_scan+0x78/0x90
    [    4.085819]  acpi_scan_init+0xfa/0x248
    [    4.085819]  acpi_init+0x2c1/0x321
    [    4.085819]  do_one_initcall+0x44/0x1d0
    [    4.085819]  kernel_init_freeable+0x1ab/0x1f4
    
    This is because of the recent buffer overflow detection in the
    commit 6a39e62abbaf ("lib: string.h: detect intra-object overflow in
    fortified string functions")
    
    Here acpi_device_bus_id->bus_id can only hold 14 characters, while the
    the acpi_device_hid(device) returns a 22-char string
    "HYPER_V_GEN_COUNTER_V1".
    
    Per ACPI Spec v6.2, Section 6.1.5 _HID (Hardware ID), if the ID is a
    string, it must be of the form AAA#### or NNNN####, i.e. 7 chars or 8
    chars.
    
    The field bus_id in struct acpi_device_bus_id was originally defined as
    char bus_id[9], and later was enlarged to char bus_id[15] in 2007 in the
    commit bb0958544f3c ("ACPI: use more understandable bus_id for ACPI
    devices")
    
    Fix the issue by changing the field bus_id to const char *, and use
    kstrdup_const() to initialize it.
    
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Tested-By: Jethro Beekman <jethro@fortanix.com>
    [ rjw: Subject change, whitespace adjustment ]
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dbfad171b9ca30257608e9c50523f802013c158
Author: Tom Rix <trix@redhat.com>
Date:   Tue Dec 29 18:46:53 2020 -0800

    RDMA/ocrdma: Fix use after free in ocrdma_dealloc_ucontext_pd()
    
    commit f2bc3af6353cb2a33dfa9d270d999d839eef54cb upstream.
    
    In ocrdma_dealloc_ucontext_pd() uctx->cntxt_pd is assigned to the variable
    pd and then after uctx->cntxt_pd is freed, the variable pd is passed to
    function _ocrdma_dealloc_pd() which dereferences pd directly or through
    its call to ocrdma_mbx_dealloc_pd().
    
    Reorder the free using the variable pd.
    
    Cc: stable@vger.kernel.org
    Fixes: 21a428a019c9 ("RDMA: Handle PD allocations by IB/core")
    Link: https://lore.kernel.org/r/20201230024653.1516495-1-trix@redhat.com
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8c2b27ab34d9faab3373aa5c201cc313951f59c
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Sun Jan 10 14:21:05 2021 +0000

    MIPS: relocatable: fix possible boot hangup with KASLR enabled
    
    commit 69e976831cd53f9ba304fd20305b2025ecc78eab upstream.
    
    LLVM-built Linux triggered a boot hangup with KASLR enabled.
    
    arch/mips/kernel/relocate.c:get_random_boot() uses linux_banner,
    which is a string constant, as a random seed, but accesses it
    as an array of unsigned long (in rotate_xor()).
    When the address of linux_banner is not aligned to sizeof(long),
    such access emits unaligned access exception and hangs the kernel.
    
    Use PTR_ALIGN() to align input address to sizeof(long) and also
    align down the input length to prevent possible access-beyond-end.
    
    Fixes: 405bc8fd12f5 ("MIPS: Kernel: Implement KASLR using CONFIG_RELOCATABLE")
    Cc: stable@vger.kernel.org # 4.7+
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 652daca07f4fa8f44f4137ef4490aa14ffbdaeaa
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu Dec 24 19:44:38 2020 +0000

    MIPS: Fix malformed NT_FILE and NT_SIGINFO in 32bit coredumps
    
    commit 698222457465ce343443be81c5512edda86e5914 upstream.
    
    Patches that introduced NT_FILE and NT_SIGINFO notes back in 2012
    had taken care of native (fs/binfmt_elf.c) and compat (fs/compat_binfmt_elf.c)
    coredumps; unfortunately, compat on mips (which does not go through the
    usual compat_binfmt_elf.c) had not been noticed.
    
    As the result, both N32 and O32 coredumps on 64bit mips kernels
    have those sections malformed enough to confuse the living hell out of
    all gdb and readelf versions (up to and including the tip of binutils-gdb.git).
    
    Longer term solution is to make both O32 and N32 compat use the
    regular compat_binfmt_elf.c, but that's too much for backports.  The minimal
    solution is to do in arch/mips/kernel/binfmt_elf[on]32.c the same thing
    those patches have done in fs/compat_binfmt_elf.c
    
    Cc: stable@kernel.org # v3.7+
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e2413f41aa25442aedfa2d390d6f4dc2f1844de
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Wed Dec 16 23:39:56 2020 +0000

    MIPS: boot: Fix unaligned access with CONFIG_MIPS_RAW_APPENDED_DTB
    
    commit 4d4f9c1a17a3480f8fe523673f7232b254d724b7 upstream.
    
    The compressed payload is not necesarily 4-byte aligned, at least when
    compiling with Clang. In that case, the 4-byte value appended to the
    compressed payload that corresponds to the uncompressed kernel image
    size must be read using get_unaligned_le32().
    
    This fixes Clang-built kernels not booting on MIPS (tested on a Ingenic
    JZ4770 board).
    
    Fixes: b8f54f2cde78 ("MIPS: ZBOOT: copy appended dtb to the end of the kernel")
    Cc: <stable@vger.kernel.org> # v4.7
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 974f19621f193b7cd3612454c60e1f24506d9e29
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Fri Dec 11 11:24:37 2020 +0100

    mips: lib: uncached: fix non-standard usage of variable 'sp'
    
    commit 5b058973d3205578aa6c9a71392e072a11ca44ef upstream.
    
    When building mips tinyconfig with clang the following warning show up:
    
    arch/mips/lib/uncached.c:45:6: warning: variable 'sp' is uninitialized when used here [-Wuninitialized]
            if (sp >= (long)CKSEG0 && sp < (long)CKSEG2)
                ^~
    arch/mips/lib/uncached.c:40:18: note: initialize the variable 'sp' to silence this warning
            register long sp __asm__("$sp");
                            ^
                             = 0
    1 warning generated.
    
    Rework to make an explicit inline move, instead of the non-standard use
    of specifying registers for local variables. This is what's written
    from the gcc-10 manual [1] about specifying registers for local
    variables:
    
    "6.47.5.2 Specifying Registers for Local Variables
    .................................................
    [...]
    
    "The only supported use for this feature is to specify registers for
    input and output operands when calling Extended 'asm' (*note Extended
    Asm::).  [...]".
    
    [1] https://docs.w3cub.com/gcc~10/local-register-variables
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ca873f92b4fc723bbcb47fc84606fe81134174f
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Fri Nov 27 09:39:43 2020 +0100

    mips: fix Section mismatch in reference
    
    commit ad4fddef5f2345aa9214e979febe2f47639c10d9 upstream.
    
    When building mips tinyconfig with clang the following error show up:
    
    WARNING: modpost: vmlinux.o(.text+0x1940c): Section mismatch in reference from the function r4k_cache_init() to the function .init.text:loongson3_sc_init()
    The function r4k_cache_init() references
    the function __init loongson3_sc_init().
    This is often because r4k_cache_init lacks a __init
    annotation or the annotation of loongson3_sc_init is wrong.
    
    Remove marked __init from function loongson3_sc_init(),
    mips_sc_probe_cm3(), and mips_sc_probe().
    
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b0a0655da7fcfcb0fa1f7f14f7606a592545f7e
Author: Nick Hu <nickhu@andestech.com>
Date:   Wed Jan 13 10:24:10 2021 +0800

    riscv: Fix KASAN memory mapping.
    
    commit c25a053e15778f6b4d6553708673736e27a6c2cf upstream.
    
    Use virtual address instead of physical address when translating
    the address to shadow memory by kasan_mem_to_shadow().
    
    Signed-off-by: Nick Hu <nickhu@andestech.com>
    Signed-off-by: Nylon Chen <nylon7@andestech.com>
    Fixes: b10d6bca8720 ("arch, drivers: replace for_each_membock() with for_each_mem_range()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab7594f63926c88712c86b7e8a4e506005949909
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Sat Jan 2 13:24:34 2021 +0000

    riscv: Fixup CONFIG_GENERIC_TIME_VSYSCALL
    
    commit 0aa2ec8a475fb505fd98d93bbcf4e03beeeebcb6 upstream.
    
    The patch fix commit: ad5d112 ("riscv: use vDSO common flow to
    reduce the latency of the time-related functions").
    
    The GENERIC_TIME_VSYSCALL should be CONFIG_GENERIC_TIME_VSYSCALL
    or vgettimeofday won't work.
    
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Reviewed-by: Pekka Enberg <penberg@kernel.org>
    Fixes: ad5d1122b82f ("riscv: use vDSO common flow to reduce the latency of the time-related functions")
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c4ced368204f0cd5e1737be858d0c7ded956b14
Author: Andreas Schwab <schwab@suse.de>
Date:   Mon Dec 21 23:52:00 2020 +0100

    riscv: return -ENOSYS for syscall -1
    
    commit cf7b2ae4d70432fa94ebba3fbaab825481ae7189 upstream.
    
    Properly return -ENOSYS for syscall -1 instead of leaving the return value
    uninitialized.  This fixes the strace teststuite.
    
    Fixes: 5340627e3fe0 ("riscv: add support for SECCOMP and SECCOMP_FILTER")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andreas Schwab <schwab@suse.de>
    Reviewed-by: Tycho Andersen <tycho@tycho.pizza>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eae7b19b32aa5889f19d14ae3887ef4f8cff48f4
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Wed Nov 11 19:52:16 2020 +0800

    riscv: Drop a duplicated PAGE_KERNEL_EXEC
    
    commit 0ea02c73775277001c651ad4a0e83781a9acf406 upstream.
    
    commit b91540d52a08 ("RISC-V: Add EFI runtime services") add
    a duplicated PAGE_KERNEL_EXEC, kill it.
    
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Reviewed-by: Pekka Enberg <penberg@kernel.org>
    Reviewed-by: Atish Patra <atish.patra@wdc.com>
    Fixes: b91540d52a08 ("RISC-V: Add EFI runtime services")
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 531c88c9fe5649cdc0f533dcda4c9d5a98a7023a
Author: Paulo Alcantara <pc@cjr.nz>
Date:   Wed Jan 13 14:16:16 2021 -0300

    cifs: fix interrupted close commands
    
    commit 2659d3bff3e1b000f49907d0839178b101a89887 upstream.
    
    Retry close command if it gets interrupted to not leak open handles on
    the server.
    
    Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reported-by: Duncan Findlay <duncf@duncf.ca>
    Suggested-by: Pavel Shilovsky <pshilov@microsoft.com>
    Fixes: 6988a619f5b7 ("cifs: allow syscalls to be restarted in __smb_send_rqst()")
    Cc: stable@vger.kernel.org
    Reviewd-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e4c42cb4a5f517bfc0cd970a770cc72e75dbc6e
Author: Tom Rix <trix@redhat.com>
Date:   Tue Jan 5 12:21:26 2021 -0800

    cifs: check pointer before freeing
    
    commit 77b6ec01c29aade01701aa30bf1469acc7f2be76 upstream.
    
    clang static analysis reports this problem
    
    dfs_cache.c:591:2: warning: Argument to kfree() is a constant address
      (18446744073709551614), which is not memory allocated by malloc()
            kfree(vi);
            ^~~~~~~~~
    
    In dfs_cache_del_vol() the volume info pointer 'vi' being freed
    is the return of a call to find_vol().  The large constant address
    is find_vol() returning an error.
    
    Add an error check to dfs_cache_del_vol() similar to the one done
    in dfs_cache_update_vol().
    
    Fixes: 54be1f6c1c37 ("cifs: Add DFS cache routines")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    CC: <stable@vger.kernel.org> # v5.0+
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2207c3ce70756a896fc416bfb8bb403a3ba71c4b
Author: yangerkun <yangerkun@huawei.com>
Date:   Tue Jan 5 14:28:57 2021 +0800

    ext4: fix bug for rename with RENAME_WHITEOUT
    
    commit 6b4b8e6b4ad8553660421d6360678b3811d5deb9 upstream.
    
    We got a "deleted inode referenced" warning cross our fsstress test. The
    bug can be reproduced easily with following steps:
    
      cd /dev/shm
      mkdir test/
      fallocate -l 128M img
      mkfs.ext4 -b 1024 img
      mount img test/
      dd if=/dev/zero of=test/foo bs=1M count=128
      mkdir test/dir/ && cd test/dir/
      for ((i=0;i<1000;i++)); do touch file$i; done # consume all block
      cd ~ && renameat2(AT_FDCWD, /dev/shm/test/dir/file1, AT_FDCWD,
        /dev/shm/test/dir/dst_file, RENAME_WHITEOUT) # ext4_add_entry in
        ext4_rename will return ENOSPC!!
      cd /dev/shm/ && umount test/ && mount img test/ && ls -li test/dir/file1
      We will get the output:
      "ls: cannot access 'test/dir/file1': Structure needs cleaning"
      and the dmesg show:
      "EXT4-fs error (device loop0): ext4_lookup:1626: inode #2049: comm ls:
      deleted inode referenced: 139"
    
    ext4_rename will create a special inode for whiteout and use this 'ino'
    to replace the source file's dir entry 'ino'. Once error happens
    latter(the error above was the ENOSPC return from ext4_add_entry in
    ext4_rename since all space has been consumed), the cleanup do drop the
    nlink for whiteout, but forget to restore 'ino' with source file. This
    will trigger the bug describle as above.
    
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: stable@vger.kernel.org
    Fixes: cd808deced43 ("ext4: support RENAME_WHITEOUT")
    Link: https://lore.kernel.org/r/20210105062857.3566-1-yangerkun@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15a062c79d49cc9d4f149fc4ee74fe9881c12c6b
Author: Daejun Park <daejun7.park@samsung.com>
Date:   Wed Dec 30 18:48:51 2020 +0900

    ext4: fix wrong list_splice in ext4_fc_cleanup
    
    commit 31e203e09f036f48e7c567c2d32df0196bbd303f upstream.
    
    After full/fast commit, entries in staging queue are promoted to main
    queue. In ext4_fs_cleanup function, it splice to staging queue to
    staging queue.
    
    Fixes: aa75f4d3daaeb ("ext4: main fast-commit commit path")
    Signed-off-by: Daejun Park <daejun7.park@samsung.com>
    Reviewed-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/20201230094851epcms2p6eeead8cc984379b37b2efd21af90fd1a@epcms2p6
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c557cb1f9d786e129c5af9dd42f527846206348
Author: Yi Li <yili@winhong.com>
Date:   Wed Dec 30 11:38:27 2020 +0800

    ext4: use IS_ERR instead of IS_ERR_OR_NULL and set inode null when IS_ERR
    
    commit 23dd561ad9eae02b4d51bb502fe4e1a0666e9567 upstream.
    
    1: ext4_iget/ext4_find_extent never returns NULL, use IS_ERR
    instead of IS_ERR_OR_NULL to fix this.
    
    2: ext4_fc_replay_inode should set the inode to NULL when IS_ERR.
    and go to call iput properly.
    
    Fixes: 8016e29f4362 ("ext4: fast commit recovery path")
    Signed-off-by: Yi Li <yili@winhong.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20201230033827.3996064-1-yili@winhong.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcae2beac981fecf4cab89da37abe328a8e6e16f
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Dec 9 14:27:44 2020 +0900

    tools/bootconfig: Add tracing_on support to helper scripts
    
    commit 55ed4560774d81d7343223b8fd2784c530a9c6c1 upstream.
    
    Add ftrace.instance.INSTANCE.tracing_on support to ftrace2bconf.sh
    and bconf2ftrace.sh.
    
    commit 8490db06f914 ("tracing/boot: Add per-instance tracing_on
    option support") added the per-instance tracing_on option,
    but forgot to update the helper scripts.
    
    Link: https://lkml.kernel.org/r/160749166410.3497930.14204335886811029800.stgit@devnote2
    
    Cc: stable@vger.kernel.org
    Fixes: 8490db06f914 ("tracing/boot: Add per-instance tracing_on option support")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75942370699b15e93ea97749467801a1683e9076
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Jan 8 13:19:38 2021 +0900

    tracing/kprobes: Do the notrace functions check without kprobes on ftrace
    
    commit 7bb83f6fc4ee84e95d0ac0d14452c2619fb3fe70 upstream.
    
    Enable the notrace function check on the architecture which doesn't
    support kprobes on ftrace but support dynamic ftrace. This notrace
    function check is not only for the kprobes on ftrace but also
    sw-breakpoint based kprobes.
    Thus there is no reason to limit this check for the arch which
    supports kprobes on ftrace.
    
    This also changes the dependency of Kconfig. Because kprobe event
    uses the function tracer's address list for identifying notrace
    function, if the CONFIG_DYNAMIC_FTRACE=n, it can not check whether
    the target function is notrace or not.
    
    Link: https://lkml.kernel.org/r/20210105065730.2634785-1-naveen.n.rao@linux.vnet.ibm.com
    Link: https://lkml.kernel.org/r/161007957862.114704.4512260007555399463.stgit@devnote2
    
    Cc: stable@vger.kernel.org
    Fixes: 45408c4f92506 ("tracing: kprobes: Prohibit probing on notrace function")
    Acked-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47319c4b81a3f2e2832f8f0eaf8f2c737dddd972
Author: Alexandru Gagniuc <mr.nuke.me@gmail.com>
Date:   Tue Oct 20 17:14:58 2020 -0500

    drm/bridge: sii902x: Enable I/O and core VCC supplies if present
    
    commit cc5f7e2fcbe396f2f461cd67c872af771a334bca upstream.
    
    On the SII9022, the IOVCC and CVCC12 supplies must reach the correct
    voltage before the reset sequence is initiated. On most boards, this
    assumption is true at boot-up, so initialization succeeds.
    
    However, when we try to initialize the chip with incorrect supply
    voltages, it will not respond to I2C requests. sii902x_probe() fails
    with -ENXIO.
    
    To resolve this, look for the "iovcc" and "cvcc12" regulators, and
    make sure they are enabled before starting the reset sequence. If
    these supplies are not available in devicetree, then they will default
    to dummy-regulator. In that case everything will work like before.
    
    This was observed on a STM32MP157C-DK2 booting in u-boot falcon mode.
    On this board, the supplies would be set by the second stage
    bootloader, which does not run in falcon mode.
    
    Signed-off-by: Alexandru Gagniuc <mr.nuke.me@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    [Fix checkpatch warnings]
    Link: https://patchwork.freedesktop.org/patch/msgid/20201020221501.260025-2-mr.nuke.me@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af402f64ca08400eb7ca2d7d5799636eb2c9f30e
Author: Alexandru Gagniuc <mr.nuke.me@gmail.com>
Date:   Tue Oct 20 17:14:59 2020 -0500

    dt-bindings: display: sii902x: Add supply bindings
    
    commit 4c1e054322da99cbfd293a5fddf283f2fdb3e2d0 upstream.
    
    The sii902x chip family requires IO and core voltages to reach the
    correct voltage before chip initialization. Add binding for describing
    the two supplies.
    
    Signed-off-by: Alexandru Gagniuc <mr.nuke.me@gmail.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201020221501.260025-3-mr.nuke.me@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0c34c5ab715594142e9a21364e5ea97b1c84d1a
Author: Alexandru Gagniuc <mr.nuke.me@gmail.com>
Date:   Tue Oct 20 17:14:57 2020 -0500

    drm/bridge: sii902x: Refactor init code into separate function
    
    commit 91b5e26731c5d409d6134603afc061617639933e upstream.
    
    Separate the hardware initialization code from setting up the data
    structures and parsing the device tree. The purpose of this change is
    to provide a single exit point and avoid a waterfall of 'goto's in
    the subsequent patch.
    
    Signed-off-by: Alexandru Gagniuc <mr.nuke.me@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201020221501.260025-1-mr.nuke.me@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a34addcdbd9e03e3f3d09bcd5a1719d90b2d637
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Fri Jan 8 17:28:41 2021 +0200

    drm/i915/backlight: fix CPU mode backlight takeover on LPT
    
    commit bb83d5fb550bb7db75b29e6342417fda2bbb691c upstream.
    
    The pch_get_backlight(), lpt_get_backlight(), and lpt_set_backlight()
    functions operate directly on the hardware registers. If inverting the
    value is needed, using intel_panel_compute_brightness(), it should only
    be done in the interface between hardware registers and
    panel->backlight.level.
    
    The CPU mode takeover code added in commit 5b1ec9ac7ab5
    ("drm/i915/backlight: Fix backlight takeover on LPT, v3.") reads the
    hardware register and converts to panel->backlight.level correctly,
    however the value written back should remain in the hardware register
    "domain".
    
    This hasn't been an issue, because GM45 machines are the only known
    users of i915.invert_brightness and the brightness invert quirk, and
    without one of them no conversion is made. It's likely nobody's ever hit
    the problem.
    
    Fixes: 5b1ec9ac7ab5 ("drm/i915/backlight: Fix backlight takeover on LPT, v3.")
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: <stable@vger.kernel.org> # v5.1+
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210108152841.6944-1-jani.nikula@intel.com
    (cherry picked from commit 0d4ced1c5bfe649196877d90442d4fd618e19153)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48b8c6689efa7cd65a72f620940a4f234b944b73
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Jan 11 22:52:18 2021 +0000

    drm/i915/gt: Limit VFE threads based on GT
    
    commit ffaf97899c4a58b9fefb11534f730785443611a8 upstream.
    
    MEDIA_STATE_VFE only accepts the 'maximum number of threads' in the
    range [0, n-1] where n is #EU * (#threads/EU) with the number of threads
    based on plaform and the number of EU based on the number of slices and
    subslices. This is a fixed number per platform/gt, so appropriately
    limit the number of threads we spawn to match the device.
    
    v2: Oversaturate the system with tasks to force execution on every HW
    thread; if the thread idles it is returned to the pool and may be reused
    again before an unused thread.
    
    v3: Fix more state commands, which was causing Baytrail to barf.
    v4: STATE_CACHE_INVALIDATE requires a stall on Ivybridge
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/2024
    Fixes: 47f8253d2b89 ("drm/i915/gen7: Clear all EU/L3 residual contexts")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@linux.intel.com>
    Cc: Prathap Kumar Valsan <prathap.kumar.valsan@intel.com>
    Cc: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
    Cc: Jon Bloomfield <jon.bloomfield@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: Randy Wright <rwright@hpe.com>
    Cc: stable@vger.kernel.org # v5.7+
    Reviewed-by: Akeem G Abodunrin <akeem.g.abodunrin@intel.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210111225220.3483-1-chris@chris-wilson.co.uk
    (cherry picked from commit eebfb32e26851662d24ea86dd381fd0f83cd4b47)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 481e27f050732b8c680f26287dd44967fddf9a79
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Mon Jan 11 22:52:20 2021 +0000

    drm/i915: Allow the sysadmin to override security mitigations
    
    commit 984cadea032b103c5824a5f29d0a36b3e9df6333 upstream.
    
    The clear-residuals mitigation is a relatively heavy hammer and under some
    circumstances the user may wish to forgo the context isolation in order
    to meet some performance requirement. Introduce a generic module
    parameter to allow selectively enabling/disabling different mitigations.
    
    To disable just the clear-residuals mitigation (on Ivybridge, Baytrail,
    or Haswell) use the module parameter: i915.mitigations=auto,!residuals
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/1858
    Fixes: 47f8253d2b89 ("drm/i915/gen7: Clear all EU/L3 residual contexts")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Jon Bloomfield <jon.bloomfield@intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: stable@vger.kernel.org # v5.7
    Reviewed-by: Jon Bloomfield <jon.bloomfield@intel.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210111225220.3483-3-chris@chris-wilson.co.uk
    (cherry picked from commit f7452c7cbd5b5dfb9a6c84cb20bea04c89be50cd)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 586a42de0bae779731a4a2a7ffdb062dfaa54938
Author: mengwang <mengbing.wang@amd.com>
Date:   Wed Aug 12 11:49:29 2020 +0800

    drm/amdgpu: add new device id for Renior
    
    commit 53f1e7f6a1720f8299b5283857eedc8f07d29533 upstream.
    
    add DID 0x164C into pciidlist under CHIP_RENOIR family.
    
    Signed-off-by: mengwang <mengbing.wang@amd.com>
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org # 5.10.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 989a0f6791ff55344cba164498225707045f6b1a
Author: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
Date:   Mon Jan 11 11:31:51 2021 -0500

    Revert "drm/amd/display: Fixed Intermittent blue screen on OLED panel"
    
    commit 4eec66c014e9a406d8d453de958f6791d05427e4 upstream.
    
    commit a861736dae64 ("drm/amd/display: Fixed Intermittent blue screen on OLED panel")
    
    causes power regression for many users. It seems that this change causes
    the MCLK to get forced high; this creates a regression for many users
    since their devices were not able to drop to a low state after this
    change. For this reason, this reverts commit
    a861736dae644a0d7abbca0c638ae6aad28feeb8.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1407
    Cc: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Harry Wentland <harry.wentland@amd.com>
    Cc: Naveed Ashfaq <Naveed.Ashfaq@amd.com>
    Cc: Hersen Wu <hersenxs.wu@amd.com>
    Cc: Roman Li <roman.li@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fe745881255136e3fd3c96236fdddb4e6fc0642
Author: Alexandre Demers <alexandre.f.demers@gmail.com>
Date:   Thu Jan 7 18:53:03 2021 -0500

    drm/amdgpu: fix DRM_INFO flood if display core is not supported (bug 210921)
    
    commit ff9346dbabbb6595c5c20d90d88ae4a2247487a9 upstream.
    
    This fix bug 210921 where DRM_INFO floods log when hitting an unsupported ASIC in
    amdgpu_device_asic_has_dc_support(). This info should be only called once.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=210921
    Signed-off-by: Alexandre Demers <alexandre.f.demers@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c6524bba523156c88d018aa7a054a770fafa8be
Author: Prike Liang <Prike.Liang@amd.com>
Date:   Fri Oct 2 10:58:55 2020 -0400

    drm/amdgpu: add green_sardine device id (v2)
    
    commit 21702c8cae51535e09b91341a069503c6ef3d2a3 upstream.
    
    Add green_sardine PCI id support and map it to renoir asic type.
    
    v2: add apu flag
    
    Signed-off-by: Prike Liang <Prike.Liang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org # 5.10.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad8ca24ba879aaa88c2744d6b72d8beea9e0247b
Author: Wei Liu <wei.liu@kernel.org>
Date:   Tue Jan 5 17:50:43 2021 +0000

    x86/hyperv: check cpu mask after interrupt has been disabled
    
    commit ad0a6bad44758afa3b440c254a24999a0c7e35d5 upstream.
    
    We've observed crashes due to an empty cpu mask in
    hyperv_flush_tlb_others.  Obviously the cpu mask in question is changed
    between the cpumask_empty call at the beginning of the function and when
    it is actually used later.
    
    One theory is that an interrupt comes in between and a code path ends up
    changing the mask. Move the check after interrupt has been disabled to
    see if it fixes the issue.
    
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20210105175043.28325-1-wei.liu@kernel.org
    Reviewed-by:  Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0351fbe00a23bd1db5f7d611dbbb787f434fa29f
Author: Thomas Hebb <tommyhebb@gmail.com>
Date:   Sat Dec 12 17:20:12 2020 -0800

    ASoC: dapm: remove widget from dirty list on free
    
    commit 5c6679b5cb120f07652418524ab186ac47680b49 upstream.
    
    A widget's "dirty" list_head, much like its "list" list_head, eventually
    chains back to a list_head on the snd_soc_card itself. This means that
    the list can stick around even after the widget (or all widgets) have
    been freed. Currently, however, widgets that are in the dirty list when
    freed remain there, corrupting the entire list and leading to memory
    errors and undefined behavior when the list is next accessed or
    modified.
    
    I encountered this issue when a component failed to probe relatively
    late in snd_soc_bind_card(), causing it to bail out and call
    soc_cleanup_card_resources(), which eventually called
    snd_soc_dapm_free() with widgets that were still dirty from when they'd
    been added.
    
    Fixes: db432b414e20 ("ASoC: Do DAPM power checks only for widgets changed since last run")
    Cc: stable@vger.kernel.org
    Signed-off-by: Thomas Hebb <tommyhebb@gmail.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/f8b5f031d50122bf1a9bfc9cae046badf4a7a31a.1607822410.git.tommyhebb@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55eb1867a5b310612481dfb6e358eb25e8e04bae
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Sun Dec 27 17:41:09 2020 +0100

    ASoC: AMD Renoir - add DMI entry for Lenovo ThinkPad X395
    
    commit 1f092d1c8819679d78a7d9c62a46d4939d217a9d upstream.
    
    The ThinkPad X395 latop does not have the internal digital
    microphone connected to the AMD's ACP bridge, but it's advertised
    via BIOS. The internal microphone is connected to the HDA codec.
    
    Use DMI to block the microphone PCM device for this platform.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1892115
    Cc: <stable@kernel.org>
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Link: https://lore.kernel.org/r/20201227164109.269973-1-perex@perex.cz
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69b84d87fd59d43ee3587e15bae62fa62154b32e
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Fri Jan 1 23:19:42 2021 +0100

    ALSA: doc: Fix reference to mixart.rst
    
    commit 3e096a2112b7b407549020cf095e2a425f00fabb upstream.
    
    MIXART.txt has been converted to ReST and renamed. Fix the reference
    in alsa-configuration.rst.
    
    Fixes: 3d8e81862ce4 ("ALSA: doc: ReSTize MIXART.txt")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210101221942.1068388-1-j.neuschaefer@gmx.net
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 617b1bae7ee989f7eeefb55a833db02ebfeaa303
Author: Jeremy Szu <jeremy.szu@canonical.com>
Date:   Wed Jan 6 21:05:46 2021 +0800

    ALSA: hda/realtek: fix right sounds and mute/micmute LEDs for HP machines
    
    commit 91bc156817a3c2007332b64b4f85c32aafbbbea6 upstream.
    
     * The HP ZBook Fury 15/17 G7 Mobile Workstation are using ALC285 codec
       which is using 0x04 to control mute LED and 0x01 to control micmute LED.
    
     * The right channel speaker is no sound and it needs to expose GPIO1 for
       initialing AMP.
    
    Add quirks to support them.
    
    Signed-off-by: Jeremy Szu <jeremy.szu@canonical.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210106130549.100532-1-jeremy.szu@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f37fba66a437677141d829e7969ae2e35bc146dd
Author: Su Yue <l@damenly.su>
Date:   Sun Jan 3 17:28:03 2021 +0800

    btrfs: prevent NULL pointer dereference in extent_io_tree_panic
    
    commit 29b665cc51e8b602bf2a275734349494776e3dbc upstream.
    
    Some extent io trees are initialized with NULL private member (e.g.
    btrfs_device::alloc_state and btrfs_fs_info::excluded_extents).
    Dereference of a NULL tree->private as inode pointer will cause panic.
    
    Pass tree->fs_info as it's known to be valid in all cases.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=208929
    Fixes: 05912a3c04eb ("btrfs: drop extent_io_ops::tree_fs_info callback")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Su Yue <l@damenly.su>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e883eb5d1567f146cd7143800799f3286cc04a9a
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Dec 29 21:29:34 2020 +0800

    btrfs: reloc: fix wrong file extent type check to avoid false ENOENT
    
    commit 50e31ef486afe60f128d42fb9620e2a63172c15c upstream.
    
    [BUG]
    There are several bug reports about recent kernel unable to relocate
    certain data block groups.
    
    Sometimes the error just goes away, but there is one reporter who can
    reproduce it reliably.
    
    The dmesg would look like:
    
      [438.260483] BTRFS info (device dm-10): balance: start -dvrange=34625344765952..34625344765953
      [438.269018] BTRFS info (device dm-10): relocating block group 34625344765952 flags data|raid1
      [450.439609] BTRFS info (device dm-10): found 167 extents, stage: move data extents
      [463.501781] BTRFS info (device dm-10): balance: ended with status: -2
    
    [CAUSE]
    The ENOENT error is returned from the following call chain:
    
      add_data_references()
      |- delete_v1_space_cache();
         |- if (!found)
               return -ENOENT;
    
    The variable @found is set to true if we find a data extent whose
    disk bytenr matches parameter @data_bytes.
    
    With extra debugging, the offending tree block looks like this:
    
      leaf bytenr = 42676709441536, data_bytenr = 34626327621632
    
                    ctime 1567904822.739884119 (2019-09-08 03:07:02)
                    mtime 0.0 (1970-01-01 01:00:00)
                    otime 0.0 (1970-01-01 01:00:00)
            item 27 key (51933 EXTENT_DATA 0) itemoff 9854 itemsize 53
                    generation 1517381 type 2 (prealloc)
                    prealloc data disk byte 34626327621632 nr 262144 <<<
                    prealloc data offset 0 nr 262144
            item 28 key (52262 ROOT_ITEM 0) itemoff 9415 itemsize 439
                    generation 2618893 root_dirid 256 bytenr 42677048360960 level 3 refs 1
                    lastsnap 2618893 byte_limit 0 bytes_used 5557338112 flags 0x0(none)
                    uuid d0d4361f-d231-6d40-8901-fe506e4b2b53
    
    Although item 27 has disk bytenr 34626327621632, which matches the
    data_bytenr, its type is prealloc, not reg.
    This makes the existing code skip that item, and return ENOENT.
    
    [FIX]
    The code is modified in commit 19b546d7a1b2 ("btrfs: relocation: Use
    btrfs_find_all_leafs to locate data extent parent tree leaves"), before
    that commit, we use something like
    
      "if (type == BTRFS_FILE_EXTENT_INLINE) continue;"
    
    But in that offending commit, we use (type == BTRFS_FILE_EXTENT_REG),
    ignoring BTRFS_FILE_EXTENT_PREALLOC.
    
    Fix it by also checking BTRFS_FILE_EXTENT_PREALLOC.
    
    Reported-by: Stéphane Lesimple <stephane_btrfs2@lesimple.fr>
    Link: https://lore.kernel.org/linux-btrfs/505cabfa88575ed6dbe7cb922d8914fb@lesimple.fr
    Fixes: 19b546d7a1b2 ("btrfs: relocation: Use btrfs_find_all_leafs to locate data extent parent tree leaves")
    CC: stable@vger.kernel.org # 5.6+
    Tested-By: Stéphane Lesimple <stephane_btrfs2@lesimple.fr>
    Reviewed-by: Su Yue <l@damenly.su>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
