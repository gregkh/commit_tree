commit aa268ff278643818abaabc08a467f8119480f914
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 22 11:41:28 2021 +0200

    Linux 4.4.284
    
    Link: https://lore.kernel.org/r/20210920163912.603434365@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a09222a512bf7b32e55bb89a033e08522798299
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Tue Sep 7 13:41:16 2021 +0200

    s390/bpf: Fix 64-bit subtraction of the -0x80000000 constant
    
    commit 6e61dc9da0b7a0d91d57c2e20b5ea4fd2d4e7e53 upstream.
    
    The JIT uses agfi for subtracting constants, but -(-0x80000000) cannot
    be represented as a 32-bit signed binary integer. Fix by using algfi in
    this particular case.
    
    Reported-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Fixes: 054623105728 ("s390/bpf: Add s390x eBPF JIT compiler backend")
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cd619ed630279c4685165ecbdcbbca503812fd8
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Sep 7 20:29:40 2021 +0900

    net: renesas: sh_eth: Fix freeing wrong tx descriptor
    
    [ Upstream commit 0341d5e3d1ee2a36dd5a49b5bef2ce4ad1cfa6b4 ]
    
    The cur_tx counter must be incremented after TACT bit of
    txdesc->status was set. However, a CPU is possible to reorder
    instructions and/or memory accesses between cur_tx and
    txdesc->status. And then, if TX interrupt happened at such a
    timing, the sh_eth_tx_free() may free the descriptor wrongly.
    So, add wmb() before cur_tx++.
    Otherwise NETDEV WATCHDOG timeout is possible to happen.
    
    Fixes: 86a74ff21a7a ("net: sh_eth: add support for Renesas SuperH Ethernet")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a58b794d64fb4e2a7c699e8f13df464f92e8d6b
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Fri Sep 3 15:35:43 2021 +0800

    qlcnic: Remove redundant unlock in qlcnic_pinit_from_rom
    
    [ Upstream commit 9ddbc2a00d7f63fa9748f4278643193dac985f2d ]
    
    Previous commit 68233c583ab4 removes the qlcnic_rom_lock()
    in qlcnic_pinit_from_rom(), but remains its corresponding
    unlock function, which is odd. I'm not very sure whether the
    lock is missing, or the unlock is redundant. This bug is
    suggested by a static analysis tool, please advise.
    
    Fixes: 68233c583ab4 ("qlcnic: updated reset sequence")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0c50fdd41f6cdf672f1ae46340401679e27ee4b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Aug 16 14:05:33 2021 -0700

    ARC: export clear_user_page() for modules
    
    [ Upstream commit 6b5ff0405e4190f23780362ea324b250bc495683 ]
    
    0day bot reports a build error:
      ERROR: modpost: "clear_user_page" [drivers/media/v4l2-core/videobuf-dma-sg.ko] undefined!
    so export it in arch/arc/ to fix the build error.
    
    In most ARCHes, clear_user_page() is a macro. OTOH, in a few
    ARCHes it is a function and needs to be exported.
    PowerPC exported it in 2004. It looks like nds32 and nios2
    still need to have it exported.
    
    Fixes: 4102b53392d63 ("ARC: [mm] Aliasing VIPT dcache support 2/4")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: linux-snps-arc@lists.infradead.org
    Signed-off-by: Vineet Gupta <vgupta@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55ba954d2bd273d2c1dc1b8060e58cf315b99722
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 21 09:58:45 2021 +0200

    mtd: rawnand: cafe: Fix a resource leak in the error handling path of 'cafe_nand_probe()'
    
    [ Upstream commit 6b430c7595e4eb95fae8fb54adc3c3ce002e75ae ]
    
    A successful 'init_rs_non_canonical()' call should be balanced by a
    corresponding 'free_rs()' call in the error handling path of the probe, as
    already done in the remove function.
    
    Update the error handling path accordingly.
    
    Fixes: 8c61b7a7f4d4 ("[MTD] [NAND] Use rslib for CAFÃ‰ ECC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/fd313d3fb787458bcc73189e349f481133a2cdc9.1629532640.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f03ce0cf4f251a7b6a45199aabad3f2089f0ed2
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Aug 13 18:36:19 2021 +0300

    PCI: Sync __pci_register_driver() stub for CONFIG_PCI=n
    
    [ Upstream commit 817f9916a6e96ae43acdd4e75459ef4f92d96eb1 ]
    
    The CONFIG_PCI=y case got a new parameter long time ago.  Sync the stub as
    well.
    
    [bhelgaas: add parameter names]
    Fixes: 725522b5453d ("PCI: add the sysfs driver name to all modules")
    Link: https://lore.kernel.org/r/20210813153619.89574-1-andriy.shevchenko@linux.intel.com
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b6fd3f7aaafa2e3c7aeb3387aeb100f54bc92ee
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Fri Sep 3 14:42:33 2021 +0800

    ethtool: Fix an error code in cxgb2.c
    
    [ Upstream commit 7db8263a12155c7ae4ad97e850f1e499c73765fc ]
    
    When adapter->registered_device_map is NULL, the value of err is
    uncertain, we set err to -EINVAL to avoid ambiguity.
    
    Clean up smatch warning:
    drivers/net/ethernet/chelsio/cxgb/cxgb2.c:1114 init_one() warn: missing
    error code 'err'
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 530a750f8a43e5c25266c886d0a388303b06573b
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Jun 10 16:39:45 2021 +0200

    dt-bindings: mtd: gpmc: Fix the ECC bytes vs. OOB bytes equation
    
    [ Upstream commit 778cb8e39f6ec252be50fc3850d66f3dcbd5dd5a ]
    
    "PAGESIZE / 512" is the number of ECC chunks.
    "ECC_BYTES" is the number of bytes needed to store a single ECC code.
    "2" is the space reserved by the bad block marker.
    
    "2 + (PAGESIZE / 512) * ECC_BYTES" should of course be lower or equal
    than the total number of OOB bytes, otherwise it won't fit.
    
    Fix the equation by substituting s/>=/<=/.
    
    Suggested-by: Ryan J. Barnett <ryan.barnett@collins.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20210610143945.3504781-1-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1d5a6288cc13ac823439e298c29dabc7db516c2
Author: Mike Rapoport <rppt@kernel.org>
Date:   Thu Aug 19 16:27:17 2021 +0300

    x86/mm: Fix kern_addr_valid() to cope with existing but not present entries
    
    commit 34b1999da935a33be6239226bfa6cd4f704c5c88 upstream.
    
    Jiri Olsa reported a fault when running:
    
      # cat /proc/kallsyms | grep ksys_read
      ffffffff8136d580 T ksys_read
      # objdump -d --start-address=0xffffffff8136d580 --stop-address=0xffffffff8136d590 /proc/kcore
    
      /proc/kcore:     file format elf64-x86-64
    
      Segmentation fault
    
      general protection fault, probably for non-canonical address 0xf887ffcbff000: 0000 [#1] SMP PTI
      CPU: 12 PID: 1079 Comm: objdump Not tainted 5.14.0-rc5qemu+ #508
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-4.fc34 04/01/2014
      RIP: 0010:kern_addr_valid
      Call Trace:
       read_kcore
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? trace_hardirqs_on
       ? rcu_read_lock_sched_held
       ? lock_acquire
       ? lock_acquire
       ? rcu_read_lock_sched_held
       ? lock_acquire
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? lock_release
       ? _raw_spin_unlock
       ? __handle_mm_fault
       ? rcu_read_lock_sched_held
       ? lock_acquire
       ? rcu_read_lock_sched_held
       ? lock_release
       proc_reg_read
       ? vfs_read
       vfs_read
       ksys_read
       do_syscall_64
       entry_SYSCALL_64_after_hwframe
    
    The fault happens because kern_addr_valid() dereferences existent but not
    present PMD in the high kernel mappings.
    
    Such PMDs are created when free_kernel_image_pages() frees regions larger
    than 2Mb. In this case, a part of the freed memory is mapped with PMDs and
    the set_memory_np_noalias() -> ... -> __change_page_attr() sequence will
    mark the PMD as not present rather than wipe it completely.
    
    Have kern_addr_valid() check whether higher level page table entries are
    present before trying to dereference them to fix this issue and to avoid
    similar issues in the future.
    
    Stable backporting note:
    ------------------------
    
    Note that the stable marking is for all active stable branches because
    there could be cases where pagetable entries exist but are not valid -
    see 9a14aefc1d28 ("x86: cpa, fix lookup_address"), for example. So make
    sure to be on the safe side here and use pXY_present() accessors rather
    than pXY_none() which could #GP when accessing pages in the direct map.
    
    Also see:
    
      c40a56a7818c ("x86/mm/init: Remove freed kernel image areas from alias mapping")
    
    for more info.
    
    Reported-by: Jiri Olsa <jolsa@redhat.com>
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Tested-by: Jiri Olsa <jolsa@redhat.com>
    Cc: <stable@vger.kernel.org>    # 4.4+
    Link: https://lkml.kernel.org/r/20210819132717.19358-1-rppt@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01cc2a1638c7abe19caf5d9f603025e1f9e80e4d
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Sep 8 17:00:29 2021 -0700

    net/af_unix: fix a data-race in unix_dgram_poll
    
    commit 04f08eb44b5011493d77b602fdec29ff0f5c6cd5 upstream.
    
    syzbot reported another data-race in af_unix [1]
    
    Lets change __skb_insert() to use WRITE_ONCE() when changing
    skb head qlen.
    
    Also, change unix_dgram_poll() to use lockless version
    of unix_recvq_full()
    
    It is verry possible we can switch all/most unix_recvq_full()
    to the lockless version, this will be done in a future kernel version.
    
    [1] HEAD commit: 8596e589b787732c8346f0482919e83cc9362db1
    
    BUG: KCSAN: data-race in skb_queue_tail / unix_dgram_poll
    
    write to 0xffff88814eeb24e0 of 4 bytes by task 25815 on cpu 0:
     __skb_insert include/linux/skbuff.h:1938 [inline]
     __skb_queue_before include/linux/skbuff.h:2043 [inline]
     __skb_queue_tail include/linux/skbuff.h:2076 [inline]
     skb_queue_tail+0x80/0xa0 net/core/skbuff.c:3264
     unix_dgram_sendmsg+0xff2/0x1600 net/unix/af_unix.c:1850
     sock_sendmsg_nosec net/socket.c:703 [inline]
     sock_sendmsg net/socket.c:723 [inline]
     ____sys_sendmsg+0x360/0x4d0 net/socket.c:2392
     ___sys_sendmsg net/socket.c:2446 [inline]
     __sys_sendmmsg+0x315/0x4b0 net/socket.c:2532
     __do_sys_sendmmsg net/socket.c:2561 [inline]
     __se_sys_sendmmsg net/socket.c:2558 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2558
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff88814eeb24e0 of 4 bytes by task 25834 on cpu 1:
     skb_queue_len include/linux/skbuff.h:1869 [inline]
     unix_recvq_full net/unix/af_unix.c:194 [inline]
     unix_dgram_poll+0x2bc/0x3e0 net/unix/af_unix.c:2777
     sock_poll+0x23e/0x260 net/socket.c:1288
     vfs_poll include/linux/poll.h:90 [inline]
     ep_item_poll fs/eventpoll.c:846 [inline]
     ep_send_events fs/eventpoll.c:1683 [inline]
     ep_poll fs/eventpoll.c:1798 [inline]
     do_epoll_wait+0x6ad/0xf00 fs/eventpoll.c:2226
     __do_sys_epoll_wait fs/eventpoll.c:2238 [inline]
     __se_sys_epoll_wait fs/eventpoll.c:2233 [inline]
     __x64_sys_epoll_wait+0xf6/0x120 fs/eventpoll.c:2233
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x0000001b -> 0x00000001
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 25834 Comm: syz-executor.1 Tainted: G        W         5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 86b18aaa2b5b ("skbuff: fix a data race in skb_queue_len()")
    Cc: Qian Cai <cai@lca.pw>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44f2a9f34770d9dc879ea15994f2f90bc9485dbe
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Mon Sep 13 16:28:52 2021 +0700

    tipc: increase timeout in tipc_sk_enqueue()
    
    commit f4bb62e64c88c93060c051195d3bbba804e56945 upstream.
    
    In tipc_sk_enqueue() we use hardcoded 2 jiffies to extract
    socket buffer from generic queue to particular socket.
    The 2 jiffies is too short in case there are other high priority
    tasks get CPU cycles for multiple jiffies update. As result, no
    buffer could be enqueued to particular socket.
    
    To solve this, we switch to use constant timeout 20msecs.
    Then, the function will be expired between 2 jiffies (CONFIG_100HZ)
    and 20 jiffies (CONFIG_1000HZ).
    
    Fixes: c637c1035534 ("tipc: resolve race problem at unicast message reception")
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6a281f3209bc75eacc86f84b2b9aa248ad39d68
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Sep 9 10:33:28 2021 -0700

    r6040: Restore MDIO clock frequency after MAC reset
    
    commit e3f0cc1a945fcefec0c7c9d9dfd028a51daa1846 upstream.
    
    A number of users have reported that they were not able to get the PHY
    to successfully link up, especially after commit c36757eb9dee ("net:
    phy: consider AN_RESTART status when reading link status") where we
    stopped reading just BMSR, but we also read BMCR to determine the link
    status.
    
    Andrius at NetBSD did a wonderful job at debugging the problem
    and found out that the MDIO bus clock frequency would be incorrectly set
    back to its default value which would prevent the MDIO bus controller
    from reading PHY registers properly. Back when we only read BMSR, if we
    read all 1s, we could falsely indicate a link status, though in general
    there is a cable plugged in, so this went unnoticed. After a second read
    of BMCR was added, a wrong read will lead to the inability to determine
    a link UP condition which is when it started to be visibly broken, even
    if it was long before that.
    
    The fix consists in restoring the value of the MD_CSR register that was
    set prior to the MAC reset.
    
    Link: http://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=53494
    Fixes: 90f750a81a29 ("r6040: consolidate MAC reset to its own function")
    Reported-by: Andrius V <vezhlys@gmail.com>
    Reported-by: Darek Strugacz <darek.strugacz@op.pl>
    Tested-by: Darek Strugacz <darek.strugacz@op.pl>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccc0addcdc6c2e6753b7535055e625714706a8ea
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Thu Sep 9 12:32:00 2021 +0800

    net/l2tp: Fix reference count leak in l2tp_udp_recv_core
    
    commit 9b6ff7eb666415e1558f1ba8a742f5db6a9954de upstream.
    
    The reference count leak issue may take place in an error handling
    path. If both conditions of tunnel->version == L2TP_HDR_VER_3 and the
    return value of l2tp_v3_ensure_opt_in_linear is nonzero, the function
    would directly jump to label invalid, without decrementing the reference
    count of the l2tp_session object session increased earlier by
    l2tp_tunnel_get_session(). This may result in refcount leaks.
    
    Fix this issue by decrease the reference count before jumping to the
    label invalid.
    
    Fixes: 4522a70db7aa ("l2tp: fix reading optional fields of L2TPv3")
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1969452d411a73a3125c326c6db0c8433f31dfd5
Author: Lin, Zhenpeng <zplin@psu.edu>
Date:   Wed Sep 8 03:40:59 2021 +0000

    dccp: don't duplicate ccid when cloning dccp sock
    
    commit d9ea761fdd197351890418acd462c51f241014a7 upstream.
    
    Commit 2677d2067731 ("dccp: don't free ccid2_hc_tx_sock ...") fixed
    a UAF but reintroduced CVE-2017-6074.
    
    When the sock is cloned, two dccps_hc_tx_ccid will reference to the
    same ccid. So one can free the ccid object twice from two socks after
    cloning.
    
    This issue was found by "Hadar Manor" as well and assigned with
    CVE-2020-16119, which was fixed in Ubuntu's kernel. So here I port
    the patch from Ubuntu to fix it.
    
    The patch prevents cloned socks from referencing the same ccid.
    
    Fixes: 2677d2067731410 ("dccp: don't free ccid2_hc_tx_sock ...")
    Signed-off-by: Zhenpeng Lin <zplin@psu.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7fef11388384065751dbb1c66bc4c93ea0d49f2
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Sep 13 15:06:05 2021 -0700

    ptp: dp83640: don't define PAGE0
    
    commit 7366c23ff492ad260776a3ee1aaabba9fc773a8b upstream.
    
    Building dp83640.c on arch/parisc/ produces a build warning for
    PAGE0 being redefined. Since the macro is not used in the dp83640
    driver, just make it a comment for documentation purposes.
    
    In file included from ../drivers/net/phy/dp83640.c:23:
    ../drivers/net/phy/dp83640_reg.h:8: warning: "PAGE0" redefined
        8 | #define PAGE0                     0x0000
                     from ../drivers/net/phy/dp83640.c:11:
    ../arch/parisc/include/asm/page.h:187: note: this is the location of the previous definition
      187 | #define PAGE0   ((struct zeropage *)__PAGE_OFFSET)
    
    Fixes: cb646e2b02b2 ("ptp: Added a clock driver for the National Semiconductor PHYTER.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Richard Cochran <richard.cochran@omicron.at>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Heiner Kallweit <hkallweit1@gmail.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20210913220605.19682-1-rdunlap@infradead.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83804f76709841ea6bd9fba27f0c1c6da04a0c85
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Sep 13 11:08:36 2021 -0700

    net-caif: avoid user-triggerable WARN_ON(1)
    
    commit 550ac9c1aaaaf51fd42e20d461f0b1cdbd55b3d2 upstream.
    
    syszbot triggers this warning, which looks something
    we can easily prevent.
    
    If we initialize priv->list_field in chnl_net_init(),
    then always use list_del_init(), we can remove robust_list_del()
    completely.
    
    WARNING: CPU: 0 PID: 3233 at net/caif/chnl_net.c:67 robust_list_del net/caif/chnl_net.c:67 [inline]
    WARNING: CPU: 0 PID: 3233 at net/caif/chnl_net.c:67 chnl_net_uninit+0xc9/0x2e0 net/caif/chnl_net.c:375
    Modules linked in:
    CPU: 0 PID: 3233 Comm: syz-executor.3 Not tainted 5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:robust_list_del net/caif/chnl_net.c:67 [inline]
    RIP: 0010:chnl_net_uninit+0xc9/0x2e0 net/caif/chnl_net.c:375
    Code: 89 eb e8 3a a3 ba f8 48 89 d8 48 c1 e8 03 42 80 3c 28 00 0f 85 bf 01 00 00 48 81 fb 00 14 4e 8d 48 8b 2b 75 d0 e8 17 a3 ba f8 <0f> 0b 5b 5d 41 5c 41 5d e9 0a a3 ba f8 4c 89 e3 e8 02 a3 ba f8 4c
    RSP: 0018:ffffc90009067248 EFLAGS: 00010202
    RAX: 0000000000008780 RBX: ffffffff8d4e1400 RCX: ffffc9000fd34000
    RDX: 0000000000040000 RSI: ffffffff88bb6e49 RDI: 0000000000000003
    RBP: ffff88802cd9ee08 R08: 0000000000000000 R09: ffffffff8d0e6647
    R10: ffffffff88bb6dc2 R11: 0000000000000000 R12: ffff88803791ae08
    R13: dffffc0000000000 R14: 00000000e600ffce R15: ffff888073ed3480
    FS:  00007fed10fa0700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b2c322000 CR3: 00000000164a6000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     register_netdevice+0xadf/0x1500 net/core/dev.c:10347
     ipcaif_newlink+0x4c/0x260 net/caif/chnl_net.c:468
     __rtnl_newlink+0x106d/0x1750 net/core/rtnetlink.c:3458
     rtnl_newlink+0x64/0xa0 net/core/rtnetlink.c:3506
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5572
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504
     netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340
     netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     __sys_sendto+0x21c/0x320 net/socket.c:2036
     __do_sys_sendto net/socket.c:2048 [inline]
     __se_sys_sendto net/socket.c:2044 [inline]
     __x64_sys_sendto+0xdd/0x1b0 net/socket.c:2044
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: cc36a070b590 ("net-caif: add CAIF netdevice")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cca97c791f4cde8bb011431d29bbe1573cb1113
Author: Adrian Bunk <bunk@kernel.org>
Date:   Sun Sep 12 22:05:23 2021 +0300

    bnx2x: Fix enabling network interfaces without VFs
    
    commit 52ce14c134a003fee03d8fc57442c05a55b53715 upstream.
    
    This function is called to enable SR-IOV when available,
    not enabling interfaces without VFs was a regression.
    
    Fixes: 65161c35554f ("bnx2x: Fix missing error code in bnx2x_iov_init_one()")
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Reported-by: YunQiang Su <wzssyqa@gmail.com>
    Tested-by: YunQiang Su <wzssyqa@gmail.com>
    Cc: stable@vger.kernel.org
    Acked-by: Shai Malin <smalin@marvell.com>
    Link: https://lore.kernel.org/r/20210912190523.27991-1-bunk@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d949dc36038d3c29f34007abb7dfea8bcb9e397
Author: Patryk Duda <pdk@semihalf.com>
Date:   Tue May 18 16:07:58 2021 +0200

    platform/chrome: cros_ec_proto: Send command again when timeout occurs
    
    commit 3abc16af57c9939724df92fcbda296b25cc95168 upstream.
    
    Sometimes kernel is trying to probe Fingerprint MCU (FPMCU) when it
    hasn't initialized SPI yet. This can happen because FPMCU is restarted
    during system boot and kernel can send message in short window
    eg. between sysjump to RW and SPI initialization.
    
    Cc: <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Patryk Duda <pdk@semihalf.com>
    Link: https://lore.kernel.org/r/20210518140758.29318-1-pdk@semihalf.com
    Signed-off-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd6ede691876e483d87b91108cd06c98ca894370
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Aug 30 05:42:27 2021 -0400

    parisc: fix crash with signals and alloca
    
    commit 030f653078316a9cc9ca6bd1b0234dcf858be35d upstream.
    
    I was debugging some crashes on parisc and I found out that there is a
    crash possibility if a function using alloca is interrupted by a signal.
    The reason for the crash is that the gcc alloca implementation leaves
    garbage in the upper 32 bits of the sp register. This normally doesn't
    matter (the upper bits are ignored because the PSW W-bit is clear),
    however the signal delivery routine in the kernel uses full 64 bits of sp
    and it fails with -EFAULT if the upper 32 bits are not zero.
    
    I created this program that demonstrates the problem:
    
    #include <stdlib.h>
    #include <unistd.h>
    #include <signal.h>
    #include <alloca.h>
    
    static __attribute__((noinline,noclone)) void aa(int *size)
    {
            void * volatile p = alloca(-*size);
            while (1) ;
    }
    
    static void handler(int sig)
    {
            write(1, "signal delivered\n", 17);
            _exit(0);
    }
    
    int main(void)
    {
            int size = -0x100;
            signal(SIGALRM, handler);
            alarm(1);
            aa(&size);
    }
    
    If you compile it with optimizations, it will crash.
    The "aa" function has this disassembly:
    
    000106a0 <aa>:
       106a0:       08 03 02 41     copy r3,r1
       106a4:       08 1e 02 43     copy sp,r3
       106a8:       6f c1 00 80     stw,ma r1,40(sp)
       106ac:       37 dc 3f c1     ldo -20(sp),ret0
       106b0:       0c 7c 12 90     stw ret0,8(r3)
       106b4:       0f 40 10 9c     ldw 0(r26),ret0         ; ret0 = 0x00000000FFFFFF00
       106b8:       97 9c 00 7e     subi 3f,ret0,ret0       ; ret0 = 0xFFFFFFFF0000013F
       106bc:       d7 80 1c 1a     depwi 0,31,6,ret0       ; ret0 = 0xFFFFFFFF00000100
       106c0:       0b 9e 0a 1e     add,l sp,ret0,sp        ;   sp = 0xFFFFFFFFxxxxxxxx
       106c4:       e8 1f 1f f7     b,l,n 106c4 <aa+0x24>,r0
    
    This patch fixes the bug by truncating the "usp" variable to 32 bits.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0587d1e6f8d03cb479336a166b988c464420fede
Author: çŽ‹è´‡ <yun.wang@linux.alibaba.com>
Date:   Mon Aug 30 18:28:01 2021 +0800

    net: fix NULL pointer reference in cipso_v4_doi_free
    
    [ Upstream commit 733c99ee8be9a1410287cdbb943887365e83b2d6 ]
    
    In netlbl_cipsov4_add_std() when 'doi_def->map.std' alloc
    failed, we sometime observe panic:
    
      BUG: kernel NULL pointer dereference, address:
      ...
      RIP: 0010:cipso_v4_doi_free+0x3a/0x80
      ...
      Call Trace:
       netlbl_cipsov4_add_std+0xf4/0x8c0
       netlbl_cipsov4_add+0x13f/0x1b0
       genl_family_rcv_msg_doit.isra.15+0x132/0x170
       genl_rcv_msg+0x125/0x240
    
    This is because in cipso_v4_doi_free() there is no check
    on 'doi_def->map.std' when 'doi_def->type' equal 1, which
    is possibe, since netlbl_cipsov4_add_std() haven't initialize
    it before alloc 'doi_def->map.std'.
    
    This patch just add the check to prevent panic happen for similar
    cases.
    
    Reported-by: Abaci <abaci@linux.alibaba.com>
    Signed-off-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f41f0adde4178b1b68ff004cba7e2038debb7b13
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Sat Jun 19 09:29:14 2021 -0400

    ath9k: fix OOB read ar9300_eeprom_restore_internal
    
    [ Upstream commit 23151b9ae79e3bc4f6a0c4cd3a7f355f68dad128 ]
    
    Bad header can have large length field which can cause OOB.
    cptr is the last bytes for read, and the eeprom is parsed
    from high to low address. The OOB, triggered by the condition
    length > cptr could cause memory error with a read on
    negative index.
    
    There are some sanity check around length, but it is not
    compared with cptr (the remaining bytes). Here, the
    corrupted/bad EEPROM can cause panic.
    
    I was able to reproduce the crash, but I cannot find the
    log and the reproducer now. After I applied the patch, the
    bug is no longer reproducible.
    
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YM3xKsQJ0Hw2hjrc@Zekuns-MBP-16.fios-router.home
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c39992bbd43800f8b8c78af6be11e39b5805e265
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jul 30 11:07:10 2021 +0100

    parport: remove non-zero check on count
    
    [ Upstream commit 0be883a0d795d9146f5325de582584147dd0dcdc ]
    
    The check for count appears to be incorrect since a non-zero count
    check occurs a couple of statements earlier. Currently the check is
    always false and the dev->port->irq != PARPORT_IRQ_NONE part of the
    check is never tested and the if statement is dead-code. Fix this
    by removing the check on count.
    
    Note that this code is pre-git history, so I can't find a sha for
    it.
    
    Acked-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Addresses-Coverity: ("Logically dead code")
    Link: https://lore.kernel.org/r/20210730100710.27405-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8381d3610be309c7b33900157c5857f4ca8f38f
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Aug 20 15:35:01 2021 +0300

    Revert "USB: xhci: fix U1/U2 handling for hardware with XHCI_INTEL_HOST quirk set"
    
    [ Upstream commit 2847c46c61486fd8bca9136a6e27177212e78c69 ]
    
    This reverts commit 5d5323a6f3625f101dbfa94ba3ef7706cce38760.
    
    That commit effectively disabled Intel host initiated U1/U2 lpm for devices
    with periodic endpoints.
    
    Before that commit we disabled host initiated U1/U2 lpm if the exit latency
    was larger than any periodic endpoint service interval, this is according
    to xhci spec xhci 1.1 specification section 4.23.5.2
    
    After that commit we incorrectly checked that service interval was smaller
    than U1/U2 inactivity timeout. This is not relevant, and can't happen for
    Intel hosts as previously set U1/U2 timeout = 105% * service interval.
    
    Patch claimed it solved cases where devices can't be enumerated because of
    bandwidth issues. This might be true but it's a side effect of accidentally
    turning off lpm.
    
    exit latency calculations have been revised since then
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210820123503.2605901-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4a127e2a11650ead18d0307268dbe3c9a687468
Author: Ding Hui <dinghui@sangfor.com.cn>
Date:   Tue Aug 17 22:55:10 2021 +0800

    cifs: fix wrong release in sess_alloc_buffer() failed path
    
    [ Upstream commit d72c74197b70bc3c95152f351a568007bffa3e11 ]
    
    smb_buf is allocated by small_smb_init_no_tc(), and buf type is
    CIFS_SMALL_BUFFER, so we should use cifs_small_buf_release() to
    release it in failed path.
    
    Signed-off-by: Ding Hui <dinghui@sangfor.com.cn>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6da39dc4c4b525ee695eee830d1c506103cc6eb
Author: Thomas Hebb <tommyhebb@gmail.com>
Date:   Sun Aug 1 04:46:14 2021 -0700

    mmc: rtsx_pci: Fix long reads when clock is prescaled
    
    [ Upstream commit 3ac5e45291f3f0d699a721357380d4593bc2dcb3 ]
    
    For unexplained reasons, the prescaler register for this device needs to
    be cleared (set to 1) while performing a data read or else the command
    will hang. This does not appear to affect the real clock rate sent out
    on the bus, so I assume it's purely to work around a hardware bug.
    
    During normal operation, the prescaler is already set to 1, so nothing
    needs to be done. However, in "initial mode" (which is used for sub-MHz
    clock speeds, like the core sets while enumerating cards), it's set to
    128 and so we need to reset it during data reads. We currently fail to
    do this for long reads.
    
    This has no functional affect on the driver's operation currently
    written, as the MMC core always sets a clock above 1MHz before
    attempting any long reads. However, the core could conceivably set any
    clock speed at any time and the driver should still work, so I think
    this fix is worthwhile.
    
    I personally encountered this issue while performing data recovery on an
    external chip. My connections had poor signal integrity, so I modified
    the core code to reduce the clock speed. Without this change, I saw the
    card enumerate but was unable to actually read any data.
    
    Writes don't seem to work in the situation described above even with
    this change (and even if the workaround is extended to encompass data
    write commands). I was not able to find a way to get them working.
    
    Signed-off-by: Thomas Hebb <tommyhebb@gmail.com>
    Link: https://lore.kernel.org/r/2fef280d8409ab0100c26c6ac7050227defd098d.1627818365.git.tommyhebb@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aa628c45875e7b8cca81ed9447a12a0e8f3504a
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Fri Jul 30 12:41:49 2021 -0500

    gfs2: Don't call dlm after protocol is unmounted
    
    [ Upstream commit d1340f80f0b8066321b499a376780da00560e857 ]
    
    In the gfs2 withdraw sequence, the dlm protocol is unmounted with a call
    to lm_unmount. After a withdraw, users are allowed to unmount the
    withdrawn file system. But at that point we may still have glocks left
    over that we need to free via unmount's call to gfs2_gl_hash_clear.
    These glocks may have never been completed because of whatever problem
    caused the withdraw (IO errors or whatever).
    
    Before this patch, function gdlm_put_lock would still try to call into
    dlm to unlock these leftover glocks, which resulted in dlm returning
    -EINVAL because the lock space was abandoned. These glocks were never
    freed because there was no mechanism after that to free them.
    
    This patch adds a check to gdlm_put_lock to see if the locking protocol
    was inactive (DFL_UNMOUNT flag) and if so, free the glock and not
    make the invalid call into dlm.
    
    I could have combined this "if" with the one that follows, related to
    leftover glock LVBs, but I felt the code was more readable with its own
    if clause.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9dc7a1211ddbb2213fb41a7875a02e3e8dc06fd
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Aug 12 16:41:42 2021 -0400

    rpc: fix gss_svc_init cleanup on failure
    
    [ Upstream commit 5a4753446253a427c0ff1e433b9c4933e5af207c ]
    
    The failure case here should be rare, but it's obviously wrong.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6418b4be584d3f1e60116ca43eacac959cfeb277
Author: Andreas Obergschwandtner <andreas.obergschwandtner@gmail.com>
Date:   Thu Jul 29 16:42:26 2021 +0200

    ARM: tegra: tamonten: Fix UART pad setting
    
    [ Upstream commit 2270ad2f4e123336af685ecedd1618701cb4ca1e ]
    
    This patch fixes the tristate and pullup configuration for UART 1 to 3
    on the Tamonten SOM.
    
    Signed-off-by: Andreas Obergschwandtner <andreas.obergschwandtner@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ea5848b32d0e21e7bc7b19b6c0ab5ca618f3f89
Author: Tuo Li <islituo@gmail.com>
Date:   Wed Aug 11 04:34:58 2021 -0700

    gpu: drm: amd: amdgpu: amdgpu_i2c: fix possible uninitialized-variable access in amdgpu_i2c_router_select_ddc_port()
    
    [ Upstream commit a211260c34cfadc6068fece8c9e99e0fe1e2a2b6 ]
    
    The variable val is declared without initialization, and its address is
    passed to amdgpu_i2c_get_byte(). In this function, the value of val is
    accessed in:
      DRM_DEBUG("i2c 0x%02x 0x%02x read failed\n",
           addr, *val);
    
    Also, when amdgpu_i2c_get_byte() returns, val may remain uninitialized,
    but it is accessed in:
      val &= ~amdgpu_connector->router.ddc_mux_control_pin;
    
    To fix this possible uninitialized-variable access, initialize val to 0 in
    amdgpu_i2c_router_select_ddc_port().
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 470f7a682dbd120b9a7b92715d0e57c9b98cc7cc
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Wed Jul 28 15:51:04 2021 +0800

    Bluetooth: skip invalid hci_sync_conn_complete_evt
    
    [ Upstream commit 92fe24a7db751b80925214ede43f8d2be792ea7b ]
    
    Syzbot reported a corrupted list in kobject_add_internal [1]. This
    happens when multiple HCI_EV_SYNC_CONN_COMPLETE event packets with
    status 0 are sent for the same HCI connection. This causes us to
    register the device more than once which corrupts the kset list.
    
    As this is forbidden behavior, we add a check for whether we're
    trying to process the same HCI_EV_SYNC_CONN_COMPLETE event multiple
    times for one connection. If that's the case, the event is invalid, so
    we report an error that the device is misbehaving, and ignore the
    packet.
    
    Link: https://syzkaller.appspot.com/bug?extid=66264bf2fd0476be7e6c [1]
    Reported-by: syzbot+66264bf2fd0476be7e6c@syzkaller.appspotmail.com
    Tested-by: syzbot+66264bf2fd0476be7e6c@syzkaller.appspotmail.com
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 614bf36bd5bcd9413c1332608b4b9063b96a4a56
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Jul 26 15:07:17 2021 +0200

    serial: 8250_pci: make setup_port() parameters explicitly unsigned
    
    [ Upstream commit 3a96e97ab4e835078e6f27b7e1c0947814df3841 ]
    
    The bar and offset parameters to setup_port() are used in pointer math,
    and while it would be very difficult to get them to wrap as a negative
    number, just be "safe" and make them unsigned so that static checkers do
    not trip over them unintentionally.
    
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Reported-by: Jordy Zomer <jordy@pwning.systems>
    Link: https://lore.kernel.org/r/20210726130717.2052096-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04eb6efbc2c2c3ca6773ce0e6f3549c2fc58ab7d
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Fri Jul 23 09:43:11 2021 +0200

    hvsi: don't panic on tty_register_driver failure
    
    [ Upstream commit 7ccbdcc4d08a6d7041e4849219bbb12ffa45db4c ]
    
    The alloc_tty_driver failure is handled gracefully in hvsi_init. But
    tty_register_driver is not. panic is called if that one fails.
    
    So handle the failure of tty_register_driver gracefully too. This will
    keep at least the console functional as it was enabled earlier by
    console_initcall in hvsi_console_init. Instead of shooting down the
    whole system.
    
    This means, we disable interrupts and restore hvsi_wait back to
    poll_for_state().
    
    Cc: linuxppc-dev@lists.ozlabs.org
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210723074317.32690-3-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b29401037aa272b93ac4893d7251b6ad24ee61e
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Fri Jul 23 09:43:10 2021 +0200

    xtensa: ISS: don't panic in rs_init
    
    [ Upstream commit 23411c720052ad860b3e579ee4873511e367130a ]
    
    While alloc_tty_driver failure in rs_init would mean we have much bigger
    problem, there is no reason to panic when tty_register_driver fails
    there. It can fail for various reasons.
    
    So handle the failure gracefully. Actually handle them both while at it.
    This will make at least the console functional as it was enabled earlier
    by console_initcall in iss_console_init. Instead of shooting down the
    whole system.
    
    We move tty_port_init() after alloc_tty_driver(), so that we don't need
    to destroy the port in case the latter function fails.
    
    Cc: Chris Zankel <chris@zankel.net>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Cc: linux-xtensa@linux-xtensa.org
    Acked-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210723074317.32690-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c42ffe932992dda045c751eeb98f1911bb84f626
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Sat Jun 26 06:11:51 2021 +0200

    serial: 8250: Define RX trigger levels for OxSemi 950 devices
    
    [ Upstream commit d7aff291d069c4418285f3c8ee27b0ff67ce5998 ]
    
    Oxford Semiconductor 950 serial port devices have a 128-byte FIFO and in
    the enhanced (650) mode, which we select in `autoconfig_has_efr' with
    the ECB bit set in the EFR register, they support the receive interrupt
    trigger level selectable with FCR bits 7:6 from the set of 16, 32, 112,
    120.  This applies to the original OX16C950 discrete UART[1] as well as
    950 cores embedded into more complex devices.
    
    For these devices we set the default to 112, which sets an excessively
    high level of 112 or 7/8 of the FIFO capacity, unlike with other port
    types where we choose at most 1/2 of their respective FIFO capacities.
    Additionally we don't make the trigger level configurable.  Consequently
    frequent input overruns happen with high bit rates where hardware flow
    control cannot be used (e.g. terminal applications) even with otherwise
    highly-performant systems.
    
    Lower the default receive interrupt trigger level to 32 then, and make
    it configurable.  Document the trigger levels along with other port
    types, including the set of 16, 32, 64, 112 for the transmit interrupt
    as well[2].
    
    References:
    
    [1] "OX16C950 rev B High Performance UART with 128 byte FIFOs", Oxford
        Semiconductor, Inc., DS-0031, Sep 05, Table 10: "Receiver Trigger
        Levels", p. 22
    
    [2] same, Table 9: "Transmit Interrupt Trigger Levels", p. 22
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2106260608480.37803@angie.orcam.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d966bcabf6763be1f7f5c4bba8b02b2dfcd98be4
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Mon Jul 12 19:26:01 2021 +0200

    s390/jump_label: print real address in a case of a jump label bug
    
    [ Upstream commit 5492886c14744d239e87f1b0b774b5a341e755cc ]
    
    In case of a jump label print the real address of the piece of code
    where a mismatch was detected. This is right before the system panics,
    so there is nothing revealed.
    
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87b569d15932c2dbfec42a7cee7b089c0139b6b3
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Mon Jul 26 14:52:51 2021 -0500

    ipv4: ip_output.c: Fix out-of-bounds warning in ip_copy_addrs()
    
    [ Upstream commit 6321c7acb82872ef6576c520b0e178eaad3a25c0 ]
    
    Fix the following out-of-bounds warning:
    
        In function 'ip_copy_addrs',
            inlined from '__ip_queue_xmit' at net/ipv4/ip_output.c:517:2:
    net/ipv4/ip_output.c:449:2: warning: 'memcpy' offset [40, 43] from the object at 'fl' is out of the bounds of referenced subobject 'saddr' with type 'unsigned int' at offset 36 [-Warray-bounds]
          449 |  memcpy(&iph->saddr, &fl4->saddr,
              |  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          450 |         sizeof(fl4->saddr) + sizeof(fl4->daddr));
              |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    The problem is that the original code is trying to copy data into a
    couple of struct members adjacent to each other in a single call to
    memcpy(). This causes a legitimate compiler warning because memcpy()
    overruns the length of &iph->saddr and &fl4->saddr. As these are just
    a couple of struct members, fix this by using direct assignments,
    instead of memcpy().
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/lkml/d5ae2e65-1f18-2577-246f-bada7eee6ccd@intel.com/
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba0eded9f65fb1641826c0453b0603b5efded3f6
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Jul 26 10:03:55 2021 +0000

    video: fbdev: riva: Error out if 'pixclock' equals zero
    
    [ Upstream commit f92763cb0feba247e0939ed137b495601fd072a5 ]
    
    The userspace program could pass any values to the driver through
    ioctl() interface. If the driver doesn't check the value of 'pixclock',
    it may cause divide error.
    
    Fix this by checking whether 'pixclock' is zero first.
    
    The following log reveals it:
    
    [   33.396850] divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    [   33.396864] CPU: 5 PID: 11754 Comm: i740 Not tainted 5.14.0-rc2-00513-gac532c9bbcfb-dirty #222
    [   33.396883] RIP: 0010:riva_load_video_mode+0x417/0xf70
    [   33.396969] Call Trace:
    [   33.396973]  ? debug_smp_processor_id+0x1c/0x20
    [   33.396984]  ? tick_nohz_tick_stopped+0x1a/0x90
    [   33.396996]  ? rivafb_copyarea+0x3c0/0x3c0
    [   33.397003]  ? wake_up_klogd.part.0+0x99/0xd0
    [   33.397014]  ? vprintk_emit+0x110/0x4b0
    [   33.397024]  ? vprintk_default+0x26/0x30
    [   33.397033]  ? vprintk+0x9c/0x1f0
    [   33.397041]  ? printk+0xba/0xed
    [   33.397054]  ? record_print_text.cold+0x16/0x16
    [   33.397063]  ? __kasan_check_read+0x11/0x20
    [   33.397074]  ? profile_tick+0xc0/0x100
    [   33.397084]  ? __sanitizer_cov_trace_const_cmp4+0x24/0x80
    [   33.397094]  ? riva_set_rop_solid+0x2a0/0x2a0
    [   33.397102]  rivafb_set_par+0xbe/0x610
    [   33.397111]  ? riva_set_rop_solid+0x2a0/0x2a0
    [   33.397119]  fb_set_var+0x5bf/0xeb0
    [   33.397127]  ? fb_blank+0x1a0/0x1a0
    [   33.397134]  ? lock_acquire+0x1ef/0x530
    [   33.397143]  ? lock_release+0x810/0x810
    [   33.397151]  ? lock_is_held_type+0x100/0x140
    [   33.397159]  ? ___might_sleep+0x1ee/0x2d0
    [   33.397170]  ? __mutex_lock+0x620/0x1190
    [   33.397180]  ? trace_hardirqs_on+0x6a/0x1c0
    [   33.397190]  do_fb_ioctl+0x31e/0x700
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627293835-17441-4-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85830b6c3e85782bd4d30512d07253905f0781f3
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Jul 26 10:03:54 2021 +0000

    video: fbdev: kyro: Error out if 'pixclock' equals zero
    
    [ Upstream commit 1520b4b7ba964f8eec2e7dd14c571d50de3e5191 ]
    
    The userspace program could pass any values to the driver through
    ioctl() interface. if the driver doesn't check the value of 'pixclock',
    it may cause divide error because the value of 'lineclock' and
    'frameclock' will be zero.
    
    Fix this by checking whether 'pixclock' is zero in kyrofb_check_var().
    
    The following log reveals it:
    
    [  103.073930] divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    [  103.073942] CPU: 4 PID: 12483 Comm: syz-executor Not tainted 5.14.0-rc2-00478-g2734d6c1b1a0-dirty #118
    [  103.073959] RIP: 0010:kyrofb_set_par+0x316/0xc80
    [  103.074045] Call Trace:
    [  103.074048]  ? ___might_sleep+0x1ee/0x2d0
    [  103.074060]  ? kyrofb_ioctl+0x330/0x330
    [  103.074069]  fb_set_var+0x5bf/0xeb0
    [  103.074078]  ? fb_blank+0x1a0/0x1a0
    [  103.074085]  ? lock_acquire+0x3bd/0x530
    [  103.074094]  ? lock_release+0x810/0x810
    [  103.074103]  ? ___might_sleep+0x1ee/0x2d0
    [  103.074114]  ? __mutex_lock+0x620/0x1190
    [  103.074126]  ? trace_hardirqs_on+0x6a/0x1c0
    [  103.074137]  do_fb_ioctl+0x31e/0x700
    [  103.074144]  ? fb_getput_cmap+0x280/0x280
    [  103.074152]  ? rcu_read_lock_sched_held+0x11/0x80
    [  103.074162]  ? rcu_read_lock_sched_held+0x11/0x80
    [  103.074171]  ? __sanitizer_cov_trace_switch+0x67/0xf0
    [  103.074181]  ? __sanitizer_cov_trace_const_cmp2+0x20/0x80
    [  103.074191]  ? do_vfs_ioctl+0x14b/0x16c0
    [  103.074199]  ? vfs_fileattr_set+0xb60/0xb60
    [  103.074207]  ? rcu_read_lock_sched_held+0x11/0x80
    [  103.074216]  ? lock_release+0x483/0x810
    [  103.074224]  ? __fget_files+0x217/0x3d0
    [  103.074234]  ? __fget_files+0x239/0x3d0
    [  103.074243]  ? do_fb_ioctl+0x700/0x700
    [  103.074250]  fb_ioctl+0xe6/0x130
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627293835-17441-3-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb7877f282fe15fb6c3751531ab951800a5ffad9
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Jul 26 10:03:53 2021 +0000

    video: fbdev: asiliantfb: Error out if 'pixclock' equals zero
    
    [ Upstream commit b36b242d4b8ea178f7fd038965e3cac7f30c3f09 ]
    
    The userspace program could pass any values to the driver through
    ioctl() interface. If the driver doesn't check the value of 'pixclock',
    it may cause divide error.
    
    Fix this by checking whether 'pixclock' is zero first.
    
    The following log reveals it:
    
    [   43.861711] divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    [   43.861737] CPU: 2 PID: 11764 Comm: i740 Not tainted 5.14.0-rc2-00513-gac532c9bbcfb-dirty #224
    [   43.861756] RIP: 0010:asiliantfb_check_var+0x4e/0x730
    [   43.861843] Call Trace:
    [   43.861848]  ? asiliantfb_remove+0x190/0x190
    [   43.861858]  fb_set_var+0x2e4/0xeb0
    [   43.861866]  ? fb_blank+0x1a0/0x1a0
    [   43.861873]  ? lock_acquire+0x1ef/0x530
    [   43.861884]  ? lock_release+0x810/0x810
    [   43.861892]  ? lock_is_held_type+0x100/0x140
    [   43.861903]  ? ___might_sleep+0x1ee/0x2d0
    [   43.861914]  ? __mutex_lock+0x620/0x1190
    [   43.861921]  ? do_fb_ioctl+0x313/0x700
    [   43.861929]  ? mutex_lock_io_nested+0xfa0/0xfa0
    [   43.861936]  ? __this_cpu_preempt_check+0x1d/0x30
    [   43.861944]  ? _raw_spin_unlock_irqrestore+0x46/0x60
    [   43.861952]  ? lockdep_hardirqs_on+0x59/0x100
    [   43.861959]  ? _raw_spin_unlock_irqrestore+0x46/0x60
    [   43.861967]  ? trace_hardirqs_on+0x6a/0x1c0
    [   43.861978]  do_fb_ioctl+0x31e/0x700
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627293835-17441-2-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e31ea11dc899092332b8ae52f1787b1dde92f153
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Wed Jul 21 12:38:22 2021 +0200

    bpf/tests: Do not PASS tests without actually testing the result
    
    [ Upstream commit 2b7e9f25e590726cca76700ebdb10e92a7a72ca1 ]
    
    Each test case can have a set of sub-tests, where each sub-test can
    run the cBPF/eBPF test snippet with its own data_size and expected
    result. Before, the end of the sub-test array was indicated by both
    data_size and result being zero. However, most or all of the internal
    eBPF tests has a data_size of zero already. When such a test also had
    an expected value of zero, the test was never run but reported as
    PASS anyway.
    
    Now the test runner always runs the first sub-test, regardless of the
    data_size and result values. The sub-test array zero-termination only
    applies for any additional sub-tests.
    
    There are other ways fix it of course, but this solution at least
    removes the surprise of eBPF tests with a zero result always succeeding.
    
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210721103822.3755111-1-johan.almbladh@anyfinetworks.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 259ff7275b1994d431b040dbad1b953b1d3a1a40
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Wed Jul 21 12:40:58 2021 +0200

    bpf/tests: Fix copy-and-paste error in double word test
    
    [ Upstream commit ae7f47041d928b1a2f28717d095b4153c63cbf6a ]
    
    This test now operates on DW as stated instead of W, which was
    already covered by another test.
    
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210721104058.3755254-1-johan.almbladh@anyfinetworks.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1677826110989bd51d8d01ca64ee4a86ebfd8bc3
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Jul 14 05:53:23 2021 +0000

    tty: serial: jsm: hold port lock when reporting modem line changes
    
    [ Upstream commit 240e126c28df084222f0b661321e8e3ecb0d232e ]
    
    uart_handle_dcd_change() requires a port lock to be held and will emit a
    warning when lockdep is enabled.
    
    Held corresponding lock to fix the following warnings.
    
    [  132.528648] WARNING: CPU: 5 PID: 11600 at drivers/tty/serial/serial_core.c:3046 uart_handle_dcd_change+0xf4/0x120
    [  132.530482] Modules linked in:
    [  132.531050] CPU: 5 PID: 11600 Comm: jsm Not tainted 5.14.0-rc1-00003-g7fef2edf7cc7-dirty #31
    [  132.535268] RIP: 0010:uart_handle_dcd_change+0xf4/0x120
    [  132.557100] Call Trace:
    [  132.557562]  ? __free_pages+0x83/0xb0
    [  132.558213]  neo_parse_modem+0x156/0x220
    [  132.558897]  neo_param+0x399/0x840
    [  132.559495]  jsm_tty_open+0x12f/0x2d0
    [  132.560131]  uart_startup.part.18+0x153/0x340
    [  132.560888]  ? lock_is_held_type+0xe9/0x140
    [  132.561660]  uart_port_activate+0x7f/0xe0
    [  132.562351]  ? uart_startup.part.18+0x340/0x340
    [  132.563003]  tty_port_open+0x8d/0xf0
    [  132.563523]  ? uart_set_options+0x1e0/0x1e0
    [  132.564125]  uart_open+0x24/0x40
    [  132.564604]  tty_open+0x15c/0x630
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Link: https://lore.kernel.org/r/1626242003-3809-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15c8213699c3db0acdf19d2a87ef8600a89ccd32
Author: Maciej Å»enczykowski <maze@google.com>
Date:   Thu Jul 1 04:48:34 2021 -0700

    usb: gadget: u_ether: fix a potential null pointer dereference
    
    [ Upstream commit 8ae01239609b29ec2eff55967c8e0fe3650cfa09 ]
    
    f_ncm tx timeout can call us with null skb to flush
    a pending frame.  In this case skb is NULL to begin
    with but ceases to be null after dev->wrap() completes.
    
    In such a case in->maxpacket will be read, even though
    we've failed to check that 'in' is not NULL.
    
    Though I've never observed this fail in practice,
    however the 'flush operation' simply does not make sense with
    a null usb IN endpoint - there's nowhere to flush to...
    (note that we're the gadget/device, and IN is from the point
     of view of the host, so here IN actually means outbound...)
    
    Cc: Brooke Basile <brookebasile@gmail.com>
    Cc: "Bryan O'Donoghue" <bryan.odonoghue@linaro.org>
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Maciej Å»enczykowski <maze@google.com>
    Link: https://lore.kernel.org/r/20210701114834.884597-6-zenczykowski@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36415d6a02b95a6311b5928c28c362b0d43fdc91
Author: Kelly Devilliv <kelly.devilliv@gmail.com>
Date:   Sun Jun 27 20:57:47 2021 +0800

    usb: host: fotg210: fix the actual_length of an iso packet
    
    [ Upstream commit 091cb2f782f32ab68c6f5f326d7868683d3d4875 ]
    
    We should acquire the actual_length of an iso packet
    from the iTD directly using FOTG210_ITD_LENGTH() macro.
    
    Signed-off-by: Kelly Devilliv <kelly.devilliv@gmail.com>
    Link: https://lore.kernel.org/r/20210627125747.127646-4-kelly.devilliv@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5aa1de33cb467760853fbd6e84ba57fb8240fa6f
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Thu Jul 15 17:17:24 2021 +0800

    Smack: Fix wrong semantics in smk_access_entry()
    
    [ Upstream commit 6d14f5c7028eea70760df284057fe198ce7778dd ]
    
    In the smk_access_entry() function, if no matching rule is found
    in the rust_list, a negative error code will be used to perform bit
    operations with the MAY_ enumeration value. This is semantically
    wrong. This patch fixes this issue.
    
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4c76419ef9329405a7ad261612a42cef905fcbf
Author: Yajun Deng <yajun.deng@linux.dev>
Date:   Mon Jul 19 13:18:16 2021 +0800

    netlink: Deal with ESRCH error in nlmsg_notify()
    
    [ Upstream commit fef773fc8110d8124c73a5e6610f89e52814637d ]
    
    Yonghong Song report:
    The bpf selftest tc_bpf failed with latest bpf-next.
    The following is the command to run and the result:
    $ ./test_progs -n 132
    [   40.947571] bpf_testmod: loading out-of-tree module taints kernel.
    test_tc_bpf:PASS:test_tc_bpf__open_and_load 0 nsec
    test_tc_bpf:PASS:bpf_tc_hook_create(BPF_TC_INGRESS) 0 nsec
    test_tc_bpf:PASS:bpf_tc_hook_create invalid hook.attach_point 0 nsec
    test_tc_bpf_basic:PASS:bpf_obj_get_info_by_fd 0 nsec
    test_tc_bpf_basic:PASS:bpf_tc_attach 0 nsec
    test_tc_bpf_basic:PASS:handle set 0 nsec
    test_tc_bpf_basic:PASS:priority set 0 nsec
    test_tc_bpf_basic:PASS:prog_id set 0 nsec
    test_tc_bpf_basic:PASS:bpf_tc_attach replace mode 0 nsec
    test_tc_bpf_basic:PASS:bpf_tc_query 0 nsec
    test_tc_bpf_basic:PASS:handle set 0 nsec
    test_tc_bpf_basic:PASS:priority set 0 nsec
    test_tc_bpf_basic:PASS:prog_id set 0 nsec
    libbpf: Kernel error message: Failed to send filter delete notification
    test_tc_bpf_basic:FAIL:bpf_tc_detach unexpected error: -3 (errno 3)
    test_tc_bpf:FAIL:test_tc_internal ingress unexpected error: -3 (errno 3)
    
    The failure seems due to the commit
        cfdf0d9ae75b ("rtnetlink: use nlmsg_notify() in rtnetlink_send()")
    
    Deal with ESRCH error in nlmsg_notify() even the report variable is zero.
    
    Reported-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Yajun Deng <yajun.deng@linux.dev>
    Link: https://lore.kernel.org/r/20210719051816.11762-1-yajun.deng@linux.dev
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 751d71e25e2bd5b1739510ed6baae95c6c21171f
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Jul 14 04:09:22 2021 +0000

    video: fbdev: kyro: fix a DoS bug by restricting user input
    
    [ Upstream commit 98a65439172dc69cb16834e62e852afc2adb83ed ]
    
    The user can pass in any value to the driver through the 'ioctl'
    interface. The driver dost not check, which may cause DoS bugs.
    
    The following log reveals it:
    
    divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    RIP: 0010:SetOverlayViewPort+0x133/0x5f0 drivers/video/fbdev/kyro/STG4000OverlayDevice.c:476
    Call Trace:
     kyro_dev_overlay_viewport_set drivers/video/fbdev/kyro/fbdev.c:378 [inline]
     kyrofb_ioctl+0x2eb/0x330 drivers/video/fbdev/kyro/fbdev.c:603
     do_fb_ioctl+0x1f3/0x700 drivers/video/fbdev/core/fbmem.c:1171
     fb_ioctl+0xeb/0x130 drivers/video/fbdev/core/fbmem.c:1185
     vfs_ioctl fs/ioctl.c:48 [inline]
     __do_sys_ioctl fs/ioctl.c:753 [inline]
     __se_sys_ioctl fs/ioctl.c:739 [inline]
     __x64_sys_ioctl+0x19b/0x220 fs/ioctl.c:739
     do_syscall_64+0x32/0x80 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1626235762-2590-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1382eae1b1330369ad40e2e96f609a362a674550
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jun 27 17:32:37 2021 +0100

    iio: dac: ad5624r: Fix incorrect handling of an optional regulator.
    
    [ Upstream commit 97683c851f9cdbd3ea55697cbe2dcb6af4287bbd ]
    
    The naming of the regulator is problematic.  VCC is usually a supply
    voltage whereas these devices have a separate VREF pin.
    
    Secondly, the regulator core might have provided a stub regulator if
    a real regulator wasn't provided. That would in turn have failed to
    provide a voltage when queried. So reality was that there was no way
    to use the internal reference.
    
    In order to avoid breaking any dts out in the wild, make sure to fallback
    to the original vcc naming if vref is not available.
    
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Nuno SÃ¡ <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20210627163244.1090296-9-jic23@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c767ab61349798268a54e37c5d2d282b90512703
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jul 8 15:25:06 2021 +0200

    PCI: Use pci_update_current_state() in pci_enable_device_flags()
    
    [ Upstream commit 14858dcc3b3587f4bb5c48e130ee7d68fc2b0a29 ]
    
    Updating the current_state field of struct pci_dev the way it is done
    in pci_enable_device_flags() before calling do_pci_enable_device() may
    not work.  For example, if the given PCI device depends on an ACPI
    power resource whose _STA method initially returns 0 ("off"), but the
    config space of the PCI device is accessible and the power state
    retrieved from the PCI_PM_CTRL register is D0, the current_state
    field in the struct pci_dev representing that device will get out of
    sync with the power.state of its ACPI companion object and that will
    lead to power management issues going forward.
    
    To avoid such issues, make pci_enable_device_flags() call
    pci_update_current_state() which takes ACPI device power management
    into account, if present, to retrieve the current power state of the
    device.
    
    Link: https://lore.kernel.org/lkml/20210314000439.3138941-1-luzmaximilian@gmail.com/
    Reported-by: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66cc911085a2f2e299b483d28660349890b1943d
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jul 1 14:56:38 2021 -0400

    crypto: mxs-dcp - Use sg_mapping_iter to copy data
    
    [ Upstream commit 2e6d793e1bf07fe5e20cfbbdcec9e1af7e5097eb ]
    
    This uses the sg_pcopy_from_buffer to copy data, instead of doing it
    ourselves.
    
    In addition to reducing code size, this fixes the following oops
    resulting from failing to kmap the page:
    
    [   68.896381] Unable to handle kernel NULL pointer dereference at virtual address 00000ab8
    [   68.904539] pgd = 3561adb3
    [   68.907475] [00000ab8] *pgd=00000000
    [   68.911153] Internal error: Oops: 805 [#1] ARM
    [   68.915618] Modules linked in: cfg80211 rfkill des_generic libdes arc4 libarc4 cbc ecb algif_skcipher sha256_generic libsha256 sha1_generic hmac aes_generic libaes cmac sha512_generic md5 md4 algif_hash af_alg i2c_imx i2c_core ci_hdrc_imx ci_hdrc mxs_dcp ulpi roles udc_core imx_sdma usbmisc_imx usb_common firmware_class virt_dma phy_mxs_usb nf_tables nfnetlink ip_tables x_tables ipv6 autofs4
    [   68.950741] CPU: 0 PID: 139 Comm: mxs_dcp_chan/ae Not tainted 5.10.34 #296
    [   68.958501] Hardware name: Freescale i.MX6 Ultralite (Device Tree)
    [   68.964710] PC is at memcpy+0xa8/0x330
    [   68.968479] LR is at 0xd7b2bc9d
    [   68.971638] pc : [<c053e7c8>]    lr : [<d7b2bc9d>]    psr: 000f0013
    [   68.977920] sp : c2cbbee4  ip : 00000010  fp : 00000010
    [   68.983159] r10: 00000000  r9 : c3283a40  r8 : 1a5a6f08
    [   68.988402] r7 : 4bfe0ecc  r6 : 76d8a220  r5 : c32f9050  r4 : 00000001
    [   68.994945] r3 : 00000ab8  r2 : fffffff0  r1 : c32f9050  r0 : 00000ab8
    [   69.001492] Flags: nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [   69.008646] Control: 10c53c7d  Table: 83664059  DAC: 00000051
    [   69.014414] Process mxs_dcp_chan/ae (pid: 139, stack limit = 0x667b57ab)
    [   69.021133] Stack: (0xc2cbbee4 to 0xc2cbc000)
    [   69.025519] bee0:          c32f9050 c3235408 00000010 00000010 00000ab8 00000001 bf10406c
    [   69.033720] bf00: 00000000 00000000 00000010 00000000 c32355d0 832fb080 00000000 c13de2fc
    [   69.041921] bf20: c3628010 00000010 c33d5780 00000ab8 bf1067e8 00000002 c21e5010 c2cba000
    [   69.050125] bf40: c32f8040 00000000 bf106a40 c32f9040 c3283a80 00000001 bf105240 c3234040
    [   69.058327] bf60: ffffe000 c3204100 c2c69800 c2cba000 00000000 bf103b84 00000000 c2eddc54
    [   69.066530] bf80: c3204144 c0140d1c c2cba000 c2c69800 c0140be8 00000000 00000000 00000000
    [   69.074730] bfa0: 00000000 00000000 00000000 c0100114 00000000 00000000 00000000 00000000
    [   69.082932] bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [   69.091131] bfe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [   69.099364] [<c053e7c8>] (memcpy) from [<bf10406c>] (dcp_chan_thread_aes+0x4e8/0x840 [mxs_dcp])
    [   69.108117] [<bf10406c>] (dcp_chan_thread_aes [mxs_dcp]) from [<c0140d1c>] (kthread+0x134/0x160)
    [   69.116941] [<c0140d1c>] (kthread) from [<c0100114>] (ret_from_fork+0x14/0x20)
    [   69.124178] Exception stack(0xc2cbbfb0 to 0xc2cbbff8)
    [   69.129250] bfa0:                                     00000000 00000000 00000000 00000000
    [   69.137450] bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [   69.145648] bfe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [   69.152289] Code: e320f000 e4803004 e4804004 e4805004 (e4806004)
    
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fda79d3c3c48dd8ff2e0f47cace0366b003fc97
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Thu Jul 22 11:39:29 2021 +0800

    pinctrl: single: Fix error return code in pcs_parse_bits_in_pinctrl_entry()
    
    [ Upstream commit d789a490d32fdf0465275e3607f8a3bc87d3f3ba ]
    
    Fix to return -ENOTSUPP instead of 0 when PCS_HAS_PINCONF is true, which
    is the same as that returned in pcs_parse_pinconf().
    
    Fixes: 4e7e8017a80e ("pinctrl: pinctrl-single: enhance to configure multiple pins of different modules")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Link: https://lore.kernel.org/r/20210722033930.4034-2-thunder.leizhen@huawei.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b7dd6d4ad0871313be443820554ebc3fdb3da3a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Jul 18 19:33:09 2021 -0700

    openrisc: don't printk() unconditionally
    
    [ Upstream commit 946e1052cdcc7e585ee5d1e72528ca49fb295243 ]
    
    Don't call printk() when CONFIG_PRINTK is not set.
    Fixes the following build errors:
    
    or1k-linux-ld: arch/openrisc/kernel/entry.o: in function `_external_irq_handler':
    (.text+0x804): undefined reference to `printk'
    (.text+0x804): relocation truncated to fit: R_OR1K_INSN_REL_26 against undefined symbol `printk'
    
    Fixes: 9d02a4283e9c ("OpenRISC: Boot code")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>
    Cc: Stafford Horne <shorne@gmail.com>
    Cc: openrisc@lists.librecores.org
    Signed-off-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9e9c6395208ecb9508ed1116d26223cbb804cb3
Author: Krzysztof WilczyÅ„ski <kw@linux.com>
Date:   Thu Jul 29 23:37:54 2021 +0000

    PCI: Return ~0 data on pciconfig_read() CAP_SYS_ADMIN failure
    
    commit a8bd29bd49c4156ea0ec5a97812333e2aeef44e7 upstream.
    
    The pciconfig_read() syscall reads PCI configuration space using
    hardware-dependent config accessors.
    
    If the read fails on PCI, most accessors don't return an error; they
    pretend the read was successful and got ~0 data from the device, so the
    syscall returns success with ~0 data in the buffer.
    
    When the accessor does return an error, pciconfig_read() normally fills the
    user's buffer with ~0 and returns an error in errno.  But after
    e4585da22ad0 ("pci syscall.c: Switch to refcounting API"), we don't fill
    the buffer with ~0 for the EPERM "user lacks CAP_SYS_ADMIN" error.
    
    Userspace may rely on the ~0 data to detect errors, but after e4585da22ad0,
    that would not detect CAP_SYS_ADMIN errors.
    
    Restore the original behaviour of filling the buffer with ~0 when the
    CAP_SYS_ADMIN check fails.
    
    [bhelgaas: commit log, fold in Nathan's fix
    https://lore.kernel.org/r/20210803200836.500658-1-nathan@kernel.org]
    Fixes: e4585da22ad0 ("pci syscall.c: Switch to refcounting API")
    Link: https://lore.kernel.org/r/20210729233755.1509616-1-kw@linux.com
    Signed-off-by: Krzysztof WilczyÅ„ski <kw@linux.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39ac71cacf56907ceb4dceeb83da4be510e65ab2
Author: Marek BehÃºn <kabel@kernel.org>
Date:   Thu Jun 24 19:14:18 2021 +0200

    PCI: Restrict ASMedia ASM1062 SATA Max Payload Size Supported
    
    commit b12d93e9958e028856cbcb061b6e64728ca07755 upstream.
    
    The ASMedia ASM1062 SATA controller advertises Max_Payload_Size_Supported
    of 512, but in fact it cannot handle incoming TLPs with payload size of
    512.
    
    We discovered this issue on PCIe controllers capable of MPS = 512 (Aardvark
    and DesignWare), where the issue presents itself as an External Abort.
    Bjorn Helgaas says:
    
      Probably ASM1062 reports a Malformed TLP error when it receives a data
      payload of 512 bytes, and Aardvark, DesignWare, etc convert this to an
      arm64 External Abort. [1]
    
    To avoid this problem, limit the ASM1062 Max Payload Size Supported to 256
    bytes, so we set the Max Payload Size of devices that may send TLPs to the
    ASM1062 to 256 or less.
    
    [1] https://lore.kernel.org/linux-pci/20210601170907.GA1949035@bjorn-Precision-5520/
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=212695
    Link: https://lore.kernel.org/r/20210624171418.27194-2-kabel@kernel.org
    Reported-by: RÃ¶tti <espressobinboardarmbiantempmailaddress@posteo.de>
    Signed-off-by: Marek BehÃºn <kabel@kernel.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Krzysztof WilczyÅ„ski <kw@linux.com>
    Reviewed-by: Pali RohÃ¡r <pali@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1fa175419a7ee6cf3688c13355cddfb5eca9f78
Author: David Heidelberg <david@ixit.cz>
Date:   Mon Aug 9 19:07:30 2021 +0100

    ARM: 9105/1: atags_to_fdt: don't warn about stack size
    
    commit b30d0289de72c62516df03fdad8d53f552c69839 upstream.
    
    The merge_fdt_bootargs() function by definition consumes more than 1024
    bytes of stack because it has a 1024 byte command line on the stack,
    meaning that we always get a warning when building this file:
    
    arch/arm/boot/compressed/atags_to_fdt.c: In function 'merge_fdt_bootargs':
    arch/arm/boot/compressed/atags_to_fdt.c:98:1: warning: the frame size of 1032 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    However, as this is the decompressor and we know that it has a very shallow
    call chain, and we do not actually risk overflowing the kernel stack
    at runtime here.
    
    This just shuts up the warning by disabling the warning flag for this
    file.
    
    Tested on Nexus 7 2012 builds.
    
    Acked-by: Nicolas Pitre <nico@fluxnic.net>
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92f1f81c5d59adda09a52233c078beef1dd4de11
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Aug 23 11:52:20 2021 +0200

    libata: add ATA_HORKAGE_NO_NCQ_TRIM for Samsung 860 and 870 SSDs
    
    commit 8a6430ab9c9c87cb64c512e505e8690bbaee190b upstream.
    
    Commit ca6bfcb2f6d9 ("libata: Enable queued TRIM for Samsung SSD 860")
    limited the existing ATA_HORKAGE_NO_NCQ_TRIM quirk from "Samsung SSD 8*",
    covering all Samsung 800 series SSDs, to only apply to "Samsung SSD 840*"
    and "Samsung SSD 850*" series based on information from Samsung.
    
    But there is a large number of users which is still reporting issues
    with the Samsung 860 and 870 SSDs combined with Intel, ASmedia or
    Marvell SATA controllers and all reporters also report these problems
    going away when disabling queued trims.
    
    Note that with AMD SATA controllers users are reporting even worse
    issues and only completely disabling NCQ helps there, this will be
    addressed in a separate patch.
    
    Fixes: ca6bfcb2f6d9 ("libata: Enable queued TRIM for Samsung SSD 860")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=203475
    Cc: stable@vger.kernel.org
    Cc: Kate Hsuan <hpa@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Link: https://lore.kernel.org/r/20210823095220.30157-1-hdegoede@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cddda498c6af2e9ce8fb14ddc48f181b3715ff9
Author: Sean Young <sean@mess.org>
Date:   Sat Jul 3 15:37:17 2021 +0200

    media: rc-loopback: return number of emitters rather than error
    
    commit 6b7f554be8c92319d7e6df92fd247ebb9beb4a45 upstream.
    
    The LIRC_SET_TRANSMITTER_MASK ioctl should return the number of emitters
    if an invalid list was set.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bed3f25a19f2c3ef204e1aafe75a66fe2474d21
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Thu Jun 17 14:33:29 2021 +0200

    media: uvc: don't do DMA on stack
    
    commit 1a10d7fdb6d0e235e9d230916244cc2769d3f170 upstream.
    
    As warned by smatch:
            drivers/media/usb/uvc/uvc_v4l2.c:911 uvc_ioctl_g_input() error: doing dma on the stack (&i)
            drivers/media/usb/uvc/uvc_v4l2.c:943 uvc_ioctl_s_input() error: doing dma on the stack (&i)
    
    those two functions call uvc_query_ctrl passing a pointer to
    a data at the DMA stack. those are used to send URBs via
    usb_control_msg(). Using DMA stack is not supported and should
    not work anymore on modern Linux versions.
    
    So, use a kmalloc'ed buffer.
    
    Cc: stable@vger.kernel.org      # Kernel 4.9 and upper
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4619198c2854d3601c01a0e8658c5b9864cc5a4e
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Aug 18 20:48:45 2021 +0800

    VMCI: fix NULL pointer dereference when unmapping queue pair
    
    commit a30dc6cf0dc51419021550152e435736aaef8799 upstream.
    
    I got a NULL pointer dereference report when doing fuzz test:
    
    Call Trace:
      qp_release_pages+0xae/0x130
      qp_host_unregister_user_memory.isra.25+0x2d/0x80
      vmci_qp_broker_unmap+0x191/0x320
      ? vmci_host_do_alloc_queuepair.isra.9+0x1c0/0x1c0
      vmci_host_unlocked_ioctl+0x59f/0xd50
      ? do_vfs_ioctl+0x14b/0xa10
      ? tomoyo_file_ioctl+0x28/0x30
      ? vmci_host_do_alloc_queuepair.isra.9+0x1c0/0x1c0
      __x64_sys_ioctl+0xea/0x120
      do_syscall_64+0x34/0xb0
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    When a queue pair is created by the following call, it will not
    register the user memory if the page_store is NULL, and the
    entry->state will be set to VMCIQPB_CREATED_NO_MEM.
    
    vmci_host_unlocked_ioctl
      vmci_host_do_alloc_queuepair
        vmci_qp_broker_alloc
          qp_broker_alloc
            qp_broker_create // set entry->state = VMCIQPB_CREATED_NO_MEM;
    
    When unmapping this queue pair, qp_host_unregister_user_memory() will
    be called to unregister the non-existent user memory, which will
    result in a null pointer reference. It will also change
    VMCIQPB_CREATED_NO_MEM to VMCIQPB_CREATED_MEM, which should not be
    present in this operation.
    
    Only when the qp broker has mem, it can unregister the user
    memory when unmapping the qp broker.
    
    Only when the qp broker has no mem, it can register the user
    memory when mapping the qp broker.
    
    Fixes: 06164d2b72aa ("VMCI: queue pairs implementation.")
    Cc: stable <stable@vger.kernel.org>
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Link: https://lore.kernel.org/r/20210818124845.488312-1-wanghai38@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce3b831254729276471d141564c4fd231d95637b
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Mon Aug 16 10:27:14 2021 +0200

    power: supply: max17042: handle fails of reading status register
    
    commit 54784ffa5b267f57161eb8fbb811499f22a0a0bf upstream.
    
    Reading status register can fail in the interrupt handler.  In such
    case, the regmap_read() will not store anything useful under passed
    'val' variable and random stack value will be used to determine type of
    interrupt.
    
    Handle the regmap_read() failure to avoid handling interrupt type and
    triggering changed power supply event based on random stack value.
    
    Fixes: 39e7213edc4f ("max17042_battery: Support regmap to access device's registers")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36a260bfe7b6153b75d0869f4f56d2b679c8a565
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Jul 30 11:26:21 2021 +0200

    xen: fix setting of max_pfn in shared_info
    
    commit 4b511d5bfa74b1926daefd1694205c7f1bcf677f upstream.
    
    Xen PV guests are specifying the highest used PFN via the max_pfn
    field in shared_info. This value is used by the Xen tools when saving
    or migrating the guest.
    
    Unfortunately this field is misnamed, as in reality it is specifying
    the number of pages (including any memory holes) of the guest, so it
    is the highest used PFN + 1. Renaming isn't possible, as this is a
    public Xen hypervisor interface which needs to be kept stable.
    
    The kernel will set the value correctly initially at boot time, but
    when adding more pages (e.g. due to memory hotplug or ballooning) a
    real PFN number is stored in max_pfn. This is done when expanding the
    p2m array, and the PFN stored there is even possibly wrong, as it
    should be the last possible PFN of the just added P2M frame, and not
    one which led to the P2M expansion.
    
    Fix that by setting shared_info->max_pfn to the last possible PFN + 1.
    
    Fixes: 98dd166ea3a3c3 ("x86/xen/p2m: hint at the last populated P2M entry")
    Cc: stable@vger.kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Link: https://lore.kernel.org/r/20210730092622.9973-2-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d3b2be8935fb0ec523e117556810572068eb408
Author: Marek Marczykowski-GÃ³recki <marmarek@invisiblethingslab.com>
Date:   Thu Aug 26 19:03:42 2021 +0200

    PCI/MSI: Skip masking MSI-X on Xen PV
    
    commit 1a519dc7a73c977547d8b5108d98c6e769c89f4b upstream.
    
    When running as Xen PV guest, masking MSI-X is a responsibility of the
    hypervisor. The guest has no write access to the relevant BAR at all - when
    it tries to, it results in a crash like this:
    
        BUG: unable to handle page fault for address: ffffc9004069100c
        #PF: supervisor write access in kernel mode
        #PF: error_code(0x0003) - permissions violation
        RIP: e030:__pci_enable_msix_range.part.0+0x26b/0x5f0
         e1000e_set_interrupt_capability+0xbf/0xd0 [e1000e]
         e1000_probe+0x41f/0xdb0 [e1000e]
         local_pci_probe+0x42/0x80
        (...)
    
    The recently introduced function msix_mask_all() does not check the global
    variable pci_msi_ignore_mask which is set by XEN PV to bypass the masking
    of MSI[-X] interrupts.
    
    Add the check to make this function XEN PV compatible.
    
    Fixes: 7d5ec3d36123 ("PCI/MSI: Mask all unused MSI-X entries")
    Signed-off-by: Marek Marczykowski-GÃ³recki <marmarek@invisiblethingslab.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210826170342.135172-1-marmarek@invisiblethingslab.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c8560104b91a4d28e385352d5da79e01c0b5bc6
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Aug 8 19:00:30 2021 +0300

    rtc: tps65910: Correct driver module alias
    
    commit 8d448fa0a8bb1c8d94eef7647edffe9ac81a281e upstream.
    
    The TPS65910 RTC driver module doesn't auto-load because of the wrong
    module alias that doesn't match the device name, fix it.
    
    Cc: stable@vger.kernel.org
    Reported-by: Anton Bambura <jenneron@protonmail.com>
    Tested-by: Anton Bambura <jenneron@protonmail.com>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210808160030.8556-1-digetx@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77497cbd3383abc3e1de373109d85ee2e9dd2c70
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Wed Sep 8 19:27:49 2021 +0900

    fbmem: don't allow too huge resolutions
    
    commit 8c28051cdcbe9dfcec6bd0a4709d67a09df6edae upstream.
    
    syzbot is reporting page fault at vga16fb_fillrect() [1], for
    vga16fb_check_var() is failing to detect multiplication overflow.
    
      if (vxres * vyres > maxmem) {
        vyres = maxmem / vxres;
        if (vyres < yres)
          return -ENOMEM;
      }
    
    Since no module would accept too huge resolutions where multiplication
    overflow happens, let's reject in the common path.
    
    Link: https://syzkaller.appspot.com/bug?extid=04168c8063cfdde1db5e [1]
    Reported-by: syzbot <syzbot+04168c8063cfdde1db5e@syzkaller.appspotmail.com>
    Debugged-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/185175d6-227a-7b55-433d-b070929b262c@i-love.sakura.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c0be52046c94489dfbb87ef0ff6107f04ff1e5d
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Aug 15 01:55:14 2021 +0200

    clk: kirkwood: Fix a clocking boot regression
    
    commit aaedb9e00e5400220a8871180d23a83e67f29f63 upstream.
    
    Since a few kernel releases the Pogoplug 4 has crashed like this
    during boot:
    
    Unable to handle kernel NULL pointer dereference at virtual address 00000002
    (...)
    [<c04116ec>] (strlen) from [<c00ead80>] (kstrdup+0x1c/0x4c)
    [<c00ead80>] (kstrdup) from [<c04591d8>] (__clk_register+0x44/0x37c)
    [<c04591d8>] (__clk_register) from [<c04595ec>] (clk_hw_register+0x20/0x44)
    [<c04595ec>] (clk_hw_register) from [<c045bfa8>] (__clk_hw_register_mux+0x198/0x1e4)
    [<c045bfa8>] (__clk_hw_register_mux) from [<c045c050>] (clk_register_mux_table+0x5c/0x6c)
    [<c045c050>] (clk_register_mux_table) from [<c0acf3e0>] (kirkwood_clk_muxing_setup.constprop.0+0x13c/0x1ac)
    [<c0acf3e0>] (kirkwood_clk_muxing_setup.constprop.0) from [<c0aceae0>] (of_clk_init+0x12c/0x214)
    [<c0aceae0>] (of_clk_init) from [<c0ab576c>] (time_init+0x20/0x2c)
    [<c0ab576c>] (time_init) from [<c0ab3d18>] (start_kernel+0x3dc/0x56c)
    [<c0ab3d18>] (start_kernel) from [<00000000>] (0x0)
    Code: e3130020 1afffffb e12fff1e c08a1078 (e5d03000)
    
    This is because the "powersave" mux clock 0 was provided in an unterminated
    array, which is required by the loop in the driver:
    
            /* Count, allocate, and register clock muxes */
            for (n = 0; desc[n].name;)
                    n++;
    
    Here n will go out of bounds and then call clk_register_mux() on random
    memory contents after the mux clock.
    
    Fix this by terminating the array with a blank entry.
    
    Fixes: 105299381d87 ("cpufreq: kirkwood: use the powersave multiplexer")
    Cc: stable@vger.kernel.org
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Cc: Gregory CLEMENT <gregory.clement@bootlin.com>
    Cc: Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20210814235514.403426-1-linus.walleij@linaro.org
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8eccf9266c173d398dbe4dbfe469d542fe498a2b
Author: Zelin Deng <zelin.deng@linux.alibaba.com>
Date:   Wed Apr 28 10:22:01 2021 +0800

    KVM: x86: Update vCPU's hv_clock before back to guest when tsc_offset is adjusted
    
    commit d9130a2dfdd4b21736c91b818f87dbc0ccd1e757 upstream.
    
    When MSR_IA32_TSC_ADJUST is written by guest due to TSC ADJUST feature
    especially there's a big tsc warp (like a new vCPU is hot-added into VM
    which has been up for a long time), tsc_offset is added by a large value
    then go back to guest. This causes system time jump as tsc_timestamp is
    not adjusted in the meantime and pvclock monotonic character.
    To fix this, just notify kvm to update vCPU's guest time before back to
    guest.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Zelin Deng <zelin.deng@linux.alibaba.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Message-Id: <1619576521-81399-2-git-send-email-zelin.deng@linux.alibaba.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed8646f859cd0543cfeed77c5da3dc17ee974109
Author: Nguyen Dinh Phi <phind.uet@gmail.com>
Date:   Mon Aug 23 08:06:41 2021 +0800

    tty: Fix data race between tiocsti() and flush_to_ldisc()
    
    commit bb2853a6a421a052268eee00fd5d3f6b3504b2b1 upstream.
    
    The ops->receive_buf() may be accessed concurrently from these two
    functions.  If the driver flushes data to the line discipline
    receive_buf() method while tiocsti() is waiting for the
    ops->receive_buf() to finish its work, the data race will happen.
    
    For example:
    tty_ioctl                       |tty_ldisc_receive_buf
     ->tioctsi                      | ->tty_port_default_receive_buf
                                    |  ->tty_ldisc_receive_buf
       ->hci_uart_tty_receive       |   ->hci_uart_tty_receive
        ->h4_recv                   |    ->h4_recv
    
    In this case, the h4 receive buffer will be overwritten by the
    latecomer, and we will lost the data.
    
    Hence, change tioctsi() function to use the exclusive lock interface
    from tty_buffer to avoid the data race.
    
    Reported-by: syzbot+97388eb9d31b997fe1d0@syzkaller.appspotmail.com
    Reviewed-by: Jiri Slaby <jirislaby@kernel.org>
    Signed-off-by: Nguyen Dinh Phi <phind.uet@gmail.com>
    Link: https://lore.kernel.org/r/20210823000641.2082292-1-phind.uet@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bed8941fbdb72a61f6348c4deb0db69c4de87aca
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Aug 29 15:16:15 2021 -0700

    ipv4: make exception cache less predictible
    
    [ Upstream commit 67d6d681e15b578c1725bad8ad079e05d1c48a8e ]
    
    Even after commit 6457378fe796 ("ipv4: use siphash instead of Jenkins in
    fnhe_hashfun()"), an attacker can still use brute force to learn
    some secrets from a victim linux host.
    
    One way to defeat these attacks is to make the max depth of the hash
    table bucket a random value.
    
    Before this patch, each bucket of the hash table used to store exceptions
    could contain 6 items under attack.
    
    After the patch, each bucket would contains a random number of items,
    between 6 and 10. The attacker can no longer infer secrets.
    
    This is slightly increasing memory size used by the hash table,
    by 50% in average, we do not expect this to be a problem.
    
    This patch is more complex than the prior one (IPv6 equivalent),
    because IPv4 was reusing the oldest entry.
    Since we need to be able to evict more than one entry per
    update_or_create_fnhe() call, I had to replace
    fnhe_oldest() with fnhe_remove_oldest().
    
    Also note that we will queue extra kfree_rcu() calls under stress,
    which hopefully wont be a too big issue.
    
    Fixes: 4895c771c7f0 ("ipv4: Add FIB nexthop exceptions.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Keyu Man <kman001@ucr.edu>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Tested-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33cccd343d040ab0576e6b361adf4f84629f8844
Author: Zenghui Yu <yuzenghui@huawei.com>
Date:   Tue Jul 27 10:52:31 2021 +0800

    bcma: Fix memory leak for internally-handled cores
    
    [ Upstream commit b63aed3ff195130fef12e0af590f4838cf0201d8 ]
    
    kmemleak reported that dev_name() of internally-handled cores were leaked
    on driver unbinding. Let's use device_initialize() to take refcounts for
    them and put_device() to properly free the related stuff.
    
    While looking at it, there's another potential issue for those which should
    be *registered* into driver core. If device_register() failed, we put
    device once and freed bcma_device structures. In bcma_unregister_cores(),
    they're treated as unregistered and we hit both UAF and double-free. That
    smells not good and has also been fixed now.
    
    Fixes: ab54bc8460b5 ("bcma: fill core details for every device")
    Signed-off-by: Zenghui Yu <yuzenghui@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210727025232.663-2-yuzenghui@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b657ca6b4be17353ac40725f00a398a04f61b5d3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Aug 13 14:34:38 2021 +0300

    ath6kl: wmi: fix an error code in ath6kl_wmi_sync_point()
    
    [ Upstream commit fd6729ec534cffbbeb3917761e6d1fe6a412d3fe ]
    
    This error path is unlikely because of it checked for NULL and
    returned -ENOMEM earlier in the function.  But it should return
    an error code here as well if we ever do hit it because of a
    race condition or something.
    
    Fixes: bdcd81707973 ("Add ath6kl cleaned up driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210813113438.GB30697@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f29692cf8c81ebd7da6c45aee39557539d263a3f
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Wed Aug 25 20:09:02 2021 +0300

    usb: ehci-orion: Handle errors of clk_prepare_enable() in probe
    
    [ Upstream commit 4720f1bf4ee4a784d9ece05420ba33c9222a3004 ]
    
    ehci_orion_drv_probe() did not account for possible errors of
    clk_prepare_enable() that in particular could cause invocation of
    clk_disable_unprepare() on clocks that were not prepared/enabled yet,
    e.g. in remove or on handling errors of usb_add_hcd() in probe. Though,
    there were several patches fixing different issues with clocks in this
    driver, they did not solve this problem.
    
    Add handling of errors of clk_prepare_enable() in ehci_orion_drv_probe()
    to avoid calls of clk_disable_unprepare() without previous successful
    invocation of clk_prepare_enable().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 8c869edaee07 ("ARM: Orion: EHCI: Add support for enabling clocks")
    Co-developed-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Link: https://lore.kernel.org/r/20210825170902.11234-1-novikov@ispras.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d00fa22f6cc93fed40f8d2b9f4b58ea58375d3e2
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sun Jul 4 17:38:45 2021 +0300

    i2c: mt65xx: fix IRQ check
    
    [ Upstream commit 58fb7c643d346e2364404554f531cfa6a1a3917c ]
    
    Iff platform_get_irq() returns 0, the driver's probe() method will return 0
    early (as if the method's call was successful).  Let's consider IRQ0 valid
    for simplicity -- devm_request_irq() can always override that decision...
    
    Fixes: ce38815d39ea ("I2C: mediatek: Add driver for MediaTek I2C controller")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Reviewed-by: Qii Wang <qii.wang@mediatek.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0955df2d9bf4857e3e2287e3028903e6cec06c30
Author: Len Baker <len.baker@gmx.com>
Date:   Tue Aug 17 12:27:09 2021 +0200

    CIFS: Fix a potencially linear read overflow
    
    [ Upstream commit f980d055a0f858d73d9467bb0b570721bbfcdfb8 ]
    
    strlcpy() reads the entire source buffer first. This read may exceed the
    destination size limit. This is both inefficient and can lead to linear
    read overflows if a source string is not NUL-terminated.
    
    Also, the strnlen() call does not avoid the read overflow in the strlcpy
    function when a not NUL-terminated string is passed.
    
    So, replace this block by a call to kstrndup() that avoids this type of
    overflow and does the same.
    
    Fixes: 066ce6899484d ("cifs: rename cifs_strlcpy_to_host and make it use new functions")
    Signed-off-by: Len Baker <len.baker@gmx.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4179f4376ecb2b89d4fa31e7d1e6f2721b618f0d
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Aug 10 11:16:44 2021 +0300

    mmc: moxart: Fix issue with uninitialized dma_slave_config
    
    [ Upstream commit ee5165354d498e5bceb0b386e480ac84c5f8c28c ]
    
    Depending on the DMA driver being used, the struct dma_slave_config may
    need to be initialized to zero for the unused data.
    
    For example, we have three DMA drivers using src_port_window_size and
    dst_port_window_size. If these are left uninitialized, it can cause DMA
    failures.
    
    For moxart, this is probably not currently an issue but is still good to
    fix though.
    
    Fixes: 1b66e94e6b99 ("mmc: moxart: Add MOXA ART SD/MMC driver")
    Cc: Jonas Jensen <jonas.jensen@gmail.com>
    Cc: Vinod Koul <vkoul@kernel.org>
    Cc: Peter Ujfalusi <peter.ujfalusi@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210810081644.19353-3-tony@atomide.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec49569e5b12ef19285686d466972041b754b49c
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Aug 10 11:16:43 2021 +0300

    mmc: dw_mmc: Fix issue with uninitialized dma_slave_config
    
    [ Upstream commit c3ff0189d3bc9c03845fe37472c140f0fefd0c79 ]
    
    Depending on the DMA driver being used, the struct dma_slave_config may
    need to be initialized to zero for the unused data.
    
    For example, we have three DMA drivers using src_port_window_size and
    dst_port_window_size. If these are left uninitialized, it can cause DMA
    failures.
    
    For dw_mmc, this is probably not currently an issue but is still good to
    fix though.
    
    Fixes: 3fc7eaef44db ("mmc: dw_mmc: Add external dma interface support")
    Cc: Shawn Lin <shawn.lin@rock-chips.com>
    Cc: Jaehoon Chung <jh80.chung@samsung.com>
    Cc: Peter Ujfalusi <peter.ujfalusi@gmail.com>
    Cc: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210810081644.19353-2-tony@atomide.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dfc94a8bc6498c8f8335697d478b4eea48ab849
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sun Jul 4 17:45:25 2021 +0300

    i2c: s3c2410: fix IRQ check
    
    [ Upstream commit d6840a5e370b7ea4fde16ce2caf431bcc87f9a75 ]
    
    Iff platform_get_irq() returns 0, the driver's probe() method will return 0
    early (as if the method's call was successful).  Let's consider IRQ0 valid
    for simplicity -- devm_request_irq() can always override that decision...
    
    Fixes: e0d1ec97853f ("i2c-s3c2410: Change IRQ to be plain integer.")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 062bee3f0cf3d24b8255fc295bad0b0112dc0a5a
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Thu Aug 12 23:35:09 2021 +0300

    i2c: iop3xx: fix deferred probing
    
    [ Upstream commit a1299505162ad00def3573260c2c68b9c8e8d697 ]
    
    When adding the code to handle platform_get_irq*() errors in the commit
    489447380a29 ("handle errors returned by platform_get_irq*()"), the
    actual error code was enforced to be -ENXIO in the driver for some
    strange reason.  This didn't matter much until the deferred probing was
    introduced -- which requires an actual error code to be propagated
    upstream from the failure site.
    
    While fixing this, also stop overriding the errors from request_irq() to
    -EIO (done since the pre-git era).
    
    Fixes: 489447380a29 ("[PATCH] handle errors returned by platform_get_irq*()")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90cc9527c8178f9f0a1deee2239734e958ac046a
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Aug 19 18:15:21 2021 +0300

    Bluetooth: add timeout sanity check to hci_inquiry
    
    [ Upstream commit f41a4b2b5eb7872109723dab8ae1603bdd9d9ec1 ]
    
    Syzbot hit "task hung" bug in hci_req_sync(). The problem was in
    unreasonable huge inquiry timeout passed from userspace.
    Fix it by adding sanity check for timeout value to hci_inquiry().
    
    Since hci_inquiry() is the only user of hci_req_sync() with user
    controlled timeout value, it makes sense to check timeout value in
    hci_inquiry() and don't touch hci_req_sync().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+be2baed593ea56c6a84c@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c2c0e8189d639af03699b1d0939bd94701028df
Author: Nadezda Lutovinova <lutovinova@ispras.ru>
Date:   Wed Aug 18 17:12:47 2021 +0300

    usb: gadget: mv_u3d: request_irq() after initializing UDC
    
    [ Upstream commit 2af0c5ffadaf9d13eca28409d4238b4e672942d3 ]
    
    If IRQ occurs between calling  request_irq() and  mv_u3d_eps_init(),
    then null pointer dereference occurs since u3d->eps[] wasn't
    initialized yet but used in mv_u3d_nuke().
    
    The patch puts registration of the interrupt handler after
    initializing of neccesery data.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 90fccb529d24 ("usb: gadget: Gadget directory cleanup - group UDC drivers")
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Nadezda Lutovinova <lutovinova@ispras.ru>
    Link: https://lore.kernel.org/r/20210818141247.4794-1-lutovinova@ispras.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62e663c172115b9e26a0856508db6277871a7c32
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Fri Aug 13 23:32:38 2021 +0300

    usb: phy: tahvo: add IRQ check
    
    [ Upstream commit 0d45a1373e669880b8beaecc8765f44cb0241e47 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to request_threaded_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding an
    original error code.  Stop calling request_threaded_irq() with the invalid
    IRQ #s.
    
    Fixes: 9ba96ae5074c ("usb: omap1: Tahvo USB transceiver driver")
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/8280d6a4-8e9a-7cfe-1aa9-db586dc9afdf@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77977cfd6b9b9b5e28bb3fda6f6d66c439b6eee7
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Fri Aug 13 23:30:18 2021 +0300

    usb: host: ohci-tmio: add IRQ check
    
    [ Upstream commit 4ac5132e8a4300637a2da8f5d6bc7650db735b8a ]
    
    The driver neglects to check the  result of platform_get_irq()'s call and
    blithely passes the negative error codes to usb_add_hcd() (which takes
    *unsigned* IRQ #), causing request_irq() that it calls to fail with
    -EINVAL, overriding an original error code. Stop calling usb_add_hcd()
    with the invalid IRQ #s.
    
    Fixes: 78c73414f4f6 ("USB: ohci: add support for tmio-ohci cell")
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/402e1a45-a0a4-0e08-566a-7ca1331506b1@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df5db051713fc377363457f83e4f37d36c0b7783
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Aug 10 12:53:15 2021 +0800

    Bluetooth: Move shutdown callback before flushing tx and rx queue
    
    [ Upstream commit 0ea53674d07fb6db2dd7a7ec2fdc85a12eb246c2 ]
    
    Commit 0ea9fd001a14 ("Bluetooth: Shutdown controller after workqueues
    are flushed or cancelled") introduced a regression that makes mtkbtsdio
    driver stops working:
    [   36.593956] Bluetooth: hci0: Firmware already downloaded
    [   46.814613] Bluetooth: hci0: Execution of wmt command timed out
    [   46.814619] Bluetooth: hci0: Failed to send wmt func ctrl (-110)
    
    The shutdown callback depends on the result of hdev->rx_work, so we
    should call it before flushing rx_work:
    -> btmtksdio_shutdown()
     -> mtk_hci_wmt_sync()
      -> __hci_cmd_send()
       -> wait for BTMTKSDIO_TX_WAIT_VND_EVT gets cleared
    
    -> btmtksdio_recv_event()
     -> hci_recv_frame()
      -> queue_work(hdev->workqueue, &hdev->rx_work)
       -> clears BTMTKSDIO_TX_WAIT_VND_EVT
    
    So move the shutdown callback before flushing TX/RX queue to resolve the
    issue.
    
    Reported-and-tested-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Tested-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Fixes: 0ea9fd001a14 ("Bluetooth: Shutdown controller after workqueues are flushed or cancelled")
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dcacc3a4c6104c63df87f193c6dabf33fa54aa3
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Aug 9 23:53:16 2021 +0300

    usb: phy: twl6030: add IRQ checks
    
    [ Upstream commit 0881e22c06e66af0b64773c91c8868ead3d01aa1 ]
    
    The driver neglects to check the result of platform_get_irq()'s calls and
    blithely passes the negative error codes to request_threaded_irq() (which
    takes *unsigned* IRQ #), causing them both to fail with -EINVAL, overriding
    an original error code.  Stop calling request_threaded_irq() with the
    invalid IRQ #s.
    
    Fixes: c33fad0c3748 ("usb: otg: Adding twl6030-usb transceiver driver for OMAP4430")
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/9507f50b-50f1-6dc4-f57c-3ed4e53a1c25@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d78c51cef5a8a17bea57395fd0b5e772b62a7758
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Aug 9 23:50:18 2021 +0300

    usb: phy: fsl-usb: add IRQ check
    
    [ Upstream commit ecc2f30dbb25969908115c81ec23650ed982b004 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to request_irq() (which takes
    *unsigned* IRQ #), causing it to fail with -EINVAL, overriding an original
    error code. Stop calling request_irq() with the invalid IRQ #s.
    
    Fixes: 0807c500a1a6 ("USB: add Freescale USB OTG Transceiver driver")
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Link: https://lore.kernel.org/r/b0a86089-8b8b-122e-fd6d-73e8c2304964@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62a67d1eb928d883015b8550efe84a736cb1b9b6
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Mon Aug 9 23:27:28 2021 +0300

    usb: gadget: udc: at91: add IRQ check
    
    [ Upstream commit 50855c31573b02963f0aa2aacfd4ea41c31ae0e0 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which takes
    *unsigned* IRQ #), causing it to fail with -EINVAL, overriding an original
    error code. Stop calling devm_request_irq() with the invalid IRQ #s.
    
    Fixes: 8b2e76687b39 ("USB: AT91 UDC updates, mostly power management")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Link: https://lore.kernel.org/r/6654a224-739a-1a80-12f0-76d920f87b6c@omp.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ce0333bc08dc0ab2fbc2cb82bde6a84de7ef5b7
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Aug 6 11:15:13 2021 +0200

    drm/msm/dsi: Fix some reference counted resource leaks
    
    [ Upstream commit 6977cc89c87506ff17e6c05f0e37f46752256e82 ]
    
    'of_find_device_by_node()' takes a reference that must be released when
    not needed anymore.
    This is expected to be done in 'dsi_destroy()'.
    
    However, there are 2 issues in 'dsi_get_phy()'.
    
    First, if 'of_find_device_by_node()' succeeds but 'platform_get_drvdata()'
    returns NULL, 'msm_dsi->phy_dev' will still be NULL, and the reference
    won't be released in 'dsi_destroy()'.
    
    Secondly, as 'of_find_device_by_node()' already takes a reference, there is
    no need for an additional 'get_device()'.
    
    Move the assignment to 'msm_dsi->phy_dev' a few lines above and remove the
    unneeded 'get_device()' to solve both issues.
    
    Fixes: ec31abf6684e ("drm/msm/dsi: Separate PHY to another platform device")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/f15bc57648a00e7c99f943903468a04639d50596.1628241097.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98ae477ed1540d3acbbf44d88ee237ad64275158
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Tue Aug 10 12:14:10 2021 +0800

    Bluetooth: fix repeated calls to sco_sock_kill
    
    [ Upstream commit e1dee2c1de2b4dd00eb44004a4bda6326ed07b59 ]
    
    In commit 4e1a720d0312 ("Bluetooth: avoid killing an already killed
    socket"), a check was added to sco_sock_kill to skip killing a socket
    if the SOCK_DEAD flag was set.
    
    This was done after a trace for a use-after-free bug showed that the
    same sock pointer was being killed twice.
    
    Unfortunately, this check prevents sco_sock_kill from running on any
    socket. sco_sock_kill kills a socket only if it's zapped and orphaned,
    however sock_orphan announces that the socket is dead before detaching
    it. i.e., orphaned sockets have the SOCK_DEAD flag set.
    
    To fix this, we remove the check for SOCK_DEAD, and avoid repeated
    calls to sco_sock_kill by removing incorrect calls in:
    
    1. sco_sock_timeout. The socket should not be killed on timeout as
    further processing is expected to be done. For example,
    sco_sock_connect sets the timer then waits for the socket to be
    connected or for an error to be returned.
    
    2. sco_conn_del. This function should clean up resources for the
    connection, but the socket itself should be cleaned up in
    sco_sock_release.
    
    3. sco_sock_close. Calls to sco_sock_close in sco_sock_cleanup_listen
    and sco_sock_release are followed by sco_sock_kill. Hence the
    duplicated call should be removed.
    
    Fixes: 4e1a720d0312 ("Bluetooth: avoid killing an already killed socket")
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cc40c3d0241f80ed85ea822f982874911f2cc5d
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Thu Aug 5 09:21:10 2021 +0200

    arm64: dts: exynos: correct GIC CPU interfaces address range on Exynos7
    
    [ Upstream commit 01c72cad790cb6cd3ccbe4c1402b6cb6c6bbffd0 ]
    
    The GIC-400 CPU interfaces address range is defined as 0x2000-0x3FFF (by
    ARM).
    
    Reported-by: Sam Protsenko <semen.protsenko@linaro.org>
    Reported-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Sam Protsenko <semen.protsenko@linaro.org>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Fixes: b9024cbc937d ("arm64: dts: Add initial device tree support for exynos7")
    Link: https://lore.kernel.org/r/20210805072110.4730-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fc4c1fb61cb58d16b50424173a3a58b42ce4044
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Aug 4 16:09:51 2021 +0100

    Bluetooth: increase BTNAMSIZ to 21 chars to fix potential buffer overflow
    
    [ Upstream commit 713baf3dae8f45dc8ada4ed2f5fdcbf94a5c274d ]
    
    An earlier commit replaced using batostr to using %pMR sprintf for the
    construction of session->name. Static analysis detected that this new
    method can use a total of 21 characters (including the trailing '\0')
    so we need to increase the BTNAMSIZ from 18 to 21 to fix potential
    buffer overflows.
    
    Addresses-Coverity: ("Out-of-bounds write")
    Fixes: fcb73338ed53 ("Bluetooth: Use %pMR in sprintf/seq_printf instead of batostr")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9909f2d8694d0297a862661ef2f086ccf3c3c068
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jul 29 16:49:10 2021 +0200

    PCI: PM: Enable PME if it can be signaled from D3cold
    
    [ Upstream commit 0e00392a895c95c6d12d42158236c8862a2f43f2 ]
    
    PME signaling is only enabled by __pci_enable_wake() if the target
    device can signal PME from the given target power state (to avoid
    pointless reconfiguration of the device), but if the hierarchy above
    the device goes into D3cold, the device itself will end up in D3cold
    too, so if it can signal PME from D3cold, it should be enabled to
    do so in __pci_enable_wake().
    
    [Note that if the device does not end up in D3cold and it cannot
     signal PME from the original target power state, it will not signal
     PME, so in that case the behavior does not change.]
    
    Link: https://lore.kernel.org/linux-pm/3149540.aeNJFYEL58@kreacher/
    Fixes: 5bcc2fb4e815 ("PCI PM: Simplify PCI wake-up code")
    Reported-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reported-by: Utkarsh H Patel <utkarsh.h.patel@intel.com>
    Reported-by: Koba Ko <koba.ko@canonical.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Tested-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35fc3aa0841ceb6d5efc95b7d33a105a733588dd
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sun May 30 22:13:45 2021 +0300

    i2c: highlander: add IRQ check
    
    [ Upstream commit f16a3bb69aa6baabf8f0aca982c8cf21e2a4f6bc ]
    
    The driver is written as if platform_get_irq() returns 0 on errors (while
    actually it returns a negative error code), blithely passing these error
    codes to request_irq() (which takes *unsigned* IRQ #) -- which fails with
    -EINVAL. Add the necessary error check to the pre-existing *if* statement
    forcing the driver into the polling mode...
    
    Fixes: 4ad48e6ab18c ("i2c: Renesas Highlander FPGA SMBus support")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 671c60bf8bd1d36e11e7ac69fa32ab2a12f706f2
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Tue Jul 27 19:35:30 2021 +0300

    net: cipso: fix warnings in netlbl_cipsov4_add_std
    
    [ Upstream commit 8ca34a13f7f9b3fa2c464160ffe8cc1a72088204 ]
    
    Syzbot reported warning in netlbl_cipsov4_add(). The
    problem was in too big doi_def->map.std->lvl.local_size
    passed to kcalloc(). Since this value comes from userpace there is
    no need to warn if value is not correct.
    
    The same problem may occur with other kcalloc() calls in
    this function, so, I've added __GFP_NOWARN flag to all
    kcalloc() calls there.
    
    Reported-and-tested-by: syzbot+cdd51ee2e6b0b2e18c0d@syzkaller.appspotmail.com
    Fixes: 96cb8e3313c7 ("[NetLabel]: CIPSOv4 and Unlabeled packet integration")
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ece86a9e92141a0ceefb51371ad86a13d7621e03
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Thu Jul 1 13:05:41 2021 -0700

    tcp: seq_file: Avoid skipping sk during tcp_seek_last_pos
    
    [ Upstream commit 525e2f9fd0229eb10cb460a9e6d978257f24804e ]
    
    st->bucket stores the current bucket number.
    st->offset stores the offset within this bucket that is the sk to be
    seq_show().  Thus, st->offset only makes sense within the same
    st->bucket.
    
    These two variables are an optimization for the common no-lseek case.
    When resuming the seq_file iteration (i.e. seq_start()),
    tcp_seek_last_pos() tries to continue from the st->offset
    at bucket st->bucket.
    
    However, it is possible that the bucket pointed by st->bucket
    has changed and st->offset may end up skipping the whole st->bucket
    without finding a sk.  In this case, tcp_seek_last_pos() currently
    continues to satisfy the offset condition in the next (and incorrect)
    bucket.  Instead, regardless of the offset value, the first sk of the
    next bucket should be returned.  Thus, "bucket == st->bucket" check is
    added to tcp_seek_last_pos().
    
    The chance of hitting this is small and the issue is a decade old,
    so targeting for the next tree.
    
    Fixes: a8b690f98baf ("tcp: Fix slowness in read /proc/net/tcp")
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Kuniyuki Iwashima <kuniyu@amazon.co.jp>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20210701200541.1033917-1-kafai@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 071a6abebb0a76d8dc1cbc759c80a9ee05c7c9af
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jun 25 18:00:09 2021 +0300

    Bluetooth: sco: prevent information leak in sco_conn_defer_accept()
    
    [ Upstream commit 59da0b38bc2ea570ede23a3332ecb3e7574ce6b2 ]
    
    Smatch complains that some of these struct members are not initialized
    leading to a stack information disclosure:
    
        net/bluetooth/sco.c:778 sco_conn_defer_accept() warn:
        check that 'cp.retrans_effort' doesn't leak information
    
    This seems like a valid warning.  I've added a default case to fix
    this issue.
    
    Fixes: 2f69a82acf6f ("Bluetooth: Use voice setting in deferred SCO connection request")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b29ea4614367e411ee3e13412fa43bf406399b28
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Jun 20 21:45:42 2021 +0200

    media: go7007: remove redundant initialization
    
    [ Upstream commit 6f5885a7750545973bf1a942d2f0f129aef0aa06 ]
    
    In go7007_alloc() kzalloc() is used for struct go7007
    allocation. It means that there is no need in zeroing
    any members, because kzalloc will take care of it.
    
    Removing these reduntant initialization steps increases
    execution speed a lot:
    
            Before:
                    + 86.802 us   |    go7007_alloc();
            After:
                    + 29.595 us   |    go7007_alloc();
    
    Fixes: 866b8695d67e8 ("Staging: add the go7007 video driver")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8357dba5b797a199dad23593c9eb44ec02018c70
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Fri Jun 25 07:59:04 2021 +0200

    media: dvb-usb: fix uninit-value in vp702x_read_mac_addr
    
    [ Upstream commit 797c061ad715a9a1480eb73f44b6939fbe3209ed ]
    
    If vp702x_usb_in_op fails, the mac address is not initialized.
    And vp702x_read_mac_addr does not handle this failure, which leads to
    the uninit-value in dvb_usb_adapter_dvb_init.
    
    Fix this by handling the failure of vp702x_usb_in_op.
    
    Fixes: 786baecfe78f ("[media] dvb-usb: move it to drivers/media/usb/dvb-usb")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4821fca9cd7088aff36310cfd7c7d4c8028edce7
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Fri Jun 25 07:33:27 2021 +0200

    media: dvb-usb: fix uninit-value in dvb_usb_adapter_dvb_init
    
    [ Upstream commit c5453769f77ce19a5b03f1f49946fd3f8a374009 ]
    
    If dibusb_read_eeprom_byte fails, the mac address is not initialized.
    And nova_t_read_mac_address does not handle this failure, which leads to
    the uninit-value in dvb_usb_adapter_dvb_init.
    
    Fix this by handling the failure of dibusb_read_eeprom_byte.
    
    Reported-by: syzbot+e27b4fd589762b0b9329@syzkaller.appspotmail.com
    Fixes: 786baecfe78f ("[media] dvb-usb: move it to drivers/media/usb/dvb-usb")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdd38b08ad5f09e22c9b1ed9de59ed52f0962bdd
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Jun 29 17:34:20 2021 -0400

    certs: Trigger creation of RSA module signing key if it's not an RSA key
    
    [ Upstream commit ea35e0d5df6c92fa2e124bb1b91d09b2240715ba ]
    
    Address a kbuild issue where a developer created an ECDSA key for signing
    kernel modules and then builds an older version of the kernel, when bi-
    secting the kernel for example, that does not support ECDSA keys.
    
    If openssl is installed, trigger the creation of an RSA module signing
    key if it is not an RSA key.
    
    Fixes: cfc411e7fff3 ("Move certificate handling to its own directory")
    Cc: David Howells <dhowells@redhat.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Tested-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd3fcd67637c4f73b70f25512e7b89bc772a73ae
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Mon Jul 5 23:47:27 2021 +0300

    m68k: emu: Fix invalid free in nfeth_cleanup()
    
    [ Upstream commit 761608f5cf70e8876c2f0e39ca54b516bdcb7c12 ]
    
    In the for loop all nfeth_dev array members should be freed, not only
    the first one.  Freeing only the first array member can cause
    double-free bugs and memory leaks.
    
    Fixes: 9cd7b148312f ("m68k/atari: ARAnyM - Add support for network access")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: https://lore.kernel.org/r/20210705204727.10743-1-paskripkin@gmail.com
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 983d381214ec8f9327597430c31dc0e00d8c1cd7
Author: Stian Skjelstad <stian.skjelstad@gmail.com>
Date:   Sun Aug 22 11:33:32 2021 +0200

    udf_get_extendedattr() had no boundary checks.
    
    [ Upstream commit 58bc6d1be2f3b0ceecb6027dfa17513ec6aa2abb ]
    
    When parsing the ExtendedAttr data, malicous or corrupt attribute length
    could cause kernel hangs and buffer overruns in some special cases.
    
    Link: https://lore.kernel.org/r/20210822093332.25234-1-stian.skjelstad@gmail.com
    Signed-off-by: Stian Skjelstad <stian.skjelstad@gmail.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd097bedd6d534a024d40f93cdd6c7f495d1b705
Author: Marco Chiappero <marco.chiappero@intel.com>
Date:   Thu Aug 12 21:21:19 2021 +0100

    crypto: qat - fix reuse of completion variable
    
    [ Upstream commit 3d655732b0199562267a05c7ff69ecdd11632939 ]
    
    Use reinit_completion() to set to a clean state a completion variable,
    used to coordinate the VF to PF request-response flow, before every
    new VF request.
    
    Signed-off-by: Marco Chiappero <marco.chiappero@intel.com>
    Co-developed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Reviewed-by: Fiona Trahe <fiona.trahe@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b98b490c79bf25c9a091624a82385a55ac753375
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Thu Aug 12 21:21:13 2021 +0100

    crypto: qat - do not ignore errors from enable_vf2pf_comms()
    
    [ Upstream commit 5147f0906d50a9d26f2b8698cd06b5680e9867ff ]
    
    The function adf_dev_init() ignores the error code reported by
    enable_vf2pf_comms(). If the latter fails, e.g. the VF is not compatible
    with the pf, then the load of the VF driver progresses.
    This patch changes adf_dev_init() so that the error code from
    enable_vf2pf_comms() is returned to the caller.
    
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Reviewed-by: Marco Chiappero <marco.chiappero@intel.com>
    Reviewed-by: Fiona Trahe <fiona.trahe@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 829194fa98949d325bd0f834b521179f31054a74
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Mon Aug 16 10:44:47 2021 +0900

    libata: fix ata_host_start()
    
    [ Upstream commit 355a8031dc174450ccad2a61c513ad7222d87a97 ]
    
    The loop on entry of ata_host_start() may not initialize host->ops to a
    non NULL value. The test on the host_stop field of host->ops must then
    be preceded by a check that host->ops is not NULL.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Link: https://lore.kernel.org/r/20210816014456.2191776-3-damien.lemoal@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54d140237626cc21cd4bfb5cbc1400b42104524b
Author: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date:   Mon Aug 16 18:50:14 2021 +0200

    power: supply: max17042_battery: fix typo in MAx17042_TOFF
    
    [ Upstream commit ed0d0a0506025f06061325cedae1bbebd081620a ]
    
    Signed-off-by: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3d7d8b9e3a1d70c73813850a8817387f5ca13c5
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Jul 27 13:23:34 2021 +0300

    crypto: omap-sham - clear dma flags only after omap_sham_update_dma_stop()
    
    [ Upstream commit fe28140b3393b0ba1eb95cc109f974a7e58b26fd ]
    
    We should not clear FLAGS_DMA_ACTIVE before omap_sham_update_dma_stop() is
    done calling dma_unmap_sg(). We already clear FLAGS_DMA_ACTIVE at the
    end of omap_sham_update_dma_stop().
    
    The early clearing of FLAGS_DMA_ACTIVE is not causing issues as we do not
    need to defer anything based on FLAGS_DMA_ACTIVE currently. So this can be
    applied as clean-up.
    
    Cc: Lokesh Vutla <lokeshvutla@ti.com>
    Cc: Tero Kristo <kristo@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f4aea7159a4f0b604a4b971af3731a3906ffb47
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jul 1 14:56:37 2021 -0400

    crypto: mxs-dcp - Check for DMA mapping errors
    
    [ Upstream commit df6313d707e575a679ada3313358289af24454c0 ]
    
    After calling dma_map_single(), we must also call dma_mapping_error().
    This fixes the following warning when compiling with CONFIG_DMA_API_DEBUG:
    
    [  311.241478] WARNING: CPU: 0 PID: 428 at kernel/dma/debug.c:1027 check_unmap+0x79c/0x96c
    [  311.249547] DMA-API: mxs-dcp 2280000.crypto: device driver failed to check map error[device address=0x00000000860cb080] [size=32 bytes] [mapped as single]
    
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3ef760118b58c913c4438c8c1ec5701d3cfacc7
Author: Marek BehÃºn <kabel@kernel.org>
Date:   Thu Jun 24 19:14:17 2021 +0200

    PCI: Call Max Payload Size-related fixup quirks early
    
    commit b8da302e2955fe4d41eb9d48199242674d77dbe0 upstream.
    
    pci_device_add() calls HEADER fixups after pci_configure_device(), which
    configures Max Payload Size.
    
    Convert MPS-related fixups to EARLY fixups so pci_configure_mps() takes
    them into account.
    
    Fixes: 27d868b5e6cfa ("PCI: Set MPS to match upstream bridge")
    Link: https://lore.kernel.org/r/20210624171418.27194-1-kabel@kernel.org
    Signed-off-by: Marek BehÃºn <kabel@kernel.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0c3b0b810777726c0ce88c94f845be0b4ff6683
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Sun May 30 12:24:47 2021 -0400

    x86/reboot: Limit Dell Optiplex 990 quirk to early BIOS versions
    
    commit a729691b541f6e63043beae72e635635abe5dc09 upstream.
    
    When this platform was relatively new in November 2011, with early BIOS
    revisions, a reboot quirk was added in commit 6be30bb7d750 ("x86/reboot:
    Blacklist Dell OptiPlex 990 known to require PCI reboot")
    
    However, this quirk (and several others) are open-ended to all BIOS
    versions and left no automatic expiry if/when the system BIOS fixed the
    issue, meaning that nobody is likely to come along and re-test.
    
    What is really problematic with using PCI reboot as this quirk does, is
    that it causes this platform to do a full power down, wait one second,
    and then power back on.  This is less than ideal if one is using it for
    boot testing and/or bisecting kernels when legacy rotating hard disks
    are installed.
    
    It was only by chance that the quirk was noticed in dmesg - and when
    disabled it turned out that it wasn't required anymore (BIOS A24), and a
    default reboot would work fine without the "harshness" of power cycling the
    machine (and disks) down and up like the PCI reboot does.
    
    Doing a bit more research, it seems that the "newest" BIOS for which the
    issue was reported[1] was version A06, however Dell[2] seemed to suggest
    only up to and including version A05, with the A06 having a large number of
    fixes[3] listed.
    
    As is typical with a new platform, the initial BIOS updates come frequently
    and then taper off (and in this case, with a revival for CPU CVEs); a
    search for O990-A<ver>.exe reveals the following dates:
    
            A02     16 Mar 2011
            A03     11 May 2011
            A06     14 Sep 2011
            A07     24 Oct 2011
            A10     08 Dec 2011
            A14     06 Sep 2012
            A16     15 Oct 2012
            A18     30 Sep 2013
            A19     23 Sep 2015
            A20     02 Jun 2017
            A23     07 Mar 2018
            A24     21 Aug 2018
    
    While it's overkill to flash and test each of the above, it would seem
    likely that the issue was contained within A0x BIOS versions, given the
    dates above and the dates of issue reports[4] from distros.  So rather than
    just throw out the quirk entirely, limit the scope to just those early BIOS
    versions, in case people are still running systems from 2011 with the
    original as-shipped early A0x BIOS versions.
    
    [1] https://lore.kernel.org/lkml/1320373471-3942-1-git-send-email-trenn@suse.de/
    [2] https://www.dell.com/support/kbdoc/en-ca/000131908/linux-based-operating-systems-stall-upon-reboot-on-optiplex-390-790-990-systems
    [3] https://www.dell.com/support/home/en-ca/drivers/driversdetails?driverid=85j10
    [4] https://bugs.launchpad.net/ubuntu/+source/linux/+bug/768039
    
    Fixes: 6be30bb7d750 ("x86/reboot: Blacklist Dell OptiPlex 990 known to require PCI reboot")
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210530162447.996461-4-paul.gortmaker@windriver.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5ae5b0af568f9015ec3a064a21ce5868664eaa7
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Aug 25 13:41:42 2021 +0800

    Revert "btrfs: compression: don't try to compress if we don't have enough pages"
    
    commit 4e9655763b82a91e4c341835bb504a2b1590f984 upstream.
    
    This reverts commit f2165627319ffd33a6217275e5690b1ab5c45763.
    
    [BUG]
    It's no longer possible to create compressed inline extent after commit
    f2165627319f ("btrfs: compression: don't try to compress if we don't
    have enough pages").
    
    [CAUSE]
    For compression code, there are several possible reasons we have a range
    that needs to be compressed while it's no more than one page.
    
    - Compressed inline write
      The data is always smaller than one sector and the test lacks the
      condition to properly recognize a non-inline extent.
    
    - Compressed subpage write
      For the incoming subpage compressed write support, we require page
      alignment of the delalloc range.
      And for 64K page size, we can compress just one page into smaller
      sectors.
    
    For those reasons, the requirement for the data to be more than one page
    is not correct, and is already causing regression for compressed inline
    data writeback.  The idea of skipping one page to avoid wasting CPU time
    could be revisited in the future.
    
    [FIX]
    Fix it by reverting the offending commit.
    
    Reported-by: Zygo Blaxell <ce3g8jdj@umail.furryterror.org>
    Link: https://lore.kernel.org/linux-btrfs/afa2742.c084f5d6.17b6b08dffc@tnonline.net
    Fixes: f2165627319f ("btrfs: compression: don't try to compress if we don't have enough pages")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c65f6834e88a16a4253d23d79ef3655976b8b17
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Mon Dec 14 19:11:25 2020 -0800

    mm/page_alloc: speed up the iteration of max_order
    
    commit 7ad69832f37e3cea8557db6df7c793905f1135e8 upstream.
    
    When we free a page whose order is very close to MAX_ORDER and greater
    than pageblock_order, it wastes some CPU cycles to increase max_order to
    MAX_ORDER one by one and check the pageblock migratetype of that page
    repeatedly especially when MAX_ORDER is much larger than pageblock_order.
    
    We also should not be checking migratetype of buddy when "order ==
    MAX_ORDER - 1" as the buddy pfn may be invalid, so adjust the condition.
    With the new check, we don't need the max_order check anymore, so we
    replace it.
    
    Also adjust max_order initialization so that it's lower by one than
    previously, which makes the code hopefully more clear.
    
    Link: https://lkml.kernel.org/r/20201204155109.55451-1-songmuchun@bytedance.com
    Fixes: d9dddbf55667 ("mm/page_alloc: prevent merging between isolated and other pageblocks")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f4ed7292330c23dfc35b4932d6d411aebb2499f
Author: Esben Haabendal <esben@geanix.com>
Date:   Mon Jun 21 10:20:08 2021 +0200

    net: ll_temac: Remove left-over debug message
    
    commit ce03b94ba682a67e8233c9ee3066071656ded58f upstream.
    
    Fixes: f63963411942 ("net: ll_temac: Avoid ndo_start_xmit returning NETDEV_TX_BUSY")
    Signed-off-by: Esben Haabendal <esben@geanix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db85797d18210c8e35dc8b6bfead74ebb418a153
Author: Fangrui Song <maskray@google.com>
Date:   Wed Mar 25 09:42:57 2020 -0700

    powerpc/boot: Delete unneeded .globl _zimage_start
    
    commit 968339fad422a58312f67718691b717dac45c399 upstream.
    
    .globl sets the symbol binding to STB_GLOBAL while .weak sets the
    binding to STB_WEAK. GNU as let .weak override .globl since
    binutils-gdb 5ca547dc2399a0a5d9f20626d4bf5547c3ccfddd (1996). Clang
    integrated assembler let the last win but it may error in the future.
    
    Since it is a convention that only one binding directive is used, just
    delete .globl.
    
    Fixes: ee9d21b3b358 ("powerpc/boot: Ensure _zimage_start is a weak symbol")
    Signed-off-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200325164257.170229-1-maskray@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 273175015c5e7fb4e94892ebb0d90a63f7bc1218
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Sat Jul 6 00:18:53 2019 +1000

    powerpc/module64: Fix comment in R_PPC64_ENTRY handling
    
    commit 2fb0a2c989837c976b68233496bbaefb47cd3d6f upstream.
    
    The comment here is wrong, the addi reads from r2 not r12. The code is
    correct, 0x38420000 = addi r2,r2,0.
    
    Fixes: a61674bdfc7c ("powerpc/module: Handle R_PPC64_ENTRY relocations")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddeaa67217447abd443ac5fcc9681d6f27a8bef4
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Thu Dec 14 15:32:31 2017 -0800

    mm/kmemleak.c: make cond_resched() rate-limiting more efficient
    
    commit 13ab183d138f607d885e995d625e58d47678bf97 upstream.
    
    Commit bde5f6bc68db ("kmemleak: add scheduling point to
    kmemleak_scan()") tries to rate-limit the frequency of cond_resched()
    calls, but does it in a way which might incur an expensive division
    operation in the inner loop.  Simplify this.
    
    Fixes: bde5f6bc68db5 ("kmemleak: add scheduling point to kmemleak_scan()")
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Yisheng Xie <xieyisheng1@huawei.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 576086c09950f113b42bfb17047dcf0200566753
Author: Vasily Gorbik <gor@linux.vnet.ibm.com>
Date:   Thu Nov 23 10:50:23 2017 +0100

    s390/disassembler: correct disassembly lines alignment
    
    commit 26f4e759ef9b8a2bab1823d692ed6d56d40b66e3 upstream.
    
    176.718956 Krnl Code: 00000000004d38b0: a54c0018        llihh   %r4,24
    176.718956         00000000004d38b4: b9080014        agr     %r1,%r4
               ^
    Using a tab to align disassembly lines which follow the first line with
    "Krnl Code: " doesn't always work, e.g. if there is a prefix (timestamp
    or syslog prefix) which is not 8 chars aligned. Go back to alignment
    with spaces.
    
    Fixes: b192571d1ae3 ("s390/disassembler: increase show_code buffer size")
    Signed-off-by: Vasily Gorbik <gor@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cbf165ba26edc6eaf2ba2180b88bae1f2685023
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Mon Oct 12 10:50:14 2020 -0400

    ipv4/icmp: l3mdev: Perform icmp error route lookup on source device routing table (v2)
    
    commit e1e84eb58eb494b77c8389fc6308b5042dcce791 upstream.
    
    As per RFC792, ICMP errors should be sent to the source host.
    
    However, in configurations with Virtual Routing and Forwarding tables,
    looking up which routing table to use is currently done by using the
    destination net_device.
    
    commit 9d1a6c4ea43e ("net: icmp_route_lookup should use rt dev to
    determine L3 domain") changes the interface passed to
    l3mdev_master_ifindex() and inet_addr_type_dev_table() from skb_in->dev
    to skb_dst(skb_in)->dev. This effectively uses the destination device
    rather than the source device for choosing which routing table should be
    used to lookup where to send the ICMP error.
    
    Therefore, if the source and destination interfaces are within separate
    VRFs, or one in the global routing table and the other in a VRF, looking
    up the source host in the destination interface's routing table will
    fail if the destination interface's routing table contains no route to
    the source host.
    
    One observable effect of this issue is that traceroute does not work in
    the following cases:
    
    - Route leaking between global routing table and VRF
    - Route leaking between VRFs
    
    Preferably use the source device routing table when sending ICMP error
    messages. If no source device is set, fall-back on the destination
    device routing table. Else, use the main routing table (index 0).
    
    [ It has been pointed out that a similar issue may exist with ICMP
      errors triggered when forwarding between network namespaces. It would
      be worthwhile to investigate, but is outside of the scope of this
      investigation. ]
    
    [ It has also been pointed out that a similar issue exists with
      unreachable / fragmentation needed messages, which can be triggered by
      changing the MTU of eth1 in r1 to 1400 and running:
    
      ip netns exec h1 ping -s 1450 -Mdo -c1 172.16.2.2
    
      Some investigation points to raw_icmp_error() and raw_err() as being
      involved in this last scenario. The focus of this patch is TTL expired
      ICMP messages, which go through icmp_route_lookup.
      Investigation of failure modes related to raw_icmp_error() is beyond
      this investigation's scope. ]
    
    Fixes: 9d1a6c4ea43e ("net: icmp_route_lookup should use rt dev to determine L3 domain")
    Link: https://tools.ietf.org/html/rfc792
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3f9c74652c749486bf9e989caabcae6f68272ee
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Thu May 4 12:20:17 2017 -0300

    tc358743: fix register i2c_rd/wr function fix
    
    commit 4b0755e90ae03ba40174842af6fa810355960fbc upstream.
    
    The below mentioned fix contains a small but severe bug,
    fix it to make the driver work again.
    
    Fixes: 3538aa6ecfb2 ("[media] tc358743: fix register i2c_rd/wr functions")
    
    Cc: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Hans Verkuil <hansverk@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 112e54555fa1bdcaf712829691f4fd82b442aa2f
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Fri Feb 10 14:25:00 2017 -0800

    PM / wakeirq: Enable dedicated wakeirq for suspend
    
    commit c84345597558349474f55be2b7d4093256e42884 upstream.
    
    We currently rely on runtime PM to enable dedicated wakeirq for suspend.
    This assumption fails in the following two cases:
    
    1. If the consumer driver does not have runtime PM implemented, the
       dedicated wakeirq never gets enabled for suspend
    
    2. If the consumer driver has runtime PM implemented, but does not idle
       in suspend
    
    Let's fix the issue by always enabling the dedicated wakeirq during
    suspend.
    
    Depends-on: bed570307ed7 (PM / wakeirq: Fix dedicated wakeirq for drivers not using autosuspend)
    Fixes: 4990d4fe327b (PM / Wakeirq: Add automated device wake IRQ handling)
    Reported-by: Keerthy <j-keerthy@ti.com>
    Tested-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    [ tony@atomide.com: updated based on bed570307ed7, added description ]
    Tested-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd2d88a32197d74fa95835d3136643651f6b19cd
Author: Tom Rix <trix@redhat.com>
Date:   Mon Jan 11 14:09:04 2021 -0800

    USB: serial: mos7720: improve OOM-handling in read_mos_reg()
    
    commit 161a582bd1d8681095f158d11bc679a58f1d026b upstream.
    
    clang static analysis reports this problem
    
    mos7720.c:352:2: warning: Undefined or garbage value returned to caller
            return d;
            ^~~~~~~~
    
    In the parport_mos7715_read_data()'s call to read_mos_reg(), 'd' is
    only set after the alloc block.
    
            buf = kmalloc(1, GFP_KERNEL);
            if (!buf)
                    return -ENOMEM;
    
    Although the problem is reported in parport_most7715_read_data(),
    none of the callee's of read_mos_reg() check the return status.
    
    Make sure to clear the return-value buffer also on allocation failures.
    
    Fixes: 0d130367abf5 ("USB: serial: mos7720: fix control-message error handling")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Link: https://lore.kernel.org/r/20210111220904.1035957-1-trix@redhat.com
    [ johan: only clear the buffer on errors, amend commit message ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39247301d594f7c6270313dbe857359bb8260c86
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Tue Mar 28 15:07:38 2017 -0400

    usb: phy: isp1301: Fix build warning when CONFIG_OF is disabled
    
    commit a7f12a21f6b32bdd8d76d3af81eef9e72ce41ec0 upstream.
    
    Commit fd567653bdb9 ("usb: phy: isp1301: Add OF device ID table")
    added an OF device ID table, but used the of_match_ptr() macro
    that will lead to a build warning if CONFIG_OF symbol is disabled:
    
    drivers/usb/phy//phy-isp1301.c:36:34: warning: â€˜isp1301_of_matchâ€™ defined but not used [-Wunused-const-variable=]
     static const struct of_device_id isp1301_of_match[] = {
                                      ^~~~~~~~~~~~~~~~
    
    Fixes: fd567653bdb9 ("usb: phy: isp1301: Add OF device ID table")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b24065948ae6c48c9e20891f8cfe9850f1d748be
Author: Liu Jian <liujian56@huawei.com>
Date:   Fri Jul 16 12:06:17 2021 +0800

    igmp: Add ip_mc_list lock in ip_check_mc_rcu
    
    commit 23d2b94043ca8835bd1e67749020e839f396a1c2 upstream.
    
    I got below panic when doing fuzz test:
    
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 0 PID: 4056 Comm: syz-executor.3 Tainted: G    B             5.14.0-rc1-00195-gcff5c4254439-dirty #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    Call Trace:
    dump_stack_lvl+0x7a/0x9b
    panic+0x2cd/0x5af
    end_report.cold+0x5a/0x5a
    kasan_report+0xec/0x110
    ip_check_mc_rcu+0x556/0x5d0
    __mkroute_output+0x895/0x1740
    ip_route_output_key_hash_rcu+0x2d0/0x1050
    ip_route_output_key_hash+0x182/0x2e0
    ip_route_output_flow+0x28/0x130
    udp_sendmsg+0x165d/0x2280
    udpv6_sendmsg+0x121e/0x24f0
    inet6_sendmsg+0xf7/0x140
    sock_sendmsg+0xe9/0x180
    ____sys_sendmsg+0x2b8/0x7a0
    ___sys_sendmsg+0xf0/0x160
    __sys_sendmmsg+0x17e/0x3c0
    __x64_sys_sendmmsg+0x9e/0x100
    do_syscall_64+0x3b/0x90
    entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x462eb9
    Code: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8
     48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48>
     3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007f3df5af1c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000133
    RAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462eb9
    RDX: 0000000000000312 RSI: 0000000020001700 RDI: 0000000000000007
    RBP: 0000000000000004 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00007f3df5af26bc
    R13: 00000000004c372d R14: 0000000000700b10 R15: 00000000ffffffff
    
    It is one use-after-free in ip_check_mc_rcu.
    In ip_mc_del_src, the ip_sf_list of pmc has been freed under pmc->lock protection.
    But access to ip_sf_list in ip_check_mc_rcu is not protected by the lock.
    
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a419e24819b54441f535859ffac4033a344b2044
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Wed Jul 7 19:54:30 2021 +0200

    media: stkwebcam: fix memory leak in stk_camera_probe
    
    commit 514e97674400462cc09c459a1ddfb9bf39017223 upstream.
    
    My local syzbot instance hit memory leak in usb_set_configuration().
    The problem was in unputted usb interface. In case of errors after
    usb_get_intf() the reference should be putted to correclty free memory
    allocated for this interface.
    
    Fixes: ec16dae5453e ("V4L/DVB (7019): V4L: add support for Syntek DC1125 webcams")
    Cc: stable@vger.kernel.org
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fd07178fbf012db0b38488ea2e0069412250dd2
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Mon Dec 14 19:21:18 2020 +0200

    ath9k: Postpone key cache entry deletion for TXQ frames reference it
    
    commit ca2848022c12789685d3fab3227df02b863f9696 upstream.
    
    Do not delete a key cache entry that is still being referenced by
    pending frames in TXQs. This avoids reuse of the key cache entry while a
    frame might still be transmitted using it.
    
    To avoid having to do any additional operations during the main TX path
    operations, track pending key cache entries in a new bitmap and check
    whether any pending entries can be deleted before every new key
    add/remove operation. Also clear any remaining entries when stopping the
    interface.
    
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201214172118.18100-6-jouni@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c8e25862a00a539803fa60eb7a907143688b178
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Mon Dec 14 19:21:17 2020 +0200

    ath: Modify ath_key_delete() to not need full key entry
    
    commit 144cd24dbc36650a51f7fe3bf1424a1432f1f480 upstream.
    
    tkip_keymap can be used internally to avoid the reference to key->cipher
    and with this, only the key index value itself is needed. This allows
    ath_key_delete() call to be postponed to be handled after the upper
    layer STA and key entry have already been removed. This is needed to
    make ath9k key cache management safer.
    
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201214172118.18100-5-jouni@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85d371eb7259c2e6aecd0b77c3f8c193c9593624
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Mon Dec 14 19:21:16 2020 +0200

    ath: Export ath_hw_keysetmac()
    
    commit d2d3e36498dd8e0c83ea99861fac5cf9e8671226 upstream.
    
    ath9k is going to use this for safer management of key cache entries.
    
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201214172118.18100-4-jouni@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d97f20dc21f3f4b14105590f729e513b0c4921d
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Mon Dec 14 19:21:15 2020 +0200

    ath9k: Clear key cache explicitly on disabling hardware
    
    commit 73488cb2fa3bb1ef9f6cf0d757f76958bd4deaca upstream.
    
    Now that ath/key.c may not be explicitly clearing keys from the key
    cache, clear all key cache entries when disabling hardware to make sure
    no keys are left behind beyond this point.
    
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201214172118.18100-3-jouni@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d6b4335838fd89419212e1e486c415ec36fb610
Author: Jouni Malinen <jouni@codeaurora.org>
Date:   Mon Dec 14 19:21:14 2020 +0200

    ath: Use safer key clearing with key cache entries
    
    commit 56c5485c9e444c2e85e11694b6c44f1338fc20fd upstream.
    
    It is possible for there to be pending frames in TXQs with a reference
    to the key cache entry that is being deleted. If such a key cache entry
    is cleared, those pending frame in TXQ might get transmitted without
    proper encryption. It is safer to leave the previously used key into the
    key cache in such cases. Instead, only clear the MAC address to prevent
    RX processing from using this key cache entry.
    
    This is needed in particularly in AP mode where the TXQs cannot be
    flushed on station disconnection. This change alone may not be able to
    address all cases where the key cache entry might get reused for other
    purposes immediately (the key cache entry should be released for reuse
    only once the TXQs do not have any remaining references to them), but
    this makes it less likely to get unprotected frames and the more
    complete changes may end up being significantly more complex.
    
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201214172118.18100-2-jouni@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a40b6c739f64a9cba1023c21a9e077b6c160000
Author: Zubin Mithra <zsm@chromium.org>
Date:   Fri Aug 27 08:37:35 2021 -0700

    ALSA: pcm: fix divide error in snd_pcm_lib_ioctl
    
    commit f3eef46f0518a2b32ca1244015820c35a22cfe4a upstream.
    
    Syzkaller reported a divide error in snd_pcm_lib_ioctl. fifo_size
    is of type snd_pcm_uframes_t(unsigned long). If frame_size
    is 0x100000000, the error occurs.
    
    Fixes: a9960e6a293e ("ALSA: pcm: fix fifo_size frame calculation")
    Signed-off-by: Zubin Mithra <zsm@chromium.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210827153735.789452-1-zsm@chromium.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fde80eeb27f9a899a600fded8647db528ce403c
Author: Ben Dooks <ben-linux@fluff.org>
Date:   Mon Nov 4 18:15:15 2019 +0100

    ARM: 8918/2: only build return_address() if needed
    
    commit fb033c95c94ca1ee3d16e04ebdb85d65fb55fff8 upstream.
    
    The system currently warns if the config conditions for
    building return_address in arch/arm/kernel/return_address.c
    are not met, leaving just an EXPORT_SYMBOL_GPL(return_address)
    of a function defined to be 'static linline'.
    This is a result of aeea3592a13b ("ARM: 8158/1: LLVMLinux: use static inline in ARM ftrace.h").
    
    Since we're not going to build anything other than an exported
    symbol for something that is already being defined to be an
    inline-able return of NULL, just avoid building the code to
    remove the following warning:
    
    Fixes: aeea3592a13b ("ARM: 8158/1: LLVMLinux: use static inline in ARM ftrace.h")
    Signed-off-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1fb21274ae77e6997b57087dac8d222c2bfd0a2
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Aug 27 18:32:50 2021 +0200

    cryptoloop: add a deprecation warning
    
    [ Upstream commit 222013f9ac30b9cec44301daa8dbd0aae38abffb ]
    
    Support for cryptoloop has been officially marked broken and deprecated
    in favor of dm-crypt (which supports the same broken algorithms if
    needed) in Linux 2.6.4 (released in March 2004), and support for it has
    been entirely removed from losetup in util-linux 2.23 (released in April
    2013).  Add a warning and a deprecation schedule.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20210827163250.255325-1-hch@lst.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3556f1578d41dfadfd14ad1b41b06d4ba04b9c2
Author: Shai Malin <smalin@marvell.com>
Date:   Tue Aug 24 19:52:49 2021 +0300

    qede: Fix memset corruption
    
    [ Upstream commit e543468869e2532f5d7926e8f417782b48eca3dc ]
    
    Thanks to Kees Cook who detected the problem of memset that starting
    from not the first member, but sized for the whole struct.
    The better change will be to remove the redundant memset and to clear
    only the msix_cnt member.
    
    Signed-off-by: Prabhakar Kushwaha <pkushwaha@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: Shai Malin <smalin@marvell.com>
    Reported-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60d92feb9d1938e6cbc2fd6918c144797879adc7
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Sep 29 14:46:50 2017 -0700

    ARC: fix allnoconfig build warning
    
    commit 5464d03d92601ac2977ef605b0cbb33276567daf upstream.
    
    Reported-by: Dmitrii Kolesnichenko <dmitrii@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbb42d013cbf767b4fccc63c64786b59df48cf46
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed May 26 00:03:37 2021 -0700

    xtensa: fix kconfig unmet dependency warning for HAVE_FUTEX_CMPXCHG
    
    commit ed5aacc81cd41efc4d561e14af408d1003f7b855 upstream.
    
    XTENSA should only select HAVE_FUTEX_CMPXCHG when FUTEX is
    set/enabled. This prevents a kconfig warning.
    
    WARNING: unmet direct dependencies detected for HAVE_FUTEX_CMPXCHG
      Depends on [n]: FUTEX [=n]
      Selected by [y]:
      - XTENSA [=y] && !MMU [=n]
    
    Fixes: d951ba21b959 ("xtensa: nommu: select HAVE_FUTEX_CMPXCHG")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Cc: Chris Zankel <chris@zankel.net>
    Cc: linux-xtensa@linux-xtensa.org
    Message-Id: <20210526070337.28130-1-rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69d82df68fbc5e368820123200d7b88f6c058350
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Aug 20 23:44:17 2021 -0400

    ext4: fix race writing to an inline_data file while its xattrs are changing
    
    commit a54c4613dac1500b40e4ab55199f7c51f028e848 upstream.
    
    The location of the system.data extended attribute can change whenever
    xattr_sem is not taken.  So we need to recalculate the i_inline_off
    field since it mgiht have changed between ext4_write_begin() and
    ext4_write_end().
    
    This means that caching i_inline_off is probably not helpful, so in
    the long run we should probably get rid of it and shrink the in-memory
    ext4 inode slightly, but let's fix the race the simple way for now.
    
    Cc: stable@kernel.org
    Fixes: f19d5870cbf72 ("ext4: add normal write support for inline data")
    Reported-by: syzbot+13146364637c7363a7de@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
