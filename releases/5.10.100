commit d4f7d322a4ad1d1a280f1b1f36df8d0eb855966c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 11 09:09:03 2022 +0100

    Linux 5.10.100
    
    Link: https://lore.kernel.org/r/20220209191248.892853405@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c7e5943553594f68bbc070683db6bb6f6e9e78e
Author: Jon Maloy <jmaloy@redhat.com>
Date:   Sat Feb 5 14:11:18 2022 -0500

    tipc: improve size validations for received domain records
    
    commit 9aa422ad326634b76309e8ff342c246800621216 upstream.
    
    The function tipc_mon_rcv() allows a node to receive and process
    domain_record structs from peer nodes to track their views of the
    network topology.
    
    This patch verifies that the number of members in a received domain
    record does not exceed the limit defined by MAX_MON_DOMAIN, something
    that may otherwise lead to a stack overflow.
    
    tipc_mon_rcv() is called from the function tipc_link_proto_rcv(), where
    we are reading a 32 bit message data length field into a uint16.  To
    avert any risk of bit overflow, we add an extra sanity check for this in
    that function.  We cannot see that happen with the current code, but
    future designers being unaware of this risk, may introduce it by
    allowing delivery of very large (> 64k) sk buffers from the bearer
    layer.  This potential problem was identified by Eric Dumazet.
    
    This fixes CVE-2022-0435
    
    Reported-by: Samuel Page <samuel.page@appgate.com>
    Reported-by: Eric Dumazet <edumazet@google.com>
    Fixes: 35c55c9877f8 ("tipc: add neighbor monitoring framework")
    Signed-off-by: Jon Maloy <jmaloy@redhat.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Samuel Page <samuel.page@appgate.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2951d21689762a2bb6b2a81e9d5ea49a1c396be4
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed Feb 2 17:46:48 2022 +1100

    crypto: api - Move cryptomgr soft dependency into algapi
    
    commit c6ce9c5831cae515d375a01b97ae1778689acf19 upstream.
    
    The soft dependency on cryptomgr is only needed in algapi because
    if algapi isn't present then no algorithms can be loaded.  This
    also fixes the case where api is built-in but algapi is built as
    a module as the soft dependency would otherwise get lost.
    
    Fixes: 8ab23d547f65 ("crypto: api - Add softdep on cryptomgr")
    Reported-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b62267b8b06e9b8bb429ae8f962ee431e6535d60
Author: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
Date:   Fri Jan 28 15:06:43 2022 +0100

    KVM: s390: Return error on SIDA memop on normal guest
    
    commit 2c212e1baedcd782b2535a3f86bc491977677c0e upstream.
    
    Refuse SIDA memops on guests which are not protected.
    For normal guests, the secure instruction data address designation,
    which determines the location we access, is not under control of KVM.
    
    Fixes: 19e122776886 (KVM: S390: protvirt: Introduce instruction data area bounce buffer)
    Signed-off-by: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be93028d306dac9f5b59ebebd9ec7abcfc69c156
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 27 08:16:38 2022 +0100

    moxart: fix potential use-after-free on remove path
    
    commit bd2db32e7c3e35bd4d9b8bbff689434a50893546 upstream.
    
    It was reported that the mmc host structure could be accessed after it
    was freed in moxart_remove(), so fix this by saving the base register of
    the device and using it instead of the pointer dereference.
    
    Cc: Ulf Hansson <ulf.hansson@linaro.org>
    Cc: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Cc: Xin Xiong <xiongx18@fudan.edu.cn>
    Cc: Xin Tan <tanxin.ctf@gmail.com>
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Yang Li <yang.lee@linux.alibaba.com>
    Cc: linux-mmc@vger.kernel.org
    Cc: stable <stable@vger.kernel.org>
    Reported-by: whitehat002 <hackyzh002@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20220127071638.4057899-1-gregkh@linuxfoundation.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
