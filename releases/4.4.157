commit d9560919689d588beccf719452086b5cdf6d6c22
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 19 22:49:00 2018 +0200

    Linux 4.4.157

commit 88d6918401a4ecdc50fe77df3e1e77c1e49d8579
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 12 23:57:48 2018 -1000

    mm: get rid of vmacache_flush_all() entirely
    
    commit 7a9cdebdcc17e426fb5287e4a82db1dfe86339b2 upstream.
    
    Jann Horn points out that the vmacache_flush_all() function is not only
    potentially expensive, it's buggy too.  It also happens to be entirely
    unnecessary, because the sequence number overflow case can be avoided by
    simply making the sequence number be 64-bit.  That doesn't even grow the
    data structures in question, because the other adjacent fields are
    already 64-bit.
    
    So simplify the whole thing by just making the sequence number overflow
    case go away entirely, which gets rid of all the complications and makes
    the code faster too.  Win-win.
    
    [ Oleg Nesterov points out that the VMACACHE_FULL_FLUSHES statistics
      also just goes away entirely with this ]
    
    Reported-by: Jann Horn <jannh@google.com>
    Suggested-by: Will Deacon <will.deacon@arm.com>
    Acked-by: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e29c75d4fb491a7b1890293302f7ab40be7ce586
Author: Andi Kleen <ak@linux.intel.com>
Date:   Mon Sep 3 10:19:13 2018 -0700

    x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+
    
    [upstream cc51e5428ea54f575d49cfcede1d4cb3a72b4ec4 for 4.4.
    Note there might be still a trivial conflict with the backport
    for b0a182f875689647b014bc01d36b340217792852, but should
    be easy to resolve]
    
    On Nehalem and newer core CPUs the CPU cache internally uses 44 bits
    physical address space. The L1TF workaround is limited by this internal
    cache address width, and needs to have one bit free there for the
    mitigation to work.
    
    Older client systems report only 36bit physical address space so the range
    check decides that L1TF is not mitigated for a 36bit phys/32GB system with
    some memory holes.
    
    But since these actually have the larger internal cache width this warning
    is bogus because it would only really be needed if the system had more than
    43bits of memory.
    
    Add a new internal x86_cache_bits field. Normally it is the same as the
    physical bits field reported by CPUID, but for Nehalem and newerforce it to
    be at least 44bits.
    
    Change the L1TF memory size warning to use the new cache_bits field to
    avoid bogus warnings and remove the bogus comment about memory size.
    
    Fixes: 17dbca119312 ("x86/speculation/l1tf: Add sysfs reporting for l1tf")
    Reported-by: George Anchev <studio@anchev.net>
    Reported-by: Christopher Snowhill <kode54@gmail.com>
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: Michael Hocko <mhocko@suse.com>
    Cc: vbabka@suse.cz
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180824170351.34874-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bdac2526df0ea4fad8a78958fe462f1ab4a17dd
Author: Ian Kent <raven@themaw.net>
Date:   Tue Aug 21 21:51:45 2018 -0700

    autofs: fix autofs_sbi() does not check super block type
    
    commit 0633da48f0793aeba27f82d30605624416723a91 upstream.
    
    autofs_sbi() does not check the superblock magic number to verify it has
    been given an autofs super block.
    
    Backport Note: autofs4 has been renamed to autofs upstream. As a result
    the upstream patch does not apply cleanly onto 4.14.y.
    
    Link: http://lkml.kernel.org/r/153475422934.17131.7563724552005298277.stgit@pluto.themaw.net
    Reported-by: <syzbot+87c3c541582e56943277@syzkaller.appspotmail.com>
    Signed-off-by: Ian Kent <raven@themaw.net>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Zubin Mithra <zsm@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da7d5af64afd3f18b727c8d7787265c555e2fded
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 18 14:05:05 2018 +0000

    mtd: ubi: wl: Fix error return code in ubi_wl_init()
    
    commit 7233982ade15eeac05c6f351e8d347406e6bcd2f upstream.
    
    Fix to return error code -ENOMEM from the kmem_cache_alloc() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: f78e5623f45b ("ubi: fastmap: Erase outdated anchor PEBs during
    attach")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b13e97e451975fdd7ff9452afa53092feb37af
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Wed Aug 22 08:26:31 2018 +0200

    crypto: vmx - Fix sleep-in-atomic bugs
    
    commit 0522236d4f9c5ab2e79889cb020d1acbe5da416e upstream.
    
    This patch fixes sleep-in-atomic bugs in AES-CBC and AES-XTS VMX
    implementations. The problem is that the blkcipher_* functions should
    not be called in atomic context.
    
    The bugs can be reproduced via the AF_ALG interface by trying to
    encrypt/decrypt sufficiently large buffers (at least 64 KiB) using the
    VMX implementations of 'cbc(aes)' or 'xts(aes)'. Such operations then
    trigger BUG in crypto_yield():
    
    [  891.863680] BUG: sleeping function called from invalid context at include/crypto/algapi.h:424
    [  891.864622] in_atomic(): 1, irqs_disabled(): 0, pid: 12347, name: kcapi-enc
    [  891.864739] 1 lock held by kcapi-enc/12347:
    [  891.864811]  #0: 00000000f5d42c46 (sk_lock-AF_ALG){+.+.}, at: skcipher_recvmsg+0x50/0x530
    [  891.865076] CPU: 5 PID: 12347 Comm: kcapi-enc Not tainted 4.19.0-0.rc0.git3.1.fc30.ppc64le #1
    [  891.865251] Call Trace:
    [  891.865340] [c0000003387578c0] [c000000000d67ea4] dump_stack+0xe8/0x164 (unreliable)
    [  891.865511] [c000000338757910] [c000000000172a58] ___might_sleep+0x2f8/0x310
    [  891.865679] [c000000338757990] [c0000000006bff74] blkcipher_walk_done+0x374/0x4a0
    [  891.865825] [c0000003387579e0] [d000000007e73e70] p8_aes_cbc_encrypt+0x1c8/0x260 [vmx_crypto]
    [  891.865993] [c000000338757ad0] [c0000000006c0ee0] skcipher_encrypt_blkcipher+0x60/0x80
    [  891.866128] [c000000338757b10] [c0000000006ec504] skcipher_recvmsg+0x424/0x530
    [  891.866283] [c000000338757bd0] [c000000000b00654] sock_recvmsg+0x74/0xa0
    [  891.866403] [c000000338757c10] [c000000000b00f64] ___sys_recvmsg+0xf4/0x2f0
    [  891.866515] [c000000338757d90] [c000000000b02bb8] __sys_recvmsg+0x68/0xe0
    [  891.866631] [c000000338757e30] [c00000000000bbe4] system_call+0x5c/0x70
    
    Fixes: 8c755ace357c ("crypto: vmx - Adding CBC routines for VMX module")
    Fixes: c07f5d3da643 ("crypto: vmx - Adding support for XTS")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21de2732aaab31df375184ebd3d4c53a0247526d
Author: Peter Chen <peter.chen@nxp.com>
Date:   Mon Aug 1 15:02:43 2016 +0800

    ethernet: ti: davinci_emac: add missing of_node_put after calling of_parse_phandle
    
    commit 5817f977527e5cdbea9ca56d2b95824f59c8747d upstream.
    
    of_node_put needs to be called when the device node which is got
    from of_parse_phandle has finished using.
    
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3179842575a1d650b8b5f018252fce947f0e99f
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Nov 17 17:39:59 2016 +0100

    net: ethernet: ti: cpsw: fix mdio device reference leak
    
    commit 86e1d5adcef961eb383ce4eacbe0ef22f06e2045 upstream.
    
    Make sure to drop the reference taken by of_find_device_by_node() when
    looking up an mdio device from a phy_id property during probe.
    
    Fixes: 549985ee9c72 ("cpsw: simplify the setup of the register
    pointers")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d02c870872ffb9f0ee605319da46cc52797f837e
Author: David Rivshin <drivshin@allworx.com>
Date:   Wed Apr 27 21:25:25 2016 -0400

    drivers: net: cpsw: fix parsing of phy-handle DT property in dual_emac config
    
    commit 552165bcf7060b998b4a9b5b86110b6a5e04dfd9 upstream.
    
    Commit 9e42f715264ff158478fa30eaed847f6e131366b ("drivers: net: cpsw: add
    phy-handle parsing") saved the "phy-handle" phandle into a new cpsw_priv
    field. However, phy connections are per-slave, so the phy_node field should
    be in cpsw_slave_data rather than cpsw_priv.
    
    This would go unnoticed in a single emac configuration. But in dual_emac
    mode, the last "phy-handle" property parsed for either slave would be used
    by both of them, causing them both to refer to the same phy_device.
    
    Fixes: 9e42f715264f ("drivers: net: cpsw: add phy-handle parsing")
    Signed-off-by: David Rivshin <drivshin@allworx.com>
    Tested-by: Nicolas Chauvet <kwizart@gmail.com>
    Tested-by: Andrew Goodbody <andrew.goodbody@cambrionix.com>
    Reviewed-by: Mugunthan V N <mugunthanvnm@ti.com>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9845426f4427eb0031b562dfd5c0ffe99cba644
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 5 02:50:07 2017 -0700

    netfilter: x_tables: avoid stack-out-of-bounds read in xt_copy_counters_from_user
    
    commit e466af75c074e76107ae1cd5a2823e9c61894ffb upstream.
    
    syzkaller reports an out of bound read in strlcpy(), triggered
    by xt_copy_counters_from_user()
    
    Fix this by using memcpy(), then forcing a zero byte at the last position
    of the destination, as Florian did for the non COMPAT code.
    
    Fixes: d7591f0c41ce ("netfilter: x_tables: introduce and use xt_copy_counters_from_user")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Cc: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3b92ee6fc171d7c9d9b6b829b7fef169210440c
Author: Nadav Amit <namit@vmware.com>
Date:   Thu Sep 13 13:18:52 2018 -0700

    vmw_balloon: include asm/io.h
    
    Fix a build error due to missing virt_to_phys()
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Fixes: f0a1bf29d821b ("vmw_balloon: fix inflation with batching")
    Cc: stable@vger.kernel.org
    Cc: Xavier Deguillard <xdeguillard@vmware.com>
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c72a42d38b1f516b3533400a2d7ac90388b35e6c
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu May 3 17:30:07 2018 +0300

    xhci: Fix use-after-free in xhci_free_virt_device
    
    commit 44a182b9d17765514fa2b1cc911e4e65134eef93 upstream.
    
    KASAN found a use-after-free in xhci_free_virt_device+0x33b/0x38e
    where xhci_free_virt_device() sets slot id to 0 if udev exists:
    if (dev->udev && dev->udev->slot_id)
            dev->udev->slot_id = 0;
    
    dev->udev will be true even if udev is freed because dev->udev is
    not set to NULL.
    
    set dev->udev pointer to NULL in xhci_free_dev()
    
    The original patch went to stable so this fix needs to be applied
    there as well.
    
    Fixes: a400efe455f7 ("xhci: zero usb device slot_id member when disabling and freeing a xhci slot")
    Cc: <stable@vger.kernel.org>
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff75cdadf1e4eb196eab01ad31588033a0b647fc
Author: Parav Pandit <parav@mellanox.com>
Date:   Mon Jul 16 11:50:13 2018 +0300

    RDMA/cma: Do not ignore net namespace for unbound cm_id
    
    [ Upstream commit 643d213a9a034fa04f5575a40dfc8548e33ce04f ]
    
    Currently if the cm_id is not bound to any netdevice, than for such cm_id,
    net namespace is ignored; which is incorrect.
    
    Regardless of cm_id bound to a netdevice or not, net namespace must
    match. When a cm_id is bound to a netdevice, in such case net namespace
    and netdevice both must match.
    
    Fixes: 4c21b5bcef73 ("IB/cma: Add net_dev and private data checks to RDMA CM")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d04f1b44f64416a4b2a9ba35b6d0610325163349
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Nov 25 18:46:09 2016 +0000

    MIPS: WARN_ON invalid DMA cache maintenance, not BUG_ON
    
    [ Upstream commit d4da0e97baea8768b3d66ccef3967bebd50dfc3b ]
    
    If a driver causes DMA cache maintenance with a zero length then we
    currently BUG and kill the kernel. As this is a scenario that we may
    well be able to recover from, WARN & return in the condition instead.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Patchwork: https://patchwork.linux-mips.org/patch/14623/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e498af87075ae63b39bb90cdc67e35b9fe592acb
Author: Chao Yu <chao@kernel.org>
Date:   Sat Jun 23 11:25:19 2018 +0800

    f2fs: fix to do sanity check with {sit,nat}_ver_bitmap_bytesize
    
    [ Upstream commit c77ec61ca0a49544ca81881cc5d5529858f7e196 ]
    
    This patch adds to do sanity check with {sit,nat}_ver_bitmap_bytesize
    during mount, in order to avoid accessing across cache boundary with
    this abnormal bitmap size.
    
    - Overview
    buffer overrun in build_sit_info() when mounting a crafted f2fs image
    
    - Reproduce
    
    - Kernel message
    [  548.580867] F2FS-fs (loop0): Invalid log blocks per segment (8201)
    
    [  548.580877] F2FS-fs (loop0): Can't find valid F2FS filesystem in 1th superblock
    [  548.584979] ==================================================================
    [  548.586568] BUG: KASAN: use-after-free in kmemdup+0x36/0x50
    [  548.587715] Read of size 64 at addr ffff8801e9c265ff by task mount/1295
    
    [  548.589428] CPU: 1 PID: 1295 Comm: mount Not tainted 4.18.0-rc1+ #4
    [  548.589432] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  548.589438] Call Trace:
    [  548.589474]  dump_stack+0x7b/0xb5
    [  548.589487]  print_address_description+0x70/0x290
    [  548.589492]  kasan_report+0x291/0x390
    [  548.589496]  ? kmemdup+0x36/0x50
    [  548.589509]  check_memory_region+0x139/0x190
    [  548.589514]  memcpy+0x23/0x50
    [  548.589518]  kmemdup+0x36/0x50
    [  548.589545]  f2fs_build_segment_manager+0x8fa/0x3410
    [  548.589551]  ? __asan_loadN+0xf/0x20
    [  548.589560]  ? f2fs_sanity_check_ckpt+0x1be/0x240
    [  548.589566]  ? f2fs_flush_sit_entries+0x10c0/0x10c0
    [  548.589587]  ? __put_user_ns+0x40/0x40
    [  548.589604]  ? find_next_bit+0x57/0x90
    [  548.589610]  f2fs_fill_super+0x194b/0x2b40
    [  548.589617]  ? f2fs_commit_super+0x1b0/0x1b0
    [  548.589637]  ? set_blocksize+0x90/0x140
    [  548.589651]  mount_bdev+0x1c5/0x210
    [  548.589655]  ? f2fs_commit_super+0x1b0/0x1b0
    [  548.589667]  f2fs_mount+0x15/0x20
    [  548.589672]  mount_fs+0x60/0x1a0
    [  548.589683]  ? alloc_vfsmnt+0x309/0x360
    [  548.589688]  vfs_kern_mount+0x6b/0x1a0
    [  548.589699]  do_mount+0x34a/0x18c0
    [  548.589710]  ? lockref_put_or_lock+0xcf/0x160
    [  548.589716]  ? copy_mount_string+0x20/0x20
    [  548.589728]  ? memcg_kmem_put_cache+0x1b/0xa0
    [  548.589734]  ? kasan_check_write+0x14/0x20
    [  548.589740]  ? _copy_from_user+0x6a/0x90
    [  548.589744]  ? memdup_user+0x42/0x60
    [  548.589750]  ksys_mount+0x83/0xd0
    [  548.589755]  __x64_sys_mount+0x67/0x80
    [  548.589781]  do_syscall_64+0x78/0x170
    [  548.589797]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  548.589820] RIP: 0033:0x7f76fc331b9a
    [  548.589821] Code: 48 8b 0d 01 c3 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d ce c2 2b 00 f7 d8 64 89 01 48
    [  548.589880] RSP: 002b:00007ffd4f0a0e48 EFLAGS: 00000206 ORIG_RAX: 00000000000000a5
    [  548.589890] RAX: ffffffffffffffda RBX: 000000000146c030 RCX: 00007f76fc331b9a
    [  548.589892] RDX: 000000000146c210 RSI: 000000000146df30 RDI: 0000000001474ec0
    [  548.589895] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000013
    [  548.589897] R10: 00000000c0ed0000 R11: 0000000000000206 R12: 0000000001474ec0
    [  548.589900] R13: 000000000146c210 R14: 0000000000000000 R15: 0000000000000003
    
    [  548.590242] The buggy address belongs to the page:
    [  548.591243] page:ffffea0007a70980 count:0 mapcount:0 mapping:0000000000000000 index:0x0
    [  548.592886] flags: 0x2ffff0000000000()
    [  548.593665] raw: 02ffff0000000000 dead000000000100 dead000000000200 0000000000000000
    [  548.595258] raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
    [  548.603713] page dumped because: kasan: bad access detected
    
    [  548.605203] Memory state around the buggy address:
    [  548.606198]  ffff8801e9c26480: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    [  548.607676]  ffff8801e9c26500: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    [  548.609157] >ffff8801e9c26580: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    [  548.610629]                                                                 ^
    [  548.612088]  ffff8801e9c26600: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    [  548.613674]  ffff8801e9c26680: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    [  548.615141] ==================================================================
    [  548.616613] Disabling lock debugging due to kernel taint
    [  548.622871] WARNING: CPU: 1 PID: 1295 at mm/page_alloc.c:4065 __alloc_pages_slowpath+0xe4a/0x1420
    [  548.622878] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep snd_hda_core snd_pcm snd_timer snd mac_hid i2c_piix4 soundcore ib_iser rdma_cm iw_cm ib_cm ib_core iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx raid1 raid0 multipath linear 8139too crct10dif_pclmul crc32_pclmul qxl drm_kms_helper syscopyarea aesni_intel sysfillrect sysimgblt fb_sys_fops ttm drm aes_x86_64 crypto_simd cryptd 8139cp glue_helper mii pata_acpi floppy
    [  548.623217] CPU: 1 PID: 1295 Comm: mount Tainted: G    B             4.18.0-rc1+ #4
    [  548.623219] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  548.623226] RIP: 0010:__alloc_pages_slowpath+0xe4a/0x1420
    [  548.623227] Code: ff ff 01 89 85 c8 fe ff ff e9 91 fc ff ff 41 89 c5 e9 5c fc ff ff 0f 0b 89 f8 25 ff ff f7 ff 89 85 8c fe ff ff e9 d5 f2 ff ff <0f> 0b e9 65 f2 ff ff 65 8b 05 38 81 d2 47 f6 c4 01 74 1c 65 48 8b
    [  548.623281] RSP: 0018:ffff8801f28c7678 EFLAGS: 00010246
    [  548.623284] RAX: 0000000000000000 RBX: 00000000006040c0 RCX: ffffffffb82f73b7
    [  548.623287] RDX: 1ffff1003e518eeb RSI: 000000000000000c RDI: 0000000000000000
    [  548.623290] RBP: ffff8801f28c7880 R08: 0000000000000000 R09: ffffed0047fff2c5
    [  548.623292] R10: 0000000000000001 R11: ffffed0047fff2c4 R12: ffff8801e88de040
    [  548.623295] R13: 00000000006040c0 R14: 000000000000000c R15: ffff8801f28c7938
    [  548.623299] FS:  00007f76fca51840(0000) GS:ffff8801f6f00000(0000) knlGS:0000000000000000
    [  548.623302] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  548.623304] CR2: 00007f19b9171760 CR3: 00000001ed952000 CR4: 00000000000006e0
    [  548.623317] Call Trace:
    [  548.623325]  ? kasan_check_read+0x11/0x20
    [  548.623330]  ? __zone_watermark_ok+0x92/0x240
    [  548.623336]  ? get_page_from_freelist+0x1c3/0x1d90
    [  548.623347]  ? _raw_spin_lock_irqsave+0x2a/0x60
    [  548.623353]  ? warn_alloc+0x250/0x250
    [  548.623358]  ? save_stack+0x46/0xd0
    [  548.623361]  ? kasan_kmalloc+0xad/0xe0
    [  548.623366]  ? __isolate_free_page+0x2a0/0x2a0
    [  548.623370]  ? mount_fs+0x60/0x1a0
    [  548.623374]  ? vfs_kern_mount+0x6b/0x1a0
    [  548.623378]  ? do_mount+0x34a/0x18c0
    [  548.623383]  ? ksys_mount+0x83/0xd0
    [  548.623387]  ? __x64_sys_mount+0x67/0x80
    [  548.623391]  ? do_syscall_64+0x78/0x170
    [  548.623396]  ? entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  548.623401]  __alloc_pages_nodemask+0x3c5/0x400
    [  548.623407]  ? __alloc_pages_slowpath+0x1420/0x1420
    [  548.623412]  ? __mutex_lock_slowpath+0x20/0x20
    [  548.623417]  ? kvmalloc_node+0x31/0x80
    [  548.623424]  alloc_pages_current+0x75/0x110
    [  548.623436]  kmalloc_order+0x24/0x60
    [  548.623442]  kmalloc_order_trace+0x24/0xb0
    [  548.623448]  __kmalloc_track_caller+0x207/0x220
    [  548.623455]  ? f2fs_build_node_manager+0x399/0xbb0
    [  548.623460]  kmemdup+0x20/0x50
    [  548.623465]  f2fs_build_node_manager+0x399/0xbb0
    [  548.623470]  f2fs_fill_super+0x195e/0x2b40
    [  548.623477]  ? f2fs_commit_super+0x1b0/0x1b0
    [  548.623481]  ? set_blocksize+0x90/0x140
    [  548.623486]  mount_bdev+0x1c5/0x210
    [  548.623489]  ? f2fs_commit_super+0x1b0/0x1b0
    [  548.623495]  f2fs_mount+0x15/0x20
    [  548.623498]  mount_fs+0x60/0x1a0
    [  548.623503]  ? alloc_vfsmnt+0x309/0x360
    [  548.623508]  vfs_kern_mount+0x6b/0x1a0
    [  548.623513]  do_mount+0x34a/0x18c0
    [  548.623518]  ? lockref_put_or_lock+0xcf/0x160
    [  548.623523]  ? copy_mount_string+0x20/0x20
    [  548.623528]  ? memcg_kmem_put_cache+0x1b/0xa0
    [  548.623533]  ? kasan_check_write+0x14/0x20
    [  548.623537]  ? _copy_from_user+0x6a/0x90
    [  548.623542]  ? memdup_user+0x42/0x60
    [  548.623547]  ksys_mount+0x83/0xd0
    [  548.623552]  __x64_sys_mount+0x67/0x80
    [  548.623557]  do_syscall_64+0x78/0x170
    [  548.623562]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  548.623566] RIP: 0033:0x7f76fc331b9a
    [  548.623567] Code: 48 8b 0d 01 c3 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 49 89 ca b8 a5 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d ce c2 2b 00 f7 d8 64 89 01 48
    [  548.623632] RSP: 002b:00007ffd4f0a0e48 EFLAGS: 00000206 ORIG_RAX: 00000000000000a5
    [  548.623636] RAX: ffffffffffffffda RBX: 000000000146c030 RCX: 00007f76fc331b9a
    [  548.623639] RDX: 000000000146c210 RSI: 000000000146df30 RDI: 0000000001474ec0
    [  548.623641] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000013
    [  548.623643] R10: 00000000c0ed0000 R11: 0000000000000206 R12: 0000000001474ec0
    [  548.623646] R13: 000000000146c210 R14: 0000000000000000 R15: 0000000000000003
    [  548.623650] ---[ end trace 4ce02f25ff7d3df5 ]---
    [  548.623656] F2FS-fs (loop0): Failed to initialize F2FS node manager
    [  548.627936] F2FS-fs (loop0): Invalid log blocks per segment (8201)
    
    [  548.627940] F2FS-fs (loop0): Can't find valid F2FS filesystem in 1th superblock
    [  548.635835] F2FS-fs (loop0): Failed to initialize F2FS node manager
    
    - Location
    https://elixir.bootlin.com/linux/v4.18-rc1/source/fs/f2fs/segment.c#L3578
    
            sit_i->sit_bitmap = kmemdup(src_bitmap, bitmap_size, GFP_KERNEL);
    
    Buffer overrun happens when doing memcpy. I suspect there is missing (inconsistent) checks on bitmap_size.
    
    Reported by Wen Xu (wen.xu@gatech.edu) from SSLab, Gatech.
    
    Reported-by: Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab140bd2316d587161350768ff3c6fb434e33a24
Author: Zumeng Chen <zumeng.chen@gmail.com>
Date:   Wed Jul 4 12:35:29 2018 +0800

    mfd: ti_am335x_tscadc: Fix struct clk memory leak
    
    [ Upstream commit c2b1509c77a99a0dcea0a9051ca743cb88385f50 ]
    
    Use devm_elk_get() to let Linux manage struct clk memory to avoid the following
    memory leakage report:
    
    unreferenced object 0xdd75efc0 (size 64):
      comm "systemd-udevd", pid 186, jiffies 4294945126 (age 1195.750s)
      hex dump (first 32 bytes):
        61 64 63 5f 74 73 63 5f 66 63 6b 00 00 00 00 00  adc_tsc_fck.....
        00 00 00 00 92 03 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<c0a15260>] kmemleak_alloc+0x40/0x74
        [<c0287a10>] __kmalloc_track_caller+0x198/0x388
        [<c0255610>] kstrdup+0x40/0x5c
        [<c025565c>] kstrdup_const+0x30/0x3c
        [<c0636630>] __clk_create_clk+0x60/0xac
        [<c0630918>] clk_get_sys+0x74/0x144
        [<c0630cdc>] clk_get+0x5c/0x68
        [<bf0ac540>] ti_tscadc_probe+0x260/0x468 [ti_am335x_tscadc]
        [<c06f3c0c>] platform_drv_probe+0x60/0xac
        [<c06f1abc>] driver_probe_device+0x214/0x2dc
        [<c06f1c18>] __driver_attach+0x94/0xc0
        [<c06efe2c>] bus_for_each_dev+0x90/0xa0
        [<c06f1470>] driver_attach+0x28/0x30
        [<c06f1030>] bus_add_driver+0x184/0x1ec
        [<c06f2b74>] driver_register+0xb0/0xf0
        [<c06f3b4c>] __platform_driver_register+0x40/0x54
    
    Signed-off-by: Zumeng Chen <zumeng.chen@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22fa0358a99afb20946e6e03cc0cd04ffd8cb304
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Jul 20 18:16:59 2018 +0200

    iommu/ipmmu-vmsa: Fix allocation in atomic context
    
    [ Upstream commit 46583e8c48c5a094ba28060615b3a7c8c576690f ]
    
    When attaching a device to an IOMMU group with
    CONFIG_DEBUG_ATOMIC_SLEEP=y:
    
        BUG: sleeping function called from invalid context at mm/slab.h:421
        in_atomic(): 1, irqs_disabled(): 128, pid: 61, name: kworker/1:1
        ...
        Call trace:
         ...
         arm_lpae_alloc_pgtable+0x114/0x184
         arm_64_lpae_alloc_pgtable_s1+0x2c/0x128
         arm_32_lpae_alloc_pgtable_s1+0x40/0x6c
         alloc_io_pgtable_ops+0x60/0x88
         ipmmu_attach_device+0x140/0x334
    
    ipmmu_attach_device() takes a spinlock, while arm_lpae_alloc_pgtable()
    allocates memory using GFP_KERNEL.  Originally, the ipmmu-vmsa driver
    had its own custom page table allocation implementation using
    GFP_ATOMIC, hence the spinlock was fine.
    
    Fix this by replacing the spinlock by a mutex, like the arm-smmu driver
    does.
    
    Fixes: f20ed39f53145e45 ("iommu/ipmmu-vmsa: Use the ARM LPAE page table allocator")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a169d7c844a9ed24d110ae4333ed1edf451bf22f
Author: Mauricio Faria de Oliveira <mfo@canonical.com>
Date:   Wed Jul 25 22:46:28 2018 -0300

    partitions/aix: fix usage of uninitialized lv_info and lvname structures
    
    [ Upstream commit 14cb2c8a6c5dae57ee3e2da10fa3db2b9087e39e ]
    
    The if-block that sets a successful return value in aix_partition()
    uses 'lvip[].pps_per_lv' and 'n[].name' potentially uninitialized.
    
    For example, if 'numlvs' is zero or alloc_lvn() fails, neither is
    initialized, but are used anyway if alloc_pvd() succeeds after it.
    
    So, make the alloc_pvd() call conditional on their initialization.
    
    This has been hit when attaching an apparently corrupted/stressed
    AIX LUN, misleading the kernel to pr_warn() invalid data and hang.
    
        [...] partition (null) (11 pp's found) is not contiguous
        [...] partition (null) (2 pp's found) is not contiguous
        [...] partition (null) (3 pp's found) is not contiguous
        [...] partition (null) (64 pp's found) is not contiguous
    
    Fixes: 6ceea22bbbc8 ("partitions: add aix lvm partition support files")
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77d3c98f661ed3bb9d675b9af9763c01d82ebc9c
Author: Mauricio Faria de Oliveira <mfo@canonical.com>
Date:   Wed Jul 25 22:46:29 2018 -0300

    partitions/aix: append null character to print data from disk
    
    [ Upstream commit d43fdae7bac2def8c4314b5a49822cb7f08a45f1 ]
    
    Even if properly initialized, the lvname array (i.e., strings)
    is read from disk, and might contain corrupt data (e.g., lack
    the null terminating character for strings).
    
    So, make sure the partition name string used in pr_warn() has
    the null terminating character.
    
    Fixes: 6ceea22bbbc8 ("partitions: add aix lvm partition support files")
    Suggested-by: Daniel J. Axtens <daniel.axtens@canonical.com>
    Signed-off-by: Mauricio Faria de Oliveira <mfo@canonical.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af39fa735a44f950e65ea04513cb5e2d70f35e67
Author: Nick Dyer <nick.dyer@itdev.co.uk>
Date:   Fri Jul 27 11:44:20 2018 -0700

    Input: atmel_mxt_ts - only use first T9 instance
    
    [ Upstream commit 36f5d9ef26e52edff046b4b097855db89bf0cd4a ]
    
    The driver only registers one input device, which uses the screen
    parameters from the first T9 instance. The first T63 instance also uses
    those parameters.
    
    It is incorrect to send input reports from the second instances of these
    objects if they are enabled: the input scaling will be wrong and the
    positions will be mashed together.
    
    This also causes problems on Android if the number of slots exceeds 32.
    
    In the future, this could be handled by looking for enabled touch object
    instances and creating an input device for each one.
    
    Signed-off-by: Nick Dyer <nick.dyer@itdev.co.uk>
    Acked-by: Benson Leung <bleung@chromium.org>
    Acked-by: Yufeng Shen <miletus@chromium.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bde99d93a6aed76ec2039bd9d800346083289d10
Author: Petr Machata <petrm@mellanox.com>
Date:   Fri Jul 27 15:26:55 2018 +0300

    net: dcb: For wild-card lookups, use priority -1, not 0
    
    [ Upstream commit 08193d1a893c802c4b807e4d522865061f4e9f4f ]
    
    The function dcb_app_lookup walks the list of specified DCB APP entries,
    looking for one that matches a given criteria: ifindex, selector,
    protocol ID and optionally also priority. The "don't care" value for
    priority is set to 0, because that priority has not been allowed under
    CEE regime, which predates the IEEE standardization.
    
    Under IEEE, 0 is a valid priority number. But because dcb_app_lookup
    considers zero a wild card, attempts to add an APP entry with priority 0
    fail when other entries exist for a given ifindex / selector / PID
    triplet.
    
    Fix by changing the wild-card value to -1.
    
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ffa0928ce29480c6a9b55cf9e343333107e32cd
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Sat Jun 16 09:06:33 2018 +0200

    MIPS: Octeon: add missing of_node_put()
    
    [ Upstream commit b1259519e618d479ede8a0db5474b3aff99f5056 ]
    
    The call to of_find_node_by_name returns a node pointer with refcount
    incremented thus it must be explicitly decremented here after the last
    usage.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/19558/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d7d5919a51a7f8d0c8c51f7250cd5c4d9f3598e
Author: Yelena Krivosheev <yelena@marvell.com>
Date:   Wed Jul 18 18:10:51 2018 +0200

    net: mvneta: fix mtu change on port without link
    
    [ Upstream commit 8466baf788ec3e18836bd9c91ba0b1a07af25878 ]
    
    It is incorrect to enable TX/RX queues (call by mvneta_port_up()) for
    port without link. Indeed MTU change for interface without link causes TX
    queues to stuck.
    
    Fixes: c5aff18204da ("net: mvneta: driver for Marvell Armada 370/XP
    network unit")
    Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
    [gregory.clement: adding Fixes tags and rewording commit log]
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 931ed0a5d3d7bc51947aaa379b8eff2d629cae49
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Mon Jul 23 19:53:30 2018 +0300

    gpio: ml-ioh: Fix buffer underwrite on probe error path
    
    [ Upstream commit 4bf4eed44bfe288f459496eaf38089502ef91a79 ]
    
    If ioh_gpio_probe() fails on devm_irq_alloc_descs() then chip may point
    to any element of chip_save array, so reverse iteration from pointer chip
    may become chip_save[-1] and gpiochip_remove() will operate with wrong
    memory.
    
    The patch fix the error path of ioh_gpio_probe() to correctly bypass
    chip_save array.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf8f39692c14db469b90299a33968eb2822bd732
Author: Joerg Roedel <jroedel@suse.de>
Date:   Wed Jul 25 17:48:01 2018 +0200

    x86/mm: Remove in_nmi() warning from vmalloc_fault()
    
    [ Upstream commit 6863ea0cda8725072522cd78bda332d9a0b73150 ]
    
    It is perfectly okay to take page-faults, especially on the
    vmalloc area while executing an NMI handler. Remove the
    warning.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: David H. Gutteridge <dhgutteridge@sympatico.ca>
    Cc: "H . Peter Anvin" <hpa@zytor.com>
    Cc: linux-mm@kvack.org
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Waiman Long <llong@redhat.com>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: joro@8bytes.org
    Link: https://lkml.kernel.org/r/1532533683-5988-2-git-send-email-joro@8bytes.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 362990d8aaea6dedb1d2a28a7caf868cc3c4ec02
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Mon Jul 30 13:57:41 2018 +0200

    Bluetooth: hidp: Fix handling of strncpy for hid->name information
    
    [ Upstream commit b3cadaa485f0c20add1644a5c877b0765b285c0c ]
    
    This fixes two issues with setting hid->name information.
    
      CC      net/bluetooth/hidp/core.o
    In function ‘hidp_setup_hid’,
        inlined from ‘hidp_session_dev_init’ at net/bluetooth/hidp/core.c:815:9,
        inlined from ‘hidp_session_new’ at net/bluetooth/hidp/core.c:953:8,
        inlined from ‘hidp_connection_add’ at net/bluetooth/hidp/core.c:1366:8:
    net/bluetooth/hidp/core.c:778:2: warning: ‘strncpy’ output may be truncated copying 127 bytes from a string of length 127 [-Wstringop-truncation]
      strncpy(hid->name, req->name, sizeof(req->name) - 1);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
      CC      net/bluetooth/hidp/core.o
    net/bluetooth/hidp/core.c: In function ‘hidp_setup_hid’:
    net/bluetooth/hidp/core.c:778:38: warning: argument to ‘sizeof’ in ‘strncpy’ call is the same expression as the source; did you mean to use the size of the destination? [-Wsizeof-pointer-memaccess]
      strncpy(hid->name, req->name, sizeof(req->name));
                                          ^
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a820e7709f7d6f338b21a41e163366b344ab02ab
Author: Surabhi Vishnoi <svishnoi@codeaurora.org>
Date:   Wed Jul 25 10:59:41 2018 +0300

    ath10k: disable bundle mgmt tx completion event support
    
    [ Upstream commit 673bc519c55843c68c3aecff71a4101e79d28d2b ]
    
    The tx completion of multiple mgmt frames can be bundled
    in a single event and sent by the firmware to host, if this
    capability is not disabled explicitly by the host. If the host
    cannot handle the bundled mgmt tx completion, this capability
    support needs to be disabled in the wmi init cmd, sent to the firmware.
    
    Add the host capability indication flag in the wmi ready command,
    to let firmware know the features supported by the host driver.
    This field is ignored if it is not supported by firmware.
    
    Set the host capability indication flag(i.e. host_capab) to zero,
    for disabling the support of bundle mgmt tx completion. This will
    indicate the firmware to send completion event for every mgmt tx
    completion, instead of bundling them together and sending in a single
    event.
    
    Tested HW: WCN3990
    Tested FW: WLAN.HL.2.0-01188-QCAHLSWMTPLZ-1
    
    Signed-off-by: Surabhi Vishnoi <svishnoi@codeaurora.org>
    Signed-off-by: Rakesh Pillai <pillair@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f5885f4ce3f300bf3f3d92a6e2a3b0adf368382
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Fri Jul 27 16:51:57 2018 +0300

    scsi: 3ware: fix return 0 on the error path of probe
    
    [ Upstream commit 4dc98c1995482262e70e83ef029135247fafe0f2 ]
    
    tw_probe() returns 0 in case of fail of tw_initialize_device_extension(),
    pci_resource_start() or tw_reset_sequence() and releases resources.
    twl_probe() returns 0 in case of fail of twl_initialize_device_extension(),
    pci_iomap() and twl_reset_sequence().  twa_probe() returns 0 in case of
    fail of tw_initialize_device_extension(), ioremap() and
    twa_reset_sequence().
    
    The patch adds retval initialization for these cases.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Acked-by: Adam Radford <aradford@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58e91e96fdb2cacd96d89baba3ec9d8e1b937896
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Mon Jul 2 12:01:53 2018 -0700

    ata: libahci: Correct setting of DEVSLP register
    
    [ Upstream commit 2dbb3ec29a6c069035857a2fc4c24e80e5dfe3cc ]
    
    We have seen that on some platforms, SATA device never show any DEVSLP
    residency. This prevent power gating of SATA IP, which prevent system
    to transition to low power mode in systems with SLP_S0 aka modern
    standby systems. The PHY logic is off only in DEVSLP not in slumber.
    Reference:
    https://www.intel.com/content/dam/www/public/us/en/documents/datasheets
    /332995-skylake-i-o-platform-datasheet-volume-1.pdf
    Section 28.7.6.1
    
    Here driver is trying to do read-modify-write the devslp register. But
    not resetting the bits for which this driver will modify values (DITO,
    MDAT and DETO). So simply reset those bits before updating to new values.
    
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41038bf29f25291f0a04d18dc4b9354c41cf26a1
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Jul 27 18:23:19 2018 -0700

    MIPS: Fix ISA virt/bus conversion for non-zero PHYS_OFFSET
    
    [ Upstream commit 0494d7ffdcebc6935410ea0719b24ab626675351 ]
    
    isa_virt_to_bus() & isa_bus_to_virt() claim to treat ISA bus addresses
    as being identical to physical addresses, but they fail to do so in the
    presence of a non-zero PHYS_OFFSET.
    
    Correct this by having them use virt_to_phys() & phys_to_virt(), which
    consolidates the calculations to one place & ensures that ISA bus
    addresses do indeed match physical addresses.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20047/
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: Vladimir Kondratiev <vladimir.kondratiev@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2071bd1ca7f588a1c08b157026577d5366388233
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Thu Jul 26 15:59:48 2018 +0200

    ath10k: prevent active scans on potential unusable channels
    
    [ Upstream commit 3f259111583801013cb605bb4414aa529adccf1c ]
    
    The QCA4019 hw1.0 firmware 10.4-3.2.1-00050 and 10.4-3.5.3-00053 (and most
    likely all other) seem to ignore the WMI_CHAN_FLAG_DFS flag during the
    scan. This results in transmission (probe requests) on channels which are
    not "available" for transmissions.
    
    Since the firmware is closed source and nothing can be done from our side
    to fix the problem in it, the driver has to work around this problem. The
    WMI_CHAN_FLAG_PASSIVE seems to be interpreted by the firmware to not
    scan actively on a channel unless an AP was detected on it. Simple probe
    requests will then be transmitted by the STA on the channel.
    
    ath10k must therefore also use this flag when it queues a radar channel for
    scanning. This should reduce the chance of an active scan when the channel
    might be "unusable" for transmissions.
    
    Fixes: e8a50f8ba44b ("ath10k: introduce DFS implementation")
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 805841279cb02cab5c15913db5f4438ba7649403
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Mon Jul 2 04:21:18 2018 -0400

    macintosh/via-pmu: Add missing mmio accessors
    
    [ Upstream commit 576d5290d678a651b9f36050fc1717e0573aca13 ]
    
    Add missing in_8() accessors to init_pmu() and pmu_sr_intr().
    
    This fixes several sparse warnings:
    drivers/macintosh/via-pmu.c:536:29: warning: dereference of noderef expression
    drivers/macintosh/via-pmu.c:537:33: warning: dereference of noderef expression
    drivers/macintosh/via-pmu.c:1455:17: warning: dereference of noderef expression
    drivers/macintosh/via-pmu.c:1456:69: warning: dereference of noderef expression
    
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d926fe3c2557d6b0e956fe26565823a48b15479
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Jul 26 16:04:47 2018 -0400

    NFSv4.0 fix client reference leak in callback
    
    [ Upstream commit 32cd3ee511f4e07ca25d71163b50e704808d22f4 ]
    
    If there is an error during processing of a callback message, it leads
    to refrence leak on the client structure and eventually an unclean
    superblock.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c228c2f0c595925872ec306b689a0dfc3ebbfa4
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Sep 22 13:20:43 2017 +0200

    perf tools: Allow overriding MAX_NR_CPUS at compile time
    
    [ Upstream commit 21b8732eb4479b579bda9ee38e62b2c312c2a0e5 ]
    
    After update of kernel, the perf tool doesn't run anymore on my 32MB RAM
    powerpc board, but still runs on a 128MB RAM board:
    
      ~# strace perf
      execve("/usr/sbin/perf", ["perf"], [/* 12 vars */]) = -1 ENOMEM (Cannot allocate memory)
      --- SIGSEGV {si_signo=SIGSEGV, si_code=SI_KERNEL, si_addr=0} ---
      +++ killed by SIGSEGV +++
      Segmentation fault
    
    objdump -x shows that .bss section has a huge size of 24Mbytes:
    
     27 .bss          016baca8  101cebb8  101cebb8  001cd988  2**3
    
    With especially the following objects having quite big size:
    
      10205f80 l     O .bss 00140000     runtime_cycles_stats
      10345f80 l     O .bss 00140000     runtime_stalled_cycles_front_stats
      10485f80 l     O .bss 00140000     runtime_stalled_cycles_back_stats
      105c5f80 l     O .bss 00140000     runtime_branches_stats
      10705f80 l     O .bss 00140000     runtime_cacherefs_stats
      10845f80 l     O .bss 00140000     runtime_l1_dcache_stats
      10985f80 l     O .bss 00140000     runtime_l1_icache_stats
      10ac5f80 l     O .bss 00140000     runtime_ll_cache_stats
      10c05f80 l     O .bss 00140000     runtime_itlb_cache_stats
      10d45f80 l     O .bss 00140000     runtime_dtlb_cache_stats
      10e85f80 l     O .bss 00140000     runtime_cycles_in_tx_stats
      10fc5f80 l     O .bss 00140000     runtime_transaction_stats
      11105f80 l     O .bss 00140000     runtime_elision_stats
      11245f80 l     O .bss 00140000     runtime_topdown_total_slots
      11385f80 l     O .bss 00140000     runtime_topdown_slots_retired
      114c5f80 l     O .bss 00140000     runtime_topdown_slots_issued
      11605f80 l     O .bss 00140000     runtime_topdown_fetch_bubbles
      11745f80 l     O .bss 00140000     runtime_topdown_recovery_bubbles
    
    This is due to commit 4d255766d28b1 ("perf: Bump max number of cpus
    to 1024"), because many tables are sized with MAX_NR_CPUS
    
    This patch gives the opportunity to redefine MAX_NR_CPUS via
    
      $ make EXTRA_CFLAGS=-DMAX_NR_CPUS=1
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linuxppc-dev@lists.ozlabs.org
    Link: http://lkml.kernel.org/r/20170922112043.8349468C57@po15668-vm-win7.idsi0.si.c-s.fr
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5be08ed5e393ddb75e8b7b14b3fa8b6d236b9fa
Author: Yunlong Song <yunlong.song@huawei.com>
Date:   Thu Jul 12 23:09:26 2018 +0800

    f2fs: do not set free of current section
    
    [ Upstream commit 3611ce9911267cb93d364bd71ddea6821278d11f ]
    
    For the case when sbi->segs_per_sec > 1, take section:segment = 5 for
    example, if segment 1 is just used and allocate new segment 2, and the
    blocks of segment 1 is invalidated, at this time, the previous code will
    use __set_test_and_free to free the free_secmap and free_sections++,
    this is not correct since it is still a current section, so fix it.
    
    Signed-off-by: Yunlong Song <yunlong.song@huawei.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a93d88d6638bcf1d85917cf60ba812826b41a01
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Fri Jul 27 16:39:31 2018 +0300

    tty: rocket: Fix possible buffer overwrite on register_PCI
    
    [ Upstream commit 0419056ec8fd01ddf5460d2dba0491aad22657dd ]
    
    If number of isa and pci boards exceed NUM_BOARDS on the path
    rp_init()->init_PCI()->register_PCI() then buffer overwrite occurs
    in register_PCI() on assign rcktpt_io_addr[i].
    
    The patch adds check on upper bound for index of registered
    board in register_PCI.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57533bacbc5606d12322dbb738f5f335fc835c33
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 2 11:24:47 2018 +0300

    uio: potential double frees if __uio_register_device() fails
    
    [ Upstream commit f019f07ecf6a6b8bd6d7853bce70925d90af02d1 ]
    
    The uio_unregister_device() function assumes that if "info->uio_dev" is
    non-NULL that means "info" is fully allocated.  Setting info->uio_de
    has to be the last thing in the function.
    
    In the current code, if request_threaded_irq() fails then we return with
    info->uio_dev set to non-NULL but info is not fully allocated and it can
    lead to double frees.
    
    Fixes: beafc54c4e2f ("UIO: Add the User IO core code")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c075f0a0b37e8d868da9cc7dde23f27e341e193
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Fri Jul 27 18:45:36 2018 +0300

    misc: ti-st: Fix memory leak in the error path of probe()
    
    [ Upstream commit 81ae962d7f180c0092859440c82996cccb254976 ]
    
    Free resources instead of direct return of the error code if kim_probe
    fails.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccae23ff45ccd3e9c610c46ee8449c2617118daa
Author: BingJing Chang <bingjingc@synology.com>
Date:   Wed Aug 1 17:08:36 2018 +0800

    md/raid5: fix data corruption of replacements after originals dropped
    
    [ Upstream commit d63e2fc804c46e50eee825c5d3a7228e07048b47 ]
    
    During raid5 replacement, the stripes can be marked with R5_NeedReplace
    flag. Data can be read from being-replaced devices and written to
    replacing spares without reading all other devices. (It's 'replace'
    mode. s.replacing = 1) If a being-replaced device is dropped, the
    replacement progress will be interrupted and resumed with pure recovery
    mode. However, existing stripes before being interrupted cannot read
    from the dropped device anymore. It prints lots of WARN_ON messages.
    And it results in data corruption because existing stripes write
    problematic data into its replacement device and update the progress.
    
    \# Erase disks (1MB + 2GB)
    dd if=/dev/zero of=/dev/sda bs=1MB count=2049
    dd if=/dev/zero of=/dev/sdb bs=1MB count=2049
    dd if=/dev/zero of=/dev/sdc bs=1MB count=2049
    dd if=/dev/zero of=/dev/sdd bs=1MB count=2049
    mdadm -C /dev/md0 -amd -R -l5 -n3 -x0 /dev/sd[abc] -z 2097152
    \# Ensure array stores non-zero data
    dd if=/root/data_4GB.iso of=/dev/md0 bs=1MB
    \# Start replacement
    mdadm /dev/md0 -a /dev/sdd
    mdadm /dev/md0 --replace /dev/sda
    
    Then, Hot-plug out /dev/sda during recovery, and wait for recovery done.
    echo check > /sys/block/md0/md/sync_action
    cat /sys/block/md0/md/mismatch_cnt # it will be greater than 0.
    
    Soon after you hot-plug out /dev/sda, you will see many WARN_ON
    messages. The replacement recovery will be interrupted shortly. After
    the recovery finishes, it will result in data corruption.
    
    Actually, it's just an unhandled case of replacement. In commit
    <f94c0b6658c7> (md/raid5: fix interaction of 'replace' and 'recovery'.),
    if a NeedReplace device is not UPTODATE then that is an error, the
    commit just simply print WARN_ON but also mark these corrupted stripes
    with R5_WantReplace. (it means it's ready for writes.)
    
    To fix this case, we can leverage 'sync and replace' mode mentioned in
    commit <9a3e1101b827> (md/raid5: detect and handle replacements during
    recovery.). We can add logics to detect and use 'sync and replace' mode
    for these stripes.
    
    Reported-by: Alex Chen <alexchen@synology.com>
    Reviewed-by: Alex Wu <alexwu@synology.com>
    Reviewed-by: Chung-Chiang Cheng <cccheng@synology.com>
    Signed-off-by: BingJing Chang <bingjingc@synology.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44dc4734a7810e7ee24fc8942a93ca5b8521a24b
Author: Mike Christie <mchristi@redhat.com>
Date:   Thu Aug 2 12:12:20 2018 -0500

    scsi: target: fix __transport_register_session locking
    
    [ Upstream commit 6a64f6e1591322beb8ce16e952a53582caf2a15c ]
    
    When __transport_register_session is called from transport_register_session
    irqs will already have been disabled, so we do not want the unlock irq call
    to enable them until the higher level has done the final
    spin_unlock_irqrestore/ spin_unlock_irq.
    
    This has __transport_register_session use the save/restore call.
    
    Signed-off-by: Mike Christie <mchristi@redhat.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf748acafd58fe15bc74e0646bc95b4c3fdcb4c3
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Thu Aug 2 14:11:44 2018 +0300

    gpio: tegra: Move driver registration to subsys_init level
    
    [ Upstream commit 40b25bce0adbe641a744d1291bc0e51fb7f3c3d8 ]
    
    There is a bug in regards to deferred probing within the drivers core
    that causes GPIO-driver to suspend after its users. The bug appears if
    GPIO-driver probe is getting deferred, which happens after introducing
    dependency on PINCTRL-driver for the GPIO-driver by defining "gpio-ranges"
    property in device-tree. The bug in the drivers core is old (more than 4
    years now) and is well known, unfortunately there is no easy fix for it.
    The good news is that we can workaround the deferred probe issue by
    changing GPIO / PINCTRL drivers registration order and hence by moving
    PINCTRL driver registration to the arch_init level and GPIO to the
    subsys_init.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5824d86b50b8c5f9ecd725f2d74381a23ab1c63b
Author: Johan Hedberg <johan.hedberg@intel.com>
Date:   Sat Aug 4 23:40:26 2018 +0300

    Bluetooth: h5: Fix missing dependency on BT_HCIUART_SERDEV
    
    [ Upstream commit 6c3711ec64fd23a9abc8aaf59a9429569a6282df ]
    
    This driver was recently updated to use serdev, so add the appropriate
    dependency. Without this one can get compiler warnings like this if
    CONFIG_SERIAL_DEV_BUS is not enabled:
    
      CC [M]  drivers/bluetooth/hci_h5.o
    drivers/bluetooth/hci_h5.c:934:36: warning: ‘h5_serdev_driver’ defined but not used [-Wunused-variable]
     static struct serdev_device_driver h5_serdev_driver = {
                                        ^~~~~~~~~~~~~~~~
    
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61537b3398df88c0ca70ea6bccca0e00de5ab172
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Sat Aug 4 14:20:40 2018 -0700

    ethtool: Remove trailing semicolon for static inline
    
    [ Upstream commit d89d41556141a527030a15233135ba622ba3350d ]
    
    Android's header sanitization tool chokes on static inline functions having a
    trailing semicolon, leading to an incorrectly parsed header file. While the
    tool should obviously be fixed, also fix the header files for the two affected
    functions: ethtool_get_flow_spec_ring() and ethtool_get_flow_spec_ring_vf().
    
    Fixes: 8cf6f497de40 ("ethtool: Add helper routines to pass vf to rx_flow_spec")
    Reporetd-by: Blair Prescott <blair.prescott@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb9dabb6fca85a6af11ce8669c812dfed0660ca0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 2 11:42:22 2018 +0300

    misc: mic: SCIF Fix scif_get_new_port() error handling
    
    [ Upstream commit a39284ae9d2ad09975c8ae33f1bd0f05fbfbf6ee ]
    
    There are only 2 callers of scif_get_new_port() and both appear to get
    the error handling wrong.  Both treat zero returns as error, but it
    actually returns negative error codes and >= 0 on success.
    
    Fixes: e9089f43c9a7 ("misc: mic: SCIF open close bind and listen APIs")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3efb7699a873bd47950e4fdcfd1052afd1ab578
Author: Alexey Brodkin <abrodkin@synopsys.com>
Date:   Thu Aug 2 11:50:16 2018 +0300

    ARC: [plat-axs*]: Enable SWAP
    
    commit c83532fb0fe053d2e43e9387354cb1b52ba26427 upstream.
    
    SWAP support on ARC was fixed earlier by
    commit 6e3761145a9b ("ARC: Fix CONFIG_SWAP")
    so now we may safely enable it on platforms that
    have external media like USB and SD-card.
    
    Note: it was already allowed for HSDK
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Cc: stable@vger.kernel.org # 6e3761145a9b: ARC: Fix CONFIG_SWAP
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d914882c936d9c3a1fa4c10d5950c5f0a7d32d79
Author: Prateek Sood <prsood@codeaurora.org>
Date:   Fri Jul 14 19:17:56 2017 +0530

    locking/osq_lock: Fix osq_lock queue corruption
    
    commit 50972fe78f24f1cd0b9d7bbf1f87d2be9e4f412e upstream.
    
    Fix ordering of link creation between node->prev and prev->next in
    osq_lock(). A case in which the status of optimistic spin queue is
    CPU6->CPU2 in which CPU6 has acquired the lock.
    
            tail
              v
      ,-. <- ,-.
      |6|    |2|
      `-' -> `-'
    
    At this point if CPU0 comes in to acquire osq_lock, it will update the
    tail count.
    
      CPU2                  CPU0
      ----------------------------------
    
                                           tail
                                             v
                              ,-. <- ,-.    ,-.
                              |6|    |2|    |0|
                              `-' -> `-'    `-'
    
    After tail count update if CPU2 starts to unqueue itself from
    optimistic spin queue, it will find an updated tail count with CPU0 and
    update CPU2 node->next to NULL in osq_wait_next().
    
      unqueue-A
    
                   tail
                     v
      ,-. <- ,-.    ,-.
      |6|    |2|    |0|
      `-'    `-'    `-'
    
      unqueue-B
    
      ->tail != curr && !node->next
    
    If reordering of following stores happen then prev->next where prev
    being CPU2 would be updated to point to CPU0 node:
    
                                           tail
                                             v
                              ,-. <- ,-.    ,-.
                              |6|    |2|    |0|
                              `-'    `-' -> `-'
    
      osq_wait_next()
        node->next <- 0
        xchg(node->next, NULL)
    
                   tail
                     v
      ,-. <- ,-.    ,-.
      |6|    |2|    |0|
      `-'    `-'    `-'
    
      unqueue-C
    
    At this point if next instruction
            WRITE_ONCE(next->prev, prev);
    in CPU2 path is committed before the update of CPU0 node->prev = prev then
    CPU0 node->prev will point to CPU6 node.
    
                   tail
        v----------. v
      ,-. <- ,-.    ,-.
      |6|    |2|    |0|
      `-'    `-'    `-'
         `----------^
    
    At this point if CPU0 path's node->prev = prev is committed resulting
    in change of CPU0 prev back to CPU2 node. CPU2 node->next is NULL
    currently,
    
                                           tail
                                             v
                              ,-. <- ,-. <- ,-.
                              |6|    |2|    |0|
                              `-'    `-'    `-'
                                 `----------^
    
    so if CPU0 gets into unqueue path of osq_lock it will keep spinning
    in infinite loop as condition prev->next == node will never be true.
    
    Signed-off-by: Prateek Sood <prsood@codeaurora.org>
    [ Added pictures, rewrote comments. ]
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: sramana@codeaurora.org
    Link: http://lkml.kernel.org/r/1500040076-27626-1-git-send-email-prsood@codeaurora.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97557d161572172d1d6ea317f254e501a4585c41
Author: Michal Hocko <mhocko@kernel.org>
Date:   Thu Aug 3 10:11:52 2017 +0200

    selinux: use GFP_NOWAIT in the AVC kmem_caches
    
    commit 476accbe2f6ef69caeebe99f52a286e12ac35aee upstream.
    
    There is a strange __GFP_NOMEMALLOC usage pattern in SELinux,
    specifically GFP_ATOMIC | __GFP_NOMEMALLOC which doesn't make much
    sense.  GFP_ATOMIC on its own allows to access memory reserves while
    __GFP_NOMEMALLOC dictates we cannot use memory reserves.  Replace this
    with the much more sane GFP_NOWAIT in the AVC code as we can tolerate
    memory allocation failures in that code.
    
    Signed-off-by: Michal Hocko <mhocko@kernel.org>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70cc08c44fb55b587c7485a15549e9f9a12c9405
Author: Prateek Sood <prsood@codeaurora.org>
Date:   Thu Sep 7 20:00:58 2017 +0530

    locking/rwsem-xadd: Fix missed wakeup due to reordering of load
    
    commit 9c29c31830a4eca724e137a9339137204bbb31be upstream.
    
    If a spinner is present, there is a chance that the load of
    rwsem_has_spinner() in rwsem_wake() can be reordered with
    respect to decrement of rwsem count in __up_write() leading
    to wakeup being missed:
    
     spinning writer                  up_write caller
     ---------------                  -----------------------
     [S] osq_unlock()                 [L] osq
      spin_lock(wait_lock)
      sem->count=0xFFFFFFFF00000001
                +0xFFFFFFFF00000000
      count=sem->count
      MB
                                       sem->count=0xFFFFFFFE00000001
                                                 -0xFFFFFFFF00000001
                                       spin_trylock(wait_lock)
                                       return
     rwsem_try_write_lock(count)
     spin_unlock(wait_lock)
     schedule()
    
    Reordering of atomic_long_sub_return_release() in __up_write()
    and rwsem_has_spinner() in rwsem_wake() can cause missing of
    wakeup in up_write() context. In spinning writer, sem->count
    and local variable count is 0XFFFFFFFE00000001. It would result
    in rwsem_try_write_lock() failing to acquire rwsem and spinning
    writer going to sleep in rwsem_down_write_failed().
    
    The smp_rmb() will make sure that the spinner state is
    consulted after sem->count is updated in up_write context.
    
    Signed-off-by: Prateek Sood <prsood@codeaurora.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dave@stgolabs.net
    Cc: longman@redhat.com
    Cc: parri.andrea@gmail.com
    Cc: sramana@codeaurora.org
    Link: http://lkml.kernel.org/r/1504794658-15397-1-git-send-email-prsood@codeaurora.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29a2875cf481b8db367a0a8aed54d4b30640558e
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Nov 21 18:03:32 2016 -0500

    block,blkcg: use __GFP_NOWARN for best-effort allocations in blkcg
    
    commit e00f4f4d0ff7e13b9115428a245b49108d625f09 upstream.
    
    blkcg allocates some per-cgroup data structures with GFP_NOWAIT and
    when that fails falls back to operations which aren't specific to the
    cgroup.  Occassional failures are expected under pressure and falling
    back to non-cgroup operation is the right thing to do.
    
    Unfortunately, I forgot to add __GFP_NOWARN to these allocations and
    these expected failures end up creating a lot of noise.  Add
    __GFP_NOWARN.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Marc MERLIN <marc@merlins.org>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 035c3ea1608e2f7a7cc43a46179f10add479c9df
Author: Daniel Micay <danielmicay@gmail.com>
Date:   Mon Jun 5 21:52:34 2017 -0700

    staging/rts5208: Fix read overflow in memcpy
    
    commit 88a5b39b69ab1828fd4130e2baadd184109cea69 upstream.
    
    Noticed by FORTIFY_SOURCE, this swaps memcpy() for strncpy() to zero-value
    fill the end of the buffer instead of over-reading a string from .rodata.
    
    Signed-off-by: Daniel Micay <danielmicay@gmail.com>
    [kees: wrote commit log]
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Wayne Porter <wporter82@gmail.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>

commit 227e5d4b86e64e9807fe5ae507b0755229c2876a
Author: Jia-Ju Bai <baijiaju1990@163.com>
Date:   Mon Jun 5 15:30:16 2017 +0800

    staging: rt5208: Fix a sleep-in-atomic bug in xd_copy_page
    
    commit 498c4b4e9c23855d17ecc2a108d949bb68020481 upstream.
    
    The driver may sleep under a spin lock, and the function call path is:
    rtsx_exclusive_enter_ss (acquire the lock by spin_lock)
      rtsx_enter_ss
        rtsx_power_off_card
          xd_cleanup_work
            xd_delay_write
              xd_finish_write
                xd_copy_page
                  wait_timeout
                    schedule_timeout --> may sleep
    
    To fix it, "wait_timeout" is replaced with mdelay in xd_copy_page.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@163.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ecd71cd152bd3e08dc650c67ac7c600386a6a41
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Mon May 29 09:22:07 2017 +0200

    kthread: fix boot hang (regression) on MIPS/OpenRISC
    
    commit b0f5a8f32e8bbdaae1abb8abe2d3cbafaba57e08 upstream.
    
    This fixes a regression in commit 4d6501dce079 where I didn't notice
    that MIPS and OpenRISC were reinitialising p->{set,clear}_child_tid to
    NULL after our initialisation in copy_process().
    
    We can simply get rid of the arch-specific initialisation here since it
    is now always done in copy_process() before hitting copy_thread{,_tls}().
    
    Review notes:
    
     - As far as I can tell, copy_process() is the only user of
       copy_thread_tls(), which is the only caller of copy_thread() for
       architectures that don't implement copy_thread_tls().
    
     - After this patch, there is no arch-specific code touching
       p->set_child_tid or p->clear_child_tid whatsoever.
    
     - It may look like MIPS/OpenRISC wanted to always have these fields be
       NULL, but that's not true, as copy_process() would unconditionally
       set them again _after_ calling copy_thread_tls() before commit
       4d6501dce079.
    
    Fixes: 4d6501dce079c1eb6bf0b1d8f528a5e81770109e ("kthread: Fix use-after-free if kthread fork fails")
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net> # MIPS only
    Acked-by: Stafford Horne <shorne@gmail.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>
    Cc: openrisc@lists.librecores.org
    Cc: Jamie Iles <jamie.iles@oracle.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 798ef283a8dd73dea2ae8f817abe75255fde772c
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Tue May 9 09:39:59 2017 +0200

    kthread: Fix use-after-free if kthread fork fails
    
    commit 4d6501dce079c1eb6bf0b1d8f528a5e81770109e upstream.
    
    If a kthread forks (e.g. usermodehelper since commit 1da5c46fa965) but
    fails in copy_process() between calling dup_task_struct() and setting
    p->set_child_tid, then the value of p->set_child_tid will be inherited
    from the parent and get prematurely freed by free_kthread_struct().
    
        kthread()
         - worker_thread()
            - process_one_work()
            |  - call_usermodehelper_exec_work()
            |     - kernel_thread()
            |        - _do_fork()
            |           - copy_process()
            |              - dup_task_struct()
            |                 - arch_dup_task_struct()
            |                    - tsk->set_child_tid = current->set_child_tid // implied
            |              - ...
            |              - goto bad_fork_*
            |              - ...
            |              - free_task(tsk)
            |                 - free_kthread_struct(tsk)
            |                    - kfree(tsk->set_child_tid)
            - ...
            - schedule()
               - __schedule()
                  - wq_worker_sleeping()
                     - kthread_data(task)->flags // UAF
    
    The problem started showing up with commit 1da5c46fa965 since it reused
    ->set_child_tid for the kthread worker data.
    
    A better long-term solution might be to get rid of the ->set_child_tid
    abuse. The comment in set_kthread_struct() also looks slightly wrong.
    
    Debugged-by: Jamie Iles <jamie.iles@oracle.com>
    Fixes: 1da5c46fa965 ("kthread: Make struct kthread kmalloc'ed")
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Jamie Iles <jamie.iles@oracle.com>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20170509073959.17858-1-vegard.nossum@oracle.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39223f841425da99c2b0174d8bc42ee1bb29a5ad
Author: Ritesh Harjani <riteshh@codeaurora.org>
Date:   Wed Aug 9 18:28:32 2017 +0530

    cfq: Give a chance for arming slice idle timer in case of group_idle
    
    commit b3193bc0dca9bb69c8ba1ec1a318105c76eb4172 upstream.
    
    In below scenario blkio cgroup does not work as per their assigned
    weights :-
    1. When the underlying device is nonrotational with a single HW queue
    with depth of >= CFQ_HW_QUEUE_MIN
    2. When the use case is forming two blkio cgroups cg1(weight 1000) &
    cg2(wight 100) and two processes(file1 and file2) doing sync IO in
    their respective blkio cgroups.
    
    For above usecase result of fio (without this patch):-
    file1: (groupid=0, jobs=1): err= 0: pid=685: Thu Jan  1 19:41:49 1970
      write: IOPS=1315, BW=41.1MiB/s (43.1MB/s)(1024MiB/24906msec)
    <...>
    file2: (groupid=0, jobs=1): err= 0: pid=686: Thu Jan  1 19:41:49 1970
      write: IOPS=1295, BW=40.5MiB/s (42.5MB/s)(1024MiB/25293msec)
    <...>
    // both the process BW is equal even though they belong to diff.
    cgroups with weight of 1000(cg1) and 100(cg2)
    
    In above case (for non rotational NCQ devices),
    as soon as the request from cg1 is completed and even
    though it is provided with higher set_slice=10, because of CFQ
    algorithm when the driver tries to fetch the request, CFQ expires
    this group without providing any idle time nor weight priority
    and schedules another cfq group (in this case cg2).
    And thus both cfq groups(cg1 & cg2) keep alternating to get the
    disk time and hence loses the cgroup weight based scheduling.
    
    Below patch gives a chance to cfq algorithm (cfq_arm_slice_timer)
    to arm the slice timer in case group_idle is enabled.
    In case if group_idle is also not required (including for nonrotational
    NCQ drives), we need to explicitly set group_idle = 0 from sysfs for
    such cases.
    
    With this patch result of fio(for above usecase) :-
    file1: (groupid=0, jobs=1): err= 0: pid=690: Thu Jan  1 00:06:08 1970
      write: IOPS=1706, BW=53.3MiB/s (55.9MB/s)(1024MiB/19197msec)
    <..>
    file2: (groupid=0, jobs=1): err= 0: pid=691: Thu Jan  1 00:06:08 1970
      write: IOPS=1043, BW=32.6MiB/s (34.2MB/s)(1024MiB/31401msec)
    <..>
    // In this processes BW is as per their respective cgroups weight.
    
    Signed-off-by: Ritesh Harjani <riteshh@codeaurora.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9125a2116c75383ca0b37d9eecefa3c6235bb4e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Aug 30 15:13:16 2018 +0200

    ALSA: hda - Fix cancel_work_sync() stall from jackpoll work
    
    commit 16037643969e095509cd8446a3f8e406a6dc3a2c upstream.
    
    On AMD/ATI controllers, the HD-audio controller driver allows a bus
    reset upon the error recovery, and its procedure includes the
    cancellation of pending jack polling work as found in
    snd_hda_bus_codec_reset().  This works usually fine, but it becomes a
    problem when the reset happens from the jack poll work itself; then
    calling cancel_work_sync() from the work being processed tries to wait
    the finish endlessly.
    
    As a workaround, this patch adds the check of current_work() and
    applies the cancel_work_sync() only when it's not from the
    jackpoll_work.
    
    This doesn't fix the root cause of the reported error below, but at
    least, it eases the unexpected stall of the whole system.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=200937
    Cc: <stable@vger.kernel.org>
    Cc: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d811b40d010822eda1fd70d734caf8db1b21ec5f
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Mon Sep 3 11:24:57 2018 +0300

    i2c: i801: fix DNV's SMBCTRL register offset
    
    commit 851a15114895c5bce163a6f2d57e0aa4658a1be4 upstream.
    
    DNV's iTCO is slightly different with SMBCTRL sitting at a different
    offset when compared to all other devices. Let's fix so that we can
    properly use iTCO watchdog.
    
    Fixes: 84d7f2ebd70d ("i2c: i801: Add support for Intel DNV")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad53f98feee72e1805a02b78022919ef5a998b58
Author: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Date:   Mon Sep 3 15:11:11 2018 +0530

    i2c: xiic: Make the start and the byte count write atomic
    
    commit ae7304c3ea28a3ba47a7a8312c76c654ef24967e upstream.
    
    Disable interrupts while configuring the transfer and enable them back.
    
    We have below as the programming sequence
    1. start and slave address
    2. byte count and stop
    
    In some customer platform there was a lot of interrupts between 1 and 2
    and after slave address (around 7 clock cyles) if 2 is not executed
    then the transaction is nacked.
    
    To fix this case make the 2 writes atomic.
    
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    [wsa: added a newline for better readability]
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
