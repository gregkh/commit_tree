commit 574a61d201df8f159162bf706de3645b62d75048
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Nov 10 11:23:33 2019 +0100

    Linux 4.9.200

commit 07abe8c6ecd718d383bc9e405b15a76640516164
Author: Petr Vorel <pvorel@suse.cz>
Date:   Fri Nov 8 16:50:50 2019 +0100

    alarmtimer: Change remaining ENOTSUPP to EOPNOTSUPP
    
    Fix backport of commit f18ddc13af981ce3c7b7f26925f099e7c6929aba upstream.
    
    Update backport to change ENOTSUPP to EOPNOTSUPP in
    alarm_timer_{del,set}(), which were removed in
    f2c45807d3992fe0f173f34af9c347d907c31686 in v4.13-rc1.
    
    Fixes: 65b7a5a36afb11a6769a70308c1ef3a2afae6bf4
    
    Signed-off-by: Petr Vorel <pvorel@suse.cz>
    Acked-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 202a60489a24fcac6461da6358de1a48c0c23a6b
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Thu Oct 17 08:26:06 2019 -0700

    dmaengine: qcom: bam_dma: Fix resource leak
    
    commit 7667819385457b4aeb5fac94f67f52ab52cc10d5 upstream.
    
    bam_dma_terminate_all() will leak resources if any of the transactions are
    committed to the hardware (present in the desc fifo), and not complete.
    Since bam_dma_terminate_all() does not cause the hardware to be updated,
    the hardware will still operate on any previously committed transactions.
    This can cause memory corruption if the memory for the transaction has been
    reassigned, and will cause a sync issue between the BAM and its client(s).
    
    Fix this by properly updating the hardware in bam_dma_terminate_all().
    
    Fixes: e7c0fe2a5c84 ("dmaengine: add Qualcomm BAM dma driver")
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20191017152606.34120-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f94465d13ace2d4610c4eb2b362454ce2a9d87c
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 22 07:57:46 2019 -0700

    net/flow_dissector: switch to siphash
    
    commit 55667441c84fa5e0911a0aac44fb059c15ba6da2 upstream.
    
    UDP IPv6 packets auto flowlabels are using a 32bit secret
    (static u32 hashrnd in net/core/flow_dissector.c) and
    apply jhash() over fields known by the receivers.
    
    Attackers can easily infer the 32bit secret and use this information
    to identify a device and/or user, since this 32bit secret is only
    set at boot time.
    
    Really, using jhash() to generate cookies sent on the wire
    is a serious security concern.
    
    Trying to change the rol32(hash, 16) in ip6_make_flowlabel() would be
    a dead end. Trying to periodically change the secret (like in sch_sfq.c)
    could change paths taken in the network for long lived flows.
    
    Let's switch to siphash, as we did in commit df453700e8d8
    ("inet: switch IP ID generator to siphash")
    
    Using a cryptographically strong pseudo random function will solve this
    privacy issue and more generally remove other weak points in the stack.
    
    Packet schedulers using skb_get_hash_perturb() benefit from this change.
    
    Fixes: b56774163f99 ("ipv6: Enable auto flow labels by default")
    Fixes: 42240901f7c4 ("ipv6: Implement different admin modes for automatic flow labels")
    Fixes: 67800f9b1f4e ("ipv6: Call skb_get_hash_flowi6 to get skb->hash in ip6_make_flowlabel")
    Fixes: cb1ce2ef387b ("ipv6: Implement automatic flow label generation on transmit")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Jonathan Berger <jonathann1@walla.com>
    Reported-by: Amit Klein <aksecurity@gmail.com>
    Reported-by: Benny Pinkas <benny@pinkas.net>
    Cc: Tom Herbert <tom@herbertland.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0446b0300ccdb40324a5961b7ca77be403128b5d
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Wed Jul 17 11:06:26 2019 -0500

    kbuild: add -fcf-protection=none when using retpoline flags
    
    [ Upstream commit 29be86d7f9cb18df4123f309ac7857570513e8bc ]
    
    The gcc -fcf-protection=branch option is not compatible with
    -mindirect-branch=thunk-extern. The latter is used when
    CONFIG_RETPOLINE is selected, and this will fail to build with
    a gcc which has -fcf-protection=branch enabled by default. Adding
    -fcf-protection=none when building with retpoline enabled
    prevents such build failures.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e1dff7b0df33327dacfb94f82f6d82e8f2ffa01
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Mar 30 13:15:26 2018 +0900

    kbuild: use -fmacro-prefix-map to make __FILE__ a relative path
    
    [ Upstream commit a73619a845d5625079cc1b3b820f44c899618388 ]
    
    The __FILE__ macro is used everywhere in the kernel to locate the file
    printing the log message, such as WARN_ON(), etc.  If the kernel is
    built out of tree, this can be a long absolute path, like this:
    
      WARNING: CPU: 1 PID: 1 at /path/to/build/directory/arch/arm64/kernel/foo.c:...
    
    This is because Kbuild runs in the objtree instead of the srctree,
    then __FILE__ is expanded to a file path prefixed with $(srctree)/.
    
    Commit 9da0763bdd82 ("kbuild: Use relative path when building in a
    subdir of the source tree") improved this to some extent; $(srctree)
    becomes ".." if the objtree is a child of the srctree.
    
    For other cases of out-of-tree build, __FILE__ is still the absolute
    path.  It also means the kernel image depends on where it was built.
    
    A brand-new option from GCC, -fmacro-prefix-map, solves this problem.
    If your compiler supports it, __FILE__ is the relative path from the
    srctree regardless of O= option.  This provides more readable log and
    more reproducible builds.
    
    Please note __FILE__ is always an absolute path for external modules.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a250cab009b578679496f53fe3532ef79821fe8f
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Mar 20 17:14:11 2017 -0700

    Kbuild: make designated_init attribute fatal
    
    [ Upstream commit c834f0e8a8bb3025aac38e802fca2e686720f544 ]
    
    If a structure is marked with __attribute__((designated_init)) from
    GCC or Sparse, it needs to have all static initializers using designated
    initialization. Fail the build for any missing cases. This attribute will
    be used by the randstruct plugin to make sure randomized structures are
    being correctly initialized.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a67a32da603cba284c0ed96878e19acf00263373
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 1 10:32:19 2019 -0700

    inet: stop leaking jiffies on the wire
    
    [ Upstream commit a904a0693c189691eeee64f6c6b188bd7dc244e9 ]
    
    Historically linux tried to stick to RFC 791, 1122, 2003
    for IPv4 ID field generation.
    
    RFC 6864 made clear that no matter how hard we try,
    we can not ensure unicity of IP ID within maximum
    lifetime for all datagrams with a given source
    address/destination address/protocol tuple.
    
    Linux uses a per socket inet generator (inet_id), initialized
    at connection startup with a XOR of 'jiffies' and other
    fields that appear clear on the wire.
    
    Thiemo Nagel pointed that this strategy is a privacy
    concern as this provides 16 bits of entropy to fingerprint
    devices.
    
    Let's switch to a random starting point, this is just as
    good as far as RFC 6864 is concerned and does not leak
    anything critical.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Thiemo Nagel <tnagel@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ede4c70fbdff188ac49a00646676f676ee4f802
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Sun Oct 27 16:39:15 2019 +0200

    net/mlx4_core: Dynamically set guaranteed amount of counters per VF
    
    [ Upstream commit e19868efea0c103f23b4b7e986fd0a703822111f ]
    
    Prior to this patch, the amount of counters guaranteed per VF in the
    resource tracker was MLX4_VF_COUNTERS_PER_PORT * MLX4_MAX_PORTS. It was
    set regardless if the VF was single or dual port.
    This caused several VFs to have no guaranteed counters although the
    system could satisfy their request.
    
    The fix is to dynamically guarantee counters, based on each VF
    specification.
    
    Fixes: 9de92c60beaa ("net/mlx4_core: Adjust counter grant policy in the resource tracker")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ee544c2c10dc6f7b2b29ebbe917ffad2e0591dc
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Oct 29 01:24:32 2019 +0800

    vxlan: check tun_info options_len properly
    
    [ Upstream commit eadf52cf1852196a1363044dcda22fa5d7f296f7 ]
    
    This patch is to improve the tun_info options_len by dropping
    the skb when TUNNEL_VXLAN_OPT is set but options_len is less
    than vxlan_metadata. This can void a potential out-of-bounds
    access on ip_tun_info.
    
    Fixes: ee122c79d422 ("vxlan: Flow based tunneling")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28f36653f00a5adbc3bfe5d6e871d008b0f550cf
Author: Doug Berger <opendmb@gmail.com>
Date:   Wed Oct 16 16:06:32 2019 -0700

    net: bcmgenet: reset 40nm EPHY on energy detect
    
    [ Upstream commit 25382b991d252aed961cd434176240f9de6bb15f ]
    
    The EPHY integrated into the 40nm Set-Top Box devices can falsely
    detect energy when connected to a disabled peer interface. When the
    peer interface is enabled the EPHY will detect and report the link
    as active, but on occasion may get into a state where it is not
    able to exchange data with the connected GENET MAC. This issue has
    not been observed when the link parameters are auto-negotiated;
    however, it has been observed with a manually configured link.
    
    It has been empirically determined that issuing a soft reset to the
    EPHY when energy is detected prevents it from getting into this bad
    state.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4b5e4f1d2b8086445b63c82caf2871f4f692760
Author: Vivien Didelot <vivien.didelot@gmail.com>
Date:   Fri Oct 18 17:02:46 2019 -0400

    net: dsa: fix switch tree list
    
    [ Upstream commit 50c7d2ba9de20f60a2d527ad6928209ef67e4cdd ]
    
    If there are multiple switch trees on the device, only the last one
    will be listed, because the arguments of list_add_tail are swapped.
    
    Fixes: 83c0afaec7b7 ("net: dsa: Add new binding implementation")
    Signed-off-by: Vivien Didelot <vivien.didelot@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e204b65f0134a87452186ad772bac9efdca4dda
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 23 22:44:52 2019 -0700

    net: add READ_ONCE() annotation in __skb_wait_for_more_packets()
    
    [ Upstream commit 7c422d0ce97552dde4a97e6290de70ec6efb0fc6 ]
    
    __skb_wait_for_more_packets() can be called while other cpus
    can feed packets to the socket receive queue.
    
    KCSAN reported :
    
    BUG: KCSAN: data-race in __skb_wait_for_more_packets / __udp_enqueue_schedule_skb
    
    write to 0xffff888102e40b58 of 8 bytes by interrupt on cpu 0:
     __skb_insert include/linux/skbuff.h:1852 [inline]
     __skb_queue_before include/linux/skbuff.h:1958 [inline]
     __skb_queue_tail include/linux/skbuff.h:1991 [inline]
     __udp_enqueue_schedule_skb+0x2d7/0x410 net/ipv4/udp.c:1470
     __udp_queue_rcv_skb net/ipv4/udp.c:1940 [inline]
     udp_queue_rcv_one_skb+0x7bd/0xc70 net/ipv4/udp.c:2057
     udp_queue_rcv_skb+0xb5/0x400 net/ipv4/udp.c:2074
     udp_unicast_rcv_skb.isra.0+0x7e/0x1c0 net/ipv4/udp.c:2233
     __udp4_lib_rcv+0xa44/0x17c0 net/ipv4/udp.c:2300
     udp_rcv+0x2b/0x40 net/ipv4/udp.c:2470
     ip_protocol_deliver_rcu+0x4d/0x420 net/ipv4/ip_input.c:204
     ip_local_deliver_finish+0x110/0x140 net/ipv4/ip_input.c:231
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_local_deliver+0x133/0x210 net/ipv4/ip_input.c:252
     dst_input include/net/dst.h:442 [inline]
     ip_rcv_finish+0x121/0x160 net/ipv4/ip_input.c:413
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_rcv+0x18f/0x1a0 net/ipv4/ip_input.c:523
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
    
    read to 0xffff888102e40b58 of 8 bytes by task 13035 on cpu 1:
     __skb_wait_for_more_packets+0xfa/0x320 net/core/datagram.c:100
     __skb_recv_udp+0x374/0x500 net/ipv4/udp.c:1683
     udp_recvmsg+0xe1/0xb10 net/ipv4/udp.c:1712
     inet_recvmsg+0xbb/0x250 net/ipv4/af_inet.c:838
     sock_recvmsg_nosec+0x5c/0x70 net/socket.c:871
     ___sys_recvmsg+0x1a0/0x3e0 net/socket.c:2480
     do_recvmmsg+0x19a/0x5c0 net/socket.c:2601
     __sys_recvmmsg+0x1ef/0x200 net/socket.c:2680
     __do_sys_recvmmsg net/socket.c:2703 [inline]
     __se_sys_recvmmsg net/socket.c:2696 [inline]
     __x64_sys_recvmmsg+0x89/0xb0 net/socket.c:2696
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 13035 Comm: syz-executor.3 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43562e529657bd204c7843fba54d0d05d5706ad8
Author: Wei Wang <weiwan@google.com>
Date:   Thu Oct 31 16:24:36 2019 -0700

    selftests: net: reuseport_dualstack: fix uninitalized parameter
    
    [ Upstream commit d64479a3e3f9924074ca7b50bd72fa5211dca9c1 ]
    
    This test reports EINVAL for getsockopt(SOL_SOCKET, SO_DOMAIN)
    occasionally due to the uninitialized length parameter.
    Initialize it to fix this, and also use int for "test_family" to comply
    with the API standard.
    
    Fixes: d6a61f80b871 ("soreuseport: test mixed v4/v6 sockets")
    Reported-by: Maciej Żenczykowski <maze@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Wei Wang <weiwan@google.com>
    Cc: Craig Gallek <cgallek@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b441b2526cc47261bf3400842a3148b087419df
Author: zhanglin <zhang.lin16@zte.com.cn>
Date:   Sat Oct 26 15:54:16 2019 +0800

    net: Zeroing the structure ethtool_wolinfo in ethtool_get_wol()
    
    [ Upstream commit 5ff223e86f5addbfae26419cbb5d61d98f6fbf7d ]
    
    memset() the structure ethtool_wolinfo that has padded bytes
    but the padded bytes have not been zeroed out.
    
    Signed-off-by: zhanglin <zhang.lin16@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d0d649fd2d5e4076db37cbf2d3614629d2d1536
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Mon Oct 28 13:09:46 2019 +0800

    net: hisilicon: Fix ping latency when deal with high throughput
    
    [ Upstream commit e56bd641ca61beb92b135298d5046905f920b734 ]
    
    This is due to error in over budget processing.
    When dealing with high throughput, the used buffers
    that exceeds the budget is not cleaned up. In addition,
    it takes a lot of cycles to clean up the used buffer,
    and then the buffer where the valid data is located can take effect.
    
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37d6ef4556a0f2e31de50b01a948c476773ff8ac
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Oct 24 13:50:27 2019 -0700

    net: fix sk_page_frag() recursion from memory reclaim
    
    [ Upstream commit 20eb4f29b60286e0d6dc01d9c260b4bd383c58fb ]
    
    sk_page_frag() optimizes skb_frag allocations by using per-task
    skb_frag cache when it knows it's the only user.  The condition is
    determined by seeing whether the socket allocation mask allows
    blocking - if the allocation may block, it obviously owns the task's
    context and ergo exclusively owns current->task_frag.
    
    Unfortunately, this misses recursion through memory reclaim path.
    Please take a look at the following backtrace.
    
     [2] RIP: 0010:tcp_sendmsg_locked+0xccf/0xe10
         ...
         tcp_sendmsg+0x27/0x40
         sock_sendmsg+0x30/0x40
         sock_xmit.isra.24+0xa1/0x170 [nbd]
         nbd_send_cmd+0x1d2/0x690 [nbd]
         nbd_queue_rq+0x1b5/0x3b0 [nbd]
         __blk_mq_try_issue_directly+0x108/0x1b0
         blk_mq_request_issue_directly+0xbd/0xe0
         blk_mq_try_issue_list_directly+0x41/0xb0
         blk_mq_sched_insert_requests+0xa2/0xe0
         blk_mq_flush_plug_list+0x205/0x2a0
         blk_flush_plug_list+0xc3/0xf0
     [1] blk_finish_plug+0x21/0x2e
         _xfs_buf_ioapply+0x313/0x460
         __xfs_buf_submit+0x67/0x220
         xfs_buf_read_map+0x113/0x1a0
         xfs_trans_read_buf_map+0xbf/0x330
         xfs_btree_read_buf_block.constprop.42+0x95/0xd0
         xfs_btree_lookup_get_block+0x95/0x170
         xfs_btree_lookup+0xcc/0x470
         xfs_bmap_del_extent_real+0x254/0x9a0
         __xfs_bunmapi+0x45c/0xab0
         xfs_bunmapi+0x15/0x30
         xfs_itruncate_extents_flags+0xca/0x250
         xfs_free_eofblocks+0x181/0x1e0
         xfs_fs_destroy_inode+0xa8/0x1b0
         destroy_inode+0x38/0x70
         dispose_list+0x35/0x50
         prune_icache_sb+0x52/0x70
         super_cache_scan+0x120/0x1a0
         do_shrink_slab+0x120/0x290
         shrink_slab+0x216/0x2b0
         shrink_node+0x1b6/0x4a0
         do_try_to_free_pages+0xc6/0x370
         try_to_free_mem_cgroup_pages+0xe3/0x1e0
         try_charge+0x29e/0x790
         mem_cgroup_charge_skmem+0x6a/0x100
         __sk_mem_raise_allocated+0x18e/0x390
         __sk_mem_schedule+0x2a/0x40
     [0] tcp_sendmsg_locked+0x8eb/0xe10
         tcp_sendmsg+0x27/0x40
         sock_sendmsg+0x30/0x40
         ___sys_sendmsg+0x26d/0x2b0
         __sys_sendmsg+0x57/0xa0
         do_syscall_64+0x42/0x100
         entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    In [0], tcp_send_msg_locked() was using current->page_frag when it
    called sk_wmem_schedule().  It already calculated how many bytes can
    be fit into current->page_frag.  Due to memory pressure,
    sk_wmem_schedule() called into memory reclaim path which called into
    xfs and then IO issue path.  Because the filesystem in question is
    backed by nbd, the control goes back into the tcp layer - back into
    tcp_sendmsg_locked().
    
    nbd sets sk_allocation to (GFP_NOIO | __GFP_MEMALLOC) which makes
    sense - it's in the process of freeing memory and wants to be able to,
    e.g., drop clean pages to make forward progress.  However, this
    confused sk_page_frag() called from [2].  Because it only tests
    whether the allocation allows blocking which it does, it now thinks
    current->page_frag can be used again although it already was being
    used in [0].
    
    After [2] used current->page_frag, the offset would be increased by
    the used amount.  When the control returns to [0],
    current->page_frag's offset is increased and the previously calculated
    number of bytes now may overrun the end of allocated memory leading to
    silent memory corruptions.
    
    Fix it by adding gfpflags_normal_context() which tests sleepable &&
    !reclaim and use it to determine whether to use current->task_frag.
    
    v2: Eric didn't like gfp flags being tested twice.  Introduce a new
        helper gfpflags_normal_context() and combine the two tests.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Josef Bacik <josef@toxicpanda.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afd9a802e235b31ddd491fe1efba3df0d410d127
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Nov 4 07:57:55 2019 -0800

    dccp: do not leak jiffies on the wire
    
    [ Upstream commit 3d1e5039f5f87a8731202ceca08764ee7cb010d3 ]
    
    For some reason I missed the case of DCCP passive
    flows in my previous patch.
    
    Fixes: a904a0693c18 ("inet: stop leaking jiffies on the wire")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Thiemo Nagel <tnagel@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa25e11258cccd7b35082c50c7dd5c5db4455980
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Wed Oct 23 05:02:33 2019 -0400

    cifs: Fix cifsInodeInfo lock_sem deadlock when reconnect occurs
    
    [ Upstream commit d46b0da7a33dd8c99d969834f682267a45444ab3 ]
    
    There's a deadlock that is possible and can easily be seen with
    a test where multiple readers open/read/close of the same file
    and a disruption occurs causing reconnect.  The deadlock is due
    a reader thread inside cifs_strict_readv calling down_read and
    obtaining lock_sem, and then after reconnect inside
    cifs_reopen_file calling down_read a second time.  If in
    between the two down_read calls, a down_write comes from
    another process, deadlock occurs.
    
            CPU0                    CPU1
            ----                    ----
    cifs_strict_readv()
     down_read(&cifsi->lock_sem);
                                   _cifsFileInfo_put
                                      OR
                                   cifs_new_fileinfo
                                    down_write(&cifsi->lock_sem);
    cifs_reopen_file()
     down_read(&cifsi->lock_sem);
    
    Fix the above by changing all down_write(lock_sem) calls to
    down_write_trylock(lock_sem)/msleep() loop, which in turn
    makes the second down_read call benign since it will never
    block behind the writer while holding lock_sem.
    
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Suggested-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed--by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b1ee30b5c1da82f97d89446a53eba6fda08f6b1
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Tue Oct 22 21:11:00 2019 +0200

    MIPS: bmips: mark exception vectors as char arrays
    
    [ Upstream commit e4f5cb1a9b27c0f94ef4f5a0178a3fde2d3d0e9e ]
    
    The vectors span more than one byte, so mark them as arrays.
    
    Fixes the following build error when building when using GCC 8.3:
    
    In file included from ./include/linux/string.h:19,
                     from ./include/linux/bitmap.h:9,
                     from ./include/linux/cpumask.h:12,
                     from ./arch/mips/include/asm/processor.h:15,
                     from ./arch/mips/include/asm/thread_info.h:16,
                     from ./include/linux/thread_info.h:38,
                     from ./include/asm-generic/preempt.h:5,
                     from ./arch/mips/include/generated/asm/preempt.h:1,
                     from ./include/linux/preempt.h:81,
                     from ./include/linux/spinlock.h:51,
                     from ./include/linux/mmzone.h:8,
                     from ./include/linux/bootmem.h:8,
                     from arch/mips/bcm63xx/prom.c:10:
    arch/mips/bcm63xx/prom.c: In function 'prom_init':
    ./arch/mips/include/asm/string.h:162:11: error: '__builtin_memcpy' forming offset [2, 32] is out of the bounds [0, 1] of object 'bmips_smp_movevec' with type 'char' [-Werror=array-bounds]
       __ret = __builtin_memcpy((dst), (src), __len); \
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    arch/mips/bcm63xx/prom.c:97:3: note: in expansion of macro 'memcpy'
       memcpy((void *)0xa0000200, &bmips_smp_movevec, 0x20);
       ^~~~~~
    In file included from arch/mips/bcm63xx/prom.c:14:
    ./arch/mips/include/asm/bmips.h:80:13: note: 'bmips_smp_movevec' declared here
     extern char bmips_smp_movevec;
    
    Fixes: 18a1eef92dcd ("MIPS: BMIPS: Introduce bmips.h")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Paul Burton <paulburton@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0228cd262dda0916948b52a74b88fa1f8b3cc810
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Oct 4 13:58:43 2019 -0500

    of: unittest: fix memory leak in unittest_data_add
    
    [ Upstream commit e13de8fe0d6a51341671bbe384826d527afe8d44 ]
    
    In unittest_data_add, a copy buffer is created via kmemdup. This buffer
    is leaked if of_fdt_unflatten_tree fails. The release for the
    unittest_data buffer is added.
    
    Fixes: b951f9dc7f25 ("Enabling OF selftest to run without machine's devicetree")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Reviewed-by: Frank Rowand <frowand.list@gmail.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c2c7b43a20503c4a29c23377471e24b6f5672e2
Author: Bodo Stroesser <bstroesser@ts.fujitsu.com>
Date:   Mon Oct 14 20:29:04 2019 +0200

    scsi: target: core: Do not overwrite CDB byte 1
    
    [ Upstream commit 27e84243cb63601a10e366afe3e2d05bb03c1cb5 ]
    
    passthrough_parse_cdb() - used by TCMU and PSCSI - attepts to reset the LUN
    field of SCSI-2 CDBs (bits 5,6,7 of byte 1).  The current code is wrong as
    for newer commands not having the LUN field it overwrites relevant command
    bits (e.g. for SECURITY PROTOCOL IN / OUT). We think this code was
    unnecessary from the beginning or at least it is no longer useful. So we
    remove it entirely.
    
    Link: https://lore.kernel.org/r/12498eab-76fd-eaad-1316-c2827badb76a@ts.fujitsu.com
    Signed-off-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c4a12db928900a543157cda0c537ac4c8bae56b
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Fri Aug 30 13:22:02 2019 +0300

    ARM: davinci: dm365: Fix McBSP dma_slave_map entry
    
    [ Upstream commit 564b6bb9d42d31fc80c006658cf38940a9b99616 ]
    
    dm365 have only single McBSP, so the device name is without .0
    
    Fixes: 0c750e1fe481d ("ARM: davinci: dm365: Add dma_slave_map to edma")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d8855adce92a0522c1206aa36459cd8f58b1740
Author: Yunfeng Ye <yeyunfeng@huawei.com>
Date:   Wed Oct 16 16:38:45 2019 +0800

    perf kmem: Fix memory leak in compact_gfp_flags()
    
    [ Upstream commit 1abecfcaa7bba21c9985e0136fa49836164dd8fd ]
    
    The memory @orig_flags is allocated by strdup(), it is freed on the
    normal path, but leak to free on the error path.
    
    Fix this by adding free(orig_flags) on the error path.
    
    Fixes: 0e11115644b3 ("perf kmem: Print gfp flags in human readable string")
    Signed-off-by: Yunfeng Ye <yeyunfeng@huawei.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Feilong Lin <linfeilong@huawei.com>
    Cc: Hu Shiyuan <hushiyuan@huawei.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/f9e9f458-96f3-4a97-a1d5-9feec2420e07@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc087a74200206a88e3664466a5aa4c58c683283
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Oct 7 08:43:42 2019 +0800

    ARM: dts: imx7s: Correct GPT's ipg clock source
    
    [ Upstream commit 252b9e21bcf46b0d16f733f2e42b21fdc60addee ]
    
    i.MX7S/D's GPT ipg clock should be from GPT clock root and
    controlled by CCM's GPT CCGR, using correct clock source for
    GPT ipg clock instead of IMX7D_CLK_DUMMY.
    
    Fixes: 3ef79ca6bd1d ("ARM: dts: imx7d: use imx7s.dtsi as base device tree")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4bd4ac92baed6400f18649fcd69b6f7387147d8
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Oct 9 17:11:28 2019 +0200

    scsi: fix kconfig dependency warning related to 53C700_LE_ON_BE
    
    [ Upstream commit 8cbf0c173aa096dda526d1ccd66fc751c31da346 ]
    
    When building a kernel with SCSI_SNI_53C710 enabled, Kconfig warns:
    
    WARNING: unmet direct dependencies detected for 53C700_LE_ON_BE
      Depends on [n]: SCSI_LOWLEVEL [=y] && SCSI [=y] && SCSI_LASI700 [=n]
      Selected by [y]:
      - SCSI_SNI_53C710 [=y] && SCSI_LOWLEVEL [=y] && SNI_RM [=y] && SCSI [=y]
    
    Add the missing depends SCSI_SNI_53C710 to 53C700_LE_ON_BE to fix it.
    
    Link: https://lore.kernel.org/r/20191009151128.32411-1-tbogendoerfer@suse.de
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ae7d25d0c2afd0b5f983fa4fbc31afe62dca7d0
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Oct 9 17:11:18 2019 +0200

    scsi: sni_53c710: fix compilation error
    
    [ Upstream commit 0ee6211408a8e939428f662833c7301394125b80 ]
    
    Drop out memory dev_printk() with wrong device pointer argument.
    
    [mkp: typo]
    
    Link: https://lore.kernel.org/r/20191009151118.32350-1-tbogendoerfer@suse.de
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a00b558ea0511a756df5290a39221ee2be1e7b5
Author: Hannes Reinecke <hare@suse.com>
Date:   Mon Oct 7 15:57:01 2019 +0200

    scsi: scsi_dh_alua: handle RTPG sense code correctly during state transitions
    
    [ Upstream commit b6ce6fb121a655aefe41dccc077141c102145a37 ]
    
    Some arrays are not capable of returning RTPG data during state
    transitioning, but rather return an 'LUN not accessible, asymmetric access
    state transition' sense code. In these cases we can set the state to
    'transitioning' directly and don't need to evaluate the RTPG data (which we
    won't have anyway).
    
    Link: https://lore.kernel.org/r/20191007135701.32389-1-hare@suse.de
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5124ad28d04c3fbe152d4583f9a95926974dc56c
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Aug 31 17:01:58 2019 +0100

    ARM: mm: fix alignment handler faults under memory pressure
    
    [ Upstream commit 67e15fa5b487adb9b78a92789eeff2d6ec8f5cee ]
    
    When the system has high memory pressure, the page containing the
    instruction may be paged out.  Using probe_kernel_address() means that
    if the page is swapped out, the resulting page fault will not be
    handled because page faults are disabled by this function.
    
    Use get_user() to read the instruction instead.
    
    Reported-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Fixes: b255188f90e2 ("ARM: fix scheduling while atomic warning in alignment handling code")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 298766ae9c2d25798298bafbd143d4327fb3f71e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 26 11:14:26 2019 +0300

    pinctrl: ns2: Fix off by one bugs in ns2_pinmux_enable()
    
    [ Upstream commit 39b65fbb813089e366b376bd8acc300b6fd646dc ]
    
    The pinctrl->functions[] array has pinctrl->num_functions elements and
    the pinctrl->groups[] array is the same way.  These are set in
    ns2_pinmux_probe().  So the > comparisons should be >= so that we don't
    read one element beyond the end of the array.
    
    Fixes: b5aa1006e4a9 ("pinctrl: ns2: add pinmux driver support for Broadcom NS2 SoC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20190926081426.GB2332@mwanda
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3d85d21b83d0643a0ed68360785209c689c88da
Author: Adam Ford <aford173@gmail.com>
Date:   Fri Aug 16 17:58:12 2019 -0500

    ARM: dts: logicpd-torpedo-som: Remove twl_keypad
    
    [ Upstream commit 6b512b0ee091edcb8e46218894e4c917d919d3dc ]
    
    The TWL4030 used on the Logit PD Torpedo SOM does not have the
    keypad pins routed.  This patch disables the twl_keypad driver
    to remove some splat during boot:
    
    twl4030_keypad 48070000.i2c:twl@48:keypad: missing or malformed property linux,keymap: -22
    twl4030_keypad 48070000.i2c:twl@48:keypad: Failed to build keymap
    twl4030_keypad: probe of 48070000.i2c:twl@48:keypad failed with error -22
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    [tony@atomide.com: removed error time stamps]
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73a9f6b9591715b594d8abc323d8ae1694ed423f
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Wed Oct 2 16:30:37 2019 +0100

    ASoc: rockchip: i2s: Fix RPM imbalance
    
    [ Upstream commit b1e620e7d32f5aad5353cc3cfc13ed99fea65d3a ]
    
    If rockchip_pcm_platform_register() fails, e.g. upon deferring to wait
    for an absent DMA channel, we return without disabling RPM, which makes
    subsequent re-probe attempts scream with errors about the unbalanced
    enable. Don't do that.
    
    Fixes: ebb75c0bdba2 ("ASoC: rockchip: i2s: Adjust devm usage")
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/bcb12a849a05437fb18372bc7536c649b94bdf07.1570029862.git.robin.murphy@arm.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2c8308df4178f8ff143f894da977965e9006232
Author: Stuart Henderson <stuarth@opensource.cirrus.com>
Date:   Wed Oct 2 09:42:40 2019 +0100

    ASoC: wm_adsp: Don't generate kcontrols without READ flags
    
    [ Upstream commit 3ae7359c0e39f42a96284d6798fc669acff38140 ]
    
    User space always expects to be able to read ALSA controls, so ensure
    no kcontrols are generated without an appropriate READ flag. In the case
    of a read of such a control zeros will be returned.
    
    Signed-off-by: Stuart Henderson <stuarth@opensource.cirrus.com>
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20191002084240.21589-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07d819d64adeea57fac055904c32239c34b38a48
Author: Yizhuo <yzhai003@ucr.edu>
Date:   Sun Sep 29 10:09:57 2019 -0700

    regulator: pfuze100-regulator: Variable "val" in pfuze100_regulator_probe() could be uninitialized
    
    [ Upstream commit 1252b283141f03c3dffd139292c862cae10e174d ]
    
    In function pfuze100_regulator_probe(), variable "val" could be
    initialized if regmap_read() fails. However, "val" is used to
    decide the control flow later in the if statement, which is
    potentially unsafe.
    
    Signed-off-by: Yizhuo <yzhai003@ucr.edu>
    Link: https://lore.kernel.org/r/20190929170957.14775-1-yzhai003@ucr.edu
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4c7179c04861ab04e2135631835da4e726ddb6c
Author: Axel Lin <axel.lin@ingics.com>
Date:   Sun Sep 29 17:58:48 2019 +0800

    regulator: ti-abb: Fix timeout in ti_abb_wait_txdone/ti_abb_clear_all_txdone
    
    [ Upstream commit f64db548799e0330897c3203680c2ee795ade518 ]
    
    ti_abb_wait_txdone() may return -ETIMEDOUT when ti_abb_check_txdone()
    returns true in the latest iteration of the while loop because the timeout
    value is abb->settling_time + 1. Similarly, ti_abb_clear_all_txdone() may
    return -ETIMEDOUT when ti_abb_check_txdone() returns false in the latest
    iteration of the while loop. Fix it.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20190929095848.21960-1-axel.lin@ingics.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
