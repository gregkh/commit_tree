commit d19e48fe5da7b83d02ed4aec3567f08ae02a168c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Sep 30 10:20:43 2016 +0200

    Linux 4.4.23

commit 7b251d3404dfd0384274b7493722f65a1ceaa724
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 13 13:12:34 2016 +0300

    hostfs: Freeing an ERR_PTR in hostfs_fill_sb_common()
    
    commit 8a545f185145e3c09348cd74326268ecfc6715a3 upstream.
    
    We can't pass error pointers to kfree() or it causes an oops.
    
    Fixes: 52b209f7b848 ('get rid of hostfs_read_inode()')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69b10e10f5a8c99d8df4769053be1bd71a97f770
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jul 11 11:46:33 2016 +0300

    qxl: check for kmap failures
    
    commit f4cceb2affcd1285d4ce498089e8a79f4cd2fa66 upstream.
    
    If kmap fails, it leads to memory corruption.
    
    Fixes: f64122c1f6ad ('drm: add new QXL driver. (v1.4)')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/20160711084633.GA31411@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97f9aa7c027126e9cb024d95a45b00505198746e
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Fri Aug 12 09:10:27 2016 -0400

    power: supply: max17042_battery: fix model download bug.
    
    commit 5381cfb6f0422da24cfa9da35b0433c0415830e0 upstream.
    
    The device's model download function returns the model data as
    an array of u32s, which is later compared to the reference
    model data. However, since the latter is an array of u16s,
    the comparison does not happen correctly, and model verification
    fails. This in turn breaks the POR initialization sequence.
    
    Fixes: 39e7213edc4f3 ("max17042_battery: Support regmap to access device's registers")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Sven Van Asbroeck <TheSven73@googlemail.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a596ebc52657e2b7840c5d1a8adffe4393156604
Author: Wei Yongjun <weiyj.lk@gmail.com>
Date:   Tue Jul 26 14:49:04 2016 +0000

    power_supply: tps65217-charger: fix missing platform_set_drvdata()
    
    commit 33e7664a0af6e9a516f01014f39737aaa119b6d9 upstream.
    
    Add missing platform_set_drvdata() in tps65217_charger_probe(), otherwise
    calling platform_get_drvdata() in remove returns NULL.
    
    This is detected by Coccinelle semantic patch.
    
    Fixes: 3636859b280c ("power_supply: Add support for tps65217-charger")
    Signed-off-by: Wei Yongjun <weiyj.lk@gmail.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 116fcd882e3b6dc3aeb0fd29f7c93b5628337bc3
Author: James Morse <james.morse@arm.com>
Date:   Tue Aug 16 10:46:38 2016 +0100

    PM / hibernate: Fix rtree_next_node() to avoid walking off list ends
    
    commit 924d8696751c4b9e58263bc82efdafcf875596a6 upstream.
    
    rtree_next_node() walks the linked list of leaf nodes to find the next
    block of pages in the struct memory_bitmap. If it walks off the end of
    the list of nodes, it walks the list of memory zones to find the next
    region of memory. If it walks off the end of the list of zones, it
    returns false.
    
    This leaves the struct bm_position's node and zone pointers pointing
    at their respective struct list_heads in struct mem_zone_bm_rtree.
    
    memory_bm_find_bit() uses struct bm_position's node and zone pointers
    to avoid walking lists and trees if the next bit appears in the same
    node/zone. It handles these values being stale.
    
    Swap rtree_next_node()s 'step then test' to 'test-next then step',
    this means if we reach the end of memory we return false and leave
    the node and zone pointers as they were.
    
    This fixes a panic on resume using AMD Seattle with 64K pages:
    [    6.868732] Freezing user space processes ... (elapsed 0.000 seconds) done.
    [    6.875753] Double checking all user space processes after OOM killer disable... (elapsed 0.000 seconds)
    [    6.896453] PM: Using 3 thread(s) for decompression.
    [    6.896453] PM: Loading and decompressing image data (5339 pages)...
    [    7.318890] PM: Image loading progress:   0%
    [    7.323395] Unable to handle kernel paging request at virtual address 00800040
    [    7.330611] pgd = ffff000008df0000
    [    7.334003] [00800040] *pgd=00000083fffe0003, *pud=00000083fffe0003, *pmd=00000083fffd0003, *pte=0000000000000000
    [    7.344266] Internal error: Oops: 96000005 [#1] PREEMPT SMP
    [    7.349825] Modules linked in:
    [    7.352871] CPU: 2 PID: 1 Comm: swapper/0 Tainted: G        W I     4.8.0-rc1 #4737
    [    7.360512] Hardware name: AMD Overdrive/Supercharger/Default string, BIOS ROD1002C 04/08/2016
    [    7.369109] task: ffff8003c0220000 task.stack: ffff8003c0280000
    [    7.375020] PC is at set_bit+0x18/0x30
    [    7.378758] LR is at memory_bm_set_bit+0x24/0x30
    [    7.383362] pc : [<ffff00000835bbc8>] lr : [<ffff0000080faf18>] pstate: 60000045
    [    7.390743] sp : ffff8003c0283b00
    [    7.473551]
    [    7.475031] Process swapper/0 (pid: 1, stack limit = 0xffff8003c0280020)
    [    7.481718] Stack: (0xffff8003c0283b00 to 0xffff8003c0284000)
    [    7.800075] Call trace:
    [    7.887097] [<ffff00000835bbc8>] set_bit+0x18/0x30
    [    7.891876] [<ffff0000080fb038>] duplicate_memory_bitmap.constprop.38+0x54/0x70
    [    7.899172] [<ffff0000080fcc40>] snapshot_write_next+0x22c/0x47c
    [    7.905166] [<ffff0000080fe1b4>] load_image_lzo+0x754/0xa88
    [    7.910725] [<ffff0000080ff0a8>] swsusp_read+0x144/0x230
    [    7.916025] [<ffff0000080fa338>] load_image_and_restore+0x58/0x90
    [    7.922105] [<ffff0000080fa660>] software_resume+0x2f0/0x338
    [    7.927752] [<ffff000008083350>] do_one_initcall+0x38/0x11c
    [    7.933314] [<ffff000008b40cc0>] kernel_init_freeable+0x14c/0x1ec
    [    7.939395] [<ffff0000087ce564>] kernel_init+0x10/0xfc
    [    7.944520] [<ffff000008082e90>] ret_from_fork+0x10/0x40
    [    7.949820] Code: d2800022 8b400c21 f9800031 9ac32043 (c85f7c22)
    [    7.955909] ---[ end trace 0024a5986e6ff323 ]---
    [    7.960529] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
    
    Here struct mem_zone_bm_rtree's start_pfn has been returned instead of
    struct rtree_node's addr as the node/zone pointers are corrupt after
    we walked off the end of the lists during mark_unsafe_pages().
    
    This behaviour was exposed by commit 6dbecfd345a6 ("PM / hibernate:
    Simplify mark_unsafe_pages()"), which caused mark_unsafe_pages() to call
    duplicate_memory_bitmap(), which uses memory_bm_find_bit() after walking
    off the end of the memory bitmap.
    
    Fixes: 3a20cb177961 (PM / Hibernate: Implement position keeping in radix tree)
    Signed-off-by: James Morse <james.morse@arm.com>
    [ rjw: Subject ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 119c348a8ef2765fb19c96f76480d4aaefdcae23
Author: Thomas Garnier <thgarnie@google.com>
Date:   Thu Aug 11 14:49:29 2016 -0700

    PM / hibernate: Restore processor state before using per-CPU variables
    
    commit 62822e2ec4ad091ba31f823f577ef80db52e3c2c upstream.
    
    Restore the processor state before calling any other functions to
    ensure per-CPU variables can be used with KASLR memory randomization.
    
    Tracing functions use per-CPU variables (GS based on x86) and one was
    called just before restoring the processor state fully. It resulted
    in a double fault when both the tracing & the exception handler
    functions tried to use a per-CPU variable.
    
    Fixes: bb3632c6101b (PM / sleep: trace events for suspend/resume)
    Reported-and-tested-by: Borislav Petkov <bp@suse.de>
    Reported-by: Jiri Kosina <jikos@kernel.org>
    Tested-by: Rafael J. Wysocki <rafael@kernel.org>
    Tested-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Garnier <thgarnie@google.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da40055ecfbc0244f1e2906d627f0dda54b685df
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Mon Sep 5 15:43:40 2016 +0100

    MIPS: paravirt: Fix undefined reference to smp_bootstrap
    
    commit 951c39cd3bc0aedf67fbd8fb4b9380287e6205d1 upstream.
    
    If the paravirt machine is compiles without CONFIG_SMP, the following
    linker error occurs
    
    arch/mips/kernel/head.o: In function `kernel_entry':
    (.ref.text+0x10): undefined reference to `smp_bootstrap'
    
    due to the kernel entry macro always including SMP startup code.
    Wrap this code in CONFIG_SMP to fix the error.
    
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/14212/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aebd3358fdb6f74b53ebd17d4eac5e67269dd9ab
Author: Huacai Chen <chenhc@lemote.com>
Date:   Mon Sep 5 08:48:03 2016 +0800

    MIPS: Add a missing ".set pop" in an early commit
    
    commit 3cbc6fc9c99f1709203711f125bc3b79487aba06 upstream.
    
    Commit 842dfc11ea9a21 ("MIPS: Fix build with binutils 2.24.51+") missing
    a ".set pop" in macro fpu_restore_16even, so add it.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Acked-by: Manuel Lauss <manuel.lauss@gmail.com>
    Cc: Steven J . Hill <Steven.Hill@caviumnetworks.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14210/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49cded2ae19b0624be81bbf6ba3badd51c1375a8
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Wed Aug 31 12:33:23 2016 +0200

    MIPS: Avoid a BUG warning during prctl(PR_SET_FP_MODE, ...)
    
    commit b244614a60ab7ce54c12a9cbe15cfbf8d79d0967 upstream.
    
    cpu_has_fpu macro uses smp_processor_id() and is currently executed
    with preemption enabled, that triggers the warning at runtime.
    
    It is assumed throughout the kernel that if any CPU has an FPU, then all
    CPUs would have an FPU as well, so it is safe to perform the check with
    preemption enabled - change the code to use raw_ variant of the check to
    avoid the warning.
    
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14125/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b30cac4946a74a25f2569e6929bcd081cfbdeac
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Sep 12 10:58:06 2016 +0100

    MIPS: Remove compact branch policy Kconfig entries
    
    commit b03c1e3b8eed9026733c473071d1f528358a0e50 upstream.
    
    Commit c1a0e9bc885d ("MIPS: Allow compact branch policy to be changed")
    added Kconfig entries allowing for the compact branch policy used by the
    compiler for MIPSr6 kernels to be specified. This can be useful for
    debugging, particularly in systems where compact branches have recently
    been introduced.
    
    Unfortunately mainline gcc 5.x supports MIPSr6 but not the
    -mcompact-branches compiler flag, leading to MIPSr6 kernels failing to
    build with gcc 5.x with errors such as:
    
      mipsel-linux-gnu-gcc: error: unrecognized command line option '-mcompact-branches=optimal'
      make[2]: *** [kernel/bounds.s] Error 1
    
    Fixing this by hiding the Kconfig entry behind another seems to be more
    hassle than it's worth, as MIPSr6 & compact branches have been around
    for a while now and if policy does need to be set for debug it can be
    done easily enough with KCFLAGS. Therefore remove the compact branch
    policy Kconfig entries & their handling in the Makefile.
    
    This reverts commit c1a0e9bc885d ("MIPS: Allow compact branch policy to
    be changed").
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Fixes: c1a0e9bc885d ("MIPS: Allow compact branch policy to be changed")
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14241/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 450abddb1cb4d5f3e1cde42670348ead50a25b91
Author: James Hogan <jhogan@kernel.org>
Date:   Wed Sep 7 13:37:01 2016 +0100

    MIPS: vDSO: Fix Malta EVA mapping to vDSO page structs
    
    commit 554af0c396380baf416f54c439b99b495180b2f4 upstream.
    
    The page structures associated with the vDSO pages in the kernel image
    are calculated using virt_to_page(), which uses __pa() under the hood to
    find the pfn associated with the virtual address. The vDSO data pointers
    however point to kernel symbols, so __pa_symbol() should really be used
    instead.
    
    Since there is no equivalent to virt_to_page() which uses __pa_symbol(),
    fix init_vdso_image() to work directly with pfns, calculated with
    __phys_to_pfn(__pa_symbol(...)).
    
    This issue broke the Malta Enhanced Virtual Addressing (EVA)
    configuration which has a non-default implementation of __pa_symbol().
    This is because it uses a physical alias so that the kernel executes
    from KSeg0 (VA 0x80000000 -> PA 0x00000000), while RAM is provided to
    the kernel in the KUSeg range (VA 0x00000000 -> PA 0x80000000) which
    uses the same underlying RAM.
    
    Since there are no page structures associated with the low physical
    address region, some arbitrary kernel memory would be interpreted as a
    page structure for the vDSO pages and badness ensues.
    
    Fixes: ebb5e78cc634 ("MIPS: Initial implementation of a VDSO")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14229/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8a84b8488fbdf38b27fc14bd9e5d49211a38fc7
Author: Matt Redfearn <matt.redfearn@mips.com>
Date:   Thu Sep 22 17:15:47 2016 +0100

    MIPS: SMP: Fix possibility of deadlock when bringing CPUs online
    
    commit 8f46cca1e6c06a058374816887059bcc017b382f upstream.
    
    This patch fixes the possibility of a deadlock when bringing up
    secondary CPUs.
    The deadlock occurs because the set_cpu_online() is called before
    synchronise_count_slave(). This can cause a deadlock if the boot CPU,
    having scheduled another thread, attempts to send an IPI to the
    secondary CPU, which it sees has been marked online. The secondary is
    blocked in synchronise_count_slave() waiting for the boot CPU to enter
    synchronise_count_master(), but the boot cpu is blocked in
    smp_call_function_many() waiting for the secondary to respond to it's
    IPI request.
    
    Fix this by marking the CPU online in cpu_callin_map and synchronising
    counters before declaring the CPU online and calculating the maps for
    IPIs.
    
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Reported-by: Justin Chen <justinpopo6@gmail.com>
    Tested-by: Justin Chen <justinpopo6@gmail.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14302/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18720392db1b57693beb130d37ce9d9201efb58b
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Sep 23 15:13:53 2016 +0100

    MIPS: Fix pre-r6 emulation FPU initialisation
    
    commit 7e956304eb8a285304a78582e4537e72c6365f20 upstream.
    
    In the mipsr2_decoder() function, used to emulate pre-MIPSr6
    instructions that were removed in MIPSr6, the init_fpu() function is
    called if a removed pre-MIPSr6 floating point instruction is the first
    floating point instruction used by the task. However, init_fpu()
    performs varous actions that rely upon not being migrated. For example
    in the most basic case it sets the coprocessor 0 Status.CU1 bit to
    enable the FPU & then loads FP register context into the FPU registers.
    If the task were to migrate during this time, it may end up attempting
    to load FP register context on a different CPU where it hasn't set the
    CU1 bit, leading to errors such as:
    
        do_cpu invoked from kernel context![#2]:
        CPU: 2 PID: 7338 Comm: fp-prctl Tainted: G      D         4.7.0-00424-g49b0c82 #2
        task: 838e4000 ti: 88d38000 task.ti: 88d38000
        $ 0   : 00000000 00000001 ffffffff 88d3fef8
        $ 4   : 838e4000 88d38004 00000000 00000001
        $ 8   : 3400fc01 801f8020 808e9100 24000000
        $12   : dbffffff 807b69d8 807b0000 00000000
        $16   : 00000000 80786150 00400fc4 809c0398
        $20   : 809c0338 0040273c 88d3ff28 808e9d30
        $24   : 808e9d30 00400fb4
        $28   : 88d38000 88d3fe88 00000000 8011a2ac
        Hi    : 0040273c
        Lo    : 88d3ff28
        epc   : 80114178 _restore_fp+0x10/0xa0
        ra    : 8011a2ac mipsr2_decoder+0xd5c/0x1660
        Status: 1400fc03    KERNEL EXL IE
        Cause : 1080002c (ExcCode 0b)
        PrId  : 0001a920 (MIPS I6400)
        Modules linked in:
        Process fp-prctl (pid: 7338, threadinfo=88d38000, task=838e4000, tls=766527d0)
        Stack : 00000000 00000000 00000000 88d3fe98 00000000 00000000 809c0398 809c0338
              808e9100 00000000 88d3ff28 00400fc4 00400fc4 0040273c 7fb69e18 004a0000
              004a0000 004a0000 7664add0 8010de18 00000000 00000000 88d3fef8 88d3ff28
              808e9100 00000000 766527d0 8010e534 000c0000 85755000 8181d580 00000000
              00000000 00000000 004a0000 00000000 766527d0 7fb69e18 004a0000 80105c20
              ...
        Call Trace:
        [<80114178>] _restore_fp+0x10/0xa0
        [<8011a2ac>] mipsr2_decoder+0xd5c/0x1660
        [<8010de18>] do_ri+0x90/0x6b8
        [<80105c20>] ret_from_exception+0x0/0x10
    
    Fix this by disabling preemption around the call to init_fpu(), ensuring
    that it starts & completes on one CPU.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: b0a668fb2038 ("MIPS: kernel: mips-r2-to-r6-emul: Add R2 emulator for MIPS R6")
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14305/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05e5e96324402c5066a763315d8159c9b8c94e22
Author: Sudeep Holla <Sudeep.Holla@arm.com>
Date:   Thu Aug 25 12:23:39 2016 +0100

    i2c: qup: skip qup_i2c_suspend if the device is already runtime suspended
    
    commit 331dcf421c34d227784d07943eb01e4023a42b0a upstream.
    
    If the i2c device is already runtime suspended, if qup_i2c_suspend is
    executed during suspend-to-idle or suspend-to-ram it will result in the
    following splat:
    
    WARNING: CPU: 3 PID: 1593 at drivers/clk/clk.c:476 clk_core_unprepare+0x80/0x90
    Modules linked in:
    
    CPU: 3 PID: 1593 Comm: bash Tainted: G        W       4.8.0-rc3 #14
    Hardware name: Qualcomm Technologies, Inc. APQ 8016 SBC (DT)
    PC is at clk_core_unprepare+0x80/0x90
    LR is at clk_unprepare+0x28/0x40
    pc : [<ffff0000086eecf0>] lr : [<ffff0000086f0c58>] pstate: 60000145
    Call trace:
     clk_core_unprepare+0x80/0x90
     qup_i2c_disable_clocks+0x2c/0x68
     qup_i2c_suspend+0x10/0x20
     platform_pm_suspend+0x24/0x68
     ...
    
    This patch fixes the issue by executing qup_i2c_pm_suspend_runtime
    conditionally in qup_i2c_suspend.
    
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbf1c4d2ea4a299d38874646e441327006d52c14
Author: Yadi.hu <yadi.hu@windriver.com>
Date:   Sun Sep 18 18:52:31 2016 +0800

    i2c-eg20t: fix race between i2c init and interrupt enable
    
    commit 371a015344b6e270e7e3632107d9554ec6d27a6b upstream.
    
    the eg20t driver call request_irq() function before the pch_base_address,
    base address of i2c controller's register, is assigned an effective value.
    
    there is one possible scenario that an interrupt which isn't inside eg20t
    arrives immediately after request_irq() is executed when i2c controller
    shares an interrupt number with others. since the interrupt handler
    pch_i2c_handler() has already active as shared action, it will be called
    and read its own register to determine if this interrupt is from itself.
    
    At that moment, since base address of i2c registers is not remapped
    in kernel space yet,so the INT handler will access an illegal address
    and then a error occurs.
    
    Signed-off-by: Yadi.hu <yadi.hu@windriver.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e944e69815ec4d6212514e658a4c7d155793c8f0
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Wed Sep 21 08:31:29 2016 -0400

    btrfs: ensure that file descriptor used with subvol ioctls is a dir
    
    commit 325c50e3cebb9208009083e841550f98a863bfa0 upstream.
    
    If the subvol/snapshot create/destroy ioctls are passed a regular file
    with execute permissions set, we'll eventually Oops while trying to do
    inode->i_op->lookup via lookup_one_len.
    
    This patch ensures that the file descriptor refers to a directory.
    
    Fixes: cb8e70901d (Btrfs: Fix subvolume creation locking rules)
    Fixes: 76dda93c6a (Btrfs: add snapshot/subvolume destroy ioctl)
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Signed-off-by: Chris Mason <clm@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b01a340b2b4bc18e90fe5e5a3e99d7d3cffe32
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Sep 13 15:53:55 2016 +0200

    nl80211: validate number of probe response CSA counters
    
    commit ad5987b47e96a0fb6d13fea250e936aed000093c upstream.
    
    Due to an apparent copy/paste bug, the number of counters for the
    beacon configuration were checked twice, instead of checking the
    number of probe response counters. Fix this to check the number of
    probe response counters before parsing those.
    
    Fixes: 9a774c78e211 ("cfg80211: Support multiple CSA counters")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a68022d9b59c2fc1ebe3c4133f0e2f32b4cde065
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Wed Aug 17 12:41:08 2016 -0300

    can: flexcan: fix resume function
    
    commit 4de349e786a3a2d51bd02d56f3de151bbc3c3df9 upstream.
    
    On a imx6ul-pico board the following error is seen during system suspend:
    
    dpm_run_callback(): platform_pm_resume+0x0/0x54 returns -110
    PM: Device 2090000.flexcan failed to resume: error -110
    
    The reason for this suspend error is because when the CAN interface is not
    active the clocks are disabled and then flexcan_chip_enable() will
    always fail due to a timeout error.
    
    In order to fix this issue, only call flexcan_chip_enable/disable()
    when the CAN interface is active.
    
    Based on a patch from Dong Aisheng in the NXP kernel.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7af3e4e129072b33ae95625555d38150f181adc3
Author: Hugh Dickins <hughd@google.com>
Date:   Fri Sep 23 20:27:04 2016 -0700

    mm: delete unnecessary and unsafe init_tlb_ubc()
    
    commit b385d21f27d86426472f6ae92a231095f7de2a8d upstream.
    
    init_tlb_ubc() looked unnecessary to me: tlb_ubc is statically
    initialized with zeroes in the init_task, and copied from parent to
    child while it is quiescent in arch_dup_task_struct(); so I went to
    delete it.
    
    But inserted temporary debug WARN_ONs in place of init_tlb_ubc() to
    check that it was always empty at that point, and found them firing:
    because memcg reclaim can recurse into global reclaim (when allocating
    biosets for swapout in my case), and arrive back at the init_tlb_ubc()
    in shrink_node_memcg().
    
    Resetting tlb_ubc.flush_required at that point is wrong: if the upper
    level needs a deferred TLB flush, but the lower level turns out not to,
    we miss a TLB flush.  But fortunately, that's the only part of the
    protocol that does not nest: with the initialization removed, cpumask
    collects bits from upper and lower levels, and flushes TLB when needed.
    
    Fixes: 72b252aed506 ("mm: send one IPI per CPU to TLB flush all entries after unmapping pages")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b275b4522af2b19072df7aee87fd659e09d29bc
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Fri Sep 23 22:57:13 2016 -0400

    tracing: Move mutex to protect against resetting of seq data
    
    commit 1245800c0f96eb6ebb368593e251d66c01e61022 upstream.
    
    The iter->seq can be reset outside the protection of the mutex. So can
    reading of user data. Move the mutex up to the beginning of the function.
    
    Fixes: d7350c3f45694 ("tracing/core: make the read callbacks reentrants")
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 369796a8843ec9fce05129c6a80bee9e4b90978b
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 17 18:31:46 2016 -0400

    fix memory leaks in tracing_buffers_splice_read()
    
    commit 1ae2293dd6d2f5c823cf97e60b70d03631cd622f upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ee1b560e735449509791698d4772462a9205bda
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Fri Aug 12 20:49:18 2016 +0530

    power: reset: hisi-reboot: Unmap region obtained by of_iomap
    
    commit bae170efd6c42bf116f513a1dd07639d68fa71b9 upstream.
    
    Free memory mapping, if probe is not successful.
    
    Fixes: 4a9b37371822 ("power: reset: move hisilicon reboot code")
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a52c63ade338cfddb7a5e779cef913624b25fded
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jul 14 13:44:56 2016 +0300

    mtd: pmcmsp-flash: Allocating too much in init_msp_flash()
    
    commit 79ad07d45743721010e766e65dc004ad249bd429 upstream.
    
    There is a cut and paste issue here.  The bug is that we are allocating
    more memory than necessary for msp_maps.  We should be allocating enough
    space for a map_info struct (144 bytes) but we instead allocate enough
    for an mtd_info struct (1840 bytes).  It's a small waste.
    
    The other part of this is not harmful but when we allocated msp_flash
    then we allocated enough space fro a map_info pointer instead of an
    mtd_info pointer.  But since pointers are the same size it works out
    fine.
    
    Anyway, I decided to clean up all three allocations a bit to make them
    a bit more consistent and clear.
    
    Fixes: 68aa0fa87f6d ('[MTD] PMC MSP71xx flash/rootfs mappings')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45987838305b660f44b6edffc8b653361bef7390
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jul 15 14:06:30 2016 +0300

    mtd: maps: sa1100-flash: potential NULL dereference
    
    commit dc01a28d80a42cef08c94dfc595565aaebe46d15 upstream.
    
    We check for NULL but then dereference "info->mtd" on the next line.
    
    Fixes: 72169755cf36 ('mtd: maps: sa1100-flash: show parent device in sysfs')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f5d8326a870729ae21aa0a6b132cf8d9e9fcc1e
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Tue Sep 20 20:07:42 2016 +0100

    fix fault_in_multipages_...() on architectures with no-op access_ok()
    
    commit e23d4159b109167126e5bcd7f3775c95de7fee47 upstream.
    
    Switching iov_iter fault-in to multipages variants has exposed an old
    bug in underlying fault_in_multipages_...(); they break if the range
    passed to them wraps around.  Normally access_ok() done by callers will
    prevent such (and it's a guaranteed EFAULT - ERR_PTR() values fall into
    such a range and they should not point to any valid objects).
    
    However, on architectures where userland and kernel live in different
    MMU contexts (e.g. s390) access_ok() is a no-op and on those a range
    with a wraparound can reach fault_in_multipages_...().
    
    Since any wraparound means EFAULT there, the fix is trivial - turn
    those
    
        while (uaddr <= end)
                ...
    into
    
        if (unlikely(uaddr > end))
                return -EFAULT;
        do
                ...
        while (uaddr <= end);
    
    Reported-by: Jan Stancek <jstancek@redhat.com>
    Tested-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e67de3922f25ae43fc86be362d740d88167ae7f
Author: Jan Kara <jack@suse.cz>
Date:   Mon Sep 19 14:44:30 2016 -0700

    fanotify: fix list corruption in fanotify_get_response()
    
    commit 96d41019e3ac55f6f0115b0ce97e4f24a3d636d2 upstream.
    
    fanotify_get_response() calls fsnotify_remove_event() when it finds that
    group is being released from fanotify_release() (bypass_perm is set).
    
    However the event it removes need not be only in the group's notification
    queue but it can have already moved to access_list (userspace read the
    event before closing the fanotify instance fd) which is protected by a
    different lock.  Thus when fsnotify_remove_event() races with
    fanotify_release() operating on access_list, the list can get corrupted.
    
    Fix the problem by moving all the logic removing permission events from
    the lists to one place - fanotify_release().
    
    Fixes: 5838d4442bd5 ("fanotify: fix double free of pending permission events")
    Link: http://lkml.kernel.org/r/1473797711-14111-3-git-send-email-jack@suse.cz
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reported-by: Miklos Szeredi <mszeredi@redhat.com>
    Tested-by: Miklos Szeredi <mszeredi@redhat.com>
    Reviewed-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af426ec184a38d257457a22554542d4f9bb7eecd
Author: Jan Kara <jack@suse.cz>
Date:   Mon Sep 19 14:44:27 2016 -0700

    fsnotify: add a way to stop queueing events on group shutdown
    
    commit 12703dbfeb15402260e7554d32a34ac40c233990 upstream.
    
    Implement a function that can be called when a group is being shutdown
    to stop queueing new events to the group.  Fanotify will use this.
    
    Fixes: 5838d4442bd5 ("fanotify: fix double free of pending permission events")
    Link: http://lkml.kernel.org/r/1473797711-14111-2-git-send-email-jack@suse.cz
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc4edddc5186b74442933c4399cdd6fff914c683
Author: Brian Foster <bfoster@redhat.com>
Date:   Fri Aug 26 16:01:59 2016 +1000

    xfs: prevent dropping ioend completions during buftarg wait
    
    commit 800b2694f890cc35a1bda63501fc71c94389d517 upstream.
    
    xfs_wait_buftarg() waits for all pending I/O, drains the ioend
    completion workqueue and walks the LRU until all buffers in the cache
    have been released. This is traditionally an unmount operation` but the
    mechanism is also reused during filesystem freeze.
    
    xfs_wait_buftarg() invokes drain_workqueue() as part of the quiesce,
    which is intended more for a shutdown sequence in that it indicates to
    the queue that new operations are not expected once the drain has begun.
    New work jobs after this point result in a WARN_ON_ONCE() and are
    otherwise dropped.
    
    With filesystem freeze, however, read operations are allowed and can
    proceed during or after the workqueue drain. If such a read occurs
    during the drain sequence, the workqueue infrastructure complains about
    the queued ioend completion work item and drops it on the floor. As a
    result, the buffer remains on the LRU and the freeze never completes.
    
    Despite the fact that the overall buffer cache cleanup is not necessary
    during freeze, fix up this operation such that it is safe to invoke
    during non-unmount quiesce operations. Replace the drain_workqueue()
    call with flush_workqueue(), which runs a similar serialization on
    pending workqueue jobs without causing new jobs to be dropped. This is
    safe for unmount as unmount independently locks out new operations by
    the time xfs_wait_buftarg() is invoked.
    
    cc: <stable@vger.kernel.org>
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ccb99b272a23b2f32327002f715b10d815a86f3
Author: Ian Kent <raven@themaw.net>
Date:   Mon Sep 19 14:44:12 2016 -0700

    autofs: use dentry flags to block walks during expire
    
    commit 7cbdb4a286a60c5d519cb9223fe2134d26870d39 upstream.
    
    Somewhere along the way the autofs expire operation has changed to hold
    a spin lock over expired dentry selection.  The autofs indirect mount
    expired dentry selection is complicated and quite lengthy so it isn't
    appropriate to hold a spin lock over the operation.
    
    Commit 47be61845c77 ("fs/dcache.c: avoid soft-lockup in dput()") added a
    might_sleep() to dput() causing a WARN_ONCE() about this usage to be
    issued.
    
    But the spin lock doesn't need to be held over this check, the autofs
    dentry info.  flags are enough to block walks into dentrys during the
    expire.
    
    I've left the direct mount expire as it is (for now) because it is much
    simpler and quicker than the indirect mount expire and adding spin lock
    release and re-aquires would do nothing more than add overhead.
    
    Fixes: 47be61845c77 ("fs/dcache.c: avoid soft-lockup in dput()")
    Link: http://lkml.kernel.org/r/20160912014017.1773.73060.stgit@pluto.themaw.net
    Signed-off-by: Ian Kent <raven@themaw.net>
    Reported-by: Takashi Iwai <tiwai@suse.de>
    Tested-by: Takashi Iwai <tiwai@suse.de>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: NeilBrown <neilb@suse.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30b54a26af73c470395dd7f2b621e2a6a20a6a7c
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Jun 12 11:24:46 2016 -0400

    autofs races
    
    commit ea01a18494b3d7a91b2f1f2a6a5aaef4741bc294 upstream.
    
    * make autofs4_expire_indirect() skip the dentries being in process of
    expiry
    * do *not* mess with list_move(); making sure that dentry with
    AUTOFS_INF_EXPIRING are not picked for expiry is enough.
    * do not remove NO_RCU when we set EXPIRING, don't bother with smp_mb()
    there.  Clear it at the same time we clear EXPIRING.  Makes a bunch of
    tests simpler.
    * rename NO_RCU to WANT_EXPIRE, which is what it really is.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Ian Kent <raven@themaw.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aea5e0ded7355172d751cdcacf59aa06d0d036e
Author: Thierry Reding <thierry.reding@gmail.com>
Date:   Thu Jan 21 15:04:59 2016 +0100

    pwm: Mark all devices as "might sleep"
    
    commit ff01c944cfa939f3474c28d88223213494aedf0b upstream.
    
    Commit d1cd21427747 ("pwm: Set enable state properly on failed call to
    enable") introduced a mutex that is needed to protect internal state of
    PWM devices. Since that mutex is acquired in pwm_set_polarity() and in
    pwm_enable() and might potentially block, all PWM devices effectively
    become "might sleep".
    
    It's rather pointless to keep the .can_sleep field around, but given
    that there are external users let's postpone the removal for the next
    release cycle.
    
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Fixes: d1cd21427747 ("pwm: Set enable state properly on failed call to enable")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>

commit fd2e3102adb91a481e34923633b1c0fd0fa77f0b
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Aug 31 14:16:44 2016 +0200

    bridge: re-introduce 'fix parsing of MLDv2 reports'
    
    [ Upstream commit 9264251ee2a55bce8fb93826b3f581fb9eb7e2c2 ]
    
    commit bc8c20acaea1 ("bridge: multicast: treat igmpv3 report with
    INCLUDE and no sources as a leave") seems to have accidentally reverted
    commit 47cc84ce0c2f ("bridge: fix parsing of MLDv2 reports"). This
    commit brings back a change to br_ip6_multicast_mld2_report() where
    parsing of MLDv2 reports stops when the first group is successfully
    added to the MDB cache.
    
    Fixes: bc8c20acaea1 ("bridge: multicast: treat igmpv3 report with INCLUDE and no sources as a leave")
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Acked-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: Thadeu Lima de Souza Cascardo <cascardo@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c945f5aac28a81f20f6a5208a6ccab43b8e7a89
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Aug 27 17:33:03 2016 +0100

    net: smc91x: fix SMC accesses
    
    [ Upstream commit 2fb04fdf30192ff1e2b5834e9b7745889ea8bbcb ]
    
    Commit b70661c70830 ("net: smc91x: use run-time configuration on all ARM
    machines") broke some ARM platforms through several mistakes.  Firstly,
    the access size must correspond to the following rule:
    
    (a) at least one of 16-bit or 8-bit access size must be supported
    (b) 32-bit accesses are optional, and may be enabled in addition to
        the above.
    
    Secondly, it provides no emulation of 16-bit accesses, instead blindly
    making 16-bit accesses even when the platform specifies that only 8-bit
    is supported.
    
    Reorganise smc91x.h so we can make use of the existing 16-bit access
    emulation already provided - if 16-bit accesses are supported, use
    16-bit accesses directly, otherwise if 8-bit accesses are supported,
    use the provided 16-bit access emulation.  If neither, BUG().  This
    exactly reflects the driver behaviour prior to the commit being fixed.
    
    Since the conversion incorrectly cut down the available access sizes on
    several platforms, we also need to go through every platform and fix up
    the overly-restrictive access size: Arnd assumed that if a platform can
    perform 32-bit, 16-bit and 8-bit accesses, then only a 32-bit access
    size needed to be specified - not so, all available access sizes must
    be specified.
    
    This likely fixes some performance regressions in doing this: if a
    platform does not support 8-bit accesses, 8-bit accesses have been
    emulated by performing a 16-bit read-modify-write access.
    
    Tested on the Intel Assabet/Neponset platform, which supports only 8-bit
    accesses, which was broken by the original commit.
    
    Fixes: b70661c70830 ("net: smc91x: use run-time configuration on all ARM machines")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Tested-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 339d61ab09bbb7fae7416ec025eb9a9509d5e818
Author: Xander Huff <xander.huff@ni.com>
Date:   Wed Aug 24 16:47:53 2016 -0500

    Revert "phy: IRQ cannot be shared"
    
    [ Upstream commit c3e70edd7c2eed6acd234627a6007627f5c76e8e ]
    
    This reverts:
      commit 33c133cc7598 ("phy: IRQ cannot be shared")
    
    On hardware with multiple PHY devices hooked up to the same IRQ line, allow
    them to share it.
    
    Sergei Shtylyov says:
      "I'm not sure now what was the reason I concluded that the IRQ sharing
      was impossible... most probably I thought that the kernel IRQ handling
      code exited the loop over the IRQ actions once IRQ_HANDLED was returned
      -- which is obviously not so in reality..."
    
    Signed-off-by: Xander Huff <xander.huff@ni.com>
    Signed-off-by: Nathan Sullivan <nathan.sullivan@ni.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3fb2b3bd4f095327a98c484260fb63851d3bb14
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Aug 24 11:01:20 2016 -0700

    net: dsa: bcm_sf2: Fix race condition while unmasking interrupts
    
    [ Upstream commit 4f101c47791cdcb831b3ef1f831b1cc51e4fe03c ]
    
    We kept shadow copies of which interrupt sources we have enabled and
    disabled, but due to an order bug in how intrl2_mask_clear was defined,
    we could run into the following scenario:
    
    CPU0                                    CPU1
    intrl2_1_mask_clear(..)
    sets INTRL2_CPU_MASK_CLEAR
                                            bcm_sf2_switch_1_isr
                                            read INTRL2_CPU_STATUS and masks with stale
                                            irq1_mask value
    updates irq1_mask value
    
    Which would make us loop again and again trying to process and interrupt
    we are not clearing since our copy of whether it was enabled before
    still indicates it was not. Fix this by updating the shadow copy first,
    and then unasking at the HW level.
    
    Fixes: 246d7f773c13 ("net: dsa: add Broadcom SF2 switch driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c03c024fd36db587cb0797408d5c64adf096f678
Author: Paul Blakey <paulb@mellanox.com>
Date:   Thu Aug 18 21:09:05 2016 +0300

    net/mlx5: Added missing check of msg length in verifying its signature
    
    [ Upstream commit 2c0f8ce1b584a4d7b8ff53140d21dfed99834940 ]
    
    Set and verify signature calculates the signature for each of the
    mailbox nodes, even for those that are unused (from cache). Added
    a missing length check to set and verify only those which are used.
    
    While here, also moved the setting of msg's nodes token to where we
    already go over them. This saves a pass because checksum is disabled,
    and the only useful thing remaining that set signature does is setting
    the token.
    
    Fixes: e126ba97dba9 ('mlx5: Add driver for Mellanox Connect-IB
    adapters')
    Signed-off-by: Paul Blakey <paulb@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4be4511af7966b7b0f93d9f129a876458794f2f3
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Sat Jul 23 08:15:04 2016 +0200

    tipc: fix NULL pointer dereference in shutdown()
    
    [ Upstream commit d2fbdf76b85bcdfe57b8ef2ba09d20e8ada79abd ]
    
    tipc_msg_create() can return a NULL skb and if so, we shouldn't try to
    call tipc_node_xmit_skb() on it.
    
        general protection fault: 0000 [#1] PREEMPT SMP KASAN
        CPU: 3 PID: 30298 Comm: trinity-c0 Not tainted 4.7.0-rc7+ #19
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
        task: ffff8800baf09980 ti: ffff8800595b8000 task.ti: ffff8800595b8000
        RIP: 0010:[<ffffffff830bb46b>]  [<ffffffff830bb46b>] tipc_node_xmit_skb+0x6b/0x140
        RSP: 0018:ffff8800595bfce8  EFLAGS: 00010246
        RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000003023b0e0
        RDX: 0000000000000000 RSI: dffffc0000000000 RDI: ffffffff83d12580
        RBP: ffff8800595bfd78 R08: ffffed000b2b7f32 R09: 0000000000000000
        R10: fffffbfff0759725 R11: 0000000000000000 R12: 1ffff1000b2b7f9f
        R13: ffff8800595bfd58 R14: ffffffff83d12580 R15: dffffc0000000000
        FS:  00007fcdde242700(0000) GS:ffff88011af80000(0000) knlGS:0000000000000000
        CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        CR2: 00007fcddde1db10 CR3: 000000006874b000 CR4: 00000000000006e0
        DR0: 00007fcdde248000 DR1: 00007fcddd73d000 DR2: 00007fcdde248000
        DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000090602
        Stack:
         0000000000000018 0000000000000018 0000000041b58ab3 ffffffff83954208
         ffffffff830bb400 ffff8800595bfd30 ffffffff8309d767 0000000000000018
         0000000000000018 ffff8800595bfd78 ffffffff8309da1a 00000000810ee611
        Call Trace:
         [<ffffffff830c84a3>] tipc_shutdown+0x553/0x880
         [<ffffffff825b4a3b>] SyS_shutdown+0x14b/0x170
         [<ffffffff8100334c>] do_syscall_64+0x19c/0x410
         [<ffffffff83295ca5>] entry_SYSCALL64_slow_path+0x25/0x25
        Code: 90 00 b4 0b 83 c7 00 f1 f1 f1 f1 4c 8d 6d e0 c7 40 04 00 00 00 f4 c7 40 08 f3 f3 f3 f3 48 89 d8 48 c1 e8 03 c7 45 b4 00 00 00 00 <80> 3c 30 00 75 78 48 8d 7b 08 49 8d 75 c0 48 b8 00 00 00 00 00
        RIP  [<ffffffff830bb46b>] tipc_node_xmit_skb+0x6b/0x140
         RSP <ffff8800595bfce8>
        ---[ end trace 57b0484e351e71f1 ]---
    
    I feel like we should maybe return -ENOMEM or -ENOBUFS, but I'm not sure
    userspace is equipped to handle that. Anyway, this is better than a GPF
    and looks somewhat consistent with other tipc_msg_create() callers.
    
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d0d2ce6c81ddba2cc9ba7f7dc04c32b2f2812bb
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Fri Aug 12 10:29:13 2016 +0200

    net/irda: handle iriap_register_lsap() allocation failure
    
    [ Upstream commit 5ba092efc7ddff040777ae7162f1d195f513571b ]
    
    If iriap_register_lsap() fails to allocate memory, self->lsap is
    set to NULL. However, none of the callers handle the failure and
    irlmp_connect_request() will happily dereference it:
    
        iriap_register_lsap: Unable to allocated LSAP!
        ================================================================================
        UBSAN: Undefined behaviour in net/irda/irlmp.c:378:2
        member access within null pointer of type 'struct lsap_cb'
        CPU: 1 PID: 15403 Comm: trinity-c0 Not tainted 4.8.0-rc1+ #81
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org
        04/01/2014
         0000000000000000 ffff88010c7e78a8 ffffffff82344f40 0000000041b58ab3
         ffffffff84f98000 ffffffff82344e94 ffff88010c7e78d0 ffff88010c7e7880
         ffff88010630ad00 ffffffff84a5fae0 ffffffff84d3f5c0 000000000000017a
        Call Trace:
         [<ffffffff82344f40>] dump_stack+0xac/0xfc
         [<ffffffff8242f5a8>] ubsan_epilogue+0xd/0x8a
         [<ffffffff824302bf>] __ubsan_handle_type_mismatch+0x157/0x411
         [<ffffffff83b7bdbc>] irlmp_connect_request+0x7ac/0x970
         [<ffffffff83b77cc0>] iriap_connect_request+0xa0/0x160
         [<ffffffff83b77f48>] state_s_disconnect+0x88/0xd0
         [<ffffffff83b78904>] iriap_do_client_event+0x94/0x120
         [<ffffffff83b77710>] iriap_getvaluebyclass_request+0x3e0/0x6d0
         [<ffffffff83ba6ebb>] irda_find_lsap_sel+0x1eb/0x630
         [<ffffffff83ba90c8>] irda_connect+0x828/0x12d0
         [<ffffffff833c0dfb>] SYSC_connect+0x22b/0x340
         [<ffffffff833c7e09>] SyS_connect+0x9/0x10
         [<ffffffff81007bd3>] do_syscall_64+0x1b3/0x4b0
         [<ffffffff845f946a>] entry_SYSCALL64_slow_path+0x25/0x25
        ================================================================================
    
    The bug seems to have been around since forever.
    
    There's more problems with missing error checks in iriap_init() (and
    indeed all of irda_init()), but that's a bigger problem that needs
    very careful review and testing. This patch will fix the most serious
    bug (as it's easily reached from unprivileged userspace).
    
    I have tested my patch with a reproducer.
    
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bb225a04dc3b730844a9d2acb5b4f9307b6e1f9
Author: Lance Richardson <lrichard@redhat.com>
Date:   Tue Aug 9 15:29:42 2016 -0400

    vti: flush x-netns xfrm cache when vti interface is removed
    
    [ Upstream commit a5d0dc810abf3d6b241777467ee1d6efb02575fc ]
    
    When executing the script included below, the netns delete operation
    hangs with the following message (repeated at 10 second intervals):
    
      kernel:unregister_netdevice: waiting for lo to become free. Usage count = 1
    
    This occurs because a reference to the lo interface in the "secure" netns
    is still held by a dst entry in the xfrm bundle cache in the init netns.
    
    Address this problem by garbage collecting the tunnel netns flow cache
    when a cross-namespace vti interface receives a NETDEV_DOWN notification.
    
    A more detailed description of the problem scenario (referencing commands
    in the script below):
    
    (1) ip link add vti_test type vti local 1.1.1.1 remote 1.1.1.2 key 1
    
      The vti_test interface is created in the init namespace. vti_tunnel_init()
      attaches a struct ip_tunnel to the vti interface's netdev_priv(dev),
      setting the tunnel net to &init_net.
    
    (2) ip link set vti_test netns secure
    
      The vti_test interface is moved to the "secure" netns. Note that
      the associated struct ip_tunnel still has tunnel->net set to &init_net.
    
    (3) ip netns exec secure ping -c 4 -i 0.02 -I 192.168.100.1 192.168.200.1
    
      The first packet sent using the vti device causes xfrm_lookup() to be
      called as follows:
    
          dst = xfrm_lookup(tunnel->net, skb_dst(skb), fl, NULL, 0);
    
      Note that tunnel->net is the init namespace, while skb_dst(skb) references
      the vti_test interface in the "secure" namespace. The returned dst
      references an interface in the init namespace.
    
      Also note that the first parameter to xfrm_lookup() determines which flow
      cache is used to store the computed xfrm bundle, so after xfrm_lookup()
      returns there will be a cached bundle in the init namespace flow cache
      with a dst referencing a device in the "secure" namespace.
    
    (4) ip netns del secure
    
      Kernel begins to delete the "secure" namespace.  At some point the
      vti_test interface is deleted, at which point dst_ifdown() changes
      the dst->dev in the cached xfrm bundle flow from vti_test to lo (still
      in the "secure" namespace however).
      Since nothing has happened to cause the init namespace's flow cache
      to be garbage collected, this dst remains attached to the flow cache,
      so the kernel loops waiting for the last reference to lo to go away.
    
    <Begin script>
    ip link add br1 type bridge
    ip link set dev br1 up
    ip addr add dev br1 1.1.1.1/8
    
    ip netns add secure
    ip link add vti_test type vti local 1.1.1.1 remote 1.1.1.2 key 1
    ip link set vti_test netns secure
    ip netns exec secure ip link set vti_test up
    ip netns exec secure ip link s lo up
    ip netns exec secure ip addr add dev lo 192.168.100.1/24
    ip netns exec secure ip route add 192.168.200.0/24 dev vti_test
    ip xfrm policy flush
    ip xfrm state flush
    ip xfrm policy add dir out tmpl src 1.1.1.1 dst 1.1.1.2 \
       proto esp mode tunnel mark 1
    ip xfrm policy add dir in tmpl src 1.1.1.2 dst 1.1.1.1 \
       proto esp mode tunnel mark 1
    ip xfrm state add src 1.1.1.1 dst 1.1.1.2 proto esp spi 1 \
       mode tunnel enc des3_ede 0x112233445566778811223344556677881122334455667788
    ip xfrm state add src 1.1.1.2 dst 1.1.1.1 proto esp spi 1 \
       mode tunnel enc des3_ede 0x112233445566778811223344556677881122334455667788
    
    ip netns exec secure ping -c 4 -i 0.02 -I 192.168.100.1 192.168.200.1
    
    ip netns del secure
    <End script>
    
    Reported-by: Hangbin Liu <haliu@redhat.com>
    Reported-by: Jan Tluka <jtluka@redhat.com>
    Signed-off-by: Lance Richardson <lrichard@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b5390d7b6abf1fe04ccc6437691881c369f7ff9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Sep 1 14:43:53 2016 -0700

    af_unix: split 'u->readlock' into two: 'iolock' and 'bindlock'
    
    commit 6e1ce3c3451291142a57c4f3f6f999a29fb5b3bc upstream.
    
    Right now we use the 'readlock' both for protecting some of the af_unix
    IO path and for making the bind be single-threaded.
    
    The two are independent, but using the same lock makes for a nasty
    deadlock due to ordering with regards to filesystem locking.  The bind
    locking would want to nest outside the VSF pathname locking, but the IO
    locking wants to nest inside some of those same locks.
    
    We tried to fix this earlier with commit c845acb324aa ("af_unix: Fix
    splice-bind deadlock") which moved the readlock inside the vfs locks,
    but that caused problems with overlayfs that will then call back into
    filesystem routines that take the lock in the wrong order anyway.
    
    Splitting the locks means that we can go back to having the bind lock be
    the outermost lock, and we don't have any deadlocks with lock ordering.
    
    Acked-by: Rainer Weikusat <rweikusat@cyberadapt.com>
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 941f6995440400a67cebce678e612459ea60b96b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Sep 1 14:56:49 2016 -0700

    Revert "af_unix: Fix splice-bind deadlock"
    
    commit 38f7bd94a97b542de86a2be9229289717e33a7a4 upstream.
    
    This reverts commit c845acb324aa85a39650a14e7696982ceea75dc1.
    
    It turns out that it just replaces one deadlock with another one: we can
    still get the wrong lock ordering with the readlock due to overlayfs
    calling back into the filesystem layer and still taking the vfs locks
    after the readlock.
    
    The proper solution ends up being to just split the readlock into two
    pieces: the bind lock (taken *outside* the vfs locks) and the IO lock
    (taken *inside* the filesystem locks).  The two locks are independent
    anyway.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reviewed-by: Shmulik Ladkani <shmulik.ladkani@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f357a79839f95f5ea7baf1c1366d64796d833bca
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Thu Sep 1 22:18:34 2016 -0700

    bonding: Fix bonding crash
    
    [ Upstream commit 24b27fc4cdf9e10c5e79e5923b6b7c2c5c95096c ]
    
    Following few steps will crash kernel -
    
      (a) Create bonding master
          > modprobe bonding miimon=50
      (b) Create macvlan bridge on eth2
          > ip link add link eth2 dev mvl0 address aa:0:0:0:0:01 \
               type macvlan
      (c) Now try adding eth2 into the bond
          > echo +eth2 > /sys/class/net/bond0/bonding/slaves
          <crash>
    
    Bonding does lots of things before checking if the device enslaved is
    busy or not.
    
    In this case when the notifier call-chain sends notifications, the
    bond_netdev_event() assumes that the rx_handler /rx_handler_data is
    registered while the bond_enslave() hasn't progressed far enough to
    register rx_handler for the new slave.
    
    This patch adds a rx_handler check that can be performed right at the
    beginning of the enslave code to avoid getting into this situation.
    
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56e5ad1e1d7a2ab2d79ef004a29d15e0a137a0d0
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Fri Jan 22 13:41:42 2016 +0100

    megaraid: fix null pointer check in megasas_detach_one().
    
    commit 546e559c79b1a8d27c23262907a00fc209e392a0 upstream.
    
    The pd_seq_sync pointer can't be NULL, we have to check its entries
    instead.
    
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3718ed1df970f743f9f20cb4234dd56ed6f18da
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:24:10 2016 +0100

    nouveau: fix nv40_perfctr_next() cleanup regression
    
    commit 86d65b7e7a0c927d07d18605c276d0f142438ead upstream.
    
    gcc-6 warns about code in the nouveau driver that is obviously silly:
    
    drivers/gpu/drm/nouveau/nvkm/engine/pm/nv40.c: In function 'nv40_perfctr_next':
    drivers/gpu/drm/nouveau/nvkm/engine/pm/nv40.c:62:19: warning: self-comparison always evaluats to false [-Wtautological-compare]
      if (pm->sequence != pm->sequence) {
    
    The behavior was accidentally introduced in a patch described as "This is
    purely preparation for upcoming commits, there should be no code changes here.".
    As far as I can tell, that was true for the rest of that patch except for
    this one function, which has been changed to a NOP.
    
    This patch restores the original behavior.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 8c1aeaa13954 ("drm/nouveau/pm: cosmetic changes")
    Reviewed-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c4e9913a114c01991dc3ae455a1d126e440251e
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Jan 23 19:33:10 2016 +0000

    Staging: iio: adc: fix indent on break statement
    
    commit b6acb0cfc21293a1bfc283e9217f58f7474ef728 upstream.
    
    Fix indent warning when building with gcc 6:
    drivers/staging/iio/adc/ad7192.c:239:4: warning: statement is indented
      as if it were guarded by... [-Wmisleading-indentation]
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 682c360eb26f819be942956ce404064839123337
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu May 19 09:58:49 2016 +0200

    iwlegacy: avoid warning about missing braces
    
    commit 2cce76c3fab410520610a7d2f52faebc3cfcf843 upstream.
    
    gcc-6 warns about code in il3945_hw_txq_ctx_free() being
    somewhat ambiguous:
    
    drivers/net/wireless/intel/iwlegacy/3945.c:1022:5: warning: suggest explicit braces to avoid ambiguous 'else' [-Wparentheses]
    
    This adds a set of curly braces to avoid the warning.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fff631e5218df89c508ac2a5cceb7c693ebde68
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:18:37 2016 +0100

    ath9k: fix misleading indentation
    
    commit 362210e0dff4eb7bb36a9b34dbef3b39d779d95e upstream.
    
    A cleanup patch in linux-3.18 moved around some code in the ath9k
    driver and left some code to be indented in a misleading way,
    made worse by the addition of some new code for p2p mode, as
    discovered by a new gcc-6 warning:
    
    drivers/net/wireless/ath/ath9k/init.c: In function 'ath9k_set_hw_capab':
    drivers/net/wireless/ath/ath9k/init.c:851:4: warning: statement is indented as if it were guarded by... [-Wmisleading-indentation]
        hw->wiphy->iface_combinations = if_comb;
        ^~
    drivers/net/wireless/ath/ath9k/init.c:847:3: note: ...this 'if' clause, but it is not
       if (ath9k_is_chanctx_enabled())
       ^~
    
    The code is in fact correct, but the indentation is not, so I'm
    reformatting it as it should have been after the original cleanup.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 499afaccf6f3 ("ath9k: Isolate ath9k_use_chanctx module parameter")
    Fixes: eb61f9f623f7 ("ath9k: advertise p2p dev support when chanctx")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fb33fb721dcc75b523af322c3724e5cbf7f382c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 19:40:08 2016 -0300

    am437x-vfpe: fix typo in vpfe_get_app_input_index
    
    commit 0fb504001192c1df62c847a8bb6558753c36ebef upstream.
    
    gcc-6 points out an obviously silly comparison in vpfe_get_app_input_index():
    
    drivers/media/platform/am437x/am437x-vpfe.c: In function 'vpfe_get_app_input_index':
    drivers/media/platform/am437x/am437x-vpfe.c:1709:27: warning: self-comparison always evaluats to true [-Wtautological-compare]
           client->adapter->nr == client->adapter->nr) {
                               ^~
    
    This was introduced in a slighly incorrect conversion, and it's
    clear that the comparison was meant to compare the iterator
    to the current subdev instead, as we do in the line above.
    
    Fixes: d37232390fd4 ("[media] media: am437x-vpfe: match the OF node/i2c addr instead of name")
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c48692f59bca5792245bf723bc484bebd444a4f2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 27 20:03:31 2016 -0700

    Add braces to avoid "ambiguous ‘else’" compiler warnings
    
    commit 194dc870a5890e855ecffb30f3b80ba7c88f96d6 upstream.
    
    Some of our "for_each_xyz()" macro constructs make gcc unhappy about
    lack of braces around if-statements inside or outside the loop, because
    the loop construct itself has a "if-then-else" statement inside of it.
    
    The resulting warnings look something like this:
    
      drivers/gpu/drm/i915/i915_debugfs.c: In function ‘i915_dump_lrc’:
      drivers/gpu/drm/i915/i915_debugfs.c:2103:6: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
         if (ctx != dev_priv->kernel_context)
            ^
    
    even if the code itself is fine.
    
    Since the warning is fairly easy to avoid by adding a braces around the
    if-statement near the for_each_xyz() construct, do so, rather than
    disabling the otherwise potentially useful warning.
    
    (The if-then-else statements used in the "for_each_xyz()" constructs are
    designed to be inherently safe even with no braces, but in this case
    it's quite understandable that gcc isn't really able to tell that).
    
    This finally leaves the standard "allmodconfig" build with just a
    handful of remaining warnings, so new and valid warnings hopefully will
    stand out.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc43ac8bd632ea7ea3dc210ab8ed11e723e28afd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:18:38 2016 +0100

    net: caif: fix misleading indentation
    
    commit 8e0cc8c326d99e41468c96fea9785ab78883a281 upstream.
    
    gcc points out code that is not indented the way it is
    interpreted:
    
    net/caif/cfpkt_skbuff.c: In function 'cfpkt_setlen':
    net/caif/cfpkt_skbuff.c:289:4: error: statement is indented as if it were guarded by... [-Werror=misleading-indentation]
        return cfpkt_getlen(pkt);
        ^~~~~~
    net/caif/cfpkt_skbuff.c:286:3: note: ...this 'else' clause, but it is not
       else
       ^~~~
    
    It is clear from the context that not returning here would be
    a bug, as we'd end up passing a negative length into a function
    that takes a u16 length, so it is not missing curly braces
    here, and I'm assuming that the indentation is the only part
    that's wrong about it.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a52031beb067ed3318c3ef226af5fa7223a7787d
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Thu Jul 28 22:30:43 2016 -0400

    Makefile: Mute warning for __builtin_return_address(>0) for tracing only
    
    commit 377ccbb483738f84400ddf5840c7dd8825716985 upstream.
    
    With the latest gcc compilers, they give a warning if
    __builtin_return_address() parameter is greater than 0. That is because if
    it is used by a function called by a top level function (or in the case of
    the kernel, by assembly), it can try to access stack frames outside the
    stack and crash the system.
    
    The tracing system uses __builtin_return_address() of up to 2! But it is
    well aware of the dangers that it may have, and has even added precautions
    to protect against it (see the thunk code in arch/x86/entry/thunk*.S)
    
    Linus originally added KBUILD_CFLAGS that would suppress the warning for the
    entire kernel, as simply adding KBUILD_CFLAGS to the tracing directory
    wouldn't work. The tracing directory plays a bit with the CFLAGS and
    requires a little more logic.
    
    This adds that special logic to only suppress the warning for the tracing
    directory. If it is used anywhere else outside of tracing, the warning will
    still be triggered.
    
    Link: http://lkml.kernel.org/r/20160728223043.51996267@grimm.local.home
    
    Tested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a521e942bd9b903935d4c79993bf6d0b6d5154c7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 27 19:03:04 2016 -0700

    Disable "frame-address" warning
    
    commit 124a3d88fa20e1869fc229d7d8c740cc81944264 upstream.
    
    Newer versions of gcc warn about the use of __builtin_return_address()
    with a non-zero argument when "-Wall" is specified:
    
      kernel/trace/trace_irqsoff.c: In function ‘stop_critical_timings’:
      kernel/trace/trace_irqsoff.c:433:86: warning: calling ‘__builtin_return_address’ with a nonzero argument is unsafe [-Wframe-address]
         stop_critical_timing(CALLER_ADDR0, CALLER_ADDR1);
      [ .. repeats a few times for other similar cases .. ]
    
    It is true that a non-zero argument is somewhat dangerous, and we do not
    actually have very many uses of that in the kernel - but the ftrace code
    does use it, and as Stephen Rostedt says:
    
     "We are well aware of the danger of using __builtin_return_address() of
      > 0.  In fact that's part of the reason for having the "thunk" code in
      x86 (See arch/x86/entry/thunk_{64,32}.S).  [..] it adds extra frames
      when tracking irqs off sections, to prevent __builtin_return_address()
      from accessing bad areas.  In fact the thunk_32.S states: 'Trampoline to
      trace irqs off.  (otherwise CALLER_ADDR1 might crash)'."
    
    For now, __builtin_return_address() with a non-zero argument is the best
    we can do, and the warning is not helpful and can end up making people
    miss other warnings for real problems.
    
    So disable the frame-address warning on compilers that need it.
    
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3da2a4cb6e909dd45be3009379f0d29b9a9e369d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 27 13:17:41 2016 -0700

    Disable "maybe-uninitialized" warning globally
    
    commit 6e8d666e925333c55378e8d5540a8a9ee0eea9c5 upstream.
    
    Several build configurations had already disabled this warning because
    it generates a lot of false positives.  But some had not, and it was
    still enabled for "allmodconfig" builds, for example.
    
    Looking at the warnings produced, every single one I looked at was a
    false positive, and the warnings are frequent enough (and big enough)
    that they can easily hide real problems that you don't notice in the
    noise generated by -Wmaybe-uninitialized.
    
    The warning is good in theory, but this is a classic case of a warning
    that causes more problems than the warning can solve.
    
    If gcc gets better at avoiding false positives, we may be able to
    re-enable this warning.  But as is, we're better off without it, and I
    want to be able to see the *real* warnings.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cd4d22328dc4a019e00508c66ecd4cd837597b5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Apr 25 17:35:31 2016 +0200

    gcov: disable -Wmaybe-uninitialized warning
    
    commit e72e2dfe7c16ffbfbabf9cb24adc6d9f93a4fe37 upstream.
    
    When gcov profiling is enabled, we see a lot of spurious warnings about
    possibly uninitialized variables being used:
    
    arch/arm/mm/dma-mapping.c: In function 'arm_coherent_iommu_map_page':
    arch/arm/mm/dma-mapping.c:1085:16: warning: 'start' may be used uninitialized in this function [-Wmaybe-uninitialized]
    drivers/clk/st/clk-flexgen.c: In function 'st_of_flexgen_setup':
    drivers/clk/st/clk-flexgen.c:323:9: warning: 'num_parents' may be used uninitialized in this function [-Wmaybe-uninitialized]
    kernel/cgroup.c: In function 'cgroup_mount':
    kernel/cgroup.c:2119:11: warning: 'root' may be used uninitialized in this function [-Wmaybe-uninitialized]
    
    All of these are false positives, so it seems better to just disable
    the warnings whenever GCOV is enabled. Most users don't enable GCOV,
    and based on a prior patch, it is now also disabled for 'allmodconfig'
    builds, so there should be no downsides of doing this.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 605623774e714a460bec332d81ab3da194a26ae3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Apr 25 17:35:28 2016 +0200

    Kbuild: disable 'maybe-uninitialized' warning for CONFIG_PROFILE_ALL_BRANCHES
    
    commit 815eb71e7149ecce40db9dd0ad09c4dd9d33c60f upstream.
    
    CONFIG_PROFILE_ALL_BRANCHES confuses gcc-5.x to the degree that it prints
    incorrect warnings about a lot of variables that it thinks can be used
    uninitialized, e.g.:
    
    i2c/busses/i2c-diolan-u2c.c: In function 'diolan_usb_xfer':
    i2c/busses/i2c-diolan-u2c.c:391:16: warning: 'byte' may be used uninitialized in this function
    iio/gyro/itg3200_core.c: In function 'itg3200_probe':
    iio/gyro/itg3200_core.c:213:6: warning: 'val' may be used uninitialized in this function
    leds/leds-lp55xx-common.c: In function 'lp55xx_update_bits':
    leds/leds-lp55xx-common.c:350:6: warning: 'tmp' may be used uninitialized in this function
    misc/bmp085.c: In function 'show_pressure':
    misc/bmp085.c:363:10: warning: 'pressure' may be used uninitialized in this function
    power/ds2782_battery.c: In function 'ds2786_get_capacity':
    power/ds2782_battery.c:214:17: warning: 'raw' may be used uninitialized in this function
    
    These are all false positives that either rob someone's time when trying
    to figure out whether they are real, or they get people to send wrong
    patches to shut up the warnings.
    
    Nobody normally wants to run a CONFIG_PROFILE_ALL_BRANCHES kernel in
    production, so disabling the whole class of warnings for this configuration
    has no serious downsides either.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Steven Rostedt <rostedtgoodmis.org>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d772ec1314f80de536aafc729855bcf3e691f997
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Sat Apr 2 21:38:53 2016 +0200

    kbuild: forbid kernel directory to contain spaces and colons
    
    commit 51193b76bfff5027cf96ba63effae808ad67cca7 upstream.
    
    When the kernel path contains a space or a colon somewhere in the path
    name, the modules_install target doesn't work anymore, as the path names
    are not enclosed in double quotes. It is also supposed that and O= build
    will suffer from the same weakness as modules_install.
    
    Instead of checking and improving kbuild to resist to directories
    including these characters, error out early to prevent any build if the
    kernel's main directory contains a space.
    
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b6bbc3d96729c18eef9a3c39021967220bcc5e4
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Mar 3 08:53:43 2016 -0600

    tools: Support relative directory path for 'O='
    
    commit e17cf3a80d4ba0c4e40bf1a89deb1354c2e10e14 upstream.
    
    Running "make O=foo" (with a relative directory path) fails with:
    
      scripts/Makefile.include:3: *** O=foo does not exist.  Stop.
      /home/jpoimboe/git/linux/Makefile:1547: recipe for target 'tools/objtool' failed
    
    The tools Makefile gets confused by the relative path and tries to build
    objtool in tools/foo.  Convert the output directory to an absolute path
    before passing it to the tools Makefile.
    
    Reported-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-next@vger.kernel.org
    Cc: linux@roeck-us.net
    Cc: live-patching@vger.kernel.org
    Link: http://lkml.kernel.org/r/94a078c6c998fac9f01a14f574008bf7dff40191.1457016803.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97283248f58444a1b64c24b7ee1be5e708906e86
Author: Wang YanQing <udknight@gmail.com>
Date:   Fri Dec 11 00:35:19 2015 +0800

    Makefile: revert "Makefile: Document ability to make file.lst and file.S" partially
    
    commit 40ab87a4003c7952976ce901a2b9ece5ed833168 upstream.
    
    Commit 627189797807 ("Makefile: Document ability to make file.lst
    and file.S") document ability to make file.S, but there isn't such
    ability in kbuild, so revert it.
    
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Michal Marek <mmarek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 252644d83bf7c46d199687c4af2f0ee125ca7f62
Author: Michal Marek <mmarek@suse.cz>
Date:   Thu Dec 10 15:53:06 2015 +0100

    kbuild: Do not run modules_install and install in paralel
    
    commit a85a41ed69f27c4c667d8c418df14b4fb220c4ad upstream.
    
    Based on a x86-only patch by Andy Lutomirski <luto@amacapital.net>
    
    With modular kernels, 'make install' is going to need the installed
    modules at some point to generate the initramfs.
    
    Signed-off-by: Michal Marek <mmarek@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf5fa7b898f487def896acaf79f3ea3bc4827e8c
Author: Ashish Samant <ashish.samant@oracle.com>
Date:   Mon Sep 19 14:44:42 2016 -0700

    ocfs2: fix start offset to ocfs2_zero_range_for_truncate()
    
    commit d21c353d5e99c56cdd5b5c1183ffbcaf23b8b960 upstream.
    
    If we punch a hole on a reflink such that following conditions are met:
    
    1. start offset is on a cluster boundary
    2. end offset is not on a cluster boundary
    3. (end offset is somewhere in another extent) or
       (hole range > MAX_CONTIG_BYTES(1MB)),
    
    we dont COW the first cluster starting at the start offset.  But in this
    case, we were wrongly passing this cluster to
    ocfs2_zero_range_for_truncate() to zero out.  This will modify the
    cluster in place and zero it in the source too.
    
    Fix this by skipping this cluster in such a scenario.
    
    To reproduce:
    
    1. Create a random file of say 10 MB
         xfs_io -c 'pwrite -b 4k 0 10M' -f 10MBfile
    2. Reflink  it
         reflink -f 10MBfile reflnktest
    3. Punch a hole at starting at cluster boundary  with range greater that
    1MB. You can also use a range that will put the end offset in another
    extent.
         fallocate -p -o 0 -l 1048615 reflnktest
    4. sync
    5. Check the  first cluster in the source file. (It will be zeroed out).
        dd if=10MBfile iflag=direct bs=<cluster size> count=1 | hexdump -C
    
    Link: http://lkml.kernel.org/r/1470957147-14185-1-git-send-email-ashish.samant@oracle.com
    Signed-off-by: Ashish Samant <ashish.samant@oracle.com>
    Reported-by: Saar Maoz <saar.maoz@oracle.com>
    Reviewed-by: Srinivas Eeda <srinivas.eeda@oracle.com>
    Cc: Mark Fasheh <mfasheh@suse.de>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <joseph.qi@huawei.com>
    Cc: Eric Ren <zren@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1ce664e687d3d0f83b9e0a4014b96353a641c93
Author: Joseph Qi <joseph.qi@huawei.com>
Date:   Mon Sep 19 14:43:55 2016 -0700

    ocfs2/dlm: fix race between convert and migration
    
    commit e6f0c6e6170fec175fe676495f29029aecdf486c upstream.
    
    Commit ac7cf246dfdb ("ocfs2/dlm: fix race between convert and recovery")
    checks if lockres master has changed to identify whether new master has
    finished recovery or not.  This will introduce a race that right after
    old master does umount ( means master will change), a new convert
    request comes.
    
    In this case, it will reset lockres state to DLM_RECOVERING and then
    retry convert, and then fail with lockres->l_action being set to
    OCFS2_AST_INVALID, which will cause inconsistent lock level between
    ocfs2 and dlm, and then finally BUG.
    
    Since dlm recovery will clear lock->convert_pending in
    dlm_move_lockres_to_recovery_list, we can use it to correctly identify
    the race case between convert and recovery.  So fix it.
    
    Fixes: ac7cf246dfdb ("ocfs2/dlm: fix race between convert and recovery")
    Link: http://lkml.kernel.org/r/57CE1569.8010704@huawei.com
    Signed-off-by: Joseph Qi <joseph.qi@huawei.com>
    Signed-off-by: Jun Piao <piaojun@huawei.com>
    Cc: Mark Fasheh <mfasheh@suse.de>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2426cdb3f4a33704f1a8f9ee167f82ef5be516ba
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed Sep 7 18:42:08 2016 +0800

    crypto: echainiv - Replace chaining with multiplication
    
    commit 53a5d5ddccf849dbc27a8c1bba0b43c3a45fb792 upstream.
    
    The current implementation uses a global per-cpu array to store
    data which are used to derive the next IV.  This is insecure as
    the attacker may change the stored data.
    
    This patch removes all traces of chaining and replaces it with
    multiplication of the salt and the sequence number.
    
    Fixes: a10f554fa7e0 ("crypto: echainiv - Add encrypted chain IV...")
    Reported-by: Mathias Krause <minipli@googlemail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c95a8a481efa5716b847b75f9c8b26f65844362
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Sep 13 14:43:29 2016 +0800

    crypto: skcipher - Fix blkcipher walk OOM crash
    
    commit acdb04d0b36769b3e05990c488dc74d8b7ac8060 upstream.
    
    When we need to allocate a temporary blkcipher_walk_next and it
    fails, the code is supposed to take the slow path of processing
    the data block by block.  However, due to an unrelated change
    we instead end up dereferencing the NULL pointer.
    
    This patch fixes it by moving the unrelated bsize setting out
    of the way so that we enter the slow path as inteded.
    
    Fixes: 7607bd8ff03b ("[CRYPTO] blkcipher: Added blkcipher_walk_virt_block")
    Reported-by: xiakaixu <xiakaixu@huawei.com>
    Reported-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9246fd26f99d70c81d3ec90a4b8dece0c2d7b930
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Sep 13 09:48:52 2016 +0100

    crypto: arm/aes-ctr - fix NULL dereference in tail processing
    
    commit f82e90b28654804ab72881d577d87c3d5c65e2bc upstream.
    
    The AES-CTR glue code avoids calling into the blkcipher API for the
    tail portion of the walk, by comparing the remainder of walk.nbytes
    modulo AES_BLOCK_SIZE with the residual nbytes, and jumping straight
    into the tail processing block if they are equal. This tail processing
    block checks whether nbytes != 0, and does nothing otherwise.
    
    However, in case of an allocation failure in the blkcipher layer, we
    may enter this code with walk.nbytes == 0, while nbytes > 0. In this
    case, we should not dereference the source and destination pointers,
    since they may be NULL. So instead of checking for nbytes != 0, check
    for (walk.nbytes % AES_BLOCK_SIZE) != 0, which implies the former in
    non-error conditions.
    
    Fixes: 86464859cc77 ("crypto: arm - AES in ECB/CBC/CTR/XTS modes using ARMv8 Crypto Extensions")
    Reported-by: xiakaixu <xiakaixu@huawei.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e2d986d8b2f95cfd4c2c0528cff74ce42a4e2a8
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Sep 13 09:48:53 2016 +0100

    crypto: arm64/aes-ctr - fix NULL dereference in tail processing
    
    commit 2db34e78f126c6001d79d3b66ab1abb482dc7caa upstream.
    
    The AES-CTR glue code avoids calling into the blkcipher API for the
    tail portion of the walk, by comparing the remainder of walk.nbytes
    modulo AES_BLOCK_SIZE with the residual nbytes, and jumping straight
    into the tail processing block if they are equal. This tail processing
    block checks whether nbytes != 0, and does nothing otherwise.
    
    However, in case of an allocation failure in the blkcipher layer, we
    may enter this code with walk.nbytes == 0, while nbytes > 0. In this
    case, we should not dereference the source and destination pointers,
    since they may be NULL. So instead of checking for nbytes != 0, check
    for (walk.nbytes % AES_BLOCK_SIZE) != 0, which implies the former in
    non-error conditions.
    
    Fixes: 49788fe2a128 ("arm64/crypto: AES-ECB/CBC/CTR/XTS using ARMv8 NEON and Crypto Extensions")
    Reported-by: xiakaixu <xiakaixu@huawei.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c867a11289ee74c4594a96ccccac16f4cc29519e
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Aug 22 11:31:10 2016 -0700

    tcp: properly scale window in tcp_v[46]_reqsk_send_ack()
    
    [ Upstream commit 20a2b49fc538540819a0c552877086548cff8d8d ]
    
    When sending an ack in SYN_RECV state, we must scale the offered
    window if wscale option was negotiated and accepted.
    
    Tested:
     Following packetdrill test demonstrates the issue :
    
    0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
    +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
    
    +0 bind(3, ..., ...) = 0
    +0 listen(3, 1) = 0
    
    // Establish a connection.
    +0 < S 0:0(0) win 20000 <mss 1000,sackOK,wscale 7, nop, TS val 100 ecr 0>
    +0 > S. 0:0(0) ack 1 win 28960 <mss 1460,sackOK, TS val 100 ecr 100, nop, wscale 7>
    
    +0 < . 1:11(10) ack 1 win 156 <nop,nop,TS val 99 ecr 100>
    // check that window is properly scaled !
    +0 > . 1:1(0) ack 1 win 226 <nop,nop,TS val 200 ecr 100>
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>

commit 0f55fa7541d7ff34a6690438bb00b78521b98b54
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Aug 17 05:56:26 2016 -0700

    tcp: fix use after free in tcp_xmit_retransmit_queue()
    
    [ Upstream commit bb1fceca22492109be12640d49f5ea5a544c6bb4 ]
    
    When tcp_sendmsg() allocates a fresh and empty skb, it puts it at the
    tail of the write queue using tcp_add_write_queue_tail()
    
    Then it attempts to copy user data into this fresh skb.
    
    If the copy fails, we undo the work and remove the fresh skb.
    
    Unfortunately, this undo lacks the change done to tp->highest_sack and
    we can leave a dangling pointer (to a freed skb)
    
    Later, tcp_xmit_retransmit_queue() can dereference this pointer and
    access freed memory. For regular kernels where memory is not unmapped,
    this might cause SACK bugs because tcp_highest_sack_seq() is buggy,
    returning garbage instead of tp->snd_nxt, but with various debug
    features like CONFIG_DEBUG_PAGEALLOC, this can crash the kernel.
    
    This bug was found by Marco Grassi thanks to syzkaller.
    
    Fixes: 6859d49475d4 ("[TCP]: Abstract tp->highest_sack accessing & point to next skb")
    Reported-by: Marco Grassi <marco.gra@gmail.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Ilpo Järvinen <ilpo.jarvinen@helsinki.fi>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>

commit 98418550e124ec047918df8b3bb587e60bd39a8a
Author: Artem Germanov <agermanov@anchorfree.com>
Date:   Wed Sep 7 10:49:36 2016 -0700

    tcp: cwnd does not increase in TCP YeAH
    
    [ Upstream commit db7196a0d0984b933ccf2cd6a60e26abf466e8a3 ]
    
    Commit 76174004a0f19785a328f40388e87e982bbf69b9
    (tcp: do not slow start when cwnd equals ssthresh )
    introduced regression in TCP YeAH. Using 100ms delay 1% loss virtual
    ethernet link kernel 4.2 shows bandwidth ~500KB/s for single TCP
    connection and kernel 4.3 and above (including 4.8-rc4) shows bandwidth
    ~100KB/s.
       That is caused by stalled cwnd when cwnd equals ssthresh. This patch
    fixes it by proper increasing cwnd in this case.
    
    Signed-off-by: Artem Germanov <agermanov@anchorfree.com>
    Acked-by: Dmitry Adamushko <d.adamushko@anchorfree.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Holger Hoffstätte <holger@applied-asynchrony.com>

commit ea7dd213c1e3be9eeb6786affb7766aeca232439
Author: Dave Jones <davej@codemonkey.org.uk>
Date:   Fri Sep 2 14:39:50 2016 -0400

    ipv6: release dst in ping_v6_sendmsg
    
    [ Upstream commit 03c2778a938aaba0893f6d6cdc29511d91a79848 ]
    
    Neither the failure or success paths of ping_v6_sendmsg release
    the dst it acquires.  This leads to a flood of warnings from
    "net/core/dst.c:288 dst_release" on older kernels that
    don't have 8bf4ada2e21378816b28205427ee6b0e1ca4c5f1 backported.
    
    That patch optimistically hoped this had been fixed post 3.10, but
    it seems at least one case wasn't, where I've seen this triggered
    a lot from machines doing unprivileged icmp sockets.
    
    Cc: Martin Lau <kafai@fb.com>
    Signed-off-by: Dave Jones <davej@codemonkey.org.uk>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>

commit 6b8076b8a76bc7f3d51e51b9fb5b35853cc74138
Author: David Forster <dforster@brocade.com>
Date:   Wed Aug 3 15:13:01 2016 +0100

    ipv4: panic in leaf_walk_rcu due to stale node pointer
    
    [ Upstream commit 94d9f1c5906b20053efe375b6d66610bca4b8b64 ]
    
    Panic occurs when issuing "cat /proc/net/route" whilst
    populating FIB with > 1M routes.
    
    Use of cached node pointer in fib_route_get_idx is unsafe.
    
     BUG: unable to handle kernel paging request at ffffc90001630024
     IP: [<ffffffff814cf6a0>] leaf_walk_rcu+0x10/0xe0
     PGD 11b08d067 PUD 11b08e067 PMD dac4b067 PTE 0
     Oops: 0000 [#1] SMP
     Modules linked in: nfsd auth_rpcgss oid_registry nfs_acl nfs lockd grace fscac
     snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep virti
     acpi_cpufreq button parport_pc ppdev lp parport autofs4 ext4 crc16 mbcache jbd
    tio_ring virtio floppy uhci_hcd ehci_hcd usbcore usb_common libata scsi_mod
     CPU: 1 PID: 785 Comm: cat Not tainted 4.2.0-rc8+ #4
     Hardware name: Bochs Bochs, BIOS Bochs 01/01/2007
     task: ffff8800da1c0bc0 ti: ffff88011a05c000 task.ti: ffff88011a05c000
     RIP: 0010:[<ffffffff814cf6a0>]  [<ffffffff814cf6a0>] leaf_walk_rcu+0x10/0xe0
     RSP: 0018:ffff88011a05fda0  EFLAGS: 00010202
     RAX: ffff8800d8a40c00 RBX: ffff8800da4af940 RCX: ffff88011a05ff20
     RDX: ffffc90001630020 RSI: 0000000001013531 RDI: ffff8800da4af950
     RBP: 0000000000000000 R08: ffff8800da1f9a00 R09: 0000000000000000
     R10: ffff8800db45b7e4 R11: 0000000000000246 R12: ffff8800da4af950
     R13: ffff8800d97a74c0 R14: 0000000000000000 R15: ffff8800d97a7480
     FS:  00007fd3970e0700(0000) GS:ffff88011fd00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
     CR2: ffffc90001630024 CR3: 000000011a7e4000 CR4: 00000000000006e0
     Stack:
      ffffffff814d00d3 0000000000000000 ffff88011a05ff20 ffff8800da1f9a00
      ffffffff811dd8b9 0000000000000800 0000000000020000 00007fd396f35000
      ffffffff811f8714 0000000000003431 ffffffff8138dce0 0000000000000f80
     Call Trace:
      [<ffffffff814d00d3>] ? fib_route_seq_start+0x93/0xc0
      [<ffffffff811dd8b9>] ? seq_read+0x149/0x380
      [<ffffffff811f8714>] ? fsnotify+0x3b4/0x500
      [<ffffffff8138dce0>] ? process_echoes+0x70/0x70
      [<ffffffff8121cfa7>] ? proc_reg_read+0x47/0x70
      [<ffffffff811bb823>] ? __vfs_read+0x23/0xd0
      [<ffffffff811bbd42>] ? rw_verify_area+0x52/0xf0
      [<ffffffff811bbe61>] ? vfs_read+0x81/0x120
      [<ffffffff811bcbc2>] ? SyS_read+0x42/0xa0
      [<ffffffff81549ab2>] ? entry_SYSCALL_64_fastpath+0x16/0x75
     Code: 48 85 c0 75 d8 f3 c3 31 c0 c3 f3 c3 66 66 66 66 66 66 2e 0f 1f 84 00 00
    a 04 89 f0 33 02 44 89 c9 48 d3 e8 0f b6 4a 05 49 89
     RIP  [<ffffffff814cf6a0>] leaf_walk_rcu+0x10/0xe0
      RSP <ffff88011a05fda0>
     CR2: ffffc90001630024
    
    Signed-off-by: Dave Forster <dforster@brocade.com>
    Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>

commit daef25aa900236a25d1cadc272beefc86713ca9f
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Tue Aug 2 14:05:33 2016 -0700

    reiserfs: fix "new_insert_key may be used uninitialized ..."
    
    commit 0a11b9aae49adf1f952427ef1a1d9e793dd6ffb6 upstream.
    
    new_insert_key only makes any sense when it's associated with a
    new_insert_ptr, which is initialized to NULL and changed to a
    buffer_head when we also initialize new_insert_key.  We can key off of
    that to avoid the uninitialized warning.
    
    Link: http://lkml.kernel.org/r/5eca5ffb-2155-8df2-b4a2-f162f105efed@suse.com
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29bd03596e9511fa2f1a199d3a7603da28b32899
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat Sep 24 23:29:51 2016 +0200

    Fix build warning in kernel/cpuset.c
    
    >           2 ../kernel/cpuset.c:2101:11: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
    >           1 ../kernel/cpuset.c:2101:2: warning: initialization from incompatible pointer type
    >           1 ../kernel/cpuset.c:2101:2: warning: (near initialization for 'cpuset_cgrp_subsys.fork')
    
    This got introduced by 06ec7a1d7646 ("cpuset: make sure new tasks
    conform to the current config of the cpuset"). In the upstream
    kernel, the function prototype was changed as of b53202e63089
    ("cgroup: kill cgrp_ss_priv[CGROUP_CANFORK_COUNT] and friends").
    
    That patch is not suitable for stable kernels, and fortunately
    the warning seems harmless as the prototypes only differ in the
    second argument that is unused. Adding that argument gets rid
    of the warning:
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df127725783f45e0f7681f7def2ca259ee9ef4ae
Author: Michal Nazarewicz <mina86@mina86.com>
Date:   Fri Jan 15 16:57:58 2016 -0800

    include/linux/kernel.h: change abs() macro so it uses consistent return type
    
    commit 8f57e4d930d48217268315898212518d4d3e0773 upstream.
    
    Rewrite abs() so that its return type does not depend on the
    architecture and no unexpected type conversion happen inside of it.  The
    only conversion is from unsigned to signed type.  char is left as a
    return type but treated as a signed type regradless of it's actual
    signedness.
    
    With the old version, int arguments were promoted to long and depending
    on architecture a long argument might result in s64 or long return type
    (which may or may not be the same).
    
    This came after some back and forth with Nicolas.  The current macro has
    different return type (for the same input type) depending on
    architecture which might be midly iritating.
    
    An alternative version would promote to int like so:
    
            #define abs(x)  __abs_choose_expr(x, long long,                 \
                            __abs_choose_expr(x, long,                      \
                            __builtin_choose_expr(                          \
                                    sizeof(x) <= sizeof(int),               \
                                    ({ int __x = (x); __x<0?-__x:__x; }),   \
                                    ((void)0))))
    
    I have no preference but imagine Linus might.  :] Nicolas argument against
    is that promoting to int causes iconsistent behaviour:
    
            int main(void) {
                    unsigned short a = 0, b = 1, c = a - b;
                    unsigned short d = abs(a - b);
                    unsigned short e = abs(c);
                    printf("%u %u\n", d, e);  // prints: 1 65535
            }
    
    Then again, no sane person expects consistent behaviour from C integer
    arithmetic.  ;)
    
    Note:
    
      __builtin_types_compatible_p(unsigned char, char) is always false, and
      __builtin_types_compatible_p(signed char, char) is also always false.
    
    Signed-off-by: Michal Nazarewicz <mina86@mina86.com>
    Reviewed-by: Nicolas Pitre <nico@linaro.org>
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Cc: Wey-Yi Guy <wey-yi.w.guy@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
