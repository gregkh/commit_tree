commit 0146985addc322ca518d27fecfe98ae5acda7c1e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Feb 3 17:39:25 2018 +0100

    Linux 4.14.17

commit 04178b1709b6e98c929ae7ca2668c85334e886b2
Author: Matthew Garrett <mjg59@google.com>
Date:   Tue Jan 16 09:10:02 2018 +0000

    x86/efi: Clarify that reset attack mitigation needs appropriate userspace
    
    commit a5c03c31af2291f13689d11760c0b59fb70c9a5a upstream.
    
    Some distributions have turned on the reset attack mitigation feature,
    which is designed to force the platform to clear the contents of RAM if
    the machine is shut down uncleanly. However, in order for the platform
    to be able to determine whether the shutdown was clean or not, userspace
    has to be configured to clear the MemoryOverwriteRequest flag on
    shutdown - otherwise the firmware will end up clearing RAM on every
    reboot, which is unnecessarily time consuming. Add some additional
    clarity to the kconfig text to reduce the risk of systems being
    configured this way.
    
    Signed-off-by: Matthew Garrett <mjg59@google.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01ab9886ea7815d41a4ee435524c3fce127e7290
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jan 17 16:18:27 2018 -0800

    Input: synaptics-rmi4 - do not delete interrupt memory too early
    
    commit a1ab69021a584d952e6548a44b93760547b1b6b5 upstream.
    
    We want to free memory reserved for interrupt mask handling only after we
    free functions, as function drivers might want to mask interrupts. This is
    needed for the followup patch to the F03 that would implement unmasking and
    masking interrupts from the serio pass-through port open() and close()
    methods.
    
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fced3c99e7264237aeba0b420e892cfa7bb36b9c
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jan 17 15:46:18 2018 -0800

    Input: synaptics-rmi4 - unmask F03 interrupts when port is opened
    
    commit 6abe534f0776d2437c8302f58d8eb5abd483e926 upstream.
    
    Currently we register the pass-through serio port when we probe the F03 RMI
    function, and then, in sensor configure phase, we unmask interrupts.
    Unfortunately this is too late, as other drivers are free probe devices
    attached to the serio port as soon as it is probed. Because interrupts are
    masked, the IO times out, which may result in not being able to detect
    trackpoints on the pass-through port.
    
    To fix the issue we implement open() and close() methods for the
    pass-through serio port and unmask interrupts from there. We also move
    creation of the pass-through port form probe to configure stage, as RMI
    driver does not enable transport interrupt until all functions are probed
    (we should change this, but this is a separate topic).
    
    We also try to clear the pending data before unmasking interrupts, because
    some devices like to spam the system with multiple 0xaa 0x00 announcements,
    which may interfere with us trying to query ID of the device.
    
    Fixes: c5e8848fc98e ("Input: synaptics-rmi4 - add support for F03")
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aad757b657176409e803b487bb76becf729a4a58
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 11 11:12:55 2018 +0000

    test_firmware: fix missing unlock on error in config_num_requests_store()
    
    commit a5e1923356505e46476c2fb518559b7a4d9d25b1 upstream.
    
    Add the missing unlock before return from function
    config_num_requests_store() in the error handling case.
    
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0db5de4f4e1884c0ceb246bbcf450fbfd01881f7
Author: Narcisa Ana Maria Vasile <narcisaanamaria12@gmail.com>
Date:   Wed Dec 6 18:57:58 2017 +0200

    iio: chemical: ccs811: Fix output of IIO_CONCENTRATION channels
    
    commit 8f114acd4e1a9cfa05b70bcc4219bc88197b5c9b upstream.
    
    in_concentration_raw should report, according to sysfs-bus-iio documentation,
    a "Raw (unscaled no offset etc.) percentage reading of a substance."
    
    Modify scale to convert from ppm/ppb to percentage:
    1 ppm = 0.0001%
    1 ppb = 0.0000001%
    
    There is no offset needed to convert the ppm/ppb to percentage,
    so remove offset from IIO_CONCENTRATION (IIO_MOD_CO2) channel.
    
    Cc'd stable to reduce chance of userspace breakage in the long
    run as we fix this wrong bit of ABI usage.
    
    Signed-off-by: Narcisa Ana Maria Vasile <narcisaanamaria12@gmail.com>
    Reviewed-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2d4cdb7b8a4b2f8d4dfc2ae067229595ec0190c
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Fri Jan 5 15:34:54 2018 +0100

    iio: adc: stm32: fix scan of multiple channels with DMA
    
    commit 04e491ca9df60ffe8637d00d68e5ab8bc73b30d5 upstream.
    
    By default, watermark is set to '1'. Watermark is used to fine tune
    cyclic dma buffer period. In case watermark is left untouched (e.g. 1)
    and several channels are being scanned, buffer period is wrongly set
    (e.g. to 1 sample). As a consequence, data is never pushed to upper layer.
    Fix buffer period size, by taking scan channels number into account.
    
    Fixes: 2763ea0585c9 ("iio: adc: stm32: add optional dma support")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfd96cbd607ab5d63a33cd63673221f4d572ea8c
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Jan 7 15:05:49 2018 +0100

    spi: imx: do not access registers while clocks disabled
    
    commit d593574aff0ab846136190b1729c151c736727ec upstream.
    
    Since clocks are disabled except during message transfer clocks
    are also disabled when spi_imx_remove gets called. Accessing
    registers leads to a freeeze at least on a i.MX 6ULL. Enable
    clocks before disabling accessing the MXC_CSPICTRL register.
    
    Fixes: 9e556dcc55774 ("spi: spi-imx: only enable the clocks when we start to transfer a message")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e7d6baa61a57bf61d0d3647a5037ad1013f4db
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Thu Jan 4 15:58:34 2018 -0200

    serial: imx: Only wakeup via RTSDEN bit if the system has RTS/CTS
    
    commit 38b1f0fb42f772b8c9aac53593883a18ff5eb9d7 upstream.
    
    The wakeup mechanism via RTSDEN bit relies on the system using the RTS/CTS
    lines, so only allow such wakeup method when the system actually has
    RTS/CTS support.
    
    Fixes: bc85734b126f ("serial: imx: allow waking up on RTSD")
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Reviewed-by: Martin Kaiser <martin@kaiser.cx>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24293a3970e11889cc123d3f0cf9bb9bbb2cf34f
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 4 07:42:15 2018 +0000

    serial: 8250_uniphier: fix error return code in uniphier_uart_probe()
    
    commit 7defa77d2baca4d6eb85234f10f38ab618332e75 upstream.
    
    Fix to return a negative error code from the port register error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 39be40ce066d ("serial: 8250_uniphier: fix serial port index in private data")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Acked-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa33208b5a6f0014d9b7d966f61bd6c4f8cd9729
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 27 14:21:05 2017 +0900

    serial: 8250_of: fix return code when probe function fails to get reset
    
    commit b9820a31691b771db37afe2054dd3d3a680c1eed upstream.
    
    The error pointer from devm_reset_control_get_optional_shared() is
    not propagated.
    
    One of the most common problem scenarios is it returns -EPROBE_DEFER
    when the reset controller has not probed yet.  In this case, the
    probe of the reset consumer should be deferred.
    
    Fixes: e2860e1f62f2 ("serial: 8250_of: Add reset support")
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e00c5c771877abdb70814ce555f020deab42bd46
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Jan 2 12:01:41 2018 +0200

    mei: me: allow runtime pm for platform with D0i3
    
    commit cc365dcf0e56271bedf3de95f88922abe248e951 upstream.
    
    >From the pci power documentation:
    "The driver itself should not call pm_runtime_allow(), though. Instead,
    it should let user space or some platform-specific code do that (user space
    can do it via sysfs as stated above)..."
    
    However, the S0ix residency cannot be reached without MEI device getting
    into low power state. Hence, for mei devices that support D0i3, it's better
    to make runtime power management mandatory and not rely on the system
    integration such as udev rules.
    This policy cannot be applied globally as some older platforms
    were found to have broken power management.
    
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86eda3864a704a98d5444ae60654b898731bfea5
Author: Ganesh Mahendran <opensource.ganesh@gmail.com>
Date:   Wed Jan 10 10:49:05 2018 +0800

    android: binder: use VM_ALLOC to get vm area
    
    commit aac6830ec1cb681544212838911cdc57f2638216 upstream.
    
    VM_IOREMAP is used to access hardware through a mechanism called
    I/O mapped memory. Android binder is a IPC machanism which will
    not access I/O memory.
    
    And VM_IOREMAP has alignment requiement which may not needed in
    binder.
        __get_vm_area_node()
        {
        ...
            if (flags & VM_IOREMAP)
                align = 1ul << clamp_t(int, fls_long(size),
                   PAGE_SHIFT, IOREMAP_MAX_ORDER);
        ...
        }
    
    This patch will save some kernel vm area, especially for 32bit os.
    
    In 32bit OS, kernel vm area is only 240MB. We may got below
    error when launching a app:
    
    <3>[ 4482.440053] binder_alloc: binder_alloc_mmap_handler: 15728 8ce67000-8cf65000 get_vm_area failed -12
    <3>[ 4483.218817] binder_alloc: binder_alloc_mmap_handler: 15745 8ce67000-8cf65000 get_vm_area failed -12
    
    Signed-off-by: Ganesh Mahendran <opensource.ganesh@gmail.com>
    Acked-by: Martijn Coenen <maco@android.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a3cee43e935b9d526ad07f20bf005ba7e74d05b
Author: Martijn Coenen <maco@android.com>
Date:   Fri Jan 5 11:27:07 2018 +0100

    ANDROID: binder: remove waitqueue when thread exits.
    
    commit f5cb779ba16334b45ba8946d6bfa6d9834d1527f upstream.
    
    binder_poll() passes the thread->wait waitqueue that
    can be slept on for work. When a thread that uses
    epoll explicitly exits using BINDER_THREAD_EXIT,
    the waitqueue is freed, but it is never removed
    from the corresponding epoll data structure. When
    the process subsequently exits, the epoll cleanup
    code tries to access the waitlist, which results in
    a use-after-free.
    
    Prevent this by using POLLFREE when the thread exits.
    
    Signed-off-by: Martijn Coenen <maco@android.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ba5966eddefdf04306bd1da36811c8b83a9664d
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Jan 12 17:50:02 2018 +1100

    usb/gadget: Fix "high bandwidth" check in usb_gadget_ep_match_desc()
    
    commit 11fb37998759c48e4e4c200c974593cbeab25d3e upstream.
    
    The current code tries to test for bits that are masked out by
    usb_endpoint_maxp(). Instead, use the proper accessor to access
    the new high bandwidth bits.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0096f93aa42d47f0277e28c3b26eaa5e1ebadd5
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 11 13:10:16 2018 +0100

    usb: uas: unconditionally bring back host after reset
    
    commit cbeef22fd611c4f47c494b821b2b105b8af970bb upstream.
    
    Quoting Hans:
    
    If we return 1 from our post_reset handler, then our disconnect handler
    will be called immediately afterwards. Since pre_reset blocks all scsi
    requests our disconnect handler will then hang in the scsi_remove_host
    call.
    
    This is esp. bad because our disconnect handler hanging for ever also
    stops the USB subsys from enumerating any new USB devices, causes commands
    like lsusb to hang, etc.
    
    In practice this happens when unplugging some uas devices because the hub
    code may see the device as needing a warm-reset and calls usb_reset_device
    before seeing the disconnect. In this case uas_configure_endpoints fails
    with -ENODEV. We do not want to print an error for this, so this commit
    also silences the shost_printk for -ENODEV.
    
    ENDQUOTE
    
    However, if we do that we better drop any unconditional execution
    and report to the SCSI subsystem that we have undergone a reset
    but we are not operational now.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75816a439f6589b8f14d10c4b5f8c835ad76e036
Author: Hemant Kumar <hemantk@codeaurora.org>
Date:   Tue Jan 9 12:30:53 2018 +0530

    usb: f_fs: Prevent gadget unbind if it is already unbound
    
    commit ce5bf9a50daf2d9078b505aca1cea22e88ecb94a upstream.
    
    Upon usb composition switch there is possibility of ep0 file
    release happening after gadget driver bind. In case of composition
    switch from adb to a non-adb composition gadget will never gets
    bound again resulting into failure of usb device enumeration. Fix
    this issue by checking FFS_FL_BOUND flag and avoid extra
    gadget driver unbind if it is already done as part of composition
    switch.
    
    This fixes adb reconnection error reported on Android running
    v4.4 and above kernel versions. Verified on Hikey running vanilla
    v4.15-rc7 + few out of tree Mali patches.
    
    Reviewed-at: https://android-review.googlesource.com/#/c/582632/
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: Michal Nazarewicz <mina86@mina86.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Dmitry Shmidt <dimitrysh@google.com>
    Cc: Badhri <badhri@google.com>
    Cc: Android Kernel Team <kernel-team@android.com>
    Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
    [AmitP: Cherry-picked it from android-4.14 and updated the commit log]
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c226267c2259112a9825d09a8c715568c3d8d10
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 18 14:46:41 2018 +1100

    USB: serial: simple: add Motorola Tetra driver
    
    commit 46fe895e22ab3845515ec06b01eaf1282b342e29 upstream.
    
    Add new Motorola Tetra (simple) driver for Motorola Solutions TETRA PEI
    devices.
    
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=0cad ProdID=9011 Rev=24.16
    S:  Manufacturer=Motorola Solutions Inc.
    S:  Product=Motorola Solutions TETRA PEI interface
    C:  #Ifs= 2 Cfg#= 1 Atr=80 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    
    Note that these devices do not support the CDC SET_CONTROL_LINE_STATE
    request (for any interface).
    
    Reported-by: Max Schulze <max.schulze@posteo.de>
    Tested-by: Max Schulze <max.schulze@posteo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d00a0442a99e859ff4b04741abd157fa3bb6b30e
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Jan 17 12:08:03 2018 -0700

    usbip: list: don't list devices attached to vhci_hcd
    
    commit ef824501f50846589f02173d73ce3fe6021a9d2a upstream.
    
    usbip host lists devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Fix it to check and not list devices that are attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa7cdae765cf383067cb08a854f0d5738c684a78
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Jan 17 12:07:30 2018 -0700

    usbip: prevent bind loops on devices attached to vhci_hcd
    
    commit ef54cf0c600fb8f5737fb001a9e357edda1a1de8 upstream.
    
    usbip host binds to devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Unbind followed by bind works, however device is left in a bad state with
    accesses via the attached busid result in errors and system hangs during
    shutdown.
    
    Fix it to check and bail out if the device is already attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a24d3f8c566bfdb3bb2126055426c6ae952cdd5
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Dec 13 20:34:36 2017 +0800

    USB: serial: io_edgeport: fix possible sleep-in-atomic
    
    commit c7b8f77872c73f69a16528a9eb87afefcccdc18b upstream.
    
    According to drivers/usb/serial/io_edgeport.c, the driver may sleep
    under a spinlock.
    The function call path is:
    edge_bulk_in_callback (acquire the spinlock)
       process_rcvd_data
         process_rcvd_status
           change_port_settings
             send_iosp_ext_cmd
               write_cmd_usb
                 usb_kill_urb --> may sleep
    
    To fix it, the redundant usb_kill_urb() is removed from the error path
    after usb_submit_urb() fails.
    
    This possible bug is found by my static analysis tool (DSAC) and checked
    by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34b812ca30389a3759bf89d424c2d256185face3
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 18 12:13:45 2018 +0100

    CDC-ACM: apply quirk for card reader
    
    commit df1cc78a52491f71d8170d513d0f6f114faa1bda upstream.
    
    This devices drops random bytes from messages if you talk to it
    too fast.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca7964983ca453dd9902c40171e93a69f21ee3ee
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jan 14 16:09:00 2018 +0100

    USB: cdc-acm: Do not log urb submission errors on disconnect
    
    commit f0386c083c2ce85284dc0b419d7b89c8e567c09f upstream.
    
    When disconnected sometimes the cdc-acm driver logs errors like these:
    
    [20278.039417] cdc_acm 2-2:2.1: urb 9 failed submission with -19
    [20278.042924] cdc_acm 2-2:2.1: urb 10 failed submission with -19
    [20278.046449] cdc_acm 2-2:2.1: urb 11 failed submission with -19
    [20278.049920] cdc_acm 2-2:2.1: urb 12 failed submission with -19
    [20278.053442] cdc_acm 2-2:2.1: urb 13 failed submission with -19
    [20278.056915] cdc_acm 2-2:2.1: urb 14 failed submission with -19
    [20278.060418] cdc_acm 2-2:2.1: urb 15 failed submission with -19
    
    Silence these by not logging errors when the result is -ENODEV.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfc372036b41fec5162c38c18aa824698c33b825
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 25 09:48:55 2018 +0100

    USB: serial: pl2303: new device id for Chilitag
    
    commit d08dd3f3dd2ae351b793fc5b76abdbf0fd317b12 upstream.
    
    This adds a new device id for Chilitag devices to the pl2303 driver.
    
    Reported-by: "Chu.Mike [朱堅宜]" <Mike-Chu@prolific.com.tw>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94791411130312ba655c944c4623de1ff4c5a614
Author: OKAMOTO Yoshiaki <yokamoto@allied-telesis.co.jp>
Date:   Tue Jan 16 09:51:17 2018 +0000

    usb: option: Add support for FS040U modem
    
    commit 69341bd15018da0a662847e210f9b2380c71e623 upstream.
    
    FS040U modem is manufactured by omega, and sold by Fujisoft. This patch
    adds ID of the modem to use option1 driver. Interface 3 is used as
    qmi_wwan, so the interface is ignored.
    
    Signed-off-by: Yoshiaki Okamoto <yokamoto@allied-telesis.co.jp>
    Signed-off-by: Hiroyuki Yamamoto <hyamamo@allied-telesis.co.jp>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c538ad935465d7ba4bf0b5747fadcfdf05311c9
Author: Gaurav Kohli <gkohli@codeaurora.org>
Date:   Tue Jan 23 13:16:34 2018 +0530

    tty: fix data race between tty_init_dev and flush of buf
    
    commit b027e2298bd588d6fa36ed2eda97447fb3eac078 upstream.
    
    There can be a race, if receive_buf call comes before
    tty initialization completes in n_tty_open and tty->disc_data
    may be NULL.
    
    CPU0                                    CPU1
    ----                                    ----
     000|n_tty_receive_buf_common()         n_tty_open()
    -001|n_tty_receive_buf2()               tty_ldisc_open.isra.3()
    -002|tty_ldisc_receive_buf(inline)      tty_ldisc_setup()
    
    Using ldisc semaphore lock in tty_init_dev till disc_data
    initializes completely.
    
    Signed-off-by: Gaurav Kohli <gkohli@codeaurora.org>
    Reviewed-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb6de1af2e7235133a0e2563c09926ca28361095
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Dec 14 14:02:46 2017 +0000

    staging: ccree: fix fips event irq handling build
    
    commit dc5591dc9c03e4cd22d3f0c3659196cc34668452 upstream.
    
    When moving from internal for kernel FIPS infrastructure the FIPS event irq
    handling code was left with the old ifdef by mistake. Fix it.
    
    Fixes: b7e607bf33a2 ("staging: ccree: move FIPS support to kernel infrastructure")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fad7da7b638a1f5900bee31ed598b7c527d3a14c
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Sun Dec 3 13:58:19 2017 +0000

    staging: ccree: NULLify backup_info when unused
    
    commit 46df8824982e4fb0198776078d4a8c3e2d531464 upstream.
    
    backup_info field is only allocated for decrypt code path.
    The field was not nullified when not used causing a kfree
    in an error handling path to attempt to free random
    addresses as uncovered in stress testing.
    
    Fixes: 737aed947f9b ("staging: ccree: save ciphertext for CTS IV")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a4b5ee973cfbcf32bff2fe03bed1786d5baa14e
Author: Dmitry Eremin <dmitry.eremin@intel.com>
Date:   Thu Jan 25 16:51:04 2018 +0300

    staging: lustre: separate a connection destroy from free struct kib_conn
    
    commit 9b046013e5837f8a58453d1e9f8e01d03adb7fe7 upstream.
    
    The logic of the original commit 4d99b2581eff ("staging: lustre: avoid
    intensive reconnecting for ko2iblnd") was assumed conditional free of
    struct kib_conn if the second argument free_conn in function
    kiblnd_destroy_conn(struct kib_conn *conn, bool free_conn) is true.
    But this hunk of code was dropped from original commit. As result the logic
    works wrong and current code use struct kib_conn after free.
    
    > drivers/staging/lustre/lnet/klnds/o2iblnd/o2iblnd_cb.c
    > 3317  kiblnd_destroy_conn(conn, !peer);
    >                           ^^^^ Freed always (but should be conditionally)
    > 3318
    > 3319  spin_lock_irqsave(lock, flags);
    > 3320  if (!peer)
    > 3321      continue;
    > 3322
    > 3323  conn->ibc_peer = peer;
    >       ^^^^^^^^^^^^^^ Use after free
    > 3324  if (peer->ibp_reconnected < KIB_RECONN_HIGH_RACE)
    > 3325      list_add_tail(&conn->ibc_list,
    >                          ^^^^^^^^^^^^^^ Use after free
    > 3326                    &kiblnd_data.kib_reconn_list);
    > 3327  else
    > 3328      list_add_tail(&conn->ibc_list,
    >                          ^^^^^^^^^^^^^^ Use after free
    > 3329                    &kiblnd_data.kib_reconn_wait);
    
    To avoid confusion this fix moved the freeing a struct kib_conn outside of
    the function kiblnd_destroy_conn() and free as it was intended in original
    commit.
    
    Fixes: 4d99b2581eff ("staging: lustre: avoid intensive reconnecting for ko2iblnd")
    Signed-off-by: Dmitry Eremin <Dmitry.Eremin@intel.com>
    Reviewed-by: Andreas Dilger <andreas.dilger@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c065b9947b05d63936dad5f3d5aa6e83d1e0346f
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jan 11 16:55:24 2018 +0100

    KVM: x86: emulate #UD while in guest mode
    
    
    [ Upstream commit bd89525a823ce6edddcedbe9aed79faa1b9cf544 ]
    
    This reverts commits ae1f57670703656cc9f293722c3b8b6782f8ab3f
    and ac9b305caa0df6f5b75d294e4b86c1027648991e.
    
    If the hardware doesn't support MOVBE, but L0 sets CPUID.01H:ECX.MOVBE
    in L1's emulated CPUID information, then L1 is likely to pass that
    CPUID bit through to L2. L2 will expect MOVBE to work, but if L1
    doesn't intercept #UD, then any MOVBE instruction executed in L2 will
    raise #UD, and the exception will be delivered in L2.
    
    Commit ac9b305caa0df6f5b75d294e4b86c1027648991e is a better and more
    complete version of ae1f57670703 ("KVM: nVMX: Do not emulate #UD while
    in guest mode"); however, neither considers the above case.
    
    Suggested-by: Jim Mattson <jmattson@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9273b08d4fb808baeebcd2637b5257d3f0db18c
Author: Stefan Schake <stschake@gmail.com>
Date:   Fri Dec 29 17:05:43 2017 +0100

    drm/vc4: Move IRQ enable to PM path
    
    
    [ Upstream commit ce9caf2f79a5aa170a4b6456a03db639eed9c988 ]
    
    We were calling enable_irq on bind, where it was already enabled previously
    by the IRQ helper. Additionally, dev->irq is not set correctly until after
    postinstall and so was always zero here, triggering a warning in 4.15.
    Fix both by moving the enable to the power management resume path, where we
    know there was a previous disable invocation during suspend.
    
    Fixes: 253696ccd613 ("drm/vc4: Account for interrupts in flight")
    Signed-off-by: Stefan Schake <stschake@gmail.com>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/1514563543-32511-1-git-send-email-stschake@gmail.com
    Tested-by: Stefan Wahren <stefan.wahren@i2se.com>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c789cfe0ae72005f368aef5c361851fabec0e5f5
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sat Nov 25 13:32:38 2017 -0600

    staging: rtl8188eu: Fix incorrect response to SIOCGIWESSID
    
    
    [ Upstream commit b77992d2df9e47144354d1b25328b180afa33442 ]
    
    When not associated with an AP, wifi device drivers should respond to the
    SIOCGIWESSID ioctl with a zero-length string for the SSID, which is the
    behavior expected by dhcpcd.
    
    Currently, this driver returns an error code (-1) from the ioctl call,
    which causes dhcpcd to assume that the device is not a wireless interface
    and therefore it fails to work correctly with it thereafter.
    
    This problem was reported and tested at
    https://github.com/lwfinger/rtl8188eu/issues/234.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0479bc01767ff58170a2f1ae27e6b98f9dfa01b9
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 14 16:18:28 2017 +0000

    usb: gadget: don't dereference g until after it has been null checked
    
    
    [ Upstream commit b2fc059fa549fe6881d4c1f8d698b0f50bcd16ec ]
    
    Avoid dereferencing pointer g until after g has been sanity null checked;
    move the assignment of cdev much later when it is required into a more
    local scope.
    
    Detected by CoverityScan, CID#1222135 ("Dereference before null check")
    
    Fixes: b785ea7ce662 ("usb: gadget: composite: fix ep->maxburst initialization")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aafb1a7eb0f73cf8bb59ed7cc6d29e19d4de49bc
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Nov 24 09:42:21 2017 +0100

    x86/xen: Support early interrupts in xen pv guests
    
    
    [ Upstream commit 42b3a4cb5609de757f5445fcad18945ba9239a07 ]
    
    Add early interrupt handlers activated by idt_setup_early_handler() to
    the handlers supported by Xen pv guests. This will allow for early
    WARN() calls not crashing the guest.
    
    Suggested-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: xen-devel@lists.xenproject.org
    Cc: boris.ostrovsky@oracle.com
    Link: https://lkml.kernel.org/r/20171124084221.30172-1-jgross@suse.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99a8cad9c1b2236439d7d44c86cdbcdd5831154b
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Sun Apr 16 02:51:16 2017 -0400

    media: usbtv: add a new usbid
    
    
    [ Upstream commit 04226916d2360f56d57ad00bc48d2d1854d1e0b0 ]
    
    A new usbid of UTV007 is found in a newly bought device.
    
    The usbid is 1f71:3301.
    
    The ID on the chip is:
    UTV007
    A89029.1
    1520L18K1
    
    Both video and audio is tested with the modified usbtv driver.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Acked-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 504b902b36a9cd487cbcd2f209a9a5c6213cb320
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Nov 7 11:10:29 2017 -0800

    ARM: dts: NSP: Fix PPI interrupt types
    
    
    [ Upstream commit 5f1aa51c7a1eef1c5a60b8334e32c89904964245 ]
    
    Booting a kernel results in the kernel warning us about the following
    PPI interrupts configuration:
    [    0.105127] smp: Bringing up secondary CPUs ...
    [    0.110545] GIC: PPI11 is secure or misconfigured
    [    0.110551] GIC: PPI13 is secure or misconfigured
    
    Fix this by using the appropriate edge configuration for PPI11 and
    PPI13, this is similar to what was fixed for Northstar (BCM5301X) in
    commit 0e34079cd1f6 ("ARM: dts: BCM5301X: Correct GIC_PPI interrupt
    flags").
    
    Fixes: 7b2e987de207 ("ARM: NSP: add minimal Northstar Plus device tree")
    Fixes: 1a9d53cabaf4 ("ARM: dts: NSP: Add TWD Support to DT")
    Acked-by: Jon Mason <jon.mason@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12f165f4418aaa904e7412ee178ee43437f65bc8
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Nov 7 10:58:34 2017 -0800

    ARM: dts: NSP: Disable AHCI controller for HR NSP boards
    
    
    [ Upstream commit 77416ab35f5712382e5a792bfa1736ceb70d5bbb ]
    
    The AHCI controller is currently enabled for all of these boards:
    bcm958623hr and bcm958625hr would result in a hard hang on boot that we
    cannot get rid of. Since this does not appear to have an easy and simple
    fix, just disable the AHCI controller for now until this gets resolved.
    
    Fixes: 70725d6e97ac ("ARM: dts: NSP: Enable SATA on bcm958625hr")
    Fixes: d454c3762437 ("ARM: dts: NSP: Add new DT file for bcm958623hr")
    Acked-by: Jon Mason <jon.mason@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c67fa169456e2179be40b3e398030019879dacd2
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Mon Nov 20 13:25:05 2017 +0200

    iwlwifi: fix access to prph when transport is stopped
    
    
    [ Upstream commit 0232d2cd7aa8e1b810fe84fb4059a0bd1eabe2ba ]
    
    When getting HW rfkill we get stop_device being called from
    two paths.
    One path is the IRQ calling stop device, and updating op
    mode and stack.
    As a result, cfg80211 is running rfkill sync work that shuts
    down all devices (second path).
    In the second path, we eventually get to iwl_mvm_stop_device
    which calls iwl_fw_dump_conf_clear->iwl_fw_dbg_stop_recording,
    that access periphery registers.
    The device may be stopped at this point from the first path,
    which will result with a failure to access those registers.
    Simply checking for the trans status is insufficient, since
    the race will still exist, only minimized.
    Instead, move the stop from iwl_fw_dump_conf_clear (which is
    getting called only from stop path) to the transport stop
    device function, where the access is always safe.
    This has the added value, of actually stopping dbgc before
    stopping device even when the stop is initiated from the
    transport.
    
    Fixes: 1efc3843a4ee ("iwlwifi: stop dbgc recording before stopping DMA")
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99f3d5f37e58692f1147e6d4b0ca2e42fe1f6453
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Nov 15 14:12:30 2017 +0200

    iwlwifi: mvm: fix the TX queue hang timeout for MONITOR vif type
    
    
    [ Upstream commit d1b275ffec459c5ae12b5c7086c84175696e5a9f ]
    
    The MONITOR type is missing in the interface type switch.
    Add it.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c27a40c9e182ed318e886c4edc35fbbc182d384
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Mon Nov 20 08:12:29 2017 -0600

    scsi: ufs: ufshcd: fix potential NULL pointer dereference in ufshcd_config_vreg
    
    
    [ Upstream commit 727535903bea924c4f73abb202c4b3e85fff0ca4 ]
    
    _vreg_ is being dereferenced before it is null checked, hence there is a
    potential null pointer dereference.
    
    Fix this by moving the pointer dereference after _vreg_ has been null
    checked.
    
    This issue was detected with the help of Coccinelle.
    
    Fixes: aa4976130934 ("ufs: Add regulator enable support")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39527e909ea52bfec616536a1b02011f58a08c30
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Fri Nov 17 19:14:55 2017 -0200

    scsi: aacraid: Prevent crash in case of free interrupt during scsi EH path
    
    
    [ Upstream commit e4717292ddebcfe231651b5aff9fa19ca158d178 ]
    
    As part of the scsi EH path, aacraid performs a reinitialization of the
    adapter, which encompass freeing resources and IRQs, NULLifying lots of
    pointers, and then initialize it all over again.  We've identified a
    problem during the free IRQ portion of this path if CONFIG_DEBUG_SHIRQ
    is enabled on kernel config file.
    
    Happens that, in case this flag was set, right after free_irq()
    effectively clears the interrupt, it checks if it was requested as
    IRQF_SHARED. In positive case, it performs another call to the IRQ
    handler on driver. Problem is: since aacraid currently free some
    resources *before* freeing the IRQ, once free_irq() path calls the
    handler again (due to CONFIG_DEBUG_SHIRQ), aacraid crashes due to NULL
    pointer dereference with the following trace:
    
      aac_src_intr_message+0xf8/0x740 [aacraid]
      __free_irq+0x33c/0x4a0
      free_irq+0x78/0xb0
      aac_free_irq+0x13c/0x150 [aacraid]
      aac_reset_adapter+0x2e8/0x970 [aacraid]
      aac_eh_reset+0x3a8/0x5d0 [aacraid]
      scsi_try_host_reset+0x74/0x180
      scsi_eh_ready_devs+0xc70/0x1510
      scsi_error_handler+0x624/0xa20
    
    This patch prevents the crash by changing the order of the
    deinitialization in this path of aacraid: first we clear the IRQ, then
    we free other resources. No functional change intended.
    
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Reviewed-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 612959943e409aa9a1dd5cfaa7ade8e270ead7d2
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Nov 15 08:47:02 2017 +0300

    perf/core: Fix memory leak triggered by perf --namespace
    
    
    [ Upstream commit 0e18dd12064e07519f7cbff4149ca7fff620cbed ]
    
    perf with --namespace key leaks various memory objects including namespaces
    
      4.14.0+
      pid_namespace          1     12   2568   12    8
      user_namespace         1     39    824   39    8
      net_namespace          1      5   6272    5    8
    
    This happen because perf_fill_ns_link_info() struct patch ns_path:
    during initialization ns_path incremented counters on related mnt and dentry,
    but without lost path_put nobody decremented them back.
    Leaked dentry is name of related namespace,
    and its leak does not allow to free unused namespace.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Hari Bathini <hbathini@linux.vnet.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: commit e422267322cd ("perf: Add PERF_RECORD_NAMESPACES to include namespaces related info")
    Link: http://lkml.kernel.org/r/c510711b-3904-e5e1-d296-61273d21118d@virtuozzo.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 773a1c5baad243ad30b41700111f0c499f6a259d
Author: Carlos Maiolino <cmaiolino@redhat.com>
Date:   Tue Nov 28 08:54:10 2017 -0800

    xfs: Properly retry failed dquot items in case of error during buffer writeback
    
    
    [ Upstream commit 373b0589dc8d58bc09c9a28d03611ae4fb216057 ]
    
    Once the inode item writeback errors is already fixed, it's time to fix the same
    problem in dquot code.
    
    Although there were no reports of users hitting this bug in dquot code (at least
    none I've seen), the bug is there and I was already planning to fix it when the
    correct approach to fix the inodes part was decided.
    
    This patch aims to fix the same problem in dquot code, regarding failed buffers
    being unable to be resubmitted once they are flush locked.
    
    Tested with the recently test-case sent to fstests list by Hou Tao.
    
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Carlos Maiolino <cmaiolino@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e506f41705cf9b2ea64e9d698bc272dd9c25b2d
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Nov 27 09:50:17 2017 -0800

    xfs: ubsan fixes
    
    
    [ Upstream commit 22a6c83777ac7c17d6c63891beeeac24cf5da450 ]
    
    Fix some complaints from the UBSAN about signed integer addition overflows.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a96f3d05668cdee90779b07227054d4ec41b32d
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Oct 5 14:06:41 2017 +0200

    drm/omap: displays: panel-dpi: add backlight dependency
    
    
    [ Upstream commit 499ec0ed5eb2f6a7fcaab2dd66ffc5993484bda9 ]
    
    The new backlight code causes a link failure when backlight
    support itself is disabled:
    
    drivers/gpu/drm/omapdrm/displays/panel-dpi.o: In function `panel_dpi_probe_of':
    panel-dpi.c:(.text+0x35c): undefined reference to `of_find_backlight_by_node'
    
    This adds a Kconfig dependency like we have for the other OMAP
    display targets.
    
    Fixes: 39135a305a0f ("drm/omap: displays: panel-dpi: Support for handling backlight devices")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 345dc6d499d8509ec9cc4b9b5b84a070ac87e0d5
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Sep 24 08:01:03 2017 +0200

    drm/omap: Fix error handling path in 'omap_dmm_probe()'
    
    
    [ Upstream commit 8677b1ac2db021ab30bb1fa34f1e56ebe0051ec3 ]
    
    If we don't find a matching device node, we must free the memory allocated
    in 'omap_dmm' a few lines above.
    
    Fixes: 7cb0d6c17b96 ("drm/omap: fix TILER on OMAP5")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 464711a74ce3238c7ca07f903bed3189efd23831
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:24 2017 +0300

    drm/bridge: tc358767: fix 1-lane behavior
    
    
    [ Upstream commit 4dbd6c03fbf88299c573d676838896c6e06aade2 ]
    
    Use drm_dp_channel_eq_ok helper
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-7-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 340c9a4ba3031f87fcbfa0d89332d4a5aa468aaf
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:23 2017 +0300

    drm/bridge: tc358767: fix AUXDATAn registers access
    
    
    [ Upstream commit 9217c1abbc145a77d65c476cf2004a3df02104c7 ]
    
    First four bytes should go to DP0_AUXWDATA0. Due to bug if
    len > 4 first four bytes was writen to DP0_AUXWDATA1 and all
    data get shifted by 4 bytes. Fix it.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-6-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b536eb986e45e2347bd4cfaeff0b48d69fde52d1
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:22 2017 +0300

    drm/bridge: tc358767: fix timing calculations
    
    
    [ Upstream commit 66d1c3b94d5d59e4325e61a78d520f92c043d645 ]
    
    Fields in HTIM01 and HTIM02 regs should be even.
    Recomended thresh_dly value is max_tu_symbol.
    Remove set of VPCTRL0.VSDELAY as it is related to DSI input
    interface. Currently driver supports only DPI.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-5-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0106381870a49d1ce47501410b4a7433e505aa71
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:21 2017 +0300

    drm/bridge: tc358767: fix DP0_MISC register set
    
    
    [ Upstream commit f3b8adbe1911f66fd3cab1aaa74f0f66b7ceda25 ]
    
    Remove shift from TU_SIZE_RECOMMENDED define as it used to
    calculate max_tu_symbols.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-4-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 859bacc13cbb34a86f6140430f9fdb767c33d7d4
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:20 2017 +0300

    drm/bridge: tc358767: filter out too high modes
    
    
    [ Upstream commit 99fc8e963a4c0203dba26a77cf737db6081bca14 ]
    
    Pixel clock limitation for DPI is 154 MHz. Do not accept modes
    with higher pixel clock rate.
    
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-3-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d734363f2c5e782384765c5a96caa4473645b8d
Author: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
Date:   Tue Nov 7 19:56:19 2017 +0300

    drm/bridge: tc358767: do no fail on hi-res displays
    
    
    [ Upstream commit cffd2b16c01c3431a7a7dd62e722af33490fc436 ]
    
    Do not fail data rates higher than 2.7 and more than 2 lanes.
    Try to fall back to 2.7Gbps and 2 lanes.
    
    Acked-by: Philipp Zabel <p.zabel@pengutronix.de>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrey Gusakov <andrey.gusakov@cogentembedded.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510073785-16108-2-git-send-email-andrey.gusakov@cogentembedded.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 345f165a31b8a287b15e91e5aad03d588f1bd141
Author: Eric Anholt <eric@anholt.net>
Date:   Tue Nov 14 11:16:47 2017 -0800

    drm/bridge: Fix lvds-encoder since the panel_bridge rework.
    
    
    [ Upstream commit dbb58bfd9ae6c885b2ca001a9a5ab8b881fb4ba9 ]
    
    The panel_bridge bridge attaches to the panel's OF node, not the
    lvds-encoder's node.  Put in a little no-op bridge of our own so that
    our consumers can still find a bridge where they expect.
    
    This also fixes an unintended unregistration and leak of the
    panel-bridge on module remove.
    
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Fixes: 13dfc0540a57 ("drm/bridge: Refactor out the panel wrapper from the lvds-encoder bri
    dge.")
    Tested-by: Lothar Waßmann <LW@KARO-electronics.de>
    Signed-off-by: Archit Taneja <architt@codeaurora.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171114191647.22207-1-eric@anholt.net
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2ba0bd3469546e5bf6f32a0bb67d6ccf21d4584
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Wed Nov 29 16:11:08 2017 -0800

    kmemleak: add scheduling point to kmemleak_scan()
    
    
    [ Upstream commit bde5f6bc68db51128f875a756e9082a6c6ff7b4c ]
    
    kmemleak_scan() will scan struct page for each node and it can be really
    large and resulting in a soft lockup.  We have seen a soft lockup when
    do scan while compile kernel:
    
      watchdog: BUG: soft lockup - CPU#53 stuck for 22s! [bash:10287]
     [...]
      Call Trace:
       kmemleak_scan+0x21a/0x4c0
       kmemleak_write+0x312/0x350
       full_proxy_write+0x5a/0xa0
       __vfs_write+0x33/0x150
       vfs_write+0xad/0x1a0
       SyS_write+0x52/0xc0
       do_syscall_64+0x61/0x1a0
       entry_SYSCALL64_slow_path+0x25/0x25
    
    Fix this by adding cond_resched every MAX_SCAN_SIZE.
    
    Link: http://lkml.kernel.org/r/1511439788-20099-1-git-send-email-xieyisheng1@huawei.com
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Suggested-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf6a04c3ffe1486ae7e0ad8fb9f10af9bad6d007
Author: Liu, Changcheng <changcheng.liu@intel.com>
Date:   Wed Nov 29 16:10:25 2017 -0800

    scripts/faddr2line: extend usage on generic arch
    
    
    [ Upstream commit 95a87982541932503d3f59aba4c30b0bde0a6294 ]
    
    When cross-compiling, fadd2line should use the binary tool used for the
    target system, rather than that of the host.
    
    Link: http://lkml.kernel.org/r/20171121092911.GA150711@sofia
    Signed-off-by: Liu Changcheng <changcheng.liu@intel.com>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: NeilBrown <neilb@suse.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca4b61373ee86e15b4469285fdd23f9c201fc13d
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 24 12:00:24 2017 -0500

    SUNRPC: Allow connect to return EHOSTUNREACH
    
    
    [ Upstream commit 4ba161a793d5f43757c35feff258d9f20a082940 ]
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f8b2c79c4a39a7a0a1f5eb079586fce92794dc2
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Nov 29 22:34:50 2017 +0900

    quota: Check for register_shrinker() failure.
    
    
    [ Upstream commit 88bc0ede8d35edc969350852894dc864a2dc1859 ]
    
    register_shrinker() might return -ENOMEM error since Linux 3.12.
    Call panic() as with other failure checks in this function if
    register_shrinker() failed.
    
    Fixes: 1d3d4437eae1 ("vmscan: per-node deferred work")
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jan Kara <jack@suse.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 600c904b919a6c3e36cc93754c8941a7b0a1ec6b
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 29 11:01:09 2017 +0100

    net: ethernet: xilinx: Mark XILINX_LL_TEMAC broken on 64-bit
    
    
    [ Upstream commit 15bfe05c8d6386f1a90e9340d15336e85e32aad6 ]
    
    On 64-bit (e.g. powerpc64/allmodconfig):
    
        drivers/net/ethernet/xilinx/ll_temac_main.c: In function 'temac_start_xmit_done':
        drivers/net/ethernet/xilinx/ll_temac_main.c:633:22: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
            dev_kfree_skb_irq((struct sk_buff *)cur_p->app4);
                              ^
    
    cdmac_bd.app4 is u32, so it is too small to hold a kernel pointer.
    
    Note that several other fields in struct cdmac_bd are also too small to
    hold physical addresses on 64-bit platforms.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 575c548137f8b397b5e32c66a972c5f0ebcc1cd2
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Nov 24 11:39:30 2017 +0100

    drm/amdgpu: don't try to move pinned BOs
    
    
    [ Upstream commit 6edc6910ba4cd6eab309263539c8f09b8ad772bf ]
    
    Never try to move pinned BOs during CS.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f730601cdead1ed14be5089e14d8ffcb019373e5
Author: Michal Hocko <mhocko@suse.com>
Date:   Thu Nov 23 17:13:40 2017 +0100

    xfs: fortify xfs_alloc_buftarg error handling
    
    
    [ Upstream commit d210a9874b8f6166579408131cb74495caff1958 ]
    
    percpu_counter_init failure path doesn't clean up &btp->bt_lru list.
    Call list_lru_destroy in that error path. Similarly register_shrinker
    error path is not handled.
    
    While it is unlikely to trigger these error path, it is not impossible
    especially the later might fail with large NUMAs.  Let's handle the
    failure to make the code more robust.
    
    Noticed-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95a7d23415b79c94b4809200f29f458520e9fc56
Author: Minwoo Im <minwoo.im.dev@gmail.com>
Date:   Sat Nov 25 03:03:00 2017 +0900

    nvme-pci: fix NULL pointer dereference in nvme_free_host_mem()
    
    
    [ Upstream commit 7e5dd57ef3081ff6c03908d786ed5087f6fbb7ae ]
    
    Following condition which will cause NULL pointer dereference will
    occur in nvme_free_host_mem() when it tries to remove pci device via
    nvme_remove() especially after a failure of host memory allocation for HMB.
    
        "(host_mem_descs == NULL) && (nr_host_mem_descs != 0)"
    
    It's because __nr_host_mem_descs__ is not cleared to 0 unlike
    __host_mem_descs__ is so.
    
    Signed-off-by: Minwoo Im <minwoo.im.dev@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f268e508aeb20f09de9a258ac5d2e41983567775
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Nov 17 01:54:00 2017 +0000

    Btrfs: incremental send, fix wrong unlink path after renaming file
    
    
    [ Upstream commit ea37d5998b50a72b9045ba60a132eeb20e1c4230 ]
    
    Under some circumstances, an incremental send operation can issue wrong
    paths for unlink commands related to files that have multiple hard links
    and some (or all) of those links were renamed between the parent and send
    snapshots. Consider the following example:
    
    Parent snapshot
    
     .                                                      (ino 256)
     |---- a/                                               (ino 257)
     |     |---- b/                                         (ino 259)
     |     |     |---- c/                                   (ino 260)
     |     |     |---- f2                                   (ino 261)
     |     |
     |     |---- f2l1                                       (ino 261)
     |
     |---- d/                                               (ino 262)
           |---- f1l1_2                                     (ino 258)
           |---- f2l2                                       (ino 261)
           |---- f1_2                                       (ino 258)
    
    Send snapshot
    
     .                                                      (ino 256)
     |---- a/                                               (ino 257)
     |     |---- f2l1/                                      (ino 263)
     |             |---- b2/                                (ino 259)
     |                   |---- c/                           (ino 260)
     |                   |     |---- d3                     (ino 262)
     |                   |           |---- f1l1_2           (ino 258)
     |                   |           |---- f2l2_2           (ino 261)
     |                   |           |---- f1_2             (ino 258)
     |                   |
     |                   |---- f2                           (ino 261)
     |                   |---- f1l2                         (ino 258)
     |
     |---- d                                                (ino 261)
    
    When computing the incremental send stream the following steps happen:
    
    1) When processing inode 261, a rename operation is issued that renames
       inode 262, which currently as a path of "d", to an orphan name of
       "o262-7-0". This is done because in the send snapshot, inode 261 has
       of its hard links with a path of "d" as well.
    
    2) Two link operations are issued that create the new hard links for
       inode 261, whose names are "d" and "f2l2_2", at paths "/" and
       "o262-7-0/" respectively.
    
    3) Still while processing inode 261, unlink operations are issued to
       remove the old hard links of inode 261, with names "f2l1" and "f2l2",
       at paths "a/" and "d/". However path "d/" does not correspond anymore
       to the directory inode 262 but corresponds instead to a hard link of
       inode 261 (link command issued in the previous step). This makes the
       receiver fail with a ENOTDIR error when attempting the unlink
       operation.
    
    The problem happens because before sending the unlink operation, we failed
    to detect that inode 262 was one of ancestors for inode 261 in the parent
    snapshot, and therefore we didn't recompute the path for inode 262 before
    issuing the unlink operation for the link named "f2l2" of inode 262. The
    detection failed because the function "is_ancestor()" only follows the
    first hard link it finds for an inode instead of all of its hard links
    (as it was originally created for being used with directories only, for
    which only one hard link exists). So fix this by making "is_ancestor()"
    follow all hard links of the input inode.
    
    A test case for fstests follows soon.
    
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b274406266744e706c5b741cafa0013e7a032655
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Nov 21 20:46:49 2017 +0100

    bnxt_en: Fix an error handling path in 'bnxt_get_module_eeprom()'
    
    
    [ Upstream commit dea521a2b9f96e905fa2bb2f95e23ec00c2ec436 ]
    
    Error code returned by 'bnxt_read_sfp_module_eeprom_info()' is handled a
    few lines above when reading the A0 portion of the EEPROM.
    The same should be done when reading the A2 portion of the EEPROM.
    
    In order to correctly propagate an error, update 'rc' in this 2nd call as
    well, otherwise 0 (success) is returned.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c25d803a3b7d82e9549c081e30ce1b62bc1dc9d2
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Nov 28 14:26:30 2017 +0100

    net: phy: marvell10g: fix the PHY id mask
    
    
    [ Upstream commit 952b6b3b07877419386e719ff20917170e1ce684 ]
    
    The Marvell 10G PHY driver supports different hardware revisions, which
    have their bits 3..0 differing. To get the correct revision number these
    bits should be ignored. This patch fixes this by using the already
    defined MARVELL_PHY_ID_MASK (0xfffffff0) instead of the custom
    0xffffffff mask.
    
    Fixes: 20b2af32ff3f ("net: phy: add Marvell Alaska X 88X3310 10Gigabit PHY support")
    Suggested-by: Yan Markman <ymarkman@marvell.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e60a297e78dd7b15679751b5a28428a633161f8
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Nov 28 14:19:48 2017 +0100

    net: mvpp2: fix the txq_init error path
    
    
    [ Upstream commit ba2d8d887d962c2f790e6dc01b2fd25b4608720b ]
    
    When an allocation in the txq_init path fails, the allocated buffers
    end-up being freed twice: in the txq_init error path, and in txq_deinit.
    This lead to issues as txq_deinit would work on already freed memory
    regions:
    
        kernel BUG at mm/slub.c:3915!
        Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    
    This patch fixes this by removing the txq_init own error path, as the
    txq_deinit function is always called on errors. This was introduced by
    TSO as way more buffers are allocated.
    
    Fixes: 186cd4d4e414 ("net: mvpp2: software tso support")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 606592f53b877dc77ec1356ea82ea1d7bb6e8580
Author: Chao Yu <chao@kernel.org>
Date:   Tue Nov 28 23:01:44 2017 +0800

    quota: propagate error from __dquot_initialize
    
    
    [ Upstream commit 1a6152d36dee08da2be2a3030dceb45ef680460a ]
    
    In commit 6184fc0b8dd7 ("quota: Propagate error from ->acquire_dquot()"),
    we have propagated error from __dquot_initialize to caller, but we forgot
    to handle such error in add_dquot_ref(), so, currently, during quota
    accounting information initialization flow, if we failed for some of
    inodes, we just ignore such error, and do account for others, which is
    not a good implementation.
    
    In this patch, we choose to let user be aware of such error, so after
    turning on quota successfully, we can make sure all inodes disk usage
    can be accounted, which will be more reasonable.
    
    Suggested-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1271aeb0027cad65ae21737d9b0c60440dae9638
Author: Robert Lippert <roblip@gmail.com>
Date:   Mon Nov 27 15:51:55 2017 -0800

    hwmon: (pmbus) Use 64bit math for DIRECT format values
    
    
    [ Upstream commit bd467e4eababe4c04272c1e646f066db02734c79 ]
    
    Power values in the 100s of watt range can easily blow past
    32bit math limits when processing everything in microwatts.
    
    Use 64bit math instead to avoid these issues on common 32bit ARM
    BMC platforms.
    
    Fixes: 442aba78728e ("hwmon: PMBus device driver")
    Signed-off-by: Robert Lippert <rlippert@google.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02cfbaa6cd42cb7bb041519ffd8cd7f3e5a16863
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Mon Nov 13 07:25:40 2017 +0300

    lockd: fix "list_add double add" caused by legacy signal interface
    
    
    [ Upstream commit 81833de1a46edce9ca20cfe079872ac1c20ef359 ]
    
    restart_grace() uses hardcoded init_net.
    It can cause to "list_add double add" in following scenario:
    
    1) nfsd and lockd was started in several net namespaces
    2) nfsd in init_net was stopped (lockd was not stopped because
     it have users from another net namespaces)
    3) lockd got signal, called restart_grace() -> set_grace_period()
     and enabled lock_manager in hardcoded init_net.
    4) nfsd in init_net is started again,
     its lockd_up() calls set_grace_period() and tries to add
     lock_manager into init_net 2nd time.
    
    Jeff Layton suggest:
    "Make it safe to call locks_start_grace multiple times on the same
    lock_manager. If it's already on the global grace_list, then don't try
    to add it again.  (But we don't intentionally add twice, so for now we
    WARN about that case.)
    
    With this change, we also need to ensure that the nfsd4 lock manager
    initializes the list before we call locks_start_grace. While we're at
    it, move the rest of the nfsd_net initialization into
    nfs4_state_create_net. I see no reason to have it spread over two
    functions like it is today."
    
    Suggested patch was updated to generate warning in described situation.
    
    Suggested-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 156c80d4e197be386103a0ead001d14c4492ed3c
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Nov 10 10:19:26 2017 +0300

    race of lockd inetaddr notifiers vs nlmsvc_rqst change
    
    
    [ Upstream commit 6b18dd1c03e07262ea0866084856b2a3c5ba8d09 ]
    
    lockd_inet[6]addr_event use nlmsvc_rqst without taken nlmsvc_mutex,
    nlmsvc_rqst can be changed during execution of notifiers and crash the host.
    
    Patch enables access to nlmsvc_rqst only when it was correctly initialized
    and delays its cleanup until notifiers are no longer in use.
    
    Note that nlmsvc_rqst can be temporally set to ERR_PTR, so the "if
    (nlmsvc_rqst)" check in notifiers is insufficient on its own.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Tested-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 631db7f3895bd4138a7fb0c02f0db1750c79ee23
Author: Andrew Elble <aweits@rit.edu>
Date:   Thu Nov 9 13:41:10 2017 -0500

    nfsd: check for use of the closed special stateid
    
    
    [ Upstream commit ae254dac721d44c0bfebe2795df87459e2e88219 ]
    
    Prevent the use of the closed (invalid) special stateid by clients.
    
    Signed-off-by: Andrew Elble <aweits@rit.edu>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0849eb97066b741c5dacf96349741fad983b7cd
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Mon Nov 6 16:22:48 2017 +0300

    grace: replace BUG_ON by WARN_ONCE in exit_net hook
    
    
    [ Upstream commit b872285751c1af010e12d02bce7069e2061a58ca ]
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bd364d156b13a7f5ba6fd5892b1a4439aa1666b
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 3 08:00:15 2017 -0400

    nfsd: Ensure we check stateid validity in the seqid operation checks
    
    
    [ Upstream commit 9271d7e509c1bfc0b9a418caec29ec8d1ac38270 ]
    
    After taking the stateid st_mutex, we want to know that the stateid
    still represents valid state before performing any non-idempotent
    actions.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f71ff51063177085e7dc2eb33913a2a222700ad
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Fri Nov 3 08:00:12 2017 -0400

    nfsd: CLOSE SHOULD return the invalid special stateid for NFSv4.x (x>0)
    
    
    [ Upstream commit fb500a7cfee7f2f447d2bbf30cb59629feab6ac1 ]
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c900ee9118d7cd0d1e5eba6727dd6c3c37a46e7f
Author: Thomas Meyer <thomas@m3y3r.de>
Date:   Thu Aug 10 10:53:53 2017 +0200

    auxdisplay: img-ascii-lcd: Only build on archs that have IOMEM
    
    
    [ Upstream commit 141cbfba1d0502006463aa80f57c64086226af1a ]
    
    This avoids the MODPOST error:
    
      ERROR: "devm_ioremap_resource" [drivers/auxdisplay/img-ascii-lcd.ko] undefined!
    
    Signed-off-by: Thomas Meyer <thomas@m3y3r.de>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ffb252208a288589251ed0ada38424ccde217d5
Author: Eduardo Otubo <otubo@redhat.com>
Date:   Thu Nov 23 15:18:35 2017 +0100

    xen-netfront: remove warning when unloading module
    
    
    [ Upstream commit 5b5971df3bc2775107ddad164018a8a8db633b81 ]
    
    v2:
     * Replace busy wait with wait_event()/wake_up_all()
     * Cannot garantee that at the time xennet_remove is called, the
       xen_netback state will not be XenbusStateClosed, so added a
       condition for that
     * There's a small chance for the xen_netback state is
       XenbusStateUnknown by the time the xen_netfront switches to Closed,
       so added a condition for that.
    
    When unloading module xen_netfront from guest, dmesg would output
    warning messages like below:
    
      [  105.236836] xen:grant_table: WARNING: g.e. 0x903 still in use!
      [  105.236839] deferring g.e. 0x903 (pfn 0x35805)
    
    This problem relies on netfront and netback being out of sync. By the time
    netfront revokes the g.e.'s netback didn't have enough time to free all of
    them, hence displaying the warnings on dmesg.
    
    The trick here is to make netfront to wait until netback frees all the g.e.'s
    and only then continue to cleanup for the module removal, and this is done by
    manipulating both device states.
    
    Signed-off-by: Eduardo Otubo <otubo@redhat.com>
    Acked-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53c045c6d07d78bf0d547352df184c250cc29fe3
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Nov 22 17:52:24 2017 +0000

    i2c: i2c-boardinfo: fix memory leaks on devinfo
    
    
    [ Upstream commit 66a7c84d677e8e4a5a2ef4afdb9bd52e1399a866 ]
    
    Currently when an error occurs devinfo is still allocated but is
    unused when the error exit paths break out of the for-loop. Fix
    this by kfree'ing devinfo to avoid the leak.
    
    Detected by CoverityScan, CID#1416590 ("Resource Leak")
    
    Fixes: 4124c4eba402 ("i2c: allow attaching IRQ resources to i2c_board_info")
    Fixes: 0daaf99d8424 ("i2c: copy device properties when using i2c_register_board_info()")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30ac846da3600e299cd470ade18e1e859b6a41f8
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Nov 21 20:53:02 2017 -0800

    xfs: log recovery should replay deferred ops in order
    
    
    [ Upstream commit 509955823cc9cc225c05673b1b83d70ca70c5c60 ]
    
    As part of testing log recovery with dm_log_writes, Amir Goldstein
    discovered an error in the deferred ops recovery that lead to corruption
    of the filesystem metadata if a reflink+rmap filesystem happened to shut
    down midway through a CoW remap:
    
    "This is what happens [after failed log recovery]:
    
    "Phase 1 - find and verify superblock...
    "Phase 2 - using internal log
    "        - zero log...
    "        - scan filesystem freespace and inode maps...
    "        - found root inode chunk
    "Phase 3 - for each AG...
    "        - scan (but don't clear) agi unlinked lists...
    "        - process known inodes and perform inode discovery...
    "        - agno = 0
    "data fork in regular inode 134 claims CoW block 376
    "correcting nextents for inode 134
    "bad data fork in inode 134
    "would have cleared inode 134"
    
    Hou Tao dissected the log contents of exactly such a crash:
    
    "According to the implementation of xfs_defer_finish(), these ops should
    be completed in the following sequence:
    
    "Have been done:
    "(1) CUI: Oper (160)
    "(2) BUI: Oper (161)
    "(3) CUD: Oper (194), for CUI Oper (160)
    "(4) RUI A: Oper (197), free rmap [0x155, 2, -9]
    
    "Should be done:
    "(5) BUD: for BUI Oper (161)
    "(6) RUI B: add rmap [0x155, 2, 137]
    "(7) RUD: for RUI A
    "(8) RUD: for RUI B
    
    "Actually be done by xlog_recover_process_intents()
    "(5) BUD: for BUI Oper (161)
    "(6) RUI B: add rmap [0x155, 2, 137]
    "(7) RUD: for RUI B
    "(8) RUD: for RUI A
    
    "So the rmap entry [0x155, 2, -9] for COW should be freed firstly,
    then a new rmap entry [0x155, 2, 137] will be added. However, as we can see
    from the log record in post_mount.log (generated after umount) and the trace
    print, the new rmap entry [0x155, 2, 137] are added firstly, then the rmap
    entry [0x155, 2, -9] are freed."
    
    When reconstructing the internal log state from the log items found on
    disk, it's required that deferred ops replay in exactly the same order
    that they would have had the filesystem not gone down.  However,
    replaying unfinished deferred ops can create /more/ deferred ops.  These
    new deferred ops are finished in the wrong order.  This causes fs
    corruption and replay crashes, so let's create a single defer_ops to
    handle the subsequent ops created during replay, then use one single
    transaction at the end of log recovery to ensure that everything is
    replayed in the same order as they're supposed to be.
    
    Reported-by: Amir Goldstein <amir73il@gmail.com>
    Analyzed-by: Hou Tao <houtao1@huawei.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eccdbd4836a417b2b4e8f1f56db97c541d58e57
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Wed Nov 22 12:21:07 2017 -0800

    xfs: always free inline data before resetting inode fork during ifree
    
    
    [ Upstream commit 98c4f78dcdd8cec112d1cbc5e9a792ee6e5ab7a6 ]
    
    In xfs_ifree, we reset the data/attr forks to extents format without
    bothering to free any inline data buffer that might still be around
    after all the blocks have been truncated off the file.  Prior to commit
    43518812d2 ("xfs: remove support for inlining data/extents into the
    inode fork") nobody noticed because the leftover inline data after
    truncation was small enough to fit inside the inline buffer inside the
    fork itself.
    
    However, now that we've removed the inline buffer, we /always/ have to
    free the inline data buffer or else we leak them like crazy.  This test
    was found by turning on kmemleak for generic/001 or generic/388.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40ba283e2602d319d00d4f6539b5113eb8d25d24
Author: Jan H. Schönherr <jschoenh@amazon.de>
Date:   Fri Nov 24 22:39:01 2017 +0100

    KVM: Let KVM_SET_SIGNAL_MASK work as advertised
    
    
    [ Upstream commit 20b7035c66bacc909ae3ffe92c1a1ea7db99fe4f ]
    
    KVM API says for the signal mask you set via KVM_SET_SIGNAL_MASK, that
    "any unblocked signal received [...] will cause KVM_RUN to return with
    -EINTR" and that "the signal will only be delivered if not blocked by
    the original signal mask".
    
    This, however, is only true, when the calling task has a signal handler
    registered for a signal. If not, signal evaluation is short-circuited for
    SIG_IGN and SIG_DFL, and the signal is either ignored without KVM_RUN
    returning or the whole process is terminated.
    
    Make KVM_SET_SIGNAL_MASK behave as advertised by utilizing logic similar
    to that in do_sigtimedwait() to avoid short-circuiting of signals.
    
    Signed-off-by: Jan H. SchÃ¶nherr <jschoenh@amazon.de>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 809981870b6670d5ac2338325865900d88acf2b4
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Tue Nov 21 14:35:40 2017 -0700

    Btrfs: fix list_add corruption and soft lockups in fsync
    
    
    [ Upstream commit ebb70442cdd4872260c2415929c456be3562da82 ]
    
    Xfstests btrfs/146 revealed this corruption,
    
    [   58.138831] Buffer I/O error on dev dm-0, logical block 2621424, async page read
    [   58.151233] BTRFS error (device sdf): bdev /dev/mapper/error-test errs: wr 1, rd 0, flush 0, corrupt 0, gen 0
    [   58.152403] list_add corruption. prev->next should be next (ffff88005e6775d8), but was ffffc9000189be88. (prev=ffffc9000189be88).
    [   58.153518] ------------[ cut here ]------------
    [   58.153892] WARNING: CPU: 1 PID: 1287 at lib/list_debug.c:31 __list_add_valid+0x169/0x1f0
    ...
    [   58.157379] RIP: 0010:__list_add_valid+0x169/0x1f0
    ...
    [   58.161956] Call Trace:
    [   58.162264]  btrfs_log_inode_parent+0x5bd/0xfb0 [btrfs]
    [   58.163583]  btrfs_log_dentry_safe+0x60/0x80 [btrfs]
    [   58.164003]  btrfs_sync_file+0x4c2/0x6f0 [btrfs]
    [   58.164393]  vfs_fsync_range+0x5f/0xd0
    [   58.164898]  do_fsync+0x5a/0x90
    [   58.165170]  SyS_fsync+0x10/0x20
    [   58.165395]  entry_SYSCALL_64_fastpath+0x1f/0xbe
    ...
    
    It turns out that we could record btrfs_log_ctx:io_err in
    log_one_extents when IO fails, but make log_one_extents() return '0'
    instead of -EIO, so the IO error is not acknowledged by the callers,
    i.e.  btrfs_log_inode_parent(), which would remove btrfs_log_ctx:list
    from list head 'root->log_ctxs'.  Since btrfs_log_ctx is allocated
    from stack memory, it'd get freed with a object alive on the
    list. then a future list_add will throw the above warning.
    
    This returns the correct error in the above case.
    
    Jeff also reported this while testing against his fsync error
    patch set[1].
    
    [1]: https://www.spinics.net/lists/linux-btrfs/msg65308.html
    "btrfs list corruption and soft lockups while testing writeback error handling"
    
    Fixes: 8407f553268a4611f254 ("Btrfs: fix data corruption after fast fsync and writeback error")
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce1bbfb5e67563bc01c0ba025fefc3b4b1fc391
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Mon Nov 20 14:52:21 2017 -0800

    KVM: VMX: Fix rflags cache during vCPU reset
    
    
    [ Upstream commit c37c28730bb031cc8a44a130c2555c0f3efbe2d0 ]
    
    Reported by syzkaller:
    
       *** Guest State ***
       CR0: actual=0x0000000080010031, shadow=0x0000000060000010, gh_mask=fffffffffffffff7
       CR4: actual=0x0000000000002061, shadow=0x0000000000000000, gh_mask=ffffffffffffe8f1
       CR3 = 0x000000002081e000
       RSP = 0x000000000000fffa  RIP = 0x0000000000000000
       RFLAGS=0x00023000         DR7 = 0x00000000000000
              ^^^^^^^^^^
       ------------[ cut here ]------------
       WARNING: CPU: 6 PID: 24431 at /home/kernel/linux/arch/x86/kvm//x86.c:7302 kvm_arch_vcpu_ioctl_run+0x651/0x2ea0 [kvm]
       CPU: 6 PID: 24431 Comm: reprotest Tainted: G        W  OE   4.14.0+ #26
       RIP: 0010:kvm_arch_vcpu_ioctl_run+0x651/0x2ea0 [kvm]
       RSP: 0018:ffff880291d179e0 EFLAGS: 00010202
       Call Trace:
        kvm_vcpu_ioctl+0x479/0x880 [kvm]
        do_vfs_ioctl+0x142/0x9a0
        SyS_ioctl+0x74/0x80
        entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The failed vmentry is triggered by the following beautified testcase:
    
        #include <unistd.h>
        #include <sys/syscall.h>
        #include <string.h>
        #include <stdint.h>
        #include <linux/kvm.h>
        #include <fcntl.h>
        #include <sys/ioctl.h>
    
        long r[5];
        int main()
        {
            struct kvm_debugregs dr = { 0 };
    
            r[2] = open("/dev/kvm", O_RDONLY);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0);
            r[4] = ioctl(r[3], KVM_CREATE_VCPU, 7);
            struct kvm_guest_debug debug = {
                    .control = 0xf0403,
                    .arch = {
                            .debugreg[6] = 0x2,
                            .debugreg[7] = 0x2
                    }
            };
            ioctl(r[4], KVM_SET_GUEST_DEBUG, &debug);
            ioctl(r[4], KVM_RUN, 0);
        }
    
    which testcase tries to setup the processor specific debug
    registers and configure vCPU for handling guest debug events through
    KVM_SET_GUEST_DEBUG.  The KVM_SET_GUEST_DEBUG ioctl will get and set
    rflags in order to set TF bit if single step is needed. All regs' caches
    are reset to avail and GUEST_RFLAGS vmcs field is reset to 0x2 during vCPU
    reset. However, the cache of rflags is not reset during vCPU reset. The
    function vmx_get_rflags() returns an unreset rflags cache value since
    the cache is marked avail, it is 0 after boot. Vmentry fails if the
    rflags reserved bit 1 is 0.
    
    This patch fixes it by resetting both the GUEST_RFLAGS vmcs field and
    its cache to 0x2 during vCPU reset.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f1b5183aee337be1c2444c7f6be189ddf14d068
Author: Wanpeng Li <kernellwp@gmail.com>
Date:   Mon Nov 20 14:55:05 2017 -0800

    KVM: X86: Fix softlockup when get the current kvmclock
    
    
    [ Upstream commit e70b57a6ce4e8b92a56a615ae79bdb2bd66035e7 ]
    
     watchdog: BUG: soft lockup - CPU#6 stuck for 22s! [qemu-system-x86:10185]
     CPU: 6 PID: 10185 Comm: qemu-system-x86 Tainted: G           OE   4.14.0-rc4+ #4
     RIP: 0010:kvm_get_time_scale+0x4e/0xa0 [kvm]
     Call Trace:
      get_time_ref_counter+0x5a/0x80 [kvm]
      kvm_hv_process_stimers+0x120/0x5f0 [kvm]
      kvm_arch_vcpu_ioctl_run+0x4b4/0x1690 [kvm]
      kvm_vcpu_ioctl+0x33a/0x620 [kvm]
      do_vfs_ioctl+0xa1/0x5d0
      SyS_ioctl+0x79/0x90
      entry_SYSCALL_64_fastpath+0x1e/0xa9
    
    This can be reproduced when running kvm-unit-tests/hyperv_stimer.flat and
    cpu-hotplug stress simultaneously. __this_cpu_read(cpu_tsc_khz) returns 0
    (set in kvmclock_cpu_down_prep()) when the pCPU is unhotplug which results
    in kvm_get_time_scale() gets into an infinite loop.
    
    This patch fixes it by treating the unhotplug pCPU as not using master clock.
    
    Reviewed-by: Radim Krčmář <rkrcmar@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a447435afabf52b16d1295d0f18bef5ab3abb65
Author: Jeff Layton <jlayton@kernel.org>
Date:   Mon Oct 30 11:20:15 2017 -0400

    reiserfs: remove unneeded i_version bump
    
    
    [ Upstream commit 9f97df50c52c2887432debb6238f4e43567386a5 ]
    
    The i_version field in reiserfs is not initialized and is only ever
    updated here. Nothing ever views it, so just remove it.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14a4e9f6bde8cdba1c0896c0af31304a934e0427
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:05:36 2017 +0800

    sctp: set sender next_tsn for the old result with ctsn_ack_point plus 1
    
    
    [ Upstream commit 52a395896a051a3d5c34fba67c324f69ec5e67c6 ]
    
    When doing asoc reset, if the sender of the response has already sent some
    chunk and increased asoc->next_tsn before the duplicate request comes, the
    response will use the old result with an incorrect sender next_tsn.
    
    Better than asoc->next_tsn, asoc->ctsn_ack_point can't be changed after
    the sender of the response has performed the asoc reset and before the
    peer has confirmed it, and it's value is still asoc->next_tsn original
    value minus 1.
    
    This patch sets sender next_tsn for the old result with ctsn_ack_point
    plus 1 when processing the duplicate request, to make sure the sender
    next_tsn value peer gets will be always right.
    
    Fixes: 692787cef651 ("sctp: implement receiver-side procedures for the SSN/TSN Reset Request Parameter")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55f3de731c0b21ad37f80c7819a925278356ddf1
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:05:35 2017 +0800

    sctp: avoid flushing unsent queue when doing asoc reset
    
    
    [ Upstream commit 159f2a7456c6ae95c1e1a58e8b8ec65ef12d51cf ]
    
    Now when doing asoc reset, it cleans up sacked and abandoned queues
    by calling sctp_outq_free where it also cleans up unsent, retransmit
    and transmitted queues.
    
    It's safe for the sender of response, as these 3 queues are empty at
    that time. But when the receiver of response is doing the reset, the
    users may already enqueue some chunks into unsent during the time
    waiting the response, and these chunks should not be flushed.
    
    To void the chunks in it would be removed, it moves the queue into a
    temp list, then gets it back after sctp_outq_free is done.
    
    The patch also fixes some incorrect comments in
    sctp_process_strreset_tsnreq.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4c72a410f3bbcddac69f666024934a492dd8c38
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 25 21:05:34 2017 +0800

    sctp: only allow the asoc reset when the asoc outq is empty
    
    
    [ Upstream commit 5c6144a0eb5366ae07fc5059301b139338f39bbd ]
    
    As it says in rfc6525#section5.1.4, before sending the request,
    
       C2:  The sender has either no outstanding TSNs or considers all
            outstanding TSNs abandoned.
    
    Prior to this patch, it tried to consider all outstanding TSNs abandoned
    by dropping all chunks in all outqs with sctp_outq_free (even including
    sacked, retransmit and transmitted queues) when doing this reset, which
    is too aggressive.
    
    To make it work gently, this patch will only allow the asoc reset when
    the sender has no outstanding TSNs by checking if unsent, transmitted
    and retransmit are all empty with sctp_outq_is_empty before sending
    and processing the request.
    
    Fixes: 692787cef651 ("sctp: implement receiver-side procedures for the SSN/TSN Reset Request Parameter")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 928066e61940e3c19f85d543d15c55fcae20208f
Author: Josef Bacik <jbacik@fb.com>
Date:   Wed Nov 15 16:20:52 2017 -0500

    btrfs: fix deadlock when writing out space cache
    
    
    [ Upstream commit b77000ed558daa3bef0899d29bf171b8c9b5e6a8 ]
    
    If we fail to prepare our pages for whatever reason (out of memory in
    our case) we need to make sure to drop the block_group->data_rwsem,
    otherwise hilarity ensues.
    
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Liu Bo <bo.li.liu@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add label and use existing unlocking code ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 841211271eccb49f7f4a71442c13a09d4b6a92b0
Author: Chun-Yeow Yeoh <yeohchunyeow@gmail.com>
Date:   Tue Nov 14 23:20:05 2017 +0800

    mac80211: fix the update of path metric for RANN frame
    
    
    [ Upstream commit fbbdad5edf0bb59786a51b94a9d006bc8c2da9a2 ]
    
    The previous path metric update from RANN frame has not considered
    the own link metric toward the transmitting mesh STA. Fix this.
    
    Reported-by: Michael65535
    Signed-off-by: Chun-Yeow Yeoh <yeohchunyeow@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e23090a7d8f05f03cf564148472130286f5ca9bf
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Nov 21 14:46:08 2017 +0100

    mac80211: use QoS NDP for AP probing
    
    
    [ Upstream commit 7b6ddeaf27eca72795ceeae2f0f347db1b5f9a30 ]
    
    When connected to a QoS/WMM AP, mac80211 should use a QoS NDP
    for probing it, instead of a regular non-QoS one, fix this.
    
    Change all the drivers to *not* allow QoS NDP for now, even
    though it looks like most of them should be OK with that.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 093a5cb46d05895d02c36d5be784c7a71cd0c585
Author: Mirza Krak <mirza.krak@endian.se>
Date:   Wed Nov 15 08:24:46 2017 +0000

    drm/rockchip: dw-mipi-dsi: fix possible un-balanced runtime PM enable
    
    
    [ Upstream commit 517f56839f581618d24f2e67a35738a5c6cbaecb ]
    
    In the case where the bind gets deferred we would end up with a
    un-balanced runtime PM enable call.
    
    Fix this by simply moving the pm_runtime_enable call to the end of
    the bind function when all paths have succeeded.
    
    Signed-off-by: Mirza Krak <mirza.krak@endian.se>
    Signed-off-by: Sandy Huang <hjc@rock-chips.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510734286-37434-1-git-send-email-mirza.krak@endian.se
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be97a9abe9e0a3166320f21a42dc5e0966cb5c4
Author: zhangliping <zhangliping02@baidu.com>
Date:   Sat Nov 25 22:02:12 2017 +0800

    openvswitch: fix the incorrect flow action alloc size
    
    
    [ Upstream commit 67c8d22a73128ff910e2287567132530abcf5b71 ]
    
    If we want to add a datapath flow, which has more than 500 vxlan outputs'
    action, we will get the following error reports:
      openvswitch: netlink: Flow action size 32832 bytes exceeds max
      openvswitch: netlink: Flow action size 32832 bytes exceeds max
      openvswitch: netlink: Actions may not be safe on all matching packets
      ... ...
    
    It seems that we can simply enlarge the MAX_ACTIONS_BUFSIZE to fix it, but
    this is not the root cause. For example, for a vxlan output action, we need
    about 60 bytes for the nlattr, but after it is converted to the flow
    action, it only occupies 24 bytes. This means that we can still support
    more than 1000 vxlan output actions for a single datapath flow under the
    the current 32k max limitation.
    
    So even if the nla_len(attr) is larger than MAX_ACTIONS_BUFSIZE, we
    shouldn't report EINVAL and keep it move on, as the judgement can be
    done by the reserve_sfa_size.
    
    Signed-off-by: zhangliping <zhangliping02@baidu.com>
    Acked-by: Pravin B Shelar <pshelar@ovn.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd45c5e5be071fb9fee6e5f82fed6e0bf67737d5
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Thu Nov 23 17:35:22 2017 +0200

    nvme-rdma: don't complete requests before a send work request has completed
    
    
    [ Upstream commit 4af7f7ff92a42b6c713293c99e7982bcfcf51a70 ]
    
    In order to guarantee that the HCA will never get an access violation
    (either from invalidated rkey or from iommu) when retrying a send
    operation we must complete a request only when both send completion and
    the nvme cqe has arrived. We need to set the send/recv completions flags
    atomically because we might have more than a single context accessing the
    request concurrently (one is cq irq-poll context and the other is
    user-polling used in IOCB_HIPRI).
    
    Only then we are safe to invalidate the rkey (if needed), unmap the host
    buffers, and complete the IO.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 120c41af36df87401576f09498abf5696fb3d474
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Mon Nov 13 03:35:27 2017 +0300

    uapi: fix linux/kfd_ioctl.h userspace compilation errors
    
    
    [ Upstream commit b4d085201d86af69cbda2214c6dafc0be240ef9f ]
    
    Consistently use types provided by <linux/types.h> via <drm/drm.h>
    to fix the following linux/kfd_ioctl.h userspace compilation errors:
    
    /usr/include/linux/kfd_ioctl.h:236:2: error: unknown type name 'uint64_t'
      uint64_t va_addr; /* to KFD */
    /usr/include/linux/kfd_ioctl.h:237:2: error: unknown type name 'uint32_t'
      uint32_t gpu_id; /* to KFD */
    /usr/include/linux/kfd_ioctl.h:238:2: error: unknown type name 'uint32_t'
      uint32_t pad;
    /usr/include/linux/kfd_ioctl.h:243:2: error: unknown type name 'uint64_t'
      uint64_t tile_config_ptr;
    /usr/include/linux/kfd_ioctl.h:245:2: error: unknown type name 'uint64_t'
      uint64_t macro_tile_config_ptr;
    /usr/include/linux/kfd_ioctl.h:249:2: error: unknown type name 'uint32_t'
      uint32_t num_tile_configs;
    /usr/include/linux/kfd_ioctl.h:253:2: error: unknown type name 'uint32_t'
      uint32_t num_macro_tile_configs;
    /usr/include/linux/kfd_ioctl.h:255:2: error: unknown type name 'uint32_t'
      uint32_t gpu_id;  /* to KFD */
    /usr/include/linux/kfd_ioctl.h:256:2: error: unknown type name 'uint32_t'
      uint32_t gb_addr_config; /* from KFD */
    /usr/include/linux/kfd_ioctl.h:257:2: error: unknown type name 'uint32_t'
      uint32_t num_banks;  /* from KFD */
    /usr/include/linux/kfd_ioctl.h:258:2: error: unknown type name 'uint32_t'
      uint32_t num_ranks;  /* from KFD */
    
    Fixes: 6a1c9510694fe ("drm/amdkfd: Adding new IOCTL for scratch memory v2")
    Fixes: 5d71dbc3a5886 ("drm/amdkfd: Implement image tiling mode support v2")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b15f53b46d880fae35c976d8285c09debbb760bb
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Nov 1 19:21:57 2017 -0400

    drm/amdkfd: Fix SDMA oversubsription handling
    
    
    [ Upstream commit 8c946b8988acec785bcf67088b6bd0747f36d2d3 ]
    
    SDMA only supports a fixed number of queues. HWS cannot handle
    oversubscription.
    
    Signed-off-by: shaoyun liu <shaoyun.liu@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64aca9911a1097b224739e2cf060c3114e6bd59f
Author: shaoyunl <Shaoyun.Liu@amd.com>
Date:   Wed Nov 1 19:21:56 2017 -0400

    drm/amdkfd: Fix SDMA ring buffer size calculation
    
    
    [ Upstream commit d12fb13f23199faa7e536acec1db49068e5a067d ]
    
    ffs function return the position of the first bit set on 1 based.
    (bit zero returns 1).
    
    Signed-off-by: shaoyun liu <shaoyun.liu@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a595f190fc6be88c3942b468819378a977379fe1
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Nov 1 19:21:55 2017 -0400

    drm/amdgpu: Fix SDMA load/unload sequence on HWS disabled mode
    
    
    [ Upstream commit cf21654b40968609779751b34e7923180968fe5b ]
    
    Fix the SDMA load and unload sequence as suggested by HW document.
    
    Signed-off-by: shaoyun liu <shaoyun.liu@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Acked-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9f175778bb9e4a5fe6d46efde1b353f15fde1fa
Author: Michael Lyle <mlyle@lyle.org>
Date:   Fri Nov 24 15:14:27 2017 -0800

    bcache: check return value of register_shrinker
    
    
    [ Upstream commit 6c4ca1e36cdc1a0a7a84797804b87920ccbebf51 ]
    
    register_shrinker is now __must_check, so check it to kill a warning.
    Caller of bch_btree_cache_alloc in super.c appropriately checks return
    value so this is fully plumbed through.
    
    This V2 fixes checkpatch warnings and improves the commit description,
    as I was too hasty getting the previous version out.
    
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Vojtech Pavlik <vojtech@suse.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1392633bafde919b3d78449b8a1a1c9f50f2b72e
Author: David Howells <dhowells@redhat.com>
Date:   Fri Nov 24 10:18:42 2017 +0000

    rxrpc: Fix service endpoint expiry
    
    
    [ Upstream commit f859ab61875978eeaa539740ff7f7d91f5d60006 ]
    
    RxRPC service endpoints expire like they're supposed to by the following
    means:
    
     (1) Mark dead rxrpc_net structs (with ->live) rather than twiddling the
         global service conn timeout, otherwise the first rxrpc_net struct to
         die will cause connections on all others to expire immediately from
         then on.
    
     (2) Mark local service endpoints for which the socket has been closed
         (->service_closed) so that the expiration timeout can be much
         shortened for service and client connections going through that
         endpoint.
    
     (3) rxrpc_put_service_conn() needs to schedule the reaper when the usage
         count reaches 1, not 0, as idle conns have a 1 count.
    
     (4) The accumulator for the earliest time we might want to schedule for
         should be initialised to jiffies + MAX_JIFFY_OFFSET, not ULONG_MAX as
         the comparison functions use signed arithmetic.
    
     (5) Simplify the expiration handling, adding the expiration value to the
         idle timestamp each time rather than keeping track of the time in the
         past before which the idle timestamp must go to be expired.  This is
         much easier to read.
    
     (6) Ignore the timeouts if the net namespace is dead.
    
     (7) Restart the service reaper work item rather the client reaper.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b89372f234a83d64a8f7e80fdcfadb64d9a9aeca
Author: David Howells <dhowells@redhat.com>
Date:   Fri Nov 24 10:18:40 2017 +0000

    rxrpc: Provide a different lockdep key for call->user_mutex for kernel calls
    
    
    [ Upstream commit 9faaff593404a9c4e5abc6839a641635d7b9d0cd ]
    
    Provide a different lockdep key for rxrpc_call::user_mutex when the call is
    made on a kernel socket, such as by the AFS filesystem.
    
    The problem is that lockdep registers a false positive between userspace
    calling the sendmsg syscall on a user socket where call->user_mutex is held
    whilst userspace memory is accessed whereas the AFS filesystem may perform
    operations with mmap_sem held by the caller.
    
    In such a case, the following warning is produced.
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.14.0-fscache+ #243 Tainted: G            E
    ------------------------------------------------------
    modpost/16701 is trying to acquire lock:
     (&vnode->io_lock){+.+.}, at: [<ffffffffa000fc40>] afs_begin_vnode_operation+0x33/0x77 [kafs]
    
    but task is already holding lock:
     (&mm->mmap_sem){++++}, at: [<ffffffff8104376a>] __do_page_fault+0x1ef/0x486
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #3 (&mm->mmap_sem){++++}:
           __might_fault+0x61/0x89
           _copy_from_iter_full+0x40/0x1fa
           rxrpc_send_data+0x8dc/0xff3
           rxrpc_do_sendmsg+0x62f/0x6a1
           rxrpc_sendmsg+0x166/0x1b7
           sock_sendmsg+0x2d/0x39
           ___sys_sendmsg+0x1ad/0x22b
           __sys_sendmsg+0x41/0x62
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    -> #2 (&call->user_mutex){+.+.}:
           __mutex_lock+0x86/0x7d2
           rxrpc_new_client_call+0x378/0x80e
           rxrpc_kernel_begin_call+0xf3/0x154
           afs_make_call+0x195/0x454 [kafs]
           afs_vl_get_capabilities+0x193/0x198 [kafs]
           afs_vl_lookup_vldb+0x5f/0x151 [kafs]
           afs_create_volume+0x2e/0x2f4 [kafs]
           afs_mount+0x56a/0x8d7 [kafs]
           mount_fs+0x6a/0x109
           vfs_kern_mount+0x67/0x135
           do_mount+0x90b/0xb57
           SyS_mount+0x72/0x98
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    -> #1 (k-sk_lock-AF_RXRPC){+.+.}:
           lock_sock_nested+0x74/0x8a
           rxrpc_kernel_begin_call+0x8a/0x154
           afs_make_call+0x195/0x454 [kafs]
           afs_fs_get_capabilities+0x17a/0x17f [kafs]
           afs_probe_fileserver+0xf7/0x2f0 [kafs]
           afs_select_fileserver+0x83f/0x903 [kafs]
           afs_fetch_status+0x89/0x11d [kafs]
           afs_iget+0x16f/0x4f8 [kafs]
           afs_mount+0x6c6/0x8d7 [kafs]
           mount_fs+0x6a/0x109
           vfs_kern_mount+0x67/0x135
           do_mount+0x90b/0xb57
           SyS_mount+0x72/0x98
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    -> #0 (&vnode->io_lock){+.+.}:
           lock_acquire+0x174/0x19f
           __mutex_lock+0x86/0x7d2
           afs_begin_vnode_operation+0x33/0x77 [kafs]
           afs_fetch_data+0x80/0x12a [kafs]
           afs_readpages+0x314/0x405 [kafs]
           __do_page_cache_readahead+0x203/0x2ba
           filemap_fault+0x179/0x54d
           __do_fault+0x17/0x60
           __handle_mm_fault+0x6d7/0x95c
           handle_mm_fault+0x24e/0x2a3
           __do_page_fault+0x301/0x486
           do_page_fault+0x236/0x259
           page_fault+0x22/0x30
           __clear_user+0x3d/0x60
           padzero+0x1c/0x2b
           load_elf_binary+0x785/0xdc7
           search_binary_handler+0x81/0x1ff
           do_execveat_common.isra.14+0x600/0x888
           do_execve+0x1f/0x21
           SyS_execve+0x28/0x2f
           do_syscall_64+0x89/0x1be
           return_from_SYSCALL_64+0x0/0x75
    
    other info that might help us debug this:
    
    Chain exists of:
      &vnode->io_lock --> &call->user_mutex --> &mm->mmap_sem
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&mm->mmap_sem);
                                   lock(&call->user_mutex);
                                   lock(&mm->mmap_sem);
      lock(&vnode->io_lock);
    
     *** DEADLOCK ***
    
    1 lock held by modpost/16701:
     #0:  (&mm->mmap_sem){++++}, at: [<ffffffff8104376a>] __do_page_fault+0x1ef/0x486
    
    stack backtrace:
    CPU: 0 PID: 16701 Comm: modpost Tainted: G            E   4.14.0-fscache+ #243
    Hardware name: ASUS All Series/H97-PLUS, BIOS 2306 10/09/2014
    Call Trace:
     dump_stack+0x67/0x8e
     print_circular_bug+0x341/0x34f
     check_prev_add+0x11f/0x5d4
     ? add_lock_to_list.isra.12+0x8b/0x8b
     ? add_lock_to_list.isra.12+0x8b/0x8b
     ? __lock_acquire+0xf77/0x10b4
     __lock_acquire+0xf77/0x10b4
     lock_acquire+0x174/0x19f
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     __mutex_lock+0x86/0x7d2
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     ? afs_begin_vnode_operation+0x33/0x77 [kafs]
     afs_begin_vnode_operation+0x33/0x77 [kafs]
     afs_fetch_data+0x80/0x12a [kafs]
     afs_readpages+0x314/0x405 [kafs]
     __do_page_cache_readahead+0x203/0x2ba
     ? filemap_fault+0x179/0x54d
     filemap_fault+0x179/0x54d
     __do_fault+0x17/0x60
     __handle_mm_fault+0x6d7/0x95c
     handle_mm_fault+0x24e/0x2a3
     __do_page_fault+0x301/0x486
     do_page_fault+0x236/0x259
     page_fault+0x22/0x30
    RIP: 0010:__clear_user+0x3d/0x60
    RSP: 0018:ffff880071e93da0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: 000000000000011c RCX: 000000000000011c
    RDX: 0000000000000000 RSI: 0000000000000008 RDI: 000000000060f720
    RBP: 000000000060f720 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000001 R11: ffff8800b5459b68 R12: ffff8800ce150e00
    R13: 000000000060f720 R14: 00000000006127a8 R15: 0000000000000000
     padzero+0x1c/0x2b
     load_elf_binary+0x785/0xdc7
     search_binary_handler+0x81/0x1ff
     do_execveat_common.isra.14+0x600/0x888
     do_execve+0x1f/0x21
     SyS_execve+0x28/0x2f
     do_syscall_64+0x89/0x1be
     entry_SYSCALL64_slow_path+0x25/0x25
    RIP: 0033:0x7fdb6009ee07
    RSP: 002b:00007fff566d9728 EFLAGS: 00000246 ORIG_RAX: 000000000000003b
    RAX: ffffffffffffffda RBX: 000055ba57280900 RCX: 00007fdb6009ee07
    RDX: 000055ba5727f270 RSI: 000055ba5727cac0 RDI: 000055ba57280900
    RBP: 000055ba57280900 R08: 00007fff566d9700 R09: 0000000000000000
    R10: 000055ba5727cac0 R11: 0000000000000246 R12: 0000000000000000
    R13: 000055ba5727cac0 R14: 000055ba5727f270 R15: 0000000000000000
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92c131bebf4737866ffb31aeed45085ce827e0af
Author: David Howells <dhowells@redhat.com>
Date:   Fri Nov 24 10:18:40 2017 +0000

    rxrpc: The mutex lock returned by rxrpc_accept_call() needs releasing
    
    
    [ Upstream commit 03a6c82218b9a87014b2c6c4e178294fdc8ebd8a ]
    
    The caller of rxrpc_accept_call() must release the lock on call->user_mutex
    returned by that function.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2443fb287cc52a98a3b6f417a5e46bf2383e5ba
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed Nov 22 17:19:32 2017 +0100

    s390: fix alloc_pgste check in init_new_context again
    
    
    [ Upstream commit 53c4ab70c11c3ba1b9e3caa8e8c17e9c16d9cbc0 ]
    
    git commit badb8bb983e9 "fix alloc_pgste check in init_new_context" fixed
    the problem of 'current->mm == NULL' in init_new_context back in 2011.
    
    git commit 3eabaee998c7 "KVM: s390: allow sie enablement for multi-
    threaded programs" completely removed the check against alloc_pgste.
    
    git commit 23fefe119ceb "s390/kvm: avoid global config of vm.alloc_pgste=1"
    re-added a check against the alloc_pgste flag but without the required
    check for current->mm != NULL.
    
    For execve() called by a kernel thread init_new_context() reads from
    ((struct mm_struct *) NULL)->context.alloc_pgste to decide between
    2K vs 4K page tables. If the bit happens to be set for the init process
    it will be created with large page tables. This decision is inherited by
    all the children of init, this waste quite some memory.
    
    Re-add the check for 'current->mm != NULL'.
    
    Fixes: 23fefe119ceb ("s390/kvm: avoid global config of vm.alloc_pgste=1")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e194c9c55964455366e9e1b93fe02f932ecf346
Author: David Disseldorp <ddiss@suse.de>
Date:   Wed Nov 8 17:29:44 2017 +0100

    null_blk: fix dev->badblocks leak
    
    
    [ Upstream commit 1addb798e93893d33c8dfab743cd44f09fd7719a ]
    
    null_alloc_dev() allocates memory for dev->badblocks, but cleanup
    currently only occurs in the configfs release codepath, missing a number
    of other places.
    
    This bug was found running the blktests block/010 test, alongside
    kmemleak:
    rapido1:/blktests# ./check block/010
    ...
    rapido1:/blktests# echo scan > /sys/kernel/debug/kmemleak
    [  306.966708] kmemleak: 32 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
    rapido1:/blktests# cat /sys/kernel/debug/kmemleak
    unreferenced object 0xffff88001f86d000 (size 4096):
      comm "modprobe", pid 231, jiffies 4294892415 (age 318.252s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff814b0379>] kmemleak_alloc+0x49/0xa0
        [<ffffffff810f180f>] kmem_cache_alloc+0x9f/0xe0
        [<ffffffff8124e45f>] badblocks_init+0x2f/0x60
        [<ffffffffa0019fae>] 0xffffffffa0019fae
        [<ffffffffa0021273>] nullb_device_badblocks_store+0x63/0x130 [null_blk]
        [<ffffffff810004cd>] do_one_initcall+0x3d/0x170
        [<ffffffff8109fe0d>] do_init_module+0x56/0x1e9
        [<ffffffff8109ebd7>] load_module+0x1c47/0x26a0
        [<ffffffff8109f819>] SyS_finit_module+0xa9/0xd0
        [<ffffffff814b4f60>] entry_SYSCALL_64_fastpath+0x13/0x94
    
    Fixes: 2f54a613c942 ("nullb: badbblocks support")
    Reviewed-by: Shaohua Li <shli@fb.com>
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d290178f00d483df27dc17bf41797355bd952d9d
Author: James Hogan <jhogan@kernel.org>
Date:   Wed Nov 15 21:17:55 2017 +0000

    cpufreq: Add Loongson machine dependencies
    
    
    [ Upstream commit 0d307935fefa6389eb726c6362351c162c949101 ]
    
    The MIPS loongson cpufreq drivers don't build unless configured for the
    correct machine type, due to dependency on machine specific architecture
    headers and symbols in machine specific platform code.
    
    More specifically loongson1-cpufreq.c uses RST_CPU_EN and RST_CPU,
    neither of which is defined in asm/mach-loongson32/regs-clk.h unless
    CONFIG_LOONGSON1_LS1B=y, and loongson2_cpufreq.c references
    loongson2_clockmod_table[], which is only defined in
    arch/mips/loongson64/lemote-2f/clock.c, i.e. when
    CONFIG_LEMOTE_MACH2F=y.
    
    Add these dependencies to Kconfig to avoid randconfig / allyesconfig
    build failures (e.g. when based on BMIPS which also has a cpufreq
    driver).
    
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb78d818c30d4fa700d24baf1d91d6337da272db
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Oct 15 21:24:49 2017 +0200

    ACPI / bus: Leave modalias empty for devices which are not present
    
    
    [ Upstream commit 10809bb976648ac58194a629e3d7af99e7400297 ]
    
    Most Bay and Cherry Trail devices use a generic DSDT with all possible
    peripheral devices present in the DSDT, with their _STA returning 0x00 or
    0x0f based on AML variables which describe what is actually present on
    the board.
    
    Since ACPI device objects with a 0x00 status (not present) still get an
    entry under /sys/bus/acpi/devices, and those entry had an acpi:PNPID
    modalias, userspace would end up loading modules for non present hardware.
    
    This commit fixes this by leaving the modalias empty for non present
    devices. This results in 10 modules less being loaded with a generic
    distro kernel config on my Cherry Trail test-device (a GPD pocket).
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82b90de5b111deaa09ec61594a6df84a426dceba
Author: Harald Freudenberger <freude@linux.vnet.ibm.com>
Date:   Fri Nov 17 16:32:22 2017 +0100

    s390/zcrypt: Fix wrong comparison leading to strange load balancing
    
    
    [ Upstream commit 0b0882672640ced4deeebf84da0b88b6389619c4 ]
    
    The function to decide if one zcrypt queue is better than
    another one compared two pointers instead of comparing the
    values where the pointers refer to. So within the same
    zcrypt card when load of each queue was equal just one queue
    was used. This effect only appears on relatively lite load,
    typically with one thread applications.
    
    This patch fixes the wrong comparison and now the counters
    show that requests are balanced equally over all available
    queues within the cards.
    
    There is no performance improvement coming with this fix.
    As long as the queue depth for an APQN queue is not touched,
    processing is not faster when requests are spread over
    queues within the same card hardware. So this fix only
    beautifies the lszcrypt counter printouts.
    
    Signed-off-by: Harald Freudenberger <freude@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18c128456eacb6fc022264f178c3a821180854c2
Author: Thomas Richter <tmricht@linux.vnet.ibm.com>
Date:   Thu Nov 16 14:26:36 2017 +0100

    s390/topology: fix compile error in file arch/s390/kernel/smp.c
    
    
    [ Upstream commit 38389ec84e835fa31a59b7dabb18343106a6d0d5 ]
    
    Commit 1887aa07b676
    ("s390/topology: add detection of dedicated vs shared CPUs")
    introduced following compiler error when CONFIG_SCHED_TOPOLOGY is not set.
    
     CC      arch/s390/kernel/smp.o
    ...
    arch/s390/kernel/smp.c: In function ‘smp_start_secondary’:
    arch/s390/kernel/smp.c:812:6: error: implicit declaration of function
            ‘topology_cpu_dedicated’; did you mean ‘topology_cpu_init’?
    
    This patch fixes the compiler error by adding function
    topology_cpu_dedicated() to return false when this config option is
    not defined.
    
    Signed-off-by: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71686d2a17592a79c7174efad05ca79d3270b30d
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Nov 10 15:38:45 2017 -0800

    nvmet-fc: correct ref counting error when deferred rcv used
    
    
    [ Upstream commit 619c62dcc62b957d17cccde2081cad527b020883 ]
    
    Whenever a cmd is received a reference is taken while looking up the
    queue. The reference is removed after the cmd is done as the iod is
    returned for reuse. The fod may be reused for a deferred (recevied but
    no job context) cmd.  Existing code removes the reference only if the
    fod is not reused for another command. Given the fod may be used for
    one or more ios, although a reference was taken per io, it won't be
    matched on the frees.
    
    Remove the reference on every fod free. This pairs the references to
    each io.
    
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93a4bcf2c4252a518a128df1d017a7d5b1a814c2
Author: Minwoo Im <minwoo.im.dev@gmail.com>
Date:   Fri Nov 17 01:34:24 2017 +0900

    nvme-pci: avoid hmb desc array idx out-of-bound when hmmaxd set.
    
    
    [ Upstream commit 244a8fe40a09c218622eb9927b9090b0a9b73a1a ]
    
    hmb descriptor idx out-of-bound occurs in case of below conditions.
    preferred = 128MiB
    chunk_size = 4MiB
    hmmaxd = 1
    
    Current code will not allow rmmod which will free hmb descriptors
    to be done successfully in above case.
    
    "descs[i]" will be set in for-loop without seeing any conditions
    related to "max_entries" after a single "descs" was allocated by
    (max_entries = 1) in this case.
    
    Added a condition into for-loop to check index of descriptors.
    
    Fixes: 044a9df1("nvme-pci: implement the HMB entry number and size limitations")
    Signed-off-by: Minwoo Im <minwoo.im.dev@gmail.com>
    Reviewed-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 128dc55f891c79535dbf278e332f0f8fedfa7469
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Nov 9 01:12:03 2017 -0500

    nvme-pci: disable APST on Samsung SSD 960 EVO + ASUS PRIME B350M-A
    
    
    [ Upstream commit 8427bbc224863e14d905c87920d4005cb3e88ac3 ]
    
    The NVMe device in question drops off the PCIe bus after system suspend.
    I've tried several approaches to workaround this issue, but none of them
    works:
    - NVME_QUIRK_DELAY_BEFORE_CHK_RDY
    - NVME_QUIRK_NO_DEEPEST_PS
    - Disable APST before controller shutdown
    - Delay between controller shutdown and system suspend
    - Explicitly set power state to 0 before controller shutdown
    
    Fortunately it's a desktop, so disable APST won't hurt the battery.
    
    Also, change the quirk function name to reflect it's for vendor
    combination quirks.
    
    BugLink: https://bugs.launchpad.net/bugs/1705748
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7af5f9137c93bd69384a3d12d9f741b63f4d98c4
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Oct 24 15:25:22 2017 +0300

    nvme-loop: check if queue is ready in queue_rq
    
    
    [ Upstream commit 9d7fab04b95e8c26014a9bfc1c943b8360b44c17 ]
    
    In case the queue is not LIVE (fully functional and connected at the nvmf
    level), we cannot allow any commands other than connect to pass through.
    
    Add a new queue state flag NVME_LOOP_Q_LIVE which is set after nvmf connect
    and cleared in queue teardown.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db2044fc42305d2f8f92f24e16f223b66dff6cfe
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Oct 24 15:25:21 2017 +0300

    nvme-fc: check if queue is ready in queue_rq
    
    
    [ Upstream commit 9e0ed16ab9a9aaf670b81c9cd05b5e50defed654 ]
    
    In case the queue is not LIVE (fully functional and connected at the nvmf
    level), we cannot allow any commands other than connect to pass through.
    
    Add a new queue state flag NVME_FC_Q_LIVE which is set after nvmf connect
    and cleared in queue teardown.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26bd01c1affe663196e05302290c08f781d2e597
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Oct 24 15:25:20 2017 +0300

    nvme-fabrics: introduce init command check for a queue that is not alive
    
    
    [ Upstream commit 48832f8d58cfedb2f9bee11bbfbb657efb42e7e7 ]
    
    When the fabrics queue is not alive and fully functional, no commands
    should be allowed to pass but connect (which moves the queue to a fully
    functional state). Any other command should be failed, with either
    temporary status BLK_STS_RESOUCE or permanent status BLK_STS_IOERR.
    
    This is shared across all fabrics, hence move the check to fabrics
    library.
    
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d46e961f056aaec155bc3e21cf8e31449b5d2117
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:07:43 2017 +0200

    KVM: nVMX: Fix vmx_check_nested_events() return value in case an event was reinjected to L2
    
    
    [ Upstream commit 917dc6068bc12a2dafffcf0e9d405ddb1b8780cb ]
    
    vmx_check_nested_events() should return -EBUSY only in case there is a
    pending L1 event which requires a VMExit from L2 to L1 but such a
    VMExit is currently blocked. Such VMExits are blocked either
    because nested_run_pending=1 or an event was reinjected to L2.
    vmx_check_nested_events() should return 0 in case there are no
    pending L1 events which requires a VMExit from L2 to L1 or if
    a VMExit from L2 to L1 was done internally.
    
    However, upstream commit which introduced blocking in case an event was
    reinjected to L2 (commit acc9ab601327 ("KVM: nVMX: Fix pending events
    injection")) contains a bug: It returns -EBUSY even if there are no
    pending L1 events which requires VMExit from L2 to L1.
    
    This commit fix this issue.
    
    Fixes: acc9ab601327 ("KVM: nVMX: Fix pending events injection")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b689fc5b79d547f88d464e021d6de815d8612ac3
Author: Nikita Leshenko <nikita.leshchenko@oracle.com>
Date:   Sun Nov 5 15:52:33 2017 +0200

    KVM: x86: ioapic: Preserve read-only values in the redirection table
    
    
    [ Upstream commit b200dded0a6974a3b69599832b2203483920ab25 ]
    
    According to 82093AA (IOAPIC) manual, Remote IRR and Delivery Status are
    read-only. QEMU implements the bits as RO in commit 479c2a1cb7fb
    ("ioapic: keep RO bits for IOAPIC entry").
    
    Signed-off-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Steve Rutherford <srutherford@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 408a265107397dc55b415628880a8f6b14dc7044
Author: Nikita Leshenko <nikita.leshchenko@oracle.com>
Date:   Sun Nov 5 15:52:32 2017 +0200

    KVM: x86: ioapic: Clear Remote IRR when entry is switched to edge-triggered
    
    
    [ Upstream commit a8bfec2930525808c01f038825d1df3904638631 ]
    
    Some OSes (Linux, Xen) use this behavior to clear the Remote IRR bit for
    IOAPICs without an EOI register. They simulate the EOI message manually
    by changing the trigger mode to edge and then back to level, with the
    entry being masked during this.
    
    QEMU implements this feature in commit ed1263c363c9
    ("ioapic: clear remote irr bit for edge-triggered interrupts")
    
    As a side effect, this commit removes an incorrect behavior where Remote
    IRR was cleared when the redirection table entry was rewritten. This is not
    consistent with the manual and also opens an opportunity for a strange
    behavior when a redirection table entry is modified from an interrupt
    handler that handles the same entry: The modification will clear the
    Remote IRR bit even though the interrupt handler is still running.
    
    Signed-off-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Steve Rutherford <srutherford@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b501603be9dfc38725feb8dddf1bdf2bbf3bd6ea
Author: Nikita Leshenko <nikita.leshchenko@oracle.com>
Date:   Sun Nov 5 15:52:29 2017 +0200

    KVM: x86: ioapic: Fix level-triggered EOI and IOAPIC reconfigure race
    
    
    [ Upstream commit 0fc5a36dd6b345eb0d251a65c236e53bead3eef7 ]
    
    KVM uses ioapic_handled_vectors to track vectors that need to notify the
    IOAPIC on EOI. The problem is that IOAPIC can be reconfigured while an
    interrupt with old configuration is pending or running and
    ioapic_handled_vectors only remembers the newest configuration;
    thus EOI from the old interrupt is not delievered to the IOAPIC.
    
    A previous commit db2bdcbbbd32
    ("KVM: x86: fix edge EOI and IOAPIC reconfig race")
    addressed this issue by adding pending edge-triggered interrupts to
    ioapic_handled_vectors, fixing this race for edge-triggered interrupts.
    The commit explicitly ignored level-triggered interrupts,
    but this race applies to them as well:
    
    1) IOAPIC sends a level triggered interrupt vector to VCPU0
    2) VCPU0's handler deasserts the irq line and reconfigures the IOAPIC
       to route the vector to VCPU1. The reconfiguration rewrites only the
       upper 32 bits of the IOREDTBLn register. (Causes KVM to update
       ioapic_handled_vectors for VCPU0 and it no longer includes the vector.)
    3) VCPU0 sends EOI for the vector, but it's not delievered to the
       IOAPIC because the ioapic_handled_vectors doesn't include the vector.
    4) New interrupts are not delievered to VCPU1 because remote_irr bit
       is set forever.
    
    Therefore, the correct behavior is to add all pending and running
    interrupts to ioapic_handled_vectors.
    
    This commit introduces a slight performance hit similar to
    commit db2bdcbbbd32 ("KVM: x86: fix edge EOI and IOAPIC reconfig race")
    for the rare case that the vector is reused by a non-IOAPIC source on
    VCPU0. We prefer to keep solution simple and not handle this case just
    as the original commit does.
    
    Fixes: db2bdcbbbd32 ("KVM: x86: fix edge EOI and IOAPIC reconfig race")
    
    Signed-off-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0a3691bf2e5692ec3acf60aea8dc098a6ce2eae
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Nov 7 18:04:05 2017 +0100

    KVM: x86: fix em_fxstor() sleeping while in atomic
    
    
    [ Upstream commit 4d772cb85f64c16eca00177089ecb3cd5d292120 ]
    
    Commit 9d643f63128b ("KVM: x86: avoid large stack allocations in
    em_fxrstor") optimize the stack size, but introduced a guest memory access
    which might sleep while in atomic.
    
    Fix it by introducing, again, a second fxregs_state. Try to avoid
    large stacks by using noinline. Add some helpful comments.
    
    Reported by syzbot:
    
    in_atomic(): 1, irqs_disabled(): 0, pid: 2909, name: syzkaller879109
    2 locks held by syzkaller879109/2909:
      #0:  (&vcpu->mutex){+.+.}, at: [<ffffffff8106222c>] vcpu_load+0x1c/0x70
    arch/x86/kvm/../../../virt/kvm/kvm_main.c:154
      #1:  (&kvm->srcu){....}, at: [<ffffffff810dd162>] vcpu_enter_guest
    arch/x86/kvm/x86.c:6983 [inline]
      #1:  (&kvm->srcu){....}, at: [<ffffffff810dd162>] vcpu_run
    arch/x86/kvm/x86.c:7061 [inline]
      #1:  (&kvm->srcu){....}, at: [<ffffffff810dd162>]
    kvm_arch_vcpu_ioctl_run+0x1bc2/0x58b0 arch/x86/kvm/x86.c:7222
    CPU: 1 PID: 2909 Comm: syzkaller879109 Not tainted 4.13.0-rc4-next-20170811
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:16 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:52
      ___might_sleep+0x2b2/0x470 kernel/sched/core.c:6014
      __might_sleep+0x95/0x190 kernel/sched/core.c:5967
      __might_fault+0xab/0x1d0 mm/memory.c:4383
      __copy_from_user include/linux/uaccess.h:71 [inline]
      __kvm_read_guest_page+0x58/0xa0
    arch/x86/kvm/../../../virt/kvm/kvm_main.c:1771
      kvm_vcpu_read_guest_page+0x44/0x60
    arch/x86/kvm/../../../virt/kvm/kvm_main.c:1791
      kvm_read_guest_virt_helper+0x76/0x140 arch/x86/kvm/x86.c:4407
      kvm_read_guest_virt_system+0x3c/0x50 arch/x86/kvm/x86.c:4466
      segmented_read_std+0x10c/0x180 arch/x86/kvm/emulate.c:819
      em_fxrstor+0x27b/0x410 arch/x86/kvm/emulate.c:4022
      x86_emulate_insn+0x55d/0x3c50 arch/x86/kvm/emulate.c:5471
      x86_emulate_instruction+0x411/0x1ca0 arch/x86/kvm/x86.c:5698
      kvm_mmu_page_fault+0x18b/0x2c0 arch/x86/kvm/mmu.c:4854
      handle_ept_violation+0x1fc/0x5e0 arch/x86/kvm/vmx.c:6400
      vmx_handle_exit+0x281/0x1ab0 arch/x86/kvm/vmx.c:8718
      vcpu_enter_guest arch/x86/kvm/x86.c:6999 [inline]
      vcpu_run arch/x86/kvm/x86.c:7061 [inline]
      kvm_arch_vcpu_ioctl_run+0x1cee/0x58b0 arch/x86/kvm/x86.c:7222
      kvm_vcpu_ioctl+0x64c/0x1010 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2591
      vfs_ioctl fs/ioctl.c:45 [inline]
      do_vfs_ioctl+0x1b1/0x1520 fs/ioctl.c:685
      SYSC_ioctl fs/ioctl.c:700 [inline]
      SyS_ioctl+0x8f/0xc0 fs/ioctl.c:691
      entry_SYSCALL_64_fastpath+0x1f/0xbe
    RIP: 0033:0x437fc9
    RSP: 002b:00007ffc7b4d5ab8 EFLAGS: 00000206 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 00000000004002b0 RCX: 0000000000437fc9
    RDX: 0000000000000000 RSI: 000000000000ae80 RDI: 0000000000000005
    RBP: 0000000000000086 R08: 0000000000000000 R09: 0000000020ae8000
    R10: 0000000000009120 R11: 0000000000000206 R12: 0000000000000000
    R13: 0000000000000004 R14: 0000000000000004 R15: 0000000020077000
    
    Fixes: 9d643f63128b ("KVM: x86: avoid large stack allocations in em_fxrstor")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e7c270a1e60fcc16e8bcda6c6d659b43eba1ddb
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Sun Nov 5 16:54:49 2017 -0800

    KVM: nVMX: Fix mmu context after VMLAUNCH/VMRESUME failure
    
    
    [ Upstream commit 5af4157388adad82c339e3742fb6b67840721347 ]
    
    Commit 4f350c6dbcb (kvm: nVMX: Handle deferred early VMLAUNCH/VMRESUME failure
    properly) can result in L1(run kvm-unit-tests/run_tests.sh vmx_controls in L1)
    null pointer deference and also L0 calltrace when EPT=0 on both L0 and L1.
    
    In L1:
    
    BUG: unable to handle kernel paging request at ffffffffc015bf8f
     IP: vmx_vcpu_run+0x202/0x510 [kvm_intel]
     PGD 146e13067 P4D 146e13067 PUD 146e15067 PMD 3d2686067 PTE 3d4af9161
     Oops: 0003 [#1] PREEMPT SMP
     CPU: 2 PID: 1798 Comm: qemu-system-x86 Not tainted 4.14.0-rc4+ #6
     RIP: 0010:vmx_vcpu_run+0x202/0x510 [kvm_intel]
     Call Trace:
     WARNING: kernel stack frame pointer at ffffb86f4988bc18 in qemu-system-x86:1798 has bad value 0000000000000002
    
    In L0:
    
    -----------[ cut here ]------------
     WARNING: CPU: 6 PID: 4460 at /home/kernel/linux/arch/x86/kvm//vmx.c:9845 vmx_inject_page_fault_nested+0x130/0x140 [kvm_intel]
     CPU: 6 PID: 4460 Comm: qemu-system-x86 Tainted: G           OE   4.14.0-rc7+ #25
     RIP: 0010:vmx_inject_page_fault_nested+0x130/0x140 [kvm_intel]
     Call Trace:
      paging64_page_fault+0x500/0xde0 [kvm]
      ? paging32_gva_to_gpa_nested+0x120/0x120 [kvm]
      ? nonpaging_page_fault+0x3b0/0x3b0 [kvm]
      ? __asan_storeN+0x12/0x20
      ? paging64_gva_to_gpa+0xb0/0x120 [kvm]
      ? paging64_walk_addr_generic+0x11a0/0x11a0 [kvm]
      ? lock_acquire+0x2c0/0x2c0
      ? vmx_read_guest_seg_ar+0x97/0x100 [kvm_intel]
      ? vmx_get_segment+0x2a6/0x310 [kvm_intel]
      ? sched_clock+0x1f/0x30
      ? check_chain_key+0x137/0x1e0
      ? __lock_acquire+0x83c/0x2420
      ? kvm_multiple_exception+0xf2/0x220 [kvm]
      ? debug_check_no_locks_freed+0x240/0x240
      ? debug_smp_processor_id+0x17/0x20
      ? __lock_is_held+0x9e/0x100
      kvm_mmu_page_fault+0x90/0x180 [kvm]
      kvm_handle_page_fault+0x15c/0x310 [kvm]
      ? __lock_is_held+0x9e/0x100
      handle_exception+0x3c7/0x4d0 [kvm_intel]
      vmx_handle_exit+0x103/0x1010 [kvm_intel]
      ? kvm_arch_vcpu_ioctl_run+0x1628/0x2e20 [kvm]
    
    The commit avoids to load host state of vmcs12 as vmcs01's guest state
    since vmcs12 is not modified (except for the VM-instruction error field)
    if the checking of vmcs control area fails. However, the mmu context is
    switched to nested mmu in prepare_vmcs02() and it will not be reloaded
    since load_vmcs12_host_state() is skipped when nested VMLAUNCH/VMRESUME
    fails. This patch fixes it by reloading mmu context when nested
    VMLAUNCH/VMRESUME fails.
    
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f5500a63455815c45b28aa740fce91b49630188
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Sun Nov 5 16:54:47 2017 -0800

    KVM: X86: Fix operand/address-size during instruction decoding
    
    
    [ Upstream commit 3853be2603191829b442b64dac6ae8ba0c027bf9 ]
    
    Pedro reported:
      During tests that we conducted on KVM, we noticed that executing a "PUSH %ES"
      instruction under KVM produces different results on both memory and the SP
      register depending on whether EPT support is enabled. With EPT the SP is
      reduced by 4 bytes (and the written value is 0-padded) but without EPT support
      it is only reduced by 2 bytes. The difference can be observed when the CS.DB
      field is 1 (32-bit) but not when it's 0 (16-bit).
    
    The internal segment descriptor cache exist even in real/vm8096 mode. The CS.D
    also should be respected instead of just default operand/address-size/66H
    prefix/67H prefix during instruction decoding. This patch fixes it by also
    adjusting operand/address-size according to CS.D.
    
    Reported-by: Pedro Fonseca <pfonseca@cs.washington.edu>
    Tested-by: Pedro Fonseca <pfonseca@cs.washington.edu>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Pedro Fonseca <pfonseca@cs.washington.edu>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df54fc5c28d2921ae4eb0d3401db929cb0c62e56
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:56:34 2017 +0200

    KVM: x86: Don't re-execute instruction when not passing CR2 value
    
    
    [ Upstream commit 9b8ae63798cb97e785a667ff27e43fa6220cb734 ]
    
    In case of instruction-decode failure or emulation failure,
    x86_emulate_instruction() will call reexecute_instruction() which will
    attempt to use the cr2 value passed to x86_emulate_instruction().
    However, when x86_emulate_instruction() is called from
    emulate_instruction(), cr2 is not passed (passed as 0) and therefore
    it doesn't make sense to execute reexecute_instruction() logic at all.
    
    Fixes: 51d8b66199e9 ("KVM: cleanup emulate_instruction")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbd81f09793b8ab0696782da0c081599b6620efc
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:56:33 2017 +0200

    KVM: x86: emulator: Return to user-mode on L1 CPL=0 emulation failure
    
    
    [ Upstream commit 1f4dcb3b213235e642088709a1c54964d23365e9 ]
    
    On this case, handle_emulation_failure() fills kvm_run with
    internal-error information which it expects to be delivered
    to user-mode for further processing.
    However, the code reports a wrong return-value which makes KVM to never
    return to user-mode on this scenario.
    
    Fixes: 6d77dbfc88e3 ("KVM: inject #UD if instruction emulation fails and exit to
    userspace")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d003b4bfda3b3b8f42fba2236c774084e437cad0
Author: Liran Alon <liran.alon@oracle.com>
Date:   Mon Nov 6 16:15:10 2017 +0200

    KVM: nVMX/nSVM: Don't intercept #UD when running L2
    
    
    [ Upstream commit ac9b305caa0df6f5b75d294e4b86c1027648991e ]
    
    When running L2, #UD should be intercepted by L1 or just forwarded
    directly to L2. It should not reach L0 x86 emulator.
    Therefore, set intercept for #UD only based on L1 exception-bitmap.
    
    Also add WARN_ON_ONCE() on L0 #UD intercept handlers to make sure
    it is never reached while running L2.
    
    This improves commit ae1f57670703 ("KVM: nVMX: Do not emulate #UD while
    in guest mode") by removing an unnecessary exit from L2 to L0 on #UD
    when L1 doesn't intercept it.
    
    In addition, SVM L0 #UD intercept handler doesn't handle correctly the
    case it is raised from L2. In this case, it should forward the #UD to
    guest instead of x86 emulator. As done in VMX #UD intercept handler.
    This commit fixes this issue as-well.
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1881befacbe7f91b49544b0860b65eb6af93429
Author: Abhishek Goel <huntbag@linux.vnet.ibm.com>
Date:   Wed Nov 15 14:10:02 2017 +0530

    cpupower : Fix cpupower working when cpu0 is offline
    
    
    [ Upstream commit dbdc468f35ee827cab2753caa1c660bdb832243a ]
    
    cpuidle_monitor used to assume that cpu0 is always online which is not
    a valid assumption on POWER machines. This patch fixes this by getting
    the cpu on which the current thread is running, instead of always using
    cpu0 for monitoring which may not be online.
    
    Signed-off-by: Abhishek Goel <huntbag@linux.vnet.ibm.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d285c0440fe784e39e9110cc75ca21719b92ead
Author: Abhishek Goel <huntbag@linux.vnet.ibm.com>
Date:   Tue Nov 7 15:17:55 2017 +0530

    cpupowerutils: bench - Fix cpu online check
    
    
    [ Upstream commit 53d1cd6b125fb9d69303516a1179ebc3b72f797a ]
    
    cpupower_is_cpu_online was incorrectly checking for 0. This patch fixes
    this by checking for 1 when the cpu is online.
    
    Signed-off-by: Abhishek Goel <huntbag@linux.vnet.ibm.com>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71341a8a703752278bbaf6e4502f78ff50e645f7
Author: Liu Bo <bo.li.liu@oracle.com>
Date:   Mon Oct 30 11:14:38 2017 -0600

    Btrfs: bail out gracefully rather than BUG_ON
    
    
    [ Upstream commit 56a0e706fcf870270878d6d72b71092ae42d229c ]
    
    If a file's DIR_ITEM key is invalid (due to memory errors) and gets
    written to disk, a future lookup_path can end up with kernel panic due
    to BUG_ON().
    
    This gets rid of the BUG_ON(), meanwhile output the corrupted key and
    return ENOENT if it's invalid.
    
    Signed-off-by: Liu Bo <bo.li.liu@oracle.com>
    Reported-by: Guillaume Bouchard <bouchard@mercs-eng.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a8215c0a91e9182761d52e933fd635c7a7a47cd
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Mon Oct 23 09:58:46 2017 +0300

    btrfs: Fix transaction abort during failure in btrfs_rm_dev_item
    
    
    [ Upstream commit 5e9f2ad5b2904a7e81df6d9a3dbef29478952eac ]
    
    btrfs_rm_dev_item calls several function under an active transaction,
    however it fails to abort it if an error happens. Fix this by adding
    explicit btrfs_abort_transaction/btrfs_end_transaction calls.
    
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08bb42086b3e9c5619e6e82aed576eae8a6583ef
Author: Stefan Schake <stschake@gmail.com>
Date:   Fri Nov 10 02:05:06 2017 +0100

    drm/vc4: Account for interrupts in flight
    
    
    [ Upstream commit 253696ccd613fbdaa5aba1de44c461a058e0a114 ]
    
    Synchronously disable the IRQ to make the following cancel_work_sync
    invocation effective.
    
    An interrupt in flight could enqueue further overflow mem work. As we
    free the binner BO immediately following vc4_irq_uninstall this caused
    a NULL pointer dereference in the work callback vc4_overflow_mem_work.
    
    Link: https://github.com/anholt/linux/issues/114
    Signed-off-by: Stefan Schake <stschake@gmail.com>
    Fixes: d5b1a78a772f ("drm/vc4: Add support for drawing 3D frames.")
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/1510275907-993-2-git-send-email-stschake@gmail.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bdf19237e16f5495dab1edb0ec5eb60049d02a60
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Oct 11 07:01:31 2017 +0200

    VFS: Handle lazytime in do_mount()
    
    commit d7ee946942bdd12394809305e3df05aa4c8b7b8f upstream.
    
    Since commit e462ec50cb5fa ("VFS: Differentiate mount flags (MS_*) from
    internal superblock flags") the lazytime mount option doesn't get passed
    on anymore.
    
    Fix the issue by handling the option in do_mount().
    
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Markus Trippelsdorf <markus@trippelsdorf.de>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7fec01990e65967855790877ba829d67ebde255
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:24 2017 -0800

    scsi: aacraid: Fix hang in kdump
    
    commit c5313ae8e4e037bfaf5e56cb8d6efdb8e92ce437 upstream.
    
    Driver attempts to perform a device scan and device add after coming out
    of reset. At times when the kdump kernel loads and it tries to perform
    eh recovery, the device scan hangs since its commands are blocked because
    of the eh recovery. This should have shown up in normal eh recovery path
    (Should have been obvious)
    
    Remove the code that performs scanning.I can live without the rescanning
    support in the stable kernels but a hanging kdump/eh recovery needs to be
    fixed.
    
    Fixes: a2d0321dd532901e (scsi: aacraid: Reload offlined drives after controller reset)
    Reported-by: Douglas Miller <dougmill@linux.vnet.ibm.com>
    Tested-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Fixes: a2d0321dd532901e (scsi: aacraid: Reload offlined drives after controller reset)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 791274e773952f80990bc10757d0281bffbe6955
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:22 2017 -0800

    scsi: aacraid: Fix udev inquiry race condition
    
    commit f4e8708d3104437fd7716e957f38c265b0c509ef upstream.
    
    When udev requests for a devices inquiry string, it might create multiple
    threads causing a race condition on the shared inquiry resource string.
    
    Created a buffer with the string for each thread.
    
    Fixes: 3bc8070fb75b3315 ([SCSI] aacraid: SMC vendor identification)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 516868c59d82705b7c636ec2bdd3d6cb0e989b06
Author: Mike Rapoport <rppt@linux.vnet.ibm.com>
Date:   Wed Jan 17 20:27:11 2018 +0200

    ima/policy: fix parsing of fsuuid
    
    commit 36447456e1cca853188505f2a964dbbeacfc7a7a upstream.
    
    The switch to uuid_t invereted the logic of verfication that &entry->fsuuid
    is zero during parsing of "fsuuid=" rule. Instead of making sure the
    &entry->fsuuid field is not attempted to be overwritten, we bail out for
    perfectly correct rule.
    
    Fixes: 787d8c530af7 ("ima/policy: switch to use uuid_t")
    Signed-off-by: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80baea0e6cf36f64905fd7d50b4fe2fe846b6a4a
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Dec 12 14:31:30 2017 -0500

    igb: Free IRQs when device is hotplugged
    
    commit 888f22931478a05bc81ceb7295c626e1292bf0ed upstream.
    
    Recently I got a Caldigit TS3 Thunderbolt 3 dock, and noticed that upon
    hotplugging my kernel would immediately crash due to igb:
    
    [  680.825801] kernel BUG at drivers/pci/msi.c:352!
    [  680.828388] invalid opcode: 0000 [#1] SMP
    [  680.829194] Modules linked in: igb(O) thunderbolt i2c_algo_bit joydev vfat fat btusb btrtl btbcm btintel bluetooth ecdh_generic hp_wmi sparse_keymap rfkill wmi_bmof iTCO_wdt intel_rapl x86_pkg_temp_thermal coretemp crc32_pclmul snd_pcm rtsx_pci_ms mei_me snd_timer memstick snd pcspkr mei soundcore i2c_i801 tpm_tis psmouse shpchp wmi tpm_tis_core tpm video hp_wireless acpi_pad rtsx_pci_sdmmc mmc_core crc32c_intel serio_raw rtsx_pci mfd_core xhci_pci xhci_hcd i2c_hid i2c_core [last unloaded: igb]
    [  680.831085] CPU: 1 PID: 78 Comm: kworker/u16:1 Tainted: G           O     4.15.0-rc3Lyude-Test+ #6
    [  680.831596] Hardware name: HP HP ZBook Studio G4/826B, BIOS P71 Ver. 01.03 06/09/2017
    [  680.832168] Workqueue: kacpi_hotplug acpi_hotplug_work_fn
    [  680.832687] RIP: 0010:free_msi_irqs+0x180/0x1b0
    [  680.833271] RSP: 0018:ffffc9000030fbf0 EFLAGS: 00010286
    [  680.833761] RAX: ffff8803405f9c00 RBX: ffff88033e3d2e40 RCX: 000000000000002c
    [  680.834278] RDX: 0000000000000000 RSI: 00000000000000ac RDI: ffff880340be2178
    [  680.834832] RBP: 0000000000000000 R08: ffff880340be1ff0 R09: ffff8803405f9c00
    [  680.835342] R10: 0000000000000000 R11: 0000000000000040 R12: ffff88033d63a298
    [  680.835822] R13: ffff88033d63a000 R14: 0000000000000060 R15: ffff880341959000
    [  680.836332] FS:  0000000000000000(0000) GS:ffff88034f440000(0000) knlGS:0000000000000000
    [  680.836817] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  680.837360] CR2: 000055e64044afdf CR3: 0000000001c09002 CR4: 00000000003606e0
    [  680.837954] Call Trace:
    [  680.838853]  pci_disable_msix+0xce/0xf0
    [  680.839616]  igb_reset_interrupt_capability+0x5d/0x60 [igb]
    [  680.840278]  igb_remove+0x9d/0x110 [igb]
    [  680.840764]  pci_device_remove+0x36/0xb0
    [  680.841279]  device_release_driver_internal+0x157/0x220
    [  680.841739]  pci_stop_bus_device+0x7d/0xa0
    [  680.842255]  pci_stop_bus_device+0x2b/0xa0
    [  680.842722]  pci_stop_bus_device+0x3d/0xa0
    [  680.843189]  pci_stop_and_remove_bus_device+0xe/0x20
    [  680.843627]  trim_stale_devices+0xf3/0x140
    [  680.844086]  trim_stale_devices+0x94/0x140
    [  680.844532]  trim_stale_devices+0xa6/0x140
    [  680.845031]  ? get_slot_status+0x90/0xc0
    [  680.845536]  acpiphp_check_bridge.part.5+0xfe/0x140
    [  680.846021]  acpiphp_hotplug_notify+0x175/0x200
    [  680.846581]  ? free_bridge+0x100/0x100
    [  680.847113]  acpi_device_hotplug+0x8a/0x490
    [  680.847535]  acpi_hotplug_work_fn+0x1a/0x30
    [  680.848076]  process_one_work+0x182/0x3a0
    [  680.848543]  worker_thread+0x2e/0x380
    [  680.848963]  ? process_one_work+0x3a0/0x3a0
    [  680.849373]  kthread+0x111/0x130
    [  680.849776]  ? kthread_create_worker_on_cpu+0x50/0x50
    [  680.850188]  ret_from_fork+0x1f/0x30
    [  680.850601] Code: 43 14 85 c0 0f 84 d5 fe ff ff 31 ed eb 0f 83 c5 01 39 6b 14 0f 86 c5 fe ff ff 8b 7b 10 01 ef e8 b7 e4 d2 ff 48 83 78 70 00 74 e3 <0f> 0b 49 8d b5 a0 00 00 00 e8 62 6f d3 ff e9 c7 fe ff ff 48 8b
    [  680.851497] RIP: free_msi_irqs+0x180/0x1b0 RSP: ffffc9000030fbf0
    
    As it turns out, normally the freeing of IRQs that would fix this is called
    inside of the scope of __igb_close(). However, since the device is
    already gone by the point we try to unregister the netdevice from the
    driver due to a hotplug we end up seeing that the netif isn't present
    and thus, forget to free any of the device IRQs.
    
    So: make sure that if we're in the process of dismantling the netdev, we
    always allow __igb_close() to be called so that IRQs may be freed
    normally. Additionally, only allow igb_close() to be called from
    __igb_close() if it hasn't already been called for the given adapter.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 9474933caf21 ("igb: close/suspend race in netif_device_detach")
    Cc: Todd Fujinaka <todd.fujinaka@intel.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6a5fe3180369479988ef4c44f41d9c00e102dbd
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:57:13 2017 -0800

    mtd: nand: denali_pci: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit d822401d1c6898a4a4ee03977b78b8cec402e88a upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/mtd/nand/denali_pci.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Acked-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf8c4b3dd7bfd47920e61ad5f67c827a2e66c01b
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:54:26 2017 -0800

    gpio: ath79: add missing MODULE_DESCRIPTION/LICENSE
    
    commit 539340f37e6d6ed4cd93e8e18c9b2e4eafd4b842 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/gpio/gpio-ath79.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION is also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Acked-by: Alban Bedel <albeu@free.fr>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 925e26b922c525e21a905bf99b4b20247d521c4f
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:54:52 2017 -0800

    gpio: iop: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 97b03136e1b637d7a9d2274c099e44ecf23f1103 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/gpio/gpio-iop.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aecad437fd709b3eeb9ed7eb336646e413999139
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:58:27 2017 -0800

    power: reset: zx-reboot: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 348c7cf5fcbcb68838255759d4cb45d039af36d2 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/power/reset/zx-reboot.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c76133afb9033e47a4b944f69a6d8f81450a9983
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Dec 26 14:53:55 2017 -0800

    HID: wacom: Fix reporting of touch toggle (WACOM_HID_WD_MUTE_DEVICE) events
    
    commit 403c0f681c1964ff1db8c2fb8de8c4067779d081 upstream.
    
    Touch toggle softkeys send a '1' while pressed and a '0' while released,
    requring the kernel to keep track of wether touch should be enabled or
    disabled. The code does not handle the state transitions properly,
    however. If the key is pressed repeatedly, the following four states
    of states are cycled through (assuming touch starts out enabled):
    
    Press:   shared->is_touch_on => 0, SW_MUTE_DEVICE => 1
    Release: shared->is_touch_on => 0, SW_MUTE_DEVICE => 1
    Press:   shared->is_touch_on => 1, SW_MUTE_DEVICE => 0
    Release: shared->is_touch_on => 1, SW_MUTE_DEVICE => 1
    
    The hardware always properly enables/disables touch when the key is
    pressed but applications that listen for SW_MUTE_DEVICE events to provide
    feedback about the state will only ever show touch as being enabled while
    the key is held, and only every-other time. This sequence occurs because
    the fallthrough WACOM_HID_WD_TOUCHONOFF case is always handled, and it
    uses the value of the *local* is_touch_on variable as the value to
    report to userspace. The local value is equal to the shared value when
    the button is pressed, but equal to zero when the button is released.
    
    Reporting the shared value to userspace fixes this problem, but the
    fallthrough case needs to update the shared value in an incompatible
    way (which is why the local variable was introduced in the first place).
    To work around this, we just handle both cases in a single block of code
    and update the shared variable as appropriate.
    
    Fixes: d793ff8187 ("HID: wacom: generic: support touch on/off softkey")
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Aaron Skomra <aaron.skomra@wacom.com>
    Tested-by: Aaron Skomra <aaron.skomra@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3f7e6f2e03396df38491a484c6381e9301ff0f6
Author: Aaron Armstrong Skomra <skomra@gmail.com>
Date:   Thu Dec 7 12:31:56 2017 -0800

    HID: wacom: EKR: ensure devres groups at higher indexes are released
    
    commit 791ae273731fa85d3332e45064dab177ae663e80 upstream.
    
    Background: ExpressKey Remotes communicate their events via usb dongle.
    Each dongle can hold up to 5 pairings at one time and one EKR (identified
    by its serial number) can unfortunately be paired with its dongle
    more than once. The pairing takes place in a round-robin fashion.
    
    Input devices are only created once per EKR, when a new serial number
    is seen in the list of pairings. However, if a device is created for
    a "higher" paring index and subsequently a second pairing occurs at a
    lower pairing index, unpairing the remote with that serial number from
    any pairing index will currently cause a driver crash. This occurs
    infrequently, as two remotes are necessary to trigger this bug and most
    users have only one remote.
    
    As an illustration, to trigger the bug you need to have two remotes,
    and pair them in this order:
    
    1. slot 0 -> remote 1 (input device created for remote 1)
    2. slot 1 -> remote 1 (duplicate pairing - no device created)
    3. slot 2 -> remote 1 (duplicate pairing - no device created)
    4. slot 3 -> remote 1 (duplicate pairing - no device created)
    5. slot 4 -> remote 2 (input device created for remote 2)
    
    6. slot 0 -> remote 2 (1 destroyed and recreated at slot 1)
    7. slot 1 -> remote 2 (1 destroyed and recreated at slot 2)
    8. slot 2 -> remote 2 (1 destroyed and recreated at slot 3)
    9. slot 3 -> remote 2 (1 destroyed and not recreated)
    10. slot 4 -> remote 2 (2 was already in this slot so no changes)
    
    11. slot 0 -> remote 1 (The current code sees remote 2 was paired over in
                            one of the dongle slots it occupied and attempts
                            to remove all information about remote 2 [1]. It
                            calls wacom_remote_destroy_one for remote 2, but
                            the destroy function assumes the lowest index is
                            where the remote's input device was created. The
                            code "cleans up" the other remote 2 pairings
                            including the one which the input device was based
                            on, assuming they were were just duplicate
                            pairings. However, the cleanup doesn't call the
                            devres release function for the input device that
                            was created in slot 4).
    
    This issue is fixed by this commit.
    
    [1] Remote 2 should subsequently be re-created on the next packet from the
    EKR at the lowest numbered slot that it occupies (here slot 1).
    
    Fixes: f9036bd43602 ("HID: wacom: EKR: use devres groups to manage resources")
    Signed-off-by: Aaron Armstrong Skomra <aaron.skomra@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f41c8a003196df125b32ed8d78a66f9ea22ccce4
Author: Stephan Mueller <smueller@chronox.de>
Date:   Tue Jan 2 08:55:25 2018 +0100

    crypto: af_alg - whitelist mask and type
    
    commit bb30b8848c85e18ca7e371d0a869e94b3e383bdf upstream.
    
    The user space interface allows specifying the type and mask field used
    to allocate the cipher. Only a subset of the possible flags are intended
    for user space. Therefore, white-list the allowed flags.
    
    In case the user space caller uses at least one non-allowed flag, EINVAL
    is returned.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9788e278cec29fef2e837633fa1b97030417e78
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Jan 19 12:04:33 2018 +0000

    crypto: sha3-generic - fixes for alignment and big endian operation
    
    commit c013cee99d5a18aec8c71fee8f5f41369cd12595 upstream.
    
    Ensure that the input is byte swabbed before injecting it into the
    SHA3 transform. Use the get_unaligned() accessor for this so that
    we don't perform unaligned access inadvertently on architectures
    that do not support that.
    
    Fixes: 53964b9ee63b7075 ("crypto: sha3 - Add SHA-3 hash algorithm")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 199d97815d32acd0f1d20cbd04e39e3dead59a8b
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Dec 26 17:21:16 2017 +0100

    crypto: inside-secure - avoid unmapping DMA memory that was not mapped
    
    commit c957f8b3e2e54b29f53ef69decc87bbc858c9b58 upstream.
    
    This patch adds a parameter in the SafeXcel ahash request structure to
    keep track of the number of SG entries mapped. This allows not to call
    dma_unmap_sg() when dma_map_sg() wasn't called in the first place. This
    also removes a warning when the debugging of the DMA-API is enabled in
    the kernel configuration: "DMA-API: device driver tries to free DMA
    memory it has not allocated".
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb9eec7b301eeb178fc1305708ae8902fa507953
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Dec 26 17:21:17 2017 +0100

    crypto: inside-secure - fix hash when length is a multiple of a block
    
    commit 809778e02cd45d0625439fee67688f655627bb3c upstream.
    
    This patch fixes the hash support in the SafeXcel driver when the update
    size is a multiple of a block size, and when a final call is made just
    after with a size of 0. In such cases the driver should cache the last
    block from the update to avoid handling 0 length data on the final call
    (that's a hardware limitation).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ca02df0160233e463b043897cd17e32d38cb70e
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Dec 20 17:08:38 2017 -0800

    crypto: aesni - Fix out-of-bounds access of the AAD buffer in generic-gcm-aesni
    
    commit 1ecdd37e308ca149dc378cce225068cbac54e3a6 upstream.
    
    The aesni_gcm_enc/dec functions can access memory after the end of
    the AAD buffer if the AAD length is not a multiple of 4 bytes.
    It didn't matter with rfc4106-gcm-aesni as in that case the AAD was
    always followed by the 8 byte IV, but that is no longer the case with
    generic-gcm-aesni. This can potentially result in accessing a page that
    is not mapped and thus causing the machine to crash. This patch fixes
    that by reading the last <16 byte block of the AAD byte-by-byte and
    optionally via an 8-byte load if the block was at least 8 bytes.
    
    Fixes: 0487ccac ("crypto: aesni - make non-AVX AES-GCM work with any aadlen")
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f898a39985a30050abdad7a40b5b0098801509d4
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Dec 20 17:08:37 2017 -0800

    crypto: aesni - Fix out-of-bounds access of the data buffer in generic-gcm-aesni
    
    commit b20209c91e23a9bbad9cac2f80bc16b3c259e10e upstream.
    
    The aesni_gcm_enc/dec functions can access memory before the start of
    the data buffer if the length of the data buffer is less than 16 bytes.
    This is because they perform the read via a single 16-byte load. This
    can potentially result in accessing a page that is not mapped and thus
    causing the machine to crash. This patch fixes that by reading the
    partial block byte-by-byte and optionally an via 8-byte load if the block
    was at least 8 bytes.
    
    Fixes: 0487ccac ("crypto: aesni - make non-AVX AES-GCM work with any aadlen")
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 265502fe9ab62a92d06cc7aa518d349fd60bdba1
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Dec 13 14:54:36 2017 +0100

    crypto: aesni - add wrapper for generic gcm(aes)
    
    commit fc8517bf627c9b834f80274a1bc9ecd39b27231b upstream.
    
    When I added generic-gcm-aes I didn't add a wrapper like the one
    provided for rfc4106(gcm(aes)). We need to add a cryptd wrapper to fall
    back on in case the FPU is not available, otherwise we might corrupt the
    FPU state.
    
    Fixes: cce2ea8d90fe ("crypto: aesni - add generic gcm(aes)")
    Reported-by: Ilya Lesokhin <ilyal@mellanox.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e704e550cb7bfcd86044f875abce2e7703139ba9
Author: Corentin LABBE <clabbe.montjoie@gmail.com>
Date:   Tue Aug 22 10:08:18 2017 +0200

    crypto: aesni - Use GCM IV size constant
    
    commit 46d93748e5a3628f9f553832cd64d8a59d8bafde upstream.
    
    This patch replace GCM IV size value by their constant name.
    
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cffaf2b6b179227b31f8e21d7f65b68630fc6606
Author: Corentin LABBE <clabbe.montjoie@gmail.com>
Date:   Tue Aug 22 10:08:08 2017 +0200

    crypto: gcm - add GCM IV size constant
    
    commit ef780324592dd639e4bfbc5b9bf8934b234b7c99 upstream.
    
    Many GCM users use directly GCM IV size instead of using some constant.
    
    This patch add all IV size constant used by GCM.
    
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e50f1d7c0d0747378aa49cf5ef4863dcebd6a485
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Dec 13 14:53:43 2017 +0100

    crypto: aesni - fix typo in generic_gcmaes_decrypt
    
    commit 106840c41096a01079d3a2025225029c13713802 upstream.
    
    generic_gcmaes_decrypt needs to use generic_gcmaes_ctx, not
    aesni_rfc4106_gcm_ctx. This is actually harmless because the fields in
    struct generic_gcmaes_ctx share the layout of the same fields in
    aesni_rfc4106_gcm_ctx.
    
    Fixes: cce2ea8d90fe ("crypto: aesni - add generic gcm(aes)")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b3dcff7ca7e05c784ece15cc8d9c0bd913fbda4
Author: Stephan Mueller <smueller@chronox.de>
Date:   Thu Jan 18 20:41:09 2018 +0100

    crypto: aesni - handle zero length dst buffer
    
    commit 9c674e1e2f9e24fa4392167efe343749008338e0 upstream.
    
    GCM can be invoked with a zero destination buffer. This is possible if
    the AAD and the ciphertext have zero lengths and only the tag exists in
    the source buffer (i.e. a source buffer cannot be zero). In this case,
    the GCM cipher only performs the authentication and no decryption
    operation.
    
    When the destination buffer has zero length, it is possible that no page
    is mapped to the SG pointing to the destination. In this case,
    sg_page(req->dst) is an invalid access. Therefore, page accesses should
    only be allowed if the req->dst->length is non-zero which is the
    indicator that a page must exist.
    
    This fixes a crash that can be triggered by user space via AF_ALG.
    
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2992182765762c2d5bfa70ff2da5f1841e7aba89
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Sun Nov 26 00:16:46 2017 +0100

    crypto: ecdh - fix typo in KPP dependency of CRYPTO_ECDH
    
    commit b5b9007730ce1d90deaf25d7f678511550744bdc upstream.
    
    This fixes a typo in the CRYPTO_KPP dependency of CRYPTO_ECDH.
    
    Fixes: 3c4b23901a0c ("crypto: ecdh - Add ECDH software support")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5ba0b372da3cdc092ce0d98e5433e44aefab3f7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 19 14:18:34 2018 +0100

    ALSA: hda - Reduce the suspend time consumption for ALC256
    
    commit 1c9609e3a8cf5997bd35205cfda1ff2218ee793b upstream.
    
    ALC256 has its own quirk to override the shutup call, and it contains
    the COEF update for pulling down the headset jack control.  Currently,
    the COEF update is called after clearing the headphone pin, and this
    seems triggering a stall of the codec communication, and results in a
    long delay over a second at suspend.
    
    A quick resolution is to swap the calls: at first with the COEF
    update, then clear the headphone pin.
    
    Fixes: 4a219ef8f370 ("ALSA: hda/realtek - Add ALC256 HP depop function")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198503
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5845e025423b02235489f154903b8befabebb02
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jan 22 13:19:28 2018 +0100

    gpio: Fix kernel stack leak to userspace
    
    commit 24bd3efc9d1efb5f756a7c6f807a36ddb6adc671 upstream.
    
    The GPIO event descriptor was leaking kernel stack to
    userspace because we don't zero the variable before
    use. Ooops. Fix this.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 460c5b9745b8b455be5591b1179e89a8bdcb1afd
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Fri Jan 12 13:16:08 2018 +0100

    gpio: stmpe: i2c transfer are forbiden in atomic context
    
    commit b888fb6f2a278442933e3bfab70262e9a5365fb3 upstream.
    
    Move the workaround from stmpe_gpio_irq_unmask() which is executed
    in atomic context to stmpe_gpio_irq_sync_unlock() which is not.
    
    It fixes the following issue:
    
    [    1.500000] BUG: scheduling while atomic: swapper/1/0x00000002
    [    1.500000] CPU: 0 PID: 1 Comm: swapper Not tainted 4.15.0-rc2-00020-gbd4301f-dirty #28
    [    1.520000] Hardware name: STM32 (Device Tree Support)
    [    1.520000] [<0000bfc9>] (unwind_backtrace) from [<0000b347>] (show_stack+0xb/0xc)
    [    1.530000] [<0000b347>] (show_stack) from [<0001fc49>] (__schedule_bug+0x39/0x58)
    [    1.530000] [<0001fc49>] (__schedule_bug) from [<00168211>] (__schedule+0x23/0x2b2)
    [    1.550000] [<00168211>] (__schedule) from [<001684f7>] (schedule+0x57/0x64)
    [    1.550000] [<001684f7>] (schedule) from [<0016a513>] (schedule_timeout+0x137/0x164)
    [    1.550000] [<0016a513>] (schedule_timeout) from [<00168b91>] (wait_for_common+0x8d/0xfc)
    [    1.570000] [<00168b91>] (wait_for_common) from [<00139753>] (stm32f4_i2c_xfer+0xe9/0xfe)
    [    1.580000] [<00139753>] (stm32f4_i2c_xfer) from [<00138545>] (__i2c_transfer+0x111/0x148)
    [    1.590000] [<00138545>] (__i2c_transfer) from [<001385cf>] (i2c_transfer+0x53/0x70)
    [    1.590000] [<001385cf>] (i2c_transfer) from [<001388a5>] (i2c_smbus_xfer+0x12f/0x36e)
    [    1.600000] [<001388a5>] (i2c_smbus_xfer) from [<00138b49>] (i2c_smbus_read_byte_data+0x1f/0x2a)
    [    1.610000] [<00138b49>] (i2c_smbus_read_byte_data) from [<00124fdd>] (__stmpe_reg_read+0xd/0x24)
    [    1.620000] [<00124fdd>] (__stmpe_reg_read) from [<001252b3>] (stmpe_reg_read+0x19/0x24)
    [    1.630000] [<001252b3>] (stmpe_reg_read) from [<0002c4d1>] (unmask_irq+0x17/0x22)
    [    1.640000] [<0002c4d1>] (unmask_irq) from [<0002c57f>] (irq_startup+0x6f/0x78)
    [    1.650000] [<0002c57f>] (irq_startup) from [<0002b7a1>] (__setup_irq+0x319/0x47c)
    [    1.650000] [<0002b7a1>] (__setup_irq) from [<0002bad3>] (request_threaded_irq+0x6b/0xe8)
    [    1.660000] [<0002bad3>] (request_threaded_irq) from [<0002d0b9>] (devm_request_threaded_irq+0x3b/0x6a)
    [    1.670000] [<0002d0b9>] (devm_request_threaded_irq) from [<001446e7>] (mmc_gpiod_request_cd_irq+0x49/0x8a)
    [    1.680000] [<001446e7>] (mmc_gpiod_request_cd_irq) from [<0013d45d>] (mmc_start_host+0x49/0x60)
    [    1.690000] [<0013d45d>] (mmc_start_host) from [<0013e40b>] (mmc_add_host+0x3b/0x54)
    [    1.700000] [<0013e40b>] (mmc_add_host) from [<00148119>] (mmci_probe+0x4d1/0x60c)
    [    1.710000] [<00148119>] (mmci_probe) from [<000f903b>] (amba_probe+0x7b/0xbe)
    [    1.720000] [<000f903b>] (amba_probe) from [<001170e5>] (driver_probe_device+0x169/0x1f8)
    [    1.730000] [<001170e5>] (driver_probe_device) from [<001171b7>] (__driver_attach+0x43/0x5c)
    [    1.740000] [<001171b7>] (__driver_attach) from [<0011618d>] (bus_for_each_dev+0x3d/0x46)
    [    1.740000] [<0011618d>] (bus_for_each_dev) from [<001165cd>] (bus_add_driver+0xcd/0x124)
    [    1.740000] [<001165cd>] (bus_add_driver) from [<00117713>] (driver_register+0x4d/0x7a)
    [    1.760000] [<00117713>] (driver_register) from [<001fc765>] (do_one_initcall+0xbd/0xe8)
    [    1.770000] [<001fc765>] (do_one_initcall) from [<001fc88b>] (kernel_init_freeable+0xfb/0x134)
    [    1.780000] [<001fc88b>] (kernel_init_freeable) from [<00167ee3>] (kernel_init+0x7/0x9c)
    [    1.790000] [<00167ee3>] (kernel_init) from [<00009b65>] (ret_from_fork+0x11/0x2c)
    
    Signed-off-by: Alexandre TORGUE <alexandre.torgue@st.com>
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 636124c8699be4f5f987ef7f95cfda1acaeed88c
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Dec 21 11:11:31 2017 +1030

    tools/gpio: Fix build error with musl libc
    
    commit 1696784eb7b52b13b62d160c028ef2c2c981d4f2 upstream.
    
    The GPIO tools build fails when using a buildroot toolchain that uses musl
    as it's C library:
    
    arm-broomstick-linux-musleabi-gcc -Wp,-MD,./.gpio-event-mon.o.d \
     -Wp,-MT,gpio-event-mon.o -O2 -Wall -g -D_GNU_SOURCE \
     -Iinclude -D"BUILD_STR(s)=#s" -c -o gpio-event-mon.o gpio-event-mon.c
    gpio-event-mon.c:30:6: error: unknown type name ‘u_int32_t’; did you mean ‘uint32_t’?
          u_int32_t handleflags,
          ^~~~~~~~~
          uint32_t
    
    The glibc headers installed on my laptop include sys/types.h in
    unistd.h, but it appears that musl does not.
    
    Fixes: 97f69747d8b1 ("tools/gpio: add the gpio-event-mon tool")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00251aedef3195e912184a5798952a7793a77abe
Author: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
Date:   Mon Nov 6 11:44:23 2017 -0600

    KVM: x86: Fix CPUID function for word 6 (80000001_ECX)
    
    commit 50a671d4d15b859f447fa527191073019b6ce9cb upstream.
    
    The function for CPUID 80000001 ECX is set to 0xc0000001. Set it to
    0x80000001.
    
    Signed-off-by: Janakarajan Natarajan <Janakarajan.Natarajan@amd.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Fixes: d6321d493319 ("KVM: x86: generalize guest_cpuid_has_ helpers")
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5e06a1867210049bbfe27864ee0a40cfd9b1e9b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 5 16:26:00 2018 -0800

    loop: fix concurrent lo_open/lo_release
    
    commit ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5 upstream.
    
    范龙飞 reports that KASAN can report a use-after-free in __lock_acquire.
    The reason is due to insufficient serialization in lo_release(), which
    will continue to use the loop device even after it has decremented the
    lo_refcnt to zero.
    
    In the meantime, another process can come in, open the loop device
    again as it is being shut down. Confusion ensues.
    
    Reported-by: 范龙飞 <long7573@126.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d383a4277b75f3305d78006bb8de673cd17d04a5
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Jan 22 11:39:47 2018 +0100

    futex: Fix OWNER_DEAD fixup
    
    commit a97cb0e7b3f4c6297fd857055ae8e895f402f501 upstream.
    
    Both Geert and DaveJ reported that the recent futex commit:
    
      c1e2f0eaf015 ("futex: Avoid violating the 10th rule of futex")
    
    introduced a problem with setting OWNER_DEAD. We set the bit on an
    uninitialized variable and then entirely optimize it away as a
    dead-store.
    
    Move the setting of the bit to where it is more useful.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@us.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: c1e2f0eaf015 ("futex: Avoid violating the 10th rule of futex")
    Link: http://lkml.kernel.org/r/20180122103947.GD2228@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Ozkan Sezer <sezeroz@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
