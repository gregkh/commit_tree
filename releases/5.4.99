commit 850e6a95deb5a9e6e922ace64bf2dd0ed290ecb7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 17 10:35:20 2021 +0100

    Linux 5.4.99
    
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Ross Schmidt <ross.schm.dev@gmail.com>
    Link: https://lore.kernel.org/r/20210215152715.401453874@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8ffaca0fe27d489cb8385073cb13e1da1fda3ac
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Nov 12 11:31:55 2020 +0100

    ovl: expand warning in ovl_d_real()
    
    commit cef4cbff06fbc3be54d6d79ee139edecc2ee8598 upstream.
    
    There was a syzbot report with this warning but insufficient information...
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b55528a18e4066fa24fe44ede37db84af2c8015d
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Tue Feb 2 15:20:59 2021 +0600

    net/qrtr: restrict user-controlled length in qrtr_tun_write_iter()
    
    commit 2a80c15812372e554474b1dba0b1d8e467af295d upstream.
    
    syzbot found WARNING in qrtr_tun_write_iter [1] when write_iter length
    exceeds KMALLOC_MAX_SIZE causing order >= MAX_ORDER condition.
    
    Additionally, there is no check for 0 length write.
    
    [1]
    WARNING: mm/page_alloc.c:5011
    [..]
    Call Trace:
     alloc_pages_current+0x18c/0x2a0 mm/mempolicy.c:2267
     alloc_pages include/linux/gfp.h:547 [inline]
     kmalloc_order+0x2e/0xb0 mm/slab_common.c:837
     kmalloc_order_trace+0x14/0x120 mm/slab_common.c:853
     kmalloc include/linux/slab.h:557 [inline]
     kzalloc include/linux/slab.h:682 [inline]
     qrtr_tun_write_iter+0x8a/0x180 net/qrtr/tun.c:83
     call_write_iter include/linux/fs.h:1901 [inline]
    
    Reported-by: syzbot+c2a7e5c5211605a90865@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Link: https://lore.kernel.org/r/20210202092059.1361381-1-snovitoll@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99996cd558ba1183b062205e824eabc49c93343a
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Tue Feb 2 02:32:33 2021 +0600

    net/rds: restrict iovecs length for RDS_CMSG_RDMA_ARGS
    
    commit a11148e6fcce2ae53f47f0a442d098d860b4f7db upstream.
    
    syzbot found WARNING in rds_rdma_extra_size [1] when RDS_CMSG_RDMA_ARGS
    control message is passed with user-controlled
    0x40001 bytes of args->nr_local, causing order >= MAX_ORDER condition.
    
    The exact value 0x40001 can be checked with UIO_MAXIOV which is 0x400.
    So for kcalloc() 0x400 iovecs with sizeof(struct rds_iovec) = 0x10
    is the closest limit, with 0x10 leftover.
    
    Same condition is currently done in rds_cmsg_rdma_args().
    
    [1] WARNING: mm/page_alloc.c:5011
    [..]
    Call Trace:
     alloc_pages_current+0x18c/0x2a0 mm/mempolicy.c:2267
     alloc_pages include/linux/gfp.h:547 [inline]
     kmalloc_order+0x2e/0xb0 mm/slab_common.c:837
     kmalloc_order_trace+0x14/0x120 mm/slab_common.c:853
     kmalloc_array include/linux/slab.h:592 [inline]
     kcalloc include/linux/slab.h:621 [inline]
     rds_rdma_extra_size+0xb2/0x3b0 net/rds/rdma.c:568
     rds_rm_size net/rds/send.c:928 [inline]
    
    Reported-by: syzbot+1bd2b07f93745fa38425@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Link: https://lore.kernel.org/r/20210201203233.1324704-1-snovitoll@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac79b1d94a88cb52cfd7624d5f32c833cf2f9f4d
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Tue Feb 9 09:52:19 2021 +0100

    vsock: fix locking in vsock_shutdown()
    
    commit 1c5fae9c9a092574398a17facc31c533791ef232 upstream.
    
    In vsock_shutdown() we touched some socket fields without holding the
    socket lock, such as 'state' and 'sk_flags'.
    
    Also, after the introduction of multi-transport, we are accessing
    'vsk->transport' in vsock_send_shutdown() without holding the lock
    and this call can be made while the connection is in progress, so
    the transport can change in the meantime.
    
    To avoid issues, we hold the socket lock when we enter in
    vsock_shutdown() and release it when we leave.
    
    Among the transports that implement the 'shutdown' callback, only
    hyperv_transport acquired the lock. Since the caller now holds it,
    we no longer take it.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c025081b57df63f5a0b92ab57855904108c059d7
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Mon Feb 8 15:44:54 2021 +0100

    vsock/virtio: update credit only if socket is not closed
    
    commit ce7536bc7398e2ae552d2fabb7e0e371a9f1fe46 upstream.
    
    If the socket is closed or is being released, some resources used by
    virtio_transport_space_update() such as 'vsk->trans' may be released.
    
    To avoid a use after free bug we should only update the available credit
    when we are sure the socket is still open and we have the lock held.
    
    Fixes: 06a8fc78367d ("VSOCK: Introduce virtio_vsock_common.ko")
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20210208144454.84438-1-sgarzare@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2545c5bd8316c7e3ba29312eb3dce431530ecce8
Author: Edwin Peer <edwin.peer@broadcom.com>
Date:   Fri Feb 5 17:37:32 2021 -0800

    net: watchdog: hold device global xmit lock during tx disable
    
    commit 3aa6bce9af0e25b735c9c1263739a5639a336ae8 upstream.
    
    Prevent netif_tx_disable() running concurrently with dev_watchdog() by
    taking the device global xmit lock. Otherwise, the recommended:
    
            netif_carrier_off(dev);
            netif_tx_disable(dev);
    
    driver shutdown sequence can happen after the watchdog has already
    checked carrier, resulting in possible false alarms. This is because
    netif_tx_lock() only sets the frozen bit without maintaining the locks
    on the individual queues.
    
    Fixes: c3f26a269c24 ("netdev: Fix lockdep warnings in multiqueue configurations.")
    Signed-off-by: Edwin Peer <edwin.peer@broadcom.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5f0b6f7b1c0ae835c1bd2fe487adf620b6f73e9
Author: Norbert Slusarek <nslusarek@gmx.net>
Date:   Fri Feb 5 13:14:05 2021 +0100

    net/vmw_vsock: improve locking in vsock_connect_timeout()
    
    commit 3d0bc44d39bca615b72637e340317b7899b7f911 upstream.
    
    A possible locking issue in vsock_connect_timeout() was recognized by
    Eric Dumazet which might cause a null pointer dereference in
    vsock_transport_cancel_pkt(). This patch assures that
    vsock_transport_cancel_pkt() will be called within the lock, so a race
    condition won't occur which could result in vsk->transport to be set to NULL.
    
    Fixes: 380feae0def7 ("vsock: cancel packets when failing to connect")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Norbert Slusarek <nslusarek@gmx.net>
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Link: https://lore.kernel.org/r/trinity-f8e0937a-cf0e-4d80-a76e-d9a958ba3ef1-1612535522360@3c-app-gmx-bap12
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 611d93fbea54ad1d85163ca258b764b70ae0cd89
Author: NeilBrown <neilb@suse.de>
Date:   Fri Feb 5 11:36:30 2021 +1100

    net: fix iteration for sctp transport seq_files
    
    commit af8085f3a4712c57d0dd415ad543bac85780375c upstream.
    
    The sctp transport seq_file iterators take a reference to the transport
    in the ->start and ->next functions and releases the reference in the
    ->show function.  The preferred handling for such resources is to
    release them in the subsequent ->next or ->stop function call.
    
    Since Commit 1f4aace60b0e ("fs/seq_file.c: simplify seq_file iteration
    code and interface") there is no guarantee that ->show will be called
    after ->next, so this function can now leak references.
    
    So move the sctp_transport_put() call to ->next and ->stop.
    
    Fixes: 1f4aace60b0e ("fs/seq_file.c: simplify seq_file iteration code and interface")
    Reported-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: NeilBrown <neilb@suse.de>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2085d886630a5efab216e677d03b51916cd77ff1
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 4 13:31:46 2021 -0800

    net: gro: do not keep too many GRO packets in napi->rx_list
    
    commit 8dc1c444df193701910f5e80b5d4caaf705a8fb0 upstream.
    
    Commit c80794323e82 ("net: Fix packet reordering caused by GRO and
    listified RX cooperation") had the unfortunate effect of adding
    latencies in common workloads.
    
    Before the patch, GRO packets were immediately passed to
    upper stacks.
    
    After the patch, we can accumulate quite a lot of GRO
    packets (depdending on NAPI budget).
    
    My fix is counting in napi->rx_count number of segments
    instead of number of logical packets.
    
    Fixes: c80794323e82 ("net: Fix packet reordering caused by GRO and listified RX cooperation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Bisected-by: John Sperbeck <jsperbeck@google.com>
    Tested-by: Jian Yang <jianyang@google.com>
    Cc: Maxim Mikityanskiy <maximmi@mellanox.com>
    Reviewed-by: Saeed Mahameed <saeedm@nvidia.com>
    Reviewed-by: Edward Cree <ecree.xilinx@gmail.com>
    Reviewed-by: Alexander Lobakin <alobakin@pm.me>
    Link: https://lore.kernel.org/r/20210204213146.4192368-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c53956a8da0cd09e17f1e256d38f1198602bc0f
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Thu Feb 4 18:33:51 2021 +0200

    net: dsa: call teardown method on probe failure
    
    commit 8fd54a73b7cda11548154451bdb4bde6d8ff74c7 upstream.
    
    Since teardown is supposed to undo the effects of the setup method, it
    should be called in the error path for dsa_switch_setup, not just in
    dsa_switch_teardown.
    
    Fixes: 5e3f847a02aa ("net: dsa: Add teardown callback for drivers")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/20210204163351.2929670-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b42ab078369318a99c925508f3532a7d5288b4f
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Feb 3 14:29:52 2021 -0500

    udp: fix skb_copy_and_csum_datagram with odd segment sizes
    
    commit 52cbd23a119c6ebf40a527e53f3402d2ea38eccb upstream.
    
    When iteratively computing a checksum with csum_block_add, track the
    offset "pos" to correctly rotate in csum_block_add when offset is odd.
    
    The open coded implementation of skb_copy_and_csum_datagram did this.
    With the switch to __skb_datagram_iter calling csum_and_copy_to_iter,
    pos was reinitialized to 0 on each call.
    
    Bring back the pos by passing it along with the csum to the callback.
    
    Changes v1->v2
      - pass csum value, instead of csump pointer (Alexander Duyck)
    
    Link: https://lore.kernel.org/netdev/20210128152353.GB27281@optiplex/
    Fixes: 950fcaecd5cc ("datagram: consolidate datagram copy to iter helpers")
    Reported-by: Oliver Graute <oliver.graute@gmail.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20210203192952.1849843-1-willemdebruijn.kernel@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73bc75fda669b37605b3f8a6d0ff4f1dfda41eb5
Author: David Howells <dhowells@redhat.com>
Date:   Wed Feb 3 08:47:56 2021 +0000

    rxrpc: Fix clearance of Tx/Rx ring when releasing a call
    
    commit 7b5eab57cac45e270a0ad624ba157c5b30b3d44d upstream.
    
    At the end of rxrpc_release_call(), rxrpc_cleanup_ring() is called to clear
    the Rx/Tx skbuff ring, but this doesn't lock the ring whilst it's accessing
    it.  Unfortunately, rxrpc_resend() might be trying to retransmit a packet
    concurrently with this - and whilst it does lock the ring, this isn't
    protection against rxrpc_cleanup_call().
    
    Fix this by removing the call to rxrpc_cleanup_ring() from
    rxrpc_release_call().  rxrpc_cleanup_ring() will be called again anyway
    from rxrpc_cleanup_call().  The earlier call is just an optimisation to
    recycle skbuffs more quickly.
    
    Alternative solutions include rxrpc_release_call() could try to cancel the
    work item or wait for it to complete or rxrpc_cleanup_ring() could lock
    when accessing the ring (which would require a bh lock).
    
    This can produce a report like the following:
    
      BUG: KASAN: use-after-free in rxrpc_send_data_packet+0x19b4/0x1e70 net/rxrpc/output.c:372
      Read of size 4 at addr ffff888011606e04 by task kworker/0:0/5
      ...
      Workqueue: krxrpcd rxrpc_process_call
      Call Trace:
       ...
       kasan_report.cold+0x79/0xd5 mm/kasan/report.c:413
       rxrpc_send_data_packet+0x19b4/0x1e70 net/rxrpc/output.c:372
       rxrpc_resend net/rxrpc/call_event.c:266 [inline]
       rxrpc_process_call+0x1634/0x1f60 net/rxrpc/call_event.c:412
       process_one_work+0x98d/0x15f0 kernel/workqueue.c:2275
       ...
    
      Allocated by task 2318:
       ...
       sock_alloc_send_pskb+0x793/0x920 net/core/sock.c:2348
       rxrpc_send_data+0xb51/0x2bf0 net/rxrpc/sendmsg.c:358
       rxrpc_do_sendmsg+0xc03/0x1350 net/rxrpc/sendmsg.c:744
       rxrpc_sendmsg+0x420/0x630 net/rxrpc/af_rxrpc.c:560
       ...
    
      Freed by task 2318:
       ...
       kfree_skb+0x140/0x3f0 net/core/skbuff.c:704
       rxrpc_free_skb+0x11d/0x150 net/rxrpc/skbuff.c:78
       rxrpc_cleanup_ring net/rxrpc/call_object.c:485 [inline]
       rxrpc_release_call+0x5dd/0x860 net/rxrpc/call_object.c:552
       rxrpc_release_calls_on_socket+0x21c/0x300 net/rxrpc/call_object.c:579
       rxrpc_release_sock net/rxrpc/af_rxrpc.c:885 [inline]
       rxrpc_release+0x263/0x5a0 net/rxrpc/af_rxrpc.c:916
       __sock_release+0xcd/0x280 net/socket.c:597
       ...
    
      The buggy address belongs to the object at ffff888011606dc0
       which belongs to the cache skbuff_head_cache of size 232
    
    Fixes: 248f219cb8bc ("rxrpc: Rewrite the data and ack handling code")
    Reported-by: syzbot+174de899852504e4a74a@syzkaller.appspotmail.com
    Reported-by: syzbot+3d1c772efafd3c38d007@syzkaller.appspotmail.com
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: Hillf Danton <hdanton@sina.com>
    Link: https://lore.kernel.org/r/161234207610.653119.5287360098400436976.stgit@warthog.procyon.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b90e8d5d28d1b6811b0fb8543a342cefcdc2d46b
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Thu Dec 10 11:50:07 2020 +0300

    usb: dwc3: ulpi: Replace CPU-based busyloop with Protocol-based one
    
    commit fca3f138105727c3a22edda32d02f91ce1bf11c9 upstream
    
    Originally the procedure of the ULPI transaction finish detection has been
    developed as a simple busy-loop with just decrementing counter and no
    delays. It's wrong since on different systems the loop will take a
    different time to complete. So if the system bus and CPU are fast enough
    to overtake the ULPI bus and the companion PHY reaction, then we'll get to
    take a false timeout error. Fix this by converting the busy-loop procedure
    to take the standard bus speed, address value and the registers access
    mode into account for the busy-loop delay calculation.
    
    Here is the way the fix works. It's known that the ULPI bus is clocked
    with 60MHz signal. In accordance with [1] the ULPI bus protocol is created
    so to spend 5 and 6 clock periods for immediate register write and read
    operations respectively, and 6 and 7 clock periods - for the extended
    register writes and reads. Based on that we can easily pre-calculate the
    time which will be needed for the controller to perform a requested IO
    operation. Note we'll still preserve the attempts counter in case if the
    DWC USB3 controller has got some internals delays.
    
    [1] UTMI+ Low Pin Interface (ULPI) Specification, Revision 1.1,
        October 20, 2004, pp. 30 - 36.
    
    Fixes: 88bc9d194ff6 ("usb: dwc3: add ULPI interface support")
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Link: https://lore.kernel.org/r/20201210085008.13264-3-Sergey.Semin@baikalelectronics.ru
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35834bf0b210d49ad78b1408efed03091d1a9f39
Author: Felipe Balbi <balbi@kernel.org>
Date:   Thu Aug 13 08:30:38 2020 +0300

    usb: dwc3: ulpi: fix checkpatch warning
    
    commit 2a499b45295206e7f3dc76edadde891c06cc4447 upstream
    
    no functional changes.
    
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b49b82eeea2f2ff0ed0f7b34aaea31dc0073724
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Feb 12 20:52:54 2021 -0800

    h8300: fix PREEMPTION build, TI_PRE_COUNT undefined
    
    [ Upstream commit ade9679c159d5bbe14fb7e59e97daf6062872e2b ]
    
    Fix a build error for undefined 'TI_PRE_COUNT' by adding it to
    asm-offsets.c.
    
      h8300-linux-ld: arch/h8300/kernel/entry.o: in function `resume_kernel': (.text+0x29a): undefined reference to `TI_PRE_COUNT'
    
    Link: https://lkml.kernel.org/r/20210212021650.22740-1-rdunlap@infradead.org
    Fixes: df2078b8daa7 ("h8300: Low level entry")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1019015a5dca64317325588164fb4cb9813e849d
Author: Alain Volmat <alain.volmat@foss.st.com>
Date:   Fri Feb 5 09:51:40 2021 +0100

    i2c: stm32f7: fix configuration of the digital filter
    
    [ Upstream commit 3d6a3d3a2a7a3a60a824e7c04e95fd50dec57812 ]
    
    The digital filter related computation are present in the driver
    however the programming of the filter within the IP is missing.
    The maximum value for the DNF is wrong and should be 15 instead of 16.
    
    Fixes: aeb068c57214 ("i2c: i2c-stm32f7: add driver")
    
    Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
    Signed-off-by: Pierre-Yves MORDRET <pierre-yves.mordret@foss.st.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 546d92a43c94e1f166e151f9d84142d91c8bc6e2
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Tue Feb 9 18:58:56 2021 +0100

    clk: sunxi-ng: mp: fix parent rate change flag check
    
    [ Upstream commit 245090ab2636c0869527ce563afbfb8aff29e825 ]
    
    CLK_SET_RATE_PARENT flag is checked on parent clock instead of current
    one. Fix that.
    
    Fixes: 3f790433c3cb ("clk: sunxi-ng: Adjust MP clock parent rate when allowed")
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Tested-by: Andre Heider <a.heider@gmail.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Link: https://lore.kernel.org/r/20210209175900.7092-2-jernej.skrabec@siol.net
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b02db23d2647c7c610eee74aaaaa33eae90c72fa
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Tue Feb 9 18:59:00 2021 +0100

    drm/sun4i: dw-hdmi: Fix max. frequency for H6
    
    [ Upstream commit 1926a0508d8947cf081280d85ff035300dc71da7 ]
    
    It turns out that reasoning for lowering max. supported frequency is
    wrong. Scrambling works just fine. Several now fixed bugs prevented
    proper functioning, even with rates lower than 340 MHz. Issues were just
    more pronounced with higher frequencies.
    
    Fix that by allowing max. supported frequency in HW and fix the comment.
    
    Fixes: cd9063757a22 ("drm/sun4i: DW HDMI: Lower max. supported rate for H6")
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Tested-by: Andre Heider <a.heider@gmail.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210209175900.7092-6-jernej.skrabec@siol.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40db7dba50feb9f6c0ab7debe4c769d20cd62673
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Tue Feb 9 18:58:59 2021 +0100

    drm/sun4i: Fix H6 HDMI PHY configuration
    
    [ Upstream commit 6a155216c48f2f65c8dcb02c4c27549c170d24a9 ]
    
    As it turns out, vendor HDMI PHY driver for H6 has a pretty big table
    of predefined values for various pixel clocks. However, most of them are
    not useful/tested because they come from reference driver code. Vendor
    PHY driver is concerned with only few of those, namely 27 MHz, 74.25
    MHz, 148.5 MHz, 297 MHz and 594 MHz. These are all frequencies for
    standard CEA modes.
    
    Fix sun50i_h6_cur_ctr and sun50i_h6_phy_config with the values only for
    aforementioned frequencies.
    
    Table sun50i_h6_mpll_cfg doesn't need to be changed because values are
    actually frequency dependent and not so much SoC dependent. See i.MX6
    documentation for explanation of those values for similar PHY.
    
    Fixes: c71c9b2fee17 ("drm/sun4i: Add support for Synopsys HDMI PHY")
    Tested-by: Andre Heider <a.heider@gmail.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210209175900.7092-5-jernej.skrabec@siol.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3063b80b4bdf1b2443ec86e889007bd416a1f044
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Tue Feb 9 18:58:57 2021 +0100

    drm/sun4i: tcon: set sync polarity for tcon1 channel
    
    [ Upstream commit 50791f5d7b6a14b388f46c8885f71d1b98216d1d ]
    
    Channel 1 has polarity bits for vsync and hsync signals but driver never
    sets them. It turns out that with pre-HDMI2 controllers seemingly there
    is no issue if polarity is not set. However, with HDMI2 controllers
    (H6) there often comes to de-synchronization due to phase shift. This
    causes flickering screen. It's safe to assume that similar issues might
    happen also with pre-HDMI2 controllers.
    
    Solve issue with setting vsync and hsync polarity. Note that display
    stacks with tcon top have polarity bits actually in tcon0 polarity
    register.
    
    Fixes: 9026e0d122ac ("drm: Add Allwinner A10 Display Engine support")
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Tested-by: Andre Heider <a.heider@gmail.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210209175900.7092-3-jernej.skrabec@siol.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 107cf5eede74c0b927a3154799bf71dd51862575
Author: Fangrui Song <maskray@google.com>
Date:   Tue Feb 9 13:42:07 2021 -0800

    firmware_loader: align .builtin_fw to 8
    
    [ Upstream commit 793f49a87aae24e5bcf92ad98d764153fc936570 ]
    
    arm64 references the start address of .builtin_fw (__start_builtin_fw)
    with a pair of R_AARCH64_ADR_PREL_PG_HI21/R_AARCH64_LDST64_ABS_LO12_NC
    relocations.  The compiler is allowed to emit the
    R_AARCH64_LDST64_ABS_LO12_NC relocation because struct builtin_fw in
    include/linux/firmware.h is 8-byte aligned.
    
    The R_AARCH64_LDST64_ABS_LO12_NC relocation requires the address to be a
    multiple of 8, which may not be the case if .builtin_fw is empty.
    Unconditionally align .builtin_fw to fix the linker error.  32-bit
    architectures could use ALIGN(4) but that would add unnecessary
    complexity, so just use ALIGN(8).
    
    Link: https://lkml.kernel.org/r/20201208054646.2913063-1-maskray@google.com
    Link: https://github.com/ClangBuiltLinux/linux/issues/1204
    Fixes: 5658c76 ("firmware: allow firmware files to be built into kernel image")
    Signed-off-by: Fangrui Song <maskray@google.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Acked-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit beb85f4927e85d4babe24d492aa4327b283f74ae
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Tue Feb 9 17:03:05 2021 +0800

    net: hns3: add a check for queue_id in hclge_reset_vf_queue()
    
    [ Upstream commit 67a69f84cab60484f02eb8cbc7a76edffbb28a25 ]
    
    The queue_id is received from vf, if use it directly,
    an out-of-bound issue may be caused, so add a check for
    this queue_id before using it in hclge_reset_vf_queue().
    
    Fixes: 1a426f8b40fc ("net: hns3: fix the VF queue reset flow error")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a045956a3b41ae27814f3855259ed2dcc5b3348f
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Feb 8 16:43:30 2021 +0100

    x86/build: Disable CET instrumentation in the kernel for 32-bit too
    
    [ Upstream commit 256b92af784d5043eeb7d559b6d5963dcc2ecb10 ]
    
    Commit
    
      20bf2b378729 ("x86/build: Disable CET instrumentation in the kernel")
    
    disabled CET instrumentation which gets added by default by the Ubuntu
    gcc9 and 10 by default, but did that only for 64-bit builds. It would
    still fail when building a 32-bit target. So disable CET for all x86
    builds.
    
    Fixes: 20bf2b378729 ("x86/build: Disable CET instrumentation in the kernel")
    Reported-by: AC <achirvasub@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Tested-by: AC <achirvasub@gmail.com>
    Link: https://lkml.kernel.org/r/YCCIgMHkzh/xT4ex@arch-chirva.localdomain
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da1a5442ad2c7cdcc36814b7d39626bde618df99
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Feb 5 12:56:43 2021 +0100

    netfilter: conntrack: skip identical origin tuple in same zone only
    
    [ Upstream commit 07998281c268592963e1cd623fe6ab0270b65ae4 ]
    
    The origin skip check needs to re-test the zone. Else, we might skip
    a colliding tuple in the reply direction.
    
    This only occurs when using 'directional zones' where origin tuples
    reside in different zones but the reply tuples share the same zone.
    
    This causes the new conntrack entry to be dropped at confirmation time
    because NAT clash resolution was elided.
    
    Fixes: 4e35c1cb9460240 ("netfilter: nf_nat: skip nat clash resolution for same-origin entries")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0142b957866f893da6480cf0b5764c188504e72b
Author: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
Date:   Tue Feb 2 21:08:02 2021 -0800

    ibmvnic: Clear failover_pending if unable to schedule
    
    [ Upstream commit ef66a1eace968ff22a35f45e6e8ec36b668b6116 ]
    
    Normally we clear the failover_pending flag when processing the reset.
    But if we are unable to schedule a failover reset we must clear the
    flag ourselves. We could fail to schedule the reset if we are in PROBING
    state (eg: when booting via kexec) or because we could not allocate memory.
    
    Thanks to Cris Forno for helping isolate the problem and for testing.
    
    Fixes: 1d8504937478 ("powerpc/vnic: Extend "failover pending" window")
    Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
    Tested-by: Cristobal Forno <cforno12@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210203050802.680772-1-sukadev@linux.ibm.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f8954cc624c7516455395c2e842d563f280515d
Author: Mohammad Athari Bin Ismail <mohammad.athari.ismail@intel.com>
Date:   Thu Feb 4 22:03:16 2021 +0800

    net: stmmac: set TxQ mode back to DCB after disabling CBS
    
    [ Upstream commit f317e2ea8c88737aa36228167b2292baef3f0430 ]
    
    When disable CBS, mode_to_use parameter is not updated even the operation
    mode of Tx Queue is changed to Data Centre Bridging (DCB). Therefore,
    when tc_setup_cbs() function is called to re-enable CBS, the operation
    mode of Tx Queue remains at DCB, which causing CBS fails to work.
    
    This patch updates the value of mode_to_use parameter to MTL_QUEUE_DCB
    after operation mode of Tx Queue is changed to DCB in stmmac_dma_qmode()
    callback function.
    
    Fixes: 1f705bc61aee ("net: stmmac: Add support for CBS QDISC")
    Suggested-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Signed-off-by: Mohammad Athari Bin Ismail <mohammad.athari.ismail@intel.com>
    Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Acked-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Link: https://lore.kernel.org/r/1612447396-20351-1-git-send-email-yoong.siang.song@intel.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0daa74b8ed74c70a76b9bca33c0b7c6796876c0
Author: Vadim Fedorenko <vfedorenko@novek.ru>
Date:   Thu Feb 4 20:50:34 2021 +0300

    selftests: txtimestamp: fix compilation issue
    
    [ Upstream commit 647b8dd5184665432cc8a2b5bca46a201f690c37 ]
    
    PACKET_TX_TIMESTAMP is defined in if_packet.h but it is not included in
    test. Include it instead of <netpacket/packet.h> otherwise the error of
    redefinition arrives.
    Also fix the compiler warning about ambiguous control flow by adding
    explicit braces.
    
    Fixes: 8fe2f761cae9 ("net-timestamp: expand documentation")
    Suggested-by: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Signed-off-by: Vadim Fedorenko <vfedorenko@novek.ru>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Link: https://lore.kernel.org/r/1612461034-24524-1-git-send-email-vfedorenko@novek.ru
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6107338c2fa2ee6264fc26e50462061377e4d4f3
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Thu Feb 4 15:45:11 2021 +0200

    net: enetc: initialize the RFS and RSS memories
    
    [ Upstream commit 07bf34a50e327975b21a9dee64d220c3dcb72ee9 ]
    
    Michael tried to enable Advanced Error Reporting through the ENETC's
    Root Complex Event Collector, and the system started spitting out single
    bit correctable ECC errors coming from the ENETC interfaces:
    
    pcieport 0000:00:1f.0: AER: Multiple Corrected error received: 0000:00:00.0
    fsl_enetc 0000:00:00.0: PCIe Bus Error: severity=Corrected, type=Transaction Layer, (Receiver ID)
    fsl_enetc 0000:00:00.0:   device [1957:e100] error status/mask=00004000/00000000
    fsl_enetc 0000:00:00.0:    [14] CorrIntErr
    fsl_enetc 0000:00:00.1: PCIe Bus Error: severity=Corrected, type=Transaction Layer, (Receiver ID)
    fsl_enetc 0000:00:00.1:   device [1957:e100] error status/mask=00004000/00000000
    fsl_enetc 0000:00:00.1:    [14] CorrIntErr
    
    Further investigating the port correctable memory error detect register
    (PCMEDR) shows that these AER errors have an associated SOURCE_ID of 6
    (RFS/RSS):
    
    $ devmem 0x1f8010e10 32
    0xC0000006
    $ devmem 0x1f8050e10 32
    0xC0000006
    
    Discussion with the hardware design engineers reveals that on LS1028A,
    the hardware does not do initialization of that RFS/RSS memory, and that
    software should clear/initialize the entire table before starting to
    operate. That comes as a bit of a surprise, since the driver does not do
    initialization of the RFS memory. Also, the initialization of the
    Receive Side Scaling is done only partially.
    
    Even though the entire ENETC IP has a single shared flow steering
    memory, the flow steering service should returns matches only for TCAM
    entries that are within the range of the Station Interface that is doing
    the search. Therefore, it should be sufficient for a Station Interface
    to initialize all of its own entries in order to avoid any ECC errors,
    and only the Station Interfaces in use should need initialization.
    
    There are Physical Station Interfaces associated with PCIe PFs and
    Virtual Station Interfaces associated with PCIe VFs. We let the PF
    driver initialize the entire port's memory, which includes the RFS
    entries which are going to be used by the VF.
    
    Reported-by: Michael Walle <michael@walle.cc>
    Fixes: d4fd0404c1c9 ("enetc: Introduce basic PF and VF ENETC ethernet drivers")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Tested-by: Michael Walle <michael@walle.cc>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Link: https://lore.kernel.org/r/20210204134511.2640309-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71d2bd7921db2e87cfea2dac51e14b185a28ac2d
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Feb 2 08:09:38 2021 +0100

    xen/netback: avoid race in xenvif_rx_ring_slots_available()
    
    [ Upstream commit ec7d8e7dd3a59528e305a18e93f1cb98f7faf83b ]
    
    Since commit 23025393dbeb3b8b3 ("xen/netback: use lateeoi irq binding")
    xenvif_rx_ring_slots_available() is no longer called only from the rx
    queue kernel thread, so it needs to access the rx queue with the
    associated queue held.
    
    Reported-by: Igor Druzhinin <igor.druzhinin@citrix.com>
    Fixes: 23025393dbeb3b8b3 ("xen/netback: use lateeoi irq binding")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Acked-by: Wei Liu <wl@xen.org>
    Link: https://lore.kernel.org/r/20210202070938.7863-1-jgross@suse.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff758e8a77f3efa5b0e7805d9dab459c65e1d49d
Author: Sven Auhagen <sven.auhagen@voleatech.de>
Date:   Tue Feb 2 18:01:16 2021 +0100

    netfilter: flowtable: fix tcp and udp header checksum update
    
    [ Upstream commit 8d6bca156e47d68551750a384b3ff49384c67be3 ]
    
    When updating the tcp or udp header checksum on port nat the function
    inet_proto_csum_replace2 with the last parameter pseudohdr as true.
    This leads to an error in the case that GRO is used and packets are
    split up in GSO. The tcp or udp checksum of all packets is incorrect.
    
    The error is probably masked due to the fact the most network driver
    implement tcp/udp checksum offloading. It also only happens when GRO is
    applied and not on single packets.
    
    The error is most visible when using a pppoe connection which is not
    triggering the tcp/udp checksum offload.
    
    Fixes: ac2a66665e23 ("netfilter: add generic flow table infrastructure")
    Signed-off-by: Sven Auhagen <sven.auhagen@voleatech.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b110391d1e806167254d3c7ae5d637191d913175
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Feb 2 16:07:37 2021 +0100

    netfilter: nftables: fix possible UAF over chains from packet path in netns
    
    [ Upstream commit 767d1216bff82507c945e92fe719dff2083bb2f4 ]
    
    Although hooks are released via call_rcu(), chain and rule objects are
    immediately released while packets are still walking over these bits.
    
    This patch adds the .pre_exit callback which is invoked before
    synchronize_rcu() in the netns framework to stay safe.
    
    Remove a comment which is not valid anymore since the core does not use
    synchronize_net() anymore since 8c873e219970 ("netfilter: core: free
    hooks with call_rcu").
    
    Suggested-by: Florian Westphal <fw@strlen.de>
    Fixes: df05ef874b28 ("netfilter: nf_tables: release objects on netns destruction")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35c279e02b7ee4e93fe48754f09fffae6be2747c
Author: Jozsef Kadlecsik <kadlec@mail.kfki.hu>
Date:   Fri Jan 29 20:57:43 2021 +0100

    netfilter: xt_recent: Fix attempt to update deleted entry
    
    [ Upstream commit b1bdde33b72366da20d10770ab7a49fe87b5e190 ]
    
    When both --reap and --update flag are specified, there's a code
    path at which the entry to be updated is reaped beforehand,
    which then leads to kernel crash. Reap only entries which won't be
    updated.
    
    Fixes kernel bugzilla #207773.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=207773
    Reported-by: Reindl Harald <h.reindl@thelounge.net>
    Fixes: 0079c5aee348 ("netfilter: xt_recent: add an entry reaper")
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e3a6b820535eb395784060ae26c5af579528fa0
Author: Bui Quang Minh <minhquangbui99@gmail.com>
Date:   Wed Jan 27 06:36:53 2021 +0000

    bpf: Check for integer overflow when using roundup_pow_of_two()
    
    [ Upstream commit 6183f4d3a0a2ad230511987c6c362ca43ec0055f ]
    
    On 32-bit architecture, roundup_pow_of_two() can return 0 when the argument
    has upper most bit set due to resulting 1UL << 32. Add a check for this case.
    
    Fixes: d5a3b1f69186 ("bpf: introduce BPF_MAP_TYPE_STACK_TRACE")
    Signed-off-by: Bui Quang Minh <minhquangbui99@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210127063653.3576-1-minhquangbui99@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e29126678f652249eca4a6576d3b7a0522acd52f
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Fri Jan 29 17:06:47 2021 +0100

    drm/vc4: hvs: Fix buffer overflow with the dlist handling
    
    [ Upstream commit facd93f4285c405f9a91b05166147cb39e860666 ]
    
    Commit 0a038c1c29a7 ("drm/vc4: Move LBM creation out of
    vc4_plane_mode_set()") changed the LBM allocation logic from first
    allocating the LBM memory for the plane to running mode_set,
    adding a gap in the LBM, and then running the dlist allocation filling
    that gap.
    
    The gap was introduced by incrementing the dlist array index, but was
    never checking whether or not we were over the array length, leading
    eventually to memory corruptions if we ever crossed this limit.
    
    vc4_dlist_write had that logic though, and was reallocating a larger
    dlist array when reaching the end of the buffer. Let's share the logic
    between both functions.
    
    Cc: Boris Brezillon <boris.brezillon@collabora.com>
    Cc: Eric Anholt <eric@anholt.net>
    Fixes: 0a038c1c29a7 ("drm/vc4: Move LBM creation out of vc4_plane_mode_set()")
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210129160647.128373-1-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69beec4a8b367fa37cfa82123d26f74a72ce7b4a
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Jan 26 12:02:13 2021 +0100

    mt76: dma: fix a possible memory leak in mt76_add_fragment()
    
    [ Upstream commit 93a1d4791c10d443bc67044def7efee2991d48b7 ]
    
    Fix a memory leak in mt76_add_fragment routine returning the buffer
    to the page_frag_cache when we receive a new fragment and the
    skb_shared_info frag array is full.
    
    Fixes: b102f0c522cf6 ("mt76: fix array overflow on receiving too many fragments for a packet")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Acked-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/4f9dd73407da88b2a552517ce8db242d86bf4d5c.1611616130.git.lorenzo@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a5991c8214b8af3ee190431892983c334110baa
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Dec 7 17:05:33 2020 +0000

    lkdtm: don't move ctors to .rodata
    
    [ Upstream commit 3f618ab3323407ee4c6a6734a37eb6e9663ebfb9 ]
    
    When building with KASAN and LKDTM, clang may implictly generate an
    asan.module_ctor function in the LKDTM rodata object. The Makefile moves
    the lkdtm_rodata_do_nothing() function into .rodata by renaming the
    file's .text section to .rodata, and consequently also moves the ctor
    function into .rodata, leading to a boot time crash (splat below) when
    the ctor is invoked by do_ctors().
    
    Let's prevent this by marking the function as noinstr rather than
    notrace, and renaming the file's .noinstr.text to .rodata. Marking the
    function as noinstr will prevent tracing and kprobes, and will inhibit
    any undesireable compiler instrumentation.
    
    The ctor function (if any) will be placed in .text and will work
    correctly.
    
    Example splat before this patch is applied:
    
    [    0.916359] Unable to handle kernel execute from non-executable memory at virtual address ffffa0006b60f5ac
    [    0.922088] Mem abort info:
    [    0.922828]   ESR = 0x8600000e
    [    0.923635]   EC = 0x21: IABT (current EL), IL = 32 bits
    [    0.925036]   SET = 0, FnV = 0
    [    0.925838]   EA = 0, S1PTW = 0
    [    0.926714] swapper pgtable: 4k pages, 48-bit VAs, pgdp=00000000427b3000
    [    0.928489] [ffffa0006b60f5ac] pgd=000000023ffff003, p4d=000000023ffff003, pud=000000023fffe003, pmd=0068000042000f01
    [    0.931330] Internal error: Oops: 8600000e [#1] PREEMPT SMP
    [    0.932806] Modules linked in:
    [    0.933617] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.10.0-rc7 #2
    [    0.935620] Hardware name: linux,dummy-virt (DT)
    [    0.936924] pstate: 40400005 (nZcv daif +PAN -UAO -TCO BTYPE=--)
    [    0.938609] pc : asan.module_ctor+0x0/0x14
    [    0.939759] lr : do_basic_setup+0x4c/0x70
    [    0.940889] sp : ffff27b600177e30
    [    0.941815] x29: ffff27b600177e30 x28: 0000000000000000
    [    0.943306] x27: 0000000000000000 x26: 0000000000000000
    [    0.944803] x25: 0000000000000000 x24: 0000000000000000
    [    0.946289] x23: 0000000000000001 x22: 0000000000000000
    [    0.947777] x21: ffffa0006bf4a890 x20: ffffa0006befb6c0
    [    0.949271] x19: ffffa0006bef9358 x18: 0000000000000068
    [    0.950756] x17: fffffffffffffff8 x16: 0000000000000000
    [    0.952246] x15: 0000000000000000 x14: 0000000000000000
    [    0.953734] x13: 00000000838a16d5 x12: 0000000000000001
    [    0.955223] x11: ffff94000da74041 x10: dfffa00000000000
    [    0.956715] x9 : 0000000000000000 x8 : ffffa0006b60f5ac
    [    0.958199] x7 : f9f9f9f9f9f9f9f9 x6 : 000000000000003f
    [    0.959683] x5 : 0000000000000040 x4 : 0000000000000000
    [    0.961178] x3 : ffffa0006bdc15a0 x2 : 0000000000000005
    [    0.962662] x1 : 00000000000000f9 x0 : ffffa0006bef9350
    [    0.964155] Call trace:
    [    0.964844]  asan.module_ctor+0x0/0x14
    [    0.965895]  kernel_init_freeable+0x158/0x198
    [    0.967115]  kernel_init+0x14/0x19c
    [    0.968104]  ret_from_fork+0x10/0x30
    [    0.969110] Code: 00000003 00000000 00000000 00000000 (00000000)
    [    0.970815] ---[ end trace b5339784e20d015c ]---
    
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Kees Cook <keescook@chromium.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://lore.kernel.org/r/20201207170533.10738-1-mark.rutland@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f5416710e13eb4e1587f6c38e92e9134cf5f480
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Mar 9 22:47:17 2020 +0100

    vmlinux.lds.h: Create section for protection against instrumentation
    
    [ Upstream commit 6553896666433e7efec589838b400a2a652b3ffa ]
    
    Some code pathes, especially the low level entry code, must be protected
    against instrumentation for various reasons:
    
     - Low level entry code can be a fragile beast, especially on x86.
    
     - With NO_HZ_FULL RCU state needs to be established before using it.
    
    Having a dedicated section for such code allows to validate with tooling
    that no unsafe functions are invoked.
    
    Add the .noinstr.text section and the noinstr attribute to mark
    functions. noinstr implies notrace. Kprobes will gain a section check
    later.
    
    Provide also a set of markers: instrumentation_begin()/end()
    
    These are used to mark code inside a noinstr function which calls
    into regular instrumentable text section as safe.
    
    The instrumentation markers are only active when CONFIG_DEBUG_ENTRY is
    enabled as the end marker emits a NOP to prevent the compiler from merging
    the annotation points. This means the objtool verification requires a
    kernel compiled with this option.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Alexandre Chartre <alexandre.chartre@oracle.com>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200505134100.075416272@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7f41a7ad44426c5b73a5be7f66e8b8528b03bb0
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Feb 1 19:40:01 2021 +0000

    ARM: kexec: fix oops after TLB are invalidated
    
    [ Upstream commit 4d62e81b60d4025e2dfcd5ea531cc1394ce9226f ]
    
    Giancarlo Ferrari reports the following oops while trying to use kexec:
    
     Unable to handle kernel paging request at virtual address 80112f38
     pgd = fd7ef03e
     [80112f38] *pgd=0001141e(bad)
     Internal error: Oops: 80d [#1] PREEMPT SMP ARM
     ...
    
    This is caused by machine_kexec() trying to set the kernel text to be
    read/write, so it can poke values into the relocation code before
    copying it - and an interrupt occuring which changes the page tables.
    The subsequent writes then hit read-only sections that trigger a
    data abort resulting in the above oops.
    
    Fix this by copying the relocation code, and then writing the variables
    into the destination, thereby avoiding the need to make the kernel text
    read/write.
    
    Reported-by: Giancarlo Ferrari <giancarlo.ferrari89@gmail.com>
    Tested-by: Giancarlo Ferrari <giancarlo.ferrari89@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f49bff85b6dbb60a410c7f7dc53b52ee1dc22470
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Jan 29 10:19:07 2021 +0000

    ARM: ensure the signal page contains defined contents
    
    [ Upstream commit 9c698bff66ab4914bb3d71da7dc6112519bde23e ]
    
    Ensure that the signal page contains our poison instruction to increase
    the protection against ROP attacks and also contains well defined
    contents.
    
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06350c7f7923b7613564b77b44edb135e918c89d
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Wed Feb 3 10:03:20 2021 +0100

    ARM: dts: lpc32xx: Revert set default clock rate of HCLK PLL
    
    [ Upstream commit 5638159f6d93b99ec9743ac7f65563fca3cf413d ]
    
    This reverts commit c17e9377aa81664d94b4f2102559fcf2a01ec8e7.
    
    The lpc32xx clock driver is not able to actually change the PLL rate as
    this would require reparenting ARM_CLK, DDRAM_CLK, PERIPH_CLK to SYSCLK,
    then stop the PLL, update the register, restart the PLL and wait for the
    PLL to lock and finally reparent ARM_CLK, DDRAM_CLK, PERIPH_CLK to HCLK
    PLL.
    
    Currently, the HCLK driver simply updates the registers but this has no
    real effect and all the clock rate calculation end up being wrong. This is
    especially annoying for the peripheral (e.g. UARTs, I2C, SPI).
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Tested-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Link: https://lore.kernel.org/r/20210203090320.GA3760268@piout.net'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e60577e29deb5f7dacbb3c8a7b22cf88fdc716fe
Author: Lin Feng <linf@wangsu.com>
Date:   Tue Feb 2 07:18:23 2021 -0700

    bfq-iosched: Revert "bfq: Fix computation of shallow depth"
    
    [ Upstream commit 388c705b95f23f317fa43e6abf9ff07b583b721a ]
    
    This reverts commit 6d4d273588378c65915acaf7b2ee74e9dd9c130a.
    
    bfq.limit_depth passes word_depths[] as shallow_depth down to sbitmap core
    sbitmap_get_shallow, which uses just the number to limit the scan depth of
    each bitmap word, formula:
    scan_percentage_for_each_word = shallow_depth / (1 << sbimap->shift) * 100%
    
    That means the comments's percentiles 50%, 75%, 18%, 37% of bfq are correct.
    But after commit patch 'bfq: Fix computation of shallow depth', we use
    sbitmap.depth instead, as a example in following case:
    
    sbitmap.depth = 256, map_nr = 4, shift = 6; sbitmap_word.depth = 64.
    The resulsts of computed bfqd->word_depths[] are {128, 192, 48, 96}, and
    three of the numbers exceed core dirver's 'sbitmap_word.depth=64' limit
    nothing.
    
    Signed-off-by: Lin Feng <linf@wangsu.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91d604ab2a9910c1c585abe5f491cc016a77e1ac
Author: Alexandre Ghiti <alex@ghiti.fr>
Date:   Fri Jan 29 12:31:05 2021 -0500

    riscv: virt_addr_valid must check the address belongs to linear mapping
    
    [ Upstream commit 2ab543823322b564f205cb15d0f0302803c87d11 ]
    
    virt_addr_valid macro checks that a virtual address is valid, ie that
    the address belongs to the linear mapping and that the corresponding
     physical page exists.
    
    Add the missing check that ensures the virtual address belongs to the
    linear mapping, otherwise __virt_to_phys, when compiled with
    CONFIG_DEBUG_VIRTUAL enabled, raises a WARN that is interpreted as a
    kernel bug by syzbot.
    
    Signed-off-by: Alexandre Ghiti <alex@ghiti.fr>
    Reviewed-by: Atish Patra <atish.patra@wdc.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0db8d192ee57ec206bd0410db7634c5cca38a45c
Author: Victor Lu <victorchengchi.lu@amd.com>
Date:   Fri Jan 15 11:02:48 2021 -0500

    drm/amd/display: Decrement refcount of dc_sink before reassignment
    
    [ Upstream commit 8e92bb0fa75bca9a57e4aba2e36f67d8016a3053 ]
    
    [why]
    An old dc_sink state is causing a memory leak because it is missing a
    dc_sink_release before a new dc_sink is assigned back to
    aconnector->dc_sink.
    
    [how]
    Decrement the dc_sink refcount before reassigning it to a new dc_sink.
    
    Signed-off-by: Victor Lu <victorchengchi.lu@amd.com>
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c8f63266255f8713541dce981c8279c2d738fa9
Author: Victor Lu <victorchengchi.lu@amd.com>
Date:   Thu Jan 14 16:27:07 2021 -0500

    drm/amd/display: Free atomic state after drm_atomic_commit
    
    [ Upstream commit 2abaa323d744011982b20b8f3886184d56d23946 ]
    
    [why]
    drm_atomic_commit was changed so that the caller must free their
    drm_atomic_state reference on successes.
    
    [how]
    Add drm_atomic_commit_put after drm_atomic_commit call in
    dm_force_atomic_commit.
    
    Signed-off-by: Victor Lu <victorchengchi.lu@amd.com>
    Reviewed-by: Roman Li <Roman.Li@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f35da70b516f50e35dfa1d7d06f9e70f7d8cee83
Author: Victor Lu <victorchengchi.lu@amd.com>
Date:   Thu Jan 14 22:24:14 2021 -0500

    drm/amd/display: Fix dc_sink kref count in emulated_link_detect
    
    [ Upstream commit 3ddc818d9bb877c64f5c649beab97af86c403702 ]
    
    [why]
    prev_sink is not used anywhere else in the function and the reference to
    it from dc_link is replaced with a new dc_sink.
    
    [how]
    Change dc_sink_retain(prev_sink) to dc_sink_release(prev_sink).
    
    Signed-off-by: Victor Lu <victorchengchi.lu@amd.com>
    Reviewed-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76979956a8afdca5cb85d39608d20b7fa6b7608a
Author: Sung Lee <sung.lee@amd.com>
Date:   Fri Jan 15 13:53:15 2021 -0500

    drm/amd/display: Add more Clock Sources to DCN2.1
    
    [ Upstream commit 1622711beebe887e4f0f8237fea1f09bb48e9a51 ]
    
    [WHY]
    When enabling HDMI on ComboPHY, there are not
    enough clock sources to complete display detection.
    
    [HOW]
    Initialize more clock sources.
    
    Signed-off-by: Sung Lee <sung.lee@amd.com>
    Reviewed-by: Tony Cheng <Tony.Cheng@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4516a0a2c087f437f2b00bac27d97c29a2756a46
Author: Claus Stovgaard <claus.stovgaard@gmail.com>
Date:   Mon Feb 1 22:08:22 2021 +0100

    nvme-pci: ignore the subsysem NQN on Phison E16
    
    [ Upstream commit c9e95c39280530200cdd0bbd2670e6334a81970b ]
    
    Tested both with Corsairs firmware 11.3 and 13.0 for the Corsairs MP600
    and both have the issue as reported by the kernel.
    
    nvme nvme0: missing or invalid SUBNQN field.
    
    Signed-off-by: Claus Stovgaard <claus.stovgaard@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 335a285aa0f0e1df6ac5c498c5dfc21b0880ea60
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Sat Dec 19 12:16:08 2020 +0200

    ovl: skip getxattr of security labels
    
    [ Upstream commit 03fedf93593c82538b18476d8c4f0e8f8435ea70 ]
    
    When inode has no listxattr op of its own (e.g. squashfs) vfs_listxattr
    calls the LSM inode_listsecurity hooks to list the xattrs that LSMs will
    intercept in inode_getxattr hooks.
    
    When selinux LSM is installed but not initialized, it will list the
    security.selinux xattr in inode_listsecurity, but will not intercept it
    in inode_getxattr.  This results in -ENODATA for a getxattr call for an
    xattr returned by listxattr.
    
    This situation was manifested as overlayfs failure to copy up lower
    files from squashfs when selinux is built-in but not initialized,
    because ovl_copy_xattr() iterates the lower inode xattrs by
    vfs_listxattr() and vfs_getxattr().
    
    ovl_copy_xattr() skips copy up of security labels that are indentified by
    inode_copy_up_xattr LSM hooks, but it does that after vfs_getxattr().
    Since we are not going to copy them, skip vfs_getxattr() of the security
    labels.
    
    Reported-by: Michael Labriola <michael.d.labriola@gmail.com>
    Tested-by: Michael Labriola <michael.d.labriola@gmail.com>
    Link: https://lore.kernel.org/linux-unionfs/2nv9d47zt7.fsf@aldarion.sourceruckus.org/
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43e3cf46afb132f85df65dcfa1d08336055712b7
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jan 28 10:22:48 2021 +0100

    cap: fix conversions on getxattr
    
    [ Upstream commit f2b00be488730522d0fb7a8a5de663febdcefe0a ]
    
    If a capability is stored on disk in v2 format cap_inode_getsecurity() will
    currently return in v2 format unconditionally.
    
    This is wrong: v2 cap should be equivalent to a v3 cap with zero rootid,
    and so the same conversions performed on it.
    
    If the rootid cannot be mapped, v3 is returned unconverted.  Fix this so
    that both v2 and v3 return -EOVERFLOW if the rootid (or the owner of the fs
    user namespace in case of v2) cannot be mapped into the current user
    namespace.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df094aa0aab02bfd1baa130ee06114efff669807
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jan 28 10:22:48 2021 +0100

    ovl: perform vfs_getxattr() with mounter creds
    
    [ Upstream commit 554677b97257b0b69378bd74e521edb7e94769ff ]
    
    The vfs_getxattr() in ovl_xattr_set() is used to check whether an xattr
    exist on a lower layer file that is to be removed.  If the xattr does not
    exist, then no need to copy up the file.
    
    This call of vfs_getxattr() wasn't wrapped in credential override, and this
    is probably okay.  But for consitency wrap this instance as well.
    
    Reported-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc512646b2e73b38ae8fdb6103524f3f73e4ca1a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jan 20 13:49:41 2021 +0100

    platform/x86: hp-wmi: Disable tablet-mode reporting by default
    
    [ Upstream commit 67fbe02a5cebc3c653610f12e3c0424e58450153 ]
    
    Recently userspace has started making more use of SW_TABLET_MODE
    (when an input-dev reports this).
    
    Specifically recent GNOME3 versions will:
    
    1.  When SW_TABLET_MODE is reported and is reporting 0:
    1.1 Disable accelerometer-based screen auto-rotation
    1.2 Disable automatically showing the on-screen keyboard when a
        text-input field is focussed
    
    2.  When SW_TABLET_MODE is reported and is reporting 1:
    2.1 Ignore input-events from the builtin keyboard and touchpad
        (this is for 360° hinges style 2-in-1s where the keyboard and
         touchpads are accessible on the back of the tablet when folded
         into tablet-mode)
    
    This means that claiming to support SW_TABLET_MODE when it does not
    actually work / reports correct values has bad side-effects.
    
    The check in the hp-wmi code which is used to decide if the input-dev
    should claim SW_TABLET_MODE support, only checks if the
    HPWMI_HARDWARE_QUERY is supported. It does *not* check if the hardware
    actually is capable of reporting SW_TABLET_MODE.
    
    This leads to the hp-wmi input-dev claiming SW_TABLET_MODE support,
    while in reality it will always report 0 as SW_TABLET_MODE value.
    This has been seen on a "HP ENVY x360 Convertible 15-cp0xxx" and
    this likely is the case on a whole lot of other HP models.
    
    This problem causes both auto-rotation and on-screen keyboard
    support to not work on affected x360 models.
    
    There is no easy fix for this, but since userspace expects
    SW_TABLET_MODE reporting to be reliable when advertised it is
    better to not claim/report SW_TABLET_MODE support at all, then
    to claim to support it while it does not work.
    
    To avoid the mentioned problems, add a new enable_tablet_mode_sw
    module-parameter which defaults to false.
    
    Note I've made this an int using the standard -1=auto, 0=off, 1=on
    triplett, with the hope that in the future we can come up with a
    better way to detect SW_TABLET_MODE support. ATM the default
    auto option just does the same as off.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1918255
    Cc: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Mark Gross <mgross@linux.intel.com>
    Link: https://lore.kernel.org/r/20210120124941.73409-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bb22cd4dae4665f18ebd6df4e652cb03957bbdc
Author: Tony Lindgren <tony@atomide.com>
Date:   Sun Jan 10 21:09:11 2021 +0200

    ARM: OMAP2+: Fix suspcious RCU usage splats for omap_enter_idle_coupled
    
    [ Upstream commit 06862d789ddde8a99c1e579e934ca17c15a84755 ]
    
    We get suspcious RCU usage splats with cpuidle in several places in
    omap_enter_idle_coupled() with the kernel debug options enabled:
    
    RCU used illegally from extended quiescent state!
    ...
    (_raw_spin_lock_irqsave)
    (omap_enter_idle_coupled+0x17c/0x2d8)
    (omap_enter_idle_coupled)
    (cpuidle_enter_state)
    (cpuidle_enter_state_coupled)
    (cpuidle_enter)
    
    Let's use RCU_NONIDLE to suppress these splats. Things got changed around
    with commit 1098582a0f6c ("sched,idle,rcu: Push rcu_idle deeper into the
    idle path") that started triggering these warnings.
    
    For the tick_broadcast related calls, ideally we'd just switch over to
    using CPUIDLE_FLAG_TIMER_STOP for omap_enter_idle_coupled() to have the
    generic cpuidle code handle the tick_broadcast related calls for us and
    then just drop the tick_broadcast calls here.
    
    But we're currently missing the call in the common cpuidle code for
    tick_broadcast_enable() that CPU1 hotplug needs as described in earlier
    commit 50d6b3cf9403 ("ARM: OMAP2+: fix lack of timer interrupts on CPU1
    after hotplug").
    
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: Paul E. McKenney <paulmck@kernel.org>
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Acked-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cb208ba0fd1c3afb8484e42d2aa79bdd844592a
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Mon Dec 21 16:11:03 2020 -0800

    arm64: dts: qcom: sdm845: Reserve LPASS clocks in gcc
    
    [ Upstream commit 93f2a11580a9732c1d90f9e01a7e9facc825658f ]
    
    The GCC_LPASS_Q6_AXI_CLK and GCC_LPASS_SWAY_CLK clocks may not be
    touched on a typical UEFI based SDM845 device, but when the kernel is
    built with CONFIG_SDM_LPASSCC_845 this happens, unless they are marked
    as protected-clocks in the DT.
    
    This was done for the MTP and the Pocophone, but not for DB845c and the
    Lenovo Yoga C630 - causing these to fail to boot if the LPASS clock
    controller is enabled (which it typically isn't).
    
    Tested-by: Vinod Koul <vkoul@kernel.org> #on db845c
    Reviewed-by: Vinod Koul <vkoul@kernel.org>
    Link: https://lore.kernel.org/r/20201222001103.3112306-1-bjorn.andersson@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92c40ed0abcb75f9323d1cd512cf8599674893b6
Author: Marc Zyngier <maz@kernel.org>
Date:   Sat Aug 15 13:51:12 2020 +0100

    arm64: dts: rockchip: Fix PCIe DT properties on rk3399
    
    [ Upstream commit 43f20b1c6140896916f4e91aacc166830a7ba849 ]
    
    It recently became apparent that the lack of a 'device_type = "pci"'
    in the PCIe root complex node for rk3399 is a violation of the PCI
    binding, as documented in IEEE Std 1275-1994. Changes to the kernel's
    parsing of the DT made such violation fatal, as drivers cannot
    probe the controller anymore.
    
    Add the missing property makes the PCIe node compliant. While we
    are at it, drop the pointless linux,pci-domain property, which only
    makes sense when there are multiple host bridges.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200815125112.462652-3-maz@kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2407794f2298ee83b38be3aae71867d6d90e87ae
Author: Odin Ugedal <odin@uged.al>
Date:   Sat Jan 16 18:36:33 2021 +0100

    cgroup: fix psi monitor for root cgroup
    
    commit 385aac1519417b89cb91b77c22e4ca21db563cd0 upstream.
    
    Fix NULL pointer dereference when adding new psi monitor to the root
    cgroup. PSI files for root cgroup was introduced in df5ba5be742 by using
    system wide psi struct when reading, but file write/monitor was not
    properly fixed. Since the PSI config for the root cgroup isn't
    initialized, the current implementation tries to lock a NULL ptr,
    resulting in a crash.
    
    Can be triggered by running this as root:
    $ tee /sys/fs/cgroup/cpu.pressure <<< "some 10000 1000000"
    
    Signed-off-by: Odin Ugedal <odin@uged.al>
    Reviewed-by: Suren Baghdasaryan <surenb@google.com>
    Acked-by: Dan Schatzberg <dschatzberg@fb.com>
    Fixes: df5ba5be7425 ("kernel/sched/psi.c: expose pressure metrics on root cgroup")
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: stable@vger.kernel.org # 5.2+
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18d691d837b340c941ad778bc8dfa77446e48bb4
Author: Julien Grall <jgrall@amazon.com>
Date:   Wed Feb 10 17:06:54 2021 +0000

    arm/xen: Don't probe xenbus as part of an early initcall
    
    commit c4295ab0b485b8bc50d2264bcae2acd06f25caaf upstream.
    
    After Commit 3499ba8198cad ("xen: Fix event channel callback via
    INTX/GSI"), xenbus_probe() will be called too early on Arm. This will
    recent to a guest hang during boot.
    
    If the hang wasn't there, we would have ended up to call
    xenbus_probe() twice (the second time is in xenbus_probe_initcall()).
    
    We don't need to initialize xenbus_probe() early for Arm guest.
    Therefore, the call in xen_guest_init() is now removed.
    
    After this change, there is no more external caller for xenbus_probe().
    So the function is turned to a static one. Interestingly there were two
    prototypes for it.
    
    Cc: stable@vger.kernel.org
    Fixes: 3499ba8198cad ("xen: Fix event channel callback via INTX/GSI")
    Reported-by: Ian Jackson <iwj@xenproject.org>
    Signed-off-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Link: https://lore.kernel.org/r/20210210170654.5377-1-julien@xen.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0997a86f5c0085e183ddee5fb72091d584d3d16
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Feb 10 11:53:22 2021 -0500

    tracing: Check length before giving out the filter buffer
    
    commit b220c049d5196dd94d992dd2dc8cba1a5e6123bf upstream.
    
    When filters are used by trace events, a page is allocated on each CPU and
    used to copy the trace event fields to this page before writing to the ring
    buffer. The reason to use the filter and not write directly into the ring
    buffer is because a filter may discard the event and there's more overhead
    on discarding from the ring buffer than the extra copy.
    
    The problem here is that there is no check against the size being allocated
    when using this page. If an event asks for more than a page size while being
    filtered, it will get only a page, leading to the caller writing more that
    what was allocated.
    
    Check the length of the request, and if it is more than PAGE_SIZE minus the
    header default back to allocating from the ring buffer directly. The ring
    buffer may reject the event if its too big anyway, but it wont overflow.
    
    Link: https://lore.kernel.org/ath10k/1612839593-2308-1-git-send-email-wgong@codeaurora.org/
    
    Cc: stable@vger.kernel.org
    Fixes: 0fc1b09ff1ff4 ("tracing: Use temp buffer when filtering events")
    Reported-by: Wen Gong <wgong@codeaurora.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74c7bafdd303c1b6efc0d53800654b3b89a2d34c
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Feb 5 15:40:04 2021 -0500

    tracing: Do not count ftrace events in top level enable output
    
    commit 256cfdd6fdf70c6fcf0f7c8ddb0ebd73ce8f3bc9 upstream.
    
    The file /sys/kernel/tracing/events/enable is used to enable all events by
    echoing in "1", or disabling all events when echoing in "0". To know if all
    events are enabled, disabled, or some are enabled but not all of them,
    cating the file should show either "1" (all enabled), "0" (all disabled), or
    "X" (some enabled but not all of them). This works the same as the "enable"
    files in the individule system directories (like tracing/events/sched/enable).
    
    But when all events are enabled, the top level "enable" file shows "X". The
    reason is that its checking the "ftrace" events, which are special events
    that only exist for their format files. These include the format for the
    function tracer events, that are enabled when the function tracer is
    enabled, but not by the "enable" file. The check includes these events,
    which will always be disabled, and even though all true events are enabled,
    the top level "enable" file will show "X" instead of "1".
    
    To fix this, have the check test the event's flags to see if it has the
    "IGNORE_ENABLE" flag set, and if so, not test it.
    
    Cc: stable@vger.kernel.org
    Fixes: 553552ce1796c ("tracing: Combine event filter_active and enable into single flags field")
    Reported-by: "Yordan Karadzhov (VMware)" <y.karadz@gmail.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4851d7b340e90953cd778681d7b7f3d650d6a882
Author: Nikita Shubin <nikita.shubin@maquefel.me>
Date:   Tue Feb 9 16:31:05 2021 +0300

    gpio: ep93xx: Fix single irqchip with multi gpiochips
    
    commit 28dc10eb77a2db7681b08e3b109764bbe469e347 upstream.
    
    Fixes the following warnings which results in interrupts disabled on
    port B/F:
    
    gpio gpiochip1: (B): detected irqchip that is shared with multiple gpiochips: please fix the driver.
    gpio gpiochip5: (F): detected irqchip that is shared with multiple gpiochips: please fix the driver.
    
    - added separate irqchip for each interrupt capable gpiochip
    - provided unique names for each irqchip
    
    Fixes: d2b091961510 ("gpio: ep93xx: Pass irqchip when adding gpiochip")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Nikita Shubin <nikita.shubin@maquefel.me>
    Tested-by: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c5abe0f8e9c88339d138d7b6dcd7bdf1bf4352e
Author: Nikita Shubin <nikita.shubin@maquefel.me>
Date:   Tue Feb 9 16:31:04 2021 +0300

    gpio: ep93xx: fix BUG_ON port F usage
    
    commit 8b81a7ab8055d01d827ef66374b126eeac3bd108 upstream.
    
    Two index spaces and ep93xx_gpio_port are confusing.
    
    Instead add a separate struct to store necessary data and remove
    ep93xx_gpio_port.
    
    - add struct to store IRQ related data for each IRQ capable chip
    - replace offset array with defined offsets
    - add IRQ registers offset for each IRQ capable chip into
      ep93xx_gpio_banks
    
    ------------[ cut here ]------------
    kernel BUG at drivers/gpio/gpio-ep93xx.c:64!
    ---[ end trace 3f6544e133e9f5ae ]---
    
    Fixes: fd935fc421e74 ("gpio: ep93xx: Do not pingpong irq numbers")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Tested-by: Alexander Sverdlin <alexander.sverdlin@gmail.com>
    Signed-off-by: Nikita Shubin <nikita.shubin@maquefel.me>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
