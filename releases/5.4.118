commit 16022114de9869743d6304290815cdb8a8c7deaa
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue May 11 14:04:18 2021 +0200

    Linux 5.4.118
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Link: https://lore.kernel.org/r/20210510101950.200777181@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a992a283c0b77d0a7c2c348add0e6a21fb1dab67
Author: Benjamin Block <bblock@linux.ibm.com>
Date:   Thu Apr 29 23:37:00 2021 +0200

    dm rq: fix double free of blk_mq_tag_set in dev remove after table load fails
    
    commit 8e947c8f4a5620df77e43c9c75310dc510250166 upstream.
    
    When loading a device-mapper table for a request-based mapped device,
    and the allocation/initialization of the blk_mq_tag_set for the device
    fails, a following device remove will cause a double free.
    
    E.g. (dmesg):
      device-mapper: core: Cannot initialize queue for request-based dm-mq mapped device
      device-mapper: ioctl: unable to set up device queue for new table.
      Unable to handle kernel pointer dereference in virtual kernel address space
      Failing address: 0305e098835de000 TEID: 0305e098835de803
      Fault in home space mode while using kernel ASCE.
      AS:000000025efe0007 R3:0000000000000024
      Oops: 0038 ilc:3 [#1] SMP
      Modules linked in: ... lots of modules ...
      Supported: Yes, External
      CPU: 0 PID: 7348 Comm: multipathd Kdump: loaded Tainted: G        W      X    5.3.18-53-default #1 SLE15-SP3
      Hardware name: IBM 8561 T01 7I2 (LPAR)
      Krnl PSW : 0704e00180000000 000000025e368eca (kfree+0x42/0x330)
                 R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3
      Krnl GPRS: 000000000000004a 000000025efe5230 c1773200d779968d 0000000000000000
                 000000025e520270 000000025e8d1b40 0000000000000003 00000007aae10000
                 000000025e5202a2 0000000000000001 c1773200d779968d 0305e098835de640
                 00000007a8170000 000003ff80138650 000000025e5202a2 000003e00396faa8
      Krnl Code: 000000025e368eb8: c4180041e100       lgrl    %r1,25eba50b8
                 000000025e368ebe: ecba06b93a55       risbg   %r11,%r10,6,185,58
                #000000025e368ec4: e3b010000008       ag      %r11,0(%r1)
                >000000025e368eca: e310b0080004       lg      %r1,8(%r11)
                 000000025e368ed0: a7110001           tmll    %r1,1
                 000000025e368ed4: a7740129           brc     7,25e369126
                 000000025e368ed8: e320b0080004       lg      %r2,8(%r11)
                 000000025e368ede: b904001b           lgr     %r1,%r11
      Call Trace:
       [<000000025e368eca>] kfree+0x42/0x330
       [<000000025e5202a2>] blk_mq_free_tag_set+0x72/0xb8
       [<000003ff801316a8>] dm_mq_cleanup_mapped_device+0x38/0x50 [dm_mod]
       [<000003ff80120082>] free_dev+0x52/0xd0 [dm_mod]
       [<000003ff801233f0>] __dm_destroy+0x150/0x1d0 [dm_mod]
       [<000003ff8012bb9a>] dev_remove+0x162/0x1c0 [dm_mod]
       [<000003ff8012a988>] ctl_ioctl+0x198/0x478 [dm_mod]
       [<000003ff8012ac8a>] dm_ctl_ioctl+0x22/0x38 [dm_mod]
       [<000000025e3b11ee>] ksys_ioctl+0xbe/0xe0
       [<000000025e3b127a>] __s390x_sys_ioctl+0x2a/0x40
       [<000000025e8c15ac>] system_call+0xd8/0x2c8
      Last Breaking-Event-Address:
       [<000000025e52029c>] blk_mq_free_tag_set+0x6c/0xb8
      Kernel panic - not syncing: Fatal exception: panic_on_oops
    
    When allocation/initialization of the blk_mq_tag_set fails in
    dm_mq_init_request_queue(), it is uninitialized/freed, but the pointer
    is not reset to NULL; so when dev_remove() later gets into
    dm_mq_cleanup_mapped_device() it sees the pointer and tries to
    uninitialize and free it again.
    
    Fix this by setting the pointer to NULL in dm_mq_init_request_queue()
    error-handling. Also set it to NULL in dm_mq_cleanup_mapped_device().
    
    Cc: <stable@vger.kernel.org> # 4.6+
    Fixes: 1c357a1e86a4 ("dm: allocate blk_mq_tag_set rather than embed in mapped_device")
    Signed-off-by: Benjamin Block <bblock@linux.ibm.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 569bae00ebbecdeeb269c24f1364ed1cbba078a4
Author: Tian Tao <tiantao6@hisilicon.com>
Date:   Wed Apr 14 09:43:44 2021 +0800

    dm integrity: fix missing goto in bitmap_flush_interval error handling
    
    commit 17e9e134a8efabbbf689a0904eee92bb5a868172 upstream.
    
    Fixes: 468dfca38b1a ("dm integrity: add a bitmap mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: Tian Tao <tiantao6@hisilicon.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff8fd1e3b58ab60f38855b99b6fd4f40e5f687d3
Author: Joe Thornber <ejt@redhat.com>
Date:   Tue Apr 13 09:11:53 2021 +0100

    dm space map common: fix division bug in sm_ll_find_free_block()
    
    commit 5208692e80a1f3c8ce2063a22b675dd5589d1d80 upstream.
    
    This division bug meant the search for free metadata space could skip
    the final allocation bitmap's worth of entries. Fix affects DM thinp,
    cache and era targets.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Tested-by: Ming-Hung Tsai <mtsai@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fcaa44105aa8cc08da6a704fdb7bd4698877ca8
Author: Joe Thornber <ejt@redhat.com>
Date:   Mon Mar 29 16:34:57 2021 +0100

    dm persistent data: packed struct should have an aligned() attribute too
    
    commit a88b2358f1da2c9f9fcc432f2e0a79617fea397c upstream.
    
    Otherwise most non-x86 architectures (e.g. riscv, arm) will resort to
    byte-by-byte access.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c64da3294a7d59a4bf6874c664c13be892f15f44
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Apr 30 12:17:58 2021 -0400

    tracing: Restructure trace_clock_global() to never block
    
    commit aafe104aa9096827a429bc1358f8260ee565b7cc upstream.
    
    It was reported that a fix to the ring buffer recursion detection would
    cause a hung machine when performing suspend / resume testing. The
    following backtrace was extracted from debugging that case:
    
    Call Trace:
     trace_clock_global+0x91/0xa0
     __rb_reserve_next+0x237/0x460
     ring_buffer_lock_reserve+0x12a/0x3f0
     trace_buffer_lock_reserve+0x10/0x50
     __trace_graph_return+0x1f/0x80
     trace_graph_return+0xb7/0xf0
     ? trace_clock_global+0x91/0xa0
     ftrace_return_to_handler+0x8b/0xf0
     ? pv_hash+0xa0/0xa0
     return_to_handler+0x15/0x30
     ? ftrace_graph_caller+0xa0/0xa0
     ? trace_clock_global+0x91/0xa0
     ? __rb_reserve_next+0x237/0x460
     ? ring_buffer_lock_reserve+0x12a/0x3f0
     ? trace_event_buffer_lock_reserve+0x3c/0x120
     ? trace_event_buffer_reserve+0x6b/0xc0
     ? trace_event_raw_event_device_pm_callback_start+0x125/0x2d0
     ? dpm_run_callback+0x3b/0xc0
     ? pm_ops_is_empty+0x50/0x50
     ? platform_get_irq_byname_optional+0x90/0x90
     ? trace_device_pm_callback_start+0x82/0xd0
     ? dpm_run_callback+0x49/0xc0
    
    With the following RIP:
    
    RIP: 0010:native_queued_spin_lock_slowpath+0x69/0x200
    
    Since the fix to the recursion detection would allow a single recursion to
    happen while tracing, this lead to the trace_clock_global() taking a spin
    lock and then trying to take it again:
    
    ring_buffer_lock_reserve() {
      trace_clock_global() {
        arch_spin_lock() {
          queued_spin_lock_slowpath() {
            /* lock taken */
            (something else gets traced by function graph tracer)
              ring_buffer_lock_reserve() {
                trace_clock_global() {
                  arch_spin_lock() {
                    queued_spin_lock_slowpath() {
                    /* DEAD LOCK! */
    
    Tracing should *never* block, as it can lead to strange lockups like the
    above.
    
    Restructure the trace_clock_global() code to instead of simply taking a
    lock to update the recorded "prev_time" simply use it, as two events
    happening on two different CPUs that calls this at the same time, really
    doesn't matter which one goes first. Use a trylock to grab the lock for
    updating the prev_time, and if it fails, simply try again the next time.
    If it failed to be taken, that means something else is already updating
    it.
    
    Link: https://lkml.kernel.org/r/20210430121758.650b6e8a@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Tested-by: Konstantin Kharlamov <hi-angel@yandex.ru>
    Tested-by: Todd Brandt <todd.e.brandt@linux.intel.com>
    Fixes: b02414c8f045 ("ring-buffer: Fix recursion protection transitions between interrupt context") # started showing the problem
    Fixes: 14131f2f98ac3 ("tracing: implement trace_clock_*() APIs") # where the bug happened
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=212761
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0834094c9a08048d07904a649f70781d58b30ff9
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Apr 27 11:32:07 2021 -0400

    tracing: Map all PIDs to command lines
    
    commit 785e3c0a3a870e72dc530856136ab4c8dd207128 upstream.
    
    The default max PID is set by PID_MAX_DEFAULT, and the tracing
    infrastructure uses this number to map PIDs to the comm names of the
    tasks, such output of the trace can show names from the recorded PIDs in
    the ring buffer. This mapping is also exported to user space via the
    "saved_cmdlines" file in the tracefs directory.
    
    But currently the mapping expects the PIDs to be less than
    PID_MAX_DEFAULT, which is the default maximum and not the real maximum.
    Recently, systemd will increases the maximum value of a PID on the system,
    and when tasks are traced that have a PID higher than PID_MAX_DEFAULT, its
    comm is not recorded. This leads to the entire trace to have "<...>" as
    the comm name, which is pretty useless.
    
    Instead, keep the array mapping the size of PID_MAX_DEFAULT, but instead
    of just mapping the index to the comm, map a mask of the PID
    (PID_MAX_DEFAULT - 1) to the comm, and find the full PID from the
    map_cmdline_to_pid array (that already exists).
    
    This bug goes back to the beginning of ftrace, but hasn't been an issue
    until user space started increasing the maximum value of PIDs.
    
    Link: https://lkml.kernel.org/r/20210427113207.3c601884@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Fixes: bc0c38d139ec7 ("ftrace: latency tracer infrastructure")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8768085ba271f5d5ff6a2a5129c81d5f031a3b88
Author: Marek Vasut <marex@denx.de>
Date:   Sun Mar 28 00:59:32 2021 +0100

    rsi: Use resume_noirq for SDIO
    
    commit c434e5e48dc4e626364491455f97e2db0aa137b1 upstream.
    
    The rsi_resume() does access the bus to enable interrupts on the RSI
    SDIO WiFi card, however when calling sdio_claim_host() in the resume
    path, it is possible the bus is already claimed and sdio_claim_host()
    spins indefinitelly. Enable the SDIO card interrupts in resume_noirq
    instead to prevent anything else from claiming the SDIO bus first.
    
    Fixes: 20db07332736 ("rsi: sdio suspend and resume support")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Amitkumar Karwar <amit.karwar@redpinesignals.com>
    Cc: Angus Ainslie <angus@akkea.ca>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: Karun Eagalapati <karun256@gmail.com>
    Cc: Martin Kepplinger <martink@posteo.de>
    Cc: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Cc: Siva Rebbagondla <siva8118@gmail.com>
    Cc: netdev@vger.kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210327235932.175896-1-marex@denx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55aa314a1a6cd96b3a048093cd37d32c10ca0928
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Mar 28 00:44:43 2021 +0300

    tty: fix memory leak in vc_deallocate
    
    commit 211b4d42b70f1c1660feaa968dac0efc2a96ac4d upstream.
    
    syzbot reported memory leak in tty/vt.
    The problem was in VT_DISALLOCATE ioctl cmd.
    After allocating unimap with PIO_UNIMAP it wasn't
    freed via VT_DISALLOCATE, but vc_cons[currcons].d was
    zeroed.
    
    Reported-by: syzbot+bcc922b19ccc64240b42@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210327214443.21548-1-paskripkin@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 943131fda33bfe0dbe9e6bf96b00468deda7da10
Author: Artur Petrosyan <Arthur.Petrosyan@synopsys.com>
Date:   Thu Apr 8 13:45:49 2021 +0400

    usb: dwc2: Fix session request interrupt handler
    
    commit 42b32b164acecd850edef010915a02418345a033 upstream.
    
    According to programming guide in host mode, port
    power must be turned on in session request
    interrupt handlers.
    
    Fixes: 21795c826a45 ("usb: dwc2: exit hibernation on session request")
    Cc: <stable@vger.kernel.org>
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Artur Petrosyan <Arthur.Petrosyan@synopsys.com>
    Link: https://lore.kernel.org/r/20210408094550.75484A0094@mailhost.synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bd06fc6b02ca6277736e7c1a27a9ece2b3c9e33
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Mon Apr 19 19:11:12 2021 -0700

    usb: dwc3: gadget: Fix START_TRANSFER link state check
    
    commit c560e76319a94a3b9285bc426c609903408e4826 upstream.
    
    The START_TRANSFER command needs to be executed while in ON/U0 link
    state (with an exception during register initialization). Don't use
    dwc->link_state to check this since the driver only tracks the link
    state when the link state change interrupt is enabled. Check the link
    state from DSTS register instead.
    
    Note that often the host already brings the device out of low power
    before it sends/requests the next transfer. So, the user won't see any
    issue when the device starts transfer then. This issue is more
    noticeable in cases when the device delays starting transfer, which can
    happen during delayed control status after the host put the device in
    low power.
    
    Fixes: 799e9dc82968 ("usb: dwc3: gadget: conditionally disable Link State change events")
    Cc: <stable@vger.kernel.org>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/bcefaa9ecbc3e1936858c0baa14de6612960e909.1618884221.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0790fdbf37ee94e1b8f4c0f4c265e1d949244b61
Author: Dean Anderson <dean@sensoray.com>
Date:   Wed Mar 17 15:41:09 2021 -0700

    usb: gadget/function/f_fs string table fix for multiple languages
    
    commit 55b74ce7d2ce0b0058f3e08cab185a0afacfe39e upstream.
    
    Fixes bug with the handling of more than one language in
    the string table in f_fs.c.
    str_count was not reset for subsequent language codes.
    str_count-- "rolls under" and processes u32 max strings on
    the processing of the second language entry.
    The existing bug can be reproduced by adding a second language table
    to the structure "strings" in tools/usb/ffs-test.c.
    
    Signed-off-by: Dean Anderson <dean@sensoray.com>
    Link: https://lore.kernel.org/r/20210317224109.21534-1-dean@sensoray.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b8b63be230fd7afc74475993937243df269fb85
Author: Hemant Kumar <hemantk@codeaurora.org>
Date:   Wed Apr 21 12:47:32 2021 -0700

    usb: gadget: Fix double free of device descriptor pointers
    
    commit 43c4cab006f55b6ca549dd1214e22f5965a8675f upstream.
    
    Upon driver unbind usb_free_all_descriptors() function frees all
    speed descriptor pointers without setting them to NULL. In case
    gadget speed changes (i.e from super speed plus to super speed)
    after driver unbind only upto super speed descriptor pointers get
    populated. Super speed plus desc still holds the stale (already
    freed) pointer. Fix this issue by setting all descriptor pointers
    to NULL after freeing them in usb_free_all_descriptors().
    
    Fixes: f5c61225cf29 ("usb: gadget: Update function for SuperSpeedPlus")
    cc: stable@vger.kernel.org
    Reviewed-by: Peter Chen <peter.chen@kernel.org>
    Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
    Signed-off-by: Wesley Cheng <wcheng@codeaurora.org>
    Link: https://lore.kernel.org/r/1619034452-17334-1-git-send-email-wcheng@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efa99087ea697edb9e510503d4d48adda452d014
Author: Anirudh Rayabharam <mail@anirudhrb.com>
Date:   Mon Apr 19 09:07:08 2021 +0530

    usb: gadget: dummy_hcd: fix gpf in gadget_setup
    
    commit 4a5d797a9f9c4f18585544237216d7812686a71f upstream.
    
    Fix a general protection fault reported by syzbot due to a race between
    gadget_setup() and gadget_unbind() in raw_gadget.
    
    The gadget core is supposed to guarantee that there won't be any more
    callbacks to the gadget driver once the driver's unbind routine is
    called. That guarantee is enforced in usb_gadget_remove_driver as
    follows:
    
            usb_gadget_disconnect(udc->gadget);
            if (udc->gadget->irq)
                    synchronize_irq(udc->gadget->irq);
            udc->driver->unbind(udc->gadget);
            usb_gadget_udc_stop(udc);
    
    usb_gadget_disconnect turns off the pullup resistor, telling the host
    that the gadget is no longer connected and preventing the transmission
    of any more USB packets. Any packets that have already been received
    are sure to processed by the UDC driver's interrupt handler by the time
    synchronize_irq returns.
    
    But this doesn't work with dummy_hcd, because dummy_hcd doesn't use
    interrupts; it uses a timer instead. It does have code to emulate the
    effect of synchronize_irq, but that code doesn't get invoked at the
    right time -- it currently runs in usb_gadget_udc_stop, after the unbind
    callback instead of before. Indeed, there's no way for
    usb_gadget_remove_driver to invoke this code before the unbind callback.
    
    To fix this, move the synchronize_irq() emulation code to dummy_pullup
    so that it runs before unbind. Also, add a comment explaining why it is
    necessary to have it there.
    
    Reported-by: syzbot+eb4674092e6cc8d9e0bd@syzkaller.appspotmail.com
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Link: https://lore.kernel.org/r/20210419033713.3021-1-mail@anirudhrb.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe824c0e35adfbfc72a957bb2e4274ee67644f0
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Apr 9 10:41:35 2021 +0200

    media: staging/intel-ipu3: Fix race condition during set_fmt
    
    commit dccfe2548746ca9cca3a20401ece4cf255d1f171 upstream.
    
    Do not modify imgu_pipe->nodes[inode].vdev_fmt.fmt.pix_mp, until the
    format has been correctly validated.
    
    Otherwise, even if we use a backup variable, there is a period of time
    where imgu_pipe->nodes[inode].vdev_fmt.fmt.pix_mp might have an invalid
    value that can be used by other functions.
    
    Cc: stable@vger.kernel.org
    Fixes: ad91849996f9 ("media: staging/intel-ipu3: Fix set_fmt error handling")
    Reviewed-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a03fb1e8a110658215a4cefc3e2ad53279e496a6
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Mar 10 01:16:46 2021 +0100

    media: staging/intel-ipu3: Fix set_fmt error handling
    
    commit ad91849996f9dd79741a961fd03585a683b08356 upstream.
    
    If there in an error during a set_fmt, do not overwrite the previous
    sizes with the invalid config.
    
    Without this patch, v4l2-compliance ends up allocating 4GiB of RAM and
    causing the following OOPs
    
    [   38.662975] ipu3-imgu 0000:00:05.0: swiotlb buffer is full (sz: 4096 bytes)
    [   38.662980] DMA: Out of SW-IOMMU space for 4096 bytes at device 0000:00:05.0
    [   38.663010] general protection fault: 0000 [#1] PREEMPT SMP
    
    Cc: stable@vger.kernel.org
    Fixes: 6d5f26f2e045 ("media: staging/intel-ipu3-v4l: reduce kernel stack usage")
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff792ae52005c85a2d829c153e08d99a356e007d
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Mon Mar 15 13:34:05 2021 +0100

    media: staging/intel-ipu3: Fix memory leak in imu_fmt
    
    commit 3630901933afba1d16c462b04d569b7576339223 upstream.
    
    We are losing the reference to an allocated memory if try. Change the
    order of the check to avoid that.
    
    Cc: stable@vger.kernel.org
    Fixes: 6d5f26f2e045 ("media: staging/intel-ipu3-v4l: reduce kernel stack usage")
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae37aee56cadd987d5fb9443b61aaf4821e668e2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 1 09:32:46 2021 +0100

    media: dvb-usb: Fix memory leak at error in dvb_usb_device_init()
    
    commit 13a79f14ab285120bc4977e00a7c731e8143f548 upstream.
    
    dvb_usb_device_init() allocates a dvb_usb_device object, but it
    doesn't release the object by itself even at errors.  The object is
    released in the callee side (dvb_usb_init()) in some error cases via
    dvb_usb_exit() call, but it also missed the object free in other error
    paths.  And, the caller (it's only dvb_usb_device_init()) doesn't seem
    caring the resource management as well, hence those memories are
    leaked.
    
    This patch assures releasing the memory at the error path in
    dvb_usb_device_init().  Now dvb_usb_init() frees the resources it
    allocated but leaves the passed dvb_usb_device object intact.  In
    turn, the dvb_usb_device object is released in dvb_usb_device_init()
    instead.
    We could use dvb_usb_exit() function for releasing everything in the
    callee (as it was used for some error cases in the original code), but
    releasing the passed object in the callee is non-intuitive and
    error-prone.  So I took this approach (which is more standard in Linus
    kernel code) although it ended with a bit more open codes.
    
    Along with the change, the patch makes sure that USB intfdata is reset
    and don't return the bogus pointer to the caller of
    dvb_usb_device_init() at the error path, too.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5c27c2ae2f21e6b8596661c8b1aad6efb7c59ad
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 1 09:32:47 2021 +0100

    media: dvb-usb: Fix use-after-free access
    
    commit c49206786ee252f28b7d4d155d1fff96f145a05d upstream.
    
    dvb_usb_device_init() copies the properties to the own data, so that
    the callers can release the original properties later (as done in the
    commit 299c7007e936 ("media: dw2102: Fix memleak on sequence of
    probes")).  However, it also stores dev->desc pointer that is a
    reference to the original properties data.  Since dev->desc is
    referred later, it may result in use-after-free, in the worst case,
    leading to a kernel Oops as reported.
    
    This patch addresses the problem by allocating and copying the
    properties at first, then get the desc from the copied properties.
    
    Reported-and-tested-by: Stefan Seyfried <seife+kernel@b1-systems.com>
    BugLink: http://bugzilla.opensuse.org/show_bug.cgi?id=1181104
    
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9185b3b1c143b8da409c19ac5a785aa18d67a81b
Author: Peilin Ye <yepeilin.cs@gmail.com>
Date:   Fri Dec 11 09:30:39 2020 +0100

    media: dvbdev: Fix memory leak in dvb_media_device_free()
    
    commit bf9a40ae8d722f281a2721779595d6df1c33a0bf upstream.
    
    dvb_media_device_free() is leaking memory. Free `dvbdev->adapter->conn`
    before setting it to NULL, as documented in include/media/media-device.h:
    "The media_entity instance itself must be freed explicitly by the driver
    if required."
    
    Link: https://syzkaller.appspot.com/bug?id=9bbe4b842c98f0ed05c5eed77a226e9de33bf298
    
    Link: https://lore.kernel.org/linux-media/20201211083039.521617-1-yepeilin.cs@gmail.com
    Cc: stable@vger.kernel.org
    Fixes: 0230d60e4661 ("[media] dvbdev: Add RF connector if needed")
    Reported-by: syzbot+7f09440acc069a0d38ac@syzkaller.appspotmail.com
    Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92eb134265fae7cafeb9f7bedc86606a09904bad
Author: Fengnan Chang <changfengnan@vivo.com>
Date:   Fri Apr 2 18:16:31 2021 +0800

    ext4: fix error code in ext4_commit_super
    
    commit f88f1466e2a2e5ca17dfada436d3efa1b03a3972 upstream.
    
    We should set the error code when ext4_commit_super check argument failed.
    Found in code review.
    Fixes: c4be0c1dc4cdc ("filesystem freeze: add error handling of write_super_lockfs/unlockfs").
    
    Cc: stable@kernel.org
    Signed-off-by: Fengnan Chang <changfengnan@vivo.com>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Link: https://lore.kernel.org/r/20210402101631.561-1-changfengnan@vivo.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c599462ab9c3e8af4a982ec899b3ac47709a2570
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Wed Mar 31 11:31:38 2021 +0800

    ext4: do not set SB_ACTIVE in ext4_orphan_cleanup()
    
    commit 72ffb49a7b623c92a37657eda7cc46a06d3e8398 upstream.
    
    When CONFIG_QUOTA is enabled, if we failed to mount the filesystem due
    to some error happens behind ext4_orphan_cleanup(), it will end up
    triggering a after free issue of super_block. The problem is that
    ext4_orphan_cleanup() will set SB_ACTIVE flag if CONFIG_QUOTA is
    enabled, after we cleanup the truncated inodes, the last iput() will put
    them into the lru list, and these inodes' pages may probably dirty and
    will be write back by the writeback thread, so it could be raced by
    freeing super_block in the error path of mount_bdev().
    
    After check the setting of SB_ACTIVE flag in ext4_orphan_cleanup(), it
    was used to ensure updating the quota file properly, but evict inode and
    trash data immediately in the last iput does not affect the quotafile,
    so setting the SB_ACTIVE flag seems not required[1]. Fix this issue by
    just remove the SB_ACTIVE setting.
    
    [1] https://lore.kernel.org/linux-ext4/99cce8ca-e4a0-7301-840f-2ace67c551f3@huawei.com/T/#m04990cfbc4f44592421736b504afcc346b2a7c00
    
    Cc: stable@kernel.org
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Tested-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20210331033138.918975-1-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c61387630a54e35b96a90608aafd369ffb86f39
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Wed Mar 31 20:15:16 2021 +0800

    ext4: fix check to prevent false positive report of incorrect used inodes
    
    commit a149d2a5cabbf6507a7832a1c4fd2593c55fd450 upstream.
    
    Commit <50122847007> ("ext4: fix check to prevent initializing reserved
    inodes") check the block group zero and prevent initializing reserved
    inodes. But in some special cases, the reserved inode may not all belong
    to the group zero, it may exist into the second group if we format
    filesystem below.
    
      mkfs.ext4 -b 4096 -g 8192 -N 1024 -I 4096 /dev/sda
    
    So, it will end up triggering a false positive report of a corrupted
    file system. This patch fix it by avoid check reserved inodes if no free
    inode blocks will be zeroed.
    
    Cc: stable@kernel.org
    Fixes: 50122847007 ("ext4: fix check to prevent initializing reserved inodes")
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Suggested-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20210331121516.2243099-1-yi.zhang@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79c95130a52adcf999ba5c62b638666266d43385
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Apr 25 15:24:07 2021 +0900

    kbuild: update config_data.gz only when the content of .config is changed
    
    commit 46b41d5dd8019b264717978c39c43313a524d033 upstream.
    
    If the timestamp of the .config file is updated, config_data.gz is
    regenerated, then vmlinux is re-linked. This occurs even if the content
    of the .config has not changed at all.
    
    This issue was mitigated by commit 67424f61f813 ("kconfig: do not write
    .config if the content is the same"); Kconfig does not update the
    .config when it ends up with the identical configuration.
    
    The issue is remaining when the .config is created by *_defconfig with
    some config fragment(s) applied on top.
    
    This is typical for powerpc and mips, where several *_defconfig targets
    are constructed by using merge_config.sh.
    
    One workaround is to have the copy of the .config. The filechk rule
    updates the copy, kernel/config_data, by checking the content instead
    of the timestamp.
    
    With this commit, the second run with the same configuration avoids
    the needless rebuilds.
    
      $ make ARCH=mips defconfig all
       [ snip ]
      $ make ARCH=mips defconfig all
      *** Default configuration is based on target '32r2el_defconfig'
      Using ./arch/mips/configs/generic_defconfig as base
      Merging arch/mips/configs/generic/32r2.config
      Merging arch/mips/configs/generic/el.config
      Merging ./arch/mips/configs/generic/board-boston.config
      Merging ./arch/mips/configs/generic/board-ni169445.config
      Merging ./arch/mips/configs/generic/board-ocelot.config
      Merging ./arch/mips/configs/generic/board-ranchu.config
      Merging ./arch/mips/configs/generic/board-sead-3.config
      Merging ./arch/mips/configs/generic/board-xilfpga.config
      #
      # configuration written to .config
      #
        SYNC    include/config/auto.conf
        CALL    scripts/checksyscalls.sh
        CALL    scripts/atomic/check-atomics.sh
        CHK     include/generated/compile.h
        CHK     include/generated/autoksyms.h
    
    Reported-by: Elliot Berman <eberman@codeaurora.org>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19c8c34a8b80a555b4226681f2e4bca8628e4822
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue May 4 15:56:31 2021 -0700

    x86/cpu: Initialize MSR_TSC_AUX if RDTSCP *or* RDPID is supported
    
    commit b6b4fbd90b155a0025223df2c137af8a701d53b3 upstream.
    
    Initialize MSR_TSC_AUX with CPU node information if RDTSCP or RDPID is
    supported.  This fixes a bug where vdso_read_cpunode() will read garbage
    via RDPID if RDPID is supported but RDTSCP is not.  While no known CPU
    supports RDPID but not RDTSCP, both Intel's SDM and AMD's APM allow for
    RDPID to exist without RDTSCP, e.g. it's technically a legal CPU model
    for a virtual machine.
    
    Note, technically MSR_TSC_AUX could be initialized if and only if RDPID
    is supported since RDTSCP is currently not used to retrieve the CPU node.
    But, the cost of the superfluous WRMSR is negigible, whereas leaving
    MSR_TSC_AUX uninitialized is just asking for future breakage if someone
    decides to utilize RDTSCP.
    
    Fixes: a582c540ac1b ("x86/vdso: Use RDPID in preference to LSL when available")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210504225632.1532621-2-seanjc@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d2be04dbb175eec4c107295d4d2deb529aff515
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Apr 22 21:44:18 2021 +0200

    Revert 337f13046ff0 ("futex: Allow FUTEX_CLOCK_REALTIME with FUTEX_WAIT op")
    
    commit 4fbf5d6837bf81fd7a27d771358f4ee6c4f243f8 upstream.
    
    The FUTEX_WAIT operand has historically a relative timeout which means that
    the clock id is irrelevant as relative timeouts on CLOCK_REALTIME are not
    subject to wall clock changes and therefore are mapped by the kernel to
    CLOCK_MONOTONIC for simplicity.
    
    If a caller would set FUTEX_CLOCK_REALTIME for FUTEX_WAIT the timeout is
    still treated relative vs. CLOCK_MONOTONIC and then the wait arms that
    timeout based on CLOCK_REALTIME which is broken and obviously has never
    been used or even tested.
    
    Reject any attempt to use FUTEX_CLOCK_REALTIME with FUTEX_WAIT again.
    
    The desired functionality can be achieved with FUTEX_WAIT_BITSET and a
    FUTEX_BITSET_MATCH_ANY argument.
    
    Fixes: 337f13046ff0 ("futex: Allow FUTEX_CLOCK_REALTIME with FUTEX_WAIT op")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210422194704.834797921@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b040d13b41175de9902c286d00c289ba82758ff
Author: Yang Yang <yang.yang29@zte.com.cn>
Date:   Thu Jan 28 02:55:35 2021 -0800

    jffs2: check the validity of dstlen in jffs2_zlib_compress()
    
    commit 90ada91f4610c5ef11bc52576516d96c496fc3f1 upstream.
    
    KASAN reports a BUG when download file in jffs2 filesystem.It is
    because when dstlen == 1, cpage_out will write array out of bounds.
    Actually, data will not be compressed in jffs2_zlib_compress() if
    data's length less than 4.
    
    [  393.799778] BUG: KASAN: slab-out-of-bounds in jffs2_rtime_compress+0x214/0x2f0 at addr ffff800062e3b281
    [  393.809166] Write of size 1 by task tftp/2918
    [  393.813526] CPU: 3 PID: 2918 Comm: tftp Tainted: G    B           4.9.115-rt93-EMBSYS-CGEL-6.1.R6-dirty #1
    [  393.823173] Hardware name: LS1043A RDB Board (DT)
    [  393.827870] Call trace:
    [  393.830322] [<ffff20000808c700>] dump_backtrace+0x0/0x2f0
    [  393.835721] [<ffff20000808ca04>] show_stack+0x14/0x20
    [  393.840774] [<ffff2000086ef700>] dump_stack+0x90/0xb0
    [  393.845829] [<ffff20000827b19c>] kasan_object_err+0x24/0x80
    [  393.851402] [<ffff20000827b404>] kasan_report_error+0x1b4/0x4d8
    [  393.857323] [<ffff20000827bae8>] kasan_report+0x38/0x40
    [  393.862548] [<ffff200008279d44>] __asan_store1+0x4c/0x58
    [  393.867859] [<ffff2000084ce2ec>] jffs2_rtime_compress+0x214/0x2f0
    [  393.873955] [<ffff2000084bb3b0>] jffs2_selected_compress+0x178/0x2a0
    [  393.880308] [<ffff2000084bb530>] jffs2_compress+0x58/0x478
    [  393.885796] [<ffff2000084c5b34>] jffs2_write_inode_range+0x13c/0x450
    [  393.892150] [<ffff2000084be0b8>] jffs2_write_end+0x2a8/0x4a0
    [  393.897811] [<ffff2000081f3008>] generic_perform_write+0x1c0/0x280
    [  393.903990] [<ffff2000081f5074>] __generic_file_write_iter+0x1c4/0x228
    [  393.910517] [<ffff2000081f5210>] generic_file_write_iter+0x138/0x288
    [  393.916870] [<ffff20000829ec1c>] __vfs_write+0x1b4/0x238
    [  393.922181] [<ffff20000829ff00>] vfs_write+0xd0/0x238
    [  393.927232] [<ffff2000082a1ba8>] SyS_write+0xa0/0x110
    [  393.932283] [<ffff20000808429c>] __sys_trace_return+0x0/0x4
    [  393.937851] Object at ffff800062e3b280, in cache kmalloc-64 size: 64
    [  393.944197] Allocated:
    [  393.946552] PID = 2918
    [  393.948913]  save_stack_trace_tsk+0x0/0x220
    [  393.953096]  save_stack_trace+0x18/0x20
    [  393.956932]  kasan_kmalloc+0xd8/0x188
    [  393.960594]  __kmalloc+0x144/0x238
    [  393.963994]  jffs2_selected_compress+0x48/0x2a0
    [  393.968524]  jffs2_compress+0x58/0x478
    [  393.972273]  jffs2_write_inode_range+0x13c/0x450
    [  393.976889]  jffs2_write_end+0x2a8/0x4a0
    [  393.980810]  generic_perform_write+0x1c0/0x280
    [  393.985251]  __generic_file_write_iter+0x1c4/0x228
    [  393.990040]  generic_file_write_iter+0x138/0x288
    [  393.994655]  __vfs_write+0x1b4/0x238
    [  393.998228]  vfs_write+0xd0/0x238
    [  394.001543]  SyS_write+0xa0/0x110
    [  394.004856]  __sys_trace_return+0x0/0x4
    [  394.008684] Freed:
    [  394.010691] PID = 2918
    [  394.013051]  save_stack_trace_tsk+0x0/0x220
    [  394.017233]  save_stack_trace+0x18/0x20
    [  394.021069]  kasan_slab_free+0x88/0x188
    [  394.024902]  kfree+0x6c/0x1d8
    [  394.027868]  jffs2_sum_write_sumnode+0x2c4/0x880
    [  394.032486]  jffs2_do_reserve_space+0x198/0x598
    [  394.037016]  jffs2_reserve_space+0x3f8/0x4d8
    [  394.041286]  jffs2_write_inode_range+0xf0/0x450
    [  394.045816]  jffs2_write_end+0x2a8/0x4a0
    [  394.049737]  generic_perform_write+0x1c0/0x280
    [  394.054179]  __generic_file_write_iter+0x1c4/0x228
    [  394.058968]  generic_file_write_iter+0x138/0x288
    [  394.063583]  __vfs_write+0x1b4/0x238
    [  394.067157]  vfs_write+0xd0/0x238
    [  394.070470]  SyS_write+0xa0/0x110
    [  394.073783]  __sys_trace_return+0x0/0x4
    [  394.077612] Memory state around the buggy address:
    [  394.082404]  ffff800062e3b180: 00 00 00 00 00 00 00 00 fc fc fc fc fc fc fc fc
    [  394.089623]  ffff800062e3b200: 00 00 00 00 00 00 00 00 fc fc fc fc fc fc fc fc
    [  394.096842] >ffff800062e3b280: 01 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  394.104056]                    ^
    [  394.107283]  ffff800062e3b300: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc
    [  394.114502]  ffff800062e3b380: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc
    [  394.121718] ==================================================================
    
    Signed-off-by: Yang Yang <yang.yang29@zte.com.cn>
    Cc: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 564b1868f229350be0fd653a24bf8d7228c13fc7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Apr 27 17:05:53 2021 -0700

    Fix misc new gcc warnings
    
    commit e7c6e405e171fb33990a12ecfd14e6500d9e5cf2 upstream.
    
    It seems like Fedora 34 ends up enabling a few new gcc warnings, notably
    "-Wstringop-overread" and "-Warray-parameter".
    
    Both of them cause what seem to be valid warnings in the kernel, where
    we have array size mismatches in function arguments (that are no longer
    just silently converted to a pointer to element, but actually checked).
    
    This fixes most of the trivial ones, by making the function declaration
    match the function definition, and in the case of intel_pm.c, removing
    the over-specified array size from the argument declaration.
    
    At least one 'stringop-overread' warning remains in the i915 driver, but
    that one doesn't have the same obvious trivial fix, and may or may not
    actually be indicative of a bug.
    
    [ It was a mistake to upgrade one of my machines to Fedora 34 while
      being busy with the merge window, but if this is the extent of the
      compiler upgrade problems, things are better than usual    - Linus ]
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrey Zhizhikin <andrey.z@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8aa728568202a72e6c3a504aec97043dc4a08c2f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 22 17:02:41 2021 +0100

    security: commoncap: fix -Wstringop-overread warning
    
    commit 82e5d8cc768b0c7b03c551a9ab1f8f3f68d5f83f upstream.
    
    gcc-11 introdces a harmless warning for cap_inode_getsecurity:
    
    security/commoncap.c: In function ‘cap_inode_getsecurity’:
    security/commoncap.c:440:33: error: ‘memcpy’ reading 16 bytes from a region of size 0 [-Werror=stringop-overread]
      440 |                                 memcpy(&nscap->data, &cap->data, sizeof(__le32) * 2 * VFS_CAP_U32);
          |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    The problem here is that tmpbuf is initialized to NULL, so gcc assumes
    it is not accessible unless it gets set by vfs_getxattr_alloc().  This is
    a legitimate warning as far as I can tell, but the code is correct since
    it correctly handles the error when that function fails.
    
    Add a separate NULL check to tell gcc about it as well.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: James Morris <jamorris@linux.microsoft.com>
    Cc: Andrey Zhizhikin <andrey.z@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be8db260f482c325402668accf0c59936254e5da
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Wed Oct 21 16:12:49 2020 -0400

    fuse: fix write deadlock
    
    commit 4f06dd92b5d0a6f8eec6a34b8d6ef3e1f4ac1e10 upstream.
    
    There are two modes for write(2) and friends in fuse:
    
    a) write through (update page cache, send sync WRITE request to userspace)
    
    b) buffered write (update page cache, async writeout later)
    
    The write through method kept all the page cache pages locked that were
    used for the request.  Keeping more than one page locked is deadlock prone
    and Qian Cai demonstrated this with trinity fuzzing.
    
    The reason for keeping the pages locked is that concurrent mapped reads
    shouldn't try to pull possibly stale data into the page cache.
    
    For full page writes, the easy way to fix this is to make the cached page
    be the authoritative source by marking the page PG_uptodate immediately.
    After this the page can be safely unlocked, since mapped/cached reads will
    take the written data from the cache.
    
    Concurrent mapped writes will now cause data in the original WRITE request
    to be updated; this however doesn't cause any data inconsistency and this
    scenario should be exceedingly rare anyway.
    
    If the WRITE request returns with an error in the above case, currently the
    page is not marked uptodate; this means that a concurrent read will always
    read consistent data.  After this patch the page is uptodate between
    writing to the cache and receiving the error: there's window where a cached
    read will read the wrong data.  While theoretically this could be a
    regression, it is unlikely to be one in practice, since this is normal for
    buffered writes.
    
    In case of a partial page write to an already uptodate page the locking is
    also unnecessary, with the above caveats.
    
    Partial write of a not uptodate page still needs to be handled.  One way
    would be to read the complete page before doing the write.  This is not
    possible, since it might break filesystems that don't expect any READ
    requests when the file was opened O_WRONLY.
    
    The other solution is to serialize the synchronous write with reads from
    the partial pages.  The easiest way to do this is to keep the partial pages
    locked.  The problem is that a write() may involve two such pages (one head
    and one tail).  This patch fixes it by only locking the partial tail page.
    If there's a partial head page as well, then split that off as a separate
    WRITE request.
    
    Reported-by: Qian Cai <cai@lca.pw>
    Link: https://lore.kernel.org/linux-fsdevel/4794a3fa3742a5e84fb0f934944204b55730829b.camel@lca.pw/
    Fixes: ea9b9907b82a ("fuse: implement perform_write")
    Cc: <stable@vger.kernel.org> # v2.6.26
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc21b424861aab64809ca7da0678917e149456b5
Author: Heinz Mauelshagen <heinzm@redhat.com>
Date:   Wed Apr 21 23:32:36 2021 +0200

    dm raid: fix inconclusive reshape layout on fast raid4/5/6 table reload sequences
    
    commit f99a8e4373eeacb279bc9696937a55adbff7a28a upstream.
    
    If fast table reloads occur during an ongoing reshape of raid4/5/6
    devices the target may race reading a superblock vs the the MD resync
    thread; causing an inconclusive reshape state to be read in its
    constructor.
    
    lvm2 test lvconvert-raid-reshape-stripes-load-reload.sh can cause
    BUG_ON() to trigger in md_run(), e.g.:
    "kernel BUG at drivers/md/raid5.c:7567!".
    
    Scenario triggering the bug:
    
    1. the MD sync thread calls end_reshape() from raid5_sync_request()
       when done reshaping. However end_reshape() _only_ updates the
       reshape position to MaxSector keeping the changed layout
       configuration though (i.e. any delta disks, chunk sector or RAID
       algorithm changes). That inconclusive configuration is stored in
       the superblock.
    
    2. dm-raid constructs a mapping, loading named inconsistent superblock
       as of step 1 before step 3 is able to finish resetting the reshape
       state completely, and calls md_run() which leads to mentioned bug
       in raid5.c.
    
    3. the MD RAID personality's finish_reshape() is called; which resets
       the reshape information on chunk sectors, delta disks, etc. This
       explains why the bug is rarely seen on multi-core machines, as MD's
       finish_reshape() superblock update races with the dm-raid
       constructor's superblock load in step 2.
    
    Fix identifies inconclusive superblock content in the dm-raid
    constructor and resets it before calling md_run(), factoring out
    identifying checks into rs_is_layout_change() to share in existing
    rs_reshape_requested() and new rs_reset_inclonclusive_reshape(). Also
    enhance a comment and remove an empty line.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6920cef604fa57f9409e3960413e9cc11f5c5a40
Author: Paul Clements <paul.clements@us.sios.com>
Date:   Thu Apr 15 17:17:57 2021 -0400

    md/raid1: properly indicate failure when ending a failed write request
    
    commit 2417b9869b81882ab90fd5ed1081a1cb2d4db1dd upstream.
    
    This patch addresses a data corruption bug in raid1 arrays using bitmaps.
    Without this fix, the bitmap bits for the failed I/O end up being cleared.
    
    Since we are in the failure leg of raid1_end_write_request, the request
    either needs to be retried (R1BIO_WriteError) or failed (R1BIO_Degraded).
    
    Fixes: eeba6809d8d5 ("md/raid1: end bio when the device faulty")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Paul Clements <paul.clements@us.sios.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f2d256875a5288b89b39b4f0d316ecb2306bf48
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Mar 21 22:07:48 2021 -0700

    crypto: rng - fix crypto_rng_reset() refcounting when !CRYPTO_STATS
    
    commit 30d0f6a956fc74bb2e948398daf3278c6b08c7e9 upstream.
    
    crypto_stats_get() is a no-op when the kernel is compiled without
    CONFIG_CRYPTO_STATS, so pairing it with crypto_alg_put() unconditionally
    (as crypto_rng_reset() does) is wrong.
    
    Fix this by moving the call to crypto_stats_get() to just before the
    actual algorithm operation which might need it.  This makes it always
    paired with crypto_stats_rng_seed().
    
    Fixes: eed74b3eba9e ("crypto: rng - Fix a refcounting bug in crypto_rng_reset()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63a25b715633745f2de3bc7cc78d18b5f0471148
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Wed Mar 10 17:19:16 2021 -0500

    tpm: vtpm_proxy: Avoid reading host log when using a virtual device
    
    commit 9716ac65efc8f780549b03bddf41e60c445d4709 upstream.
    
    Avoid allocating memory and reading the host log when a virtual device
    is used since this log is of no use to that driver. A virtual
    device can be identified through the flag TPM_CHIP_FLAG_VIRTUAL, which
    is only set for the tpm_vtpm_proxy driver.
    
    Cc: stable@vger.kernel.org
    Fixes: 6f99612e2500 ("tpm: Proxy driver for supporting multiple emulated TPMs")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f12258b5224cfaa808c54fd29345f3c1cbfca76
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Wed Mar 10 17:19:14 2021 -0500

    tpm: efi: Use local variable for calculating final log size
    
    commit 48cff270b037022e37835d93361646205ca25101 upstream.
    
    When tpm_read_log_efi is called multiple times, which happens when
    one loads and unloads a TPM2 driver multiple times, then the global
    variable efi_tpm_final_log_size will at some point become a negative
    number due to the subtraction of final_events_preboot_size occurring
    each time. Use a local variable to avoid this integer underflow.
    
    The following issue is now resolved:
    
    Mar  8 15:35:12 hibinst kernel: Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
    Mar  8 15:35:12 hibinst kernel: Workqueue: tpm-vtpm vtpm_proxy_work [tpm_vtpm_proxy]
    Mar  8 15:35:12 hibinst kernel: RIP: 0010:__memcpy+0x12/0x20
    Mar  8 15:35:12 hibinst kernel: Code: 00 b8 01 00 00 00 85 d2 74 0a c7 05 44 7b ef 00 0f 00 00 00 c3 cc cc cc 66 66 90 66 90 48 89 f8 48 89 d1 48 c1 e9 03 83 e2 07 <f3> 48 a5 89 d1 f3 a4 c3 66 0f 1f 44 00 00 48 89 f8 48 89 d1 f3 a4
    Mar  8 15:35:12 hibinst kernel: RSP: 0018:ffff9ac4c0fcfde0 EFLAGS: 00010206
    Mar  8 15:35:12 hibinst kernel: RAX: ffff88f878cefed5 RBX: ffff88f878ce9000 RCX: 1ffffffffffffe0f
    Mar  8 15:35:12 hibinst kernel: RDX: 0000000000000003 RSI: ffff9ac4c003bff9 RDI: ffff88f878cf0e4d
    Mar  8 15:35:12 hibinst kernel: RBP: ffff9ac4c003b000 R08: 0000000000001000 R09: 000000007e9d6073
    Mar  8 15:35:12 hibinst kernel: R10: ffff9ac4c003b000 R11: ffff88f879ad3500 R12: 0000000000000ed5
    Mar  8 15:35:12 hibinst kernel: R13: ffff88f878ce9760 R14: 0000000000000002 R15: ffff88f77de7f018
    Mar  8 15:35:12 hibinst kernel: FS:  0000000000000000(0000) GS:ffff88f87bd00000(0000) knlGS:0000000000000000
    Mar  8 15:35:12 hibinst kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    Mar  8 15:35:12 hibinst kernel: CR2: ffff9ac4c003c000 CR3: 00000001785a6004 CR4: 0000000000060ee0
    Mar  8 15:35:12 hibinst kernel: Call Trace:
    Mar  8 15:35:12 hibinst kernel: tpm_read_log_efi+0x152/0x1a7
    Mar  8 15:35:12 hibinst kernel: tpm_bios_log_setup+0xc8/0x1c0
    Mar  8 15:35:12 hibinst kernel: tpm_chip_register+0x8f/0x260
    Mar  8 15:35:12 hibinst kernel: vtpm_proxy_work+0x16/0x60 [tpm_vtpm_proxy]
    Mar  8 15:35:12 hibinst kernel: process_one_work+0x1b4/0x370
    Mar  8 15:35:12 hibinst kernel: worker_thread+0x53/0x3e0
    Mar  8 15:35:12 hibinst kernel: ? process_one_work+0x370/0x370
    
    Cc: stable@vger.kernel.org
    Fixes: 166a2809d65b ("tpm: Don't duplicate events from the final event log in the TCG2 log")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2af501de8f43c1edc2126865a88355c50aa2f9e1
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Wed Apr 14 20:12:51 2021 +0300

    intel_th: pci: Add Alder Lake-M support
    
    commit 48cb17531b15967d9d3f34c770a25cc6c4ca6ad1 upstream.
    
    This adds support for the Trace Hub in Alder Lake-M PCH.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lore.kernel.org/r/20210414171251.14672-8-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab5d5c9dfd02ed7593892a108c5a2d5def8f1882
Author: Tony Ambardar <tony.ambardar@gmail.com>
Date:   Thu Sep 17 06:54:37 2020 -0700

    powerpc: fix EDEADLOCK redefinition error in uapi/asm/errno.h
    
    commit 7de21e679e6a789f3729e8402bc440b623a28eae upstream.
    
    A few archs like powerpc have different errno.h values for macros
    EDEADLOCK and EDEADLK. In code including both libc and linux versions of
    errno.h, this can result in multiple definitions of EDEADLOCK in the
    include chain. Definitions to the same value (e.g. seen with mips) do
    not raise warnings, but on powerpc there are redefinitions changing the
    value, which raise warnings and errors (if using "-Werror").
    
    Guard against these redefinitions to avoid build errors like the following,
    first seen cross-compiling libbpf v5.8.9 for powerpc using GCC 8.4.0 with
    musl 1.1.24:
    
      In file included from ../../arch/powerpc/include/uapi/asm/errno.h:5,
                       from ../../include/linux/err.h:8,
                       from libbpf.c:29:
      ../../include/uapi/asm-generic/errno.h:40: error: "EDEADLOCK" redefined [-Werror]
       #define EDEADLOCK EDEADLK
    
      In file included from toolchain-powerpc_8540_gcc-8.4.0_musl/include/errno.h:10,
                       from libbpf.c:26:
      toolchain-powerpc_8540_gcc-8.4.0_musl/include/bits/errno.h:58: note: this is the location of the previous definition
       #define EDEADLOCK       58
    
      cc1: all warnings being treated as errors
    
    Cc: Stable <stable@vger.kernel.org>
    Reported-by: Rosen Penev <rosenp@gmail.com>
    Signed-off-by: Tony Ambardar <Tony.Ambardar@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200917135437.1238787-1-Tony.Ambardar@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abf3573ef4e7f159e078d01320c75afca9195a47
Author: Mahesh Salgaonkar <mahesh@linux.ibm.com>
Date:   Mon Apr 12 13:22:50 2021 +0530

    powerpc/eeh: Fix EEH handling for hugepages in ioremap space.
    
    commit 5ae5bc12d0728db60a0aa9b62160ffc038875f1a upstream.
    
    During the EEH MMIO error checking, the current implementation fails to map
    the (virtual) MMIO address back to the pci device on radix with hugepage
    mappings for I/O. This results into failure to dispatch EEH event with no
    recovery even when EEH capability has been enabled on the device.
    
    eeh_check_failure(token)                # token = virtual MMIO address
      addr = eeh_token_to_phys(token);
      edev = eeh_addr_cache_get_dev(addr);
      if (!edev)
            return 0;
      eeh_dev_check_failure(edev);  <= Dispatch the EEH event
    
    In case of hugepage mappings, eeh_token_to_phys() has a bug in virt -> phys
    translation that results in wrong physical address, which is then passed to
    eeh_addr_cache_get_dev() to match it against cached pci I/O address ranges
    to get to a PCI device. Hence, it fails to find a match and the EEH event
    never gets dispatched leaving the device in failed state.
    
    The commit 33439620680be ("powerpc/eeh: Handle hugepages in ioremap space")
    introduced following logic to translate virt to phys for hugepage mappings:
    
    eeh_token_to_phys():
    +       pa = pte_pfn(*ptep);
    +
    +       /* On radix we can do hugepage mappings for io, so handle that */
    +       if (hugepage_shift) {
    +               pa <<= hugepage_shift;                  <= This is wrong
    +               pa |= token & ((1ul << hugepage_shift) - 1);
    +       }
    
    This patch fixes the virt -> phys translation in eeh_token_to_phys()
    function.
    
      $ cat /sys/kernel/debug/powerpc/eeh_address_cache
      mem addr range [0x0000040080000000-0x00000400807fffff]: 0030:01:00.1
      mem addr range [0x0000040080800000-0x0000040080ffffff]: 0030:01:00.1
      mem addr range [0x0000040081000000-0x00000400817fffff]: 0030:01:00.0
      mem addr range [0x0000040081800000-0x0000040081ffffff]: 0030:01:00.0
      mem addr range [0x0000040082000000-0x000004008207ffff]: 0030:01:00.1
      mem addr range [0x0000040082080000-0x00000400820fffff]: 0030:01:00.0
      mem addr range [0x0000040082100000-0x000004008210ffff]: 0030:01:00.1
      mem addr range [0x0000040082110000-0x000004008211ffff]: 0030:01:00.0
    
    Above is the list of cached io address ranges of pci 0030:01:00.<fn>.
    
    Before this patch:
    
    Tracing 'arg1' of function eeh_addr_cache_get_dev() during error injection
    clearly shows that 'addr=' contains wrong physical address:
    
       kworker/u16:0-7       [001] ....   108.883775: eeh_addr_cache_get_dev:
               (eeh_addr_cache_get_dev+0xc/0xf0) addr=0x80103000a510
    
    dmesg shows no EEH recovery messages:
    
      [  108.563768] bnx2x: [bnx2x_timer:5801(eth2)]MFW seems hanged: drv_pulse (0x9ae) != mcp_pulse (0x7fff)
      [  108.563788] bnx2x: [bnx2x_hw_stats_update:870(eth2)]NIG timer max (4294967295)
      [  108.883788] bnx2x: [bnx2x_acquire_hw_lock:2013(eth1)]lock_status 0xffffffff  resource_bit 0x1
      [  108.884407] bnx2x 0030:01:00.0 eth1: MDC/MDIO access timeout
      [  108.884976] bnx2x 0030:01:00.0 eth1: MDC/MDIO access timeout
      <..>
    
    After this patch:
    
    eeh_addr_cache_get_dev() trace shows correct physical address:
    
      <idle>-0       [001] ..s.  1043.123828: eeh_addr_cache_get_dev:
              (eeh_addr_cache_get_dev+0xc/0xf0) addr=0x40080bc7cd8
    
    dmesg logs shows EEH recovery getting triggerred:
    
      [  964.323980] bnx2x: [bnx2x_timer:5801(eth2)]MFW seems hanged: drv_pulse (0x746f) != mcp_pulse (0x7fff)
      [  964.323991] EEH: Recovering PHB#30-PE#10000
      [  964.324002] EEH: PE location: N/A, PHB location: N/A
      [  964.324006] EEH: Frozen PHB#30-PE#10000 detected
      <..>
    
    Fixes: 33439620680b ("powerpc/eeh: Handle hugepages in ioremap space")
    Cc: stable@vger.kernel.org # v5.3+
    Reported-by: Dominic DeMarco <ddemarc@us.ibm.com>
    Signed-off-by: Mahesh Salgaonkar <mahesh@linux.ibm.com>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/161821396263.48361.2796709239866588652.stgit@jupiter
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 077f526fe3cc4576fee6adc4c1ebded1ba0c518d
Author: lizhe <lizhe67@huawei.com>
Date:   Thu Mar 18 11:06:57 2021 +0800

    jffs2: Fix kasan slab-out-of-bounds problem
    
    commit 960b9a8a7676b9054d8b46a2c7db52a0c8766b56 upstream.
    
    KASAN report a slab-out-of-bounds problem. The logs are listed below.
    It is because in function jffs2_scan_dirent_node, we alloc "checkedlen+1"
    bytes for fd->name and we check crc with length rd->nsize. If checkedlen
    is less than rd->nsize, it will cause the slab-out-of-bounds problem.
    
    jffs2: Dirent at *** has zeroes in name. Truncating to %d char
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in crc32_le+0x1ce/0x260 at addr ffff8800842cf2d1
    Read of size 1 by task test_JFFS2/915
    =============================================================================
    BUG kmalloc-64 (Tainted: G    B      O   ): kasan: bad access detected
    -----------------------------------------------------------------------------
    INFO: Allocated in jffs2_alloc_full_dirent+0x2a/0x40 age=0 cpu=1 pid=915
            ___slab_alloc+0x580/0x5f0
            __slab_alloc.isra.24+0x4e/0x64
            __kmalloc+0x170/0x300
            jffs2_alloc_full_dirent+0x2a/0x40
            jffs2_scan_eraseblock+0x1ca4/0x3b64
            jffs2_scan_medium+0x285/0xfe0
            jffs2_do_mount_fs+0x5fb/0x1bbc
            jffs2_do_fill_super+0x245/0x6f0
            jffs2_fill_super+0x287/0x2e0
            mount_mtd_aux.isra.0+0x9a/0x144
            mount_mtd+0x222/0x2f0
            jffs2_mount+0x41/0x60
            mount_fs+0x63/0x230
            vfs_kern_mount.part.6+0x6c/0x1f4
            do_mount+0xae8/0x1940
            SyS_mount+0x105/0x1d0
    INFO: Freed in jffs2_free_full_dirent+0x22/0x40 age=27 cpu=1 pid=915
            __slab_free+0x372/0x4e4
            kfree+0x1d4/0x20c
            jffs2_free_full_dirent+0x22/0x40
            jffs2_build_remove_unlinked_inode+0x17a/0x1e4
            jffs2_do_mount_fs+0x1646/0x1bbc
            jffs2_do_fill_super+0x245/0x6f0
            jffs2_fill_super+0x287/0x2e0
            mount_mtd_aux.isra.0+0x9a/0x144
            mount_mtd+0x222/0x2f0
            jffs2_mount+0x41/0x60
            mount_fs+0x63/0x230
            vfs_kern_mount.part.6+0x6c/0x1f4
            do_mount+0xae8/0x1940
            SyS_mount+0x105/0x1d0
            entry_SYSCALL_64_fastpath+0x1e/0x97
    Call Trace:
     [<ffffffff815befef>] dump_stack+0x59/0x7e
     [<ffffffff812d1d65>] print_trailer+0x125/0x1b0
     [<ffffffff812d82c8>] object_err+0x34/0x40
     [<ffffffff812dadef>] kasan_report.part.1+0x21f/0x534
     [<ffffffff81132401>] ? vprintk+0x2d/0x40
     [<ffffffff815f1ee2>] ? crc32_le+0x1ce/0x260
     [<ffffffff812db41a>] kasan_report+0x26/0x30
     [<ffffffff812d9fc1>] __asan_load1+0x3d/0x50
     [<ffffffff815f1ee2>] crc32_le+0x1ce/0x260
     [<ffffffff814764ae>] ? jffs2_alloc_full_dirent+0x2a/0x40
     [<ffffffff81485cec>] jffs2_scan_eraseblock+0x1d0c/0x3b64
     [<ffffffff81488813>] ? jffs2_scan_medium+0xccf/0xfe0
     [<ffffffff81483fe0>] ? jffs2_scan_make_ino_cache+0x14c/0x14c
     [<ffffffff812da3e9>] ? kasan_unpoison_shadow+0x35/0x50
     [<ffffffff812da3e9>] ? kasan_unpoison_shadow+0x35/0x50
     [<ffffffff812da462>] ? kasan_kmalloc+0x5e/0x70
     [<ffffffff812d5d90>] ? kmem_cache_alloc_trace+0x10c/0x2cc
     [<ffffffff818169fb>] ? mtd_point+0xf7/0x130
     [<ffffffff81487dc9>] jffs2_scan_medium+0x285/0xfe0
     [<ffffffff81487b44>] ? jffs2_scan_eraseblock+0x3b64/0x3b64
     [<ffffffff812da3e9>] ? kasan_unpoison_shadow+0x35/0x50
     [<ffffffff812da3e9>] ? kasan_unpoison_shadow+0x35/0x50
     [<ffffffff812da462>] ? kasan_kmalloc+0x5e/0x70
     [<ffffffff812d57df>] ? __kmalloc+0x12b/0x300
     [<ffffffff812da462>] ? kasan_kmalloc+0x5e/0x70
     [<ffffffff814a2753>] ? jffs2_sum_init+0x9f/0x240
     [<ffffffff8148b2ff>] jffs2_do_mount_fs+0x5fb/0x1bbc
     [<ffffffff8148ad04>] ? jffs2_del_noinode_dirent+0x640/0x640
     [<ffffffff812da462>] ? kasan_kmalloc+0x5e/0x70
     [<ffffffff81127c5b>] ? __init_rwsem+0x97/0xac
     [<ffffffff81492349>] jffs2_do_fill_super+0x245/0x6f0
     [<ffffffff81493c5b>] jffs2_fill_super+0x287/0x2e0
     [<ffffffff814939d4>] ? jffs2_parse_options+0x594/0x594
     [<ffffffff81819bea>] mount_mtd_aux.isra.0+0x9a/0x144
     [<ffffffff81819eb6>] mount_mtd+0x222/0x2f0
     [<ffffffff814939d4>] ? jffs2_parse_options+0x594/0x594
     [<ffffffff81819c94>] ? mount_mtd_aux.isra.0+0x144/0x144
     [<ffffffff81258757>] ? free_pages+0x13/0x1c
     [<ffffffff814fa0ac>] ? selinux_sb_copy_data+0x278/0x2e0
     [<ffffffff81492b35>] jffs2_mount+0x41/0x60
     [<ffffffff81302fb7>] mount_fs+0x63/0x230
     [<ffffffff8133755f>] ? alloc_vfsmnt+0x32f/0x3b0
     [<ffffffff81337f2c>] vfs_kern_mount.part.6+0x6c/0x1f4
     [<ffffffff8133ceec>] do_mount+0xae8/0x1940
     [<ffffffff811b94e0>] ? audit_filter_rules.constprop.6+0x1d10/0x1d10
     [<ffffffff8133c404>] ? copy_mount_string+0x40/0x40
     [<ffffffff812cbf78>] ? alloc_pages_current+0xa4/0x1bc
     [<ffffffff81253a89>] ? __get_free_pages+0x25/0x50
     [<ffffffff81338993>] ? copy_mount_options.part.17+0x183/0x264
     [<ffffffff8133e3a9>] SyS_mount+0x105/0x1d0
     [<ffffffff8133e2a4>] ? copy_mnt_ns+0x560/0x560
     [<ffffffff810e8391>] ? msa_space_switch_handler+0x13d/0x190
     [<ffffffff81be184a>] entry_SYSCALL_64_fastpath+0x1e/0x97
     [<ffffffff810e9274>] ? msa_space_switch+0xb0/0xe0
    Memory state around the buggy address:
     ffff8800842cf180: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff8800842cf200: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    >ffff8800842cf280: fc fc fc fc fc fc 00 00 00 00 01 fc fc fc fc fc
                                                     ^
     ffff8800842cf300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff8800842cf380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    ==================================================================
    
    Cc: stable@vger.kernel.org
    Reported-by: Kunkun Xu <xukunkun1@huawei.com>
    Signed-off-by: lizhe <lizhe67@huawei.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad3f360ef20f311721184e461a844f2d86abcc88
Author: Hansem Ro <hansemro@outlook.com>
Date:   Thu May 6 13:27:10 2021 -0700

    Input: ili210x - add missing negation for touch indication on ili210x
    
    commit ac05a8a927e5a1027592d8f98510a511dadeed14 upstream.
    
    This adds the negation needed for proper finger detection on Ilitek
    ili2107/ili210x. This fixes polling issues (on Amazon Kindle Fire)
    caused by returning false for the cooresponding finger on the touchscreen.
    
    Signed-off-by: Hansem Ro <hansemro@outlook.com>
    Fixes: e3559442afd2a ("ili210x - rework the touchscreen sample processing")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6be0e4b59314e4a836495f6ffdc5d2c5b079deeb
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Apr 18 15:00:45 2021 -0400

    NFSv4: Don't discard segments marked for return in _pnfs_return_layout()
    
    commit de144ff4234f935bd2150108019b5d87a90a8a96 upstream.
    
    If the pNFS layout segment is marked with the NFS_LSEG_LAYOUTRETURN
    flag, then the assumption is that it has some reporting requirement
    to perform through a layoutreturn (e.g. flexfiles layout stats or error
    information).
    
    Fixes: 6d597e175012 ("pnfs: only tear down lsegs that precede seqid in LAYOUTRETURN args")
    Cc: stable@vger.kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12ccd59941e359dc3bc5be823a80484210887647
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Apr 15 15:41:57 2021 -0400

    NFS: Don't discard pNFS layout segments that are marked for return
    
    commit 39fd01863616964f009599e50ca5c6ea9ebf88d6 upstream.
    
    If the pNFS layout segment is marked with the NFS_LSEG_LAYOUTRETURN
    flag, then the assumption is that it has some reporting requirement
    to perform through a layoutreturn (e.g. flexfiles layout stats or error
    information).
    
    Fixes: e0b7d420f72a ("pNFS: Don't discard layout segments that are marked for return")
    Cc: stable@vger.kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 504632a3577a049dd9bb7aabae5b4476f9c586b4
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Apr 21 17:43:16 2021 +0100

    ACPI: GTDT: Don't corrupt interrupt mappings on watchdow probe failure
    
    commit 1ecd5b129252249b9bc03d7645a7bda512747277 upstream.
    
    When failing the driver probe because of invalid firmware properties,
    the GTDT driver unmaps the interrupt that it mapped earlier.
    
    However, it never checks whether the mapping of the interrupt actially
    succeeded. Even more, should the firmware report an illegal interrupt
    number that overlaps with the GIC SGI range, this can result in an
    IPI being unmapped, and subsequent fireworks (as reported by Dann
    Frazier).
    
    Rework the driver to have a slightly saner behaviour and actually
    check whether the interrupt has been mapped before unmapping things.
    
    Reported-by: dann frazier <dann.frazier@canonical.com>
    Fixes: ca9ae5ec4ef0 ("acpi/arm64: Add SBSA Generic Watchdog support in GTDT driver")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/YH87dtTfwYgavusz@xps13.dannf
    Cc: <stable@vger.kernel.org>
    Cc: Fu Wei <wefu@redhat.com>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: dann frazier <dann.frazier@canonical.com>
    Tested-by: Hanjun Guo <guohanjun@huawei.com>
    Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
    Reviewed-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Link: https://lore.kernel.org/r/20210421164317.1718831-2-maz@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 490ad0a2390442d0a7b8c00972a83dbb09cab142
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Apr 28 15:23:07 2021 +0200

    openvswitch: fix stack OOB read while fragmenting IPv4 packets
    
    commit 7c0ea5930c1c211931819d83cfb157bff1539a4c upstream.
    
    running openvswitch on kernels built with KASAN, it's possible to see the
    following splat while testing fragmentation of IPv4 packets:
    
     BUG: KASAN: stack-out-of-bounds in ip_do_fragment+0x1b03/0x1f60
     Read of size 1 at addr ffff888112fc713c by task handler2/1367
    
     CPU: 0 PID: 1367 Comm: handler2 Not tainted 5.12.0-rc6+ #418
     Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014
     Call Trace:
      dump_stack+0x92/0xc1
      print_address_description.constprop.7+0x1a/0x150
      kasan_report.cold.13+0x7f/0x111
      ip_do_fragment+0x1b03/0x1f60
      ovs_fragment+0x5bf/0x840 [openvswitch]
      do_execute_actions+0x1bd5/0x2400 [openvswitch]
      ovs_execute_actions+0xc8/0x3d0 [openvswitch]
      ovs_packet_cmd_execute+0xa39/0x1150 [openvswitch]
      genl_family_rcv_msg_doit.isra.15+0x227/0x2d0
      genl_rcv_msg+0x287/0x490
      netlink_rcv_skb+0x120/0x380
      genl_rcv+0x24/0x40
      netlink_unicast+0x439/0x630
      netlink_sendmsg+0x719/0xbf0
      sock_sendmsg+0xe2/0x110
      ____sys_sendmsg+0x5ba/0x890
      ___sys_sendmsg+0xe9/0x160
      __sys_sendmsg+0xd3/0x170
      do_syscall_64+0x33/0x40
      entry_SYSCALL_64_after_hwframe+0x44/0xae
     RIP: 0033:0x7f957079db07
     Code: c3 66 90 41 54 41 89 d4 55 48 89 f5 53 89 fb 48 83 ec 10 e8 eb ec ff ff 44 89 e2 48 89 ee 89 df 41 89 c0 b8 2e 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 35 44 89 c7 48 89 44 24 08 e8 24 ed ff ff 48
     RSP: 002b:00007f956ce35a50 EFLAGS: 00000293 ORIG_RAX: 000000000000002e
     RAX: ffffffffffffffda RBX: 0000000000000019 RCX: 00007f957079db07
     RDX: 0000000000000000 RSI: 00007f956ce35ae0 RDI: 0000000000000019
     RBP: 00007f956ce35ae0 R08: 0000000000000000 R09: 00007f9558006730
     R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000000000
     R13: 00007f956ce37308 R14: 00007f956ce35f80 R15: 00007f956ce35ae0
    
     The buggy address belongs to the page:
     page:00000000af2a1d93 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x112fc7
     flags: 0x17ffffc0000000()
     raw: 0017ffffc0000000 0000000000000000 dead000000000122 0000000000000000
     raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
     page dumped because: kasan: bad access detected
    
     addr ffff888112fc713c is located in stack of task handler2/1367 at offset 180 in frame:
      ovs_fragment+0x0/0x840 [openvswitch]
    
     this frame has 2 objects:
      [32, 144) 'ovs_dst'
      [192, 424) 'ovs_rt'
    
     Memory state around the buggy address:
      ffff888112fc7000: f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff888112fc7080: 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00
     >ffff888112fc7100: 00 00 00 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00
                                             ^
      ffff888112fc7180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff888112fc7200: 00 00 00 00 00 00 f2 f2 f2 00 00 00 00 00 00 00
    
    for IPv4 packets, ovs_fragment() uses a temporary struct dst_entry. Then,
    in the following call graph:
    
      ip_do_fragment()
        ip_skb_dst_mtu()
          ip_dst_mtu_maybe_forward()
            ip_mtu_locked()
    
    the pointer to struct dst_entry is used as pointer to struct rtable: this
    turns the access to struct members like rt_mtu_locked into an OOB read in
    the stack. Fix this changing the temporary variable used for IPv4 packets
    in ovs_fragment(), similarly to what is done for IPv6 few lines below.
    
    Fixes: d52e5a7e7ca4 ("ipv4: lock mtu in fnhe when received PMTU < net.ipv4.route.min_pmt")
    Cc: <stable@vger.kernel.org>
    Acked-by: Eelco Chaudron <echaudro@redhat.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9508634b2b184aa785d270876a258206a02d1045
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Thu May 6 10:23:08 2021 +0300

    mlxsw: spectrum_mr: Update egress RIF list before route's action
    
    commit cbaf3f6af9c268caf558c8e7ec52bcb35c5455dd upstream.
    
    Each multicast route that is forwarding packets (as opposed to trapping
    them) points to a list of egress router interfaces (RIFs) through which
    packets are replicated.
    
    A route's action can transition from trap to forward when a RIF is
    created for one of the route's egress virtual interfaces (eVIF). When
    this happens, the route's action is first updated and only later the
    list of egress RIFs is committed to the device.
    
    This results in the route pointing to an invalid list. In case the list
    pointer is out of range (due to uninitialized memory), the device will
    complain:
    
    mlxsw_spectrum2 0000:06:00.0: EMAD reg access failed (tid=5733bf490000905c,reg_id=300f(pefa),type=write,status=7(bad parameter))
    
    Fix this by first committing the list of egress RIFs to the device and
    only later update the route's action.
    
    Note that a fix is not needed in the reverse function (i.e.,
    mlxsw_sp_mr_route_evif_unresolve()), as there the route's action is
    first updated and only later the RIF is removed from the list.
    
    Cc: stable@vger.kernel.org
    Fixes: c011ec1bbfd6 ("mlxsw: spectrum: Add the multicast routing offloading logic")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Petr Machata <petrm@nvidia.com>
    Link: https://lore.kernel.org/r/20210506072308.3834303-1-idosch@idosch.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27a130638406815eba083c632ee083f0c5e688c2
Author: Chao Yu <chao@kernel.org>
Date:   Mon Mar 22 19:47:30 2021 +0800

    f2fs: fix to avoid out-of-bounds memory access
    
    commit b862676e371715456c9dade7990c8004996d0d9e upstream.
    
    butt3rflyh4ck <butterflyhuangxx@gmail.com> reported a bug found by
    syzkaller fuzzer with custom modifications in 5.12.0-rc3+ [1]:
    
     dump_stack+0xfa/0x151 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x82/0x32c mm/kasan/report.c:232
     __kasan_report mm/kasan/report.c:399 [inline]
     kasan_report.cold+0x7c/0xd8 mm/kasan/report.c:416
     f2fs_test_bit fs/f2fs/f2fs.h:2572 [inline]
     current_nat_addr fs/f2fs/node.h:213 [inline]
     get_next_nat_page fs/f2fs/node.c:123 [inline]
     __flush_nat_entry_set fs/f2fs/node.c:2888 [inline]
     f2fs_flush_nat_entries+0x258e/0x2960 fs/f2fs/node.c:2991
     f2fs_write_checkpoint+0x1372/0x6a70 fs/f2fs/checkpoint.c:1640
     f2fs_issue_checkpoint+0x149/0x410 fs/f2fs/checkpoint.c:1807
     f2fs_sync_fs+0x20f/0x420 fs/f2fs/super.c:1454
     __sync_filesystem fs/sync.c:39 [inline]
     sync_filesystem fs/sync.c:67 [inline]
     sync_filesystem+0x1b5/0x260 fs/sync.c:48
     generic_shutdown_super+0x70/0x370 fs/super.c:448
     kill_block_super+0x97/0xf0 fs/super.c:1394
    
    The root cause is, if nat entry in checkpoint journal area is corrupted,
    e.g. nid of journalled nat entry exceeds max nid value, during checkpoint,
    once it tries to flush nat journal to NAT area, get_next_nat_page() may
    access out-of-bounds memory on nat_bitmap due to it uses wrong nid value
    as bitmap offset.
    
    [1] https://lore.kernel.org/lkml/CAFcO6XOMWdr8pObek6eN6-fs58KG9doRFadgJj-FnF-1x43s2g@mail.gmail.com/T/#u
    
    Reported-and-tested-by: butt3rflyh4ck <butterflyhuangxx@gmail.com>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c9b98a66d0ae067b10030e8cc51b3e38923de17
Author: Guochun Mao <guochun.mao@mediatek.com>
Date:   Tue Mar 16 16:52:14 2021 +0800

    ubifs: Only check replay with inode type to judge if inode linked
    
    commit 3e903315790baf4a966436e7f32e9c97864570ac upstream.
    
    Conside the following case, it just write a big file into flash,
    when complete writing, delete the file, and then power off promptly.
    Next time power on, we'll get a replay list like:
    ...
    LEB 1105:211344 len 4144 deletion 0 sqnum 428783 key type 1 inode 80
    LEB 15:233544 len 160 deletion 1 sqnum 428785 key type 0 inode 80
    LEB 1105:215488 len 4144 deletion 0 sqnum 428787 key type 1 inode 80
    ...
    In the replay list, data nodes' deletion are 0, and the inode node's
    deletion is 1. In current logic, the file's dentry will be removed,
    but inode and the flash space it occupied will be reserved.
    User will see that much free space been disappeared.
    
    We only need to check the deletion value of the following inode type
    node of the replay entry.
    
    Fixes: e58725d51fa8 ("ubifs: Handle re-linking of inodes correctly while recovery")
    Cc: stable@vger.kernel.org
    Signed-off-by: Guochun Mao <guochun.mao@mediatek.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 310efc95c72c13faf855c692d19cd4d054d827c8
Author: Luis Henriques <lhenriques@suse.de>
Date:   Wed Mar 17 08:44:43 2021 +0000

    virtiofs: fix memory leak in virtio_fs_probe()
    
    commit c79c5e0178922a9e092ec8fed026750f39dcaef4 upstream.
    
    When accidentally passing twice the same tag to qemu, kmemleak ended up
    reporting a memory leak in virtiofs.  Also, looking at the log I saw the
    following error (that's when I realised the duplicated tag):
    
      virtiofs: probe of virtio5 failed with error -17
    
    Here's the kmemleak log for reference:
    
    unreferenced object 0xffff888103d47800 (size 1024):
      comm "systemd-udevd", pid 118, jiffies 4294893780 (age 18.340s)
      hex dump (first 32 bytes):
        00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........
        ff ff ff ff ff ff ff ff 80 90 02 a0 ff ff ff ff  ................
      backtrace:
        [<000000000ebb87c1>] virtio_fs_probe+0x171/0x7ae [virtiofs]
        [<00000000f8aca419>] virtio_dev_probe+0x15f/0x210
        [<000000004d6baf3c>] really_probe+0xea/0x430
        [<00000000a6ceeac8>] device_driver_attach+0xa8/0xb0
        [<00000000196f47a7>] __driver_attach+0x98/0x140
        [<000000000b20601d>] bus_for_each_dev+0x7b/0xc0
        [<00000000399c7b7f>] bus_add_driver+0x11b/0x1f0
        [<0000000032b09ba7>] driver_register+0x8f/0xe0
        [<00000000cdd55998>] 0xffffffffa002c013
        [<000000000ea196a2>] do_one_initcall+0x64/0x2e0
        [<0000000008f727ce>] do_init_module+0x5c/0x260
        [<000000003cdedab6>] __do_sys_finit_module+0xb5/0x120
        [<00000000ad2f48c6>] do_syscall_64+0x33/0x40
        [<00000000809526b5>] entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Luis Henriques <lhenriques@suse.de>
    Fixes: a62a8ef9d97d ("virtio-fs: add virtiofs filesystem")
    Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
    Reviewed-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b28e26bd7761fe01566c71a74794030fdde526c
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Apr 28 18:23:50 2021 -0700

    Makefile: Move -Wno-unused-but-set-variable out of GCC only block
    
    commit 885480b084696331bea61a4f7eba10652999a9c1 upstream.
    
    Currently, -Wunused-but-set-variable is only supported by GCC so it is
    disabled unconditionally in a GCC only block (it is enabled with W=1).
    clang currently has its implementation for this warning in review so
    preemptively move this statement out of the GCC only block and wrap it
    with cc-disable-warning so that both compilers function the same.
    
    Cc: stable@vger.kernel.org
    Link: https://reviews.llvm.org/D100581
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13a474c01353ab92b093eba6f812b36a16021f35
Author: Bill Wendling <morbo@google.com>
Date:   Fri Apr 23 13:51:59 2021 -0700

    arm64/vdso: Discard .note.gnu.property sections in vDSO
    
    [ Upstream commit 388708028e6937f3fc5fc19aeeb847f8970f489c ]
    
    The arm64 assembler in binutils 2.32 and above generates a program
    property note in a note section, .note.gnu.property, to encode used x86
    ISAs and features. But the kernel linker script only contains a single
    NOTE segment:
    
      PHDRS
      {
        text    PT_LOAD    FLAGS(5) FILEHDR PHDRS; /* PF_R|PF_X */
        dynamic PT_DYNAMIC FLAGS(4);               /* PF_R */
        note    PT_NOTE    FLAGS(4);               /* PF_R */
      }
    
    The NOTE segment generated by the vDSO linker script is aligned to 4 bytes.
    But the .note.gnu.property section must be aligned to 8 bytes on arm64.
    
      $ readelf -n vdso64.so
    
      Displaying notes found in: .note
        Owner                Data size      Description
        Linux                0x00000004     Unknown note type: (0x00000000)
         description data: 06 00 00 00
      readelf: Warning: note with invalid namesz and/or descsz found at offset 0x20
      readelf: Warning:  type: 0x78, namesize: 0x00000100, descsize: 0x756e694c, alignment: 8
    
    Since the note.gnu.property section in the vDSO is not checked by the
    dynamic linker, discard the .note.gnu.property sections in the vDSO.
    
    Similar to commit 4caffe6a28d31 ("x86/vdso: Discard .note.gnu.property
    sections in vDSO"), but for arm64.
    
    Signed-off-by: Bill Wendling <morbo@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Link: https://lore.kernel.org/r/20210423205159.830854-1-morbo@google.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f40bf82bf69397e85706a017b0575cf2b22bad52
Author: Filipe Manana <fdmanana@suse.com>
Date:   Tue Apr 20 10:55:44 2021 +0100

    btrfs: fix race when picking most recent mod log operation for an old root
    
    [ Upstream commit f9690f426b2134cc3e74bfc5d9dfd6a4b2ca5281 ]
    
    Commit dbcc7d57bffc0c ("btrfs: fix race when cloning extent buffer during
    rewind of an old root"), fixed a race when we need to rewind the extent
    buffer of an old root. It was caused by picking a new mod log operation
    for the extent buffer while getting a cloned extent buffer with an outdated
    number of items (off by -1), because we cloned the extent buffer without
    locking it first.
    
    However there is still another similar race, but in the opposite direction.
    The cloned extent buffer has a number of items that does not match the
    number of tree mod log operations that are going to be replayed. This is
    because right after we got the last (most recent) tree mod log operation to
    replay and before locking and cloning the extent buffer, another task adds
    a new pointer to the extent buffer, which results in adding a new tree mod
    log operation and incrementing the number of items in the extent buffer.
    So after cloning we have mismatch between the number of items in the extent
    buffer and the number of mod log operations we are going to apply to it.
    This results in hitting a BUG_ON() that produces the following stack trace:
    
       ------------[ cut here ]------------
       kernel BUG at fs/btrfs/tree-mod-log.c:675!
       invalid opcode: 0000 [#1] SMP KASAN PTI
       CPU: 3 PID: 4811 Comm: crawl_1215 Tainted: G        W         5.12.0-7d1efdf501f8-misc-next+ #99
       Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
       RIP: 0010:tree_mod_log_rewind+0x3b1/0x3c0
       Code: 05 48 8d 74 10 (...)
       RSP: 0018:ffffc90001027090 EFLAGS: 00010293
       RAX: 0000000000000000 RBX: ffff8880a8514600 RCX: ffffffffaa9e59b6
       RDX: 0000000000000007 RSI: dffffc0000000000 RDI: ffff8880a851462c
       RBP: ffffc900010270e0 R08: 00000000000000c0 R09: ffffed1004333417
       R10: ffff88802199a0b7 R11: ffffed1004333416 R12: 000000000000000e
       R13: ffff888135af8748 R14: ffff88818766ff00 R15: ffff8880a851462c
       FS:  00007f29acf62700(0000) GS:ffff8881f2200000(0000) knlGS:0000000000000000
       CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
       CR2: 00007f0e6013f718 CR3: 000000010d42e003 CR4: 0000000000170ee0
       Call Trace:
        btrfs_get_old_root+0x16a/0x5c0
        ? lock_downgrade+0x400/0x400
        btrfs_search_old_slot+0x192/0x520
        ? btrfs_search_slot+0x1090/0x1090
        ? free_extent_buffer.part.61+0xd7/0x140
        ? free_extent_buffer+0x13/0x20
        resolve_indirect_refs+0x3e9/0xfc0
        ? lock_downgrade+0x400/0x400
        ? __kasan_check_read+0x11/0x20
        ? add_prelim_ref.part.11+0x150/0x150
        ? lock_downgrade+0x400/0x400
        ? __kasan_check_read+0x11/0x20
        ? lock_acquired+0xbb/0x620
        ? __kasan_check_write+0x14/0x20
        ? do_raw_spin_unlock+0xa8/0x140
        ? rb_insert_color+0x340/0x360
        ? prelim_ref_insert+0x12d/0x430
        find_parent_nodes+0x5c3/0x1830
        ? stack_trace_save+0x87/0xb0
        ? resolve_indirect_refs+0xfc0/0xfc0
        ? fs_reclaim_acquire+0x67/0xf0
        ? __kasan_check_read+0x11/0x20
        ? lockdep_hardirqs_on_prepare+0x210/0x210
        ? fs_reclaim_acquire+0x67/0xf0
        ? __kasan_check_read+0x11/0x20
        ? ___might_sleep+0x10f/0x1e0
        ? __kasan_kmalloc+0x9d/0xd0
        ? trace_hardirqs_on+0x55/0x120
        btrfs_find_all_roots_safe+0x142/0x1e0
        ? find_parent_nodes+0x1830/0x1830
        ? trace_hardirqs_on+0x55/0x120
        ? ulist_free+0x1f/0x30
        ? btrfs_inode_flags_to_xflags+0x50/0x50
        iterate_extent_inodes+0x20e/0x580
        ? tree_backref_for_extent+0x230/0x230
        ? release_extent_buffer+0x225/0x280
        ? read_extent_buffer+0xdd/0x110
        ? lock_downgrade+0x400/0x400
        ? __kasan_check_read+0x11/0x20
        ? lock_acquired+0xbb/0x620
        ? __kasan_check_write+0x14/0x20
        ? do_raw_spin_unlock+0xa8/0x140
        ? _raw_spin_unlock+0x22/0x30
        ? release_extent_buffer+0x225/0x280
        iterate_inodes_from_logical+0x129/0x170
        ? iterate_inodes_from_logical+0x129/0x170
        ? btrfs_inode_flags_to_xflags+0x50/0x50
        ? iterate_extent_inodes+0x580/0x580
        ? __vmalloc_node+0x92/0xb0
        ? init_data_container+0x34/0xb0
        ? init_data_container+0x34/0xb0
        ? kvmalloc_node+0x60/0x80
        btrfs_ioctl_logical_to_ino+0x158/0x230
        btrfs_ioctl+0x2038/0x4360
        ? __kasan_check_write+0x14/0x20
        ? mmput+0x3b/0x220
        ? btrfs_ioctl_get_supported_features+0x30/0x30
        ? __kasan_check_read+0x11/0x20
        ? __kasan_check_read+0x11/0x20
        ? lock_release+0xc8/0x650
        ? __might_fault+0x64/0xd0
        ? __kasan_check_read+0x11/0x20
        ? lock_downgrade+0x400/0x400
        ? lockdep_hardirqs_on_prepare+0x210/0x210
        ? lockdep_hardirqs_on_prepare+0x13/0x210
        ? _raw_spin_unlock_irqrestore+0x51/0x63
        ? __kasan_check_read+0x11/0x20
        ? do_vfs_ioctl+0xfc/0x9d0
        ? ioctl_file_clone+0xe0/0xe0
        ? lock_downgrade+0x400/0x400
        ? lockdep_hardirqs_on_prepare+0x210/0x210
        ? __kasan_check_read+0x11/0x20
        ? lock_release+0xc8/0x650
        ? __task_pid_nr_ns+0xd3/0x250
        ? __kasan_check_read+0x11/0x20
        ? __fget_files+0x160/0x230
        ? __fget_light+0xf2/0x110
        __x64_sys_ioctl+0xc3/0x100
        do_syscall_64+0x37/0x80
        entry_SYSCALL_64_after_hwframe+0x44/0xae
       RIP: 0033:0x7f29ae85b427
       Code: 00 00 90 48 8b (...)
       RSP: 002b:00007f29acf5fcf8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
       RAX: ffffffffffffffda RBX: 00007f29acf5ff40 RCX: 00007f29ae85b427
       RDX: 00007f29acf5ff48 RSI: 00000000c038943b RDI: 0000000000000003
       RBP: 0000000001000000 R08: 0000000000000000 R09: 00007f29acf60120
       R10: 00005640d5fc7b00 R11: 0000000000000246 R12: 0000000000000003
       R13: 00007f29acf5ff48 R14: 00007f29acf5ff40 R15: 00007f29acf5fef8
       Modules linked in:
       ---[ end trace 85e5fce078dfbe04 ]---
    
      (gdb) l *(tree_mod_log_rewind+0x3b1)
      0xffffffff819e5b21 is in tree_mod_log_rewind (fs/btrfs/tree-mod-log.c:675).
      670                      * the modification. As we're going backwards, we do the
      671                      * opposite of each operation here.
      672                      */
      673                     switch (tm->op) {
      674                     case BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING:
      675                             BUG_ON(tm->slot < n);
      676                             fallthrough;
      677                     case BTRFS_MOD_LOG_KEY_REMOVE_WHILE_MOVING:
      678                     case BTRFS_MOD_LOG_KEY_REMOVE:
      679                             btrfs_set_node_key(eb, &tm->key, tm->slot);
      (gdb) quit
    
    The following steps explain in more detail how it happens:
    
    1) We have one tree mod log user (through fiemap or the logical ino ioctl),
       with a sequence number of 1, so we have fs_info->tree_mod_seq == 1.
       This is task A;
    
    2) Another task is at ctree.c:balance_level() and we have eb X currently as
       the root of the tree, and we promote its single child, eb Y, as the new
       root.
    
       Then, at ctree.c:balance_level(), we call:
    
          ret = btrfs_tree_mod_log_insert_root(root->node, child, true);
    
    3) At btrfs_tree_mod_log_insert_root() we create a tree mod log operation
       of type BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING, with a ->logical field
       pointing to ebX->start. We only have one item in eb X, so we create
       only one tree mod log operation, and store in the "tm_list" array;
    
    4) Then, still at btrfs_tree_mod_log_insert_root(), we create a tree mod
       log element of operation type BTRFS_MOD_LOG_ROOT_REPLACE, ->logical set
       to ebY->start, ->old_root.logical set to ebX->start, ->old_root.level
       set to the level of eb X and ->generation set to the generation of eb X;
    
    5) Then btrfs_tree_mod_log_insert_root() calls tree_mod_log_free_eb() with
       "tm_list" as argument. After that, tree_mod_log_free_eb() calls
       tree_mod_log_insert(). This inserts the mod log operation of type
       BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING from step 3 into the rbtree
       with a sequence number of 2 (and fs_info->tree_mod_seq set to 2);
    
    6) Then, after inserting the "tm_list" single element into the tree mod
       log rbtree, the BTRFS_MOD_LOG_ROOT_REPLACE element is inserted, which
       gets the sequence number 3 (and fs_info->tree_mod_seq set to 3);
    
    7) Back to ctree.c:balance_level(), we free eb X by calling
       btrfs_free_tree_block() on it. Because eb X was created in the current
       transaction, has no other references and writeback did not happen for
       it, we add it back to the free space cache/tree;
    
    8) Later some other task B allocates the metadata extent from eb X, since
       it is marked as free space in the space cache/tree, and uses it as a
       node for some other btree;
    
    9) The tree mod log user task calls btrfs_search_old_slot(), which calls
       btrfs_get_old_root(), and finally that calls tree_mod_log_oldest_root()
       with time_seq == 1 and eb_root == eb Y;
    
    10) The first iteration of the while loop finds the tree mod log element
        with sequence number 3, for the logical address of eb Y and of type
        BTRFS_MOD_LOG_ROOT_REPLACE;
    
    11) Because the operation type is BTRFS_MOD_LOG_ROOT_REPLACE, we don't
        break out of the loop, and set root_logical to point to
        tm->old_root.logical, which corresponds to the logical address of
        eb X;
    
    12) On the next iteration of the while loop, the call to
        tree_mod_log_search_oldest() returns the smallest tree mod log element
        for the logical address of eb X, which has a sequence number of 2, an
        operation type of BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING and
        corresponds to the old slot 0 of eb X (eb X had only 1 item in it
        before being freed at step 7);
    
    13) We then break out of the while loop and return the tree mod log
        operation of type BTRFS_MOD_LOG_ROOT_REPLACE (eb Y), and not the one
        for slot 0 of eb X, to btrfs_get_old_root();
    
    14) At btrfs_get_old_root(), we process the BTRFS_MOD_LOG_ROOT_REPLACE
        operation and set "logical" to the logical address of eb X, which was
        the old root. We then call tree_mod_log_search() passing it the logical
        address of eb X and time_seq == 1;
    
    15) But before calling tree_mod_log_search(), task B locks eb X, adds a
        key to eb X, which results in adding a tree mod log operation of type
        BTRFS_MOD_LOG_KEY_ADD, with a sequence number of 4, to the tree mod
        log, and increments the number of items in eb X from 0 to 1.
        Now fs_info->tree_mod_seq has a value of 4;
    
    16) Task A then calls tree_mod_log_search(), which returns the most recent
        tree mod log operation for eb X, which is the one just added by task B
        at the previous step, with a sequence number of 4, a type of
        BTRFS_MOD_LOG_KEY_ADD and for slot 0;
    
    17) Before task A locks and clones eb X, task A adds another key to eb X,
        which results in adding a new BTRFS_MOD_LOG_KEY_ADD mod log operation,
        with a sequence number of 5, for slot 1 of eb X, increments the
        number of items in eb X from 1 to 2, and unlocks eb X.
        Now fs_info->tree_mod_seq has a value of 5;
    
    18) Task A then locks eb X and clones it. The clone has a value of 2 for
        the number of items and the pointer "tm" points to the tree mod log
        operation with sequence number 4, not the most recent one with a
        sequence number of 5, so there is mismatch between the number of
        mod log operations that are going to be applied to the cloned version
        of eb X and the number of items in the clone;
    
    19) Task A then calls tree_mod_log_rewind() with the clone of eb X, the
        tree mod log operation with sequence number 4 and a type of
        BTRFS_MOD_LOG_KEY_ADD, and time_seq == 1;
    
    20) At tree_mod_log_rewind(), we set the local variable "n" with a value
        of 2, which is the number of items in the clone of eb X.
    
        Then in the first iteration of the while loop, we process the mod log
        operation with sequence number 4, which is targeted at slot 0 and has
        a type of BTRFS_MOD_LOG_KEY_ADD. This results in decrementing "n" from
        2 to 1.
    
        Then we pick the next tree mod log operation for eb X, which is the
        tree mod log operation with a sequence number of 2, a type of
        BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING and for slot 0, it is the one
        added in step 5 to the tree mod log tree.
    
        We go back to the top of the loop to process this mod log operation,
        and because its slot is 0 and "n" has a value of 1, we hit the BUG_ON:
    
            (...)
            switch (tm->op) {
            case BTRFS_MOD_LOG_KEY_REMOVE_WHILE_FREEING:
                    BUG_ON(tm->slot < n);
                    fallthrough;
            (...)
    
    Fix this by checking for a more recent tree mod log operation after locking
    and cloning the extent buffer of the old root node, and use it as the first
    operation to apply to the cloned extent buffer when rewinding it.
    
    Stable backport notes: due to moved code and renames, in =< 5.11 the
    change should be applied to ctree.c:get_old_root.
    
    Reported-by: Zygo Blaxell <ce3g8jdj@umail.furryterror.org>
    Link: https://lore.kernel.org/linux-btrfs/20210404040732.GZ32440@hungrycats.org/
    Fixes: 834328a8493079 ("Btrfs: tree mod log's old roots could still be part of the tree")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bc0131d5be051b88c7a70760d6d20e315dd3480
Author: Eckhart Mohr <e.mohr@tuxedocomputers.com>
Date:   Tue Apr 27 17:30:25 2021 +0200

    ALSA: hda/realtek: Add quirk for Intel Clevo PCx0Dx
    
    commit 970e3012c04c96351c413f193a9c909e6d871ce2 upstream.
    
    This applies a SND_PCI_QUIRK(...) to the Clevo PCx0Dx barebones. This
    fix enables audio output over the headset jack and ensures that a
    microphone connected via the headset combo jack is correctly recognized
    when pluged in.
    
    [ Rearranged the list entries in a sorted order -- tiwai ]
    
    Signed-off-by: Eckhart Mohr <e.mohr@tuxedocomputers.com>
    Co-developed-by: Werner Sembach <wse@tuxedocomputers.com>
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210427153025.451118-1-wse@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45392da1bd911f6f1d5599fffb98db842685fd61
Author: Sami Loone <sami@loone.fi>
Date:   Sun Apr 25 22:37:12 2021 +0200

    ALSA: hda/realtek: fix static noise on ALC285 Lenovo laptops
    
    commit 9bbb94e57df135ef61bef075d9c99b8d9e89e246 upstream.
    
    Remove a duplicate vendor+subvendor pin fixup entry as one is masking
    the other and making it unreachable. Consider the more specific newcomer
    as a second chance instead.
    
    The generic entry is made less strict to also match for laptops with
    slightly different 0x12 pin configuration. Tested on Lenovo Yoga 6 (AMD)
    where 0x12 is 0x40000000.
    
    Fixes: 607184cb1635 ("ALSA: hda/realtek - Add supported for more Lenovo ALC285 Headset Button")
    Signed-off-by: Sami Loone <sami@loone.fi>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YIXS+GT/dGI/LtK6@yoga
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee47a6414950a0edd95a8886bd222aef4dc7f558
Author: Phil Calvin <phil@philcalvin.com>
Date:   Thu Apr 15 18:01:29 2021 -0400

    ALSA: hda/realtek: fix mic boost on Intel NUC 8
    
    commit d1ee66c5d3c5a0498dd5e3f2af5b8c219a98bba5 upstream.
    
    Fix two bugs with the Intel HDA Realtek ALC233 sound codec
    present in Intel NUC NUC8i7BEH and probably a few other similar
    NUC models.
    
    These codecs advertise a 4-level microphone input boost amplifier on
    pin 0x19, but the highest two boost settings do not work correctly,
    and produce only low analog noise that does not seem to contain any
    discernible signal. There is an existing fixup for this exact problem
    but for a different PCI subsystem ID, so we re-use that logic.
    
    Changing the boost level also triggers a DC spike in the input signal
    that bleeds off over about a second and overwhelms any input during
    that time. Thankfully, the existing fixup has the side effect of
    making the boost control show up in userspace as a mute/unmute switch,
    and this keeps (e.g.) PulseAudio from fiddling with it during normal
    input volume adjustments.
    
    Finally, the NUC hardware has built-in inverted stereo mics. This
    patch also enables the usual fixup for this so the two channels cancel
    noise instead of the actual signal.
    
    [ Re-ordered the quirk entry point by tiwai ]
    
    Signed-off-by: Phil Calvin <phil@philcalvin.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/80dc5663-7734-e7e5-25ef-15b5df24511a@philcalvin.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d143cd1f8f6be9cd43fce1822f554074db9281da
Author: Luke D Jones <luke@ljones.dev>
Date:   Mon Apr 19 15:04:11 2021 +1200

    ALSA: hda/realtek: GA503 use same quirks as GA401
    
    commit 76fae6185f5456865ff1bcb647709d44fd987eb6 upstream.
    
    The GA503 has almost exactly the same default setup as the GA401
    model with the same issues. The GA401 quirks solve all the issues
    so we will use the full quirk chain.
    
    Signed-off-by: Luke D Jones <luke@ljones.dev>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210419030411.28304-1-luke@ljones.dev
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2b75e357816b15c67faaab637246b722de0444d
Author: Timo Gurr <timo.gurr@gmail.com>
Date:   Mon May 3 13:08:22 2021 +0200

    ALSA: usb-audio: Add dB range mapping for Sennheiser Communications Headset PC 8
    
    commit ab2165e2e6ed17345ffa8ee88ca764e8788ebcd7 upstream.
    
    The decibel volume range contains a negative maximum value resulting in
    pipewire complaining about the device and effectivly having no sound
    output. The wrong values also resulted in the headset sounding muted
    already at a mixer level of about ~25%.
    
    PipeWire BugLink: https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/1049
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=212897
    Signed-off-by: Timo Gurr <timo.gurr@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210503110822.10222-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2136ecfcf3d90ca3adb467db755c025e379b217d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Jan 5 15:47:26 2020 +0100

    ALSA: usb-audio: More constifications
    
    commit a01df925d1bbc97d6f7fe07b157aadb565315337 upstream.
    
    Apply const prefix to the remaining places: the static table for the
    unit information, the mixer maps, the validator tables, etc.
    
    Just for minor optimization and no functional changes.
    
    Link: https://lore.kernel.org/r/20200105144823.29547-12-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adba683c573dcd500ad7642d06886a8af37c50da
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Apr 13 10:41:52 2021 +0200

    ALSA: usb-audio: Explicitly set up the clock selector
    
    commit d2e8f641257d0d3af6e45d6ac2d6f9d56b8ea964 upstream.
    
    In the current code, we have some assumption that the audio clock
    selector has been set up implicitly and don't want to touch it unless
    it's really needed for the fallback autoclock setup.  This works for
    most devices but some seem having a problem.  Partially this was
    covered for the devices with a single connector at the initialization
    phase (commit 086b957cc17f "ALSA: usb-audio: Skip the clock selector
    inquiry for single connections"), but also there are cases where the
    wrong clock set up is kept silently.  The latter seems to be the cause
    of the noises on Behringer devices.
    
    In this patch, we explicitly set up the audio clock selector whenever
    the appropriate node is found.
    
    Reported-by: Geraldo Nascimento <geraldogabriel@gmail.com>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=199327
    Link: https://lore.kernel.org/r/CAEsQvcvF7LnO8PxyyCxuRCx=7jNeSCvFAd-+dE0g_rd1rOxxdw@mail.gmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210413084152.32325-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93588ea2fbd40bebd8d168bd8f61e7ff82bed676
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Apr 26 07:55:41 2021 -0700

    ALSA: sb: Fix two use after free in snd_sb_qsound_build
    
    commit 4fb44dd2c1dda18606348acdfdb97e8759dde9df upstream.
    
    In snd_sb_qsound_build, snd_ctl_add(..,p->qsound_switch...) and
    snd_ctl_add(..,p->qsound_space..) are called. But the second
    arguments of snd_ctl_add() could be freed via snd_ctl_add_replace()
    ->snd_ctl_free_one(). After the error code is returned,
    snd_sb_qsound_destroy(p) is called in __error branch.
    
    But in snd_sb_qsound_destroy(), the freed p->qsound_switch and
    p->qsound_space are still used by snd_ctl_remove().
    
    My patch set p->qsound_switch and p->qsound_space to NULL if
    snd_ctl_add() failed to avoid the uaf bugs. But these codes need
    to further be improved with the code style.
    
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210426145541.8070-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1666f1ac383f5d62fcd54f88463406666821dc15
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:27:04 2021 +0200

    ALSA: hda/conexant: Re-order CX5066 quirk table entries
    
    commit 2e6a731296be9d356fdccee9fb6ae345dad96438 upstream.
    
    Just re-order the cx5066_fixups[] entries for HP devices for avoiding
    the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-14-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b53b72ef83fff77723ead0fe5e7104dff27437df
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Apr 26 06:11:29 2021 -0700

    ALSA: emu8000: Fix a use after free in snd_emu8000_create_mixer
    
    commit 1c98f574403dbcf2eb832d5535a10d967333ef2d upstream.
    
    Our code analyzer reported a uaf.
    
    In snd_emu8000_create_mixer, the callee snd_ctl_add(..,emu->controls[i])
    calls snd_ctl_add_replace(.., kcontrol,..). Inside snd_ctl_add_replace(),
    if error happens, kcontrol will be freed by snd_ctl_free_one(kcontrol).
    Then emu->controls[i] points to a freed memory, and the execution comes
    to __error branch of snd_emu8000_create_mixer. The freed emu->controls[i]
    is used in snd_ctl_remove(card, emu->controls[i]).
    
    My patch set emu->controls[i] to NULL if snd_ctl_add() failed to avoid
    the uaf.
    
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210426131129.4796-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a65181cfd953ac73e07fbeb2b06214e9ac9b5061
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Tue Apr 20 08:23:12 2021 +0200

    s390/archrandom: add parameter check for s390_arch_random_generate
    
    [ Upstream commit 28096067686c5a5cbd4c35b079749bd805df5010 ]
    
    A review of the code showed, that this function which is exposed
    within the whole kernel should do a parameter check for the
    amount of bytes requested. If this requested bytes is too high
    an unsigned int overflow could happen causing this function to
    try to memcpy a really big memory chunk.
    
    This is not a security issue as there are only two invocations
    of this function from arch/s390/include/asm/archrandom.h and both
    are not exposed to userland.
    
    Reported-by: Sven Schnelle <svens@linux.ibm.com>
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef00a39e2c7809969bb978e6c7032c8fade333e3
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Apr 15 15:08:13 2021 -0700

    scsi: libfc: Fix a format specifier
    
    [ Upstream commit 90d6697810f06aceea9de71ad836a8c7669789cd ]
    
    Since the 'mfs' member has been declared as 'u32' in include/scsi/libfc.h,
    use the %u format specifier instead of %hu. This patch fixes the following
    clang compiler warning:
    
    warning: format specifies type
          'unsigned short' but the argument has type 'u32' (aka 'unsigned int')
          [-Wformat]
                                 "lport->mfs:%hu\n", mfs, lport->mfs);
                                             ~~~          ^~~~~~~~~~
                                             %u
    
    Link: https://lore.kernel.org/r/20210415220826.29438-8-bvanassche@acm.org
    Cc: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02c13900477cdf9ad8d40dc76f648b52dd5f4386
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Apr 7 13:11:49 2021 +0800

    mfd: arizona: Fix rumtime PM imbalance on error
    
    [ Upstream commit fe6df2b48043bbe1e852b2320501d3b169363c35 ]
    
    pm_runtime_get_sync() will increase the rumtime PM counter
    even it returns an error. Thus a pairing decrement is needed
    to prevent refcount leak. Fix this by replacing this API with
    pm_runtime_resume_and_get(), which will not change the runtime
    PM counter on error.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d0e6dbd5fca9bb1d7be87716b872a0cbef041c1
Author: James Smart <jsmart2021@gmail.com>
Date:   Sun Apr 11 18:31:22 2021 -0700

    scsi: lpfc: Remove unsupported mbox PORT_CAPABILITIES logic
    
    [ Upstream commit b62232ba8caccaf1954e197058104a6478fac1af ]
    
    SLI-4 does not contain a PORT_CAPABILITIES mailbox command (only SLI-3
    does, and SLI-3 doesn't use it), yet there are SLI-4 code paths that have
    code to issue the command.  The command will always fail.
    
    Remove the code for the mailbox command and leave only the resulting
    "failure path" logic.
    
    Link: https://lore.kernel.org/r/20210412013127.2387-12-jsmart2021@gmail.com
    Co-developed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0756818b4d3bc56edbce084203c1a77241c0369c
Author: James Smart <jsmart2021@gmail.com>
Date:   Sun Apr 11 18:31:17 2021 -0700

    scsi: lpfc: Fix error handling for mailboxes completed in MBX_POLL mode
    
    [ Upstream commit 304ee43238fed517faa123e034b593905b8679f8 ]
    
    In SLI-4, when performing a mailbox command with MBX_POLL, the driver uses
    the BMBX register to send the command rather than the MQ. A flag is set
    indicating the BMBX register is active and saves the mailbox job struct
    (mboxq) in the mbox_active element of the adapter. The routine then waits
    for completion or timeout. The mailbox job struct is not freed by the
    routine. In cases of timeout, the adapter will be reset. The
    lpfc_sli_mbox_sys_flush() routine will clean up the mbox in preparation for
    the reset. It clears the BMBX active flag and marks the job structure as
    MBX_NOT_FINISHED. But, it never frees the mboxq job structure. Expectation
    in both normal completion and timeout cases is that the issuer of the mbx
    command will free the structure.  Unfortunately, not all calling paths are
    freeing the memory in cases of error.
    
    All calling paths were looked at and updated, if missing, to free the mboxq
    memory regardless of completion status.
    
    Link: https://lore.kernel.org/r/20210412013127.2387-7-jsmart2021@gmail.com
    Co-developed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f67fc8095bbe54cfac4d978b69f6a00cb8b4ee2b
Author: James Smart <jsmart2021@gmail.com>
Date:   Sun Apr 11 18:31:13 2021 -0700

    scsi: lpfc: Fix crash when a REG_RPI mailbox fails triggering a LOGO response
    
    [ Upstream commit fffd18ec6579c2d9c72b212169259062fe747888 ]
    
    Fix a crash caused by a double put on the node when the driver completed an
    ACC for an unsolicted abort on the same node.  The second put was executed
    by lpfc_nlp_not_used() and is wrong because the completion routine executes
    the nlp_put when the iocbq was released.  Additionally, the driver is
    issuing a LOGO then immediately calls lpfc_nlp_set_state to put the node
    into NPR.  This call does nothing.
    
    Remove the lpfc_nlp_not_used call and additional set_state in the
    completion routine.  Remove the lpfc_nlp_set_state post issue_logo.  Isn't
    necessary.
    
    Link: https://lore.kernel.org/r/20210412013127.2387-3-jsmart2021@gmail.com
    Co-developed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82bc134b93b514b500983fe3d5ab9b1939b15199
Author: Guchun Chen <guchun.chen@amd.com>
Date:   Tue Mar 30 17:52:18 2021 +0800

    drm/amdgpu: fix NULL pointer dereference
    
    [ Upstream commit 3c3dc654333f6389803cdcaf03912e94173ae510 ]
    
    ttm->sg needs to be checked before accessing its child member.
    
    Call Trace:
     amdgpu_ttm_backend_destroy+0x12/0x70 [amdgpu]
     ttm_bo_cleanup_memtype_use+0x3a/0x60 [ttm]
     ttm_bo_release+0x17d/0x300 [ttm]
     amdgpu_bo_unref+0x1a/0x30 [amdgpu]
     amdgpu_amdkfd_gpuvm_alloc_memory_of_gpu+0x78b/0x8b0 [amdgpu]
     kfd_ioctl_alloc_memory_of_gpu+0x118/0x220 [amdgpu]
     kfd_ioctl+0x222/0x400 [amdgpu]
     ? kfd_dev_is_large_bar+0x90/0x90 [amdgpu]
     __x64_sys_ioctl+0x8e/0xd0
     ? __context_tracking_exit+0x52/0x90
     do_syscall_64+0x33/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x7f97f264d317
    Code: b3 66 90 48 8b 05 71 4b 2d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 41 4b 2d 00 f7 d8 64 89 01 48
    RSP: 002b:00007ffdb402c338 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 00007f97f3cc63a0 RCX: 00007f97f264d317
    RDX: 00007ffdb402c380 RSI: 00000000c0284b16 RDI: 0000000000000003
    RBP: 00007ffdb402c380 R08: 00007ffdb402c428 R09: 00000000c4000004
    R10: 00000000c4000004 R11: 0000000000000246 R12: 00000000c0284b16
    R13: 0000000000000003 R14: 00007f97f3cc63a0 R15: 00007f8836200000
    
    Signed-off-by: Guchun Chen <guchun.chen@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b65414ea416847bcb01608c1538f5c75e0c1912
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 22 12:54:42 2021 +0100

    amdgpu: avoid incorrect %hu format string
    
    [ Upstream commit 7d98d416c2cc1c1f7d9508e887de4630e521d797 ]
    
    clang points out that the %hu format string does not match the type
    of the variables here:
    
    drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c:263:7: warning: format specifies type 'unsigned short' but the argument has type 'unsigned int' [-Wformat]
                                      version_major, version_minor);
                                      ^~~~~~~~~~~~~
    include/drm/drm_print.h:498:19: note: expanded from macro 'DRM_ERROR'
            __drm_err(fmt, ##__VA_ARGS__)
                      ~~~    ^~~~~~~~~~~
    
    Change it to a regular %u, the same way a previous patch did for
    another instance of the same warning.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 443fdd7b4bc3764331277ba8d89c93376870ddb5
Author: Qu Huang <jinsdb@126.com>
Date:   Sun Mar 21 16:28:18 2021 +0800

    drm/amdkfd: Fix cat debugfs hang_hws file causes system crash bug
    
    [ Upstream commit d73610211eec8aa027850982b1a48980aa1bc96e ]
    
    Here is the system crash log:
    [ 1272.884438] BUG: unable to handle kernel NULL pointer dereference at
    (null)
    [ 1272.884444] IP: [<          (null)>]           (null)
    [ 1272.884447] PGD 825b09067 PUD 8267c8067 PMD 0
    [ 1272.884452] Oops: 0010 [#1] SMP
    [ 1272.884509] CPU: 13 PID: 3485 Comm: cat Kdump: loaded Tainted: G
    [ 1272.884515] task: ffff9a38dbd4d140 ti: ffff9a37cd3b8000 task.ti:
    ffff9a37cd3b8000
    [ 1272.884517] RIP: 0010:[<0000000000000000>]  [<          (null)>]
    (null)
    [ 1272.884520] RSP: 0018:ffff9a37cd3bbe68  EFLAGS: 00010203
    [ 1272.884522] RAX: 0000000000000000 RBX: 0000000000000000 RCX:
    0000000000014d5f
    [ 1272.884524] RDX: fffffffffffffff4 RSI: 0000000000000001 RDI:
    ffff9a38aca4d200
    [ 1272.884526] RBP: ffff9a37cd3bbed0 R08: ffff9a38dcd5f1a0 R09:
    ffff9a31ffc07300
    [ 1272.884527] R10: ffff9a31ffc07300 R11: ffffffffaddd5e9d R12:
    ffff9a38b4e0fb00
    [ 1272.884529] R13: 0000000000000001 R14: ffff9a37cd3bbf18 R15:
    ffff9a38aca4d200
    [ 1272.884532] FS:  00007feccaa67740(0000) GS:ffff9a38dcd40000(0000)
    knlGS:0000000000000000
    [ 1272.884534] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1272.884536] CR2: 0000000000000000 CR3: 00000008267c0000 CR4:
    00000000003407e0
    [ 1272.884537] Call Trace:
    [ 1272.884544]  [<ffffffffade68940>] ? seq_read+0x130/0x440
    [ 1272.884548]  [<ffffffffade40f8f>] vfs_read+0x9f/0x170
    [ 1272.884552]  [<ffffffffade41e4f>] SyS_read+0x7f/0xf0
    [ 1272.884557]  [<ffffffffae374ddb>] system_call_fastpath+0x22/0x27
    [ 1272.884558] Code:  Bad RIP value.
    [ 1272.884562] RIP  [<          (null)>]           (null)
    [ 1272.884564]  RSP <ffff9a37cd3bbe68>
    [ 1272.884566] CR2: 0000000000000000
    
    Signed-off-by: Qu Huang <jinsdb@126.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c49981759450ab70a9d72b4a737fd87d115a72ec
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Tue Apr 6 23:47:25 2021 +0200

    drm/msm/mdp5: Do not multiply vclk line count by 100
    
    [ Upstream commit 377569f82ea8228c421cef4da33e056a900b58ca ]
    
    Neither vtotal nor drm_mode_vrefresh contain a value that is
    premultiplied by 100 making the x100 variable name incorrect and
    resulting in vclks_line to become 100 times larger than it is supposed
    to be.  The hardware counts 100 clockticks too many before tearcheck,
    leading to severe panel issues on at least the Sony Xperia lineup.
    
    This is likely an artifact from the original MDSS DSI panel driver where
    the calculation [1] corrected for a premultiplied reference framerate by
    100 [2].  It does not appear that the above values were ever
    premultiplied in the history of the DRM MDP5 driver.
    
    With this change applied the value written to the SYNC_CONFIG_VSYNC
    register is now identical to downstream kernels.
    
    [1]: https://source.codeaurora.org/quic/la/kernel/msm-3.18/tree/drivers/video/msm/mdss/mdss_mdp_intf_cmd.c?h=LA.UM.8.6.c26-02400-89xx.0#n288
    [2]: https://source.codeaurora.org/quic/la/kernel/msm-3.18/tree/drivers/video/msm/mdss/mdss_dsi_panel.c?h=LA.UM.8.6.c26-02400-89xx.0#n1648
    
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Link: https://lore.kernel.org/r/20210406214726.131534-3-marijn.suijten@somainline.org
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 336e7e75864002f415813b3602cd37d06d624932
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Tue Apr 6 23:47:24 2021 +0200

    drm/msm/mdp5: Configure PP_SYNC_HEIGHT to double the vtotal
    
    [ Upstream commit 2ad52bdb220de5ab348098e3482b01235d15a842 ]
    
    Leaving this at a close-to-maximum register value 0xFFF0 means it takes
    very long for the MDSS to generate a software vsync interrupt when the
    hardware TE interrupt doesn't arrive.  Configuring this to double the
    vtotal (like some downstream kernels) leads to a frame to take at most
    twice before the vsync signal, until hardware TE comes up.
    
    In this case the hardware interrupt responsible for providing this
    signal - "disp-te" gpio - is not hooked up to the mdp5 vsync/pp logic at
    all.  This solves severe panel update issues observed on at least the
    Xperia Loire and Tone series, until said gpio is properly hooked up to
    an irq.
    
    Suggested-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Link: https://lore.kernel.org/r/20210406214726.131534-2-marijn.suijten@somainline.org
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b56ad4febe67b8c0647c0a3e427e935a76dedb59
Author: Lingutla Chandrasekhar <clingutla@codeaurora.org>
Date:   Wed Apr 7 23:06:26 2021 +0100

    sched/fair: Ignore percpu threads for imbalance pulls
    
    [ Upstream commit 9bcb959d05eeb564dfc9cac13a59843a4fb2edf2 ]
    
    During load balance, LBF_SOME_PINNED will be set if any candidate task
    cannot be detached due to CPU affinity constraints. This can result in
    setting env->sd->parent->sgc->group_imbalance, which can lead to a group
    being classified as group_imbalanced (rather than any of the other, lower
    group_type) when balancing at a higher level.
    
    In workloads involving a single task per CPU, LBF_SOME_PINNED can often be
    set due to per-CPU kthreads being the only other runnable tasks on any
    given rq. This results in changing the group classification during
    load-balance at higher levels when in reality there is nothing that can be
    done for this affinity constraint: per-CPU kthreads, as the name implies,
    don't get to move around (modulo hotplug shenanigans).
    
    It's not as clear for userspace tasks - a task could be in an N-CPU cpuset
    with N-1 offline CPUs, making it an "accidental" per-CPU task rather than
    an intended one. KTHREAD_IS_PER_CPU gives us an indisputable signal which
    we can leverage here to not set LBF_SOME_PINNED.
    
    Note that the aforementioned classification to group_imbalance (when
    nothing can be done) is especially problematic on big.LITTLE systems, which
    have a topology the likes of:
    
      DIE [          ]
      MC  [    ][    ]
           0  1  2  3
           L  L  B  B
    
      arch_scale_cpu_capacity(L) < arch_scale_cpu_capacity(B)
    
    Here, setting LBF_SOME_PINNED due to a per-CPU kthread when balancing at MC
    level on CPUs [0-1] will subsequently prevent CPUs [2-3] from classifying
    the [0-1] group as group_misfit_task when balancing at DIE level. Thus, if
    CPUs [0-1] are running CPU-bound (misfit) tasks, ill-timed per-CPU kthreads
    can significantly delay the upgmigration of said misfit tasks. Systems
    relying on ASYM_PACKING are likely to face similar issues.
    
    Signed-off-by: Lingutla Chandrasekhar <clingutla@codeaurora.org>
    [Use kthread_is_per_cpu() rather than p->nr_cpus_allowed]
    [Reword changelog]
    Signed-off-by: Valentin Schneider <valentin.schneider@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lkml.kernel.org/r/20210407220628.3798191-2-valentin.schneider@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53995be39f937008b36c0d9e9fff91b86fbb1b77
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Thu Apr 8 12:31:20 2021 +0200

    media: gscpa/stv06xx: fix memory leak
    
    [ Upstream commit 4f4e6644cd876c844cdb3bea2dd7051787d5ae25 ]
    
    For two of the supported sensors the stv06xx driver allocates memory which
    is stored in sd->sensor_priv. This memory is freed on a disconnect, but if
    the probe() fails, then it isn't freed and so this leaks memory.
    
    Add a new probe_error() op that drivers can use to free any allocated
    memory in case there was a probe failure.
    
    Thanks to Pavel Skripkin <paskripkin@gmail.com> for discovering the cause
    of the memory leak.
    
    Reported-and-tested-by: syzbot+e7f4c64a4248a0340c37@syzkaller.appspotmail.com
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a855efb54260910d1766a9c50fc94f0fae30a85
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Mar 28 21:32:19 2021 +0200

    media: dvb-usb: fix memory leak in dvb_usb_adapter_init
    
    [ Upstream commit b7cd0da982e3043f2eec7235ac5530cb18d6af1d ]
    
    syzbot reported memory leak in dvb-usb. The problem was
    in invalid error handling in dvb_usb_adapter_init().
    
    for (n = 0; n < d->props.num_adapters; n++) {
    ....
            if ((ret = dvb_usb_adapter_stream_init(adap)) ||
                    (ret = dvb_usb_adapter_dvb_init(adap, adapter_nrs)) ||
                    (ret = dvb_usb_adapter_frontend_init(adap))) {
                    return ret;
            }
    ...
            d->num_adapters_initialized++;
    ...
    }
    
    In case of error in dvb_usb_adapter_dvb_init() or
    dvb_usb_adapter_dvb_init() d->num_adapters_initialized won't be
    incremented, but dvb_usb_adapter_exit() relies on it:
    
            for (n = 0; n < d->num_adapters_initialized; n++)
    
    So, allocated objects won't be freed.
    
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reported-by: syzbot+3c2be7424cea3b932b0e@syzkaller.appspotmail.com
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ca05c0e04d5ad791068eafc413681ba51478975
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Apr 7 07:43:13 2021 +0200

    media: platform: sti: Fix runtime PM imbalance in regs_show
    
    [ Upstream commit 69306a947b3ae21e0d1cbfc9508f00fec86c7297 ]
    
    pm_runtime_get_sync() will increase the runtime PM counter
    even it returns an error. Thus a pairing decrement is needed
    to prevent refcount leak. Fix this by replacing this API with
    pm_runtime_resume_and_get(), which will not change the runtime
    PM counter on error.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47be6867d2d0945d114c73855a5050a04dbf15c8
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Apr 6 15:50:53 2021 +0200

    media: i2c: adv7842: fix possible use-after-free in adv7842_remove()
    
    [ Upstream commit 4a15275b6a18597079f18241c87511406575179a ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6b97476053d5d1c4ec5c0d8646586d49ad05572
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Apr 6 15:49:45 2021 +0200

    media: i2c: tda1997: Fix possible use-after-free in tda1997x_remove()
    
    [ Upstream commit 7f820ab5d4eebfe2d970d32a76ae496a6c286f0f ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc265fb8e5498ce112c099033e49fc3340cb01a0
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Apr 6 15:48:12 2021 +0200

    media: i2c: adv7511-v4l2: fix possible use-after-free in adv7511_remove()
    
    [ Upstream commit 2c9541720c66899adf6f3600984cf3ef151295ad ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48304f37ce810fee0155c94dc531f4b76639060e
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Apr 6 15:42:46 2021 +0200

    media: adv7604: fix possible use-after-free in adv76xx_remove()
    
    [ Upstream commit fa56f5f1fe31c2050675fa63b84963ebd504a5b3 ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b76249a0a64e4b95bf69166da797140b38f3a890
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Apr 6 15:39:29 2021 +0200

    media: tc358743: fix possible use-after-free in tc358743_remove()
    
    [ Upstream commit 6107a4fdf8554a7aa9488bdc835bb010062fa8a9 ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b25324cf16f5539ee0487a23d2fc081ebb92b100
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Apr 7 17:19:03 2021 +0800

    power: supply: s3c_adc_battery: fix possible use-after-free in s3c_adc_bat_remove()
    
    [ Upstream commit 68ae256945d2abe9036a7b68af4cc65aff79d5b7 ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac22a96c7388757962488d766d9627e176f9f0e0
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Apr 7 17:17:06 2021 +0800

    power: supply: generic-adc-battery: fix possible use-after-free in gab_remove()
    
    [ Upstream commit b6cfa007b3b229771d9588970adb4ab3e0487f49 ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0be54070ba12332176695bb2e8680b2eaec16a6
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Apr 6 18:01:15 2021 +0100

    clk: socfpga: arria10: Fix memory leak of socfpga_clk on error return
    
    [ Upstream commit 657d4d1934f75a2d978c3cf2086495eaa542e7a9 ]
    
    There is an error return path that is not kfree'ing socfpga_clk leading
    to a memory leak. Fix this by adding in the missing kfree call.
    
    Addresses-Coverity: ("Resource leak")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210406170115.430990-1-colin.king@canonical.com
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 330753d38f26722612f60e2d9fd4d33159fa14a9
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Thu Mar 25 08:48:21 2021 +0100

    media: vivid: update EDID
    
    [ Upstream commit 443ec4bbc6116f6f492a7a1282bfd8422c862158 ]
    
    The EDID had a few mistakes as reported by edid-decode:
    
    Block 1, CTA-861 Extension Block:
      Video Data Block: For improved preferred timing interoperability, set 'Native detailed modes' to 1.
      Video Capability Data Block: S_PT is equal to S_IT and S_CE, so should be set to 0 instead.
    
    Fixed those.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71b75e6e2410bd7cc2e2eff48fda1a0b8b89fd02
Author: Muhammad Usama Anjum <musamaanjum@gmail.com>
Date:   Wed Mar 24 19:07:53 2021 +0100

    media: em28xx: fix memory leak
    
    [ Upstream commit 0ae10a7dc8992ee682ff0b1752ff7c83d472eef1 ]
    
    If some error occurs, URB buffers should also be freed. If they aren't
    freed with the dvb here, the em28xx_dvb_fini call doesn't frees the URB
    buffers as dvb is set to NULL. The function in which error occurs should
    do all the cleanup for the allocations it had done.
    
    Tested the patch with the reproducer provided by syzbot. This patch
    fixes the memleak.
    
    Reported-by: syzbot+889397c820fa56adf25d@syzkaller.appspotmail.com
    Signed-off-by: Muhammad Usama Anjum <musamaanjum@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfb42c1bcce8301b01b549434cae438bb6f5449e
Author: Ewan D. Milne <emilne@redhat.com>
Date:   Wed Mar 31 16:11:54 2021 -0400

    scsi: scsi_dh_alua: Remove check for ASC 24h in alua_rtpg()
    
    [ Upstream commit bc3f2b42b70eb1b8576e753e7d0e117bbb674496 ]
    
    Some arrays return ILLEGAL_REQUEST with ASC 00h if they don't support the
    RTPG extended header so remove the check for INVALID FIELD IN CDB.
    
    Link: https://lore.kernel.org/r/20210331201154.20348-1-emilne@redhat.com
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a22a9fde806e9ccf965396418532955536cc19a
Author: Kevin Barnett <kevin.barnett@microchip.com>
Date:   Thu Mar 11 14:17:48 2021 -0600

    scsi: smartpqi: Add new PCI IDs
    
    [ Upstream commit 75fbeacca3ad30835e903002dba98dd909b4dfff ]
    
    Add support for newer hardware.
    
    Link: https://lore.kernel.org/r/161549386882.25025.2594251735886014958.stgit@brunhilda
    Reviewed-by: Scott Benesh <scott.benesh@microchip.com>
    Reviewed-by: Scott Teel <scott.teel@microchip.com>
    Acked-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Kevin Barnett <kevin.barnett@microchip.com>
    Signed-off-by: Don Brace <don.brace@microchip.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7973764b5454607b5b794738b9e09b43cdc2d27a
Author: Murthy Bhat <Murthy.Bhat@microchip.com>
Date:   Thu Mar 11 14:15:03 2021 -0600

    scsi: smartpqi: Correct request leakage during reset operations
    
    [ Upstream commit b622a601a13ae5974c5b0aeecb990c224b8db0d9 ]
    
    While failing queued I/Os in TMF path, there was a request leak and hence
    stale entries in request pool with ref count being non-zero. In shutdown
    path we have a BUG_ON to catch stuck I/O either in firmware or in the
    driver. The stale requests caused a system crash. The I/O request pool
    leakage also lead to a significant performance drop.
    
    Link: https://lore.kernel.org/r/161549370379.25025.12793264112620796062.stgit@brunhilda
    Reviewed-by: Scott Teel <scott.teel@microchip.com>
    Reviewed-by: Scott Benesh <scott.benesh@microchip.com>
    Reviewed-by: Kevin Barnett <kevin.barnett@microchip.com>
    Signed-off-by: Murthy Bhat <Murthy.Bhat@microchip.com>
    Signed-off-by: Don Brace <don.brace@microchip.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d77ac088fd796ee983232400e3e1588ea63bf3a
Author: Xingui Yang <yangxingui@huawei.com>
Date:   Fri Mar 12 18:24:36 2021 +0800

    ata: ahci: Disable SXS for Hisilicon Kunpeng920
    
    [ Upstream commit 234e6d2c18f5b080cde874483c4c361f3ae7cffe ]
    
    On Hisilicon Kunpeng920, ESP is set to 1 by default for all ports of
    SATA controller. In some scenarios, some ports are not external SATA ports,
    and it cause disks connected to these ports to be identified as removable
    disks. So disable the SXS capability on the software side to prevent users
    from mistakenly considering non-removable disks as removable disks and
    performing related operations.
    
    Signed-off-by: Xingui Yang <yangxingui@huawei.com>
    Signed-off-by: Luo Jiaxing <luojiaxing@huawei.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Link: https://lore.kernel.org/r/1615544676-61926-1-git-send-email-luojiaxing@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f3daf672a13be0ad26a16aa588ec80be9a634ba
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Mar 22 07:53:56 2021 +0200

    mmc: sdhci-pci: Add PCI IDs for Intel LKF
    
    [ Upstream commit ee629112be8b4eff71d4d3d108a28bc7dc877e13 ]
    
    Add PCI IDs for Intel LKF eMMC and SD card host controllers.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20210322055356.24923-1-adrian.hunter@intel.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40fdaa2d149b2f37bee166770c50c5ba04e6ef9f
Author: Quinn Tran <qutran@marvell.com>
Date:   Mon Mar 29 01:52:22 2021 -0700

    scsi: qla2xxx: Fix use after free in bsg
    
    [ Upstream commit 2ce35c0821afc2acd5ee1c3f60d149f8b2520ce8 ]
    
    On bsg command completion, bsg_job_done() was called while qla driver
    continued to access the bsg_job buffer. bsg_job_done() would free up
    resources that ended up being reused by other task while the driver
    continued to access the buffers. As a result, driver was reading garbage
    data.
    
    localhost kernel: BUG: KASAN: use-after-free in sg_next+0x64/0x80
    localhost kernel: Read of size 8 at addr ffff8883228a3330 by task swapper/26/0
    localhost kernel:
    localhost kernel: CPU: 26 PID: 0 Comm: swapper/26 Kdump:
    loaded Tainted: G          OE    --------- -  - 4.18.0-193.el8.x86_64+debug #1
    localhost kernel: Hardware name: HP ProLiant DL360
    Gen9/ProLiant DL360 Gen9, BIOS P89 08/12/2016
    localhost kernel: Call Trace:
    localhost kernel: <IRQ>
    localhost kernel: dump_stack+0x9a/0xf0
    localhost kernel: print_address_description.cold.3+0x9/0x23b
    localhost kernel: kasan_report.cold.4+0x65/0x95
    localhost kernel: debug_dma_unmap_sg.part.12+0x10d/0x2d0
    localhost kernel: qla2x00_bsg_sp_free+0xaf6/0x1010 [qla2xxx]
    
    Link: https://lore.kernel.org/r/20210329085229.4367-6-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cb8ce1d79d32e940e729d61c0461f50293c1fd0
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Sat Mar 20 14:28:40 2021 +0100

    drm/vkms: fix misuse of WARN_ON
    
    [ Upstream commit b4142fc4d52d051d4d8df1fb6c569e5b445d369e ]
    
    vkms_vblank_simulate() uses WARN_ON for timing-dependent condition
    (timer overrun). This is a mis-use of WARN_ON, WARN_ON must be used
    to denote kernel bugs. Use pr_warn() instead.
    
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: syzbot+4fc21a003c8332eb0bdd@syzkaller.appspotmail.com
    Cc: Rodrigo Siqueira <rodrigosiqueiramelo@gmail.com>
    Cc: Melissa Wen <melissa.srw@gmail.com>
    Cc: Haneen Mohammed <hamohammed.sa@gmail.com>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: David Airlie <airlied@linux.ie>
    Cc: dri-devel@lists.freedesktop.org
    Cc: linux-kernel@vger.kernel.org
    Acked-by: Melissa Wen <melissa.srw@gmail.com>
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210320132840.1315853-1-dvyukov@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f67d5b6f9438968f6fcb305db578ab7437fd339
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Sat Mar 20 16:23:58 2021 -0700

    scsi: qla2xxx: Always check the return value of qla24xx_get_isp_stats()
    
    [ Upstream commit a2b2cc660822cae08c351c7f6b452bfd1330a4f7 ]
    
    This patch fixes the following Coverity warning:
    
        CID 361199 (#1 of 1): Unchecked return value (CHECKED_RETURN)
        3. check_return: Calling qla24xx_get_isp_stats without checking return
        value (as is done elsewhere 4 out of 5 times).
    
    Link: https://lore.kernel.org/r/20210320232359.941-7-bvanassche@acm.org
    Cc: Quinn Tran <qutran@marvell.com>
    Cc: Mike Christie <michael.christie@oracle.com>
    Cc: Himanshu Madhani <himanshu.madhani@oracle.com>
    Cc: Daniel Wagner <dwagner@suse.de>
    Cc: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48425948d2b6d675689cc70ea216c026cf0932c4
Author: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
Date:   Thu Mar 4 11:04:26 2021 -0500

    drm/amd/display: fix dml prefetch validation
    
    [ Upstream commit 8ee0fea4baf90e43efe2275de208a7809f9985bc ]
    
    Incorrect variable used, missing initialization during validation.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Dmytro Laktyushkin <Dmytro.Laktyushkin@amd.com>
    Reviewed-by: Eric Bernstein <Eric.Bernstein@amd.com>
    Acked-by: Solomon Chiu <solomon.chiu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd148571eab0db5094ead25da357f010e707d79f
Author: Anson Jacob <Anson.Jacob@amd.com>
Date:   Tue Mar 2 16:16:36 2021 -0500

    drm/amd/display: Fix UBSAN warning for not a valid value for type '_Bool'
    
    [ Upstream commit 6a30a92997eee49554f72b462dce90abe54a496f ]
    
    [Why]
    dc_cursor_position do not initialise position.translate_by_source when
    crtc or plane->state->fb is NULL. UBSAN caught this error in
    dce110_set_cursor_position, as the value was garbage.
    
    [How]
    Initialise dc_cursor_position structure elements to 0 in handle_cursor_update
    before calling get_cursor_position.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1471
    Reported-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Anson Jacob <Anson.Jacob@amd.com>
    Reviewed-by: Aurabindo Jayamohanan Pillai <Aurabindo.Pillai@amd.com>
    Acked-by: Solomon Chiu <solomon.chiu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e81f4da43b1d928add478ad3595dacb6f64605fc
Author: shaoyunl <shaoyun.liu@amd.com>
Date:   Tue Mar 9 10:30:15 2021 -0500

    drm/amdgpu : Fix asic reset regression issue introduce by 8f211fe8ac7c4f
    
    [ Upstream commit c8941550aa66b2a90f4b32c45d59e8571e33336e ]
    
    This recent change introduce SDMA interrupt info printing with irq->process function.
    These functions do not require a set function to enable/disable the irq
    
    Signed-off-by: shaoyunl <shaoyun.liu@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c0356ef2498c1a250fe3846f30293f828737309
Author: Anson Jacob <Anson.Jacob@amd.com>
Date:   Wed Mar 3 12:33:15 2021 -0500

    drm/amdkfd: Fix UBSAN shift-out-of-bounds warning
    
    [ Upstream commit 50e2fc36e72d4ad672032ebf646cecb48656efe0 ]
    
    If get_num_sdma_queues or get_num_xgmi_sdma_queues is 0, we end up
    doing a shift operation where the number of bits shifted equals
    number of bits in the operand. This behaviour is undefined.
    
    Set num_sdma_queues or num_xgmi_sdma_queues to ULLONG_MAX, if the
    count is >= number of bits in the operand.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1472
    
    Reported-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Anson Jacob <Anson.Jacob@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Tested-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 888b482dbe261d7aea74f704bd9dc6883dc5459b
Author: Jonathan Kim <jonathan.kim@amd.com>
Date:   Wed Jan 27 15:24:59 2021 -0500

    drm/amdgpu: mask the xgmi number of hops reported from psp to kfd
    
    [ Upstream commit 4ac5617c4b7d0f0a8f879997f8ceaa14636d7554 ]
    
    The psp supplies the link type in the upper 2 bits of the psp xgmi node
    information num_hops field.  With a new link type, Aldebaran has these
    bits set to a non-zero value (1 = xGMI3) so the KFD topology will report
    the incorrect IO link weights without proper masking.
    The actual number of hops is located in the 3 least significant bits of
    this field so mask if off accordingly before passing it to the KFD.
    
    Signed-off-by: Jonathan Kim <jonathan.kim@amd.com>
    Reviewed-by: Amber Lin <amber.lin@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d802ad28f9cc5778e057d64d733503d23a0aca7
Author: dongjian <dongjian@yulong.com>
Date:   Mon Mar 22 19:21:33 2021 +0800

    power: supply: Use IRQF_ONESHOT
    
    [ Upstream commit 2469b836fa835c67648acad17d62bc805236a6ea ]
    
    Fixes coccicheck error:
    
    drivers/power/supply/pm2301_charger.c:1089:7-27: ERROR:
    drivers/power/supply/lp8788-charger.c:502:8-28: ERROR:
    drivers/power/supply/tps65217_charger.c:239:8-33: ERROR:
    drivers/power/supply/tps65090-charger.c:303:8-33: ERROR:
    
    Threaded IRQ with no primary handler requested without IRQF_ONESHOT
    
    Signed-off-by: dongjian <dongjian@yulong.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc73cb52997d697fcd0733847d2dcef34746acd5
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Thu Mar 11 15:46:40 2021 +0100

    media: gspca/sq905.c: fix uninitialized variable
    
    [ Upstream commit eaaea4681984c79d2b2b160387b297477f0c1aab ]
    
    act_len can be uninitialized if usb_bulk_msg() returns an error.
    Set it to 0 to avoid a KMSAN error.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: syzbot+a4e309017a5f3a24c7b3@syzkaller.appspotmail.com
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bec3831f51081ee95ceae7d8f54da9ddedb29c11
Author: Daniel Niv <danielniv3@gmail.com>
Date:   Thu Mar 11 03:53:00 2021 +0100

    media: media/saa7164: fix saa7164_encoder_register() memory leak bugs
    
    [ Upstream commit c759b2970c561e3b56aa030deb13db104262adfe ]
    
    Add a fix for the memory leak bugs that can occur when the
    saa7164_encoder_register() function fails.
    The function allocates memory without explicitly freeing
    it when errors occur.
    Add a better error handling that deallocate the unused buffers before the
    function exits during a fail.
    
    Signed-off-by: Daniel Niv <danielniv3@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20065ae0056aa8ad9d34189b953d1998fb0a8e86
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Mar 7 16:17:57 2021 +0100

    extcon: arizona: Fix various races on driver unbind
    
    [ Upstream commit e5b499f6fb17bc95a813e85d0796522280203806 ]
    
    We must free/disable all interrupts and cancel all pending works
    before doing further cleanup.
    
    Before this commit arizona_extcon_remove() was doing several
    register writes to shut things down before disabling the IRQs
    and it was cancelling only 1 of the 3 different works used.
    
    Move all the register-writes shutting things down to after
    the disabling of the IRQs and add the 2 missing
    cancel_delayed_work_sync() calls.
    
    This fixes various possible races on driver unbind. One of which
    would always trigger on devices using the mic-clamp feature for
    jack detection. The ARIZONA_MICD_CLAMP_MODE_MASK update was
    done before disabling the IRQs, causing:
    1. arizona_jackdet() to run
    2. detect a jack being inserted (clamp disabled means jack inserted)
    3. call arizona_start_mic() which:
    3.1 Enables the MICVDD regulator
    3.2 takes a pm_runtime_reference
    
    And this was all happening after the ARIZONA_MICD_ENA bit clearing,
    which would undo 3.1 and 3.2 because the ARIZONA_MICD_CLAMP_MODE_MASK
    update was being done after the ARIZONA_MICD_ENA bit clearing.
    
    So this means that arizona_extcon_remove() would exit with
    1. MICVDD enabled and 2. The pm_runtime_reference being unbalanced.
    
    MICVDD still being enabled caused the following oops when the
    regulator is released by the devm framework:
    
    [ 2850.745757] ------------[ cut here ]------------
    [ 2850.745827] WARNING: CPU: 2 PID: 2098 at drivers/regulator/core.c:2123 _regulator_put.part.0+0x19f/0x1b0
    [ 2850.745835] Modules linked in: extcon_arizona ...
    ...
    [ 2850.746909] Call Trace:
    [ 2850.746932]  regulator_put+0x2d/0x40
    [ 2850.746946]  release_nodes+0x22a/0x260
    [ 2850.746984]  __device_release_driver+0x190/0x240
    [ 2850.747002]  driver_detach+0xd4/0x120
    ...
    [ 2850.747337] ---[ end trace f455dfd7abd9781f ]---
    
    Note this oops is just one of various theoretically possible races caused
    by the wrong ordering inside arizona_extcon_remove(), this fixes the
    ordering fixing all possible races, including the reported oops.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32990455bd12915c1c70e8a4424610a628f266e3
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Mar 7 16:17:56 2021 +0100

    extcon: arizona: Fix some issues when HPDET IRQ fires after the jack has been unplugged
    
    [ Upstream commit c309a3e8793f7e01c4a4ec7960658380572cb576 ]
    
    When the jack is partially inserted and then removed again it may be
    removed while the hpdet code is running. In this case the following
    may happen:
    
    1. The "JACKDET rise" or ""JACKDET fall" IRQ triggers
    2. arizona_jackdet runs and takes info->lock
    3. The "HPDET" IRQ triggers
    4. arizona_hpdet_irq runs, blocks on info->lock
    5. arizona_jackdet calls arizona_stop_mic() and clears info->hpdet_done
    6. arizona_jackdet releases info->lock
    7. arizona_hpdet_irq now can continue running and:
    7.1 Calls arizona_start_mic() (if a mic was detected)
    7.2 sets info->hpdet_done
    
    Step 7 is undesirable / a bug:
    7.1 causes the device to stay in a high power-state (with MICVDD enabled)
    7.2 causes hpdet to not run on the next jack insertion, which in turn
        causes the EXTCON_JACK_HEADPHONE state to never get set
    
    This fixes both issues by skipping these 2 steps when arizona_hpdet_irq
    runs after the jack has been unplugged.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Tested-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22ee443ac784f4dd52cb23c7d70cfcdf23ee21c5
Author: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
Date:   Wed Mar 3 10:54:19 2021 +0100

    power: supply: bq27xxx: fix power_avg for newer ICs
    
    [ Upstream commit c4d57c22ac65bd503716062a06fad55a01569cac ]
    
    On all newer bq27xxx ICs, the AveragePower register contains a signed
    value; in addition to handling the raw value as unsigned, the driver
    code also didn't convert it to µW as expected.
    
    At least for the BQ28Z610, the reference manual incorrectly states that
    the value is in units of 1mW and not 10mW. I have no way of knowing
    whether the manuals of other supported ICs contain the same error, or if
    there are models that actually use 1mW. At least, the new code shouldn't
    be *less* correct than the old version for any device.
    
    power_avg is removed from the cache structure, se we don't have to
    extend it to store both a signed value and an error code. Always getting
    an up-to-date value may be desirable anyways, as it avoids inconsistent
    current and power readings when switching between charging and
    discharging.
    
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bc128a1633324ab264be04e6e1f4d70f13a62dd
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Feb 15 05:26:47 2021 +0100

    media: imx: capture: Return -EPIPE from __capture_legacy_try_fmt()
    
    [ Upstream commit cc271b6754691af74d710b761eaf027e3743e243 ]
    
    The correct return code to report an invalid pipeline configuration is
    -EPIPE. Return it instead of -EINVAL from __capture_legacy_try_fmt()
    when the capture format doesn't match the media bus format of the
    connected subdev.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e18cee768a6ebb16b7ae9bfb908e05a786485c61
Author: Julian Braha <julianbraha@gmail.com>
Date:   Thu Feb 25 09:06:58 2021 +0100

    media: drivers: media: pci: sta2x11: fix Kconfig dependency on GPIOLIB
    
    [ Upstream commit 24df8b74c8b2fb42c49ffe8585562da0c96446ff ]
    
    When STA2X11_VIP is enabled, and GPIOLIB is disabled,
    Kbuild gives the following warning:
    
    WARNING: unmet direct dependencies detected for VIDEO_ADV7180
      Depends on [n]: MEDIA_SUPPORT [=y] && GPIOLIB [=n] && VIDEO_V4L2 [=y] && I2C [=y]
      Selected by [y]:
      - STA2X11_VIP [=y] && MEDIA_SUPPORT [=y] && MEDIA_PCI_SUPPORT [=y] && MEDIA_CAMERA_SUPPORT [=y] && PCI [=y] && VIDEO_V4L2 [=y] && VIRT_TO_BUS [=y] && I2C [=y] && (STA2X11 [=n] || COMPILE_TEST [=y]) && MEDIA_SUBDRV_AUTOSELECT [=y]
    
    This is because STA2X11_VIP selects VIDEO_ADV7180
    without selecting or depending on GPIOLIB,
    despite VIDEO_ADV7180 depending on GPIOLIB.
    
    Signed-off-by: Julian Braha <julianbraha@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2e71d2d797d3c3ecd89dd9863a667513a90e98a
Author: Sean Young <sean@mess.org>
Date:   Mon Feb 22 09:08:35 2021 +0100

    media: ite-cir: check for receive overflow
    
    [ Upstream commit 28c7afb07ccfc0a939bb06ac1e7afe669901c65a ]
    
    It's best if this condition is reported.
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78829d2ec594aec39bc3fe22348468c9805266b1
Author: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date:   Sat Feb 27 21:56:26 2021 -0800

    scsi: target: pscsi: Fix warning in pscsi_complete_cmd()
    
    [ Upstream commit fd48c056a32ed6e7754c7c475490f3bed54ed378 ]
    
    This fixes a compilation warning in pscsi_complete_cmd():
    
         drivers/target/target_core_pscsi.c: In function ‘pscsi_complete_cmd’:
         drivers/target/target_core_pscsi.c:624:5: warning: suggest braces around empty body in an ‘if’ statement [-Wempty-body]
         ; /* XXX: TCM_LOGICAL_UNIT_COMMUNICATION_FAILURE */
    
    Link: https://lore.kernel.org/r/20210228055645.22253-5-chaitanya.kulkarni@wdc.com
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a27784943a9622ec3a766b149c2eb0d24bb71383
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Mar 1 09:18:06 2021 -0800

    scsi: lpfc: Fix pt2pt connection does not recover after LOGO
    
    [ Upstream commit bd4f5100424d17d4e560d6653902ef8e49b2fc1f ]
    
    On a pt2pt setup, between 2 initiators, if one side issues a a LOGO, there
    is no relogin attempt. The FC specs are grey in this area on which port
    (higher wwn or not) is to re-login.
    
    As there is no spec guidance, unconditionally re-PLOGI after the logout to
    ensure a login is re-established.
    
    Link: https://lore.kernel.org/r/20210301171821.3427-8-jsmart2021@gmail.com
    Co-developed-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52d2b4370a9d65953cc69d6df2ade12ab0337094
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Mar 1 09:18:00 2021 -0800

    scsi: lpfc: Fix incorrect dbde assignment when building target abts wqe
    
    [ Upstream commit 9302154c07bff4e7f7f43c506a1ac84540303d06 ]
    
    The wqe_dbde field indicates whether a Data BDE is present in Words 0:2 and
    should therefore should be clear in the abts request wqe. By setting the
    bit we can be misleading fw into error cases.
    
    Clear the wqe_dbde field.
    
    Link: https://lore.kernel.org/r/20210301171821.3427-2-jsmart2021@gmail.com
    Co-developed-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b847dc1f6626c1b6f495ba842d172905e86cdba
Author: Aric Cyr <aric.cyr@amd.com>
Date:   Fri Feb 12 18:13:59 2021 -0500

    drm/amd/display: Don't optimize bandwidth before disabling planes
    
    [ Upstream commit 6ad98e8aeb0106f453bb154933e8355849244990 ]
    
    [Why]
    There is a window of time where we optimize bandwidth due to no streams
    enabled will enable PSTATE changing but HUBPs are not disabled yet.
    This results in underflow counter increasing in some hotplug scenarios.
    
    [How]
    Set the optimize-bandwidth flag for later processing once all the HUBPs
    are properly disabled.
    
    Signed-off-by: Aric Cyr <aric.cyr@amd.com>
    Acked-by: Bindu Ramamurthy <bindu.r@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84b03026cccc3642925c645d3fadaaad66437012
Author: Eryk Brol <eryk.brol@amd.com>
Date:   Tue Feb 9 17:09:52 2021 -0500

    drm/amd/display: Check for DSC support instead of ASIC revision
    
    [ Upstream commit 349a19b2f1b01e713268c7de9944ad669ccdf369 ]
    
    [why]
    This check for ASIC revision is no longer useful and causes
    lightup issues after a topology change in MST DSC scenario.
    In this case, DSC configs should be recalculated for the new
    topology. This check prevented that from happening on certain
    ASICs that do, in fact, support DSC.
    
    [how]
    Change the ASIC revision to instead check if DSC is supported.
    
    Signed-off-by: Eryk Brol <eryk.brol@amd.com>
    Acked-by: Bindu Ramamurthy <bindu.r@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbf11337ded89ce658d8c5cf846ee9868e22ad43
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Thu Feb 4 15:57:06 2021 +0100

    drm/qxl: release shadow on shutdown
    
    [ Upstream commit 4ca77c513537700d3fae69030879f781dde1904c ]
    
    In case we have a shadow surface on shutdown release
    it so it doesn't leak.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: http://patchwork.freedesktop.org/patch/msgid/20210204145712.1531203-6-kraxel@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7d964da5d17cd9b88773d99f6f0c0a3e1725b82
Author: Jared Baldridge <jrb@expunge.us>
Date:   Wed Jan 20 12:56:26 2021 -0800

    drm: Added orientation quirk for OneGX1 Pro
    
    [ Upstream commit 81ad7f9f78e4ff80e95be8282423f511b84f1166 ]
    
    The OneGX1 Pro has a fairly unique combination of generic strings,
    but we additionally match on the BIOS date just to be safe.
    
    Signed-off-by: Jared Baldridge <jrb@expunge.us>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/41288ccb-1012-486b-81c1-a24c31850c91@www.fastmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 567c83104471fcca2c677507d83ec63eb2dd6fc5
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Mar 12 15:25:21 2021 -0500

    btrfs: convert logic BUG_ON()'s in replace_path to ASSERT()'s
    
    [ Upstream commit 7a9213a93546e7eaef90e6e153af6b8fc7553f10 ]
    
    A few BUG_ON()'s in replace_path are purely to keep us from making
    logical mistakes, so replace them with ASSERT()'s.
    
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3260434687cc87223a708b862466644427bc6af6
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Fri Apr 16 20:12:44 2021 -0700

    platform/x86: intel_pmc_core: Don't use global pmcdev in quirks
    
    [ Upstream commit c9f86d6ca6b5e23d30d16ade4b9fff5b922a610a ]
    
    The DMI callbacks, used for quirks, currently access the PMC by getting
    the address a global pmc_dev struct. Instead, have the callbacks set a
    global quirk specific variable. In probe, after calling dmi_check_system(),
    pass pmc_dev to a function that will handle each quirk if its variable
    condition is met. This allows removing the global pmc_dev later.
    
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Rajneesh Bhardwaj <irenic.rajneesh@gmail.com>
    Link: https://lore.kernel.org/r/20210417031252.3020837-2-david.e.box@linux.intel.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 229d2c12f1eb4492df87988214d373fe001a378c
Author: Shixin Liu <liushixin2@huawei.com>
Date:   Thu Apr 8 15:18:39 2021 +0800

    crypto: omap-aes - Fix PM reference leak on omap-aes.c
    
    [ Upstream commit 1f34cc4a8da34fbb250efb928f9b8c6fe7ee0642 ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    Forgetting to putting operation will result in reference leak here.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Signed-off-by: Shixin Liu <liushixin2@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c411b92439da8447147b657bf4de48b9d517f43
Author: Shixin Liu <liushixin2@huawei.com>
Date:   Thu Apr 8 15:18:36 2021 +0800

    crypto: stm32/cryp - Fix PM reference leak on stm32-cryp.c
    
    [ Upstream commit 747bf30fd944f02f341b5f3bc7d97a13f2ae2fbe ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    Forgetting to putting operation will result in reference leak here.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Signed-off-by: Shixin Liu <liushixin2@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6d5c66737a9269bb28ee7efb1d186fe7d5bf336
Author: Shixin Liu <liushixin2@huawei.com>
Date:   Thu Apr 8 15:18:35 2021 +0800

    crypto: stm32/hash - Fix PM reference leak on stm32-hash.c
    
    [ Upstream commit 1cb3ad701970e68f18a9e5d090baf2b1b703d729 ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    Forgetting to putting operation will result in reference leak here.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Signed-off-by: Shixin Liu <liushixin2@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7138a6d6a4db90ded8df5f6b86658880e786a6d
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Apr 7 17:27:16 2021 +0800

    phy: phy-twl4030-usb: Fix possible use-after-free in twl4030_usb_remove()
    
    [ Upstream commit e1723d8b87b73ab363256e7ca3af3ddb75855680 ]
    
    This driver's remove path calls cancel_delayed_work(). However, that
    function does not wait until the work function finishes. This means
    that the callback function may still be running after the driver's
    remove function has finished, which would result in a use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which ensures that
    the work is properly cancelled, no longer running, and unable
    to re-schedule itself.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210407092716.3270248-1-yangyingliang@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 349f95248bcebd69accf523137505b49e47d46a7
Author: Pavel Machek <pavel@ucw.cz>
Date:   Wed Apr 14 20:12:49 2021 +0300

    intel_th: Consistency and off-by-one fix
    
    [ Upstream commit 18ffbc47d45a1489b664dd68fb3a7610a6e1dea3 ]
    
    Consistently use "< ... +1" in for loops.
    
    Fix of-by-one in for_each_set_bit().
    
    Signed-off-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/lkml/20190724095841.GA6952@amd/
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210414171251.14672-6-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86f4ac7ca4482390b044299f74b044265593519e
Author: Hillf Danton <hdanton@sina.com>
Date:   Mon Apr 12 11:57:58 2021 +0800

    tty: n_gsm: check error while registering tty devices
    
    [ Upstream commit 0a360e8b65d62fe1a994f0a8da4f8d20877b2100 ]
    
    Add the error path for registering tty devices and roll back in case of error
    in bid to avoid the UAF like the below one reported.
    
    Plus syzbot reported general protection fault in cdev_del() on Sep 24, 2020
    and both cases are down to the kobject_put() in tty_cdev_add().
    
     ------------[ cut here ]------------
     refcount_t: underflow; use-after-free.
     WARNING: CPU: 1 PID: 8923 at lib/refcount.c:28
     refcount_warn_saturate+0x1cf/0x210 -origin/lib/refcount.c:28
     Modules linked in:
     CPU: 1 PID: 8923 Comm: executor Not tainted 5.12.0-rc5+ #8
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
     1.13.0-1ubuntu1.1 04/01/2014
     RIP: 0010:refcount_warn_saturate+0x1cf/0x210 -origin/lib/refcount.c:28
     Code: 4f ff ff ff e8 32 fa b5 fe 48 c7 c7 3d f8 f6 86 e8 d6 ab c6 fe
     c6 05 7c 34 67 04 01 48 c7 c7 68 f8 6d 86 31 c0 e8 81 2e 9d fe <0f> 0b
     e9 22 ff ff ff e8 05 fa b5 fe 48 c7 c7 3e f8 f6 86 e8 a9 ab
     RSP: 0018:ffffc90001633c60 EFLAGS: 00010246
     RAX: 15d08b2e34b77800 RBX: 0000000000000003 RCX: ffff88804c056c80
     RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
     RBP: 0000000000000003 R08: ffffffff813767aa R09: 0001ffffffffffff
     R10: 0001ffffffffffff R11: ffff88804c056c80 R12: ffff888040b7d000
     R13: ffff88804c206938 R14: ffff88804c206900 R15: ffff888041b18488
     FS:  00000000022c9940(0000) GS:ffff88807ec00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007f9f9b122008 CR3: 0000000044b4b000 CR4: 0000000000750ee0
     PKRU: 55555554
     Call Trace:
      __refcount_sub_and_test -origin/./include/linux/refcount.h:283 [inline]
      __refcount_dec_and_test -origin/./include/linux/refcount.h:315 [inline]
      refcount_dec_and_test -origin/./include/linux/refcount.h:333 [inline]
      kref_put -origin/./include/linux/kref.h:64 [inline]
      kobject_put+0x17b/0x180 -origin/lib/kobject.c:753
      cdev_del+0x4b/0x50 -origin/fs/char_dev.c:597
      tty_unregister_device+0x99/0xd0 -origin/drivers/tty/tty_io.c:3343
      gsmld_detach_gsm -origin/drivers/tty/n_gsm.c:2409 [inline]
      gsmld_close+0x6c/0x140 -origin/drivers/tty/n_gsm.c:2478
      tty_ldisc_close -origin/drivers/tty/tty_ldisc.c:488 [inline]
      tty_ldisc_kill -origin/drivers/tty/tty_ldisc.c:636 [inline]
      tty_ldisc_release+0x1b6/0x400 -origin/drivers/tty/tty_ldisc.c:809
      tty_release_struct+0x19/0xb0 -origin/drivers/tty/tty_io.c:1714
      tty_release+0x9ad/0xa00 -origin/drivers/tty/tty_io.c:1885
      __fput+0x260/0x4e0 -origin/fs/file_table.c:280
      ____fput+0x11/0x20 -origin/fs/file_table.c:313
      task_work_run+0x8e/0x110 -origin/kernel/task_work.c:140
      tracehook_notify_resume -origin/./include/linux/tracehook.h:189 [inline]
      exit_to_user_mode_loop -origin/kernel/entry/common.c:174 [inline]
      exit_to_user_mode_prepare+0x16b/0x1a0 -origin/kernel/entry/common.c:208
      __syscall_exit_to_user_mode_work -origin/kernel/entry/common.c:290 [inline]
      syscall_exit_to_user_mode+0x20/0x40 -origin/kernel/entry/common.c:301
      do_syscall_64+0x45/0x80 -origin/arch/x86/entry/common.c:56
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Reported-by: syzbot+c49fe6089f295a05e6f8@syzkaller.appspotmail.com
    Reported-and-tested-by: Hao Sun <sunhao.th@gmail.com>
    Signed-off-by: Hillf Danton <hdanton@sina.com>
    Link: https://lore.kernel.org/r/20210412035758.1974-1-hdanton@sina.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 665dbcf35508b09ee8c861c1c174e9fa65ef32b4
Author: Bixuan Cui <cuibixuan@huawei.com>
Date:   Thu Apr 8 21:08:31 2021 +0800

    usb: core: hub: Fix PM reference leak in usb_port_resume()
    
    [ Upstream commit 025f97d188006eeee4417bb475a6878d1e0eed3f ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    thus a pairing decrement is needed.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Bixuan Cui <cuibixuan@huawei.com>
    Link: https://lore.kernel.org/r/20210408130831.56239-1-cuibixuan@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8035ac2ad0871cde3d3f8df81b1a8bdb53a8c81
Author: Bixuan Cui <cuibixuan@huawei.com>
Date:   Thu Apr 8 17:18:36 2021 +0800

    usb: musb: fix PM reference leak in musb_irq_work()
    
    [ Upstream commit 9535b99533904e9bc1607575aa8e9539a55435d7 ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    thus a pairing decrement is needed.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Bixuan Cui <cuibixuan@huawei.com>
    Link: https://lore.kernel.org/r/20210408091836.55227-1-cuibixuan@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 972639ed7b90fd4887b54bf3c644b85c8213dae5
Author: Wang Li <wangli74@huawei.com>
Date:   Fri Apr 9 09:54:58 2021 +0000

    spi: qup: fix PM reference leak in spi_qup_remove()
    
    [ Upstream commit cec77e0a249892ceb10061bf17b63f9fb111d870 ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    Forgetting to putting operation will result in reference leak here.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Li <wangli74@huawei.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/20210409095458.29921-1-wangli74@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0adc0e0c87ff2d48649ead1a91aac61a2f2c9e27
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri Apr 9 08:29:54 2021 +0000

    spi: omap-100k: Fix reference leak to master
    
    [ Upstream commit a23faea76d4cf5f75decb574491e66f9ecd707e7 ]
    
    Call spi_master_get() holds the reference count to master device, thus
    we need an additional spi_master_put() call to reduce the reference
    count, otherwise we will leak a reference to master.
    
    This commit fix it by removing the unnecessary spi_master_get().
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20210409082954.2906933-1-weiyongjun1@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6aa2fcd8566b9964e767aca0e4de1c89eccb36c
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri Apr 9 08:29:55 2021 +0000

    spi: dln2: Fix reference leak to master
    
    [ Upstream commit 9b844b087124c1538d05f40fda8a4fec75af55be ]
    
    Call spi_master_get() holds the reference count to master device, thus
    we need an additional spi_master_put() call to reduce the reference
    count, otherwise we will leak a reference to master.
    
    This commit fix it by removing the unnecessary spi_master_get().
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20210409082955.2907950-1-weiyongjun1@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99569ac2e97c55db5baa10317e8bf97ed3254534
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Tue Apr 6 10:02:07 2021 +0300

    xhci: fix potential array out of bounds with several interrupters
    
    [ Upstream commit 286fd02fd54b6acab65809549cf5fb3f2a886696 ]
    
    The Max Interrupters supported by the controller is given in a 10bit
    wide bitfield, but the driver uses a fixed 128 size array to index these
    interrupters.
    
    Klockwork reports a possible array out of bounds case which in theory
    is possible. In practice this hasn't been hit as a common number of Max
    Interrupters for new controllers is 8, not even close to 128.
    
    This needs to be fixed anyway
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210406070208.3406266-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99c82db050ae290d4cb7a7095b2a66ba5d9d81a4
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Tue Apr 6 10:02:06 2021 +0300

    xhci: check control context is valid before dereferencing it.
    
    [ Upstream commit 597899d2f7c5619c87185ee7953d004bd37fd0eb ]
    
    Don't dereference ctrl_ctx before checking it's valid.
    Issue reported by Klockwork
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210406070208.3406266-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f34d2ab34ed4732eb34329ec6eb5fc7fac0f479
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Wed Mar 31 17:05:53 2021 +0800

    usb: xhci-mtk: support quirk to disable usb2 lpm
    
    [ Upstream commit bee1f89aad2a51cd3339571bc8eadbb0dc88a683 ]
    
    The xHCI driver support usb2 HW LPM by default, here add support
    XHCI_HW_LPM_DISABLE quirk, then we can disable usb2 lpm when
    need it.
    
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/1617181553-3503-4-git-send-email-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d95748f23084bf88efd0313574674abc25ffcba6
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri Mar 26 16:02:41 2021 +0000

    perf/arm_pmu_platform: Fix error handling
    
    [ Upstream commit e338cb6bef254821a8c095018fd27254d74bfd6a ]
    
    If we're aborting after failing to register the PMU device,
    we probably don't want to leak the IRQs that we've claimed.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/53031a607fc8412a60024bfb3bb8cd7141f998f5.1616774562.git.robin.murphy@arm.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe53f8fd64d7ef200a189a4430e9cd6bc7f5d537
Author: Jerome Forissier <jerome@forissier.org>
Date:   Mon Mar 22 11:40:37 2021 +0100

    tee: optee: do not check memref size on return from Secure World
    
    [ Upstream commit c650b8dc7a7910eb25af0aac1720f778b29e679d ]
    
    When Secure World returns, it may have changed the size attribute of the
    memory references passed as [in/out] parameters. The GlobalPlatform TEE
    Internal Core API specification does not restrict the values that this
    size can take. In particular, Secure World may increase the value to be
    larger than the size of the input buffer to indicate that it needs more.
    
    Therefore, the size check in optee_from_msg_param() is incorrect and
    needs to be removed. This fixes a number of failed test cases in the
    GlobalPlatform TEE Initial Configuratiom Test Suite v2_0_0_0-2017_06_09
    when OP-TEE is compiled without dynamic shared memory support
    (CFG_CORE_DYN_SHM=n).
    
    Reviewed-by: Sumit Garg <sumit.garg@linaro.org>
    Suggested-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Jerome Forissier <jerome@forissier.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dda2bc82891c66fa8f6be41801d67660a7290690
Author: John Millikin <john@john-millikin.com>
Date:   Thu Mar 25 17:04:33 2021 -0700

    x86/build: Propagate $(CLANG_FLAGS) to $(REALMODE_FLAGS)
    
    [ Upstream commit 8abe7fc26ad8f28bfdf78adbed56acd1fa93f82d ]
    
    When cross-compiling with Clang, the `$(CLANG_FLAGS)' variable
    contains additional flags needed to build C and assembly sources
    for the target platform. Normally this variable is automatically
    included in `$(KBUILD_CFLAGS)' via the top-level Makefile.
    
    The x86 real-mode makefile builds `$(REALMODE_CFLAGS)' from a
    plain assignment and therefore drops the Clang flags. This causes
    Clang to not recognize x86-specific assembler directives:
    
      arch/x86/realmode/rm/header.S:36:1: error: unknown directive
      .type real_mode_header STT_OBJECT ; .size real_mode_header, .-real_mode_header
      ^
    
    Explicit propagation of `$(CLANG_FLAGS)' to `$(REALMODE_CFLAGS)',
    which is inherited by real-mode make rules, fixes cross-compilation
    with Clang for x86 targets.
    
    Relevant flags:
    
    * `--target' sets the target architecture when cross-compiling. This
      flag must be set for both compilation and assembly (`KBUILD_AFLAGS')
      to support architecture-specific assembler directives.
    
    * `-no-integrated-as' tells clang to assemble with GNU Assembler
      instead of its built-in LLVM assembler. This flag is set by default
      unless `LLVM_IAS=1' is set, because the LLVM assembler can't yet
      parse certain GNU extensions.
    
    Signed-off-by: John Millikin <john@john-millikin.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Link: https://lkml.kernel.org/r/20210326000435.4785-2-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee68dd4e502f2c295f3b72e82b10ecaf213c99fb
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Mar 16 16:51:40 2021 +0100

    PCI: PM: Do not read power state in pci_enable_device_flags()
    
    [ Upstream commit 4514d991d99211f225d83b7e640285f29f0755d0 ]
    
    It should not be necessary to update the current_state field of
    struct pci_dev in pci_enable_device_flags() before calling
    do_pci_enable_device() for the device, because none of the
    code between that point and the pci_set_power_state() call in
    do_pci_enable_device() invoked later depends on it.
    
    Moreover, doing that is actively harmful in some cases.  For example,
    if the given PCI device depends on an ACPI power resource whose _STA
    method initially returns 0 ("off"), but the config space of the PCI
    device is accessible and the power state retrieved from the
    PCI_PM_CTRL register is D0, the current_state field in the struct
    pci_dev representing that device will get out of sync with the
    power.state of its ACPI companion object and that will lead to
    power management issues going forward.
    
    To avoid such issues it is better to leave the current_state value
    as is until it is changed to PCI_D0 by do_pci_enable_device() as
    appropriate.  However, the power state of the device is not changed
    to PCI_D0 if it is already enabled when pci_enable_device_flags()
    gets called for it, so update its current_state in that case, but
    use pci_update_current_state() covering platform PM too for that.
    
    Link: https://lore.kernel.org/lkml/20210314000439.3138941-1-luzmaximilian@gmail.com/
    Reported-by: Maximilian Luz <luzmaximilian@gmail.com>
    Tested-by: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52b4b9d250d49df52647af0e4a3692fd16c105a5
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Wed Mar 10 19:43:21 2021 -0800

    usb: xhci: Fix port minor revision
    
    [ Upstream commit 64364bc912c01b33bba6c22e3ccb849bfca96398 ]
    
    Some hosts incorrectly use sub-minor version for minor version (i.e.
    0x02 instead of 0x20 for bcdUSB 0x320 and 0x01 for bcdUSB 0x310).
    Currently the xHCI driver works around this by just checking for minor
    revision > 0x01 for USB 3.1 everywhere. With the addition of USB 3.2,
    checking this gets a bit cumbersome. Since there is no USB release with
    bcdUSB 0x301 to 0x309, we can assume that sub-minor version 01 to 09 is
    incorrect. Let's try to fix this and use the minor revision that matches
    with the USB/xHCI spec to help with the version checking within the
    driver.
    
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/ed330e95a19dc367819c5b4d78bf7a541c35aa0a.1615432770.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c13c8354fd58b4fc321c9ae9590b6ed86e46673b
Author: Wesley Cheng <wcheng@codeaurora.org>
Date:   Fri Mar 19 02:31:25 2021 -0700

    usb: dwc3: gadget: Ignore EP queue requests during bus reset
    
    [ Upstream commit 71ca43f30df9c642970f9dc9b2d6f463f4967e7b ]
    
    The current dwc3_gadget_reset_interrupt() will stop any active
    transfers, but only addresses blocking of EP queuing for while we are
    coming from a disconnected scenario, i.e. after receiving the disconnect
    event.  If the host decides to issue a bus reset on the device, the
    connected parameter will still be set to true, allowing for EP queuing
    to continue while we are disabling the functions.  To avoid this, set the
    connected flag to false until the stop active transfers is complete.
    
    Signed-off-by: Wesley Cheng <wcheng@codeaurora.org>
    Link: https://lore.kernel.org/r/1616146285-19149-3-git-send-email-wcheng@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f3c7e0074b74094be3e99ed6d2d18debcb52e1f
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Mon Mar 1 13:49:34 2021 +0200

    usb: gadget: f_uac1: validate input parameters
    
    [ Upstream commit a59c68a6a3d1b18e2494f526eb19893a34fa6ec6 ]
    
    Currently user can configure UAC1 function with
    parameters that violate UAC1 spec or are not supported
    by UAC1 gadget implementation.
    
    This can lead to incorrect behavior if such gadget
    is connected to the host - like enumeration failure
    or other issues depending on host's UAC1 driver
    implementation, bringing user to a long hours
    of debugging the issue.
    
    Instead of silently accept these parameters, throw
    an error if they are not valid.
    
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Link: https://lore.kernel.org/r/1614599375-8803-5-git-send-email-ruslan.bilovol@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a10fb8a1c70a8003dfedf4e028004f937840bf94
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Mon Mar 1 13:49:33 2021 +0200

    usb: gadget: f_uac2: validate input parameters
    
    [ Upstream commit 3713d5ceb04d5ab6a5e2b86dfca49170053f3a5e ]
    
    Currently user can configure UAC2 function with
    parameters that violate UAC2 spec or are not supported
    by UAC2 gadget implementation.
    
    This can lead to incorrect behavior if such gadget
    is connected to the host - like enumeration failure
    or other issues depending on host's UAC2 driver
    implementation, bringing user to a long hours
    of debugging the issue.
    
    Instead of silently accept these parameters, throw
    an error if they are not valid.
    
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Link: https://lore.kernel.org/r/1614599375-8803-4-git-send-email-ruslan.bilovol@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a629f6bc034a1631b698dfc205603c7f973aafb9
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Mar 19 12:18:23 2021 +0100

    genirq/matrix: Prevent allocation counter corruption
    
    [ Upstream commit c93a5e20c3c2dabef8ea360a3d3f18c6f68233ab ]
    
    When irq_matrix_free() is called for an unallocated vector the
    managed_allocated and total_allocated counters get out of sync with the
    real state of the matrix. Later, when the last interrupt is freed, these
    counters will underflow resulting in UINTMAX because the counters are
    unsigned.
    
    While this is certainly a problem of the calling code, this can be catched
    in the allocator by checking the allocation bit for the to be freed vector
    which simplifies debugging.
    
    An example of the problem described above:
    https://lore.kernel.org/lkml/20210318192819.636943062@linutronix.de/
    
    Add the missing sanity check and emit a warning when it triggers.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20210319111823.1105248-1-vkuznets@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b2207a1966430faa1101b45b7e904e62efdec50
Author: Pawel Laszczak <pawell@cadence.com>
Date:   Mon Mar 15 08:17:48 2021 +0100

    usb: webcam: Invalid size of Processing Unit Descriptor
    
    [ Upstream commit 6a154ec9ef6762c774cd2b50215c7a8f0f08a862 ]
    
    According with USB Device Class Definition for Video Device the
    Processing Unit Descriptor bLength should be 12 (10 + bmControlSize),
    but it has 11.
    
    Invalid length caused that Processing Unit Descriptor Test Video form
    CV tool failed. To fix this issue patch adds bmVideoStandards into
    uvc_processing_unit_descriptor structure.
    
    The bmVideoStandards field was added in UVC 1.1 and it wasn't part of
    UVC 1.0a.
    
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Pawel Laszczak <pawell@cadence.com>
    Reviewed-by: Peter Chen <peter.chen@kernel.org>
    Link: https://lore.kernel.org/r/20210315071748.29706-1-pawell@gli-login.cadence.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cc65c749d582b683e5eefa085c638737d90004a
Author: Pawel Laszczak <pawell@cadence.com>
Date:   Mon Mar 8 13:53:38 2021 +0100

    usb: gadget: uvc: add bInterval checking for HS mode
    
    [ Upstream commit 26adde04acdff14a1f28d4a5dce46a8513a3038b ]
    
    Patch adds extra checking for bInterval passed by configfs.
    The 5.6.4 chapter of USB Specification (rev. 2.0) say:
    "A high-bandwidth endpoint must specify a period of 1x125 µs
    (i.e., a bInterval value of 1)."
    
    The issue was observed during testing UVC class on CV.
    I treat this change as improvement because we can control
    bInterval by configfs.
    
    Reviewed-by: Peter Chen <peter.chen@kernel.org>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Pawel Laszczak <pawell@cadence.com>
    Link: https://lore.kernel.org/r/20210308125338.4824-1-pawell@gli-login.cadence.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28da0edb56aea4531df86cddab5537ca94d803c8
Author: Hui Tang <tanghui20@huawei.com>
Date:   Fri Mar 5 14:35:01 2021 +0800

    crypto: qat - fix unmap invalid dma address
    
    [ Upstream commit 792b32fad548281e1b7fe14df9063a96c54b32a2 ]
    
    'dma_mapping_error' return a negative value if 'dma_addr' is equal to
    'DMA_MAPPING_ERROR' not zero, so fix initialization of 'dma_addr'.
    
    Signed-off-by: Hui Tang <tanghui20@huawei.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69f1a9702d3f7d96f50cd05c733c3c43a5b19741
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Mar 2 21:33:03 2021 +0100

    crypto: api - check for ERR pointers in crypto_destroy_tfm()
    
    [ Upstream commit 83681f2bebb34dbb3f03fecd8f570308ab8b7c2c ]
    
    Given that crypto_alloc_tfm() may return ERR pointers, and to avoid
    crashes on obscure error paths where such pointers are presented to
    crypto_destroy_tfm() (such as [0]), add an ERR_PTR check there
    before dereferencing the second argument as a struct crypto_tfm
    pointer.
    
    [0] https://lore.kernel.org/linux-crypto/000000000000de949705bc59e0f6@google.com/
    
    Reported-by: syzbot+12cf5fbfdeba210a89dd@syzkaller.appspotmail.com
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ac79bdcc0c44f4ea05fc64a573bfc3db95e3d19
Author: David Bauer <mail@david-bauer.net>
Date:   Wed Mar 3 17:08:37 2021 +0100

    spi: ath79: remove spi-master setup and cleanup assignment
    
    [ Upstream commit ffb597b2bd3cd78b9bfb68f536743cd46dbb2cc4 ]
    
    This removes the assignment of setup and cleanup functions for the ath79
    target. Assigning the setup-method will lead to 'setup_transfer' not
    being assigned in spi_bitbang_init. Because of this, performing any
    TX/RX operation will lead to a kernel oops.
    
    Also drop the redundant cleanup assignment, as it's also assigned in
    spi_bitbang_init.
    
    Signed-off-by: David Bauer <mail@david-bauer.net>
    Link: https://lore.kernel.org/r/20210303160837.165771-2-mail@david-bauer.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d6a20917fdae5563d0bd711831405f01ce73eb9
Author: David Bauer <mail@david-bauer.net>
Date:   Wed Mar 3 17:08:36 2021 +0100

    spi: ath79: always call chipselect function
    
    [ Upstream commit 19e2132174583beb90c1bd3e9c842bc6d5c944d1 ]
    
    spi-bitbang has to call the chipselect function on the ath79 SPI driver
    in order to communicate with the SPI slave device, as the ath79 SPI
    driver has three dedicated chipselect lines but can also be used with
    GPIOs for the CS lines.
    
    Fixes commit 4a07b8bcd503 ("spi: bitbang: Make chipselect callback optional")
    
    Signed-off-by: David Bauer <mail@david-bauer.net>
    Link: https://lore.kernel.org/r/20210303160837.165771-1-mail@david-bauer.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e24b9cded4bc9103dc3c75893fddc7e62b407f8d
Author: karthik alapati <mail@karthek.com>
Date:   Sun Feb 21 21:01:05 2021 +0530

    staging: wimax/i2400m: fix byte-order issue
    
    [ Upstream commit 0c37baae130df39b19979bba88bde2ee70a33355 ]
    
    fix sparse byte-order warnings by converting host byte-order
    type to __le16 byte-order types before assigning to hdr.length
    
    Signed-off-by: karthik alapati <mail@karthek.com>
    Link: https://lore.kernel.org/r/0ae5c5c4c646506d8be871e7be5705542671a1d5.1613921277.git.mail@karthek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce64f57a0fe0771379a24341b55823a676681a84
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Mar 8 11:35:07 2021 +0200

    bus: ti-sysc: Probe for l4_wkup and l4_cfg interconnect devices first
    
    [ Upstream commit 4700a00755fb5a4bb5109128297d6fd2d1272ee6 ]
    
    We want to probe l4_wkup and l4_cfg interconnect devices first to avoid
    issues with missing resources. Otherwise we attempt to probe l4_per
    devices first causing pointless deferred probe and also annoyingh
    renumbering of the MMC devices for example.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4928d3b02083c88a8089562469e4e250b4fe864c
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Wed Mar 31 23:07:19 2021 +0100

    fbdev: zero-fill colormap in fbcmap.c
    
    commit 19ab233989d0f7ab1de19a036e247afa4a0a1e9c upstream.
    
    Use kzalloc() rather than kmalloc() for the dynamically allocated parts
    of the colormap in fb_alloc_cmap_gfp, to prevent a leak of random kernel
    data to userspace under certain circumstances.
    
    Fixes a KMSAN-found infoleak bug reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=741578659feabd108ad9e06696f0c1f2e69c4b6e
    
    Reported-by: syzbot+47fa9c9c648b765305b9@syzkaller.appspotmail.com
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Link: https://lore.kernel.org/r/20210331220719.1499743-1-phil@philpotter.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c5cb86cdd7fd379f9f5ef70a494fee28394a4ae
Author: Chen Jun <chenjun102@huawei.com>
Date:   Wed Apr 14 03:04:49 2021 +0000

    posix-timers: Preserve return value in clock_adjtime32()
    
    commit 2d036dfa5f10df9782f5278fc591d79d283c1fad upstream.
    
    The return value on success (>= 0) is overwritten by the return value of
    put_old_timex32(). That works correct in the fault case, but is wrong for
    the success case where put_old_timex32() returns 0.
    
    Just check the return value of put_old_timex32() and return -EFAULT in case
    it is not zero.
    
    [ tglx: Massage changelog ]
    
    Fixes: 3a4d44b61625 ("ntp: Move adjtimex related compat syscalls to native counterparts")
    Signed-off-by: Chen Jun <chenjun102@huawei.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Richard Cochran <richardcochran@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210414030449.90692-1-chenjun102@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e07d0fd8d64fc05e60749b7210cc61e9e7f551f6
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Wed Apr 14 20:12:50 2021 +0300

    intel_th: pci: Add Rocket Lake CPU support
    
    commit 9f7f2a5e01ab4ee56b6d9c0572536fe5fd56e376 upstream.
    
    This adds support for the Trace Hub in Rocket Lake CPUs.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable <stable@vger.kernel.org> # v4.14+
    Link: https://lore.kernel.org/r/20210414171251.14672-7-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6635915a3c35ff3c781d6167077c9e45740480d
Author: Filipe Manana <fdmanana@suse.com>
Date:   Tue Apr 20 10:55:12 2021 +0100

    btrfs: fix metadata extent leak after failure to create subvolume
    
    commit 67addf29004c5be9fa0383c82a364bb59afc7f84 upstream.
    
    When creating a subvolume we allocate an extent buffer for its root node
    after starting a transaction. We setup a root item for the subvolume that
    points to that extent buffer and then attempt to insert the root item into
    the root tree - however if that fails, due to ENOMEM for example, we do
    not free the extent buffer previously allocated and we do not abort the
    transaction (as at that point we did nothing that can not be undone).
    
    This means that we effectively do not return the metadata extent back to
    the free space cache/tree and we leave a delayed reference for it which
    causes a metadata extent item to be added to the extent tree, in the next
    transaction commit, without having backreferences. When this happens
    'btrfs check' reports the following:
    
      $ btrfs check /dev/sdi
      Opening filesystem to check...
      Checking filesystem on /dev/sdi
      UUID: dce2cb9d-025f-4b05-a4bf-cee0ad3785eb
      [1/7] checking root items
      [2/7] checking extents
      ref mismatch on [30425088 16384] extent item 1, found 0
      backref 30425088 root 256 not referenced back 0x564a91c23d70
      incorrect global backref count on 30425088 found 1 wanted 0
      backpointer mismatch on [30425088 16384]
      owner ref check failed [30425088 16384]
      ERROR: errors found in extent allocation tree or chunk allocation
      [3/7] checking free space cache
      [4/7] checking fs roots
      [5/7] checking only csums items (without verifying data)
      [6/7] checking root refs
      [7/7] checking quota groups skipped (not enabled on this FS)
      found 212992 bytes used, error(s) found
      total csum bytes: 0
      total tree bytes: 131072
      total fs tree bytes: 32768
      total extent tree bytes: 16384
      btree space waste bytes: 124669
      file data blocks allocated: 65536
       referenced 65536
    
    So fix this by freeing the metadata extent if btrfs_insert_root() returns
    an error.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93f3339b22ba17e66f0808737467b70ba087eaec
Author: Paul Aurich <paul@darkrain42.org>
Date:   Tue Apr 13 14:25:27 2021 -0700

    cifs: Return correct error code from smb2_get_enc_key
    
    commit 83728cbf366e334301091d5b808add468ab46b27 upstream.
    
    Avoid a warning if the error percolates back up:
    
    [440700.376476] CIFS VFS: \\otters.example.com crypt_message: Could not get encryption key
    [440700.386947] ------------[ cut here ]------------
    [440700.386948] err = 1
    [440700.386977] WARNING: CPU: 11 PID: 2733 at /build/linux-hwe-5.4-p6lk6L/linux-hwe-5.4-5.4.0/lib/errseq.c:74 errseq_set+0x5c/0x70
    ...
    [440700.397304] CPU: 11 PID: 2733 Comm: tar Tainted: G           OE     5.4.0-70-generic #78~18.04.1-Ubuntu
    ...
    [440700.397334] Call Trace:
    [440700.397346]  __filemap_set_wb_err+0x1a/0x70
    [440700.397419]  cifs_writepages+0x9c7/0xb30 [cifs]
    [440700.397426]  do_writepages+0x4b/0xe0
    [440700.397444]  __filemap_fdatawrite_range+0xcb/0x100
    [440700.397455]  filemap_write_and_wait+0x42/0xa0
    [440700.397486]  cifs_setattr+0x68b/0xf30 [cifs]
    [440700.397493]  notify_change+0x358/0x4a0
    [440700.397500]  utimes_common+0xe9/0x1c0
    [440700.397510]  do_utimes+0xc5/0x150
    [440700.397520]  __x64_sys_utimensat+0x88/0xd0
    
    Fixes: 61cfac6f267d ("CIFS: Fix possible use after free in demultiplex thread")
    Signed-off-by: Paul Aurich <paul@darkrain42.org>
    CC: stable@vger.kernel.org
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7ea8e46e3b777be26aa855fe07778c415f24926
Author: He Ying <heying24@huawei.com>
Date:   Fri Apr 23 04:35:16 2021 -0400

    irqchip/gic-v3: Do not enable irqs when handling spurious interrups
    
    commit a97709f563a078e259bf0861cd259aa60332890a upstream.
    
    We triggered the following error while running our 4.19 kernel
    with the pseudo-NMI patches backported to it:
    
    [   14.816231] ------------[ cut here ]------------
    [   14.816231] kernel BUG at irq.c:99!
    [   14.816232] Internal error: Oops - BUG: 0 [#1] SMP
    [   14.816232] Process swapper/0 (pid: 0, stack limit = 0x(____ptrval____))
    [   14.816233] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G           O      4.19.95.aarch64 #14
    [   14.816233] Hardware name: evb (DT)
    [   14.816234] pstate: 80400085 (Nzcv daIf +PAN -UAO)
    [   14.816234] pc : asm_nmi_enter+0x94/0x98
    [   14.816235] lr : asm_nmi_enter+0x18/0x98
    [   14.816235] sp : ffff000008003c50
    [   14.816235] pmr_save: 00000070
    [   14.816237] x29: ffff000008003c50 x28: ffff0000095f56c0
    [   14.816238] x27: 0000000000000000 x26: ffff000008004000
    [   14.816239] x25: 00000000015e0000 x24: ffff8008fb916000
    [   14.816240] x23: 0000000020400005 x22: ffff0000080817cc
    [   14.816241] x21: ffff000008003da0 x20: 0000000000000060
    [   14.816242] x19: 00000000000003ff x18: ffffffffffffffff
    [   14.816243] x17: 0000000000000008 x16: 003d090000000000
    [   14.816244] x15: ffff0000095ea6c8 x14: ffff8008fff5ab40
    [   14.816244] x13: ffff8008fff58b9d x12: 0000000000000000
    [   14.816245] x11: ffff000008c8a200 x10: 000000008e31fca5
    [   14.816246] x9 : ffff000008c8a208 x8 : 000000000000000f
    [   14.816247] x7 : 0000000000000004 x6 : ffff8008fff58b9e
    [   14.816248] x5 : 0000000000000000 x4 : 0000000080000000
    [   14.816249] x3 : 0000000000000000 x2 : 0000000080000000
    [   14.816250] x1 : 0000000000120000 x0 : ffff0000095f56c0
    [   14.816251] Call trace:
    [   14.816251]  asm_nmi_enter+0x94/0x98
    [   14.816251]  el1_irq+0x8c/0x180                    (IRQ C)
    [   14.816252]  gic_handle_irq+0xbc/0x2e4
    [   14.816252]  el1_irq+0xcc/0x180                    (IRQ B)
    [   14.816253]  arch_timer_handler_virt+0x38/0x58
    [   14.816253]  handle_percpu_devid_irq+0x90/0x240
    [   14.816253]  generic_handle_irq+0x34/0x50
    [   14.816254]  __handle_domain_irq+0x68/0xc0
    [   14.816254]  gic_handle_irq+0xf8/0x2e4
    [   14.816255]  el1_irq+0xcc/0x180                    (IRQ A)
    [   14.816255]  arch_cpu_idle+0x34/0x1c8
    [   14.816255]  default_idle_call+0x24/0x44
    [   14.816256]  do_idle+0x1d0/0x2c8
    [   14.816256]  cpu_startup_entry+0x28/0x30
    [   14.816256]  rest_init+0xb8/0xc8
    [   14.816257]  start_kernel+0x4c8/0x4f4
    [   14.816257] Code: 940587f1 d5384100 b9401001 36a7fd01 (d4210000)
    [   14.816258] Modules linked in: start_dp(O) smeth(O)
    [   15.103092] ---[ end trace 701753956cb14aa8 ]---
    [   15.103093] Kernel panic - not syncing: Fatal exception in interrupt
    [   15.103099] SMP: stopping secondary CPUs
    [   15.103100] Kernel Offset: disabled
    [   15.103100] CPU features: 0x36,a2400218
    [   15.103100] Memory Limit: none
    
    which is cause by a 'BUG_ON(in_nmi())' in nmi_enter().
    
    From the call trace, we can find three interrupts (noted A, B, C above):
    interrupt (A) is preempted by (B), which is further interrupted by (C).
    
    Subsequent investigations show that (B) results in nmi_enter() being
    called, but that it actually is a spurious interrupt. Furthermore,
    interrupts are reenabled in the context of (B), and (C) fires with
    NMI priority. We end-up with a nested NMI situation, something
    we definitely do not want to (and cannot) handle.
    
    The bug here is that spurious interrupts should never result in any
    state change, and we should just return to the interrupted context.
    Moving the handling of spurious interrupts as early as possible in
    the GICv3 handler fixes this issue.
    
    Fixes: 3f1f3234bc2d ("irqchip/gic-v3: Switch to PMR masking before calling IRQ handler")
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: He Ying <heying24@huawei.com>
    [maz: rewrote commit message, corrected Fixes: tag]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210423083516.170111-1-heying24@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13b0a28e6fef6643360375b40510548ba51eee59
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Jul 28 23:33:33 2020 +0200

    modules: inherit TAINT_PROPRIETARY_MODULE
    
    commit 262e6ae7081df304fc625cf368d5c2cbba2bb991 upstream.
    
    If a TAINT_PROPRIETARY_MODULE exports symbol, inherit the taint flag
    for all modules importing these symbols, and don't allow loading
    symbols from TAINT_PROPRIETARY_MODULE modules if the module previously
    imported gplonly symbols.  Add a anti-circumvention devices so people
    don't accidentally get themselves into trouble this way.
    
    Comment from Greg:
      "Ah, the proven-to-be-illegal "GPL Condom" defense :)"
    
    [jeyu: pr_info -> pr_err and pr_warn as per discussion]
    Link: http://lore.kernel.org/r/20200730162957.GA22469@lst.de
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd5a738e28acc126eacfc802d260ccc78ed2d147
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:26 2020 +0200

    modules: return licensing information from find_symbol
    
    commit ef1dac6021cc8ec5de02ce31722bf26ac4ed5523 upstream.
    
    Report the GPLONLY status through a new argument.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4698910a9afc8cee7f0ade4abc867a290300f23
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:25 2020 +0200

    modules: rename the licence field in struct symsearch to license
    
    commit cd8732cdcc37d7077c4fa2c966b748c0662b607e upstream.
    
    Use the same spelling variant as the rest of the file.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7500d4999431211638ea7f3572b09bc274edeb96
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:24 2020 +0200

    modules: unexport __module_address
    
    commit 34e64705ad415ed7a816e60ef62b42fe6d1729d9 upstream.
    
    __module_address is only used by built-in code.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad6d414703d7ee4fa33ebc1f0578aeff0e97bd7d
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:23 2020 +0200

    modules: unexport __module_text_address
    
    commit 3fe1e56d0e68b623dd62d8d38265d2a052e7e185 upstream.
    
    __module_text_address is only used by built-in code.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86de29b833e6311a099ce8102411b01d03d205d8
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:22 2020 +0200

    modules: mark each_symbol_section static
    
    commit a54e04914c211b5678602a46b3ede5d82ec1327d upstream.
    
    each_symbol_section is only used inside of module.c.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79100b191e71c1df8a80af5ba5e5979d4e9dec6e
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:21 2020 +0200

    modules: mark find_symbol static
    
    commit 773110470e2fa3839523384ae014f8a723c4d178 upstream.
    
    find_symbol is only used in module.c.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e38daf2e5db63611fa52ba57b9089d3be1a345d
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 30 08:10:20 2020 +0200

    modules: mark ref_module static
    
    commit 7ef5264de773279b9f23b6cc8afb5addb30e970b upstream.
    
    ref_module isn't used anywhere outside of module.c.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 909a01b95120248b933b27474bb0d1b9b6fb1ffa
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Wed Mar 10 16:29:00 2021 +0100

    mmc: core: Fix hanging on I/O during system suspend for removable cards
    
    commit 17a17bf50612e6048a9975450cf1bd30f93815b5 upstream.
    
    The mmc core uses a PM notifier to temporarily during system suspend, turn
    off the card detection mechanism for removal/insertion of (e)MMC/SD/SDIO
    cards. Additionally, the notifier may be used to remove an SDIO card
    entirely, if a corresponding SDIO functional driver don't have the system
    suspend/resume callbacks assigned. This behaviour has been around for a
    very long time.
    
    However, a recent bug report tells us there are problems with this
    approach. More precisely, when receiving the PM_SUSPEND_PREPARE
    notification, we may end up hanging on I/O to be completed, thus also
    preventing the system from getting suspended.
    
    In the end what happens, is that the cancel_delayed_work_sync() in
    mmc_pm_notify() ends up waiting for mmc_rescan() to complete - and since
    mmc_rescan() wants to claim the host, it needs to wait for the I/O to be
    completed first.
    
    Typically, this problem is triggered in Android, if there is ongoing I/O
    while the user decides to suspend, resume and then suspend the system
    again. This due to that after the resume, an mmc_rescan() work gets punted
    to the workqueue, which job is to verify that the card remains inserted
    after the system has resumed.
    
    To fix this problem, userspace needs to become frozen to suspend the I/O,
    prior to turning off the card detection mechanism. Therefore, let's drop
    the PM notifiers for mmc subsystem altogether and rely on the card
    detection to be turned off/on as a part of the system_freezable_wq, that we
    are already using.
    
    Moreover, to allow and SDIO card to be removed during system suspend, let's
    manage this from a ->prepare() callback, assigned at the mmc_host_class
    level. In this way, we can use the parent device (the mmc_host_class
    device), to remove the card device that is the child, in the
    device_prepare() phase.
    
    Reported-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20210310152900.149380-1-ulf.hansson@linaro.org
    Reviewed-by: Kiwoong Kim <kwmad.kim@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c80524b9e418352395debcd9e0835bbde94323f3
Author: Seunghui Lee <sh043.lee@samsung.com>
Date:   Mon Feb 22 17:31:56 2021 +0900

    mmc: core: Set read only for SD cards with permanent write protect bit
    
    commit 917a5336f2c27928be270226ab374ed0cbf3805d upstream.
    
    Some of SD cards sets permanent write protection bit in their CSD register,
    due to lifespan or internal problem. To avoid unnecessary I/O write
    operations, let's parse the bits in the CSD during initialization and mark
    the card as read only for this case.
    
    Signed-off-by: Seunghui Lee <sh043.lee@samsung.com>
    Link: https://lore.kernel.org/r/20210222083156.19158-1-sh043.lee@samsung.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42998c98ce9f974d7625d2cfa011691c430f2ad6
Author: DooHyun Hwang <dh0421.hwang@samsung.com>
Date:   Wed Feb 10 13:59:36 2021 +0900

    mmc: core: Do a power cycle when the CMD11 fails
    
    commit 147186f531ae49c18b7a9091a2c40e83b3d95649 upstream.
    
    A CMD11 is sent to the SD/SDIO card to start the voltage switch procedure
    into 1.8V I/O. According to the SD spec a power cycle is needed of the
    card, if it turns out that the CMD11 fails. Let's fix this, to allow a
    retry of the initialization without the voltage switch, to succeed.
    
    Note that, whether it makes sense to also retry with the voltage switch
    after the power cycle is a bit more difficult to know. At this point, we
    treat it like the CMD11 isn't supported and therefore we skip it when
    retrying.
    
    Signed-off-by: DooHyun Hwang <dh0421.hwang@samsung.com>
    Link: https://lore.kernel.org/r/20210210045936.7809-1-dh0421.hwang@samsung.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b45fcf11d285b34057a37f9ed9e5185df4f8673
Author: Avri Altman <avri.altman@wdc.com>
Date:   Sun Apr 25 09:02:06 2021 +0300

    mmc: block: Issue a cache flush only when it's enabled
    
    commit 97fce126e279690105ee15be652b465fd96f9997 upstream.
    
    In command queueing mode, the cache isn't flushed via the mmc_flush_cache()
    function, but instead by issuing a CMDQ_TASK_MGMT (CMD48) with a
    FLUSH_CACHE opcode. In this path, we need to check if cache has been
    enabled, before deciding to flush the cache, along the lines of what's
    being done in mmc_flush_cache().
    
    To fix this problem, let's add a new bus ops callback ->cache_enabled() and
    implement it for the mmc bus type. In this way, the mmc block device driver
    can call it to know whether cache flushing should be done.
    
    Fixes: 1e8e55b67030 (mmc: block: Add CQE support)
    Cc: stable@vger.kernel.org
    Reported-by: Brendan Peter <bpeter@lytx.com>
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Tested-by: Brendan Peter <bpeter@lytx.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20210425060207.2591-2-avri.altman@wdc.com
    Link: https://lore.kernel.org/r/20210425060207.2591-3-avri.altman@wdc.com
    [Ulf: Squashed the two patches and made some minor updates]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fb68f705c5606c3f4a4ed57479b0367263ce8aa
Author: Avri Altman <avri.altman@wdc.com>
Date:   Tue Apr 20 16:46:41 2021 +0300

    mmc: block: Update ext_csd.cache_ctrl if it was written
    
    commit aea0440ad023ab0662299326f941214b0d7480bd upstream.
    
    The cache function can be turned ON and OFF by writing to the CACHE_CTRL
    byte (EXT_CSD byte [33]).  However,  card->ext_csd.cache_ctrl is only
    set on init if cache size > 0.
    
    Fix that by explicitly setting ext_csd.cache_ctrl on ext-csd write.
    
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210420134641.57343-3-avri.altman@wdc.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e438ff2d967cc7e50a318590d19dadb01683a40
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Mar 31 11:17:52 2021 +0300

    mmc: sdhci-pci: Fix initialization of some SD cards for Intel BYT-based controllers
    
    commit 2970134b927834e9249659a70aac48e62dff804a upstream.
    
    Bus power may control card power, but the full reset done by SDHCI at
    initialization still may not reset the power, whereas a direct write to
    SDHCI_POWER_CONTROL can. That might be needed to initialize correctly, if
    the card was left powered on previously.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210331081752.23621-1-adrian.hunter@intel.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 698df555cc5fd74f1e4b846c4d574384ede9a9e4
Author: Pradeep P V K <pragalla@codeaurora.org>
Date:   Wed Mar 3 14:02:11 2021 +0530

    mmc: sdhci: Check for reset prior to DMA address unmap
    
    commit 21e35e898aa9ef7781632959db8613a5380f2eae upstream.
    
    For data read commands, SDHC may initiate data transfers even before it
    completely process the command response. In case command itself fails,
    driver un-maps the memory associated with data transfer but this memory
    can still be accessed by SDHC for the already initiated data transfer.
    This scenario can lead to un-mapped memory access error.
    
    To avoid this scenario, reset SDHC (when command fails) prior to
    un-mapping memory. Resetting SDHC ensures that all in-flight data
    transfers are either aborted or completed. So we don't run into this
    scenario.
    
    Swap the reset, un-map steps sequence in sdhci_request_done().
    
    Suggested-by: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
    Signed-off-by: Pradeep P V K <pragalla@codeaurora.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/1614760331-43499-1-git-send-email-pragalla@qti.qualcomm.com
    Cc: stable@vger.kernel.org # v4.9+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d8941b9b2d3e7b3481fdf43b1a6189d162175b7
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Feb 20 15:29:53 2021 +0100

    mmc: uniphier-sd: Fix a resource leak in the remove function
    
    commit e29c84857e2d51aa017ce04284b962742fb97d9e upstream.
    
    A 'tmio_mmc_host_free()' call is missing in the remove function, in order
    to balance a 'tmio_mmc_host_alloc()' call in the probe.
    This is done in the error handling path of the probe, but not in the remove
    function.
    
    Add the missing call.
    
    Fixes: 3fd784f745dd ("mmc: uniphier-sd: add UniPhier SD/eMMC controller driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Masahiro Yamada <masahiroy@kernel.org>
    Link: https://lore.kernel.org/r/20210220142953.918608-1-christophe.jaillet@wanadoo.fr
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06e48bb631d38215b2c1ccb05930fc97d55fe6e6
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Feb 20 15:29:35 2021 +0100

    mmc: uniphier-sd: Fix an error handling path in uniphier_sd_probe()
    
    commit b03aec1c1f337dfdae44cdb0645ecac34208ae0a upstream.
    
    A 'uniphier_sd_clk_enable()' call should be balanced by a corresponding
    'uniphier_sd_clk_disable()' call.
    This is done in the remove function, but not in the error handling path of
    the probe.
    
    Add the missing call.
    
    Fixes: 3fd784f745dd ("mmc: uniphier-sd: add UniPhier SD/eMMC controller driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Masahiro Yamada <masahiroy@kernel.org>
    Link: https://lore.kernel.org/r/20210220142935.918554-1-christophe.jaillet@wanadoo.fr
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21171ede433752497e8be9805aa2f8585d715d17
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Tue Mar 30 16:21:37 2021 +0530

    scsi: mpt3sas: Block PCI config access from userspace during reset
    
    commit 3c8604691d2acc7b7d4795d9695070de9eaa5828 upstream.
    
    While diag reset is in progress there is short duration where all access to
    controller's PCI config space from the host needs to be blocked. This is
    due to a hardware limitation of the IOC controllers.
    
    Block all access to controller's config space from userland applications by
    calling pci_cfg_access_lock() while diag reset is in progress and unlocking
    it again after the controller comes back to ready state.
    
    Link: https://lore.kernel.org/r/20210330105137.20728-1-sreekanth.reddy@broadcom.com
    Cc: stable@vger.kernel.org #v5.4.108+
    Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77509a238547863040a42d57c72403f7d4c89a8f
Author: Arun Easi <aeasi@marvell.com>
Date:   Mon Mar 29 01:52:23 2021 -0700

    scsi: qla2xxx: Fix crash in qla2xxx_mqueuecommand()
    
    commit 6641df81ab799f28a5d564f860233dd26cca0d93 upstream.
    
        RIP: 0010:kmem_cache_free+0xfa/0x1b0
        Call Trace:
           qla2xxx_mqueuecommand+0x2b5/0x2c0 [qla2xxx]
           scsi_queue_rq+0x5e2/0xa40
           __blk_mq_try_issue_directly+0x128/0x1d0
           blk_mq_request_issue_directly+0x4e/0xb0
    
    Fix incorrect call to free srb in qla2xxx_mqueuecommand(), as srb is now
    allocated by upper layers. This fixes smatch warning of srb unintended
    free.
    
    Link: https://lore.kernel.org/r/20210329085229.4367-7-njavali@marvell.com
    Fixes: af2a0c51b120 ("scsi: qla2xxx: Fix SRB leak on switch command timeout")
    Cc: stable@vger.kernel.org # 5.5
    Reported-by: Laurence Oberman <loberman@redhat.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e45acaddd64b7fad5662d9c7cc71689c6901369c
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Thu Feb 18 15:09:50 2021 +0200

    spi: spi-ti-qspi: Free DMA resources
    
    commit 1d309cd688a76fb733f0089d36dc630327b32d59 upstream.
    
    Release the RX channel and free the dma coherent memory when
    devm_spi_register_master() fails.
    
    Fixes: 5720ec0a6d26 ("spi: spi-ti-qspi: Add DMA support for QSPI mmap read")
    Cc: stable@vger.kernel.org
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20210218130950.90155-1-tudor.ambarus@microchip.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c57af0be7722a2c896af76a985200930c95428bf
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Mon Mar 29 08:36:14 2021 +0800

    erofs: add unsupported inode i_format check
    
    commit 24a806d849c0b0c1d0cd6a6b93ba4ae4c0ec9f08 upstream.
    
    If any unknown i_format fields are set (may be of some new incompat
    inode features), mark such inode as unsupported.
    
    Just in case of any new incompat i_format fields added in the future.
    
    Link: https://lore.kernel.org/r/20210329003614.6583-1-hsiangkao@aol.com
    Fixes: 431339ba9042 ("staging: erofs: add inode operations")
    Cc: <stable@vger.kernel.org> # 4.19+
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49fc21a47e93d047991220b0030bd635e8257371
Author: Kai Stuhlemmer (ebee Engineering) <kai.stuhlemmer@ebee.de>
Date:   Mon Mar 22 17:07:14 2021 +0200

    mtd: rawnand: atmel: Update ecc_stats.corrected counter
    
    commit 33cebf701e98dd12b01d39d1c644387b27c1a627 upstream.
    
    Update MTD ECC statistics with the number of corrected bits.
    
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kai Stuhlemmer (ebee Engineering) <kai.stuhlemmer@ebee.de>
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210322150714.101585-1-tudor.ambarus@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ef6813bb3a4f6a9470254497c0a935b70728b51
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Tue Mar 23 17:37:19 2021 +0000

    mtd: spinand: core: add missing MODULE_DEVICE_TABLE()
    
    commit 25fefc88c71f47db0466570335e3f75f10952e7a upstream.
    
    The module misses MODULE_DEVICE_TABLE() for both SPI and OF ID tables
    and thus never autoloads on ID matches.
    Add the missing declarations.
    Present since day-0 of spinand framework introduction.
    
    Fixes: 7529df465248 ("mtd: nand: Add core infrastructure to support SPI NANDs")
    Cc: stable@vger.kernel.org # 4.19+
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210323173714.317884-1-alobakin@pm.me
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd1772305002f3ebdc2e38586ea8e729d44d402c
Author: Jeffrey Mitchell <jeffrey.mitchell@starlab.io>
Date:   Fri Feb 26 15:00:23 2021 -0600

    ecryptfs: fix kernel panic with null dev_name
    
    commit 9046625511ad8dfbc8c6c2de16b3532c43d68d48 upstream.
    
    When mounting eCryptfs, a null "dev_name" argument to ecryptfs_mount()
    causes a kernel panic if the parsed options are valid. The easiest way to
    reproduce this is to call mount() from userspace with an existing
    eCryptfs mount's options and a "source" argument of 0.
    
    Error out if "dev_name" is null in ecryptfs_mount()
    
    Fixes: 237fead61998 ("[PATCH] ecryptfs: fs/Makefile and fs/Kconfig")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeffrey Mitchell <jeffrey.mitchell@starlab.io>
    Signed-off-by: Tyler Hicks <code@tyhicks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e057164f8731266d3b554b0b89f5bea66ab93824
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Tue Mar 16 17:22:24 2021 +0800

    arm64: dts: mt8173: fix property typo of 'phys' in dsi node
    
    commit e4e5d030bd779fb8321d3b8bd65406fbe0827037 upstream.
    
    Use 'phys' instead of 'phy'.
    
    Fixes: 81ad4dbaf7af ("arm64: dts: mt8173: Add display subsystem related nodes")
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Reviewed-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210316092232.9806-5-chunfeng.yun@mediatek.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 527edae13d24e64d70d52ec81d7ebb5e50dc90da
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Jan 14 13:40:23 2021 +0100

    arm64: dts: marvell: armada-37xx: add syscon compatible to NB clk node
    
    commit 1d88358a89dbac9c7d4559548b9a44840456e6fb upstream.
    
    Add "syscon" compatible to the North Bridge clocks node to allow the
    cpufreq driver to access these registers via syscon API.
    
    This is needed for a fix of cpufreq driver.
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Fixes: e8d66e7927b2 ("arm64: dts: marvell: armada-37xx: add nodes...")
    Cc: stable@vger.kernel.org
    Cc: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Cc: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34ae75d699fde1d4c8478da1c7e4c1c236c213d8
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Feb 5 19:23:00 2021 +0100

    ARM: 9056/1: decompressor: fix BSS size calculation for LLVM ld.lld
    
    commit c4e792d1acce31c2eb7b9193ab06ab94de05bf42 upstream.
    
    The LLVM ld.lld linker uses a different symbol type for __bss_start,
    resulting in the calculation of KBSS_SZ to be thrown off. Up until now,
    this has gone unnoticed as it only affects the appended DTB case, but
    pending changes for ARM in the way the decompressed kernel is cleaned
    from the caches has uncovered this problem.
    
    On a ld.lld build:
    
      $ nm vmlinux |grep bss_
      c1c22034 D __bss_start
      c1c86e98 B __bss_stop
    
    resulting in
    
      $ readelf -s arch/arm/boot/compressed/vmlinux | grep bss_size
      433: c1c86e98     0 NOTYPE  GLOBAL DEFAULT  ABS _kernel_bss_size
    
    which is obviously incorrect, and may cause the cache clean to access
    unmapped memory, or cause the size calculation to wrap, resulting in no
    cache clean to be performed at all.
    
    Fix this by updating the sed regex to take D type symbols into account.
    
    Link: https://lore.kernel.org/linux-arm-kernel/6c65bcef-d4e7-25fa-43cf-2c435bb61bb9@collabora.com/
    Link: https://lore.kernel.org/linux-arm-kernel/20210205085220.31232-1-ardb@kernel.org/
    
    Cc: <stable@vger.kernel.org> # v4.19+
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Reported-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Reported-by: "kernelci.org bot" <bot@kernelci.org>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b641b25870f02e2423e494365fc5243cc1e2759
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed May 5 10:38:24 2021 -0400

    ftrace: Handle commands when closing set_ftrace_filter file
    
    commit 8c9af478c06bb1ab1422f90d8ecbc53defd44bc3 upstream.
    
     # echo switch_mm:traceoff > /sys/kernel/tracing/set_ftrace_filter
    
    will cause switch_mm to stop tracing by the traceoff command.
    
     # echo -n switch_mm:traceoff > /sys/kernel/tracing/set_ftrace_filter
    
    does nothing.
    
    The reason is that the parsing in the write function only processes
    commands if it finished parsing (there is white space written after the
    command). That's to handle:
    
     write(fd, "switch_mm:", 10);
     write(fd, "traceoff", 8);
    
    cases, where the command is broken over multiple writes.
    
    The problem is if the file descriptor is closed, then the write call is
    not processed, and the command needs to be processed in the release code.
    The release code can handle matching of functions, but does not handle
    commands.
    
    Cc: stable@vger.kernel.org
    Fixes: eda1e32855656 ("tracing: handle broken names in ftrace filter")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a4f786f8eb5afdb5cdbdfe418a00ac6340f2120
Author: Mark Langsdorf <mlangsdo@redhat.com>
Date:   Tue Apr 27 13:54:33 2021 -0500

    ACPI: custom_method: fix a possible memory leak
    
    commit 1cfd8956437f842836e8a066b40d1ec2fc01f13e upstream.
    
    In cm_write(), if the 'buf' is allocated memory but not fully consumed,
    it is possible to reallocate the buffer without freeing it by passing
    '*ppos' as 0 on a subsequent call.
    
    Add an explicit kfree() before kzalloc() to prevent the possible memory
    leak.
    
    Fixes: 526b4af47f44 ("ACPI: Split out custom_method functionality into an own driver")
    Signed-off-by: Mark Langsdorf <mlangsdo@redhat.com>
    Cc: 5.4+ <stable@vger.kernel.org> # 5.4+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72814a94c38a33239793f7622cec6ace1e540c4b
Author: Mark Langsdorf <mlangsdo@redhat.com>
Date:   Fri Apr 23 10:28:17 2021 -0500

    ACPI: custom_method: fix potential use-after-free issue
    
    commit e483bb9a991bdae29a0caa4b3a6d002c968f94aa upstream.
    
    In cm_write(), buf is always freed when reaching the end of the
    function.  If the requested count is less than table.length, the
    allocated buffer will be freed but subsequent calls to cm_write() will
    still try to access it.
    
    Remove the unconditional kfree(buf) at the end of the function and
    set the buf to NULL in the -EINVAL error path to match the rest of
    function.
    
    Fixes: 03d1571d9513 ("ACPI: custom_method: fix memory leaks")
    Signed-off-by: Mark Langsdorf <mlangsdo@redhat.com>
    Cc: 5.4+ <stable@vger.kernel.org> # 5.4+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b691331218d0eadd72557e2ea7c6ca70adf0c3ae
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Tue Apr 20 11:04:10 2021 +0200

    s390/disassembler: increase ebpf disasm buffer size
    
    commit 6f3353c2d2b3eb4de52e9704cb962712033db181 upstream.
    
    Current ebpf disassembly buffer size of 64 is too small. E.g. this line
    takes 65 bytes:
    01fffff8005822e: ec8100ed8065\tclgrj\t%r8,%r1,8,001fffff80058408\n\0
    
    Double the buffer size like it is done for the kernel disassembly buffer.
    
    Fixes the following KASAN finding:
    
    UG: KASAN: stack-out-of-bounds in print_fn_code+0x34c/0x380
    Write of size 1 at addr 001fff800ad5f970 by task test_progs/853
    
    CPU: 53 PID: 853 Comm: test_progs Not tainted
    5.12.0-rc7-23786-g23457d86b1f0-dirty #19
    Hardware name: IBM 3906 M04 704 (LPAR)
    Call Trace:
     [<0000000cd8e0538a>] show_stack+0x17a/0x1668
     [<0000000cd8e2a5d8>] dump_stack+0x140/0x1b8
     [<0000000cd8e16e74>] print_address_description.constprop.0+0x54/0x260
     [<0000000cd75a8698>] kasan_report+0xc8/0x130
     [<0000000cd6e26da4>] print_fn_code+0x34c/0x380
     [<0000000cd6ea0f4e>] bpf_int_jit_compile+0xe3e/0xe58
     [<0000000cd72c4c88>] bpf_prog_select_runtime+0x5b8/0x9c0
     [<0000000cd72d1bf8>] bpf_prog_load+0xa78/0x19c0
     [<0000000cd72d7ad6>] __do_sys_bpf.part.0+0x18e/0x768
     [<0000000cd6e0f392>] do_syscall+0x12a/0x220
     [<0000000cd8e333f8>] __do_syscall+0x98/0xc8
     [<0000000cd8e54834>] system_call+0x6c/0x94
    1 lock held by test_progs/853:
     #0: 0000000cd9bf7460 (report_lock){....}-{2:2}, at:
         kasan_report+0x96/0x130
    
    addr 001fff800ad5f970 is located in stack of task test_progs/853 at
    offset 96 in frame:
     print_fn_code+0x0/0x380
    this frame has 1 object:
     [32, 96) 'buffer'
    
    Memory state around the buggy address:
     001fff800ad5f800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     001fff800ad5f880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    >001fff800ad5f900: 00 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00 f3 f3
                                                                 ^
     001fff800ad5f980: f3 f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     001fff800ad5fa00: 00 00 00 00 00 00 00 f1 f1 f1 f1 00 00 00 00 00
    
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
