commit e05d387ba736bcabe414b0aa05831d151ac40385
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed May 19 10:08:33 2021 +0200

    Linux 5.4.120
    
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210517140242.729269392@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f4ac21468b034b1ff120a08bb60af618e946d42
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Apr 8 13:28:47 2021 +0900

    ASoC: rsnd: check all BUSIF status when error
    
    commit a4856e15e58b54977f1c0c0299309ad4d1f13365 upstream.
    
    commit 66c705d07d784 ("SoC: rsnd: add interrupt support for SSI BUSIF
    buffer") adds __rsnd_ssi_interrupt() checks for BUSIF status,
    but is using "break" at for loop.
    This means it is not checking all status. Let's check all BUSIF status.
    
    Fixes: commit 66c705d07d784 ("SoC: rsnd: add interrupt support for SSI BUSIF buffer")
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/874kgh1jsw.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f6a9044ff241ba45b3842c36212efe7a09b1443
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Apr 9 11:46:12 2021 +0200

    nvme: do not try to reconfigure APST when the controller is not live
    
    commit 53fe2a30bc168db9700e00206d991ff934973cf1 upstream.
    
    Do not call nvme_configure_apst when the controller is not live, given
    that nvme_configure_apst will fail due the lack of an admin queue when
    the controller is being torn down and nvme_set_latency_tolerance is
    called from dev_pm_qos_hide_latency_tolerance.
    
    Fixes: 510a405d945b("nvme: fix memory leak for power latency tolerance")
    Reported-by: Peng Liu <liupeng17@lenovo.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa9d659856b170e042ab428c08e2bd5e6c232181
Author: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
Date:   Sat Oct 24 17:43:46 2020 +0200

    clk: exynos7: Mark aclk_fsys1_200 as critical
    
    commit 34138a59b92c1a30649a18ec442d2e61f3bc34dd upstream.
    
    This clock must be always enabled to allow access to any registers in
    fsys1 CMU. Until proper solution based on runtime PM is applied
    (similar to what was done for Exynos5433), mark that clock as critical
    so it won't be disabled.
    
    It was observed on Samsung Galaxy S6 device (based on Exynos7420), where
    UFS module is probed before pmic used to power that device.
    In this case defer probe was happening and that clock was disabled by
    UFS driver, causing whole boot to hang on next CMU access.
    
    Fixes: 753195a749a6 ("clk: samsung: exynos7: Correct CMU_FSYS1 clocks names")
    Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/linux-clk/20201024154346.9589-1-pawel.mikolaj.chmiel@gmail.com
    [s.nawrocki: Added comment in the code]
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baea536cf51f8180ab993e374cb134b5edad25e2
Author: Jonathon Reinhart <jonathon.reinhart@gmail.com>
Date:   Mon Apr 12 00:24:53 2021 -0400

    netfilter: conntrack: Make global sysctls readonly in non-init netns
    
    commit 2671fa4dc0109d3fb581bc3078fdf17b5d9080f6 upstream.
    
    These sysctls point to global variables:
    - NF_SYSCTL_CT_MAX (&nf_conntrack_max)
    - NF_SYSCTL_CT_EXPECT_MAX (&nf_ct_expect_max)
    - NF_SYSCTL_CT_BUCKETS (&nf_conntrack_htable_size_user)
    
    Because their data pointers are not updated to point to per-netns
    structures, they must be marked read-only in a non-init_net ns.
    Otherwise, changes in any net namespace are reflected in (leaked into)
    all other net namespaces. This problem has existed since the
    introduction of net namespaces.
    
    The current logic marks them read-only only if the net namespace is
    owned by an unprivileged user (other than init_user_ns).
    
    Commit d0febd81ae77 ("netfilter: conntrack: re-visit sysctls in
    unprivileged namespaces") "exposes all sysctls even if the namespace is
    unpriviliged." Since we need to mark them readonly in any case, we can
    forego the unprivileged user check altogether.
    
    Fixes: d0febd81ae77 ("netfilter: conntrack: re-visit sysctls in unprivileged namespaces")
    Signed-off-by: Jonathon Reinhart <Jonathon.Reinhart@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb80624f39d37bcf648106df0d23804799362452
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Apr 5 11:48:52 2021 +0200

    kobject_uevent: remove warning in init_uevent_argv()
    
    commit b4104180a2efb85f55e1ba1407885c9421970338 upstream.
    
    syzbot can trigger the WARN() in init_uevent_argv() which isn't the
    nicest as the code does properly recover and handle the error.  So
    change the WARN() call to pr_warn() and provide some more information on
    what the buffer size that was needed.
    
    Link: https://lore.kernel.org/r/20201107082206.GA19079@kroah.com
    Cc: "Rafael J. Wysocki" <rafael@kernel.org>
    Cc: linux-kernel@vger.kernel.org
    Reported-by: syzbot+92340f7b2b4789907fdb@syzkaller.appspotmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20210405094852.1348499-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 658e8982f0ebf33c88d8dc0e2e5f091bcc284178
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Wed Apr 14 22:01:21 2021 -0700

    usb: typec: tcpm: Fix error while calculating PPS out values
    
    commit 374157ff88ae1a7f7927331cbc72c1ec11994e8a upstream.
    
    "usb: typec: tcpm: Address incorrect values of tcpm psy for pps supply"
    introduced a regression for req_out_volt and req_op_curr calculation.
    
    req_out_volt should consider the newly calculated max voltage instead
    of previously accepted max voltage by the port partner. Likewise,
    req_op_curr should consider the newly calculated max current instead
    of previously accepted max current by the port partner.
    
    Fixes: e3a072022487 ("usb: typec: tcpm: Address incorrect values of tcpm psy for pps supply")
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Link: https://lore.kernel.org/r/20210415050121.1928298-1-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 718f1c1fdf7837eb00b4c2a6e4f53248f5abd13c
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon May 10 06:33:21 2021 -0700

    ARM: 9027/1: head.S: explicitly map DT even if it lives in the first physical section
    
    commit 10fce53c0ef8f6e79115c3d9e0d7ea1338c3fa37 upstream
    
    The early ATAGS/DT mapping code uses SECTION_SHIFT to mask low order
    bits of R2, and decides that no ATAGS/DTB were provided if the resulting
    value is 0x0.
    
    This means that on systems where DRAM starts at 0x0 (such as Raspberry
    Pi), no explicit mapping of the DT will be created if R2 points into the
    first 1 MB section of memory. This was not a problem before, because the
    decompressed kernel is loaded at the base of DRAM and mapped using
    sections as well, and so as long as the DT is referenced via a virtual
    address that uses the same translation (the linear map, in this case),
    things work fine.
    
    However, commit 7a1be318f579 ("9012/1: move device tree mapping out of
    linear region") changes this, and now the DT is referenced via a virtual
    address that is disjoint from the linear mapping of DRAM, and so we need
    the early code to create the DT mapping unconditionally.
    
    So let's create the early DT mapping for any value of R2 != 0x0.
    
    Reported-by: "kernelci.org bot" <bot@kernelci.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c63b72ffba07e4fc33092fadaa02a4078768d15
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon May 10 06:33:20 2021 -0700

    ARM: 9020/1: mm: use correct section size macro to describe the FDT virtual address
    
    commit fc2933c133744305236793025b00c2f7d258b687 upstream
    
    Commit
    
      149a3ffe62b9dbc3 ("9012/1: move device tree mapping out of linear region")
    
    created a permanent, read-only section mapping of the device tree blob
    provided by the firmware, and added a set of macros to get the base and
    size of the virtually mapped FDT based on the physical address. However,
    while the mapping code uses the SECTION_SIZE macro correctly, the macros
    use PMD_SIZE instead, which means something entirely different on ARM when
    using short descriptors, and is therefore not the right quantity to use
    here. So replace PMD_SIZE with SECTION_SIZE. While at it, change the names
    of the macro and its parameter to clarify that it returns the virtual
    address of the start of the FDT, based on the physical address in memory.
    
    Tested-by: Joel Stanley <joel@jms.id.au>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b05a28f47582a8116cf47533c250e988577b3303
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon May 10 06:33:19 2021 -0700

    ARM: 9012/1: move device tree mapping out of linear region
    
    commit 7a1be318f5795cb66fa0dc86b3ace427fe68057f upstream
    
    On ARM, setting up the linear region is tricky, given the constraints
    around placement and alignment of the memblocks, and how the kernel
    itself as well as the DT are placed in physical memory.
    
    Let's simplify matters a bit, by moving the device tree mapping to the
    top of the address space, right between the end of the vmalloc region
    and the start of the the fixmap region, and create a read-only mapping
    for it that is independent of the size of the linear region, and how it
    is organized.
    
    Since this region was formerly used as a guard region, which will now be
    populated fully on LPAE builds by this read-only mapping (which will
    still be able to function as a guard region for stray writes), bump the
    start of the [underutilized] fixmap region by 512 KB as well, to ensure
    that there is always a proper guard region here. Doing so still leaves
    ample room for the fixmap space, even with NR_CPUS set to its maximum
    value of 32.
    
    Tested-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Nicolas Pitre <nico@fluxnic.net>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69e44f71319b23bc1fdb79b3bf238aaf2bd4d3f4
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon May 10 06:33:18 2021 -0700

    ARM: 9011/1: centralize phys-to-virt conversion of DT/ATAGS address
    
    commit e9a2f8b599d0bc22a1b13e69527246ac39c697b4 upstream
    
    Before moving the DT mapping out of the linear region, let's prepare
    for this change by removing all the phys-to-virt translations of the
    __atags_pointer variable, and perform this translation only once at
    setup time.
    
    Tested-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Nicolas Pitre <nico@fluxnic.net>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb4f8ead473aaf3d84d446afbfb0abd1d00db5f7
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Mar 4 21:43:10 2021 -0800

    f2fs: fix error handling in f2fs_end_enable_verity()
    
    commit 3c0315424f5e3d2a4113c7272367bee1e8e6a174 upstream.
    
    f2fs didn't properly clean up if verity failed to be enabled on a file:
    
    - It left verity metadata (pages past EOF) in the page cache, which
      would be exposed to userspace if the file was later extended.
    
    - It didn't truncate the verity metadata at all (either from cache or
      from disk) if an error occurred while setting the verity bit.
    
    Fix these bugs by adding a call to truncate_inode_pages() and ensuring
    that we truncate the verity metadata (both from cache and from disk) in
    all error paths.  Also rework the code to cleanly separate the success
    path from the error paths, which makes it much easier to understand.
    
    Finally, log a message if f2fs_truncate() fails, since it might
    otherwise fail silently.
    
    Reported-by: Yunlei He <heyunlei@hihonor.com>
    Fixes: 95ae251fe828 ("f2fs: add fs-verity support")
    Cc: <stable@vger.kernel.org> # v5.4+
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a474350d8de37223ad277dd74f7082b9643491e
Author: Lukasz Luba <lukasz.luba@arm.com>
Date:   Thu Apr 22 16:36:22 2021 +0100

    thermal/core/fair share: Lock the thermal zone while looping over instances
    
    commit fef05776eb02238dcad8d5514e666a42572c3f32 upstream.
    
    The tz->lock must be hold during the looping over the instances in that
    thermal zone. This lock was missing in the governor code since the
    beginning, so it's hard to point into a particular commit.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Lukasz Luba <lukasz.luba@arm.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210422153624.6074-2-lukasz.luba@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c44110300b8cee4170391ae689e0126176ecefa
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Thu Apr 22 22:36:12 2021 +0200

    MIPS: Avoid handcoded DIVU in `__div64_32' altogether
    
    commit 25ab14cbe9d1b66fda44c71a2db7582a31b6f5cd upstream.
    
    Remove the inline asm with a DIVU instruction from `__div64_32' and use
    plain C code for the intended DIVMOD calculation instead.  GCC is smart
    enough to know that both the quotient and the remainder are calculated
    with single DIVU, so with ISAs up to R5 the same instruction is actually
    produced with overall similar code.
    
    For R6 compiled code will work, but separate DIVU and MODU instructions
    will be produced, which are also interlocked, so scalar implementations
    will likely not perform as well as older ISAs with their asynchronous MD
    unit.  Likely still faster then the generic algorithm though.
    
    This removes a compilation error for R6 however where the original DIVU
    instruction is not supported anymore and the MDU accumulator registers
    have been removed and consequently GCC complains as to a constraint it
    cannot find a register for:
    
    In file included from ./include/linux/math.h:5,
                     from ./include/linux/kernel.h:13,
                     from mm/page-writeback.c:15:
    ./include/linux/math64.h: In function 'div_u64_rem':
    ./arch/mips/include/asm/div64.h:76:17: error: inconsistent operand constraints in an 'asm'
       76 |                 __asm__("divu   $0, %z1, %z2"                           \
          |                 ^~~~~~~
    ./include/asm-generic/div64.h:245:25: note: in expansion of macro '__div64_32'
      245 |                 __rem = __div64_32(&(n), __base);       \
          |                         ^~~~~~~~~~
    ./include/linux/math64.h:91:22: note: in expansion of macro 'do_div'
       91 |         *remainder = do_div(dividend, divisor);
          |                      ^~~~~~
    
    This has passed correctness verification with test_div64 and reduced the
    module's average execution time down to 1.0404s from 1.0445s with R3400
    @40MHz.  The module's MIPS I machine code has also shrunk by 12 bytes or
    3 instructions.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2759b770b53ee98243e4486739103cf9c40672d0
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Tue Apr 20 04:50:48 2021 +0200

    MIPS: Avoid DIVU in `__div64_32' is result would be zero
    
    commit c1d337d45ec0a802299688e17d568c4e3a585895 upstream.
    
    We already check the high part of the divident against zero to avoid the
    costly DIVU instruction in that case, needed to reduce the high part of
    the divident, so we may well check against the divisor instead and set
    the high part of the quotient to zero right away.  We need to treat the
    high part the divident in that case though as the remainder that would
    be calculated by the DIVU instruction we avoided.
    
    This has passed correctness verification with test_div64 and reduced the
    module's average execution time down to 1.0445s and 0.2619s from 1.0668s
    and 0.2629s respectively for an R3400 CPU @40MHz and a 5Kc CPU @160MHz.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02b120493a9c774a792ab587177321ade329bca4
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Tue Apr 20 04:50:40 2021 +0200

    MIPS: Reinstate platform `__div64_32' handler
    
    commit c49f71f60754acbff37505e1d16ca796bf8a8140 upstream.
    
    Our current MIPS platform `__div64_32' handler is inactive, because it
    is incorrectly only enabled for 64-bit configurations, for which generic
    `do_div' code does not call it anyway.
    
    The handler is not suitable for being called from there though as it
    only calculates 32 bits of the quotient under the assumption the 64-bit
    divident has been suitably reduced.  Code for such reduction used to be
    there, however it has been incorrectly removed with commit c21004cd5b4c
    ("MIPS: Rewrite <asm/div64.h> to work with gcc 4.4.0."), which should
    have only updated an obsoleted constraint for an inline asm involving
    $hi and $lo register outputs, while possibly wiring the original MIPS
    variant of the `do_div' macro as `__div64_32' handler for the generic
    `do_div' implementation
    
    Correct the handler as follows then:
    
    - Revert most of the commit referred, however retaining the current
      formatting, except for the final two instructions of the inline asm
      sequence, which the original commit missed.  Omit the original 64-bit
      parts though.
    
    - Rename the original `do_div' macro to `__div64_32'.  Use the combined
      `x' constraint referring to the MD accumulator as a whole, replacing
      the original individual `h' and `l' constraints used for $hi and $lo
      registers respectively, of which `h' has been obsoleted with GCC 4.4.
      Update surrounding code accordingly.
    
      We have since removed support for GCC versions before 4.9, so no need
      for a special arrangement here; GCC has supported the `x' constraint
      since forever anyway, or at least going back to 1991.
    
    - Rename the `__base' local variable in `__div64_32' to `__radix' to
      avoid a conflict with a local variable in `do_div'.
    
    - Actually enable this code for 32-bit rather than 64-bit configurations
      by qualifying it with BITS_PER_LONG being 32 instead of 64.  Include
      <asm/bitsperlong.h> for this macro rather than <linux/types.h> as we
      don't need anything else.
    
    - Finally include <asm-generic/div64.h> last rather than first.
    
    This has passed correctness verification with test_div64 and reduced the
    module's average execution time down to 1.0668s and 0.2629s from 2.1529s
    and 0.5647s respectively for an R3400 CPU @40MHz and a 5Kc CPU @160MHz.
    For a reference 64-bit `do_div' code where we have the DDIVU instruction
    available to do the whole calculation right away averages at 0.0660s for
    the latter CPU.
    
    Fixes: c21004cd5b4c ("MIPS: Rewrite <asm/div64.h> to work with gcc 4.4.0.")
    Reported-by: Huacai Chen <chenhuacai@kernel.org>
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Cc: stable@vger.kernel.org # v2.6.30+
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64508ebf93913d24848856beeee872978ca3fc13
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Wed Mar 10 13:03:14 2021 +0100

    FDDI: defxx: Make MMIO the configuration default except for EISA
    
    commit 193ced4a79599352d63cb8c9e2f0c6043106eb6a upstream.
    
    Recent versions of the PCI Express specification have deprecated support
    for I/O transactions and actually some PCIe host bridges, such as Power
    Systems Host Bridge 4 (PHB4), do not implement them.
    
    The default kernel configuration choice for the defxx driver is the use
    of I/O ports rather than MMIO for PCI and EISA systems.  It may have
    made sense as a conservative backwards compatible choice back when MMIO
    operation support was added to the driver as a part of TURBOchannel bus
    support.  However nowadays this configuration choice makes the driver
    unusable with systems that do not implement I/O transactions for PCIe.
    
    Make DEFXX_MMIO the configuration default then, except where configured
    for EISA.  This exception is because an EISA adapter can have its MMIO
    decoding disabled with ECU (EISA Configuration Utility) and therefore
    not available with the resource allocation infrastructure we implement,
    while port I/O is always readily available as it uses slot-specific
    addressing, directly mapped to the slot an option card has been placed
    in and handled with our EISA bus support core.  Conversely a kernel that
    supports modern systems which may not have I/O transactions implemented
    for PCIe will usually not be expected to handle legacy EISA systems.
    
    The change of the default will make it easier for people, including but
    not limited to distribution packagers, to make a working choice for the
    driver.
    
    Update the option description accordingly and while at it replace the
    potentially ambiguous PIO acronym with IOP for "port I/O" vs "I/O ports"
    according to our nomenclature used elsewhere.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: e89a2cfb7d7b ("[TC] defxx: TURBOchannel support")
    Cc: stable@vger.kernel.org # v2.6.21+
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecdf893c5aefa26f4d46ced6e17513fc8fa23d2a
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Fri May 14 17:27:24 2021 -0700

    mm: fix struct page layout on 32-bit systems
    
    commit 9ddb3c14afba8bc5950ed297f02d4ae05ff35cd1 upstream.
    
    32-bit architectures which expect 8-byte alignment for 8-byte integers and
    need 64-bit DMA addresses (arm, mips, ppc) had their struct page
    inadvertently expanded in 2019.  When the dma_addr_t was added, it forced
    the alignment of the union to 8 bytes, which inserted a 4 byte gap between
    'flags' and the union.
    
    Fix this by storing the dma_addr_t in one or two adjacent unsigned longs.
    This restores the alignment to that of an unsigned long.  We always
    store the low bits in the first word to prevent the PageTail bit from
    being inadvertently set on a big endian platform.  If that happened,
    get_user_pages_fast() racing against a page which was freed and
    reallocated to the page_pool could dereference a bogus compound_head(),
    which would be hard to trace back to this cause.
    
    Link: https://lkml.kernel.org/r/20210510153211.1504886-1-willy@infradead.org
    Fixes: c25fff7171be ("mm: add dma_addr_t to struct page")
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Acked-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Tested-by: Matteo Croce <mcroce@linux.microsoft.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 187598fd82cb0ad4f3f24fe20252e0d79ee04a95
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed May 5 23:48:17 2021 +0200

    KVM: x86: Cancel pvclock_gtod_work on module removal
    
    commit 594b27e677b35f9734b1969d175ebc6146741109 upstream.
    
    Nothing prevents the following:
    
      pvclock_gtod_notify()
        queue_work(system_long_wq, &pvclock_gtod_work);
      ...
      remove_module(kvm);
      ...
      work_queue_run()
        pvclock_gtod_work() <- UAF
    
    Ditto for any other operation on that workqueue list head which touches
    pvclock_gtod_work after module removal.
    
    Cancel the work in kvm_arch_exit() to prevent that.
    
    Fixes: 16e8d74d2da9 ("KVM: x86: notifier for clocksource changes")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Message-Id: <87czu4onry.ffs@nanos.tec.linutronix.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdaae487e85b60c4ba273a40a260b1af49341119
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Apr 26 11:26:22 2021 +0200

    cdc-wdm: untangle a circular dependency between callback and softint
    
    commit 18abf874367456540846319574864e6ff32752e2 upstream.
    
    We have a cycle of callbacks scheduling works which submit
    URBs with those callbacks. This needs to be blocked, stopped
    and unblocked to untangle the circle.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Link: https://lore.kernel.org/r/20210426092622.20433-1-oneukum@suse.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1de23dbeca7d6f8c5df66512e0aa7c7d9e18b7e
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri May 7 19:30:41 2021 +0100

    iio: tsl2583: Fix division by a zero lux_val
    
    commit af0e1871d79cfbb91f732d2c6fa7558e45c31038 upstream.
    
    The lux_val returned from tsl2583_get_lux can potentially be zero,
    so check for this to avoid a division by zero and an overflowed
    gain_trim_val.
    
    Fixes clang scan-build warning:
    
    drivers/iio/light/tsl2583.c:345:40: warning: Either the
    condition 'lux_val<0' is redundant or there is division
    by zero at line 345. [zerodivcond]
    
    Fixes: ac4f6eee8fe8 ("staging: iio: TAOS tsl258x: Device driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8229f1d405012ffc8ba6a9ef313194e65cf164b2
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Fri Apr 23 05:09:59 2021 +0300

    iio: gyro: mpu3050: Fix reported temperature value
    
    commit f73c730774d88a14d7b60feee6d0e13570f99499 upstream.
    
    The raw temperature value is a 16-bit signed integer. The sign casting
    is missing in the code, which results in a wrong temperature reported
    by userspace tools, fix it.
    
    Cc: stable@vger.kernel.org
    Fixes: 3904b28efb2c ("iio: gyro: Add driver for the MPU-3050 gyroscope")
    Datasheet: https://www.cdiweb.com/datasheets/invensense/mpu-3000a.pdf
    Tested-by: Maxim Schwalm <maxim.schwalm@gmail.com> # Asus TF700T
    Tested-by: Svyatoslav Ryhel <clamor95@gmail.com> # Asus TF201
    Reported-by: Svyatoslav Ryhel <clamor95@gmail.com>
    Reviewed-by: Andy Shevchenko <Andy.Shevchenko@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Jean-Baptiste Maneyrol <jmaneyrol@invensense.com>
    Link: https://lore.kernel.org/r/20210423020959.5023-1-digetx@gmail.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2496ead8b1b1ab6812c58650396d5df5650d8c14
Author: Sandeep Singh <sandeep.singh@amd.com>
Date:   Wed May 12 11:08:16 2021 +0300

    xhci: Add reset resume quirk for AMD xhci controller.
    
    commit 3c128781d8da463761495aaf8898c9ecb4e71528 upstream.
    
    One of AMD xhci controller require reset on resume.
    Occasionally AMD xhci controller does not respond to
    Stop endpoint command.
    Once the issue happens controller goes into bad state
    and in that case controller needs to be reset.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sandeep Singh <sandeep.singh@amd.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210512080816.866037-6-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de72d8769bcf1a3f1cf16dd3b59307df50984b9d
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed May 12 11:08:14 2021 +0300

    xhci: Do not use GFP_KERNEL in (potentially) atomic context
    
    commit dda32c00c9a0fa103b5d54ef72c477b7aa993679 upstream.
    
    'xhci_urb_enqueue()' is passed a 'mem_flags' argument, because "URBs may be
    submitted in interrupt context" (see comment related to 'usb_submit_urb()'
    in 'drivers/usb/core/urb.c')
    
    So this flag should be used in all the calling chain.
    Up to now, 'xhci_check_maxpacket()' which is only called from
    'xhci_urb_enqueue()', uses GFP_KERNEL.
    
    Be safe and pass the mem_flags to this function as well.
    
    Fixes: ddba5cd0aeff ("xhci: Use command structures when queuing commands on the command ring")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210512080816.866037-4-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 941328f7bda6c4b03ee9dcb95f4574ff21309e9c
Author: Wesley Cheng <wcheng@codeaurora.org>
Date:   Fri May 7 10:55:19 2021 -0700

    usb: dwc3: gadget: Return success always for kick transfer in ep queue
    
    commit 18ffa988dbae69cc6e9949cddd9606f6fe533894 upstream.
    
    If an error is received when issuing a start or update transfer
    command, the error handler will stop all active requests (including
    the current USB request), and call dwc3_gadget_giveback() to notify
    function drivers of the requests which have been stopped.  Avoid
    returning an error for kick transfer during EP queue, to remove
    duplicate cleanup operations on the request being queued.
    
    Fixes: 8d99087c2db8 ("usb: dwc3: gadget: Properly handle failed kick_transfer")
    cc: stable@vger.kernel.org
    Signed-off-by: Wesley Cheng <wcheng@codeaurora.org>
    Link: https://lore.kernel.org/r/1620410119-24971-1-git-send-email-wcheng@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f15d999dd61821cebf73252fda94d6f0b8c4c2f
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Wed May 12 10:07:38 2021 +0800

    usb: core: hub: fix race condition about TRSMRCY of resume
    
    commit 975f94c7d6c306b833628baa9aec3f79db1eb3a1 upstream.
    
    This may happen if the port becomes resume status exactly
    when usb_port_resume() gets port status, it still need provide
    a TRSMCRY time before access the device.
    
    CC: <stable@vger.kernel.org>
    Reported-by: Tianping Fang <tianping.fang@mediatek.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/20210512020738.52961-1-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f536512db87ead2947091e94a73e870053dad6f
Author: Phil Elwell <phil@raspberrypi.com>
Date:   Thu May 6 12:22:00 2021 +0100

    usb: dwc2: Fix gadget DMA unmap direction
    
    commit 75a41ce46bae6cbe7d3bb2584eb844291d642874 upstream.
    
    The dwc2 gadget support maps and unmaps DMA buffers as necessary. When
    mapping and unmapping it uses the direction of the endpoint to select
    the direction of the DMA transfer, but this fails for Control OUT
    transfers because the unmap occurs after the endpoint direction has
    been reversed for the status phase.
    
    A possible solution would be to unmap the buffer before the direction
    is changed, but a safer, less invasive fix is to remember the buffer
    direction independently of the endpoint direction.
    
    Fixes: fe0b94abcdf6 ("usb: dwc2: gadget: manage ep0 state in software")
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Phil Elwell <phil@raspberrypi.com>
    Link: https://lore.kernel.org/r/20210506112200.2893922-1-phil@raspberrypi.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36399169e6a030a48e17b743947ae436a938391b
Author: Maximilian Luz <luzmaximilian@gmail.com>
Date:   Wed May 12 11:08:15 2021 +0300

    usb: xhci: Increase timeout for HC halt
    
    commit ca09b1bea63ab83f4cca3a2ae8bc4f597ec28851 upstream.
    
    On some devices (specifically the SC8180x based Surface Pro X with
    QCOM04A6) HC halt / xhci_halt() times out during boot. Manually binding
    the xhci-hcd driver at some point later does not exhibit this behavior.
    To work around this, double XHCI_MAX_HALT_USEC, which also resolves this
    issue.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210512080816.866037-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68b5f65eaa6a130b149d628c77650e381088b55f
Author: Ferry Toth <ftoth@exalondelft.nl>
Date:   Sun Apr 25 17:09:47 2021 +0200

    usb: dwc3: pci: Enable usb2-gadget-lpm-disable for Intel Merrifield
    
    commit 04357fafea9c7ed34525eb9680c760245c3bb958 upstream.
    
    On Intel Merrifield LPM is causing host to reset port after a timeout.
    By disabling LPM entirely this is prevented.
    
    Fixes: 066c09593454 ("usb: dwc3: pci: Enable extcon driver for Intel Merrifield")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Ferry Toth <ftoth@exalondelft.nl>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210425150947.5862-1-ftoth@exalondelft.nl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04904d90a71a6121152a95fc908323807e947e70
Author: Marcel Hamer <marcel@solidxs.se>
Date:   Tue Apr 27 14:21:18 2021 +0200

    usb: dwc3: omap: improve extcon initialization
    
    commit e17b02d4970913233d543c79c9c66e72cac05bdd upstream.
    
    When extcon is used in combination with dwc3, it is assumed that the dwc3
    registers are untouched and as such are only configured if VBUS is valid
    or ID is tied to ground.
    
    In case VBUS is not valid or ID is floating, the registers are not
    configured as such during driver initialization, causing a wrong
    default state during boot.
    
    If the registers are not in a default state, because they are for
    instance touched by a boot loader, this can cause for a kernel error.
    
    Signed-off-by: Marcel Hamer <marcel@solidxs.se>
    Link: https://lore.kernel.org/r/20210427122118.1948340-1-marcel@solidxs.se
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f78e2c36609b61151b1945c7393facbff3dd1ad6
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Dec 4 09:33:52 2019 -0800

    iomap: fix sub-page uptodate handling
    
    commit 1cea335d1db1ce6ab71b3d2f94a807112b738a0f upstream.
    
    bio completions can race when a page spans more than one file system
    block.  Add a spinlock to synchronize marking the page uptodate.
    
    Fixes: 9dc55f1389f9 ("iomap: add support for sub-pagesize buffered I/O without buffer heads")
    Reported-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Cc: "Matthew Wilcox (Oracle)" <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c1db90ae0d0210c0695f63f77458124d83508b2
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu May 13 10:15:29 2021 -0700

    blk-mq: Swap two calls in blk_mq_exit_queue()
    
    [ Upstream commit 630ef623ed26c18a457cdc070cf24014e50129c2 ]
    
    If a tag set is shared across request queues (e.g. SCSI LUNs) then the
    block layer core keeps track of the number of active request queues in
    tags->active_queues. blk_mq_tag_busy() and blk_mq_tag_idle() update that
    atomic counter if the hctx flag BLK_MQ_F_TAG_QUEUE_SHARED is set. Make
    sure that blk_mq_exit_queue() calls blk_mq_tag_idle() before that flag is
    cleared by blk_mq_del_queue_tag_set().
    
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Fixes: 0d2602ca30e4 ("blk-mq: improve support for shared tags maps")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20210513171529.7977-1-bvanassche@acm.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c4962df938891af9ab4775f5224ef8601764107
Author: Sun Ke <sunke32@huawei.com>
Date:   Wed May 12 19:43:30 2021 +0800

    nbd: Fix NULL pointer in flush_workqueue
    
    [ Upstream commit 79ebe9110fa458d58f1fceb078e2068d7ad37390 ]
    
    Open /dev/nbdX first, the config_refs will be 1 and
    the pointers in nbd_device are still null. Disconnect
    /dev/nbdX, then reference a null recv_workq. The
    protection by config_refs in nbd_genl_disconnect is useless.
    
    [  656.366194] BUG: kernel NULL pointer dereference, address: 0000000000000020
    [  656.368943] #PF: supervisor write access in kernel mode
    [  656.369844] #PF: error_code(0x0002) - not-present page
    [  656.370717] PGD 10cc87067 P4D 10cc87067 PUD 1074b4067 PMD 0
    [  656.371693] Oops: 0002 [#1] SMP
    [  656.372242] CPU: 5 PID: 7977 Comm: nbd-client Not tainted 5.11.0-rc5-00040-g76c057c84d28 #1
    [  656.373661] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014
    [  656.375904] RIP: 0010:mutex_lock+0x29/0x60
    [  656.376627] Code: 00 0f 1f 44 00 00 55 48 89 fd 48 83 05 6f d7 fe 08 01 e8 7a c3 ff ff 48 83 05 6a d7 fe 08 01 31 c0 65 48 8b 14 25 00 6d 01 00 <f0> 48 0f b1 55 d
    [  656.378934] RSP: 0018:ffffc900005eb9b0 EFLAGS: 00010246
    [  656.379350] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    [  656.379915] RDX: ffff888104cf2600 RSI: ffffffffaae8f452 RDI: 0000000000000020
    [  656.380473] RBP: 0000000000000020 R08: 0000000000000000 R09: ffff88813bd6b318
    [  656.381039] R10: 00000000000000c7 R11: fefefefefefefeff R12: ffff888102710b40
    [  656.381599] R13: ffffc900005eb9e0 R14: ffffffffb2930680 R15: ffff88810770ef00
    [  656.382166] FS:  00007fdf117ebb40(0000) GS:ffff88813bd40000(0000) knlGS:0000000000000000
    [  656.382806] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  656.383261] CR2: 0000000000000020 CR3: 0000000100c84000 CR4: 00000000000006e0
    [  656.383819] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  656.384370] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  656.384927] Call Trace:
    [  656.385111]  flush_workqueue+0x92/0x6c0
    [  656.385395]  nbd_disconnect_and_put+0x81/0xd0
    [  656.385716]  nbd_genl_disconnect+0x125/0x2a0
    [  656.386034]  genl_family_rcv_msg_doit.isra.0+0x102/0x1b0
    [  656.386422]  genl_rcv_msg+0xfc/0x2b0
    [  656.386685]  ? nbd_ioctl+0x490/0x490
    [  656.386954]  ? genl_family_rcv_msg_doit.isra.0+0x1b0/0x1b0
    [  656.387354]  netlink_rcv_skb+0x62/0x180
    [  656.387638]  genl_rcv+0x34/0x60
    [  656.387874]  netlink_unicast+0x26d/0x590
    [  656.388162]  netlink_sendmsg+0x398/0x6c0
    [  656.388451]  ? netlink_rcv_skb+0x180/0x180
    [  656.388750]  ____sys_sendmsg+0x1da/0x320
    [  656.389038]  ? ____sys_recvmsg+0x130/0x220
    [  656.389334]  ___sys_sendmsg+0x8e/0xf0
    [  656.389605]  ? ___sys_recvmsg+0xa2/0xf0
    [  656.389889]  ? handle_mm_fault+0x1671/0x21d0
    [  656.390201]  __sys_sendmsg+0x6d/0xe0
    [  656.390464]  __x64_sys_sendmsg+0x23/0x30
    [  656.390751]  do_syscall_64+0x45/0x70
    [  656.391017]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    To fix it, just add if (nbd->recv_workq) to nbd_disconnect_and_put().
    
    Fixes: e9e006f5fcf2 ("nbd: fix max number of supported devs")
    Signed-off-by: Sun Ke <sunke32@huawei.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Link: https://lore.kernel.org/r/20210512114331.1233964-2-sunke32@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b6b4b90b74c27bea968c214d820ba4254b903a5
Author: Omar Sandoval <osandov@fb.com>
Date:   Mon May 10 17:05:35 2021 -0700

    kyber: fix out of bounds access when preempted
    
    [ Upstream commit efed9a3337e341bd0989161b97453b52567bc59d ]
    
    __blk_mq_sched_bio_merge() gets the ctx and hctx for the current CPU and
    passes the hctx to ->bio_merge(). kyber_bio_merge() then gets the ctx
    for the current CPU again and uses that to get the corresponding Kyber
    context in the passed hctx. However, the thread may be preempted between
    the two calls to blk_mq_get_ctx(), and the ctx returned the second time
    may no longer correspond to the passed hctx. This "works" accidentally
    most of the time, but it can cause us to read garbage if the second ctx
    came from an hctx with more ctx's than the first one (i.e., if
    ctx->index_hw[hctx->type] > hctx->nr_ctx).
    
    This manifested as this UBSAN array index out of bounds error reported
    by Jakub:
    
    UBSAN: array-index-out-of-bounds in ../kernel/locking/qspinlock.c:130:9
    index 13106 is out of range for type 'long unsigned int [128]'
    Call Trace:
     dump_stack+0xa4/0xe5
     ubsan_epilogue+0x5/0x40
     __ubsan_handle_out_of_bounds.cold.13+0x2a/0x34
     queued_spin_lock_slowpath+0x476/0x480
     do_raw_spin_lock+0x1c2/0x1d0
     kyber_bio_merge+0x112/0x180
     blk_mq_submit_bio+0x1f5/0x1100
     submit_bio_noacct+0x7b0/0x870
     submit_bio+0xc2/0x3a0
     btrfs_map_bio+0x4f0/0x9d0
     btrfs_submit_data_bio+0x24e/0x310
     submit_one_bio+0x7f/0xb0
     submit_extent_page+0xc4/0x440
     __extent_writepage_io+0x2b8/0x5e0
     __extent_writepage+0x28d/0x6e0
     extent_write_cache_pages+0x4d7/0x7a0
     extent_writepages+0xa2/0x110
     do_writepages+0x8f/0x180
     __writeback_single_inode+0x99/0x7f0
     writeback_sb_inodes+0x34e/0x790
     __writeback_inodes_wb+0x9e/0x120
     wb_writeback+0x4d2/0x660
     wb_workfn+0x64d/0xa10
     process_one_work+0x53a/0xa80
     worker_thread+0x69/0x5b0
     kthread+0x20b/0x240
     ret_from_fork+0x1f/0x30
    
    Only Kyber uses the hctx, so fix it by passing the request_queue to
    ->bio_merge() instead. BFQ and mq-deadline just use that, and Kyber can
    map the queues itself to avoid the mismatch.
    
    Fixes: a6088845c2bf ("block: kyber: make kyber more friendly with merging")
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Link: https://lore.kernel.org/r/c7598605401a48d5cfeadebb678abd10af22b83f.1620691329.git.osandov@fb.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dafd4c0b5e835db020cff11c74b4af9493a58e72
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat May 8 09:23:09 2021 +0200

    ACPI: scan: Fix a memory leak in an error handling path
    
    [ Upstream commit 0c8bd174f0fc131bc9dfab35cd8784f59045da87 ]
    
    If 'acpi_device_set_name()' fails, we must free
    'acpi_device_bus_id->bus_id' or there is a (potential) memory leak.
    
    Fixes: eb50aaf960e3 ("ACPI: scan: Use unique number for instance_no")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1648505d1353ab336bfe3165b6765d179b14c815
Author: Eddie James <eajames@linux.ibm.com>
Date:   Thu Apr 29 10:13:36 2021 -0500

    hwmon: (occ) Fix poll rate limiting
    
    [ Upstream commit 5216dff22dc2bbbbe6f00335f9fd2879670e753b ]
    
    The poll rate limiter time was initialized at zero. This breaks the
    comparison in time_after if jiffies is large. Switch to storing the
    next update time rather than the previous time, and initialize the
    time when the device is probed.
    
    Fixes: c10e753d43eb ("hwmon (occ): Add sensor types and versions")
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210429151336.18980-1-eajames@linux.ibm.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa1547f6e4fb3afc76bb3800cbd6306cdb60cf61
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu May 6 22:39:10 2021 +0200

    usb: fotg210-hcd: Fix an error message
    
    [ Upstream commit a60a34366e0d09ca002c966dd7c43a68c28b1f82 ]
    
    'retval' is known to be -ENODEV here.
    This is a hard-coded default error code which is not useful in the error
    message. Moreover, another error message is printed at the end of the
    error handling path. The corresponding error code (-ENOMEM) is more
    informative.
    
    So remove simplify the first error message.
    
    While at it, also remove the useless initialization of 'retval'.
    
    Fixes: 7d50195f6c50 ("usb: host: Faraday fotg210-hcd driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/94531bcff98e46d4f9c20183a90b7f47f699126c.1620333419.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57f99e92e2f7c421fb9a6c253c3a996e3be2260e
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Apr 12 13:32:02 2021 +0800

    iio: proximity: pulsedlight: Fix rumtime PM imbalance on error
    
    [ Upstream commit a2fa9242e89f27696515699fe0f0296bf1ac1815 ]
    
    When lidar_write_control() fails, a pairing PM usage counter
    decrement is needed to keep the counter balanced.
    
    Fixes: 4ac4e086fd8c5 ("iio: pulsedlight-lidar-lite: add runtime PM")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20210412053204.4889-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b94c23eaf5e243ae8071925f613241c0fce41e6
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Wed Apr 21 18:33:58 2021 +0300

    drm/i915: Avoid div-by-zero on gen2
    
    commit 4819d16d91145966ce03818a95169df1fd56b299 upstream.
    
    Gen2 tiles are 2KiB in size so i915_gem_object_get_tile_row_size()
    can in fact return <4KiB, which leads to div-by-zero here.
    Avoid that.
    
    Not sure i915_gem_object_get_tile_row_size() is entirely
    sane anyway since it doesn't account for the different tile
    layouts on i8xx/i915...
    
    I'm not able to hit this before commit 6846895fde05 ("drm/i915:
    Replace PIN_NONFAULT with calls to PIN_NOEVICT") and it looks
    like I also need to run recent version of Mesa. With those in
    place xonotic trips on this quite easily on my 85x.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210421153401.13847-2-ville.syrjala@linux.intel.com
    (cherry picked from commit ed52c62d386f764194e0184fdb905d5f24194cae)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9b2ac3f6ad12beb570719df5ddda08c1092a1a0
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Apr 30 12:56:56 2021 +0800

    drm/radeon/dpm: Disable sclk switching on Oland when two 4K 60Hz monitors are connected
    
    commit 227545b9a08c68778ddd89428f99c351fc9315ac upstream.
    
    Screen flickers rapidly when two 4K 60Hz monitors are in use. This issue
    doesn't happen when one monitor is 4K 60Hz (pixelclock 594MHz) and
    another one is 4K 30Hz (pixelclock 297MHz).
    
    The issue is gone after setting "power_dpm_force_performance_level" to
    "high". Following the indication, we found that the issue occurs when
    sclk is too low.
    
    So resolve the issue by disabling sclk switching when there are two
    monitors requires high pixelclock (> 297MHz).
    
    v2:
     - Only apply the fix to Oland.
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f77aa56ad9894468a8eb43279d23c000aabb1cc5
Author: Peter Xu <peterx@redhat.com>
Date:   Fri May 14 17:27:04 2021 -0700

    mm/hugetlb: fix F_SEAL_FUTURE_WRITE
    
    commit 22247efd822e6d263f3c8bd327f3f769aea9b1d9 upstream.
    
    Patch series "mm/hugetlb: Fix issues on file sealing and fork", v2.
    
    Hugh reported issue with F_SEAL_FUTURE_WRITE not applied correctly to
    hugetlbfs, which I can easily verify using the memfd_test program, which
    seems that the program is hardly run with hugetlbfs pages (as by default
    shmem).
    
    Meanwhile I found another probably even more severe issue on that hugetlb
    fork won't wr-protect child cow pages, so child can potentially write to
    parent private pages.  Patch 2 addresses that.
    
    After this series applied, "memfd_test hugetlbfs" should start to pass.
    
    This patch (of 2):
    
    F_SEAL_FUTURE_WRITE is missing for hugetlb starting from the first day.
    There is a test program for that and it fails constantly.
    
    $ ./memfd_test hugetlbfs
    memfd-hugetlb: CREATE
    memfd-hugetlb: BASIC
    memfd-hugetlb: SEAL-WRITE
    memfd-hugetlb: SEAL-FUTURE-WRITE
    mmap() didn't fail as expected
    Aborted (core dumped)
    
    I think it's probably because no one is really running the hugetlbfs test.
    
    Fix it by checking FUTURE_WRITE also in hugetlbfs_file_mmap() as what we
    do in shmem_mmap().  Generalize a helper for that.
    
    Link: https://lkml.kernel.org/r/20210503234356.9097-1-peterx@redhat.com
    Link: https://lkml.kernel.org/r/20210503234356.9097-2-peterx@redhat.com
    Fixes: ab3948f58ff84 ("mm/memfd: add an F_SEAL_FUTURE_WRITE seal to memfd")
    Signed-off-by: Peter Xu <peterx@redhat.com>
    Reported-by: Hugh Dickins <hughd@google.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Joel Fernandes (Google) <joel@joelfernandes.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3f1731c6d7fbc1ebe3ed8eff6d6bec56d76ff43
Author: Axel Rasmussen <axelrasmussen@google.com>
Date:   Fri May 14 17:27:19 2021 -0700

    userfaultfd: release page in error path to avoid BUG_ON
    
    commit 7ed9d238c7dbb1fdb63ad96a6184985151b0171c upstream.
    
    Consider the following sequence of events:
    
    1. Userspace issues a UFFD ioctl, which ends up calling into
       shmem_mfill_atomic_pte(). We successfully account the blocks, we
       shmem_alloc_page(), but then the copy_from_user() fails. We return
       -ENOENT. We don't release the page we allocated.
    2. Our caller detects this error code, tries the copy_from_user() after
       dropping the mmap_lock, and retries, calling back into
       shmem_mfill_atomic_pte().
    3. Meanwhile, let's say another process filled up the tmpfs being used.
    4. So shmem_mfill_atomic_pte() fails to account blocks this time, and
       immediately returns - without releasing the page.
    
    This triggers a BUG_ON in our caller, which asserts that the page
    should always be consumed, unless -ENOENT is returned.
    
    To fix this, detect if we have such a "dangling" page when accounting
    fails, and if so, release it before returning.
    
    Link: https://lkml.kernel.org/r/20210428230858.348400-1-axelrasmussen@google.com
    Fixes: cb658a453b93 ("userfaultfd: shmem: avoid leaking blocks and used blocks in UFFDIO_COPY")
    Signed-off-by: Axel Rasmussen <axelrasmussen@google.com>
    Reported-by: Hugh Dickins <hughd@google.com>
    Acked-by: Hugh Dickins <hughd@google.com>
    Reviewed-by: Peter Xu <peterx@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b8d4206a48ccb4eab7e061c2bb1f0a501b94627
Author: Phillip Lougher <phillip@squashfs.org.uk>
Date:   Fri May 14 17:27:16 2021 -0700

    squashfs: fix divide error in calculate_skip()
    
    commit d6e621de1fceb3b098ebf435ef7ea91ec4838a1a upstream.
    
    Sysbot has reported a "divide error" which has been identified as being
    caused by a corrupted file_size value within the file inode.  This value
    has been corrupted to a much larger value than expected.
    
    Calculate_skip() is passed i_size_read(inode) >> msblk->block_log.  Due to
    the file_size value corruption this overflows the int argument/variable in
    that function, leading to the divide error.
    
    This patch changes the function to use u64.  This will accommodate any
    unexpectedly large values due to corruption.
    
    The value returned from calculate_skip() is clamped to be never more than
    SQUASHFS_CACHED_BLKS - 1, or 7.  So file_size corruption does not lead to
    an unexpectedly large return result here.
    
    Link: https://lkml.kernel.org/r/20210507152618.9447-1-phillip@squashfs.org.uk
    Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>
    Reported-by: <syzbot+e8f781243ce16ac2f962@syzkaller.appspotmail.com>
    Reported-by: <syzbot+7b98870d4fec9447b951@syzkaller.appspotmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c451a6bafb5f422197d31536f82116aed132b72c
Author: Jouni Roivas <jouni.roivas@tuxera.com>
Date:   Fri May 14 17:27:33 2021 -0700

    hfsplus: prevent corruption in shrinking truncate
    
    commit c3187cf32216313fb316084efac4dab3a8459b1d upstream.
    
    I believe there are some issues introduced by commit 31651c607151
    ("hfsplus: avoid deadlock on file truncation")
    
    HFS+ has extent records which always contains 8 extents.  In case the
    first extent record in catalog file gets full, new ones are allocated from
    extents overflow file.
    
    In case shrinking truncate happens to middle of an extent record which
    locates in extents overflow file, the logic in hfsplus_file_truncate() was
    changed so that call to hfs_brec_remove() is not guarded any more.
    
    Right action would be just freeing the extents that exceed the new size
    inside extent record by calling hfsplus_free_extents(), and then check if
    the whole extent record should be removed.  However since the guard
    (blk_cnt > start) is now after the call to hfs_brec_remove(), this has
    unfortunate effect that the last matching extent record is removed
    unconditionally.
    
    To reproduce this issue, create a file which has at least 10 extents, and
    then perform shrinking truncate into middle of the last extent record, so
    that the number of remaining extents is not under or divisible by 8.  This
    causes the last extent record (8 extents) to be removed totally instead of
    truncating into middle of it.  Thus this causes corruption, and lost data.
    
    Fix for this is simply checking if the new truncated end is below the
    start of this extent record, making it safe to remove the full extent
    record.  However call to hfs_brec_remove() can't be moved to it's previous
    place since we're dropping ->tree_lock and it can cause a race condition
    and the cached info being invalidated possibly corrupting the node data.
    
    Another issue is related to this one.  When entering into the block
    (blk_cnt > start) we are not holding the ->tree_lock.  We break out from
    the loop not holding the lock, but hfs_find_exit() does unlock it.  Not
    sure if it's possible for someone else to take the lock under our feet,
    but it can cause hard to debug errors and premature unlocking.  Even if
    there's no real risk of it, the locking should still always be kept in
    balance.  Thus taking the lock now just before the check.
    
    Link: https://lkml.kernel.org/r/20210429165139.3082828-1-jouni.roivas@tuxera.com
    Fixes: 31651c607151f ("hfsplus: avoid deadlock on file truncation")
    Signed-off-by: Jouni Roivas <jouni.roivas@tuxera.com>
    Reviewed-by: Anton Altaparmakov <anton@tuxera.com>
    Cc: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Cc: Viacheslav Dubeyko <slava@dubeyko.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b4eb172cc12dc102cd0ad013e53ee4463db9508
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu May 6 14:49:59 2021 +1000

    powerpc/64s: Fix crashes when toggling entry flush barrier
    
    commit aec86b052df6541cc97c5fca44e5934cbea4963b upstream.
    
    The entry flush mitigation can be enabled/disabled at runtime via a
    debugfs file (entry_flush), which causes the kernel to patch itself to
    enable/disable the relevant mitigations.
    
    However depending on which mitigation we're using, it may not be safe to
    do that patching while other CPUs are active. For example the following
    crash:
    
      sleeper[15639]: segfault (11) at c000000000004c20 nip c000000000004c20 lr c000000000004c20
    
    Shows that we returned to userspace with a corrupted LR that points into
    the kernel, due to executing the partially patched call to the fallback
    entry flush (ie. we missed the LR restore).
    
    Fix it by doing the patching under stop machine. The CPUs that aren't
    doing the patching will be spinning in the core of the stop machine
    logic. That is currently sufficient for our purposes, because none of
    the patching we do is to that code or anywhere in the vicinity.
    
    Fixes: f79643787e0a ("powerpc/64s: flush L1D on kernel entry")
    Cc: stable@vger.kernel.org # v5.10+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210506044959.1298123-2-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 379ea3a4e34b18cb59a81c9cc74eaa37779b445d
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu May 6 14:49:58 2021 +1000

    powerpc/64s: Fix crashes when toggling stf barrier
    
    commit 8ec7791bae1327b1c279c5cd6e929c3b12daaf0a upstream.
    
    The STF (store-to-load forwarding) barrier mitigation can be
    enabled/disabled at runtime via a debugfs file (stf_barrier), which
    causes the kernel to patch itself to enable/disable the relevant
    mitigations.
    
    However depending on which mitigation we're using, it may not be safe to
    do that patching while other CPUs are active. For example the following
    crash:
    
      User access of kernel address (c00000003fff5af0) - exploit attempt? (uid: 0)
      segfault (11) at c00000003fff5af0 nip 7fff8ad12198 lr 7fff8ad121f8 code 1
      code: 40820128 e93c00d0 e9290058 7c292840 40810058 38600000 4bfd9a81 e8410018
      code: 2c030006 41810154 3860ffb6 e9210098 <e94d8ff0> 7d295279 39400000 40820a3c
    
    Shows that we returned to userspace without restoring the user r13
    value, due to executing the partially patched STF exit code.
    
    Fix it by doing the patching under stop machine. The CPUs that aren't
    doing the patching will be spinning in the core of the stop machine
    logic. That is currently sufficient for our purposes, because none of
    the patching we do is to that code or anywhere in the vicinity.
    
    Fixes: a048a07d7f45 ("powerpc/64s: Add support for a store forwarding barrier at kernel entry/exit")
    Cc: stable@vger.kernel.org # v4.17+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210506044959.1298123-1-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cca6cc73bb9099eaf7c4c74e1093c27ea6c981e
Author: Vladimir Isaev <isaev@synopsys.com>
Date:   Tue Apr 27 15:12:37 2021 +0300

    ARC: mm: PAE: use 40-bit physical page mask
    
    commit c5f756d8c6265ebb1736a7787231f010a3b782e5 upstream.
    
    32-bit PAGE_MASK can not be used as a mask for physical addresses
    when PAE is enabled. PAGE_MASK_PHYS must be used for physical
    addresses instead of PAGE_MASK.
    
    Without this, init gets SIGSEGV if pte_modify was called:
    
    | potentially unexpected fatal signal 11.
    | Path: /bin/busybox
    | CPU: 0 PID: 1 Comm: init Not tainted 5.12.0-rc5-00003-g1e43c377a79f-dirty
    | Insn could not be fetched
    |     @No matching VMA found
    |  ECR: 0x00040000 EFA: 0x00000000 ERET: 0x00000000
    | STAT: 0x80080082 [IE U     ]   BTA: 0x00000000
    |  SP: 0x5f9ffe44  FP: 0x00000000 BLK: 0xaf3d4
    | LPS: 0x000d093e LPE: 0x000d0950 LPC: 0x00000000
    | r00: 0x00000002 r01: 0x5f9fff14 r02: 0x5f9fff20
    | ...
    | Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
    
    Signed-off-by: Vladimir Isaev <isaev@synopsys.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e242c138ae0195edcb1a8682864e766360065808
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Apr 23 12:16:25 2021 -0700

    ARC: entry: fix off-by-one error in syscall number validation
    
    commit 3433adc8bd09fc9f29b8baddf33b4ecd1ecd2cdc upstream.
    
    We have NR_syscall syscalls from [0 .. NR_syscall-1].
    However the check for invalid syscall number is "> NR_syscall" as
    opposed to >=. This off-by-one error erronesously allows "NR_syscall"
    to be treated as valid syscall causeing out-of-bounds access into
    syscall-call table ensuing a crash (holes within syscall table have a
    invalid-entry handler but this is beyond the array implementing the
    table).
    
    This problem showed up on v5.6 kernel when testing glibc 2.33 (v5.10
    kernel capable, includng faccessat2 syscall 439). The v5.6 kernel has
    NR_syscalls=439 (0 to 438). Due to the bug, 439 passed by glibc was
    not handled as -ENOSYS but processed leading to a crash.
    
    Link: https://github.com/foss-for-synopsys-dwc-arc-processors/linux/issues/48
    Reported-by: Shahab Vahedi <shahab@synopsys.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c1d454726fc72e3e9286bb5e505273221250478
Author: Mateusz Palczewski <mateusz.palczewski@intel.com>
Date:   Tue Apr 13 14:43:07 2021 +0000

    i40e: Fix PHY type identifiers for 2.5G and 5G adapters
    
    [ Upstream commit 15395ec4685bd45a43d1b54b8fd9846b87e2c621 ]
    
    Unlike other supported adapters, 2.5G and 5G use different
    PHY type identifiers for reading/writing PHY settings
    and for reading link status. This commit introduces
    separate PHY identifiers for these two operation types.
    
    Fixes: 2e45d3f4677a ("i40e: Add support for X710 B/P & SFP+ cards")
    Signed-off-by: Dawid Lukwinski <dawid.lukwinski@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Reviewed-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e7b538a9af5c5f92a5084f68bf3ba9ca3e0d3d1
Author: Jaroslaw Gawin <jaroslawx.gawin@intel.com>
Date:   Tue Apr 13 14:19:40 2021 +0000

    i40e: fix the restart auto-negotiation after FEC modified
    
    [ Upstream commit 61343e6da7810de81d6b826698946ae4f9070819 ]
    
    When FEC mode was changed the link didn't know it because
    the link was not reset and new parameters were not negotiated.
    Set a flag 'I40E_AQ_PHY_ENABLE_ATOMIC_LINK' in 'abilities'
    to restart the link and make it run with the new settings.
    
    Fixes: 1d96340196f1 ("i40e: Add support FEC configuration for Fortville 25G")
    Signed-off-by: Jaroslaw Gawin <jaroslawx.gawin@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d718c15a2bf9ae082d5ae4d177fb19ef23cb4132
Author: Yunjian Wang <wangyunjian@huawei.com>
Date:   Mon Apr 12 22:41:18 2021 +0800

    i40e: Fix use-after-free in i40e_client_subtask()
    
    [ Upstream commit 38318f23a7ef86a8b1862e5e8078c4de121960c3 ]
    
    Currently the call to i40e_client_del_instance frees the object
    pf->cinst, however pf->cinst->lan_info is being accessed after
    the free. Fix this by adding the missing return.
    
    Addresses-Coverity: ("Read from pointer after free")
    Fixes: 7b0b1a6d0ac9 ("i40e: Disable iWARP VSI PETCP_ENA flag on netdev down events")
    Signed-off-by: Yunjian Wang <wangyunjian@huawei.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c77e2ef18167ad334e27610ced9a7f6af5ec1787
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu May 6 05:53:23 2021 -0700

    netfilter: nftables: avoid overflows in nft_hash_buckets()
    
    [ Upstream commit a54754ec9891830ba548e2010c889e3c8146e449 ]
    
    Number of buckets being stored in 32bit variables, we have to
    ensure that no overflows occur in nft_hash_buckets()
    
    syzbot injected a size == 0x40000000 and reported:
    
    UBSAN: shift-out-of-bounds in ./include/linux/log2.h:57:13
    shift exponent 64 is too large for 64-bit type 'long unsigned int'
    CPU: 1 PID: 29539 Comm: syz-executor.4 Not tainted 5.12.0-rc7-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     __roundup_pow_of_two include/linux/log2.h:57 [inline]
     nft_hash_buckets net/netfilter/nft_set_hash.c:411 [inline]
     nft_hash_estimate.cold+0x19/0x1e net/netfilter/nft_set_hash.c:652
     nft_select_set_ops net/netfilter/nf_tables_api.c:3586 [inline]
     nf_tables_newset+0xe62/0x3110 net/netfilter/nf_tables_api.c:4322
     nfnetlink_rcv_batch+0xa09/0x24b0 net/netfilter/nfnetlink.c:488
     nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:612 [inline]
     nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:630
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
    
    Fixes: 0ed6389c483d ("netfilter: nf_tables: rename set implementations")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8cfa7aff11d2383e7a7a4b581affb496aa213dd
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Thu May 6 18:04:38 2021 -0700

    kernel: kexec_file: fix error return code of kexec_calculate_store_digests()
    
    [ Upstream commit 31d82c2c787d5cf65fedd35ebbc0c1bd95c1a679 ]
    
    When vzalloc() returns NULL to sha_regions, no error return code of
    kexec_calculate_store_digests() is assigned.  To fix this bug, ret is
    assigned with -ENOMEM in this case.
    
    Link: https://lkml.kernel.org/r/20210309083904.24321-1-baijiaju1990@gmail.com
    Fixes: a43cac0d9dc2 ("kexec: split kexec_file syscall code to kexec_file.c")
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Acked-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 043ebbccdde6a58e49bf80aacd061adde37f50d8
Author: Odin Ugedal <odin@uged.al>
Date:   Sat May 1 16:19:50 2021 +0200

    sched/fair: Fix unfairness caused by missing load decay
    
    [ Upstream commit 0258bdfaff5bd13c4d2383150b7097aecd6b6d82 ]
    
    This fixes an issue where old load on a cfs_rq is not properly decayed,
    resulting in strange behavior where fairness can decrease drastically.
    Real workloads with equally weighted control groups have ended up
    getting a respective 99% and 1%(!!) of cpu time.
    
    When an idle task is attached to a cfs_rq by attaching a pid to a cgroup,
    the old load of the task is attached to the new cfs_rq and sched_entity by
    attach_entity_cfs_rq. If the task is then moved to another cpu (and
    therefore cfs_rq) before being enqueued/woken up, the load will be moved
    to cfs_rq->removed from the sched_entity. Such a move will happen when
    enforcing a cpuset on the task (eg. via a cgroup) that force it to move.
    
    The load will however not be removed from the task_group itself, making
    it look like there is a constant load on that cfs_rq. This causes the
    vruntime of tasks on other sibling cfs_rq's to increase faster than they
    are supposed to; causing severe fairness issues. If no other task is
    started on the given cfs_rq, and due to the cpuset it would not happen,
    this load would never be properly unloaded. With this patch the load
    will be properly removed inside update_blocked_averages. This also
    applies to tasks moved to the fair scheduling class and moved to another
    cpu, and this path will also fix that. For fork, the entity is queued
    right away, so this problem does not affect that.
    
    This applies to cases where the new process is the first in the cfs_rq,
    issue introduced 3d30544f0212 ("sched/fair: Apply more PELT fixes"), and
    when there has previously been load on the cgroup but the cgroup was
    removed from the leaflist due to having null PELT load, indroduced
    in 039ae8bcf7a5 ("sched/fair: Fix O(nr_cgroups) in the load balancing
    path").
    
    For a simple cgroup hierarchy (as seen below) with two equally weighted
    groups, that in theory should get 50/50 of cpu time each, it often leads
    to a load of 60/40 or 70/30.
    
    parent/
      cg-1/
        cpu.weight: 100
        cpuset.cpus: 1
      cg-2/
        cpu.weight: 100
        cpuset.cpus: 1
    
    If the hierarchy is deeper (as seen below), while keeping cg-1 and cg-2
    equally weighted, they should still get a 50/50 balance of cpu time.
    This however sometimes results in a balance of 10/90 or 1/99(!!) between
    the task groups.
    
    $ ps u -C stress
    USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
    root       18568  1.1  0.0   3684   100 pts/12   R+   13:36   0:00 stress --cpu 1
    root       18580 99.3  0.0   3684   100 pts/12   R+   13:36   0:09 stress --cpu 1
    
    parent/
      cg-1/
        cpu.weight: 100
        sub-group/
          cpu.weight: 1
          cpuset.cpus: 1
      cg-2/
        cpu.weight: 100
        sub-group/
          cpu.weight: 10000
          cpuset.cpus: 1
    
    This can be reproduced by attaching an idle process to a cgroup and
    moving it to a given cpuset before it wakes up. The issue is evident in
    many (if not most) container runtimes, and has been reproduced
    with both crun and runc (and therefore docker and all its "derivatives"),
    and with both cgroup v1 and v2.
    
    Fixes: 3d30544f0212 ("sched/fair: Apply more PELT fixes")
    Fixes: 039ae8bcf7a5 ("sched/fair: Fix O(nr_cgroups) in the load balancing path")
    Signed-off-by: Odin Ugedal <odin@uged.al>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lkml.kernel.org/r/20210501141950.23622-2-odin@uged.al
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 687f523c134b7f0bd040ee1230f6d17990d54172
Author: Quentin Perret <qperret@google.com>
Date:   Fri Apr 30 15:14:12 2021 +0000

    sched: Fix out-of-bound access in uclamp
    
    [ Upstream commit 6d2f8909a5fabb73fe2a63918117943986c39b6c ]
    
    Util-clamp places tasks in different buckets based on their clamp values
    for performance reasons. However, the size of buckets is currently
    computed using a rounding division, which can lead to an off-by-one
    error in some configurations.
    
    For instance, with 20 buckets, the bucket size will be 1024/20=51. A
    task with a clamp of 1024 will be mapped to bucket id 1024/51=20. Sadly,
    correct indexes are in range [0,19], hence leading to an out of bound
    memory access.
    
    Clamp the bucket id to fix the issue.
    
    Fixes: 69842cba9ace ("sched/uclamp: Add CPU's clamp buckets refcounting")
    Suggested-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Quentin Perret <qperret@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Link: https://lkml.kernel.org/r/20210430151412.160913-1-qperret@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51d3e462ea913a161c17e2eb8f658591d30a53bf
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed May 5 13:32:27 2021 +0200

    can: m_can: m_can_tx_work_queue(): fix tx_skb race condition
    
    [ Upstream commit e04b2cfe61072c7966e1a5fb73dd1feb30c206ed ]
    
    The m_can_start_xmit() function checks if the cdev->tx_skb is NULL and
    returns with NETDEV_TX_BUSY in case tx_sbk is not NULL.
    
    There is a race condition in the m_can_tx_work_queue(), where first
    the skb is send to the driver and then the case tx_sbk is set to NULL.
    A TX complete IRQ might come in between and wake the queue, which
    results in tx_skb not being cleared yet.
    
    Fixes: f524f829b75a ("can: m_can: Create a m_can platform framework")
    Tested-by: Torin Cooper-Bennun <torin@maxiluxsystems.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8e3c76cc8c526ab4f3ac52c9572d2e1bda231b0
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed May 5 22:25:24 2021 +0200

    netfilter: nfnetlink_osf: Fix a missing skb_header_pointer() NULL check
    
    [ Upstream commit 5e024c325406470d1165a09c6feaf8ec897936be ]
    
    Do not assume that the tcph->doff field is correct when parsing for TCP
    options, skb_header_pointer() might fail to fetch these bits.
    
    Fixes: 11eeef41d5f6 ("netfilter: passive OS fingerprint xtables match")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca74d0dbaffa78f73d0f0238d63c64494452195b
Author: Cong Wang <cong.wang@bytedance.com>
Date:   Wed May 5 12:40:48 2021 -0700

    smc: disallow TCP_ULP in smc_setsockopt()
    
    [ Upstream commit 8621436671f3a4bba5db57482e1ee604708bf1eb ]
    
    syzbot is able to setup kTLS on an SMC socket which coincidentally
    uses sk_user_data too. Later, kTLS treats it as psock so triggers a
    refcnt warning. The root cause is that smc_setsockopt() simply calls
    TCP setsockopt() which includes TCP_ULP. I do not think it makes
    sense to setup kTLS on top of SMC sockets, so we should just disallow
    this setup.
    
    It is hard to find a commit to blame, but we can apply this patch
    since the beginning of TCP_ULP.
    
    Reported-and-tested-by: syzbot+b54a1ce86ba4a623b7f0@syzkaller.appspotmail.com
    Fixes: 734942cc4ea6 ("tcp: ULP infrastructure")
    Cc: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: Cong Wang <cong.wang@bytedance.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f9f92e2ecec63334af733f47d3f69cced8258e5
Author: Maciej Żenczykowski <maze@google.com>
Date:   Wed May 5 09:58:31 2021 -0700

    net: fix nla_strcmp to handle more then one trailing null character
    
    [ Upstream commit 2c16db6c92b0ee4aa61e88366df82169e83c3f7e ]
    
    Android userspace has been using TCA_KIND with a char[IFNAMESIZ]
    many-null-terminated buffer containing the string 'bpf'.
    
    This works on 4.19 and ceases to work on 5.10.
    
    I'm not entirely sure what fixes tag to use, but I think the issue
    was likely introduced in the below mentioned 5.4 commit.
    
    Reported-by: Nucca Chen <nuccachen@google.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <jakub.kicinski@netronome.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Jiri Pirko <jiri@mellanox.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Fixes: 62794fc4fbf5 ("net_sched: add max len check for TCA_KIND")
    Change-Id: I66dc281f165a2858fc29a44869a270a2d698a82b
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aeba28d1213982274b34c365b4673473386bdea
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue May 4 18:37:45 2021 -0700

    ksm: fix potential missing rmap_item for stable_node
    
    [ Upstream commit c89a384e2551c692a9fe60d093fd7080f50afc51 ]
    
    When removing rmap_item from stable tree, STABLE_FLAG of rmap_item is
    cleared with head reserved.  So the following scenario might happen: For
    ksm page with rmap_item1:
    
    cmp_and_merge_page
      stable_node->head = &migrate_nodes;
      remove_rmap_item_from_tree, but head still equal to stable_node;
      try_to_merge_with_ksm_page failed;
      return;
    
    For the same ksm page with rmap_item2, stable node migration succeed this
    time.  The stable_node->head does not equal to migrate_nodes now.  For ksm
    page with rmap_item1 again:
    
    cmp_and_merge_page
     stable_node->head != &migrate_nodes && rmap_item->head == stable_node
     return;
    
    We would miss the rmap_item for stable_node and might result in failed
    rmap_walk_ksm().  Fix this by set rmap_item->head to NULL when rmap_item
    is removed from stable tree.
    
    Link: https://lkml.kernel.org/r/20210330140228.45635-5-linmiaohe@huawei.com
    Fixes: 4146d2d673e8 ("ksm: make !merge_across_nodes migration safe")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Hugh Dickins <hughd@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dde73137ce9c0e5fcfef206318ff0ea27f661847
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue May 4 18:37:10 2021 -0700

    mm/migrate.c: fix potential indeterminate pte entry in migrate_vma_insert_page()
    
    [ Upstream commit 34f5e9b9d1990d286199084efa752530ee3d8297 ]
    
    If the zone device page does not belong to un-addressable device memory,
    the variable entry will be uninitialized and lead to indeterminate pte
    entry ultimately.  Fix this unexpected case and warn about it.
    
    Link: https://lkml.kernel.org/r/20210325131524.48181-4-linmiaohe@huawei.com
    Fixes: df6ad69838fc ("mm/device-public-memory: device memory cache coherent with CPU")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Alistair Popple <apopple@nvidia.com>
    Cc: Jerome Glisse <jglisse@redhat.com>
    Cc: Rafael Aquini <aquini@redhat.com>
    Cc: Yang Shi <shy828301@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 262943265d976ee16cad9f76781c99f723a6d3ad
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue May 4 18:34:38 2021 -0700

    mm/hugeltb: handle the error case in hugetlb_fix_reserve_counts()
    
    [ Upstream commit da56388c4397878a65b74f7fe97760f5aa7d316b ]
    
    A rare out of memory error would prevent removal of the reserve map region
    for a page.  hugetlb_fix_reserve_counts() handles this rare case to avoid
    dangling with incorrect counts.  Unfortunately, hugepage_subpool_get_pages
    and hugetlb_acct_memory could possibly fail too.  We should correctly
    handle these cases.
    
    Link: https://lkml.kernel.org/r/20210410072348.20437-5-linmiaohe@huawei.com
    Fixes: b5cec28d36f5 ("hugetlbfs: truncate_hugepages() takes a range of pages")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Feilong Lin <linfeilong@huawei.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ddbd4beadfa1f7ce400c8683385399b02baf963
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue May 4 18:33:46 2021 -0700

    khugepaged: fix wrong result value for trace_mm_collapse_huge_page_isolate()
    
    [ Upstream commit 74e579bf231a337ab3786d59e64bc94f45ca7b3f ]
    
    In writable and !referenced case, the result value should be
    SCAN_LACK_REFERENCED_PAGE for trace_mm_collapse_huge_page_isolate()
    instead of default 0 (SCAN_FAIL) here.
    
    Link: https://lkml.kernel.org/r/20210306032947.35921-5-linmiaohe@huawei.com
    Fixes: 7d2eba0557c1 ("mm: add tracepoint for scanning pages")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Ebru Akagunduz <ebru.akagunduz@gmail.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Rik van Riel <riel@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1816d1b3272a8a9a26e9e3e6ff7ca631a006c5e5
Author: Kees Cook <keescook@chromium.org>
Date:   Sun May 2 22:06:08 2021 -0700

    drm/radeon: Avoid power table parsing memory leaks
    
    [ Upstream commit c69f27137a38d24301a6b659454a91ad85dff4aa ]
    
    Avoid leaving a hanging pre-allocated clock_info if last mode is
    invalid, and avoid heap corruption if no valid modes are found.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=211537
    Fixes: 6991b8f2a319 ("drm/radeon/kms: fix segfault in pm rework")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e0b76725c38f9ba506b5482929c3aba230297e3
Author: Kees Cook <keescook@chromium.org>
Date:   Sun May 2 22:06:07 2021 -0700

    drm/radeon: Fix off-by-one power_state index heap overwrite
    
    [ Upstream commit 5bbf219328849e83878bddb7c226d8d42e84affc ]
    
    An out of bounds write happens when setting the default power state.
    KASAN sees this as:
    
    [drm] radeon: 512M of GTT memory ready.
    [drm] GART: num cpu pages 131072, num gpu pages 131072
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in
    radeon_atombios_parse_power_table_1_3+0x1837/0x1998 [radeon]
    Write of size 4 at addr ffff88810178d858 by task systemd-udevd/157
    
    CPU: 0 PID: 157 Comm: systemd-udevd Not tainted 5.12.0-E620 #50
    Hardware name: eMachines        eMachines E620  /Nile       , BIOS V1.03 09/30/2008
    Call Trace:
     dump_stack+0xa5/0xe6
     print_address_description.constprop.0+0x18/0x239
     kasan_report+0x170/0x1a8
     radeon_atombios_parse_power_table_1_3+0x1837/0x1998 [radeon]
     radeon_atombios_get_power_modes+0x144/0x1888 [radeon]
     radeon_pm_init+0x1019/0x1904 [radeon]
     rs690_init+0x76e/0x84a [radeon]
     radeon_device_init+0x1c1a/0x21e5 [radeon]
     radeon_driver_load_kms+0xf5/0x30b [radeon]
     drm_dev_register+0x255/0x4a0 [drm]
     radeon_pci_probe+0x246/0x2f6 [radeon]
     pci_device_probe+0x1aa/0x294
     really_probe+0x30e/0x850
     driver_probe_device+0xe6/0x135
     device_driver_attach+0xc1/0xf8
     __driver_attach+0x13f/0x146
     bus_for_each_dev+0xfa/0x146
     bus_add_driver+0x2b3/0x447
     driver_register+0x242/0x2c1
     do_one_initcall+0x149/0x2fd
     do_init_module+0x1ae/0x573
     load_module+0x4dee/0x5cca
     __do_sys_finit_module+0xf1/0x140
     do_syscall_64+0x33/0x40
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Without KASAN, this will manifest later when the kernel attempts to
    allocate memory that was stomped, since it collides with the inline slab
    freelist pointer:
    
    invalid opcode: 0000 [#1] SMP NOPTI
    CPU: 0 PID: 781 Comm: openrc-run.sh Tainted: G        W 5.10.12-gentoo-E620 #2
    Hardware name: eMachines        eMachines E620  /Nile , BIOS V1.03       09/30/2008
    RIP: 0010:kfree+0x115/0x230
    Code: 89 c5 e8 75 ea ff ff 48 8b 00 0f ba e0 09 72 63 e8 1f f4 ff ff 41 89 c4 48 8b 45 00 0f ba e0 10 72 0a 48 8b 45 08 a8 01 75 02 <0f> 0b 44 89 e1 48 c7 c2 00 f0 ff ff be 06 00 00 00 48 d3 e2 48 c7
    RSP: 0018:ffffb42f40267e10 EFLAGS: 00010246
    RAX: ffffd61280ee8d88 RBX: 0000000000000004 RCX: 000000008010000d
    RDX: 4000000000000000 RSI: ffffffffba1360b0 RDI: ffffd61280ee8d80
    RBP: ffffd61280ee8d80 R08: ffffffffb91bebdf R09: 0000000000000000
    R10: ffff8fe2c1047ac8 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000100
    FS:  00007fe80eff6b68(0000) GS:ffff8fe339c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fe80eec7bc0 CR3: 0000000038012000 CR4: 00000000000006f0
    Call Trace:
     __free_fdtable+0x16/0x1f
     put_files_struct+0x81/0x9b
     do_exit+0x433/0x94d
     do_group_exit+0xa6/0xa6
     __x64_sys_exit_group+0xf/0xf
     do_syscall_64+0x33/0x40
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x7fe80ef64bea
    Code: Unable to access opcode bytes at RIP 0x7fe80ef64bc0.
    RSP: 002b:00007ffdb1c47528 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
    RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fe80ef64bea
    RDX: 00007fe80ef64f60 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
    R10: 00007fe80ee2c620 R11: 0000000000000246 R12: 00007fe80eff41e0
    R13: 00000000ffffffff R14: 0000000000000024 R15: 00007fe80edf9cd0
    Modules linked in: radeon(+) ath5k(+) snd_hda_codec_realtek ...
    
    Use a valid power_state index when initializing the "flags" and "misc"
    and "misc2" fields.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=211537
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Fixes: a48b9b4edb8b ("drm/radeon/kms/pm: add asic specific callbacks for getting power state (v2)")
    Fixes: 79daedc94281 ("drm/radeon/kms: minor pm cleanups")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e3cbdc52318ae4e40fa88ade746b29def80ce0f
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Fri Apr 30 14:00:13 2021 +0200

    netfilter: xt_SECMARK: add new revision to fix structure layout
    
    [ Upstream commit c7d13358b6a2f49f81a34aa323a2d0878a0532a2 ]
    
    This extension breaks when trying to delete rules, add a new revision to
    fix this.
    
    Fixes: 5e6874cdb8de ("[SECMARK]: Add xtables SECMARK target")
    Signed-off-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a0a9f5cf8b5e676b17e574bf9028a60b06867d0
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon May 3 04:41:20 2021 +0800

    sctp: fix a SCTP_MIB_CURRESTAB leak in sctp_sf_do_dupcook_b
    
    [ Upstream commit f282df0391267fb2b263da1cc3233aa6fb81defc ]
    
    Normally SCTP_MIB_CURRESTAB is always incremented once asoc enter into
    ESTABLISHED from the state < ESTABLISHED and decremented when the asoc
    is being deleted.
    
    However, in sctp_sf_do_dupcook_b(), the asoc's state can be changed to
    ESTABLISHED from the state >= ESTABLISHED where it shouldn't increment
    SCTP_MIB_CURRESTAB. Otherwise, one asoc may increment MIB_CURRESTAB
    multiple times but only decrement once at the end.
    
    I was able to reproduce it by using scapy to do the 4-way shakehands,
    after that I replayed the COOKIE-ECHO chunk with 'peer_vtag' field
    changed to different values, and SCTP_MIB_CURRESTAB was incremented
    multiple times and never went back to 0 even when the asoc was freed.
    
    This patch is to fix it by only incrementing SCTP_MIB_CURRESTAB when
    the state < ESTABLISHED in sctp_sf_do_dupcook_b().
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7f6f07774091a6ddd98500b85386c3c6afb30d3
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Sun May 2 04:58:18 2021 -0700

    ethernet:enic: Fix a use after free bug in enic_hard_start_xmit
    
    [ Upstream commit 643001b47adc844ae33510c4bb93c236667008a3 ]
    
    In enic_hard_start_xmit, it calls enic_queue_wq_skb(). Inside
    enic_queue_wq_skb, if some error happens, the skb will be freed
    by dev_kfree_skb(skb). But the freed skb is still used in
    skb_tx_timestamp(skb).
    
    My patch makes enic_queue_wq_skb() return error and goto spin_unlock()
    incase of error. The solution is provided by Govind.
    See https://lkml.org/lkml/2021/4/30/961.
    
    Fixes: fb7516d42478e ("enic: add sw timestamp support")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Acked-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a04c2a398dc9069297b416477ada3f8a3d675741
Author: Baptiste Lepers <baptiste.lepers@gmail.com>
Date:   Sat May 1 14:10:51 2021 +1000

    sunrpc: Fix misplaced barrier in call_decode
    
    [ Upstream commit f8f7e0fb22b2e75be55f2f0c13e229e75b0eac07 ]
    
    Fix a misplaced barrier in call_decode. The struct rpc_rqst is modified
    as follows by xprt_complete_rqst:
    
    req->rq_private_buf.len = copied;
    /* Ensure all writes are done before we update */
    /* req->rq_reply_bytes_recvd */
    smp_wmb();
    req->rq_reply_bytes_recvd = copied;
    
    And currently read as follows by call_decode:
    
    smp_rmb(); // misplaced
    if (!req->rq_reply_bytes_recvd)
       goto out;
    req->rq_rcv_buf.len = req->rq_private_buf.len;
    
    This patch places the smp_rmb after the if to ensure that
    rq_reply_bytes_recvd and rq_private_buf.len are read in order.
    
    Fixes: 9ba828861c56a ("SUNRPC: Don't try to parse incomplete RPC messages")
    Signed-off-by: Baptiste Lepers <baptiste.lepers@gmail.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8168792c3fb42136134f6cfee880f4ef2469221
Author: Anup Patel <anup.patel@wdc.com>
Date:   Thu Apr 15 14:25:22 2021 +0530

    RISC-V: Fix error code returned by riscv_hartid_to_cpuid()
    
    [ Upstream commit 533b4f3a789d49574e7ae0f6ececed153f651f97 ]
    
    We should return a negative error code upon failure in
    riscv_hartid_to_cpuid() instead of NR_CPUS. This is also
    aligned with all uses of riscv_hartid_to_cpuid() which
    expect negative error code upon failure.
    
    Fixes: 6825c7a80f18 ("RISC-V: Add logical CPU indexing for RISC-V")
    Fixes: f99fb607fb2b ("RISC-V: Use Linux logical CPU number instead of hartid")
    Signed-off-by: Anup Patel <anup.patel@wdc.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1b31948c0af44628e43353828453461bb74098f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat May 1 04:02:58 2021 +0800

    sctp: do asoc update earlier in sctp_sf_do_dupcook_a
    
    [ Upstream commit 35b4f24415c854cd718ccdf38dbea6297f010aae ]
    
    There's a panic that occurs in a few of envs, the call trace is as below:
    
      [] general protection fault, ... 0x29acd70f1000a: 0000 [#1] SMP PTI
      [] RIP: 0010:sctp_ulpevent_notify_peer_addr_change+0x4b/0x1fa [sctp]
      []  sctp_assoc_control_transport+0x1b9/0x210 [sctp]
      []  sctp_do_8_2_transport_strike.isra.16+0x15c/0x220 [sctp]
      []  sctp_cmd_interpreter.isra.21+0x1231/0x1a10 [sctp]
      []  sctp_do_sm+0xc3/0x2a0 [sctp]
      []  sctp_generate_timeout_event+0x81/0xf0 [sctp]
    
    This is caused by a transport use-after-free issue. When processing a
    duplicate COOKIE-ECHO chunk in sctp_sf_do_dupcook_a(), both COOKIE-ACK
    and SHUTDOWN chunks are allocated with the transort from the new asoc.
    However, later in the sideeffect machine, the old asoc is used to send
    them out and old asoc's shutdown_last_sent_to is set to the transport
    that SHUTDOWN chunk attached to in sctp_cmd_setup_t2(), which actually
    belongs to the new asoc. After the new_asoc is freed and the old asoc
    T2 timeout, the old asoc's shutdown_last_sent_to that is already freed
    would be accessed in sctp_sf_t2_timer_expire().
    
    Thanks Alexander and Jere for helping dig into this issue.
    
    To fix it, this patch is to do the asoc update first, then allocate
    the COOKIE-ACK and SHUTDOWN chunks with the 'updated' old asoc. This
    would make more sense, as a chunk from an asoc shouldn't be sent out
    with another asoc. We had fixed quite a few issues caused by this.
    
    Fixes: 145cb2f7177d ("sctp: Fix bundling of SHUTDOWN with COOKIE-ACK")
    Reported-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Reported-by: syzbot+bbe538efd1046586f587@syzkaller.appspotmail.com
    Reported-by: Michal Tesar <mtesar@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e99f6871493df96abe3909059059e1620a42d41
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Fri Apr 30 17:06:22 2021 +0800

    net: hns3: disable phy loopback setting in hclge_mac_start_phy
    
    [ Upstream commit 472497d0bdae890a896013332a0b673f9acdf2bf ]
    
    If selftest and reset are performed at the same time, the phy
    loopback setting may be still in enable state after the reset,
    and device cannot link up. So fix this issue by disabling phy
    loopback before phy_start().
    
    Fixes: 256727da7395 ("net: hns3: Add MDIO support to HNS3 Ethernet driver for hip08 SoC")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 954ea8a0cfe1aac772a4d1a5ccc222026501dbb0
Author: Peng Li <lipeng321@huawei.com>
Date:   Fri Apr 30 17:06:20 2021 +0800

    net: hns3: use netif_tx_disable to stop the transmit queue
    
    [ Upstream commit b416e872be06fdace3c36cf5210130509d0f0e72 ]
    
    Currently, netif_tx_stop_all_queues() is used to ensure that
    the xmit is not running, but for the concurrent case it will
    not take effect, since netif_tx_stop_all_queues() just sets
    a flag without locking to indicate that the xmit queue(s)
    should not be run.
    
    So use netif_tx_disable() to replace netif_tx_stop_all_queues(),
    it takes the xmit queue lock while marking the queue stopped.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c073c2b27285fe95ce9e34ca4a95a9a3c27b558a
Author: Hao Chen <chenhao288@hisilicon.com>
Date:   Fri Apr 30 17:06:19 2021 +0800

    net: hns3: fix for vxlan gpe tx checksum bug
    
    [ Upstream commit 905416f18fe74bdd4de91bf94ef5a790a36e4b99 ]
    
    When skb->ip_summed is CHECKSUM_PARTIAL, for non-tunnel udp packet,
    which has a dest port as the IANA assigned, the hardware is expected
    to do the checksum offload, but the hardware whose version is below
    V3 will not do the checksum offload when udp dest port is 4790.
    
    So fixes it by doing the checksum in software for this case.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Hao Chen <chenhao288@hisilicon.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56e680c09002a883dff5eef526ddae3c94ae2fc6
Author: Jian Shen <shenjian15@huawei.com>
Date:   Thu Apr 29 16:34:52 2021 +0800

    net: hns3: add check for HNS3_NIC_STATE_INITED in hns3_reset_notify_up_enet()
    
    [ Upstream commit b4047aac4ec1066bab6c71950623746d7bcf7154 ]
    
    In some cases, the device is not initialized because reset failed.
    If another task calls hns3_reset_notify_up_enet() before reset
    retry, it will cause an error since uninitialized pointer access.
    So add check for HNS3_NIC_STATE_INITED before calling
    hns3_nic_net_open() in hns3_reset_notify_up_enet().
    
    Fixes: bb6b94a896d4 ("net: hns3: Add reset interface implementation in client")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 282d8a6a5546591c7aaad2808aab8a153f338b0b
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Thu Apr 29 16:34:51 2021 +0800

    net: hns3: initialize the message content in hclge_get_link_mode()
    
    [ Upstream commit 568a54bdf70b143f3e0befa298e22ad469ffc732 ]
    
    The message sent to VF should be initialized, otherwise random
    value of some contents may cause improper processing by the target.
    So add a initialization to message in hclge_get_link_mode().
    
    Fixes: 9194d18b0577 ("net: hns3: fix the problem that the supported port is empty")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccffcc9f35741ead6da713476b038af48c212fc4
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Thu Apr 29 16:34:50 2021 +0800

    net: hns3: fix incorrect configuration for igu_egu_hw_err
    
    [ Upstream commit 2867298dd49ee84214b8721521dc7a5a6382520c ]
    
    According to the UM, the type and enable status of igu_egu_hw_err
    should be configured separately. Currently, the type field is
    incorrect when disable this error. So fix it by configuring these
    two fields separately.
    
    Fixes: bf1faf9415dd ("net: hns3: Add enable and process hw errors from IGU, EGU and NCSI")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3dd2cd64466e78888b20b0e0d15abfaef40e8213
Author: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
Date:   Tue Apr 20 11:39:17 2021 +0900

    rtc: ds1307: Fix wday settings for rx8130
    
    [ Upstream commit 204756f016726a380bafe619438ed979088bd04a ]
    
    rx8130 wday specifies the bit position, not BCD.
    
    Fixes: ee0981be7704 ("rtc: ds1307: Add support for Epson RX8130CE")
    Signed-off-by: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210420023917.1949066-1-nobuhiro1.iwamatsu@toshiba.co.jp
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ad8af2b70e986284050213230428b823b950a38
Author: Jeff Layton <jlayton@kernel.org>
Date:   Fri Mar 26 09:21:53 2021 -0400

    ceph: fix inode leak on getattr error in __fh_to_dentry
    
    [ Upstream commit 1775c7ddacfcea29051c67409087578f8f4d751b ]
    
    Fixes: 878dabb64117 ("ceph: don't return -ESTALE if there's still an open file")
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b37609ad2277c880dc3540eda2b697ea63bfda6e
Author: Michael Walle <michael@walle.cc>
Date:   Wed Apr 14 10:40:06 2021 +0200

    rtc: fsl-ftm-alarm: add MODULE_TABLE()
    
    [ Upstream commit 7fcb86185978661c9188397d474f90364745b8d9 ]
    
    The module doesn't load automatically. Fix it by adding the missing
    MODULE_TABLE().
    
    Fixes: 7b0b551dbc1e ("rtc: fsl-ftm-alarm: add FTM alarm driver")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210414084006.17933-1-michael@walle.cc
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d1ada9e1096c3193908bae4f81f76037edf06c4
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Wed Mar 31 15:30:25 2021 -0400

    NFSv4.2 fix handling of sr_eof in SEEK's reply
    
    [ Upstream commit 73f5c88f521a630ea1628beb9c2d48a2e777a419 ]
    
    Currently the client ignores the value of the sr_eof of the SEEK
    operation. According to the spec, if the server didn't find the
    requested extent and reached the end of the file, the server
    would return sr_eof=true. In case the request for DATA and no
    data was found (ie in the middle of the hole), then the lseek
    expects that ENXIO would be returned.
    
    Fixes: 1c6dcbe5ceff8 ("NFS: Implement SEEK")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89862bd77e9cf511628eb7a97fe7f8d246192eec
Author: Nikola Livic <nlivic@gmail.com>
Date:   Mon Mar 29 11:56:49 2021 +0300

    pNFS/flexfiles: fix incorrect size check in decode_nfs_fh()
    
    [ Upstream commit ed34695e15aba74f45247f1ee2cf7e09d449f925 ]
    
    We (adam zabrocki, alexander matrosov, alexander tereshkin, maksym
    bazalii) observed the check:
    
            if (fh->size > sizeof(struct nfs_fh))
    
    should not use the size of the nfs_fh struct which includes an extra two
    bytes from the size field.
    
    struct nfs_fh {
            unsigned short         size;
            unsigned char          data[NFS_MAXFHSIZE];
    }
    
    but should determine the size from data[NFS_MAXFHSIZE] so the memcpy
    will not write 2 bytes beyond destination.  The proposed fix is to
    compare against the NFS_MAXFHSIZE directly, as is done elsewhere in fs
    code base.
    
    Fixes: d67ae825a59d ("pnfs/flexfiles: Add the FlexFile Layout Driver")
    Signed-off-by: Nikola Livic <nlivic@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff4d21fb22615d9097e01ff5c5cd818a2acaa53c
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Mar 31 16:40:12 2021 +0800

    PCI: endpoint: Fix missing destroy_workqueue()
    
    [ Upstream commit acaef7981a218813e3617edb9c01837808de063c ]
    
    Add the missing destroy_workqueue() before return from
    pci_epf_test_init() in the error handling case and add
    destroy_workqueue() in pci_epf_test_exit().
    
    Link: https://lore.kernel.org/r/20210331084012.2091010-1-yangyingliang@huawei.com
    Fixes: 349e7a85b25fa ("PCI: endpoint: functions: Add an EP function to test PCI")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdbee0d845202f41179c9bdfd9e8415fd68aa13f
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Mar 29 16:46:05 2021 -0400

    NFS: Deal correctly with attribute generation counter overflow
    
    [ Upstream commit 9fdbfad1777cb4638f489eeb62d85432010c0031 ]
    
    We need to use unsigned long subtraction and then convert to signed in
    order to deal correcly with C overflow rules.
    
    Fixes: f5062003465c ("NFS: Set an attribute barrier on all updates")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e16709fc540135fdef5d07fb5965c36ee057ab3
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Mar 28 18:17:14 2021 -0400

    NFSv4.2: Always flush out writes in nfs42_proc_fallocate()
    
    [ Upstream commit 99f23783224355e7022ceea9b8d9f62c0fd01bd8 ]
    
    Whether we're allocating or delallocating space, we should flush out the
    pending writes in order to avoid races with attribute updates.
    
    Fixes: 1e564d3dbd68 ("NFSv4.2: Fix a race in nfs42_proc_deallocate()")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20f9516b8372c3aaafdc78b9f072e2bbac9b50e5
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sat Mar 6 05:36:24 2021 -0800

    rpmsg: qcom_glink_native: fix error return code of qcom_glink_rx_data()
    
    [ Upstream commit 26594c6bbb60c6bc87e3762a86ceece57d164c66 ]
    
    When idr_find() returns NULL to intent, no error return code of
    qcom_glink_rx_data() is assigned.
    To fix this bug, ret is assigned with -ENOENT in this case.
    
    Fixes: 64f95f87920d ("rpmsg: glink: Use the local intents when receiving data")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Link: https://lore.kernel.org/r/20210306133624.17237-1-baijiaju1990@gmail.com
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ed8832aeaa9a37b0fc386bb72ff604352567c80
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Thu Feb 18 03:00:05 2021 +0100

    ARM: 9064/1: hw_breakpoint: Do not directly check the event's overflow_handler hook
    
    [ Upstream commit a506bd5756290821a4314f502b4bafc2afcf5260 ]
    
    The commit 1879445dfa7b ("perf/core: Set event's default
    ::overflow_handler()") set a default event->overflow_handler in
    perf_event_alloc(), and replace the check event->overflow_handler with
    is_default_overflow_handler(), but one is missing.
    
    Currently, the bp->overflow_handler can not be NULL. As a result,
    enable_single_step() is always not invoked.
    
    Comments from Zhen Lei:
    
     https://patchwork.kernel.org/project/linux-arm-kernel/patch/20210207105934.2001-1-thunder.leizhen@huawei.com/
    
    Fixes: 1879445dfa7b ("perf/core: Set event's default ::overflow_handler()")
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0454a3dc87472d62d8ab967d4d28d8c01c85217d
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Mon Jan 25 02:28:26 2021 +0300

    PCI: Release OF node in pci_scan_device()'s error path
    
    [ Upstream commit c99e755a4a4c165cad6effb39faffd0f3377c02d ]
    
    In pci_scan_device(), if pci_setup_device() fails for any reason, the code
    will not release device's of_node by calling pci_release_of_node().  Fix
    that by calling the release function.
    
    Fixes: 98d9f30c820d ("pci/of: Match PCI devices to OF nodes dynamically")
    Link: https://lore.kernel.org/r/20210124232826.1879-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 364e8bb8b4253815741130760d9a4e1a69fa0fa7
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Mar 3 15:22:02 2021 +0100

    PCI: iproc: Fix return value of iproc_msi_irq_domain_alloc()
    
    [ Upstream commit 1e83130f01b04c16579ed5a5e03d729bcffc4c5d ]
    
    IRQ domain alloc function should return zero on success. Non-zero value
    indicates failure.
    
    Link: https://lore.kernel.org/r/20210303142202.25780-1-pali@kernel.org
    Fixes: fc54bae28818 ("PCI: iproc: Allow allocation of multiple MSIs")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Krzysztof Wilczyński <kw@linux.com>
    Acked-by: Ray Jui <ray.jui@broadcom.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e150f825ca29d74ff7fca76bfbdc7058ed62a0ac
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Mar 4 09:21:18 2021 +0000

    f2fs: fix a redundant call to f2fs_balance_fs if an error occurs
    
    [ Upstream commit 28e18ee636ba28532dbe425540af06245a0bbecb ]
    
    The  uninitialized variable dn.node_changed does not get set when a
    call to f2fs_get_node_page fails.  This uninitialized value gets used
    in the call to f2fs_balance_fs() that may or not may not balances
    dirty node and dentry pages depending on the uninitialized state of
    the variable. Fix this by only calling f2fs_balance_fs if err is
    not set.
    
    Thanks to Jaegeuk Kim for suggesting an appropriate fix.
    
    Addresses-Coverity: ("Uninitialized scalar variable")
    Fixes: 2a3407607028 ("f2fs: call f2fs_balance_fs only when node was changed")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f49f00dbe3d0b4bd9cb39925ada33709f552fc73
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Mar 10 04:24:23 2021 -0800

    thermal: thermal_of: Fix error return code of thermal_of_populate_bind_params()
    
    [ Upstream commit 45c7eaeb29d67224db4ba935deb575586a1fda09 ]
    
    When kcalloc() returns NULL to __tcbp or of_count_phandle_with_args()
    returns zero or -ENOENT to count, no error return code of
    thermal_of_populate_bind_params() is assigned.
    To fix these bugs, ret is assigned with -ENOMEM and -ENOENT in these
    cases, respectively.
    
    Fixes: a92bab8919e3 ("of: thermal: Allow multiple devices to share cooling map")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210310122423.3266-1-baijiaju1990@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f599960166a0a05507d1f331ba933edcb71e32b7
Author: David Ward <david.ward@gatech.edu>
Date:   Sun Apr 18 09:46:57 2021 -0400

    ASoC: rt286: Make RT286_SET_GPIO_* readable and writable
    
    [ Upstream commit cd8499d5c03ba260e3191e90236d0e5f6b147563 ]
    
    The GPIO configuration cannot be applied if the registers are inaccessible.
    This prevented the headset mic from working on the Dell XPS 13 9343.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=114171
    Signed-off-by: David Ward <david.ward@gatech.edu>
    Link: https://lore.kernel.org/r/20210418134658.4333-5-david.ward@gatech.edu
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44d96d2dc054e6899366360c6599770305a16bf3
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Thu Apr 29 22:53:48 2021 -0700

    ia64: module: fix symbolizer crash on fdescr
    
    [ Upstream commit 99e729bd40fb3272fa4b0140839d5e957b58588a ]
    
    Noticed failure as a crash on ia64 when tried to symbolize all backtraces
    collected by page_owner=on:
    
        $ cat /sys/kernel/debug/page_owner
        <oops>
    
        CPU: 1 PID: 2074 Comm: cat Not tainted 5.12.0-rc4 #226
        Hardware name: hp server rx3600, BIOS 04.03 04/08/2008
        ip is at dereference_module_function_descriptor+0x41/0x100
    
    Crash happens at dereference_module_function_descriptor() due to
    use-after-free when dereferencing ".opd" section header.
    
    All section headers are already freed after module is laoded successfully.
    
    To keep symbolizer working the change stores ".opd" address and size after
    module is relocated to a new place and before section headers are
    discarded.
    
    To make similar errors less obscure module_finalize() now zeroes out all
    variables relevant to module loading only.
    
    Link: https://lkml.kernel.org/r/20210403074803.3309096-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b88f16d9d30e54ecfa3f9f2c1dd0cadc52f5d64
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Sun Apr 25 13:45:25 2021 -0400

    bnxt_en: Add PCI IDs for Hyper-V VF devices.
    
    [ Upstream commit 7fbf359bb2c19c824cbb1954020680824f6ee5a5 ]
    
    Support VF device IDs used by the Hyper-V hypervisor.
    
    Reviewed-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Reviewed-by: Andy Gospodarek <gospo@broadcom.com>
    Signed-off-by: Edwin Peer <edwin.peer@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98e1d0fe20ed210d04f3fff9cd68bf52e005d901
Author: Felix Fietkau <nbd@nbd.name>
Date:   Thu Apr 22 22:20:54 2021 -0700

    net: ethernet: mtk_eth_soc: fix RX VLAN offload
    
    [ Upstream commit 3f57d8c40fea9b20543cab4da12f4680d2ef182c ]
    
    The VLAN ID in the rx descriptor is only valid if the RX_DMA_VTAG bit is
    set. Fixes frames wrongly marked with VLAN tags.
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    [Ilya: fix commit message]
    Signed-off-by: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5da6affd9c7edc1acfecc78bfebc72829344a2e1
Author: Stefan Assmann <sassmann@kpanic.de>
Date:   Tue Mar 9 15:41:42 2021 +0100

    iavf: remove duplicate free resources calls
    
    [ Upstream commit 1a0e880b028f97478dc689e2900b312741d0d772 ]
    
    Both iavf_free_all_tx_resources() and iavf_free_all_rx_resources() have
    already been called in the very same function.
    Remove the duplicate calls.
    
    Signed-off-by: Stefan Assmann <sassmann@kpanic.de>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40d1cb16a5783a2589ba9ad90daf1546131cf9d2
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Mon Mar 1 17:36:53 2021 +1100

    powerpc/iommu: Annotate nested lock for lockdep
    
    [ Upstream commit cc7130bf119add37f36238343a593b71ef6ecc1e ]
    
    The IOMMU table is divided into pools for concurrent mappings and each
    pool has a separate spinlock. When taking the ownership of an IOMMU group
    to pass through a device to a VM, we lock these spinlocks which triggers
    a false negative warning in lockdep (below).
    
    This fixes it by annotating the large pool's spinlock as a nest lock
    which makes lockdep not complaining when locking nested locks if
    the nest lock is locked already.
    
    ===
    WARNING: possible recursive locking detected
    5.11.0-le_syzkaller_a+fstn1 #100 Not tainted
    --------------------------------------------
    qemu-system-ppc/4129 is trying to acquire lock:
    c0000000119bddb0 (&(p->lock)/1){....}-{2:2}, at: iommu_take_ownership+0xac/0x1e0
    
    but task is already holding lock:
    c0000000119bdd30 (&(p->lock)/1){....}-{2:2}, at: iommu_take_ownership+0xac/0x1e0
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(&(p->lock)/1);
      lock(&(p->lock)/1);
    ===
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210301063653.51003-1-aik@ozlabs.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d26436a3b913a5a25db29c460d27e6c9673cf741
Author: Lee Gibson <leegib@gmail.com>
Date:   Mon Apr 19 15:58:42 2021 +0100

    qtnfmac: Fix possible buffer overflow in qtnf_event_handle_external_auth
    
    [ Upstream commit 130f634da1af649205f4a3dd86cbe5c126b57914 ]
    
    Function qtnf_event_handle_external_auth calls memcpy without
    checking the length.
    A user could control that length and trigger a buffer overflow.
    Fix by checking the length is within the maximum allowed size.
    
    Signed-off-by: Lee Gibson <leegib@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210419145842.345787-1-leegib@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9184f2608e8906f09cd9660f7761b93ac806266f
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Wed Apr 14 18:45:15 2021 -0500

    wl3501_cs: Fix out-of-bounds warnings in wl3501_mgmt_join
    
    [ Upstream commit bb43e5718d8f1b46e7a77e7b39be3c691f293050 ]
    
    Fix the following out-of-bounds warnings by adding a new structure
    wl3501_req instead of duplicating the same members in structure
    wl3501_join_req and wl3501_scan_confirm:
    
    arch/x86/include/asm/string_32.h:182:25: warning: '__builtin_memcpy' offset [39, 108] from the object at 'sig' is out of the bounds of referenced subobject 'beacon_period' with type 'short unsigned int' at offset 36 [-Warray-bounds]
    arch/x86/include/asm/string_32.h:182:25: warning: '__builtin_memcpy' offset [25, 95] from the object at 'sig' is out of the bounds of referenced subobject 'beacon_period' with type 'short unsigned int' at offset 22 [-Warray-bounds]
    
    Refactor the code, accordingly:
    
    $ pahole -C wl3501_req drivers/net/wireless/wl3501_cs.o
    struct wl3501_req {
            u16                        beacon_period;        /*     0     2 */
            u16                        dtim_period;          /*     2     2 */
            u16                        cap_info;             /*     4     2 */
            u8                         bss_type;             /*     6     1 */
            u8                         bssid[6];             /*     7     6 */
            struct iw_mgmt_essid_pset  ssid;                 /*    13    34 */
            struct iw_mgmt_ds_pset     ds_pset;              /*    47     3 */
            struct iw_mgmt_cf_pset     cf_pset;              /*    50     8 */
            struct iw_mgmt_ibss_pset   ibss_pset;            /*    58     4 */
            struct iw_mgmt_data_rset   bss_basic_rset;       /*    62    10 */
    
            /* size: 72, cachelines: 2, members: 10 */
            /* last cacheline: 8 bytes */
    };
    
    $ pahole -C wl3501_join_req drivers/net/wireless/wl3501_cs.o
    struct wl3501_join_req {
            u16                        next_blk;             /*     0     2 */
            u8                         sig_id;               /*     2     1 */
            u8                         reserved;             /*     3     1 */
            struct iw_mgmt_data_rset   operational_rset;     /*     4    10 */
            u16                        reserved2;            /*    14     2 */
            u16                        timeout;              /*    16     2 */
            u16                        probe_delay;          /*    18     2 */
            u8                         timestamp[8];         /*    20     8 */
            u8                         local_time[8];        /*    28     8 */
            struct wl3501_req          req;                  /*    36    72 */
    
            /* size: 108, cachelines: 2, members: 10 */
            /* last cacheline: 44 bytes */
    };
    
    $ pahole -C wl3501_scan_confirm drivers/net/wireless/wl3501_cs.o
    struct wl3501_scan_confirm {
            u16                        next_blk;             /*     0     2 */
            u8                         sig_id;               /*     2     1 */
            u8                         reserved;             /*     3     1 */
            u16                        status;               /*     4     2 */
            char                       timestamp[8];         /*     6     8 */
            char                       localtime[8];         /*    14     8 */
            struct wl3501_req          req;                  /*    22    72 */
            /* --- cacheline 1 boundary (64 bytes) was 30 bytes ago --- */
            u8                         rssi;                 /*    94     1 */
    
            /* size: 96, cachelines: 2, members: 8 */
            /* padding: 1 */
            /* last cacheline: 32 bytes */
    };
    
    The problem is that the original code is trying to copy data into a
    bunch of struct members adjacent to each other in a single call to
    memcpy(). Now that a new struct wl3501_req enclosing all those adjacent
    members is introduced, memcpy() doesn't overrun the length of
    &sig.beacon_period and &this->bss_set[i].beacon_period, because the
    address of the new struct object _req_ is used as the destination,
    instead.
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1fbaf516da763b50edac47d792a9145aa4482e29.1618442265.git.gustavoars@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78a004cdfd2d3ff05d90b628c25c7387259da099
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Wed Apr 14 18:43:19 2021 -0500

    wl3501_cs: Fix out-of-bounds warnings in wl3501_send_pkt
    
    [ Upstream commit 820aa37638a252b57967bdf4038a514b1ab85d45 ]
    
    Fix the following out-of-bounds warnings by enclosing structure members
    daddr and saddr into new struct addr, in structures wl3501_md_req and
    wl3501_md_ind:
    
    arch/x86/include/asm/string_32.h:182:25: warning: '__builtin_memcpy' offset [18, 23] from the object at 'sig' is out of the bounds of referenced subobject 'daddr' with type 'u8[6]' {aka 'unsigned char[6]'} at offset 11 [-Warray-bounds]
    arch/x86/include/asm/string_32.h:182:25: warning: '__builtin_memcpy' offset [18, 23] from the object at 'sig' is out of the bounds of referenced subobject 'daddr' with type 'u8[6]' {aka 'unsigned char[6]'} at offset 11 [-Warray-bounds]
    
    Refactor the code, accordingly:
    
    $ pahole -C wl3501_md_req drivers/net/wireless/wl3501_cs.o
    struct wl3501_md_req {
            u16                        next_blk;             /*     0     2 */
            u8                         sig_id;               /*     2     1 */
            u8                         routing;              /*     3     1 */
            u16                        data;                 /*     4     2 */
            u16                        size;                 /*     6     2 */
            u8                         pri;                  /*     8     1 */
            u8                         service_class;        /*     9     1 */
            struct {
                    u8                 daddr[6];             /*    10     6 */
                    u8                 saddr[6];             /*    16     6 */
            } addr;                                          /*    10    12 */
    
            /* size: 22, cachelines: 1, members: 8 */
            /* last cacheline: 22 bytes */
    };
    
    $ pahole -C wl3501_md_ind drivers/net/wireless/wl3501_cs.o
    struct wl3501_md_ind {
            u16                        next_blk;             /*     0     2 */
            u8                         sig_id;               /*     2     1 */
            u8                         routing;              /*     3     1 */
            u16                        data;                 /*     4     2 */
            u16                        size;                 /*     6     2 */
            u8                         reception;            /*     8     1 */
            u8                         pri;                  /*     9     1 */
            u8                         service_class;        /*    10     1 */
            struct {
                    u8                 daddr[6];             /*    11     6 */
                    u8                 saddr[6];             /*    17     6 */
            } addr;                                          /*    11    12 */
    
            /* size: 24, cachelines: 1, members: 9 */
            /* padding: 1 */
            /* last cacheline: 24 bytes */
    };
    
    The problem is that the original code is trying to copy data into a
    couple of arrays adjacent to each other in a single call to memcpy().
    Now that a new struct _addr_ enclosing those two adjacent arrays
    is introduced, memcpy() doesn't overrun the length of &sig.daddr[0]
    and &sig.daddr, because the address of the new struct object _addr_
    is used, instead.
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/d260fe56aed7112bff2be5b4d152d03ad7b78e78.1618442265.git.gustavoars@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd06b07860567b13706635501738ca721515ecfe
Author: Robin Singh <robin.singh@amd.com>
Date:   Mon Dec 14 19:14:48 2020 -0500

    drm/amd/display: fixed divide by zero kernel crash during dsc enablement
    
    [ Upstream commit 19cc1f3829567e7dca21c1389ea6407b8f5efab4 ]
    
    [why]
    During dsc enable, a divide by zero condition triggered the
    kernel crash.
    
    [how]
    An IGT test, which enable the DSC, was crashing at the time of
    restore the default dsc status, becaue of h_totals value
    becoming 0. So add a check before divide condition. If h_total
    is zero, gracefully ignore and set the default value.
    
    kernel panic log:
    
            [  128.758827] divide error: 0000 [#1] PREEMPT SMP NOPTI
            [  128.762714] CPU: 5 PID: 4562 Comm: amd_dp_dsc Tainted: G        W         5.4.19-android-x86_64 #1
            [  128.769728] Hardware name: ADVANCED MICRO DEVICES, INC. Mauna/Mauna, BIOS WMN0B13N Nov 11 2020
            [  128.777695] RIP: 0010:hubp2_vready_at_or_After_vsync+0x37/0x7a [amdgpu]
            [  128.785707] Code: 80 02 00 00 48 89 f3 48 8b 7f 08 b ......
            [  128.805696] RSP: 0018:ffffad8f82d43628 EFLAGS: 00010246
            ......
            [  128.857707] CR2: 00007106d8465000 CR3: 0000000426530000 CR4: 0000000000140ee0
            [  128.865695] Call Trace:
            [  128.869712] hubp3_setup+0x1f/0x7f [amdgpu]
            [  128.873705] dcn20_update_dchubp_dpp+0xc8/0x54a [amdgpu]
            [  128.877706] dcn20_program_front_end_for_ctx+0x31d/0x463 [amdgpu]
            [  128.885706] dc_commit_state+0x3d2/0x658 [amdgpu]
            [  128.889707] amdgpu_dm_atomic_commit_tail+0x4b3/0x1e7c [amdgpu]
            [  128.897699] ? dm_read_reg_func+0x41/0xb5 [amdgpu]
            [  128.901707] ? dm_read_reg_func+0x41/0xb5 [amdgpu]
            [  128.905706] ? __is_insn_slot_addr+0x43/0x48
            [  128.909706] ? fill_plane_buffer_attributes+0x29e/0x3dc [amdgpu]
            [  128.917705] ? dm_plane_helper_prepare_fb+0x255/0x284 [amdgpu]
            [  128.921700] ? usleep_range+0x7c/0x7c
            [  128.925705] ? preempt_count_sub+0xf/0x18
            [  128.929706] ? _raw_spin_unlock_irq+0x13/0x24
            [  128.933732] ? __wait_for_common+0x11e/0x18f
            [  128.937705] ? _raw_spin_unlock_irq+0x13/0x24
            [  128.941706] ? __wait_for_common+0x11e/0x18f
            [  128.945705] commit_tail+0x8b/0xd2 [drm_kms_helper]
            [  128.949707] drm_atomic_helper_commit+0xd8/0xf5 [drm_kms_helper]
            [  128.957706] amdgpu_dm_atomic_commit+0x337/0x360 [amdgpu]
            [  128.961705] ? drm_atomic_check_only+0x543/0x68d [drm]
            [  128.969705] ? drm_atomic_set_property+0x760/0x7af [drm]
            [  128.973704] ? drm_mode_atomic_ioctl+0x6f3/0x85a [drm]
            [  128.977705] drm_mode_atomic_ioctl+0x6f3/0x85a [drm]
            [  128.985705] ? drm_atomic_set_property+0x7af/0x7af [drm]
            [  128.989706] drm_ioctl_kernel+0x82/0xda [drm]
            [  128.993706] drm_ioctl+0x225/0x319 [drm]
            [  128.997707] ? drm_atomic_set_property+0x7af/0x7af [drm]
            [  129.001706] ? preempt_count_sub+0xf/0x18
            [  129.005713] amdgpu_drm_ioctl+0x4b/0x76 [amdgpu]
            [  129.009705] vfs_ioctl+0x1d/0x2a
            [  129.013705] do_vfs_ioctl+0x419/0x43d
            [  129.017707] ksys_ioctl+0x52/0x71
            [  129.021707] __x64_sys_ioctl+0x16/0x19
            [  129.025706] do_syscall_64+0x78/0x85
            [  129.029705] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Signed-off-by: Robin Singh <robin.singh@amd.com>
    Reviewed-by: Harry Wentland <Harry.Wentland@amd.com>
    Reviewed-by: Robin Singh <Robin.Singh@amd.com>
    Acked-by: Aurabindo Pillai <aurabindo.pillai@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eed7287db3a95039126c1fabed50a0e024576d00
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Sun Apr 18 23:54:13 2021 +1000

    powerpc/pseries: Stop calling printk in rtas_stop_self()
    
    [ Upstream commit ed8029d7b472369a010a1901358567ca3b6dbb0d ]
    
    RCU complains about us calling printk() from an offline CPU:
    
      =============================
      WARNING: suspicious RCU usage
      5.12.0-rc7-02874-g7cf90e481cb8 #1 Not tainted
      -----------------------------
      kernel/locking/lockdep.c:3568 RCU-list traversed in non-reader section!!
    
      other info that might help us debug this:
    
      RCU used illegally from offline CPU!
      rcu_scheduler_active = 2, debug_locks = 1
      no locks held by swapper/0/0.
    
      stack backtrace:
      CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.12.0-rc7-02874-g7cf90e481cb8 #1
      Call Trace:
        dump_stack+0xec/0x144 (unreliable)
        lockdep_rcu_suspicious+0x124/0x144
        __lock_acquire+0x1098/0x28b0
        lock_acquire+0x128/0x600
        _raw_spin_lock_irqsave+0x6c/0xc0
        down_trylock+0x2c/0x70
        __down_trylock_console_sem+0x60/0x140
        vprintk_emit+0x1a8/0x4b0
        vprintk_func+0xcc/0x200
        printk+0x40/0x54
        pseries_cpu_offline_self+0xc0/0x120
        arch_cpu_idle_dead+0x54/0x70
        do_idle+0x174/0x4a0
        cpu_startup_entry+0x38/0x40
        rest_init+0x268/0x388
        start_kernel+0x748/0x790
        start_here_common+0x1c/0x614
    
    Which happens because by the time we get to rtas_stop_self() we are
    already offline. In addition the message can be spammy, and is not that
    helpful for users, so remove it.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210418135413.1204031-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63a42044b9a12bed0ff9be276e0425203e54abad
Author: Yaqi Chen <chendotjs@gmail.com>
Date:   Fri Apr 16 23:48:03 2021 +0800

    samples/bpf: Fix broken tracex1 due to kprobe argument change
    
    [ Upstream commit 137733d08f4ab14a354dacaa9a8fc35217747605 ]
    
    >From commit c0bbbdc32feb ("__netif_receive_skb_core: pass skb by
    reference"), the first argument passed into __netif_receive_skb_core
    has changed to reference of a skb pointer.
    
    This commit fixes by using bpf_probe_read_kernel.
    
    Signed-off-by: Yaqi Chen <chendotjs@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20210416154803.37157-1-chendotjs@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f6e107aab1477b499c3940f61212df441b0d220
Author: Du Cheng <ducheng2@gmail.com>
Date:   Sat Apr 17 07:30:46 2021 +0800

    net: sched: tapr: prevent cycle_time == 0 in parse_taprio_schedule
    
    [ Upstream commit ed8157f1ebf1ae81a8fa2653e3f20d2076fad1c9 ]
    
    There is a reproducible sequence from the userland that will trigger a WARN_ON()
    condition in taprio_get_start_time, which causes kernel to panic if configured
    as "panic_on_warn". Catch this condition in parse_taprio_schedule to
    prevent this condition.
    
    Reported as bug on syzkaller:
    https://syzkaller.appspot.com/bug?extid=d50710fd0873a9c6b40c
    
    Reported-by: syzbot+d50710fd0873a9c6b40c@syzkaller.appspotmail.com
    Signed-off-by: Du Cheng <ducheng2@gmail.com>
    Acked-by: Cong Wang <cong.wang@bytedance.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3aa4e4d7ccf4ba442401eb96d38ebc7ef2ffa9a6
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Fri Apr 16 15:15:40 2021 -0500

    ethtool: ioctl: Fix out-of-bounds warning in store_link_ksettings_for_user()
    
    [ Upstream commit c1d9e34e11281a8ba1a1c54e4db554232a461488 ]
    
    Fix the following out-of-bounds warning:
    
    net/ethtool/ioctl.c:492:2: warning: 'memcpy' offset [49, 84] from the object at 'link_usettings' is out of the bounds of referenced subobject 'base' with type 'struct ethtool_link_settings' at offset 0 [-Warray-bounds]
    
    The problem is that the original code is trying to copy data into a
    some struct members adjacent to each other in a single call to
    memcpy(). This causes a legitimate compiler warning because memcpy()
    overruns the length of &link_usettings.base. Fix this by directly
    using &link_usettings and _from_ as destination and source addresses,
    instead.
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 061868e9006285eb627556c695ace12abd5f5547
Author: David Ward <david.ward@gatech.edu>
Date:   Sun Apr 18 09:46:58 2021 -0400

    ASoC: rt286: Generalize support for ALC3263 codec
    
    [ Upstream commit aa2f9c12821e6a4ba1df4fb34a3dbc6a2a1ee7fe ]
    
    The ALC3263 codec on the XPS 13 9343 is also found on the Latitude 13 7350
    and Venue 11 Pro 7140. They require the same handling for the combo jack to
    work with a headset: GPIO pin 6 must be set.
    
    The HDA driver always sets this pin on the ALC3263, which it distinguishes
    by the codec vendor/device ID 0x10ec0288 and PCI subsystem vendor ID 0x1028
    (Dell). The ASoC driver does not use PCI, so adapt this check to use DMI to
    determine if Dell is the system vendor.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=150601
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205961
    Signed-off-by: David Ward <david.ward@gatech.edu>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210418134658.4333-6-david.ward@gatech.edu
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56a6218e97dbd319f9a9bc1ba301dc007f71a6a7
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Thu Apr 1 21:12:00 2021 +0530

    powerpc/smp: Set numa node before updating mask
    
    [ Upstream commit 6980d13f0dd189846887bbbfa43793d9a41768d3 ]
    
    Geethika reported a trace when doing a dlpar CPU add.
    
    ------------[ cut here ]------------
    WARNING: CPU: 152 PID: 1134 at kernel/sched/topology.c:2057
    CPU: 152 PID: 1134 Comm: kworker/152:1 Not tainted 5.12.0-rc5-master #5
    Workqueue: events cpuset_hotplug_workfn
    NIP:  c0000000001cfc14 LR: c0000000001cfc10 CTR: c0000000007e3420
    REGS: c0000034a08eb260 TRAP: 0700   Not tainted  (5.12.0-rc5-master+)
    MSR:  8000000000029033 <SF,EE,ME,IR,DR,RI,LE>  CR: 28828422  XER: 00000020
    CFAR: c0000000001fd888 IRQMASK: 0 #012GPR00: c0000000001cfc10
    c0000034a08eb500 c000000001f35400 0000000000000027 #012GPR04:
    c0000035abaa8010 c0000035abb30a00 0000000000000027 c0000035abaa8018
    #012GPR08: 0000000000000023 c0000035abaaef48 00000035aa540000
    c0000035a49dffe8 #012GPR12: 0000000028828424 c0000035bf1a1c80
    0000000000000497 0000000000000004 #012GPR16: c00000000347a258
    0000000000000140 c00000000203d468 c000000001a1a490 #012GPR20:
    c000000001f9c160 c0000034adf70920 c0000034aec9fd20 0000000100087bd3
    #012GPR24: 0000000100087bd3 c0000035b3de09f8 0000000000000030
    c0000035b3de09f8 #012GPR28: 0000000000000028 c00000000347a280
    c0000034aefe0b00 c0000000010a2a68
    NIP [c0000000001cfc14] build_sched_domains+0x6a4/0x1500
    LR [c0000000001cfc10] build_sched_domains+0x6a0/0x1500
    Call Trace:
    [c0000034a08eb500] [c0000000001cfc10] build_sched_domains+0x6a0/0x1500 (unreliable)
    [c0000034a08eb640] [c0000000001d1e6c] partition_sched_domains_locked+0x3ec/0x530
    [c0000034a08eb6e0] [c0000000002936d4] rebuild_sched_domains_locked+0x524/0xbf0
    [c0000034a08eb7e0] [c000000000296bb0] rebuild_sched_domains+0x40/0x70
    [c0000034a08eb810] [c000000000296e74] cpuset_hotplug_workfn+0x294/0xe20
    [c0000034a08ebc30] [c000000000178dd0] process_one_work+0x300/0x670
    [c0000034a08ebd10] [c0000000001791b8] worker_thread+0x78/0x520
    [c0000034a08ebda0] [c000000000185090] kthread+0x1a0/0x1b0
    [c0000034a08ebe10] [c00000000000ccec] ret_from_kernel_thread+0x5c/0x70
    Instruction dump:
    7d2903a6 4e800421 e8410018 7f67db78 7fe6fb78 7f45d378 7f84e378 7c681b78
    3c62ff1a 3863c6f8 4802dc35 60000000 <0fe00000> 3920fff4 f9210070 e86100a0
    ---[ end trace 532d9066d3d4d7ec ]---
    
    Some of the per-CPU masks use cpu_cpu_mask as a filter to limit the search
    for related CPUs. On a dlpar add of a CPU, update cpu_cpu_mask before
    updating the per-CPU masks. This will ensure the cpu_cpu_mask is updated
    correctly before its used in setting the masks. Setting the numa_node will
    ensure that when cpu_cpu_mask() gets called, the correct node number is
    used. This code movement helped fix the above call trace.
    
    Reported-by: Geetika Moolchandani <Geetika.Moolchandani1@ibm.com>
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Reviewed-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210401154200.150077-1-srikar@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfa2a8d2d8a76fce753bdcda9338bcd60258e407
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Fri Apr 16 14:31:51 2021 -0500

    flow_dissector: Fix out-of-bounds warning in __skb_flow_bpf_to_target()
    
    [ Upstream commit 1e3d976dbb23b3fce544752b434bdc32ce64aabc ]
    
    Fix the following out-of-bounds warning:
    
    net/core/flow_dissector.c:835:3: warning: 'memcpy' offset [33, 48] from the object at 'flow_keys' is out of the bounds of referenced subobject 'ipv6_src' with type '__u32[4]' {aka 'unsigned int[4]'} at offset 16 [-Warray-bounds]
    
    The problem is that the original code is trying to copy data into a
    couple of struct members adjacent to each other in a single call to
    memcpy().  So, the compiler legitimately complains about it. As these
    are just a couple of members, fix this by copying each one of them in
    separate calls to memcpy().
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f24807c3cba3d73ad288e5e14f9db5060bf8ba1
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Fri Apr 16 14:12:36 2021 -0500

    sctp: Fix out-of-bounds warning in sctp_process_asconf_param()
    
    [ Upstream commit e5272ad4aab347dde5610c0aedb786219e3ff793 ]
    
    Fix the following out-of-bounds warning:
    
    net/sctp/sm_make_chunk.c:3150:4: warning: 'memcpy' offset [17, 28] from the object at 'addr' is out of the bounds of referenced subobject 'v4' with type 'struct sockaddr_in' at offset 0 [-Warray-bounds]
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9fc2c95794158e606696fee725e37b14a463a6fe
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Fri Apr 16 16:11:57 2021 +0300

    ALSA: hda/hdmi: fix race in handling acomp ELD notification at resume
    
    [ Upstream commit 0c37e2eb6b83e375e8a654d01598292d5591fc65 ]
    
    When snd-hda-codec-hdmi is used with ASoC HDA controller like SOF (acomp
    used for ELD notifications), display connection change done during suspend,
    can be lost due to following sequence of events:
    
      1. system in S3 suspend
      2. DP/HDMI receiver connected
      3. system resumed
      4. HDA controller resumed, but card->deferred_resume_work not complete
      5. acomp eld_notify callback
      6. eld_notify ignored as power state is not CTL_POWER_D0
      7. HDA resume deferred work completed, power state set to CTL_POWER_D0
    
    This results in losing the notification, and the jack state reported to
    user-space is not correct.
    
    The check on step 6 was added in commit 8ae743e82f0b ("ALSA: hda - Skip
    ELD notification during system suspend"). It would seem with the deferred
    resume logic in ASoC core, this check is not safe.
    
    Fix the issue by modifying the check to use "dev.power.power_state.event"
    instead of ALSA specific card power state variable.
    
    BugLink: https://github.com/thesofproject/linux/issues/2825
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Link: https://lore.kernel.org/r/20210416131157.1881366-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f59db26081c0dc3b99ae158009878b9608cf3860
Author: Mihai Moldovan <ionic@ionic.de>
Date:   Thu Apr 15 09:28:03 2021 +0200

    kconfig: nconf: stop endless search loops
    
    [ Upstream commit 8c94b430b9f6213dec84e309bb480a71778c4213 ]
    
    If the user selects the very first entry in a page and performs a
    search-up operation, or selects the very last entry in a page and
    performs a search-down operation that will not succeed (e.g., via
    [/]asdfzzz[Up Arrow]), nconf will never terminate searching the page.
    
    The reason is that in this case, the starting point will be set to -1
    or n, which is then translated into (n - 1) (i.e., the last entry of
    the page) or 0 (i.e., the first entry of the page) and finally the
    search begins. This continues to work fine until the index reaches 0 or
    (n - 1), at which point it will be decremented to -1 or incremented to
    n, but not checked against the starting point right away. Instead, it's
    wrapped around to the bottom or top again, after which the starting
    point check occurs... and naturally fails.
    
    My original implementation added another check for -1 before wrapping
    the running index variable around, but Masahiro Yamada pointed out that
    the actual issue is that the comparison point (starting point) exceeds
    bounds (i.e., the [0,n-1] interval) in the first place and that,
    instead, the starting point should be fixed.
    
    This has the welcome side-effect of also fixing the case where the
    starting point was n while searching down, which also lead to an
    infinite loop.
    
    OTOH, this code is now essentially all his work.
    
    Amazingly, nobody seems to have been hit by this for 11 years - or at
    the very least nobody bothered to debug and fix this.
    
    Signed-off-by: Mihai Moldovan <ionic@ionic.de>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c262de1777e4f18be471e73deefe39e3a4f9a637
Author: Yonghong Song <yhs@fb.com>
Date:   Tue Apr 13 08:34:13 2021 -0700

    selftests: Set CC to clang in lib.mk if LLVM is set
    
    [ Upstream commit 26e6dd1072763cd5696b75994c03982dde952ad9 ]
    
    selftests/bpf/Makefile includes lib.mk. With the following command
      make -j60 LLVM=1 LLVM_IAS=1  <=== compile kernel
      make -j60 -C tools/testing/selftests/bpf LLVM=1 LLVM_IAS=1 V=1
    some files are still compiled with gcc. This patch
    fixed lib.mk issue which sets CC to gcc in all cases.
    
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210413153413.3027426-1-yhs@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b9ad1fd9dd2e63355893aa1e425f820b0e2ce89
Author: Anthony Wang <anthony1.wang@amd.com>
Date:   Wed Mar 31 11:03:35 2021 -0400

    drm/amd/display: Force vsync flip when reconfiguring MPCC
    
    [ Upstream commit 56d63782af9bbd1271bff1422a6a013123eade4d ]
    
    [Why]
    Underflow observed when disabling PIP overlay in-game when
    vsync is disabled, due to OTC master lock not working with
    game pipe which is immediate flip.
    
    [How]
    When performing a full update, override flip_immediate value
    to false for all planes, so that flip occurs on vsync.
    
    Signed-off-by: Anthony Wang <anthony1.wang@amd.com>
    Acked-by: Bindu Ramamurthy <bindur12@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10ed519fa825a5ec65ca41a3f607f62886253600
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Fri Apr 9 03:58:48 2021 -0500

    iommu/amd: Remove performance counter pre-initialization test
    
    [ Upstream commit 994d6608efe4a4c8834bdc5014c86f4bc6aceea6 ]
    
    In early AMD desktop/mobile platforms (during 2013), when the IOMMU
    Performance Counter (PMC) support was first introduced in
    commit 30861ddc9cca ("perf/x86/amd: Add IOMMU Performance Counter
    resource management"), there was a HW bug where the counters could not
    be accessed. The result was reading of the counter always return zero.
    
    At the time, the suggested workaround was to add a test logic prior
    to initializing the PMC feature to check if the counters can be programmed
    and read back the same value. This has been working fine until the more
    recent desktop/mobile platforms start enabling power gating for the PMC,
    which prevents access to the counters. This results in the PMC support
    being disabled unnecesarily.
    
    Unfortunatly, there is no documentation of since which generation
    of hardware the original PMC HW bug was fixed. Although, it was fixed
    soon after the first introduction of the PMC. Base on this, we assume
    that the buggy platforms are less likely to be in used, and it should
    be relatively safe to remove this legacy logic.
    
    Link: https://lore.kernel.org/linux-iommu/alpine.LNX.3.20.13.2006030935570.3181@monopod.intra.ispras.ru/
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201753
    Cc: Tj (Elloe Linux) <ml.linux@elloe.vision>
    Cc: Shuah Khan <skhan@linuxfoundation.org>
    Cc: Alexander Monakov <amonakov@ispras.ru>
    Cc: David Coe <david.coe@live.co.uk>
    Cc: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20210409085848.3908-3-suravee.suthikulpanit@amd.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82f6753ac96b99239d03bfb3132d5d33cd590540
Author: Paul Menzel <pmenzel@molgen.mpg.de>
Date:   Fri Apr 9 03:58:47 2021 -0500

    Revert "iommu/amd: Fix performance counter initialization"
    
    [ Upstream commit 715601e4e36903a653cd4294dfd3ed0019101991 ]
    
    This reverts commit 6778ff5b21bd8e78c8bd547fd66437cf2657fd9b.
    
    The original commit tries to address an issue, where PMC power-gating
    causing the IOMMU PMC pre-init test to fail on certain desktop/mobile
    platforms where the power-gating is normally enabled.
    
    There have been several reports that the workaround still does not
    guarantee to work, and can add up to 100 ms (on the worst case)
    to the boot process on certain platforms such as the MSI B350M MORTAR
    with AMD Ryzen 3 2200G.
    
    Therefore, revert this commit as a prelude to removing the pre-init
    test.
    
    Link: https://lore.kernel.org/linux-iommu/alpine.LNX.3.20.13.2006030935570.3181@monopod.intra.ispras.ru/
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201753
    Cc: Tj (Elloe Linux) <ml.linux@elloe.vision>
    Cc: Shuah Khan <skhan@linuxfoundation.org>
    Cc: Alexander Monakov <amonakov@ispras.ru>
    Cc: David Coe <david.coe@live.co.uk>
    Signed-off-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Link: https://lore.kernel.org/r/20210409085848.3908-2-suravee.suthikulpanit@amd.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae33b2f845fd645f0cd6a1a446b59a0478ea6da8
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Thu Apr 8 13:28:38 2021 +0900

    ASoC: rsnd: call rsnd_ssi_master_clk_start() from rsnd_ssi_init()
    
    [ Upstream commit a122a116fc6d8fcf2f202dcd185173a54268f239 ]
    
    Current rsnd needs to call .prepare (P) for clock settings,
    .trigger for playback start (S) and stop (E).
    It should be called as below from SSI point of view.
    
            P -> S -> E -> P -> S -> E -> ...
    
    But, if you used MIXer, below case might happen
    
                          (2)
            1: P -> S ---> E -> ...
            2:         P ----> S -> ...
                      (1)     (3)
    
    P(1) setups clock, but E(2) resets it. and starts playback (3).
    In such case, it will reports "SSI parent/child should use same rate".
    
    rsnd_ssi_master_clk_start() which is the main function at (P)
    was called from rsnd_ssi_init() (= S) before,
    but was moved by below patch to rsnd_soc_dai_prepare() (= P) to avoid
    using clk_get_rate() which shouldn't be used under atomic context.
    
            commit 4d230d1271064 ("ASoC: rsnd: fixup not to call clk_get/set
                                    under non-atomic")
    
    Because of above patch, rsnd_ssi_master_clk_start() is now called at (P)
    which is for non atomic context. But (P) is assuming that spin lock is
    *not* used.
    One issue now is rsnd_ssi_master_clk_start() is checking ssi->xxx
    which should be protected by spin lock.
    
    After above patch, adg.c had below patch for other reasons.
    
            commit 06e8f5c842f2d ("ASoC: rsnd: don't call clk_get_rate()
                                    under atomic context")
    
    clk_get_rate() is used at probe() timing by this patch.
    In other words, rsnd_ssi_master_clk_start() is no longer using
    clk_get_rate() any more.
    
    This means we can call it from rsnd_ssi_init() (= S) again which is
    protected by spin lock.
    This patch re-move it to under spin lock, and solves
    1. checking ssi->xxx without spin lock issue.
    2. clk setting / device start / device stop race condition.
    
    Reported-by: Linh Phung T. Y. <linh.phung.jy@renesas.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/875z0x1jt5.wl-kuninori.morimoto.gx@renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d61f2d938135bedf859db6fb4ed07e0ff962eb0b
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Apr 14 10:40:58 2021 +0200

    cuse: prevent clone
    
    [ Upstream commit 8217673d07256b22881127bf50dce874d0e51653 ]
    
    For cloned connections cuse_channel_release() will be called more than
    once, resulting in use after free.
    
    Prevent device cloning for CUSE, which does not make sense at this point,
    and highly unlikely to be used in real life.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7dac356a65db383ef23b987e4b9e34872ba76292
Author: David Bauer <mail@david-bauer.net>
Date:   Sun Feb 7 16:09:17 2021 +0100

    mt76: mt76x0: disable GTK offloading
    
    [ Upstream commit 4b36cc6b390f18dbc59a45fb4141f90d7dfe2b23 ]
    
    When operating two VAP on a MT7610 with encryption (PSK2, SAE, OWE),
    only the first one to be created will transmit properly encrypteded
    frames.
    
    All subsequently created VAPs will sent out frames with the payload left
    unencrypted, breaking multicast traffic (ICMP6 NDP) and potentially
    disclosing information to a third party.
    
    Disable GTK offloading and encrypt these frames in software to
    circumvent this issue. THis only seems to be necessary on MT7610 chips,
    as MT7612 is not affected from our testing.
    
    Signed-off-by: David Bauer <mail@david-bauer.net>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48be573a04f1bf37a762767ec89565fbbabe7bac
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Thu Apr 8 21:50:29 2021 +0200

    pinctrl: samsung: use 'int' for register masks in Exynos
    
    [ Upstream commit fa0c10a5f3a49130dd11281aa27e7e1c8654abc7 ]
    
    The Special Function Registers on all Exynos SoC, including ARM64, are
    32-bit wide, so entire driver uses matching functions like readl() or
    writel().  On 64-bit ARM using unsigned long for register masks:
    1. makes little sense as immediately after bitwise operation it will be
       cast to 32-bit value when calling writel(),
    2. is actually error-prone because it might promote other operands to
       64-bit.
    
    Addresses-Coverity: Unintentional integer overflow
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Link: https://lore.kernel.org/r/20210408195029.69974-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f88e0fbeff0f13536fdd1abcb9debac07b539d0a
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Thu Apr 8 14:31:25 2021 +0200

    mac80211: clear the beacon's CRC after channel switch
    
    [ Upstream commit d6843d1ee283137723b4a8c76244607ce6db1951 ]
    
    After channel switch, we should consider any beacon with a
    CSA IE as a new switch. If the CSA IE is a leftover from
    before the switch that the AP forgot to remove, we'll get
    a CSA-to-Self.
    
    This caused issues in iwlwifi where the firmware saw a beacon
    with a CSA-to-Self with mode = 1 on the new channel after a
    switch. The firmware considered this a new switch and closed
    its queues. Since the beacon didn't change between before and
    after the switch, we wouldn't handle it (the CRC is the same)
    and we wouldn't let the firmware open its queues again or
    disconnect if the CSA IE stays for too long.
    
    Clear the CRC valid state after we switch to make sure that
    we handle the beacon and handle the CSA IE as required.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Link: https://lore.kernel.org/r/20210408143124.b9e68aa98304.I465afb55ca2c7d59f7bf610c6046a1fd732b4c28@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fadf3660a24f8190c5235175f5529c929132c63a
Author: Bence Csókás <bence98@sch.bme.hu>
Date:   Wed Mar 31 19:19:20 2021 +0000

    i2c: Add I2C_AQ_NO_REP_START adapter quirk
    
    [ Upstream commit aca01415e076aa96cca0f801f4420ee5c10c660d ]
    
    This quirk signifies that the adapter cannot do a repeated
    START, it always issues a STOP condition after transfers.
    
    Suggested-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Bence Csókás <bence98@sch.bme.hu>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ffafbf2537dc313631f9d38a6dcdecc3e3fefbe
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Mar 25 23:10:54 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Chuwi Hi8 tablet
    
    [ Upstream commit 875c40eadf6ac6644c0f71842a4f30dd9968d281 ]
    
    The Chuwi Hi8 tablet is using an analog mic on IN1 and has its
    jack-detect connected to JD2_IN4N, instead of using the default
    IN3 for its internal mic and JD1_IN4P for jack-detect.
    
    It also only has 1 speaker.
    
    Add a quirk applying the correct settings for this configuration.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210325221054.22714-1-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98ebeb87b2cf26663270e8e656fe599a32e4c96d
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Mar 29 12:12:54 2021 -0700

    ip6_vti: proper dev_{hold|put} in ndo_[un]init methods
    
    [ Upstream commit 40cb881b5aaa0b69a7d93dec8440d5c62dae299f ]
    
    After adopting CONFIG_PCPU_DEV_REFCNT=n option, syzbot was able to trigger
    a warning [1]
    
    Issue here is that:
    
    - all dev_put() should be paired with a corresponding prior dev_hold().
    
    - A driver doing a dev_put() in its ndo_uninit() MUST also
      do a dev_hold() in its ndo_init(), only when ndo_init()
      is returning 0.
    
    Otherwise, register_netdevice() would call ndo_uninit()
    in its error path and release a refcount too soon.
    
    Therefore, we need to move dev_hold() call from
    vti6_tnl_create2() to vti6_dev_init_gen()
    
    [1]
    WARNING: CPU: 0 PID: 15951 at lib/refcount.c:31 refcount_warn_saturate+0xbf/0x1e0 lib/refcount.c:31
    Modules linked in:
    CPU: 0 PID: 15951 Comm: syz-executor.3 Not tainted 5.12.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:refcount_warn_saturate+0xbf/0x1e0 lib/refcount.c:31
    Code: 1d 6a 5a e8 09 31 ff 89 de e8 8d 1a ab fd 84 db 75 e0 e8 d4 13 ab fd 48 c7 c7 a0 e1 c1 89 c6 05 4a 5a e8 09 01 e8 2e 36 fb 04 <0f> 0b eb c4 e8 b8 13 ab fd 0f b6 1d 39 5a e8 09 31 ff 89 de e8 58
    RSP: 0018:ffffc90001eaef28 EFLAGS: 00010282
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: 0000000000040000 RSI: ffffffff815c51f5 RDI: fffff520003d5dd7
    RBP: 0000000000000004 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815bdf8e R11: 0000000000000000 R12: ffff88801bb1c568
    R13: ffff88801f69e800 R14: 00000000ffffffff R15: ffff888050889d40
    FS:  00007fc79314e700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f1c1ff47108 CR3: 0000000020fd5000 CR4: 00000000001506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     __refcount_dec include/linux/refcount.h:344 [inline]
     refcount_dec include/linux/refcount.h:359 [inline]
     dev_put include/linux/netdevice.h:4135 [inline]
     vti6_dev_uninit+0x31a/0x360 net/ipv6/ip6_vti.c:297
     register_netdevice+0xadf/0x1500 net/core/dev.c:10308
     vti6_tnl_create2+0x1b5/0x400 net/ipv6/ip6_vti.c:190
     vti6_newlink+0x9d/0xd0 net/ipv6/ip6_vti.c:1020
     __rtnl_newlink+0x1062/0x1710 net/core/rtnetlink.c:3443
     rtnl_newlink+0x64/0xa0 net/core/rtnetlink.c:3491
     rtnetlink_rcv_msg+0x44e/0xad0 net/core/rtnetlink.c:5553
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x331/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmmsg+0x195/0x470 net/socket.c:2490
     __do_sys_sendmmsg net/socket.c:2519 [inline]
     __se_sys_sendmmsg net/socket.c:2516 [inline]
     __x64_sys_sendmmsg+0x99/0x100 net/socket.c:2516
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fae341909d6c6b6328f5780dda16dc2f5d70e9b5
Author: Archie Pusaka <apusaka@chromium.org>
Date:   Tue Mar 23 16:32:20 2021 +0800

    Bluetooth: check for zapped sk before connecting
    
    [ Upstream commit 3af70b39fa2d415dc86c370e5b24ddb9fdacbd6f ]
    
    There is a possibility of receiving a zapped sock on
    l2cap_sock_connect(). This could lead to interesting crashes, one
    such case is tearing down an already tore l2cap_sock as is happened
    with this call trace:
    
    __dump_stack lib/dump_stack.c:15 [inline]
    dump_stack+0xc4/0x118 lib/dump_stack.c:56
    register_lock_class kernel/locking/lockdep.c:792 [inline]
    register_lock_class+0x239/0x6f6 kernel/locking/lockdep.c:742
    __lock_acquire+0x209/0x1e27 kernel/locking/lockdep.c:3105
    lock_acquire+0x29c/0x2fb kernel/locking/lockdep.c:3599
    __raw_spin_lock_bh include/linux/spinlock_api_smp.h:137 [inline]
    _raw_spin_lock_bh+0x38/0x47 kernel/locking/spinlock.c:175
    spin_lock_bh include/linux/spinlock.h:307 [inline]
    lock_sock_nested+0x44/0xfa net/core/sock.c:2518
    l2cap_sock_teardown_cb+0x88/0x2fb net/bluetooth/l2cap_sock.c:1345
    l2cap_chan_del+0xa3/0x383 net/bluetooth/l2cap_core.c:598
    l2cap_chan_close+0x537/0x5dd net/bluetooth/l2cap_core.c:756
    l2cap_chan_timeout+0x104/0x17e net/bluetooth/l2cap_core.c:429
    process_one_work+0x7e3/0xcb0 kernel/workqueue.c:2064
    worker_thread+0x5a5/0x773 kernel/workqueue.c:2196
    kthread+0x291/0x2a6 kernel/kthread.c:211
    ret_from_fork+0x4e/0x80 arch/x86/entry/entry_64.S:604
    
    Signed-off-by: Archie Pusaka <apusaka@chromium.org>
    Reported-by: syzbot+abfc0f5e668d4099af73@syzkaller.appspotmail.com
    Reviewed-by: Alain Michaud <alainm@chromium.org>
    Reviewed-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29e498ff183a41552d5e647c4e4c80c8e7b12bb7
Author: Nikolay Aleksandrov <nikolay@nvidia.com>
Date:   Mon Mar 22 17:45:27 2021 +0200

    net: bridge: when suppression is enabled exclude RARP packets
    
    [ Upstream commit 0353b4a96b7a9f60fe20d1b3ebd4931a4085f91c ]
    
    Recently we had an interop issue where RARP packets got suppressed with
    bridge neigh suppression enabled, but the check in the code was meant to
    suppress GARP. Exclude RARP packets from it which would allow some VMWare
    setups to work, to quote the report:
    "Those RARP packets usually get generated by vMware to notify physical
    switches when vMotion occurs. vMware may use random sip/tip or just use
    sip=tip=0. So the RARP packet sometimes get properly flooded by the vtep
    and other times get dropped by the logic"
    
    Reported-by: Amer Abdalamer <amer@nvidia.com>
    Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3893726745ffa80c02ddb302ed698ffc086c0d8
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Mar 22 07:52:07 2021 +0900

    Bluetooth: initialize skb_queue_head at l2cap_chan_create()
    
    [ Upstream commit be8597239379f0f53c9710dd6ab551bbf535bec6 ]
    
    syzbot is hitting "INFO: trying to register non-static key." message [1],
    for "struct l2cap_chan"->tx_q.lock spinlock is not yet initialized when
    l2cap_chan_del() is called due to e.g. timeout.
    
    Since "struct l2cap_chan"->lock mutex is initialized at l2cap_chan_create()
    immediately after "struct l2cap_chan" is allocated using kzalloc(), let's
    as well initialize "struct l2cap_chan"->{tx_q,srej_q}.lock spinlocks there.
    
    [1] https://syzkaller.appspot.com/bug?extid=fadfba6a911f6bf71842
    
    Reported-and-tested-by: syzbot <syzbot+fadfba6a911f6bf71842@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca0dec6564e60e2514cf88a5432a8e16b44b14a0
Author: Archie Pusaka <apusaka@chromium.org>
Date:   Mon Mar 22 14:02:15 2021 +0800

    Bluetooth: Set CONF_NOT_COMPLETE as l2cap_chan default
    
    [ Upstream commit 3a9d54b1947ecea8eea9a902c0b7eb58a98add8a ]
    
    Currently l2cap_chan_set_defaults() reset chan->conf_state to zero.
    However, there is a flag CONF_NOT_COMPLETE which is set when
    creating the l2cap_chan. It is suggested that the flag should be
    cleared when l2cap_chan is ready, but when l2cap_chan_set_defaults()
    is called, l2cap_chan is not yet ready. Therefore, we must set this
    flag as the default.
    
    Example crash call trace:
    __dump_stack lib/dump_stack.c:15 [inline]
    dump_stack+0xc4/0x118 lib/dump_stack.c:56
    panic+0x1c6/0x38b kernel/panic.c:117
    __warn+0x170/0x1b9 kernel/panic.c:471
    warn_slowpath_fmt+0xc7/0xf8 kernel/panic.c:494
    debug_print_object+0x175/0x193 lib/debugobjects.c:260
    debug_object_assert_init+0x171/0x1bf lib/debugobjects.c:614
    debug_timer_assert_init kernel/time/timer.c:629 [inline]
    debug_assert_init kernel/time/timer.c:677 [inline]
    del_timer+0x7c/0x179 kernel/time/timer.c:1034
    try_to_grab_pending+0x81/0x2e5 kernel/workqueue.c:1230
    cancel_delayed_work+0x7c/0x1c4 kernel/workqueue.c:2929
    l2cap_clear_timer+0x1e/0x41 include/net/bluetooth/l2cap.h:834
    l2cap_chan_del+0x2d8/0x37e net/bluetooth/l2cap_core.c:640
    l2cap_chan_close+0x532/0x5d8 net/bluetooth/l2cap_core.c:756
    l2cap_sock_shutdown+0x806/0x969 net/bluetooth/l2cap_sock.c:1174
    l2cap_sock_release+0x64/0x14d net/bluetooth/l2cap_sock.c:1217
    __sock_release+0xda/0x217 net/socket.c:580
    sock_close+0x1b/0x1f net/socket.c:1039
    __fput+0x322/0x55c fs/file_table.c:208
    ____fput+0x17/0x19 fs/file_table.c:244
    task_work_run+0x19b/0x1d3 kernel/task_work.c:115
    exit_task_work include/linux/task_work.h:21 [inline]
    do_exit+0xe4c/0x204a kernel/exit.c:766
    do_group_exit+0x291/0x291 kernel/exit.c:891
    get_signal+0x749/0x1093 kernel/signal.c:2396
    do_signal+0xa5/0xcdb arch/x86/kernel/signal.c:737
    exit_to_usermode_loop arch/x86/entry/common.c:243 [inline]
    prepare_exit_to_usermode+0xed/0x235 arch/x86/entry/common.c:277
    syscall_return_slowpath+0x3a7/0x3b3 arch/x86/entry/common.c:348
    int_ret_from_sys_call+0x25/0xa3
    
    Signed-off-by: Archie Pusaka <apusaka@chromium.org>
    Reported-by: syzbot+338f014a98367a08a114@syzkaller.appspotmail.com
    Reviewed-by: Alain Michaud <alainm@chromium.org>
    Reviewed-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ac09b2bdc992568131a91420a7e1fe94200d396
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Mar 21 12:28:31 2021 +0900

    ALSA: bebob: enable to deliver MIDI messages for multiple ports
    
    [ Upstream commit d2b6f15bc18ac8fbce25398290774c21f5b2cd44 ]
    
    Current implementation of bebob driver doesn't correctly handle the case
    that the device has multiple MIDI ports. The cause is the number of MIDI
    conformant data channels is passed to AM824 data block processing layer.
    
    This commit fixes the bug.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210321032831.340278-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2f577188581c3f6b326a5a0df74b6eaea52d69c
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 21 11:38:40 2021 -0400

    ALSA: rme9652: don't disable if not enabled
    
    [ Upstream commit f57a741874bb6995089020e97a1dcdf9b165dcbe ]
    
    rme9652 wants to disable a not enabled pci device, which makes kernel
    throw a warning. Make sure the device is enabled before calling disable.
    
    [    1.751595] snd_rme9652 0000:00:03.0: disabling already-disabled device
    [    1.751605] WARNING: CPU: 0 PID: 174 at drivers/pci/pci.c:2146 pci_disable_device+0x91/0xb0
    [    1.759968] Call Trace:
    [    1.760145]  snd_rme9652_card_free+0x76/0xa0 [snd_rme9652]
    [    1.760434]  release_card_device+0x4b/0x80 [snd]
    [    1.760679]  device_release+0x3b/0xa0
    [    1.760874]  kobject_put+0x94/0x1b0
    [    1.761059]  put_device+0x13/0x20
    [    1.761235]  snd_card_free+0x61/0x90 [snd]
    [    1.761454]  snd_rme9652_probe+0x3be/0x700 [snd_rme9652]
    
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20210321153840.378226-4-ztong0001@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6f2224be4194514166d67722d8ee412880a64d3
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 21 11:38:39 2021 -0400

    ALSA: hdspm: don't disable if not enabled
    
    [ Upstream commit 790f5719b85e12e10c41753b864e74249585ed08 ]
    
    hdspm wants to disable a not enabled pci device, which makes kernel
    throw a warning. Make sure the device is enabled before calling disable.
    
    [    1.786391] snd_hdspm 0000:00:03.0: disabling already-disabled device
    [    1.786400] WARNING: CPU: 0 PID: 182 at drivers/pci/pci.c:2146 pci_disable_device+0x91/0xb0
    [    1.795181] Call Trace:
    [    1.795320]  snd_hdspm_card_free+0x58/0xa0 [snd_hdspm]
    [    1.795595]  release_card_device+0x4b/0x80 [snd]
    [    1.795860]  device_release+0x3b/0xa0
    [    1.796072]  kobject_put+0x94/0x1b0
    [    1.796260]  put_device+0x13/0x20
    [    1.796438]  snd_card_free+0x61/0x90 [snd]
    [    1.796659]  snd_hdspm_probe+0x97b/0x1440 [snd_hdspm]
    
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20210321153840.378226-3-ztong0001@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ea252600a7de91d371fee2beb14845282cb13b1
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 21 11:38:38 2021 -0400

    ALSA: hdsp: don't disable if not enabled
    
    [ Upstream commit 507cdb9adba006a7798c358456426e1aea3d9c4f ]
    
    hdsp wants to disable a not enabled pci device, which makes kernel
    throw a warning. Make sure the device is enabled before calling disable.
    
    [    1.758292] snd_hdsp 0000:00:03.0: disabling already-disabled device
    [    1.758327] WARNING: CPU: 0 PID: 180 at drivers/pci/pci.c:2146 pci_disable_device+0x91/0xb0
    [    1.766985] Call Trace:
    [    1.767121]  snd_hdsp_card_free+0x94/0xf0 [snd_hdsp]
    [    1.767388]  release_card_device+0x4b/0x80 [snd]
    [    1.767639]  device_release+0x3b/0xa0
    [    1.767838]  kobject_put+0x94/0x1b0
    [    1.768027]  put_device+0x13/0x20
    [    1.768207]  snd_card_free+0x61/0x90 [snd]
    [    1.768430]  snd_hdsp_probe+0x524/0x5e0 [snd_hdsp]
    
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20210321153840.378226-2-ztong0001@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7900cdfbc1dd0d575b2e6575057ed28723afa80b
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Mar 12 12:57:34 2021 +0100

    i2c: bail out early when RDWR parameters are wrong
    
    [ Upstream commit 71581562ee36032d2d574a9b23ad4af6d6a64cf7 ]
    
    The buggy parameters currently get caught later, but emit a noisy WARN.
    Userspace should not be able to trigger this, so add similar checks much
    earlier. Also avoids some unneeded code paths, of course. Apply kernel
    coding stlye to a comment while here.
    
    Reported-by: syzbot+ffb0b3ffa6cfbc7d7b3f@syzkaller.appspotmail.com
    Tested-by: syzbot+ffb0b3ffa6cfbc7d7b3f@syzkaller.appspotmail.com
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c0432417fa35db5a373a533cfec0fc14807d6d7
Author: Mikhail Durnev <mikhail_durnev@mentor.com>
Date:   Tue Mar 16 14:47:35 2021 +1000

    ASoC: rsnd: core: Check convert rate in rsnd_hw_params
    
    [ Upstream commit 19c6a63ced5e07e40f3a5255cb1f0fe0d3be7b14 ]
    
    snd_pcm_hw_params_set_rate_near can return incorrect sample rate in
    some cases, e.g. when the backend output rate is set to some value higher
    than 48000 Hz and the input rate is 8000 Hz. So passing the value returned
    by snd_pcm_hw_params_set_rate_near to snd_pcm_hw_params will result in
    "FSO/FSI ratio error" and playing no audio at all while the userland
    is not properly notified about the issue.
    
    If SRC is unable to convert the requested sample rate to the sample rate
    the backend is using, then the requested sample rate should be adjusted in
    rsnd_hw_params. The userland will be notified about that change in the
    returned hw_params structure.
    
    Signed-off-by: Mikhail Durnev <mikhail_durnev@mentor.com>
    Link: https://lore.kernel.org/r/1615870055-13954-1-git-send-email-mikhail_durnev@mentor.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3564792359db14d2105d09d4851a084403bd763
Author: Jonathan McDowell <noodles@earth.li>
Date:   Sat Mar 13 13:18:26 2021 +0000

    net: stmmac: Set FIFO sizes for ipq806x
    
    [ Upstream commit e127906b68b49ddb3ecba39ffa36a329c48197d3 ]
    
    Commit eaf4fac47807 ("net: stmmac: Do not accept invalid MTU values")
    started using the TX FIFO size to verify what counts as a valid MTU
    request for the stmmac driver.  This is unset for the ipq806x variant.
    Looking at older patches for this it seems the RX + TXs buffers can be
    up to 8k, so set appropriately.
    
    (I sent this as an RFC patch in June last year, but received no replies.
    I've been running with this on my hardware (a MikroTik RB3011) since
    then with larger MTUs to support both the internal qca8k switch and
    VLANs with no problems. Without the patch it's impossible to set the
    larger MTU required to support this.)
    
    Signed-off-by: Jonathan McDowell <noodles@earth.li>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac740f06bf53ba202cfa484e53453de744b05182
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Mar 12 12:48:50 2021 +0100

    ASoC: Intel: bytcr_rt5640: Enable jack-detect support on Asus T100TAF
    
    [ Upstream commit b7c7203a1f751348f35fc4bcb157572d303f7573 ]
    
    The Asus T100TAF uses the same jack-detect settings as the T100TA,
    this has been confirmed on actual hardware.
    
    Add these settings to the T100TAF quirks to enable jack-detect support
    on the T100TAF.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210312114850.13832-1-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aee46e847d19a539e7950c1c5807706c14abaff1
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Thu Mar 11 10:33:22 2021 +0700

    tipc: convert dest node's address to network order
    
    [ Upstream commit 1980d37565061ab44bdc2f9e4da477d3b9752e81 ]
    
    (struct tipc_link_info)->dest is in network order (__be32), so we must
    convert the value to network order before assigning. The problem detected
    by sparse:
    
    net/tipc/netlink_compat.c:699:24: warning: incorrect type in assignment (different base types)
    net/tipc/netlink_compat.c:699:24:    expected restricted __be32 [usertype] dest
    net/tipc/netlink_compat.c:699:24:    got int
    
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccef53a27a24492b069de5315d49d9623cc1c5ee
Author: Alexander Aring <aahringo@redhat.com>
Date:   Mon Mar 1 17:05:08 2021 -0500

    fs: dlm: fix debugfs dump
    
    [ Upstream commit 92c48950b43f4a767388cf87709d8687151a641f ]
    
    This patch fixes the following message which randomly pops up during
    glocktop call:
    
    seq_file: buggy .next function table_seq_next did not update position index
    
    The issue is that seq_read_iter() in fs/seq_file.c also needs an
    increment of the index in an non next record case as well which this
    patch fixes otherwise seq_read_iter() will print out the above message.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c799f6c742718ca574d13d9b3d40592730f62c0
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed May 5 14:09:15 2021 +0300

    PM: runtime: Fix unpaired parent child_count for force_resume
    
    commit c745253e2a691a40c66790defe85c104a887e14a upstream.
    
    As pm_runtime_need_not_resume() relies also on usage_count, it can return
    a different value in pm_runtime_force_suspend() compared to when called in
    pm_runtime_force_resume(). Different return values can happen if anything
    calls PM runtime functions in between, and causes the parent child_count
    to increase on every resume.
    
    So far I've seen the issue only for omapdrm that does complicated things
    with PM runtime calls during system suspend for legacy reasons:
    
    omap_atomic_commit_tail() for omapdrm.0
     dispc_runtime_get()
      wakes up 58000000.dss as it's the dispc parent
       dispc_runtime_resume()
        rpm_resume() increases parent child_count
     dispc_runtime_put() won't idle, PM runtime suspend blocked
    pm_runtime_force_suspend() for 58000000.dss, !pm_runtime_need_not_resume()
     __update_runtime_status()
    system suspended
    pm_runtime_force_resume() for 58000000.dss, pm_runtime_need_not_resume()
     pm_runtime_enable() only called because of pm_runtime_need_not_resume()
    omap_atomic_commit_tail() for omapdrm.0
     dispc_runtime_get()
      wakes up 58000000.dss as it's the dispc parent
       dispc_runtime_resume()
        rpm_resume() increases parent child_count
     dispc_runtime_put() won't idle, PM runtime suspend blocked
    ...
    rpm_suspend for 58000000.dss but parent child_count is now unbalanced
    
    Let's fix the issue by adding a flag for needs_force_resume and use it in
    pm_runtime_force_resume() instead of pm_runtime_need_not_resume().
    
    Additionally omapdrm system suspend could be simplified later on to avoid
    lots of unnecessary PM runtime calls and the complexity it adds. The
    driver can just use internal functions that are shared between the PM
    runtime and system suspend related functions.
    
    Fixes: 4918e1f87c5f ("PM / runtime: Rework pm_runtime_force_suspend/resume()")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Tested-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18cb19eab713ba0a8cc753b909e34eef9faa2eb5
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Jan 14 16:40:51 2021 -0800

    KVM: x86/mmu: Remove the defunct update_pte() paging hook
    
    commit c5e2184d1544f9e56140791eff1a351bea2e63b9 upstream.
    
    Remove the update_pte() shadow paging logic, which was obsoleted by
    commit 4731d4c7a077 ("KVM: MMU: out of sync shadow core"), but never
    removed.  As pointed out by Yu, KVM never write protects leaf page
    tables for the purposes of shadow paging, and instead marks their
    associated shadow page as unsync so that the guest can write PTEs at
    will.
    
    The update_pte() path, which predates the unsync logic, optimizes COW
    scenarios by refreshing leaf SPTEs when they are written, as opposed to
    zapping the SPTE, restarting the guest, and installing the new SPTE on
    the subsequent fault.  Since KVM no longer write-protects leaf page
    tables, update_pte() is unreachable and can be dropped.
    
    Reported-by: Yu Zhang <yu.c.zhang@intel.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210115004051.4099250-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    (jwang: backport to 5.4 to fix a warning on AMD nested Virtualization)
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e888d623a420f3e86dd8ba94cd64d27f66fa24d9
Author: Jarkko Sakkinen <jarkko@kernel.org>
Date:   Mon May 10 15:28:31 2021 +0300

    tpm, tpm_tis: Reserve locality in tpm_tis_resume()
    
    commit 8a2d296aaebadd68d9c1f6908667df1d1c84c051 upstream.
    
    Reserve locality in tpm_tis_resume(), as it could be unsert after waking
    up from a sleep state.
    
    Cc: stable@vger.kernel.org
    Cc: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Fixes: a3fbfae82b4c ("tpm: take TPM chip power gating out of tpm_transmit()")
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0fd39a09e310561cdbd976c1518598b70e3cfa6
Author: Jarkko Sakkinen <jarkko@kernel.org>
Date:   Mon May 10 15:28:30 2021 +0300

    tpm, tpm_tis: Extend locality handling to TPM2 in tpm_tis_gen_interrupt()
    
    commit e630af7dfb450d1c00c30077314acf33032ff9e4 upstream.
    
    The earlier fix (linked) only partially fixed the locality handling bug
    in tpm_tis_gen_interrupt(), i.e. only for TPM 1.x.
    
    Extend the locality handling to cover TPM2.
    
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/linux-integrity/20210220125534.20707-1-jarkko@kernel.org/
    Fixes: a3fbfae82b4c ("tpm: take TPM chip power gating out of tpm_transmit()")
    Reported-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Tested-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a60d4be38f0229225dfd448a0fd06ef0a917fd1
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Wed May 12 21:39:26 2021 +0800

    tpm: fix error return code in tpm2_get_cc_attrs_tbl()
    
    commit 1df83992d977355177810c2b711afc30546c81ce upstream.
    
    If the total number of commands queried through TPM2_CAP_COMMANDS is
    different from that queried through TPM2_CC_GET_CAPABILITY, it indicates
    an unknown error. In this case, an appropriate error code -EFAULT should
    be returned. However, we currently do not explicitly assign this error
    code to 'rc'. As a result, 0 was incorrectly returned.
    
    Cc: stable@vger.kernel.org
    Fixes: 58472f5cd4f6("tpm: validate TPM 2.0 commands")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
