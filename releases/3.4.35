commit 2713e2797a78a0fdda765bc5ad7fed41e94818ba
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Mar 4 06:07:21 2013 +0800

    Linux 3.4.35

commit e7e24f96cacd091ecd6ed0a4c10c83daae28f3c4
Author: Alexey Klimov <klimov.linux@gmail.com>
Date:   Mon Nov 12 02:57:03 2012 -0300

    usb hid quirks for Masterkit MA901 usb radio
    
    commit 0322bd3980b3ebf7dde8474e22614cb443d6479a upstream.
    
    Don't let Masterkit MA901 USB radio be handled by usb hid drivers.
    This device will be handled by radio-ma901.c driver.
    
    Signed-off-by: Alexey Klimov <klimov.linux@gmail.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a059654e30e7f0d0aaba17a44165332443d3f48e
Author: James Ralston <james.d.ralston@intel.com>
Date:   Fri Feb 8 17:24:12 2013 -0800

    ata_piix: Add Device IDs for Intel Wellsburg PCH
    
    commit 3aee8bc52c415aba8148f144e5e5359b0fd75dd1 upstream.
    
    This patch adds the IDE-mode SATA Device IDs for the Intel Wellsburg PCH
    
    Signed-off-by: James Ralston <james.d.ralston@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78b6767929e77f40b455b115d1643b82678b6a26
Author: Seth Heasley <seth.heasley@intel.com>
Date:   Fri Jan 25 11:57:05 2013 -0800

    ata_piix: IDE-mode SATA patch for Intel Avoton DeviceIDs
    
    commit aaa515277db9585eeb4fdeb4637b9f9df50a1dd9 upstream.
    
    This patch adds the IDE-mode SATA DeviceIDs for the Intel Avoton SOC.
    
    Signed-off-by: Seth Heasley <seth.heasley@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f14f68ff0121c770930b061fe23008af45006a2
Author: Vinson Lee <vlee@twitter.com>
Date:   Tue Feb 26 18:30:30 2013 -0800

    perf tools: Fix build with bison 2.3 and older.
    
    commit 85df3b3769222894e9692b383c7af124b7721086 upstream.
    
    The %name-prefix "prefix" syntax is not available on bison 2.3 and
    older. Substitute with the -p "prefix" command-line option for
    compatibility with older versions of bison.
    
    This patch fixes this build error with older versions of bison.
    
        CC util/sysfs.o
        BISON util/pmu-bison.c
    util/pmu.y:2.14-24: syntax error, unexpected string, expecting =
    make: *** [util/pmu-bison.c] Error 1
    
    Signed-off-by: Vinson Lee <vlee@twitter.com>
    Tested-by: Li Zefan <lizefan@huawei.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Li Zefan <lizefan@huawei.com>
    Cc: Namhyung Kim <namhyung@gmail.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Pekka Enberg <penberg@kernel.org>
    Link: http://lkml.kernel.org/r/1360792138-29186-1-git-send-email-vlee@twitter.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0685b5924819447dad0413312b508e68168a1ee2
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Feb 27 10:56:19 2013 +0000

    staging: comedi: check s->async for poll(), read() and write()
    
    commit cc400e185c07c15a42d2635995f422de5b94b696 upstream.
    
    Some low-level comedi drivers (incorrectly) point `dev->read_subdev` or
    `dev->write_subdev` to a subdevice that does not support asynchronous
    commands.  Comedi's poll(), read() and write() file operation handlers
    assume these subdevices do support asynchronous commands.  In
    particular, they assume `s->async` is valid (where `s` points to the
    read or write subdevice), which it won't be if it has been set
    incorrectly.  This can lead to a NULL pointer dereference.
    
    Check `s->async` is non-NULL in `comedi_poll()`, `comedi_read()` and
    `comedi_write()` to avoid the bug.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4cd1e4dba29c756272c2ee9d06b094b4319b90a
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Feb 27 12:52:46 2013 +0000

    staging: comedi: ni_labpc: set up command4 register *after* command3
    
    Commit 22056e2b46246d97ff0f7c6e21a77b8daa07f02c upstream.
    
    Tuomas <tvainikk _at_ gmail _dot_ com> reported problems getting
    meaningful output from a Lab-PC+ in differential mode for AI cmds, but
    AI insn reads gave correct readings.  He tracked it down to two
    problems, one of which is addressed by this patch.
    
    It seems that writing to the command3 register after writing to the
    command4 register in `labpc_ai_cmd()` messes up the differential
    reference bit setting in the command4 register.  Set up the command4
    register after the command3 register (as in `labpc_ai_rinsn()`) to avoid
    the problem.
    
    Thanks to Tuomas for suggesting the fix.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e05b9964644382e9994e62dc5c8eb815e5225fa
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Feb 27 12:52:45 2013 +0000

    staging: comedi: ni_labpc: correct differential channel sequence for AI commands
    
    Commit 4c4bc25d0fa6beaf054c0b4c3b324487f266c820 upstream.
    
    Tuomas <tvainikk _at_ gmail _dot_ com> reported problems getting
    meaningful output from a Lab-PC+ in differential mode for AI cmds, but
    AI insn reads gave correct readings.  He tracked it down to two
    problems, one of which is addressed by this patch.
    
    It seems the setting of the channel bits for particular scanning modes
    was incorrect for differential mode.  (Only half the number of channels
    are available in differential mode; comedi refers to them as channels 0,
    1, 2 and 3, but the hardware documentation refers to them as channels 0,
    2, 4 and 6.)  In differential mode, the setting of the channel enable
    bits in the command1 register should depend on whether the scan enable
    bit is set.  Effectively, we need to double the comedi channel number
    when the scan enable bit is not set in differential mode.  The scan
    enable bit gets set when the AI scan mode is `MODE_MULT_CHAN_UP` or
    `MODE_MULT_CHAN_DOWN`, and gets cleared when the AI scan mode is
    `MODE_SINGLE_CHAN` or `MODE_SINGLE_CHAN_INTERVAL`.  The existing test
    for whether the comedi channel number needs to be doubled in
    differential mode is incorrect in `labpc_ai_cmd()`.  This patch corrects
    the test.
    
    Thanks to Tuomas for suggesting the fix.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 427e85ba0d2e3811c130714eea3fec0800ef2fcd
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Tue Feb 5 00:16:29 2013 +0000

    ACPI: Add DMI entry for Sony VGN-FW41E_H
    
    commit 66f2fda93b67fa744d406e6dcf443f67bac204b6 upstream.
    
    This patch adds a quirk to allow the Sony VGN-FW41E_H to suspend/resume
    properly.
    
    References: http://bugs.launchpad.net/bugs/1113547
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7eb0fad53ef76201d81a2e9e1bad5b68a457e4e3
Author: Rajanikanth H.V <rajanikanth.hv@stericsson.com>
Date:   Wed Jan 23 09:56:45 2013 +0530

    ab8500_btemp: Demote initcall sequence
    
    commit eeb0751c99522a4d1bbcc7b6bc1460cd07d07488 upstream.
    
    Power supply subsystem creates thermal zone device for the property
    'POWER_SUPPLY_PROP_TEMP' which requires thermal subsystem to be ready
    before 'ab8500 battery temperature monitor' driver is initialized. ab8500
    btemp driver is initialized with subsys_initcall whereas thermal subsystem
    is initialized with fs_initcall which causes
    thermal_zone_device_register(...) to crash since the required structure
    'thermal_class' is not initialized yet:
    
    Unable to handle kernel NULL pointer dereference at virtual address 000000a4
    pgd = c0004000
    [000000a4] *pgd=00000000
    Internal error: Oops: 5 [#1] PREEMPT SMP ARM
    Modules linked in:
    CPU: 0    Tainted: G        W     (3.8.0-rc4-00001-g632fda8-dirty #1)
    PC is at _raw_spin_lock+0x18/0x54
    LR is at get_device_parent+0x50/0x1b8
    pc : [<c02f1dd0>]    lr : [<c01cb248>]    psr: 60000013
    sp : ef04bdc8  ip : 00000000  fp : c0446180
    r10: ef216e38  r9 : c03af5d0  r8 : ef275c18
    r7 : 00000000  r6 : c0476c14  r5 : ef275c18  r4 : ef095840
    r3 : ef04a000  r2 : 00000001  r1 : 00000000  r0 : 000000a4
    Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment kernel
    Control: 10c5787d  Table: 0000404a  DAC: 00000015
    Process swapper/0 (pid: 1, stack limit = 0xef04a238)
    Stack: (0xef04bdc8 to 0xef04c000)
    [...]
    [<c02f1dd0>] (_raw_spin_lock+0x18/0x54) from [<c01cb248>] (get_device_parent+0x50/0x1b8)
    [<c01cb248>] (get_device_parent+0x50/0x1b8) from [<c01cb8d8>] (device_add+0xa4/0x574)
    [<c01cb8d8>] (device_add+0xa4/0x574) from [<c020b91c>] (thermal_zone_device_register+0x118/0x938)
    [<c020b91c>] (thermal_zone_device_register+0x118/0x938) from [<c0202030>] (power_supply_register+0x170/0x1f8)
    [<c0202030>] (power_supply_register+0x170/0x1f8) from [<c02055ec>] (ab8500_btemp_probe+0x208/0x47c)
    [<c02055ec>] (ab8500_btemp_probe+0x208/0x47c) from [<c01cf0dc>] (platform_drv_probe+0x14/0x18)
    [<c01cf0dc>] (platform_drv_probe+0x14/0x18) from [<c01cde70>] (driver_probe_device+0x74/0x20c)
    [<c01cde70>] (driver_probe_device+0x74/0x20c) from [<c01ce094>] (__driver_attach+0x8c/0x90)
    [<c01ce094>] (__driver_attach+0x8c/0x90) from [<c01cc640>] (bus_for_each_dev+0x4c/0x80)
    [<c01cc640>] (bus_for_each_dev+0x4c/0x80) from [<c01cd6b4>] (bus_add_driver+0x16c/0x23c)
    [<c01cd6b4>] (bus_add_driver+0x16c/0x23c) from [<c01ce54c>] (driver_register+0x78/0x14c)
    [<c01ce54c>] (driver_register+0x78/0x14c) from [<c00086ac>] (do_one_initcall+0xfc/0x164)
    [<c00086ac>] (do_one_initcall+0xfc/0x164) from [<c02e89c8>] (kernel_init+0x120/0x2b8)
    [<c02e89c8>] (kernel_init+0x120/0x2b8) from [<c000e358>] (ret_from_fork+0x14/0x3c)
    Code: e3c3303f e5932004 e2822001 e5832004 (e1903f9f)
    ---[ end trace ed9df72941b5bada ]---
    
    Signed-off-by: Rajanikanth H.V <rajanikanth.hv@stericsson.com>
    Signed-off-by: Anton Vorontsov <anton@enomsg.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9a8884a35a74f1fb9f12a17f62331bdc6eac2af
Author: Lee Jones <lee.jones@linaro.org>
Date:   Thu Jan 17 14:21:53 2013 +0000

    ab8500-chargalg: Only root should have write permission on sysfs file
    
    commit e3455002d04276c256a531f7175dce0f7d1cb78a upstream.
    
    Only root should have write permission on sysfs file ab8500_chargalg/chargalg.
    
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 916b6c67cd471fafa3e5e53ce8389c36749ed6f1
Author: Li Zefan <lizefan@huawei.com>
Date:   Thu Jan 24 14:43:28 2013 +0800

    cgroup: fix exit() vs rmdir() race
    
    commit 71b5707e119653039e6e95213f00479668c79b75 upstream.
    
    In cgroup_exit() put_css_set_taskexit() is called without any lock,
    which might lead to accessing a freed cgroup:
    
    thread1                           thread2
    ---------------------------------------------
    exit()
      cgroup_exit()
        put_css_set_taskexit()
          atomic_dec(cgrp->count);
                                       rmdir();
          /* not safe !! */
          check_for_release(cgrp);
    
    rcu_read_lock() can be used to make sure the cgroup is alive.
    
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a74e9a386f6e775f88061f7958b8b34c6742f926
Author: Li Zefan <lizefan@huawei.com>
Date:   Fri Jan 25 16:08:01 2013 +0800

    cpuset: fix cpuset_print_task_mems_allowed() vs rename() race
    
    commit 63f43f55c9bbc14f76b582644019b8a07dc8219a upstream.
    
    rename() will change dentry->d_name. The result of this race can
    be worse than seeing partially rewritten name, but we might access
    a stale pointer because rename() will re-allocate memory to hold
    a longer name.
    
    It's safe in the protection of dentry->d_lock.
    
    v2: check NULL dentry before acquiring dentry lock.
    
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68412b1718c488e58783d1c576d0aeb34012092d
Author: Seiji Aguchi <seiji.aguchi@hds.com>
Date:   Fri Jan 11 18:09:41 2013 +0000

    pstore: Avoid deadlock in panic and emergency-restart path
    
    commit 9f244e9cfd70c7c0f82d3c92ce772ab2a92d9f64 upstream.
    
    [Issue]
    
    When pstore is in panic and emergency-restart paths, it may be blocked
    in those paths because it simply takes spin_lock.
    
    This is an example scenario which pstore may hang up in a panic path:
    
     - cpuA grabs psinfo->buf_lock
     - cpuB panics and calls smp_send_stop
     - smp_send_stop sends IRQ to cpuA
     - after 1 second, cpuB gives up on cpuA and sends an NMI instead
     - cpuA is now in an NMI handler while still holding buf_lock
     - cpuB is deadlocked
    
    This case may happen if a firmware has a bug and
    cpuA is stuck talking with it more than one second.
    
    Also, this is a similar scenario in an emergency-restart path:
    
     - cpuA grabs psinfo->buf_lock and stucks in a firmware
     - cpuB kicks emergency-restart via either sysrq-b or hangcheck timer.
       And then, cpuB is deadlocked by taking psinfo->buf_lock again.
    
    [Solution]
    
    This patch avoids the deadlocking issues in both panic and emergency_restart
    paths by introducing a function, is_non_blocking_path(), to check if a cpu
    can be blocked in current path.
    
    With this patch, pstore is not blocked even if another cpu has
    taken a spin_lock, in those paths by changing from spin_lock_irqsave
    to spin_trylock_irqsave.
    
    In addition, according to a comment of emergency_restart() in kernel/sys.c,
    spin_lock shouldn't be taken in an emergency_restart path to avoid
    deadlock. This patch fits the comment below.
    
    <snip>
    /**
     *      emergency_restart - reboot the system
     *
     *      Without shutting down any hardware or taking any locks
     *      reboot the system.  This is called when we know we are in
     *      trouble so this is our best effort to reboot.  This is
     *      safe to call in interrupt context.
     */
    void emergency_restart(void)
    <snip>
    
    Signed-off-by: Seiji Aguchi <seiji.aguchi@hds.com>
    Acked-by: Don Zickus <dzickus@redhat.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: CAI Qian <caiqian@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f924f163e4426ce6a8d4cf61b45f2fc8eaeecc
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Sun Jan 20 21:55:20 2013 +0100

    ath9k_hw: fix calibration issues on chainmask that don't include chain 0
    
    commit 4a8f199508d79ff8a7d1e22f47b912baaf225336 upstream.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: CAI Qian <caiqian@redhat.com>
    Reviewed-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57ef0d83d393b0f1f378a6b18a7394c62caadafa
Author: Helge Deller <deller@gmx.de>
Date:   Mon Feb 4 19:39:52 2013 +0000

    unbreak automounter support on 64-bit kernel with 32-bit userspace (v2)
    
    commit 4f4ffc3a5398ef9bdbb32db04756d7d34e356fcf upstream.
    
    automount-support is broken on the parisc architecture, because the existing
    #if list does not include a check for defined(__hppa__). The HPPA (parisc)
    architecture is similiar to other 64bit Linux targets where we have to define
    autofs_wqt_t (which is passed back and forth to user space) as int type which
    has a size of 32bit across 32 and 64bit kernels.
    
    During the discussion on the mailing list, H. Peter Anvin suggested to invert
    the #if list since only specific platforms (specifically those who do not have
    a 32bit userspace, like IA64 and Alpha) should have autofs_wqt_t as unsigned
    long type.
    
    This suggestion is probably the best way to go, since Arm64 (and maybe others?)
    seems to have a non-working automounter. So in the long run even for other new
    upcoming architectures this inverted check seem to be the best solution, since
    it will not require them to change this #if again (unless they are 64bit only).
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Acked-by: Ian Kent <raven@themaw.net>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    CC: James Bottomley <James.Bottomley@HansenPartnership.com>
    CC: Rolf Eike Beer <eike-kernel@sf-tec.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 146207bbadeb4578334d6e26b9b690df8aeb1a3d
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Mon Feb 4 15:57:42 2013 +0100

    fuse: don't WARN when nlink is zero
    
    commit dfca7cebc2679f3d129f8e680a8f199a7ad16e38 upstream.
    
    drop_nlink() warns if nlink is already zero.  This is triggerable by a buggy
    userspace filesystem.  The cure, I think, is worse than the disease so disable
    the warning.
    
    Reported-by: Tero Roponen <tero.roponen@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94dcb26bbbed1851e0a7fb16165207c2c61e545f
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Mon Nov 26 05:57:27 2012 +0000

    vhost: fix length for cross region descriptor
    
    commit bd97120fc3d1a11f3124c7c9ba1d91f51829eb85 upstream.
    
    If a single descriptor crosses a region, the
    second chunk length should be decremented
    by size translated so far, instead it includes
    the full descriptor length.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e5e167c5c1b44f408fa8f8a8f062f234cd0f0d6
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Sun Feb 10 11:33:48 2013 -0500

    svcrpc: make svc_age_temp_xprts enqueue under sv_lock
    
    commit e75bafbff2270993926abcc31358361db74a9bc2 upstream.
    
    svc_age_temp_xprts expires xprts in a two-step process: first it takes
    the sv_lock and moves the xprts to expire off their server-wide list
    (sv_tempsocks or sv_permsocks) to a local list.  Then it drops the
    sv_lock and enqueues and puts each one.
    
    I see no reason for this: svc_xprt_enqueue() will take sp_lock, but the
    sv_lock and sp_lock are not otherwise nested anywhere (and documentation
    at the top of this file claims it's correct to nest these with sp_lock
    inside.)
    
    Tested-by: Jason Tibbitts <tibbs@math.uh.edu>
    Tested-by: Paweł Sikora <pawel.sikora@agmk.net>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5623a7cc4e3f0f461586b10b78967bb5f53fa096
Author: majianpeng <majianpeng@gmail.com>
Date:   Tue Jan 29 13:16:06 2013 +0800

    nfsd: Fix memleak
    
    commit 2d32b29a1c2830f7c42caa8258c714acd983961f upstream.
    
    When free nfs-client, it must free the ->cl_stateids.
    
    Signed-off-by: Jianpeng Ma <majianpeng@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4234fb29a8c0a5c5eaee6de38fe3cba674daecd0
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Fri Feb 22 15:27:52 2013 -0500

    ext4: fix free clusters calculation in bigalloc filesystem
    
    commit 304e220f0879198b1f5309ad6f0be862b4009491 upstream.
    
    ext4_has_free_clusters() should tell us whether there is enough free
    clusters to allocate, however number of free clusters in the file system
    is converted to blocks using EXT4_C2B() which is not only wrong use of
    the macro (we should have used EXT4_NUM_B2C) but it's also completely
    wrong concept since everything else is in cluster units.
    
    Moreover when calculating number of root clusters we should be using
    macro EXT4_NUM_B2C() instead of EXT4_B2C() otherwise the result might be
    off by one. However r_blocks_count should always be a multiple of the
    cluster ratio so doing a plain bit shift should be enough here. We
    avoid using EXT4_B2C() because it's confusing.
    
    As a result of the first problem number of free clusters is much bigger
    than it should have been and ext4_has_free_clusters() would return 1 even
    if there is really not enough free clusters available.
    
    Fix this by removing the EXT4_C2B() conversion of free clusters and
    using bit shift when calculating number of root clusters. This bug
    affects number of xfstests tests covering file system ENOSPC situation
    handling. With this patch most of the ENOSPC problems with bigalloc file
    system disappear, especially the errors caused by delayed allocation not
    having enough space when the actual allocation is finally requested.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19c9740ba7362357bde91267a0aa5109a809cd3e
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Mon Feb 18 12:12:07 2013 -0500

    ext4: fix xattr block allocation/release with bigalloc
    
    commit 1231b3a1eb5740192aeebf5344dd6d6da000febf upstream.
    
    Currently when new xattr block is created or released we we would call
    dquot_free_block() or dquot_alloc_block() respectively, among the else
    decrementing or incrementing the number of blocks assigned to the
    inode by one block.
    
    This however does not work for bigalloc file system because we always
    allocate/free the whole cluster so we have to count with that in
    dquot_free_block() and dquot_alloc_block() as well.
    
    Use the clusters-to-blocks conversion EXT4_C2B() when passing number of
    blocks to the dquot_alloc/free functions to fix the problem.
    
    The problem has been revealed by xfstests #117 (and possibly others).
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51e26006d1c9d5a2609d1bb6b7899cd86f92eed9
Author: Niu Yawei <yawei.niu@gmail.com>
Date:   Fri Feb 1 21:31:27 2013 -0500

    ext4: fix race in ext4_mb_add_n_trim()
    
    commit f1167009711032b0d747ec89a632a626c901a1ad upstream.
    
    In ext4_mb_add_n_trim(), lg_prealloc_lock should be taken when
    changing the lg_prealloc_list.
    
    Signed-off-by: Niu Yawei <yawei.niu@intel.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ced2decfe31ba7b7b97cce2de010f75e8a90b412
Author: Eryu Guan <guaneryu@gmail.com>
Date:   Sat Jan 12 16:33:25 2013 -0500

    ext4: check bh in ext4_read_block_bitmap()
    
    commit 15b49132fc972c63894592f218ea5a9a61b1a18f upstream.
    
    Validate the bh pointer before using it, since
    ext4_read_block_bitmap_nowait() might return NULL.
    
    I've seen this in fsfuzz testing.
    
     EXT4-fs error (device loop0): ext4_read_block_bitmap_nowait:385: comm touch: Cannot get buffer for block bitmap - block_group = 0, block_bitmap = 3925999616
     BUG: unable to handle kernel NULL pointer dereference at           (null)
     IP: [<ffffffff8121de25>] ext4_wait_block_bitmap+0x25/0xe0
     ...
     Call Trace:
      [<ffffffff8121e1e5>] ext4_read_block_bitmap+0x35/0x60
      [<ffffffff8125e9c6>] ext4_free_blocks+0x236/0xb80
      [<ffffffff811d0d36>] ? __getblk+0x36/0x70
      [<ffffffff811d0a5f>] ? __find_get_block+0x8f/0x210
      [<ffffffff81191ef3>] ? kmem_cache_free+0x33/0x140
      [<ffffffff812678e5>] ext4_xattr_release_block+0x1b5/0x1d0
      [<ffffffff812679be>] ext4_xattr_delete_inode+0xbe/0x100
      [<ffffffff81222a7c>] ext4_free_inode+0x7c/0x4d0
      [<ffffffff812277b8>] ? ext4_mark_inode_dirty+0x88/0x230
      [<ffffffff8122993c>] ext4_evict_inode+0x32c/0x490
      [<ffffffff811b8cd7>] evict+0xa7/0x1c0
      [<ffffffff811b8ed3>] iput_final+0xe3/0x170
      [<ffffffff811b8f9e>] iput+0x3e/0x50
      [<ffffffff812316fd>] ext4_add_nondir+0x4d/0x90
      [<ffffffff81231d0b>] ext4_create+0xeb/0x170
      [<ffffffff811aae9c>] vfs_create+0xac/0xd0
      [<ffffffff811ac845>] lookup_open+0x185/0x1c0
      [<ffffffff8129e3b9>] ? selinux_inode_permission+0xa9/0x170
      [<ffffffff811acb54>] do_last+0x2d4/0x7a0
      [<ffffffff811af743>] path_openat+0xb3/0x480
      [<ffffffff8116a8a1>] ? handle_mm_fault+0x251/0x3b0
      [<ffffffff811afc49>] do_filp_open+0x49/0xa0
      [<ffffffff811bbaad>] ? __alloc_fd+0xdd/0x150
      [<ffffffff8119da28>] do_sys_open+0x108/0x1f0
      [<ffffffff8119db51>] sys_open+0x21/0x30
      [<ffffffff81618959>] system_call_fastpath+0x16/0x1b
    
    Also fix comment for ext4_read_block_bitmap_nowait()
    
    Signed-off-by: Eryu Guan <guaneryu@gmail.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f74e995c9ba5963cd8d6ef91abe8f49d9614b423
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Nov 27 13:35:09 2012 -0300

    media: rc: unlock on error in show_protocols()
    
    commit 30ebc5e44d057a1619ad63fe32c8c1670c37c4b8 upstream.
    
    We recently introduced a new return -ENODEV in this function but we need
    to unlock before returning.
    
    [mchehab@redhat.com: found two patches with the same fix. Merged SOB's/acks into one patch]
    Acked-by: Herton R. Krzesinski <herton.krzesinski@canonical.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Douglas Bagnall <douglas@paradise.net.nz>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f600ee1431404eb87d36b84a66ccc004c5ace9b
Author: Jan Kara <jack@suse.cz>
Date:   Wed Jan 30 00:28:01 2013 +0100

    fs: Fix possible use-after-free with AIO
    
    commit 54c807e71d5ac59dee56c685f2b66e27cd54c475 upstream.
    
    Running AIO is pinning inode in memory using file reference. Once AIO
    is completed using aio_complete(), file reference is put and inode can
    be freed from memory. So we have to be sure that calling aio_complete()
    is the last thing we do with the inode.
    
    Acked-by: Jeff Moyer <jmoyer@redhat.com>
    CC: Christoph Hellwig <hch@infradead.org>
    CC: Jens Axboe <axboe@kernel.dk>
    CC: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d48e3a8dc45d9eac3e2be330ef4df663a6f54dfc
Author: Xi Wang <xi.wang@gmail.com>
Date:   Wed Feb 27 17:05:21 2013 -0800

    sysctl: fix null checking in bin_dn_node_address()
    
    commit df1778be1a33edffa51d094eeda87c858ded6560 upstream.
    
    The null check of `strchr() + 1' is broken, which is always non-null,
    leading to OOB read.  Instead, check the result of strchr().
    
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef7a6c344031cd99e16a116a7984d9428dce8401
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:04:04 2013 -0800

    firewire: add minor number range check to fw_device_init()
    
    commit 3bec60d511179853138836ae6e1b61fe34d9235f upstream.
    
    fw_device_init() didn't check whether the allocated minor number isn't
    too large.  Fail if it goes overflows MINORBITS.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Suggested-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 303ee54c72f488b90c2355977c1619a08db6ed9c
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:03:56 2013 -0800

    block: fix synchronization and limit check in blk_alloc_devt()
    
    commit ce23bba842aee98092225d9576dba47c82352521 upstream.
    
    idr allocation in blk_alloc_devt() wasn't synchronized against lookup
    and removal, and its limit check was off by one - 1 << MINORBITS is
    the number of minors allowed, not the maximum allowed minor.
    
    Add locking and rename MAX_EXT_DEVT to NR_EXT_DEVT and fix limit
    checking.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8aa6d32035120fdfef09ccb88c694047013eb7b
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:03:34 2013 -0800

    idr: fix a subtle bug in idr_get_next()
    
    commit 6cdae7416a1c45c2ce105a78187d9b7e8feb9e24 upstream.
    
    The iteration logic of idr_get_next() is borrowed mostly verbatim from
    idr_for_each().  It walks down the tree looking for the slot matching
    the current ID.  If the matching slot is not found, the ID is
    incremented by the distance of single slot at the given level and
    repeats.
    
    The implementation assumes that during the whole iteration id is aligned
    to the layer boundaries of the level closest to the leaf, which is true
    for all iterations starting from zero or an existing element and thus is
    fine for idr_for_each().
    
    However, idr_get_next() may be given any point and if the starting id
    hits in the middle of a non-existent layer, increment to the next layer
    will end up skipping the same offset into it.  For example, an IDR with
    IDs filled between [64, 127] would look like the following.
    
              [  0  64 ... ]
           /----/   |
           |        |
          NULL    [ 64 ... 127 ]
    
    If idr_get_next() is called with 63 as the starting point, it will try
    to follow down the pointer from 0.  As it is NULL, it will then try to
    proceed to the next slot in the same level by adding the slot distance
    at that level which is 64 - making the next try 127.  It goes around the
    loop and finds and returns 127 skipping [64, 126].
    
    Note that this bug also triggers in idr_for_each_entry() loop which
    deletes during iteration as deletions can make layers go away leaving
    the iteration with unaligned ID into missing layers.
    
    Fix it by ensuring proceeding to the next slot doesn't carry over the
    unaligned offset - ie.  use round_up(id + 1, slot_distance) instead of
    id += slot_distance.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: David Teigland <teigland@redhat.com>
    Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c93c85196e2c7001daa8a04b83a9d6dd4febfb59
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Wed Jan 16 11:36:23 2013 -0500

    xen/blkback: Don't trust the handle from the frontend.
    
    commit 01c681d4c70d64cb72142a2823f27c4146a02e63 upstream.
    
    The 'handle' is the device that the request is from. For the life-time
    of the ring we copy it from a request to a response so that the frontend
    is not surprised by it. But we do not need it - when we start processing
    I/Os we have our own 'struct phys_req' which has only most essential
    information about the request. In fact the 'vbd_translate' ends up
    over-writing the preq.dev with a value from the backend.
    
    This assignment of preq.dev with the 'handle' value is superfluous
    so lets not do it.
    
    Acked-by: Jan Beulich <jbeulich@suse.com>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8cf1124a8f6cdd4ebc834ec3d848508e229e1d4
Author: Jan Beulich <JBeulich@suse.com>
Date:   Thu Dec 20 10:31:11 2012 +0000

    xen-blkback: do not leak mode property
    
    commit 9d092603cc306ee6edfe917bf9ab8beb5f32d7bc upstream.
    
    "be->mode" is obtained from xenbus_read(), which does a kmalloc() for
    the message body. The short string is never released, so do it along
    with freeing "be" itself, and make sure the string isn't kept when
    backend_changed() doesn't complete successfully (which made it
    desirable to slightly re-structure that function, so that the error
    cleanup can be done in one place).
    
    Reported-by: Olaf Hering <olaf@aepfle.de>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ee1df3bff435d169d0ab93420bd02b4f9392e66
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Wed Feb 27 17:03:32 2013 -0800

    block: fix ext_devt_idr handling
    
    commit 7b74e912785a11572da43292786ed07ada7e3e0c upstream.
    
    While adding and removing a lot of disks disks and partitions this
    sometimes shows up:
    
      WARNING: at fs/sysfs/dir.c:512 sysfs_add_one+0xc9/0x130() (Not tainted)
      Hardware name:
      sysfs: cannot create duplicate filename '/dev/block/259:751'
      Modules linked in: raid1 autofs4 bnx2fc cnic uio fcoe libfcoe libfc 8021q scsi_transport_fc scsi_tgt garp stp llc sunrpc cpufreq_ondemand powernow_k8 freq_table mperf ipv6 dm_mirror dm_region_hash dm_log power_meter microcode dcdbas serio_raw amd64_edac_mod edac_core edac_mce_amd i2c_piix4 i2c_core k10temp bnx2 sg ixgbe dca mdio ext4 mbcache jbd2 dm_round_robin sr_mod cdrom sd_mod crc_t10dif ata_generic pata_acpi pata_atiixp ahci mptsas mptscsih mptbase scsi_transport_sas dm_multipath dm_mod [last unloaded: scsi_wait_scan]
      Pid: 44103, comm: async/16 Not tainted 2.6.32-195.el6.x86_64 #1
      Call Trace:
        warn_slowpath_common+0x87/0xc0
        warn_slowpath_fmt+0x46/0x50
        sysfs_add_one+0xc9/0x130
        sysfs_do_create_link+0x12b/0x170
        sysfs_create_link+0x13/0x20
        device_add+0x317/0x650
        idr_get_new+0x13/0x50
        add_partition+0x21c/0x390
        rescan_partitions+0x32b/0x470
        sd_open+0x81/0x1f0 [sd_mod]
        __blkdev_get+0x1b6/0x3c0
        blkdev_get+0x10/0x20
        register_disk+0x155/0x170
        add_disk+0xa6/0x160
        sd_probe_async+0x13b/0x210 [sd_mod]
        add_wait_queue+0x46/0x60
        async_thread+0x102/0x250
        default_wake_function+0x0/0x20
        async_thread+0x0/0x250
        kthread+0x96/0xa0
        child_rip+0xa/0x20
        kthread+0x0/0xa0
        child_rip+0x0/0x20
    
    This most likely happens because dev_t is freed while the number is
    still used and idr_get_new() is not protected on every use.  The fix
    adds a mutex where it wasn't before and moves the dev_t free function so
    it is called after device del.
    
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5978ac7c68e30bd9a322aa62efc411581263f881
Author: Xiaowei.Hu <xiaowei.hu@oracle.com>
Date:   Wed Feb 27 17:02:49 2013 -0800

    ocfs2: ac->ac_allow_chain_relink=0 won't disable group relink
    
    commit 309a85b6861fedbb48a22d45e0e079d1be993b3a upstream.
    
    ocfs2_block_group_alloc_discontig() disables chain relink by setting
    ac->ac_allow_chain_relink = 0 because it grabs clusters from multiple
    cluster groups.
    
    It doesn't keep the credits for all chain relink,but
    ocfs2_claim_suballoc_bits overrides this in this call trace:
    ocfs2_block_group_claim_bits()->ocfs2_claim_clusters()->
    __ocfs2_claim_clusters()->ocfs2_claim_suballoc_bits()
    ocfs2_claim_suballoc_bits set ac->ac_allow_chain_relink = 1; then call
    ocfs2_search_chain() one time and disable it again, and then we run out
    of credits.
    
    Fix is to allow relink by default and disable it in
    ocfs2_block_group_alloc_discontig.
    
    Without this patch, End-users will run into a crash due to run out of
    credits, backtrace like this:
    
      RIP: 0010:[<ffffffffa0808b14>]  [<ffffffffa0808b14>]
      jbd2_journal_dirty_metadata+0x164/0x170 [jbd2]
      RSP: 0018:ffff8801b919b5b8  EFLAGS: 00010246
      RAX: 0000000000000000 RBX: ffff88022139ddc0 RCX: ffff880159f652d0
      RDX: ffff880178aa3000 RSI: ffff880159f652d0 RDI: ffff880087f09bf8
      RBP: ffff8801b919b5e8 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000001e00 R11: 00000000000150b0 R12: ffff880159f652d0
      R13: ffff8801a0cae908 R14: ffff880087f09bf8 R15: ffff88018d177800
      FS:  00007fc9b0b6b6e0(0000) GS:ffff88022fd40000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
      CR2: 000000000040819c CR3: 0000000184017000 CR4: 00000000000006e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
      Process dd (pid: 9945, threadinfo ffff8801b919a000, task ffff880149a264c0)
      Call Trace:
        ocfs2_journal_dirty+0x2f/0x70 [ocfs2]
        ocfs2_relink_block_group+0x111/0x480 [ocfs2]
        ocfs2_search_chain+0x455/0x9a0 [ocfs2]
        ...
    
    Signed-off-by: Xiaowei.Hu <xiaowei.hu@oracle.com>
    Reviewed-by: Srinivas Eeda <srinivas.eeda@oracle.com>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d5b0fcbebada4d74130ea9911c38dad1faacb8c
Author: Jeff Liu <jeff.liu@oracle.com>
Date:   Wed Feb 27 17:02:48 2013 -0800

    ocfs2: fix ocfs2_init_security_and_acl() to initialize acl correctly
    
    commit 32918dd9f19e5960af4cdfa41190bb843fb2247b upstream.
    
    We need to re-initialize the security for a new reflinked inode with its
    parent dirs if it isn't specified to be preserved for ocfs2_reflink().
    However, the code logic is broken at ocfs2_init_security_and_acl()
    although ocfs2_init_security_get() succeed.  As a result,
    ocfs2_acl_init() does not involked and therefore the default ACL of
    parent dir was missing on the new inode.
    
    Note this was introduced by 9d8f13ba3 ("security: new
    security_inode_init_security API adds function callback")
    
    To reproduce:
    
        set default ACL for the parent dir(ocfs2 in this case):
        $ setfacl -m default:user:jeff:rwx ../ocfs2/
        $ getfacl ../ocfs2/
        # file: ../ocfs2/
        # owner: jeff
        # group: jeff
        user::rwx
        group::r-x
        other::r-x
        default:user::rwx
        default:user:jeff:rwx
        default:group::r-x
        default:mask::rwx
        default:other::r-x
    
        $ touch a
        $ getfacl a
        # file: a
        # owner: jeff
        # group: jeff
        user::rw-
        group::rw-
        other::r--
    
    Before patching, create reflink file b from a, the user
    default ACL entry(user:jeff:rwx)was missing:
    
        $ ./ocfs2_reflink a b
        $ getfacl b
        # file: b
        # owner: jeff
        # group: jeff
        user::rw-
        group::rw-
        other::r--
    
    In this case, the end user can also observed an error message at syslog:
    
      (ocfs2_reflink,3229,2):ocfs2_init_security_and_acl:7193 ERROR: status = 0
    
    After applying this patch, create reflink file c from a:
    
        $ ./ocfs2_reflink a c
        $ getfacl c
        # file: c
        # owner: jeff
        # group: jeff
        user::rw-
        user:jeff:rwx                       #effective:rw-
        group::r-x                  #effective:r--
        mask::rw-
        other::r--
    
    Test program:
    /* Usage: reflink <source> <dest> */
    #include <stdio.h>
    #include <stdint.h>
    #include <stdbool.h>
    #include <string.h>
    #include <errno.h>
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <fcntl.h>
    #include <sys/ioctl.h>
    
    static int
    reflink_file(char const *src_name, char const *dst_name,
                 bool preserve_attrs)
    {
            int fd;
    
    #ifndef REFLINK_ATTR_NONE
    #  define REFLINK_ATTR_NONE 0
    #endif
    #ifndef REFLINK_ATTR_PRESERVE
    #  define REFLINK_ATTR_PRESERVE 1
    #endif
    #ifndef OCFS2_IOC_REFLINK
            struct reflink_arguments {
                    uint64_t old_path;
                    uint64_t new_path;
                    uint64_t preserve;
            };
    
    #  define OCFS2_IOC_REFLINK _IOW ('o', 4, struct reflink_arguments)
    #endif
            struct reflink_arguments args = {
                    .old_path = (unsigned long) src_name,
                    .new_path = (unsigned long) dst_name,
                    .preserve = preserve_attrs ? REFLINK_ATTR_PRESERVE :
                                                 REFLINK_ATTR_NONE,
            };
    
            fd = open(src_name, O_RDONLY);
            if (fd < 0) {
                    fprintf(stderr, "Failed to open %s: %s\n",
                            src_name, strerror(errno));
                    return -1;
            }
    
            if (ioctl(fd, OCFS2_IOC_REFLINK, &args) < 0) {
                    fprintf(stderr, "Failed to reflink %s to %s: %s\n",
                            src_name, dst_name, strerror(errno));
                    return -1;
            }
    }
    
    int
    main(int argc, char *argv[])
    {
            if (argc != 3) {
                    fprintf(stdout, "Usage: %s source dest\n", argv[0]);
                    return 1;
            }
    
            return reflink_file(argv[1], argv[2], 0);
    }
    
    Signed-off-by: Jie Liu <jeff.liu@oracle.com>
    Reviewed-by: Tao Ma <boyu.mt@taobao.com>
    Cc: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa1c19bbbd6cb82086da10ae3817f8d5d8c6a7ae
Author: Jan Kara <jack@suse.cz>
Date:   Wed Feb 20 13:16:39 2013 +1100

    ocfs2: fix possible use-after-free with AIO
    
    commit 9b171e0c74ca0549d0610990a862dd895870f04a upstream.
    
    Running AIO is pinning inode in memory using file reference. Once AIO
    is completed using aio_complete(), file reference is put and inode can
    be freed from memory. So we have to be sure that calling aio_complete()
    is the last thing we do with the inode.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Acked-by: Jeff Moyer <jmoyer@redhat.com>
    Acked-by: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 316857e5fe5391057d5a05f215e01d0deff7c473
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Feb 18 18:31:37 2013 -0800

    target: Add missing mapped_lun bounds checking during make_mappedlun setup
    
    commit fbbf8555a986ed31e54f006b6cc637ea4ff1425b upstream.
    
    This patch adds missing bounds checking for the configfs provided
    mapped_lun value during target_fabric_make_mappedlun() setup ahead
    of se_lun_acl initialization.
    
    This addresses a potential OOPs when using a mapped_lun value that
    exceeds the hardcoded TRANSPORT_MAX_LUNS_PER_TPG-1 value within
    se_node_acl->device_list[].
    
    Reported-by: Jan Engelhardt <jengelh@inai.de>
    Cc: Jan Engelhardt <jengelh@inai.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fa4f7261d75cb6b35fdf8d329f5fd64e7354c58
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Feb 18 18:00:33 2013 -0800

    target: Fix lookup of dynamic NodeACLs during cached demo-mode operation
    
    commit fcf29481fb8e106daad6688f2e898226ee928992 upstream.
    
    This patch fixes a bug in core_tpg_check_initiator_node_acl() ->
    core_tpg_get_initiator_node_acl() where a dynamically created
    se_node_acl generated during session login would be skipped during
    subsequent lookup due to the '!acl->dynamic_node_acl' check, causing
    a new se_node_acl to be created with a duplicate ->initiatorname.
    
    This would occur when a fabric endpoint was configured with
    TFO->tpg_check_demo_mode()=1 + TPF->tpg_check_demo_mode_cache()=1
    preventing the release of an existing se_node_acl during se_session
    shutdown.
    
    Also, drop the unnecessary usage of core_tpg_get_initiator_node_acl()
    within core_dev_init_initiator_node_lun_acl() that originally
    required the extra '!acl->dynamic_node_acl' check, and just pass
    the configfs provided se_node_acl pointer instead.
    
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58d7422c654e7720a3920e63dcd6c64052aeec2d
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Wed Feb 27 12:46:40 2013 -0800

    x86: Make sure we can boot in the case the BDA contains pure garbage
    
    commit 7c10093692ed2e6f318387d96b829320aa0ca64c upstream.
    
    On non-BIOS platforms it is possible that the BIOS data area contains
    garbage instead of being zeroed or something equivalent (firmware
    people: we are talking of 1.5K here, so please do the sane thing.)
    
    We need on the order of 20-30K of low memory in order to boot, which
    may grow up to < 64K in the future.  We probably want to avoid the
    lowest of the low memory.  At the same time, it seems extremely
    unlikely that a legitimate EBDA would ever reach down to the 128K
    (which would require it to be over half a megabyte in size.)  Thus,
    pick 128K as the cutoff for "this is insane, ignore."  We may still
    end up reserving a bunch of extra memory on the low megabyte, but that
    is not really a major issue these days.  In the worst case we lose
    512K of RAM.
    
    This code really should be merged with trim_bios_range() in
    arch/x86/kernel/setup.c, but that is a bigger patch for a later merge
    window.
    
    Reported-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/n/tip-oebml055yyfm8yxmria09rja@git.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a0887caaf540517017d994d8d1940416a3365da
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 25 15:54:09 2013 -0500

    doc, kernel-parameters: Document 'console=hvc<n>'
    
    commit a2fd6419174470f5ae6383f5037d0ee21ed9833f upstream.
    
    Both the PowerPC hypervisor and Xen hypervisor can utilize the
    hvc driver.
    
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/1361825650-14031-3-git-send-email-konrad.wilk@oracle.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 938987dc41c19b1683934e0d4e75ae9b04456b80
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 25 15:54:08 2013 -0500

    doc, xen: Mention 'earlyprintk=xen' in the documentation.
    
    commit 2482a92e7d17187301d7313cfe5021b13393a0b4 upstream.
    
    The earlyprintk for Xen PV guests utilizes a simple hypercall
    (console_io) to provide output to Xen emergency console.
    
    Note that the Xen hypervisor should be booted with 'loglevel=all'
    to output said information.
    
    Reported-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/1361825650-14031-2-git-send-email-konrad.wilk@oracle.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92916fb21cc71f7877c06ab998728f118e2d72cb
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Wed Feb 20 20:36:12 2013 +0000

    x86, efi: Make "noefi" really disable EFI runtime serivces
    
    commit fb834c7acc5e140cf4f9e86da93a66de8c0514da upstream.
    
    commit 1de63d60cd5b ("efi: Clear EFI_RUNTIME_SERVICES rather than
    EFI_BOOT by "noefi" boot parameter") attempted to make "noefi" true to
    its documentation and disable EFI runtime services to prevent the
    bricking bug described in commit e0094244e41c ("samsung-laptop:
    Disable on EFI hardware"). However, it's not possible to clear
    EFI_RUNTIME_SERVICES from an early param function because
    EFI_RUNTIME_SERVICES is set in efi_init() *after* parse_early_param().
    
    This resulted in "noefi" effectively becoming a no-op and no longer
    providing users with a way to disable EFI, which is bad for those
    users that have buggy machines.
    
    Reported-by: Walt Nelson Jr <walt0924@gmail.com>
    Cc: Satoru Takeuchi <takeuchi_satoru@jp.fujitsu.com>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/1361392572-25657-1-git-send-email-matt@console-pimps.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6842472eb7f8091c27eb43ad934097ce04d3fbb
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Feb 13 15:18:38 2013 -0500

    ftrace: Call ftrace cleanup module notifier after all other notifiers
    
    commit 8c189ea64eea01ca20d102ddb74d6936dd16c579 upstream.
    
    Commit: c1bf08ac "ftrace: Be first to run code modification on modules"
    
    changed ftrace module notifier's priority to INT_MAX in order to
    process the ftrace nops before anything else could touch them
    (namely kprobes). This was the correct thing to do.
    
    Unfortunately, the ftrace module notifier also contains the ftrace
    clean up code. As opposed to the set up code, this code should be
    run *after* all the module notifiers have run in case a module is doing
    correct clean-up and unregisters its ftrace hooks. Basically, ftrace
    needs to do clean up on module removal, as it needs to know about code
    being removed so that it doesn't try to modify that code. But after it
    removes the module from its records, if a ftrace user tries to remove
    a probe, that removal will fail due as the record of that code segment
    no longer exists.
    
    Nothing really bad happens if the probe removal is called after ftrace
    did the clean up, but the ftrace removal function will return an error.
    Correct code (such as kprobes) will produce a WARN_ON() if it fails
    to remove the probe. As people get annoyed by frivolous warnings, it's
    best to do the ftrace clean up after everything else.
    
    By splitting the ftrace_module_notifier into two notifiers, one that
    does the module load setup that is run at high priority, and the other
    that is called for module clean up that is run at low priority, the
    problem is solved.
    
    Reported-by: Frank Ch. Eigler <fche@redhat.com>
    Acked-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db3d76a623b8ce429318cc2491881c02b790dab4
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 20 15:24:12 2013 -0800

    posix-timer: Don't call idr_find() with out-of-range ID
    
    commit e182bb38d7db7494fa5dcd82da17fe0dedf60ecf upstream.
    
    When idr_find() was fed a negative ID, it used to look up the ID
    ignoring the sign bit before recent ("idr: remove MAX_IDR_MASK and
    move left MAX_IDR_* into idr.c") patch. Now a negative ID triggers
    a WARN_ON_ONCE().
    
    __lock_timer() feeds timer_id from userland directly to idr_find()
    without sanitizing it which can trigger the above malfunctions.  Add a
    range check on @timer_id before invoking idr_find() in __lock_timer().
    
    While timer_t is defined as int by all archs at the moment, Andrew
    worries that it may be defined as a larger type later on.  Make the
    test cover larger integers too so that it at least is guaranteed to
    not return the wrong timer.
    
    Note that WARN_ON_ONCE() in idr_find() on id < 0 is transitional
    precaution while moving away from ignoring MSB.  Once it's gone we can
    remove the guard as long as timer_t isn't larger than int.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20130220232412.GL3570@htj.dyndns.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c8581863389e969dcbf6d9e79971435a1ecf554
Author: Joerg Roedel <joro@8bytes.org>
Date:   Wed Feb 6 12:55:23 2013 +0100

    iommu/amd: Initialize device table after dma_ops
    
    commit f528d980c17b8714aedc918ba86e058af914d66b upstream.
    
    When dma_ops are initialized the unity mappings are
    created. The init_device_table_dma() function makes sure DMA
    from all devices is blocked by default. This opens a short
    window in time where DMA to unity mapped regions is blocked
    by the IOMMU. Make sure this does not happen by initializing
    the device table after dma_ops.
    
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
    Signed-off-by: Shuah Khan <shuah.khan@hp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db6154ead40e0a568982ec4885cfa3fa89e67324
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Jan 24 23:24:56 2013 -0500

    quota: autoload the quota_v2 module for QFMT_VFS_V1 quota format
    
    commit c3ad83d9efdfe6a86efd44945a781f00c879b7b4 upstream.
    
    Otherwise, ext4 file systems with the quota featured enable will get a
    very confusing "No such process" error message if the quota code is
    built as a module and the quota_v2 module has not been loaded.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com>
    Acked-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd54ec4067a23236736afecbda120030d7ce8fe9
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Fri Feb 22 10:16:28 2013 +0100

    ALSA: hda - hdmi: Make jacks phantom, if they're not detectable
    
    commit 30efd8debd1ef30be342d374f01e993509f5b76b upstream.
    
    Just as for analog codecs, a jack that isn't suitable for detection
    (in this case, NO_PRESENCE was set) should be a phantom Jack
    instead of a normal one.
    
    Thanks to Raymond Yau for spotting.
    
    BugLink: https://bugs.launchpad.net/bugs/961286
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=903869
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
