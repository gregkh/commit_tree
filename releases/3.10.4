commit 6f7bb6bafb3153e9b9383f3f44a0f23fc00318d9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jul 28 16:30:49 2013 -0700

    Linux 3.10.4

commit 9c563a54c85bcd531cc671d9575d4dff64852124
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 19 07:58:02 2013 +0200

    ALSA: hda - Fix EAPD GPIO control for Sigmatel codecs
    
    commit 1ea9a69d1a36a5b62bf281ba8bb304fcac656dad upstream.
    
    The EAPD GPIO is dynamically turned on/off for some machines with
    Sigmatel codecs, but this didn't work as expected, and it resulted in
    spontaneous lost of speaker outputs per HP plugging or power-saving.
    
    This patch fixes the bug by simply including spec->eapd_mask into
    spec->gpio_mask and spec->gpio_data bits.
    
    Reported-and-tested-by: Eric Shattow <lucent@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a0ecab6b7f55d7b2162e95c396ce778f2f2154c
Author: Eldad Zack <eldad@fogrefinery.com>
Date:   Fri Jul 19 18:26:53 2013 +0200

    ALSA: usb-audio: 6fire: return correct XRUN indication
    
    commit be2f93a4c4981b3646b6f98f477154411b8516cb upstream.
    
    Return SNDRV_PCM_POS_XRUN (snd_pcm_uframes_t) instead of
    SNDRV_PCM_STATE_XRUN (snd_pcm_state_t) from the pointer
    function of 6fire, as expected by snd_pcm_update_hw_ptr0().
    
    Caught by sparse.
    
    Signed-off-by: Eldad Zack <eldad@fogrefinery.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d9230a39086b5f183fda1091eb078a67be01f05
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jul 19 08:02:25 2013 +0200

    ALSA: hda - Remove NO_PRESENCE bit override for Dell 1420n Laptop
    
    commit f3e351eef3a7fd1e36a3e18d4f2f069b00deb23c upstream.
    
    The quirk for Dell laptops with STAC9228 overrides the pin default
    config of NID 0x0f to the value with AC_DEFCFG_MISC_NO_PRESENCE bit
    on.  I'm not quite sure why this was done so, but can guess that this
    was introduced for avoiding this to be muted by another headphone
    plug.  Now, after transition to the generic parser, this workaround
    rather causes a problem (notably as unexpected speaker mutes) because
    the pin is seen as if it's always plugged in.
    
    Since the generic parser can handle multiple headphone plugging
    gracefully, we can get rid of this override now.
    
    Reported-and-tested-by: Eric Shattow <lucent@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d06fa0f825ec1d7943a3bcceecbd85aa82ef27d
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jul 5 12:09:18 2013 +0200

    hrtimers: Move SMP function call to thread context
    
    commit 5ec2481b7b47a4005bb446d176e5d0257400c77d upstream.
    
    smp_call_function_* must not be called from softirq context.
    
    But clock_was_set() which calls on_each_cpu() is called from softirq
    context to implement a delayed clock_was_set() for the timer interrupt
    handler. Though that almost never gets invoked. A recent change in the
    resume code uses the softirq based delayed clock_was_set to support
    Xens resume mechanism.
    
    linux-next contains a new warning which warns if smp_call_function_*
    is called from softirq context which gets triggered by that Xen
    change.
    
    Fix this by moving the delayed clock_was_set() call to a work context.
    
    Reported-and-tested-by: Artem Savkov <artem.savkov@gmail.com>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: H. Peter Anvin <hpa@zytor.com>,
    Cc: Konrad Wilk <konrad.wilk@oracle.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: xen-devel@lists.xen.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4d98e2535e0269fcd513cbb79e937ef3ccc3d01
Author: David Jeffery <djeffery@redhat.com>
Date:   Wed Jul 10 13:19:50 2013 -0400

    lockd: protect nlm_blocked access in nlmsvc_retry_blocked
    
    commit 1c327d962fc420aea046c16215a552710bde8231 upstream.
    
    In nlmsvc_retry_blocked, the check that the list is non-empty and acquiring
    the pointer of the first entry is unprotected by any lock.  This allows a rare
    race condition when there is only one entry on the list.  A function such as
    nlmsvc_grant_callback() can be called, which will temporarily remove the entry
    from the list.  Between the list_empty() and list_entry(),the list may become
    empty, causing an invalid pointer to be used as an nlm_block, leading to a
    possible crash.
    
    This patch adds the nlm_block_lock around these calls to prevent concurrent
    use of the nlm_blocked list.
    
    This was a regression introduced by
    f904be9cc77f361d37d71468b13ff3d1a1823dea  "lockd: Mostly remove BKL from
    the server".
    
    Signed-off-by: David Jeffery <djeffery@redhat.com>
    Cc: Bryan Schumaker <bjschuma@netapp.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61eeaa1b66e47443f27f4cf0809940fbe08142f8
Author: Soeren Moch <smoch@web.de>
Date:   Wed Jun 5 21:26:23 2013 -0300

    media: dmxdev: remove dvb_ringbuffer_flush() on writer side
    
    commit 414abbd2cd4c2618895f02ed3a76ec6647281436 upstream.
    
    In dvb_ringbuffer lock-less synchronizationof reader and writer threads is done
    with separateread and write pointers. Sincedvb_ringbuffer_flush() modifies the
    read pointer, this function must not be called from the writer thread.
    This patch removes the dvb_ringbuffer_flush() calls in the dmxdev ringbuffer
    write functions, this fixes Oopses "Unable to handle kernel paging request"
    I could observe for the call chaindvb_demux_read ->dvb_dmxdev_buffer_read ->
    dvb_ringbuffer_read_user -> __copy_to_user (the reader side of the ringbuffer).
    The flush calls at the write side are not necessary anyway since ringbuffer_flush
    is also called in dvb_dmxdev_buffer_read() when an error condition is set in the
    ringbuffer.
    This patch should also be applied to stable kernels.
    
    Signed-off-by: Soeren Moch <smoch@web.de>
    Reviewed-by: Sakari Ailus <sakari.ailus@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b534f8f9f56d5e800d4529f54e38be960fd064a2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 11 18:00:59 2013 +0200

    media: saa7134: Fix unlocked snd_pcm_stop() call
    
    commit e6355ad7b1c6f70e2f48ae159f5658b441ccff95 upstream.
    
    snd_pcm_stop() must be called in the PCM substream lock context.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4fc5f531f64ce52e5f421c9bc285ccf30ccac8
Author: Liu ShuoX <shuox.liu@intel.com>
Date:   Thu Jul 11 16:03:45 2013 +0800

    PM / Sleep: avoid 'autosleep' in shutdown progress
    
    commit e5248a111bf4048a9f3fab1a9c94c4630a10592a upstream.
    
    Prevent automatic system suspend from happening during system
    shutdown by making try_to_suspend() check system_state and return
    immediately if it is not SYSTEM_RUNNING.
    
    This prevents the following breakage from happening (scenario from
    Zhang Yanmin):
    
     Kernel starts shutdown and calls all device driver's shutdown
     callback.  When a driver's shutdown is called, the last wakelock is
     released and suspend-to-ram starts.  However, as some driver's shut
     down callbacks already shut down devices and disabled runtime pm,
     the suspend-to-ram calls driver's suspend callback without noticing
     that device is already off and causes crash.
    
    [rjw: Changelog]
    Signed-off-by: Liu ShuoX <shuox.liu@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c07ae685f761d7b6850f502a34964005428c181a
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jul 15 00:09:19 2013 -0400

    ext4: fix error handling in ext4_ext_truncate()
    
    commit 8acd5e9b1217e58a57124d9e225afa12efeae20d upstream.
    
    Previously ext4_ext_truncate() was ignoring potential error returns
    from ext4_es_remove_extent() and ext4_ext_remove_space().  This can
    lead to the on-diks extent tree and the extent status tree cache
    getting out of sync, which is particuarlly bad, and can lead to file
    system corruption and potential data loss.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95405bdbff81ce7f491145b2ea0d4091c71c2af7
Author: Barry Grussling <barry@grussling.com>
Date:   Fri Jul 19 14:46:12 2013 -0700

    usb: cp210x support SEL C662 Vendor/Device
    
    commit b579fa52f6be0b4157ca9cc5e94d44a2c89a7e95 upstream.
    
    This patch adds support for the Schweitzer Engineering Laboratories
    C662 USB cable based off the CP210x driver.
    
    Signed-off-by: Barry Grussling <barry@grussling.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35976473f0c19ec3e3b88b0d2ba312def35536a7
Author: Sami Rahman <sami.rahman@mmbresearch.com>
Date:   Mon Jul 8 14:28:55 2013 -0400

    USB: cp210x: add MMB and PI ZigBee USB Device Support
    
    commit 7681156982026ebf7eafd7301eb0374d7648d068 upstream.
    
    Added support for MMB Networks and Planet Innovation Ingeni ZigBee USB
    devices using customized Silicon Labs' CP210x.c USB to UART bridge
    drivers with PIDs: 88A4, 88A5.
    
    Signed-off-by: Sami Rahman <sami.rahman@mmbresearch.com>
    Tested-by: Sami Rahman <sami.rahman@mmbresearch.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29ab402957ba9f329b901c69cb4179fafbfd0cf4
Author: Luiz Angelo Daros de Luca <luizluca@gmail.com>
Date:   Mon Jul 1 23:56:25 2013 -0300

    usb: serial: cp210x: Add USB ID for Netgear Switches embedded serial adapter
    
    commit 90625070c4253377025878c4e82feed8b35c7116 upstream.
    
    This adds NetGear Managed Switch M4100 series, M5300 series, M7100 series
    USB ID (0846:0110) to the cp210x driver. Without this, the serial
    adapter is not recognized in Linux. Description was obtained from
    an Netgear Eng.
    
    Signed-off-by: Luiz Angelo Daros de Luca <luizluca@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b1eeeb02ec556c6a31a8383f86f1a7bf5419111
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Thu Jun 27 22:42:36 2013 -0400

    ARM: footbridge: fix overlapping PCI mappings
    
    commit 6287e7319870ec949fb809e4eb4154c2b05b221f upstream.
    
    Commit 8ef6e6201b26cb9fde79c1baa08145af6aca2815 (ARM: footbridge: use
    fixed PCI i/o mapping) broke booting on my netwinder.  Before that,
    everything boots fine.  Since then, it crashes on boot.
    
    With earlyprintk, I see it BUG-ing like so:
    kernel BUG at lib/ioremap.c:27!
    Internal error: Oops - BUG: 0 [#1] ARM
    ...
    [<c0139b54>] (ioremap_page_range+0x128/0x154) from [<c02e6a6c>] (dc21285_setup+0xd0/0x114)
    [<c02e6a6c>] (dc21285_setup+0xd0/0x114) from [<c02e4874>] (pci_common_init+0xa0/0x298)
    [<c02e4874>] (pci_common_init+0xa0/0x298) from [<c02e793c>] (netwinder_pci_init+0xc/0x18)
    [<c02e793c>] (netwinder_pci_init+0xc/0x18) from [<c02e27d0>] (do_one_initcall+0xb4/0x180)
    ...
    
    Russell points out it's because of overlapping PCI mappings that was
    added with the aforementioned commit.  Rob thought the code would re-use
    the static mapping, but that turns out to not be the case and instead
    hits the BUG further down.
    
    After deleting this hunk as suggested by Russel, the system boots up fine
    again and all my PCI devices work (IDE, ethernet, the DC21285).
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>
    Acked-by: Rob Herring <rob.herring@calxeda.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee2f769fb4a5a317b1558d0bbcccb89b8c2697a6
Author: Sylwester Nawrocki <sylvester.nawrocki@gmail.com>
Date:   Wed Jul 24 13:23:51 2013 +0900

    ARM: S3C24XX: Add missing clkdev entries for s3c2440 UART
    
    commit d817468c4b2892b9468e2a0c92116e38a3a61370 upstream.
    
    This patch restores serial port operation which has been broken since
    commit 60e93575476f ("serial: samsung: enable clock before clearing
    pending interrupts during init")
    
    That commit only uncovered the real issue which was missing clkdev
    entries for the "uart" clocks on S3C2440. It went unnoticed so far
    because return value of clk API calls were not being checked at all
    in the samsung serial port driver.
    
    This patch should be backported to at least 3.10 stable kernel, since
    the serial port has not been working on s3c2440 since 3.10-rc5.
    
    Signed-off-by: Sylwester Nawrocki <sylvester.nawrocki@gmail.com>
    Cc: Chander Kashyap <chander.kashyap@linaro.org>
    [on S3C2440 SoC based Mini2440 board]
    Tested-by: Sylwester Nawrocki <sylvester.nawrocki@gmail.com>
    Reviewed-by: Tomasz Figa <t.figa@samsung.com>
    Tested-by: Juergen Beisert <jbe@pengutronix.de>
    Signed-off-by: Kukjin Kim <kgene.kim@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb2177cd04ac81f2922cdd614f79b586556f92ad
Author: Enrico Mioso <mrkiko.rs@gmail.com>
Date:   Thu Jul 25 02:01:39 2013 +0200

    usb: serial: option: Add ONYX 3G device support
    
    commit 63b5df963f52ccbab6fabedf05b7ac6b465789a4 upstream.
    
    This patch adds support for the ONYX 3G device (version 1) from ALFA
    NETWORK.
    
    Signed-off-by: Enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cca0118ba973e04573cb3221c246422e917ebe6
Author: Alexandr \\\"Sky\\\" Ivanov <alexandr.sky@gmail.com>
Date:   Tue Jul 23 17:46:40 2013 +0400

    USB: option: add D-Link DWM-152/C1 and DWM-156/C1
    
    commit ca24763588844b14f019ffc45c7df6d9e8f932c5 upstream.
    
    Adding support for D-Link DWM-152/C1 and DWM-156/C1 devices.
    
    DWM-152/C1:
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  6 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=07d1 ProdID=3e01 Rev= 0.00
    S:  Product=USB Configuration
    S:  SerialNumber=1234567890ABCDEF
    C:* #Ifs= 5 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=03(Int.) MxPS=  64 Ivl=2ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    DWM-156/C1:
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  8 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=07d1 ProdID=3e02 Rev= 0.00
    S:  Product=DataCard Device
    S:  SerialNumber=1234567890ABCDEF
    C:* #Ifs= 5 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=03(Int.) MxPS=  64 Ivl=2ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Signed-off-by: Alexandr Ivanov <alexandr.sky@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 490217ce2c9ab2318d9a4613547943d98706034b
Author: Daniil Bolsun <dan.bolsun@gmail.com>
Date:   Fri Jul 19 10:21:23 2013 +0300

    USB: option: append Petatel NP10T device to GSM modems list
    
    commit c38e83b6cc2adf80e3f091fd92cfbeacc9748347 upstream.
    
    This patch was tested on 3.10.1 kernel.
    
    Same models of Petatel NP10T modems have different device IDs.
    Unfortunately they have no additional revision information on a board
    which may treat them as different devices. Currently I've seen only
    two NP10T devices with various IDs. Possibly Petatel NP10T list will
    be appended upon devices with new IDs will appear.
    
    Signed-off-by: Daniil Bolsun <dan.bolsun@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ac2d863c312ec42bb6778988577ada67f09ba85
Author: Enrico Mioso <mrkiko.rs@gmail.com>
Date:   Sat Jul 13 18:54:14 2013 +0200

    usb: serial: option.c: remove ONDA MT825UP product ID fromdriver
    
    commit 878c69aae986ae97084458c0183a8c0a059865b1 upstream.
    
    Some (very few) early devices like mine, where not exposting a proper CDC
    descriptor. This was fixed with an immediate firmware update from the vendor,
    and pre-installed on newer devices.
    So actual devices can be driven by cdc_acm.c + cdc_ether.c.
    
    Signed-off-by: Enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 177f82a9d23d9ba1a7e8179cca296fd17ebfd9d0
Author: Dan Williams <dcbw@redhat.com>
Date:   Wed Jul 10 12:25:02 2013 -0500

    usb: serial: option: add Olivetti Olicard 200
    
    commit 4cf76df06ecc852633ed927d91e01c83c33bc331 upstream.
    
    Speaks AT on interfaces 5 (command & PPP) and 3 (secondary), other
    interface protocols are unknown.
    
    Signed-off-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fd55cb457cbcc24d8283ae87c9345c72645c93f
Author: Bjørn Mork <bjorn@mork.no>
Date:   Fri Jun 28 17:15:25 2013 +0200

    usb: option: add TP-LINK MA260
    
    commit 94190301ffa059c2d127b3a67ec5d161d5c62681 upstream.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d547d18d1920026dd08d9c19e8da403cbea62319
Author: Enrico Mioso <mrkiko.rs@gmail.com>
Date:   Sat Jun 29 15:33:35 2013 +0200

    usb: serial: option: blacklist ONDA MT689DC QMI interface
    
    commit 3d1a69e726406ab662ab88fa30a3a05ed404334d upstream.
    
    Prevent the option driver from binding itself to the QMI/WWAN interface, making
    it unusable by the proper driver.
    
    Signed-off-by: enrico Mioso <mrkiko.rs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c19c4f9b4eeabe75eddbec1a0e8599c940e8ec8
Author: Markos Chandras <markos.chandras@imgtec.com>
Date:   Tue Jun 11 08:49:50 2013 +0000

    lib/Kconfig.debug: Restrict FRAME_POINTER for MIPS
    
    commit 25c87eae1725ed77a8b44d782a86abdc279b4ede upstream.
    
    FAULT_INJECTION_STACKTRACE_FILTER selects FRAME_POINTER but
    that symbol is not available for MIPS.
    
    Fixes the following problem on a randconfig:
    warning: (LOCKDEP && FAULT_INJECTION_STACKTRACE_FILTER && LATENCYTOP &&
     KMEMCHECK) selects FRAME_POINTER which has unmet direct dependencies
    (DEBUG_KERNEL && (CRIS || M68K || FRV || UML || AVR32 || SUPERH || BLACKFIN ||
    MN10300 || METAG) || ARCH_WANT_FRAME_POINTERS)
    
    Signed-off-by: Markos Chandras <markos.chandras@imgtec.com>
    Acked-by: Steven J. Hill <Steven.Hill@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/5441/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ac697c53bf856ef1c8d32f8fd903987e0494311
Author: Bjørn Mork <bjorn@mork.no>
Date:   Wed Nov 21 09:54:48 2012 +0100

    SCSI: megaraid_sas: fix memory leak if SGL has zero length entries
    
    commit 7a6a731bd00ca90d0e250867c3b9c05b5ff0fa49 upstream.
    
    commit 98cb7e44 ([SCSI] megaraid_sas: Sanity check user
    supplied length before passing it to dma_alloc_coherent())
    introduced a memory leak.  Memory allocated for entries
    following zero length SGL entries will not be freed.
    
    Reference: http://bugs.debian.org/688198
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Acked-by: Adam Radford <aradford@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e90c1dc2c6298f7d369804aa7873d1c4c434f9d3
Author: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
Date:   Sat Jun 29 03:52:03 2013 +0530

    SCSI: mpt3sas: fix for kernel panic when driver loads with HBA conected to non LUN 0 configured expander
    
    commit b65cfedf4560af65305bd7b3b9f26c02c6fb3660 upstream.
    
    With some enclosures when LUN 0 is not created but LUN 1 or LUN X is created
    then SCSI scan procedure calls target_alloc, slave_alloc call back functions
    for LUN 0 and slave_destory() for same LUN 0.
    
    In these kind of cases within slave_destroy, pointer to scsi_target in
    _sas_device structure is set to NULL, following which when slave_alloc for LUN
    1 is called then starget would not be set properly for this LUN.  So,
    scsi_target pointer pointing to NULL value would lead to a crash later in the
    discovery procedure.
    
    To solve this issue set the sas_device's scsi_target pointer to scsi_device's
    scsi_target if it is NULL earlier in slave_alloc callback function.
    
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72ffadbae16297ac86e31c759450e0e395209903
Author: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
Date:   Sat Jun 29 03:53:02 2013 +0530

    SCSI: mpt3sas: Infinite loops can occur if MPI2_IOCSTATUS_CONFIG_INVALID_PAGE is not returned
    
    commit 14be49ac965ebd3f8561d57e01ddb22f93f9b454 upstream.
    
    Infinite loop can occur if IOCStatus is not equal to
    MPI2_IOCSTATUS_CONFIG_INVALID_PAGE value in the while loops in functions
    _scsih_search_responding_sas_devices,
    _scsih_search_responding_raid_devices and
    _scsih_search_responding_expanders
    
    So, Instead of checking for MPI2_IOCSTATUS_CONFIG_INVALID_PAGE value,
    in this patch code is modified to check for IOCStatus not equals to
    MPI2_IOCSTATUS_SUCCESS to break the while loop.
    
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f46ef77da1b61d05dc5f7cbb111df53d92b887a2
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Jul 19 12:28:25 2013 +0200

    EDAC: Fix lockdep splat
    
    commit 88d84ac97378c2f1d5fec9af1e8b7d9a662d6b00 upstream.
    
    Fix the following:
    
    BUG: key ffff88043bdd0330 not in .data!
    ------------[ cut here ]------------
    WARNING: at kernel/lockdep.c:2987 lockdep_init_map+0x565/0x5a0()
    DEBUG_LOCKS_WARN_ON(1)
    Modules linked in: glue_helper sb_edac(+) edac_core snd acpi_cpufreq lrw gf128mul ablk_helper iTCO_wdt evdev i2c_i801 dcdbas button cryptd pcspkr iTCO_vendor_support usb_common lpc_ich mfd_core soundcore mperf processor microcode
    CPU: 2 PID: 599 Comm: modprobe Not tainted 3.10.0 #1
    Hardware name: Dell Inc. Precision T3600/0PTTT9, BIOS A08 01/24/2013
     0000000000000009 ffff880439a1d920 ffffffff8160a9a9 ffff880439a1d958
     ffffffff8103d9e0 ffff88043af4a510 ffffffff81a16e11 0000000000000000
     ffff88043bdd0330 0000000000000000 ffff880439a1d9b8 ffffffff8103dacc
    Call Trace:
      dump_stack
      warn_slowpath_common
      warn_slowpath_fmt
      lockdep_init_map
      ? trace_hardirqs_on_caller
      ? trace_hardirqs_on
      debug_mutex_init
      __mutex_init
      bus_register
      edac_create_sysfs_mci_device
      edac_mc_add_mc
      sbridge_probe
      pci_device_probe
      driver_probe_device
      __driver_attach
      ? driver_probe_device
      bus_for_each_dev
      driver_attach
      bus_add_driver
      driver_register
      __pci_register_driver
      ? 0xffffffffa0010fff
      sbridge_init
      ? 0xffffffffa0010fff
      do_one_initcall
      load_module
      ? unset_module_init_ro_nx
      SyS_init_module
      tracesys
    ---[ end trace d24a70b0d3ddf733 ]---
    EDAC MC0: Giving out device to 'sbridge_edac.c' 'Sandy Bridge Socket#0': DEV 0000:3f:0e.0
    EDAC sbridge: Driver loaded.
    
    What happens is that bus_register needs a statically allocated lock_key
    because the last is handed in to lockdep. However, struct mem_ctl_info
    embeds struct bus_type (the whole struct, not a pointer to it) and the
    whole thing gets dynamically allocated.
    
    Fix this by using a statically allocated struct bus_type for the MC bus.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Mauro Carvalho Chehab <mchehab@infradead.org>
    Cc: Markus Trippelsdorf <markus@trippelsdorf.de>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e20e8b3713b8a5941891db2626c9eecd3c0888c
Author: Kent Overstreet <kmo@daterainc.com>
Date:   Thu Jul 11 22:42:14 2013 -0700

    bcache: Journal replay fix
    
    commit faa5673617656ee58369a3cfe4a312cfcdc59c81 upstream.
    
    The journal replay code starts by finding something that looks like a
    valid journal entry, then it does a binary search over the unchecked
    region of the journal for the journal entries with the highest sequence
    numbers.
    
    Trouble is, the logic was wrong - journal_read_bucket() returns true if
    it found journal entries we need, but if the range of journal entries
    we're looking for loops around the end of the journal - in that case
    journal_read_bucket() could return true when it hadn't found the highest
    sequence number we'd seen yet, and in that case the binary search did
    the wrong thing. Whoops.
    
    Signed-off-by: Kent Overstreet <kmo@daterainc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99e56bf5abce5131746397a2ce551fd92ca8f342
Author: Kent Overstreet <kmo@daterainc.com>
Date:   Thu Jul 11 19:43:21 2013 -0700

    bcache: Fix GC_SECTORS_USED() calculation
    
    commit 29ebf465b9050f241c4433a796a32e6c896a9dcd upstream.
    
    Part of the job of garbage collection is to add up however many sectors
    of live data it finds in each bucket, but that doesn't work very well if
    it doesn't reset GC_SECTORS_USED() when it starts. Whoops.
    
    This wouldn't have broken anything horribly, but allocation tries to
    preferentially reclaim buckets that are mostly empty and that's not
    gonna work with an incorrect GC_SECTORS_USED() value.
    
    Signed-off-by: Kent Overstreet <kmo@daterainc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe1b710530e60c8fbb07a73ad27e9f65305ce06a
Author: Kent Overstreet <kmo@daterainc.com>
Date:   Wed Jul 10 21:25:02 2013 -0700

    bcache: Fix a sysfs splat on shutdown
    
    commit c9502ea4424b31728703d113fc6b30bfead14633 upstream.
    
    If we stopped a bcache device when we were already detaching (or
    something like that), bcache_device_unlink() would try to remove a
    symlink from sysfs that was already gone because the bcache dev kobject
    had already been removed from sysfs.
    
    So keep track of whether we've removed stuff from sysfs.
    
    Signed-off-by: Kent Overstreet <kmo@daterainc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63a53870bb23c2d991f378ae9137d775978d5ae9
Author: Kent Overstreet <kmo@daterainc.com>
Date:   Wed Jul 10 21:03:25 2013 -0700

    bcache: Shutdown fix
    
    commit 5caa52afc5abd1396e4af720469abb5843a71eb8 upstream.
    
    Stopping a cache set is supposed to make it stop attached backing
    devices, but somewhere along the way that code got lost. Fixing this
    mainly has the effect of fixing our reboot notifier.
    
    Signed-off-by: Kent Overstreet <kmo@daterainc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fcbc17636c83da9d85e2604de4af56c215e6e3c
Author: Kent Overstreet <kmo@daterainc.com>
Date:   Wed Jul 10 18:44:40 2013 -0700

    bcache: Advertise that flushes are supported
    
    commit 54d12f2b4fd0f218590d1490b41a18d0e2328a9a upstream.
    
    Whoops - bcache's flush/FUA was mostly correct, but flushes get filtered
    out unless we say we support them...
    
    Signed-off-by: Kent Overstreet <kmo@daterainc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0d8f455600820eb05208b57c50d4e90a58c4d96
Author: Kent Overstreet <kmo@daterainc.com>
Date:   Wed Jul 10 18:04:21 2013 -0700

    bcache: Fix a dumb race
    
    commit 6aa8f1a6ca41c49721d2de4e048d3da8d06411f9 upstream.
    
    In the far-too-complicated closure code - closures can have destructors,
    for probably dubious reasons; they get run after the closure is no
    longer waiting on anything but before dropping the parent ref, intended
    just for freeing whatever memory the closure is embedded in.
    
    Trouble is, when remaining goes to 0 and we've got nothing more to run -
    we also have to unlock the closure, setting remaining to -1. If there's
    a destructor, that unlock isn't doing anything - nobody could be trying
    to lock it if we're about to free it - but if the unlock _is needed...
    that check for a destructor was racy. Argh.
    
    Signed-off-by: Kent Overstreet <kmo@daterainc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 223828d8a6ef53f7671351fe5d08f18dca714830
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Wed Jul 17 14:53:53 2013 +0200

    fuse: readdirplus: sanity checks
    
    commit a28ef45cbb1e7fadd5159deb17b02de15c6e4aaf upstream.
    
    Add sanity checks before adding or updating an entry with data received
    from readdirplus.
    
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc2a6c2d3e9a2529b3ffc70c165cbb10c85768f5
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Wed Jul 17 14:53:53 2013 +0200

    fuse: readdirplus: fix instantiate
    
    commit 2914941e3178d84a216fc4eb85292dfef3b6d628 upstream.
    
    Fuse does instantiation slightly differently from NFS/CIFS which use
    d_materialise_unique().
    
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05ac7b3a7db7823aecde55df6a5f8d6bb45693f4
Author: Niels de Vos <ndevos@redhat.com>
Date:   Wed Jul 17 14:53:53 2013 +0200

    fuse: readdirplus: fix dentry leak
    
    commit 53ce9a3364de0723b27d861de93bfc882f7db050 upstream.
    
    In case d_lookup() returns a dentry with d_inode == NULL, the dentry is not
    returned with dput(). This results in triggering a BUG() in
    shrink_dcache_for_umount_subtree():
    
      BUG: Dentry ...{i=0,n=...} still in use (1) [unmount of fuse fuse]
    
    [SzM: need to d_drop() as well]
    
    Reported-by: Justin Clift <jclift@redhat.com>
    Signed-off-by: Niels de Vos <ndevos@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Tested-by: Brian Foster <bfoster@redhat.com>
    Tested-by: Niels de Vos <ndevos@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df18f5f93ce9ed27bd9a779196614afd7a0aa017
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Thu Jun 13 02:45:53 2013 +0200

    RAPIDIO: IDT_GEN2: Fix build error.
    
    commit 27f62b9f294b7e2019c94c385abda43a0af6bb8b upstream.
    
      CC      drivers/rapidio/switches/idt_gen2.o
    drivers/rapidio/switches/idt_gen2.c: In function ‘idtg2_show_errlog’:
    drivers/rapidio/switches/idt_gen2.c:379:30: error: ‘PAGE_SIZE’ undeclared (first use in this function)
    drivers/rapidio/switches/idt_gen2.c:379:30: note: each undeclared identifier is reported only once for each function it appears in
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Acked-by: Alexandre Bounine <alexandre.bounine@idt.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf6a37e7da73702e865a02f03664fc0e2c4a2b3f
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Thu Jun 13 01:29:24 2013 +0200

    MIPS: Oceton: Fix build error.
    
    commit 39205750efa6d335fac4f9bcd32b49c7e71c12b7 upstream.
    
    If CONFIG_CAVIUM_OCTEON_LOCK_L2_TLB, CONFIG_CAVIUM_OCTEON_LOCK_L2_EXCEPTION,
    CONFIG_CAVIUM_OCTEON_LOCK_L2_LOW_LEVEL_INTERRUPT and
    CONFIG_CAVIUM_OCTEON_LOCK_L2_INTERRUPT are all undefined:
    
    arch/mips/cavium-octeon/setup.c: In function ‘prom_init’:
    arch/mips/cavium-octeon/setup.c:715:12: error: unused variable ‘ebase’ [-Werror=unused-variable]
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5110890cbfa0c783cb727d6a2fbf36ce8560f9a5
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jul 18 09:35:10 2013 -0700

    vlan: fix a race in egress prio management
    
    [ Upstream commit 3e3aac497513c669e1c62c71e1d552ea85c1d974 ]
    
    egress_priority_map[] hash table updates are protected by rtnl,
    and we never remove elements until device is dismantled.
    
    We have to make sure that before inserting an new element in hash table,
    all its fields are committed to memory or else another cpu could
    find corrupt values and crash.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Patrick McHardy <kaber@trash.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37b25f3f99d52710de567c5ff880824bb576121c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jul 18 07:19:26 2013 -0700

    vlan: mask vlan prio bits
    
    [ Upstream commit d4b812dea4a236f729526facf97df1a9d18e191c ]
    
    In commit 48cc32d38a52d0b68f91a171a8d00531edc6a46e
    ("vlan: don't deliver frames for unknown vlans to protocols")
    Florian made sure we set pkt_type to PACKET_OTHERHOST
    if the vlan id is set and we could find a vlan device for this
    particular id.
    
    But we also have a problem if prio bits are set.
    
    Steinar reported an issue on a router receiving IPv6 frames with a
    vlan tag of 4000 (id 0, prio 2), and tunneled into a sit device,
    because skb->vlan_tci is set.
    
    Forwarded frame is completely corrupted : We can see (8100:4000)
    being inserted in the middle of IPv6 source address :
    
    16:48:00.780413 IP6 2001:16d8:8100:4000:ee1c:0:9d9:bc87 >
    9f94:4d95:2001:67c:29f4::: ICMP6, unknown icmp6 type (0), length 64
           0x0000:  0000 0029 8000 c7c3 7103 0001 a0ae e651
           0x0010:  0000 0000 ccce 0b00 0000 0000 1011 1213
           0x0020:  1415 1617 1819 1a1b 1c1d 1e1f 2021 2223
           0x0030:  2425 2627 2829 2a2b 2c2d 2e2f 3031 3233
    
    It seems we are not really ready to properly cope with this right now.
    
    We can probably do better in future kernels :
    vlan_get_ingress_priority() should be a netdev property instead of
    a per vlan_dev one.
    
    For stable kernels, lets clear vlan_tci to fix the bugs.
    
    Reported-by: Steinar H. Gunderson <sesse@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d9e6dd88cdea6c3d62a795ef69e6cc47b6dca2d
Author: Jason Wang <jasowang@redhat.com>
Date:   Thu Jul 18 10:55:16 2013 +0800

    macvtap: do not zerocopy if iov needs more pages than MAX_SKB_FRAGS
    
    [ Upstream commit ece793fcfc417b3925844be88a6a6dc82ae8f7c6 ]
    
    We try to linearize part of the skb when the number of iov is greater than
    MAX_SKB_FRAGS. This is not enough since each single vector may occupy more than
    one pages, so zerocopy_sg_fromiovec() may still fail and may break the guest
    network.
    
    Solve this problem by calculate the pages needed for iov before trying to do
    zerocopy and switch to use copy instead of zerocopy if it needs more than
    MAX_SKB_FRAGS.
    
    This is done through introducing a new helper to count the pages for iov, and
    call uarg->callback() manually when switching from zerocopy to copy to notify
    vhost.
    
    We can do further optimization on top.
    
    This bug were introduced from b92946e2919134ebe2a4083e4302236295ea2a73
    (macvtap: zerocopy: validate vectors before building skb).
    
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05464d21faec5e37e5b0fca58a5201408d6aab31
Author: Jason Wang <jasowang@redhat.com>
Date:   Thu Jul 18 10:55:15 2013 +0800

    tuntap: do not zerocopy if iov needs more pages than MAX_SKB_FRAGS
    
    [ Upstream commit 885291761dba2bfe04df4c0f7bb75e4c920ab82e ]
    
    We try to linearize part of the skb when the number of iov is greater than
    MAX_SKB_FRAGS. This is not enough since each single vector may occupy more than
    one pages, so zerocopy_sg_fromiovec() may still fail and may break the guest
    network.
    
    Solve this problem by calculate the pages needed for iov before trying to do
    zerocopy and switch to use copy instead of zerocopy if it needs more than
    MAX_SKB_FRAGS.
    
    This is done through introducing a new helper to count the pages for iov, and
    call uarg->callback() manually when switching from zerocopy to copy to notify
    vhost.
    
    We can do further optimization on top.
    
    The bug were introduced from commit 0690899b4d4501b3505be069b9a687e68ccbe15b
    (tun: experimental zero copy tx support)
    
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1d220fb027abb92452bf3a59fed7308647b39be
Author: Paolo Valente <paolo.valente@unimore.it>
Date:   Tue Jul 16 08:52:30 2013 +0200

    pkt_sched: sch_qfq: remove a source of high packet delay/jitter
    
    [ Upstream commit 87f40dd6ce7042caca0b3b557e8923127f51f902 ]
    
    QFQ+ inherits from QFQ a design choice that may cause a high packet
    delay/jitter and a severe short-term unfairness. As QFQ, QFQ+ uses a
    special quantity, the system virtual time, to track the service
    provided by the ideal system it approximates. When a packet is
    dequeued, this quantity must be incremented by the size of the packet,
    divided by the sum of the weights of the aggregates waiting to be
    served. Tracking this sum correctly is a non-trivial task, because, to
    preserve tight service guarantees, the decrement of this sum must be
    delayed in a special way [1]: this sum can be decremented only after
    that its value would decrease also in the ideal system approximated by
    QFQ+. For efficiency, QFQ+ keeps track only of the 'instantaneous'
    weight sum, increased and decreased immediately as the weight of an
    aggregate changes, and as an aggregate is created or destroyed (which,
    in its turn, happens as a consequence of some class being
    created/destroyed/changed). However, to avoid the problems caused to
    service guarantees by these immediate decreases, QFQ+ increments the
    system virtual time using the maximum value allowed for the weight
    sum, 2^10, in place of the dynamic, instantaneous value. The
    instantaneous value of the weight sum is used only to check whether a
    request of weight increase or a class creation can be satisfied.
    
    Unfortunately, the problems caused by this choice are worse than the
    temporary degradation of the service guarantees that may occur, when a
    class is changed or destroyed, if the instantaneous value of the
    weight sum was used to update the system virtual time. In fact, the
    fraction of the link bandwidth guaranteed by QFQ+ to each aggregate is
    equal to the ratio between the weight of the aggregate and the sum of
    the weights of the competing aggregates. The packet delay guaranteed
    to the aggregate is instead inversely proportional to the guaranteed
    bandwidth. By using the maximum possible value, and not the actual
    value of the weight sum, QFQ+ provides each aggregate with the worst
    possible service guarantees, and not with service guarantees related
    to the actual set of competing aggregates. To see the consequences of
    this fact, consider the following simple example.
    
    Suppose that only the following aggregates are backlogged, i.e., that
    only the classes in the following aggregates have packets to transmit:
    one aggregate with weight 10, say A, and ten aggregates with weight 1,
    say B1, B2, ..., B10. In particular, suppose that these aggregates are
    always backlogged. Given the weight distribution, the smoothest and
    fairest service order would be:
    A B1 A B2 A B3 A B4 A B5 A B6 A B7 A B8 A B9 A B10 A B1 A B2 ...
    
    QFQ+ would provide exactly this optimal service if it used the actual
    value for the weight sum instead of the maximum possible value, i.e.,
    11 instead of 2^10. In contrast, since QFQ+ uses the latter value, it
    serves aggregates as follows (easy to prove and to reproduce
    experimentally):
    A B1 B2 B3 B4 B5 B6 B7 B8 B9 B10 A A A A A A A A A A B1 B2 ... B10 A A ...
    
    By replacing 10 with N in the above example, and by increasing N, one
    can increase at will the maximum packet delay and the jitter
    experienced by the classes in aggregate A.
    
    This patch addresses this issue by just using the above
    'instantaneous' value of the weight sum, instead of the maximum
    possible value, when updating the system virtual time.  After the
    instantaneous weight sum is decreased, QFQ+ may deviate from the ideal
    service for a time interval in the order of the time to serve one
    maximum-size packet for each backlogged class. The worst-case extent
    of the deviation exhibited by QFQ+ during this time interval [1] is
    basically the same as of the deviation described above (but, without
    this patch, QFQ+ suffers from such a deviation all the time). Finally,
    this patch modifies the comment to the function qfq_slot_insert, to
    make it coherent with the fact that the weight sum used by QFQ+ can
    now be lower than the maximum possible value.
    
    [1] P. Valente, "Extending WF2Q+ to support a dynamic traffic mix",
    Proceedings of AAA-IDEA'05, June 2005.
    
    Signed-off-by: Paolo Valente <paolo.valente@unimore.it>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98bec4a114dfd772390a07735606109447481872
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Tue Jul 16 23:01:20 2013 -0700

    hyperv: Fix the NETIF_F_SG flag setting in netvsc
    
    [ Upstream commit f45708209dc445bac0844f6ce86e315a2ffe8a29 ]
    
    SG mode is not currently supported by netvsc, so remove this flag for now.
    Otherwise, it will be unconditionally enabled by commit ec5f0615642
        "Kill link between CSUM and SG features"
    Previously, the SG feature is disabled because CSUM is not set here.
    
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0ca176c17745ac3e0c5a9969aba3c983e6c69c5
Author: Sarveshwar Bandi <sarveshwar.bandi@emulex.com>
Date:   Tue Jul 16 12:44:02 2013 +0530

    be2net: Fix to avoid hardware workaround when not needed
    
    [ Upstream commit 52fe29e4bb614367c108b717c6d7fe5953eb7af3 ]
    
    Hardware workaround requesting hardware to skip vlan insertion is necessary
    only when umc or qnq is enabled. Enabling this workaround in other scenarios
    could cause controller to stall.
    
    Signed-off-by: Sarveshwar Bandi <sarveshwar.bandi@emulex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3923f8211bc60ff3b4567fafe0814beb6bc5a50
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jul 15 20:03:19 2013 -0700

    ipv4: set transport header earlier
    
    [ Upstream commit 21d1196a35f5686c4323e42a62fdb4b23b0ab4a3 ]
    
    commit 45f00f99d6e ("ipv4: tcp: clean up tcp_v4_early_demux()") added a
    performance regression for non GRO traffic, basically disabling
    IP early demux.
    
    IPv6 stack resets transport header in ip6_rcv() before calling
    IP early demux in ip6_rcv_finish(), while IPv4 does this only in
    ip_local_deliver_finish(), _after_ IP early demux.
    
    GRO traffic happened to enable IP early demux because transport header
    is also set in inet_gro_receive()
    
    Instead of reverting the faulty commit, we can make IPv4/IPv6 behave the
    same : transport_header should be set in ip_rcv() instead of
    ip_local_deliver_finish()
    
    ip_local_deliver_finish() can also use skb_network_header_len() which is
    faster than ip_hdrlen()
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Cc: Tom Herbert <therbert@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da7e35cee6bf8aae938baa597863691bfffc26eb
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Tue Jul 16 10:49:41 2013 -0400

    atl1e: unmap partially mapped skb on dma error and free skb
    
    [ Upstream commit 584ec4355355ffac43571b02a314d43eb2f7fcbf ]
    
    Ben Hutchings pointed out that my recent update to atl1e
    in commit 352900b583b2852152a1e05ea0e8b579292e731e
    ("atl1e: fix dma mapping warnings") was missing a bit of code.
    
    Specifically it reset the hardware tx ring to its origional state when
    we hit a dma error, but didn't unmap any exiting mappings from the
    operation.  This patch fixes that up.  It also remembers to free the
    skb in the event that an error occurs, so we don't leak.  Untested, as
    I don't have hardware.  I think its pretty straightforward, but please
    review closely.
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Ben Hutchings <bhutchings@solarflare.com>
    CC: Jay Cliburn <jcliburn@gmail.com>
    CC: Chris Snook <chris.snook@gmail.com>
    CC: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc419b2d5cac92acac3228a46df12720cac358f5
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Fri Jul 12 10:58:48 2013 -0400

    atl1e: fix dma mapping warnings
    
    [ Upstream commit 352900b583b2852152a1e05ea0e8b579292e731e ]
    
    Recently had this backtrace reported:
    WARNING: at lib/dma-debug.c:937 check_unmap+0x47d/0x930()
    Hardware name: System Product Name
    ATL1E 0000:02:00.0: DMA-API: device driver failed to check map error[device
    address=0x00000000cbfd1000] [size=90 bytes] [mapped as single]
    Modules linked in: xt_conntrack nf_conntrack ebtable_filter ebtables
    ip6table_filter ip6_tables snd_hda_codec_hdmi snd_hda_codec_realtek iTCO_wdt
    iTCO_vendor_support snd_hda_intel acpi_cpufreq mperf coretemp btrfs zlib_deflate
    snd_hda_codec snd_hwdep microcode raid6_pq libcrc32c snd_seq usblp serio_raw xor
    snd_seq_device joydev snd_pcm snd_page_alloc snd_timer snd lpc_ich i2c_i801
    soundcore mfd_core atl1e asus_atk0110 ata_generic pata_acpi radeon i2c_algo_bit
    drm_kms_helper ttm drm i2c_core pata_marvell uinput
    Pid: 314, comm: systemd-journal Not tainted 3.9.0-0.rc6.git2.3.fc19.x86_64 #1
    Call Trace:
     <IRQ>  [<ffffffff81069106>] warn_slowpath_common+0x66/0x80
     [<ffffffff8106916c>] warn_slowpath_fmt+0x4c/0x50
     [<ffffffff8138151d>] check_unmap+0x47d/0x930
     [<ffffffff810ad048>] ? sched_clock_cpu+0xa8/0x100
     [<ffffffff81381a2f>] debug_dma_unmap_page+0x5f/0x70
     [<ffffffff8137ce30>] ? unmap_single+0x20/0x30
     [<ffffffffa01569a1>] atl1e_intr+0x3a1/0x5b0 [atl1e]
     [<ffffffff810d53fd>] ? trace_hardirqs_off+0xd/0x10
     [<ffffffff81119636>] handle_irq_event_percpu+0x56/0x390
     [<ffffffff811199ad>] handle_irq_event+0x3d/0x60
     [<ffffffff8111cb6a>] handle_fasteoi_irq+0x5a/0x100
     [<ffffffff8101c36f>] handle_irq+0xbf/0x150
     [<ffffffff811dcb2f>] ? file_sb_list_del+0x3f/0x50
     [<ffffffff81073b10>] ? irq_enter+0x50/0xa0
     [<ffffffff8172738d>] do_IRQ+0x4d/0xc0
     [<ffffffff811dcb2f>] ? file_sb_list_del+0x3f/0x50
     [<ffffffff8171c6b2>] common_interrupt+0x72/0x72
     <EOI>  [<ffffffff810db5b2>] ? lock_release+0xc2/0x310
     [<ffffffff8109ea04>] lg_local_unlock_cpu+0x24/0x50
     [<ffffffff811dcb2f>] file_sb_list_del+0x3f/0x50
     [<ffffffff811dcb6d>] fput+0x2d/0xc0
     [<ffffffff811d8ea1>] filp_close+0x61/0x90
     [<ffffffff811fae4d>] __close_fd+0x8d/0x150
     [<ffffffff811d8ef0>] sys_close+0x20/0x50
     [<ffffffff81725699>] system_call_fastpath+0x16/0x1b
    
    The usual straighforward failure to check for dma_mapping_error after a map
    operation is completed.
    
    This patch should fix it, the reporter wandered off after filing this bz:
    https://bugzilla.redhat.com/show_bug.cgi?id=954170
    
    and I don't have hardware to test, but the fix is pretty straightforward, so I
    figured I'd post it for review.
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Jay Cliburn <jcliburn@gmail.com>
    CC: Chris Snook <chris.snook@gmail.com>
    CC: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6245ef7c307dfe1ae238a64980cf2469ecc5f68
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Fri Jul 12 23:46:33 2013 +0200

    ipv6: only static routes qualify for equal cost multipathing
    
    [ Upstream commit 307f2fb95e9b96b3577916e73d92e104f8f26494 ]
    
    Static routes in this case are non-expiring routes which did not get
    configured by autoconf or by icmpv6 redirects.
    
    To make sure we actually get an ecmp route while searching for the first
    one in this fib6_node's leafs, also make sure it matches the ecmp route
    assumptions.
    
    v2:
    a) Removed RTF_EXPIRE check in dst.from chain. The check of RTF_ADDRCONF
       already ensures that this route, even if added again without
       RTF_EXPIRES (in case of a RA announcement with infinite timeout),
       does not cause the rt6i_nsiblings logic to go wrong if a later RA
       updates the expiration time later.
    
    v3:
    a) Allow RTF_EXPIRES routes to enter the ecmp route set. We have to do so,
       because an pmtu event could update the RTF_EXPIRES flag and we would
       not count this route, if another route joins this set. We now filter
       only for RTF_GATEWAY|RTF_ADDRCONF|RTF_DYNAMIC, which are flags that
       don't get changed after rt6_info construction.
    
    Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6afbcb59964ec9dc3dd63ed96a9e2cda31f8a072
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Thu Jul 11 13:12:22 2013 -0700

    gre: Fix MTU sizing check for gretap tunnels
    
    [ Upstream commit 8c91e162e058bb91b7766f26f4d5823a21941026 ]
    
    This change fixes an MTU sizing issue seen with gretap tunnels when non-gso
    packets are sent from the interface.
    
    In my case I was able to reproduce the issue by simply sending a ping of
    1421 bytes with the gretap interface created on a device with a standard
    1500 mtu.
    
    This fix is based on the fact that the tunnel mtu is already adjusted by
    dev->hard_header_len so it would make sense that any packets being compared
    against that mtu should also be adjusted by hard_header_len and the tunnel
    header instead of just the tunnel header.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Reported-by: Cong Wang <amwang@redhat.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f84ddbc58cfd8551757efe3c61242c4d6e9918ce
Author: dingtianhong <dingtianhong@huawei.com>
Date:   Thu Jul 11 19:04:06 2013 +0800

    ifb: fix oops when loading the ifb failed
    
    [ Upstream commit f2966cd5691058b8674a20766525bedeaea9cbcf ]
    
    If __rtnl_link_register() return faild when loading the ifb, it will
    take the wrong path and get oops, so fix it just like dummy.
    
    Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 629b1d3db71d24e52478b94c71202034eaefed80
Author: dingtianhong <dingtianhong@huawei.com>
Date:   Thu Jul 11 19:04:02 2013 +0800

    dummy: fix oops when loading the dummy failed
    
    [ Upstream commit 2c8a01894a12665d8059fad8f0a293c98a264121 ]
    
    We rename the dummy in modprobe.conf like this:
    
    install dummy0 /sbin/modprobe -o dummy0 --ignore-install dummy
    install dummy1 /sbin/modprobe -o dummy1 --ignore-install dummy
    
    We got oops when we run the command:
    
    modprobe dummy0
    modprobe dummy1
    
    ------------[ cut here ]------------
    
    [ 3302.187584] BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
    [ 3302.195411] IP: [<ffffffff813fe62a>] __rtnl_link_unregister+0x9a/0xd0
    [ 3302.201844] PGD 85c94a067 PUD 8517bd067 PMD 0
    [ 3302.206305] Oops: 0002 [#1] SMP
    [ 3302.299737] task: ffff88105ccea300 ti: ffff880eba4a0000 task.ti: ffff880eba4a0000
    [ 3302.307186] RIP: 0010:[<ffffffff813fe62a>]  [<ffffffff813fe62a>] __rtnl_link_unregister+0x9a/0xd0
    [ 3302.316044] RSP: 0018:ffff880eba4a1dd8  EFLAGS: 00010246
    [ 3302.321332] RAX: 0000000000000000 RBX: ffffffff81a9d738 RCX: 0000000000000002
    [ 3302.328436] RDX: 0000000000000000 RSI: ffffffffa04d602c RDI: ffff880eba4a1dd8
    [ 3302.335541] RBP: ffff880eba4a1e18 R08: dead000000200200 R09: dead000000100100
    [ 3302.342644] R10: 0000000000000080 R11: 0000000000000003 R12: ffffffff81a9d788
    [ 3302.349748] R13: ffffffffa04d7020 R14: ffffffff81a9d670 R15: ffff880eba4a1dd8
    [ 3302.364910] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 3302.370630] CR2: 0000000000000008 CR3: 000000085e15e000 CR4: 00000000000427e0
    [ 3302.377734] DR0: 0000000000000003 DR1: 00000000000000b0 DR2: 0000000000000001
    [ 3302.384838] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    [ 3302.391940] Stack:
    [ 3302.393944]  ffff880eba4a1dd8 ffff880eba4a1dd8 ffff880eba4a1e18 ffffffffa04d70c0
    [ 3302.401350]  00000000ffffffef ffffffffa01a8000 0000000000000000 ffffffff816111c8
    [ 3302.408758]  ffff880eba4a1e48 ffffffffa01a80be ffff880eba4a1e48 ffffffffa04d70c0
    [ 3302.416164] Call Trace:
    [ 3302.418605]  [<ffffffffa01a8000>] ? 0xffffffffa01a7fff
    [ 3302.423727]  [<ffffffffa01a80be>] dummy_init_module+0xbe/0x1000 [dummy0]
    [ 3302.430405]  [<ffffffffa01a8000>] ? 0xffffffffa01a7fff
    [ 3302.435535]  [<ffffffff81000322>] do_one_initcall+0x152/0x1b0
    [ 3302.441263]  [<ffffffff810ab24b>] do_init_module+0x7b/0x200
    [ 3302.446824]  [<ffffffff810ad3d2>] load_module+0x4e2/0x530
    [ 3302.452215]  [<ffffffff8127ae40>] ? ddebug_dyndbg_boot_param_cb+0x60/0x60
    [ 3302.458979]  [<ffffffff810ad5f1>] SyS_init_module+0xd1/0x130
    [ 3302.464627]  [<ffffffff814b9652>] system_call_fastpath+0x16/0x1b
    [ 3302.490090] RIP  [<ffffffff813fe62a>] __rtnl_link_unregister+0x9a/0xd0
    [ 3302.496607]  RSP <ffff880eba4a1dd8>
    [ 3302.500084] CR2: 0000000000000008
    [ 3302.503466] ---[ end trace 8342d49cd49f78ed ]---
    
    The reason is that when loading dummy, if __rtnl_link_register() return failed,
    the init_module should return and avoid take the wrong path.
    
    Signed-off-by: Tan Xiaojun <tanxiaojun@huawei.com>
    Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4f1489ed58cb6337c663d6eabd8be86c84bf9f1
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Thu Jul 11 12:43:42 2013 +0200

    ipv6: fix route selection if kernel is not compiled with CONFIG_IPV6_ROUTER_PREF
    
    [ Upstream commit afc154e978de1eb11c555bc8bcec1552f75ebc43 ]
    
    This is a follow-up patch to 3630d40067a21d4dfbadc6002bb469ce26ac5d52
    ("ipv6: rt6_check_neigh should successfully verify neigh if no NUD
    information are available").
    
    Since the removal of rt->n in rt6_info we can end up with a dst ==
    NULL in rt6_check_neigh. In case the kernel is not compiled with
    CONFIG_IPV6_ROUTER_PREF we should also select a route with unkown
    NUD state but we must not avoid doing round robin selection on routes
    with the same target. So introduce and pass down a boolean ``do_rr'' to
    indicate when we should update rt->rr_ptr. As soon as no route is valid
    we do backtracking and do a lookup on a higher level in the fib trie.
    
    v2:
    a) Improved rt6_check_neigh logic (no need to create neighbour there)
       and documented return values.
    
    v3:
    a) Introduce enum rt6_nud_state to get rid of the magic numbers
       (thanks to David Miller).
    b) Update and shorten commit message a bit to actualy reflect
       the source.
    
    Reported-by: Pierre Emeriaud <petrus.lt@gmail.com>
    Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61b6f1280da836ca67e6e4cfaefd65e989f6bfbc
Author: Maarten Lankhorst <maarten.lankhorst@canonical.com>
Date:   Thu Jul 11 15:53:21 2013 +0200

    alx: fix lockdep annotation
    
    [ Upstream commit a8798a5c77c9981e88caef1373a3310bf8aed219 ]
    
    Move spin_lock_init to be called before the spinlocks are used, preventing a lockdep splat.
    
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53effe1697676189395fc9f8a02c749e19cc9daa
Author: Sasha Levin <sasha.levin@oracle.com>
Date:   Thu Jul 11 13:16:54 2013 -0400

    9p: fix off by one causing access violations and memory corruption
    
    [ Upstream commit 110ecd69a9feea82a152bbf9b12aba57e6396883 ]
    
    p9_release_pages() would attempt to dereference one value past the end of
    pages[]. This would cause the following crashes:
    
    [ 6293.171817] BUG: unable to handle kernel paging request at ffff8807c96f3000
    [ 6293.174146] IP: [<ffffffff8412793b>] p9_release_pages+0x3b/0x60
    [ 6293.176447] PGD 79c5067 PUD 82c1e3067 PMD 82c197067 PTE 80000007c96f3060
    [ 6293.180060] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC
    [ 6293.180060] Modules linked in:
    [ 6293.180060] CPU: 62 PID: 174043 Comm: modprobe Tainted: G        W    3.10.0-next-20130710-sasha #3954
    [ 6293.180060] task: ffff8807b803b000 ti: ffff880787dde000 task.ti: ffff880787dde000
    [ 6293.180060] RIP: 0010:[<ffffffff8412793b>]  [<ffffffff8412793b>] p9_release_pages+0x3b/0x60
    [ 6293.214316] RSP: 0000:ffff880787ddfc28  EFLAGS: 00010202
    [ 6293.214316] RAX: 0000000000000001 RBX: ffff8807c96f2ff8 RCX: 0000000000000000
    [ 6293.222017] RDX: ffff8807b803b000 RSI: 0000000000000001 RDI: ffffea001c7e3d40
    [ 6293.222017] RBP: ffff880787ddfc48 R08: 0000000000000000 R09: 0000000000000000
    [ 6293.222017] R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000001
    [ 6293.222017] R13: 0000000000000001 R14: ffff8807cc50c070 R15: ffff8807cc50c070
    [ 6293.222017] FS:  00007f572641d700(0000) GS:ffff8807f3600000(0000) knlGS:0000000000000000
    [ 6293.256784] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [ 6293.256784] CR2: ffff8807c96f3000 CR3: 00000007c8e81000 CR4: 00000000000006e0
    [ 6293.256784] Stack:
    [ 6293.256784]  ffff880787ddfcc8 ffff880787ddfcc8 0000000000000000 ffff880787ddfcc8
    [ 6293.256784]  ffff880787ddfd48 ffffffff84128be8 ffff880700000002 0000000000000001
    [ 6293.256784]  ffff8807b803b000 ffff880787ddfce0 0000100000000000 0000000000000000
    [ 6293.256784] Call Trace:
    [ 6293.256784]  [<ffffffff84128be8>] p9_virtio_zc_request+0x598/0x630
    [ 6293.256784]  [<ffffffff8115c610>] ? wake_up_bit+0x40/0x40
    [ 6293.256784]  [<ffffffff841209b1>] p9_client_zc_rpc+0x111/0x3a0
    [ 6293.256784]  [<ffffffff81174b78>] ? sched_clock_cpu+0x108/0x120
    [ 6293.256784]  [<ffffffff84122a21>] p9_client_read+0xe1/0x2c0
    [ 6293.256784]  [<ffffffff81708a90>] v9fs_file_read+0x90/0xc0
    [ 6293.256784]  [<ffffffff812bd073>] vfs_read+0xc3/0x130
    [ 6293.256784]  [<ffffffff811a78bd>] ? trace_hardirqs_on+0xd/0x10
    [ 6293.256784]  [<ffffffff812bd5a2>] SyS_read+0x62/0xa0
    [ 6293.256784]  [<ffffffff841a1a00>] tracesys+0xdd/0xe2
    [ 6293.256784] Code: 66 90 48 89 fb 41 89 f5 48 8b 3f 48 85 ff 74 29 85 f6 74 25 45 31 e4 66 0f 1f 84 00 00 00 00 00 e8 eb 14 12 fd 41 ff c4 49 63 c4 <48> 8b 3c c3 48 85 ff 74 05 45 39 e5 75 e7 48 83 c4 08 5b 41 5c
    [ 6293.256784] RIP  [<ffffffff8412793b>] p9_release_pages+0x3b/0x60
    [ 6293.256784]  RSP <ffff880787ddfc28>
    [ 6293.256784] CR2: ffff8807c96f3000
    [ 6293.256784] ---[ end trace 50822ee72cd360fc ]---
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a025e28ad81b611a908bf234579b2fc58efcb371
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Wed Jul 10 23:00:57 2013 +0200

    ipv6: in case of link failure remove route directly instead of letting it expire
    
    [ Upstream commit 1eb4f758286884e7566627164bca4c4a16952a83 ]
    
    We could end up expiring a route which is part of an ecmp route set. Doing
    so would invalidate the rt->rt6i_nsiblings calculations and could provoke
    the following panic:
    
    [   80.144667] ------------[ cut here ]------------
    [   80.145172] kernel BUG at net/ipv6/ip6_fib.c:733!
    [   80.145172] invalid opcode: 0000 [#1] SMP
    [   80.145172] Modules linked in: 8021q nf_conntrack_netbios_ns nf_conntrack_broadcast ipt_MASQUERADE ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables
    +snd_hda_intel snd_hda_codec snd_hwdep snd_seq snd_seq_device snd_pcm snd_page_alloc snd_timer virtio_balloon snd soundcore i2c_piix4 i2c_core virtio_net virtio_blk
    [   80.145172] CPU: 1 PID: 786 Comm: ping6 Not tainted 3.10.0+ #118
    [   80.145172] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
    [   80.145172] task: ffff880117fa0000 ti: ffff880118770000 task.ti: ffff880118770000
    [   80.145172] RIP: 0010:[<ffffffff815f3b5d>]  [<ffffffff815f3b5d>] fib6_add+0x75d/0x830
    [   80.145172] RSP: 0018:ffff880118771798  EFLAGS: 00010202
    [   80.145172] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff88011350e480
    [   80.145172] RDX: ffff88011350e238 RSI: 0000000000000004 RDI: ffff88011350f738
    [   80.145172] RBP: ffff880118771848 R08: ffff880117903280 R09: 0000000000000001
    [   80.145172] R10: 0000000000000000 R11: 0000000000000000 R12: ffff88011350f680
    [   80.145172] R13: ffff880117903280 R14: ffff880118771890 R15: ffff88011350ef90
    [   80.145172] FS:  00007f02b5127740(0000) GS:ffff88011fd00000(0000) knlGS:0000000000000000
    [   80.145172] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [   80.145172] CR2: 00007f981322a000 CR3: 00000001181b1000 CR4: 00000000000006e0
    [   80.145172] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   80.145172] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    [   80.145172] Stack:
    [   80.145172]  0000000000000001 ffff880100000000 ffff880100000000 ffff880117903280
    [   80.145172]  0000000000000000 ffff880119a4cf00 0000000000000400 00000000000007fa
    [   80.145172]  0000000000000000 0000000000000000 0000000000000000 ffff88011350f680
    [   80.145172] Call Trace:
    [   80.145172]  [<ffffffff815eeceb>] ? rt6_bind_peer+0x4b/0x90
    [   80.145172]  [<ffffffff815ed985>] __ip6_ins_rt+0x45/0x70
    [   80.145172]  [<ffffffff815eee35>] ip6_ins_rt+0x35/0x40
    [   80.145172]  [<ffffffff815ef1e4>] ip6_pol_route.isra.44+0x3a4/0x4b0
    [   80.145172]  [<ffffffff815ef34a>] ip6_pol_route_output+0x2a/0x30
    [   80.145172]  [<ffffffff81616077>] fib6_rule_action+0xd7/0x210
    [   80.145172]  [<ffffffff815ef320>] ? ip6_pol_route_input+0x30/0x30
    [   80.145172]  [<ffffffff81553026>] fib_rules_lookup+0xc6/0x140
    [   80.145172]  [<ffffffff81616374>] fib6_rule_lookup+0x44/0x80
    [   80.145172]  [<ffffffff815ef320>] ? ip6_pol_route_input+0x30/0x30
    [   80.145172]  [<ffffffff815edea3>] ip6_route_output+0x73/0xb0
    [   80.145172]  [<ffffffff815dfdf3>] ip6_dst_lookup_tail+0x2c3/0x2e0
    [   80.145172]  [<ffffffff813007b1>] ? list_del+0x11/0x40
    [   80.145172]  [<ffffffff81082a4c>] ? remove_wait_queue+0x3c/0x50
    [   80.145172]  [<ffffffff815dfe4d>] ip6_dst_lookup_flow+0x3d/0xa0
    [   80.145172]  [<ffffffff815fda77>] rawv6_sendmsg+0x267/0xc20
    [   80.145172]  [<ffffffff815a8a83>] inet_sendmsg+0x63/0xb0
    [   80.145172]  [<ffffffff8128eb93>] ? selinux_socket_sendmsg+0x23/0x30
    [   80.145172]  [<ffffffff815218d6>] sock_sendmsg+0xa6/0xd0
    [   80.145172]  [<ffffffff81524a68>] SYSC_sendto+0x128/0x180
    [   80.145172]  [<ffffffff8109825c>] ? update_curr+0xec/0x170
    [   80.145172]  [<ffffffff81041d09>] ? kvm_clock_get_cycles+0x9/0x10
    [   80.145172]  [<ffffffff810afd1e>] ? __getnstimeofday+0x3e/0xd0
    [   80.145172]  [<ffffffff8152509e>] SyS_sendto+0xe/0x10
    [   80.145172]  [<ffffffff8164efd9>] system_call_fastpath+0x16/0x1b
    [   80.145172] Code: fe ff ff 41 f6 45 2a 06 0f 85 ca fe ff ff 49 8b 7e 08 4c 89 ee e8 94 ef ff ff e9 b9 fe ff ff 48 8b 82 28 05 00 00 e9 01 ff ff ff <0f> 0b 49 8b 54 24 30 0d 00 00 40 00 89 83 14 01 00 00 48 89 53
    [   80.145172] RIP  [<ffffffff815f3b5d>] fib6_add+0x75d/0x830
    [   80.145172]  RSP <ffff880118771798>
    [   80.387413] ---[ end trace 02f20b7a8b81ed95 ]---
    [   80.390154] Kernel panic - not syncing: Fatal exception in interrupt
    
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd31fdd2f48f4e42c6a19d24fa85e59eb2ccf583
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed Jul 10 13:43:28 2013 +0800

    macvtap: correctly linearize skb when zerocopy is used
    
    [ Upstream commit 61d46bf979d5cd7c164709a80ad5676a35494aae ]
    
    Userspace may produce vectors greater than MAX_SKB_FRAGS. When we try to
    linearize parts of the skb to let the rest of iov to be fit in
    the frags, we need count copylen into linear when calling macvtap_alloc_skb()
    instead of partly counting it into data_len. Since this breaks
    zerocopy_sg_from_iovec() since its inner counter assumes nr_frags should
    be zero at beginning. This cause nr_frags to be increased wrongly without
    setting the correct frags.
    
    This bug were introduced from b92946e2919134ebe2a4083e4302236295ea2a73
    (macvtap: zerocopy: validate vectors before building skb).
    
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d09ec76aebab878e0dc583484152e20a2172a7b4
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed Jul 10 13:43:27 2013 +0800

    tuntap: correctly linearize skb when zerocopy is used
    
    [ Upstream commit 3dd5c3308e8b671e8e8882ba972f51cefbe9fd0d ]
    
    Userspace may produce vectors greater than MAX_SKB_FRAGS. When we try to
    linearize parts of the skb to let the rest of iov to be fit in
    the frags, we need count copylen into linear when calling tun_alloc_skb()
    instead of partly counting it into data_len. Since this breaks
    zerocopy_sg_from_iovec() since its inner counter assumes nr_frags should
    be zero at beginning. This cause nr_frags to be increased wrongly without
    setting the correct frags.
    
    This bug were introduced from 0690899b4d4501b3505be069b9a687e68ccbe15b
    (tun: experimental zero copy tx support)
    
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6683151aeea6c7aade12dde7ec2008fc380f0728
Author: dingtianhong <dingtianhong@huawei.com>
Date:   Wed Jul 10 12:04:02 2013 +0800

    ifb: fix rcu_sched self-detected stalls
    
    [ Upstream commit 440d57bc5ff55ec1efb3efc9cbe9420b4bbdfefa ]
    
    According to the commit 16b0dc29c1af9df341428f4c49ada4f626258082
    (dummy: fix rcu_sched self-detected stalls)
    
    Eric Dumazet fix the problem in dummy, but the ifb will occur the
    same problem like the dummy modules.
    
    Trying to "modprobe ifb numifbs=30000" triggers :
    
    INFO: rcu_sched self-detected stall on CPU
    
    After this splat, RTNL is locked and reboot is needed.
    
    We must call cond_resched() to avoid this, even holding RTNL.
    
    Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c51a7a308e2ff38ae5ad3005a7ce8c333779f8fd
Author: Dave Kleikamp <dave.kleikamp@oracle.com>
Date:   Mon Jul 1 16:49:22 2013 -0500

    sunvnet: vnet_port_remove must call unregister_netdev
    
    [ Upstream commit aabb9875d02559ab9b928cd6f259a5cc4c21a589 ]
    
    The missing call to unregister_netdev() leaves the interface active
    after the driver is unloaded by rmmod.
    
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ce1d2513b74d4603769ed99636dc52144f02c4
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Jun 25 17:29:46 2013 +0300

    vhost-net: fix use-after-free in vhost_net_flush
    
    [ Upstream commit c38e39c378f46f00ce922dd40a91043a9925c28d ]
    
    vhost_net_ubuf_put_and_wait has a confusing name:
    it will actually also free it's argument.
    Thus since commit 1280c27f8e29acf4af2da914e80ec27c3dbd5c01
        "vhost-net: flush outstanding DMAs on memory change"
    vhost_net_flush tries to use the argument after passing it
    to vhost_net_ubuf_put_and_wait, this results
    in use after free.
    To fix, don't free the argument in vhost_net_ubuf_put_and_wait,
    add an new API for callers that want to free ubufs.
    
    Acked-by: Asias He <asias@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b0e8a4ff83fd85afe5d0b84a2e1c6faa5fa56b8
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Jul 9 08:13:04 2013 +0300

    virtio_net: fix race in RX VQ processing
    
    [ Upstream commit cbdadbbf0c790f79350a8f36029208944c5487d0 ]
    
    virtio net called virtqueue_enable_cq on RX path after napi_complete, so
    with NAPI_STATE_SCHED clear - outside the implicit napi lock.
    This violates the requirement to synchronize virtqueue_enable_cq wrt
    virtqueue_add_buf.  In particular, used event can move backwards,
    causing us to lose interrupts.
    In a debug build, this can trigger panic within START_USE.
    
    Jason Wang reports that he can trigger the races artificially,
    by adding udelay() in virtqueue_enable_cb() after virtio_mb().
    
    However, we must call napi_complete to clear NAPI_STATE_SCHED before
    polling the virtqueue for used buffers, otherwise napi_schedule_prep in
    a callback will fail, causing us to lose RX events.
    
    To fix, call virtqueue_enable_cb_prepare with NAPI_STATE_SCHED
    set (under napi lock), later call virtqueue_poll with
    NAPI_STATE_SCHED clear (outside the lock).
    
    Reported-by: Jason Wang <jasowang@redhat.com>
    Tested-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c23b1ece6112ed0f227fdc881db33c6427b65222
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Jul 9 13:19:18 2013 +0300

    virtio: support unlocked queue poll
    
    [ Upstream commit cc229884d3f77ec3b1240e467e0236c3e0647c0c ]
    
    This adds a way to check ring empty state after enable_cb outside any
    locks. Will be used by virtio_net.
    
    Note: there's room for more optimization: caller is likely to have a
    memory barrier already, which means we might be able to get rid of a
    barrier here.  Deferring this optimization until we do some
    benchmarking.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1a2a1a6efee375e9ac00ec0a718503fd05b4302
Author: Jongsung Kim <neidhard.kim@lge.com>
Date:   Tue Jul 9 17:36:00 2013 +0900

    net/cadence/macb: fix bug/typo in extracting gem_irq_read_clear bit
    
    [ Upstream commit 01276ed2424eb78c95461545410923d5da154d31 ]
    
    Signed-off-by: Jongsung Kim <neidhard.kim@lge.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c6d3d1d21e522c9722cd6bdfd57afb171786028
Author: Ben Hutchings <bhutchings@solarflare.com>
Date:   Thu Jul 4 23:48:46 2013 +0100

    sfc: Fix memory leak when discarding scattered packets
    
    [ Upstream commit 734d4e159b283a4ae4d007b7e7a91d84398ccb92 ]
    
    Commit 2768935a4660 ('sfc: reuse pages to avoid DMA mapping/unmapping
    costs') did not fully take account of DMA scattering which was
    introduced immediately before.  If a received packet is invalid and
    must be discarded, we only drop a reference to the first buffer's
    page, but we need to drop a reference for each buffer the packet
    used.
    
    I think this bug was missed partly because efx_recycle_rx_buffers()
    was not renamed and so no longer does what its name says.  It does not
    change the state of buffers, but only prepares the underlying pages
    for recycling.  Rename it accordingly.
    
    Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3a5491228f90fd82e67b7ccd2fcbaf984d44c07
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Wed Jul 3 20:45:04 2013 +0200

    ipv6: rt6_check_neigh should successfully verify neigh if no NUD information are available
    
    [ Upstream commit 3630d40067a21d4dfbadc6002bb469ce26ac5d52 ]
    
    After the removal of rt->n we do not create a neighbour entry at route
    insertion time (rt6_bind_neighbour is gone). As long as no neighbour is
    created because of "useful traffic" we skip this routing entry because
    rt6_check_neigh cannot pick up a valid neighbour (neigh == NULL) and
    thus returns false.
    
    This change was introduced by commit
    887c95cc1da53f66a5890fdeab13414613010097 ("ipv6: Complete neighbour
    entry removal from dst_entry.")
    
    To quote RFC4191:
    "If the host has no information about the router's reachability, then
    the host assumes the router is reachable."
    
    and also:
    "A host MUST NOT probe a router's reachability in the absence of useful
    traffic that the host would have sent to the router if it were reachable."
    
    So, just assume the router is reachable and let's rt6_probe do the
    rest. We don't need to create a neighbour on route insertion time.
    
    If we don't compile with CONFIG_IPV6_ROUTER_PREF (RFC4191 support)
    a neighbour is only valid if its nud_state is NUD_VALID. I did not find
    any references that we should probe the router on route insertion time
    via the other RFCs. So skip this route in that case.
    
    v2:
    a) use IS_ENABLED instead of #ifdefs (thanks to Sergei Shtylyov)
    
    Reported-by: Pierre Emeriaud <petrus.lt@gmail.com>
    Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7852c5bf367a01828edd02974c0a185b1be7b577
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Tue Jul 2 08:04:05 2013 +0200

    ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size
    
    [ Upstream commit 75a493e60ac4bbe2e977e7129d6d8cbb0dd236be ]
    
    If the socket had an IPV6_MTU value set, ip6_append_data_mtu lost track
    of this when appending the second frame on a corked socket. This results
    in the following splat:
    
    [37598.993962] ------------[ cut here ]------------
    [37598.994008] kernel BUG at net/core/skbuff.c:2064!
    [37598.994008] invalid opcode: 0000 [#1] SMP
    [37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat
    +nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi
    +scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm
    [37598.994008]  snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc
    +dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video
    [37598.994008] CPU 0
    [37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG/27744PG
    [37598.994008] RIP: 0010:[<ffffffff815443a5>]  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330
    [37598.994008] RSP: 0018:ffff88003670da18  EFLAGS: 00010202
    [37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0
    [37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00
    [37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040
    [37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8
    [37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000
    [37598.994008] FS:  00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000
    [37598.994008] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0
    [37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    [37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0)
    [37598.994008] Stack:
    [37598.994008]  ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8
    [37598.994008]  ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200
    [37598.994008]  0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4
    [37598.994008] Call Trace:
    [37598.994008]  [<ffffffff815fc21f>] ip6_append_data+0xccf/0xfe0
    [37598.994008]  [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0/0x1a0
    [37598.994008]  [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16/0x40
    [37598.994008]  [<ffffffff8161548d>] udpv6_sendmsg+0x1ed/0xc10
    [37598.994008]  [<ffffffff812a2845>] ? sock_has_perm+0x75/0x90
    [37598.994008]  [<ffffffff815c3693>] inet_sendmsg+0x63/0xb0
    [37598.994008]  [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23/0x30
    [37598.994008]  [<ffffffff8153a450>] sock_sendmsg+0xb0/0xe0
    [37598.994008]  [<ffffffff810135d1>] ? __switch_to+0x181/0x4a0
    [37598.994008]  [<ffffffff8153d97d>] sys_sendto+0x12d/0x180
    [37598.994008]  [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94/0xf0
    [37598.994008]  [<ffffffff81020ed1>] ? syscall_trace_enter+0x231/0x240
    [37598.994008]  [<ffffffff8166a7e7>] tracesys+0xdd/0xe2
    [37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48
    [37598.994008] RIP  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330
    [37598.994008]  RSP <ffff88003670da18>
    [37599.007323] ---[ end trace d69f6a17f8ac8eee ]---
    
    While there, also check if path mtu discovery is activated for this
    socket. The logic was adapted from ip6_append_data when first writing
    on the corked socket.
    
    This bug was introduced with commit
    0c1833797a5a6ec23ea9261d979aa18078720b74 ("ipv6: fix incorrect ipsec
    fragment").
    
    v2:
    a) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE.
    b) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao
       feng, thanks!).
    c) Change mtu to unsigned int, else we get a warning about
       non-matching types because of the min()-macro type-check.
    
    Acked-by: Gao feng <gaofeng@cn.fujitsu.com>
    Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07243c3d963dc56facf2512f51783448f5d9cf6f
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Mon Jul 1 20:21:30 2013 +0200

    ipv6: call udp_push_pending_frames when uncorking a socket with AF_INET pending data
    
    [ Upstream commit 8822b64a0fa64a5dd1dfcf837c5b0be83f8c05d1 ]
    
    We accidentally call down to ip6_push_pending_frames when uncorking
    pending AF_INET data on a ipv6 socket. This results in the following
    splat (from Dave Jones):
    
    skbuff: skb_under_panic: text:ffffffff816765f6 len:48 put:40 head:ffff88013deb6df0 data:ffff88013deb6dec tail:0x2c end:0xc0 dev:<NULL>
    ------------[ cut here ]------------
    kernel BUG at net/core/skbuff.c:126!
    invalid opcode: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC
    Modules linked in: dccp_ipv4 dccp 8021q garp bridge stp dlci mpoa snd_seq_dummy sctp fuse hidp tun bnep nfnetlink scsi_transport_iscsi rfcomm can_raw can_bcm af_802154 appletalk caif_socket can caif ipt_ULOG x25 rose af_key pppoe pppox ipx phonet irda llc2 ppp_generic slhc p8023 psnap p8022 llc crc_ccitt atm bluetooth
    +netrom ax25 nfc rfkill rds af_rxrpc coretemp hwmon kvm_intel kvm crc32c_intel snd_hda_codec_realtek ghash_clmulni_intel microcode pcspkr snd_hda_codec_hdmi snd_hda_intel snd_hda_codec snd_hwdep usb_debug snd_seq snd_seq_device snd_pcm e1000e snd_page_alloc snd_timer ptp snd pps_core soundcore xfs libcrc32c
    CPU: 2 PID: 8095 Comm: trinity-child2 Not tainted 3.10.0-rc7+ #37
    task: ffff8801f52c2520 ti: ffff8801e6430000 task.ti: ffff8801e6430000
    RIP: 0010:[<ffffffff816e759c>]  [<ffffffff816e759c>] skb_panic+0x63/0x65
    RSP: 0018:ffff8801e6431de8  EFLAGS: 00010282
    RAX: 0000000000000086 RBX: ffff8802353d3cc0 RCX: 0000000000000006
    RDX: 0000000000003b90 RSI: ffff8801f52c2ca0 RDI: ffff8801f52c2520
    RBP: ffff8801e6431e08 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000001 R11: 0000000000000001 R12: ffff88022ea0c800
    R13: ffff88022ea0cdf8 R14: ffff8802353ecb40 R15: ffffffff81cc7800
    FS:  00007f5720a10740(0000) GS:ffff880244c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000005862000 CR3: 000000022843c000 CR4: 00000000001407e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600
    Stack:
     ffff88013deb6dec 000000000000002c 00000000000000c0 ffffffff81a3f6e4
     ffff8801e6431e18 ffffffff8159a9aa ffff8801e6431e90 ffffffff816765f6
     ffffffff810b756b 0000000700000002 ffff8801e6431e40 0000fea9292aa8c0
    Call Trace:
     [<ffffffff8159a9aa>] skb_push+0x3a/0x40
     [<ffffffff816765f6>] ip6_push_pending_frames+0x1f6/0x4d0
     [<ffffffff810b756b>] ? mark_held_locks+0xbb/0x140
     [<ffffffff81694919>] udp_v6_push_pending_frames+0x2b9/0x3d0
     [<ffffffff81694660>] ? udplite_getfrag+0x20/0x20
     [<ffffffff8162092a>] udp_lib_setsockopt+0x1aa/0x1f0
     [<ffffffff811cc5e7>] ? fget_light+0x387/0x4f0
     [<ffffffff816958a4>] udpv6_setsockopt+0x34/0x40
     [<ffffffff815949f4>] sock_common_setsockopt+0x14/0x20
     [<ffffffff81593c31>] SyS_setsockopt+0x71/0xd0
     [<ffffffff816f5d54>] tracesys+0xdd/0xe2
    Code: 00 00 48 89 44 24 10 8b 87 d8 00 00 00 48 89 44 24 08 48 8b 87 e8 00 00 00 48 c7 c7 c0 04 aa 81 48 89 04 24 31 c0 e8 e1 7e ff ff <0f> 0b 55 48 89 e5 0f 0b 55 48 89 e5 0f 0b 55 48 89 e5 0f 0b 55
    RIP  [<ffffffff816e759c>] skb_panic+0x63/0x65
     RSP <ffff8801e6431de8>
    
    This patch adds a check if the pending data is of address family AF_INET
    and directly calls udp_push_ending_frames from udp_v6_push_pending_frames
    if that is the case.
    
    This bug was found by Dave Jones with trinity.
    
    (Also move the initialization of fl6 below the AF_INET check, even if
    not strictly necessary.)
    
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Cc: Dave Jones <davej@redhat.com>
    Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e7eadef8d9f5c3ebb664afcbaaad031321bfa58
Author: Cong Wang <amwang@redhat.com>
Date:   Tue Jul 2 14:49:34 2013 +0800

    ipip: fix a regression in ioctl
    
    [ Upstream commit 3b7b514f44bff05d26a6499c4d4fac2a83938e6e ]
    
    This is a regression introduced by
    commit fd58156e456d9f68fe0448 (IPIP: Use ip-tunneling code.)
    
    Similar to GRE tunnel, previously we only check the parameters
    for SIOCADDTUNNEL and SIOCCHGTUNNEL, after that commit, the
    check is moved for all commands.
    
    So, just check for SIOCADDTUNNEL and SIOCCHGTUNNEL.
    
    Also, the check for i_key, o_key etc. is suspicious too,
    which did not exist before, reset them before passing
    to ip_tunnel_ioctl().
    
    Signed-off-by: Cong Wang <amwang@redhat.com>
    Cc: Pravin B Shelar <pshelar@nicira.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed7f614ab8c605aadfa163d468a980642b3929da
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Tue Jul 2 09:02:07 2013 +0800

    l2tp: add missing .owner to struct pppox_proto
    
    [ Upstream commit e1558a93b61962710733dc8c11a2bc765607f1cd ]
    
    Add missing .owner of struct pppox_proto. This prevents the
    module from being removed from underneath its users.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edb42cad3392ba6a1cd3a688cfb7af16d6b2137f
Author: Pravin B Shelar <pshelar@nicira.com>
Date:   Tue Jul 2 10:57:33 2013 -0700

    ip_tunnels: Use skb-len to PMTU check.
    
    [ Upstream commit 23a3647bc4f93bac3776c66dc2c7f7f68b3cd662 ]
    
    In path mtu check, ip header total length works for gre device
    but not for gre-tap device.  Use skb len which is consistent
    for all tunneling types.  This is old bug in gre.
    This also fixes mtu calculation bug introduced by
    commit c54419321455631079c7d (GRE: Refactor GRE tunneling code).
    
    Reported-by: Timo Teras <timo.teras@iki.fi>
    Signed-off-by: Pravin B Shelar <pshelar@nicira.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36bddbad5049d3f3916abc9f594526d47ad3ab84
Author: Amerigo Wang <amwang@redhat.com>
Date:   Sat Jun 29 21:30:49 2013 +0800

    ipv6,mcast: always hold idev->lock before mca_lock
    
    [ Upstream commit 8965779d2c0e6ab246c82a405236b1fb2adae6b2, with
      some bits from commit b7b1bfce0bb68bd8f6e62a28295922785cc63781
      ("ipv6: split duplicate address detection and router solicitation timer")
      to get the __ipv6_get_lladdr() used by this patch. ]
    
    dingtianhong reported the following deadlock detected by lockdep:
    
     ======================================================
     [ INFO: possible circular locking dependency detected ]
     3.4.24.05-0.1-default #1 Not tainted
     -------------------------------------------------------
     ksoftirqd/0/3 is trying to acquire lock:
      (&ndev->lock){+.+...}, at: [<ffffffff8147f804>] ipv6_get_lladdr+0x74/0x120
    
     but task is already holding lock:
      (&mc->mca_lock){+.+...}, at: [<ffffffff8149d130>] mld_send_report+0x40/0x150
    
     which lock already depends on the new lock.
    
     the existing dependency chain (in reverse order) is:
    
     -> #1 (&mc->mca_lock){+.+...}:
            [<ffffffff810a8027>] validate_chain+0x637/0x730
            [<ffffffff810a8417>] __lock_acquire+0x2f7/0x500
            [<ffffffff810a8734>] lock_acquire+0x114/0x150
            [<ffffffff814f691a>] rt_spin_lock+0x4a/0x60
            [<ffffffff8149e4bb>] igmp6_group_added+0x3b/0x120
            [<ffffffff8149e5d8>] ipv6_mc_up+0x38/0x60
            [<ffffffff81480a4d>] ipv6_find_idev+0x3d/0x80
            [<ffffffff81483175>] addrconf_notify+0x3d5/0x4b0
            [<ffffffff814fae3f>] notifier_call_chain+0x3f/0x80
            [<ffffffff81073471>] raw_notifier_call_chain+0x11/0x20
            [<ffffffff813d8722>] call_netdevice_notifiers+0x32/0x60
            [<ffffffff813d92d4>] __dev_notify_flags+0x34/0x80
            [<ffffffff813d9360>] dev_change_flags+0x40/0x70
            [<ffffffff813ea627>] do_setlink+0x237/0x8a0
            [<ffffffff813ebb6c>] rtnl_newlink+0x3ec/0x600
            [<ffffffff813eb4d0>] rtnetlink_rcv_msg+0x160/0x310
            [<ffffffff814040b9>] netlink_rcv_skb+0x89/0xb0
            [<ffffffff813eb357>] rtnetlink_rcv+0x27/0x40
            [<ffffffff81403e20>] netlink_unicast+0x140/0x180
            [<ffffffff81404a9e>] netlink_sendmsg+0x33e/0x380
            [<ffffffff813c4252>] sock_sendmsg+0x112/0x130
            [<ffffffff813c537e>] __sys_sendmsg+0x44e/0x460
            [<ffffffff813c5544>] sys_sendmsg+0x44/0x70
            [<ffffffff814feab9>] system_call_fastpath+0x16/0x1b
    
     -> #0 (&ndev->lock){+.+...}:
            [<ffffffff810a798e>] check_prev_add+0x3de/0x440
            [<ffffffff810a8027>] validate_chain+0x637/0x730
            [<ffffffff810a8417>] __lock_acquire+0x2f7/0x500
            [<ffffffff810a8734>] lock_acquire+0x114/0x150
            [<ffffffff814f6c82>] rt_read_lock+0x42/0x60
            [<ffffffff8147f804>] ipv6_get_lladdr+0x74/0x120
            [<ffffffff8149b036>] mld_newpack+0xb6/0x160
            [<ffffffff8149b18b>] add_grhead+0xab/0xc0
            [<ffffffff8149d03b>] add_grec+0x3ab/0x460
            [<ffffffff8149d14a>] mld_send_report+0x5a/0x150
            [<ffffffff8149f99e>] igmp6_timer_handler+0x4e/0xb0
            [<ffffffff8105705a>] call_timer_fn+0xca/0x1d0
            [<ffffffff81057b9f>] run_timer_softirq+0x1df/0x2e0
            [<ffffffff8104e8c7>] handle_pending_softirqs+0xf7/0x1f0
            [<ffffffff8104ea3b>] __do_softirq_common+0x7b/0xf0
            [<ffffffff8104f07f>] __thread_do_softirq+0x1af/0x210
            [<ffffffff8104f1c1>] run_ksoftirqd+0xe1/0x1f0
            [<ffffffff8106c7de>] kthread+0xae/0xc0
            [<ffffffff814fff74>] kernel_thread_helper+0x4/0x10
    
    actually we can just hold idev->lock before taking pmc->mca_lock,
    and avoid taking idev->lock again when iterating idev->addr_list,
    since the upper callers of mld_newpack() already take
    read_lock_bh(&idev->lock).
    
    Reported-by: dingtianhong <dingtianhong@huawei.com>
    Cc: dingtianhong <dingtianhong@huawei.com>
    Cc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Tested-by: Ding Tianhong <dingtianhong@huawei.com>
    Tested-by: Chen Weilong <chenweilong@huawei.com>
    Signed-off-by: Cong Wang <amwang@redhat.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da04e7df0494a9a6ccfe2aada8a262e38c284914
Author: Cong Wang <amwang@redhat.com>
Date:   Sat Jun 29 13:00:57 2013 +0800

    vti: remove duplicated code to fix a memory leak
    
    [ Upstream commit ab6c7a0a43c2eaafa57583822b619b22637b49c7 ]
    
    vti module allocates dev->tstats twice: in vti_fb_tunnel_init()
    and in vti_tunnel_init(), this lead to a memory leak of
    dev->tstats.
    
    Just remove the duplicated operations in vti_fb_tunnel_init().
    
    (candidate for -stable)
    
    Signed-off-by: Cong Wang <amwang@redhat.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Cc: Saurabh Mohan <saurabh.mohan@vyatta.com>
    Acked-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d3fa8bca30d8fd9cf5b95bd3eb9d7e2a50dec1c
Author: Cong Wang <amwang@redhat.com>
Date:   Sat Jun 29 12:02:59 2013 +0800

    gre: fix a regression in ioctl
    
    [ Upstream commit 6c734fb8592f6768170e48e7102cb2f0a1bb9759 ]
    
    When testing GRE tunnel, I got:
    
     # ip tunnel show
     get tunnel gre0 failed: Invalid argument
     get tunnel gre1 failed: Invalid argument
    
    This is a regression introduced by commit c54419321455631079c7d
    ("GRE: Refactor GRE tunneling code.") because previously we
    only check the parameters for SIOCADDTUNNEL and SIOCCHGTUNNEL,
    after that commit, the check is moved for all commands.
    
    So, just check for SIOCADDTUNNEL and SIOCCHGTUNNEL.
    
    After this patch I got:
    
     # ip tunnel show
     gre0: gre/ip  remote any  local any  ttl inherit  nopmtudisc
     gre1: gre/ip  remote 192.168.122.101  local 192.168.122.45  ttl inherit
    
    Signed-off-by: Cong Wang <amwang@redhat.com>
    Cc: Pravin B Shelar <pshelar@nicira.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51778da544ca660615ea02b09d395430159b4d0c
Author: Changli Gao <xiaosuo@gmail.com>
Date:   Sat Jun 29 00:15:51 2013 +0800

    net: Swap ver and type in pppoe_hdr
    
    [ Upstream commit b1a5a34bd0b8767ea689e68f8ea513e9710b671e ]
    
    Ver and type in pppoe_hdr should be swapped as defined by RFC2516
    section-4.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea4c218f2c3e67f1bca8078ff1f80d7e0c2ab791
Author: Dave Jones <davej@redhat.com>
Date:   Fri Jun 28 12:13:52 2013 -0400

    x25: Fix broken locking in ioctl error paths.
    
    [ Upstream commit 4ccb93ce7439b63c31bc7597bfffd13567fa483d ]
    
    Two of the x25 ioctl cases have error paths that break out of the function without
    unlocking the socket, leading to this warning:
    
    ================================================
    [ BUG: lock held when returning to user space! ]
    3.10.0-rc7+ #36 Not tainted
    ------------------------------------------------
    trinity-child2/31407 is leaving the kernel with locks still held!
    1 lock held by trinity-child2/31407:
     #0:  (sk_lock-AF_X25){+.+.+.}, at: [<ffffffffa024b6da>] x25_ioctl+0x8a/0x740 [x25]
    
    Signed-off-by: Dave Jones <davej@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac294f13d331cb3e315fd922ae505619f853818b
Author: Eric Dumazet <eric.dumazet@gmail.com>
Date:   Fri Jun 28 02:37:42 2013 -0700

    neighbour: fix a race in neigh_destroy()
    
    [ Upstream commit c9ab4d85de222f3390c67aedc9c18a50e767531e ]
    
    There is a race in neighbour code, because neigh_destroy() uses
    skb_queue_purge(&neigh->arp_queue) without holding neighbour lock,
    while other parts of the code assume neighbour rwlock is what
    protects arp_queue
    
    Convert all skb_queue_purge() calls to the __skb_queue_purge() variant
    
    Use __skb_queue_head_init() instead of skb_queue_head_init()
    to make clear we do not use arp_queue.lock
    
    And hold neigh->lock in neigh_destroy() to close the race.
    
    Reported-by: Joe Jin <joe.jin@oracle.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce08aa04215ea3309c47677f55d3b52d31d6a97a
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Thu Jun 27 22:46:04 2013 +0200

    ipv6: only apply anti-spoofing checks to not-pointopoint tunnels
    
    [ Upstream commit 5c29fb12e8fb8a8105ea048cb160fd79a85a52bb ]
    
    Because of commit 218774dc341f219bfcf940304a081b121a0e8099 ("ipv6: add
    anti-spoofing checks for 6to4 and 6rd") the sit driver dropped packets
    for 2002::/16 destinations and sources even when configured to work as a
    tunnel with fixed endpoint. We may only apply the 6rd/6to4 anti-spoofing
    checks if the device is not in pointopoint mode.
    
    This was an oversight from me in the above commit, sorry.  Thanks to
    Roman Mamedov for reporting this!
    
    Reported-by: Roman Mamedov <rm@romanrm.ru>
    Cc: David Miller <davem@davemloft.net>
    Cc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b692b29868295c504e1e9c306762aa89ab3997a2
Author: Olivier DANET <odanet@caramail.com>
Date:   Wed Jul 10 13:56:10 2013 -0700

    sparc32: vm_area_struct access for old Sun SPARCs.
    
    upstream commit 961246b4ed8da3bcf4ee1eb9147f341013553e3c.
    
    Commit e4c6bfd2d79d063017ab19a18915f0bc759f32d9 ("mm: rearrange
    vm_area_struct for fewer cache misses") changed the layout of the
    vm_area_struct structure, it broke several SPARC32 assembly routines
    which used numerical constants for accessing the vm_mm field.
    
    This patch defines the VMA_VM_MM constant to replace the immediate values.
    
    Signed-off-by: Olivier DANET <odanet@caramail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fa65e09730a2e63c5b45d008f269b2b271b74bc
Author: Jan Kara <jack@suse.cz>
Date:   Fri Jun 28 16:04:02 2013 +0200

    writeback: Fix periodic writeback after fs mount
    
    commit a5faeaf9109578e65e1a32e2a3e76c8b47e7dcb6 upstream.
    
    Code in blkdev.c moves a device inode to default_backing_dev_info when
    the last reference to the device is put and moves the device inode back
    to its bdi when the first reference is acquired. This includes moving to
    wb.b_dirty list if the device inode is dirty. The code however doesn't
    setup timer to wake corresponding flusher thread and while wb.b_dirty
    list is non-empty __mark_inode_dirty() will not set it up either. Thus
    periodic writeback is effectively disabled until a sync(2) call which can
    lead to unexpected data loss in case of crash or power failure.
    
    Fix the problem by setting up a timer for periodic writeback in case we
    add the first dirty inode to wb.b_dirty list in bdev_inode_switch_bdi().
    
    Reported-by: Bert De Jonghe <Bert.DeJonghe@amplidata.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
