commit df6062688e387419f0e10ee1bef2e9cfd7795399
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jan 13 10:03:55 2019 +0100

    Linux 4.9.150

commit b54c67cec5fa47a442bdfd5d38f67afd17f11eea
Author: Ivan Mironov <mironov.ivan@gmail.com>
Date:   Mon Dec 24 20:13:05 2018 +0500

    bnx2x: Fix NULL pointer dereference in bnx2x_del_all_vlans() on some hw
    
    commit 38355a5f9a22bfa5bd5b1bb79805aca39fa53729 upstream.
    
    This happened when I tried to boot normal Fedora 29 system with latest
    available kernel (from fedora rawhide, plus some unrelated custom
    patches):
    
            BUG: unable to handle kernel NULL pointer dereference at 0000000000000000
            PGD 0 P4D 0
            Oops: 0010 [#1] SMP PTI
            CPU: 6 PID: 1422 Comm: libvirtd Tainted: G          I       4.20.0-0.rc7.git3.hpsa2.1.fc29.x86_64 #1
            Hardware name: HP ProLiant BL460c G6, BIOS I24 05/21/2018
            RIP: 0010:          (null)
            Code: Bad RIP value.
            RSP: 0018:ffffa47ccdc9fbe0 EFLAGS: 00010246
            RAX: 0000000000000000 RBX: 00000000000003e8 RCX: ffffa47ccdc9fbf8
            RDX: ffffa47ccdc9fc00 RSI: ffff97d9ee7b01f8 RDI: ffff97d9f0150b80
            RBP: ffff97d9f0150b80 R08: 0000000000000000 R09: 0000000000000000
            R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000003
            R13: ffff97d9ef1e53e8 R14: 0000000000000009 R15: ffff97d9f0ac6730
            FS:  00007f4d224ef700(0000) GS:ffff97d9fa200000(0000) knlGS:0000000000000000
            CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
            CR2: ffffffffffffffd6 CR3: 00000011ece52006 CR4: 00000000000206e0
            Call Trace:
             ? bnx2x_chip_cleanup+0x195/0x610 [bnx2x]
             ? bnx2x_nic_unload+0x1e2/0x8f0 [bnx2x]
             ? bnx2x_reload_if_running+0x24/0x40 [bnx2x]
             ? bnx2x_set_features+0x79/0xa0 [bnx2x]
             ? __netdev_update_features+0x244/0x9e0
             ? netlink_broadcast_filtered+0x136/0x4b0
             ? netdev_update_features+0x22/0x60
             ? dev_disable_lro+0x1c/0xe0
             ? devinet_sysctl_forward+0x1c6/0x211
             ? proc_sys_call_handler+0xab/0x100
             ? __vfs_write+0x36/0x1a0
             ? rcu_read_lock_sched_held+0x79/0x80
             ? rcu_sync_lockdep_assert+0x2e/0x60
             ? __sb_start_write+0x14c/0x1b0
             ? vfs_write+0x159/0x1c0
             ? vfs_write+0xba/0x1c0
             ? ksys_write+0x52/0xc0
             ? do_syscall_64+0x60/0x1f0
             ? entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    After some investigation I figured out that recently added cleanup code
    tries to call VLAN filtering de-initialization function which exist only
    for newer hardware. Corresponding function pointer is not
    set (== 0) for older hardware, namely these chips:
    
            #define CHIP_NUM_57710                  0x164e
            #define CHIP_NUM_57711                  0x164f
            #define CHIP_NUM_57711E                 0x1650
    
    And I have one of those in my test system:
    
            Broadcom Inc. and subsidiaries NetXtreme II BCM57711E 10-Gigabit PCIe [14e4:1650]
    
    Function bnx2x_init_vlan_mac_fp_objs() from
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.h decides whether to
    initialize relevant pointers in bnx2x_sp_objs.vlan_obj or not.
    
    This regression was introduced after v4.20-rc7, and still exists in v4.20
    release.
    
    Fixes: 04f05230c5c13 ("bnx2x: Remove configured vlans as part of unload sequence.")
    Signed-off-by: Ivan Mironov <mironov.ivan@gmail.com>
    Signed-off-by: Ivan Mironov <mironov.ivan@gmail.com>
    Acked-by: Sudarsana Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 484cb974027ad7738cd222f82ebb7e526a5f6e1f
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Tue Oct 9 15:24:46 2018 +0200

    drm/vc4: Set ->is_yuv to false when num_planes == 1
    
    commit 2b02a05bdc3a62d36e0d0b015351897109e25991 upstream.
    
    When vc4_plane_state is duplicated ->is_yuv is left assigned to its
    previous value, and we never set it back to false when switching to
    a non-YUV format.
    
    Fix that by setting ->is_yuv to false in the 'num_planes == 1' branch
    of the vc4_plane_setup_clipping_and_scaling() function.
    
    Fixes: fc04023fafecf ("drm/vc4: Add support for YUV planes.")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181009132446.21960-1-boris.brezillon@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8abd786766ffae89c3a1436ba302c58dc4df41b0
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Fri Nov 16 17:23:47 2018 +0100

    power: supply: olpc_battery: correct the temperature units
    
    commit ed54ffbe554f0902689fd6d1712bbacbacd11376 upstream.
    
    According to [1] and [2], the temperature values are in tenths of degree
    Celsius. Exposing the Celsius value makes the battery appear on fire:
    
      $ upower -i /org/freedesktop/UPower/devices/battery_olpc_battery
      ...
          temperature:         236.9 degrees C
    
    Tested on OLPC XO-1 and OLPC XO-1.75 laptops.
    
    [1] include/linux/power_supply.h
    [2] Documentation/power/power_supply_class.txt
    
    Fixes: fb972873a767 ("[BATTERY] One Laptop Per Child power/battery driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fcfb8fc0f7cabdeca8e1c6cb2773e1dc2e66039
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Wed Dec 19 17:19:22 2018 +0200

    intel_th: msu: Fix an off-by-one in attribute store
    
    commit ec5b5ad6e272d8d6b92d1007f79574919862a2d2 upstream.
    
    The 'nr_pages' attribute of the 'msc' subdevices parses a comma-separated
    list of window sizes, passed from userspace. However, there is a bug in
    the string parsing logic wherein it doesn't exclude the comma character
    from the range of characters as it consumes them. This leads to an
    out-of-bounds access given a sufficiently long list. For example:
    
    > # echo 8,8,8,8 > /sys/bus/intel_th/devices/0-msc0/nr_pages
    > ==================================================================
    > BUG: KASAN: slab-out-of-bounds in memchr+0x1e/0x40
    > Read of size 1 at addr ffff8803ffcebcd1 by task sh/825
    >
    > CPU: 3 PID: 825 Comm: npktest.sh Tainted: G        W         4.20.0-rc1+
    > Call Trace:
    >  dump_stack+0x7c/0xc0
    >  print_address_description+0x6c/0x23c
    >  ? memchr+0x1e/0x40
    >  kasan_report.cold.5+0x241/0x308
    >  memchr+0x1e/0x40
    >  nr_pages_store+0x203/0xd00 [intel_th_msu]
    
    Fix this by accounting for the comma character.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Fixes: ba82664c134ef ("intel_th: Add Memory Storage Unit driver")
    Cc: stable@vger.kernel.org # v4.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49edc8313def93b56395caf09ddd56dac5843b39
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Wed Dec 12 14:45:18 2018 +0100

    genwqe: Fix size check
    
    commit fdd669684655c07dacbdb0d753fd13833de69a33 upstream.
    
    Calling the test program genwqe_cksum with the default buffer size of
    2MB triggers the following kernel warning on s390:
    
    WARNING: CPU: 30 PID: 9311 at mm/page_alloc.c:3189 __alloc_pages_nodemask+0x45c/0xbe0
    CPU: 30 PID: 9311 Comm: genwqe_cksum Kdump: loaded Not tainted 3.10.0-957.el7.s390x #1
    task: 00000005e5d13980 ti: 00000005e7c6c000 task.ti: 00000005e7c6c000
    Krnl PSW : 0704c00180000000 00000000002780ac (__alloc_pages_nodemask+0x45c/0xbe0)
               R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 EA:3
    Krnl GPRS: 00000000002932b8 0000000000b73d7c 0000000000000010 0000000000000009
               0000000000000041 00000005e7c6f9b8 0000000000000001 00000000000080d0
               0000000000000000 0000000000b70500 0000000000000001 0000000000000000
               0000000000b70528 00000000007682c0 0000000000277df2 00000005e7c6f9a0
    Krnl Code: 000000000027809e: de7195001000       ed      1280(114,%r9),0(%r1)
               00000000002780a4: a774fead           brc     7,277dfe
              #00000000002780a8: a7f40001           brc     15,2780aa
              >00000000002780ac: 92011000           mvi     0(%r1),1
               00000000002780b0: a7f4fea7           brc     15,277dfe
               00000000002780b4: 9101c6b6           tm      1718(%r12),1
               00000000002780b8: a784ff3a           brc     8,277f2c
               00000000002780bc: a7f4fe2e           brc     15,277d18
    Call Trace:
    ([<0000000000277df2>] __alloc_pages_nodemask+0x1a2/0xbe0)
     [<000000000013afae>] s390_dma_alloc+0xfe/0x310
     [<000003ff8065f362>] __genwqe_alloc_consistent+0xfa/0x148 [genwqe_card]
     [<000003ff80658f7a>] genwqe_mmap+0xca/0x248 [genwqe_card]
     [<00000000002b2712>] mmap_region+0x4e2/0x778
     [<00000000002b2c54>] do_mmap+0x2ac/0x3e0
     [<0000000000292d7e>] vm_mmap_pgoff+0xd6/0x118
     [<00000000002b081c>] SyS_mmap_pgoff+0xdc/0x268
     [<00000000002b0a34>] SyS_old_mmap+0x8c/0xb0
     [<000000000074e518>] sysc_tracego+0x14/0x1e
     [<000003ffacf87dc6>] 0x3ffacf87dc6
    
    turns out the check in __genwqe_alloc_consistent uses "> MAX_ORDER"
    while the mm code uses ">= MAX_ORDER". Fix genwqe.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Frank Haverkamp <haver@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fa22a7d5ef95048c90f6cd5f9ad7168cf976458
Author: Yan, Zheng <zyan@redhat.com>
Date:   Thu Nov 29 11:22:50 2018 +0800

    ceph: don't update importing cap's mseq when handing cap export
    
    commit 3c1392d4c49962a31874af14ae9ff289cb2b3851 upstream.
    
    Updating mseq makes client think importer mds has accepted all prior
    cap messages and importer mds knows what caps client wants. Actually
    some cap messages may have been dropped because of mseq mismatch.
    
    If mseq is left untouched, importing cap's mds_wanted later will get
    reset by cap import message.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da4b7ae4caff1cba6a1d40e99f34ab9955270068
Author: Sohil Mehta <sohil.mehta@intel.com>
Date:   Wed Nov 21 15:29:33 2018 -0800

    iommu/vt-d: Handle domain agaw being less than iommu agaw
    
    commit 3569dd07aaad71920c5ea4da2d5cc9a167c1ffd4 upstream.
    
    The Intel IOMMU driver opportunistically skips a few top level page
    tables from the domain paging directory while programming the IOMMU
    context entry. However there is an implicit assumption in the code that
    domain's adjusted guest address width (agaw) would always be greater
    than IOMMU's agaw.
    
    The IOMMU capabilities in an upcoming platform cause the domain's agaw
    to be lower than IOMMU's agaw. The issue is seen when the IOMMU supports
    both 4-level and 5-level paging. The domain builds a 4-level page table
    based on agaw of 2. However the IOMMU's agaw is set as 3 (5-level). In
    this case the code incorrectly tries to skip page page table levels.
    This causes the IOMMU driver to avoid programming the context entry. The
    fix handles this case and programs the context entry accordingly.
    
    Fixes: de24e55395698 ("iommu/vt-d: Simplify domain_context_mapping_one")
    Cc: <stable@vger.kernel.org>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Cc: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reported-by: Ramos Falcon, Ernesto R <ernesto.r.ramos.falcon@intel.com>
    Tested-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Signed-off-by: Sohil Mehta <sohil.mehta@intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 093392ecdb5ace49d26a9174ca6e8efeec1cb4bc
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Thu Oct 25 12:40:57 2018 -0700

    rxe: fix error completion wr_id and qp_num
    
    commit e48d8ed9c6193502d849b35767fd18e20bbd7ba2 upstream.
    
    Error completions must still contain a valid wr_id and
    qp_num such that the consumer can rely on. Correctly
    fill these fields in receive error completions.
    
    Reported-by: Walker Benjamin <benjamin.walker@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Zhu Yanjun <yanjun.zhu@oracle.com>
    Tested-by: Zhu Yanjun <yanjun.zhu@oracle.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00f0194cfeb90e5c16500bfe4b37f40cbc085e3e
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Mon Nov 5 09:52:48 2018 +0100

    9p/net: put a lower bound on msize
    
    commit 574d356b7a02c7e1b01a1d9cba8a26b3c2888f45 upstream.
    
    If the requested msize is too small (either from command line argument
    or from the server version reply), we won't get any work done.
    If it's *really* too small, nothing will work, and this got caught by
    syzbot recently (on a new kmem_cache_create_usercopy() call)
    
    Just set a minimum msize to 4k in both code paths, until someone
    complains they have a use-case for a smaller msize.
    
    We need to check in both mount option and server reply individually
    because the msize for the first version request would be unchecked
    with just a global check on clnt->msize.
    
    Link: http://lkml.kernel.org/r/1541407968-31350-1-git-send-email-asmadeus@codewreck.org
    Reported-by: syzbot+0c1d61e4db7db94102ca@syzkaller.appspotmail.com
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Cc: Eric Van Hensbergen <ericvh@gmail.com>
    Cc: Latchesar Ionkov <lucho@ionkov.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49edda5952ae2ba72a78dbfd24946f0d91370ccd
Author: Breno Leitao <leitao@debian.org>
Date:   Wed Nov 21 17:21:09 2018 -0200

    powerpc/tm: Set MSR[TS] just prior to recheckpoint
    
    commit e1c3743e1a20647c53b719dbf28b48f45d23f2cd upstream.
    
    On a signal handler return, the user could set a context with MSR[TS] bits
    set, and these bits would be copied to task regs->msr.
    
    At restore_tm_sigcontexts(), after current task regs->msr[TS] bits are set,
    several __get_user() are called and then a recheckpoint is executed.
    
    This is a problem since a page fault (in kernel space) could happen when
    calling __get_user(). If it happens, the process MSR[TS] bits were
    already set, but recheckpoint was not executed, and SPRs are still invalid.
    
    The page fault can cause the current process to be de-scheduled, with
    MSR[TS] active and without tm_recheckpoint() being called.  More
    importantly, without TEXASR[FS] bit set also.
    
    Since TEXASR might not have the FS bit set, and when the process is
    scheduled back, it will try to reclaim, which will be aborted because of
    the CPU is not in the suspended state, and, then, recheckpoint. This
    recheckpoint will restore thread->texasr into TEXASR SPR, which might be
    zero, hitting a BUG_ON().
    
            kernel BUG at /build/linux-sf3Co9/linux-4.9.30/arch/powerpc/kernel/tm.S:434!
            cpu 0xb: Vector: 700 (Program Check) at [c00000041f1576d0]
                pc: c000000000054550: restore_gprs+0xb0/0x180
                lr: 0000000000000000
                sp: c00000041f157950
               msr: 8000000100021033
              current = 0xc00000041f143000
              paca    = 0xc00000000fb86300   softe: 0        irq_happened: 0x01
                pid   = 1021, comm = kworker/11:1
            kernel BUG at /build/linux-sf3Co9/linux-4.9.30/arch/powerpc/kernel/tm.S:434!
            Linux version 4.9.0-3-powerpc64le (debian-kernel@lists.debian.org) (gcc version 6.3.0 20170516 (Debian 6.3.0-18) ) #1 SMP Debian 4.9.30-2+deb9u2 (2017-06-26)
            enter ? for help
            [c00000041f157b30] c00000000001bc3c tm_recheckpoint.part.11+0x6c/0xa0
            [c00000041f157b70] c00000000001d184 __switch_to+0x1e4/0x4c0
            [c00000041f157bd0] c00000000082eeb8 __schedule+0x2f8/0x990
            [c00000041f157cb0] c00000000082f598 schedule+0x48/0xc0
            [c00000041f157ce0] c0000000000f0d28 worker_thread+0x148/0x610
            [c00000041f157d80] c0000000000f96b0 kthread+0x120/0x140
            [c00000041f157e30] c00000000000c0e0 ret_from_kernel_thread+0x5c/0x7c
    
    This patch simply delays the MSR[TS] set, so, if there is any page fault in
    the __get_user() section, it does not have regs->msr[TS] set, since the TM
    structures are still invalid, thus avoiding doing TM operations for
    in-kernel exceptions and possible process reschedule.
    
    With this patch, the MSR[TS] will only be set just before recheckpointing
    and setting TEXASR[FS] = 1, thus avoiding an interrupt with TM registers in
    invalid state.
    
    Other than that, if CONFIG_PREEMPT is set, there might be a preemption just
    after setting MSR[TS] and before tm_recheckpoint(), thus, this block must
    be atomic from a preemption perspective, thus, calling
    preempt_disable/enable() on this code.
    
    It is not possible to move tm_recheckpoint to happen earlier, because it is
    required to get the checkpointed registers from userspace, with
    __get_user(), thus, the only way to avoid this undesired behavior is
    delaying the MSR[TS] set.
    
    The 32-bits signal handler seems to be safe this current issue, but, it
    might be exposed to the preemption issue, thus, disabling preemption in
    this chunk of code.
    
    Changes from v2:
     * Run the critical section with preempt_disable.
    
    Fixes: 87b4e5393af7 ("powerpc/tm: Fix return of active 64bit signals")
    Cc: stable@vger.kernel.org (v3.9+)
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e36c79c6c008971f4ad73034f3f5e39d5e9482a
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Nov 19 20:01:24 2018 +0200

    b43: Fix error in cordic routine
    
    commit 8ea3819c0bbef57a51d8abe579e211033e861677 upstream.
    
    The cordic routine for calculating sines and cosines that was added in
    commit 6f98e62a9f1b ("b43: update cordic code to match current specs")
    contains an error whereby a quantity declared u32 can in fact go negative.
    
    This problem was detected by Priit Laes who is switching b43 to use the
    routine in the library functions of the kernel.
    
    Fixes: 986504540306 ("b43: make cordic common (LP-PHY and N-PHY need it)")
    Reported-by: Priit Laes <plaes@plaes.org>
    Cc: Rafał Miłecki <zajec5@gmail.com>
    Cc: Stable <stable@vger.kernel.org> # 2.6.34
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Priit Laes <plaes@plaes.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b854c7b3c683bbf60a0ff6a5d950e89d416d07ae
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Tue Dec 4 15:06:27 2018 +0100

    gfs2: Fix loop in gfs2_rbm_find
    
    commit 2d29f6b96d8f80322ed2dd895bca590491c38d34 upstream.
    
    Fix the resource group wrap-around logic in gfs2_rbm_find that commit
    e579ed4f44 broke.  The bug can lead to unnecessary repeated scanning of the
    same bitmaps; there is a risk that future changes will turn this into an
    endless loop.
    
    Fixes: e579ed4f44 ("GFS2: Introduce rbm field bii")
    Cc: stable@vger.kernel.org # v3.13+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02b03b2c3059483156ecaa0393f040cdbe8bb1ac
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Nov 26 18:45:35 2018 +0100

    gfs2: Get rid of potential double-freeing in gfs2_create_inode
    
    commit 6ff9b09e00a441599f3aacdf577254455a048bc9 upstream.
    
    In gfs2_create_inode, after setting and releasing the acl / default_acl, the
    acl / default_acl pointers are not set to NULL as they should be.  In that
    state, when the function reaches label fail_free_acls, gfs2_create_inode will
    try to release the same acls again.
    
    Fix that by setting the pointers to NULL after releasing the acls.  Slightly
    simplify the logic.  Also, posix_acl_release checks for NULL already, so
    there is no need to duplicate those checks here.
    
    Fixes: e01580bf9e4d ("gfs2: use generic posix ACL infrastructure")
    Reported-by: Pan Bian <bianpan2016@163.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: stable@vger.kernel.org # v4.9+
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 579d0aacc4f58a8aa83d5762895ed80dc6775bfc
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Nov 15 13:18:56 2018 +0300

    dlm: memory leaks on error path in dlm_user_request()
    
    commit d47b41aceeadc6b58abc9c7c6485bef7cfb75636 upstream.
    
    According to comment in dlm_user_request() ua should be freed
    in dlm_free_lkb() after successful attach to lkb.
    
    However ua is attached to lkb not in set_lock_args() but later,
    inside request_lock().
    
    Fixes 597d0cae0f99 ("[DLM] dlm: user locks")
    Cc: stable@kernel.org # 2.6.19
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f090eb97008318eb3dbf53aa4cde990f547ac69
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Nov 15 13:18:24 2018 +0300

    dlm: lost put_lkb on error path in receive_convert() and receive_unlock()
    
    commit c0174726c3976e67da8649ac62cae43220ae173a upstream.
    
    Fixes 6d40c4a708e0 ("dlm: improve error and debug messages")
    Cc: stable@kernel.org # 3.5
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e28e1e18dbdcb3e351962f0c09c03e2a58dba44
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Nov 15 13:18:18 2018 +0300

    dlm: possible memory leak on error path in create_lkb()
    
    commit 23851e978f31eda8b2d01bd410d3026659ca06c7 upstream.
    
    Fixes 3d6aa675fff9 ("dlm: keep lkbs in idr")
    Cc: stable@kernel.org # 3.1
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dbe8ebf8a9c7b0014e1bfcc1a2159b212767ff5
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Nov 15 13:15:05 2018 +0300

    dlm: fixed memory leaks after failed ls_remove_names allocation
    
    commit b982896cdb6e6a6b89d86dfb39df489d9df51e14 upstream.
    
    If allocation fails on last elements of array need to free already
    allocated elements.
    
    v2: just move existing out_rsbtbl label to right place
    
    Fixes 789924ba635f ("dlm: fix race between remove and lookup")
    Cc: stable@kernel.org # 3.6
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46f5376ca672326bd088149ffaff256c5354b09c
Author: Hui Peng <benquike@163.com>
Date:   Tue Dec 25 18:11:52 2018 -0500

    ALSA: usb-audio: Fix an out-of-bound read in create_composite_quirks
    
    commit cbb2ebf70daf7f7d97d3811a2ff8e39655b8c184 upstream.
    
    In `create_composite_quirk`, the terminating condition of for loops is
    `quirk->ifnum < 0`. So any composite quirks should end with `struct
    snd_usb_audio_quirk` object with ifnum < 0.
    
        for (quirk = quirk_comp->data; quirk->ifnum >= 0; ++quirk) {
    
            .....
        }
    
    the data field of Bower's & Wilkins PX headphones usb device device quirks
    do not end with {.ifnum = -1}, wihch may result in out-of-bound read.
    
    This Patch fix the bug by adding an ending quirk object.
    
    Fixes: 240a8af929c7 ("ALSA: usb-audio: Add a quirck for B&W PX headphones")
    Signed-off-by: Hui Peng <benquike@163.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beab6f305f4f271caa500170d7fed1d2bda6ea88
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 19 12:36:27 2018 +0100

    ALSA: usb-audio: Avoid access before bLength check in build_audio_procunit()
    
    commit f4351a199cc120ff9d59e06d02e8657d08e6cc46 upstream.
    
    The parser for the processing unit reads bNrInPins field before the
    bLength sanity check, which may lead to an out-of-bound access when a
    malformed descriptor is given.  Fix it by assignment after the bLength
    check.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cdad05eb6f773be68ae6b2686f933033b80f5a4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jan 8 10:43:30 2019 +0300

    ALSA: cs46xx: Potential NULL dereference in probe
    
    commit 1524f4e47f90b27a3ac84efbdd94c63172246a6f upstream.
    
    The "chip->dsp_spos_instance" can be NULL on some of the ealier error
    paths in snd_cs46xx_create().
    
    Reported-by: "Yavuz, Tuba" <tuba@ece.ufl.edu>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbf1c67c19b589312e5d91a549c5ef347e1112fa
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Wed Nov 28 10:19:36 2018 -0800

    IB/hfi1: Incorrect sizing of sge for PIO will OOPs
    
    commit dbc2970caef74e8ff41923d302aa6fb5a4812d0e upstream.
    
    An incorrect sge sizing in the HFI PIO path will cause an OOPs similar to
    this:
    
    BUG: unable to handle kernel NULL pointer dereference at (null)
    IP: [] hfi1_verbs_send_pio+0x3d8/0x530 [hfi1]
    PGD 0
    Oops: 0000 1 SMP
     Call Trace:
     ? hfi1_verbs_send_dma+0xad0/0xad0 [hfi1]
     hfi1_verbs_send+0xdf/0x250 [hfi1]
     ? make_rc_ack+0xa80/0xa80 [hfi1]
     hfi1_do_send+0x192/0x430 [hfi1]
     hfi1_do_send_from_rvt+0x10/0x20 [hfi1]
     rvt_post_send+0x369/0x820 [rdmavt]
     ib_uverbs_post_send+0x317/0x570 [ib_uverbs]
     ib_uverbs_write+0x26f/0x420 [ib_uverbs]
     ? security_file_permission+0x21/0xa0
     vfs_write+0xbd/0x1e0
     ? mntput+0x24/0x40
     SyS_write+0x7f/0xe0
     system_call_fastpath+0x16/0x1b
    
    Fix by adding the missing sizing check to correctly determine the sge
    length.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 258d8549b55e2cd5d73d9ff3d18b39aeeab08e1f
Author: Stefan Hajnoczi <stefanha@redhat.com>
Date:   Thu Nov 9 13:29:10 2017 +0000

    vhost/vsock: fix uninitialized vhost_vsock->guest_cid
    
    commit a72b69dc083a931422cc8a5e33841aff7d5312f2 upstream.
    
    The vhost_vsock->guest_cid field is uninitialized when /dev/vhost-vsock
    is opened until the VHOST_VSOCK_SET_GUEST_CID ioctl is called.
    
    kvmalloc(..., GFP_KERNEL | __GFP_RETRY_MAYFAIL) does not zero memory.
    All other vhost_vsock fields are initialized explicitly so just
    initialize this field too.
    
    Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Cc: Daniel Verkamp <dverkamp@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce8ca305b49b3e6f3c495c3fbc31665f4eb0b9fd
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jan 7 15:15:59 2019 -0800

    crypto: x86/chacha20 - avoid sleeping with preemption disabled
    
    In chacha20-simd, clear the MAY_SLEEP flag in the blkcipher_desc to
    prevent sleeping with preemption disabled, under kernel_fpu_begin().
    
    This was fixed upstream incidentally by a large refactoring,
    commit 9ae433bc79f9 ("crypto: chacha20 - convert generic and x86
    versions to skcipher").  But syzkaller easily trips over this when
    running on older kernels, as it's easily reachable via AF_ALG.
    Therefore, this patch makes the minimal fix for older kernels.
    
    Fixes: c9320b6dcb89 ("crypto: chacha20 - Add a SSSE3 SIMD variant for x86_64")
    Cc: linux-crypto@vger.kernel.org
    Cc: Martin Willi <martin@strongswan.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f12e01b3c64d89b86714d7f591b8e45dc47192af
Author: Paul Burton <paulburton@kernel.org>
Date:   Thu Dec 20 17:45:43 2018 +0000

    MIPS: math-emu: Write-protect delay slot emulation pages
    
    commit adcc81f148d733b7e8e641300c5590a2cdc13bf3 upstream.
    
    Mapping the delay slot emulation page as both writeable & executable
    presents a security risk, in that if an exploit can write to & jump into
    the page then it can be used as an easy way to execute arbitrary code.
    
    Prevent this by mapping the page read-only for userland, and using
    access_process_vm() with the FOLL_FORCE flag to write to it from
    mips_dsemul().
    
    This will likely be less efficient due to copy_to_user_page() performing
    cache maintenance on a whole page, rather than a single line as in the
    previous use of flush_cache_sigtramp(). However this delay slot
    emulation code ought not to be running in any performance critical paths
    anyway so this isn't really a problem, and we can probably do better in
    copy_to_user_page() anyway in future.
    
    A major advantage of this approach is that the fix is small & simple to
    backport to stable kernels.
    
    Reported-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 432c6bacbd0c ("MIPS: Use per-mm page to execute branch delay slot instructions")
    Cc: stable@vger.kernel.org # v4.8+
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: Rich Felker <dalias@libc.org>
    Cc: David Daney <david.daney@cavium.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4faef7aee9a922be4f6c871a6afcf6f5ea886542
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Mon Dec 24 14:44:42 2018 +0300

    sunrpc: use SVC_NET() in svcauth_gss_* functions
    
    commit b8be5674fa9a6f3677865ea93f7803c4212f3e10 upstream.
    
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9369b7dd1019a5904978227e51cd4c78b01a92c8
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Wed Nov 28 11:45:57 2018 +0300

    sunrpc: fix cache_head leak due to queued request
    
    commit 4ecd55ea074217473f94cfee21bb72864d39f8d7 upstream.
    
    After commit d202cce8963d, an expired cache_head can be removed from the
    cache_detail's hash.
    
    However, the expired cache_head may be waiting for a reply from a
    previously submitted request. Such a cache_head has an increased
    refcounter and therefore it won't be freed after cache_put(freeme).
    
    Because the cache_head was removed from the hash it cannot be found
    during cache_clean() and can be leaked forever, together with stalled
    cache_request and other taken resources.
    
    In our case we noticed it because an entry in the export cache was
    holding a reference on a filesystem.
    
    Fixes d202cce8963d ("sunrpc: never return expired entries in sunrpc_cache_lookup")
    Cc: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Cc: stable@kernel.org # 2.6.35
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: NeilBrown <neilb@suse.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 298cf9b3308cfc6f3ab6c7a29b2d3df9e85cfe91
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Dec 28 00:34:54 2018 -0800

    mm, devm_memremap_pages: kill mapping "System RAM" support
    
    commit 06489cfbd915ff36c8e36df27f1c2dc60f97ca56 upstream.
    
    Given the fact that devm_memremap_pages() requires a percpu_ref that is
    torn down by devm_memremap_pages_release() the current support for mapping
    RAM is broken.
    
    Support for remapping "System RAM" has been broken since the beginning and
    there is no existing user of this this code path, so just kill the support
    and make it an explicit error.
    
    This cleanup also simplifies a follow-on patch to fix the error path when
    setting a devm release action for devm_memremap_pages_release() fails.
    
    Link: http://lkml.kernel.org/r/154275557997.76910.14689813630968180480.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: "Jérôme Glisse" <jglisse@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f62cf80a309fd7aa0d6bfe90157ecbf12cd060b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Dec 28 00:34:50 2018 -0800

    mm, devm_memremap_pages: mark devm_memremap_pages() EXPORT_SYMBOL_GPL
    
    commit 808153e1187fa77ac7d7dad261ff476888dcf398 upstream.
    
    devm_memremap_pages() is a facility that can create struct page entries
    for any arbitrary range and give drivers the ability to subvert core
    aspects of page management.
    
    Specifically the facility is tightly integrated with the kernel's memory
    hotplug functionality.  It injects an altmap argument deep into the
    architecture specific vmemmap implementation to allow allocating from
    specific reserved pages, and it has Linux specific assumptions about page
    structure reference counting relative to get_user_pages() and
    get_user_pages_fast().  It was an oversight and a mistake that this was
    not marked EXPORT_SYMBOL_GPL from the outset.
    
    Again, devm_memremap_pagex() exposes and relies upon core kernel internal
    assumptions and will continue to evolve along with 'struct page', memory
    hotplug, and support for new memory types / topologies.  Only an in-kernel
    GPL-only driver is expected to keep up with this ongoing evolution.  This
    interface, and functionality derived from this interface, is not suitable
    for kernel-external drivers.
    
    Link: http://lkml.kernel.org/r/154275557457.76910.16923571232582744134.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: "Jérôme Glisse" <jglisse@redhat.com>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Logan Gunthorpe <logang@deltatee.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb1206e85df291fefde27401190329e26996c54c
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Dec 28 00:38:01 2018 -0800

    hwpoison, memory_hotplug: allow hwpoisoned pages to be offlined
    
    commit b15c87263a69272423771118c653e9a1d0672caa upstream.
    
    We have received a bug report that an injected MCE about faulty memory
    prevents memory offline to succeed on 4.4 base kernel.  The underlying
    reason was that the HWPoison page has an elevated reference count and the
    migration keeps failing.  There are two problems with that.  First of all
    it is dubious to migrate the poisoned page because we know that accessing
    that memory is possible to fail.  Secondly it doesn't make any sense to
    migrate a potentially broken content and preserve the memory corruption
    over to a new location.
    
    Oscar has found out that 4.4 and the current upstream kernels behave
    slightly differently with his simply testcase
    
    ===
    
    int main(void)
    {
            int ret;
            int i;
            int fd;
            char *array = malloc(4096);
            char *array_locked = malloc(4096);
    
            fd = open("/tmp/data", O_RDONLY);
            read(fd, array, 4095);
    
            for (i = 0; i < 4096; i++)
                    array_locked[i] = 'd';
    
            ret = mlock((void *)PAGE_ALIGN((unsigned long)array_locked), sizeof(array_locked));
            if (ret)
                    perror("mlock");
    
            sleep (20);
    
            ret = madvise((void *)PAGE_ALIGN((unsigned long)array_locked), 4096, MADV_HWPOISON);
            if (ret)
                    perror("madvise");
    
            for (i = 0; i < 4096; i++)
                    array_locked[i] = 'd';
    
            return 0;
    }
    ===
    
    + offline this memory.
    
    In 4.4 kernels he saw the hwpoisoned page to be returned back to the LRU
    list
    kernel:  [<ffffffff81019ac9>] dump_trace+0x59/0x340
    kernel:  [<ffffffff81019e9a>] show_stack_log_lvl+0xea/0x170
    kernel:  [<ffffffff8101ac71>] show_stack+0x21/0x40
    kernel:  [<ffffffff8132bb90>] dump_stack+0x5c/0x7c
    kernel:  [<ffffffff810815a1>] warn_slowpath_common+0x81/0xb0
    kernel:  [<ffffffff811a275c>] __pagevec_lru_add_fn+0x14c/0x160
    kernel:  [<ffffffff811a2eed>] pagevec_lru_move_fn+0xad/0x100
    kernel:  [<ffffffff811a334c>] __lru_cache_add+0x6c/0xb0
    kernel:  [<ffffffff81195236>] add_to_page_cache_lru+0x46/0x70
    kernel:  [<ffffffffa02b4373>] extent_readpages+0xc3/0x1a0 [btrfs]
    kernel:  [<ffffffff811a16d7>] __do_page_cache_readahead+0x177/0x200
    kernel:  [<ffffffff811a18c8>] ondemand_readahead+0x168/0x2a0
    kernel:  [<ffffffff8119673f>] generic_file_read_iter+0x41f/0x660
    kernel:  [<ffffffff8120e50d>] __vfs_read+0xcd/0x140
    kernel:  [<ffffffff8120e9ea>] vfs_read+0x7a/0x120
    kernel:  [<ffffffff8121404b>] kernel_read+0x3b/0x50
    kernel:  [<ffffffff81215c80>] do_execveat_common.isra.29+0x490/0x6f0
    kernel:  [<ffffffff81215f08>] do_execve+0x28/0x30
    kernel:  [<ffffffff81095ddb>] call_usermodehelper_exec_async+0xfb/0x130
    kernel:  [<ffffffff8161c045>] ret_from_fork+0x55/0x80
    
    And that latter confuses the hotremove path because an LRU page is
    attempted to be migrated and that fails due to an elevated reference
    count.  It is quite possible that the reuse of the HWPoisoned page is some
    kind of fixed race condition but I am not really sure about that.
    
    With the upstream kernel the failure is slightly different.  The page
    doesn't seem to have LRU bit set but isolate_movable_page simply fails and
    do_migrate_range simply puts all the isolated pages back to LRU and
    therefore no progress is made and scan_movable_pages finds same set of
    pages over and over again.
    
    Fix both cases by explicitly checking HWPoisoned pages before we even try
    to get reference on the page, try to unmap it if it is still mapped.  As
    explained by Naoya:
    
    : Hwpoison code never unmapped those for no big reason because
    : Ksm pages never dominate memory, so we simply didn't have strong
    : motivation to save the pages.
    
    Also put WARN_ON(PageLRU) in case there is a race and we can hit LRU
    HWPoison pages which shouldn't happen but I couldn't convince myself about
    that.  Naoya has noted the following:
    
    : Theoretically no such gurantee, because try_to_unmap() doesn't have a
    : guarantee of success and then memory_failure() returns immediately
    : when hwpoison_user_mappings fails.
    : Or the following code (comes after hwpoison_user_mappings block) also impli=
    : es
    : that the target page can still have PageLRU flag.
    :
    :         /*
    :          * Torn down by someone else?
    :          */
    :         if (PageLRU(p) && !PageSwapCache(p) && p->mapping =3D=3D NULL) {
    :                 action_result(pfn, MF_MSG_TRUNCATED_LRU, MF_IGNORED);
    :                 res =3D -EBUSY;
    :                 goto out;
    :         }
    :
    : So I think it's OK to keep "if (WARN_ON(PageLRU(page)))" block in
    : current version of your patch.
    
    Link: http://lkml.kernel.org/r/20181206120135.14079-1-mhocko@kernel.org
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.com>
    Debugged-by: Oscar Salvador <osalvador@suse.com>
    Tested-by: Oscar Salvador <osalvador@suse.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ea6030b555803b9c565e0471c94648fe2a4bda7
Author: David Herrmann <dh.herrmann@gmail.com>
Date:   Tue Jan 8 13:58:52 2019 +0100

    fork: record start_time late
    
    commit 7b55851367136b1efd84d98fea81ba57a98304cf upstream.
    
    This changes the fork(2) syscall to record the process start_time after
    initializing the basic task structure but still before making the new
    process visible to user-space.
    
    Technically, we could record the start_time anytime during fork(2).  But
    this might lead to scenarios where a start_time is recorded long before
    a process becomes visible to user-space.  For instance, with
    userfaultfd(2) and TLS, user-space can delay the execution of fork(2)
    for an indefinite amount of time (and will, if this causes network
    access, or similar).
    
    By recording the start_time late, it much closer reflects the point in
    time where the process becomes live and can be observed by other
    processes.
    
    Lastly, this makes it much harder for user-space to predict and control
    the start_time they get assigned.  Previously, user-space could fork a
    process and stall it in copy_thread_tls() before its pid is allocated,
    but after its start_time is recorded.  This can be misused to later-on
    cycle through PIDs and resume the stalled fork(2) yielding a process
    that has the same pid and start_time as a process that existed before.
    This can be used to circumvent security systems that identify processes
    by their pid+start_time combination.
    
    Even though user-space was always aware that start_time recording is
    flaky (but several projects are known to still rely on start_time-based
    identification), changing the start_time to be recorded late will help
    mitigate existing attacks and make it much harder for user-space to
    control the start_time a process gets assigned.
    
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Tom Gundersen <teg@jklm.no>
    Signed-off-by: David Herrmann <dh.herrmann@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90b7f94812437be10cc3e81bfa10e6c9b6a2e5e2
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Wed Jan 9 15:17:09 2019 +0100

    libceph: fix CEPH_FEATURE_CEPHX_V2 check in calc_signature()
    
    Upstream commit cc255c76c70f ("libceph: implement CEPHX_V2 calculation
    mode") was adjusted incorrectly: CEPH_FEATURE_CEPHX_V2 if condition got
    inverted, thus breaking 4.9.144 and later kernels for all setups that
    use cephx.
    
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>

commit 5d1a7cebad586a3194b1e32240c280769d9494ed
Author: Steffen Maier <maier@linux.ibm.com>
Date:   Thu Dec 6 17:31:20 2018 +0100

    scsi: zfcp: fix posting too many status read buffers leading to adapter shutdown
    
    commit 60a161b7e5b2a252ff0d4c622266a7d8da1120ce upstream.
    
    Suppose adapter (open) recovery is between opened QDIO queues and before
    (the end of) initial posting of status read buffers (SRBs). This time
    window can be seconds long due to FSF_PROT_HOST_CONNECTION_INITIALIZING
    causing by design looping with exponential increase sleeps in the function
    performing exchange config data during recovery
    [zfcp_erp_adapter_strat_fsf_xconf()]. Recovery triggered by local link up.
    
    Suppose an event occurs for which the FCP channel would send an unsolicited
    notification to zfcp by means of a previously posted SRB.  We saw it with
    local cable pull (link down) in multi-initiator zoning with multiple
    NPIV-enabled subchannels of the same shared FCP channel.
    
    As soon as zfcp_erp_adapter_strategy_open_fsf() starts posting the initial
    status read buffers from within the adapter's ERP thread, the channel does
    send an unsolicited notification.
    
    Since v2.6.27 commit d26ab06ede83 ("[SCSI] zfcp: receiving an unsolicted
    status can lead to I/O stall"), zfcp_fsf_status_read_handler() schedules
    adapter->stat_work to re-fill the just consumed SRB from a work item.
    
    Now the ERP thread and the work item post SRBs in parallel.  Both contexts
    call the helper function zfcp_status_read_refill().  The tracking of
    missing (to be posted / re-filled) SRBs is not thread-safe due to separate
    atomic_read() and atomic_dec(), in order to depend on posting
    success. Hence, both contexts can see
    atomic_read(&adapter->stat_miss) == 1. One of the two contexts posts
    one too many SRB. Zfcp gets QDIO_ERROR_SLSB_STATE on the output queue
    (trace tag "qdireq1") leading to zfcp_erp_adapter_shutdown() in
    zfcp_qdio_handler_error().
    
    An obvious and seemingly clean fix would be to schedule stat_work from the
    ERP thread and wait for it to finish. This would serialize all SRB
    re-fills. However, we already have another work item wait on the ERP
    thread: adapter->scan_work runs zfcp_fc_scan_ports() which calls
    zfcp_fc_eval_gpn_ft(). The latter calls zfcp_erp_wait() to wait for all the
    open port recoveries during zfcp auto port scan, but in fact it waits for
    any pending recovery including an adapter recovery. This approach leads to
    a deadlock.  [see also v3.19 commit 18f87a67e6d6 ("zfcp: auto port scan
    resiliency"); v2.6.37 commit d3e1088d6873
    ("[SCSI] zfcp: No ERP escalation on gpn_ft eval");
    v2.6.28 commit fca55b6fb587
    ("[SCSI] zfcp: fix deadlock between wq triggered port scan and ERP")
    fixing v2.6.27 commit c57a39a45a76
    ("[SCSI] zfcp: wait until adapter is finished with ERP during auto-port");
    v2.6.27 commit cc8c282963bd
    ("[SCSI] zfcp: Automatically attach remote ports")]
    
    Instead make the accounting of missing SRBs atomic for parallel execution
    in both the ERP thread and adapter->stat_work.
    
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Fixes: d26ab06ede83 ("[SCSI] zfcp: receiving an unsolicted status can lead to I/O stall")
    Cc: <stable@vger.kernel.org> #2.6.27+
    Reviewed-by: Jens Remus <jremus@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ebaa4f2e66b2570276a83fc990a728dc6a4621e
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 12 11:01:45 2018 -0500

    serial/sunsu: fix refcount leak
    
    [ Upstream commit d430aff8cd0c57502d873909c184e3b5753f8b88 ]
    
    The function of_find_node_by_path() acquires a reference to the node
    returned by it and that reference needs to be dropped by its caller.
    
    su_get_type() doesn't do that. The match node are used as an identifier
    to compare against the current node, so we can directly drop the refcount
    after getting the node from the path as it is not used as pointer.
    
    Fix this by use a single variable and drop the refcount right after
    of_find_node_by_path().
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 154b7716f9aaf55a8307e464069d25cf5830f6e3
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Fri Dec 21 00:22:32 2018 -0600

    net: netxen: fix a missing check and an uninitialized use
    
    [ Upstream commit d134e486e831defd26130770181f01dfc6195f7d ]
    
    When netxen_rom_fast_read() fails, "bios" is left uninitialized and may
    contain random value, thus should not be used.
    
    The fix ensures that if netxen_rom_fast_read() fails, we return "-EIO".
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d036c3ad4bcb100b98640e78ee2fd5f9ec634f0
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Dec 18 15:19:47 2018 +0000

    vxge: ensure data0 is initialized in when fetching firmware version information
    
    [ Upstream commit f7db2beb4c2c6cc8111f5ab90fc7363ca91107b6 ]
    
    Currently variable data0 is not being initialized so a garbage value is
    being passed to vxge_hw_vpath_fw_api and this value is being written to
    the rts_access_steer_data0 register.  There are other occurrances where
    data0 is being initialized to zero (e.g. in function
    vxge_hw_upgrade_read_version) so I think it makes sense to ensure data0
    is initialized likewise to 0.
    
    Detected by CoverityScan, CID#140696 ("Uninitialized scalar variable")
    
    Fixes: 8424e00dfd52 ("vxge: serialize access to steering control register")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 253b944c159828045aa9d290a4a72da3c81b173f
Author: Jason Martinsen <jasonmartinsen@msn.com>
Date:   Tue Dec 18 05:38:22 2018 +0000

    lan78xx: Resolve issue with changing MAC address
    
    [ Upstream commit 15515aaaa69659c502003926a2067ee76176148a ]
    
    Current state for the lan78xx driver does not allow for changing the
    MAC address of the interface, without either removing the module (if
    you compiled it that way) or rebooting the machine.  If you attempt to
    change the MAC address, ifconfig will show the new address, however,
    the system/interface will not respond to any traffic using that
    configuration.  A few short-term options to work around this are to
    unload the module and reload it with the new MAC address, change the
    interface to "promisc", or reboot with the correct configuration to
    change the MAC.
    
    This patch enables the ability to change the MAC address via fairly normal means...
    ifdown <interface>
    modify entry in /etc/network/interfaces OR a similar method
    ifup <interface>
    Then test via any network communication, such as ICMP requests to gateway.
    
    My only test platform for this patch has been a raspberry pi model 3b+.
    
    Signed-off-by: Jason Martinsen <jasonmartinsen@msn.com>
    
    -----
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b464ecc3eeab0b6932cec9b8cc5f7778ace52ba
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Dec 17 17:38:51 2018 -0500

    SUNRPC: Fix a race with XPRT_CONNECTING
    
    [ Upstream commit cf76785d30712d90185455e752337acdb53d2a5d ]
    
    Ensure that we clear XPRT_CONNECTING before releasing the XPRT_LOCK so that
    we don't have races between the (asynchronous) socket setup code and
    tasks in xprt_connect().
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Tested-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f2c31043c4400bebce2f418771bc8384fe6da03
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:28 2018 +0800

    net: hns: Add mac pcs config when enable|disable mac
    
    [ Upstream commit 726ae5c9e5f0c18eca8ea5296b526242c3e89822 ]
    
    In some case, when mac enable|disable and adjust link, may cause hard to
    link(or abnormal) between mac and phy. This patch adds the code for rx PCS
    to avoid this bug.
    
    Disable the rx PCS when driver disable the gmac, and enable the rx PCS
    when driver enable the mac.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3c9031136837178875f05d55760e1a71a62b965
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:27 2018 +0800

    net: hns: Fix ntuple-filters status error.
    
    [ Upstream commit 7e74a19ca522aec7c2be201a7ae1d1d57ded409b ]
    
    The ntuple-filters features is forced on by chip.
    But it shows "ntuple-filters: off [fixed]" when use ethtool.
    This patch make it correct with "ntuple-filters: on [fixed]".
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f603000560ef599e31dd2ffb5cfeb706f8b9388
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:26 2018 +0800

    net: hns: Avoid net reset caused by pause frames storm
    
    [ Upstream commit a57275d35576fdd89d8c771eedf1e7cf97e0dfa6 ]
    
    There will be a large number of MAC pause frames on the net,
    which caused tx timeout of net device. And then the net device
    was reset to try to recover it. So that is not useful, and will
    cause some other problems.
    
    So need doubled ndev->watchdog_timeo if device watchdog occurred
    until watchdog_timeo up to 40s and then try resetting to recover
    it.
    
    When collecting dfx information such as hardware registers when tx timeout.
    Some registers for count were cleared when read. So need move this task
    before update net state which also read the count registers.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03b2d56bda1eaee55fd8f80e4308eb7f6a29b49d
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:25 2018 +0800

    net: hns: Free irq when exit from abnormal branch
    
    [ Upstream commit c82bd077e1ba3dd586569c733dc6d3dd4b0e43cd ]
    
    1.In "hns_nic_init_irq", if request irq fail at index i,
      the function return directly without releasing irq resources
      that already requested.
    
    2.In "hns_nic_net_up" after "hns_nic_init_irq",
      if exceptional branch occurs, irqs that already requested
      are not release.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2a11c3dc459e5940eed4f2691b90bd9276051cf
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:24 2018 +0800

    net: hns: Clean rx fbd when ae stopped.
    
    [ Upstream commit 31f6b61d810654fb3ef43f4d8afda0f44b142fad ]
    
    If there are packets in hardware when changing the speed or duplex,
    it may cause hardware hang up.
    
    This patch adds the code to wait rx fbd clean up when ae stopped.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d6bde50667d655601d915a9ec534b7694e566bd
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:23 2018 +0800

    net: hns: Fixed bug that netdev was opened twice
    
    [ Upstream commit 5778b13b64eca5549d242686f2f91a2c80c8fa40 ]
    
    After resetting dsaf to try to repair chip error such as ecc error,
    the net device will be open if net interface is up. But at this time
    if there is the users set the net device up with the command ifconfig,
    the net device will be opened twice consecutively.
    
    Function napi_enable was called when open device. And Kernel panic will
    be occurred if it was called twice consecutively. Such as follow:
    static inline void napi_enable(struct napi_struct *n)
    {
             BUG_ON(!test_bit(NAPI_STATE_SCHED, &n->state));
             smp_mb__before_clear_bit();
             clear_bit(NAPI_STATE_SCHED, &n->state);
    }
    
    [37255.571996] Kernel panic - not syncing: BUG!
    [37255.595234] Call trace:
    [37255.597694] [<ffff80000008ab48>] dump_backtrace+0x0/0x1a0
    [37255.603114] [<ffff80000008ad08>] show_stack+0x20/0x28
    [37255.608187] [<ffff8000009c4944>] dump_stack+0x98/0xb8
    [37255.613258] [<ffff8000009c149c>] panic+0x10c/0x26c
    [37255.618070] [<ffff80000070f134>] hns_nic_net_up+0x30c/0x4e0
    [37255.623664] [<ffff80000070f39c>] hns_nic_net_open+0x94/0x12c
    [37255.629346] [<ffff80000084be78>] __dev_open+0xf4/0x168
    [37255.634504] [<ffff80000084c1ac>] __dev_change_flags+0x98/0x15c
    [37255.640359] [<ffff80000084c29c>] dev_change_flags+0x2c/0x68
    [37255.769580] [<ffff8000008dc400>] devinet_ioctl+0x650/0x704
    [37255.775086] [<ffff8000008ddc38>] inet_ioctl+0x98/0xb4
    [37255.780159] [<ffff800000827b7c>] sock_do_ioctl+0x44/0x84
    [37255.785490] [<ffff800000828e04>] sock_ioctl+0x248/0x30c
    [37255.790737] [<ffff80000026dc6c>] do_vfs_ioctl+0x480/0x618
    [37255.796156] [<ffff80000026de94>] SyS_ioctl+0x90/0xa4
    [37255.801139] SMP: stopping secondary CPUs
    [37255.805079] kbox: catch panic event.
    [37255.809586] collected_len = 128928, LOG_BUF_LEN_LOCAL = 131072
    [37255.816103] flush cache 0xffff80003f000000  size 0x800000
    [37255.822192] flush cache 0xffff80003f000000  size 0x800000
    [37255.828289] flush cache 0xffff80003f000000  size 0x800000
    [37255.834378] kbox: no notify die func register. no need to notify
    [37255.840413] ---[ end Kernel panic - not syncing: BUG!
    
    This patchset fix this bug according to the flag NIC_STATE_DOWN.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf27509b03d957a6228719abd362b482089ea31d
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:22 2018 +0800

    net: hns: Some registers use wrong address according to the datasheet.
    
    [ Upstream commit 4ad26f117b6ea0f5d5f1592127bafb5ec65904d3 ]
    
    According to the hip06 datasheet:
    1.Six registers use wrong address:
      RCB_COM_SF_CFG_INTMASK_RING
      RCB_COM_SF_CFG_RING_STS
      RCB_COM_SF_CFG_RING
      RCB_COM_SF_CFG_INTMASK_BD
      RCB_COM_SF_CFG_BD_RINT_STS
      DSAF_INODE_VC1_IN_PKT_NUM_0_REG
    2.The offset of DSAF_INODE_VC1_IN_PKT_NUM_0_REG should be
      0x103C + 0x80 * all_chn_num
    3.The offset to show the value of DSAF_INODE_IN_DATA_STP_DISC_0_REG
      is wrong, so the value of DSAF_INODE_SW_VLAN_TAG_DISC_0_REG will be
      overwrite
    
    These registers are only used in "ethtool -d", so that did not cause ndev
    to misfunction.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f079768d690c966800a4fa40e7f5becd0b0fb184
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:21 2018 +0800

    net: hns: All ports can not work when insmod hns ko after rmmod.
    
    [ Upstream commit 308c6cafde0147616da45e3a928adae55c428deb ]
    
    There are two test cases:
    1. Remove the 4 modules:hns_enet_drv/hns_dsaf/hnae/hns_mdio,
       and install them again, must use "ifconfig down/ifconfig up"
       command pair to bring port to work.
    
       This patch calls phy_stop function when init phy to fix this bug.
    
    2. Remove the 2 modules:hns_enet_drv/hns_dsaf, and install them again,
       all ports can not use anymore, because of the phy devices register
       failed(phy devices already exists).
    
       Phy devices are registered when hns_dsaf installed, this patch
       removes them when hns_dsaf removed.
    
    The two cases are sometimes related, fixing the second case also requires
    fixing the first case, so fix them together.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4cb69d23c2777c46999dcf2af7ac75718584e96
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Sat Dec 15 11:53:20 2018 +0800

    net: hns: Incorrect offset address used for some registers.
    
    [ Upstream commit 4e1d4be681b2c26fd874adbf584bf034573ac45d ]
    
    According to the hip06 Datasheet:
    1. The offset of INGRESS_SW_VLAN_TAG_DISC should be 0x1A00+4*all_chn_num
    2. The offset of INGRESS_IN_DATA_STP_DISC should be 0x1A50+4*all_chn_num
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 225219d7edf8dbdac1b9a1daac5c06550f1dc7e7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Dec 10 21:45:07 2018 +0100

    w90p910_ether: remove incorrect __init annotation
    
    [ Upstream commit 51367e423c6501a26e67d91a655d2bc892303462 ]
    
    The get_mac_address() function is normally inline, but when it is
    not, we get a warning that this configuration is broken:
    
    WARNING: vmlinux.o(.text+0x4aff00): Section mismatch in reference from the function w90p910_ether_setup() to the function .init.text:get_mac_address()
    The function w90p910_ether_setup() references
    the function __init get_mac_address().
    This is often because w90p910_ether_setup lacks a __init
    
    Remove the __init to make it always do the right thing.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec3947acec298aecb4a4e8f61ab00d35d33ddb2a
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Dec 10 21:20:30 2018 -0700

    drivers: net: xgene: Remove unnecessary forward declarations
    
    [ Upstream commit 2ab4c3426c0cf711d7147e3f559638e4ab88960e ]
    
    Clang warns:
    
    drivers/net/ethernet/apm/xgene/xgene_enet_main.c:33:36: warning:
    tentative array definition assumed to have one element
    static const struct acpi_device_id xgene_enet_acpi_match[];
                                       ^
    1 warning generated.
    
    Both xgene_enet_acpi_match and xgene_enet_of_match are defined before
    their uses at the bottom of the file so this is unnecessary. When
    CONFIG_ACPI is disabled, ACPI_PTR becomes NULL so xgene_enet_acpi_match
    doesn't need to be defined.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb7bd2fdb6b0b160c1c91cec828efd0c7d115985
Author: Varun Prakash <varun@chelsio.com>
Date:   Fri Nov 9 20:59:46 2018 +0530

    scsi: target: iscsi: cxgbit: add missing spin_lock_init()
    
    [ Upstream commit 9e6371d3c6913ff1707fb2c0274c9925f7aaef80 ]
    
    Add missing spin_lock_init() for cdev->np_lock.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8323aafe67b31c7f73d18747604ba1cc6c3e4f3a
Author: Varun Prakash <varun@chelsio.com>
Date:   Fri Nov 9 20:59:01 2018 +0530

    scsi: target: iscsi: cxgbit: fix csk leak
    
    [ Upstream commit 801df68d617e3cb831f531c99fa6003620e6b343 ]
    
    csk leak can happen if a new TCP connection gets established after
    cxgbit_accept_np() returns, to fix this leak free remaining csk in
    cxgbit_free_np().
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c8afaa83988de5fa6ec2b2003055f21cc25555b
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Wed Dec 12 08:57:03 2018 -0800

    bnx2x: Send update-svid ramrod with retry/poll flags enabled
    
    [ Upstream commit 9061193c4ee065d3240fde06767c2e06ec61decc ]
    
    Driver sends update-SVID ramrod in the MFW notification path.
    If there is a pending ramrod, driver doesn't retry the command
    and storm firmware will never be updated with the SVID value.
    The patch adds changes to send update-svid ramrod in process context with
    retry/poll flags set.
    
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7c8e00eb776198266d92ee5eb34db7af3bf40ca
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Wed Dec 12 08:57:01 2018 -0800

    bnx2x: Remove configured vlans as part of unload sequence.
    
    [ Upstream commit 04f05230c5c13b1384f66f5186a68d7499e34622 ]
    
    Vlans are not getting removed when drivers are unloaded. The recent storm
    firmware versions had added safeguards against re-configuring an already
    configured vlan. As a result, PF inner reload flows (e.g., mtu change)
    might trigger an assertion.
    This change is going to remove vlans (same as we do for MACs) when doing
    a chip cleanup during unload.
    
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40790571fbc57e9cfd2c220c49e8ebef07086519
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Wed Dec 12 08:57:00 2018 -0800

    bnx2x: Clear fip MAC when fcoe offload support is disabled
    
    [ Upstream commit bbf666c1af916ed74795493c564df6fad462cc80 ]
    
    On some customer setups it was observed that shmem contains a non-zero fip
    MAC for 57711 which would lead to enabling of SW FCoE.
    Add a software workaround to clear the bad fip mac address if no FCoE
    connections are supported.
    
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1231e259d43a85f61bde30fe6548346f961eddc5
Author: Pan Bian <bianpan2016@163.com>
Date:   Mon Dec 10 14:39:37 2018 +0100

    netfilter: ipset: do not call ipset_nest_end after nla_nest_cancel
    
    [ Upstream commit 708abf74dd87f8640871b814faa195fb5970b0e3 ]
    
    In the error handling block, nla_nest_cancel(skb, atd) is called to
    cancel the nest operation. But then, ipset_nest_end(skb, atd) is
    unexpected called to end the nest operation. This patch calls the
    ipset_nest_end only on the branch that nla_nest_cancel is not called.
    
    Fixes: 45040978c899 ("netfilter: ipset: Fix set:list type crash when flush/dump set in parallel")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48a732cbd425eca878e7482e0478fbf685d7ab55
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Dec 4 13:52:49 2018 -0800

    Input: omap-keypad - fix idle configuration to not block SoC idle states
    
    [ Upstream commit e2ca26ec4f01486661b55b03597c13e2b9c18b73 ]
    
    With PM enabled, I noticed that pressing a key on the droid4 keyboard will
    block deeper idle states for the SoC. Let's fix this by using IRQF_ONESHOT
    and stop constantly toggling the device OMAP4_KBD_IRQENABLE register as
    suggested by Dmitry Torokhov <dmitry.torokhov@gmail.com>.
    
    From the hardware point of view, looks like we need to manage the registers
    for OMAP4_KBD_IRQENABLE and OMAP4_KBD_WAKEUPENABLE together to avoid
    blocking deeper SoC idle states. And with toggling of OMAP4_KBD_IRQENABLE
    register now gone with IRQF_ONESHOT, also the SoC idle state problem is
    gone during runtime. We still also need to clear OMAP4_KBD_WAKEUPENABLE in
    omap4_keypad_close() though to pair it with omap4_keypad_open() to prevent
    blocking deeper SoC idle states after rmmod omap4-keypad.
    
    Reported-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 627fdfac7808fffdeb64e4d08fa9c74e4acd5d10
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 1 08:25:30 2018 +0300

    scsi: bnx2fc: Fix NULL dereference in error handling
    
    [ Upstream commit 9ae4f8420ed7be4b13c96600e3568c144d101a23 ]
    
    If "interface" is NULL then we can't release it and trying to will only
    lead to an Oops.
    
    Fixes: aea71a024914 ("[SCSI] bnx2fc: Introduce interface structure for each vlan interface")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d013a1cd9c1d1a4d6ed0377ff328e0b633ab6387
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Dec 5 14:12:19 2018 +0100

    netfilter: seqadj: re-load tcp header pointer after possible head reallocation
    
    [ Upstream commit 530aad77010b81526586dfc09130ec875cd084e4 ]
    
    When adjusting sack block sequence numbers, skb_make_writable() gets
    called to make sure tcp options are all in the linear area, and buffer
    is not shared.
    
    This can cause tcp header pointer to get reallocated, so we must
    reaload it to avoid memory corruption.
    
    This bug pre-dates git history.
    
    Reported-by: Neel Mehta <nmehta@google.com>
    Reported-by: Shane Huntley <shuntley@google.com>
    Reported-by: Heather Adkins <argv@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcbc7da1e37208c3c602702886cf39e26444ae38
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Mon Nov 5 17:00:53 2018 +0900

    xfrm: Fix bucket count reported to userspace
    
    [ Upstream commit ca92e173ab34a4f7fc4128bd372bd96f1af6f507 ]
    
    sadhcnt is reported by `ip -s xfrm state count` as "buckets count", not the
    hash mask.
    
    Fixes: 28d8909bc790 ("[XFRM]: Export SAD info.")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38886b1d0592f1acf41e76df27bdaf27dd3b8854
Author: Qian Cai <cai@lca.pw>
Date:   Fri Dec 14 14:17:20 2018 -0800

    checkstack.pl: fix for aarch64
    
    [ Upstream commit f1733a1d3cd32a9492f4cf866be37bb46e10163d ]
    
    There is actually a space after "sp," like this,
    
        ffff2000080813c8:       a9bb7bfd        stp     x29, x30, [sp, #-80]!
    
    Right now, checkstack.pl isn't able to print anything on aarch64,
    because it won't be able to match the stating objdump line of a function
    due to this missing space.  Hence, it displays every stack as zero-size.
    
    After this patch, checkpatch.pl is able to match the start of a
    function's objdump, and is then able to calculate each function's stack
    correctly.
    
    Link: http://lkml.kernel.org/r/20181207195843.38528-1-cai@lca.pw
    Signed-off-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e34040279333d2582db5287899e2d6908ec57184
Author: Peter Hutterer <peter.hutterer@who-t.net>
Date:   Thu Dec 6 09:03:36 2018 +1000

    Input: restore EV_ABS ABS_RESERVED
    
    [ Upstream commit c201e3808e0e4be9b98d192802085a9f491bd80c ]
    
    ABS_RESERVED was added in d9ca1c990a7 and accidentally removed as part of
    ffe0e7cf290f5c9 when the high-resolution scrolling code was removed.
    
    Signed-off-by: Peter Hutterer <peter.hutterer@who-t.net>
    Reviewed-by: Martin Kepplinger <martin.kepplinger@ginzinger.com>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Acked-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 752d39ee1bef8d25202b36585f7848b3198e796f
Author: Fabio Estevam <festevam@gmail.com>
Date:   Wed Dec 5 09:05:30 2018 -0200

    ARM: dts: imx7d-nitrogen7: Fix the description of the Wifi clock
    
    [ Upstream commit f15096f12a4e9340168df5fdd9201aa8ed60d59e ]
    
    According to bindings/regulator/fixed-regulator.txt the 'clocks' and
    'clock-names' properties are not valid ones.
    
    In order to turn on the Wifi clock the correct location for describing
    the CLKO2 clock is via a mmc-pwrseq handle, so do it accordingly.
    
    Fixes: 56354959cfec ("ARM: dts: imx: add Boundary Devices Nitrogen7 board")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Acked-by: Troy Kisky <troy.kisky@boundarydevices.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 559ddc885a5ec7a690868d97c86ff61e3d01d02a
Author: Anson Huang <anson.huang@nxp.com>
Date:   Tue Dec 4 03:17:45 2018 +0000

    ARM: imx: update the cpu power up timing setting on i.mx6sx
    
    [ Upstream commit 1e434b703248580b7aaaf8a115d93e682f57d29f ]
    
    The sw2iso count should cover ARM LDO ramp-up time,
    the MAX ARM LDO ramp-up time may be up to more than
    100us on some boards, this patch sets sw2iso to 0xf
    (~384us) which is the reset value, and it is much
    more safe to cover different boards, since we have
    observed that some customer boards failed with current
    setting of 0x2.
    
    Fixes: 05136f0897b5 ("ARM: imx: support arm power off in cpuidle for i.mx6sx")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1837a06a163b6a2254bf6df8e1c82f5c49b45daf
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Tue Nov 27 09:01:54 2018 +1100

    powerpc: Fix COFF zImage booting on old powermacs
    
    [ Upstream commit 5564597d51c8ff5b88d95c76255e18b13b760879 ]
    
    Commit 6975a783d7b4 ("powerpc/boot: Allow building the zImage wrapper
    as a relocatable ET_DYN", 2011-04-12) changed the procedure descriptor
    at the start of crt0.S to have a hard-coded start address of 0x500000
    rather than a reference to _zimage_start, presumably because having
    a reference to a symbol introduced a relocation which is awkward to
    handle in a position-independent executable.  Unfortunately, what is
    at 0x500000 in the COFF image is not the first instruction, but the
    procedure descriptor itself, that is, a word containing 0x500000,
    which is not a valid instruction.  Hence, booting a COFF zImage
    results in a "DEFAULT CATCH!, code=FFF00700" message from Open
    Firmware.
    
    This fixes the problem by (a) putting the procedure descriptor in the
    data section and (b) adding a branch to _zimage_start as the first
    instruction in the program.
    
    Fixes: 6975a783d7b4 ("powerpc/boot: Allow building the zImage wrapper as a relocatable ET_DYN")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 609a4c7977ff44269a04a2b71ad991c2feb9f849
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Nov 13 11:55:36 2018 +0100

    pinctrl: meson: fix pull enable register calculation
    
    [ Upstream commit 614b1868a125a0ba24be08f3a7fa832ddcde6bca ]
    
    We just changed the code so we apply bias disable on the correct
    register but forgot to align the register calculation. The result
    is that we apply the change on the correct register, but possibly
    at the incorrect offset/bit
    
    This went undetected because offsets tends to be the same between
    REG_PULL and REG_PULLEN for a given pin the EE controller. This
    is not true for the AO controller.
    
    Fixes: e39f9dd8206a ("pinctrl: meson: fix pinconf bias disable")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
