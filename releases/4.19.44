commit dafc674bbcb11c6a5c63b75be5873b118e2add17
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu May 16 19:41:32 2019 +0200

    Linux 4.19.44

commit 9fa23ea14e8fd056b63c1f6fa667fec7f800e301
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Mar 4 21:34:49 2019 +0000

    PCI: hv: Add pci_destroy_slot() in pci_devices_present_work(), if necessary
    
    commit 340d455699400f2c2c0f9b3f703ade3085cdb501 upstream.
    
    When we hot-remove a device, usually the host sends us a PCI_EJECT message,
    and a PCI_BUS_RELATIONS message with bus_rel->device_count == 0.
    
    When we execute the quick hot-add/hot-remove test, the host may not send
    us the PCI_EJECT message if the guest has not fully finished the
    initialization by sending the PCI_RESOURCES_ASSIGNED* message to the
    host, so it's potentially unsafe to only depend on the
    pci_destroy_slot() in hv_eject_device_work() because the code path
    
    create_root_hv_pci_bus()
     -> hv_pci_assign_slots()
    
    is not called in this case. Note: in this case, the host still sends the
    guest a PCI_BUS_RELATIONS message with bus_rel->device_count == 0.
    
    In the quick hot-add/hot-remove test, we can have such a race before
    the code path
    
    pci_devices_present_work()
     -> new_pcichild_device()
    
    adds the new device into the hbus->children list, we may have already
    received the PCI_EJECT message, and since the tasklet handler
    
    hv_pci_onchannelcallback()
    
    may fail to find the "hpdev" by calling
    
    get_pcichild_wslot(hbus, dev_message->wslot.slot)
    
    hv_pci_eject_device() is not called; Later, by continuing execution
    
    create_root_hv_pci_bus()
     -> hv_pci_assign_slots()
    
    creates the slot and the PCI_BUS_RELATIONS message with
    bus_rel->device_count == 0 removes the device from hbus->children, and
    we end up being unable to remove the slot in
    
    hv_pci_remove()
     -> hv_pci_remove_slots()
    
    Remove the slot in pci_devices_present_work() when the device
    is removed to address this race.
    
    pci_devices_present_work() and hv_eject_device_work() run in the
    singled-threaded hbus->wq, so there is not a double-remove issue for the
    slot.
    
    We cannot offload hv_pci_eject_device() from hv_pci_onchannelcallback()
    to the workqueue, because we need the hv_pci_onchannelcallback()
    synchronously call hv_pci_eject_device() to poll the channel
    ringbuffer to work around the "hangs in hv_compose_msi_msg()" issue
    fixed in commit de0aa7b2f97d ("PCI: hv: Fix 2 hang issues in
    hv_compose_msi_msg()")
    
    Fixes: a15f2c08c708 ("PCI: hv: support reporting serial number as slot information")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    [lorenzo.pieralisi@arm.com: rewritten commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Reviewed-by:  Michael Kelley <mikelley@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76888d135c4e6630e3110a93e667d66b07d2bfaa
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Mar 4 21:34:48 2019 +0000

    PCI: hv: Add hv_pci_remove_slots() when we unload the driver
    
    commit 15becc2b56c6eda3d9bf5ae993bafd5661c1fad1 upstream.
    
    When we unload the pci-hyperv host controller driver, the host does not
    send us a PCI_EJECT message.
    
    In this case we also need to make sure the sysfs PCI slot directory is
    removed, otherwise a command on a slot file eg:
    
    "cat /sys/bus/pci/slots/2/address"
    
    will trigger a
    
    "BUG: unable to handle kernel paging request"
    
    and, if we unload/reload the driver several times we would end up with
    stale slot entries in PCI slot directories in /sys/bus/pci/slots/
    
    root@localhost:~# ls -rtl  /sys/bus/pci/slots/
    total 0
    drwxr-xr-x 2 root root 0 Feb  7 10:49 2
    drwxr-xr-x 2 root root 0 Feb  7 10:49 2-1
    drwxr-xr-x 2 root root 0 Feb  7 10:51 2-2
    
    Add the missing code to remove the PCI slot and fix the current
    behaviour.
    
    Fixes: a15f2c08c708 ("PCI: hv: support reporting serial number as slot information")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    [lorenzo.pieralisi@arm.com: reformatted the log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Stephen Hemminger <sthemmin@microsoft.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a47e0054253f69f2036d5dbce81f6c1cff9f0eb4
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Mar 4 21:34:48 2019 +0000

    PCI: hv: Fix a memory leak in hv_eject_device_work()
    
    commit 05f151a73ec2b23ffbff706e5203e729a995cdc2 upstream.
    
    When a device is created in new_pcichild_device(), hpdev->refs is set
    to 2 (i.e. the initial value of 1 plus the get_pcichild()).
    
    When we hot remove the device from the host, in a Linux VM we first call
    hv_pci_eject_device(), which increases hpdev->refs by get_pcichild() and
    then schedules a work of hv_eject_device_work(), so hpdev->refs becomes
    3 (let's ignore the paired get/put_pcichild() in other places). But in
    hv_eject_device_work(), currently we only call put_pcichild() twice,
    meaning the 'hpdev' struct can't be freed in put_pcichild().
    
    Add one put_pcichild() to fix the memory leak.
    
    The device can also be removed when we run "rmmod pci-hyperv". On this
    path (hv_pci_remove() -> hv_pci_bus_exit() -> hv_pci_devices_present()),
    hpdev->refs is 2, and we do correctly call put_pcichild() twice in
    pci_devices_present_work().
    
    Fixes: 4daace0d8ce8 ("PCI: hv: Add paravirtual PCI front-end for Microsoft Hyper-V VMs")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    [lorenzo.pieralisi@arm.com: commit log rework]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Reviewed-by:  Michael Kelley <mikelley@microsoft.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4179b8580219454602bc787209b404b119df86d4
Author: Laurentiu Tudor <laurentiu.tudor@nxp.com>
Date:   Mon Apr 15 14:52:11 2019 +0300

    powerpc/booke64: set RI in default MSR
    
    commit 5266e58d6cd90ac85c187d673093ad9cb649e16d upstream.
    
    Set RI in the default kernel's MSR so that the architected way of
    detecting unrecoverable machine check interrupts has a chance to work.
    This is inline with the MSR setup of the rest of booke powerpc
    architectures configured here.
    
    Signed-off-by: Laurentiu Tudor <laurentiu.tudor@nxp.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71b20cdb4353274ce071fde797e5ed428e5ac54a
Author: Russell Currey <ruscur@russell.cc>
Date:   Thu Apr 18 16:51:16 2019 +1000

    powerpc/powernv/idle: Restore IAMR after idle
    
    commit a3f3072db6cad40895c585dce65e36aab997f042 upstream.
    
    Without restoring the IAMR after idle, execution prevention on POWER9
    with Radix MMU is overwritten and the kernel can freely execute
    userspace without faulting.
    
    This is necessary when returning from any stop state that modifies
    user state, as well as hypervisor state.
    
    To test how this fails without this patch, load the lkdtm driver and
    do the following:
    
      $ echo EXEC_USERSPACE > /sys/kernel/debug/provoke-crash/DIRECT
    
    which won't fault, then boot the kernel with powersave=off, where it
    will fault. Applying this patch will fix this.
    
    Fixes: 3b10d0095a1e ("powerpc/mm/radix: Prevent kernel execution of user space")
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Reviewed-by: Akshay Adiga <akshay.adiga@linux.vnet.ibm.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69c2b71cb0c148724a01aa437cba93ad79287667
Author: Rick Lindsley <ricklind@linux.vnet.ibm.com>
Date:   Sun May 5 17:20:43 2019 -0700

    powerpc/book3s/64: check for NULL pointer in pgd_alloc()
    
    commit f39356261c265a0689d7ee568132d516e8b6cecc upstream.
    
    When the memset code was added to pgd_alloc(), it failed to consider
    that kmem_cache_alloc() can return NULL. It's uncommon, but not
    impossible under heavy memory contention. Example oops:
    
      Unable to handle kernel paging request for data at address 0x00000000
      Faulting instruction address: 0xc0000000000a4000
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE SMP NR_CPUS=2048 NUMA pSeries
      CPU: 70 PID: 48471 Comm: entrypoint.sh Kdump: loaded Not tainted 4.14.0-115.6.1.el7a.ppc64le #1
      task: c000000334a00000 task.stack: c000000331c00000
      NIP:  c0000000000a4000 LR: c00000000012f43c CTR: 0000000000000020
      REGS: c000000331c039c0 TRAP: 0300   Not tainted  (4.14.0-115.6.1.el7a.ppc64le)
      MSR:  800000010280b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]>  CR: 44022840  XER: 20040000
      CFAR: c000000000008874 DAR: 0000000000000000 DSISR: 42000000 SOFTE: 1
      ...
      NIP [c0000000000a4000] memset+0x68/0x104
      LR [c00000000012f43c] mm_init+0x27c/0x2f0
      Call Trace:
        mm_init+0x260/0x2f0 (unreliable)
        copy_mm+0x11c/0x638
        copy_process.isra.28.part.29+0x6fc/0x1080
        _do_fork+0xdc/0x4c0
        ppc_clone+0x8/0xc
      Instruction dump:
      409e000c b0860000 38c60002 409d000c 90860000 38c60004 78a0d183 78a506a0
      7c0903a6 41820034 60000000 60420000 <f8860000> f8860008 f8860010 f8860018
    
    Fixes: fc5c2f4a55a2 ("powerpc/mm/hash64: Zero PGD pages on allocation")
    Cc: stable@vger.kernel.org # v4.16+
    Signed-off-by: Rick Lindsley <ricklind@vnet.linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9ec5073c90d6de2ca5338bd67f7935b19d7c0c7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 14 15:47:03 2019 -0700

    drivers/virt/fsl_hypervisor.c: prevent integer overflow in ioctl
    
    commit 6a024330650e24556b8a18cc654ad00cfecf6c6c upstream.
    
    The "param.count" value is a u64 thatcomes from the user.  The code
    later in the function assumes that param.count is at least one and if
    it's not then it leads to an Oops when we dereference the ZERO_SIZE_PTR.
    
    Also the addition can have an integer overflow which would lead us to
    allocate a smaller "pages" array than required.  I can't immediately
    tell what the possible run times implications are, but it's safest to
    prevent the overflow.
    
    Link: http://lkml.kernel.org/r/20181218082129.GE32567@kadam
    Fixes: 6db7199407ca ("drivers/virt: introduce Freescale hypervisor management driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Timur Tabi <timur@freescale.com>
    Cc: Mihai Caraman <mihai.caraman@freescale.com>
    Cc: Kumar Gala <galak@kernel.crashing.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee3b53d8996760637dbcb2b9bf93d2df2ae476be
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue May 14 15:47:00 2019 -0700

    drivers/virt/fsl_hypervisor.c: dereferencing error pointers in ioctl
    
    commit c8ea3663f7a8e6996d44500ee818c9330ac4fd88 upstream.
    
    strndup_user() returns error pointers on error, and then in the error
    handling we pass the error pointers to kfree().  It will cause an Oops.
    
    Link: http://lkml.kernel.org/r/20181218082003.GD32567@kadam
    Fixes: 6db7199407ca ("drivers/virt: introduce Freescale hypervisor management driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Timur Tabi <timur@freescale.com>
    Cc: Mihai Caraman <mihai.caraman@freescale.com>
    Cc: Kumar Gala <galak@kernel.crashing.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afa485dc6f17dcfff2e8179cb67f1939660b3bed
Author: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@gmail.com>
Date:   Thu May 9 07:13:42 2019 +0200

    tipc: fix hanging clients using poll with EPOLLOUT flag
    
    [ Upstream commit ff946833b70e0c7f93de9a3f5b329b5ae2287b38 ]
    
    commit 517d7c79bdb398 ("tipc: fix hanging poll() for stream sockets")
    introduced a regression for clients using non-blocking sockets.
    After the commit, we send EPOLLOUT event to the client even in
    TIPC_CONNECTING state. This causes the subsequent send() to fail
    with ENOTCONN, as the socket is still not in TIPC_ESTABLISHED state.
    
    In this commit, we:
    - improve the fix for hanging poll() by replacing sk_data_ready()
      with sk_state_change() to wake up all clients.
    - revert the faulty updates introduced by commit 517d7c79bdb398
      ("tipc: fix hanging poll() for stream sockets").
    
    Fixes: 517d7c79bdb398 ("tipc: fix hanging poll() for stream sockets")
    Signed-off-by: Parthasarathy Bhuvaragan <parthasarathy.bhuvaragan@gmail.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.se>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98652e0b0a1b3c47c87f3e6e00ee3733edf630b5
Author: Paul Bolle <pebolle@tiscali.nl>
Date:   Wed May 1 23:19:03 2019 +0200

    isdn: bas_gigaset: use usb_fill_int_urb() properly
    
    [ Upstream commit 4014dfae3ccaaf3ec19c9ae0691a3f14e7132eae ]
    
    The switch to make bas_gigaset use usb_fill_int_urb() - instead of
    filling that urb "by hand" - missed the subtle ordering of the previous
    code.
    
    See, before the switch urb->dev was set to a member somewhere deep in a
    complicated structure and then supplied to usb_rcvisocpipe() and
    usb_sndisocpipe(). After that switch urb->dev wasn't set to anything
    specific before being supplied to those two macros. This triggers a
    nasty oops:
    
        BUG: unable to handle kernel NULL pointer dereference at 00000000
        #PF error: [normal kernel read fault]
        *pde = 00000000
        Oops: 0000 [#1] SMP
        CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.1.0-0.rc4.1.local0.fc28.i686 #1
        Hardware name: IBM 2525FAG/2525FAG, BIOS 74ET64WW (2.09 ) 12/14/2006
        EIP: gigaset_init_bchannel+0x89/0x320 [bas_gigaset]
        Code: 75 07 83 8b 84 00 00 00 40 8d 47 74 c7 07 01 00 00 00 89 45 f0 8b 44 b7 68 85 c0 0f 84 6a 02 00 00 8b 48 28 8b 93 88 00 00 00 <8b> 09 8d 54 12 03 c1 e2 0f c1 e1 08 09 ca 8b 8b 8c 00 00 00 80 ca
        EAX: f05ec200 EBX: ed404200 ECX: 00000000 EDX: 00000000
        ESI: 00000000 EDI: f065a000 EBP: f30c9f40 ESP: f30c9f20
        DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 EFLAGS: 00010086
        CR0: 80050033 CR2: 00000000 CR3: 0ddc7000 CR4: 000006d0
        Call Trace:
         <SOFTIRQ>
         ? gigaset_isdn_connD+0xf6/0x140 [gigaset]
         gigaset_handle_event+0x173e/0x1b90 [gigaset]
         tasklet_action_common.isra.16+0x4e/0xf0
         tasklet_action+0x1e/0x20
         __do_softirq+0xb2/0x293
         ? __irqentry_text_end+0x3/0x3
         call_on_stack+0x45/0x50
         </SOFTIRQ>
         ? irq_exit+0xb5/0xc0
         ? do_IRQ+0x78/0xd0
         ? acpi_idle_enter_s2idle+0x50/0x50
         ? common_interrupt+0xd4/0xdc
         ? acpi_idle_enter_s2idle+0x50/0x50
         ? sched_cpu_activate+0x1b/0xf0
         ? acpi_fan_resume.cold.7+0x9/0x18
         ? cpuidle_enter_state+0x152/0x4c0
         ? cpuidle_enter+0x14/0x20
         ? call_cpuidle+0x21/0x40
         ? do_idle+0x1c8/0x200
         ? cpu_startup_entry+0x25/0x30
         ? rest_init+0x88/0x8a
         ? arch_call_rest_init+0xd/0x19
         ? start_kernel+0x42f/0x448
         ? i386_start_kernel+0xac/0xb0
         ? startup_32_smp+0x164/0x168
        Modules linked in: ppp_generic slhc capi bas_gigaset gigaset kernelcapi nf_conntrack_netbios_ns nf_conntrack_broadcast xt_CT ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_nat ip6table_mangle ip6table_raw ip6table_security iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c iptable_mangle iptable_raw iptable_security ebtable_filter ebtables ip6table_filter ip6_tables sunrpc ipw2200 iTCO_wdt gpio_ich snd_intel8x0 libipw iTCO_vendor_support snd_ac97_codec lib80211 ppdev ac97_bus snd_seq cfg80211 snd_seq_device pcspkr thinkpad_acpi lpc_ich snd_pcm i2c_i801 snd_timer ledtrig_audio snd soundcore rfkill parport_pc parport pcc_cpufreq acpi_cpufreq i915 i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sdhci_pci sysimgblt cqhci fb_sys_fops drm sdhci mmc_core tg3 ata_generic serio_raw yenta_socket pata_acpi video
        CR2: 0000000000000000
        ---[ end trace 1fe07487b9200c73 ]---
        EIP: gigaset_init_bchannel+0x89/0x320 [bas_gigaset]
        Code: 75 07 83 8b 84 00 00 00 40 8d 47 74 c7 07 01 00 00 00 89 45 f0 8b 44 b7 68 85 c0 0f 84 6a 02 00 00 8b 48 28 8b 93 88 00 00 00 <8b> 09 8d 54 12 03 c1 e2 0f c1 e1 08 09 ca 8b 8b 8c 00 00 00 80 ca
        EAX: f05ec200 EBX: ed404200 ECX: 00000000 EDX: 00000000
        ESI: 00000000 EDI: f065a000 EBP: f30c9f40 ESP: cddcb3bc
        DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068 EFLAGS: 00010086
        CR0: 80050033 CR2: 00000000 CR3: 0ddc7000 CR4: 000006d0
        Kernel panic - not syncing: Fatal exception in interrupt
        Kernel Offset: 0xcc00000 from 0xc0400000 (relocation range: 0xc0000000-0xf6ffdfff)
        ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---
    
    No-one noticed because this Oops is apparently only triggered by setting
    up an ISDN data connection on a live ISDN line on a gigaset base (ie,
    the PBX that the gigaset driver support). Very few people do that
    running present day kernels.
    
    Anyhow, a little code reorganization makes this problem go away, while
    avoiding the subtle ordering that was used in the past. So let's do
    that.
    
    Fixes: 78c696c19578 ("isdn: gigaset: use usb_fill_int_urb()")
    Signed-off-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17d8a9ebaa99752c7255959dada39dbb4d58a29c
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed May 8 23:20:18 2019 -0400

    tuntap: synchronize through tfiles array instead of tun->numqueues
    
    [ Upstream commit 9871a9e47a2646fe30ae7fd2e67668a8d30912f6 ]
    
    When a queue(tfile) is detached through __tun_detach(), we move the
    last enabled tfile to the position where detached one sit but don't
    NULL out last position. We expect to synchronize the datapath through
    tun->numqueues. Unfortunately, this won't work since we're lacking
    sufficient mechanism to order or synchronize the access to
    tun->numqueues.
    
    To fix this, NULL out the last position during detaching and check
    RCU protected tfile against NULL instead of checking tun->numqueues in
    datapath.
    
    Cc: YueHaibing <yuehaibing@huawei.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: weiyongjun (A) <weiyongjun1@huawei.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Fixes: c8d68e6be1c3b ("tuntap: multiqueue support")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c79732f98a8dc7aa246be411ebbd28fbdea1fec
Author: Jason Wang <jasowang@redhat.com>
Date:   Wed May 8 23:20:17 2019 -0400

    tuntap: fix dividing by zero in ebpf queue selection
    
    [ Upstream commit a35d310f03a692bf4798eb309a1950a06a150620 ]
    
    We need check if tun->numqueues is zero (e.g for the persist device)
    before trying to use it for modular arithmetic.
    
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Fixes: 96f84061620c6("tun: add eBPF based queue selection method")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 737713e6d83556cfb3605c07fd1cdb7521494e5e
Author: Stephen Suryaputra <ssuryaextr@gmail.com>
Date:   Mon May 6 15:00:01 2019 -0400

    vrf: sit mtu should not be updated when vrf netdev is the link
    
    [ Upstream commit ff6ab32bd4e073976e4d8797b4d514a172cfe6cb ]
    
    VRF netdev mtu isn't typically set and have an mtu of 65536. When the
    link of a tunnel is set, the tunnel mtu is changed from 1480 to the link
    mtu minus tunnel header. In the case of VRF netdev is the link, then the
    tunnel mtu becomes 65516. So, fix it by not setting the tunnel mtu in
    this case.
    
    Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e38406070729de8a6c434cb9f1762100fd2f520d
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu May 9 14:55:07 2019 +0800

    vlan: disable SIOCSHWTSTAMP in container
    
    [ Upstream commit 873017af778439f2f8e3d87f28ddb1fcaf244a76 ]
    
    With NET_ADMIN enabled in container, a normal user could be mapped to
    root and is able to change the real device's rx filter via ioctl on
    vlan, which would affect the other ptp process on host. Fix it by
    disabling SIOCSHWTSTAMP in container.
    
    Fixes: a6111d3c93d0 ("vlan: Pass SIOC[SG]HWTSTAMP ioctls to real device")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfdfad3d188f6c524c06b469d3bbfe6af5004f71
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed May 8 15:32:51 2019 +0200

    selinux: do not report error on connect(AF_UNSPEC)
    
    [ Upstream commit c7e0d6cca86581092cbbf2cd868b3601495554cf ]
    
    calling connect(AF_UNSPEC) on an already connected TCP socket is an
    established way to disconnect() such socket. After commit 68741a8adab9
    ("selinux: Fix ltp test connect-syscall failure") it no longer works
    and, in the above scenario connect() fails with EAFNOSUPPORT.
    
    Fix the above falling back to the generic/old code when the address family
    is not AF_INET{4,6}, but leave the SCTP code path untouched, as it has
    specific constraints.
    
    Fixes: 68741a8adab9 ("selinux: Fix ltp test connect-syscall failure")
    Reported-by: Tom Deseyn <tdeseyn@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f51d6f72063dc7a059bd73f94e7da7eaeba2995
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu May 9 22:52:20 2019 +0800

    packet: Fix error path in packet_init
    
    [ Upstream commit 36096f2f4fa05f7678bc87397665491700bae757 ]
    
    kernel BUG at lib/list_debug.c:47!
    invalid opcode: 0000 [#1
    CPU: 0 PID: 12914 Comm: rmmod Tainted: G        W         5.1.0+ #47
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:__list_del_entry_valid+0x53/0x90
    Code: 48 8b 32 48 39 fe 75 35 48 8b 50 08 48 39 f2 75 40 b8 01 00 00 00 5d c3 48
    89 fe 48 89 c2 48 c7 c7 18 75 fe 82 e8 cb 34 78 ff <0f> 0b 48 89 fe 48 c7 c7 50 75 fe 82 e8 ba 34 78 ff 0f 0b 48 89 f2
    RSP: 0018:ffffc90001c2fe40 EFLAGS: 00010286
    RAX: 000000000000004e RBX: ffffffffa0184000 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffff888237a17788 RDI: 00000000ffffffff
    RBP: ffffc90001c2fe40 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffc90001c2fe10 R11: 0000000000000000 R12: 0000000000000000
    R13: ffffc90001c2fe50 R14: ffffffffa0184000 R15: 0000000000000000
    FS:  00007f3d83634540(0000) GS:ffff888237a00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000555c350ea818 CR3: 0000000231677000 CR4: 00000000000006f0
    Call Trace:
     unregister_pernet_operations+0x34/0x120
     unregister_pernet_subsys+0x1c/0x30
     packet_exit+0x1c/0x369 [af_packet
     __x64_sys_delete_module+0x156/0x260
     ? lockdep_hardirqs_on+0x133/0x1b0
     ? do_syscall_64+0x12/0x1f0
     do_syscall_64+0x6e/0x1f0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    When modprobe af_packet, register_pernet_subsys
    fails and does a cleanup, ops->list is set to LIST_POISON1,
    but the module init is considered to success, then while rmmod it,
    BUG() is triggered in __list_del_entry_valid which is called from
    unregister_pernet_subsys. This patch fix error handing path in
    packet_init to avoid possilbe issue if some error occur.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e95eb9c92f71469ed62553106b9d2593045bd8f
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri May 3 13:33:23 2019 +0000

    net: ucc_geth - fix Oops when changing number of buffers in the ring
    
    [ Upstream commit ee0df19305d9fabd9479b785918966f6e25b733b ]
    
    When changing the number of buffers in the RX ring while the interface
    is running, the following Oops is encountered due to the new number
    of buffers being taken into account immediately while their allocation
    is done when opening the device only.
    
    [   69.882706] Unable to handle kernel paging request for data at address 0xf0000100
    [   69.890172] Faulting instruction address: 0xc033e164
    [   69.895122] Oops: Kernel access of bad area, sig: 11 [#1]
    [   69.900494] BE PREEMPT CMPCPRO
    [   69.907120] CPU: 0 PID: 0 Comm: swapper Not tainted 4.14.115-00006-g179ade8ce3-dirty #269
    [   69.915956] task: c0684310 task.stack: c06da000
    [   69.920470] NIP:  c033e164 LR: c02e44d0 CTR: c02e41fc
    [   69.925504] REGS: dfff1e20 TRAP: 0300   Not tainted  (4.14.115-00006-g179ade8ce3-dirty)
    [   69.934161] MSR:  00009032 <EE,ME,IR,DR,RI>  CR: 22004428  XER: 20000000
    [   69.940869] DAR: f0000100 DSISR: 20000000
    [   69.940869] GPR00: c0352d70 dfff1ed0 c0684310 f00000a4 00000040 dfff1f68 00000000 0000001f
    [   69.940869] GPR08: df53f410 1cc00040 00000021 c0781640 42004424 100c82b6 f00000a4 df53f5b0
    [   69.940869] GPR16: df53f6c0 c05daf84 00000040 00000000 00000040 c0782be4 00000000 00000001
    [   69.940869] GPR24: 00000000 df53f400 000001b0 df53f410 df53f000 0000003f df708220 1cc00044
    [   69.978348] NIP [c033e164] skb_put+0x0/0x5c
    [   69.982528] LR [c02e44d0] ucc_geth_poll+0x2d4/0x3f8
    [   69.987384] Call Trace:
    [   69.989830] [dfff1ed0] [c02e4554] ucc_geth_poll+0x358/0x3f8 (unreliable)
    [   69.996522] [dfff1f20] [c0352d70] net_rx_action+0x248/0x30c
    [   70.002099] [dfff1f80] [c04e93e4] __do_softirq+0xfc/0x310
    [   70.007492] [dfff1fe0] [c0021124] irq_exit+0xd0/0xd4
    [   70.012458] [dfff1ff0] [c000e7e0] call_do_irq+0x24/0x3c
    [   70.017683] [c06dbe80] [c0006bac] do_IRQ+0x64/0xc4
    [   70.022474] [c06dbea0] [c001097c] ret_from_except+0x0/0x14
    [   70.027964] --- interrupt: 501 at rcu_idle_exit+0x84/0x90
    [   70.027964]     LR = rcu_idle_exit+0x74/0x90
    [   70.037585] [c06dbf60] [20000000] 0x20000000 (unreliable)
    [   70.042984] [c06dbf80] [c004bb0c] do_idle+0xb4/0x11c
    [   70.047945] [c06dbfa0] [c004bd14] cpu_startup_entry+0x18/0x1c
    [   70.053682] [c06dbfb0] [c05fb034] start_kernel+0x370/0x384
    [   70.059153] [c06dbff0] [00003438] 0x3438
    [   70.063062] Instruction dump:
    [   70.066023] 38a00000 38800000 90010014 4bfff015 80010014 7c0803a6 3123ffff 7c691910
    [   70.073767] 38210010 4e800020 38600000 4e800020 <80e3005c> 80c30098 3107ffff 7d083910
    [   70.081690] ---[ end trace be7ccd9c1e1a9f12 ]---
    
    This patch forbids the modification of the number of buffers in the
    ring while the interface is running.
    
    Fixes: ac421852b3a0 ("ucc_geth: add ethtool support")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 210057b79e716b79cc9a595da40b55f9242020ff
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Mon May 13 13:15:17 2019 +0200

    net: seeq: fix crash caused by not set dev.parent
    
    [ Upstream commit 5afcd14cfc7fed1bcc8abcee2cef82732772bfc2 ]
    
    The old MIPS implementation of dma_cache_sync() didn't use the dev argument,
    but commit c9eb6172c328 ("dma-mapping: turn dma_cache_sync into a
    dma_map_ops method") changed that, so we now need to set dev.parent.
    
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfd919285f2717e68788984352512d3fb5bee937
Author: Harini Katakam <harini.katakam@xilinx.com>
Date:   Tue May 7 19:59:10 2019 +0530

    net: macb: Change interrupt and napi enable order in open
    
    [ Upstream commit 0504453139ef5a593c9587e1e851febee859c7d8 ]
    
    Current order in open:
    -> Enable interrupts (macb_init_hw)
    -> Enable NAPI
    -> Start PHY
    
    Sequence of RX handling:
    -> RX interrupt occurs
    -> Interrupt is cleared and interrupt bits disabled in handler
    -> NAPI is scheduled
    -> In NAPI, RX budget is processed and RX interrupts are re-enabled
    
    With the above, on QEMU or fixed link setups (where PHY state doesn't
    matter), there's a chance macb RX interrupt occurs before NAPI is
    enabled. This will result in NAPI being scheduled before it is enabled.
    Fix this macb open by changing the order.
    
    Fixes: ae1f2a56d273 ("net: macb: Added support for many RX queues")
    Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68df8383f3cabe957ecf1ff37255e2cf58c4d8be
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Mon May 13 13:06:39 2019 +0000

    net: ethernet: stmmac: dwmac-sun8i: enable support of unicast filtering
    
    [ Upstream commit d4c26eb6e721683a0f93e346ce55bc8dc3cbb175 ]
    
    When adding more MAC addresses to a dwmac-sun8i interface, the device goes
    directly in promiscuous mode.
    This is due to IFF_UNICAST_FLT missing flag.
    
    So since the hardware support unicast filtering, let's add IFF_UNICAST_FLT.
    
    Fixes: 9f93ac8d4085 ("net-next: stmmac: Add dwmac-sun8i")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9284895b7ee624916971da9fe286880652ab14b1
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon May 6 23:25:29 2019 +0800

    net: dsa: Fix error cleanup path in dsa_init_module
    
    [ Upstream commit 68be930249d051fd54d3d99156b3dcadcb2a1f9b ]
    
    BUG: unable to handle kernel paging request at ffffffffa01c5430
    PGD 3270067 P4D 3270067 PUD 3271063 PMD 230bc5067 PTE 0
    Oops: 0000 [#1
    CPU: 0 PID: 6159 Comm: modprobe Not tainted 5.1.0+ #33
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:raw_notifier_chain_register+0x16/0x40
    Code: 63 f8 66 90 e9 5d ff ff ff 90 90 90 90 90 90 90 90 90 90 90 55 48 8b 07 48 89 e5 48 85 c0 74 1c 8b 56 10 3b 50 10 7e 07 eb 12 <39> 50 10 7c 0d 48 8d 78 08 48 8b 40 08 48 85 c0 75 ee 48 89 46 08
    RSP: 0018:ffffc90001c33c08 EFLAGS: 00010282
    RAX: ffffffffa01c5420 RBX: ffffffffa01db420 RCX: 4fcef45928070a8b
    RDX: 0000000000000000 RSI: ffffffffa01db420 RDI: ffffffffa01b0068
    RBP: ffffc90001c33c08 R08: 000000003e0a33d0 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000094443661 R12: ffff88822c320700
    R13: ffff88823109be80 R14: 0000000000000000 R15: ffffc90001c33e78
    FS:  00007fab8bd08540(0000) GS:ffff888237a00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffffffffa01c5430 CR3: 00000002297ea000 CR4: 00000000000006f0
    Call Trace:
     register_netdevice_notifier+0x43/0x250
     ? 0xffffffffa01e0000
     dsa_slave_register_notifier+0x13/0x70 [dsa_core
     ? 0xffffffffa01e0000
     dsa_init_module+0x2e/0x1000 [dsa_core
     do_one_initcall+0x6c/0x3cc
     ? do_init_module+0x22/0x1f1
     ? rcu_read_lock_sched_held+0x97/0xb0
     ? kmem_cache_alloc_trace+0x325/0x3b0
     do_init_module+0x5b/0x1f1
     load_module+0x1db1/0x2690
     ? m_show+0x1d0/0x1d0
     __do_sys_finit_module+0xc5/0xd0
     __x64_sys_finit_module+0x15/0x20
     do_syscall_64+0x6b/0x1d0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Cleanup allocated resourses if there are errors,
    otherwise it will trgger memleak.
    
    Fixes: c9eb3e0f8701 ("net: dsa: Add support for learning FDB through notification")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da2e770f0c4adb6fd58663e94fa1e4a57b0ad8dc
Author: David Ahern <dsahern@gmail.com>
Date:   Tue May 7 20:44:59 2019 -0700

    ipv4: Fix raw socket lookup for local traffic
    
    [ Upstream commit 19e4e768064a87b073a4b4c138b55db70e0cfb9f ]
    
    inet_iif should be used for the raw socket lookup. inet_iif considers
    rt_iif which handles the case of local traffic.
    
    As it stands, ping to a local address with the '-I <dev>' option fails
    ever since ping was changed to use SO_BINDTODEVICE instead of
    cmsg + IP_PKTINFO.
    
    IPv6 works fine.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 947fec630c41992dc9e339971041134b274842b5
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue May 7 17:11:18 2019 +0800

    fib_rules: return 0 directly if an exactly same rule exists when NLM_F_EXCL not supplied
    
    [ Upstream commit e9919a24d3022f72bcadc407e73a6ef17093a849 ]
    
    With commit 153380ec4b9 ("fib_rules: Added NLM_F_EXCL support to
    fib_nl_newrule") we now able to check if a rule already exists. But this
    only works with iproute2. For other tools like libnl, NetworkManager,
    it still could add duplicate rules with only NLM_F_CREATE flag, like
    
    [localhost ~ ]# ip rule
    0:      from all lookup local
    32766:  from all lookup main
    32767:  from all lookup default
    100000: from 192.168.7.5 lookup 5
    100000: from 192.168.7.5 lookup 5
    
    As it doesn't make sense to create two duplicate rules, let's just return
    0 if the rule exists.
    
    Fixes: 153380ec4b9 ("fib_rules: Added NLM_F_EXCL support to fib_nl_newrule")
    Reported-by: Thomas Haller <thaller@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7b5e55be8253aa63af50a5334239b686f8e74f0
Author: Laurentiu Tudor <laurentiu.tudor@nxp.com>
Date:   Fri May 3 16:03:11 2019 +0300

    dpaa_eth: fix SG frame cleanup
    
    [ Upstream commit 17170e6570c082717c142733d9a638bcd20551f8 ]
    
    Fix issue with the entry indexing in the sg frame cleanup code being
    off-by-1. This problem showed up when doing some basic iperf tests and
    manifested in traffic coming to a halt.
    
    Signed-off-by: Laurentiu Tudor <laurentiu.tudor@nxp.com>
    Acked-by: Madalin Bucur <madalin.bucur@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a79feef323927d92528a2245ab0d23b7a0192efc
Author: Tobin C. Harding <tobin@kernel.org>
Date:   Fri May 10 12:52:12 2019 +1000

    bridge: Fix error path for kobject_init_and_add()
    
    [ Upstream commit bdfad5aec1392b93495b77b864d58d7f101dc1c1 ]
    
    Currently error return from kobject_init_and_add() is not followed by a
    call to kobject_put().  This means there is a memory leak.  We currently
    set p to NULL so that kfree() may be called on it as a noop, the code is
    arguably clearer if we move the kfree() up closer to where it is
    called (instead of after goto jump).
    
    Remove a goto label 'err1' and jump to call to kobject_put() in error
    return from kobject_init_and_add() fixing the memory leak.  Re-name goto
    label 'put_back' to 'err1' now that we don't use err1, following current
    nomenclature (err1, err2 ...).  Move call to kfree out of the error
    code at bottom of function up to closer to where memory was allocated.
    Add comment to clarify call to kfree().
    
    Signed-off-by: Tobin C. Harding <tobin@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c2cda31196a7104aaf69a6d73e9f87667217713
Author: Jarod Wilson <jarod@redhat.com>
Date:   Fri May 10 17:57:09 2019 -0400

    bonding: fix arp_validate toggling in active-backup mode
    
    [ Upstream commit a9b8a2b39ce65df45687cf9ef648885c2a99fe75 ]
    
    There's currently a problem with toggling arp_validate on and off with an
    active-backup bond. At the moment, you can start up a bond, like so:
    
    modprobe bonding mode=1 arp_interval=100 arp_validate=0 arp_ip_targets=192.168.1.1
    ip link set bond0 down
    echo "ens4f0" > /sys/class/net/bond0/bonding/slaves
    echo "ens4f1" > /sys/class/net/bond0/bonding/slaves
    ip link set bond0 up
    ip addr add 192.168.1.2/24 dev bond0
    
    Pings to 192.168.1.1 work just fine. Now turn on arp_validate:
    
    echo 1 > /sys/class/net/bond0/bonding/arp_validate
    
    Pings to 192.168.1.1 continue to work just fine. Now when you go to turn
    arp_validate off again, the link falls flat on it's face:
    
    echo 0 > /sys/class/net/bond0/bonding/arp_validate
    dmesg
    ...
    [133191.911987] bond0: Setting arp_validate to none (0)
    [133194.257793] bond0: bond_should_notify_peers: slave ens4f0
    [133194.258031] bond0: link status definitely down for interface ens4f0, disabling it
    [133194.259000] bond0: making interface ens4f1 the new active one
    [133197.330130] bond0: link status definitely down for interface ens4f1, disabling it
    [133197.331191] bond0: now running without any active interface!
    
    The problem lies in bond_options.c, where passing in arp_validate=0
    results in bond->recv_probe getting set to NULL. This flies directly in
    the face of commit 3fe68df97c7f, which says we need to set recv_probe =
    bond_arp_recv, even if we're not using arp_validate. Said commit fixed
    this in bond_option_arp_interval_set, but missed that we can get to that
    same state in bond_option_arp_validate_set as well.
    
    One solution would be to universally set recv_probe = bond_arp_recv here
    as well, but I don't think bond_option_arp_validate_set has any business
    touching recv_probe at all, and that should be left to the arp_interval
    code, so we can just make things much tidier here.
    
    Fixes: 3fe68df97c7f ("bonding: always set recv_probe to bond_arp_rcv in arp monitor")
    CC: Jay Vosburgh <j.vosburgh@gmail.com>
    CC: Veaceslav Falico <vfalico@gmail.com>
    CC: Andy Gospodarek <andy@greyhouse.net>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: netdev@vger.kernel.org
    Signed-off-by: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dc9ad4e904d98a1adfe4cf6f181f1c828f1e156
Author: Breno Leitao <leitao@debian.org>
Date:   Mon Oct 22 11:54:12 2018 -0300

    powerpc/64s: Include cpu header
    
    commit 42e2acde1237878462b028f5a27d9cc5bea7502c upstream.
    
    Current powerpc security.c file is defining functions, as
    cpu_show_meltdown(), cpu_show_spectre_v{1,2} and others, that are being
    declared at linux/cpu.h header without including the header file that
    contains these declarations.
    
    This is being reported by sparse, which thinks that these functions are
    static, due to the lack of declaration:
    
            arch/powerpc/kernel/security.c:105:9: warning: symbol 'cpu_show_meltdown' was not declared. Should it be static?
            arch/powerpc/kernel/security.c:139:9: warning: symbol 'cpu_show_spectre_v1' was not declared. Should it be static?
            arch/powerpc/kernel/security.c:161:9: warning: symbol 'cpu_show_spectre_v2' was not declared. Should it be static?
            arch/powerpc/kernel/security.c:209:6: warning: symbol 'stf_barrier' was not declared. Should it be static?
            arch/powerpc/kernel/security.c:289:9: warning: symbol 'cpu_show_spec_store_bypass' was not declared. Should it be static?
    
    This patch simply includes the proper header (linux/cpu.h) to match
    function definition and declaration.
    
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Joel Stanley <joel@jms.id.au>
    Cc: Nathan Chancellor <natechancellor@gmail.com>
    Cc: Major Hayden <major@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db1b4aa651df06e90efc2424d3a83bcf02fe93a5
Author: Ritesh Raj Sarraf <rrs@debian.org>
Date:   Thu Sep 20 11:56:38 2018 +0530

    um: Don't hardcode path as it is architecture dependent
    
    commit 9ca19a3a3e2482916c475b90f3d7fa2a03d8e5ed upstream.
    
    The current code fails to run on amd64 because of hardcoded reference to
    i386
    
    Signed-off-by: Ritesh Raj Sarraf <rrs@researchut.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85f347944a6b5235a202aee717a765e5d60dbb24
Author: Nigel Croxon <ncroxon@redhat.com>
Date:   Fri Mar 29 10:46:15 2019 -0700

    Don't jump to compute_result state from check_result state
    
    commit 4f4fd7c5798bbdd5a03a60f6269cf1177fbd11ef upstream.
    
    Changing state from check_state_check_result to
    check_state_compute_result not only is unsafe but also doesn't
    appear to serve a valid purpose.  A raid6 check should only be
    pushing out extra writes if doing repair and a mis-match occurs.
    The stripe dev management will already try and do repair writes
    for failing sectors.
    
    This patch makes the raid6 check_state_check_result handling
    work more like raid5's.  If somehow too many failures for a
    check, just quit the check operation for the stripe.  When any
    checks pass, don't try and use check_state_compute_result for
    a purpose it isn't needed for and is unsafe for.  Just mark the
    stripe as in sync for passing its parity checks and let the
    stripe dev read/write code and the bad blocks list do their
    job handling I/O errors.
    
    Repro steps from Xiao:
    
    These are the steps to reproduce this problem:
    1. redefined OPT_MEDIUM_ERR_ADDR to 12000 in scsi_debug.c
    2. insmod scsi_debug.ko dev_size_mb=11000  max_luns=1 num_tgts=1
    3. mdadm --create /dev/md127 --level=6 --raid-devices=5 /dev/sde1 /dev/sde2 /dev/sde3 /dev/sde5 /dev/sde6
    sde is the disk created by scsi_debug
    4. echo "2" >/sys/module/scsi_debug/parameters/opts
    5. raid-check
    
    It panic:
    [ 4854.730899] md: data-check of RAID array md127
    [ 4854.857455] sd 5:0:0:0: [sdr] tag#80 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.859246] sd 5:0:0:0: [sdr] tag#80 Sense Key : Medium Error [current]
    [ 4854.860694] sd 5:0:0:0: [sdr] tag#80 Add. Sense: Unrecovered read error
    [ 4854.862207] sd 5:0:0:0: [sdr] tag#80 CDB: Read(10) 28 00 00 00 2d 88 00 04 00 00
    [ 4854.864196] print_req_error: critical medium error, dev sdr, sector 11656 flags 0
    [ 4854.867409] sd 5:0:0:0: [sdr] tag#100 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.869469] sd 5:0:0:0: [sdr] tag#100 Sense Key : Medium Error [current]
    [ 4854.871206] sd 5:0:0:0: [sdr] tag#100 Add. Sense: Unrecovered read error
    [ 4854.872858] sd 5:0:0:0: [sdr] tag#100 CDB: Read(10) 28 00 00 00 2e e0 00 00 08 00
    [ 4854.874587] print_req_error: critical medium error, dev sdr, sector 12000 flags 4000
    [ 4854.876456] sd 5:0:0:0: [sdr] tag#101 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.878552] sd 5:0:0:0: [sdr] tag#101 Sense Key : Medium Error [current]
    [ 4854.880278] sd 5:0:0:0: [sdr] tag#101 Add. Sense: Unrecovered read error
    [ 4854.881846] sd 5:0:0:0: [sdr] tag#101 CDB: Read(10) 28 00 00 00 2e e8 00 00 08 00
    [ 4854.883691] print_req_error: critical medium error, dev sdr, sector 12008 flags 4000
    [ 4854.893927] sd 5:0:0:0: [sdr] tag#166 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [ 4854.896002] sd 5:0:0:0: [sdr] tag#166 Sense Key : Medium Error [current]
    [ 4854.897561] sd 5:0:0:0: [sdr] tag#166 Add. Sense: Unrecovered read error
    [ 4854.899110] sd 5:0:0:0: [sdr] tag#166 CDB: Read(10) 28 00 00 00 2e e0 00 00 10 00
    [ 4854.900989] print_req_error: critical medium error, dev sdr, sector 12000 flags 0
    [ 4854.902757] md/raid:md127: read error NOT corrected!! (sector 9952 on sdr1).
    [ 4854.904375] md/raid:md127: read error NOT corrected!! (sector 9960 on sdr1).
    [ 4854.906201] ------------[ cut here ]------------
    [ 4854.907341] kernel BUG at drivers/md/raid5.c:4190!
    
    raid5.c:4190 above is this BUG_ON:
    
        handle_parity_checks6()
            ...
            BUG_ON(s->uptodate < disks - 1); /* We don't need Q to recover */
    
    Cc: <stable@vger.kernel.org> # v3.16+
    OriginalAuthor: David Jeffery <djeffery@redhat.com>
    Cc: Xiao Ni <xni@redhat.com>
    Tested-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: David Jeffy <djeffery@redhat.com>
    Signed-off-by: Nigel Croxon <ncroxon@redhat.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ace28a8efdd4a22bebc6f3ac374afbb958d1ff4a
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Apr 16 10:17:22 2019 -0500

    rtlwifi: rtl8723ae: Fix missing break in switch statement
    
    commit 84242b82d81c54e009a2aaa74d3d9eff70babf56 upstream.
    
    Add missing break statement in order to prevent the code from falling
    through to case 0x1025, and erroneously setting rtlhal->oem_id to
    RT_CID_819X_ACER when rtlefuse->eeprom_svid is equal to 0x10EC and
    none of the cases in switch (rtlefuse->eeprom_smid) match.
    
    This bug was found thanks to the ongoing efforts to enable
    -Wimplicit-fallthrough.
    
    Fixes: 238ad2ddf34b ("rtlwifi: rtl8723ae: Clean up the hardware info routine")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d756d1dea6706b94b5863253b652c37cae8e5f34
Author: Petr Štetiar <ynezz@true.cz>
Date:   Thu Apr 11 20:13:30 2019 +0200

    mwl8k: Fix rate_idx underflow
    
    commit 6b583201fa219b7b1b6aebd8966c8fd9357ef9f4 upstream.
    
    It was reported on OpenWrt bug tracking system[1], that several users
    are affected by the endless reboot of their routers if they configure
    5GHz interface with channel 44 or 48.
    
    The reboot loop is caused by the following excessive number of WARN_ON
    messages:
    
     WARNING: CPU: 0 PID: 0 at backports-4.19.23-1/net/mac80211/rx.c:4516
                                 ieee80211_rx_napi+0x1fc/0xa54 [mac80211]
    
    as the messages are being correctly emitted by the following guard:
    
     case RX_ENC_LEGACY:
          if (WARN_ON(status->rate_idx >= sband->n_bitrates))
    
    as the rate_idx is in this case erroneously set to 251 (0xfb). This fix
    simply converts previously used magic number to proper constant and
    guards against substraction which is leading to the currently observed
    underflow.
    
    1. https://bugs.openwrt.org/index.php?do=details&task_id=2218
    
    Fixes: 854783444bab ("mwl8k: properly set receive status rate index on 5 GHz receive")
    Cc: <stable@vger.kernel.org>
    Tested-by: Eubert Bao <bunnier@gmail.com>
    Reported-by: Eubert Bao <bunnier@gmail.com>
    Signed-off-by: Petr Štetiar <ynezz@true.cz>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c300c98a94b46f8354b427359a2010c9093dd290
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Sat Dec 22 10:34:54 2018 +0000

    cw1200: fix missing unlock on error in cw1200_hw_scan()
    
    commit 51c8d24101c79ffce3e79137e2cee5dfeb956dd7 upstream.
    
    Add the missing unlock before return from function cw1200_hw_scan()
    in the error handling case.
    
    Fixes: 4f68ef64cd7f ("cw1200: Fix concurrency use-after-free bugs in cw1200_hw_scan()")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Acked-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 575260507647bbdc86ae11299054f474a1de1d61
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sun Feb 24 01:50:49 2019 +0900

    x86/kprobes: Avoid kretprobe recursion bug
    
    [ Upstream commit b191fa96ea6dc00d331dcc28c1f7db5e075693a0 ]
    
    Avoid kretprobe recursion loop bg by setting a dummy
    kprobes to current_kprobe per-CPU variable.
    
    This bug has been introduced with the asm-coded trampoline
    code, since previously it used another kprobe for hooking
    the function return placeholder (which only has a nop) and
    trampoline handler was called from that kprobe.
    
    This revives the old lost kprobe again.
    
    With this fix, we don't see deadlock anymore.
    
    And you can see that all inner-called kretprobe are skipped.
    
      event_1                                  235               0
      event_2                                19375           19612
    
    The 1st column is recorded count and the 2nd is missed count.
    Above shows (event_1 rec) + (event_2 rec) ~= (event_2 missed)
    (some difference are here because the counter is racy)
    
    Reported-by: Andrea Righi <righi.andrea@gmail.com>
    Tested-by: Andrea Righi <righi.andrea@gmail.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Fixes: c9becf58d935 ("[PATCH] kretprobe: kretprobe-booster")
    Link: http://lkml.kernel.org/r/155094064889.6137.972160690963039.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 322a57551d0655fc4198d4b131ad77dd171af769
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 3 10:13:51 2019 +0300

    nfc: nci: Potential off by one in ->pipes[] array
    
    [ Upstream commit 6491d698396fd5da4941980a35ca7c162a672016 ]
    
    This is similar to commit e285d5bfb7e9 ("NFC: Fix the number of pipes")
    where we changed NFC_HCI_MAX_PIPES from 127 to 128.
    
    As the comment next to the define explains, the pipe identifier is 7
    bits long.  The highest possible pipe is 127, but the number of possible
    pipes is 128.  As the code is now, then there is potential for an
    out of bounds array access:
    
        net/nfc/nci/hci.c:297 nci_hci_cmd_received() warn: array off by one?
        'ndev->hci_dev->pipes[pipe]' '0-127 == 127'
    
    Fixes: 11f54f228643 ("NFC: nci: Add HCI over NCI protocol support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit f5e60565e6bd9a54fa17d62bc397890a70d1d1d2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 3 10:12:48 2019 +0300

    NFC: nci: Add some bounds checking in nci_hci_cmd_received()
    
    [ Upstream commit d7ee81ad09f072eab1681877fc71ec05f9c1ae92 ]
    
    This is similar to commit 674d9de02aa7 ("NFC: Fix possible memory
    corruption when handling SHDLC I-Frame commands").
    
    I'm not totally sure, but I think that commit description may have
    overstated the danger.  I was under the impression that this data came
    from the firmware?  If you can't trust your networking firmware, then
    you're already in trouble.
    
    Anyway, these days we add bounds checking where ever we can and we call
    it kernel hardening.  Better safe than sorry.
    
    Fixes: 11f54f228643 ("NFC: nci: Add HCI over NCI protocol support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 21e9515b7d1681db4441325aa5c842efb96667a0
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Apr 10 11:04:32 2019 -0700

    net: strparser: partially revert "strparser: Call skb_unclone conditionally"
    
    [ Upstream commit 4a9c2e3746e6151fd5d077259d79ce9ca86d47d7 ]
    
    This reverts the first part of commit 4e485d06bb8c ("strparser: Call
    skb_unclone conditionally").  To build a message with multiple
    fragments we need our own root of frag_list.  We can't simply
    use the frag_list of orig_skb, because it will lead to linking
    all orig_skbs together creating very long frag chains, and causing
    stack overflow on kfree_skb() (which is called recursively on
    the frag_lists).
    
    BUG: stack guard page was hit at 00000000d40fad41 (stack is 0000000029dde9f4..000000008cce03d5)
    kernel stack overflow (double-fault): 0000 [#1] PREEMPT SMP
    RIP: 0010:free_one_page+0x2b/0x490
    
    Call Trace:
      __free_pages_ok+0x143/0x2c0
      skb_release_data+0x8e/0x140
      ? skb_release_data+0xad/0x140
      kfree_skb+0x32/0xb0
    
      [...]
    
      skb_release_data+0xad/0x140
      ? skb_release_data+0xad/0x140
      kfree_skb+0x32/0xb0
      skb_release_data+0xad/0x140
      ? skb_release_data+0xad/0x140
      kfree_skb+0x32/0xb0
      skb_release_data+0xad/0x140
      ? skb_release_data+0xad/0x140
      kfree_skb+0x32/0xb0
      skb_release_data+0xad/0x140
      ? skb_release_data+0xad/0x140
      kfree_skb+0x32/0xb0
      skb_release_data+0xad/0x140
      __kfree_skb+0xe/0x20
      tcp_disconnect+0xd6/0x4d0
      tcp_close+0xf4/0x430
      ? tcp_check_oom+0xf0/0xf0
      tls_sk_proto_close+0xe4/0x1e0 [tls]
      inet_release+0x36/0x60
      __sock_release+0x37/0xa0
      sock_close+0x11/0x20
      __fput+0xa2/0x1d0
      task_work_run+0x89/0xb0
      exit_to_usermode_loop+0x9a/0xa0
      do_syscall_64+0xc0/0xf0
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Let's leave the second unclone conditional, as I'm not entirely
    sure what is its purpose :)
    
    Fixes: 4e485d06bb8c ("strparser: Call skb_unclone conditionally")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 85b9e8694f9c03d508398bdb930e7d2109d07855
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Apr 10 11:04:30 2019 -0700

    net/tls: fix the IV leaks
    
    [ Upstream commit 5a03bc73abed6ae196c15e9950afde19d48be12c ]
    
    Commit f66de3ee2c16 ("net/tls: Split conf to rx + tx") made
    freeing of IV and record sequence number conditional to SW
    path only, but commit e8f69799810c ("net/tls: Add generic NIC
    offload infrastructure") also allocates that state for the
    device offload configuration.  Remember to free it.
    
    Fixes: e8f69799810c ("net/tls: Add generic NIC offload infrastructure")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit e38c6748d1ccf4b0651750289389168de722e934
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Apr 10 06:58:15 2019 +0000

    mlxsw: core: Do not use WQ_MEM_RECLAIM for mlxsw workqueue
    
    [ Upstream commit b442fed1b724af0de087912a5718ddde1b87acbb ]
    
    The workqueue is used to periodically update the networking stack about
    activity / statistics of various objects such as neighbours and TC
    actions.
    
    It should not be called as part of memory reclaim path, so remove the
    WQ_MEM_RECLAIM flag.
    
    Fixes: 3d5479e92087 ("mlxsw: core: Remove deprecated create_workqueue")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 835ae6cc28d9bc96fe62428862885cc510e534d7
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Apr 10 06:58:14 2019 +0000

    mlxsw: core: Do not use WQ_MEM_RECLAIM for mlxsw ordered workqueue
    
    [ Upstream commit 4af0699782e2cc7d0d89db9eb6f8844dd3df82dc ]
    
    The ordered workqueue is used to offload various objects such as routes
    and neighbours in the order they are notified.
    
    It should not be called as part of memory reclaim path, so remove the
    WQ_MEM_RECLAIM flag. This can also result in a warning [1], if a worker
    tries to flush a non-WQ_MEM_RECLAIM workqueue.
    
    [1]
    [97703.542861] workqueue: WQ_MEM_RECLAIM mlxsw_core_ordered:mlxsw_sp_router_fib6_event_work [mlxsw_spectrum] is flushing !WQ_MEM_RECLAIM events:rht_deferred_worker
    [97703.542884] WARNING: CPU: 1 PID: 32492 at kernel/workqueue.c:2605 check_flush_dependency+0xb5/0x130
    ...
    [97703.542988] Hardware name: Mellanox Technologies Ltd. MSN3700C/VMOD0008, BIOS 5.11 10/10/2018
    [97703.543049] Workqueue: mlxsw_core_ordered mlxsw_sp_router_fib6_event_work [mlxsw_spectrum]
    [97703.543061] RIP: 0010:check_flush_dependency+0xb5/0x130
    ...
    [97703.543071] RSP: 0018:ffffb3f08137bc00 EFLAGS: 00010086
    [97703.543076] RAX: 0000000000000000 RBX: ffff96e07740ae00 RCX: 0000000000000000
    [97703.543080] RDX: 0000000000000094 RSI: ffffffff82dc1934 RDI: 0000000000000046
    [97703.543084] RBP: ffffb3f08137bc20 R08: ffffffff82dc18a0 R09: 00000000000225c0
    [97703.543087] R10: 0000000000000000 R11: 0000000000007eec R12: ffffffff816e4ee0
    [97703.543091] R13: ffff96e06f6a5c00 R14: ffff96e077ba7700 R15: ffffffff812ab0c0
    [97703.543097] FS: 0000000000000000(0000) GS:ffff96e077a80000(0000) knlGS:0000000000000000
    [97703.543101] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [97703.543104] CR2: 00007f8cd135b280 CR3: 00000001e860e003 CR4: 00000000003606e0
    [97703.543109] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [97703.543112] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [97703.543115] Call Trace:
    [97703.543129] __flush_work+0xbd/0x1e0
    [97703.543137] ? __cancel_work_timer+0x136/0x1b0
    [97703.543145] ? pwq_dec_nr_in_flight+0x49/0xa0
    [97703.543154] __cancel_work_timer+0x136/0x1b0
    [97703.543175] ? mlxsw_reg_trans_bulk_wait+0x145/0x400 [mlxsw_core]
    [97703.543184] cancel_work_sync+0x10/0x20
    [97703.543191] rhashtable_free_and_destroy+0x23/0x140
    [97703.543198] rhashtable_destroy+0xd/0x10
    [97703.543254] mlxsw_sp_fib_destroy+0xb1/0xf0 [mlxsw_spectrum]
    [97703.543310] mlxsw_sp_vr_put+0xa8/0xc0 [mlxsw_spectrum]
    [97703.543364] mlxsw_sp_fib_node_put+0xbf/0x140 [mlxsw_spectrum]
    [97703.543418] ? mlxsw_sp_fib6_entry_destroy+0xe8/0x110 [mlxsw_spectrum]
    [97703.543475] mlxsw_sp_router_fib6_event_work+0x6cd/0x7f0 [mlxsw_spectrum]
    [97703.543484] process_one_work+0x1fd/0x400
    [97703.543493] worker_thread+0x34/0x410
    [97703.543500] kthread+0x121/0x140
    [97703.543507] ? process_one_work+0x400/0x400
    [97703.543512] ? kthread_park+0x90/0x90
    [97703.543523] ret_from_fork+0x35/0x40
    
    Fixes: a3832b31898f ("mlxsw: core: Create an ordered workqueue for FIB offload")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Semion Lisyansky <semionl@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 880a328e197b7f1eb0123f308768da469f00339d
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Apr 10 06:58:13 2019 +0000

    mlxsw: core: Do not use WQ_MEM_RECLAIM for EMAD workqueue
    
    [ Upstream commit a8c133b06183c529c51cd0d54eb57d6b7078370c ]
    
    The EMAD workqueue is used to handle retransmission of EMAD packets that
    contain configuration data for the device's firmware.
    
    Given the workers need to allocate these packets and that the code is
    not called as part of memory reclaim path, remove the WQ_MEM_RECLAIM
    flag.
    
    Fixes: d965465b60ba ("mlxsw: core: Fix possible deadlock")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit a80f62f781c2d3ed40f81a0017c5b2200147a23b
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Apr 10 06:58:12 2019 +0000

    mlxsw: spectrum_switchdev: Add MDB entries in prepare phase
    
    [ Upstream commit d4d0e40977ac450f32f2db5e4d8e23c9d2578899 ]
    
    The driver cannot guarantee in the prepare phase that it will be able to
    write an MDB entry to the device. In case the driver returned success
    during the prepare phase, but then failed to add the entry in the commit
    phase, a WARNING [1] will be generated by the switchdev core.
    
    Fix this by doing the work in the prepare phase instead.
    
    [1]
    [  358.544486] swp12s0: Commit of object (id=2) failed.
    [  358.550061] WARNING: CPU: 0 PID: 30 at net/switchdev/switchdev.c:281 switchdev_port_obj_add_now+0x9b/0xe0
    [  358.560754] CPU: 0 PID: 30 Comm: kworker/0:1 Not tainted 5.0.0-custom-13382-gf2449babf221 #1350
    [  358.570472] Hardware name: Mellanox Technologies Ltd. MSN2100-CB2FO/SA001017, BIOS 5.6.5 06/07/2016
    [  358.580582] Workqueue: events switchdev_deferred_process_work
    [  358.587001] RIP: 0010:switchdev_port_obj_add_now+0x9b/0xe0
    ...
    [  358.614109] RSP: 0018:ffffa6b900d6fe18 EFLAGS: 00010286
    [  358.619943] RAX: 0000000000000000 RBX: ffff8b00797ff000 RCX: 0000000000000000
    [  358.627912] RDX: ffff8b00b7a1d4c0 RSI: ffff8b00b7a152e8 RDI: ffff8b00b7a152e8
    [  358.635881] RBP: ffff8b005c3f5bc0 R08: 000000000000022b R09: 0000000000000000
    [  358.643850] R10: 0000000000000000 R11: ffffa6b900d6fcc8 R12: 0000000000000000
    [  358.651819] R13: dead000000000100 R14: ffff8b00b65a23c0 R15: 0ffff8b00b7a2200
    [  358.659790] FS:  0000000000000000(0000) GS:ffff8b00b7a00000(0000) knlGS:0000000000000000
    [  358.668820] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  358.675228] CR2: 00007f00aad90de0 CR3: 00000001ca80d000 CR4: 00000000001006f0
    [  358.683188] Call Trace:
    [  358.685918]  switchdev_port_obj_add_deferred+0x13/0x60
    [  358.691655]  switchdev_deferred_process+0x6b/0xf0
    [  358.696907]  switchdev_deferred_process_work+0xa/0x10
    [  358.702548]  process_one_work+0x1f5/0x3f0
    [  358.707022]  worker_thread+0x28/0x3c0
    [  358.711099]  ? process_one_work+0x3f0/0x3f0
    [  358.715768]  kthread+0x10d/0x130
    [  358.719369]  ? __kthread_create_on_node+0x180/0x180
    [  358.724815]  ret_from_fork+0x35/0x40
    
    Fixes: 3a49b4fde2a1 ("mlxsw: Adding layer 2 multicast support")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Alex Kushnarov <alexanderk@mellanox.com>
    Tested-by: Alex Kushnarov <alexanderk@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit fb7c783b31392b5909a3723fc664cdecd42e4f14
Author: Andy Duan <fugang.duan@nxp.com>
Date:   Tue Apr 9 03:40:56 2019 +0000

    net: fec: manage ahb clock in runtime pm
    
    [ Upstream commit d7c3a206e6338e4ccdf030719dec028e26a521d5 ]
    
    Some SOC like i.MX6SX clock have some limits:
    - ahb clock should be disabled before ipg.
    - ahb and ipg clocks are required for MAC MII bus.
    So, move the ahb clock to runtime management together with
    ipg clock.
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit c18731c2786c032ed618ebb4cbc04af71595e56c
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Tue Mar 19 13:22:41 2019 +0900

    netfilter: nf_tables: add missing ->release_ops() in error path of newrule()
    
    [ Upstream commit b25a31bf0ca091aa8bdb9ab329b0226257568bbe ]
    
    ->release_ops() callback releases resources and this is used in error path.
    If nf_tables_newrule() fails after ->select_ops(), it should release
    resources. but it can not call ->destroy() because that should be called
    after ->init().
    At this point, ->release_ops() should be used for releasing resources.
    
    Test commands:
       modprobe -rv xt_tcpudp
       iptables-nft -I INPUT -m tcp   <-- error command
       lsmod
    
    Result:
       Module                  Size  Used by
       xt_tcpudp              20480  2      <-- it should be 0
    
    Fixes: b8e204006340 ("netfilter: nft_compat: use .release_ops and remove list of extension")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 5014aa93742293b4622b8d766ad0b08db2611f7f
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Mar 11 13:04:16 2019 +0100

    netfilter: nf_tables: use-after-free in dynamic operations
    
    [ Upstream commit 3f3a390dbd59d236f62cff8e8b20355ef7069e3d ]
    
    Smatch reports:
    
           net/netfilter/nf_tables_api.c:2167 nf_tables_expr_destroy()
            error: dereferencing freed memory 'expr->ops'
    
    net/netfilter/nf_tables_api.c
        2162 static void nf_tables_expr_destroy(const struct nft_ctx *ctx,
        2163                                   struct nft_expr *expr)
        2164 {
        2165        if (expr->ops->destroy)
        2166                expr->ops->destroy(ctx, expr);
                                                    ^^^^
    --> 2167        module_put(expr->ops->type->owner);
                               ^^^^^^^^^
        2168 }
    
    Smatch says there are three functions which free expr->ops.
    
    Fixes: b8e204006340 ("netfilter: nft_compat: use .release_ops and remove list of extension")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 9965da064e9ab73d9e027e1367ca6e1b117ec269
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Mon Mar 18 16:18:30 2019 -0500

    usb: typec: Fix unchecked return value
    
    [ Upstream commit e82adc1074a7356f1158233551df9e86b7ebfb82 ]
    
    Currently there is no check on platform_get_irq() return value
    in case it fails, hence never actually reporting any errors and
    causing unexpected behavior when using such value as argument
    for function regmap_irq_get_virq().
    
    Fix this by adding a proper check, a message error and return
    *irq* in case platform_get_irq() fails.
    
    Addresses-Coverity-ID: 1443899 ("Improper use of negative value")
    Fixes: d2061f9cc32d ("usb: typec: add driver for Intel Whiskey Cove PMIC USB Type-C PHY")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 68321994225d565beb928e7ed92193579df6ecc4
Author: Jan Kara <jack@suse.cz>
Date:   Thu Mar 28 20:43:19 2019 -0700

    mm/memory.c: fix modifying of page protection by insert_pfn()
    
    [ Upstream commit cae85cb8add35f678cf487139d05e083ce2f570a ]
    
    Aneesh has reported that PPC triggers the following warning when
    excercising DAX code:
    
      IP set_pte_at+0x3c/0x190
      LR insert_pfn+0x208/0x280
      Call Trace:
         insert_pfn+0x68/0x280
         dax_iomap_pte_fault.isra.7+0x734/0xa40
         __xfs_filemap_fault+0x280/0x2d0
         do_wp_page+0x48c/0xa40
         __handle_mm_fault+0x8d0/0x1fd0
         handle_mm_fault+0x140/0x250
         __do_page_fault+0x300/0xd60
         handle_page_fault+0x18
    
    Now that is WARN_ON in set_pte_at which is
    
            VM_WARN_ON(pte_hw_valid(*ptep) && !pte_protnone(*ptep));
    
    The problem is that on some architectures set_pte_at() cannot cope with
    a situation where there is already some (different) valid entry present.
    
    Use ptep_set_access_flags() instead to modify the pfn which is built to
    deal with modifying existing PTE.
    
    Link: http://lkml.kernel.org/r/20190311084537.16029-1-jack@suse.cz
    Fixes: b2770da64254 "mm: add vm_insert_mixed_mkwrite()"
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reported-by: "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Cc: Chandan Rajendra <chandan@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit bc3361461fcba3aee3963971d82b0df50675cd37
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sat Mar 23 19:41:32 2019 +0100

    net: dsa: mv88e6xxx: fix few issues in mv88e6390x_port_set_cmode
    
    [ Upstream commit 5ceaeb99ffb4dc002d20f6ac243c19a85e2c7a76 ]
    
    This patches fixes few issues in mv88e6390x_port_set_cmode().
    
    1. When entering the function the old cmode may be 0, in this case
       mv88e6390x_serdes_get_lane() returns -ENODEV. As result we bail
       out and have no chance to set a new mode. Therefore deal properly
       with -ENODEV.
    
    2. Once we have disabled power and irq, let's set the cached cmode to 0.
       This reflects the actual status and is cleaner if we bail out with an
       error in the following function calls.
    
    3. The cached cmode is used by mv88e6390x_serdes_get_lane(),
       mv88e6390_serdes_power_lane() and mv88e6390_serdes_irq_enable().
       Currently we set the cached mode to the new one at the very end of
       the function only, means until then we use the old one what may be
       wrong.
    
    4. When calling mv88e6390_serdes_irq_enable() we use the lane value
       belonging to the old cmode. Get the lane belonging to the new cmode
       before calling this function.
    
    It's hard to provide a good "Fixes" tag because quite a few smaller
    changes have been done to the code in question recently.
    
    Fixes: d235c48b40d3 ("net: dsa: mv88e6xxx: power serdes on/off for 10G interfaces on 6390X")
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 19f4f94fdb2a5811ca70f2c9788c6d1f4b954520
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Mon Nov 26 12:01:06 2018 +1000

    powerpc/smp: Fix NMI IPI xmon timeout
    
    [ Upstream commit 88b9a3d1425a436e95c41f09986fdae2daee437a ]
    
    The xmon debugger IPI handler waits in the callback function while
    xmon is still active. This means they don't complete the IPI, and the
    initiator always times out waiting for them.
    
    Things manage to work after the timeout because there is some fallback
    logic to keep NMI IPI state sane in case of the timeout, but this is a
    bit ugly.
    
    This patch changes NMI IPI back to half-asynchronous (i.e., wait for
    everyone to call in, do not wait for IPI function to complete), but
    the complexity is avoided by going one step further and allowing new
    IPIs to be issued before the IPI functions to all complete.
    
    If synchronization against that is required, it is left up to the
    caller, but current callers don't require that. In fact with the
    timeout handling, callers must be able to cope with this already.
    
    Fixes: 5b73151fff63 ("powerpc: NMI IPI make NMI IPIs fully sychronous")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit f8bd34d1d399139e1e92074f139e642c67162745
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Mon Nov 26 12:01:05 2018 +1000

    powerpc/smp: Fix NMI IPI timeout
    
    [ Upstream commit 1b5fc84aba170bdfe3533396ca9662ceea1609b7 ]
    
    The NMI IPI timeout logic is broken, if __smp_send_nmi_ipi() times out
    on the first condition, delay_us will be zero which will send it into
    the second spin loop with no timeout so it will spin forever.
    
    Fixes: 5b73151fff63 ("powerpc: NMI IPI make NMI IPIs fully sychronous")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>

commit 6a60fb62c82ab92fb1fcef0cfd097bd392ea095e
Author: David Hildenbrand <david@redhat.com>
Date:   Thu Apr 25 22:23:37 2019 -0700

    mm/memory_hotplug.c: drop memory device reference after find_memory_block()
    
    [ Upstream commit 89c02e69fc5245f8a2f34b58b42d43a737af1a5e ]
    
    Right now we are using find_memory_block() to get the node id for the
    pfn range to online.  We are missing to drop a reference to the memory
    block device.  While the device still gets unregistered via
    device_unregister(), resulting in no user visible problem, the device is
    never released via device_release(), resulting in a memory leak.  Fix
    that by properly using a put_device().
    
    Link: http://lkml.kernel.org/r/20190411110955.1430-1-david@redhat.com
    Fixes: d0dc12e86b31 ("mm/memory_hotplug: optimize memory hotplug")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Reviewed-by: Wei Yang <richard.weiyang@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Pankaj Gupta <pagupta@redhat.com>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
    Cc: Qian Cai <cai@lca.pw>
    Cc: Arun KS <arunks@codeaurora.org>
    Cc: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb67c97c4e2f2dab250bbedae3d39a27d451d37f
Author: Lijun Ou <oulijun@huawei.com>
Date:   Tue Apr 23 17:30:26 2019 +0800

    RDMA/hns: Bugfix for mapping user db
    
    [ Upstream commit 2557fabd6e29f349bfa0ac13f38ac98aa5eafc74 ]
    
    When the maximum send wr delivered by the user is zero, the qp does not
    have a sq.
    
    When allocating the sq db buffer to store the user sq pi pointer and map
    it to the kernel mode, max_send_wr is used as the trigger condition, while
    the kernel does not consider the max_send_wr trigger condition when
    mapmping db. It will cause sq record doorbell map fail and create qp fail.
    
    The failed print information as follows:
    
     hns3 0000:7d:00.1: Send cmd: tail - 418, opcode - 0x8504, flag - 0x0011, retval - 0x0000
     hns3 0000:7d:00.1: Send cmd: 0xe59dc000 0x00000000 0x00000000 0x00000000 0x00000116 0x0000ffff
     hns3 0000:7d:00.1: sq record doorbell map failed!
     hns3 0000:7d:00.1: Create RC QP failed
    
    Fixes: 0425e3e6e0c7 ("RDMA/hns: Support flush cqe for hip08 in kernel space")
    Signed-off-by: Lijun Ou <oulijun@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afc7cebbbb5ed605fe76f44a3017613f2178ee0e
Author: Pan Bian <bianpan2016@163.com>
Date:   Fri Apr 19 07:39:00 2019 +0000

    Input: synaptics-rmi4 - fix possible double free
    
    [ Upstream commit bce1a78423961fce676ac65540a31b6ffd179e6d ]
    
    The RMI4 function structure has been released in rmi_register_function
    if error occurs. However, it will be released again in the function
    rmi_create_function, which may result in a double-free bug.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f621bc1bd7f440e1c6300665cfbe4d1caef46685
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Wed Apr 24 11:04:13 2019 +0200

    drm/sun4i: Unbind components before releasing DRM and memory
    
    [ Upstream commit e02bc29b2cfa7806830d6da8b2322cddd67e8dfe ]
    
    Our components may still be using the DRM device driver (if only to
    access our driver's private data), so make sure to unbind them before
    the final drm_dev_put.
    
    Also release our reserved memory after component unbind instead of
    before to match reverse creation order.
    
    Fixes: f5a9ed867c83 ("drm/sun4i: Fix component unbinding and component master deletion")
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190424090413.6918-1-paul.kocialkowski@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21b71e191bd870dd967c6dc84bf874087769d884
Author: Daniel Gomez <dagmcr@gmail.com>
Date:   Mon Apr 22 21:08:04 2019 +0200

    spi: ST ST95HF NFC: declare missing of table
    
    [ Upstream commit d04830531d0c4a99c897a44038e5da3d23331d2f ]
    
    Add missing <of_device_id> table for SPI driver relying on SPI
    device match since compatible is in a DT binding or in a DTS.
    
    Before this patch:
    modinfo drivers/nfc/st95hf/st95hf.ko | grep alias
    alias:          spi:st95hf
    
    After this patch:
    modinfo drivers/nfc/st95hf/st95hf.ko | grep alias
    alias:          spi:st95hf
    alias:          of:N*T*Cst,st95hfC*
    alias:          of:N*T*Cst,st95hf
    
    Reported-by: Javier Martinez Canillas <javier@dowhile0.org>
    Signed-off-by: Daniel Gomez <dagmcr@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09185e35982784678ad1a9e72a1ad0c0abe07f4d
Author: Daniel Gomez <dagmcr@gmail.com>
Date:   Mon Apr 22 21:08:03 2019 +0200

    spi: Micrel eth switch: declare missing of table
    
    [ Upstream commit 2f23a2a768bee7ad2ff1e9527c3f7e279e794a46 ]
    
    Add missing <of_device_id> table for SPI driver relying on SPI
    device match since compatible is in a DT binding or in a DTS.
    
    Before this patch:
    modinfo drivers/net/phy/spi_ks8995.ko | grep alias
    alias:          spi:ksz8795
    alias:          spi:ksz8864
    alias:          spi:ks8995
    
    After this patch:
    modinfo drivers/net/phy/spi_ks8995.ko | grep alias
    alias:          spi:ksz8795
    alias:          spi:ksz8864
    alias:          spi:ks8995
    alias:          of:N*T*Cmicrel,ksz8795C*
    alias:          of:N*T*Cmicrel,ksz8795
    alias:          of:N*T*Cmicrel,ksz8864C*
    alias:          of:N*T*Cmicrel,ksz8864
    alias:          of:N*T*Cmicrel,ks8995C*
    alias:          of:N*T*Cmicrel,ks8995
    
    Reported-by: Javier Martinez Canillas <javier@dowhile0.org>
    Signed-off-by: Daniel Gomez <dagmcr@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3835cb5a911f1f7392c48fabbec63d99e833bb54
Author: Tigran Tadevosyan <tigran.tadevosyan@arm.com>
Date:   Fri Apr 5 14:16:13 2019 +0100

    ARM: 8856/1: NOMMU: Fix CCR register faulty initialization when MPU is disabled
    
    [ Upstream commit c3143967807adb1357c36b68a7563fc0c4e1f615 ]
    
    When CONFIG_ARM_MPU is not defined, the base address of v7M SCB register
    is not initialized with correct value. This prevents enabling I/D caches
    when the L1 cache poilcy is applied in kernel.
    
    Fixes: 3c24121039c9da14692eb48f6e39565b28c0f3cf ("ARM: 8756/1: NOMMU: Postpone MPU activation till __after_proc_init")
    Signed-off-by: Tigran Tadevosyan <tigran.tadevosyan@arm.com>
    Signed-off-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 521ae4da71ccd76eafe2d29706ee6b8176c5ec2c
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Apr 12 17:59:41 2019 +0200

    drm/imx: don't skip DP channel disable for background plane
    
    [ Upstream commit 7bcde275eb1d0ac8793c77c7e666a886eb16633d ]
    
    In order to make sure that the plane color space gets reset correctly.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df3a97d197a3a8c15d843f7bb8b1d0d4ab94427a
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Apr 12 17:59:40 2019 +0200

    gpu: ipu-v3: dp: fix CSC handling
    
    [ Upstream commit d4fad0a426c6e26f48c9a7cdd21a7fe9c198d645 ]
    
    Initialize the flow input colorspaces to unknown and reset to that value
    when the channel gets disabled. This avoids the state getting mixed up
    with a previous mode.
    
    Also keep the CSC settings for the background flow intact when disabling
    the foreground flow.
    
    Root-caused-by: Jonathan Marek <jonathan@marek.ca>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a53fa469d6001dc41ab9ef0dc909287d67ab716
Author: Andrei Vagin <avagin@gmail.com>
Date:   Wed Apr 17 09:49:44 2019 -0700

    netfilter: fix nf_l4proto_log_invalid to log invalid packets
    
    [ Upstream commit d48668052b2603b6262459625c86108c493588dd ]
    
    It doesn't log a packet if sysctl_log_invalid isn't equal to protonum
    OR sysctl_log_invalid isn't equal to IPPROTO_RAW. This sentence is
    always true. I believe we need to replace OR to AND.
    
    Cc: Florian Westphal <fw@strlen.de>
    Fixes: c4f3db1595827 ("netfilter: conntrack: add and use nf_l4proto_log_invalid")
    Signed-off-by: Andrei Vagin <avagin@gmail.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bc3d44918213d6a2770f1820aefcb06e94557aa
Author: Po-Hsu Lin <po-hsu.lin@canonical.com>
Date:   Thu Apr 18 19:57:25 2019 +0800

    selftests/net: correct the return value for run_netsocktests
    
    [ Upstream commit 30c04d796b693e22405c38e9b78e9a364e4c77e6 ]
    
    The run_netsocktests will be marked as passed regardless the actual test
    result from the ./socket:
    
        selftests: net: run_netsocktests
        ========================================
        --------------------
        running socket test
        --------------------
        [FAIL]
        ok 1..6 selftests: net: run_netsocktests [PASS]
    
    This is because the test script itself has been successfully executed.
    Fix this by exit 1 when the test failed.
    
    Signed-off-by: Po-Hsu Lin <po-hsu.lin@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24b1c849ce9d660bf7ce286f3c13ebd79ec4b7eb
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Thu Apr 18 15:27:27 2019 +0200

    drm/sun4i: Fix component unbinding and component master deletion
    
    [ Upstream commit f5a9ed867c83875546c9aadd4ed8e785e9adcc3c ]
    
    For our component-backed driver to be properly removed, we need to
    delete the component master in sun4i_drv_remove and make sure to call
    component_unbind_all in the master's unbind so that all components are
    unbound when the master is.
    
    Fixes: 9026e0d122ac ("drm: Add Allwinner A10 Display Engine support")
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190418132727.5128-4-paul.kocialkowski@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1973df1ec5bca945359dfc1af0e0f7471fa0c509
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Thu Apr 18 15:27:26 2019 +0200

    drm/sun4i: Set device driver data at bind time for use in unbind
    
    [ Upstream commit 02b92adbe33e6dbd15dc6e32540b22f47c4ff0a2 ]
    
    Our sun4i_drv_unbind gets the drm device using dev_get_drvdata.
    However, that driver data is never set in sun4i_drv_bind.
    
    Set it there to avoid getting a NULL pointer at unbind time.
    
    Fixes: 9026e0d122ac ("drm: Add Allwinner A10 Display Engine support")
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190418132727.5128-3-paul.kocialkowski@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 005325b7f0262a62accc27152af31f80a7a54752
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Apr 17 18:29:13 2019 +0200

    s390: ctcm: fix ctcm_new_device error return code
    
    [ Upstream commit 27b141fc234a3670d21bd742c35d7205d03cbb3a ]
    
    clang points out that the return code from this function is
    undefined for one of the error paths:
    
    ../drivers/s390/net/ctcm_main.c:1595:7: warning: variable 'result' is used uninitialized whenever 'if' condition is true
          [-Wsometimes-uninitialized]
                    if (priv->channel[direction] == NULL) {
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ../drivers/s390/net/ctcm_main.c:1638:9: note: uninitialized use occurs here
            return result;
                   ^~~~~~
    ../drivers/s390/net/ctcm_main.c:1595:3: note: remove the 'if' if its condition is always false
                    if (priv->channel[direction] == NULL) {
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ../drivers/s390/net/ctcm_main.c:1539:12: note: initialize the variable 'result' to silence this warning
            int result;
                      ^
    
    Make it return -ENODEV here, as in the related failure cases.
    gcc has a known bug in underreporting some of these warnings
    when it has already eliminated the assignment of the return code
    based on some earlier optimization step.
    
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca8648816e3dcc8dadba0e79a034f61c85eb206d
Author: Petr Štetiar <ynezz@true.cz>
Date:   Fri Apr 12 23:08:32 2019 +0200

    MIPS: perf: ath79: Fix perfcount IRQ assignment
    
    [ Upstream commit a1e8783db8e0d58891681bc1e6d9ada66eae8e20 ]
    
    Currently it's not possible to use perf on ath79 due to genirq flags
    mismatch happening on static virtual IRQ 13 which is used for
    performance counters hardware IRQ 5.
    
    On TP-Link Archer C7v5:
    
               CPU0
      2:          0      MIPS   2  ath9k
      4:        318      MIPS   4  19000000.eth
      7:      55034      MIPS   7  timer
      8:       1236      MISC   3  ttyS0
     12:          0      INTC   1  ehci_hcd:usb1
     13:          0  gpio-ath79   2  keys
     14:          0  gpio-ath79   5  keys
     15:         31  AR724X PCI    1  ath10k_pci
    
     $ perf top
     genirq: Flags mismatch irq 13. 00014c83 (mips_perf_pmu) vs. 00002003 (keys)
    
    On TP-Link Archer C7v4:
    
             CPU0
      4:          0      MIPS   4  19000000.eth
      5:       7135      MIPS   5  1a000000.eth
      7:      98379      MIPS   7  timer
      8:         30      MISC   3  ttyS0
     12:      90028      INTC   0  ath9k
     13:       5520      INTC   1  ehci_hcd:usb1
     14:       4623      INTC   2  ehci_hcd:usb2
     15:      32844  AR724X PCI    1  ath10k_pci
     16:          0  gpio-ath79  16  keys
     23:          0  gpio-ath79  23  keys
    
     $ perf top
     genirq: Flags mismatch irq 13. 00014c80 (mips_perf_pmu) vs. 00000080 (ehci_hcd:usb1)
    
    This problem is happening, because currently statically assigned virtual
    IRQ 13 for performance counters is not claimed during the initialization
    of MIPS PMU during the bootup, so the IRQ subsystem doesn't know, that
    this interrupt isn't available for further use.
    
    So this patch fixes the issue by simply booking hardware IRQ 5 for MIPS PMU.
    
    Tested-by: Kevin 'ldir' Darbyshire-Bryant <ldir@darbyshire-bryant.me.uk>
    Signed-off-by: Petr Štetiar <ynezz@true.cz>
    Acked-by: John Crispin <john@phrozen.org>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: linux-mips@vger.kernel.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 743a5a951d4da68d0210a53bf4327b92153f5143
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Apr 6 08:26:52 2019 +0300

    netfilter: nf_tables: prevent shift wrap in nft_chain_parse_hook()
    
    [ Upstream commit 33d1c018179d0a30c39cc5f1682b77867282694b ]
    
    I believe that "hook->num" can be up to UINT_MAX.  Shifting more than
    31 bits would is undefined in C but in practice it would lead to shift
    wrapping.  That would lead to an array overflow in nf_tables_addchain():
    
            ops->hook       = hook.type->hooks[ops->hooknum];
    
    Fixes: fe19c04ca137 ("netfilter: nf_tables: remove nhooks field from struct nft_af_info")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b115755fb9d3aff0ddcd18a5c4d83381362acce
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Apr 1 13:08:54 2019 +0200

    netfilter: ctnetlink: don't use conntrack/expect object addresses as id
    
    [ Upstream commit 3c79107631db1f7fd32cf3f7368e4672004a3010 ]
    
    else, we leak the addresses to userspace via ctnetlink events
    and dumps.
    
    Compute an ID on demand based on the immutable parts of nf_conn struct.
    
    Another advantage compared to using an address is that there is no
    immediate re-use of the same ID in case the conntrack entry is freed and
    reallocated again immediately.
    
    Fixes: 3583240249ef ("[NETFILTER]: nf_conntrack_expect: kill unique ID")
    Fixes: 7f85f914721f ("[NETFILTER]: nf_conntrack: kill unique ID")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e1994ef63657da08709640eada7b4c727818a1a
Author: Julian Anastasov <ja@ssi.bg>
Date:   Sun Mar 31 13:24:52 2019 +0300

    ipvs: do not schedule icmp errors from tunnels
    
    [ Upstream commit 0261ea1bd1eb0da5c0792a9119b8655cf33c80a3 ]
    
    We can receive ICMP errors from client or from
    tunneling real server. While the former can be
    scheduled to real server, the latter should
    not be scheduled, they are decapsulated only when
    existing connection is found.
    
    Fixes: 6044eeffafbe ("ipvs: attempt to schedule icmp packets")
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb9a11d017c63457ca1ae69d6f2575541e3ec7fb
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Mar 25 23:11:53 2019 +0100

    selftests: netfilter: check icmp pkttoobig errors are set as related
    
    [ Upstream commit becf2319f320cae43e20cf179cc51a355a0deb5f ]
    
    When an icmp error such as pkttoobig is received, conntrack checks
    if the "inner" header (header of packet that did not fit link mtu)
    is matches an existing connection, and, if so, sets that packet as
    being related to the conntrack entry it found.
    
    It was recently reported that this "related" setting also works
    if the inner header is from another, different connection (i.e.,
    artificial/forged icmp error).
    
    Add a test, followup patch will add additional "inner dst matches
    outer dst in reverse direction" check before setting related state.
    
    Link: https://www.synacktiv.com/posts/systems/icmp-reachable.html
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74e9b761fba08934f8b4c19cdd857f0beefda652
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Apr 18 17:50:44 2019 -0700

    init: initialize jump labels before command line option parsing
    
    [ Upstream commit 6041186a32585fc7a1d0f6cfe2f138b05fdc3c82 ]
    
    When a module option, or core kernel argument, toggles a static-key it
    requires jump labels to be initialized early.  While x86, PowerPC, and
    ARM64 arrange for jump_label_init() to be called before parse_args(),
    ARM does not.
    
      Kernel command line: rdinit=/sbin/init page_alloc.shuffle=1 panic=-1 console=ttyAMA0,115200 page_alloc.shuffle=1
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 0 at ./include/linux/jump_label.h:303
      page_alloc_shuffle+0x12c/0x1ac
      static_key_enable(): static key 'page_alloc_shuffle_key+0x0/0x4' used
      before call to jump_label_init()
      Modules linked in:
      CPU: 0 PID: 0 Comm: swapper Not tainted
      5.1.0-rc4-next-20190410-00003-g3367c36ce744 #1
      Hardware name: ARM Integrator/CP (Device Tree)
      [<c0011c68>] (unwind_backtrace) from [<c000ec48>] (show_stack+0x10/0x18)
      [<c000ec48>] (show_stack) from [<c07e9710>] (dump_stack+0x18/0x24)
      [<c07e9710>] (dump_stack) from [<c001bb1c>] (__warn+0xe0/0x108)
      [<c001bb1c>] (__warn) from [<c001bb88>] (warn_slowpath_fmt+0x44/0x6c)
      [<c001bb88>] (warn_slowpath_fmt) from [<c0b0c4a8>]
      (page_alloc_shuffle+0x12c/0x1ac)
      [<c0b0c4a8>] (page_alloc_shuffle) from [<c0b0c550>] (shuffle_store+0x28/0x48)
      [<c0b0c550>] (shuffle_store) from [<c003e6a0>] (parse_args+0x1f4/0x350)
      [<c003e6a0>] (parse_args) from [<c0ac3c00>] (start_kernel+0x1c0/0x488)
    
    Move the fallback call to jump_label_init() to occur before
    parse_args().
    
    The redundant calls to jump_label_init() in other archs are left intact
    in case they have static key toggling use cases that are even earlier
    than option parsing.
    
    Link: http://lkml.kernel.org/r/155544804466.1032396.13418949511615676665.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Reported-by: Guenter Roeck <groeck@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Russell King <rmk@armlinux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6536de8232c8bc8dc47f6a3fcecd4dd80edf6a3e
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Thu Apr 18 17:50:34 2019 -0700

    mm: fix inactive list balancing between NUMA nodes and cgroups
    
    [ Upstream commit 3b991208b897f52507168374033771a984b947b1 ]
    
    During !CONFIG_CGROUP reclaim, we expand the inactive list size if it's
    thrashing on the node that is about to be reclaimed.  But when cgroups
    are enabled, we suddenly ignore the node scope and use the cgroup scope
    only.  The result is that pressure bleeds between NUMA nodes depending
    on whether cgroups are merely compiled into Linux.  This behavioral
    difference is unexpected and undesirable.
    
    When the refault adaptivity of the inactive list was first introduced,
    there were no statistics at the lruvec level - the intersection of node
    and memcg - so it was better than nothing.
    
    But now that we have that infrastructure, use lruvec_page_state() to
    make the list balancing decision always NUMA aware.
    
    [hannes@cmpxchg.org: fix bisection hole]
      Link: http://lkml.kernel.org/r/20190417155241.GB23013@cmpxchg.org
    Link: http://lkml.kernel.org/r/20190412144438.2645-1-hannes@cmpxchg.org
    Fixes: 2a2e48854d70 ("mm: vmscan: fix IO/refault regression in cache workingset transition")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1134736869ef8dbb4fd9f608d8b7b4d103c0ff40
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Apr 18 18:13:58 2019 +0200

    scsi: aic7xxx: fix EISA support
    
    [ Upstream commit 144ec97493af34efdb77c5aba146e9c7de8d0a06 ]
    
    Instead of relying on the now removed NULL argument to
    pci_alloc_consistent, switch to the generic DMA API, and store the struct
    device so that we can pass it.
    
    Fixes: 4167b2ad5182 ("PCI: Remove NULL device handling from PCI DMA API")
    Reported-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba87f547b0f77712622d4d319b18633fa046f1d2
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Tue Apr 16 17:51:58 2019 +0300

    ocelot: Don't sleep in atomic context (irqs_disabled())
    
    [ Upstream commit a8fd48b50deaa20808bbf0f6685f6f1acba6a64c ]
    
    Preemption disabled at:
     [<ffff000008cabd54>] dev_set_rx_mode+0x1c/0x38
     Call trace:
     [<ffff00000808a5c0>] dump_backtrace+0x0/0x3d0
     [<ffff00000808a9a4>] show_stack+0x14/0x20
     [<ffff000008e6c0c0>] dump_stack+0xac/0xe4
     [<ffff0000080fe76c>] ___might_sleep+0x164/0x238
     [<ffff0000080fe890>] __might_sleep+0x50/0x88
     [<ffff0000082261e4>] kmem_cache_alloc+0x17c/0x1d0
     [<ffff000000ea0ae8>] ocelot_set_rx_mode+0x108/0x188 [mscc_ocelot_common]
     [<ffff000008cabcf0>] __dev_set_rx_mode+0x58/0xa0
     [<ffff000008cabd5c>] dev_set_rx_mode+0x24/0x38
    
    Fixes: a556c76adc05 ("net: mscc: Add initial Ocelot switch support")
    
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e4fd5e0b81a8f963b1636b19c964ad9d0d3b36e
Author: Tony Camuso <tcamuso@redhat.com>
Date:   Tue Apr 9 15:20:03 2019 -0400

    ipmi: ipmi_si_hardcode.c: init si_type array to fix a crash
    
    [ Upstream commit a885bcfd152f97b25005298ab2d6b741aed9b49c ]
    
    The intended behavior of function ipmi_hardcode_init_one() is to default
    to kcs interface when no type argument is presented when initializing
    ipmi with hard coded addresses.
    
    However, the array of char pointers allocated on the stack by function
    ipmi_hardcode_init() was not inited to zeroes, so it contained stack
    debris.
    
    Consequently, passing the cruft stored in this array to function
    ipmi_hardcode_init_one() caused a crash when it was unable to detect
    that the char * being passed was nonsense and tried to access the
    address specified by the bogus pointer.
    
    The fix is simply to initialize the si_type array to zeroes, so if
    there were no type argument given to at the command line, function
    ipmi_hardcode_init_one() could properly default to the kcs interface.
    
    Signed-off-by: Tony Camuso <tcamuso@redhat.com>
    Message-Id: <1554837603-40299-1-git-send-email-tcamuso@redhat.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d4d8683e9251254b33497f3eeb8035ecdc11e32
Author: Rikard Falkeborn <rikard.falkeborn@gmail.com>
Date:   Tue Apr 9 11:15:29 2019 +0200

    tools lib traceevent: Fix missing equality check for strcmp
    
    [ Upstream commit f32c2877bcb068a718bb70094cd59ccc29d4d082 ]
    
    There was a missing comparison with 0 when checking if type is "s64" or
    "u64". Therefore, the body of the if-statement was entered if "type" was
    "u64" or not "s64", which made the first strcmp() redundant since if
    type is "u64", it's not "s64".
    
    If type is "s64", the body of the if-statement is not entered but since
    the remainder of the function consists of if-statements which will not
    be entered if type is "s64", we will just return "val", which is
    correct, albeit at the cost of a few more calls to strcmp(), i.e., it
    will behave just as if the if-statement was entered.
    
    If type is neither "s64" or "u64", the body of the if-statement will be
    entered incorrectly and "val" returned. This means that any type that is
    checked after "s64" and "u64" is handled the same way as "s64" and
    "u64", i.e., the limiting of "val" to fit in for example "s8" is never
    reached.
    
    This was introduced in the kernel tree when the sources were copied from
    trace-cmd in commit f7d82350e597 ("tools/events: Add files to create
    libtraceevent.a"), and in the trace-cmd repo in 1cdbae6035cei
    ("Implement typecasting in parser") when the function was introduced,
    i.e., it has always behaved the wrong way.
    
    Detected by cppcheck.
    
    Signed-off-by: Rikard Falkeborn <rikard.falkeborn@gmail.com>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Tzvetomir Stoyanov <tstoyanov@vmware.com>
    Fixes: f7d82350e597 ("tools/events: Add files to create libtraceevent.a")
    Link: http://lkml.kernel.org/r/20190409091529.2686-1-rikard.falkeborn@gmail.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c8afd514df0e94844dee3e98507461e03a6ca5d
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Mar 27 15:12:20 2019 +0100

    KVM: x86: avoid misreporting level-triggered irqs as edge-triggered in tracing
    
    [ Upstream commit 7a223e06b1a411cef6c4cd7a9b9a33c8d225b10e ]
    
    In __apic_accept_irq() interface trig_mode is int and actually on some code
    paths it is set above u8:
    
    kvm_apic_set_irq() extracts it from 'struct kvm_lapic_irq' where trig_mode
    is u16. This is done on purpose as e.g. kvm_set_msi_irq() sets it to
    (1 << 15) & e->msi.data
    
    kvm_apic_local_deliver sets it to reg & (1 << 15).
    
    Fix the immediate issue by making 'tm' into u16. We may also want to adjust
    __apic_accept_irq() interface and use proper sizes for vector, level,
    trig_mode but this is not urgent.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d39f3cc71382165bb7efb8e06a2bd32f847de4ae
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Apr 11 11:16:47 2019 +0200

    KVM: fix spectrev1 gadgets
    
    [ Upstream commit 1d487e9bf8ba66a7174c56a0029c54b1eca8f99c ]
    
    These were found with smatch, and then generalized when applicable.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4074bc379b1f8d1f7300a52de4d62bff55987a57
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Fri Apr 12 16:01:53 2019 +0800

    x86/reboot, efi: Use EFI reboot for Acer TravelMate X514-51T
    
    [ Upstream commit 0082517fa4bce073e7cf542633439f26538a14cc ]
    
    Upon reboot, the Acer TravelMate X514-51T laptop appears to complete the
    shutdown process, but then it hangs in BIOS POST with a black screen.
    
    The problem is intermittent - at some points it has appeared related to
    Secure Boot settings or different kernel builds, but ultimately we have
    not been able to identify the exact conditions that trigger the issue to
    come and go.
    
    Besides, the EFI mode cannot be disabled in the BIOS of this model.
    
    However, after extensive testing, we observe that using the EFI reboot
    method reliably avoids the issue in all cases.
    
    So add a boot time quirk to use EFI reboot on such systems.
    
    Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=203119
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: Daniel Drake <drake@endlessm.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: linux@endlessm.com
    Link: http://lkml.kernel.org/r/20190412080152.3718-1-jian-hong@endlessm.com
    [ Fix !CONFIG_EFI build failure, clarify the code and the changelog a bit. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b51d71365e0801e19fe81b66b34f2f19935a9ed
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Mon Apr 15 09:49:56 2019 -0700

    x86/build/lto: Fix truncated .bss with -fdata-sections
    
    [ Upstream commit 6a03469a1edc94da52b65478f1e00837add869a3 ]
    
    With CONFIG_LD_DEAD_CODE_DATA_ELIMINATION=y, we compile the kernel with
    -fdata-sections, which also splits the .bss section.
    
    The new section, with a new .bss.* name, which pattern gets missed by the
    main x86 linker script which only expects the '.bss' name. This results
    in the discarding of the second part and a too small, truncated .bss
    section and an unhappy, non-working kernel.
    
    Use the common BSS_MAIN macro in the linker script to properly capture
    and merge all the generated BSS sections.
    
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20190415164956.124067-1-samitolvanen@google.com
    [ Extended the changelog. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8eb64692d6e2ce8cb558c34b7a96e3182a533ff2
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Fri Apr 12 11:04:50 2019 +0200

    s390/pkey: add one more argument space for debug feature entry
    
    [ Upstream commit 6b1f16ba730d4c0cda1247568c3a1bf4fa3a2f2f ]
    
    The debug feature entries have been used with up to 5 arguents
    (including the pointer to the format string) but there was only
    space reserved for 4 arguemnts. So now the registration does
    reserve space for 5 times a long value.
    
    This fixes a sometime appearing weired value as the last
    value of an debug feature entry like this:
    
    ... pkey_sec2protkey zcrypt_send_cprb (cardnr=10 domain=12)
       failed with errno -2143346254
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Reported-by: Christian Rund <Christian.Rund@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e360515f41fc402a7caa62ee5a9be1cd4f07c0d2
Author: David Francis <David.Francis@amd.com>
Date:   Fri Mar 29 13:23:15 2019 -0400

    drm/amd/display: If one stream full updates, full update all planes
    
    [ Upstream commit c238bfe0be9ef7420f7669a69e27c8c8f4d8a568 ]
    
    [Why]
    On some compositors, with two monitors attached, VT terminal
    switch can cause a graphical issue by the following means:
    
    There are two streams, one for each monitor. Each stream has one
    plane
    
    current state:
            M1:S1->P1
            M2:S2->P2
    
    The user calls for a terminal switch and a commit is made to
    change both planes to linear swizzle mode. In atomic check,
    a new dc_state is constructed with new planes on each stream
    
    new state:
            M1:S1->P3
            M2:S2->P4
    
    In commit tail, each stream is committed, one at a time. The first
    stream (S1) updates properly, triggerring a full update and replacing
    the state
    
    current state:
            M1:S1->P3
            M2:S2->P4
    
    The update for S2 comes in, but dc detects that there is no difference
    between the stream and plane in the new and current states, and so
    triggers a fast update. The fast update does not program swizzle,
    so the second monitor is corrupted
    
    [How]
    Add a flag to dc_plane_state that forces full updates
    
    When a stream undergoes a full update, set this flag on all changed
    planes, then clear it on the current stream
    
    Subsequent streams will get full updates as a result
    
    Signed-off-by: David Francis <David.Francis@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Roman Li <Roman.Li@amd.com>
    Acked-by: Bhawanpreet Lakha <Bhawanpreet Lakha@amd.com>
    Acked-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58be7c109cea9ea619dde5ac504ef9e001a4c2c0
Author: Marc Dionne <marc.dionne@auristor.com>
Date:   Sat Apr 13 08:37:37 2019 +0100

    afs: Unlock pages for __pagevec_release()
    
    [ Upstream commit 21bd68f196ca91fc0f3d9bd1b32f6e530e8c1c88 ]
    
    __pagevec_release() complains loudly if any page in the vector is still
    locked.  The pages need to be locked for generic_error_remove_page(), but
    that function doesn't actually unlock them.
    
    Unlock the pages afterwards.
    
    Signed-off-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-by: Jonathan Billings <jsbillin@umich.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08f2c299b38ccd63b3ad7b84f5f31e38aa9486b9
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Apr 12 15:13:27 2019 +0100

    qede: fix write to free'd pointer error and double free of ptp
    
    [ Upstream commit 1dc2b3d65523780ed1972d446c76e62e13f3e8f5 ]
    
    The err2 error return path calls qede_ptp_disable that cleans up
    on an error and frees ptp. After this, the free'd ptp is dereferenced
    when ptp->clock is set to NULL and the code falls-through to error
    path err1 that frees ptp again.
    
    Fix this by calling qede_ptp_disable and exiting via an error
    return path that does not set ptp->clock or kfree ptp.
    
    Addresses-Coverity: ("Write to pointer after free")
    Fixes: 035744975aec ("qede: Add support for PTP resource locking.")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 090b740200147839228a019b2ed80d139398e095
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Apr 12 14:45:12 2019 +0100

    vxge: fix return of a free'd memblock on a failed dma mapping
    
    [ Upstream commit 0a2c34f18c94b596562bf3d019fceab998b8b584 ]
    
    Currently if a pci dma mapping failure is detected a free'd
    memblock address is returned rather than a NULL (that indicates
    an error). Fix this by ensuring NULL is returned on this error case.
    
    Addresses-Coverity: ("Use after free")
    Fixes: 528f727279ae ("vxge: code cleanup and reorganization")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f83beff280480438df97d7189582db7abdf208ba
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Apr 12 19:52:36 2019 +0900

    mISDN: Check address length before reading address family
    
    [ Upstream commit 238ffdc49ef98b15819cfd5e3fb23194e3ea3d39 ]
    
    KMSAN will complain if valid address length passed to bind() is shorter
    than sizeof("struct sockaddr_mISDN"->family) bytes.
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4525c9d9adaf5a8855273b857897d52d964d210
Author: David Ahern <dsahern@gmail.com>
Date:   Tue Apr 9 14:23:10 2019 -0700

    selftests: fib_tests: Fix 'Command line is not complete' errors
    
    [ Upstream commit a5f622984a623df9a84cf43f6b098d8dd76fbe05 ]
    
    A couple of tests are verifying a route has been removed. The helper
    expects the prefix as the first part of the expected output. When
    checking that a route has been deleted the prefix is empty leading
    to an invalid ip command:
    
      $ ip ro ls match
      Command line is not complete. Try option "help"
    
    Fix by moving the comparison of expected output and output to a new
    function that is used by both check_route and check_route6. Use the
    new helper for the 2 checks on route removal.
    
    Also, remove the reset of 'set -x' in route_setup which overrides the
    user managed setting.
    
    Fixes: d69faad76584c ("selftests: fib_tests: Add prefix route tests with metric")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7828986b84ba68ee4dbe0b8bf7cba351c9b7b730
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Tue Mar 12 11:32:56 2019 +0100

    clocksource/drivers/oxnas: Fix OX820 compatible
    
    [ Upstream commit fbc87aa0f7c429999dc31f1bac3b2615008cac32 ]
    
    The OX820 compatible is wrong is the driver, fix it.
    
    Fixes: 2ea3401e2a84 ("clocksource/drivers/oxnas: Add OX820 compatible")
    Reported-by: Daniel Golle <daniel@makrotopia.org>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a414ef36840d77cb36307c25f689bb191b065da
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 5 14:24:48 2019 +0100

    clocksource/drivers/npcm: select TIMER_OF
    
    [ Upstream commit 99834eead2a04e93a120abb112542b87c42ff5e1 ]
    
    When this is disabled, we get a link failure:
    
    drivers/clocksource/timer-npcm7xx.o: In function `npcm7xx_timer_init':
    timer-npcm7xx.c:(.init.text+0xf): undefined reference to `timer_of_init'
    
    Fixes: 1c00289ecd12 ("clocksource/drivers/npcm: Add NPCM7xx timer driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 068d1cce780101aa9aac5486c9bcc98ed518567c
Author: Martin Leung <martin.leung@amd.com>
Date:   Tue Mar 26 13:14:11 2019 -0400

    drm/amd/display: extending AUX SW Timeout
    
    [ Upstream commit f4bbebf8e7eb4d294b040ab2d2ba71e70e69b930 ]
    
    [Why]
    AUX takes longer to reply when using active DP-DVI dongle on some asics
    resulting in up to 2000+ us edid read (timeout).
    
    [How]
    1. Adjust AUX poll to match spec
    2. Extend the SW timeout. This does not affect normal
    operation since we exit the loop as soon as AUX acks.
    
    Signed-off-by: Martin Leung <martin.leung@amd.com>
    Reviewed-by: Jun Lei <Jun.Lei@amd.com>
    Acked-by: Joshua Aberback <Joshua.Aberback@amd.com>
    Acked-by: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2773e7454f4faca75968f408502fc245ff5da280
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed Apr 3 09:13:34 2019 +0200

    s390/3270: fix lockdep false positive on view->lock
    
    [ Upstream commit 5712f3301a12c0c3de9cc423484496b0464f2faf ]
    
    The spinlock in the raw3270_view structure is used by con3270, tty3270
    and fs3270 in different ways. For con3270 the lock can be acquired in
    irq context, for tty3270 and fs3270 the highest context is bh.
    
    Lockdep sees the view->lock as a single class and if the 3270 driver
    is used for the console the following message is generated:
    
    WARNING: inconsistent lock state
    5.1.0-rc3-05157-g5c168033979d #12 Not tainted
    --------------------------------
    inconsistent {IN-HARDIRQ-W} -> {HARDIRQ-ON-W} usage.
    swapper/0/1 [HC0[0]:SC1[1]:HE1:SE0] takes:
    (____ptrval____) (&(&view->lock)->rlock){?.-.}, at: tty3270_update+0x7c/0x330
    
    Introduce a lockdep subclass for the view lock to distinguish bh from
    irq locks.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c8c9d5149179dc2f0585e4bedcab4897c157bc3
Author: Li RongQing <lirongqing@baidu.com>
Date:   Thu Apr 4 10:58:01 2019 +0800

    libnvdimm/pmem: fix a possible OOB access when read and write pmem
    
    [ Upstream commit 9dc6488e84b0f64df17672271664752488cd6a25 ]
    
    If offset is not zero and length is bigger than PAGE_SIZE,
    this will cause to out of boundary access to a page memory
    
    Fixes: 98cc093cba1e ("block, THP: make block_device_operations.rw_page support THP")
    Co-developed-by: Liang ZhiCheng <liangzhicheng@baidu.com>
    Signed-off-by: Liang ZhiCheng <liangzhicheng@baidu.com>
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2565d0e527794411789f6d3387f81c759cf8d2a
Author: Sunil Dutt <usdutt@codeaurora.org>
Date:   Mon Feb 25 15:37:20 2019 +0530

    nl80211: Add NL80211_FLAG_CLEAR_SKB flag for other NL commands
    
    [ Upstream commit d6db02a88a4aaa1cd7105137c67ddec7f3bdbc05 ]
    
    This commit adds NL80211_FLAG_CLEAR_SKB flag to other NL commands
    that carry key data to ensure they do not stick around on heap
    after the SKB is freed.
    
    Also introduced this flag for NL80211_CMD_VENDOR as there are sub
    commands which configure the keys.
    
    Signed-off-by: Sunil Dutt <usdutt@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d918120e37da2079bd6ae28425cea89f3125140
Author: Felix Fietkau <nbd@nbd.name>
Date:   Sat Mar 16 18:06:31 2019 +0100

    mac80211: fix memory accounting with A-MSDU aggregation
    
    [ Upstream commit eb9b64e3a9f8483e6e54f4e03b2ae14ae5db2690 ]
    
    skb->truesize can change due to memory reallocation or when adding extra
    fragments. Adjust fq->memory_usage accordingly
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d4da01f7d666881161f3d4928cff9a7986a878f
Author: Ilan Peer <ilan.peer@intel.com>
Date:   Fri Mar 15 17:39:00 2019 +0200

    cfg80211: Handle WMM rules in regulatory domain intersection
    
    [ Upstream commit 08a75a887ee46828b54600f4bb7068d872a5edd5 ]
    
    The support added for regulatory WMM rules did not handle
    the case of regulatory domain intersections. Fix it.
    
    Signed-off-by: Ilan Peer <ilan.peer@intel.com>
    Fixes: 230ebaa189af ("cfg80211: read wmm rules from regulatory database")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35e2abbaffa2979fb98c49f80dbca8fa58647cd6
Author: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
Date:   Fri Mar 15 17:38:57 2019 +0200

    mac80211: Increase MAX_MSG_LEN
    
    [ Upstream commit 78be2d21cc1cd3069c6138dcfecec62583130171 ]
    
    Looks that 100 chars isn't enough for messages, as we keep getting
    warnings popping from different places due to message shortening.
    Instead of trying to shorten the prints, just increase the buffer size.
    
    Signed-off-by: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbe1ab38e1a2e3bbc4d9115acf0e9b03287ae580
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Mar 13 18:54:27 2019 +0100

    mac80211: fix unaligned access in mesh table hash function
    
    [ Upstream commit 40586e3fc400c00c11151804dcdc93f8c831c808 ]
    
    The pointer to the last four bytes of the address is not guaranteed to be
    aligned, so we need to use __get_unaligned_cpu32 here
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e28e5055eacd8c99539a74e10105414ed3a30cdb
Author: Peter Oberparleiter <oberpar@linux.ibm.com>
Date:   Fri Mar 22 16:01:17 2019 +0100

    s390/dasd: Fix capacity calculation for large volumes
    
    [ Upstream commit 2cc9637ce825f3a9f51f8f78af7474e9e85bfa5f ]
    
    The DASD driver incorrectly limits the maximum number of blocks of ECKD
    DASD volumes to 32 bit numbers. Volumes with a capacity greater than
    2^32-1 blocks are incorrectly recognized as smaller volumes.
    
    This results in the following volume capacity limits depending on the
    formatted block size:
    
      BLKSIZE  MAX_GB   MAX_CYL
          512    2047   5843492
         1024    4095   8676701
         2048    8191  13634816
         4096   16383  23860929
    
    The same problem occurs when a volume with more than 17895697 cylinders
    is accessed in raw-track-access mode.
    
    Fix this problem by adding an explicit type cast when calculating the
    maximum number of blocks.
    
    Signed-off-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Reviewed-by: Stefan Haberland <sth@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af5b7a150ef8d8f7de063be78b591054d041e9cd
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Mon Mar 25 16:55:27 2019 -0500

    libnvdimm/btt: Fix a kmemdup failure check
    
    [ Upstream commit 486fa92df4707b5df58d6508728bdb9321a59766 ]
    
    In case kmemdup fails, the fix releases resources and returns to
    avoid the NULL pointer dereference.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7ab4818f74e4d7e796b59fe847de12beb7063b3
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Jan 18 14:35:45 2019 -0800

    HID: input: add mapping for "Toggle Display" key
    
    [ Upstream commit c01908a14bf735b871170092807c618bb9dae654 ]
    
    According to HUT 1.12 usage 0xb5 from the generic desktop page is reserved
    for switching between external and internal display, so let's add the
    mapping.
    
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbdccc170adfd1ce1fb6c576b2cdf322ed959652
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Jan 18 14:05:52 2019 -0800

    HID: input: add mapping for keyboard Brightness Up/Down/Toggle keys
    
    [ Upstream commit 7975a1d6a7afeb3eb61c971a153d24dd8fa032f3 ]
    
    According to HUTRR73 usages 0x79, 0x7a and 0x7c from the consumer page
    correspond to Brightness Up/Down/Toggle keys, so let's add the mappings.
    
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc30867da997385e6322f612d761b7ae4c92cad8
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Jan 18 13:59:08 2019 -0800

    HID: input: add mapping for Expose/Overview key
    
    [ Upstream commit 96dd86871e1fffbc39e4fa61c9c75ec54ee9af0f ]
    
    According to HUTRR77 usage 0x29f from the consumer page is reserved for
    the Desktop application to present all running user’s application windows.
    Linux defines KEY_SCALE to request Compiz Scale (Expose) mode, so let's
    add the mapping.
    
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e94f852e2034b6b64f1c4694cc72d3b5274d988d
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Mar 12 03:20:34 2019 -0500

    libnvdimm/namespace: Fix a potential NULL pointer dereference
    
    [ Upstream commit 55c1fc0af29a6c1b92f217b7eb7581a882e0c07c ]
    
    In case kmemdup fails, the fix goes to blk_err to avoid NULL
    pointer dereference.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f72e3a021a6392a4988b167e25b859c26bf55df
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Mar 12 12:28:03 2019 -0700

    acpi/nfit: Always dump _DSM output payload
    
    [ Upstream commit 351f339faa308c1c1461314a18c832239a841ca0 ]
    
    The dynamic-debug statements for command payload output only get emitted
    when the command is not ND_CMD_CALL. Move the output payload dumping
    ahead of the early return path for ND_CMD_CALL.
    
    Fixes: 31eca76ba2fc9 ("...whitelisted dimm command marshaling mechanism")
    Reported-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f07db1f1f54ca083bac19b620745bf24503bfa88
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Sun Mar 10 14:58:26 2019 -0400

    iio: adc: xilinx: prevent touching unclocked h/w on remove
    
    [ Upstream commit 2e4b88f73966adead360e47621df0183586fac32 ]
    
    In remove, the clock is disabled before canceling the
    delayed work. This means that the delayed work may be
    touching unclocked hardware.
    
    Fix by disabling the clock after the delayed work is
    fully canceled. This is consistent with the probe error
    path order.
    
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6400212ae3b6cba121652ce89bcb19ccb4f26cc5
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Sun Mar 10 14:58:25 2019 -0400

    iio: adc: xilinx: fix potential use-after-free on probe
    
    [ Upstream commit 862e4644fd2d7df8998edc65e0963ea2f567bde9 ]
    
    If probe errors out after request_irq(), its error path
    does not explicitly cancel the delayed work, which may
    have been scheduled by the interrupt handler.
    
    This means the delayed work may still be running when
    the core frees the private structure (struct xadc).
    This is a potential use-after-free.
    
    Fix by inserting cancel_delayed_work_sync() in the probe
    error path.
    
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06d5ea398e554a3a6fe2616de44b8a8cb99f946d
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Sun Mar 10 14:58:24 2019 -0400

    iio: adc: xilinx: fix potential use-after-free on remove
    
    [ Upstream commit 62039b6aef63380ba7a37c113bbaeee8a55c5342 ]
    
    When cancel_delayed_work() returns, the delayed work may still
    be running. This means that the core could potentially free
    the private structure (struct xadc) while the delayed work
    is still using it. This is a potential use-after-free.
    
    Fix by calling cancel_delayed_work_sync(), which waits for
    any residual work to finish before returning.
    
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5640d0781267c1c883dbdbc1cd6008a1514b029d
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 25 18:05:36 2019 +0200

    USB: serial: fix unthrottle races
    
    commit 3f5edd58d040bfa4b74fb89bc02f0bc6b9cd06ab upstream.
    
    Fix two long-standing bugs which could potentially lead to memory
    corruption or leave the port throttled until it is reopened (on weakly
    ordered systems), respectively, when read-URB completion races with
    unthrottle().
    
    First, the URB must not be marked as free before processing is complete
    to prevent it from being submitted by unthrottle() on another CPU.
    
            CPU 1                           CPU 2
            ================                ================
            complete()                      unthrottle()
              process_urb();
              smp_mb__before_atomic();
              set_bit(i, free);               if (test_and_clear_bit(i, free))
                                                      submit_urb();
    
    Second, the URB must be marked as free before checking the throttled
    flag to prevent unthrottle() on another CPU from failing to observe that
    the URB needs to be submitted if complete() sees that the throttled flag
    is set.
    
            CPU 1                           CPU 2
            ================                ================
            complete()                      unthrottle()
              set_bit(i, free);               throttled = 0;
              smp_mb__after_atomic();         smp_mb();
              if (throttled)                  if (test_and_clear_bit(i, free))
                      return;                         submit_urb();
    
    Note that test_and_clear_bit() only implies barriers when the test is
    successful. To handle the case where the URB is still in use an explicit
    barrier needs to be added to unthrottle() for the second race condition.
    
    Fixes: d83b405383c9 ("USB: serial: add support for multiple read urbs")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c416eef65a7ef2a897132b843e9900a18afde8d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Apr 4 14:39:09 2019 +0200

    virt: vbox: Sanity-check parameter types for hgcm-calls coming from userspace
    
    commit cf4f2ad6b87dda2dbe0573b1ebeb0273f8d4aac6 upstream.
    
    Userspace can make host function calls, called hgcm-calls through the
    /dev/vboxguest device.
    
    In this case we should not accept all hgcm-function-parameter-types, some
    are only valid for in kernel calls.
    
    This commit adds proper hgcm-function-parameter-type validation to the
    ioctl for doing a hgcm-call from userspace.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e361ccccdd51f45a2d54f6454192acda06cb2598
Author: Andrea Parri <andrea.parri@amarulasolutions.com>
Date:   Tue Apr 16 14:17:11 2019 +0200

    kernfs: fix barrier usage in __kernfs_new_node()
    
    commit 998267900cee901c5d1dfa029a6304d00acbc29f upstream.
    
    smp_mb__before_atomic() can not be applied to atomic_set().  Remove the
    barrier and rely on RELEASE synchronization.
    
    Fixes: ba16b2846a8c6 ("kernfs: add an API to get kernfs node from inode number")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andrea Parri <andrea.parri@amarulasolutions.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1917f21c8f6b640e42d1330f9ca3b82b6f7bb16
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Apr 3 14:48:33 2019 +0200

    hwmon: (pwm-fan) Disable PWM if fetching cooling data fails
    
    commit 53f1647da3e8fb3e89066798f0fdc045064d353d upstream.
    
    In case pwm_fan_of_get_cooling_data() fails we should disable the PWM
    just like in the other error cases.
    
    Fixes: 2e5219c77183 ("hwmon: (pwm-fan) Read PWM FAN configuration from device tree")
    Cc: <stable@vger.kernel.org> # 4.14+
    Reported-by: Guenter Rock <linux@roeck-us.net>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87cc345aefc961d2a4a241c11c5fd7aa286a1b08
Author: Mario Limonciello <mario.limonciello@dell.com>
Date:   Wed Mar 27 09:25:34 2019 -0500

    platform/x86: dell-laptop: fix rfkill functionality
    
    commit 6cc13c28da5beee0f706db6450e190709700b34a upstream.
    
    When converting the driver two arguments were transposed leading
    to rfkill not working.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201427
    Reported-by: Pepijn de Vos <pepijndevos@gmail.com>
    Fixes: 549b49 ("platform/x86: dell-smbios: Introduce dispatcher for SMM calls")
    Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
    Acked-by: Pali Rohár <pali.rohar@gmail.com>
    Cc: <stable@vger.kernel.org> # 4.14.x
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 381eaca5017f728ec3313f46df056c715b301aa3
Author: Jiaxun Yang <jiaxun.yang@flygoat.com>
Date:   Thu Mar 7 17:37:16 2019 +0800

    platform/x86: thinkpad_acpi: Disable Bluetooth for some machines
    
    commit f7db839fccf087664e5587966220821289b6a9cb upstream.
    
    Some AMD based ThinkPads have a firmware bug that calling
    "GBDC" will cause Bluetooth on Intel wireless cards blocked.
    
    Probe these models by DMI match and disable Bluetooth subdriver
    if specified Intel wireless card exist.
    
    Cc: stable <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efe6802e812bbe056bdcaf8fa7b8f8565c4253ca
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Wed Apr 24 13:09:34 2019 -0500

    platform/x86: sony-laptop: Fix unintentional fall-through
    
    commit 1cbd7a64959d33e7a2a1fa2bf36a62b350a9fcbd upstream.
    
    It seems that the default case should return AE_CTRL_TERMINATE, instead
    of falling through to case ACPI_RESOURCE_TYPE_END_TAG and returning AE_OK;
    otherwise the line of code at the end of the function is unreachable and
    makes no sense:
    
    return AE_CTRL_TERMINATE;
    
    This fix is based on the following thread of discussion:
    
    https://lore.kernel.org/patchwork/patch/959782/
    
    Fixes: 33a04454527e ("sony-laptop: Add SNY6001 device handling (sonypi reimplementation)")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 824c212908b6a6b9bac8fc21cdeec24021f390d0
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri May 10 10:56:32 2019 -0700

    bfq: update internal depth state when queue depth changes
    
    commit 77f1e0a52d26242b6c2dba019f6ebebfb9ff701e upstream
    
    A previous commit moved the shallow depth and BFQ depth map calculations
    to be done at init time, moving it outside of the hotter IO path. This
    potentially causes hangs if the users changes the depth of the scheduler
    map, by writing to the 'nr_requests' sysfs file for that device.
    
    Add a blk-mq-sched hook that allows blk-mq to inform the scheduler if
    the depth changes, so that the scheduler can update its internal state.
    
    Signed-off-by: Eric Wheeler <bfq@linux.ewheeler.net>
    Tested-by: Kai Krakow <kai@kaishome.de>
    Reported-by: Paolo Valente <paolo.valente@linaro.org>
    Fixes: f0635b8a416e ("bfq: calculate shallow depths at init time")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
