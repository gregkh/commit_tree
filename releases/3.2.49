commit 66421b2177fbfcb6e3f5937c729086a4d1104fb2
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Jul 27 05:34:36 2013 +0100

    Linux 3.2.49

commit 9ba4c399e0eaf1e8714365e7a43972827f6d66ea
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jun 18 12:58:12 2013 -0700

    MAINTAINERS: add stable_kernel_rules.txt to stable maintainer information
    
    commit 7b175c46720f8e6b92801bb634c93d1016f80c62 upstream.
    
    This hopefully will help point developers to the proper way that patches
    should be submitted for inclusion in the stable kernel releases.
    
    Reported-by: David Howells <dhowells@redhat.com>
    Acked-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 558fa9bbd92d1755271e4cac01cf0fce89a2f0be
Author: Greg KH <gregkh@linuxfoundation.org>
Date:   Tue Jan 31 20:02:00 2012 -0800

    MAINTAINERS: Greg's suse email address is dead
    
    commit 879a5a001b62a020e074d460b3a7c0fd993f9832 upstream.
    
    My email address has changed, the suse.de one is now dead, so update all
    of my MAINTAINER entries with the correct one so that patches don't get
    lost.
    
    Also change the status of some of my entries as I'm supposed to be doing
    this stuff now for real.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5b1b5af5a1191196cc564bfab9ac5e1a6b8d08f3
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 31 19:38:56 2013 -0400

    ext4: fix data offset overflow in ext4_xattr_fiemap() on 32-bit archs
    
    commit a60697f411eb365fb09e639e6f183fe33d1eb796 upstream.
    
    On 32-bit architectures with 32-bit sector_t computation of data offset
    in ext4_xattr_fiemap() can overflow resulting in reporting bogus data
    location. Fix the problem by typing block number to proper type before
    shifting.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 967c9a98626b1e402ab042bd770b7109532f49fb
Author: Jan Kara <jack@suse.cz>
Date:   Fri May 31 19:39:56 2013 -0400

    ext4: fix overflow when counting used blocks on 32-bit architectures
    
    commit 8af8eecc1331dbf5e8c662022272cf667e213da5 upstream.
    
    The arithmetics adding delalloc blocks to the number of used blocks in
    ext4_getattr() can easily overflow on 32-bit archs as we first multiply
    number of blocks by blocksize and then divide back by 512. Make the
    arithmetics more clever and also use proper type (unsigned long long
    instead of unsigned long).
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6dfd19d0d4d5dd081e1312a550ffae6acc85d70a
Author: Jonathan Salwan <jonathan.salwan@gmail.com>
Date:   Wed Jul 3 15:01:13 2013 -0700

    drivers/cdrom/cdrom.c: use kzalloc() for failing hardware
    
    commit 542db01579fbb7ea7d1f7bb9ddcef1559df660b2 upstream.
    
    In drivers/cdrom/cdrom.c mmc_ioctl_cdrom_read_data() allocates a memory
    area with kmalloc in line 2885.
    
      2885         cgc->buffer = kmalloc(blocksize, GFP_KERNEL);
      2886         if (cgc->buffer == NULL)
      2887                 return -ENOMEM;
    
    In line 2908 we can find the copy_to_user function:
    
      2908         if (!ret && copy_to_user(arg, cgc->buffer, blocksize))
    
    The cgc->buffer is never cleaned and initialized before this function.
    If ret = 0 with the previous basic block, it's possible to display some
    memory bytes in kernel space from userspace.
    
    When we read a block from the disk it normally fills the ->buffer but if
    the drive is malfunctioning there is a chance that it would only be
    partially filled.  The result is an leak information to userspace.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 790e332c473eded2396dcf7e2902cbe4429b6a80
Author: Liang Li <liang.li@windriver.com>
Date:   Sat Jan 19 17:52:10 2013 +0800

    pch_uart: fix a deadlock when pch_uart as console
    
    commit 384e301e3519599b000c1a2ecd938b533fc15d85 upstream.
    
    When we use pch_uart as system console like 'console=ttyPCH0,115200',
    then 'send break' to it. We'll encounter the deadlock on a cpu/core,
    with interrupts disabled on the core. When we happen to have all irqs
    affinity to cpu0 then the deadlock on cpu0 actually deadlock whole
    system.
    
    In pch_uart_interrupt, we have spin_lock_irqsave(&priv->lock, flags)
    then call pch_uart_err_ir when break is received. Then the call to
    dev_err would actually call to pch_console_write then we'll run into
    another spin_lock(&priv->lock), with interrupts disabled.
    
    So in the call sequence lead by pch_uart_interrupt, we should be
    carefully to call functions that will 'print message to console' only
    in case the uart port is not being used as serial console.
    
    Signed-off-by: Liang Li <liang.li@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2487f0db30527032c4d56fc2d0b1a240fe89fef8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jun 4 10:44:21 2013 +0200

    perf: Fix mmap() accounting hole
    
    commit 9bb5d40cd93c9dd4be74834b1dcb1ba03629716b upstream.
    
    Vince's fuzzer once again found holes. This time it spotted a leak in
    the locked page accounting.
    
    When an event had redirected output and its close() was the last
    reference to the buffer we didn't have a vm context to undo accounting.
    
    Change the code to destroy the buffer on the last munmap() and detach
    all redirected events at that time. This provides us the right context
    to undo the vm accounting.
    
    [Backporting for 3.4-stable.
    VM_RESERVED flag was replaced with pair 'VM_DONTEXPAND | VM_DONTDUMP' in
    314e51b9 since 3.7.0-rc1, and 314e51b9 comes from a big patchset, we didn't
    backport the patchset, so I restored 'VM_DNOTEXPAND | VM_DONTDUMP' as before:
    -       vma->vm_flags |= VM_DONTCOPY | VM_DONTEXPAND | VM_DONTDUMP;
    +       vma->vm_flags |= VM_DONTCOPY | VM_RESERVED;
     -- zliu]
    
    Reported-and-tested-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20130604084421.GI8923@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Zhouping Liu <zliu@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: drop unrelated addition of braces in free_event()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7edcd18138461f7ded2ee55c0662f49b29a3fc8d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue May 28 10:55:48 2013 +0200

    perf: Fix perf mmap bugs
    
    commit 26cb63ad11e04047a64309362674bcbbd6a6f246 upstream.
    
    Vince reported a problem found by his perf specific trinity
    fuzzer.
    
    Al noticed 2 problems with perf's mmap():
    
     - it has issues against fork() since we use vma->vm_mm for accounting.
     - it has an rb refcount leak on double mmap().
    
    We fix the issues against fork() by using VM_DONTCOPY; I don't
    think there's code out there that uses this; we didn't hear
    about weird accounting problems/crashes. If we do need this to
    work, the previously proposed VM_PINNED could make this work.
    
    Aside from the rb reference leak spotted by Al, Vince's example
    prog was indeed doing a double mmap() through the use of
    perf_event_set_output().
    
    This exposes another problem, since we now have 2 events with
    one buffer, the accounting gets screwy because we account per
    event. Fix this by making the buffer responsible for its own
    accounting.
    
    [Backporting for 3.4-stable.
    VM_RESERVED flag was replaced with pair 'VM_DONTEXPAND | VM_DONTDUMP' in
    314e51b9 since 3.7.0-rc1, and 314e51b9 comes from a big patchset, we didn't
    backport the patchset, so I restored 'VM_DNOTEXPAND | VM_DONTDUMP' as before:
    -       vma->vm_flags |= VM_DONTCOPY | VM_DONTEXPAND | VM_DONTDUMP;
    +       vma->vm_flags |= VM_DONTCOPY | VM_RESERVED;
     -- zliu]
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>
    Link: http://lkml.kernel.org/r/20130528085548.GA12193@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Zhouping Liu <zliu@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ae804ee7b70be863320e0f5c70e8e59410d23cd1
Author: Sage Weil <sage@inktank.com>
Date:   Fri Feb 22 15:31:00 2013 -0800

    ceph: fix statvfs fr_size
    
    commit 92a49fb0f79f3300e6e50ddf56238e70678e4202 upstream.
    
    Different versions of glibc are broken in different ways, but the short of
    it is that for the time being, frsize should == bsize, and be used as the
    multiple for the blocks, free, and available fields.  This mirrors what is
    done for NFS.  The previous reporting of the page size for frsize meant
    that newer glibc and df would report a very small value for the fs size.
    
    Fixes http://tracker.ceph.com/issues/3793.
    
    Signed-off-by: Sage Weil <sage@inktank.com>
    Reviewed-by: Greg Farnum <greg@inktank.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a7aa204def549434aa80457926bc49300b18b181
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Jul 12 11:08:33 2013 +0200

    perf: Fix perf_lock_task_context() vs RCU
    
    commit 058ebd0eba3aff16b144eabf4510ed9510e1416e upstream.
    
    Jiri managed to trigger this warning:
    
     [] ======================================================
     [] [ INFO: possible circular locking dependency detected ]
     [] 3.10.0+ #228 Tainted: G        W
     [] -------------------------------------------------------
     [] p/6613 is trying to acquire lock:
     []  (rcu_node_0){..-...}, at: [<ffffffff810ca797>] rcu_read_unlock_special+0xa7/0x250
     []
     [] but task is already holding lock:
     []  (&ctx->lock){-.-...}, at: [<ffffffff810f2879>] perf_lock_task_context+0xd9/0x2c0
     []
     [] which lock already depends on the new lock.
     []
     [] the existing dependency chain (in reverse order) is:
     []
     [] -> #4 (&ctx->lock){-.-...}:
     [] -> #3 (&rq->lock){-.-.-.}:
     [] -> #2 (&p->pi_lock){-.-.-.}:
     [] -> #1 (&rnp->nocb_gp_wq[1]){......}:
     [] -> #0 (rcu_node_0){..-...}:
    
    Paul was quick to explain that due to preemptible RCU we cannot call
    rcu_read_unlock() while holding scheduler (or nested) locks when part
    of the read side critical section was preemptible.
    
    Therefore solve it by making the entire RCU read side non-preemptible.
    
    Also pull out the retry from under the non-preempt to play nice with RT.
    
    Reported-by: Jiri Olsa <jolsa@redhat.com>
    Helped-out-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b76c8d1124b81dbe4ee9ca1254759cf0f9028052
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Tue Jul 9 17:44:11 2013 +0200

    perf: Remove WARN_ON_ONCE() check in __perf_event_enable() for valid scenario
    
    commit 06f417968beac6e6b614e17b37d347aa6a6b1d30 upstream.
    
    The '!ctx->is_active' check has a valid scenario, so
    there's no need for the warning.
    
    The reason is that there's a time window between the
    'ctx->is_active' check in the perf_event_enable() function
    and the __perf_event_enable() function having:
    
      - IRQs on
      - ctx->lock unlocked
    
    where the task could be killed and 'ctx' deactivated by
    perf_event_exit_task(), ending up with the warning below.
    
    So remove the WARN_ON_ONCE() check and add comments to
    explain it all.
    
    This addresses the following warning reported by Vince Weaver:
    
    [  324.983534] ------------[ cut here ]------------
    [  324.984420] WARNING: at kernel/events/core.c:1953 __perf_event_enable+0x187/0x190()
    [  324.984420] Modules linked in:
    [  324.984420] CPU: 19 PID: 2715 Comm: nmi_bug_snb Not tainted 3.10.0+ #246
    [  324.984420] Hardware name: Supermicro X8DTN/X8DTN, BIOS 4.6.3 01/08/2010
    [  324.984420]  0000000000000009 ffff88043fce3ec8 ffffffff8160ea0b ffff88043fce3f00
    [  324.984420]  ffffffff81080ff0 ffff8802314fdc00 ffff880231a8f800 ffff88043fcf7860
    [  324.984420]  0000000000000286 ffff880231a8f800 ffff88043fce3f10 ffffffff8108103a
    [  324.984420] Call Trace:
    [  324.984420]  <IRQ>  [<ffffffff8160ea0b>] dump_stack+0x19/0x1b
    [  324.984420]  [<ffffffff81080ff0>] warn_slowpath_common+0x70/0xa0
    [  324.984420]  [<ffffffff8108103a>] warn_slowpath_null+0x1a/0x20
    [  324.984420]  [<ffffffff81134437>] __perf_event_enable+0x187/0x190
    [  324.984420]  [<ffffffff81130030>] remote_function+0x40/0x50
    [  324.984420]  [<ffffffff810e51de>] generic_smp_call_function_single_interrupt+0xbe/0x130
    [  324.984420]  [<ffffffff81066a47>] smp_call_function_single_interrupt+0x27/0x40
    [  324.984420]  [<ffffffff8161fd2f>] call_function_single_interrupt+0x6f/0x80
    [  324.984420]  <EOI>  [<ffffffff816161a1>] ? _raw_spin_unlock_irqrestore+0x41/0x70
    [  324.984420]  [<ffffffff8113799d>] perf_event_exit_task+0x14d/0x210
    [  324.984420]  [<ffffffff810acd04>] ? switch_task_namespaces+0x24/0x60
    [  324.984420]  [<ffffffff81086946>] do_exit+0x2b6/0xa40
    [  324.984420]  [<ffffffff8161615c>] ? _raw_spin_unlock_irq+0x2c/0x30
    [  324.984420]  [<ffffffff81087279>] do_group_exit+0x49/0xc0
    [  324.984420]  [<ffffffff81096854>] get_signal_to_deliver+0x254/0x620
    [  324.984420]  [<ffffffff81043057>] do_signal+0x57/0x5a0
    [  324.984420]  [<ffffffff8161a164>] ? __do_page_fault+0x2a4/0x4e0
    [  324.984420]  [<ffffffff8161665c>] ? retint_restore_args+0xe/0xe
    [  324.984420]  [<ffffffff816166cd>] ? retint_signal+0x11/0x84
    [  324.984420]  [<ffffffff81043605>] do_notify_resume+0x65/0x80
    [  324.984420]  [<ffffffff81616702>] retint_signal+0x46/0x84
    [  324.984420] ---[ end trace 442ec2f04db3771a ]---
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Jiri Olsa <jolsa@redhat.com>
    Suggested-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/1373384651-6109-2-git-send-email-jolsa@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2a53ead925f5c1d8afe9c54e33f2753db95f6efd
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Tue Jul 9 17:44:10 2013 +0200

    perf: Clone child context from parent context pmu
    
    commit 734df5ab549ca44f40de0f07af1c8803856dfb18 upstream.
    
    Currently when the child context for inherited events is
    created, it's based on the pmu object of the first event
    of the parent context.
    
    This is wrong for the following scenario:
    
      - HW context having HW and SW event
      - HW event got removed (closed)
      - SW event stays in HW context as the only event
        and its pmu is used to clone the child context
    
    The issue starts when the cpu context object is touched
    based on the pmu context object (__get_cpu_context). In
    this case the HW context will work with SW cpu context
    ending up with following WARN below.
    
    Fixing this by using parent context pmu object to clone
    from child context.
    
    Addresses the following warning reported by Vince Weaver:
    
    [ 2716.472065] ------------[ cut here ]------------
    [ 2716.476035] WARNING: at kernel/events/core.c:2122 task_ctx_sched_out+0x3c/0x)
    [ 2716.476035] Modules linked in: nfsd auth_rpcgss oid_registry nfs_acl nfs locn
    [ 2716.476035] CPU: 0 PID: 3164 Comm: perf_fuzzer Not tainted 3.10.0-rc4 #2
    [ 2716.476035] Hardware name: AOpen   DE7000/nMCP7ALPx-DE R1.06 Oct.19.2012, BI2
    [ 2716.476035]  0000000000000000 ffffffff8102e215 0000000000000000 ffff88011fc18
    [ 2716.476035]  ffff8801175557f0 0000000000000000 ffff880119fda88c ffffffff810ad
    [ 2716.476035]  ffff880119fda880 ffffffff810af02a 0000000000000009 ffff880117550
    [ 2716.476035] Call Trace:
    [ 2716.476035]  [<ffffffff8102e215>] ? warn_slowpath_common+0x5b/0x70
    [ 2716.476035]  [<ffffffff810ab2bd>] ? task_ctx_sched_out+0x3c/0x5f
    [ 2716.476035]  [<ffffffff810af02a>] ? perf_event_exit_task+0xbf/0x194
    [ 2716.476035]  [<ffffffff81032a37>] ? do_exit+0x3e7/0x90c
    [ 2716.476035]  [<ffffffff810cd5ab>] ? __do_fault+0x359/0x394
    [ 2716.476035]  [<ffffffff81032fe6>] ? do_group_exit+0x66/0x98
    [ 2716.476035]  [<ffffffff8103dbcd>] ? get_signal_to_deliver+0x479/0x4ad
    [ 2716.476035]  [<ffffffff810ac05c>] ? __perf_event_task_sched_out+0x230/0x2d1
    [ 2716.476035]  [<ffffffff8100205d>] ? do_signal+0x3c/0x432
    [ 2716.476035]  [<ffffffff810abbf9>] ? ctx_sched_in+0x43/0x141
    [ 2716.476035]  [<ffffffff810ac2ca>] ? perf_event_context_sched_in+0x7a/0x90
    [ 2716.476035]  [<ffffffff810ac311>] ? __perf_event_task_sched_in+0x31/0x118
    [ 2716.476035]  [<ffffffff81050dd9>] ? mmdrop+0xd/0x1c
    [ 2716.476035]  [<ffffffff81051a39>] ? finish_task_switch+0x7d/0xa6
    [ 2716.476035]  [<ffffffff81002473>] ? do_notify_resume+0x20/0x5d
    [ 2716.476035]  [<ffffffff813654f5>] ? retint_signal+0x3d/0x78
    [ 2716.476035] ---[ end trace 827178d8a5966c3d ]---
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/1373384651-6109-1-git-send-email-jolsa@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0c6830bbac5cff8f2c7f39e5ff6ec704d755eacf
Author: Jörn Engel <joern@logfs.org>
Date:   Wed Jul 3 11:35:11 2013 -0400

    iscsi-target: Fix tfc_tpg_nacl_auth_cit configfs length overflow
    
    commit 0fbfc46fb0b2f543a8b539e94c6c293ebc0b05a6 upstream.
    
    This patch fixes a potential buffer overflow while processing
    iscsi_node_auth input for configfs attributes within NodeACL
    tfc_tpg_nacl_auth_cit context.
    
    Signed-off-by: Joern Engel <joern@logfs.org>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0465278f3154d76363fa886c0602b4255100cc05
Author: Bjørn Mork <bjorn@mork.no>
Date:   Wed Nov 21 09:54:48 2012 +0100

    megaraid_sas: fix memory leak if SGL has zero length entries
    
    commit 7a6a731bd00ca90d0e250867c3b9c05b5ff0fa49 upstream.
    
    commit 98cb7e44 ([SCSI] megaraid_sas: Sanity check user
    supplied length before passing it to dma_alloc_coherent())
    introduced a memory leak.  Memory allocated for entries
    following zero length SGL entries will not be freed.
    
    Reference: http://bugs.debian.org/688198
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Acked-by: Adam Radford <aradford@gmail.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e74ac4ba96efadd107e415e66936a2df813c6652
Author: Mikulas Patocka <mikulas@artax.karlin.mff.cuni.cz>
Date:   Thu Jul 4 18:42:29 2013 +0200

    hpfs: better test for errors
    
    commit 3ebacb05044f82c5f0bb456a894eb9dc57d0ed90 upstream.
    
    The test if bitmap access is out of bound could errorneously pass if the
    device size is divisible by 16384 sectors and we are asking for one bitmap
    after the end.
    
    Check for invalid size in the superblock. Invalid size could cause integer
    overflows in the rest of the code.
    
    Signed-off-by: Mikulas Patocka <mpatocka@artax.karlin.mff.cuni.cz>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b5f8e9877feee4ae448f5d2294278548ac6a06ba
Author: Paul Clements <paul.clements@steeleye.com>
Date:   Wed Jul 3 15:09:04 2013 -0700

    nbd: correct disconnect behavior
    
    commit c378f70adbc1bbecd9e6db145019f14b2f688c7c upstream.
    
    Currently, when a disconnect is requested by the user (via NBD_DISCONNECT
    ioctl) the return from NBD_DO_IT is undefined (it is usually one of
    several error codes).  This means that nbd-client does not know if a
    manual disconnect was performed or whether a network error occurred.
    Because of this, nbd-client's persist mode (which tries to reconnect after
    error, but not after manual disconnect) does not always work correctly.
    
    This change fixes this by causing NBD_DO_IT to always return 0 if a user
    requests a disconnect.  This means that nbd-client can correctly either
    persist the connection (if an error occurred) or disconnect (if the user
    requested it).
    
    Signed-off-by: Paul Clements <paul.clements@steeleye.com>
    Acked-by: Rob Landley <rob@landley.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: adjust device pointer name]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c8b425eba162f29a3544ad8d137194428a9e7411
Author: Axel Lin <axel.lin@ingics.com>
Date:   Wed Jul 3 15:06:45 2013 -0700

    drivers/rtc/rtc-rv3029c2.c: fix disabling AIE irq
    
    commit 29ecd78c0fd6ee05f2c6b07b23823a6ae43c13ff upstream.
    
    In the disable AIE irq code path, current code passes "1" to enable
    parameter of rv3029c2_rtc_i2c_alarm_set_irq().  Thus it does not disable
    AIE irq.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Heiko Schocher <hs@denx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 00bbe5df5c7cc4ddbd0e735b9056eec8f4b2ce0f
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Jul 3 15:01:15 2013 -0700

    crypto: sanitize argument for format string
    
    commit 1c8fca1d92e14859159a82b8a380d220139b7344 upstream.
    
    The template lookup interface does not provide a way to use format
    strings, so make sure that the interface cannot be abused accidentally.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b442223040adf969fd02124c29c856a06cf5649c
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Jul 3 15:01:14 2013 -0700

    block: do not pass disk names as format strings
    
    commit ffc8b30866879ed9ba62bd0a86fecdbd51cd3d19 upstream.
    
    Disk names may contain arbitrary strings, so they must not be
    interpreted as format strings.  It seems that only md allows arbitrary
    strings to be used for disk names, but this could allow for a local
    memory corruption from uid 0 into ring 0.
    
    CVE-2013-2851
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: adjust device pointer name in nbd.c]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 93f26306db89c9dc37885b76a1082e6d54d23b16
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Wed Jul 3 15:01:03 2013 -0700

    ocfs2: xattr: fix inlined xattr reflink
    
    commit ef962df057aaafd714f5c22ba3de1be459571fdf upstream.
    
    Inlined xattr shared free space of inode block with inlined data or data
    extent record, so the size of the later two should be adjusted when
    inlined xattr is enabled.  See ocfs2_xattr_ibody_init().  But this isn't
    done well when reflink.  For inode with inlined data, its max inlined
    data size is adjusted in ocfs2_duplicate_inline_data(), no problem.  But
    for inode with data extent record, its record count isn't adjusted.  Fix
    it, or data extent record and inlined xattr may overwrite each other,
    then cause data corruption or xattr failure.
    
    One panic caused by this bug in our test environment is the following:
    
      kernel BUG at fs/ocfs2/xattr.c:1435!
      invalid opcode: 0000 [#1] SMP
      Pid: 10871, comm: multi_reflink_t Not tainted 2.6.39-300.17.1.el5uek #1
      RIP: ocfs2_xa_offset_pointer+0x17/0x20 [ocfs2]
      RSP: e02b:ffff88007a587948  EFLAGS: 00010283
      RAX: 0000000000000000 RBX: 0000000000000010 RCX: 00000000000051e4
      RDX: ffff880057092060 RSI: 0000000000000f80 RDI: ffff88007a587a68
      RBP: ffff88007a587948 R08: 00000000000062f4 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000010
      R13: ffff88007a587a68 R14: 0000000000000001 R15: ffff88007a587c68
      FS:  00007fccff7f06e0(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000
      CS:  e033 DS: 0000 ES: 0000 CR0: 000000008005003b
      CR2: 00000000015cf000 CR3: 000000007aa76000 CR4: 0000000000000660
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
      Process multi_reflink_t
      Call Trace:
        ocfs2_xa_reuse_entry+0x60/0x280 [ocfs2]
        ocfs2_xa_prepare_entry+0x17e/0x2a0 [ocfs2]
        ocfs2_xa_set+0xcc/0x250 [ocfs2]
        ocfs2_xattr_ibody_set+0x98/0x230 [ocfs2]
        __ocfs2_xattr_set_handle+0x4f/0x700 [ocfs2]
        ocfs2_xattr_set+0x6c6/0x890 [ocfs2]
        ocfs2_xattr_user_set+0x46/0x50 [ocfs2]
        generic_setxattr+0x70/0x90
        __vfs_setxattr_noperm+0x80/0x1a0
        vfs_setxattr+0xa9/0xb0
        setxattr+0xc3/0x120
        sys_fsetxattr+0xa8/0xd0
        system_call_fastpath+0x16/0x1b
    
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Reviewed-by: Jie Liu <jeff.liu@oracle.com>
    Acked-by: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Sunil Mushran <sunil.mushran@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3dfd75404d6e8f9c0818bf5e96f507992e67082c
Author: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Date:   Wed Jul 3 15:00:43 2013 -0700

    drivers/dma/pl330.c: fix locking in pl330_free_chan_resources()
    
    commit da331ba8e9c5de72a27e50f71105395bba6eebe0 upstream.
    
    tasklet_kill() may sleep so call it before taking pch->lock.
    
    Fixes following lockup:
    
      BUG: scheduling while atomic: cat/2383/0x00000002
      Modules linked in:
        unwind_backtrace+0x0/0xfc
        __schedule_bug+0x4c/0x58
        __schedule+0x690/0x6e0
        sys_sched_yield+0x70/0x78
        tasklet_kill+0x34/0x8c
        pl330_free_chan_resources+0x24/0x88
        dma_chan_put+0x4c/0x50
      [...]
      BUG: spinlock lockup suspected on CPU#0, swapper/0/0
       lock: 0xe52aa04c, .magic: dead4ead, .owner: cat/2383, .owner_cpu: 1
        unwind_backtrace+0x0/0xfc
        do_raw_spin_lock+0x194/0x204
        _raw_spin_lock_irqsave+0x20/0x28
        pl330_tasklet+0x2c/0x5a8
        tasklet_action+0xfc/0x114
        __do_softirq+0xe4/0x19c
        irq_exit+0x98/0x9c
        handle_IPI+0x124/0x16c
        gic_handle_irq+0x64/0x68
        __irq_svc+0x40/0x70
        cpuidle_wrap_enter+0x4c/0xa0
        cpuidle_enter_state+0x18/0x68
        cpuidle_idle_call+0xac/0xe0
        cpu_idle+0xac/0xf0
    
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Kyungmin Park <kyungmin.park@samsung.com>
    Acked-by: Jassi Brar <jassisinghbrar@gmail.com>
    Cc: Vinod Koul <vinod.koul@linux.intel.com>
    Cc: Tomasz Figa <t.figa@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 88a4055704b39e5c67c9cbc837cc15ec6a6d8671
Author: Tyler Hicks <tyhicks@canonical.com>
Date:   Thu Jun 20 13:13:59 2013 -0700

    libceph: Fix NULL pointer dereference in auth client code
    
    commit 2cb33cac622afde897aa02d3dcd9fbba8bae839e upstream.
    
    A malicious monitor can craft an auth reply message that could cause a
    NULL function pointer dereference in the client's kernel.
    
    To prevent this, the auth_none protocol handler needs an empty
    ceph_auth_client_ops->build_request() function.
    
    CVE-2013-1059
    
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    Reported-by: Chanam Park <chanam.park@hkpco.kr>
    Reviewed-by: Seth Arnold <seth.arnold@canonical.com>
    Reviewed-by: Sage Weil <sage@inktank.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 226f3aac00bdf3650b150b2fe9640c64b25aaaa8
Author: zhangwei(Jovi) <jovi.zhangwei@huawei.com>
Date:   Wed Apr 10 11:26:23 2013 +0800

    tracing: Fix irqs-off tag display in syscall tracing
    
    commit 11034ae9c20f4057a6127fc965906417978e69b2 upstream.
    
    All syscall tracing irqs-off tags are wrong, the syscall enter entry doesn't
    disable irqs.
    
     [root@jovi tracing]#echo "syscalls:sys_enter_open" > set_event
     [root@jovi tracing]# cat trace
     # tracer: nop
     #
     # entries-in-buffer/entries-written: 13/13   #P:2
     #
     #                              _-----=> irqs-off
     #                             / _----=> need-resched
     #                            | / _---=> hardirq/softirq
     #                            || / _--=> preempt-depth
     #                            ||| /     delay
     #           TASK-PID   CPU#  ||||    TIMESTAMP  FUNCTION
     #              | |       |   ||||       |         |
           irqbalance-513   [000] d... 56115.496766: sys_open(filename: 804e1a6, flags: 0, mode: 1b6)
           irqbalance-513   [000] d... 56115.497008: sys_open(filename: 804e1bb, flags: 0, mode: 1b6)
             sendmail-771   [000] d... 56115.827982: sys_open(filename: b770e6d1, flags: 0, mode: 1b6)
    
    The reason is syscall tracing doesn't record irq_flags into buffer.
    The proper display is:
    
     [root@jovi tracing]#echo "syscalls:sys_enter_open" > set_event
     [root@jovi tracing]# cat trace
     # tracer: nop
     #
     # entries-in-buffer/entries-written: 14/14   #P:2
     #
     #                              _-----=> irqs-off
     #                             / _----=> need-resched
     #                            | / _---=> hardirq/softirq
     #                            || / _--=> preempt-depth
     #                            ||| /     delay
     #           TASK-PID   CPU#  ||||    TIMESTAMP  FUNCTION
     #              | |       |   ||||       |         |
           irqbalance-514   [001] ....    46.213921: sys_open(filename: 804e1a6, flags: 0, mode: 1b6)
           irqbalance-514   [001] ....    46.214160: sys_open(filename: 804e1bb, flags: 0, mode: 1b6)
                <...>-920   [001] ....    47.307260: sys_open(filename: 4e82a0c5, flags: 80000, mode: 0)
    
    Link: http://lkml.kernel.org/r/1365564393-10972-3-git-send-email-jovi.zhangwei@huawei.com
    
    Signed-off-by: zhangwei(Jovi) <jovi.zhangwei@huawei.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f956347bb3d631aac4cefabc764cef43fa8e3c47
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri Jun 21 11:48:11 2013 -0400

    nfsd4: fix decoding of compounds across page boundaries
    
    commit 247500820ebd02ad87525db5d9b199e5b66f6636 upstream.
    
    A freebsd NFSv4.0 client was getting rare IO errors expanding a tarball.
    A network trace showed the server returning BAD_XDR on the final getattr
    of a getattr+write+getattr compound.  The final getattr started on a
    page boundary.
    
    I believe the Linux client ignores errors on the post-write getattr, and
    that that's why we haven't seen this before.
    
    Reported-by: Rick Macklem <rmacklem@uoguelph.ca>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 29b25876eb2252e5b6ea0752e1e2103a83072af2
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Jul 1 08:12:40 2013 -0400

    jbd2: fix theoretical race in jbd2__journal_restart
    
    commit 39c04153fda8c32e85b51c96eb5511a326ad7609 upstream.
    
    Once we decrement transaction->t_updates, if this is the last handle
    holding the transaction from closing, and once we release the
    t_handle_lock spinlock, it's possible for the transaction to commit
    and be released.  In practice with normal kernels, this probably won't
    happen, since the commit happens in a separate kernel thread and it's
    unlikely this could all happen within the space of a few CPU cycles.
    
    On the other hand, with a real-time kernel, this could potentially
    happen, so save the tid found in transaction->t_tid before we release
    t_handle_lock.  It would require an insane configuration, such as one
    where the jbd2 thread was set to a very high real-time priority,
    perhaps because a high priority real-time thread is trying to read or
    write to a file system.  But some people who use real-time kernels
    have been known to do insane things, including controlling
    laser-wielding industrial robots.  :-)
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 78d07e4aa54372ad2240273e0969ebf7f44fc3c0
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Mon Jul 1 08:12:38 2013 -0400

    ext3,ext4: don't mess with dir_file->f_pos in htree_dirblock_to_tree()
    
    commit 64cb927371cd2ec43758d8a094a003d27bc3d0dc upstream.
    
    Both ext3 and ext4 htree_dirblock_to_tree() is just filling the
    in-core rbtree for use by call_filldir().  All updates of ->f_pos are
    done by the latter; bumping it here (on error) is obviously wrong - we
    might very well have it nowhere near the block we'd found an error in.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1aa33199c5969b6a062727438ba0795864dd3fbe
Author: Chen Gang <gang.chen@asianux.com>
Date:   Wed Mar 20 14:30:12 2013 +0800

    powerpc/smp: Section mismatch from smp_release_cpus to __initdata spinning_secondaries
    
    commit 8246aca7058f3f2c2ae503081777965cd8df7b90 upstream.
    
    the smp_release_cpus is a normal funciton and called in normal environments,
      but it calls the __initdata spinning_secondaries.
      need modify spinning_secondaries to match smp_release_cpus.
    
    the related warning:
      (the linker report boot_paca.33377, but it should be spinning_secondaries)
    
    -----------------------------------------------------------------------------
    
    WARNING: arch/powerpc/kernel/built-in.o(.text+0x23176): Section mismatch in reference from the function .smp_release_cpus() to the variable .init.data:boot_paca.33377
    The function .smp_release_cpus() references
    the variable __initdata boot_paca.33377.
    This is often because .smp_release_cpus lacks a __initdata
    annotation or the annotation of boot_paca.33377 is wrong.
    
    WARNING: arch/powerpc/kernel/built-in.o(.text+0x231fe): Section mismatch in reference from the function .smp_release_cpus() to the variable .init.data:boot_paca.33377
    The function .smp_release_cpus() references
    the variable __initdata boot_paca.33377.
    This is often because .smp_release_cpus lacks a __initdata
    annotation or the annotation of boot_paca.33377 is wrong.
    
    -----------------------------------------------------------------------------
    
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 577048c57f84b181bbaf48c3e26e401b6a6a46a9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jun 30 09:03:06 2013 -0700

    Revert "serial: 8250_pci: add support for another kind of NetMos Technology PCI 9835 Multi-I/O Controller"
    
    commit 828c6a102b1f2b8583fadc0e779c46b31d448f0b upstream.
    
    This reverts commit 8d2f8cd424ca0b99001f3ff4f5db87c4e525f366.
    
    As reported by Stefan, this device already works with the parport_serial
    driver, so the 8250_pci driver should not also try to grab it as well.
    
    Reported-by: Stefan Seyfried <stefan.seyfried@googlemail.com>
    Cc: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bfac32e77c3581a894d9e752390c93d3e1d1c5b9
Author: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
Date:   Fri Jun 28 14:15:15 2013 +0300

    UBIFS: fix a horrid bug
    
    commit 605c912bb843c024b1ed173dc427cd5c08e5d54d upstream.
    
    Al Viro pointed me to the fact that '->readdir()' and '->llseek()' have no
    mutual exclusion, which means the 'ubifs_dir_llseek()' can be run while we are
    in the middle of 'ubifs_readdir()'.
    
    This means that 'file->private_data' can be freed while 'ubifs_readdir()' uses
    it, and this is a very bad bug: not only 'ubifs_readdir()' can return garbage,
    but this may corrupt memory and lead to all kinds of problems like crashes an
    security holes.
    
    This patch fixes the problem by using the 'file->f_version' field, which
    '->llseek()' always unconditionally sets to zero. We set it to 1 in
    'ubifs_readdir()' and whenever we detect that it became 0, we know there was a
    seek and it is time to clear the state saved in 'file->private_data'.
    
    I tested this patch by writing a user-space program which runds readdir and
    seek in parallell. I could easily crash the kernel without these patches, but
    could not crash it with these patches.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e869332d2e5bb766cc6ac636a5594d2208e11baf
Author: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
Date:   Fri Jun 28 14:15:14 2013 +0300

    UBIFS: prepare to fix a horrid bug
    
    commit 33f1a63ae84dfd9ad298cf275b8f1887043ced36 upstream.
    
    Al Viro pointed me to the fact that '->readdir()' and '->llseek()' have no
    mutual exclusion, which means the 'ubifs_dir_llseek()' can be run while we are
    in the middle of 'ubifs_readdir()'.
    
    First of all, this means that 'file->private_data' can be freed while
    'ubifs_readdir()' uses it.  But this particular patch does not fix the problem.
    This patch is only a preparation, and the fix will follow next.
    
    In this patch we make 'ubifs_readdir()' stop using 'file->f_pos' directly,
    because 'file->f_pos' can be changed by '->llseek()' at any point. This may
    lead 'ubifs_readdir()' to returning inconsistent data: directory entry names
    may correspond to incorrect file positions.
    
    So here we introduce a local variable 'pos', read 'file->f_pose' once at very
    the beginning, and then stick to 'pos'. The result of this is that when
    'ubifs_dir_llseek()' changes 'file->f_pos' while we are in the middle of
    'ubifs_readdir()', the latter "wins".
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8e31a5dc1d911603053b45b63d6f862b1315ed27
Author: Laszlo Ersek <lersek@redhat.com>
Date:   Tue Oct 18 22:42:59 2011 +0200

    xen/time: remove blocked time accounting from xen "clockchip"
    
    commit 0b0c002c340e78173789f8afaa508070d838cf3d upstream.
    
    ... because the "clock_event_device framework" already accounts for idle
    time through the "event_handler" function pointer in
    xen_timer_interrupt().
    
    The patch is intended as the completion of [1]. It should fix the double
    idle times seen in PV guests' /proc/stat [2]. It should be orthogonal to
    stolen time accounting (the removed code seems to be isolated).
    
    The approach may be completely misguided.
    
    [1] https://lkml.org/lkml/2011/10/6/10
    [2] http://lists.xensource.com/archives/html/xen-devel/2010-08/msg01068.html
    
    John took the time to retest this patch on top of v3.10 and reported:
    "idle time is correctly incremented for pv and hvm for the normal
    case, nohz=off and nohz=idle." so lets put this patch in.
    
    Signed-off-by: Laszlo Ersek <lersek@redhat.com>
    Signed-off-by: John Haxby <john.haxby@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 52ae0bb6005040a774b80dcbb138df03fdf13088
Author: Bart Van Assche <bart.vanassche@gmail.com>
Date:   Tue May 21 20:43:50 2013 +0200

    timer: Fix jiffies wrap behavior of round_jiffies_common()
    
    commit 9e04d3804d3ac97d8c03a41d78d0f0674b5d01e1 upstream.
    
    Direct compare of jiffies related values does not work in the wrap
    around case. Replace it with time_is_after_jiffies().
    
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Cc: Arjan van de Ven <arjan@infradead.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Link: http://lkml.kernel.org/r/519BC066.5080600@acm.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5ba9a2e746033d2886d56d21b4298f5da7178d12
Author: Jan Kara <jack@suse.cz>
Date:   Fri Jun 28 16:04:02 2013 +0200

    writeback: Fix periodic writeback after fs mount
    
    commit a5faeaf9109578e65e1a32e2a3e76c8b47e7dcb6 upstream.
    
    Code in blkdev.c moves a device inode to default_backing_dev_info when
    the last reference to the device is put and moves the device inode back
    to its bdi when the first reference is acquired. This includes moving to
    wb.b_dirty list if the device inode is dirty. The code however doesn't
    setup timer to wake corresponding flusher thread and while wb.b_dirty
    list is non-empty __mark_inode_dirty() will not set it up either. Thus
    periodic writeback is effectively disabled until a sync(2) call which can
    lead to unexpected data loss in case of crash or power failure.
    
    Fix the problem by setting up a timer for periodic writeback in case we
    add the first dirty inode to wb.b_dirty list in bdev_inode_switch_bdi().
    
    Reported-by: Bert De Jonghe <Bert.DeJonghe@amplidata.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e0a59ed79b08eea4ce3d88ddf8ef781265301b90
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Fri Jun 28 02:40:30 2013 +0100

    genirq: Fix can_request_irq() for IRQs without an action
    
    commit 2779db8d37d4b542d9ca2575f5f178dbeaca6c86 upstream.
    
    Commit 02725e7471b8 ('genirq: Use irq_get/put functions'),
    inadvertently changed can_request_irq() to return 0 for IRQs that have
    no action.  This causes pcibios_lookup_irq() to select only IRQs that
    already have an action with IRQF_SHARED set, or to fail if there are
    none.  Change can_request_irq() to return 1 for IRQs that have no
    action (if the first two conditions are met).
    
    Reported-by: Bjarni Ingi Gislason <bjarniig@rhi.hi.is>
    Tested-by: Bjarni Ingi Gislason <bjarniig@rhi.hi.is> (against 3.2)
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: 709647@bugs.debian.org
    Link: http://bugs.debian.org/709647
    Link: http://lkml.kernel.org/r/1372383630.23847.40.camel@deadeye.wl.decadent.org.uk
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 200c26329de1e3f052cf30ea9cbf5f4023d5ad5e
Author: Zefan Li <lizefan@huawei.com>
Date:   Wed Jun 26 15:31:58 2013 +0800

    dlci: validate the net device in dlci_del()
    
    commit 578a1310f2592ba90c5674bca21c1dbd1adf3f0a upstream.
    
    We triggered an oops while running trinity with 3.4 kernel:
    
    BUG: unable to handle kernel paging request at 0000000100000d07
    IP: [<ffffffffa0109738>] dlci_ioctl+0xd8/0x2d4 [dlci]
    PGD 640c0d067 PUD 0
    Oops: 0000 [#1] PREEMPT SMP
    CPU 3
    ...
    Pid: 7302, comm: trinity-child3 Not tainted 3.4.24.09+ 40 Huawei Technologies Co., Ltd. Tecal RH2285          /BC11BTSA
    RIP: 0010:[<ffffffffa0109738>]  [<ffffffffa0109738>] dlci_ioctl+0xd8/0x2d4 [dlci]
    ...
    Call Trace:
      [<ffffffff8137c5c3>] sock_ioctl+0x153/0x280
      [<ffffffff81195494>] do_vfs_ioctl+0xa4/0x5e0
      [<ffffffff8118354a>] ? fget_light+0x3ea/0x490
      [<ffffffff81195a1f>] sys_ioctl+0x4f/0x80
      [<ffffffff81478b69>] system_call_fastpath+0x16/0x1b
    ...
    
    It's because the net device is not a dlci device.
    
    Reported-by: Li Jinyue <lijinyue@huawei.com>
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 20156bcf0895e1dcde7b0b3ef6e8614cfd5fab10
Author: Zefan Li <lizefan@huawei.com>
Date:   Wed Jun 26 15:29:54 2013 +0800

    dlci: acquire rtnl_lock before calling __dev_get_by_name()
    
    commit 11eb2645cbf38a08ae491bf6c602eea900ec0bb5 upstream.
    
    Otherwise the net device returned can be freed at anytime.
    
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0922d9a16733658dd91a1aa9e543d9e03a4f3aa2
Author: Steve French <smfrench@us.ibm.com>
Date:   Tue Jun 25 14:03:16 2013 -0500

    Handle big endianness in NTLM (ntlmv2) authentication
    
    commit fdf96a907c1fbb93c633e2b7ede3b8df26d6a4c0 upstream.
    
    This is RH bug 970891
    Uppercasing of username during calculation of ntlmv2 hash fails
    because UniStrupr function does not handle big endian wchars.
    
    Also fix a comment in the same code to reflect its correct usage.
    
    [To make it easier for stable (rather than require 2nd patch) fixed
    this patch of Shirish's to remove endian warning generated
    by sparse -- steve f.]
    
    Reported-by: steve <sanpatr1@in.ibm.com>
    Signed-off-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    [bwh: Backported to 3.2: adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2235df8b82f6333f2f1a4c6e0acf80f19f591b55
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Jun 25 11:48:32 2013 -0700

    cgroup: fix RCU accesses to task->cgroups
    
    commit 14611e51a57df10240817d8ada510842faf0ec51 upstream.
    
    task->cgroups is a RCU pointer pointing to struct css_set.  A task
    switches to a different css_set on cgroup migration but a css_set
    doesn't change once created and its pointers to cgroup_subsys_states
    aren't RCU protected.
    
    task_subsys_state[_check]() is the macro to acquire css given a task
    and subsys_id pair.  It RCU-dereferences task->cgroups->subsys[] not
    task->cgroups, so the RCU pointer task->cgroups ends up being
    dereferenced without read_barrier_depends() after it.  It's broken.
    
    Fix it by introducing task_css_set[_check]() which does
    RCU-dereference on task->cgroups.  task_subsys_state[_check]() is
    reimplemented to directly dereference ->subsys[] of the css_set
    returned from task_css_set[_check]().
    
    This removes some of sparse RCU warnings in cgroup.
    
    v2: Fixed unbalanced parenthsis and there's no need to use
        rcu_dereference_raw() when !CONFIG_PROVE_RCU.  Both spotted by Li.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Acked-by: Li Zefan <lizefan@huawei.com>
    [bwh: Backported to 3.2:
     - Adjust context
     - Remove CONFIG_PROVE_RCU condition
     - s/lockdep_is_held(&cgroup_mutex)/cgroup_lock_is_held()/]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit be45f4eba5d9c264dacd10dee0ba23ec14624911
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon May 27 19:07:19 2013 +0100

    sd: Fix parsing of 'temporary ' cache mode prefix
    
    commit 2ee3e26c673e75c05ef8b914f54fadee3d7b9c88 upstream.
    
    Commit 39c60a0948cc '[SCSI] sd: fix array cache flushing bug causing
    performance problems' added temp as a pointer to "temporary " and used
    sizeof(temp) - 1 as its length.  But sizeof(temp) is the size of the
    pointer, not the size of the string constant.  Change temp to a static
    array so that sizeof() does what was intended.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 6c23479357ed3a810e3b56b1076fc6d9a2fee6e8
Author: James Bottomley <JBottomley@Parallels.com>
Date:   Wed Apr 24 14:02:53 2013 -0700

    sd: fix array cache flushing bug causing performance problems
    
    commit 39c60a0948cc06139e2fbfe084f83cb7e7deae3b upstream.
    
    Some arrays synchronize their full non volatile cache when the sd driver sends
    a SYNCHRONIZE CACHE command.  Unfortunately, they can have Terrabytes of this
    and we send a SYNCHRONIZE CACHE for every barrier if an array reports it has a
    writeback cache.  This leads to massive slowdowns on journalled filesystems.
    
    The fix is to allow userspace to turn off the writeback cache setting as a
    temporary measure (i.e. without doing the MODE SELECT to write it back to the
    device), so even though the device reported it has a writeback cache, the
    user, knowing that the cache is non volatile and all they care about is
    filesystem correctness, can turn that bit off in the kernel and avoid the
    performance ruinous (and safety irrelevant) SYNCHRONIZE CACHE commands.
    
    The way you do this is add a 'temporary' prefix when performing the usual
    cache setting operations, so
    
    echo temporary write through > /sys/class/scsi_disk/<disk>/cache_type
    
    Reported-by: Ric Wheeler <rwheeler@redhat.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e79c0b93200a2dc945e853591002b6e5bc529b91
Author: Stephane Eranian <eranian@google.com>
Date:   Thu Jun 20 11:36:28 2013 +0200

    perf: Disable monitoring on setuid processes for regular users
    
    commit 2976b10f05bd7f6dab9f9e7524451ddfed656a89 upstream.
    
    There was a a bug in setup_new_exec(), whereby
    the test to disabled perf monitoring was not
    correct because the new credentials for the
    process were not yet committed and therefore
    the get_dumpable() test was never firing.
    
    The patch fixes the problem by moving the
    perf_event test until after the credentials
    are committed.
    
    Signed-off-by: Stephane Eranian <eranian@google.com>
    Tested-by: Jiri Olsa <jolsa@redhat.com>
    Acked-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 809feb1735e5f4210ba455108ca91cb55b7b8610
Author: Marcelo Tosatti <mtosatti@redhat.com>
Date:   Thu Jun 20 18:05:56 2013 -0300

    vgacon.c: add cond reschedule points in vgacon_do_font_op
    
    commit 7e6d72c15ff4cc0c27573901bb05f9eddbd71ed4 upstream.
    
    Booting a 64-vcpu KVM guest, with CONFIG_PREEMPT_VOLUNTARY,
    can result in a soft lockup:
    
    BUG: soft lockup - CPU#41 stuck for 67s! [setfont:1505]
     RIP: 0010:[<ffffffff812c48da>]
    [<ffffffff812c48da>] vgacon_do_font_op.clone.0+0x1ba/0x550
    
    This is due to the 8192 (cmapsz) IO operations taking longer than expected
    due to lock contention in QEMU.
    
    Add conditional resched points in between writes allowing other tasks to
    execute.
    
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    [bwh: Backported to 3.2: add #include <linux/sched.h>, already present
     upstream]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 695742a1522eb8e7ed0231e85aec51bf92c4af30
Author: Zhang Yi <wetpzy@gmail.com>
Date:   Tue Jun 25 21:19:31 2013 +0800

    futex: Take hugepages into account when generating futex_key
    
    commit 13d60f4b6ab5b702dc8d2ee20999f98a93728aec upstream.
    
    The futex_keys of process shared futexes are generated from the page
    offset, the mapping host and the mapping index of the futex user space
    address. This should result in an unique identifier for each futex.
    
    Though this is not true when futexes are located in different subpages
    of an hugepage. The reason is, that the mapping index for all those
    futexes evaluates to the index of the base page of the hugetlbfs
    mapping. So a futex at offset 0 of the hugepage mapping and another
    one at offset PAGE_SIZE of the same hugepage mapping have identical
    futex_keys. This happens because the futex code blindly uses
    page->index.
    
    Steps to reproduce the bug:
    
    1. Map a file from hugetlbfs. Initialize pthread_mutex1 at offset 0
       and pthread_mutex2 at offset PAGE_SIZE of the hugetlbfs
       mapping.
    
       The mutexes must be initialized as PTHREAD_PROCESS_SHARED because
       PTHREAD_PROCESS_PRIVATE mutexes are not affected by this issue as
       their keys solely depend on the user space address.
    
    2. Lock mutex1 and mutex2
    
    3. Create thread1 and in the thread function lock mutex1, which
       results in thread1 blocking on the locked mutex1.
    
    4. Create thread2 and in the thread function lock mutex2, which
       results in thread2 blocking on the locked mutex2.
    
    5. Unlock mutex2. Despite the fact that mutex2 got unlocked, thread2
       still blocks on mutex2 because the futex_key points to mutex1.
    
    To solve this issue we need to take the normal page index of the page
    which contains the futex into account, if the futex is in an hugetlbfs
    mapping. In other words, we calculate the normal page mapping index of
    the subpage in the hugetlbfs mapping.
    
    Mappings which are not based on hugetlbfs are not affected and still
    use page->index.
    
    Thanks to Mel Gorman who provided a patch for adding proper evaluation
    functions to the hugetlbfs code to avoid exposing hugetlbfs specific
    details to the futex code.
    
    [ tglx: Massaged changelog ]
    
    Signed-off-by: Zhang Yi <zhang.yi20@zte.com.cn>
    Reviewed-by: Jiang Biao <jiang.biao2@zte.com.cn>
    Tested-by: Ma Chenggong <ma.chenggong@zte.com.cn>
    Reviewed-by: 'Mel Gorman' <mgorman@suse.de>
    Acked-by: 'Darren Hart' <dvhart@linux.intel.com>
    Cc: 'Peter Zijlstra' <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/000101ce71a6%24a83c5880%24f8b50980%24@com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7ea55ad75e7ed00cc6f30583ae4d267884eaffad
Author: Dan Williams <dcbw@redhat.com>
Date:   Thu Jun 20 16:07:40 2013 -0500

    USB: option,qcserial: move Novatel Gobi1K IDs to qcserial
    
    commit a254810a86aaaac4ac6ba44fa934558b042a17a7 upstream.
    
    These devices are all Gobi1K devices (according to the Windows INF
    files) and should be handled by qcserial instead of option.  Their
    network port is handled by qmi_wwan.
    
    Signed-off-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1536b908147035bebb7a8dab085aacb82e3def6d
Author: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
Date:   Sat Feb 2 00:58:20 2013 +0530

    mpt2sas: fix firmware failure with wrong task attribute
    
    commit 48ba2efc382f94fae16ca8ca011e5961a81ad1ea upstream.
    
    When SCSI command is received with task attribute not set, set it to SIMPLE.
    Previously it is set to untagged. This causes the firmware to fail the commands.
    
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e4498ad1ef9c7b3673efbeef5af0a3ef61a0ce07
Author: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
Date:   Sat Feb 2 00:56:18 2013 +0530

    mpt2sas: Fix for device scan following host reset could get stuck in a infinite loop
    
    commit 6241f22ca12a26ee149cbe31b27bac97dbdc8bc4 upstream.
    
    Modified device scan routine so each configuration page read breaks from the
    while loop when the ioc_status is not equal to MPI2_IOCSTATUS_SUCCESS.
    
    [jejb: checkpatch fixes]
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    [bwh: Backported to 3.2; adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 93cfcb8c998e3fe2c075fa61ab28f7b018e5049a
Author: Reddy, Sreekanth <Sreekanth.Reddy@lsi.com>
Date:   Tue Feb 26 16:59:59 2013 +0530

    mpt2sas: Fix for issue Missing delay not getting set during system bootup
    
    commit b0df96a0068daee4f9c2189c29b9053eb6e46b17 upstream.
    
    Missing delay is not getting set properly. The reason is that it is not
    defined in the same file from where it is being invoked.  The fix is to move
    the missing delay module parameter from mpt2sas_base.c to mpt2sas_scsh.c.
    
    Signed-off-by: Sreekanth Reddy <Sreekanth.Reddy@lsi.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8c7c7cec2608c2a9cfbc4153a79b0dbae9d7a801
Author: Jed Davis <jld@mozilla.com>
Date:   Thu Jun 20 10:16:29 2013 +0100

    ARM: 7765/1: perf: Record the user-mode PC in the call chain.
    
    commit c5f927a6f62196226915f12194c9d0df4e2210d7 upstream.
    
    With this change, we no longer lose the innermost entry in the user-mode
    part of the call chain.  See also the x86 port, which includes the ip.
    
    It's possible to partially work around this problem by post-processing
    the data to use the PERF_SAMPLE_IP value, but this works only if the CPU
    wasn't in the kernel when the sample was taken.
    
    Signed-off-by: Jed Davis <jld@mozilla.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6d2d894ed086b26f8e507219e9f5709526efa4b2
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri Jun 21 14:33:19 2013 -0600

    iommu/amd: Only unmap large pages from the first pte
    
    commit 60d0ca3cfd199b6612bbbbf4999a3470dad38bb1 upstream.
    
    If we use a large mapping, the expectation is that only unmaps from
    the first pte in the superpage are supported.  Unmaps from offsets
    into the superpage should fail (ie. return zero sized unmap).  In the
    current code, unmapping from an offset clears the size of the full
    mapping starting from an offset.  For instance, if we map a 16k
    physically contiguous range at IOVA 0x0 with a large page, then
    attempt to unmap 4k at offset 12k, 4 ptes are cleared (12k - 28k) and
    the unmap returns 16k unmapped.  This potentially incorrectly clears
    valid mappings and confuses drivers like VFIO that use the unmap size
    to release pinned pages.
    
    Fix by refusing to unmap from offsets into the page.
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Joerg Roedel <joro@8bytes.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a1b0505ef3dbb8a55f85e0ae7f8114d71474b32f
Author: Jaganath Kanakkassery <jaganath.k@samsung.com>
Date:   Fri Jun 21 19:55:11 2013 +0530

    Bluetooth: Fix invalid length check in l2cap_information_rsp()
    
    commit 3f6fa3d489e127ca5a5b298eabac3ff5dbe0e112 upstream.
    
    The length check is invalid since the length varies with type of
    info response.
    
    This was introduced by the commit cb3b3152b2f5939d67005cff841a1ca748b19888
    
    Because of this, l2cap info rsp is not handled and command reject is sent.
    
    > ACL data: handle 11 flags 0x02 dlen 16
            L2CAP(s): Info rsp: type 2 result 0
              Extended feature mask 0x00b8
                Enhanced Retransmission mode
                Streaming mode
                FCS Option
                Fixed Channels
    < ACL data: handle 11 flags 0x00 dlen 10
            L2CAP(s): Command rej: reason 0
              Command not understood
    
    Signed-off-by: Jaganath Kanakkassery <jaganath.k@samsung.com>
    Signed-off-by: Chan-Yeol Park <chanyeol.park@samsung.com>
    Acked-by: Johan Hedberg <johan.hedberg@intel.com>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d23288a5a9fb61c0fc58e544fc38c14ef60076c8
Author: Seth Heasley <seth.heasley@intel.com>
Date:   Wed Jun 19 16:36:45 2013 -0700

    ahci: AHCI-mode SATA patch for Intel Coleto Creek DeviceIDs
    
    commit 1cfc7df3de10c40ed459e13cce6de616023bf41c upstream.
    
    This patch adds the AHCI-mode SATA DeviceIDs for the Intel Coleto Creek PCH.
    
    Signed-off-by: Seth Heasley <seth.heasley@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 92405d49d9cf6c4dee689727a8757f2e0f4357af
Author: Seth Heasley <seth.heasley@intel.com>
Date:   Wed Jun 19 16:25:37 2013 -0700

    ata_piix: IDE-mode SATA patch for Intel Coleto Creek DeviceIDs
    
    commit c7e8695bfa0611b39493a9dfe8bab9f63f9809bd upstream.
    
    This patch adds the IDE-mode SATA DeviceIDs for the Intel Coleto Creek PCH.
    
    Signed-off-by: Seth Heasley <seth.heasley@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac02af4cc6edcc26925b37f8e4c6c03a1b39a910
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Thu Jun 20 17:50:09 2013 +0200

    hw_breakpoint: Use cpu_possible_mask in {reserve,release}_bp_slot()
    
    commit c790b0ad23f427c7522ffed264706238c57c007e upstream.
    
    fetch_bp_busy_slots() and toggle_bp_slot() use
    for_each_online_cpu(), this is obviously wrong wrt cpu_up() or
    cpu_down(), we can over/under account the per-cpu numbers.
    
    For example:
    
            # echo 0 >> /sys/devices/system/cpu/cpu1/online
            # perf record -e mem:0x10 -p 1 &
            # echo 1 >> /sys/devices/system/cpu/cpu1/online
            # perf record -e mem:0x10,mem:0x10,mem:0x10,mem:0x10 -C1 -a &
            # taskset -p 0x2 1
    
    triggers the same WARN_ONCE("Can't find any breakpoint slot") in
    arch_install_hw_breakpoint().
    
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Acked-by: Frederic Weisbecker <fweisbec@gmail.com>
    Link: http://lkml.kernel.org/r/20130620155009.GA6327@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 965386e5345230cb27d840a272c3a5fe78fb9da7
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Jun 18 13:25:05 2013 -0500

    rtlwifi: rtl8192cu: Fix duplicate if test
    
    commit 10d0b9030a3f86e1e26c710c7580524d7787d688 upstream.
    
    A typo causes routine rtl92cu_phy_rf6052_set_cck_txpower() to test the
    same condition twice. The problem was found using cppcheck-1.49, and the
    proper fix was verified against the pre-mac80211 version of the code.
    
    This patch was originally included as commit 1288aa4, but was accidentally
    reverted in a later patch.
    
    Reported-by: David Binderman <dcb314@hotmail.com> [original report]
    Reported-by: Andrea Morello <andrea.merello@gmail.com> [report of accidental reversion]
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2af951daef68fcb1c6cace0543c420a8c26fe756
Author: Soeren Moch <smoch@web.de>
Date:   Wed Jun 5 21:26:23 2013 -0300

    media: dmxdev: remove dvb_ringbuffer_flush() on writer side
    
    commit 414abbd2cd4c2618895f02ed3a76ec6647281436 upstream.
    
    In dvb_ringbuffer lock-less synchronizationof reader and writer threads is done
    with separateread and write pointers. Sincedvb_ringbuffer_flush() modifies the
    read pointer, this function must not be called from the writer thread.
    This patch removes the dvb_ringbuffer_flush() calls in the dmxdev ringbuffer
    write functions, this fixes Oopses "Unable to handle kernel paging request"
    I could observe for the call chaindvb_demux_read ->dvb_dmxdev_buffer_read ->
    dvb_ringbuffer_read_user -> __copy_to_user (the reader side of the ringbuffer).
    The flush calls at the write side are not necessary anyway since ringbuffer_flush
    is also called in dvb_dmxdev_buffer_read() when an error condition is set in the
    ringbuffer.
    This patch should also be applied to stable kernels.
    
    Signed-off-by: Soeren Moch <smoch@web.de>
    Reviewed-by: Sakari Ailus <sakari.ailus@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e4af376d04b03ff3ab2f27701bb183da6ee2aaff
Author: Jason Wang <jasowang@redhat.com>
Date:   Tue Jun 18 13:04:23 2013 +0800

    drivers: hv: switch to use mb() instead of smp_mb()
    
    commit 35848f68b07df3f917cb13fc3c134718669f569b upstream.
    
    Even if guest were compiled without SMP support, it could not assume that host
    wasn't. So switch to use mb() instead of smp_mb() to force memory barriers for
    UP guest.
    
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2:
     - Drop changes to functions that don't exist here
     - hv_ringbuffer_write() has only a write memory barrier]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a07e6fe002db3ef37149125322ca98d42bf04a8a
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Mon Jun 17 09:56:33 2013 -0700

    xhci: check for failed dma pool allocation
    
    commit 025f880cb2e4d7218d0422d4b07bea1a68959c38 upstream.
    
    Fail and free the container context in case dma_pool_alloc() can't allocate
    the raw context data part of it
    
    This patch should be backported to kernels as old as 2.6.31, that
    contain the commit d115b04818e57bdbc7ccde4d0660b15e33013dc8 "USB: xhci:
    Support for 64-byte contexts".
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Cc: John Youn <johnyoun@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 28009d3918aabba0e0713baa49f8f6367604af51
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jun 18 16:14:22 2013 +0200

    ALSA: hda - Cache the MUX selection for generic HDMI
    
    commit bddee96b5d0db869f47b195fe48c614ca824203c upstream.
    
    When a selection to a converter MUX is changed in hdmi_pcm_open(), it
    should be cached so that the given connection can be restored properly
    at PM resume.  We need just to replace the corresponding
    snd_hda_codec_write() call with snd_hda_codec_write_cache().
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 65f64b4184f403a938e80876474a006439269a7b
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Mon Jun 17 13:25:49 2013 -0500

    rtlwifi: rtl8192cu: Add new USB ID for TP-Link TL-WN8200ND
    
    commit c4d827c5ccc3a49227dbf9d4b248a2e86f388023 upstream.
    
    This is a new device for this driver.
    
    Reported-by: Tobias Kluge <zielscheibe@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Cc: Tobias Kluge <zielscheibe@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c0149bb9eae72c6b939e897ffde5ed3d9a8ddb21
Author: Nicolin Chen <b42378@freescale.com>
Date:   Fri Jun 14 12:34:50 2013 +0800

    ASoC: wm8962: Remove remaining direct register cache accesses
    
    commit 2e7ee15ced914e109a1a5b6dfcd463d846a13bd5 upstream.
    
    Also fix return values for headphone switch updates.
    
    Signed-off-by: Nicolin Chen <b42378@freescale.com>
    Signed-off-by: Mark Brown <broonie@linaro.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d72a32c0be56bc0798bb8fc83d89d0f3642ae548
Author: Anderson Lizardo <anderson.lizardo@openbossa.org>
Date:   Sun Jun 2 16:30:40 2013 -0400

    Bluetooth: Fix crash in l2cap_build_cmd() with small MTU
    
    commit 300b962e5244a1ea010df7e88595faa0085b461d upstream.
    
    If a too small MTU value is set with ioctl(HCISETACLMTU) or by a bogus
    controller, memory corruption happens due to a memcpy() call with
    negative length.
    
    Fix this crash on either incoming or outgoing connections with a MTU
    smaller than L2CAP_HDR_SIZE + L2CAP_CMD_HDR_SIZE:
    
    [   46.885433] BUG: unable to handle kernel paging request at f56ad000
    [   46.888037] IP: [<c03d94cd>] memcpy+0x1d/0x40
    [   46.888037] *pdpt = 0000000000ac3001 *pde = 00000000373f8067 *pte = 80000000356ad060
    [   46.888037] Oops: 0002 [#1] SMP DEBUG_PAGEALLOC
    [   46.888037] Modules linked in: hci_vhci bluetooth virtio_balloon i2c_piix4 uhci_hcd usbcore usb_common
    [   46.888037] CPU: 0 PID: 1044 Comm: kworker/u3:0 Not tainted 3.10.0-rc1+ #12
    [   46.888037] Hardware name: Bochs Bochs, BIOS Bochs 01/01/2007
    [   46.888037] Workqueue: hci0 hci_rx_work [bluetooth]
    [   46.888037] task: f59b15b0 ti: f55c4000 task.ti: f55c4000
    [   46.888037] EIP: 0060:[<c03d94cd>] EFLAGS: 00010212 CPU: 0
    [   46.888037] EIP is at memcpy+0x1d/0x40
    [   46.888037] EAX: f56ac1c0 EBX: fffffff8 ECX: 3ffffc6e EDX: f55c5cf2
    [   46.888037] ESI: f55c6b32 EDI: f56ad000 EBP: f55c5c68 ESP: f55c5c5c
    [   46.888037]  DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068
    [   46.888037] CR0: 8005003b CR2: f56ad000 CR3: 3557d000 CR4: 000006f0
    [   46.888037] DR0: 00000000 DR1: 00000000 DR2: 00000000 DR3: 00000000
    [   46.888037] DR6: ffff0ff0 DR7: 00000400
    [   46.888037] Stack:
    [   46.888037]  fffffff8 00000010 00000003 f55c5cac f8c6a54c ffffffff f8c69eb2 00000000
    [   46.888037]  f4783cdc f57f0070 f759c590 1001c580 00000003 0200000a 00000000 f5a88560
    [   46.888037]  f5ba2600 f5a88560 00000041 00000000 f55c5d90 f8c6f4c7 00000008 f55c5cf2
    [   46.888037] Call Trace:
    [   46.888037]  [<f8c6a54c>] l2cap_send_cmd+0x1cc/0x230 [bluetooth]
    [   46.888037]  [<f8c69eb2>] ? l2cap_global_chan_by_psm+0x152/0x1a0 [bluetooth]
    [   46.888037]  [<f8c6f4c7>] l2cap_connect+0x3f7/0x540 [bluetooth]
    [   46.888037]  [<c019b37b>] ? trace_hardirqs_off+0xb/0x10
    [   46.888037]  [<c01a0ff8>] ? mark_held_locks+0x68/0x110
    [   46.888037]  [<c064ad20>] ? mutex_lock_nested+0x280/0x360
    [   46.888037]  [<c064b9d9>] ? __mutex_unlock_slowpath+0xa9/0x150
    [   46.888037]  [<c01a118c>] ? trace_hardirqs_on_caller+0xec/0x1b0
    [   46.888037]  [<c064ad08>] ? mutex_lock_nested+0x268/0x360
    [   46.888037]  [<c01a125b>] ? trace_hardirqs_on+0xb/0x10
    [   46.888037]  [<f8c72f8d>] l2cap_recv_frame+0xb2d/0x1d30 [bluetooth]
    [   46.888037]  [<c01a0ff8>] ? mark_held_locks+0x68/0x110
    [   46.888037]  [<c064b9d9>] ? __mutex_unlock_slowpath+0xa9/0x150
    [   46.888037]  [<c01a118c>] ? trace_hardirqs_on_caller+0xec/0x1b0
    [   46.888037]  [<f8c754f1>] l2cap_recv_acldata+0x2a1/0x320 [bluetooth]
    [   46.888037]  [<f8c491d8>] hci_rx_work+0x518/0x810 [bluetooth]
    [   46.888037]  [<f8c48df2>] ? hci_rx_work+0x132/0x810 [bluetooth]
    [   46.888037]  [<c0158979>] process_one_work+0x1a9/0x600
    [   46.888037]  [<c01588fb>] ? process_one_work+0x12b/0x600
    [   46.888037]  [<c015922e>] ? worker_thread+0x19e/0x320
    [   46.888037]  [<c015922e>] ? worker_thread+0x19e/0x320
    [   46.888037]  [<c0159187>] worker_thread+0xf7/0x320
    [   46.888037]  [<c0159090>] ? rescuer_thread+0x290/0x290
    [   46.888037]  [<c01602f8>] kthread+0xa8/0xb0
    [   46.888037]  [<c0656777>] ret_from_kernel_thread+0x1b/0x28
    [   46.888037]  [<c0160250>] ? flush_kthread_worker+0x120/0x120
    [   46.888037] Code: c3 90 8d 74 26 00 e8 63 fc ff ff eb e8 90 55 89 e5 83 ec 0c 89 5d f4 89 75 f8 89 7d fc 3e 8d 74 26 00 89 cb 89 c7 c1 e9 02 89 d6 <f3> a5 89 d9 83 e1 03 74 02 f3 a4 8b 5d f4 8b 75 f8 8b 7d fc 89
    [   46.888037] EIP: [<c03d94cd>] memcpy+0x1d/0x40 SS:ESP 0068:f55c5c5c
    [   46.888037] CR2: 00000000f56ad000
    [   46.888037] ---[ end trace 0217c1f4d78714a9 ]---
    
    Signed-off-by: Anderson Lizardo <anderson.lizardo@openbossa.org>
    Signed-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d642e1a1f0442b897ad000d1af325b6c78a02b94
Author: Sujith Manoharan <c_manoha@qca.qualcomm.com>
Date:   Mon Jun 10 13:49:40 2013 +0530

    ath9k: Do not assign noise for NULL caldata
    
    commit d3bcb7b24bbf09fde8405770e676fe0c11c79662 upstream.
    
    ah->noise is maintained globally and not per-channel. This
    is updated in the reset() routine after the NF history has been
    filled for the *current channel*, just before switching to
    the new channel. There is no need to do it inside getnf(), since
    ah->noise must contain a value for the new channel.
    
    Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit df8c1e2ba1f2f31f6ed28ba3cc4c14a69358404c
Author: Sujith Manoharan <c_manoha@qca.qualcomm.com>
Date:   Mon Jun 10 13:49:39 2013 +0530

    ath9k: Fix noisefloor calibration
    
    commit 696df78509d1f81b651dd98ecdc1aecab616db6b upstream.
    
    The commits,
    
    "ath9k: Fix regression in channelwidth switch at the same channel"
    "ath9k: Fix invalid noisefloor reading due to channel update"
    
    attempted to fix noisefloor calibration when a channel switch
    happens due to HT20/HT40 bandwidth change. This is causing invalid
    readings resulting in messages like:
    
    "ath: phy16: NF[0] (-45) > MAX (-95), correcting to MAX".
    
    This results in an incorrect noise being used initially for reporting
    the signal level of received packets, until NF calibration is done
    and the history buffer is updated via the ANI timer, which happens
    much later.
    
    When a bandwidth change happens, it is appropriate to reset
    the internal history data for the channel. Do this correctly in the
    reset() routine by checking the "chanmode" variable.
    
    Cc: Rajkumar Manoharan <rmanohar@qca.qualcomm.com>
    Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9990a882ec3cb26b4f9dc15febb769c34846e2a8
Author: Rajkumar Manoharan <rmanohar@qca.qualcomm.com>
Date:   Fri Oct 12 14:07:24 2012 +0530

    ath9k: fill channel mode in caldata
    
    commit 77d848372875d2e4cbdbf07030f0e08cab5e7f4d upstream.
    
    It is useful to have channel mode in caldata to find out
    whether operaing channel is in HT40/20 when we are currently
    on offchannel. It will be used by BTCOEX to enable/disable
    concurrent tx mechanism later.
    
    Signed-off-by: Rajkumar Manoharan <rmanohar@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 041aacd868cda63b3218d055888d1af635126949
Author: Sujith Manoharan <c_manoha@qca.qualcomm.com>
Date:   Mon Jun 10 13:49:38 2013 +0530

    ath9k_hw: Assign default xlna config for AR9485
    
    commit 30d5b709da23f4ab9836c7f66d2d2e780a69cf12 upstream.
    
    For AR9485 boards with XLNA, the default gpio config
    is not set correctly, fix this.
    
    Signed-off-by: Sujith Manoharan <c_manoha@qca.qualcomm.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 51f2a0a803cd9cf31401610f40d5ab452b2b7e0a
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Sun Jun 9 18:53:58 2013 +0200

    b43: ensue that BCMA is "y" when B43 is "y"
    
    commit 693026ef2e751fd94d2e6c71028e68343cc875d5 upstream.
    
    When b43 gets build into the kernel and it should use bcma we have to
    ensure that bcma was also build into the kernel and not as a module.
    In this patch this is also done for SSB, although you can not
    build b43 without ssb support for now.
    
    This fixes a build problem reported by Randy Dunlap in
    5187EB95.2060605@infradead.org
    
    Reported-By: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c2ecb14d22b1e99a9dcdef8d20a37762c45e6e67
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Jun 11 00:11:36 2013 -0700

    libata: skip SRST for all SIMG [34]7x port-multipliers
    
    commit 7a87718d92760fc688628ad6a430643dafa16f1f upstream.
    
    For some reason, a lot of port-multipliers have issues with softreset.
    SIMG [34]7x series port-multipliers have been quite erratic in this
    regard.  I recall that it was better with some firmware revisions and
    the current list of quirks worked fine for a while.  I think it got
    worse with later firmwares or maybe my test coverage wasn't good
    enough.  Anyways, HPA is reporting that his 3726 setup suffers SRST
    failures and then the PMP gets confused and fails to probe the last
    port.
    
    The hope was that we try to stick to the standard as much as possible
    and soonish the PMPs and their firmwares will improve in quality, so
    the quirk list was kept to minimum.  Well, it seems like that's never
    gonna happen.
    
    Let's set NO_SRST for all [34]7x PMPs so that whatever remaining
    userbase of the device suffer the least.  Maybe we should do the same
    for 57xx's but unfortunately I don't have any device left to test and
    I'm not even sure 57xx's have ever been made widely available, so
    let's leave those alone for now.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: "H. Peter Anvin" <hpa@zytor.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c818402a62e9b82e5c8552479a2c56bb8cdca3d9
Author: UCHINO Satoshi <satoshi.uchino@toshiba.co.jp>
Date:   Thu May 23 11:10:11 2013 +0900

    usb: gadget: f_mass_storage: add missing memory barrier for thread_wakeup_needed
    
    commit d68c277b501889b3a50c179d1c3d704db7947b83 upstream.
    
    Without this memory barrier, the file-storage thread may fail to
    escape from the following while loop, because it may observe new
    common->thread_wakeup_needed and old bh->state which are updated by
    the callback functions.
    
            /* Wait for the CBW to arrive */
            while (bh->state != BUF_STATE_FULL) {
                    rc = sleep_thread(common);
                    if (rc)
                            return rc;
            }
    
    Signed-off-by: UCHINO Satoshi <satoshi.uchino@toshiba.co.jp>
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c5c54396415c451ae4540bb23a0d8cc5f6d71d7d
Author: Shane Huang <shane.huang@amd.com>
Date:   Sat Jun 8 16:00:16 2013 +0800

    ahci: remove pmp link online check in FBS EH
    
    commit 912b9ac683b112615d5605686f1dc086402ce9f7 upstream.
    
    ata_link_online() check in ahci_error_intr() is unnecessary, it should
    be removed otherwise may lead to lockup with FBS enabled PMP.
    http://marc.info/?l=linux-ide&m=137050421603272&w=2
    
    Reported-by: Yu Liu <liuyu.ac@gmail.com>
    Signed-off-by: Shane Huang <shane.huang@amd.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e1c3e37d2c1da620040ada44a92bdb18c4e77dd8
Author: Jiang Liu <liuj97@gmail.com>
Date:   Fri Jun 7 00:07:27 2013 +0800

    zram: protect sysfs handler from invalid memory access
    
    commit 5863e10b441e7ea4b492f930f1be180a97d026f3 upstream.
    
    Use zram->init_lock to protect access to zram->meta, otherwise it
    may cause invalid memory access if zram->meta has been freed by
    zram_reset_device().
    
    This issue may be triggered by:
    Thread 1:
    while true; do cat mem_used_total; done
    Thread 2:
    while true; do echo 8M > disksize; echo 1 > reset; done
    
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 624d1705fa1d6e4c647ca5859ecd921748bd85bf
Author: Jiang Liu <liuj97@gmail.com>
Date:   Fri Jun 7 00:07:26 2013 +0800

    zram: avoid access beyond the zram device
    
    commit 12a7ad3b810e77137d0caf97a6dd97591e075b30 upstream.
    
    Function valid_io_request() should verify the entire request are within
    the zram device address range. Otherwise it may cause invalid memory
    access when accessing/modifying zram->meta->table[index] because the
    'index' is out of range. Then it may access non-exist memory, randomly
    modify memory belong to other subsystems, which is hard to track down.
    
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 29c303b89a1bc8f1704ffd4c58308781c9f8f844
Author: Jiang Liu <liuj97@gmail.com>
Date:   Fri Jun 7 00:07:24 2013 +0800

    zram: destroy all devices on error recovery path in zram_init()
    
    commit 39a9b8ac9333e4268ecff7da6c9d1ab3823ff243 upstream.
    
    On error recovery path of zram_init(), it leaks the zram device object
    causing the failure. So change create_device() to free allocated
    resources on error path.
    
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Jerome Marchand <jmarchan@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9e443904906ca2b5b3ae71f34ac4a4fa6905623e
Author: Jiang Liu <liuj97@gmail.com>
Date:   Fri Jun 7 00:07:23 2013 +0800

    zram: use zram->lock to protect zram_free_page() in swap free notify path
    
    commit 57ab048532c0d975538cebd4456491b5c34248f4 upstream.
    
    zram_slot_free_notify() is free-running without any protection from
    concurrent operations. So there are race conditions between
    zram_bvec_read()/zram_bvec_write() and zram_slot_free_notify(),
    and possible consequences include:
    1) Trigger BUG_ON(!handle) on zram_bvec_write() side.
    2) Access to freed pages on zram_bvec_read() side.
    3) Break some fields (bad_compress, good_compress, pages_stored)
       in zram->stats if the swap layer makes concurrently call to
       zram_slot_free_notify().
    
    So enhance zram_slot_free_notify() to acquire writer lock on zram->lock
    before calling zram_free_page().
    
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd162a76f16083157e32fe5f488f39a319b93fad
Author: Jiang Liu <liuj97@gmail.com>
Date:   Fri Jun 7 00:07:22 2013 +0800

    zram: avoid invalid memory access in zram_exit()
    
    commit 6030ea9b35971a4200062f010341ab832e878ac9 upstream.
    
    Memory for zram->disk object may have already been freed after returning
    from destroy_device(zram), then it's unsafe for zram_reset_device(zram)
    to access zram->disk again.
    
    We can't solve this bug by flipping the order of destroy_device(zram)
    and zram_reset_device(zram), that will cause deadlock issues to the
    zram sysfs handler.
    
    So fix it by holding an extra reference to zram->disk before calling
    destroy_device(zram).
    
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4e9169bee6bc9870277539a425c528584212e76c
Author: Shane Huang <shane.huang@amd.com>
Date:   Mon Jun 3 18:24:55 2013 +0800

    i2c-piix4: Add AMD CZ SMBus device ID
    
    commit b996ac90f595dda271cbd858b136b45557fc1a57 upstream.
    
    To add AMD CZ SMBus controller device ID.
    
    [bhelgaas: drop pci_ids.h update]
    Signed-off-by: Shane Huang <shane.huang@amd.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Jean Delvare <khali@linux-fr.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4db44d2fc2f99a7ad24047afcd456210ae57b6ec
Author: Shane Huang <shane.huang@amd.com>
Date:   Mon Jun 3 18:24:10 2013 +0800

    ahci: Add AMD CZ SATA device ID
    
    commit fafe5c3d82a470d73de53e6b08eb4e28d974d895 upstream.
    
    To add AMD CZ SATA controller device ID of IDE mode.
    
    [bhelgaas: drop pci_ids.h update]
    Signed-off-by: Shane Huang <shane.huang@amd.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c49e1c8518ab5f87daf87b0a26d888a1f82c935a
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Fri Apr 26 17:34:54 2013 +0200

    zfcp: status read buffers on first adapter open with link down
    
    commit 9edf7d75ee5f21663a0183d21f702682d0ef132f upstream.
    
    Commit 64deb6efdc5504ce97b5c1c6f281fffbc150bd93
    "[SCSI] zfcp: Use status_read_buf_num provided by FCP channel"
    started using a value returned by the channel but only evaluated the value
    if the fabric link is up.
    Commit 8d88cf3f3b9af4713642caeb221b6d6a42019001
    "[SCSI] zfcp: Update status read mempool"
    introduced mempool resizings based on the above value.
    On setting an FCP device online for the very first time since boot, a new
    zeroed adapter object is allocated. If the link is down, the number of
    status read requests remains zero. Since just the config data exchange is
    incomplete, we proceed with adapter open recovery. However, we
    unconditionally call mempool_resize with adapter->stat_read_buf_num == 0 in
    this case.
    
    This causes a kernel message "kernel BUG at mm/mempool.c:131!" in process
    "zfcperp<FCP-device-bus-ID>" with last function mempool_resize in Krnl PSW
    and zfcp_erp_thread in the Call Trace.
    
    Don't evaluate channel values which are invalid on link down. The number of
    status read requests is always valid, evaluated, and set to a positive
    minimum greater than zero. The adapter open recovery can proceed and the
    channel has status read buffers to inform us on a future link up event.
    While we are not aware of any other code path that could result in mempool
    resize attempts of size zero, we still also initialize the number of status
    read buffers to be posted to a static minimum number on adapter object
    allocation.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    [bwh: Backported to 3.2:
     - Copyright notice changed slightly
     - Don't use zfcp_fsf_convert_portspeed()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d5dc413b7b73633fdfb9d864de801c4eb5ce9d7b
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Fri Apr 26 17:33:45 2013 +0200

    zfcp: block queue limits with data router
    
    commit 5fea4291deacd80188b996d2f555fc6a1940e5d4 upstream.
    
    Commit 86a9668a8d29ea711613e1cb37efa68e7c4db564
    "[SCSI] zfcp: support for hardware data router"
    reduced the initial block queue limits in the scsi_host_template to the
    absolute minimum and adjusted them later on. However, the adjustment was
    too late for the BSG devices of Scsi_Host and fc_host.
    
    Therefore, ioctl(..., SG_IO, ...) with request or response size > 4kB to a
    BSG device of an fc_host or a Scsi_Host fails with EINVAL. As a result,
    users of such ioctl such as HBA_SendCTPassThru() in libzfcphbaapi return
    with error HBA_STATUS_ERROR.
    
    Initialize the block queue limits in zfcp_scsi_host_template to the
    greatest common denominator (GCD).
    
    While we cannot exploit the slightly enlarged maximum request size with
    data router, this should be neglectible. Doing so also avoids running into
    trouble after live guest relocation (LGR) / migration from a data router
    FCP device to an FCP device that does not support data router. In that
    case, zfcp would figure out the new limits on adapter recovery, but the
    fc_host and Scsi_Host (plus in fact all sdevs) still exist with the old and
    now too large queue limits.
    
    It should also OK, not to use half the size as in the DIX case, because
    fc_host and Scsi_Host do not transport FCP requests including SCSI commands
    using protection data.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Reviewed-by: Martin Peschke <mpeschke@linux.vnet.ibm.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    [bwh: Backported to 3.2: copyright notice changed slightly]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 657b0bf0578b0613a591d9e42a2d1c2e407fe383
Author: Daniel Hansel <daniel.hansel@linux.vnet.ibm.com>
Date:   Fri Apr 26 17:32:14 2013 +0200

    zfcp: fix adapter (re)open recovery while link to SAN is down
    
    commit f76ccaac4f82c463a037aa4a1e4ccb85c7011814 upstream.
    
    FCP device remains in status ERP_FAILED when device is switched online
    or adapter recovery is triggered  while link to SAN is down.
    
    When Exchange Configuration Data command returns the FSF status
    FSF_EXCHANGE_CONFIG_DATA_INCOMPLETE it aborts the exchange process.
    The only retries are done during the common error recovery procedure
    (i.e. max. 3 retries with 8sec sleep between) and remains in status
    ERP_FAILED with QDIO down.
    
    This commit reverts the commit 0df138476c8306478d6e726f044868b4bccf411c
    (zfcp: Fix adapter activation on link down).
    When FSF status FSF_EXCHANGE_CONFIG_DATA_INCOMPLETE is received the
    adapter recovery will be finished without any retries. QDIO will be
    up now and status changes such as LINK UP will be received now.
    
    Signed-off-by: Daniel Hansel <daniel.hansel@linux.vnet.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ff766b8d26c7669cc1ae9048a04cf0dd5607f02c
Author: Bu, Yitian <ybu@qti.qualcomm.com>
Date:   Mon Feb 18 12:53:37 2013 +0000

    printk: Fix rq->lock vs logbuf_lock unlock lock inversion
    
    commit dbda92d16f8655044e082930e4e9d244b87fde77 upstream.
    
    commit 07354eb1a74d1 ("locking printk: Annotate logbuf_lock as raw")
    reintroduced a lock inversion problem which was fixed in commit
    0b5e1c5255 ("printk: Release console_sem after logbuf_lock"). This
    happened probably when fixing up patch rejects.
    
    Restore the ordering and unlock logbuf_lock before releasing
    console_sem.
    
    Signed-off-by: ybu <ybu@qti.qualcomm.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/E807E903FE6CBE4D95E420FBFCC273B827413C@nasanexd01h.na.qualcomm.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f97f7c725181dfa6d58449b82276e362f3b9b15
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Fri Jul 12 05:05:31 2013 +0100

    r8169: fix offloaded tx checksum for small packets.
    
    The workaround introduced by commit e5195c1f31f3 'r8169: fix 8168evl
    frame padding.' upstream was incorrect and was entirely replaced in
    commit b423e9ae49d7 'r8169: fix offloaded tx checksum for small
    packets.'
    
    On the 3.2.y branch, the first commit has effectively been applied
    twice: the first time by itself, and the second time in commit
    3cf40360f431 which squashed the two upstream commits together.  That
    left us with both the incorrect and the correct workaround in place.
    Remove the incorrect one.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Francois Romieu <romieu@fr.zoreil.com>
