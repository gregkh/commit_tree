commit f884bb85b8d877d4e0c670403754813a7901705b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 18 14:04:33 2021 +0100

    Linux 5.10.80
    
    Link: https://lore.kernel.org/r/20211115165343.579890274@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Link: https://lore.kernel.org/r/20211116142545.607076484@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20211117101457.890809587@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Link: https://lore.kernel.org/r/20211117144602.341592498@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e49a79bc312571093ba0dbd7f9df490c7afee22
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Tue Mar 2 15:24:58 2021 +0300

    soc/tegra: pmc: Fix imbalanced clock disabling in error code path
    
    commit 19221e3083020bd9537624caa0ee0145ed92ba36 upstream.
    
    The tegra_powergate_power_up() has a typo in the error code path where it
    will try to disable clocks twice, fix it. In practice that error never
    happens, so this is a minor correction.
    
    Tested-by: Peter Geis <pgwipeout@gmail.com> # Ouya T30
    Tested-by: Nicolas Chauvet <kwizart@gmail.com> # PAZ00 T20 and TK1 T124
    Tested-by: Matt Merhar <mattmerhar@protonmail.com> # Ouya T30
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45490bfa1ebb7dd8c7f9e77d72e5d006c1162219
Author: Borislav Petkov <bp@suse.de>
Date:   Fri Oct 1 21:41:20 2021 +0200

    x86/sev: Make the #VC exception stacks part of the default stacks storage
    
    commit 541ac97186d9ea88491961a46284de3603c914fd upstream.
    
    The size of the exception stacks was increased by the commit in Fixes,
    resulting in stack sizes greater than a page in size. The #VC exception
    handling was only mapping the first (bottom) page, resulting in an
    SEV-ES guest failing to boot.
    
    Make the #VC exception stacks part of the default exception stacks
    storage and allocate them with a CONFIG_AMD_MEM_ENCRYPT=y .config. Map
    them only when a SEV-ES guest has been detected.
    
    Rip out the custom VC stacks mapping and storage code.
    
     [ bp: Steal and adapt Tom's commit message. ]
    
    Fixes: 7fae4c24a2b8 ("x86: Increase exception stack sizes")
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Tom Lendacky <thomas.lendacky@amd.com>
    Tested-by: Brijesh Singh <brijesh.singh@amd.com>
    Link: https://lkml.kernel.org/r/YVt1IMjIs7pIZTRR@zn.tnic
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc25889a6617559aa1ba904d1c0873541d3c85bf
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Sep 8 17:58:34 2021 -0500

    x86/sev: Add an x86 version of cc_platform_has()
    
    commit aa5a461171f98fde0df78c4f6b5018a1e967cf81 upstream.
    
    Introduce an x86 version of the cc_platform_has() function. This will be
    used to replace vendor specific calls like sme_active(), sev_active(),
    etc.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20210928191009.32551-4-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74ba917cfdddbb6b1ad9c2fc4833bf1f810b27f9
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Sep 8 17:58:33 2021 -0500

    arch/cc: Introduce a function to check for confidential computing features
    
    commit 46b49b12f3fc5e1347dba37d4639e2165f447871 upstream.
    
    In preparation for other confidential computing technologies, introduce
    a generic helper function, cc_platform_has(), that can be used to
    check for specific active confidential computing attributes, like
    memory encryption. This is intended to eliminate having to add multiple
    technology-specific checks to the code (e.g. if (sev_active() ||
    tdx_active() || ... ).
    
     [ bp: s/_CC_PLATFORM_H/_LINUX_CC_PLATFORM_H/g ]
    
    Co-developed-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Co-developed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20210928191009.32551-3-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5be42b203f2c4b72205b4ecd72c0558dfdb3a552
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Nov 1 16:01:18 2021 -0700

    selftests/bpf: Fix also no-alu32 strobemeta selftest
    
    commit a20eac0af02810669e187cb623bc904908c423af upstream.
    
    Previous fix aded bpf_clamp_umax() helper use to re-validate boundaries.
    While that works correctly, it introduces more branches, which blows up
    past 1 million instructions in no-alu32 variant of strobemeta selftests.
    
    Switching len variable from u32 to u64 also fixes the issue and reduces
    the number of validated instructions, so use that instead. Fix this
    patch and bpf_clamp_umax() removed, both alu32 and no-alu32 selftests
    pass.
    
    Fixes: 0133c20480b1 ("selftests/bpf: Fix strobemeta selftest regression")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20211101230118.1273019-1-andrii@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e7340950dc22687e5f7741a1dcf1a2d3fee062a
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Oct 13 11:00:52 2021 +0100

    mmc: moxart: Fix null pointer dereference on pointer host
    
    commit 0eab756f8821d255016c63bb55804c429ff4bdb1 upstream.
    
    There are several error return paths that dereference the null pointer
    host because the pointer has not yet been set to a valid value.
    Fix this by adding a new out_mmc label and exiting via this label
    to avoid the host clean up and hence the null pointer dereference.
    
    Addresses-Coverity: ("Explicit null dereference")
    Fixes: 8105c2abbf36 ("mmc: moxart: Fix reference count leaks in moxart_probe")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20211013100052.125461-1-colin.king@canonical.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 188bf40391a5a296e91d40c6f83bd4f07a0a8559
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Oct 20 11:59:07 2021 +0300

    ath10k: fix invalid dma_addr_t token assignment
    
    commit 937e79c67740d1d84736730d679f3cb2552f990e upstream.
    
    Using a kernel pointer in place of a dma_addr_t token can
    lead to undefined behavior if that makes it into cache
    management functions. The compiler caught one such attempt
    in a cast:
    
    drivers/net/wireless/ath/ath10k/mac.c: In function 'ath10k_add_interface':
    drivers/net/wireless/ath/ath10k/mac.c:5586:47: error: cast from pointer to integer of different size [-Werror=pointer-to-int-cast]
     5586 |                         arvif->beacon_paddr = (dma_addr_t)arvif->beacon_buf;
          |                                               ^
    
    Looking through how this gets used down the way, I'm fairly
    sure that beacon_paddr is never accessed again for ATH10K_DEV_TYPE_HL
    devices, and if it was accessed, that would be a bug.
    
    Change the assignment to use a known-invalid address token
    instead, which avoids the warning and makes it easier to catch
    bugs if it does end up getting used.
    
    Fixes: e263bdab9c0e ("ath10k: high latency fixes for beacon buffer")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211014075153.3655910-1-arnd@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d41f4d4dd7c8fc045859258abdc3fb453ab8c790
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jul 12 09:52:59 2021 -0400

    SUNRPC: Partial revert of commit 6f9f17287e78
    
    commit ea7a1019d8baf8503ecd6e3ec8436dec283569e6 upstream.
    
    The premise of commit 6f9f17287e78 ("SUNRPC: Mitigate cond_resched() in
    xprt_transmit()") was that cond_resched() is expensive and unnecessary
    when there has been just a single send.
    The point of cond_resched() is to ensure that tasks that should pre-empt
    this one get a chance to do so when it is safe to do so. The code prior
    to commit 6f9f17287e78 failed to take into account that it was keeping a
    rpc_task pinned for longer than it needed to, and so rather than doing a
    full revert, let's just move the cond_resched.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7a440cd30798042f3346cbb3b3a056df638f66c
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:41 2021 +0200

    PCI: aardvark: Fix PCIe Max Payload Size setting
    
    commit a4e17d65dafdd3513042d8f00404c9b6068a825c upstream.
    
    Change PCIe Max Payload Size setting in PCIe Device Control register to 512
    bytes to align with PCIe Link Initialization sequence as defined in Marvell
    Armada 3700 Functional Specification. According to the specification,
    maximal Max Payload Size supported by this device is 512 bytes.
    
    Without this kernel prints suspicious line:
    
        pci 0000:01:00.0: Upstream bridge's Max Payload Size set to 256 (was 16384, max 512)
    
    With this change it changes to:
    
        pci 0000:01:00.0: Upstream bridge's Max Payload Size set to 256 (was 512, max 512)
    
    Link: https://lore.kernel.org/r/20211005180952.6812-3-kabel@kernel.org
    Fixes: 8c39d710363c ("PCI: aardvark: Add Aardvark PCI host controller driver")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f967d120a5b51b8bda9e2ad030726f12925fd709
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:40 2021 +0200

    PCI: Add PCI_EXP_DEVCTL_PAYLOAD_* macros
    
    commit 460275f124fb072dca218a6b43b6370eebbab20d upstream.
    
    Define a macro PCI_EXP_DEVCTL_PAYLOAD_* for every possible Max Payload
    Size in linux/pci_regs.h, in the same style as PCI_EXP_DEVCTL_READRQ_*.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-2-kabel@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3396f6d8345821578fafc953888df1b1df6d780
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Tue Aug 31 20:48:19 2021 +0200

    drm/sun4i: Fix macros in sun8i_csc.h
    
    commit c302c98da646409d657a473da202f10f417f3ff1 upstream.
    
    Macros SUN8I_CSC_CTRL() and SUN8I_CSC_COEFF() don't follow usual
    recommendation of having arguments enclosed in parenthesis. While that
    didn't change anything for quite sometime, it actually become important
    after CSC code rework with commit ea067aee45a8 ("drm/sun4i: de2/de3:
    Remove redundant CSC matrices").
    
    Without this fix, colours are completely off for supported YVU formats
    on SoCs with DE2 (A64, H3, R40, etc.).
    
    Fix the issue by enclosing macro arguments in parenthesis.
    
    Cc: stable@vger.kernel.org # 5.12+
    Fixes: 883029390550 ("drm/sun4i: Add DE2 CSC library")
    Reported-by: Roman Stratiienko <r.stratiienko@gmail.com>
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210831184819.93670-1-jernej.skrabec@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1023355234ca441c7296a58e762b420eef88884e
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Wed Sep 29 11:36:46 2021 +0800

    powerpc/85xx: fix timebase sync issue when CONFIG_HOTPLUG_CPU=n
    
    commit c45361abb9185b1e172bd75eff51ad5f601ccae4 upstream.
    
    When CONFIG_SMP=y, timebase synchronization is required when the second
    kernel is started.
    
    arch/powerpc/kernel/smp.c:
      int __cpu_up(unsigned int cpu, struct task_struct *tidle)
      {
            ...
            if (smp_ops->give_timebase)
                    smp_ops->give_timebase();
            ...
      }
    
      void start_secondary(void *unused)
      {
            ...
            if (smp_ops->take_timebase)
                    smp_ops->take_timebase();
            ...
      }
    
    When CONFIG_HOTPLUG_CPU=n and CONFIG_KEXEC_CORE=n,
     smp_85xx_ops.give_timebase is NULL,
     smp_85xx_ops.take_timebase is NULL,
    As a result, the timebase is not synchronized.
    
    Timebase  synchronization does not depend on CONFIG_HOTPLUG_CPU.
    
    Fixes: 56f1ba280719 ("powerpc/mpc85xx: refactor the PM operations")
    Cc: stable@vger.kernel.org # v4.6+
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210929033646.39630-3-nixiaoming@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77d543e687952581e81fe07fe17b7bafa7773f5c
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Thu Oct 28 22:27:16 2021 +0530

    powerpc/powernv/prd: Unregister OPAL_MSG_PRD2 notifier during module unload
    
    commit 52862ab33c5d97490f3fa345d6529829e6d6637b upstream.
    
    Commit 587164cd, introduced new opal message type (OPAL_MSG_PRD2) and
    added opal notifier. But I missed to unregister the notifier during
    module unload path. This results in below call trace if you try to
    unload and load opal_prd module.
    
    Also add new notifier_block for OPAL_MSG_PRD2 message.
    
    Sample calltrace (modprobe -r opal_prd; modprobe opal_prd)
      BUG: Unable to handle kernel data access on read at 0xc0080000192200e0
      Faulting instruction address: 0xc00000000018d1cc
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
      CPU: 66 PID: 7446 Comm: modprobe Kdump: loaded Tainted: G            E     5.14.0prd #759
      NIP:  c00000000018d1cc LR: c00000000018d2a8 CTR: c0000000000cde10
      REGS: c0000003c4c0f0a0 TRAP: 0300   Tainted: G            E      (5.14.0prd)
      MSR:  9000000002009033 <SF,HV,VEC,EE,ME,IR,DR,RI,LE>  CR: 24224824  XER: 20040000
      CFAR: c00000000018d2a4 DAR: c0080000192200e0 DSISR: 40000000 IRQMASK: 1
      ...
      NIP notifier_chain_register+0x2c/0xc0
      LR  atomic_notifier_chain_register+0x48/0x80
      Call Trace:
        0xc000000002090610 (unreliable)
        atomic_notifier_chain_register+0x58/0x80
        opal_message_notifier_register+0x7c/0x1e0
        opal_prd_probe+0x84/0x150 [opal_prd]
        platform_probe+0x78/0x130
        really_probe+0x110/0x5d0
        __driver_probe_device+0x17c/0x230
        driver_probe_device+0x60/0x130
        __driver_attach+0xfc/0x220
        bus_for_each_dev+0xa8/0x130
        driver_attach+0x34/0x50
        bus_add_driver+0x1b0/0x300
        driver_register+0x98/0x1a0
        __platform_driver_register+0x38/0x50
        opal_prd_driver_init+0x34/0x50 [opal_prd]
        do_one_initcall+0x60/0x2d0
        do_init_module+0x7c/0x320
        load_module+0x3394/0x3650
        __do_sys_finit_module+0xd4/0x160
        system_call_exception+0x140/0x290
        system_call_common+0xf4/0x258
    
    Fixes: 587164cd593c ("powerpc/powernv: Add new opal message type")
    Cc: stable@vger.kernel.org # v5.4+
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211028165716.41300-1-hegdevasant@linux.vnet.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dcdadd6cc73525e038b9621a6e9ee814dd63bda
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:41 2021 +0200

    mtd: rawnand: au1550nd: Keep the driver compatible with on-die ECC engines
    
    commit 7e3cdba176ba59eaf4d463d273da0718e3626140 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: dbffc8ccdf3a ("mtd: rawnand: au1550: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-3-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51e34fcf72a39fb02d9ad287716d3f0cdff5f1ce
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:46 2021 +0200

    mtd: rawnand: plat_nand: Keep the driver compatible with on-die ECC engines
    
    commit 325fd539fc84f0aaa0ceb9d7d3b8718582473dc5 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: 612e048e6aab ("mtd: rawnand: plat_nand: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-8-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1de04df8eb11087f8bd15e1d58e99dc25f82874
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:44 2021 +0200

    mtd: rawnand: orion: Keep the driver compatible with on-die ECC engines
    
    commit 194ac63de6ff56d30c48e3ac19c8a412f9c1408e upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: 553508cec2e8 ("mtd: rawnand: orion: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-6-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4e2e9fbd1949bca187acfa06bf4ea1f81658fff
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:45 2021 +0200

    mtd: rawnand: pasemi: Keep the driver compatible with on-die ECC engines
    
    commit f16b7d2a5e810fcf4b15d096246d0d445da9cc88 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: 8fc6f1f042b2 ("mtd: rawnand: pasemi: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-7-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 963db3ccc15bbb23cf4218cf377f258b76844a2c
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:42 2021 +0200

    mtd: rawnand: gpio: Keep the driver compatible with on-die ECC engines
    
    commit b5b5b4dc6fcd8194b9dd38c8acdc5ab71adf44f8 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: f6341f6448e0 ("mtd: rawnand: gpio: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-4-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13566bc111ee900a7c64733b526ca318d52d1e63
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:43 2021 +0200

    mtd: rawnand: mpc5121: Keep the driver compatible with on-die ECC engines
    
    commit f9d8570b7fd6f4f08528ce2f5e39787a8a260cd6 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: 6dd09f775b72 ("mtd: rawnand: mpc5121: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-5-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b366f5221d8aa64b22f35be137a5749326444ce
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:48 2021 +0200

    mtd: rawnand: xway: Keep the driver compatible with on-die ECC engines
    
    commit 6bcd2960af1b7bacb2f1e710ab0c0b802d900501 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: d525914b5bd8 ("mtd: rawnand: xway: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Cc: Jan Hoffmann <jan@3e8.eu>
    Cc: Kestrel seventyfour <kestrelseventyfour@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Tested-by: Jan Hoffmann <jan@3e8.eu>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-10-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbc55cf4a35867c158b03dd09fa9001c528a8d85
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:40 2021 +0200

    mtd: rawnand: ams-delta: Keep the driver compatible with on-die ECC engines
    
    commit d707bb74daae07879e0fc1b4b960f8f2d0a5fe5d upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: 59d93473323a ("mtd: rawnand: ams-delta: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-2-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f420818dfca148afbb87abd556357c7a142ebb2
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Wed Sep 8 17:36:23 2021 +0200

    s390/cio: make ccw_device_dma_* more robust
    
    commit ad9a14517263a16af040598c7920c09ca9670a31 upstream.
    
    Since commit 48720ba56891 ("virtio/s390: use DMA memory for ccw I/O and
    classic notifiers") we were supposed to make sure that
    virtio_ccw_release_dev() completes before the ccw device and the
    attached dma pool are torn down, but unfortunately we did not.  Before
    that commit it used to be OK to delay cleaning up the memory allocated
    by virtio-ccw indefinitely (which isn't really intuitive for guys used
    to destruction happens in reverse construction order), but now we
    trigger a BUG_ON if the genpool is destroyed before all memory allocated
    from it is deallocated. Which brings down the guest. We can observe this
    problem, when unregister_virtio_device() does not give up the last
    reference to the virtio_device (e.g. because a virtio-scsi attached scsi
    disk got removed without previously unmounting its previously mounted
    partition).
    
    To make sure that the genpool is only destroyed after all the necessary
    freeing is done let us take a reference on the ccw device on each
    ccw_device_dma_zalloc() and give it up on each ccw_device_dma_free().
    
    Actually there are multiple approaches to fixing the problem at hand
    that can work. The upside of this one is that it is the safest one while
    remaining simple. We don't crash the guest even if the driver does not
    pair allocations and frees. The downside is the reference counting
    overhead, that the reference counting for ccw devices becomes more
    complex, in a sense that we need to pair the calls to the aforementioned
    functions for it to be correct, and that if we happen to leak, we leak
    more than necessary (the whole ccw device instead of just the genpool).
    
    Some alternatives to this approach are taking a reference in
    virtio_ccw_online() and giving it up in virtio_ccw_release_dev() or
    making sure virtio_ccw_release_dev() completes its work before
    virtio_ccw_remove() returns. The downside of these approaches is that
    these are less safe against programming errors.
    
    Cc: <stable@vger.kernel.org> # v5.3
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Fixes: 48720ba56891 ("virtio/s390: use DMA memory for ccw I/O and classic notifiers")
    Reported-by: bfu@redhat.com
    Reviewed-by: Vineeth Vijayan <vneethv@linux.ibm.com>
    Acked-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9ca9669dec322335da6f6ce0c6da7c48391f032
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Thu Oct 14 09:58:24 2021 +0200

    s390/ap: Fix hanging ioctl caused by orphaned replies
    
    commit 3826350e6dd435e244eb6e47abad5a47c169ebc2 upstream.
    
    When a queue is switched to soft offline during heavy load and later
    switched to soft online again and now used, it may be that the caller
    is blocked forever in the ioctl call.
    
    The failure occurs because there is a pending reply after the queue(s)
    have been switched to offline. This orphaned reply is received when
    the queue is switched to online and is accidentally counted for the
    outstanding replies. So when there was a valid outstanding reply and
    this orphaned reply is received it counts as the outstanding one thus
    dropping the outstanding counter to 0. Voila, with this counter the
    receive function is not called any more and the real outstanding reply
    is never received (until another request comes in...) and the ioctl
    blocks.
    
    The fix is simple. However, instead of readjusting the counter when an
    orphaned reply is detected, I check the queue status for not empty and
    compare this to the outstanding counter. So if the queue is not empty
    then the counter must not drop to 0 but at least have a value of 1.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57de1fbecff0bfe56d6db4af2b51741596968600
Author: Sven Schnelle <svens@linux.ibm.com>
Date:   Tue Nov 2 10:55:30 2021 +0100

    s390/tape: fix timer initialization in tape_std_assign()
    
    commit 213fca9e23b59581c573d558aa477556f00b8198 upstream.
    
    commit 9c6c273aa424 ("timer: Remove init_timer_on_stack() in favor
    of timer_setup_on_stack()") changed the timer setup from
    init_timer_on_stack(() to timer_setup(), but missed to change the
    mod_timer() call. And while at it, use msecs_to_jiffies() instead
    of the open coded timeout calculation.
    
    Cc: stable@vger.kernel.org
    Fixes: 9c6c273aa424 ("timer: Remove init_timer_on_stack() in favor of timer_setup_on_stack()")
    Signed-off-by: Sven Schnelle <svens@linux.ibm.com>
    Reviewed-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1174298a5b31ba566a4dee424230c10673014ea7
Author: Vineeth Vijayan <vneethv@linux.ibm.com>
Date:   Fri Nov 5 16:44:51 2021 +0100

    s390/cio: check the subchannel validity for dev_busid
    
    commit a4751f157c194431fae9e9c493f456df8272b871 upstream.
    
    Check the validity of subchanel before reading other fields in
    the schib.
    
    Fixes: d3683c055212 ("s390/cio: add dev_busid sysfs entry for each subchannel")
    CC: <stable@vger.kernel.org>
    Reported-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Vineeth Vijayan <vneethv@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Link: https://lore.kernel.org/r/20211105154451.847288-1-vneethv@linux.ibm.com
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d0341b37d9763a6e7e1a3b7464d115839e30246
Author: Marek Vasut <marex@denx.de>
Date:   Tue Sep 21 19:35:06 2021 +0200

    video: backlight: Drop maximum brightness override for brightness zero
    
    commit 33a5471f8da976bf271a1ebbd6b9d163cb0cb6aa upstream.
    
    The note in c2adda27d202f ("video: backlight: Add of_find_backlight helper
    in backlight.c") says that gpio-backlight uses brightness as power state.
    This has been fixed since in ec665b756e6f7 ("backlight: gpio-backlight:
    Correct initial power state handling") and other backlight drivers do not
    require this workaround. Drop the workaround.
    
    This fixes the case where e.g. pwm-backlight can perfectly well be set to
    brightness 0 on boot in DT, which without this patch leads to the display
    brightness to be max instead of off.
    
    Fixes: c2adda27d202f ("video: backlight: Add of_find_backlight helper in backlight.c")
    Cc: <stable@vger.kernel.org> # 5.4+
    Cc: <stable@vger.kernel.org> # 4.19.x: ec665b756e6f7: backlight: gpio-backlight: Correct initial power state handling
    Signed-off-by: Marek Vasut <marex@denx.de>
    Acked-by: Noralf Trønnes <noralf@tronnes.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 332306b1e731bde88fa748690450603265ab0637
Author: Jack Andersen <jackoalan@gmail.com>
Date:   Mon Oct 18 13:25:41 2021 +0200

    mfd: dln2: Add cell for initializing DLN2 ADC
    
    commit 313c84b5ae4104e48c661d5d706f9f4c425fd50f upstream.
    
    This patch extends the DLN2 driver; adding cell for adc_dln2 module.
    
    The original patch[1] fell through the cracks when the driver was added
    so ADC has never actually been usable. That patch did not have ACPI
    support which was added in v5.9, so the oldest supported version this
    current patch can be backported to is 5.10.
    
    [1] https://www.spinics.net/lists/linux-iio/msg33975.html
    
    Cc: <stable@vger.kernel.org> # 5.10+
    Signed-off-by: Jack Andersen <jackoalan@gmail.com>
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211018112541.25466-1-noralf@tronnes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d457987366f7a92d03e03df80f9a63040133233
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Nov 5 13:38:06 2021 -0700

    mm, oom: do not trigger out_of_memory from the #PF
    
    commit 60e2793d440a3ec95abb5d6d4fc034a4b480472d upstream.
    
    Any allocation failure during the #PF path will return with VM_FAULT_OOM
    which in turn results in pagefault_out_of_memory.  This can happen for 2
    different reasons.  a) Memcg is out of memory and we rely on
    mem_cgroup_oom_synchronize to perform the memcg OOM handling or b)
    normal allocation fails.
    
    The latter is quite problematic because allocation paths already trigger
    out_of_memory and the page allocator tries really hard to not fail
    allocations.  Anyway, if the OOM killer has been already invoked there
    is no reason to invoke it again from the #PF path.  Especially when the
    OOM condition might be gone by that time and we have no way to find out
    other than allocate.
    
    Moreover if the allocation failed and the OOM killer hasn't been invoked
    then we are unlikely to do the right thing from the #PF context because
    we have already lost the allocation context and restictions and
    therefore might oom kill a task from a different NUMA domain.
    
    This all suggests that there is no legitimate reason to trigger
    out_of_memory from pagefault_out_of_memory so drop it.  Just to be sure
    that no #PF path returns with VM_FAULT_OOM without allocation print a
    warning that this is happening before we restart the #PF.
    
    [VvS: #PF allocation can hit into limit of cgroup v1 kmem controller.
    This is a local problem related to memcg, however, it causes unnecessary
    global OOM kills that are repeated over and over again and escalate into a
    real disaster.  This has been broken since kmem accounting has been
    introduced for cgroup v1 (3.8).  There was no kmem specific reclaim for
    the separate limit so the only way to handle kmem hard limit was to return
    with ENOMEM.  In upstream the problem will be fixed by removing the
    outdated kmem limit, however stable and LTS kernels cannot do it and are
    still affected.  This patch fixes the problem and should be backported
    into stable/LTS.]
    
    Link: https://lkml.kernel.org/r/f5fd8dd8-0ad4-c524-5f65-920b01972a42@virtuozzo.com
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Uladzislau Rezki <urezki@gmail.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac7f6befc3d1a58728ce3b93546aa24967ad90e7
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Nov 5 13:38:02 2021 -0700

    mm, oom: pagefault_out_of_memory: don't force global OOM for dying tasks
    
    commit 0b28179a6138a5edd9d82ad2687c05b3773c387b upstream.
    
    Patch series "memcg: prohibit unconditional exceeding the limit of dying tasks", v3.
    
    Memory cgroup charging allows killed or exiting tasks to exceed the hard
    limit.  It can be misused and allowed to trigger global OOM from inside
    a memcg-limited container.  On the other hand if memcg fails allocation,
    called from inside #PF handler it triggers global OOM from inside
    pagefault_out_of_memory().
    
    To prevent these problems this patchset:
     (a) removes execution of out_of_memory() from
         pagefault_out_of_memory(), becasue nobody can explain why it is
         necessary.
     (b) allow memcg to fail allocation of dying/killed tasks.
    
    This patch (of 3):
    
    Any allocation failure during the #PF path will return with VM_FAULT_OOM
    which in turn results in pagefault_out_of_memory which in turn executes
    out_out_memory() and can kill a random task.
    
    An allocation might fail when the current task is the oom victim and
    there are no memory reserves left.  The OOM killer is already handled at
    the page allocator level for the global OOM and at the charging level
    for the memcg one.  Both have much more information about the scope of
    allocation/charge request.  This means that either the OOM killer has
    been invoked properly and didn't lead to the allocation success or it
    has been skipped because it couldn't have been invoked.  In both cases
    triggering it from here is pointless and even harmful.
    
    It makes much more sense to let the killed task die rather than to wake
    up an eternally hungry oom-killer and send him to choose a fatter victim
    for breakfast.
    
    Link: https://lkml.kernel.org/r/0828a149-786e-7c06-b70a-52d086818ea3@virtuozzo.com
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Suggested-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Uladzislau Rezki <urezki@gmail.com>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ada86999dc84b852fcc32962f4002e939f4beb7
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Mon Nov 15 16:36:30 2021 +0530

    powerpc/bpf: Emit stf barrier instruction sequences for BPF_NOSPEC
    
    upstream commit b7540d62509453263604a155bf2d5f0ed450cba2
    
    Emit similar instruction sequences to commit a048a07d7f4535
    ("powerpc/64s: Add support for a store forwarding barrier at kernel
    entry/exit") when encountering BPF_NOSPEC.
    
    Mitigations are enabled depending on what the firmware advertises. In
    particular, we do not gate these mitigations based on current settings,
    just like in x86. Due to this, we don't need to take any action if
    mitigations are enabled or disabled at runtime.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/956570cbc191cd41f8274bed48ee757a86dac62a.1633464148.git.naveen.n.rao@linux.vnet.ibm.com
    [adjust macros to account for commits 1c9debbc2eb539 and ef909ba954145e.
    adjust security feature checks to account for commit 84ed26fd00c514]
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fcf86565bb67de1118b446397b5670fc69d3f51
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Mon Nov 15 16:36:29 2021 +0530

    powerpc/security: Add a helper to query stf_barrier type
    
    upstream commit 030905920f32e91a52794937f67434ac0b3ea41a
    
    Add a helper to return the stf_barrier type for the current processor.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/3bd5d7f96ea1547991ac2ce3137dc2b220bae285.1633464148.git.naveen.n.rao@linux.vnet.ibm.com
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 951fb7bf387fdb65712d53c48ac6a90ec258173f
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Mon Nov 15 16:36:28 2021 +0530

    powerpc/bpf: Validate branch ranges
    
    upstream commit 3832ba4e283d7052b783dab8311df7e3590fed93
    
    Add checks to ensure that we never emit branch instructions with
    truncated branch offsets.
    
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Tested-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Acked-by: Song Liu <songliubraving@fb.com>
    Acked-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/71d33a6b7603ec1013c9734dd8bdd4ff5e929142.1633464148.git.naveen.n.rao@linux.vnet.ibm.com
    [drop ppc32 changes]
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51cf71d5cb03c38fed74588ea79ed8673a8446f9
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Mon Nov 15 16:36:27 2021 +0530

    powerpc/lib: Add helper to check if offset is within conditional branch range
    
    upstream commit 4549c3ea3160fa8b3f37dfe2f957657bb265eda9
    
    Add a helper to check if a given offset is within the branch range for a
    powerpc conditional branch instruction, and update some sites to use the
    new helper.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Acked-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/442b69a34ced32ca346a0d9a855f3f6cfdbbbd41.1633464148.git.naveen.n.rao@linux.vnet.ibm.com
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74293225f50391620aaef3507ebd6fd17e0003e1
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Nov 5 13:38:09 2021 -0700

    memcg: prohibit unconditional exceeding the limit of dying tasks
    
    commit a4ebf1b6ca1e011289677239a2a361fde4a88076 upstream.
    
    Memory cgroup charging allows killed or exiting tasks to exceed the hard
    limit.  It is assumed that the amount of the memory charged by those
    tasks is bound and most of the memory will get released while the task
    is exiting.  This is resembling a heuristic for the global OOM situation
    when tasks get access to memory reserves.  There is no global memory
    shortage at the memcg level so the memcg heuristic is more relieved.
    
    The above assumption is overly optimistic though.  E.g.  vmalloc can
    scale to really large requests and the heuristic would allow that.  We
    used to have an early break in the vmalloc allocator for killed tasks
    but this has been reverted by commit b8c8a338f75e ("Revert "vmalloc:
    back off when the current task is killed"").  There are likely other
    similar code paths which do not check for fatal signals in an
    allocation&charge loop.  Also there are some kernel objects charged to a
    memcg which are not bound to a process life time.
    
    It has been observed that it is not really hard to trigger these
    bypasses and cause global OOM situation.
    
    One potential way to address these runaways would be to limit the amount
    of excess (similar to the global OOM with limited oom reserves).  This
    is certainly possible but it is not really clear how much of an excess
    is desirable and still protects from global OOMs as that would have to
    consider the overall memcg configuration.
    
    This patch is addressing the problem by removing the heuristic
    altogether.  Bypass is only allowed for requests which either cannot
    fail or where the failure is not desirable while excess should be still
    limited (e.g.  atomic requests).  Implementation wise a killed or dying
    task fails to charge if it has passed the OOM killer stage.  That should
    give all forms of reclaim chance to restore the limit before the failure
    (ENOMEM) and tell the caller to back off.
    
    In addition, this patch renames should_force_charge() helper to
    task_is_dying() because now its use is not associated witch forced
    charging.
    
    This patch depends on pagefault_out_of_memory() to not trigger
    out_of_memory(), because then a memcg failure can unwind to VM_FAULT_OOM
    and cause a global OOM killer.
    
    Link: https://lkml.kernel.org/r/8f5cebbb-06da-4902-91f0-6566fc4b4203@virtuozzo.com
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Suggested-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Uladzislau Rezki <urezki@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32246cefb9920e6f72a121f43cc3e06037fab63c
Author: Dominique Martinet <asmadeus@codewreck.org>
Date:   Tue Nov 2 19:47:47 2021 +0900

    9p/net: fix missing error check in p9_check_errors
    
    commit 27eb4c3144f7a5ebef3c9a261d80cb3e1fa784dc upstream.
    
    Link: https://lkml.kernel.org/r/99338965-d36c-886e-cd0e-1d8fff2b4746@gmail.com
    Reported-by: syzbot+06472778c97ed94af66d@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8cdf34ff8b7ed659e81f1feb8ce3cd035ab8497
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon Oct 11 14:12:36 2021 +0200

    net, neigh: Enable state migration between NUD_PERMANENT and NTF_USE
    
    [ Upstream commit 3dc20f4762c62d3b3f0940644881ed818aa7b2f5 ]
    
    Currently, it is not possible to migrate a neighbor entry between NUD_PERMANENT
    state and NTF_USE flag with a dynamic NUD state from a user space control plane.
    Similarly, it is not possible to add/remove NTF_EXT_LEARNED flag from an existing
    neighbor entry in combination with NTF_USE flag.
    
    This is due to the latter directly calling into neigh_event_send() without any
    meta data updates as happening in __neigh_update(). Thus, to enable this use
    case, extend the latter with a NEIGH_UPDATE_F_USE flag where we break the
    NUD_PERMANENT state in particular so that a latter neigh_event_send() is able
    to re-resolve a neighbor entry.
    
    Before fix, NUD_PERMANENT -> NUD_* & NTF_USE:
    
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a PERMANENT
      [...]
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use extern_learn
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a PERMANENT
      [...]
    
    As can be seen, despite the admin-triggered replace, the entry remains in the
    NUD_PERMANENT state.
    
    After fix, NUD_PERMANENT -> NUD_* & NTF_USE:
    
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a PERMANENT
      [...]
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use extern_learn
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a extern_learn REACHABLE
      [...]
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a extern_learn STALE
      [...]
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a PERMANENT
      [...]
    
    After the fix, the admin-triggered replace switches to a dynamic state from
    the NTF_USE flag which triggered a new neighbor resolution. Likewise, we can
    transition back from there, if needed, into NUD_PERMANENT.
    
    Similar before/after behavior can be observed for below transitions:
    
    Before fix, NTF_USE -> NTF_USE | NTF_EXT_LEARNED -> NTF_USE:
    
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a REACHABLE
      [...]
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use extern_learn
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a REACHABLE
      [...]
    
    After fix, NTF_USE -> NTF_USE | NTF_EXT_LEARNED -> NTF_USE:
    
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a REACHABLE
      [...]
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use extern_learn
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a extern_learn REACHABLE
      [...]
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a REACHABLE
      [..]
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Roopa Prabhu <roopa@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bf5c6a1e43fe8697b7df4d640fa59964c557bc6
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue Sep 7 10:24:21 2021 -0700

    f2fs: should use GFP_NOFS for directory inodes
    
    commit 92d602bc7177325e7453189a22e0c8764ed3453e upstream.
    
    We use inline_dentry which requires to allocate dentry page when adding a link.
    If we allow to reclaim memory from filesystem, we do down_read(&sbi->cp_rwsem)
    twice by f2fs_lock_op(). I think this should be okay, but how about stopping
    the lockdep complaint [1]?
    
    f2fs_create()
     - f2fs_lock_op()
     - f2fs_do_add_link()
      - __f2fs_find_entry
       - f2fs_get_read_data_page()
       -> kswapd
        - shrink_node
         - f2fs_evict_inode
          - f2fs_lock_op()
    
    [1]
    
    fs_reclaim
    ){+.+.}-{0:0}
    :
    kswapd0:        lock_acquire+0x114/0x394
    kswapd0:        __fs_reclaim_acquire+0x40/0x50
    kswapd0:        prepare_alloc_pages+0x94/0x1ec
    kswapd0:        __alloc_pages_nodemask+0x78/0x1b0
    kswapd0:        pagecache_get_page+0x2e0/0x57c
    kswapd0:        f2fs_get_read_data_page+0xc0/0x394
    kswapd0:        f2fs_find_data_page+0xa4/0x23c
    kswapd0:        find_in_level+0x1a8/0x36c
    kswapd0:        __f2fs_find_entry+0x70/0x100
    kswapd0:        f2fs_do_add_link+0x84/0x1ec
    kswapd0:        f2fs_mkdir+0xe4/0x1e4
    kswapd0:        vfs_mkdir+0x110/0x1c0
    kswapd0:        do_mkdirat+0xa4/0x160
    kswapd0:        __arm64_sys_mkdirat+0x24/0x34
    kswapd0:        el0_svc_common.llvm.17258447499513131576+0xc4/0x1e8
    kswapd0:        do_el0_svc+0x28/0xa0
    kswapd0:        el0_svc+0x24/0x38
    kswapd0:        el0_sync_handler+0x88/0xec
    kswapd0:        el0_sync+0x1c0/0x200
    kswapd0:
    -> #1
    (
    &sbi->cp_rwsem
    ){++++}-{3:3}
    :
    kswapd0:        lock_acquire+0x114/0x394
    kswapd0:        down_read+0x7c/0x98
    kswapd0:        f2fs_do_truncate_blocks+0x78/0x3dc
    kswapd0:        f2fs_truncate+0xc8/0x128
    kswapd0:        f2fs_evict_inode+0x2b8/0x8b8
    kswapd0:        evict+0xd4/0x2f8
    kswapd0:        iput+0x1c0/0x258
    kswapd0:        do_unlinkat+0x170/0x2a0
    kswapd0:        __arm64_sys_unlinkat+0x4c/0x68
    kswapd0:        el0_svc_common.llvm.17258447499513131576+0xc4/0x1e8
    kswapd0:        do_el0_svc+0x28/0xa0
    kswapd0:        el0_svc+0x24/0x38
    kswapd0:        el0_sync_handler+0x88/0xec
    kswapd0:        el0_sync+0x1c0/0x200
    
    Cc: stable@vger.kernel.org
    Fixes: bdbc90fa55af ("f2fs: don't put dentry page in pagecache into highmem")
    Reviewed-by: Chao Yu <chao@kernel.org>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Light Hsieh <light.hsieh@mediatek.com>
    Tested-by: Light Hsieh <light.hsieh@mediatek.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7930892cbd4008c353c8d397d0d3a18f8ad9f9ed
Author: Guo Ren <guoren@linux.alibaba.com>
Date:   Fri Nov 5 17:47:48 2021 +0800

    irqchip/sifive-plic: Fixup EOI failed when masked
    
    commit 69ea463021be0d159ab30f96195fb0dd18ee2272 upstream.
    
    When using "devm_request_threaded_irq(,,,,IRQF_ONESHOT,,)" in a driver,
    only the first interrupt is handled, and following interrupts are never
    delivered (initially reported in [1]).
    
    That's because the RISC-V PLIC cannot EOI masked interrupts, as explained
    in the description of Interrupt Completion in the PLIC spec [2]:
    
    <quote>
    The PLIC signals it has completed executing an interrupt handler by
    writing the interrupt ID it received from the claim to the claim/complete
    register. The PLIC does not check whether the completion ID is the same
    as the last claim ID for that target. If the completion ID does not match
    an interrupt source that *is currently enabled* for the target, the
    completion is silently ignored.
    </quote>
    
    Re-enable the interrupt before completion if it has been masked during
    the handling, and remask it afterwards.
    
    [1] http://lists.infradead.org/pipermail/linux-riscv/2021-July/007441.html
    [2] https://github.com/riscv/riscv-plic-spec/blob/8bc15a35d07c9edf7b5d23fec9728302595ffc4d/riscv-plic.adoc
    
    Fixes: bb0fed1c60cc ("irqchip/sifive-plic: Switch to fasteoi flow")
    Reported-by: Vincent Pelletier <plr.vincent@gmail.com>
    Tested-by: Nikita Shubin <nikita.shubin@maquefel.me>
    Signed-off-by: Guo Ren <guoren@linux.alibaba.com>
    Cc: stable@vger.kernel.org
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Palmer Dabbelt <palmer@dabbelt.com>
    Cc: Atish Patra <atish.patra@wdc.com>
    Reviewed-by: Anup Patel <anup@brainfault.org>
    [maz: amended commit message]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20211105094748.3894453-1-guoren@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f67f6eb717ae6277ddd6c1685b0e85ef17420096
Author: Michael Pratt <mpratt@google.com>
Date:   Mon Nov 1 17:06:15 2021 -0400

    posix-cpu-timers: Clear task::posix_cputimers_work in copy_process()
    
    commit ca7752caeaa70bd31d1714af566c9809688544af upstream.
    
    copy_process currently copies task_struct.posix_cputimers_work as-is. If a
    timer interrupt arrives while handling clone and before dup_task_struct
    completes then the child task will have:
    
    1. posix_cputimers_work.scheduled = true
    2. posix_cputimers_work.work queued.
    
    copy_process clears task_struct.task_works, so (2) will have no effect and
    posix_cpu_timers_work will never run (not to mention it doesn't make sense
    for two tasks to share a common linked list).
    
    Since posix_cpu_timers_work never runs, posix_cputimers_work.scheduled is
    never cleared. Since scheduled is set, future timer interrupts will skip
    scheduling work, with the ultimate result that the task will never receive
    timer expirations.
    
    Together, the complete flow is:
    
    1. Task 1 calls clone(), enters kernel.
    2. Timer interrupt fires, schedules task work on Task 1.
       2a. task_struct.posix_cputimers_work.scheduled = true
       2b. task_struct.posix_cputimers_work.work added to
           task_struct.task_works.
    3. dup_task_struct() copies Task 1 to Task 2.
    4. copy_process() clears task_struct.task_works for Task 2.
    5. Future timer interrupts on Task 2 see
       task_struct.posix_cputimers_work.scheduled = true and skip scheduling
       work.
    
    Fix this by explicitly clearing contents of task_struct.posix_cputimers_work
    in copy_process(). This was never meant to be shared or inherited across
    tasks in the first place.
    
    Fixes: 1fb497dd0030 ("posix-cpu-timers: Provide mechanisms to defer timer handling to task_work")
    Reported-by: Rhys Hiltner <rhys@justin.tv>
    Signed-off-by: Michael Pratt <mpratt@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211101210615.716522-1-mpratt@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1372eb1871085a65940491d27f12f9e19b4927b3
Author: Dave Jones <davej@codemonkey.org.uk>
Date:   Fri Oct 29 16:57:59 2021 -0400

    x86/mce: Add errata workaround for Skylake SKX37
    
    commit e629fc1407a63dbb748f828f9814463ffc2a0af0 upstream.
    
    Errata SKX37 is word-for-word identical to the other errata listed in
    this workaround.   I happened to notice this after investigating a CMCI
    storm on a Skylake host.  While I can't confirm this was the root cause,
    spurious corrected errors does sound like a likely suspect.
    
    Fixes: 2976908e4198 ("x86/mce: Do not log spurious corrected mce errors")
    Signed-off-by: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20211029205759.GA7385@codemonkey.org.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ee5bc2ba83f49dfcae9329cd531a2797af134a7
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Fri Oct 22 00:58:23 2021 +0200

    MIPS: Fix assembly error from MIPSr2 code used within MIPS_ISA_ARCH_LEVEL
    
    commit a923a2676e60683aee46aa4b93c30aff240ac20d upstream.
    
    Fix assembly errors like:
    
    {standard input}: Assembler messages:
    {standard input}:287: Error: opcode not supported on this processor: mips3 (mips3) `dins $10,$7,32,32'
    {standard input}:680: Error: opcode not supported on this processor: mips3 (mips3) `dins $10,$7,32,32'
    {standard input}:1274: Error: opcode not supported on this processor: mips3 (mips3) `dins $12,$9,32,32'
    {standard input}:2175: Error: opcode not supported on this processor: mips3 (mips3) `dins $10,$7,32,32'
    make[1]: *** [scripts/Makefile.build:277: mm/highmem.o] Error 1
    
    with code produced from `__cmpxchg64' for MIPS64r2 CPU configurations
    using CONFIG_32BIT and CONFIG_PHYS_ADDR_T_64BIT.
    
    This is due to MIPS_ISA_ARCH_LEVEL downgrading the assembly architecture
    to `r4000' i.e. MIPS III for MIPS64r2 configurations, while there is a
    block of code containing a DINS MIPS64r2 instruction conditionalized on
    MIPS_ISA_REV >= 2 within the scope of the downgrade.
    
    The assembly architecture override code pattern has been put there for
    LL/SC instructions, so that code compiles for configurations that select
    a processor to build for that does not support these instructions while
    still providing run-time support for processors that do, dynamically
    switched by non-constant `cpu_has_llsc'.  It went in with linux-mips.org
    commit aac8aa7717a2 ("Enable a suitable ISA for the assembler around
    ll/sc so that code builds even for processors that don't support the
    instructions. Plus minor formatting fixes.") back in 2005.
    
    Fix the problem by wrapping these instructions along with the adjacent
    SYNC instructions only, following the practice established with commit
    cfd54de3b0e4 ("MIPS: Avoid move psuedo-instruction whilst using
    MIPS_ISA_LEVEL") and commit 378ed6f0e3c5 ("MIPS: Avoid using .set mips0
    to restore ISA").  Strictly speaking the SYNC instructions do not have
    to be wrapped as they are only used as a Loongson3 erratum workaround,
    so they will be enabled in the assembler by default, but do this so as
    to keep code consistent with other places.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: c7e2d71dda7a ("MIPS: Fix set_pte() for Netlogic XLR using cmpxchg64()")
    Cc: stable@vger.kernel.org # v5.1+
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc42bbb7827be96c4a77c5ff490b84316c5f963b
Author: Helge Deller <deller@gmx.de>
Date:   Thu Nov 4 20:19:00 2021 +0100

    parisc: Fix backtrace to always include init funtion names
    
    commit 279917e27edc293eb645a25428c6ab3f3bca3f86 upstream.
    
    I noticed that sometimes at kernel startup the backtraces did not
    included the function names of init functions. Their address were not
    resolved to function names and instead only the address was printed.
    
    Debugging shows that the culprit is is_ksym_addr() which is called
    by the backtrace functions to check if an address belongs to a function in
    the kernel. The problem occurs only for CONFIG_KALLSYMS_ALL=y.
    
    When looking at is_ksym_addr() one can see that for CONFIG_KALLSYMS_ALL=y
    the function only tries to resolve the address via is_kernel() function,
    which checks like this:
            if (addr >= _stext && addr <= _end)
                    return 1;
    On parisc the init functions are located before _stext, so this check fails.
    Other platforms seem to have all functions (including init functions)
    behind _stext.
    
    The following patch moves the _stext symbol at the beginning of the
    kernel and thus includes the init section. This fixes the check and does
    not seem to have any negative side effects on where the kernel mapping
    happens in the map_pages() function in arch/parisc/mm/init.c.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@kernel.org # 5.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 241c74cc655540fd34df083832e40fb6050d70b5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sat Nov 6 19:42:29 2021 +0100

    ARM: 9156/1: drop cc-option fallbacks for architecture selection
    
    commit 418ace9992a7647c446ed3186df40cf165b67298 upstream.
    
    Naresh and Antonio ran into a build failure with latest Debian
    armhf compilers, with lots of output like
    
     tmp/ccY3nOAs.s:2215: Error: selected processor does not support `cpsid i' in ARM mode
    
    As it turns out, $(cc-option) fails early here when the FPU is not
    selected before CPU architecture is selected, as the compiler
    option check runs before enabling -msoft-float, which causes
    a problem when testing a target architecture level without an FPU:
    
    cc1: error: '-mfloat-abi=hard': selected architecture lacks an FPU
    
    Passing e.g. -march=armv6k+fp in place of -march=armv6k would avoid this
    issue, but the fallback logic is already broken because all supported
    compilers (gcc-5 and higher) are much more recent than these options,
    and building with -march=armv5t as a fallback no longer works.
    
    The best way forward that I see is to just remove all the checks, which
    also has the nice side-effect of slightly improving the startup time for
    'make'.
    
    The -mtune=marvell-f option was apparently never supported by any mainline
    compiler, and the custom Codesourcery gcc build that did support is
    now too old to build kernels, so just use -mtune=xscale unconditionally
    for those.
    
    This should be safe to apply on all stable kernels, and will be required
    in order to keep building them with gcc-11 and higher.
    
    Link: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=996419
    
    Reported-by: Antonio Terceiro <antonio.terceiro@linaro.org>
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Reported-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
    Tested-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Tested-by: Klaus Kudielka <klaus.kudielka@gmail.com>
    Cc: Matthias Klose <doko@debian.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03f2578153eb09b386ef237be4cb285f3389f8fa
Author: Michał Mirosław <mirq-linux@rere.qmqm.pl>
Date:   Thu Nov 4 17:28:28 2021 +0100

    ARM: 9155/1: fix early early_iounmap()
    
    commit 0d08e7bf0d0d1a29aff7b16ef516f7415eb1aa05 upstream.
    
    Currently __set_fixmap() bails out with a warning when called in early boot
    from early_iounmap(). Fix it, and while at it, make the comment a bit easier
    to understand.
    
    Cc: <stable@vger.kernel.org>
    Fixes: b089c31c519c ("ARM: 8667/3: Fix memory attribute inconsistencies when using fixmap")
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Michał Mirosław <mirq-linux@rere.qmqm.pl>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee79560cb768ef56d91452868d01888e97373ccb
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu Nov 11 06:57:17 2021 -0500

    selftests/net: udpgso_bench_rx: fix port argument
    
    [ Upstream commit d336509cb9d03970911878bb77f0497f64fda061 ]
    
    The below commit added optional support for passing a bind address.
    It configures the sockaddr bind arguments before parsing options and
    reconfigures on options -b and -4.
    
    This broke support for passing port (-p) on its own.
    
    Configure sockaddr after parsing all arguments.
    
    Fixes: 3327a9c46352 ("selftests: add functionals test for UDP GRO")
    Reported-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b215edb7a38c4fdf78ef94a0704694c59e6f8d4
Author: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
Date:   Thu Nov 11 15:55:16 2021 +0530

    cxgb4: fix eeprom len when diagnostics not implemented
    
    [ Upstream commit 4ca110bf8d9b31a60f8f8ff6706ea147d38ad97c ]
    
    Ensure diagnostics monitoring support is implemented for the SFF 8472
    compliant port module and set the correct length for ethtool port
    module eeprom read.
    
    Fixes: f56ec6766dcf ("cxgb4: Add support for ethtool i2c dump")
    Signed-off-by: Manoj Malviya <manojmalviya@chelsio.com>
    Signed-off-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93bc3ef607589354d411302c57ff08e666ceefe9
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Wed Nov 10 15:02:34 2021 +0800

    net/smc: fix sk_refcnt underflow on linkdown and fallback
    
    [ Upstream commit e5d5aadcf3cd59949316df49c27cb21788d7efe4 ]
    
    We got the following WARNING when running ab/nginx
    test with RDMA link flapping (up-down-up).
    The reason is when smc_sock fallback and at linkdown
    happens simultaneously, we may got the following situation:
    
    __smc_lgr_terminate()
     --> smc_conn_kill()
        --> smc_close_active_abort()
               smc_sock->sk_state = SMC_CLOSED
               sock_put(smc_sock)
    
    smc_sock was set to SMC_CLOSED and sock_put() been called
    when terminate the link group. But later application call
    close() on the socket, then we got:
    
    __smc_release():
        if (smc_sock->fallback)
            smc_sock->sk_state = SMC_CLOSED
            sock_put(smc_sock)
    
    Again we set the smc_sock to CLOSED through it's already
    in CLOSED state, and double put the refcnt, so the following
    warning happens:
    
    refcount_t: underflow; use-after-free.
    WARNING: CPU: 5 PID: 860 at lib/refcount.c:28 refcount_warn_saturate+0x8d/0xf0
    Modules linked in:
    CPU: 5 PID: 860 Comm: nginx Not tainted 5.10.46+ #403
    Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS 8c24b4c 04/01/2014
    RIP: 0010:refcount_warn_saturate+0x8d/0xf0
    Code: 05 5c 1e b5 01 01 e8 52 25 bc ff 0f 0b c3 80 3d 4f 1e b5 01 00 75 ad 48
    
    RSP: 0018:ffffc90000527e50 EFLAGS: 00010286
    RAX: 0000000000000026 RBX: ffff8881300df2c0 RCX: 0000000000000027
    RDX: 0000000000000000 RSI: ffff88813bd58040 RDI: ffff88813bd58048
    RBP: 0000000000000000 R08: 0000000000000003 R09: 0000000000000001
    R10: ffff8881300df2c0 R11: ffffc90000527c78 R12: ffff8881300df340
    R13: ffff8881300df930 R14: ffff88810b3dad80 R15: ffff8881300df4f8
    FS:  00007f739de8fb80(0000) GS:ffff88813bd40000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000a01b008 CR3: 0000000111b64003 CR4: 00000000003706e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     smc_release+0x353/0x3f0
     __sock_release+0x3d/0xb0
     sock_close+0x11/0x20
     __fput+0x93/0x230
     task_work_run+0x65/0xa0
     exit_to_user_mode_prepare+0xf9/0x100
     syscall_exit_to_user_mode+0x27/0x190
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    This patch adds check in __smc_release() to make
    sure we won't do an extra sock_put() and set the
    socket to CLOSED when its already in CLOSED state.
    
    Fixes: 51f1de79ad8e (net/smc: replace sock_put worker by socket refcounting)
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Reviewed-by: Tony Lu <tonylu@linux.alibaba.com>
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Acked-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e03b797bee0b9da2d329c3edbc6937062f01215
Author: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
Date:   Tue Nov 9 00:15:02 2021 +0000

    vsock: prevent unnecessary refcnt inc for nonblocking connect
    
    [ Upstream commit c7cd82b90599fa10915f41e3dd9098a77d0aa7b6 ]
    
    Currently vosck_connect() increments sock refcount for nonblocking
    socket each time it's called, which can lead to memory leak if
    it's called multiple times because connect timeout function decrements
    sock refcount only once.
    
    Fixes it by making vsock_connect() return -EALREADY immediately when
    sock state is already SS_CONNECTING.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Reviewed-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad3d219e843df0abcb5ee390b9cf416216db13e2
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Nov 8 22:28:54 2021 +0200

    net: stmmac: allow a tc-taprio base-time of zero
    
    [ Upstream commit f64ab8e4f368f48afb08ae91928e103d17b235e9 ]
    
    Commit fe28c53ed71d ("net: stmmac: fix taprio configuration when
    base_time is in the past") allowed some base time values in the past,
    but apparently not all, the base-time value of 0 (Jan 1st 1970) is still
    explicitly denied by the driver.
    
    Remove the bogus check.
    
    Fixes: b60189e0392f ("net: stmmac: Integrate EST with TAPRIO scheduler API")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Kurt Kanzenbach <kurt@linutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b30459c0ca0dce0db6168bcbfb640763734faacf
Author: Guangbin Huang <huangguangbin2@huawei.com>
Date:   Wed Nov 10 21:42:56 2021 +0800

    net: hns3: allow configure ETS bandwidth of all TCs
    
    [ Upstream commit 688db0c7a4a69ddc8b8143a1cac01eb20082a3aa ]
    
    Currently, driver only allow configuring ETS bandwidth of TCs according
    to the max TC number queried from firmware. However, the hardware actually
    supports 8 TCs and users may need to configure ETS bandwidth of all TCs,
    so remove the restriction.
    
    Fixes: 330baff5423b ("net: hns3: add ETS TC weight setting in SSU module")
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee11f16fee9528dd3cc0710847ada5403b02705d
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Wed Nov 10 21:42:53 2021 +0800

    net: hns3: fix kernel crash when unload VF while it is being reset
    
    [ Upstream commit e140c7983e3054be0652bf914f4454f16c5520b0 ]
    
    When fully configure VLANs for a VF, then unload the VF while
    triggering a reset to PF, will cause a kernel crash because the
    irq is already uninit.
    
    [ 293.177579] ------------[ cut here ]------------
    [ 293.183502] kernel BUG at drivers/pci/msi.c:352!
    [ 293.189547] Internal error: Oops - BUG: 0 [#1] SMP
    ......
    [ 293.390124] Workqueue: hclgevf hclgevf_service_task [hclgevf]
    [ 293.402627] pstate: 80c00009 (Nzcv daif +PAN +UAO)
    [ 293.414324] pc : free_msi_irqs+0x19c/0x1b8
    [ 293.425429] lr : free_msi_irqs+0x18c/0x1b8
    [ 293.436545] sp : ffff00002716fbb0
    [ 293.446950] x29: ffff00002716fbb0 x28: 0000000000000000
    [ 293.459519] x27: 0000000000000000 x26: ffff45b91ea16b00
    [ 293.472183] x25: 0000000000000000 x24: ffffa587b08f4700
    [ 293.484717] x23: ffffc591ac30e000 x22: ffffa587b08f8428
    [ 293.497190] x21: ffffc591ac30e300 x20: 0000000000000000
    [ 293.509594] x19: ffffa58a062a8300 x18: 0000000000000000
    [ 293.521949] x17: 0000000000000000 x16: ffff45b91dcc3f48
    [ 293.534013] x15: 0000000000000000 x14: 0000000000000000
    [ 293.545883] x13: 0000000000000040 x12: 0000000000000228
    [ 293.557508] x11: 0000000000000020 x10: 0000000000000040
    [ 293.568889] x9 : ffff45b91ea1e190 x8 : ffffc591802d0000
    [ 293.580123] x7 : ffffc591802d0148 x6 : 0000000000000120
    [ 293.591190] x5 : ffffc591802d0000 x4 : 0000000000000000
    [ 293.602015] x3 : 0000000000000000 x2 : 0000000000000000
    [ 293.612624] x1 : 00000000000004a4 x0 : ffffa58a1e0c6b80
    [ 293.623028] Call trace:
    [ 293.630340] free_msi_irqs+0x19c/0x1b8
    [ 293.638849] pci_disable_msix+0x118/0x140
    [ 293.647452] pci_free_irq_vectors+0x20/0x38
    [ 293.656081] hclgevf_uninit_msi+0x44/0x58 [hclgevf]
    [ 293.665309] hclgevf_reset_rebuild+0x1ac/0x2e0 [hclgevf]
    [ 293.674866] hclgevf_reset+0x358/0x400 [hclgevf]
    [ 293.683545] hclgevf_reset_service_task+0xd0/0x1b0 [hclgevf]
    [ 293.693325] hclgevf_service_task+0x4c/0x2e8 [hclgevf]
    [ 293.702307] process_one_work+0x1b0/0x448
    [ 293.710034] worker_thread+0x54/0x468
    [ 293.717331] kthread+0x134/0x138
    [ 293.724114] ret_from_fork+0x10/0x18
    [ 293.731324] Code: f940b000 b4ffff00 a903e7b8 f90017b6 (d4210000)
    
    This patch fixes the problem by waiting for the VF reset done
    while unloading the VF.
    
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79aa8706b45c110de1188bcca0212dc362b5d353
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Nov 8 10:08:15 2021 -0800

    net/sched: sch_taprio: fix undefined behavior in ktime_mono_to_any
    
    [ Upstream commit 6dc25401cba4d428328eade8ceae717633fdd702 ]
    
    1) if q->tk_offset == TK_OFFS_MAX, then get_tcp_tstamp() calls
       ktime_mono_to_any() with out-of-bound value.
    
    2) if q->tk_offset is changed in taprio_parse_clockid(),
       taprio_get_time() might also call ktime_mono_to_any()
       with out-of-bound value as sysbot found:
    
    UBSAN: array-index-out-of-bounds in kernel/time/timekeeping.c:908:27
    index 3 is out of range for type 'ktime_t *[3]'
    CPU: 1 PID: 25668 Comm: kworker/u4:0 Not tainted 5.15.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Workqueue: bat_events batadv_iv_send_outstanding_bat_ogm_packet
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:151
     __ubsan_handle_out_of_bounds.cold+0x62/0x6c lib/ubsan.c:291
     ktime_mono_to_any+0x1d4/0x1e0 kernel/time/timekeeping.c:908
     get_tcp_tstamp net/sched/sch_taprio.c:322 [inline]
     get_packet_txtime net/sched/sch_taprio.c:353 [inline]
     taprio_enqueue_one+0x5b0/0x1460 net/sched/sch_taprio.c:420
     taprio_enqueue+0x3b1/0x730 net/sched/sch_taprio.c:485
     dev_qdisc_enqueue+0x40/0x300 net/core/dev.c:3785
     __dev_xmit_skb net/core/dev.c:3869 [inline]
     __dev_queue_xmit+0x1f6e/0x3630 net/core/dev.c:4194
     batadv_send_skb_packet+0x4a9/0x5f0 net/batman-adv/send.c:108
     batadv_iv_ogm_send_to_if net/batman-adv/bat_iv_ogm.c:393 [inline]
     batadv_iv_ogm_emit net/batman-adv/bat_iv_ogm.c:421 [inline]
     batadv_iv_send_outstanding_bat_ogm_packet+0x6d7/0x8e0 net/batman-adv/bat_iv_ogm.c:1701
     process_one_work+0x9b2/0x1690 kernel/workqueue.c:2298
     worker_thread+0x658/0x11f0 kernel/workqueue.c:2445
     kthread+0x405/0x4f0 kernel/kthread.c:327
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
    
    Fixes: 7ede7b03484b ("taprio: make clock reference conversions easier")
    Fixes: 54002066100b ("taprio: Adjust timestamps for TCP packets")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vedang Patel <vedang.patel@intel.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reviewed-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Link: https://lore.kernel.org/r/20211108180815.1822479-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5703462a42805cb1a9611a7e0b421343e67ffda
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Mon Nov 8 18:35:19 2021 -0800

    seq_file: fix passing wrong private data
    
    [ Upstream commit 10a6de19cad6efb9b49883513afb810dc265fca2 ]
    
    DEFINE_PROC_SHOW_ATTRIBUTE() is supposed to be used to define a series
    of functions and variables to register proc file easily. And the users
    can use proc_create_data() to pass their own private data and get it
    via seq->private in the callback. Unfortunately, the proc file system
    use PDE_DATA() to get private data instead of inode->i_private. So fix
    it. Fortunately, there only one user of it which does not pass any
    private data, so this bug does not break any in-tree codes.
    
    Link: https://lkml.kernel.org/r/20211029032638.84884-1-songmuchun@bytedance.com
    Fixes: 97a32539b956 ("proc: convert everything to "struct proc_ops"")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Florent Revest <revest@chromium.org>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4af0cd17e72461ec03d59b6a4d7cc769bf41b546
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Nov 9 14:47:36 2021 +0300

    gve: Fix off by one in gve_tx_timeout()
    
    [ Upstream commit 1c360cc1cc883fbdf0a258b4df376571fbeac5ee ]
    
    The priv->ntfy_blocks[] has "priv->num_ntfy_blks" elements so this >
    needs to be >= to prevent an off by one bug.  The priv->ntfy_blocks[]
    array is allocated in gve_alloc_notify_blocks().
    
    Fixes: 87a7f321bb6a ("gve: Recover from queue stall due to missed IRQ")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c842a4c4ae7fd604effbbb36bde7e1c251cb5c47
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Wed Nov 3 13:47:35 2021 -0700

    bpf: sockmap, strparser, and tls are reusing qdisc_skb_cb and colliding
    
    [ Upstream commit e0dc3b93bd7bcff8c3813d1df43e0908499c7cf0 ]
    
    Strparser is reusing the qdisc_skb_cb struct to stash the skb message handling
    progress, e.g. offset and length of the skb. First this is poorly named and
    inherits a struct from qdisc that doesn't reflect the actual usage of cb[] at
    this layer.
    
    But, more importantly strparser is using the following to access its metadata.
    
      (struct _strp_msg *)((void *)skb->cb + offsetof(struct qdisc_skb_cb, data))
    
    Where _strp_msg is defined as:
    
      struct _strp_msg {
            struct strp_msg            strp;                 /*     0     8 */
            int                        accum_len;            /*     8     4 */
    
            /* size: 12, cachelines: 1, members: 2 */
            /* last cacheline: 12 bytes */
      };
    
    So we use 12 bytes of ->data[] in struct. However in BPF code running parser
    and verdict the user has read capabilities into the data[] array as well. Its
    not too problematic, but we should not be exposing internal state to BPF
    program. If its really needed then we can use the probe_read() APIs which allow
    reading kernel memory. And I don't believe cb[] layer poses any API breakage by
    moving this around because programs can't depend on cb[] across layers.
    
    In order to fix another issue with a ctx rewrite we need to stash a temp
    variable somewhere. To make this work cleanly this patch builds a cb struct
    for sk_skb types called sk_skb_cb struct. Then we can use this consistently
    in the strparser, sockmap space. Additionally we can start allowing ->cb[]
    write access after this.
    
    Fixes: 604326b41a6fb ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Jussi Maki <joamaki@gmail.com>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20211103204736.248403-5-john.fastabend@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b5c98a67c1b6a569957af64bb65ce39c5431d80
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Wed Nov 3 13:47:33 2021 -0700

    bpf, sockmap: Remove unhash handler for BPF sockmap usage
    
    [ Upstream commit b8b8315e39ffaca82e79d86dde26e9144addf66b ]
    
    We do not need to handle unhash from BPF side we can simply wait for the
    close to happen. The original concern was a socket could transition from
    ESTABLISHED state to a new state while the BPF hook was still attached.
    But, we convinced ourself this is no longer possible and we also improved
    BPF sockmap to handle listen sockets so this is no longer a problem.
    
    More importantly though there are cases where unhash is called when data is
    in the receive queue. The BPF unhash logic will flush this data which is
    wrong. To be correct it should keep the data in the receive queue and allow
    a receiving application to continue reading the data. This may happen when
    tcp_abort() is received for example. Instead of complicating the logic in
    unhash simply moving all this to tcp_close() hook solves this.
    
    Fixes: 51199405f9672 ("bpf: skb_verdict, support SK_PASS on RX BPF path")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Jussi Maki <joamaki@gmail.com>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20211103204736.248403-3-john.fastabend@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fe81d7a202d79fc2d03556ae284445733cb0946
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Nov 5 08:54:03 2021 +0100

    arm64: pgtable: make __pte_to_phys/__phys_to_pte_val inline functions
    
    [ Upstream commit c7c386fbc20262c1d911c615c65db6a58667d92c ]
    
    gcc warns about undefined behavior the vmalloc code when building
    with CONFIG_ARM64_PA_BITS_52, when the 'idx++' in the argument to
    __phys_to_pte_val() is evaluated twice:
    
    mm/vmalloc.c: In function 'vmap_pfn_apply':
    mm/vmalloc.c:2800:58: error: operation on 'data->idx' may be undefined [-Werror=sequence-point]
     2800 |         *pte = pte_mkspecial(pfn_pte(data->pfns[data->idx++], data->prot));
          |                                                 ~~~~~~~~~^~
    arch/arm64/include/asm/pgtable-types.h:25:37: note: in definition of macro '__pte'
       25 | #define __pte(x)        ((pte_t) { (x) } )
          |                                     ^
    arch/arm64/include/asm/pgtable.h:80:15: note: in expansion of macro '__phys_to_pte_val'
       80 |         __pte(__phys_to_pte_val((phys_addr_t)(pfn) << PAGE_SHIFT) | pgprot_val(prot))
          |               ^~~~~~~~~~~~~~~~~
    mm/vmalloc.c:2800:30: note: in expansion of macro 'pfn_pte'
     2800 |         *pte = pte_mkspecial(pfn_pte(data->pfns[data->idx++], data->prot));
          |                              ^~~~~~~
    
    I have no idea why this never showed up earlier, but the safest
    workaround appears to be changing those macros into inline functions
    so the arguments get evaluated only once.
    
    Cc: Matthew Wilcox <willy@infradead.org>
    Fixes: 75387b92635e ("arm64: handle 52-bit physical addresses in page table entries")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211105075414.2553155-1-arnd@kernel.org
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 727c812433b6087ddc48e519a614e4fe23c9c5c6
Author: Chengfeng Ye <cyeaa@connect.ust.hk>
Date:   Fri Nov 5 06:36:36 2021 -0700

    nfc: pn533: Fix double free when pn533_fill_fragment_skbs() fails
    
    [ Upstream commit 9fec40f850658e00a14a7dd9e06f7fbc7e59cc4a ]
    
    skb is already freed by dev_kfree_skb in pn533_fill_fragment_skbs,
    but follow error handler branch when pn533_fill_fragment_skbs()
    fails, skb is freed again, results in double free issue. Fix this
    by not free skb in error path of pn533_fill_fragment_skbs.
    
    Fixes: 963a82e07d4e ("NFC: pn533: Split large Tx frames in chunks")
    Fixes: 93ad42020c2d ("NFC: pn533: Target mode Tx fragmentation support")
    Signed-off-by: Chengfeng Ye <cyeaa@connect.ust.hk>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f0e683e1bd4b59c7866c564dd8dce700d7d5365
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 5 14:42:14 2021 -0700

    llc: fix out-of-bound array index in llc_sk_dev_hash()
    
    [ Upstream commit 8ac9dfd58b138f7e82098a4e0a0d46858b12215b ]
    
    Both ifindex and LLC_SK_DEV_HASH_ENTRIES are signed.
    
    This means that (ifindex % LLC_SK_DEV_HASH_ENTRIES) is negative
    if @ifindex is negative.
    
    We could simply make LLC_SK_DEV_HASH_ENTRIES unsigned.
    
    In this patch I chose to use hash_32() to get more entropy
    from @ifindex, like llc_sk_laddr_hashfn().
    
    UBSAN: array-index-out-of-bounds in ./include/net/llc.h:75:26
    index -43 is out of range for type 'hlist_head [64]'
    CPU: 1 PID: 20999 Comm: syz-executor.3 Not tainted 5.15.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <TASK>
     __dump_stack lib/dump_stack.c:88 [inline]
     dump_stack_lvl+0xcd/0x134 lib/dump_stack.c:106
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:151
     __ubsan_handle_out_of_bounds.cold+0x62/0x6c lib/ubsan.c:291
     llc_sk_dev_hash include/net/llc.h:75 [inline]
     llc_sap_add_socket+0x49c/0x520 net/llc/llc_conn.c:697
     llc_ui_bind+0x680/0xd70 net/llc/af_llc.c:404
     __sys_bind+0x1e9/0x250 net/socket.c:1693
     __do_sys_bind net/socket.c:1704 [inline]
     __se_sys_bind net/socket.c:1702 [inline]
     __x64_sys_bind+0x6f/0xb0 net/socket.c:1702
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7fa503407ae9
    
    Fixes: 6d2e3ea28446 ("llc: use a device based hash table to speed up multicast delivery")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b833274ae6d97294db0fcb55751c6f5b9af151df
Author: Ian Rogers <irogers@google.com>
Date:   Fri Nov 5 22:37:33 2021 -0700

    perf bpf: Add missing free to bpf_event__print_bpf_prog_info()
    
    [ Upstream commit 88c42f4d6cb249eb68524282f8d4cc32f9059984 ]
    
    If btf__new() is called then there needs to be a corresponding btf__free().
    
    Fixes: f8dfeae009effc0b ("perf bpf: Show more BPF program info in print_bpf_prog_info()")
    Signed-off-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Andrii Nakryiko <andrii@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: KP Singh <kpsingh@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Tiezhu Yang <yangtiezhu@loongson.cn>
    Cc: Yonghong Song <yhs@fb.com>
    Cc: bpf@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20211106053733.3580931-2-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7091fcc75ff655435402609cbccf74ce36758730
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Nov 5 13:45:12 2021 -0700

    zram: off by one in read_block_state()
    
    [ Upstream commit a88e03cf3d190cf46bc4063a9b7efe87590de5f4 ]
    
    snprintf() returns the number of bytes it would have printed if there
    were space.  But it does not count the NUL terminator.  So that means
    that if "count == copied" then this has already overflowed by one
    character.
    
    This bug likely isn't super harmful in real life.
    
    Link: https://lkml.kernel.org/r/20210916130404.GA25094@kili
    Fixes: c0265342bff4 ("zram: introduce zram memory tracking")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <senozhatsky@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64bde0c2db50c87df4dffd8c0e86443546a41844
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Fri Nov 5 13:45:03 2021 -0700

    mm/zsmalloc.c: close race window between zs_pool_dec_isolated() and zs_unregister_migration()
    
    [ Upstream commit afe8605ca45424629fdddfd85984b442c763dc47 ]
    
    There is one possible race window between zs_pool_dec_isolated() and
    zs_unregister_migration() because wait_for_isolated_drain() checks the
    isolated count without holding class->lock and there is no order inside
    zs_pool_dec_isolated().  Thus the below race window could be possible:
    
      zs_pool_dec_isolated          zs_unregister_migration
        check pool->destroying != 0
                                      pool->destroying = true;
                                      smp_mb();
                                      wait_for_isolated_drain()
                                        wait for pool->isolated_pages == 0
        atomic_long_dec(&pool->isolated_pages);
        atomic_long_read(&pool->isolated_pages) == 0
    
    Since we observe the pool->destroying (false) before atomic_long_dec()
    for pool->isolated_pages, waking pool->migration_wait up is missed.
    
    Fix this by ensure checking pool->destroying happens after the
    atomic_long_dec(&pool->isolated_pages).
    
    Link: https://lkml.kernel.org/r/20210708115027.7557-1-linmiaohe@huawei.com
    Fixes: 701d678599d0 ("mm/zsmalloc.c: fix race condition in zs_destroy_pool")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <senozhatsky@chromium.org>
    Cc: Henry Burns <henryburns@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3c205c017f8996b0a706a908f4d8480296d6ec0
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Oct 19 17:00:04 2021 +0200

    can: mcp251xfd: mcp251xfd_chip_start(): fix error handling for mcp251xfd_chip_rx_int_enable()
    
    [ Upstream commit 69c55f6e7669d46bb40e41f6e2b218428178368a ]
    
    This patch fixes the error handling for mcp251xfd_chip_rx_int_enable().
    Instead just returning the error, properly shut down the chip.
    
    Link: https://lore.kernel.org/all/20211106201526.44292-2-mkl@pengutronix.de
    Fixes: 55e5b97f003e ("can: mcp25xxfd: add driver for Microchip MCP25xxFD SPI CAN")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 300d874748166515581ea13030b4d2060ca5b3e0
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri May 28 07:51:26 2021 -0400

    mfd: core: Add missing of_node_put for loop iteration
    
    [ Upstream commit 002be81140075e17a1ebd5c3c55e356fbab0ddad ]
    
    Early exits from for_each_child_of_node() should decrement the
    node reference counter.  Reported by Coccinelle:
    
      drivers/mfd/mfd-core.c:197:2-24: WARNING:
        Function "for_each_child_of_node" should have of_node_put() before goto around lines 209.
    
    Fixes: c94bb233a9fe ("mfd: Make MFD core code Device Tree and IRQ domain aware")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20210528115126.18370-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6439b91fef2c5f49df7f4dbb9fe5c2f4317ab828
Author: Huang Guobin <huangguobin4@huawei.com>
Date:   Tue Nov 2 17:37:33 2021 +0800

    bonding: Fix a use-after-free problem when bond_sysfs_slave_add() failed
    
    [ Upstream commit b93c6a911a3fe926b00add28f3b932007827c4ca ]
    
    When I do fuzz test for bonding device interface, I got the following
    use-after-free Calltrace:
    
    ==================================================================
    BUG: KASAN: use-after-free in bond_enslave+0x1521/0x24f0
    Read of size 8 at addr ffff88825bc11c00 by task ifenslave/7365
    
    CPU: 5 PID: 7365 Comm: ifenslave Tainted: G            E     5.15.0-rc1+ #13
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1 04/01/2014
    Call Trace:
     dump_stack_lvl+0x6c/0x8b
     print_address_description.constprop.0+0x48/0x70
     kasan_report.cold+0x82/0xdb
     __asan_load8+0x69/0x90
     bond_enslave+0x1521/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f19159cf577
    Code: b3 66 90 48 8b 05 11 89 2c 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 78
    RSP: 002b:00007ffeb3083c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 00007ffeb3084bca RCX: 00007f19159cf577
    RDX: 00007ffeb3083ce0 RSI: 0000000000008990 RDI: 0000000000000003
    RBP: 00007ffeb3084bc4 R08: 0000000000000040 R09: 0000000000000000
    R10: 00007ffeb3084bc0 R11: 0000000000000246 R12: 00007ffeb3083ce0
    R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffeb3083cb0
    
    Allocated by task 7365:
     kasan_save_stack+0x23/0x50
     __kasan_kmalloc+0x83/0xa0
     kmem_cache_alloc_trace+0x22e/0x470
     bond_enslave+0x2e1/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Freed by task 7365:
     kasan_save_stack+0x23/0x50
     kasan_set_track+0x20/0x30
     kasan_set_free_info+0x24/0x40
     __kasan_slab_free+0xf2/0x130
     kfree+0xd1/0x5c0
     slave_kobj_release+0x61/0x90
     kobject_put+0x102/0x180
     bond_sysfs_slave_add+0x7a/0xa0
     bond_enslave+0x11b6/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Last potentially related work creation:
     kasan_save_stack+0x23/0x50
     kasan_record_aux_stack+0xb7/0xd0
     insert_work+0x43/0x190
     __queue_work+0x2e3/0x970
     delayed_work_timer_fn+0x3e/0x50
     call_timer_fn+0x148/0x470
     run_timer_softirq+0x8a8/0xc50
     __do_softirq+0x107/0x55f
    
    Second to last potentially related work creation:
     kasan_save_stack+0x23/0x50
     kasan_record_aux_stack+0xb7/0xd0
     insert_work+0x43/0x190
     __queue_work+0x2e3/0x970
     __queue_delayed_work+0x130/0x180
     queue_delayed_work_on+0xa7/0xb0
     bond_enslave+0xe25/0x24f0
     bond_do_ioctl+0x3e0/0x450
     dev_ifsioc+0x2ba/0x970
     dev_ioctl+0x112/0x710
     sock_do_ioctl+0x118/0x1b0
     sock_ioctl+0x2e0/0x490
     __x64_sys_ioctl+0x118/0x150
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The buggy address belongs to the object at ffff88825bc11c00
     which belongs to the cache kmalloc-1k of size 1024
    The buggy address is located 0 bytes inside of
     1024-byte region [ffff88825bc11c00, ffff88825bc12000)
    The buggy address belongs to the page:
    page:ffffea00096f0400 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x25bc10
    head:ffffea00096f0400 order:3 compound_mapcount:0 compound_pincount:0
    flags: 0x57ff00000010200(slab|head|node=1|zone=2|lastcpupid=0x7ff)
    raw: 057ff00000010200 ffffea0009a71c08 ffff888240001968 ffff88810004dbc0
    raw: 0000000000000000 00000000000a000a 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff88825bc11b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff88825bc11b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    >ffff88825bc11c00: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                       ^
     ffff88825bc11c80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff88825bc11d00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Put new_slave in bond_sysfs_slave_add() will cause use-after-free problems
    when new_slave is accessed in the subsequent error handling process. Since
    new_slave will be put in the subsequent error handling process, remove the
    unnecessary put to fix it.
    In addition, when sysfs_create_file() fails, if some files have been crea-
    ted successfully, we need to call sysfs_remove_file() to remove them.
    Since there are sysfs_create_files() & sysfs_remove_files() can be used,
    use these two functions instead.
    
    Fixes: 7afcaec49696 (bonding: use kobject_put instead of _del after kobject_add)
    Signed-off-by: Huang Guobin <huangguobin4@huawei.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acb01e962af7d6867516a6f36e181301642af059
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Wed Nov 3 22:08:28 2021 +0100

    net: phy: fix duplex out of sync problem while changing settings
    
    [ Upstream commit a4db9055fdb9cf607775c66d39796caf6439ec92 ]
    
    As reported by Zhang there's a small issue if in forced mode the duplex
    mode changes with the link staying up [0]. In this case the MAC isn't
    notified about the change.
    
    The proposed patch relies on the phylib state machine and ignores the
    fact that there are drivers that uses phylib but not the phylib state
    machine. So let's don't change the behavior for such drivers and fix
    it w/o re-adding state PHY_FORCING for the case that phylib state
    machine is used.
    
    [0] https://lore.kernel.org/netdev/a5c26ffd-4ee4-a5e6-4103-873208ce0dc5@huawei.com/T/
    
    Fixes: 2bd229df5e2e ("net: phy: remove state PHY_FORCING")
    Reported-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Tested-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Link: https://lore.kernel.org/r/7b8b9456-a93f-abbc-1dc5-a2c2542f932c@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 090e17075f6780dba35f91bf34f98170f29cb44f
Author: Chenyuan Mi <cymi20@fudan.edu.cn>
Date:   Tue Sep 7 20:26:33 2021 +0800

    drm/nouveau/svm: Fix refcount leak bug and missing check against null bug
    
    [ Upstream commit 6bb8c2d51811eb5e6504f49efe3b089d026009d2 ]
    
    The reference counting issue happens in one exception handling path of
    nouveau_svmm_bind(). When cli->svm.svmm is null, the function forgets
    to decrease the refcount of mm increased by get_task_mm(), causing a
    refcount leak.
    
    Fix this issue by using mmput() to decrease the refcount in the
    exception handling path.
    
    Also, the function forgets to do check against null when get mm
    by get_task_mm().
    
    Fix this issue by adding null check after get mm by get_task_mm().
    
    Signed-off-by: Chenyuan Mi <cymi20@fudan.edu.cn>
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Fixes: 822cab6150d3 ("drm/nouveau/svm: check for SVM initialized before migrating")
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Ben Skeggs <bskeggs@redhat.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210907122633.16665-1-cymi20@fudan.edu.cn
    Link: https://gitlab.freedesktop.org/drm/nouveau/-/merge_requests/14
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee8a3ae48a94763fe446349614a11f3cd6b90f43
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Oct 31 16:31:35 2021 +0100

    ACPI: PMIC: Fix intel_pmic_regs_handler() read accesses
    
    [ Upstream commit 009a789443fe4c8e6b1ecb7c16b4865c026184cd ]
    
    The handling of PMIC register reads through writing 0 to address 4
    of the OpRegion is wrong. Instead of returning the read value
    through the value64, which is a no-op for function == ACPI_WRITE calls,
    store the value and then on a subsequent function == ACPI_READ with
    address == 3 (the address for the value field of the OpRegion)
    return the stored value.
    
    This has been tested on a Xiaomi Mi Pad 2 and makes the ACPI battery dev
    there mostly functional (unfortunately there are still other issues).
    
    Here are the SET() / GET() functions of the PMIC ACPI device,
    which use this OpRegion, which clearly show the new behavior to
    be correct:
    
    OperationRegion (REGS, 0x8F, Zero, 0x50)
    Field (REGS, ByteAcc, NoLock, Preserve)
    {
        CLNT,   8,
        SA,     8,
        OFF,    8,
        VAL,    8,
        RWM,    8
    }
    
    Method (GET, 3, Serialized)
    {
        If ((AVBE == One))
        {
            CLNT = Arg0
            SA = Arg1
            OFF = Arg2
            RWM = Zero
            If ((AVBG == One))
            {
                GPRW = Zero
            }
        }
    
        Return (VAL) /* \_SB_.PCI0.I2C7.PMI5.VAL_ */
    }
    
    Method (SET, 4, Serialized)
    {
        If ((AVBE == One))
        {
            CLNT = Arg0
            SA = Arg1
            OFF = Arg2
            VAL = Arg3
            RWM = One
            If ((AVBG == One))
            {
                GPRW = One
            }
        }
    }
    
    Fixes: 0afa877a5650 ("ACPI / PMIC: intel: add REGS operation region support")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d83832d4a838e94282205b565c9c411d00ebceee
Author: Brett Creeley <brett.creeley@intel.com>
Date:   Thu Sep 9 14:38:08 2021 -0700

    ice: Fix not stopping Tx queues for VFs
    
    [ Upstream commit b385cca47363316c6d9a74ae9db407bbc281f815 ]
    
    When a VF is removed and/or reset its Tx queues need to be
    stopped from the PF. This is done by calling the ice_dis_vf_qs()
    function, which calls ice_vsi_stop_lan_tx_rings(). Currently
    ice_dis_vf_qs() is protected by the VF state bit ICE_VF_STATE_QS_ENA.
    Unfortunately, this is causing the Tx queues to not be disabled in some
    cases and when the VF tries to re-enable/reconfigure its Tx queues over
    virtchnl the op is failing. This is because a VF can be reset and/or
    removed before the ICE_VF_STATE_QS_ENA bit is set, but the Tx queues
    were already configured via ice_vsi_cfg_single_txq() in the
    VIRTCHNL_OP_CONFIG_VSI_QUEUES op. However, the ICE_VF_STATE_QS_ENA bit
    is set on a successful VIRTCHNL_OP_ENABLE_QUEUES, which will always
    happen after the VIRTCHNL_OP_CONFIG_VSI_QUEUES op.
    
    This was causing the following error message when loading the ice
    driver, creating VFs, and modifying VF trust in an endless loop:
    
    [35274.192484] ice 0000:88:00.0: Failed to set LAN Tx queue context, error: ICE_ERR_PARAM
    [35274.193074] ice 0000:88:00.0: VF 0 failed opcode 6, retval: -5
    [35274.193640] iavf 0000:88:01.0: PF returned error -5 (IAVF_ERR_PARAM) to our request 6
    
    Fix this by always calling ice_dis_vf_qs() and silencing the error
    message in ice_vsi_stop_tx_ring() since the calling code ignores the
    return anyway. Also, all other places that call ice_vsi_stop_tx_ring()
    catch the error, so this doesn't affect those flows since there was no
    change to the values the function returns.
    
    Other solutions were considered (i.e. tracking which VF queues had been
    "started/configured" in VIRTCHNL_OP_CONFIG_VSI_QUEUES, but it seemed
    more complicated than it was worth. This solution also brings in the
    chance for other unexpected conditions due to invalid state bit checks.
    So, the proposed solution seemed like the best option since there is no
    harm in failing to stop Tx queues that were never started.
    
    This issue can be seen using the following commands:
    
    for i in {0..50}; do
            rmmod ice
            modprobe ice
    
            sleep 1
    
            echo 1 > /sys/class/net/ens785f0/device/sriov_numvfs
            echo 1 > /sys/class/net/ens785f1/device/sriov_numvfs
    
            ip link set ens785f1 vf 0 trust on
            ip link set ens785f0 vf 0 trust on
    
            sleep 2
    
            echo 0 > /sys/class/net/ens785f0/device/sriov_numvfs
            echo 0 > /sys/class/net/ens785f1/device/sriov_numvfs
            sleep 1
            echo 1 > /sys/class/net/ens785f0/device/sriov_numvfs
            echo 1 > /sys/class/net/ens785f1/device/sriov_numvfs
    
            ip link set ens785f1 vf 0 trust on
            ip link set ens785f0 vf 0 trust on
    done
    
    Fixes: 77ca27c41705 ("ice: add support for virtchnl_queue_select.[tx|rx]_queues bitmap")
    Signed-off-by: Brett Creeley <brett.creeley@intel.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 354ae5ca6ce17ed270650436f8449acecb032278
Author: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
Date:   Thu May 6 08:40:03 2021 -0700

    ice: Fix replacing VF hardware MAC to existing MAC filter
    
    [ Upstream commit ce572a5b88d5ca6737b5e23da9892792fd708ad3 ]
    
    VF was not able to change its hardware MAC address in case
    the new address was already present in the MAC filter list.
    Change the handling of VF add mac request to not return
    if requested MAC address is already present on the list
    and check if its hardware MAC needs to be updated in this case.
    
    Fixes: ed4c068d46f6 ("ice: Enable ip link show on the PF to display VF unicast MAC(s)")
    Signed-off-by: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
    Tested-by: Tony Brelinski <tony.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e04a7a84bb77f9cdf4475340fe931389bc72331c
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Tue Nov 2 10:12:18 2021 +0800

    net: vlan: fix a UAF in vlan_dev_real_dev()
    
    [ Upstream commit 563bcbae3ba233c275c244bfce2efe12938f5363 ]
    
    The real_dev of a vlan net_device may be freed after
    unregister_vlan_dev(). Access the real_dev continually by
    vlan_dev_real_dev() will trigger the UAF problem for the
    real_dev like following:
    
    ==================================================================
    BUG: KASAN: use-after-free in vlan_dev_real_dev+0xf9/0x120
    Call Trace:
     kasan_report.cold+0x83/0xdf
     vlan_dev_real_dev+0xf9/0x120
     is_eth_port_of_netdev_filter.part.0+0xb1/0x2c0
     is_eth_port_of_netdev_filter+0x28/0x40
     ib_enum_roce_netdev+0x1a3/0x300
     ib_enum_all_roce_netdevs+0xc7/0x140
     netdevice_event_work_handler+0x9d/0x210
    ...
    
    Freed by task 9288:
     kasan_save_stack+0x1b/0x40
     kasan_set_track+0x1c/0x30
     kasan_set_free_info+0x20/0x30
     __kasan_slab_free+0xfc/0x130
     slab_free_freelist_hook+0xdd/0x240
     kfree+0xe4/0x690
     kvfree+0x42/0x50
     device_release+0x9f/0x240
     kobject_put+0x1c8/0x530
     put_device+0x1b/0x30
     free_netdev+0x370/0x540
     ppp_destroy_interface+0x313/0x3d0
    ...
    
    Move the put_device(real_dev) to vlan_dev_free(). Ensure
    real_dev not be freed before vlan_dev unregistered.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: syzbot+e4df4e1389e28972e955@syzkaller.appspotmail.com
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fe164e7197b7e9cf214671f938aa4b37b0f577e
Author: Stafford Horne <shorne@gmail.com>
Date:   Wed Nov 3 20:19:33 2021 +0900

    openrisc: fix SMP tlb flush NULL pointer dereference
    
    [ Upstream commit 27dff9a9c247d4e38d82c2e7234914cfe8499294 ]
    
    Throughout the OpenRISC kernel port VMA is passed as NULL when flushing
    kernel tlb entries.  Somehow this was missed when I was testing
    c28b27416da9 ("openrisc: Implement proper SMP tlb flushing") and now the
    SMP kernel fails to completely boot.
    
    In OpenRISC VMA is used only to determine which cores need to have their
    TLB entries flushed.
    
    This patch updates the logic to flush tlbs on all cores when the VMA is
    passed as NULL.  Also, we update places VMA is passed as NULL to use
    flush_tlb_kernel_range instead.  Now, the only place VMA is passed as
    NULL is in the implementation of flush_tlb_kernel_range.
    
    Fixes: c28b27416da9 ("openrisc: Implement proper SMP tlb flushing")
    Reported-by: Jan Henrik Weinstock <jan.weinstock@rwth-aachen.de>
    Signed-off-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 628773a759d54e83bb967078c0ce359efbae1cc1
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Tue Nov 2 15:02:36 2021 -0700

    ethtool: fix ethtool msg len calculation for pause stats
    
    [ Upstream commit 1aabe578dd86e9f2867c4db4fba9a15f4ba1825d ]
    
    ETHTOOL_A_PAUSE_STAT_MAX is the MAX attribute id,
    so we need to subtract non-stats and add one to
    get a count (IOW -2+1 == -1).
    
    Otherwise we'll see:
    
      ethnl cmd 21: calculated reply length 40, but consumed 52
    
    Fixes: 9a27a33027f2 ("ethtool: add standard pause stats")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e78c267eb74e012063c185356c1dce62e045918c
Author: Maxim Kiselev <bigunclemax@gmail.com>
Date:   Mon Nov 1 18:23:41 2021 +0300

    net: davinci_emac: Fix interrupt pacing disable
    
    [ Upstream commit d52bcb47bdf971a59a2467975d2405fcfcb2fa19 ]
    
    This patch allows to use 0 for `coal->rx_coalesce_usecs` param to
    disable rx irq coalescing.
    
    Previously we could enable rx irq coalescing via ethtool
    (For ex: `ethtool -C eth0 rx-usecs 2000`) but we couldn't disable
    it because this part rejects 0 value:
    
           if (!coal->rx_coalesce_usecs)
                   return -EINVAL;
    
    Fixes: 84da2658a619 ("TI DaVinci EMAC : Implement interrupt pacing functionality.")
    Signed-off-by: Maxim Kiselev <bigunclemax@gmail.com>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Link: https://lore.kernel.org/r/20211101152343.4193233-1-bigunclemax@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 111f77594ddfe43224faac85e6b9fb40ce54262f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Oct 8 15:44:17 2021 +0800

    xen-pciback: Fix return in pm_ctrl_init()
    
    [ Upstream commit 4745ea2628bb43a7ec34b71763b5a56407b33990 ]
    
    Return NULL instead of passing to ERR_PTR while err is zero,
    this fix smatch warnings:
    drivers/xen/xen-pciback/conf_space_capability.c:163
     pm_ctrl_init() warn: passing zero to 'ERR_PTR'
    
    Fixes: a92336a1176b ("xen/pciback: Drop two backends, squash and cleanup some code.")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20211008074417.8260-1-yuehaibing@huawei.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de9721ee8ad30ddc625dea12dee849b8cff1ffcf
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 19 22:48:08 2021 +0200

    i2c: xlr: Fix a resource leak in the error handling path of 'xlr_i2c_probe()'
    
    [ Upstream commit 7f98960c046ee1136e7096aee168eda03aef8a5d ]
    
    A successful 'clk_prepare()' call should be balanced by a corresponding
    'clk_unprepare()' call in the error handling path of the probe, as already
    done in the remove function.
    
    More specifically, 'clk_prepare_enable()' is used, but 'clk_disable()' is
    also already called. So just the unprepare step has still to be done.
    
    Update the error handling path accordingly.
    
    Fixes: 75d31c2372e4 ("i2c: xlr: add support for Sigma Designs controller variant")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c3e204fb6bc035aa18188eaef069bb0c2480d9a
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Oct 26 21:56:40 2021 -0400

    NFSv4: Fix a regression in nfs_set_open_stateid_locked()
    
    [ Upstream commit 01d29f87fcfef38d51ce2b473981a5c1e861ac0a ]
    
    If we already hold open state on the client, yet the server gives us a
    completely different stateid to the one we already hold, then we
    currently treat it as if it were an out-of-sequence update, and wait for
    5 seconds for other updates to come in.
    This commit fixes the behaviour so that we immediately start processing
    of the new stateid, and then leave it to the call to
    nfs4_test_and_free_stateid() to decide what to do with the old stateid.
    
    Fixes: b4868b44c562 ("NFSv4: Wait for stateid updates after CLOSE/OPEN_DOWNGRADE")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0afb3bc53435b31fe66bb9305cdd8a3a80f181ca
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Oct 26 04:54:02 2021 -0700

    scsi: qla2xxx: Turn off target reset during issue_lip
    
    [ Upstream commit 0b7a9fd934a68ebfc1019811b7bdc1742072ad7b ]
    
    When user uses issue_lip to do link bounce, driver sends additional target
    reset to remote device before resetting the link. The target reset would
    affect other paths with active I/Os. This patch will remove the unnecessary
    target reset.
    
    Link: https://lore.kernel.org/r/20211026115412.27691-4-njavali@marvell.com
    Fixes: 5854771e314e ("[SCSI] qla2xxx: Add ISPFX00 specific bus reset routine")
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09595fd2cef53cc4e87d04d7387906bf54beb92c
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Oct 26 04:54:01 2021 -0700

    scsi: qla2xxx: Fix gnl list corruption
    
    [ Upstream commit c98c5daaa24b583cba1369b7d167f93c6ae7299c ]
    
    Current code does list element deletion and addition in and out of lock
    protection. This patch moves deletion behind lock.
    
    list_add double add: new=ffff9130b5eb89f8, prev=ffff9130b5eb89f8,
        next=ffff9130c6a715f0.
     ------------[ cut here ]------------
     kernel BUG at lib/list_debug.c:31!
     invalid opcode: 0000 [#1] SMP PTI
     CPU: 1 PID: 182395 Comm: kworker/1:37 Kdump: loaded Tainted: G W  OE
     --------- -  - 4.18.0-193.el8.x86_64 #1
     Hardware name: HP ProLiant DL160 Gen8, BIOS J03 02/10/2014
     Workqueue: qla2xxx_wq qla2x00_iocb_work_fn [qla2xxx]
     RIP: 0010:__list_add_valid+0x41/0x50
     Code: 85 94 00 00 00 48 39 c7 74 0b 48 39 d7 74 06 b8 01 00 00 00 c3 48 89 f2
     4c 89 c1 48 89 fe 48 c7 c7 60 83 ad 97 e8 4d bd ce ff <0f> 0b 0f 1f 00 66 2e
     0f 1f 84 00 00 00 00 00 48 8b 07 48 8b 57 08
     RSP: 0018:ffffaba306f47d68 EFLAGS: 00010046
     RAX: 0000000000000058 RBX: ffff9130b5eb8800 RCX: 0000000000000006
     RDX: 0000000000000000 RSI: 0000000000000096 RDI: ffff9130b7456a00
     RBP: ffff9130c6a70a58 R08: 000000000008d7be R09: 0000000000000001
     R10: 0000000000000000 R11: 0000000000000001 R12: ffff9130c6a715f0
     R13: ffff9130b5eb8824 R14: ffff9130b5eb89f8 R15: ffff9130b5eb89f8
     FS:  0000000000000000(0000) GS:ffff9130b7440000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007efcaaef11a0 CR3: 000000005200a002 CR4: 00000000000606e0
     Call Trace:
      qla24xx_async_gnl+0x113/0x3c0 [qla2xxx]
      ? qla2x00_iocb_work_fn+0x53/0x80 [qla2xxx]
      ? process_one_work+0x1a7/0x3b0
      ? worker_thread+0x30/0x390
      ? create_worker+0x1a0/0x1a0
      ? kthread+0x112/0x130
    
    Link: https://lore.kernel.org/r/20211026115412.27691-3-njavali@marvell.com
    Fixes: 726b85487067 ("qla2xxx: Add framework for async fabric discovery")
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbe31149e5a708e50eea1e69d6fd4643226e7769
Author: Quinn Tran <qutran@marvell.com>
Date:   Tue Oct 26 04:54:00 2021 -0700

    scsi: qla2xxx: Relogin during fabric disturbance
    
    [ Upstream commit bb2ca6b3f09ac20e8357d257d0557ab5ddf6adcd ]
    
    For RSCN of type "Area, Domain, or Fabric", which indicate a portion or
    entire fabric was disturbed, current driver does not set the scan_need flag
    to indicate a session was affected by the disturbance. This in turn can
    lead to I/O timeout and delay of relogin. Hence initiate relogin in the
    event of fabric disturbance.
    
    Link: https://lore.kernel.org/r/20211026115412.27691-2-njavali@marvell.com
    Fixes: 1560bafdff9e ("scsi: qla2xxx: Use complete switch scan for RSCN events")
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc3f207ed99ab47c9370301a4be69a75a188929e
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Aug 9 21:37:10 2021 -0700

    scsi: qla2xxx: Changes to support FCP2 Target
    
    [ Upstream commit 44c57f205876518b14ab2b4b5d88a181f41260bb ]
    
    Add changes to support FCP2 Target.
    
    Link: https://lore.kernel.org/r/20210810043720.1137-5-njavali@marvell.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba5eb0e44346fa672a34e661e6678d2d244383ec
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Tue Sep 7 10:49:04 2021 +0800

    ar7: fix kernel builds for compiler test
    
    [ Upstream commit 28b7ee33a2122569ac065cad578bf23f50cc65c3 ]
    
    TI AR7 Watchdog Timer is only build for 32bit.
    
    Avoid error like:
    In file included from drivers/watchdog/ar7_wdt.c:29:
    ./arch/mips/include/asm/mach-ar7/ar7.h: In function ‘ar7_is_titan’:
    ./arch/mips/include/asm/mach-ar7/ar7.h:111:24: error: implicit declaration of function ‘KSEG1ADDR’; did you mean ‘CKSEG1ADDR’? [-Werror=implicit-function-declaration]
      111 |  return (readl((void *)KSEG1ADDR(AR7_REGS_GPIO + 0x24)) & 0xffff) ==
          |                        ^~~~~~~~~
          |                        CKSEG1ADDR
    
    Fixes: da2a68b3eb47 ("watchdog: Enable COMPILE_TEST where possible")
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210907024904.4127611-1-liu.yun@linux.dev
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef9f7ab9ba207b909bffdeda6643cd6c14e8775b
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Mon Aug 9 18:20:31 2021 +0200

    watchdog: f71808e_wdt: fix inaccurate report in WDIOC_GETTIMEOUT
    
    [ Upstream commit 164483c735190775f29d0dcbac0363adc51a068d ]
    
    The fintek watchdog timer can configure timeouts of second granularity
    only up to 255 seconds. Beyond that, the timeout needs to be configured
    with minute granularity. WDIOC_GETTIMEOUT should report the actual
    timeout configured, not just echo back the timeout configured by the
    user. Do so.
    
    Fixes: 96cb4eb019ce ("watchdog: f71808e_wdt: new watchdog driver for Fintek F71808E and F71882FG")
    Suggested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Link: https://lore.kernel.org/r/5e17960fe8cc0e3cb2ba53de4730b75d9a0f33d5.1628525954.git-series.a.fatoum@pengutronix.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aaa64ee14ac97df8d35aa901c258937973c126ff
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Oct 2 17:02:23 2021 -0700

    m68k: set a default value for MEMORY_RESERVE
    
    [ Upstream commit 1aaa557b2db95c9506ed0981bc34505c32d6b62b ]
    
    'make randconfig' can produce a .config file with
    "CONFIG_MEMORY_RESERVE=" (no value) since it has no default.
    When a subsequent 'make all' is done, kconfig restarts the config
    and prompts for a value for MEMORY_RESERVE. This breaks
    scripting/automation where there is no interactive user input.
    
    Add a default value for MEMORY_RESERVE. (Any integer value will
    work here for kconfig.)
    
    Fixes a kconfig warning:
    
    .config:214:warning: symbol value '' invalid for MEMORY_RESERVE
    * Restart config...
    Memory reservation (MiB) (MEMORY_RESERVE) [] (NEW)
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2") # from beginning of git history
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: linux-m68k@lists.linux-m68k.org
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4cbf00e5ab8022f45ffc93c10feced1b2334892
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Oct 20 12:43:52 2021 -0500

    signal/sh: Use force_sig(SIGKILL) instead of do_group_exit(SIGKILL)
    
    [ Upstream commit ce0ee4e6ac99606f3945f4d47775544edc3f7985 ]
    
    Today the sh code allocates memory the first time a process uses
    the fpu.  If that memory allocation fails, kill the affected task
    with force_sig(SIGKILL) rather than do_group_exit(SIGKILL).
    
    Calling do_group_exit from an exception handler can potentially lead
    to dead locks as do_group_exit is not designed to be called from
    interrupt context.  Instead use force_sig(SIGKILL) to kill the
    userspace process.  Sending signals in general and force_sig in
    particular has been tested from interrupt context so there should be
    no problems.
    
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Rich Felker <dalias@libc.org>
    Cc: linux-sh@vger.kernel.org
    Fixes: 0ea820cf9bf5 ("sh: Move over to dynamically allocated FPU context.")
    Link: https://lkml.kernel.org/r/20211020174406.17889-6-ebiederm@xmission.com
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b04c17acf42ad96ade2c34d7892a6b0bd034b37f
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Sat Oct 23 15:41:01 2021 +0200

    dmaengine: dmaengine_desc_callback_valid(): Check for `callback_result`
    
    [ Upstream commit e7e1e880b114ca640a2f280b0d5d38aed98f98c6 ]
    
    Before the `callback_result` callback was introduced drivers coded their
    invocation to the callback in a similar way to:
    
            if (cb->callback) {
                    spin_unlock(&dma->lock);
                    cb->callback(cb->callback_param);
                    spin_lock(&dma->lock);
            }
    
    With the introduction of `callback_result` two helpers where introduced to
    transparently handle both types of callbacks. And drivers where updated to
    look like this:
    
            if (dmaengine_desc_callback_valid(cb)) {
                    spin_unlock(&dma->lock);
                    dmaengine_desc_callback_invoke(cb, ...);
                    spin_lock(&dma->lock);
            }
    
    dmaengine_desc_callback_invoke() correctly handles both `callback_result`
    and `callback`. But we forgot to update the dmaengine_desc_callback_valid()
    function to check for `callback_result`. As a result DMA descriptors that
    use the `callback_result` rather than `callback` don't have their callback
    invoked by drivers that follow the pattern above.
    
    Fix this by checking for both `callback` and `callback_result` in
    dmaengine_desc_callback_valid().
    
    Fixes: f067025bc676 ("dmaengine: add support to provide error result from a DMA transation")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20211023134101.28042-1-lars@metafoo.de
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bba31f3b1f43625496b42eb7bae534262ba3391e
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Oct 20 18:08:10 2021 +0200

    netfilter: nfnetlink_queue: fix OOB when mac header was cleared
    
    [ Upstream commit 5648b5e1169ff1d6d6a46c35c0b5fbebd2a5cbb2 ]
    
    On 64bit platforms the MAC header is set to 0xffff on allocation and
    also when a helper like skb_unset_mac_header() is called.
    
    dev_parse_header may call skb_mac_header() which assumes valid mac offset:
    
     BUG: KASAN: use-after-free in eth_header_parse+0x75/0x90
     Read of size 6 at addr ffff8881075a5c05 by task nf-queue/1364
     Call Trace:
      memcpy+0x20/0x60
      eth_header_parse+0x75/0x90
      __nfqnl_enqueue_packet+0x1a61/0x3380
      __nf_queue+0x597/0x1300
      nf_queue+0xf/0x40
      nf_hook_slow+0xed/0x190
      nf_hook+0x184/0x440
      ip_output+0x1c0/0x2a0
      nf_reinject+0x26f/0x700
      nfqnl_recv_verdict+0xa16/0x18b0
      nfnetlink_rcv_msg+0x506/0xe70
    
    The existing code only works if the skb has a mac header.
    
    Fixes: 2c38de4c1f8da7 ("netfilter: fix looped (broad|multi)cast's MAC handling")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41968262bb24772280a0b6fbc808cf740ae961d4
Author: Robert-Ionut Alexa <robert-ionut.alexa@nxp.com>
Date:   Fri Apr 23 12:01:51 2021 +0300

    soc: fsl: dpaa2-console: free buffer before returning from dpaa2_console_read
    
    [ Upstream commit 8120bd469f5525da229953c1197f2b826c0109f4 ]
    
    Free the kbuf buffer before returning from the dpaa2_console_read()
    function. The variable no longer goes out of scope, leaking the storage
    it points to.
    
    Fixes: c93349d8c170 ("soc: fsl: add DPAA2 console support")
    Signed-off-by: Robert-Ionut Alexa <robert-ionut.alexa@nxp.com>
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6caab6c96b67b0751b3ad7f4d14d6e298a3b3790
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Oct 19 16:45:09 2021 +0200

    auxdisplay: ht16k33: Fix frame buffer device blanking
    
    [ Upstream commit 840fe258332544aa7321921e1723d37b772af7a9 ]
    
    As the ht16k33 frame buffer sub-driver does not register an
    fb_ops.fb_blank() handler, blanking does not work:
    
        $ echo 1 > /sys/class/graphics/fb0/blank
        sh: write error: Invalid argument
    
    Fix this by providing a handler that always returns zero, to make sure
    blank events will be sent to the actual device handling the backlight.
    
    Reported-by: Robin van der Gracht <robin@protonic.nl>
    Suggested-by: Robin van der Gracht <robin@protonic.nl>
    Fixes: 8992da44c6805d53 ("auxdisplay: ht16k33: Driver for LED controller")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Miguel Ojeda <ojeda@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 178522aa755f009e050b002c6ee699c3c5bf4d0c
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Oct 19 16:45:08 2021 +0200

    auxdisplay: ht16k33: Connect backlight to fbdev
    
    [ Upstream commit 80f9eb70fd9276938f0a131f76d438021bfd8b34 ]
    
    Currently /sys/class/graphics/fb0/bl_curve is not accessible (-ENODEV),
    as the driver does not connect the backlight to the frame buffer device.
    Fix this moving backlight initialization up, and filling in
    fb_info.bl_dev.
    
    Fixes: 8992da44c6805d53 ("auxdisplay: ht16k33: Driver for LED controller")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reviewed-by: Robin van der Gracht <robin@protonic.nl>
    Signed-off-by: Miguel Ojeda <ojeda@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1d6a60ee00ceed18001fec3e6cbb9bc62b8b98d
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Oct 19 16:45:02 2021 +0200

    auxdisplay: img-ascii-lcd: Fix lock-up when displaying empty string
    
    [ Upstream commit afcb5a811ff3ab3969f09666535eb6018a160358 ]
    
    While writing an empty string to a device attribute is a no-op, and thus
    does not need explicit safeguards, the user can still write a single
    newline to an attribute file:
    
        echo > .../message
    
    If that happens, img_ascii_lcd_display() trims the newline, yielding an
    empty string, and causing an infinite loop in img_ascii_lcd_scroll().
    
    Fix this by adding a check for empty strings.  Clear the display in case
    one is encountered.
    
    Fixes: 0cad855fbd083ee5 ("auxdisplay: img-ascii-lcd: driver for simple ASCII LCD displays")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Miguel Ojeda <ojeda@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e1709b2a07ad18742808a7088468b0b3477aa96
Author: Alexey Gladkov <legion@kernel.org>
Date:   Thu Oct 14 18:02:30 2021 +0200

    Fix user namespace leak
    
    [ Upstream commit d5f458a979650e5ed37212f6134e4ee2b28cb6ed ]
    
    Fixes: 61ca2c4afd9d ("NFS: Only reference user namespace from nfs4idmap struct instead of cred")
    Signed-off-by: Alexey Gladkov <legion@kernel.org>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90e7415221e1aa91e0ed676879e3f31125058d11
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Oct 5 14:05:02 2021 -0400

    NFS: Fix an Oops in pnfs_mark_request_commit()
    
    [ Upstream commit f0caea8882a7412a2ad4d8274f0280cdf849c9e2 ]
    
    Olga reports seeing the following Oops when doing O_DIRECT writes to a
    pNFS flexfiles server:
    
    Oops: 0000 [#1] SMP PTI
    CPU: 1 PID: 234186 Comm: kworker/u8:1 Not tainted 5.15.0-rc4+ #4
    Hardware name: Red Hat KVM/RHEL-AV, BIOS 1.13.0-2.module+el8.3.0+7353+9de0a3cc 04/01/2014
    Workqueue: nfsiod rpc_async_release [sunrpc]
    RIP: 0010:nfs_mark_request_commit+0x12/0x30 [nfs]
    Code: ff ff be 03 00 00 00 e8 ac 34 83 eb e9 29 ff ff
    ff e8 22 bc d7 eb 66 90 0f 1f 44 00 00 48 85 f6 74 16 48 8b 42 10 48
    8b 40 18 <48> 8b 40 18 48 85 c0 74 05 e9 70 fc 15 ec 48 89 d6 e9 68 ed
    ff ff
    RSP: 0018:ffffa82f0159fe00 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: ffff8f3393141880 RCX: 0000000000000000
    RDX: ffffa82f0159fe08 RSI: ffff8f3381252500 RDI: ffff8f3393141880
    RBP: ffff8f33ac317c00 R08: 0000000000000000 R09: ffff8f3487724cb0
    R10: 0000000000000008 R11: 0000000000000001 R12: 0000000000000001
    R13: ffff8f3485bccee0 R14: ffff8f33ac317c10 R15: ffff8f33ac317cd8
    FS:  0000000000000000(0000) GS:ffff8f34fbc80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000018 CR3: 0000000122120006 CR4: 0000000000770ee0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     nfs_direct_write_completion+0x13b/0x250 [nfs]
     rpc_free_task+0x39/0x60 [sunrpc]
     rpc_async_release+0x29/0x40 [sunrpc]
     process_one_work+0x1ce/0x370
     worker_thread+0x30/0x380
     ? process_one_work+0x370/0x370
     kthread+0x11a/0x140
     ? set_kthread_struct+0x40/0x40
     ret_from_fork+0x22/0x30
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Fixes: 9c455a8c1e14 ("NFS/pNFS: Clean up pNFS commit operations")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10f21087173651d41ea308b4a0c3a13188418aaa
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Oct 4 15:37:42 2021 -0400

    NFS: Fix up commit deadlocks
    
    [ Upstream commit 133a48abf6ecc535d7eddc6da1c3e4c972445882 ]
    
    If O_DIRECT bumps the commit_info rpcs_out field, then that could lead
    to fsync() hangs. The fix is to ensure that O_DIRECT calls
    nfs_commit_end().
    
    Fixes: 723c921e7dfc ("sched/wait, fs/nfs: Convert wait_on_atomic_t() usage to the new wait_var_event() API")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91e43a8500f40108c82e9c82d84571b638529f15
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Thu Oct 7 14:12:28 2021 +0300

    dmaengine: at_xdmac: fix AT_XDMAC_CC_PERID() macro
    
    [ Upstream commit 320c88a3104dc955f928a1eecebd551ff89530c0 ]
    
    AT_XDMAC_CC_PERID() should be used to setup bits 24..30 of XDMAC_CC
    register. Using it without parenthesis around 0x7f & (i) will lead to
    setting all the time zero for bits 24..30 of XDMAC_CC as the << operator
    has higher precedence over bitwise &. Thus, add paranthesis around
    0x7f & (i).
    
    Fixes: 15a03850ab8f ("dmaengine: at_xdmac: fix macro typo")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211007111230.2331837-3-claudiu.beznea@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 038dfd67d375b10c9dc6d67dd4db3f1e1e45ce5c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Oct 12 13:10:28 2021 +0300

    rtc: rv3032: fix error handling in rv3032_clkout_set_rate()
    
    [ Upstream commit c3336b8ac6091df60a5c1049a8c685d0b947cc61 ]
    
    Do not call rv3032_exit_eerd() if the enter function fails but don't
    forget to call the exit when the enter succeeds.
    
    Fixes: 2eeaa532acca ("rtc: rv3032: Add a driver for Microcrystal RV-3032")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20211012101028.GT2083@kadam
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5061e102346e30bb71342c0549042a891eefef17
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Sep 4 13:37:32 2021 +0200

    remoteproc: Fix a memory leak in an error handling path in 'rproc_handle_vdev()'
    
    [ Upstream commit 0374a4ea7269645c46c3eb288526ea072fa19e79 ]
    
    If 'copy_dma_range_map() fails, the memory allocated for 'rvdev' will leak.
    Move the 'copy_dma_range_map()' call after the device registration so
    that 'rproc_rvdev_release()' can be called to free some resources.
    
    Also, branch to the error handling path if 'copy_dma_range_map()' instead
    of a direct return to avoid some other leaks.
    
    Fixes: e0d072782c73 ("dma-mapping: introduce DMA range map, supplanting dma_pfn_offset")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Jim Quinlan <james.quinlan@broadcom.com>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/e6d0dad6620da4fdf847faa903f79b735d35f262.1630755377.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36104e1f71ddb0fb39c49a7bbc375894085acb26
Author: Zev Weiss <zev@bewilderbeest.net>
Date:   Thu Oct 14 13:39:52 2021 -0700

    mtd: core: don't remove debugfs directory if device is in use
    
    [ Upstream commit c13de2386c78e890d4ae6f01a85eefd0b293fb08 ]
    
    Previously, if del_mtd_device() failed with -EBUSY due to a non-zero
    usecount, a subsequent call to attempt the deletion again would try to
    remove a debugfs directory that had already been removed and panic.
    With this change the second call can instead proceed safely.
    
    Fixes: e8e3edb95ce6 ("mtd: create per-device and module-scope debugfs entries")
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211014203953.5424-1-zev@bewilderbeest.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b73c025bfcf462b467ec176ddbcbbb47efdef8a
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Sat Sep 18 09:22:59 2021 +0900

    PCI: uniphier: Serialize INTx masking/unmasking and fix the bit operation
    
    [ Upstream commit 4caab28a6215da5f3c1b505ff08810bc6acfe365 ]
    
    The condition register PCI_RCV_INTX is used in irq_mask() and irq_unmask()
    callbacks. Accesses to register can occur at the same time without a lock.
    Add a lock into each callback to prevent the issue.
    
    And INTX mask and unmask fields in PCL_RCV_INTX register should only be
    set/reset for each bit. Clearing by PCL_RCV_INTX_ALL_MASK should be
    removed.
    
    INTX status fields in PCL_RCV_INTX register only indicates each INTX
    interrupt status, so the handler can't clear by writing 1 to the field.
    The status is expected to be cleared by the interrupt origin.
    The ack function has no meaning, so should remove it.
    
    Suggested-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/1631924579-24567-1-git-send-email-hayashi.kunihiko@socionext.com
    Fixes: 7e6d5cd88a6f ("PCI: uniphier: Add UniPhier PCIe host controller support")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Pali Rohár <pali@kernel.org>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2ff7a8b079d4b996c28611d48fc4b0746bee77d
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Fri Jul 9 17:45:29 2021 +0300

    mtd: spi-nor: hisi-sfc: Remove excessive clk_disable_unprepare()
    
    [ Upstream commit 78e4d342187625585932bb437ec26e1060f7fc6f ]
    
    hisi_spi_nor_probe() invokes clk_disable_unprepare() on all paths after
    successful call of clk_prepare_enable(). Besides, the clock is enabled by
    hispi_spi_nor_prep() and disabled by hispi_spi_nor_unprep(). So at remove
    time it is not possible to have the clock enabled. The patch removes
    excessive clk_disable_unprepare() from hisi_spi_nor_remove().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: e523f11141bd ("mtd: spi-nor: add hisilicon spi-nor flash controller driver")
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Reviewed-by: Pratyush Yadav <p.yadav@ti.com>
    Link: https://lore.kernel.org/r/20210709144529.31379-1-novikov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4eb6849909a8b444d79efceb52d4ae454e9cdc5
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Tue Mar 9 00:00:20 2021 -0800

    fs: orangefs: fix error return code of orangefs_revalidate_lookup()
    
    [ Upstream commit 4c2b46c824a78fc8190d8eafaaea5a9078fe7479 ]
    
    When op_alloc() returns NULL to new_op, no error return code of
    orangefs_revalidate_lookup() is assigned.
    To fix this bug, ret is assigned with -ENOMEM in this case.
    
    Fixes: 8bb8aefd5afb ("OrangeFS: Change almost all instances of the string PVFS2 to OrangeFS.")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Mike Marshall <hubcap@omnibond.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e7b08ebf40fd1283c1d005362fe2a81902e027a
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Oct 4 15:44:16 2021 -0400

    NFS: Fix deadlocks in nfs_scan_commit_list()
    
    [ Upstream commit 64a93dbf25d3a1368bb58ddf0f61d0a92d7479e3 ]
    
    Partially revert commit 2ce209c42c01 ("NFS: Wait for requests that are
    locked on the commit list"), since it can lead to deadlocks between
    commit requests and nfs_join_page_group().
    For now we should assume that any locked requests on the commit list are
    either about to be removed and committed by another task, or the writes
    they describe are about to be retransmitted. In either case, we should
    not need to worry.
    
    Fixes: 2ce209c42c01 ("NFS: Wait for requests that are locked on the commit list")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14943891857da24abe5bba4fa132986eb7842713
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Oct 8 15:46:52 2021 +0800

    opp: Fix return in _opp_add_static_v2()
    
    [ Upstream commit 27ff8187f13ecfec8a26fb1928e906f46f326cc5 ]
    
    Fix sparse warning:
    drivers/opp/of.c:924 _opp_add_static_v2() warn: passing zero to 'ERR_PTR'
    
    For duplicate OPPs 'ret' be set to zero.
    
    Fixes: deac8703da5f ("PM / OPP: _of_add_opp_table_v2(): increment count only if OPP is added")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bea3213f191a36e34e652c0d964fc3977886a408
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:43 2021 +0200

    PCI: aardvark: Fix preserving PCI_EXP_RTCTL_CRSSVE flag on emulated bridge
    
    [ Upstream commit d419052bc6c60fa4ab2b5a51d5f1e55a66e2b4ff ]
    
    Commit 43f5c77bcbd2 ("PCI: aardvark: Fix reporting CRS value") started
    using CRSSVE flag for handling CRS responses.
    
    PCI_EXP_RTCTL_CRSSVE flag is stored only in emulated config space buffer
    and there is handler for PCI_EXP_RTCTL register. So every read operation
    from config space automatically clears CRSSVE flag as it is not defined in
    PCI_EXP_RTCTL read handler.
    
    Fix this by reading current CRSSVE bit flag from emulated space buffer and
    appending it to PCI_EXP_RTCTL read response.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-5-kabel@kernel.org
    Fixes: 43f5c77bcbd2 ("PCI: aardvark: Fix reporting CRS value")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec6dba3ffe3fff8297d88edc983900352a10ba4d
Author: Marek Behún <kabel@kernel.org>
Date:   Tue Oct 5 20:09:42 2021 +0200

    PCI: aardvark: Don't spam about PIO Response Status
    
    [ Upstream commit 464de7e7fff767e87429cd7be09c4f2cb50a6ccb ]
    
    Use dev_dbg() instead of dev_err() in advk_pcie_check_pio_status().
    
    For example CRS is not an error status, it just says that the request
    should be retried.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-4-kabel@kernel.org
    Fixes: 8c39d710363c1 ("PCI: aardvark: Add Aardvark PCI host controller driver")
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e548581fe5b48730d814916bd6bb8f8d8b5375a
Author: Alex Xu (Hello71) <alex_y_xu@yahoo.ca>
Date:   Thu Oct 7 02:37:06 2021 -0400

    drm/plane-helper: fix uninitialized variable reference
    
    [ Upstream commit 7be28bd73f23e53d6e7f5fe891ba9503fc0c7210 ]
    
    drivers/gpu/drm/drm_plane_helper.c: In function 'drm_primary_helper_update':
    drivers/gpu/drm/drm_plane_helper.c:113:32: error: 'visible' is used uninitialized [-Werror=uninitialized]
      113 |         struct drm_plane_state plane_state = {
          |                                ^~~~~~~~~~~
    drivers/gpu/drm/drm_plane_helper.c:178:14: note: 'visible' was declared here
      178 |         bool visible;
          |              ^~~~~~~
    cc1: all warnings being treated as errors
    
    visible is an output, not an input. in practice this use might turn out
    OK but it's still UB.
    
    Fixes: df86af9133b4 ("drm/plane-helper: Add drm_plane_helper_check_state()")
    Reviewed-by: Simon Ser <contact@emersion.fr>
    Signed-off-by: Alex Xu (Hello71) <alex_y_xu@yahoo.ca>
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211007063706.305984-1-alex_y_xu@yahoo.ca
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e94c59b64e6ceb7b78fcdcb9a927f7b07461fff4
Author: Baptiste Lepers <baptiste.lepers@gmail.com>
Date:   Mon Sep 6 11:59:24 2021 +1000

    pnfs/flexfiles: Fix misplaced barrier in nfs4_ff_layout_prepare_ds
    
    [ Upstream commit a2915fa06227b056a8f9b0d79b61dca08ad5cfc6 ]
    
    _nfs4_pnfs_v3/v4_ds_connect do
       some work
       smp_wmb
       ds->ds_clp = clp;
    
    And nfs4_ff_layout_prepare_ds currently does
       smp_rmb
       if(ds->ds_clp)
          ...
    
    This patch places the smp_rmb after the if. This ensures that following
    reads only happen once nfs4_ff_layout_prepare_ds has checked that data
    has been properly initialized.
    
    Fixes: d67ae825a59d6 ("pnfs/flexfiles: Add the FlexFile Layout Driver")
    Signed-off-by: Baptiste Lepers <baptiste.lepers@gmail.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ac076ce719321901ebd2df30fba690671adbd7e
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Sep 29 08:12:53 2021 -0400

    NFS: Fix dentry verifier races
    
    [ Upstream commit cec08f452a687fce9dfdf47946d00a1d12a8bec5 ]
    
    If the directory changed while we were revalidating the dentry, then
    don't update the dentry verifier. There is no value in setting the
    verifier to an older value, and we could end up overwriting a more up to
    date verifier from a parallel revalidation.
    
    Fixes: efeda80da38d ("NFSv4: Fix revalidation of dentries with delegations")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Tested-by: Benjamin Coddington <bcodding@redhat.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d438dbf7342f5cd231b8009bc30076db0f5b925
Author: Kewei Xu <kewei.xu@mediatek.com>
Date:   Fri Sep 17 18:14:10 2021 +0800

    i2c: mediatek: fixing the incorrect register offset
    
    [ Upstream commit b8228aea5a19d5111a7bf44f7de6749d1f5d487a ]
    
    The reason for the modification here is that the previous
    offset information is incorrect, OFFSET_DEBUGSTAT = 0xE4 is
    the correct value.
    
    Fixes: 25708278f810 ("i2c: mediatek: Add i2c support for MediaTek MT8183")
    Signed-off-by: Kewei Xu <kewei.xu@mediatek.com>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Qii Wang <qii.wang@mediatek.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3492c4a92644cb54ec2c6daff6c428aebfc36dc
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Tue Sep 14 12:30:32 2021 -0400

    nfsd: don't alloc under spinlock in rpc_parse_scope_id
    
    [ Upstream commit 9b6e27d01adcec58e046c624874f8a124e8b07ec ]
    
    Dan Carpenter says:
    
      The patch d20c11d86d8f: "nfsd: Protect session creation and client
      confirm using client_lock" from Jul 30, 2014, leads to the following
      Smatch static checker warning:
    
            net/sunrpc/addr.c:178 rpc_parse_scope_id()
            warn: sleeping in atomic context
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: d20c11d86d8f ("nfsd: Protect session creation and client...")
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 602ab1fd40e2c5cb8d3664379da967528833844c
Author: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Date:   Mon Jul 12 14:39:12 2021 +0200

    rpmsg: Fix rpmsg_create_ept return when RPMSG config is not defined
    
    [ Upstream commit 537d3af1bee8ad1415fda9b622d1ea6d1ae76dfa ]
    
    According to the description of the rpmsg_create_ept in rpmsg_core.c
    the function should return NULL on error.
    
    Fixes: 2c8a57088045 ("rpmsg: Provide function stubs for API")
    Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20210712123912.10672-1-arnaud.pouliquen@foss.st.com
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 851b622e7b4f28c0fdbc543fadf4256e29927b04
Author: Tom Rix <trix@redhat.com>
Date:   Sun Oct 4 07:24:22 2020 -0700

    apparmor: fix error check
    
    [ Upstream commit d108370c644b153382632b3e5511ade575c91c86 ]
    
    clang static analysis reports this representative problem:
    
    label.c:1463:16: warning: Assigned value is garbage or undefined
            label->hname = name;
                         ^ ~~~~
    
    In aa_update_label_name(), this the problem block of code
    
            if (aa_label_acntsxprint(&name, ...) == -1)
                    return res;
    
    On failure, aa_label_acntsxprint() has a more complicated return
    that just -1.  So check for a negative return.
    
    It was also noted that the aa_label_acntsxprint() main comment refers
    to a nonexistent parameter, so clean up the comment.
    
    Fixes: f1bd904175e8 ("apparmor: add the base fns() for domain labels")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c9c33ea4cabd76348bdd006ca9b6bf55c217733
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Oct 31 16:25:22 2021 +0100

    power: supply: bq27xxx: Fix kernel crash on IRQ handler register error
    
    [ Upstream commit cdf10ffe8f626d8a2edc354abf063df0078b2d71 ]
    
    When registering the IRQ handler fails, do not just return the error code,
    this will free the devm_kzalloc()-ed data struct while leaving the queued
    work queued and the registered power_supply registered with both of them
    now pointing to free-ed memory, resulting in various kernel crashes
    soon afterwards.
    
    Instead properly tear-down things on IRQ handler register errors.
    
    Fixes: 703df6c09795 ("power: bq27xxx_battery: Reorganize I2C into a module")
    Cc: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbdf0f2207596c0d48f5db9d70f6e4c5a299d761
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Oct 29 11:58:16 2021 +0200

    mips: cm: Convert to bitfield API to fix out-of-bounds access
    
    [ Upstream commit 18b8f5b6fc53d097cadb94a93d8d6566ba88e389 ]
    
    mips_cm_error_report() extracts the cause and other cause from the error
    register using shifts.  This works fine for the former, as it is stored
    in the top bits, and the shift will thus remove all non-related bits.
    However, the latter is stored in the bottom bits, hence thus needs masking
    to get rid of non-related bits.  Without such masking, using it as an
    index into the cm2_causes[] array will lead to an out-of-bounds access,
    probably causing a crash.
    
    Fix this by using FIELD_GET() instead.  Bite the bullet and convert all
    MIPS CM handling to the bitfield API, to improve readability and safety.
    
    Fixes: 3885c2b463f6a236 ("MIPS: CM: Add support for reporting CM cache errors")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8447cb14a125ba25255e4d6b380ce7a14a3fecd
Author: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
Date:   Wed Oct 20 19:23:23 2021 +0800

    virtio_ring: check desc == NULL when using indirect with packed
    
    [ Upstream commit fc6d70f40b3d0b3219e2026d05be0409695f620d ]
    
    When using indirect with packed, we don't check for allocation failures.
    This patch checks that and fall back on direct.
    
    Fixes: 1ce9e6055fa0 ("virtio_ring: introduce packed ring support")
    Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20211020112323.67466-3-xuanzhuo@linux.alibaba.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80e6643393b7c44342d2347281c98db6069ee466
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Thu Oct 28 15:09:01 2021 +0100

    ASoC: cs42l42: Correct configuring of switch inversion from ts-inv
    
    [ Upstream commit 778a0cbef5fb76bf506f84938517bb77e7a1c478 ]
    
    The setting from the cirrus,ts-inv property should be applied to the
    TIP_SENSE_INV bit, as this is the one that actually affects the jack
    detect block. The TS_INV bit only swaps the meaning of the PLUG and
    UNPLUG interrupts and should always be 1 for the interrupts to have
    the normal meaning.
    
    Due to some misunderstanding the driver had been implemented to
    configure the TS_INV bit based on the jack switch polarity. This made
    the interrupts behave the correct way around, but left the jack detect
    block, button detect and analogue circuits always interpreting an open
    switch as unplugged.
    
    The signal chain inside the codec is:
    
    SENSE pin -> TIP_SENSE_INV -> TS_INV -> (invert) -> interrupts
                      |
                      v
                 Jack detect,
              button detect and
                analog control
    
    As the TIP_SENSE_INV already performs the necessary inversion the
    TS_INV bit never needs to change. It must always be 1 to yield the
    expected interrupt behaviour.
    
    Some extra confusion has arisen because of the additional invert in the
    interrupt path, meaning that a value applied to the TS_INV bit produces
    the opposite effect of applying it to the TIP_SENSE_INV bit. The ts-inv
    property has therefore always had the opposite effect to what might be
    expected (0 = inverted, 1 = not inverted). To maintain the meaning of
    the ts-inv property it must be inverted when applied to TIP_SENSE_INV.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Fixes: 2c394ca79604 ("ASoC: Add support for CS42L42 codec")
    Link: https://lore.kernel.org/r/20211028140902.11786-3-rf@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb0fdd9aae01df8444a490b570770ea332a34322
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Mon Apr 26 16:53:02 2021 +0100

    ASoC: cs42l42: Use device_property API instead of of_property
    
    [ Upstream commit ab78322a0dc8e5e472ff66ac7e18c94acc17587f ]
    
    Use the device_property APIs so that the code will work on devicetree
    and ACPI systems.
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Signed-off-by: Lucas Tanure <tanureal@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20210426155303.853236-2-tanureal@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef9d007a91f556e9b5b46477dfa27cc91d5baca9
Author: Lucas Tanure <tanureal@opensource.cirrus.com>
Date:   Sat Mar 6 18:55:45 2021 +0000

    ASoC: cs42l42: Disable regulators if probe fails
    
    [ Upstream commit 1abca8e1c77bd9c5f5c0bed21c5b075b6852a178 ]
    
    In case of cs42l42_i2c_probe() fail, the regulators were left enabled.
    
    Signed-off-by: Lucas Tanure <tanureal@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20210306185553.62053-8-tanureal@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0faad6e9d56ef6ef95a6798a6ce3ef2b9d70709
Author: Bixuan Cui <cuibixuan@linux.alibaba.com>
Date:   Thu Oct 28 15:28:22 2021 +0800

    powerpc/44x/fsp2: add missing of_node_put
    
    [ Upstream commit 290fe8aa69ef5c51c778c0bb33f8ef0181c769f5 ]
    
    Early exits from for_each_compatible_node() should decrement the
    node reference counter.  Reported by Coccinelle:
    
    ./arch/powerpc/platforms/44x/fsp2.c:206:1-25: WARNING: Function
    "for_each_compatible_node" should have of_node_put() before return
    around line 218.
    
    Fixes: 7813043e1bbc ("powerpc/44x/fsp2: Add irq error handlers")
    Signed-off-by: Bixuan Cui <cuibixuan@linux.alibaba.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1635406102-88719-1-git-send-email-cuibixuan@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4310970d0b4db03e769dcfc8e3f756ce4b789a01
Author: Andrej Shadura <andrew.shadura@collabora.co.uk>
Date:   Tue Oct 19 17:29:17 2021 +0200

    HID: u2fzero: properly handle timeouts in usb_submit_urb
    
    [ Upstream commit 43775e62c4b784f44a159e13ba80e6146a42d502 ]
    
    The wait_for_completion_timeout function returns 0 if timed out or a
    positive value if completed. Hence, "less than zero" comparison always
    misses timeouts and doesn't kill the URB as it should, leading to
    re-sending it while it is active.
    
    Fixes: 42337b9d4d95 ("HID: add driver for U2F Zero built-in LED and RNG")
    Signed-off-by: Andrej Shadura <andrew.shadura@collabora.co.uk>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2f0bff411f5245ecd01061e5c17eff461ff6625
Author: Andrej Shadura <andrew.shadura@collabora.co.uk>
Date:   Tue Oct 19 17:29:16 2021 +0200

    HID: u2fzero: clarify error check and length calculations
    
    [ Upstream commit b7abf78b7a6c4a29a6e0ba0bb883fe44a2f3d693 ]
    
    The previous commit fixed handling of incomplete packets but broke error
    handling: offsetof returns an unsigned value (size_t), but when compared
    against the signed return value, the return value is interpreted as if
    it were unsigned, so negative return values are never less than the
    offset.
    
    To make the code easier to read, calculate the minimal packet length
    once and separately, and assign it to a signed int variable to eliminate
    unsigned math and the need for type casts. It then becomes immediately
    obvious how the actual data length is calculated and why the return
    value cannot be less than the minimal length.
    
    Fixes: 22d65765f211 ("HID: u2fzero: ignore incomplete packets without data")
    Fixes: 42337b9d4d95 ("HID: add driver for U2F Zero built-in LED and RNG")
    Signed-off-by: Andrej Shadura <andrew.shadura@collabora.co.uk>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26be378079fc335d8ecb2113b58788d141b035df
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Mon Oct 11 14:27:11 2021 +0300

    clk: at91: sam9x60-pll: use DIV_ROUND_CLOSEST_ULL
    
    [ Upstream commit f12d028b743bb6136da60b17228a1b6162886444 ]
    
    Use DIV_ROUND_CLOSEST_ULL() to avoid any inconsistency b/w the rate
    computed in sam9x60_frac_pll_recalc_rate() and the one computed in
    sam9x60_frac_pll_compute_mul_frac().
    
    Fixes: 43b1bb4a9b3e1 ("clk: at91: clk-sam9x60-pll: re-factor to support plls with multiple outputs")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/20211011112719.3951784-8-claudiu.beznea@microchip.com
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2886010a8d1a87e4c667f0670839a374ec34a71
Author: Anssi Hannula <anssi.hannula@bitwise.fi>
Date:   Tue Oct 26 13:27:41 2021 +0300

    serial: xilinx_uartps: Fix race condition causing stuck TX
    
    [ Upstream commit 88b20f84f0fe47409342669caf3e58a3fc64c316 ]
    
    xilinx_uartps .start_tx() clears TXEMPTY when enabling TXEMPTY to avoid
    any previous TXEVENT event asserting the UART interrupt. This clear
    operation is done immediately after filling the TX FIFO.
    
    However, if the bytes inserted by cdns_uart_handle_tx() are consumed by
    the UART before the TXEMPTY is cleared, the clear operation eats the new
    TXEMPTY event as well, causing cdns_uart_isr() to never receive the
    TXEMPTY event. If there are bytes still queued in circbuf, TX will get
    stuck as they will never get transferred to FIFO (unless new bytes are
    queued to circbuf in which case .start_tx() is called again).
    
    While the racy missed TXEMPTY occurs fairly often with short data
    sequences (e.g. write 1 byte), in those cases circbuf is usually empty
    so no action on TXEMPTY would have been needed anyway. On the other
    hand, longer data sequences make the race much more unlikely as UART
    takes longer to consume the TX FIFO. Therefore it is rare for this race
    to cause visible issues in general.
    
    Fix the race by clearing the TXEMPTY bit in ISR *before* filling the
    FIFO.
    
    The TXEMPTY bit in ISR will only get asserted at the exact moment the
    TX FIFO *becomes* empty, so clearing the bit before filling FIFO does
    not cause an extra immediate assertion even if the FIFO is initially
    empty.
    
    This is hard to reproduce directly on a normal system, but inserting
    e.g. udelay(200) after cdns_uart_handle_tx(port), setting 4000000 baud,
    and then running "dd if=/dev/zero bs=128 of=/dev/ttyPS0 count=50"
    reliably reproduces the issue on my ZynqMP test system unless this fix
    is applied.
    
    Fixes: 85baf542d54e ("tty: xuartps: support 64 byte FIFO size")
    Signed-off-by: Anssi Hannula <anssi.hannula@bitwise.fi>
    Link: https://lore.kernel.org/r/20211026102741.2910441-1-anssi.hannula@bitwise.fi
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 515778f9d841c54b7aed8ee88940426c0987b649
Author: Sandeep Maheswaram <quic_c_sanm@quicinc.com>
Date:   Mon Oct 25 09:49:35 2021 +0530

    phy: qcom-snps: Correct the FSEL_MASK
    
    [ Upstream commit b475bf0ec40a2b13fb32ef62f5706576d5858460 ]
    
    The FSEL_MASK which selects the refclock is defined incorrectly.
    It should be [4:6] not [5:7]. Due to this incorrect definition, the BIT(7)
    in USB2_PHY_USB_PHY_HS_PHY_CTRL_COMMON0 is reset which keeps PHY analog
    blocks ON during suspend.
    Fix this issue by correctly defining the FSEL_MASK.
    
    Fixes: 51e8114f80d0 ("phy: qcom-snps: Add SNPS USB PHY driver for QCOM based SOCs")
    Signed-off-by: Sandeep Maheswaram <quic_c_sanm@quicinc.com>
    Link: https://lore.kernel.org/r/1635135575-5668-1-git-send-email-quic_c_sanm@quicinc.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd056574a7e8322c847b458cfe7c1343dcc32497
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 14 14:00:38 2021 +0300

    phy: ti: gmii-sel: check of_get_address() for failure
    
    [ Upstream commit 8d55027f4e2c04146a75fb63371ab96ccc887f2c ]
    
    Smatch complains that if of_get_address() returns NULL, then "size"
    isn't initialized.  Also it would lead to an Oops.
    
    Fixes: 7f78322cdd67 ("phy: ti: gmii-sel: retrieve ports number and base offset from dt")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Link: https://lore.kernel.org/r/20210914110038.GB11657@kili
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a46740a0af08e3ee1a572bf4073a564c9cb160a
Author: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
Date:   Thu Sep 23 02:35:48 2021 +0300

    phy: qcom-qusb2: Fix a memory leak on probe
    
    [ Upstream commit bf7ffcd0069d30e2e7ba2b827f08c89f471cd1f3 ]
    
    On success nvmem_cell_read() returns a pointer to a dynamically allocated
    buffer, and therefore it shall be freed after usage.
    
    The issue is reported by kmemleak:
    
      # cat /sys/kernel/debug/kmemleak
      unreferenced object 0xffff3b3803e4b280 (size 128):
        comm "kworker/u16:1", pid 107, jiffies 4294892861 (age 94.120s)
        hex dump (first 32 bytes):
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
          00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        backtrace:
          [<000000007739afdc>] __kmalloc+0x27c/0x41c
          [<0000000071c0fbf8>] nvmem_cell_read+0x40/0xe0
          [<00000000e803ef1f>] qusb2_phy_init+0x258/0x5bc
          [<00000000fc81fcfa>] phy_init+0x70/0x110
          [<00000000e3d48a57>] dwc3_core_soft_reset+0x4c/0x234
          [<0000000027d1dbd4>] dwc3_core_init+0x68/0x990
          [<000000001965faf9>] dwc3_probe+0x4f4/0x730
          [<000000002f7617ca>] platform_probe+0x74/0xf0
          [<00000000a2576cac>] really_probe+0xc4/0x470
          [<00000000bc77f2c5>] __driver_probe_device+0x11c/0x190
          [<00000000130db71f>] driver_probe_device+0x48/0x110
          [<0000000019f36c2b>] __device_attach_driver+0xa4/0x140
          [<00000000e5812ff7>]  bus_for_each_drv+0x84/0xe0
          [<00000000f4bac574>] __device_attach+0xe4/0x1c0
          [<00000000d3beb631>] device_initial_probe+0x20/0x30
          [<000000008019b9db>] bus_probe_device+0xa4/0xb0
    
    Fixes: ca04d9d3e1b1 ("phy: qcom-qusb2: New driver for QUSB2 PHY on Qcom chips")
    Signed-off-by: Vladimir Zapolskiy <vladimir.zapolskiy@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210922233548.2150244-1-vladimir.zapolskiy@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec40a28495a892d7a99bf7f7e3ad72ea67fbf3b4
Author: Rahul Tanwar <rtanwar@maxlinear.com>
Date:   Wed Oct 20 17:38:15 2021 +0800

    pinctrl: equilibrium: Fix function addition in multiple groups
    
    [ Upstream commit 53b3947ddb7f309d1f611f8dc9bfd6ea9d699907 ]
    
    Ignore the same function with multiple groups.
    Fix a typo in error print.
    
    Fixes: 1948d5c51dba ("pinctrl: Add pinmux & GPIO controller driver for a new SoC")
    Signed-off-by: Rahul Tanwar <rtanwar@maxlinear.com>
    Link: https://lore.kernel.org/r/20211020093815.20870-1-rtanwar@maxlinear.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0467ca4d25fff27ca3ed1c289ed486ec9acc71e
Author: Wan Jiabing <wanjiabing@vivo.com>
Date:   Thu Oct 14 04:30:17 2021 -0400

    soc: qcom: apr: Add of_node_put() before return
    
    [ Upstream commit 72f1aa6205d84337b90b065f602a8fe190821781 ]
    
    Fix following coccicheck warning:
    
    ./drivers/soc/qcom/apr.c:485:1-23: WARNING: Function
    for_each_child_of_node should have of_node_put() before return
    
    Early exits from for_each_child_of_node should decrement the
    node reference counter.
    
    Fixes: 834735662602 ("soc: qcom: apr: Add avs/audio tracking functionality")
    Signed-off-by: Wan Jiabing <wanjiabing@vivo.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211014083017.19714-1-wanjiabing@vivo.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b41c528b14fe7aa3d2453e2b53143e4f19096608
Author: Guru Das Srinagesh <quic_gurus@quicinc.com>
Date:   Mon Oct 11 13:00:14 2021 -0700

    firmware: qcom_scm: Fix error retval in __qcom_scm_is_call_available()
    
    [ Upstream commit 38212b2a8a6fc4c3a6fa99d7445b833bedc9a67c ]
    
    Since __qcom_scm_is_call_available() returns bool, have it return false
    instead of -EINVAL if an invalid SMC convention is detected.
    
    This fixes the Smatch static checker warning:
    
            drivers/firmware/qcom_scm.c:255 __qcom_scm_is_call_available()
            warn: signedness bug returning '(-22)'
    
    Fixes: 9d11af8b06a8 ("firmware: qcom_scm: Make __qcom_scm_is_call_available() return bool")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Guru Das Srinagesh <quic_gurus@quicinc.com>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/1633982414-28347-1-git-send-email-quic_gurus@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31e7a836e2a2e473e170c251897384a58e496c05
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Tue Oct 5 11:53:05 2021 +0200

    usb: dwc2: drd: reset current session before setting the new one
    
    [ Upstream commit 1ad707f559f7cb12c64f3d7cb37f0b1ea27c1058 ]
    
    If role is changed without the "none" step, A- and B- valid session could
    be set at the same time. It is an issue.
    This patch resets A-session if role switch sets B-session, and resets
    B-session if role switch sets A-session.
    Then, it is possible to change the role without the "none" step.
    
    Fixes: 17f934024e84 ("usb: dwc2: override PHY input signals with usb role switch support")
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211005095305.66397-4-amelie.delaunay@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc86da757db716f5def66ec954d4e07da7948bac
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Tue Oct 5 11:53:04 2021 +0200

    usb: dwc2: drd: fix dwc2_drd_role_sw_set when clock could be disabled
    
    [ Upstream commit 8d387f61b0240854e81450c261beb775065bad5d ]
    
    In case of USB_DR_MODE_PERIPHERAL, the OTG clock is disabled at the end of
    the probe (it is not the case if USB_DR_MODE_HOST or USB_DR_MODE_OTG).
    The clock is then enabled on udc_start.
    If dwc2_drd_role_sw_set is called before udc_start (it is the case if the
    usb cable is plugged at boot), GOTGCTL and GUSBCFG registers cannot be
    read/written, so session cannot be overridden.
    To avoid this case, check the ll_hw_enabled value and enable the clock if
    it is available, and disable it after the override.
    
    Fixes: 17f934024e84 ("usb: dwc2: override PHY input signals with usb role switch support")
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211005095305.66397-3-amelie.delaunay@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6774a429327d55d163f7f106ce90620ce94fac7c
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Tue Oct 5 11:53:03 2021 +0200

    usb: dwc2: drd: fix dwc2_force_mode call in dwc2_ovr_init
    
    [ Upstream commit b2cab2a24fb5d13ce1d384ecfb6de827fa08a048 ]
    
    Instead of forcing the role to Device, check the dr_mode configuration.
    If the core is Host only, force the mode to Host, this to avoid the
    dwc2_force_mode warning:
    WARNING: CPU: 1 PID: 21 at drivers/usb/dwc2/core.c:615 dwc2_drd_init+0x104/0x17c
    
    When forcing mode to Host, dwc2_force_mode may sleep the time the host
    role is applied. To avoid sleeping while atomic context, move the call
    to dwc2_force_mode after spin_unlock_irqrestore. It is safe, as
    interrupts are not yet unmasked here.
    
    Fixes: 17f934024e84 ("usb: dwc2: override PHY input signals with usb role switch support")
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211005095305.66397-2-amelie.delaunay@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 068dfa570d8c36da0f1493d97695a04e8e84d8bd
Author: Stefan Agner <stefan@agner.ch>
Date:   Wed Oct 20 21:26:42 2021 +0200

    serial: imx: fix detach/attach of serial console
    
    [ Upstream commit 6d0d1b5a1b4870911beb89544ec1a9751c42fec7 ]
    
    If the device used as a serial console gets detached/attached at runtime,
    register_console() will try to call imx_uart_setup_console(), but this
    is not possible since it is marked as __init.
    
    For instance
    
      # cat /sys/devices/virtual/tty/console/active
      tty1 ttymxc0
      # echo -n N > /sys/devices/virtual/tty/console/subsystem/ttymxc0/console
      # echo -n Y > /sys/devices/virtual/tty/console/subsystem/ttymxc0/console
    
    [   73.166649] 8<--- cut here ---
    [   73.167005] Unable to handle kernel paging request at virtual address c154d928
    [   73.167601] pgd = 55433e84
    [   73.167875] [c154d928] *pgd=8141941e(bad)
    [   73.168304] Internal error: Oops: 8000000d [#1] SMP ARM
    [   73.168429] Modules linked in:
    [   73.168522] CPU: 0 PID: 536 Comm: sh Not tainted 5.15.0-rc6-00056-g3968ddcf05fb #3
    [   73.168675] Hardware name: Freescale i.MX6 Ultralite (Device Tree)
    [   73.168791] PC is at imx_uart_console_setup+0x0/0x238
    [   73.168927] LR is at try_enable_new_console+0x98/0x124
    [   73.169056] pc : [<c154d928>]    lr : [<c0196f44>]    psr: a0000013
    [   73.169178] sp : c2ef5e70  ip : 00000000  fp : 00000000
    [   73.169281] r10: 00000000  r9 : c02cf970  r8 : 00000000
    [   73.169389] r7 : 00000001  r6 : 00000001  r5 : c1760164  r4 : c1e0fb08
    [   73.169512] r3 : c154d928  r2 : 00000000  r1 : efffcbd1  r0 : c1760164
    [   73.169641] Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [   73.169782] Control: 10c5387d  Table: 8345406a  DAC: 00000051
    [   73.169895] Register r0 information: non-slab/vmalloc memory
    [   73.170032] Register r1 information: non-slab/vmalloc memory
    [   73.170158] Register r2 information: NULL pointer
    [   73.170273] Register r3 information: non-slab/vmalloc memory
    [   73.170397] Register r4 information: non-slab/vmalloc memory
    [   73.170521] Register r5 information: non-slab/vmalloc memory
    [   73.170647] Register r6 information: non-paged memory
    [   73.170771] Register r7 information: non-paged memory
    [   73.170892] Register r8 information: NULL pointer
    [   73.171009] Register r9 information: non-slab/vmalloc memory
    [   73.171142] Register r10 information: NULL pointer
    [   73.171259] Register r11 information: NULL pointer
    [   73.171375] Register r12 information: NULL pointer
    [   73.171494] Process sh (pid: 536, stack limit = 0xcd1ba82f)
    [   73.171621] Stack: (0xc2ef5e70 to 0xc2ef6000)
    [   73.171731] 5e60:                                     ???????? ???????? ???????? ????????
    [   73.171899] 5e80: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.172059] 5ea0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.172217] 5ec0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.172377] 5ee0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.172537] 5f00: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.172698] 5f20: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.172856] 5f40: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.173016] 5f60: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.173177] 5f80: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.173336] 5fa0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.173496] 5fc0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.173654] 5fe0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.173826] [<c0196f44>] (try_enable_new_console) from [<c01984a8>] (register_console+0x10c/0x2ec)
    [   73.174053] [<c01984a8>] (register_console) from [<c06e2c90>] (console_store+0x14c/0x168)
    [   73.174262] [<c06e2c90>] (console_store) from [<c0383718>] (kernfs_fop_write_iter+0x110/0x1cc)
    [   73.174470] [<c0383718>] (kernfs_fop_write_iter) from [<c02cf5f4>] (vfs_write+0x31c/0x548)
    [   73.174679] [<c02cf5f4>] (vfs_write) from [<c02cf970>] (ksys_write+0x60/0xec)
    [   73.174863] [<c02cf970>] (ksys_write) from [<c0100080>] (ret_fast_syscall+0x0/0x1c)
    [   73.175052] Exception stack(0xc2ef5fa8 to 0xc2ef5ff0)
    [   73.175167] 5fa0:                   ???????? ???????? ???????? ???????? ???????? ????????
    [   73.175327] 5fc0: ???????? ???????? ???????? ???????? ???????? ???????? ???????? ????????
    [   73.175486] 5fe0: ???????? ???????? ???????? ????????
    [   73.175608] Code: 00000000 00000000 00000000 00000000 (00000000)
    [   73.175744] ---[ end trace 9b75121265109bf1 ]---
    
    A similar issue could be triggered by unbinding/binding the serial
    console device [*].
    
    Drop __init so that imx_uart_setup_console() can be safely called at
    runtime.
    
    [*] https://lore.kernel.org/all/20181114174940.7865-3-stefan@agner.ch/
    
    Fixes: a3cb39d258ef ("serial: core: Allow detach and attach serial device for console")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Link: https://lore.kernel.org/r/20211020192643.476895-2-francesco.dolcini@toradex.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d293bd40fbad2b9b87af9aaae63314d4434cac50
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Sep 14 10:22:14 2021 +0100

    scsi: ufs: ufshcd-pltfrm: Fix memory leak due to probe defer
    
    [ Upstream commit b6ca770ae7f2c560a29bbd02c4e3d734fafaf804 ]
    
    UFS drivers that probe defer will end up leaking memory allocated for clk
    and regulator names via kstrdup() because the structure that is holding
    this memory is allocated via devm_* variants which will be freed during
    probe defer but the names are never freed.
    
    Use same devm_* variant of kstrdup to free the memory allocated to name
    when driver probe defers.
    
    Kmemleak found around 11 leaks on Qualcomm Dragon Board RB5:
    
    unreferenced object 0xffff66f243fb2c00 (size 128):
      comm "kworker/u16:0", pid 7, jiffies 4294893319 (age 94.848s)
      hex dump (first 32 bytes):
        63 6f 72 65 5f 63 6c 6b 00 76 69 72 74 75 61 6c  core_clk.virtual
        2f 77 6f 72 6b 71 75 65 75 65 2f 73 63 73 69 5f  /workqueue/scsi_
      backtrace:
        [<000000006f788cd1>] slab_post_alloc_hook+0x88/0x410
        [<00000000cfd1372b>] __kmalloc_track_caller+0x138/0x230
        [<00000000a92ab17b>] kstrdup+0xb0/0x110
        [<0000000037263ab6>] ufshcd_pltfrm_init+0x1a8/0x500
        [<00000000a20a5caa>] ufs_qcom_probe+0x20/0x58
        [<00000000a5e43067>] platform_probe+0x6c/0x118
        [<00000000ef686e3f>] really_probe+0xc4/0x330
        [<000000005b18792c>] __driver_probe_device+0x88/0x118
        [<00000000a5d295e8>] driver_probe_device+0x44/0x158
        [<000000007e83f58d>] __device_attach_driver+0xb4/0x128
        [<000000004bfa4470>] bus_for_each_drv+0x68/0xd0
        [<00000000b89a83bc>] __device_attach+0xec/0x170
        [<00000000ada2beea>] device_initial_probe+0x14/0x20
        [<0000000079921612>] bus_probe_device+0x9c/0xa8
        [<00000000d268bf7c>] deferred_probe_work_func+0x90/0xd0
        [<000000009ef64bfa>] process_one_work+0x29c/0x788
    unreferenced object 0xffff66f243fb2c80 (size 128):
      comm "kworker/u16:0", pid 7, jiffies 4294893319 (age 94.848s)
      hex dump (first 32 bytes):
        62 75 73 5f 61 67 67 72 5f 63 6c 6b 00 00 00 00  bus_aggr_clk....
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    
    With this patch no memory leaks are reported.
    
    Link: https://lore.kernel.org/r/20210914092214.6468-1-srinivas.kandagatla@linaro.org
    Fixes: aa4976130934 ("ufs: Add regulator enable support")
    Fixes: c6e79dacd86f ("ufs: Add clock initialization support")
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75df593941266161df034af8fd6c562a08e632e8
Author: Can Guo <cang@codeaurora.org>
Date:   Wed Nov 25 18:01:00 2020 -0800

    scsi: ufs: Refactor ufshcd_setup_clocks() to remove skip_ref_clk
    
    [ Upstream commit 81309c247a4dcd597cbda5254fd0afdd61b93f14 ]
    
    Remove the param skip_ref_clk from __ufshcd_setup_clocks(), but keep a flag
    in struct ufs_clk_info to tell whether a clock can be disabled or not while
    the link is active.
    
    Link: https://lore.kernel.org/r/1606356063-38380-2-git-send-email-cang@codeaurora.org
    Reviewed-by: Hongwu Su <hongwus@codeaurora.org>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 948d8f2f2fd5f55f93538ed3fb3f1eea0a8dffb2
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Fri Sep 3 16:14:19 2021 +0200

    iio: adis: do not disabe IRQs in 'adis_init()'
    
    [ Upstream commit b600bd7eb333554518b4dd36b882b2ae58a5149e ]
    
    With commit ecb010d441088 ("iio: imu: adis: Refactor adis_initial_startup")
    we are doing a HW or SW reset to the device which means that we'll get
    the default state of the data ready pin (which is enabled). Hence there's
    no point in disabling the IRQ in the init function. Moreover, this
    function is intended to initialize internal data structures and not
    really do anything on the device.
    
    As a result of this, some devices were left with the data ready pin enabled
    after probe which was not the desired behavior. Thus, we move the call to
    'adis_enable_irq()' to the initial startup function where it makes more
    sense for it to be.
    
    Note that for devices that cannot mask/unmask the pin, it makes no sense
    to call the function at this point since the IRQ should not have been
    yet requested. This will be improved in a follow up change.
    
    Fixes: ecb010d441088 ("iio: imu: adis: Refactor adis_initial_startup")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20210903141423.517028-2-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8e5edca68a312770df85cc6690f729a2a2df99e
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Oct 14 18:36:09 2021 -0700

    usb: typec: STUSB160X should select REGMAP_I2C
    
    [ Upstream commit 8ef1e58783b9f55daa4a865c7801dc75cbeb8260 ]
    
    REGMAP_I2C is not a user visible kconfig symbol so driver configs
    should not "depend on" it. They should depend on I2C and then
    select REGMAP_I2C.
    
    If this worked, it was only because some other driver had set/enabled
    REGMAP_I2C.
    
    Fixes: da0cb6310094 ("usb: typec: add support for STUSB160x Type-C controller family")
    Cc: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Cc: Amelie Delaunay <amelie.delaunay@st.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-usb@vger.kernel.org
    Reviewed-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20211015013609.7300-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 503d6e5fb878256e49eb1b030dafb3bd3beac419
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Mon Oct 4 20:37:32 2021 -0700

    soc: qcom: rpmhpd: Make power_on actually enable the domain
    
    [ Upstream commit e3e56c050ab6e3f1bd811f0787f50709017543e4 ]
    
    The general expectation is that powering on a power-domain should make
    the power domain deliver some power, and if a specific performance state
    is needed further requests has to be made.
    
    But in contrast with other power-domain implementations (e.g. rpmpd) the
    RPMh does not have an interface to enable the power, so the driver has
    to vote for a particular corner (performance level) in rpmh_power_on().
    
    But the corner is never initialized, so a typical request to simply
    enable the power domain would not actually turn on the hardware. Further
    more, when no more clients vote for a performance state (i.e. the
    aggregated vote is 0) the power domain would be turned off.
    
    Fix both of these issues by always voting for a corner with non-zero
    value, when the power domain is enabled.
    
    The tracking of the lowest non-zero corner is performed to handle the
    corner case if there's ever a domain with a non-zero lowest corner, in
    which case both rpmh_power_on() and rpmh_rpmhpd_set_performance_state()
    would be allowed to use this lowest corner.
    
    Fixes: 279b7e8a62cc ("soc: qcom: rpmhpd: Add RPMh power domain driver")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20211005033732.2284447-1-bjorn.andersson@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81e37cf40dbbbedc7f6f74657cf4837fd2887cde
Author: Lee Jones <lee.jones@linaro.org>
Date:   Tue Nov 3 15:28:34 2020 +0000

    soc: qcom: rpmhpd: Provide some missing struct member descriptions
    
    [ Upstream commit 5d16af6a921f5a4e7038671be5478cba4b7cfe81 ]
    
    Fixes the following W=1 kernel build warning(s):
    
     drivers/soc/qcom/rpmhpd.c:52: warning: Function parameter or member 'parent' not described in 'rpmhpd'
     drivers/soc/qcom/rpmhpd.c:52: warning: Function parameter or member 'corner' not described in 'rpmhpd'
     drivers/soc/qcom/rpmhpd.c:52: warning: Function parameter or member 'active_corner' not described in 'rpmhpd'
    
    Cc: Andy Gross <agross@kernel.org>
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: linux-arm-msm@vger.kernel.org
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20201103152838.1290217-22-lee.jones@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b288b841c1d82182fbedeea912eba62f11a702ad
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Fri Oct 15 14:36:08 2021 +0100

    ASoC: cs42l42: Defer probe if request_threaded_irq() returns EPROBE_DEFER
    
    [ Upstream commit 0306988789d9d91a18ff70bd2bf165d3ae0ef1dd ]
    
    The driver can run without an interrupt so if devm_request_threaded_irq()
    failed, the probe() just carried on. But if this was EPROBE_DEFER the
    driver would continue without an interrupt instead of deferring to wait
    for the interrupt to become available.
    
    Fixes: 2c394ca79604 ("ASoC: Add support for CS42L42 codec")
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20211015133619.4698-6-rf@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1812deb08f86db26741f801efda1b803ffc1a411
Author: Richard Fitzgerald <rf@opensource.cirrus.com>
Date:   Fri Oct 15 14:36:06 2021 +0100

    ASoC: cs42l42: Correct some register default values
    
    [ Upstream commit d591d4b32aa9552af14a0c7c586a2d3fe9ecc6e0 ]
    
    Some registers had wrong default values in cs42l42_reg_defaults[].
    
    Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
    Fixes: 2c394ca79604 ("ASoC: Add support for CS42L42 codec")
    Link: https://lore.kernel.org/r/20211015133619.4698-4-rf@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d34982c08714043cfab89406f36d8826c55b8baf
Author: Olivier Moysan <olivier.moysan@foss.st.com>
Date:   Mon Oct 4 11:03:04 2021 +0200

    ARM: dts: stm32: fix AV96 board SAI2 pin muxing on stm32mp15
    
    [ Upstream commit 1a9a9d226f0f0ef5d9bf588ab432e0d679bb1954 ]
    
    Fix SAI2A and SAI2B pin muxings for AV96 board on STM32MP15.
    Change sai2a-4 & sai2a-5 to sai2a-2 & sai2a-2.
    Change sai2a-4 & sai2a-sleep-5 to sai2b-2 & sai2b-sleep-2
    
    Fixes: dcf185ca8175 ("ARM: dts: stm32: Add alternate pinmux for SAI2 pins on stm32mp15")
    
    Signed-off-by: Olivier Moysan <olivier.moysan@foss.st.com>
    Reviewed-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 602fefd4561e07debd885e2f80c6b4569d7e0921
Author: Olivier Moysan <olivier.moysan@foss.st.com>
Date:   Fri Sep 24 18:02:21 2021 +0200

    ARM: dts: stm32: fix SAI sub nodes register range
    
    [ Upstream commit 6f87a74d31277f0896dcf8c0850ec14bde03c423 ]
    
    The STM32 SAI subblocks registers offsets are in the range
    0x0004 (SAIx_CR1) to 0x0020 (SAIx_DR).
    The corresponding range length is 0x20 instead of 0x1c.
    Change reg property accordingly.
    
    Fixes: 5afd65c3a060 ("ARM: dts: stm32: add sai support on stm32mp157c")
    
    Signed-off-by: Olivier Moysan <olivier.moysan@foss.st.com>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fb75227bdce2cc8f1815f298a447f85534a6565
Author: Marek Vasut <marex@denx.de>
Date:   Mon Aug 9 14:13:24 2021 +0200

    ARM: dts: stm32: Reduce DHCOR SPI NOR frequency to 50 MHz
    
    [ Upstream commit 2012579b31293d0a8cf2024e9dab66810bf1a15e ]
    
    The SPI NOR is a bit further away from the SoC on DHCOR than on DHCOM,
    which causes additional signal delay. At 108 MHz, this delay triggers
    a sporadic issue where the first bit of RX data is not received by the
    QSPI controller.
    
    There are two options of addressing this problem, either by using the
    DLYB block to compensate the extra delay, or by reducing the QSPI bus
    clock frequency. The former requires calibration and that is overly
    complex, so opt for the second option.
    
    Fixes: 76045bc457104 ("ARM: dts: stm32: Add QSPI NOR on AV96")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Cc: Patrice Chotard <patrice.chotard@foss.st.com>
    Cc: Patrick Delaunay <patrick.delaunay@foss.st.com>
    Cc: linux-stm32@st-md-mailman.stormreply.com
    To: linux-arm-kernel@lists.infradead.org
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78238479b93be46f4be18496b3ac9d50aab80e05
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Oct 7 16:38:47 2021 +0200

    pinctrl: renesas: checker: Fix off-by-one bug in drive register check
    
    [ Upstream commit 28e7f8ff90583791a034d43b5d2e3fe394142e13 ]
    
    The GENMASK(h, l) macro creates a contiguous bitmask starting at bit
    position @l and ending at position @h, inclusive.
    
    This did not trigger any error checks, as the individual register fields
    cover at most 3 of the 4 available bits.
    
    Fixes: 08df16e07ad0a1ec ("pinctrl: sh-pfc: checker: Add drive strength register checks")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/8f82d6147fbe3367d4c83962480e97f58d9c96a2.1633615652.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51bcffb3951c0d2c82942ed012715706190f6a49
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Mon Oct 11 17:29:41 2021 +0200

    staging: ks7010: select CRYPTO_HASH/CRYPTO_MICHAEL_MIC
    
    [ Upstream commit 9ca0e55e52c7b2a99f3c2051fc4bd1c63a061519 ]
    
    Fix the following build/link errors:
    
      ld: drivers/staging/ks7010/ks_hostif.o: in function `michael_mic.constprop.0':
      ks_hostif.c:(.text+0x95b): undefined reference to `crypto_alloc_shash'
      ld: ks_hostif.c:(.text+0x97a): undefined reference to `crypto_shash_setkey'
      ld: ks_hostif.c:(.text+0xa13): undefined reference to `crypto_shash_update'
      ld: ks_hostif.c:(.text+0xa28): undefined reference to `crypto_shash_update'
      ld: ks_hostif.c:(.text+0xa48): undefined reference to `crypto_shash_finup'
      ld: ks_hostif.c:(.text+0xa6d): undefined reference to `crypto_destroy_tfm'
    
    Fixes: 8b523f20417d ("staging: ks7010: removed custom Michael MIC implementation.")
    Fixes: 3e5bc68fa5968 ("staging: ks7010: Fix build error")
    Fixes: a4961427e7494 ("Revert "staging: ks7010: Fix build error"")
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Link: https://lore.kernel.org/r/20211011152941.12847-1-vegard.nossum@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bb8359f9c0d985ca0929dedd3b0cae979b8b9c5
Author: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date:   Mon Oct 11 09:11:18 2021 +0300

    staging: most: dim2: do not double-register the same device
    
    [ Upstream commit 2ab189164056b05474275bb40caa038a37713061 ]
    
    Commit 723de0f9171e ("staging: most: remove device from interface
    structure") moved registration of driver-provided struct device to
    the most subsystem.
    
    Dim2 used to register the same struct device to provide a custom device
    attribute. This causes double-registration of the same struct device.
    
    Fix that by moving the custom attribute to driver's dev_groups.
    This moves attribute to the platform_device object, which is a better
    location for platform-specific attributes anyway.
    
    Fixes: 723de0f9171e ("staging: most: remove device from interface structure")
    Acked-by: Christian Gromm <christian.gromm@microchip.com>
    Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Link: https://lore.kernel.org/r/20211011061117.21435-1-nikita.yoush@cogentembedded.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e1feecc04fc2f8ab2e8d817dc8ad60fb2924a1d
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Oct 5 16:57:47 2021 -0700

    usb: musb: select GENERIC_PHY instead of depending on it
    
    [ Upstream commit fde1fbedbaed4e76cef4600d775b185f59b9b568 ]
    
    The kconfig symbol GENERIC_PHY says:
      All the users of this framework should select this config.
    and around 136 out of 138 drivers do so, so change USB_MUSB_MEDIATEK
    to do so also.
    
    This (also) fixes a long circular dependency problem for an upcoming
    patch.
    
    Fixes: 0990366bab3c ("usb: musb: Add support for MediaTek musb controller")
    Cc: Bin Liu <b-liu@ti.com>
    Cc: Min Guo <min.guo@mediatek.com>
    Cc: Yonglong Wu <yonglong.wu@mediatek.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-mediatek@lists.infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20211005235747.5588-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0058f7fbea134a033fe35af7f5a8e8befe77ab13
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue Oct 12 10:28:43 2021 +0300

    RDMA/mlx4: Return missed an error if device doesn't support steering
    
    [ Upstream commit f4e56ec4452f48b8292dcf0e1c4bdac83506fb8b ]
    
    The error flow fixed in this patch is not possible because all kernel
    users of create QP interface check that device supports steering before
    set IB_QP_CREATE_NETIF_QP flag.
    
    Fixes: c1c98501121e ("IB/mlx4: Add support for steerable IB UD QPs")
    Link: https://lore.kernel.org/r/91c61f6e60eb0240f8bbc321fda7a1d2986dd03c.1634023677.git.leonro@nvidia.com
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bce61de56480e92e69e748671519ae342616324d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:32:43 2021 +0300

    scsi: csiostor: Uninitialized data in csio_ln_vnp_read_cbfn()
    
    [ Upstream commit f4875d509a0a78ad294a1a538d534b5ba94e685a ]
    
    This variable is just a temporary variable, used to do an endian
    conversion.  The problem is that the last byte is not initialized.  After
    the conversion is completely done, the last byte is discarded so it doesn't
    cause a problem.  But static checkers and the KMSan runtime checker can
    detect the uninitialized read and will complain about it.
    
    Link: https://lore.kernel.org/r/20211006073242.GA8404@kili
    Fixes: 5036f0a0ecd3 ("[SCSI] csiostor: Fix sparse warnings.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12c46732042c812a97f5d40cdb25aa21784d6079
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Oct 8 14:31:50 2021 +0800

    power: supply: max17040: fix null-ptr-deref in max17040_probe()
    
    [ Upstream commit 1d422ecfc48ee683ae1ccc9217764f6310c0ffce ]
    
    Add check the return value of devm_regmap_init_i2c(), otherwise
    later access may cause null-ptr-deref as follows:
    
    KASAN: null-ptr-deref in range [0x0000000000000360-0x0000000000000367]
    RIP: 0010:regmap_read+0x33/0x170
    Call Trace:
      max17040_probe+0x61b/0xff0 [max17040_battery]
     ? write_comp_data+0x2a/0x90
     ? max17040_set_property+0x1d0/0x1d0 [max17040_battery]
     ? tracer_hardirqs_on+0x33/0x520
     ? __sanitizer_cov_trace_pc+0x1d/0x50
     ? _raw_spin_unlock_irqrestore+0x4b/0x60
     ? trace_hardirqs_on+0x63/0x2d0
     ? write_comp_data+0x2a/0x90
     ? __sanitizer_cov_trace_pc+0x1d/0x50
     ? max17040_set_property+0x1d0/0x1d0 [max17040_battery]
     i2c_device_probe+0xa31/0xbe0
    
    Fixes: 6455a8a84bdf ("power: supply: max17040: Use regmap i2c")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c553d673018df441a11120b3de12aa1025e88a72
Author: Jakob Hauser <jahau@rocketmail.com>
Date:   Fri Oct 8 10:32:45 2021 +0200

    power: supply: rt5033_battery: Change voltage values to µV
    
    [ Upstream commit bf895295e9a73411889816f1a0c1f4f1a2d9c678 ]
    
    Currently the rt5033_battery driver provides voltage values in mV. It
    should be µV as stated in Documentation/power/power_supply_class.rst.
    
    Fixes: b847dd96e659 ("power: rt5033_battery: Add RT5033 Fuel gauge device driver")
    Cc: Beomho Seo <beomho.seo@samsung.com>
    Cc: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Jakob Hauser <jahau@rocketmail.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8da6328ecaed6cad8c63f27a47405aa0e22fe71
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Oct 11 15:37:39 2021 +0300

    usb: gadget: hid: fix error code in do_config()
    
    [ Upstream commit 68e7c510fdf4f6167404609da52e1979165649f6 ]
    
    Return an error code if usb_get_function() fails.  Don't return success.
    
    Fixes: 4bc8a33f2407 ("usb: gadget: hid: convert to new interface of f_hid")
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211011123739.GC15188@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92a80e1ca20ea9f6099f967494cca0cb57b952a9
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Oct 5 16:45:16 2021 +0300

    serial: 8250_dw: Drop wrong use of ACPI_PTR()
    
    [ Upstream commit ebabb77a2a115b6c5e68f7364b598310b5f61fb2 ]
    
    ACPI_PTR() is more harmful than helpful. For example, in this case
    if CONFIG_ACPI=n, the ID table left unused which is not what we want.
    
    Instead of adding ifdeffery here and there, drop ACPI_PTR().
    
    Fixes: 6a7320c4669f ("serial: 8250_dw: Add ACPI 5.0 support")
    Reported-by: Daniel Palmer <daniel@0x0f.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20211005134516.23218-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfbf58ac8ec25000ceb3ceae83b20efde1ece611
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Tue Sep 28 07:45:50 2021 -0500

    powerpc: fix unbalanced node refcount in check_kvm_guest()
    
    [ Upstream commit 56537faf8821e361d739fc5ff58c9c40f54a1d4c ]
    
    When check_kvm_guest() succeeds in looking up a /hypervisor OF node, it
    returns without performing a matching put for the lookup, leaving the
    node's reference count elevated.
    
    Add the necessary call to of_node_put(), rearranging the code slightly to
    avoid repetition or goto.
    
    Fixes: 107c55005fbd ("powerpc/pseries: Add KVM guest doorbell restrictions")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210928124550.132020-1-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54965d92a4645e3606202544c3a74ac443fd5c22
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Jun 23 23:05:14 2021 +1000

    powerpc: Fix is_kvm_guest() / kvm_para_available()
    
    [ Upstream commit 95839225639ba7c3d8d7231b542728dcf222bf2d ]
    
    Commit a21d1becaa3f ("powerpc: Reintroduce is_kvm_guest() as a fast-path
    check") added is_kvm_guest() and changed kvm_para_available() to use it.
    
    is_kvm_guest() checks a static key, kvm_guest, and that static key is
    set in check_kvm_guest().
    
    The problem is check_kvm_guest() is only called on pseries, and even
    then only in some configurations. That means is_kvm_guest() always
    returns false on all non-pseries and some pseries depending on
    configuration. That's a bug.
    
    For PR KVM guests this is noticable because they no longer do live
    patching of themselves, which can be detected by the omission of a
    message in dmesg such as:
    
      KVM: Live patching for a fast VM worked
    
    To fix it make check_kvm_guest() an initcall, to ensure it's always
    called at boot. It needs to be core so that it runs before
    kvm_guest_init() which is postcore. To be an initcall it needs to return
    int, where 0 means success, so update that.
    
    We still call it manually in pSeries_smp_probe(), because that runs
    before init calls are run.
    
    Fixes: a21d1becaa3f ("powerpc: Reintroduce is_kvm_guest() as a fast-path check")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210623130514.2543232-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e01a4d7560b64791c350cd531b84a6a53ba6325b
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Wed Dec 2 10:34:55 2020 +0530

    powerpc: Reintroduce is_kvm_guest() as a fast-path check
    
    [ Upstream commit a21d1becaa3f17a97b933ffa677b526afc514ec5 ]
    
    Introduce a static branch that would be set during boot if the OS
    happens to be a KVM guest. Subsequent checks to see if we are on KVM
    will rely on this static branch. This static branch would be used in
    vcpu_is_preempted() in a subsequent patch.
    
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201202050456.164005-4-srikar@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 113207234aac0da666ef857c96de6f91d25d443c
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Wed Dec 2 10:34:54 2020 +0530

    powerpc: Rename is_kvm_guest() to check_kvm_guest()
    
    [ Upstream commit 16520a858a995742c2d2248e86a6026bd0316562 ]
    
    We want to reuse the is_kvm_guest() name in a subsequent patch but
    with a new body. Hence rename is_kvm_guest() to check_kvm_guest(). No
    additional changes.
    
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Signed-off-by: kernel test robot <lkp@intel.com> # int -> bool fix
    [mpe: Fold in fix from lkp to use true/false not 0/1]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201202050456.164005-3-srikar@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61c5d9fa5671be8b55f7a2f04a29759d9ddaa693
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Wed Dec 2 10:34:53 2020 +0530

    powerpc: Refactor is_kvm_guest() declaration to new header
    
    [ Upstream commit 92cc6bf01c7f4c5cfefd1963985c0064687ebeda ]
    
    Only code/declaration movement, in anticipation of doing a KVM-aware
    vcpu_is_preempted(). No additional changes.
    
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201202050456.164005-2-srikar@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67074c63cd670878f81a50c8cc386e176ab8647a
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Wed Sep 15 15:34:35 2021 +0200

    video: fbdev: chipsfb: use memset_io() instead of memset()
    
    [ Upstream commit f2719b26ae27282c145202ffd656d5ff1fe737cc ]
    
    While investigating a lockup at startup on Powerbook 3400C, it was
    identified that the fbdev driver generates alignment exception at
    startup:
    
      --- interrupt: 600 at memset+0x60/0xc0
      NIP:  c0021414 LR: c03fc49c CTR: 00007fff
      REGS: ca021c10 TRAP: 0600   Tainted: G        W          (5.14.2-pmac-00727-g12a41fa69492)
      MSR:  00009032 <EE,ME,IR,DR,RI>  CR: 44008442  XER: 20000100
      DAR: cab80020 DSISR: 00017c07
      GPR00: 00000007 ca021cd0 c14412e0 cab80000 00000000 00100000 cab8001c 00000004
      GPR08: 00100000 00007fff 00000000 00000000 84008442 00000000 c0006fb4 00000000
      GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00100000
      GPR24: 00000000 81800000 00000320 c15fa400 c14d1878 00000000 c14d1800 c094e19c
      NIP [c0021414] memset+0x60/0xc0
      LR [c03fc49c] chipsfb_pci_init+0x160/0x580
      --- interrupt: 600
      [ca021cd0] [c03fc46c] chipsfb_pci_init+0x130/0x580 (unreliable)
      [ca021d20] [c03a3a70] pci_device_probe+0xf8/0x1b8
      [ca021d50] [c043d584] really_probe.part.0+0xac/0x388
      [ca021d70] [c043d914] __driver_probe_device+0xb4/0x170
      [ca021d90] [c043da18] driver_probe_device+0x48/0x144
      [ca021dc0] [c043e318] __driver_attach+0x11c/0x1c4
      [ca021de0] [c043ad30] bus_for_each_dev+0x88/0xf0
      [ca021e10] [c043c724] bus_add_driver+0x190/0x22c
      [ca021e40] [c043ee94] driver_register+0x9c/0x170
      [ca021e60] [c0006c28] do_one_initcall+0x54/0x1ec
      [ca021ed0] [c08246e4] kernel_init_freeable+0x1c0/0x270
      [ca021f10] [c0006fdc] kernel_init+0x28/0x11c
      [ca021f30] [c0017148] ret_from_kernel_thread+0x14/0x1c
      Instruction dump:
      7d4601a4 39490777 7d4701a4 39490888 7d4801a4 39490999 7d4901a4 39290aaa
      7d2a01a4 4c00012c 4bfffe88 0fe00000 <4bfffe80> 9421fff0 38210010 48001970
    
    This is due to 'dcbz' instruction being used on non-cached memory.
    'dcbz' instruction is used by memset() to zeroize a complete
    cacheline at once, and memset() is not expected to be used on non
    cached memory.
    
    When performing a 'sparse' check on fbdev driver, it also appears
    that the use of memset() is unexpected:
    
      drivers/video/fbdev/chipsfb.c:334:17: warning: incorrect type in argument 1 (different address spaces)
      drivers/video/fbdev/chipsfb.c:334:17:    expected void *
      drivers/video/fbdev/chipsfb.c:334:17:    got char [noderef] __iomem *screen_base
      drivers/video/fbdev/chipsfb.c:334:15: warning: memset with byte count of 1048576
    
    Use fb_memset() instead of memset(). fb_memset() is defined as
    memset_io() for powerpc.
    
    Fixes: 8c8709334cec ("[PATCH] ppc32: Remove CONFIG_PMAC_PBOOK")
    Reported-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/884a54f1e5cb774c1d9b4db780209bee5d4f6718.1631712563.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb24243e6d7f2db95bd31d6a76e5dbe6e58425fa
Author: Clément Léger <clement.leger@bootlin.com>
Date:   Mon Sep 13 10:26:33 2021 +0200

    clk: at91: check pmc node status before registering syscore ops
    
    [ Upstream commit c405f5c15e9f6094f2fa1658e73e56f3058e2122 ]
    
    Currently, at91 pmc driver always register the syscore_ops whatever
    the status of the pmc node that has been found. When set as secure
    and disabled, the pmc should not be accessed or this will generate
    abort exceptions.
    To avoid this, add a check on node availability before registering
    the syscore operations.
    
    Signed-off-by: Clément Léger <clement.leger@bootlin.com>
    Link: https://lore.kernel.org/r/20210913082633.110168-1-clement.leger@bootlin.com
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Fixes: b3b02eac33ed ("clk: at91: Add sama5d2 suspend/resume")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20cc0fa1d030aa49e268a23e71c7f1110f3060fa
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sat Sep 25 23:14:32 2021 +0800

    memory: fsl_ifc: fix leak of irq and nand_irq in fsl_ifc_ctrl_probe
    
    [ Upstream commit 4ed2f3545c2e5acfbccd7f85fea5b1a82e9862d7 ]
    
    The error handling code of fsl_ifc_ctrl_probe is problematic. When
    fsl_ifc_ctrl_init fails or request_irq of fsl_ifc_ctrl_dev->irq fails,
    it forgets to free the irq and nand_irq. Meanwhile, if request_irq of
    fsl_ifc_ctrl_dev->nand_irq fails, it will still free nand_irq even if
    the request_irq is not successful.
    
    Fix this by refactoring the error handling code.
    
    Fixes: d2ae2e20fbdd ("driver/memory:Move Freescale IFC driver to a common driver")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Link: https://lore.kernel.org/r/20210925151434.8170-1-mudongliangabcd@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3833d3c569aae1395ac21665644b587e7a92ba0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jun 27 17:54:31 2021 +0200

    soc/tegra: Fix an error handling path in tegra_powergate_power_up()
    
    [ Upstream commit 986b5094708e508baa452a23ffe809870934a7df ]
    
    If an error occurs after a successful tegra_powergate_enable_clocks()
    call, it must be undone by a tegra_powergate_disable_clocks() call, as
    already done in the below and above error handling paths of this function.
    
    Update the 'goto' to branch at the correct place of the error handling
    path.
    
    Fixes: a38045121bf4 ("soc/tegra: pmc: Add generic PM domain support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a2244200908d20310750fbfd04dc6b7997c4080
Author: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date:   Wed Oct 6 13:40:41 2021 +0300

    ASoC: SOF: topology: do not power down primary core during topology removal
    
    [ Upstream commit ec626334eaffe101df9ed79e161eba95124e64ad ]
    
    When removing the topology components, do not power down
    the primary core. Doing so will result in an IPC timeout
    when the SOF PCI device runtime suspends.
    
    Fixes: 0dcdf84289fb ("ASoC: SOF: add a "core" parameter to widget loading functions")
    
    Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Link: https://lore.kernel.org/r/20211006104041.27183-1-peter.ujfalusi@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b6124d9245c54d3472d808bedc8a477675c8179
Author: Andreas Kemnade <andreas@kemnade.info>
Date:   Fri Oct 1 09:34:15 2021 +0200

    arm: dts: omap3-gta04a4: accelerometer irq fix
    
    [ Upstream commit 884ea75d79a36faf3731ad9d6b9c29f58697638d ]
    
    Fix typo in pinctrl. It did only work because the bootloader
    seems to have initialized it.
    
    Fixes: ee327111953b ("ARM: dts: omap3-gta04: Define and use bma180 irq pin")
    Signed-off-by: Andreas Kemnade <andreas@kemnade.info>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1959450b77a2a9226a818993ea55700872c134b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Sep 30 16:57:14 2021 +0800

    driver core: Fix possible memory leak in device_link_add()
    
    [ Upstream commit df0a18149474c7e6b21f6367fbc6bc8d0f192444 ]
    
    I got memory leak as follows:
    
    unreferenced object 0xffff88801f0b2200 (size 64):
      comm "i2c-lis2hh12-21", pid 5455, jiffies 4294944606 (age 15.224s)
      hex dump (first 32 bytes):
        72 65 67 75 6c 61 74 6f 72 3a 72 65 67 75 6c 61  regulator:regula
        74 6f 72 2e 30 2d 2d 69 32 63 3a 31 2d 30 30 31  tor.0--i2c:1-001
      backtrace:
        [<00000000bf5b0c3b>] __kmalloc_track_caller+0x19f/0x3a0
        [<0000000050da42d9>] kvasprintf+0xb5/0x150
        [<000000004bbbed13>] kvasprintf_const+0x60/0x190
        [<00000000cdac7480>] kobject_set_name_vargs+0x56/0x150
        [<00000000bf83f8e8>] dev_set_name+0xc0/0x100
        [<00000000cc1cf7e3>] device_link_add+0x6b4/0x17c0
        [<000000009db9faed>] _regulator_get+0x297/0x680
        [<00000000845e7f2b>] _devm_regulator_get+0x5b/0xe0
        [<000000003958ee25>] st_sensors_power_enable+0x71/0x1b0 [st_sensors]
        [<000000005f450f52>] st_accel_i2c_probe+0xd9/0x150 [st_accel_i2c]
        [<00000000b5f2ab33>] i2c_device_probe+0x4d8/0xbe0
        [<0000000070fb977b>] really_probe+0x299/0xc30
        [<0000000088e226ce>] __driver_probe_device+0x357/0x500
        [<00000000c21dda32>] driver_probe_device+0x4e/0x140
        [<000000004e650441>] __device_attach_driver+0x257/0x340
        [<00000000cf1891b8>] bus_for_each_drv+0x166/0x1e0
    
    When device_register() returns an error, the name allocated in dev_set_name()
    will be leaked, the put_device() should be used instead of kfree() to give up
    the device reference, then the name will be freed in kobject_cleanup() and the
    references of consumer and supplier will be decreased in device_link_release_fn().
    
    Fixes: 287905e68dd2 ("driver core: Expose device link details in sysfs")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Saravana Kannan <saravanak@google.com>
    Reviewed-by: Rafael J. Wysocki <rafael@kernel.org>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210930085714.2057460-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddb13ddacc605e071b6d006b0cda8365daf0c296
Author: Igor Pylypiv <ipylypiv@google.com>
Date:   Tue Sep 28 19:58:47 2021 -0700

    scsi: pm80xx: Fix misleading log statement in pm8001_mpi_get_nvmd_resp()
    
    [ Upstream commit 4084a7235d38311a77c86ba69ba849bd787db87b ]
    
    pm8001_mpi_get_nvmd_resp() handles a GET_NVMD_DATA response, not a
    SET_NVMD_DATA response, as the log statement implies.
    
    Fixes: 1f889b58716a ("scsi: pm80xx: Fix pm8001_mpi_get_nvmd_resp() race condition")
    Link: https://lore.kernel.org/r/20210929025847.646999-1-ipylypiv@google.com
    Reviewed-by: Changyuan Lyu <changyuanl@google.com>
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Igor Pylypiv <ipylypiv@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4438a7457063ea81a2c4d4ffefc38fdd79572535
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Sep 7 11:53:32 2021 +0100

    soundwire: debugfs: use controller id and link_id for debugfs
    
    [ Upstream commit 75eac387a2539aa6c6bbee3affa23435f2096396 ]
    
    link_id can be zero and if we have multiple controller instances
    in a system like Qualcomm debugfs will end-up with duplicate namespace
    resulting in incorrect debugfs entries.
    
    Using bus-id and link-id combination should give a unique debugfs directory
    entry and should fix below warning too.
    "debugfs: Directory 'master-0' with parent 'soundwire' already present!"
    
    Fixes: bf03473d5bcc ("soundwire: add debugfs support")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210907105332.1257-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fe8d239e35b0aaf917b099bbe2ace64692f8f02
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Sep 29 09:29:34 2021 +0200

    ALSA: hda: Use position buffer for SKL+ again
    
    [ Upstream commit c4ca3871e21fa085096316f5f8d9975cf3dfde1d ]
    
    The commit f87e7f25893d ("ALSA: hda - Improved position reporting on
    SKL+") changed the PCM position report for SKL+ chips to use DPIB, but
    according to Pierre, DPIB is no best choice for the accurate position
    reports and it often reports too early.  The recommended method is
    rather the classical position buffer.
    
    This patch makes the PCM position reporting on SKL+ back to the
    position buffer again.
    
    Fixes: f87e7f25893d ("ALSA: hda - Improved position reporting on SKL+")
    Suggested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210929072934.6809-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c550c7c9ae9185d9bc30e29a2b85721933bb0bdf
Author: Imre Deak <imre.deak@intel.com>
Date:   Mon Aug 16 20:42:59 2021 +0300

    ALSA: hda: Fix hang during shutdown due to link reset
    
    [ Upstream commit 0165c4e19f6ec76b535de090e4bd145c73810c51 ]
    
    During system shutdown codecs may be still active, and resetting the
    controller->codec HW link in this state - based on the bug reporter's
    tests - leads to the shutdown sequence to get stuck. This happens at
    least on the reporter's KBL system with an ALC662 codec.
    
    For now fix the issue by skipping the link reset step.
    
    Fixes: 472e18f63c42 ("ALSA: hda: Release controller display power during shutdown/reboot")
    References: https://bugzilla.kernel.org/show_bug.cgi?id=214045
    References: https://gitlab.freedesktop.org/drm/intel/-/issues/3618#note_1024665
    Reported-and-tested-by: youling257@gmail.com
    Cc: youling257@gmail.com
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Link: https://lore.kernel.org/r/20210816174259.2759103-1-imre.deak@intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23e8f775d962f4a859b1651ec9792cc8383e6c72
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Jun 23 16:46:00 2021 +0300

    ALSA: hda: Release controller display power during shutdown/reboot
    
    [ Upstream commit 472e18f63c425dda97b888f40f858ea54e3efc17 ]
    
    Make sure the HDA driver's display power reference is released during
    shutdown/reboot.
    
    During the shutdown/reboot sequence the pci device core calls the
    pm_runtime_resume handler for all devices before calling the driver's
    shutdown callback and so the HDA driver's runtime resume callback will
    acquire a display power reference (on HSW/BDW). This triggers a power
    reference held WARN on HSW/BDW in the i915 driver's subsequent shutdown
    handler, which expects all display power references to be released by
    that time.
    
    Since the HDA controller is stopped in the shutdown handler in any case,
    let's follow here the same sequence as the one during runtime suspend.
    This will also reset the HDA link and drop the display power reference,
    getting rid of the above WARN.
    
    Tested on HSW.
    
    v2:
    - Fix the build for CONFIG_PM=n (Takashi)
    - s/__azx_runtime_suspend/azx_shutdown_chip/
    
    Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/3618
    References: https://lore.kernel.org/lkml/cea1f9a-52e0-b83-593d-52997fe1aaf6@er-systems.de
    Reported-and-tested-by: Thomas Voegtle <tv@lio96.de>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Link: https://lore.kernel.org/r/20210623134601.2128663-1-imre.deak@intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5972e974ebbb0b603eed3b876192e597808d7c94
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Sep 29 09:29:33 2021 +0200

    ALSA: hda: Reduce udelay() at SKL+ position reporting
    
    [ Upstream commit 46243b85b0ec5d2cee7545e5ce18c015ce91957e ]
    
    The position reporting on Intel Skylake and later chips via
    azx_get_pos_skl() contains a udelay(20) call for the capture streams.
    A call for this alone doesn't sound too harmful.  However, as the
    pointer PCM ops is one of the hottest path in the PCM operations --
    especially for the timer-scheduled operations like PulseAudio -- such
    a delay hogs CPU usage significantly in the total performance.
    
    The code there was taken from the original code in ASoC SST Skylake
    driver blindly.  The udelay() is a workaround for the case where the
    reported position is behind the period boundary at the timing
    triggered from interrupts; applications often expect that the full
    data is available for the whole period when returned (and also that's
    the definition of the ALSA PCM period).
    
    OTOH, HD-audio (legacy) driver has already some workarounds for the
    delayed position reporting due to its relatively large FIFO, such as
    the BDL position adjustment and the delayed period-elapsed call in the
    work.  That said, the udelay() is almost superfluous for HD-audio
    driver unlike SST, and we can drop the udelay().
    
    Though, the current code doesn't guarantee the full period readiness
    as mentioned in the above, but rather it checks the wallclock and
    detects the unexpected jump.  That's one missing piece, and the drop
    of udelay() needs a bit more sanity checks for the delayed handling.
    
    This patch implements those: the drop of udelay() call in
    azx_get_pos_skl() and the more proper check of hwptr in
    azx_position_ok().  The latter change is applied only for the case
    where the stream is running in the normal mode without
    no_period_wakeup flag.  When no_period_wakeup is set, it essentially
    ignores the period handling and rather concentrates only on the
    current position; which implies that we don't need to care about the
    period boundary at all.
    
    Fixes: f87e7f25893d ("ALSA: hda - Improved position reporting on SKL+")
    Reported-by: Jens Axboe <axboe@kernel.dk>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210929072934.6809-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1db71de28bfc7536ea5de54ba40fb3f63b804035
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Tue Sep 28 13:29:43 2021 +0200

    arm64: dts: qcom: pm8916: Remove wrong reg-names for rtc@6000
    
    [ Upstream commit 483de2b44cd3a168458f8f9ff237e78a434729bc ]
    
    While removing the size from the "reg" properties in pm8916.dtsi,
    commit bd6429e81010 ("ARM64: dts: qcom: Remove size elements from
    pmic reg properties") mistakenly also removed the second register
    address for the rtc@6000 device. That one did not represent the size
    of the register region but actually the address of the second "alarm"
    register region of the rtc@6000 device.
    
    Now there are "reg-names" for two "reg" elements, but there is actually
    only one "reg" listed.
    
    Since the DT schema for "qcom,pm8941-rtc" only expects one "reg"
    element anyway, just drop the "reg-names" entirely to fix this.
    
    Fixes: bd6429e81010 ("ARM64: dts: qcom: Remove size elements from pmic reg properties")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210928112945.25310-1-stephan@gerhold.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d833ddddec5b1ff44f2c241bf92361e87b228f53
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Sep 24 08:50:23 2021 +0200

    arm64: dts: renesas: beacon: Fix Ethernet PHY mode
    
    [ Upstream commit 59a8bda062f8646d99ff8c4956adf37dee1cb75e ]
    
    While networking works fine in RGMII mode when using the Linux generic
    PHY driver, it fails when using the Atheros PHY driver.
    Fix this by correcting the Ethernet PHY mode to RGMII-RXID, which works
    fine with both drivers.
    
    Fixes: a5200e63af57d05e ("arm64: dts: renesas: rzg2: Convert EtherAVB to explicit delay handling")
    Reported-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/2a4c15b2df23bb63f15abf9dfb88860477f4f523.1632465965.git.geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d70247b752f7ae233b966ad3e3be3d72b531abef
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Mon Aug 16 20:18:10 2021 +0200

    arm64: dts: qcom: msm8916: Fix Secondary MI2S bit clock
    
    [ Upstream commit 8199a0b31e76d158ac14841e7119890461f8c595 ]
    
    At the moment, playing audio on Secondary MI2S will just end up getting
    stuck, without actually playing any audio. This happens because the wrong
    bit clock is configured when playing audio on Secondary MI2S.
    
    The PRI_I2S_CLK (better name: SPKR_I2S_CLK) is used by the SPKR audio mux
    block that provides both Primary and Secondary MI2S.
    
    The SEC_I2S_CLK (better name: MIC_I2S_CLK) is used by the MIC audio mux
    block that provides Tertiary MI2S. Quaternary MI2S is also part of the
    MIC audio mux but has its own clock (AUX_I2S_CLK).
    
    This means that (quite confusingly) the SEC_I2S_CLK is not actually
    used for Secondary MI2S as the name would suggest. Secondary MI2S
    needs to have the same clock as Primary MI2S configured.
    
    Fix the clock list for the lpass node in the device tree and add
    a comment to clarify this confusing naming. With these changes,
    audio can be played correctly on Secondary MI2S.
    
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Fixes: 3761a3618f55 ("arm64: dts: qcom: add lpass node")
    Tested-by: Vincent Knecht <vincent.knecht@mailoo.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210816181810.2242-1-stephan@gerhold.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 980c7bdd20fcc1a4fddb44f30a455ca313a82dfa
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Sat Sep 4 10:37:41 2021 +0800

    JFS: fix memleak in jfs_mount
    
    [ Upstream commit c48a14dca2cb57527dde6b960adbe69953935f10 ]
    
    In jfs_mount, when diMount(ipaimap2) fails, it goes to errout35. However,
    the following code does not free ipaimap2 allocated by diReadSpecial.
    
    Fix this by refactoring the error handling code of jfs_mount. To be
    specific, modify the lable name and free ipaimap2 when the above error
    ocurrs.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4edd206d52ef9671b7af695d44d7d4521b248d2
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Mon Sep 13 14:19:08 2021 +0800

    MIPS: loongson64: make CPU_LOONGSON64 depends on MIPS_FP_SUPPORT
    
    [ Upstream commit 7f3b3c2bfa9c93ab9b5595543496f570983dc330 ]
    
    mach/loongson64 fails to build when the FPU support is disabled:
    
    arch/mips/loongson64/cop2-ex.c:45:15: error: implicit declaration of function ‘__is_fpu_owner’; did you mean ‘is_fpu_owner’? [-Werror=implicit-function-declaration]
    arch/mips/loongson64/cop2-ex.c:98:30: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:99:30: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:131:43: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:137:38: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:203:30: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:219:30: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:283:38: error: ‘struct thread_struct’ has no member named ‘fpu’
    arch/mips/loongson64/cop2-ex.c:301:38: error: ‘struct thread_struct’ has no member named ‘fpu’
    
    Fixes: ef2f826c8f2f ("MIPS: Loongson-3: Enable the COP2 usage")
    Suggested-by: Huacai Chen <chenhuacai@kernel.org>
    Reviewed-by: Huacai Chen <chenhuacai@kernel.org>
    Reported-by: k2ci robot <kernel-bot@kylinos.cn>
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24149c954f329ace9db0214808a3acfa178f01e2
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Sep 6 21:07:02 2021 -0700

    scsi: dc395: Fix error case unwinding
    
    [ Upstream commit cbd9a3347c757383f3d2b50cf7cfd03eb479c481 ]
    
    dc395x_init_one()->adapter_init() might fail. In this case, the acb is
    already cleaned up by adapter_init(), no need to do that in
    adapter_uninit(acb) again.
    
    [    1.252251] dc395x: adapter init failed
    [    1.254900] RIP: 0010:adapter_uninit+0x94/0x170 [dc395x]
    [    1.260307] Call Trace:
    [    1.260442]  dc395x_init_one.cold+0x72a/0x9bb [dc395x]
    
    Link: https://lore.kernel.org/r/20210907040702.1846409-1-ztong0001@gmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Finn Thain <fthain@linux-m68k.org>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6348983be709145bde3f648c59aab9fb24487cb5
Author: Peter Rosin <peda@axentia.se>
Date:   Mon Sep 20 22:37:38 2021 +0200

    ARM: dts: at91: tse850: the emac<->phy interface is rmii
    
    [ Upstream commit dcdbc335a91a26e022a803e1a6b837266989c032 ]
    
    This went unnoticed until commit 7897b071ac3b ("net: macb: convert
    to phylink") which tickled the problem. The sama5d3 emac has never
    been capable of rgmii, and it all just happened to work before that
    commit.
    
    Fixes: 21dd0ece34c2 ("ARM: dts: at91: add devicetree for the Axentia TSE-850")
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Link: https://lore.kernel.org/r/ea781f5e-422f-6cbf-3cf4-d5a7bac9392d@axentia.se
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6493c2b7ddb7a019908fa80fc4ebc323fe36ffb
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Sep 21 12:42:25 2021 +0300

    bus: ti-sysc: Fix timekeeping_suspended warning on resume
    
    [ Upstream commit b3e9431854e8f305385d5de225441c0477b936cb ]
    
    On resume we can get a warning at kernel/time/timekeeping.c:824 for
    timekeeping_suspended.
    
    Let's fix this by adding separate functions for sysc_poll_reset_sysstatus()
    and sysc_poll_reset_sysconfig() and have the new functions handle also
    timekeeping_suspended.
    
    If iopoll at some point supports timekeeping_suspended, we can just drop
    the custom handling from these functions.
    
    Fixes: d46f9fbec719 ("bus: ti-sysc: Use optional clocks on for enable and wait for softreset bit")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85085c34370583072bed3ad5e39b52288353a3a6
Author: Anand Moon <linux.amoon@gmail.com>
Date:   Sun Sep 19 20:29:10 2021 +0000

    arm64: dts: meson-g12b: Fix the pwm regulator supply properties
    
    [ Upstream commit 62183863f708c2464769e0d477c8ce9f3d326feb ]
    
    After enabling CONFIG_REGULATOR_DEBUG=y we observer below debug logs.
    Changes help link VDDCP_A and VDDCPU_B pwm regulator to 12V regulator
    supply instead of dummy regulator.
    
    [    4.147196] VDDCPU_A: will resolve supply early: pwm
    [    4.147216] pwm-regulator regulator-vddcpu-a: Looking up pwm-supply from device tree
    [    4.147227] pwm-regulator regulator-vddcpu-a: Looking up pwm-supply property in node /regulator-vddcpu-a failed
    [    4.147258] VDDCPU_A: supplied by regulator-dummy
    [    4.147288] regulator-dummy: could not add device link regulator.12: -ENOENT
    [    4.147353] VDDCPU_A: 721 <--> 1022 mV at 871 mV, enabled
    [    4.152014] VDDCPU_B: will resolve supply early: pwm
    [    4.152035] pwm-regulator regulator-vddcpu-b: Looking up pwm-supply from device tree
    [    4.152047] pwm-regulator regulator-vddcpu-b: Looking up pwm-supply property in node /regulator-vddcpu-b failed
    [    4.152079] VDDCPU_B: supplied by regulator-dummy
    [    4.152108] regulator-dummy: could not add device link regulator.13: -ENOENT
    
    Fixes: c6d29c66e582 ("arm64: dts: meson-g12b-khadas-vim3: add initial device-tree")
    Fixes: d14734a04a8a ("arm64: dts: meson-g12b-odroid-n2: enable DVFS")
    Fixes: 3cb74db9b256 ("arm64: dts: meson: convert ugoos-am6 to common w400 dtsi")
    
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Anand Moon <linux.amoon@gmail.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20210919202918.3556-3-linux.amoon@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ccb7e4a972ce58fbf434d033ec9485d91b3c57a
Author: Anand Moon <linux.amoon@gmail.com>
Date:   Sun Sep 19 20:29:09 2021 +0000

    arm64: dts: meson-g12a: Fix the pwm regulator supply properties
    
    [ Upstream commit 085675117ecf5e02c4220698fd549024ec64ad2c ]
    
    After enabling CONFIG_REGULATOR_DEBUG=y we observe below debug logs.
    Changes help link VDDCPU pwm regulator to 12V regulator supply
    instead of dummy regulator.
    
    [   11.602281] pwm-regulator regulator-vddcpu: Looking up pwm-supply property
                   in node /regulator-vddcpu failed
    [   11.602344] VDDCPU: supplied by regulator-dummy
    [   11.602365] regulator-dummy: could not add device link regulator.11: -ENOENT
    [   11.602548] VDDCPU: 721 <--> 1022 mV at 1022 mV, enabled
    
    Fixes: e9bc0765cc12 ("arm64: dts: meson-g12a: enable DVFS on G12A boards")
    
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Anand Moon <linux.amoon@gmail.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20210919202918.3556-2-linux.amoon@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20baf01638054058c96c678f53d408a70943a771
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Sep 15 11:23:54 2021 +0530

    arm64: dts: ti: k3-j721e-main: Fix "bus-range" upto 256 bus number for PCIe
    
    [ Upstream commit 5f46633565b1c1e1840a927676065d72b442dac4 ]
    
    commit 4e5833884f66 ("arm64: dts: ti: k3-j721e-main: Add PCIe device
    tree nodes") restricted PCIe bus numbers from 0 to 15 (due to SMMU
    restriction in J721E). However since SMMU is not enabled, allow the full
    supported bus numbers from 0 to 255.
    
    Fixes: 4e5833884f66 ("arm64: dts: ti: k3-j721e-main: Add PCIe device tree nodes")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Reviewed-by: Aswath Govindraju <a-govindraju@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20210915055358.19997-3-kishon@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a1617a9919bfe82cc9d023c233f90ba11214b14
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Sep 15 11:23:53 2021 +0530

    arm64: dts: ti: k3-j721e-main: Fix "max-virtual-functions" in PCIe EP nodes
    
    [ Upstream commit 9af3ef954975c383eeb667aee207d9ce6fbef8c4 ]
    
    commit 4e5833884f66 ("arm64: dts: ti: k3-j721e-main: Add PCIe device
    tree nodes") added "max-virtual-functions" to have 16 bit values.
    Fix "max-virtual-functions" in PCIe endpoint (EP) nodes to have 8 bit
    values instead of 16.
    
    Fixes: 4e5833884f66 ("arm64: dts: ti: k3-j721e-main: Add PCIe device tree nodes")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Reviewed-by: Aswath Govindraju <a-govindraju@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20210915055358.19997-2-kishon@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64a43b771258a01e6690c1a1aa8266ec657e7dfe
Author: Selvin Xavier <selvin.xavier@broadcom.com>
Date:   Wed Sep 15 05:32:38 2021 -0700

    RDMA/bnxt_re: Fix query SRQ failure
    
    [ Upstream commit 598d16fa1bf93431ad35bbab3ed1affe4fb7b562 ]
    
    Fill the missing parameters for the FW command while querying SRQ.
    
    Fixes: 37cb11acf1f7 ("RDMA/bnxt_re: Add SRQ support for Broadcom adapters")
    Link: https://lore.kernel.org/r/1631709163-2287-8-git-send-email-selvin.xavier@broadcom.com
    Signed-off-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe3c11fc627b52f18864ff26547b87134b1c6790
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Aug 30 19:57:39 2021 +0200

    ARM: dts: qcom: msm8974: Add xo_board reference clock to DSI0 PHY
    
    [ Upstream commit 8ccecf6c710b8c048eecc65709640642e5357d6e ]
    
    According to YAML validation, and for a future patchset putting this
    xo_board reference clock to use as VCO reference parent, add the missing
    clock to dsi_phy0.
    
    Fixes: 5a9fc531f6ec ("ARM: dts: msm8974: add display support")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210830175739.143401-1-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2887df89e7f6dab31deefc596d7ca6b9cb6fbbbe
Author: Alex Bee <knaerzche@gmail.com>
Date:   Wed Jun 23 13:59:26 2021 +0200

    arm64: dts: rockchip: Fix GPU register width for RK3328
    
    [ Upstream commit 932b4610f55b49f3a158b0db451137bab7ed0e1f ]
    
    As can be seen in RK3328's TRM the register range for the GPU is
    0xff300000 to 0xff330000.
    It would (and does in vendor kernel) overlap with the registers of
    the HEVC encoder (node/driver do not exist yet in upstream kernel).
    See already existing h265e_mmu node.
    
    Fixes: 752fbc0c8da7 ("arm64: dts: rockchip: add rk3328 mali gpu node")
    Signed-off-by: Alex Bee <knaerzche@gmail.com>
    Link: https://lore.kernel.org/r/20210623115926.164861-1-knaerzche@gmail.com
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f33f09d9f6aeb7a97d8ce8d9b1f501b81464110
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Wed Sep 1 20:35:57 2021 +0800

    ARM: s3c: irq-s3c24xx: Fix return value check for s3c24xx_init_intc()
    
    [ Upstream commit 2aa717473ce96c93ae43a5dc8c23cedc8ce7dd9f ]
    
    The s3c24xx_init_intc() returns an error pointer upon failure, not NULL.
    let's add an error pointer check in s3c24xx_handle_irq.
    
    s3c_intc[0] is not NULL or ERR, we can simplify the code.
    
    Fixes: 1f629b7a3ced ("ARM: S3C24XX: transform irq handling into a declarative form")
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Link: https://lore.kernel.org/r/20210901123557.1043953-1-liu.yun@linux.dev
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdd3dd905ceac00f5929d5a23549d90f72d16f5c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Apr 23 09:02:26 2021 +0200

    clk: mvebu: ap-cpu-clk: Fix a memory leak in error handling paths
    
    [ Upstream commit af9617b419f77cf0b99702a7b2b0519da0d27715 ]
    
    If we exit the for_each_of_cpu_node loop early, the reference on the
    current node must be decremented, otherwise there is a leak.
    
    Fixes: f756e362d938 ("clk: mvebu: add CPU clock driver for Armada 7K/8K")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/545df946044fc1fc05a4217cdf0054be7a79e49e.1619161112.git.christophe.jaillet@wanadoo.fr
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fde76df1885a6bec04317e457121326070450eb
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Aug 19 08:57:02 2021 +0200

    ARM: dts: BCM5301X: Fix memory nodes names
    
    [ Upstream commit c5e1df3276d7a500678da9453be31a66ad115150 ]
    
    Thix fixes:
    arch/arm/boot/dts/bcm4708-netgear-r6250.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 134217728]]}
    arch/arm/boot/dts/bcm4709-asus-rt-ac87u.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 134217728]]}
    arch/arm/boot/dts/bcm4709-buffalo-wxr-1900dhp.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 402653184]]}
    arch/arm/boot/dts/bcm4709-linksys-ea9200.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 134217728]]}
    arch/arm/boot/dts/bcm4709-netgear-r7000.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 134217728]]}
    arch/arm/boot/dts/bcm4709-netgear-r8000.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 134217728]]}
    arch/arm/boot/dts/bcm4709-tplink-archer-c9-v1.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728]]}
    arch/arm/boot/dts/bcm47094-luxul-xwc-2000.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728], [2281701376, 402653184]]}
    arch/arm/boot/dts/bcm53016-meraki-mr32.dt.yaml: /: memory: False schema does not allow {'reg': [[0, 134217728]], 'device_type': ['memory']}
    arch/arm/boot/dts/bcm94708.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728]]}
    arch/arm/boot/dts/bcm94709.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 134217728]]}
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5282385ee65597cafdaf5fb45da470688e9c8681
Author: Junji Wei <weijunji@bytedance.com>
Date:   Tue Aug 31 16:32:23 2021 +0800

    RDMA/rxe: Fix wrong port_cap_flags
    
    [ Upstream commit dcd3f985b20ffcc375f82ca0ca9f241c7025eb5e ]
    
    The port->attr.port_cap_flags should be set to enum
    ib_port_capability_mask_bits in ib_mad.h, not
    RDMA_CORE_CAP_PROT_ROCE_UDP_ENCAP.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20210831083223.65797-1-weijunji@bytedance.com
    Signed-off-by: Junji Wei <weijunji@bytedance.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2c17c93b771242df31d03e62c0ac5b91bc11165
Author: Alexandru Ardelean <aardelean@deviqon.com>
Date:   Mon Aug 23 14:22:00 2021 +0300

    iio: st_sensors: disable regulators after device unregistration
    
    [ Upstream commit 9f0b3e0cc0c88618aa9e5cecef747b1337ae0a5d ]
    
    Up until commit ea7e586bdd331 ("iio: st_sensors: move regulator retrieveal
    to core") only the ST pressure driver seems to have had any regulator
    disable. After that commit, the regulator handling was moved into the
    common st_sensors logic.
    
    In all instances of this regulator handling, the regulators were disabled
    before unregistering the IIO device.
    This can cause issues where the device would be powered down and still be
    available to userspace, allowing it to send invalid/garbage data.
    
    This change moves the st_sensors_power_disable() after the common probe
    functions. These common probe functions also handle unregistering the IIO
    device.
    
    Fixes: 774487611c949 ("iio: pressure-core: st: Provide support for the Vdd power supply")
    Fixes: ea7e586bdd331 ("iio: st_sensors: move regulator retrieveal to core")
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Denis CIOCCA <denis.ciocca@st.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Alexandru Ardelean <aardelean@deviqon.com>
    Link: https://lore.kernel.org/r/20210823112204.243255-2-aardelean@deviqon.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfedc817769dc2361ac7c1a473ce5e3e7f789da5
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Apr 14 22:54:51 2021 +0300

    iio: st_sensors: Call st_sensors_power_enable() from bus drivers
    
    [ Upstream commit 7db4f2cacbede1c6d95552c0d10e77398665a733 ]
    
    In case we would initialize two IIO devices from one physical device,
    we shouldn't have a clash on regulators. That's why move
    st_sensors_power_enable() call from core to bus drivers.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210414195454.84183-4-andriy.shevchenko@linux.intel.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f84c7a03d1ea9082e5ddd8d7d5605f35a4c7cb83
Author: Frank Rowand <frank.rowand@sony.com>
Date:   Thu Oct 28 20:32:25 2021 -0500

    of: unittest: fix EXPECT text for gpio hog errors
    
    [ Upstream commit e85860e5bc077865a04f0a88d0b0335d3200484a ]
    
    The console message text for gpio hog errors does not match
    what unittest expects.
    
    Fixes: f4056e705b2ef ("of: unittest: add overlay gpio test to catch gpio hog problem")
    Signed-off-by: Frank Rowand <frank.rowand@sony.com>
    Link: https://lore.kernel.org/r/20211029013225.2048695-1-frowand.list@gmail.com
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a50bc00847635e092f8f447439d8263afaa65ed
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Mon Nov 1 15:21:52 2021 -0700

    bpf: Fix propagation of signed bounds from 64-bit min/max into 32-bit.
    
    [ Upstream commit 388e2c0b978339dee9b0a81a2e546f8979e021e2 ]
    
    Similar to unsigned bounds propagation fix signed bounds.
    The 'Fixes' tag is a hint. There is no security bug here.
    The verifier was too conservative.
    
    Fixes: 3f50f132d840 ("bpf: Verifier, do explicit ALU32 bounds tracking")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20211101222153.78759-2-alexei.starovoitov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84dde8c8c9335213f091977eb1e935f3f38da71c
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Mon Nov 1 15:21:51 2021 -0700

    bpf: Fix propagation of bounds from 64-bit min/max into 32-bit and var_off.
    
    [ Upstream commit b9979db8340154526d9ab38a1883d6f6ba9b6d47 ]
    
    Before this fix:
    166: (b5) if r2 <= 0x1 goto pc+22
    from 166 to 189: R2=invP(id=1,umax_value=1,var_off=(0x0; 0xffffffff))
    
    After this fix:
    166: (b5) if r2 <= 0x1 goto pc+22
    from 166 to 189: R2=invP(id=1,umax_value=1,var_off=(0x0; 0x1))
    
    While processing BPF_JLE the reg_set_min_max() would set true_reg->umax_value = 1
    and call __reg_combine_64_into_32(true_reg).
    
    Without the fix it would not pass the condition:
    if (__reg64_bound_u32(reg->umin_value) && __reg64_bound_u32(reg->umax_value))
    
    since umin_value == 0 at this point.
    Before commit 10bf4e83167c the umin was incorrectly ingored.
    The commit 10bf4e83167c fixed the correctness issue, but pessimized
    propagation of 64-bit min max into 32-bit min max and corresponding var_off.
    
    Fixes: 10bf4e83167c ("bpf: Fix propagation of 32 bit unsigned bounds from 64 bit bounds")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20211101222153.78759-1-alexei.starovoitov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9308f9c9c7a562e51abcbd4a32d0d30e2f01c384
Author: Dan Schatzberg <schatzberg.dan@gmail.com>
Date:   Thu Oct 28 15:15:27 2021 -0700

    cgroup: Fix rootcg cpu.stat guest double counting
    
    [ Upstream commit 81c49d39aea8a10e6d05d3aa1cb65ceb721e19b0 ]
    
    In account_guest_time in kernel/sched/cputime.c guest time is
    attributed to both CPUTIME_NICE and CPUTIME_USER in addition to
    CPUTIME_GUEST_NICE and CPUTIME_GUEST respectively. Therefore, adding
    both to calculate usage results in double counting any guest time at
    the rootcg.
    
    Fixes: 936f2a70f207 ("cgroup: add cpu.stat file to root cgroup")
    Signed-off-by: Dan Schatzberg <schatzberg.dan@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3fdcd16b138c2f680f4949b0ed646e9d34b1eed
Author: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
Date:   Fri Oct 29 15:03:15 2021 -0700

    ibmvnic: Process crqs after enabling interrupts
    
    [ Upstream commit 6e20d00158f31f7631d68b86996b7e951c4451c8 ]
    
    Soon after registering a CRQ it is possible that we get a fail over or
    maybe a CRQ_INIT from the VIOS while interrupts were disabled.
    
    Look for any such CRQs after enabling interrupts.
    
    Otherwise we can intermittently fail to bring up ibmvnic adapters during
    boot, specially in kexec/kdump kernels.
    
    Fixes: 032c5e82847a ("Driver for IBM System i/p VNIC protocol")
    Reported-by: Vaishnavi Bhat <vaish123@in.ibm.com>
    Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
    Reviewed-by: Dany Madden <drt@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b3f7204197af04b8dc8adea786052e1fa97b1e8
Author: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
Date:   Fri Oct 29 15:03:14 2021 -0700

    ibmvnic: don't stop queue in xmit
    
    [ Upstream commit 8878e46fcfd46b19964bd90e13b25dd94cbfc9be ]
    
    If adapter's resetting bit is on, discard the packet but don't stop the
    transmit queue - instead leave that to the reset code. With this change,
    it is possible that we may get several calls to ibmvnic_xmit() that simply
    discard packets and return.
    
    But if we stop the queue here, we might end up doing so just after
    __ibmvnic_open() started the queues (during a hard/soft reset) and before
    the ->resetting bit was cleared. If that happens, there will be no one to
    restart queue and transmissions will be blocked indefinitely.
    
    This can cause a TIMEOUT reset and with auto priority failover enabled,
    an unnecessary FAILOVER reset to less favored backing device and then a
    FAILOVER back to the most favored backing device. If we hit the window
    repeatedly, we can get stuck in a loop of TIMEOUT, FAILOVER, FAILOVER
    resets leaving the adapter unusable for extended periods of time.
    
    Fixes: 7f5b030830fe ("ibmvnic: Free skb's in cases of failure in transmit")
    Reported-by: Abdul Haleem <abdhalee@in.ibm.com>
    Reported-by: Vaishnavi Bhat <vaish123@in.ibm.com>
    Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
    Reviewed-by: Dany Madden <drt@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 366235d4bebc39363ed029176873097c66049954
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 29 08:51:34 2021 -0700

    udp6: allow SO_MARK ctrl msg to affect routing
    
    [ Upstream commit 42dcfd850e514b229d616a53dec06d0f2533217c ]
    
    Commit c6af0c227a22 ("ip: support SO_MARK cmsg")
    added propagation of SO_MARK from cmsg to skb->mark.
    For IPv4 and raw sockets the mark also affects route
    lookup, but in case of IPv6 the flow info is
    initialized before cmsg is parsed.
    
    Fixes: c6af0c227a22 ("ip: support SO_MARK cmsg")
    Reported-and-tested-by: Xintong Hu <huxintong@fb.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f3d88139df8c59f6a5e087f12d58a1ff3f3f531
Author: Andrea Righi <andrea.righi@canonical.com>
Date:   Tue Oct 26 16:34:09 2021 +0200

    selftests/bpf: Fix fclose/pclose mismatch in test_progs
    
    [ Upstream commit f48ad69097fe79d1de13c4d8fef556d4c11c5e68 ]
    
    Make sure to use pclose() to properly close the pipe opened by popen().
    
    Fixes: 81f77fd0deeb ("bpf: add selftest for stackmap with BPF_F_STACK_BUILD_ID")
    Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Shuah Khan <skhan@linuxfoundation.org>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/20211026143409.42666-1-andrea.righi@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71ec65c7000425b2d7570a78ed9f42e3844169b1
Author: Daniel Jordan <daniel.m.jordan@oracle.com>
Date:   Thu Oct 21 14:30:28 2021 -0400

    crypto: pcrypt - Delay write to padata->info
    
    [ Upstream commit 68b6dea802cea0dbdd8bd7ccc60716b5a32a5d8a ]
    
    These three events can race when pcrypt is used multiple times in a
    template ("pcrypt(pcrypt(...))"):
    
      1.  [taskA] The caller makes the crypto request via crypto_aead_encrypt()
      2.  [kworkerB] padata serializes the inner pcrypt request
      3.  [kworkerC] padata serializes the outer pcrypt request
    
    3 might finish before the call to crypto_aead_encrypt() returns in 1,
    resulting in two possible issues.
    
    First, a use-after-free of the crypto request's memory when, for
    example, taskA writes to the outer pcrypt request's padata->info in
    pcrypt_aead_enc() after kworkerC completes the request.
    
    Second, the outer pcrypt request overwrites the inner pcrypt request's
    return code with -EINPROGRESS, making a successful request appear to
    fail.  For instance, kworkerB writes the outer pcrypt request's
    padata->info in pcrypt_aead_done() and then taskA overwrites it
    in pcrypt_aead_enc().
    
    Avoid both situations by delaying the write of padata->info until after
    the inner crypto request's return code is checked.  This prevents the
    use-after-free by not touching the crypto request's memory after the
    next-inner crypto request is made, and stops padata->info from being
    overwritten.
    
    Fixes: 5068c7a883d16 ("crypto: pcrypt - Add pcrypt crypto parallelization wrapper")
    Reported-by: syzbot+b187b77c8474f9648fae@syzkaller.appspotmail.com
    Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb41b8f5e855794f180f0f8a118abeb662436a07
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Thu Oct 28 15:55:34 2021 +0100

    net: phylink: avoid mvneta warning when setting pause parameters
    
    [ Upstream commit fd8d9731bcdfb22d28e45bce789bcb211c868c78 ]
    
    mvneta does not support asymetric pause modes, and it flags this by the
    lack of AsymPause in the supported field. When setting pause modes, we
    check that pause->rx_pause == pause->tx_pause, but only when pause
    autoneg is enabled. When pause autoneg is disabled, we still allow
    pause->rx_pause != pause->tx_pause, which is incorrect when the MAC
    does not support asymetric pause, and causes mvneta to issue a warning.
    
    Fix this by removing the test for pause->autoneg, so we always check
    that pause->rx_pause == pause->tx_pause for network devices that do not
    support AsymPause.
    
    Fixes: 9525ae83959b ("phylink: add phylink infrastructure")
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08449a5c0e56373847857cc20e2ea22a61bd6600
Author: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
Date:   Wed Oct 27 15:27:27 2021 +0530

    net: amd-xgbe: Toggle PLL settings during rate change
    
    [ Upstream commit daf182d360e509a494db18666799f4e85d83dda0 ]
    
    For each rate change command submission, the FW has to do a phy
    power off sequence internally. For this to happen correctly, the
    PLL re-initialization control setting has to be turned off before
    sending mailbox commands and re-enabled once the command submission
    is complete.
    
    Without the PLL control setting, the link up takes longer time in a
    fixed phy configuration.
    
    Fixes: 47f164deab22 ("amd-xgbe: Add PCI device support")
    Co-developed-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
    Signed-off-by: Sudheesh Mavila <sudheesh.mavila@amd.com>
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b17f424f88bad19282fc607ac654e88b51d03796
Author: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Date:   Thu Oct 28 12:05:00 2021 +0530

    selftests/bpf: Fix fd cleanup in sk_lookup test
    
    [ Upstream commit c3fc706e94f5653def2783ffcd809a38676b7551 ]
    
    Similar to the fix in commit:
    e31eec77e4ab ("bpf: selftests: Fix fd cleanup in get_branch_snapshot")
    
    We use designated initializer to set fds to -1 without breaking on
    future changes to MAX_SERVER constant denoting the array size.
    
    The particular close(0) occurs on non-reuseport tests, so it can be seen
    with -n 115/{2,3} but not 115/4. This can cause problems with future
    tests if they depend on BTF fd never being acquired as fd 0, breaking
    internal libbpf assumptions.
    
    Fixes: 0ab5539f8584 ("selftests/bpf: Tests for BPF_SK_LOOKUP attach point")
    Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20211028063501.2239335-8-memxor@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2989a396b891911cafd42465bd35622f5e797013
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Wed Mar 3 10:18:14 2021 +0000

    selftests: bpf: Convert sk_lookup ctx access tests to PROG_TEST_RUN
    
    [ Upstream commit 509b2937bce90089fd2785db9f27951a3d850c34 ]
    
    Convert the selftests for sk_lookup narrow context access to use
    PROG_TEST_RUN instead of creating actual sockets. This ensures that
    ctx is populated correctly when using PROG_TEST_RUN.
    
    Assert concrete values since we now control remote_ip and remote_port.
    
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20210303101816.36774-4-lmb@cloudflare.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae1f588ca1b0c9e2f82c14479e408759a786f701
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Oct 27 13:26:19 2021 -0400

    drm/amdgpu/gmc6: fix DMA mask from 44 to 40 bits
    
    [ Upstream commit 403475be6d8b122c3e6b8a47e075926d7299e5ef ]
    
    The DMA mask on SI parts is 40 bits not 44.  Copy
    paste typo.
    
    Fixes: 244511f386ccb9 ("drm/amdgpu: simplify and cleanup setting the dma mask")
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1762
    Acked-by: Christian König <christian.koenig@amd.com>
    Tested-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a586453da90c2211a7f8c227568db434c67f81dd
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Mon Oct 25 10:25:36 2021 +0200

    wcn36xx: Fix discarded frames due to wrong sequence number
    
    [ Upstream commit 113f304dbc1627c6ec9d5329d839964095768980 ]
    
    The firmware is offering features such as ARP offload, for which
    firmware crafts its own (QoS)packets without waking up the host.
    Point is that the sequence numbers generated by the firmware are
    not in sync with the host mac80211 layer and can cause packets
    such as firmware ARP reponses to be dropped by the AP (too old SN).
    
    To fix this we need to let the firmware manages the sequence
    numbers by its own (except for QoS null frames). There is a SN
    counter for each QoS queue and one global/baseline counter for
    Non-QoS.
    
    Fixes: 84aff52e4f57 ("wcn36xx: Use sequence number allocated by mac80211")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Tested-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1635150336-18736-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3965cc2e9fddcc57e23c9bfd133bda4711ea6343
Author: Benjamin Li <benl@squareup.com>
Date:   Fri Oct 22 17:15:28 2021 -0700

    wcn36xx: add proper DMA memory barriers in rx path
    
    [ Upstream commit 9bfe38e064af5decba2ffce66a2958ab8b10eaa4 ]
    
    This is essentially exactly following the dma_wmb()/dma_rmb() usage
    instructions in Documentation/memory-barriers.txt.
    
    The theoretical races here are:
    
    1. DXE (the DMA Transfer Engine in the Wi-Fi subsystem) seeing the
    dxe->ctrl & WCN36xx_DXE_CTRL_VLD write before the dxe->dst_addr_l
    write, thus performing DMA into the wrong address.
    
    2. CPU reading dxe->dst_addr_l before DXE unsets dxe->ctrl &
    WCN36xx_DXE_CTRL_VLD. This should generally be harmless since DXE
    doesn't write dxe->dst_addr_l (no risk of freeing the wrong skb).
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Benjamin Li <benl@squareup.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211023001528.3077822-1-benl@squareup.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62d12650b845669b17b6c546f8ce3bfa69bfb55f
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Oct 20 20:03:45 2021 +0800

    libertas: Fix possible memory leak in probe and disconnect
    
    [ Upstream commit 9692151e2fe7a326bafe99836fd1f20a2cc3a049 ]
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff88812c7d7400 (size 512):
      comm "kworker/6:1", pid 176, jiffies 4295003332 (age 822.830s)
      hex dump (first 32 bytes):
        00 68 1e 04 81 88 ff ff 01 00 00 00 00 00 00 00  .h..............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8167939c>] slab_post_alloc_hook+0x9c/0x490
        [<ffffffff8167f627>] kmem_cache_alloc_trace+0x1f7/0x470
        [<ffffffffa02c9873>] if_usb_probe+0x63/0x446 [usb8xxx]
        [<ffffffffa022668a>] usb_probe_interface+0x1aa/0x3c0 [usbcore]
        [<ffffffff82b59630>] really_probe+0x190/0x480
        [<ffffffff82b59a19>] __driver_probe_device+0xf9/0x180
        [<ffffffff82b59af3>] driver_probe_device+0x53/0x130
        [<ffffffff82b5a075>] __device_attach_driver+0x105/0x130
        [<ffffffff82b55949>] bus_for_each_drv+0x129/0x190
        [<ffffffff82b593c9>] __device_attach+0x1c9/0x270
        [<ffffffff82b5a250>] device_initial_probe+0x20/0x30
        [<ffffffff82b579c2>] bus_probe_device+0x142/0x160
        [<ffffffff82b52e49>] device_add+0x829/0x1300
        [<ffffffffa02229b1>] usb_set_configuration+0xb01/0xcc0 [usbcore]
        [<ffffffffa0235c4e>] usb_generic_driver_probe+0x6e/0x90 [usbcore]
        [<ffffffffa022641f>] usb_probe_device+0x6f/0x130 [usbcore]
    
    cardp is missing being freed in the error handling path of the probe
    and the path of the disconnect, which will cause memory leak.
    
    This patch adds the missing kfree().
    
    Fixes: 876c9d3aeb98 ("[PATCH] Marvell Libertas 8388 802.11b/g USB driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211020120345.2016045-3-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 975c15a19bbc9c1511c4004109fe30721cf8c8ec
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Oct 20 20:03:44 2021 +0800

    libertas_tf: Fix possible memory leak in probe and disconnect
    
    [ Upstream commit d549107305b4634c81223a853701c06bcf657bc3 ]
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff88810a2ddc00 (size 512):
      comm "kworker/6:1", pid 176, jiffies 4295009893 (age 757.220s)
      hex dump (first 32 bytes):
        00 50 05 18 81 88 ff ff 00 00 00 00 00 00 00 00  .P..............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8167939c>] slab_post_alloc_hook+0x9c/0x490
        [<ffffffff8167f627>] kmem_cache_alloc_trace+0x1f7/0x470
        [<ffffffffa02a1530>] if_usb_probe+0x60/0x37c [libertas_tf_usb]
        [<ffffffffa022668a>] usb_probe_interface+0x1aa/0x3c0 [usbcore]
        [<ffffffff82b59630>] really_probe+0x190/0x480
        [<ffffffff82b59a19>] __driver_probe_device+0xf9/0x180
        [<ffffffff82b59af3>] driver_probe_device+0x53/0x130
        [<ffffffff82b5a075>] __device_attach_driver+0x105/0x130
        [<ffffffff82b55949>] bus_for_each_drv+0x129/0x190
        [<ffffffff82b593c9>] __device_attach+0x1c9/0x270
        [<ffffffff82b5a250>] device_initial_probe+0x20/0x30
        [<ffffffff82b579c2>] bus_probe_device+0x142/0x160
        [<ffffffff82b52e49>] device_add+0x829/0x1300
        [<ffffffffa02229b1>] usb_set_configuration+0xb01/0xcc0 [usbcore]
        [<ffffffffa0235c4e>] usb_generic_driver_probe+0x6e/0x90 [usbcore]
        [<ffffffffa022641f>] usb_probe_device+0x6f/0x130 [usbcore]
    
    cardp is missing being freed in the error handling path of the probe
    and the path of the disconnect, which will cause memory leak.
    
    This patch adds the missing kfree().
    
    Fixes: c305a19a0d0a ("libertas_tf: usb specific functions")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211020120345.2016045-2-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3aa98ef8f7ad7869e4e4afb290aa713bc5380bac
Author: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
Date:   Fri Oct 22 17:26:48 2021 +0200

    KVM: s390: Fix handle_sske page fault handling
    
    [ Upstream commit 85f517b29418158d3e6e90c3f0fc01b306d2f1a1 ]
    
    If handle_sske cannot set the storage key, because there is no
    page table entry or no present large page entry, it calls
    fixup_user_fault.
    However, currently, if the call succeeds, handle_sske returns
    -EAGAIN, without having set the storage key.
    Instead, retry by continue'ing the loop without incrementing the
    address.
    The same issue in handle_pfmf was fixed by
    a11bdb1a6b78 ("KVM: s390: Fix pfmf and conditional skey emulation").
    
    Fixes: bd096f644319 ("KVM: s390: Add skey emulation fault handling")
    Signed-off-by: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Link: https://lore.kernel.org/r/20211022152648.26536-1-scgl@linux.ibm.com
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5109802499fb8416a2381d05c90cd74695377251
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Oct 26 09:51:28 2021 +0800

    samples/kretprobes: Fix return value if register_kretprobe() failed
    
    [ Upstream commit f76fbbbb5061fe14824ba5807c44bd7400a6b4e1 ]
    
    Use the actual return value instead of always -1 if register_kretprobe()
    failed.
    
    E.g. without this patch:
    
     # insmod samples/kprobes/kretprobe_example.ko func=no_such_func
     insmod: ERROR: could not insert module samples/kprobes/kretprobe_example.ko: Operation not permitted
    
    With this patch:
    
     # insmod samples/kprobes/kretprobe_example.ko func=no_such_func
     insmod: ERROR: could not insert module samples/kprobes/kretprobe_example.ko: Unknown symbol in module
    
    Link: https://lkml.kernel.org/r/1635213091-24387-2-git-send-email-yangtiezhu@loongson.cn
    
    Fixes: 804defea1c02 ("Kprobes: move kprobe examples to samples/")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3ac751944ab8ca89d8b2e33fa58920798a4400c
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Oct 25 21:56:27 2021 +0100

    spi: spi-rpc-if: Check return value of rpcif_sw_init()
    
    [ Upstream commit 0b0a281ed7001d4c4f4c47bdc84680c4997761ca ]
    
    rpcif_sw_init() can fail so make sure we check the return value
    of it and on error exit rpcif_spi_probe() callback with error code.
    
    Fixes: eb8d6d464a27 ("spi: add Renesas RPC-IF driver")
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20211025205631.21151-4-prabhakar.mahadev-lad.rj@bp.renesas.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b7b4afead622a8ee80eb820d7150f02d7a7628f
Author: Jon Maxwell <jmaxwell37@gmail.com>
Date:   Mon Oct 25 10:59:03 2021 +1100

    tcp: don't free a FIN sk_buff in tcp_remove_empty_skb()
    
    [ Upstream commit cf12e6f9124629b18a6182deefc0315f0a73a199 ]
    
    v1: Implement a more general statement as recommended by Eric Dumazet. The
    sequence number will be advanced, so this check will fix the FIN case and
    other cases.
    
    A customer reported sockets stuck in the CLOSING state. A Vmcore revealed that
    the write_queue was not empty as determined by tcp_write_queue_empty() but the
    sk_buff containing the FIN flag had been freed and the socket was zombied in
    that state. Corresponding pcaps show no FIN from the Linux kernel on the wire.
    
    Some instrumentation was added to the kernel and it was found that there is a
    timing window where tcp_sendmsg() can run after tcp_send_fin().
    
    tcp_sendmsg() will hit an error, for example:
    
    1269 ▹       if (sk->sk_err || (sk->sk_shutdown & SEND_SHUTDOWN))↩
    1270 ▹       ▹       goto do_error;↩
    
    tcp_remove_empty_skb() will then free the FIN sk_buff as "skb->len == 0". The
    TCP socket is now wedged in the FIN-WAIT-1 state because the FIN is never sent.
    
    If the other side sends a FIN packet the socket will transition to CLOSING and
    remain that way until the system is rebooted.
    
    Fix this by checking for the FIN flag in the sk_buff and don't free it if that
    is the case. Testing confirmed that fixed the issue.
    
    Fixes: fdfc5c8594c2 ("tcp: remove empty skb from write queue in error cases")
    Signed-off-by: Jon Maxwell <jmaxwell37@gmail.com>
    Reported-by: Monir Zouaoui <Monir.Zouaoui@mail.schwarz>
    Reported-by: Simon Stier <simon.stier@mail.schwarz>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3925134eff295ff12b2ca0ebd874eb058df5f21b
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Tue Oct 26 03:08:26 2021 +0200

    libbpf: Fix endianness detection in BPF_CORE_READ_BITFIELD_PROBED()
    
    [ Upstream commit 45f2bebc8079788f62f22d9e8b2819afb1789d7b ]
    
    __BYTE_ORDER is supposed to be defined by a libc, and __BYTE_ORDER__ -
    by a compiler. bpf_core_read.h checks __BYTE_ORDER == __LITTLE_ENDIAN,
    which is true if neither are defined, leading to incorrect behavior on
    big-endian hosts if libc headers are not included, which is often the
    case.
    
    Fixes: ee26dade0e3b ("libbpf: Add support for relocatable bitfields")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20211026010831.748682-2-iii@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 227efdda51b4eddd10a0a5f29c0dae3eecfd265d
Author: Mark Brown <broonie@kernel.org>
Date:   Fri Sep 24 15:41:11 2021 +0100

    tpm_tis_spi: Add missing SPI ID
    
    [ Upstream commit 7eba41fe8c7bb01ff3d4b757bd622375792bc720 ]
    
    In commit c46ed2281bbe ("tpm_tis_spi: add missing SPI device ID entries")
    we added SPI IDs for all the DT aliases to handle the fact that we always
    use SPI modaliases to load modules even when probed via DT however the
    mentioned commit missed that the SPI and OF device ID entries did not
    match and were different and so DT nodes with compatible
    "tcg,tpm_tis-spi" will not match.  Add an extra ID for tpm_tis-spi
    rather than just fix the existing one since what's currently there is
    going to be better for anyone actually using SPI IDs to instantiate.
    
    Fixes: c46ed2281bbe ("tpm_tis_spi: add missing SPI device ID entries")
    Fixes: 96c8395e2166 ("spi: Revert modalias changes")
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff1a0f71cc77ab431e5b7f8bc4bc6271931684f6
Author: Hao Wu <hao.wu@rubrik.com>
Date:   Wed Sep 8 02:26:06 2021 -0700

    tpm: fix Atmel TPM crash caused by too frequent queries
    
    [ Upstream commit 79ca6f74dae067681a779fd573c2eb59649989bc ]
    
    The Atmel TPM 1.2 chips crash with error
    `tpm_try_transmit: send(): error -62` since kernel 4.14.
    It is observed from the kernel log after running `tpm_sealdata -z`.
    The error thrown from the command is as follows
    ```
    $ tpm_sealdata -z
    Tspi_Key_LoadKey failed: 0x00001087 - layer=tddl,
    code=0087 (135), I/O error
    ```
    
    The issue was reproduced with the following Atmel TPM chip:
    ```
    $ tpm_version
    T0  TPM 1.2 Version Info:
      Chip Version:        1.2.66.1
      Spec Level:          2
      Errata Revision:     3
      TPM Vendor ID:       ATML
      TPM Version:         01010000
      Manufacturer Info:   41544d4c
    ```
    
    The root cause of the issue is due to the TPM calls to msleep()
    were replaced with usleep_range() [1], which reduces
    the actual timeout. Via experiments, it is observed that
    the original msleep(5) actually sleeps for 15ms.
    Because of a known timeout issue in Atmel TPM 1.2 chip,
    the shorter timeout than 15ms can cause the error described above.
    
    A few further changes in kernel 4.16 [2] and 4.18 [3, 4] further
    reduced the timeout to less than 1ms. With experiments,
    the problematic timeout in the latest kernel is the one
    for `wait_for_tpm_stat`.
    
    To fix it, the patch reverts the timeout of `wait_for_tpm_stat`
    to 15ms for all Atmel TPM 1.2 chips, but leave it untouched
    for Ateml TPM 2.0 chip, and chips from other vendors.
    As explained above, the chosen 15ms timeout is
    the actual timeout before this issue introduced,
    thus the old value is used here.
    Particularly, TPM_ATML_TIMEOUT_WAIT_STAT_MIN is set to 14700us,
    TPM_ATML_TIMEOUT_WAIT_STAT_MIN is set to 15000us according to
    the existing TPM_TIMEOUT_RANGE_US (300us).
    The fixed has been tested in the system with the affected Atmel chip
    with no issues observed after boot up.
    
    References:
    [1] 9f3fc7bcddcb tpm: replace msleep() with usleep_range() in TPM
    1.2/2.0 generic drivers
    [2] cf151a9a44d5 tpm: reduce tpm polling delay in tpm_tis_core
    [3] 59f5a6b07f64 tpm: reduce poll sleep time in tpm_transmit()
    [4] 424eaf910c32 tpm: reduce polling time to usecs for even finer
    granularity
    
    Fixes: 9f3fc7bcddcb ("tpm: replace msleep() with usleep_range() in TPM 1.2/2.0 generic drivers")
    Link: https://patchwork.kernel.org/project/linux-integrity/patch/20200926223150.109645-1-hao.wu@rubrik.com/
    Signed-off-by: Hao Wu <hao.wu@rubrik.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43b4860b58f3cbfdc68bf8e58e9ac9e582bdfc6c
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Wed Oct 20 17:25:22 2021 +0100

    irq: mips: avoid nested irq_enter()
    
    [ Upstream commit c65b52d02f6c1a06ddb20cba175ad49eccd6410d ]
    
    As bcm6345_l1_irq_handle() is a chained irqchip handler, it will be
    invoked within the context of the root irqchip handler, which must have
    entered IRQ context already.
    
    When bcm6345_l1_irq_handle() calls arch/mips's do_IRQ() , this will nest
    another call to irq_enter(), and the resulting nested increment to
    `rcu_data.dynticks_nmi_nesting` will cause rcu_is_cpu_rrupt_from_idle()
    to fail to identify wakeups from idle, resulting in failure to preempt,
    and RCU stalls.
    
    Chained irqchip handlers must invoke IRQ handlers by way of thee core
    irqchip code, i.e. generic_handle_irq() or generic_handle_domain_irq()
    and should not call do_IRQ(), which is intended only for root irqchip
    handlers.
    
    Fix bcm6345_l1_irq_handle() by calling generic_handle_irq() directly.
    
    Fixes: c7c42ec2baa1de7a ("irqchips/bmips: Add bcm6345-l1 interrupt controller")
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Marc Zyngier <maz@kernel.org>
    Acked-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29a1cc3b50113b78931627676071744f7d614766
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Mon Sep 20 15:24:51 2021 +0200

    KVM: s390: pv: avoid stalls for kvm_s390_pv_init_vm
    
    [ Upstream commit 1e2aa46de526a5adafe580bca4c25856bb06f09e ]
    
    When the system is heavily overcommitted, kvm_s390_pv_init_vm might
    generate stall notifications.
    
    Fix this by using uv_call_sched instead of just uv_call. This is ok because
    we are not holding spinlocks.
    
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Fixes: 214d9bbcd3a672 ("s390/mm: provide memory management functions for protected KVM guests")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Message-Id: <20210920132502.36111-4-imbrenda@linux.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 759f27cfa344313149e76c662682639f7c5fdf36
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Mon Sep 20 15:24:50 2021 +0200

    KVM: s390: pv: avoid double free of sida page
    
    [ Upstream commit d4074324b07a94a1fca476d452dfbb3a4e7bf656 ]
    
    If kvm_s390_pv_destroy_cpu is called more than once, we risk calling
    free_page on a random page, since the sidad field is aliased with the
    gbea, which is not guaranteed to be zero.
    
    This can happen, for example, if userspace calls the KVM_PV_DISABLE
    IOCTL, and it fails, and then userspace calls the same IOCTL again.
    This scenario is only possible if KVM has some serious bug or if the
    hardware is broken.
    
    The solution is to simply return successfully immediately if the vCPU
    was already non secure.
    
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Fixes: 19e1227768863a1469797c13ef8fea1af7beac2c ("KVM: S390: protvirt: Introduce instruction data area bounce buffer")
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Message-Id: <20210920132502.36111-3-imbrenda@linux.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a729eb55b3c7db244d6cc5a33739f25faf9b5c92
Author: David Hildenbrand <david@redhat.com>
Date:   Thu Sep 9 18:22:41 2021 +0200

    s390/gmap: don't unconditionally call pte_unmap_unlock() in __gmap_zap()
    
    [ Upstream commit b159f94c86b43cf7e73e654bc527255b1f4eafc4 ]
    
    ... otherwise we will try unlocking a spinlock that was never locked via a
    garbage pointer.
    
    At the time we reach this code path, we usually successfully looked up
    a PGSTE already; however, evil user space could have manipulated the VMA
    layout in the meantime and triggered removal of the page table.
    
    Fixes: 1e133ab296f3 ("s390/mm: split arch/s390/mm/pgtable.c")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Acked-by: Heiko Carstens <hca@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210909162248.14969-3-david@redhat.com
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50fcaa7155214dbc57c985bb55edb1eb8e880fdb
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Oct 22 17:31:57 2021 -0700

    libbpf: Fix BTF header parsing checks
    
    [ Upstream commit c825f5fee19caf301d9821cd79abaa734322de26 ]
    
    Original code assumed fixed and correct BTF header length. That's not
    always the case, though, so fix this bug with a proper additional check.
    And use actual header length instead of sizeof(struct btf_header) in
    sanity checks.
    
    Fixes: 8a138aed4a80 ("bpf: btf: Add BTF support to libbpf")
    Reported-by: Evgeny Vereshchagin <evvers@ya.ru>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20211023003157.726961-2-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12872fd7e40b08c92c90da6f7c16a11a65b68aa2
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Oct 22 17:31:56 2021 -0700

    libbpf: Fix overflow in BTF sanity checks
    
    [ Upstream commit 5245dafe3d49efba4d3285cf27ee1cc1eeafafc6 ]
    
    btf_header's str_off+str_len or type_off+type_len can overflow as they
    are u32s. This will lead to bypassing the sanity checks during BTF
    parsing, resulting in crashes afterwards. Fix by using 64-bit signed
    integers for comparison.
    
    Fixes: d8123624506c ("libbpf: Fix BTF data layout checks and allow empty BTF")
    Reported-by: Evgeny Vereshchagin <evvers@ya.ru>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20211023003157.726961-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 255eb8f8affd23a37c8823c167da9f9e9ad416d0
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Sat Jan 9 23:03:41 2021 -0800

    libbpf: Allow loading empty BTFs
    
    [ Upstream commit b8d52264df85ec12f370c0a8b28d0ac59a05877a ]
    
    Empty BTFs do come up (e.g., simple kernel modules with no new types and
    strings, compared to the vmlinux BTF) and there is nothing technically wrong
    with them. So remove unnecessary check preventing loading empty BTFs.
    
    Fixes: d8123624506c ("libbpf: Fix BTF data layout checks and allow empty BTF")
    Reported-by: Christopher William Snowhill <chris@kode54.net>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210110070341.1380086-2-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d4d6aa2ef803044badb1529a1bfb45680f4071e
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Wed Nov 4 20:33:57 2020 -0800

    libbpf: Fix BTF data layout checks and allow empty BTF
    
    [ Upstream commit d8123624506cd62730c9cd9c7672c698e462703d ]
    
    Make data section layout checks stricter, disallowing overlap of types and
    strings data.
    
    Additionally, allow BTFs with no type data. There is nothing inherently wrong
    with having BTF with no types (put potentially with some strings). This could
    be a situation with kernel module BTFs, if module doesn't introduce any new
    type information.
    
    Also fix invalid offset alignment check for btf->hdr->type_off.
    
    Fixes: 8a138aed4a80 ("bpf: btf: Add BTF support to libbpf")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20201105043402.2530976-8-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b95aaa493c6b3294a76eebe3930557512fbebfc
Author: Quentin Monnet <quentin@isovalent.com>
Date:   Fri Oct 22 10:47:43 2021 +0100

    bpftool: Avoid leaking the JSON writer prepared for program metadata
    
    [ Upstream commit e89ef634f81c9d90e1824ab183721f3b361472e6 ]
    
    Bpftool creates a new JSON object for writing program metadata in plain
    text mode, regardless of metadata being present or not. Then this writer
    is freed if any metadata has been found and printed, but it leaks
    otherwise. We cannot destroy the object unconditionally, because the
    destructor prints an undesirable line break. Instead, make sure the
    writer is created only after we have found program metadata to print.
    
    Found with valgrind.
    
    Fixes: aff52e685eb3 ("bpftool: Support dumping metadata")
    Signed-off-by: Quentin Monnet <quentin@isovalent.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20211022094743.11052-1-quentin@isovalent.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cd4af996cd296f36676416fc1618b3df6fbc985
Author: Jim Mattson <jmattson@google.com>
Date:   Wed Sep 29 17:36:49 2021 -0700

    KVM: selftests: Fix nested SVM tests when built with clang
    
    [ Upstream commit ed290e1c20da19fa100a3e0f421aa31b65984960 ]
    
    Though gcc conveniently compiles a simple memset to "rep stos," clang
    prefers to call the libc version of memset. If a test is dynamically
    linked, the libc memset isn't available in L1 (nor is the PLT or the
    GOT, for that matter). Even if the test is statically linked, the libc
    memset may choose to use some CPU features, like AVX, which may not be
    enabled in L1. Note that __builtin_memset doesn't solve the problem,
    because (a) the compiler is free to call memset anyway, and (b)
    __builtin_memset may also choose to use features like AVX, which may
    not be available in L1.
    
    To avoid a myriad of problems, use an explicit "rep stos" to clear the
    VMCB in generic_svm_setup(), which is called both from L0 and L1.
    
    Reported-by: Ricardo Koller <ricarkol@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Fixes: 20ba262f8631a ("selftests: KVM: AMD Nested test infrastructure")
    Message-Id: <20210930003649.4026553-1-jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 293fa72d62e46bc5f8044be7204869efad4b4d0c
Author: Ricardo Koller <ricarkol@google.com>
Date:   Wed Feb 10 03:17:19 2021 +0000

    KVM: selftests: Add operand to vmsave/vmload/vmrun in svm.c
    
    [ Upstream commit 47bc726fe8d1910872dc3d7e7ec70f8b9e6043b7 ]
    
    Building the KVM selftests with LLVM's integrated assembler fails with:
    
      $ CFLAGS=-fintegrated-as make -C tools/testing/selftests/kvm CC=clang
      lib/x86_64/svm.c:77:16: error: too few operands for instruction
              asm volatile ("vmsave\n\t" : : "a" (vmcb_gpa) : "memory");
                            ^
      <inline asm>:1:2: note: instantiated into assembly here
              vmsave
              ^
      lib/x86_64/svm.c:134:3: error: too few operands for instruction
                      "vmload\n\t"
                      ^
      <inline asm>:1:2: note: instantiated into assembly here
              vmload
              ^
    This is because LLVM IAS does not currently support calling vmsave,
    vmload, or vmload without an explicit %rax operand.
    
    Add an explicit operand to vmsave, vmload, and vmrum in svm.c. Fixing
    this was suggested by Sean Christopherson.
    
    Tested: building without this error in clang 11. The following patch
    (not queued yet) needs to be applied to solve the other remaining error:
    "selftests: kvm: remove reassignment of non-absolute variables".
    
    Suggested-by: Sean Christopherson <seanjc@google.com>
    Link: https://lore.kernel.org/kvm/X+Df2oQczVBmwEzi@google.com/
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Ricardo Koller <ricarkol@google.com>
    Message-Id: <20210210031719.769837-1-ricarkol@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d33753718156254a474055817a72de83831e43bc
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Tue Oct 19 20:27:26 2021 +0900

    smackfs: use netlbl_cfg_cipsov4_del() for deleting cipso_v4_doi
    
    [ Upstream commit 0934ad42bb2c5df90a1b9de690f93de735b622fe ]
    
    syzbot is reporting UAF at cipso_v4_doi_search() [1], for smk_cipso_doi()
    is calling kfree() without removing from the cipso_v4_doi_list list after
    netlbl_cfg_cipsov4_map_add() returned an error. We need to use
    netlbl_cfg_cipsov4_del() in order to remove from the list and wait for
    RCU grace period before kfree().
    
    Link: https://syzkaller.appspot.com/bug?extid=93dba5b91f0fed312cbd [1]
    Reported-by: syzbot <syzbot+93dba5b91f0fed312cbd@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 6c2e8ac0953fccdd ("netlabel: Update kernel configuration API")
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 807f01f60cd0a9b0c3154d7b635b02b8002d3c9f
Author: Jessica Zhang <jesszhan@codeaurora.org>
Date:   Wed Oct 20 10:57:33 2021 -0700

    drm/msm: Fix potential NULL dereference in DPU SSPP
    
    [ Upstream commit 8bf71a5719b6cc5b6ba358096081e5d50ea23ab6 ]
    
    Move initialization of sblk in _sspp_subblk_offset() after NULL check to
    avoid potential NULL pointer dereference.
    
    Fixes: 25fdd5933e4c ("drm/msm: Add SDM845 DPU support")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jessica Zhang <jesszhan@codeaurora.org>
    Link: https://lore.kernel.org/r/20211020175733.3379-1-jesszhan@codeaurora.org
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d1f3157aa9b52fecb259916925ae164ebfa7ccb
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Oct 21 10:08:32 2021 +0200

    x86/sev: Fix stack type check in vc_switch_off_ist()
    
    [ Upstream commit 5681981fb788281b09a4ea14d310d30b2bd89132 ]
    
    The value of STACK_TYPE_EXCEPTION_LAST points to the last _valid_
    exception stack. Reflect that in the check done in the
    vc_switch_off_ist() function.
    
    Fixes: a13644f3a53de ("x86/entry/64: Add entry code for #VC handler")
    Reported-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20211021080833.30875-2-joro@8bytes.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e2f97df6a0b489dd6e35d62082cdc3dc08d3ca3
Author: Kees Cook <keescook@chromium.org>
Date:   Sat Aug 28 10:57:47 2021 -0700

    clocksource/drivers/timer-ti-dm: Select TIMER_OF
    
    [ Upstream commit eda9a4f7af6ee47e9e131f20e4f8a41a97379293 ]
    
    When building OMAP_DM_TIMER without TIMER_OF, there are orphan sections
    due to the use of TIMER_OF_DELCARE() without CONFIG_TIMER_OF. Select
    CONFIG_TIMER_OF when enaling OMAP_DM_TIMER:
    
    arm-linux-gnueabi-ld: warning: orphan section `__timer_of_table' from `drivers/clocksource/timer-ti-dm-systimer.o' being placed in section `__timer_of_table'
    
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/lkml/202108282255.tkdt4ani-lkp@intel.com/
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
    Cc: Keerthy <j-keerthy@ti.com>
    Cc: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Cc: Ladislav Michl <ladis@linux-mips.org>
    Cc: Grygorii Strashko <grygorii.strashko@ti.com>
    Cc: linux-omap@vger.kernel.org
    Fixes: 52762fbd1c47 ("clocksource/drivers/timer-ti-dm: Add clockevent and clocksource support")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210828175747.3777891-1-keescook@chromium.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9f142d748b6db8e8c9850323d86651a10b77a44
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Thu Oct 7 21:13:37 2021 +0200

    PM: hibernate: fix sparse warnings
    
    [ Upstream commit 01de5fcd8b1ac0ca28d2bb0921226a54fdd62684 ]
    
    When building the kernel with sparse enabled 'C=1' the following
    warnings shows up:
    
    kernel/power/swap.c:390:29: warning: incorrect type in assignment (different base types)
    kernel/power/swap.c:390:29:    expected int ret
    kernel/power/swap.c:390:29:    got restricted blk_status_t
    
    This is due to function hib_wait_io() returns a 'blk_status_t' which is
    a bitwise u8. Commit 5416da01ff6e ("PM: hibernate: Remove
    blk_status_to_errno in hib_wait_io") seemed to have mixed up the return
    type. However, the 4e4cbee93d56 ("block: switch bios to blk_status_t")
    actually broke the behaviour by returning the wrong type.
    
    Rework so function hib_wait_io() returns a 'int' instead of
    'blk_status_t' and make sure to call function
    blk_status_to_errno(hb->error)' when returning from function
    hib_wait_io() a int gets returned.
    
    Fixes: 4e4cbee93d56 ("block: switch bios to blk_status_t")
    Fixes: 5416da01ff6e ("PM: hibernate: Remove blk_status_to_errno in hib_wait_io")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8c0b748456a42b619449e416529f497e01e19d7
Author: Max Gurtovoy <mgurtovoy@nvidia.com>
Date:   Sun Oct 17 11:58:16 2021 +0300

    nvme-rdma: fix error code in nvme_rdma_setup_ctrl
    
    [ Upstream commit 09748122009aed7bfaa7acc33c10c083a4758322 ]
    
    In case that icdoff is not zero or mandatory keyed sgls are not
    supported by the NVMe/RDMA target, we'll go to error flow but we'll
    return 0 to the caller. Fix it by returning an appropriate error code.
    
    Fixes: c66e2998c8ca ("nvme-rdma: centralize controller setup sequence")
    Signed-off-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7668cbe0cb77fdbe8ae09146fe3b94392ec6eebf
Author: Stefan Agner <stefan@agner.ch>
Date:   Tue Oct 19 21:16:47 2021 +0200

    phy: micrel: ksz8041nl: do not use power down mode
    
    [ Upstream commit 2641b62d2fab52648e34cdc6994b2eacde2d27c1 ]
    
    Some Micrel KSZ8041NL PHY chips exhibit continuous RX errors after using
    the power down mode bit (0.11). If the PHY is taken out of power down
    mode in a certain temperature range, the PHY enters a weird state which
    leads to continuously reporting RX errors. In that state, the MAC is not
    able to receive or send any Ethernet frames and the activity LED is
    constantly blinking. Since Linux is using the suspend callback when the
    interface is taken down, ending up in that state can easily happen
    during a normal startup.
    
    Micrel confirmed the issue in errata DS80000700A [*], caused by abnormal
    clock recovery when using power down mode. Even the latest revision (A4,
    Revision ID 0x1513) seems to suffer that problem, and according to the
    errata is not going to be fixed.
    
    Remove the suspend/resume callback to avoid using the power down mode
    completely.
    
    [*] https://ww1.microchip.com/downloads/en/DeviceDoc/80000700A.pdf
    
    Fixes: 1a5465f5d6a2 ("phy/micrel: Add suspend/resume support to Micrel PHYs")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Acked-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Signed-off-by: Francesco Dolcini <francesco.dolcini@toradex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d405eb1150ce83f24bdaf935e362af2982db8a2f
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Tue Oct 19 12:19:50 2021 -0600

    net: enetc: unmap DMA in enetc_send_cmd()
    
    [ Upstream commit cd4bc63de774eee95e9bac26a565cd80e0fca421 ]
    
    Coverity complains of a possible dereference of a null return value.
    
            5. returned_null: kzalloc returns NULL. [show details]
            6. var_assigned: Assigning: si_data = NULL return value from kzalloc.
    488        si_data = kzalloc(data_size, __GFP_DMA | GFP_KERNEL);
    489        cbd.length = cpu_to_le16(data_size);
    490
    491        dma = dma_map_single(&priv->si->pdev->dev, si_data,
    492                             data_size, DMA_FROM_DEVICE);
    
    While this kzalloc() is unlikely to fail, I did notice that the function
    returned without unmapping si_data.
    
    Fix this by refactoring the error paths and checking for kzalloc()
    failure.
    
    Fixes: 888ae5a3952ba ("net: enetc: add tc flower psfp offload driver")
    Cc: Claudiu Manoil <claudiu.manoil@nxp.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: netdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org (open list)
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Acked-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14e12b7a763e50776d6176639f375a34e3bc7ceb
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Sat Oct 16 17:32:43 2021 +0200

    mwifiex: Send DELBA requests according to spec
    
    [ Upstream commit cc8a8bc37466f79b24d972555237f3d591150602 ]
    
    While looking at on-air packets using Wireshark, I noticed we're never
    setting the initiator bit when sending DELBA requests to the AP: While
    we set the bit on our del_ba_param_set bitmask, we forget to actually
    copy that bitmask over to the command struct, which means we never
    actually set the initiator bit.
    
    Fix that and copy the bitmask over to the host_cmd_ds_11n_delba command
    struct.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Acked-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211016153244.24353-5-verdre@v0yd.nl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ed5bb3df6c74b982800205ea566605e6ced6339
Author: Ziyang Xuan <william.xuanziyang@huawei.com>
Date:   Fri Oct 15 12:03:35 2021 +0800

    rsi: stop thread firstly in rsi_91x_init() error handling
    
    [ Upstream commit 515e7184bdf0a3ebf1757cc77fb046b4fe282189 ]
    
    When fail to init coex module, free 'common' and 'adapter' directly, but
    common->tx_thread which will access 'common' and 'adapter' is running at
    the same time. That will trigger the UAF bug.
    
    ==================================================================
    BUG: KASAN: use-after-free in rsi_tx_scheduler_thread+0x50f/0x520 [rsi_91x]
    Read of size 8 at addr ffff8880076dc000 by task Tx-Thread/124777
    CPU: 0 PID: 124777 Comm: Tx-Thread Not tainted 5.15.0-rc5+ #19
    Call Trace:
     dump_stack_lvl+0xe2/0x152
     print_address_description.constprop.0+0x21/0x140
     ? rsi_tx_scheduler_thread+0x50f/0x520
     kasan_report.cold+0x7f/0x11b
     ? rsi_tx_scheduler_thread+0x50f/0x520
     rsi_tx_scheduler_thread+0x50f/0x520
    ...
    
    Freed by task 111873:
     kasan_save_stack+0x1b/0x40
     kasan_set_track+0x1c/0x30
     kasan_set_free_info+0x20/0x30
     __kasan_slab_free+0x109/0x140
     kfree+0x117/0x4c0
     rsi_91x_init+0x741/0x8a0 [rsi_91x]
     rsi_probe+0x9f/0x1750 [rsi_usb]
    
    Stop thread before free 'common' and 'adapter' to fix it.
    
    Fixes: 2108df3c4b18 ("rsi: add coex support")
    Signed-off-by: Ziyang Xuan <william.xuanziyang@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211015040335.1021546-1-william.xuanziyang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e27022647529f4d9d313bae8f175bd7ac83f02cf
Author: Shayne Chen <shayne.chen@mediatek.com>
Date:   Mon Oct 18 16:07:04 2021 +0800

    mt76: mt7915: fix muar_idx in mt7915_mcu_alloc_sta_req()
    
    [ Upstream commit 161cc13912d3c3e8857001988dfba39be842454a ]
    
    For broadcast/multicast wcid, the muar_idx should be 0xe.
    
    Fixes: e57b7901469f ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a270dada03552989f5b8619557f96c022263235
Author: Shayne Chen <shayne.chen@mediatek.com>
Date:   Mon Oct 18 16:07:02 2021 +0800

    mt76: mt7915: fix sta_rec_wtbl tag len
    
    [ Upstream commit afa0370f3a3a64af6d368da0bedd72ab2a026cd0 ]
    
    Fix tag len error for sta_rec_wtbl, which causes fw parsing error for
    the tags placed behind it.
    
    Fixes: e57b7901469f ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Shayne Chen <shayne.chen@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 116652a3d5dd969ee649133afaef1636bf242b56
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Sep 14 18:42:51 2021 +0200

    mt76: mt7915: fix possible infinite loop release semaphore
    
    [ Upstream commit e500c9470e26be66eb2bc6de773ae9091149118a ]
    
    Fix possible infinite loop in mt7915_load_patch if
    mt7915_mcu_patch_sem_ctrl always returns an error.
    
    Fixes: e57b7901469fc ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a8e4effbbbcb04aa02e1d29909b751350b56fb3
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Jun 22 09:48:30 2021 +0200

    mt76: mt76x02: fix endianness warnings in mt76x02_mac.c
    
    [ Upstream commit c33edef520213feccebc22c9474c685b9fb60611 ]
    
    Fix the following sparse warning in mt76x02_mac_write_txwi and
    mt76x02_mac_tx_rate_val routines:
    drivers/net/wireless/mediatek/mt76/mt76x02_mac.c:237:19:
            warning: restricted __le16 degrades to intege
            warning: cast from restricted __le16
    drivers/net/wireless/mediatek/mt76/mt76x02_mac.c:383:28:
            warning: incorrect type in assignment (different base types)
            expected restricted __le16 [usertype] rate
            got unsigned long
    
    Fixes: db9f11d3433f7 ("mt76: store wcid tx rate info in one u32 reduce locking")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d5c7f07c725607188781355fe5fead203658161
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Jun 21 23:53:22 2021 +0200

    mt76: mt7615: fix endianness warning in mt7615_mac_write_txwi
    
    [ Upstream commit d81bfb41e30c42531536c5d2baa4d275a8309715 ]
    
    Fix the following sparse warning in mt7615_mac_write_txwi routine:
    drivers/net/wireless/mediatek/mt76/mt7615/mac.c:758:17:
            warning: incorrect type in assignment
            expected restricted __le32 [usertype]
            got unsigned long
    
    Fixes: 04b8e65922f63 ("mt76: add mac80211 driver for MT7615 PCIe-based chipsets")
    Fixes: d4bf77bd74930 ("mt76: mt7615: introduce mt7663u support to mt7615_write_txwi")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4187bf331010ae3cfb46de008d4f0d418c03ce08
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Mon Oct 18 11:25:37 2021 -0700

    platform/x86: thinkpad_acpi: Fix bitwise vs. logical warning
    
    [ Upstream commit fd96e35ea7b95f1e216277805be89d66e4ae962d ]
    
    A new warning in clang points out a use of bitwise OR with boolean
    expressions in this driver:
    
    drivers/platform/x86/thinkpad_acpi.c:9061:11: error: use of bitwise '|' with boolean operands [-Werror,-Wbitwise-instead-of-logical]
            else if ((strlencmp(cmd, "level disengaged") == 0) |
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                               ||
    drivers/platform/x86/thinkpad_acpi.c:9061:11: note: cast one or both operands to int to silence this warning
    1 error generated.
    
    This should clearly be a logical OR so change it to fix the warning.
    
    Fixes: fe98a52ce754 ("ACPI: thinkpad-acpi: add sysfs support to fan subdriver")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1476
    Reported-by: Tor Vic <torvic9@mailbox.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20211018182537.2316800-1-nathan@kernel.org
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25c032c585a216b3b713408ee1a5c2f144dd84a0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Oct 16 08:21:44 2021 +0200

    mmc: mxs-mmc: disable regulator on error and in the remove function
    
    [ Upstream commit ce5f6c2c9b0fcb4094f8e162cfd37fb4294204f7 ]
    
    The 'reg_vmmc' regulator is enabled in the probe. It is never disabled.
    Neither in the error handling path of the probe nor in the remove
    function.
    
    Register a devm_action to disable it when needed.
    
    Fixes: 4dc5a79f1350 ("mmc: mxs-mmc: enable regulator for mmc slot")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/4aadb3c97835f7b80f00819c3d549e6130384e67.1634365151.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c1c7ac9d13addf1fbe27c86d2838ebeb0e3b0be
Author: Sean Young <sean@mess.org>
Date:   Wed Oct 13 09:14:10 2021 +0100

    media: ir_toy: assignment to be16 should be of correct type
    
    [ Upstream commit febfe985fc2ea052a363f6525ff624b8efd5273c ]
    
    commit f0c15b360fb6 ("media: ir_toy: prevent device from hanging during
    transmit") removed a cpu_to_be16() cast, which causes a sparse warning.
    
    Fixes: f0c15b360fb6 ("media: ir_toy: prevent device from hanging during transmit")
    Reported-by: Hans Verkuil <hverkuil@xs4all.nl>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit daf15fa1fd997749e881aedd9f03f73a11240e82
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 15 06:37:39 2021 -0700

    net: stream: don't purge sk_error_queue in sk_stream_kill_queues()
    
    [ Upstream commit 24bcbe1cc69fa52dc4f7b5b2456678ed464724d8 ]
    
    sk_stream_kill_queues() can be called on close when there are
    still outstanding skbs to transmit. Those skbs may try to queue
    notifications to the error queue (e.g. timestamps).
    If sk_stream_kill_queues() purges the queue without taking
    its lock the queue may get corrupted, and skbs leaked.
    
    This shows up as a warning about an rmem leak:
    
    WARNING: CPU: 24 PID: 0 at net/ipv4/af_inet.c:154 inet_sock_destruct+0x...
    
    The leak is always a multiple of 0x300 bytes (the value is in
    %rax on my builds, so RAX: 0000000000000300). 0x300 is truesize of
    an empty sk_buff. Indeed if we dump the socket state at the time
    of the warning the sk_error_queue is often (but not always)
    corrupted. The ->next pointer points back at the list head,
    but not the ->prev pointer. Indeed we can find the leaked skb
    by scanning the kernel memory for something that looks like
    an skb with ->sk = socket in question, and ->truesize = 0x300.
    The contents of ->cb[] of the skb confirms the suspicion that
    it is indeed a timestamp notification (as generated in
    __skb_complete_tx_timestamp()).
    
    Removing purging of sk_error_queue should be okay, since
    inet_sock_destruct() does it again once all socket refs
    are gone. Eric suggests this may cause sockets that go
    thru disconnect() to maintain notifications from the
    previous incarnations of the socket, but that should be
    okay since the race was there anyway, and disconnect()
    is not exactly dependable.
    
    Thanks to Jonathan Lemon and Omar Sandoval for help at various
    stages of tracing the issue.
    
    Fixes: cb9eff097831 ("net: new user space API for time stamping of incoming and outgoing packets")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14d24157722701de86fe45f917f6cdb62bd242f3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 13 11:13:15 2021 +0300

    drm/msm: uninitialized variable in msm_gem_import()
    
    [ Upstream commit 2203bd0e5c12ffc53ffdd4fbd7b12d6ba27e0424 ]
    
    The msm_gem_new_impl() function cleans up after itself so there is no
    need to call drm_gem_object_put().  Conceptually, it does not make sense
    to call a kref_put() function until after the reference counting has
    been initialized which happens immediately after this call in the
    drm_gem_(private_)object_init() functions.
    
    In the msm_gem_import() function the "obj" pointer is uninitialized, so
    it will lead to a crash.
    
    Fixes: 05b849111c07 ("drm/msm: prime support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211013081315.GG6010@kili
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3424931fa39e90b9beeb309380189ff1d1b18cb5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Oct 4 13:38:06 2021 +0300

    drm/msm: potential error pointer dereference in init()
    
    [ Upstream commit b6816441a14bbe356ba8590de79cfea2de6a085c ]
    
    The msm_iommu_new() returns error pointers on failure so check for that
    to avoid an Oops.
    
    Fixes: ccac7ce373c1 ("drm/msm: Refactor address space initialization")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Abhinav Kumar <abhinavk@codeaurora.org>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20211004103806.GD25015@kili
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a342cb4772f44915b1e6688b101a41c01f9e71aa
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 14 06:41:26 2021 -0700

    tcp: switch orphan_count to bare per-cpu counters
    
    [ Upstream commit 19757cebf0c5016a1f36f7fe9810a9f0b33c0832 ]
    
    Use of percpu_counter structure to track count of orphaned
    sockets is causing problems on modern hosts with 256 cpus
    or more.
    
    Stefan Bach reported a serious spinlock contention in real workloads,
    that I was able to reproduce with a netfilter rule dropping
    incoming FIN packets.
    
        53.56%  server  [kernel.kallsyms]      [k] queued_spin_lock_slowpath
                |
                ---queued_spin_lock_slowpath
                   |
                    --53.51%--_raw_spin_lock_irqsave
                              |
                               --53.51%--__percpu_counter_sum
                                         tcp_check_oom
                                         |
                                         |--39.03%--__tcp_close
                                         |          tcp_close
                                         |          inet_release
                                         |          inet6_release
                                         |          sock_close
                                         |          __fput
                                         |          ____fput
                                         |          task_work_run
                                         |          exit_to_usermode_loop
                                         |          do_syscall_64
                                         |          entry_SYSCALL_64_after_hwframe
                                         |          __GI___libc_close
                                         |
                                          --14.48%--tcp_out_of_resources
                                                    tcp_write_timeout
                                                    tcp_retransmit_timer
                                                    tcp_write_timer_handler
                                                    tcp_write_timer
                                                    call_timer_fn
                                                    expire_timers
                                                    __run_timers
                                                    run_timer_softirq
                                                    __softirqentry_text_start
    
    As explained in commit cf86a086a180 ("net/dst: use a smaller percpu_counter
    batch for dst entries accounting"), default batch size is too big
    for the default value of tcp_max_orphans (262144).
    
    But even if we reduce batch sizes, there would still be cases
    where the estimated count of orphans is beyond the limit,
    and where tcp_too_many_orphans() has to call the expensive
    percpu_counter_sum_positive().
    
    One solution is to use plain per-cpu counters, and have
    a timer to periodically refresh this cache.
    
    Updating this cache every 100ms seems about right, tcp pressure
    state is not radically changing over shorter periods.
    
    percpu_counter was nice 15 years ago while hosts had less
    than 16 cpus, not anymore by current standards.
    
    v2: Fix the build issue for CONFIG_CRYPTO_DEV_CHELSIO_TLS=m,
        reported by kernel test robot <lkp@intel.com>
        Remove unused socket argument from tcp_too_many_orphans()
    
    Fixes: dd24c00191d5 ("net: Use a percpu_counter for orphan_count")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Stefan Bach <sfb@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c85c6fadbef0a3eab41540ea628fa8fe8928c820
Author: Zhang Qiao <zhangqiao22@huawei.com>
Date:   Wed Sep 15 14:40:30 2021 +0800

    kernel/sched: Fix sched_fork() access an invalid sched_task_group
    
    [ Upstream commit 4ef0c5c6b5ba1f38f0ea1cedad0cad722f00c14a ]
    
    There is a small race between copy_process() and sched_fork()
    where child->sched_task_group point to an already freed pointer.
    
            parent doing fork()      | someone moving the parent
                                     | to another cgroup
      -------------------------------+-------------------------------
      copy_process()
          + dup_task_struct()<1>
                                      parent move to another cgroup,
                                      and free the old cgroup. <2>
          + sched_fork()
            + __set_task_cpu()<3>
            + task_fork_fair()
              + sched_slice()<4>
    
    In the worst case, this bug can lead to "use-after-free" and
    cause panic as shown above:
    
      (1) parent copy its sched_task_group to child at <1>;
    
      (2) someone move the parent to another cgroup and free the old
          cgroup at <2>;
    
      (3) the sched_task_group and cfs_rq that belong to the old cgroup
          will be accessed at <3> and <4>, which cause a panic:
    
      [] BUG: unable to handle kernel NULL pointer dereference at 0000000000000000
      [] PGD 8000001fa0a86067 P4D 8000001fa0a86067 PUD 2029955067 PMD 0
      [] Oops: 0000 [#1] SMP PTI
      [] CPU: 7 PID: 648398 Comm: ebizzy Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0.x86_64+ #1
      [] RIP: 0010:sched_slice+0x84/0xc0
    
      [] Call Trace:
      []  task_fork_fair+0x81/0x120
      []  sched_fork+0x132/0x240
      []  copy_process.part.5+0x675/0x20e0
      []  ? __handle_mm_fault+0x63f/0x690
      []  _do_fork+0xcd/0x3b0
      []  do_syscall_64+0x5d/0x1d0
      []  entry_SYSCALL_64_after_hwframe+0x65/0xca
      [] RIP: 0033:0x7f04418cd7e1
    
    Between cgroup_can_fork() and cgroup_post_fork(), the cgroup
    membership and thus sched_task_group can't change. So update child's
    sched_task_group at sched_post_fork() and move task_fork() and
    __set_task_cpu() (where accees the sched_task_group) from sched_fork()
    to sched_post_fork().
    
    Fixes: 8323f26ce342 ("sched: Fix race in task_group")
    Signed-off-by: Zhang Qiao <zhangqiao22@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Link: https://lkml.kernel.org/r/20210915064030.2231-1-zhangqiao22@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1ee11473a88d65d3abc26df976312d199139dd2
Author: Sven Eckelmann <seckelmann@datto.com>
Date:   Tue Jun 11 19:21:31 2019 +0200

    ath10k: fix max antenna gain unit
    
    [ Upstream commit 0a491167fe0cf9f26062462de2a8688b96125d48 ]
    
    Most of the txpower for the ath10k firmware is stored as twicepower (0.5 dB
    steps). This isn't the case for max_antenna_gain - which is still expected
    by the firmware as dB.
    
    The firmware is converting it from dB to the internal (twicepower)
    representation when it calculates the limits of a channel. This can be seen
    in tpc_stats when configuring "12" as max_antenna_gain. Instead of the
    expected 12 (6 dB), the tpc_stats shows 24 (12 dB).
    
    Tested on QCA9888 and IPQ4019 with firmware 10.4-3.5.3-00057.
    
    Fixes: 02256930d9b8 ("ath10k: use proper tx power unit")
    Signed-off-by: Sven Eckelmann <seckelmann@datto.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20190611172131.6064-1-sven@narfation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 786976b25ae0aaa58597a364e81e3ba3328f1211
Author: Zev Weiss <zev@bewilderbeest.net>
Date:   Tue Sep 28 02:22:38 2021 -0700

    hwmon: (pmbus/lm25066) Let compiler determine outer dimension of lm25066_coeff
    
    [ Upstream commit b7931a7b0e0df4d2a25fedd895ad32c746b77bc1 ]
    
    Maintaining this manually is error prone (there are currently only
    five chips supported, not six); gcc can do it for us automatically.
    
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Fixes: 666c14906b49 ("hwmon: (pmbus/lm25066) Drop support for LM25063")
    Link: https://lore.kernel.org/r/20210928092242.30036-5-zev@bewilderbeest.net
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fbc80c83f1185bbbb92a899335894064e1ca69ab
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Oct 12 19:27:58 2021 +0800

    hwmon: Fix possible memleak in __hwmon_device_register()
    
    [ Upstream commit ada61aa0b1184a8fda1a89a340c7d6cc4e59aee5 ]
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff888102740438 (size 8):
      comm "27", pid 859, jiffies 4295031351 (age 143.992s)
      hex dump (first 8 bytes):
        68 77 6d 6f 6e 30 00 00                          hwmon0..
      backtrace:
        [<00000000544b5996>] __kmalloc_track_caller+0x1a6/0x300
        [<00000000df0d62b9>] kvasprintf+0xad/0x140
        [<00000000d3d2a3da>] kvasprintf_const+0x62/0x190
        [<000000005f8f0f29>] kobject_set_name_vargs+0x56/0x140
        [<00000000b739e4b9>] dev_set_name+0xb0/0xe0
        [<0000000095b69c25>] __hwmon_device_register+0xf19/0x1e50 [hwmon]
        [<00000000a7e65b52>] hwmon_device_register_with_info+0xcb/0x110 [hwmon]
        [<000000006f181e86>] devm_hwmon_device_register_with_info+0x85/0x100 [hwmon]
        [<0000000081bdc567>] tmp421_probe+0x2d2/0x465 [tmp421]
        [<00000000502cc3f8>] i2c_device_probe+0x4e1/0xbb0
        [<00000000f90bda3b>] really_probe+0x285/0xc30
        [<000000007eac7b77>] __driver_probe_device+0x35f/0x4f0
        [<000000004953d43d>] driver_probe_device+0x4f/0x140
        [<000000002ada2d41>] __device_attach_driver+0x24c/0x330
        [<00000000b3977977>] bus_for_each_drv+0x15d/0x1e0
        [<000000005bf2a8e3>] __device_attach+0x267/0x410
    
    When device_register() returns an error, the name allocated in
    dev_set_name() will be leaked, the put_device() should be used
    instead of calling hwmon_dev_release() to give up the device
    reference, then the name will be freed in kobject_cleanup().
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: bab2243ce189 ("hwmon: Introduce hwmon_device_register_with_groups")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211012112758.2681084-1-yangyingliang@huawei.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e29352f162db6c06dc259d05ad538d350c82cd0b
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon Oct 11 14:12:35 2021 +0200

    net, neigh: Fix NTF_EXT_LEARNED in combination with NTF_USE
    
    [ Upstream commit e4400bbf5b15750e1b59bf4722d18d99be60c69f ]
    
    The NTF_EXT_LEARNED neigh flag is usually propagated back to user space
    upon dump of the neighbor table. However, when used in combination with
    NTF_USE flag this is not the case despite exempting the entry from the
    garbage collector. This results in inconsistent state since entries are
    typically marked in neigh->flags with NTF_EXT_LEARNED, but here they are
    not. Fix it by propagating the creation flag to ___neigh_create().
    
    Before fix:
    
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use extern_learn
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a REACHABLE
      [...]
    
    After fix:
    
      # ./ip/ip n replace 192.168.178.30 dev enp5s0 use extern_learn
      # ./ip/ip n
      192.168.178.30 dev enp5s0 lladdr f4:8c:50:5e:71:9a extern_learn REACHABLE
      [...]
    
    Fixes: 9ce33e46531d ("neighbour: support for NTF_EXT_LEARNED flag")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Roopa Prabhu <roopa@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41fe79cf115626c45d3e65f7ce890966acf2c4ec
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Oct 11 15:39:12 2021 +0300

    memstick: jmb38x_ms: use appropriate free function in jmb38x_ms_alloc_host()
    
    [ Upstream commit beae4a6258e64af609ad5995cc6b6056eb0d898e ]
    
    The "msh" pointer is device managed, meaning that memstick_alloc_host()
    calls device_initialize() on it.  That means that it can't be free
    using kfree() but must instead be freed with memstick_free_host().
    Otherwise it leads to a tiny memory leak of device resources.
    
    Fixes: 60fdd931d577 ("memstick: add support for JMicron jmb38x MemoryStick host controller")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20211011123912.GD15188@kili
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4756d7fbaf8c0c8465e7a3ca0243be1fb68ca6b6
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Sep 27 11:44:47 2021 +0200

    memstick: avoid out-of-range warning
    
    [ Upstream commit 4853396f03c3019eccf5cd113e464231e9ddf0b3 ]
    
    clang-14 complains about a sanity check that always passes when the
    page size is 64KB or larger:
    
    drivers/memstick/core/ms_block.c:1739:21: error: result of comparison of constant 65536 with expression of type 'unsigned short' is always false [-Werror,-Wtautological-constant-out-of-range-compare]
            if (msb->page_size > PAGE_SIZE) {
                ~~~~~~~~~~~~~~ ^ ~~~~~~~~~
    
    This is fine, it will still work on all architectures, so just shut
    up that warning with a cast.
    
    Fixes: 0ab30494bc4f ("memstick: add support for legacy memorysticks")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210927094520.696665-1-arnd@kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72de92d33f83737688c5979915c5570fa597b979
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Sep 21 14:00:26 2021 +0300

    mmc: sdhci-omap: Fix context restore
    
    [ Upstream commit d806e334d0390502cd2a820ad33d65d7f9bba618 ]
    
    We need to restore context in a specified order with HCTL set in two
    phases. This is similar to what omap_hsmmc_context_restore() is doing.
    Otherwise SDIO can stop working on resume.
    
    And for PM runtime and SDIO cards, we need to also save SYSCTL, IE and
    ISE.
    
    This should not be a problem currently, and these patches can be applied
    whenever suitable.
    
    Fixes: ee0f309263a6 ("mmc: sdhci-omap: Add Support for Suspend/Resume")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210921110029.21944-3-tony@atomide.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fd26ec36ef0d6b78509a2953ad1e03c93ea7caf
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Sep 21 14:00:25 2021 +0300

    mmc: sdhci-omap: Fix NULL pointer exception if regulator is not configured
    
    [ Upstream commit 8e0e7bd38b1ec7f9e5d18725ad41828be4e09859 ]
    
    If sdhci-omap is configured for an unused device instance and the device
    is not set as disabled, we can get a NULL pointer dereference:
    
    Unable to handle kernel NULL pointer dereference at virtual address
    00000045
    ...
    (regulator_set_voltage) from [<c07d7008>] (mmc_regulator_set_ocr+0x44/0xd0)
    (mmc_regulator_set_ocr) from [<c07e2d80>] (sdhci_set_ios+0xa4/0x490)
    (sdhci_set_ios) from [<c07ea690>] (sdhci_omap_set_ios+0x124/0x160)
    (sdhci_omap_set_ios) from [<c07c8e94>] (mmc_power_up.part.0+0x3c/0x154)
    (mmc_power_up.part.0) from [<c07c9d20>] (mmc_start_host+0x88/0x9c)
    (mmc_start_host) from [<c07cad34>] (mmc_add_host+0x58/0x7c)
    (mmc_add_host) from [<c07e2574>] (__sdhci_add_host+0xf0/0x22c)
    (__sdhci_add_host) from [<c07eaf68>] (sdhci_omap_probe+0x318/0x72c)
    (sdhci_omap_probe) from [<c06a39d8>] (platform_probe+0x58/0xb8)
    
    AFAIK we are not seeing this with the devices configured in the mainline
    kernel but this can cause issues for folks bringing up their boards.
    
    Fixes: 7d326930d352 ("mmc: sdhci-omap: Add OMAP SDHCI driver")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210921110029.21944-2-tony@atomide.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9fbeb5bbc4699f13b7d10bcfce4b842eb9a9e37
Author: John Fraker <jfraker@google.com>
Date:   Mon Oct 11 08:36:47 2021 -0700

    gve: Recover from queue stall due to missed IRQ
    
    [ Upstream commit 87a7f321bb6a45e54b7d6c90d032ee5636a6ad97 ]
    
    Don't always reset the driver on a TX timeout. Attempt to
    recover by kicking the queue in case an IRQ was missed.
    
    Fixes: 9e5f7d26a4c08 ("gve: Add workqueue and reset support")
    Signed-off-by: John Fraker <jfraker@google.com>
    Signed-off-by: David Awogbemila <awogbemila@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e4f708df65e7da7a1a5677ee2f8205bef89e36b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:36:22 2021 +0300

    b43: fix a lower bounds test
    
    [ Upstream commit 9b793db5fca44d01f72d3564a168171acf7c4076 ]
    
    The problem is that "channel" is an unsigned int, when it's less 5 the
    value of "channel - 5" is not a negative number as one would expect but
    is very high positive value instead.
    
    This means that "start" becomes a very high positive value.  The result
    of that is that we never enter the "for (i = start; i <= end; i++) {"
    loop.  Instead of storing the result from b43legacy_radio_aci_detect()
    it just uses zero.
    
    Fixes: ef1a628d83fc ("b43: Implement dynamic PHY API")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Michael Büsch <m@bues.ch>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211006073621.GE8404@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 508faf8721aea6b67a9e7d77b772f8649080c4f4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 6 10:35:42 2021 +0300

    b43legacy: fix a lower bounds test
    
    [ Upstream commit c1c8380b0320ab757e60ed90efc8b1992a943256 ]
    
    The problem is that "channel" is an unsigned int, when it's less 5 the
    value of "channel - 5" is not a negative number as one would expect but
    is very high positive value instead.
    
    This means that "start" becomes a very high positive value.  The result
    of that is that we never enter the "for (i = start; i <= end; i++) {"
    loop.  Instead of storing the result from b43legacy_radio_aci_detect()
    it just uses zero.
    
    Fixes: 75388acd0cd8 ("[B43LEGACY]: add mac80211-based driver for legacy BCM43xx devices")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Michael Büsch <m@bues.ch>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211006073542.GD8404@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a1610014181b13126c6e9a1a3b964675251d7d1
Author: Markus Schneider-Pargmann <msp@baylibre.com>
Date:   Thu Sep 30 21:12:42 2021 +0200

    hwrng: mtk - Force runtime pm ops for sleep ops
    
    [ Upstream commit b6f5f0c8f72d348b2d07b20d7b680ef13a7ffe98 ]
    
    Currently mtk_rng_runtime_suspend/resume is called for both runtime pm
    and system sleep operations.
    
    This is wrong as these should only be runtime ops as the name already
    suggests. Currently freezing the system will lead to a call to
    mtk_rng_runtime_suspend even if the device currently isn't active. This
    leads to a clock warning because it is disabled/unprepared although it
    isn't enabled/prepared currently.
    
    This patch fixes this by only setting the runtime pm ops and forces to
    call the runtime pm ops from the system sleep ops as well if active but
    not otherwise.
    
    Fixes: 81d2b34508c6 ("hwrng: mtk - add runtime PM support")
    Signed-off-by: Markus Schneider-Pargmann <msp@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d98683fa6df1edd86183250958a55899f4a689c
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Tue Sep 28 12:44:30 2021 +0100

    crypto: qat - disregard spurious PFVF interrupts
    
    [ Upstream commit 18fcba469ba5359c1de7e3fb16f7b9e8cd1b8e02 ]
    
    Upon receiving a PFVF message, check if the interrupt bit is set in the
    message. If it is not, that means that the interrupt was probably
    triggered by a collision. In this case, disregard the message and
    re-enable the interrupts.
    
    Fixes: ed8ccaef52fa ("crypto: qat - Add support for SRIOV")
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Reviewed-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d99fdd13a75a01e441a69534188ab48cb1d20fdc
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Tue Sep 28 12:44:29 2021 +0100

    crypto: qat - detect PFVF collision after ACK
    
    [ Upstream commit 9b768e8a3909ac1ab39ed44a3933716da7761a6f ]
    
    Detect a PFVF collision between the local and the remote function by
    checking if the message on the PFVF CSR has been overwritten.
    This is done after the remote function confirms that the message has
    been received, by clearing the interrupt bit, or the maximum number of
    attempts (ADF_IOV_MSG_ACK_MAX_RETRY) to check the CSR has been exceeded.
    
    Fixes: ed8ccaef52fa ("crypto: qat - Add support for SRIOV")
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Co-developed-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fe4b244198201d4a6c23b1b5c23cab11a11c665
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Sun Aug 22 11:48:03 2021 +0200

    media: dvb-frontends: mn88443x: Handle errors of clk_prepare_enable()
    
    [ Upstream commit 69a10678e2fba3d182e78ea041f2d1b1a6058764 ]
    
    mn88443x_cmn_power_on() did not handle possible errors of
    clk_prepare_enable() and always finished successfully so that its caller
    mn88443x_probe() did not care about failed preparing/enabling of clocks
    as well.
    
    Add missed error handling in both mn88443x_cmn_power_on() and
    mn88443x_probe(). This required to change the return value of the former
    from "void" to "int".
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 0f408ce8941f ("media: dvb-frontends: add Socionext MN88443x ISDB-S/T demodulator driver")
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Co-developed-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Signed-off-by: Kirill Shilimanov <kirill.shilimanov@huawei.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 740a794e01c5f75b22044a06bfd16183baf2c352
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sat Sep 25 22:40:26 2021 +0200

    netfilter: nft_dynset: relax superfluous check on set updates
    
    [ Upstream commit 7b1394892de8d95748d05e3ee41e85edb4abbfa1 ]
    
    Relax this condition to make add and update commands idempotent for sets
    with no timeout. The eval function already checks if the set element
    timeout is available and updates it if the update command is used.
    
    Fixes: 22fe54d5fefc ("netfilter: nf_tables: add support for dynamic set updates")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af756be29c825f267e7a8870f9179d9c35c09eb8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Sep 28 10:40:21 2021 +0200

    rcu: Always inline rcu_dynticks_task*_{enter,exit}()
    
    [ Upstream commit 7663ad9a5dbcc27f3090e6bfd192c7e59222709f ]
    
    RCU managed to grow a few noinstr violations:
    
      vmlinux.o: warning: objtool: rcu_dynticks_eqs_enter()+0x0: call to rcu_dynticks_task_trace_enter() leaves .noinstr.text section
      vmlinux.o: warning: objtool: rcu_dynticks_eqs_exit()+0xe: call to rcu_dynticks_task_trace_exit() leaves .noinstr.text section
    
    Fix them by adding __always_inline to the relevant trivial functions.
    
    Also replace the noinstr with __always_inline for the existing
    rcu_dynticks_task_*() functions since noinstr would force noinline
    them, even when empty, which seems silly.
    
    Fixes: 7d0c9c50c5a1 ("rcu-tasks: Avoid IPIing userspace/idle tasks if kernel is so built")
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68803253822c7f5b94bb23363a2a7621fa8e2ae9
Author: Yazen Ghannam <yazen.ghannam@amd.com>
Date:   Tue Oct 5 15:44:19 2021 +0000

    EDAC/amd64: Handle three rank interleaving mode
    
    [ Upstream commit 9f4873fb6af7966de8fcbd95c36b61351c1c4b1f ]
    
    AMD Rome systems and later support interleaving between three identical
    ranks within a channel.
    
    Check for this mode by counting the number of enabled chip selects and
    comparing their masks. If there are exactly three enabled chip selects
    and their masks are identical, then three rank interleaving is enabled.
    
    The size of a rank is determined from its mask value. However, three
    rank interleaving doesn't follow the method of swapping an interleave
    bit with the most significant bit. Rather, the interleave bit is flipped
    and the most significant bit remains the same. There is only a single
    interleave bit in this case.
    
    Account for this when determining the chip select size by keeping the
    most significant bit at its original value and ignoring any zero bits.
    This will return a full bitmask in [MSB:1].
    
    Fixes: e53a3b267fb0 ("EDAC/amd64: Find Chip Select memory size using Address Mask")
    Signed-off-by: Yazen Ghannam <yazen.ghannam@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20211005154419.2060504-1-yazen.ghannam@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b2d422a261b8dcf6168e2ac1fd5bd872f8d6aa9
Author: Vincent Donnefort <vincent.donnefort@arm.com>
Date:   Wed Sep 8 15:05:22 2021 +0100

    PM: EM: Fix inefficient states detection
    
    [ Upstream commit aa1a43262ad5df010768f69530fa179ff81651d3 ]
    
    Currently, a debug message is printed if an inefficient state is detected
    in the Energy Model. Unfortunately, it won't detect if the first state is
    inefficient or if two successive states are. Fix this behavior.
    
    Fixes: 27871f7a8a34 (PM: Introduce an Energy Model management framework)
    Signed-off-by: Vincent Donnefort <vincent.donnefort@arm.com>
    Reviewed-by: Quentin Perret <qperret@google.com>
    Reviewed-by: Lukasz Luba <lukasz.luba@arm.com>
    Reviewed-by: Matthias Kaehlcke <mka@chromium.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d01e847d84bf698206febd59a169b60eb2b3e077
Author: Linus Lüssing <ll@simonwunderlich.de>
Date:   Tue Oct 5 16:55:53 2021 +0300

    ath9k: Fix potential interrupt storm on queue reset
    
    [ Upstream commit 4925642d541278575ad1948c5924d71ffd57ef14 ]
    
    In tests with two Lima boards from 8devices (QCA4531 based) on OpenWrt
    19.07 we could force a silent restart of a device with no serial
    output when we were sending a high amount of UDP traffic (iperf3 at 80
    MBit/s in both directions from external hosts, saturating the wifi and
    causing a load of about 4.5 to 6) and were then triggering an
    ath9k_queue_reset().
    
    Further debugging showed that the restart was caused by the ath79
    watchdog. With disabled watchdog we could observe that the device was
    constantly going into ath_isr() interrupt handler and was returning
    early after the ATH_OP_HW_RESET flag test, without clearing any
    interrupts. Even though ath9k_queue_reset() calls
    ath9k_hw_kill_interrupts().
    
    With JTAG we could observe the following race condition:
    
    1) ath9k_queue_reset()
       ...
       -> ath9k_hw_kill_interrupts()
       -> set_bit(ATH_OP_HW_RESET, &common->op_flags);
       ...
       <- returns
    
          2) ath9k_tasklet()
             ...
             -> ath9k_hw_resume_interrupts()
             ...
             <- returns
    
                     3) loops around:
                        ...
                        handle_int()
                        -> ath_isr()
                           ...
                           -> if (test_bit(ATH_OP_HW_RESET,
                                           &common->op_flags))
                                return IRQ_HANDLED;
    
                        x) ath_reset_internal():
                           => never reached <=
    
    And in ath_isr() we would typically see the following interrupts /
    interrupt causes:
    
    * status: 0x00111030 or 0x00110030
    * async_cause: 2 (AR_INTR_MAC_IPQ)
    * sync_cause: 0
    
    So the ath9k_tasklet() reenables the ath9k interrupts
    through ath9k_hw_resume_interrupts() which ath9k_queue_reset() had just
    disabled. And ath_isr() then keeps firing because it returns IRQ_HANDLED
    without actually clearing the interrupt.
    
    To fix this IRQ storm also clear/disable the interrupts again when we
    are in reset state.
    
    Cc: Sven Eckelmann <sven@narfation.org>
    Cc: Simon Wunderlich <sw@simonwunderlich.de>
    Cc: Linus Lüssing <linus.luessing@c0d3.blue>
    Fixes: 872b5d814f99 ("ath9k: do not access hardware on IRQs during reset")
    Signed-off-by: Linus Lüssing <ll@simonwunderlich.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210914192515.9273-3-linus.luessing@c0d3.blue
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52e3545eefb68414ec317aa0ac1356443984922b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Sep 17 18:07:02 2021 +0200

    media: em28xx: Don't use ops->suspend if it is NULL
    
    [ Upstream commit 51fa3b70d27342baf1ea8aaab3e96e5f4f26d5b2 ]
    
    The call to ops->suspend for the dev->dev_next case can currently
    trigger a call on a null function pointer if ops->suspend is null.
    Skip over the use of function ops->suspend if it is null.
    
    Addresses-Coverity: ("Dereference after null check")
    
    Fixes: be7fd3c3a8c5 ("media: em28xx: Hauppauge DualHD second tuner functionality")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f03e0624e927579376fb0a7f260d5de4dfd4ecfc
Author: Anel Orazgaliyeva <anelkz@amazon.de>
Date:   Mon Sep 6 18:34:40 2021 +0000

    cpuidle: Fix kobject memory leaks in error paths
    
    [ Upstream commit e5f5a66c9aa9c331da5527c2e3fd9394e7091e01 ]
    
    Commit c343bf1ba5ef ("cpuidle: Fix three reference count leaks")
    fixes the cleanup of kobjects; however, it removes kfree() calls
    altogether, leading to memory leaks.
    
    Fix those and also defer the initialization of dev->kobj_dev until
    after the error check, so that we do not end up with a dangling
    pointer.
    
    Fixes: c343bf1ba5ef ("cpuidle: Fix three reference count leaks")
    Signed-off-by: Anel Orazgaliyeva <anelkz@amazon.de>
    Suggested-by: Aman Priyadarshi <apeureka@amazon.de>
    [ rjw: Subject edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66f7de13d1566017c02cfaa51d1e44690990ce03
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Sep 20 12:05:35 2021 +0200

    crypto: ecc - fix CRYPTO_DEFAULT_RNG dependency
    
    [ Upstream commit 38aa192a05f22f9778f9420e630f0322525ef12e ]
    
    The ecc.c file started out as part of the ECDH algorithm but got
    moved out into a standalone module later. It does not build without
    CRYPTO_DEFAULT_RNG, so now that other modules are using it as well we
    can run into this link error:
    
    aarch64-linux-ld: ecc.c:(.text+0xfc8): undefined reference to `crypto_default_rng'
    aarch64-linux-ld: ecc.c:(.text+0xff4): undefined reference to `crypto_put_default_rng'
    
    Move the 'select CRYPTO_DEFAULT_RNG' statement into the correct symbol.
    
    Fixes: 0d7a78643f69 ("crypto: ecrdsa - add EC-RDSA (GOST 34.10) algorithm")
    Fixes: 4e6602916bc6 ("crypto: ecdsa - Add support for ECDSA signature verification")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Stefan Berger <stefanb@linux.ibm.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 848f1f00c637da8cb5d5b4fb702fade5c03696df
Author: Punit Agrawal <punitagrawal@gmail.com>
Date:   Tue Sep 14 23:38:37 2021 +0900

    kprobes: Do not use local variable when creating debugfs file
    
    [ Upstream commit 8f7262cd66699a4b02eb7549b35c81b2116aad95 ]
    
    debugfs_create_file() takes a pointer argument that can be used during
    file operation callbacks (accessible via i_private in the inode
    structure). An obvious requirement is for the pointer to refer to
    valid memory when used.
    
    When creating the debugfs file to dynamically enable / disable
    kprobes, a pointer to local variable is passed to
    debugfs_create_file(); which will go out of scope when the init
    function returns. The reason this hasn't triggered random memory
    corruption is because the pointer is not accessed during the debugfs
    file callbacks.
    
    Since the enabled state is managed by the kprobes_all_disabled global
    variable, the local variable is not needed. Fix the incorrect (and
    unnecessary) usage of local variable during debugfs_file_create() by
    passing NULL instead.
    
    Link: https://lkml.kernel.org/r/163163031686.489837.4476867635937014973.stgit@devnote2
    
    Fixes: bf8f6e5b3e51 ("Kprobes: The ON/OFF knob thru debugfs")
    Signed-off-by: Punit Agrawal <punitagrawal@gmail.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c34bfe4204cdd234195f6695fccf3b2bfb87ecbd
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Aug 4 10:50:10 2021 +0200

    media: cx23885: Fix snd_card_free call on null card pointer
    
    [ Upstream commit 7266dda2f1dfe151b12ef0c14eb4d4e622fb211c ]
    
    Currently a call to snd_card_new that fails will set card with a NULL
    pointer, this causes a null pointer dereference on the error cleanup
    path when card it passed to snd_card_free. Fix this by adding a new
    error exit path that does not call snd_card_free and exiting via this
    new path.
    
    Addresses-Coverity: ("Explicit null dereference")
    
    Fixes: 9e44d63246a9 ("[media] cx23885: Add ALSA support")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 388cebfa7342cbf0ad5522c570d7630f241ebeac
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Aug 3 21:46:10 2021 +0200

    media: tm6000: Avoid card name truncation
    
    [ Upstream commit 42bb98e420d454fef3614b70ea11cc59068395f6 ]
    
    The "card" string only holds 31 characters (and the terminating NUL).
    In order to avoid truncation, use a shorter card description instead of
    the current result, "Trident TVMaster TM5600/6000/60".
    
    Suggested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: e28f49b0b2a8 ("V4L/DVB: tm6000: fix some info messages")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86626be4b629c3248ef8f6bab8253e9c69246b61
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Aug 3 21:46:09 2021 +0200

    media: si470x: Avoid card name truncation
    
    [ Upstream commit 2908249f3878a591f7918368fdf0b7b0a6c3158c ]
    
    The "card" string only holds 31 characters (and the terminating NUL).
    In order to avoid truncation, use a shorter card description instead of
    the current result, "Silicon Labs Si470x FM Radio Re".
    
    Suggested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 78656acdcf48 ("V4L/DVB (7038): USB radio driver for Silicon Labs Si470x FM Radio Receivers")
    Fixes: cc35bbddfe10 ("V4L/DVB (12416): radio-si470x: add i2c driver for si470x")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88315edafe39246624d8b3142e6da34a28c714a3
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Aug 3 21:46:08 2021 +0200

    media: radio-wl1273: Avoid card name truncation
    
    [ Upstream commit dfadec236aa99f6086141949c9dc3ec50f3ff20d ]
    
    The "card" string only holds 31 characters (and the terminating NUL).
    In order to avoid truncation, use a shorter card description instead of
    the current result, "Texas Instruments Wl1273 FM Rad".
    
    Suggested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 87d1a50ce451 ("[media] V4L2: WL1273 FM Radio: TI WL1273 FM radio driver")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4280b30ea9b5054f4afa15ae0bb282fafd543e75
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 19 22:21:25 2021 +0200

    media: mtk-vpu: Fix a resource leak in the error handling path of 'mtk_vpu_probe()'
    
    [ Upstream commit 2143ad413c05c7be24c3a92760e367b7f6aaac92 ]
    
    A successful 'clk_prepare()' call should be balanced by a corresponding
    'clk_unprepare()' call in the error handling path of the probe, as already
    done in the remove function.
    
    Update the error handling path accordingly.
    
    Fixes: 3003a180ef6b ("[media] VPU: mediatek: support Mediatek VPU")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Houlong Wei <houlong.wei@mediatek.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e43b301cb1ba05616c35ece3622b66ef3badac8b
Author: Tom Rix <trix@redhat.com>
Date:   Thu Aug 12 19:00:43 2021 +0200

    media: TDA1997x: handle short reads of hdmi info frame.
    
    [ Upstream commit 48d219f9cc667bc6fbc3e3af0b1bfd75db94fce4 ]
    
    Static analysis reports this representative problem
    
    tda1997x.c:1939: warning: 7th function call argument is an uninitialized
    value
    
    The 7th argument is buffer[0], which is set in the earlier call to
    io_readn().  When io_readn() call to io_read() fails with the first
    read, buffer[0] is not set and 0 is returned and stored in len.
    
    The later call to hdmi_infoframe_unpack()'s size parameter is the
    static size of buffer, always 40, so a short read is not caught
    in hdmi_infoframe_unpacks()'s checking.  The variable len should be
    used instead.
    
    Zero initialize buffer to 0 so it is in a known start state.
    
    Fixes: 9ac0038db9a7 ("media: i2c: Add TDA1997x HDMI receiver driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Tim Harvey <tharvey@gateworks.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c85e591b77cacf73295da17f137597c0a6e04327
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Jun 18 14:29:06 2021 +0200

    media: v4l2-ioctl: S_CTRL output the right value
    
    [ Upstream commit c87ed93574e3cd8346c05bd934c617596c12541b ]
    
    If the driver does not implement s_ctrl, but it does implement
    s_ext_ctrls, we convert the call.
    
    When that happens we have also to convert back the response from
    s_ext_ctrls.
    
    Fixes v4l2_compliance:
    Control ioctls (Input 0):
                    fail: v4l2-test-controls.cpp(411): returned control value out of range
                    fail: v4l2-test-controls.cpp(507): invalid control 00980900
            test VIDIOC_G/S_CTRL: FAIL
    
    Fixes: 35ea11ff8471 ("V4L/DVB (8430): videodev: move some functions from v4l2-dev.h to v4l2-common.h or v4l2-ioctl.h")
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2f3608a0b5075774a422bf56745f56fc90a0f28
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Fri Aug 13 16:34:20 2021 +0200

    media: dvb-usb: fix ununit-value in az6027_rc_query
    
    [ Upstream commit afae4ef7d5ad913cab1316137854a36bea6268a5 ]
    
    Syzbot reported ununit-value bug in az6027_rc_query(). The problem was
    in missing state pointer initialization. Since this function does nothing
    we can simply initialize state to REMOTE_NO_KEY_PRESSED.
    
    Reported-and-tested-by: syzbot+2cd8c5db4a85f0a04142@syzkaller.appspotmail.com
    
    Fixes: 76f9a820c867 ("V4L/DVB: AZ6027: Initial import of the driver")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a85325fc565d51beb94ad2c524dfba95f06371a
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Jul 20 18:07:49 2021 +0200

    media: cxd2880-spi: Fix a null pointer dereference on error handling path
    
    [ Upstream commit 11b982e950d2138e90bd120501df10a439006ff8 ]
    
    Currently the null pointer check on dvb_spi->vcc_supply is inverted and
    this leads to only null values of the dvb_spi->vcc_supply being passed
    to the call of regulator_disable causing null pointer dereferences.
    Fix this by only calling regulator_disable if dvb_spi->vcc_supply is
    not null.
    
    Addresses-Coverity: ("Dereference after null check")
    
    Fixes: dcb014582101 ("media: cxd2880-spi: Fix an error handling path")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4303b39b50758613ef45990440488a46febe4df9
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Jul 29 22:23:33 2021 +0200

    media: em28xx: add missing em28xx_close_extension
    
    [ Upstream commit 2c98b8a3458df03abdc6945bbef67ef91d181938 ]
    
    If em28xx dev has ->dev_next pointer, we need to delete ->dev_next list
    node from em28xx_extension_devlist on disconnect to avoid UAF bugs and
    corrupted list bugs, since driver frees this pointer on disconnect.
    
    Reported-and-tested-by: syzbot+a6969ef522a36d3344c9@syzkaller.appspotmail.com
    
    Fixes: 1a23f81b7dc3 ("V4L/DVB (9979): em28xx: move usb probe code to a proper place")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 375150b3aaf8cf7d01f6f0b582e264dd2fded814
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Sep 27 14:58:10 2021 +0200

    drm/amdgpu: fix warning for overflow check
    
    [ Upstream commit 335aea75b0d95518951cad7c4c676e6f1c02c150 ]
    
    The overflow check in amdgpu_bo_list_create() causes a warning with
    clang-14 on 64-bit architectures, since the limit can never be
    exceeded.
    
    drivers/gpu/drm/amd/amdgpu/amdgpu_bo_list.c:74:18: error: result of comparison of constant 256204778801521549 with expression of type 'unsigned int' is always false [-Werror,-Wtautological-constant-out-of-range-compare]
            if (num_entries > (SIZE_MAX - sizeof(struct amdgpu_bo_list))
                ~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    The check remains useful for 32-bit architectures, so just avoid the
    warning by using size_t as the type for the count.
    
    Fixes: 920990cb080a ("drm/amdgpu: allocate the bo_list array after the list")
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8980f9d14481606d82a8643aee6f6d0d97fc0ea7
Author: Sudarshan Rajagopalan <quic_sudaraja@quicinc.com>
Date:   Tue Sep 28 11:51:49 2021 -0700

    arm64: mm: update max_pfn after memory hotplug
    
    [ Upstream commit 8fac67ca236b961b573355e203dbaf62a706a2e5 ]
    
    After new memory blocks have been hotplugged, max_pfn and max_low_pfn
    needs updating to reflect on new PFNs being hot added to system.
    Without this patch, debug-related functions that use max_pfn such as
    get_max_dump_pfn() or read_page_owner() will not work with any page in
    memory that is hot-added after boot.
    
    Fixes: 4ab215061554 ("arm64: Add memory hotplug support")
    Signed-off-by: Sudarshan Rajagopalan <quic_sudaraja@quicinc.com>
    Signed-off-by: Chris Goldsworthy <quic_cgoldswo@quicinc.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Georgi Djakov <quic_c_gdjako@quicinc.com>
    Tested-by: Georgi Djakov <quic_c_gdjako@quicinc.com>
    Link: https://lore.kernel.org/r/a51a27ee7be66024b5ce626310d673f24107bcb8.1632853776.git.quic_cgoldswo@quicinc.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbbf816cb7f9a84696b1f6277fee85c67a1c590c
Author: Matthew Auld <matthew.auld@intel.com>
Date:   Mon Sep 27 12:41:02 2021 +0100

    drm/ttm: stop calling tt_swapin in vm_access
    
    [ Upstream commit f5d28856b89baab4232a9f841e565763fcebcdf9 ]
    
    In commit:
    
    commit 09ac4fcb3f255e9225967c75f5893325c116cdbe
    Author: Felix Kuehling <Felix.Kuehling@amd.com>
    Date:   Thu Jul 13 17:01:16 2017 -0400
    
        drm/ttm: Implement vm_operations_struct.access v2
    
    we added the vm_access hook, where we also directly call tt_swapin for
    some reason. If something is swapped-out then the ttm_tt must also be
    unpopulated, and since access_kmap should also call tt_populate, if
    needed, then swapping-in will already be handled there.
    
    If anything, calling tt_swapin directly here would likely always fail
    since the tt->pages won't yet be populated, or worse since the tt->pages
    array is never actually cleared in unpopulate this might lead to a nasty
    uaf.
    
    Fixes: 09ac4fcb3f25 ("drm/ttm: Implement vm_operations_struct.access v2")
    Signed-off-by: Matthew Auld <matthew.auld@intel.com>
    Cc: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Cc: Christian König <christian.koenig@amd.com>
    Reviewed-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210927114114.152310-1-matthew.auld@intel.com
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c39154d3d62316bcd24b0e8eda8d6569e2c67495
Author: Fabio Estevam <festevam@denx.de>
Date:   Tue Sep 28 14:00:47 2021 +0300

    ath10k: sdio: Add missing BH locking around napi_schdule()
    
    [ Upstream commit 019edd01d174ce4bb2e517dd332922514d176601 ]
    
    On a i.MX-based board with a QCA9377 Wifi chip, the following errors
    are seen after launching the 'hostapd' application:
    
    hostapd /etc/wifi.conf
    Configuration file: /etc/wifi.conf
    wlan0: interface state UNINITIALIZED->COUNTRY_UPDATE
    NOHZ tick-stop error: Non-RCU local softirq work is pending, handler #08!!!
    Using interface wlan0 with hwaddr 00:1f:7b:31:04:a0 and ssid "thessid"
    IPv6: ADDRCONF(NETDEV_CHANGE): wlan0: link becomes ready
    wlan0: interface state COUNTRY_UPDATE->ENABLED
    wlan0: AP-ENABLED
    NOHZ tick-stop error: Non-RCU local softirq work is pending, handler #08!!!
    NOHZ tick-stop error: Non-RCU local softirq work is pending, handler #08!!!
    NOHZ tick-stop error: Non-RCU local softirq work is pending, handler #08!!!
    NOHZ tick-stop error: Non-RCU local softirq work is pending, handler #08!!!
    ...
    
    Fix this problem by adding the BH locking around napi-schedule(),
    in the same way it was done in commit e63052a5dd3c ("mlx5e: add
    add missing BH locking around napi_schdule()").
    
    Its commit log provides the following explanation:
    
    "It's not correct to call napi_schedule() in pure process
    context. Because we use __raise_softirq_irqoff() we require
    callers to be in a context which will eventually lead to
    softirq handling (hardirq, bh disabled, etc.).
    
    With code as is users will see:
    
    NOHZ tick-stop error: Non-RCU local softirq work is pending, handler #08!!!
    "
    
    Fixes: cfee8793a74d ("ath10k: enable napi on RX path for sdio")
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210824144339.2796122-1-festevam@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffed645538179fce6f05557fd89b7e2f8a8120de
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Tue Sep 28 14:00:47 2021 +0300

    ath10k: Fix missing frame timestamp for beacon/probe-resp
    
    [ Upstream commit e6dfbc3ba90cc2b619229be56b485f085a0a8e1c ]
    
    When receiving a beacon or probe response, we should update the
    boottime_ns field which is the timestamp the frame was received at.
    (cf mac80211.h)
    
    This fixes a scanning issue with Android since it relies on this
    timestamp to determine when the AP has been seen for the last time
    (via the nl80211 BSS_LAST_SEEN_BOOTTIME parameter).
    
    Fixes: 5e3dd157d7e7 ("ath10k: mac80211 driver for Qualcomm Atheros 802.11ac CQA98xx devices")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1629811733-7927-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08fb0008d90ba34eba72291bf3e356c58fe38337
Author: Baochen Qiang <bqiang@codeaurora.org>
Date:   Tue Sep 28 14:00:44 2021 +0300

    ath11k: Fix memory leak in ath11k_qmi_driver_event_work
    
    [ Upstream commit 72de799aa9e3e064b35238ef053d2f0a49db055a ]
    
    The buffer pointed to by event is not freed in case
    ATH11K_FLAG_UNREGISTERING bit is set, resulting in
    memory leak, so fix it.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-01720.1-QCAHSPSWPL_V1_V2_SILICONZ_LITE-1
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Signed-off-by: Baochen Qiang <bqiang@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210913180246.193388-4-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4519fb910555453d2b5589dd0ff42a298e95583e
Author: Pradeep Kumar Chitrapu <pradeepc@codeaurora.org>
Date:   Tue Sep 28 14:00:43 2021 +0300

    ath11k: fix packet drops due to incorrect 6 GHz freq value in rx status
    
    [ Upstream commit 9d6ae1f5cf733c0e8d7f904c501fd015c4b9f0f4 ]
    
    Frequency in rx status is being filled incorrectly in the 6 GHz band as
    channel number received is invalid in this case which is causing packet
    drops. So fix that.
    
    Fixes: 5dcf42f8b79d ("ath11k: Use freq instead of channel number in rx path")
    Signed-off-by: Pradeep Kumar Chitrapu <pradeepc@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210722102054.43419-2-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6a46ec871ea7ab90a3f67cd3e0054f270125de1
Author: Sriram R <srirrama@codeaurora.org>
Date:   Tue Sep 28 12:05:40 2021 +0300

    ath11k: Avoid race during regd updates
    
    [ Upstream commit 1db2b0d0a39102238fcbf9092cefa65a710642e9 ]
    
    Whenever ath11k is bootup with a user country already set, cfg80211
    notifies this country info to ath11k soon after registration, where the
    notification is sent to the firmware for fetching the rules of this user
    country input.
    
    Multiple race conditions could be seen in this scenario where a new
    request is either lost as pointed in [1] or a new regd overwrites the
    default regd provided by the firmware during bootup. Note that, the
    default regd is used for intersection purpose and hence it should not be
    overwritten.
    
    The main reason as pointed by [1] is the usage of ATH11K_FLAG_REGISTERED
    flag which is updated after completion of core registration, whereas the
    reg notification from cfg80211 and wmi events for the corresponding
    request can happen much before that. Since the ATH11K_FLAG_REGISTERED is
    currently used to determine if the event containing reg rules belong to
    default regd or for user request, there is a possibility of the default
    regd getting overwritten.
    
    Since the default reg rules will be received only once per pdev on
    firmware load, the above flag based check can be replaced with a check
    to see if default_regd is already set, so that we can now always update
    the new_regd. Also if the new_regd is set, this will be always used to
    update the reg rules for the registered phy.
    
    [1] https://patchwork.kernel.org/project/linux-wireless/patch/1829665.1PRlr7bOQj@ripper/
    
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.4.0.1-01460-QCAHKSWPL_SILICONZ-1
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    
    Signed-off-by: Sriram R <srirrama@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210721212029.142388-4-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac49af173c6424951e9816486493a7d8b0414ae5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 28 12:05:43 2021 +0300

    ath11k: fix some sleeping in atomic bugs
    
    [ Upstream commit aadf7c81a0771b8f1c97dabca6a48bae1b387779 ]
    
    The ath11k_dbring_bufs_replenish() and ath11k_dbring_fill_bufs()
    take a "gfp" parameter but they since they take spinlocks, the
    allocations they do have to be atomic.  This causes a bug because
    ath11k_dbring_buf_setup passes GFP_KERNEL for the gfp flags.
    
    The fix is to use GFP_ATOMIC and remove the unused parameters.
    
    Fixes: bd6478559e27 ("ath11k: Add direct buffer ring support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210812070434.GE31863@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9833cb32066a35894b28d56441662aedd7bbcf02
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Sep 26 00:59:27 2021 +0200

    net: dsa: rtl8366rb: Fix off-by-one bug
    
    [ Upstream commit 5f5f12f5d4b108399130bb5c11f07765851d9cdb ]
    
    The max VLAN number with non-4K VLAN activated is 15, and the
    range is 0..15. Not 16.
    
    The impact should be low since we by default have 4K VLAN and
    thus have 4095 VLANs to play with in this switch. There will
    not be a problem unless the code is rewritten to only use
    16 VLANs.
    
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Cc: Mauri Sandberg <sandberg@mailfence.com>
    Cc: DENG Qingfang <dqfext@gmail.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Reviewed-by: Vladimir Oltean <olteanv@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78fb8c99924291d8f1d1366e467b609c30b7f7f6
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Sep 24 03:18:37 2021 +0000

    rxrpc: Fix _usecs_to_jiffies() by using usecs_to_jiffies()
    
    [ Upstream commit acde891c243c1ed85b19d4d5042bdf00914f5739 ]
    
    Directly using _usecs_to_jiffies() might be unsafe, so it's
    better to use usecs_to_jiffies() instead.
    Because we can see that the result of _usecs_to_jiffies()
    could be larger than MAX_JIFFY_OFFSET values without the
    check of the input.
    
    Fixes: c410bf01933e ("Fix the excessive initial retransmission timeout")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03725f7125db81c45544f29dd66d313f4a52f8cd
Author: Michael Walle <michael@walle.cc>
Date:   Thu Sep 16 00:03:07 2021 +0200

    crypto: caam - disable pkc for non-E SoCs
    
    [ Upstream commit f20311cc9c58052e0b215013046cbf390937910c ]
    
    On newer CAAM versions, not all accelerators are disabled if the SoC is
    a non-E variant. While the driver checks most of the modules for
    availability, there is one - PKHA - which sticks out. On non-E variants
    it is still reported as available, that is the number of instances is
    non-zero, but it has limited functionality. In particular it doesn't
    support encryption and decryption, but just signing and verifying. This
    is indicated by a bit in the PKHA_MISC field. Take this bit into account
    if we are checking for availability.
    
    This will the following error:
    [    8.167817] caam_jr 8020000.jr: 20000b0f: CCB: desc idx 11: : Invalid CHA selected.
    
    Tested on an NXP LS1028A (non-E) SoC.
    
    Fixes: d239b10d4ceb ("crypto: caam - add register map changes cf. Era 10")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Reviewed-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0b40bf3e48a5af722b2d60adade5562e481904c
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Sep 22 21:49:45 2021 +0800

    Bluetooth: btmtkuart: fix a memleak in mtk_hci_wmt_sync
    
    [ Upstream commit 3e5f2d90c28f9454e421108554707620bc23269d ]
    
    bdev->evt_skb will get freed in the normal path and one error path
    of mtk_hci_wmt_sync, while the other error paths do not free it,
    which may cause a memleak. This bug is suggested by a static analysis
    tool, please advise.
    
    Fixes: e0b67035a90b ("Bluetooth: mediatek: update the common setup between MT7622 and other devices")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 310f581f54cb0a3a079fcd1436dca35f39b7ba65
Author: Ajay Singh <ajay.kathat@microchip.com>
Date:   Thu Sep 16 16:49:18 2021 +0000

    wilc1000: fix possible memory leak in cfg_scan_result()
    
    [ Upstream commit 3c719fed0f3a5e95b1d164609ecc81c4191ade70 ]
    
    When the BSS reference holds a valid reference, it is not freed. The 'if'
    condition is wrong. Instead of the 'if (bss)' check, the 'if (!bss)' check
    is used.
    The issue is solved by removing the unnecessary 'if' check because
    cfg80211_put_bss() already performs the NULL validation.
    
    Fixes: 6cd4fa5ab691 ("staging: wilc1000: make use of cfg80211_inform_bss_frame()")
    Signed-off-by: Ajay Singh <ajay.kathat@microchip.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210916164902.74629-3-ajay.kathat@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a95dbc8b7f2ff264be884027aac3801f7ce2088
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Thu Sep 9 15:44:27 2021 +0100

    wcn36xx: Fix Antenna Diversity Switching
    
    [ Upstream commit 701668d3bfa03dabc5095fc383d5315544ee5b31 ]
    
    We have been tracking a strange bug with Antenna Diversity Switching (ADS)
    on wcn3680b for a while.
    
    ADS is configured like this:
       A. Via a firmware configuration table baked into the NV area.
           1. Defines if ADS is enabled.
           2. Defines which GPIOs are connected to which antenna enable pin.
           3. Defines which antenna/GPIO is primary and which is secondary.
    
       B. WCN36XX_CFG_VAL(ANTENNA_DIVERSITY, N)
          N is a bitmask of available antenna.
    
          Setting N to 3 indicates a bitmask of enabled antenna (1 | 2).
    
          Obviously then we can set N to 1 or N to 2 to fix to a particular
          antenna and disable antenna diversity.
    
       C. WCN36XX_CFG_VAL(ASD_PROBE_INTERVAL, XX)
          XX is the number of beacons between each antenna RSSI check.
          Setting this value to 50 means, every 50 received beacons, run the
          ADS algorithm.
    
       D. WCN36XX_CFG_VAL(ASD_TRIGGER_THRESHOLD, YY)
          YY is a two's complement integer which specifies the RSSI decibel
          threshold below which ADS will run.
          We default to -60db here, meaning a measured RSSI <= -60db will
          trigger an ADS probe.
    
       E. WCN36XX_CFG_VAL(ASD_RTT_RSSI_HYST_THRESHOLD, Z)
          Z is a hysteresis value, indicating a delta which the RSSI must
          exceed for the antenna switch to be valid.
    
          For example if HYST_THRESHOLD == 3 AntennaId1-RSSI == -60db and
          AntennaId-2-RSSI == -58db then firmware will not switch antenna.
          The threshold needs to be -57db or better to satisfy the criteria.
    
       F. A firmware feature bit also exists ANTENNA_DIVERSITY_SELECTION.
          This feature bit is used by the firmware to report if
          ANTENNA_DIVERSITY_SELECTION is supported. The host is not required to
          toggle this bit to enable or disable ADS.
    
    ADS works like this:
    
        A. Every XX beacons the firmware switches to or remains on the primary
           antenna.
    
        B. The firmware then sends a Request-To-Send (RTS) packet to the AP.
    
        C. The firmware waits for a Clear-To-Send (CTS) response from the AP.
    
        D. The firmware then notes the received RSSI on the CTS packet.
    
        E. The firmware then repeats steps A-D on the secondary antenna.
    
        F. Subsequently if the RSSI on the measured antenna is better than
           ASD_TRIGGER_THRESHOLD + the active antenna's RSSI then the
           measured antenna becomes the active antenna.
    
        G. If RSSI rises past ASD_TRIGGER_THRESHOLD then ADS doesn't run at
           all even if there is a substantially better RSSI on the alternative
           antenna.
    
    What we have been observing is that the RTS packet is being sent but the
    MAC address is a byte-swapped version of the target MAC. The ADS/RTS MAC is
    corrupted only when the link is encrypted, if the AP is open the RTS MAC is
    correct. Similarly if we configure the firmware to an RTS/CTS sequence for
    regular data - the transmitted RTS MAC is correctly formatted.
    
    Internally the wcn36xx firmware uses the indexes in the SMD commands to
    populate and extract data from specific entries in an STA lookup table. The
    AP's MAC appears a number of times in different indexes within this lookup
    table, so the MAC address extracted for the data-transmit RTS and the MAC
    address extracted for the ADS/RTS packet are not the same STA table index.
    
    Our analysis indicates the relevant firmware STA table index is
    "bssSelfStaIdx".
    
    There is an STA populate function responsible for formatting the MAC
    address of the bssSelfStaIdx including byte-swapping the MAC address.
    
    Its clear then that the required STA populate command did not run for
    bssSelfStaIdx.
    
    So taking a look at the sequence of SMD commands sent to the firmware we
    see the following downstream when moving from an unencrypted to encrypted
    BSS setup.
    
    - WLAN_HAL_CONFIG_BSS_REQ
    - WLAN_HAL_CONFIG_STA_REQ
    - WLAN_HAL_SET_STAKEY_REQ
    
    Upstream in wcn36xx we have
    
    - WLAN_HAL_CONFIG_BSS_REQ
    - WLAN_HAL_SET_STAKEY_REQ
    
    The solution then is to add the missing WLAN_HAL_CONFIG_STA_REQ between
    WLAN_HAL_CONFIG_BSS_REQ and WLAN_HAL_SET_STAKEY_REQ.
    
    No surprise WLAN_HAL_CONFIG_STA_REQ is the routine responsible for
    populating the STA lookup table in the firmware and once done the MAC sent
    by the ADS routine is in the correct byte-order.
    
    This bug is apparent with ADS but it is also the case that any other
    firmware routine that depends on the "bssSelfStaIdx" would retrieve
    malformed data on an encrypted link.
    
    Fixes: 3e977c5c523d ("wcn36xx: Define wcn3680 specific firmware parameters")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Tested-by: Benjamin Li <benl@squareup.com>
    Reviewed-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210909144428.2564650-2-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba8ba7688594f3962f46d162c12bd7e20e059590
Author: Waiman Long <longman@redhat.com>
Date:   Sat Sep 18 18:53:08 2021 -0400

    cgroup: Make rebind_subsystems() disable v2 controllers all at once
    
    [ Upstream commit 7ee285395b211cad474b2b989db52666e0430daf ]
    
    It was found that the following warning was displayed when remounting
    controllers from cgroup v2 to v1:
    
    [ 8042.997778] WARNING: CPU: 88 PID: 80682 at kernel/cgroup/cgroup.c:3130 cgroup_apply_control_disable+0x158/0x190
       :
    [ 8043.091109] RIP: 0010:cgroup_apply_control_disable+0x158/0x190
    [ 8043.096946] Code: ff f6 45 54 01 74 39 48 8d 7d 10 48 c7 c6 e0 46 5a a4 e8 7b 67 33 00 e9 41 ff ff ff 49 8b 84 24 e8 01 00 00 0f b7 40 08 eb 95 <0f> 0b e9 5f ff ff ff 48 83 c4 08 5b 5d 41 5c 41 5d 41 5e 41 5f c3
    [ 8043.115692] RSP: 0018:ffffba8a47c23d28 EFLAGS: 00010202
    [ 8043.120916] RAX: 0000000000000036 RBX: ffffffffa624ce40 RCX: 000000000000181a
    [ 8043.128047] RDX: ffffffffa63c43e0 RSI: ffffffffa63c43e0 RDI: ffff9d7284ee1000
    [ 8043.135180] RBP: ffff9d72874c5800 R08: ffffffffa624b090 R09: 0000000000000004
    [ 8043.142314] R10: ffffffffa624b080 R11: 0000000000002000 R12: ffff9d7284ee1000
    [ 8043.149447] R13: ffff9d7284ee1000 R14: ffffffffa624ce70 R15: ffffffffa6269e20
    [ 8043.156576] FS:  00007f7747cff740(0000) GS:ffff9d7a5fc00000(0000) knlGS:0000000000000000
    [ 8043.164663] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 8043.170409] CR2: 00007f7747e96680 CR3: 0000000887d60001 CR4: 00000000007706e0
    [ 8043.177539] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 8043.184673] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 8043.191804] PKRU: 55555554
    [ 8043.194517] Call Trace:
    [ 8043.196970]  rebind_subsystems+0x18c/0x470
    [ 8043.201070]  cgroup_setup_root+0x16c/0x2f0
    [ 8043.205177]  cgroup1_root_to_use+0x204/0x2a0
    [ 8043.209456]  cgroup1_get_tree+0x3e/0x120
    [ 8043.213384]  vfs_get_tree+0x22/0xb0
    [ 8043.216883]  do_new_mount+0x176/0x2d0
    [ 8043.220550]  __x64_sys_mount+0x103/0x140
    [ 8043.224474]  do_syscall_64+0x38/0x90
    [ 8043.228063]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    It was caused by the fact that rebind_subsystem() disables
    controllers to be rebound one by one. If more than one disabled
    controllers are originally from the default hierarchy, it means that
    cgroup_apply_control_disable() will be called multiple times for the
    same default hierarchy. A controller may be killed by css_kill() in
    the first round. In the second round, the killed controller may not be
    completely dead yet leading to the warning.
    
    To avoid this problem, we collect all the ssid's of controllers that
    needed to be disabled from the default hierarchy and then disable them
    in one go instead of one by one.
    
    Fixes: 334c3679ec4b ("cgroup: reimplement rebind_subsystems() using cgroup_apply_control() and friends")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a585e04e3472c6966fe73edd40420dad6fc911b3
Author: Yajun Deng <yajun.deng@linux.dev>
Date:   Sat Sep 18 17:04:10 2021 +0800

    net: net_namespace: Fix undefined member in key_remove_domain()
    
    [ Upstream commit aed0826b0cf2e488900ab92193893e803d65c070 ]
    
    The key_domain member in struct net only exists if we define CONFIG_KEYS.
    So we should add the define when we used key_domain.
    
    Fixes: 9b242610514f ("keys: Network namespace domain tag")
    Signed-off-by: Yajun Deng <yajun.deng@linux.dev>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb4a58f5194e7391f4caff65041be243639ecbc5
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Sep 3 10:40:01 2021 +0200

    lockdep: Let lock_is_held_type() detect recursive read as read
    
    [ Upstream commit 2507003a1d10917c9158077bf6030719d02c941e ]
    
    lock_is_held_type(, 1) detects acquired read locks. It only recognized
    locks acquired with lock_acquire_shared(). Read locks acquired with
    lock_acquire_shared_recursive() are not recognized because a `2' is
    stored as the read value.
    
    Rework the check to additionally recognise lock's read value one and two
    as a read held lock.
    
    Fixes: e918188611f07 ("locking: More accurate annotations for read_lock()")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Boqun Feng <boqun.feng@gmail.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Link: https://lkml.kernel.org/r/20210903084001.lblecrvz4esl4mrr@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38098444b7877726b49fd525a9c001f78bde97cb
Author: liuyuntao <liuyuntao10@huawei.com>
Date:   Sat Aug 28 18:43:21 2021 +0800

    virtio-gpu: fix possible memory allocation failure
    
    [ Upstream commit 5bd4f20de8acad37dbb3154feb34dbc36d506c02 ]
    
    When kmem_cache_zalloc in virtio_gpu_get_vbuf fails, it will return
    an error code. But none of its callers checks this error code, and
    a core dump will take place.
    
    Considering many of its callers can't handle such error, I add
    a __GFP_NOFAIL flag when calling kmem_cache_zalloc to make sure
    it won't fail, and delete those unused error handlings.
    
    Fixes: dc5698e80cf724 ("Add virtio gpu driver.")
    Signed-off-by: Yuntao Liu <liuyuntao10@huawei.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20210828104321.3410312-1-liuyuntao10@huawei.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 582de9e38584f0578c2d2934644bc61d9247e707
Author: Iago Toral Quiroga <itoral@igalia.com>
Date:   Wed Sep 15 12:05:07 2021 +0200

    drm/v3d: fix wait for TMU write combiner flush
    
    [ Upstream commit e4f868191138975f2fdf2f37c11318b47db4acc9 ]
    
    The hardware sets the TMUWCF bit back to 0 when the TMU write
    combiner flush completes so we should be checking for that instead
    of the L2TFLS bit.
    
    v2 (Melissa Wen):
      - Add Signed-off-by and Fixes tags.
      - Change the error message for the timeout to be more clear.
    
    Fixes spurious Vulkan CTS failures in:
    dEQP-VK.binding_model.descriptorset_random.*
    
    Fixes: d223f98f02099 ("drm/v3d: Add support for compute shader dispatch.")
    Signed-off-by: Iago Toral Quiroga <itoral@igalia.com>
    Reviewed-by: Melissa Wen <mwen@igalia.com>
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210915100507.3945-1-itoral@igalia.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0bc12b8482684fe4d0e48b367ca4fcb8580e81a
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Mar 26 16:12:05 2021 +0100

    objtool: Fix static_call list generation
    
    [ Upstream commit a958c4fea768d2c378c89032ab41d38da2a24422 ]
    
    Currently, objtool generates tail call entries in add_jump_destination()
    but waits until validate_branch() to generate the regular call entries.
    Move these to add_call_destination() for consistency.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Link: https://lkml.kernel.org/r/20210326151259.691529901@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b36ab509e1817e60f73ce297494f0de1b7ed2c08
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jun 24 11:41:00 2021 +0200

    x86/xen: Mark cpu_bringup_and_idle() as dead_end_function
    
    [ Upstream commit 9af9dcf11bda3e2c0e24c1acaacb8685ad974e93 ]
    
    The asm_cpu_bringup_and_idle() function is required to push the return
    value on the stack in order to make ORC happy, but the only reason
    objtool doesn't complain is because of a happy accident.
    
    The thing is that asm_cpu_bringup_and_idle() doesn't return, so
    validate_branch() never terminates and falls through to the next
    function, which in the normal case is the hypercall_page. And that, as
    it happens, is 4095 NOPs and a RET.
    
    Make asm_cpu_bringup_and_idle() terminate on it's own, by making the
    function it calls as a dead-end. This way we no longer rely on what
    code happens to come after.
    
    Fixes: c3881eb58d56 ("x86/xen: Make the secondary CPU idle tasks reliable")
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Link: https://lore.kernel.org/r/20210624095147.693801717@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abf37e855e53fe5b9bd4aeda047884e6fff9e32e
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Jan 21 15:29:25 2021 -0600

    objtool: Add xen_start_kernel() to noreturn list
    
    [ Upstream commit c26acfbbfbc2ae4167e33825793e85e1a53058d8 ]
    
    xen_start_kernel() doesn't return.  Annotate it as such so objtool can
    follow the code flow.
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Link: https://lore.kernel.org/r/930deafa89256c60b180442df59a1bbae48f30ab.1611263462.git.jpoimboe@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b72caabc47011d03f44064452b2c65e8ed18326
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Tue Sep 14 23:21:00 2021 +0200

    MIPS: lantiq: dma: fix burst length for DEU
    
    [ Upstream commit 5ad74d39c51dd41b3c819f4f5396655f0629b4fd ]
    
    The current definition of 2W burst length is invalid.
    This patch fixes it. Current downstream DEU driver doesn't
    use DMA. An incorrect burst length value doesn't cause any
    errors. This patch also adds other burst length values.
    
    Fixes: dfec1a827d2b ("MIPS: Lantiq: Add DMA support")
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 226d68fb6c0a22cf8cc258ff8912956516f944c1
Author: Neeraj Upadhyay <neeraju@codeaurora.org>
Date:   Wed Aug 18 13:34:00 2021 +0530

    rcu: Fix existing exp request check in sync_sched_exp_online_cleanup()
    
    [ Upstream commit f0b2b2df5423fb369ac762c77900bc7765496d58 ]
    
    The sync_sched_exp_online_cleanup() checks to see if RCU needs
    an expedited quiescent state from the incoming CPU, sending it
    an IPI if so. Before sending IPI, it checks whether expedited
    qs need has been already requested for the incoming CPU, by
    checking rcu_data.cpu_no_qs.b.exp for the current cpu, on which
    sync_sched_exp_online_cleanup() is running. This works for the
    case where incoming CPU is same as self. However, for the case
    where incoming CPU is different from self, expedited request
    won't get marked, which can potentially delay reporting of
    expedited quiescent state for the incoming CPU.
    
    Fixes: e015a3411220 ("rcu: Avoid self-IPI in sync_sched_exp_online_cleanup()")
    Signed-off-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c20d8c197454068da758a83e09d93683f520d681
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Thu Sep 2 23:13:06 2021 -0400

    Bluetooth: fix init and cleanup of sco_conn.timeout_work
    
    [ Upstream commit 49d8a5606428ca0962d09050a5af81461ff90fbb ]
    
    Before freeing struct sco_conn, all delayed timeout work should be
    cancelled. Otherwise, sco_sock_timeout could potentially use the
    sco_conn after it has been freed.
    
    Additionally, sco_conn.timeout_work should be initialized when the
    connection is allocated, not when the channel is added. This is
    because an sco_conn can create channels with multiple sockets over its
    lifetime, which happens if sockets are released but the connection
    isn't deleted.
    
    Fixes: ba316be1b6a0 ("Bluetooth: schedule SCO timeouts with delayed_work")
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19337ed10e7e7d36b017b40d08eece6ab428d3af
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Fri Oct 29 11:29:07 2021 -0700

    selftests/bpf: Fix strobemeta selftest regression
    
    [ Upstream commit 0133c20480b14820d43c37c0e9502da4bffcad3a ]
    
    After most recent nightly Clang update strobemeta selftests started
    failing with the following error (relevant portion of assembly included):
    
      1624: (85) call bpf_probe_read_user_str#114
      1625: (bf) r1 = r0
      1626: (18) r2 = 0xfffffffe
      1628: (5f) r1 &= r2
      1629: (55) if r1 != 0x0 goto pc+7
      1630: (07) r9 += 104
      1631: (6b) *(u16 *)(r9 +0) = r0
      1632: (67) r0 <<= 32
      1633: (77) r0 >>= 32
      1634: (79) r1 = *(u64 *)(r10 -456)
      1635: (0f) r1 += r0
      1636: (7b) *(u64 *)(r10 -456) = r1
      1637: (79) r1 = *(u64 *)(r10 -368)
      1638: (c5) if r1 s< 0x1 goto pc+778
      1639: (bf) r6 = r8
      1640: (0f) r6 += r7
      1641: (b4) w1 = 0
      1642: (6b) *(u16 *)(r6 +108) = r1
      1643: (79) r3 = *(u64 *)(r10 -352)
      1644: (79) r9 = *(u64 *)(r10 -456)
      1645: (bf) r1 = r9
      1646: (b4) w2 = 1
      1647: (85) call bpf_probe_read_user_str#114
    
      R1 unbounded memory access, make sure to bounds check any such access
    
    In the above code r0 and r1 are implicitly related. Clang knows that,
    but verifier isn't able to infer this relationship.
    
    Yonghong Song narrowed down this "regression" in code generation to
    a recent Clang optimization change ([0]), which for BPF target generates
    code pattern that BPF verifier can't handle and loses track of register
    boundaries.
    
    This patch works around the issue by adding an BPF assembly-based helper
    that helps to prove to the verifier that upper bound of the register is
    a given constant by controlling the exact share of generated BPF
    instruction sequence. This fixes the immediate issue for strobemeta
    selftest.
    
      [0] https://github.com/llvm/llvm-project/commit/acabad9ff6bf13e00305d9d8621ee8eafc1f8b08
    
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20211029182907.166910-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc9199271c32ec104eac405f7d412283b86e0440
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Oct 25 11:26:49 2021 +0200

    netfilter: conntrack: set on IPS_ASSURED if flows enters internal stream state
    
    [ Upstream commit b7b1d02fc43925a4d569ec221715db2dfa1ce4f5 ]
    
    The internal stream state sets the timeout to 120 seconds 2 seconds
    after the creation of the flow, attach this internal stream state to the
    IPS_ASSURED flag for consistent event reporting.
    
    Before this patch:
    
          [NEW] udp      17 30 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 [UNREPLIED] src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282
       [UPDATE] udp      17 30 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282
       [UPDATE] udp      17 30 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282 [ASSURED]
      [DESTROY] udp      17 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282 [ASSURED]
    
    Note IPS_ASSURED for the flow not yet in the internal stream state.
    
    after this update:
    
          [NEW] udp      17 30 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 [UNREPLIED] src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282
       [UPDATE] udp      17 30 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282
       [UPDATE] udp      17 120 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282 [ASSURED]
      [DESTROY] udp      17 src=10.246.11.13 dst=216.239.35.0 sport=37282 dport=123 src=216.239.35.0 dst=10.246.11.13 sport=123 dport=37282 [ASSURED]
    
    Before this patch, short-lived UDP flows never entered IPS_ASSURED, so
    they were already candidate flow to be deleted by early_drop under
    stress.
    
    Before this patch, IPS_ASSURED is set on regardless the internal stream
    state, attach this internal stream state to IPS_ASSURED.
    
    packet #1 (original direction) enters NEW state
    packet #2 (reply direction) enters ESTABLISHED state, sets on IPS_SEEN_REPLY
    paclet #3 (any direction) sets on IPS_ASSURED (if 2 seconds since the
              creation has passed by).
    
    Reported-by: Maciej Żenczykowski <zenczykowski@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c5e946794806474a421f24e62c569971f4401e7
Author: Sven Schnelle <svens@stackframe.org>
Date:   Fri Oct 15 21:49:23 2021 +0200

    parisc/kgdb: add kgdb_roundup() to make kgdb work with idle polling
    
    [ Upstream commit 66e29fcda1824f0427966fbee2bd2c85bf362c82 ]
    
    With idle polling, IPIs are not sent when a CPU idle, but queued
    and run later from do_idle(). The default kgdb_call_nmi_hook()
    implementation gets the pointer to struct pt_regs from get_irq_reqs(),
    which doesn't work in that case because it was not called from the
    IPI interrupt handler. Fix it by defining our own kgdb_roundup()
    function which sents an IPI_ENTER_KGDB. When that IPI is received
    on the target CPU kgdb_nmicallback() is called.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1ec31a0befa5458366959224e8e6d94c1513fa1
Author: Sven Schnelle <svens@stackframe.org>
Date:   Sat Oct 9 23:15:17 2021 +0200

    parisc/unwind: fix unwinder when CONFIG_64BIT is enabled
    
    [ Upstream commit 8e0ba125c2bf1030af3267058019ba86da96863f ]
    
    With 64 bit kernels unwind_special() is not working because
    it compares the pc to the address of the function descriptor.
    Add a helper function that compares pc with the dereferenced
    address. This fixes all of the backtraces on my c8000. Without
    this changes, a lot of backtraces are missing in kdb or the
    show-all-tasks command from /proc/sysrq-trigger.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee75174f6ab93611e1623f0ae5590beda008aef5
Author: Gao Xiang <hsiangkao@linux.alibaba.com>
Date:   Mon Oct 25 15:43:11 2021 +0800

    erofs: don't trigger WARN() when decompression fails
    
    [ Upstream commit a0961f351d82d43ab0b845304caa235dfe249ae9 ]
    
    syzbot reported a WARNING [1] due to corrupted compressed data.
    
    As Dmitry said, "If this is not a kernel bug, then the code should
    not use WARN. WARN if for kernel bugs and is recognized as such by
    all testing systems and humans."
    
    [1] https://lore.kernel.org/r/000000000000b3586105cf0ff45e@google.com
    
    Link: https://lore.kernel.org/r/20211025074311.130395-1-hsiangkao@linux.alibaba.com
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Reported-by: syzbot+d8aaffc3719597e8cfb4@syzkaller.appspotmail.com
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50a2d1229b512d79233ce57ec5226f29467af8e1
Author: Helge Deller <deller@gmx.de>
Date:   Tue Oct 5 00:05:43 2021 +0200

    task_stack: Fix end_of_stack() for architectures with upwards-growing stack
    
    [ Upstream commit 9cc2fa4f4a92ccc6760d764e7341be46ee8aaaa1 ]
    
    The function end_of_stack() returns a pointer to the last entry of a
    stack. For architectures like parisc where the stack grows upwards
    return the pointer to the highest address in the stack.
    
    Without this change I faced a crash on parisc, because the stackleak
    functionality wrote STACKLEAK_POISON to the lowest address and thus
    overwrote the first 4 bytes of the task_struct which included the
    TIF_FLAGS.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44d4c43babb07a89e0308b1da3d94df1a9bd19ab
Author: Sven Schnelle <svens@stackframe.org>
Date:   Sat Oct 9 20:24:39 2021 +0200

    parisc: fix warning in flush_tlb_all
    
    [ Upstream commit 1030d681319b43869e0d5b568b9d0226652d1a6f ]
    
    I've got the following splat after enabling preemption:
    
    [    3.724721] BUG: using __this_cpu_add() in preemptible [00000000] code: swapper/0/1
    [    3.734630] caller is __this_cpu_preempt_check+0x38/0x50
    [    3.740635] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.15.0-rc4-64bit+ #324
    [    3.744605] Hardware name: 9000/785/C8000
    [    3.744605] Backtrace:
    [    3.744605]  [<00000000401d9d58>] show_stack+0x74/0xb0
    [    3.744605]  [<0000000040c27bd4>] dump_stack_lvl+0x10c/0x188
    [    3.744605]  [<0000000040c27c84>] dump_stack+0x34/0x48
    [    3.744605]  [<0000000040c33438>] check_preemption_disabled+0x178/0x1b0
    [    3.744605]  [<0000000040c334f8>] __this_cpu_preempt_check+0x38/0x50
    [    3.744605]  [<00000000401d632c>] flush_tlb_all+0x58/0x2e0
    [    3.744605]  [<00000000401075c0>] 0x401075c0
    [    3.744605]  [<000000004010b8fc>] 0x4010b8fc
    [    3.744605]  [<00000000401080fc>] 0x401080fc
    [    3.744605]  [<00000000401d5224>] do_one_initcall+0x128/0x378
    [    3.744605]  [<0000000040102de8>] 0x40102de8
    [    3.744605]  [<0000000040c33864>] kernel_init+0x60/0x3a8
    [    3.744605]  [<00000000401d1020>] ret_from_kernel_thread+0x20/0x28
    [    3.744605]
    
    Fix this by moving the __inc_irq_stat() into the locked section.
    
    Signed-off-by: Sven Schnelle <svens@stackframe.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8166a27c64800a1a3fade1b54c947d369c9f7ef
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Wed Oct 27 13:26:19 2021 -0600

    selftests/core: fix conflicting types compile error for close_range()
    
    [ Upstream commit f35dcaa0a8a29188ed61083d153df1454cf89d08 ]
    
    close_range() test type conflicts with close_range() library call in
    x86_64-linux-gnu/bits/unistd_ext.h. Fix it by changing the name to
    core_close_range().
    
    gcc -g -I../../../../usr/include/    close_range_test.c  -o ../tools/testing/selftests/core/close_range_test
    In file included from close_range_test.c:16:
    close_range_test.c:57:6: error: conflicting types for ‘close_range’; have ‘void(struct __test_metadata *)’
       57 | TEST(close_range)
          |      ^~~~~~~~~~~
    ../kselftest_harness.h:181:21: note: in definition of macro ‘__TEST_IMPL’
      181 |         static void test_name(struct __test_metadata *_metadata); \
          |                     ^~~~~~~~~
    close_range_test.c:57:1: note: in expansion of macro ‘TEST’
       57 | TEST(close_range)
          | ^~~~
    In file included from /usr/include/unistd.h:1204,
                     from close_range_test.c:13:
    /usr/include/x86_64-linux-gnu/bits/unistd_ext.h:56:12: note: previous declaration of ‘close_range’ with type ‘int(unsigned int,  unsigned int,  int)’
       56 | extern int close_range (unsigned int __fd, unsigned int __max_fd,
          |            ^~~~~~~~~~~
    
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f038b1a941e87886f6bbced0a65aea343a9859e
Author: Anson Jacob <Anson.Jacob@amd.com>
Date:   Fri Sep 17 18:29:36 2021 -0400

    drm/amd/display: dcn20_resource_construct reduce scope of FPU enabled
    
    [ Upstream commit bc39a69a2ac484e6575a958567c162ef56c9f278 ]
    
    Limit when FPU is enabled to only functions that does FPU operations for
    dcn20_resource_construct, which gets called during driver
    initialization.
    
    Enabling FPU operation disables preemption.  Sleeping functions(mutex
    (un)lock, memory allocation using GFP_KERNEL, etc.) should not be called
    when preemption is disabled.
    
    Fixes the following case caught by enabling
    CONFIG_DEBUG_ATOMIC_SLEEP in kernel config
    [    1.338434] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:281
    [    1.347395] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 197, name: systemd-udevd
    [    1.356356] CPU: 7 PID: 197 Comm: systemd-udevd Not tainted 5.13.0+ #3
    [    1.356358] Hardware name: System manufacturer System Product Name/PRIME X570-PRO, BIOS 3405 02/01/2021
    [    1.356360] Call Trace:
    [    1.356361]  dump_stack+0x6b/0x86
    [    1.356366]  ___might_sleep.cold+0x87/0x98
    [    1.356370]  __might_sleep+0x4b/0x80
    [    1.356372]  mutex_lock+0x21/0x50
    [    1.356376]  smu_get_uclk_dpm_states+0x3f/0x80 [amdgpu]
    [    1.356538]  pp_nv_get_uclk_dpm_states+0x35/0x50 [amdgpu]
    [    1.356711]  init_soc_bounding_box+0xf9/0x210 [amdgpu]
    [    1.356892]  ? create_object+0x20d/0x340
    [    1.356897]  ? dcn20_resource_construct+0x46f/0xd30 [amdgpu]
    [    1.357077]  dcn20_resource_construct+0x4b1/0xd30 [amdgpu]
    ...
    
    Tested on: 5700XT (NAVI10 0x1002:0x731F 0x1DA2:0xE410 0xC1)
    
    Cc: Christian König <christian.koenig@amd.com>
    Cc: Hersen Wu <hersenxs.wu@amd.com>
    Cc: Anson Jacob <Anson.Jacob@amd.com>
    Cc: Harry Wentland <harry.wentland@amd.com>
    
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Acked-by: Agustin Gutierrez <agustin.gutierrez@amd.com>
    Signed-off-by: Anson Jacob <Anson.Jacob@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddfcae905238b3e3fef7440feba455b957d96bef
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Tue Oct 12 17:50:05 2021 +0200

    x86/hyperv: Protect set_hv_tscchange_cb() against getting preempted
    
    [ Upstream commit 285f68afa8b20f752b0b7194d54980b5e0e27b75 ]
    
    The following issue is observed with CONFIG_DEBUG_PREEMPT when KVM loads:
    
     KVM: vmx: using Hyper-V Enlightened VMCS
     BUG: using smp_processor_id() in preemptible [00000000] code: systemd-udevd/488
     caller is set_hv_tscchange_cb+0x16/0x80
     CPU: 1 PID: 488 Comm: systemd-udevd Not tainted 5.15.0-rc5+ #396
     Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.0 12/17/2019
     Call Trace:
      dump_stack_lvl+0x6a/0x9a
      check_preemption_disabled+0xde/0xe0
      ? kvm_gen_update_masterclock+0xd0/0xd0 [kvm]
      set_hv_tscchange_cb+0x16/0x80
      kvm_arch_init+0x23f/0x290 [kvm]
      kvm_init+0x30/0x310 [kvm]
      vmx_init+0xaf/0x134 [kvm_intel]
      ...
    
    set_hv_tscchange_cb() can get preempted in between acquiring
    smp_processor_id() and writing to HV_X64_MSR_REENLIGHTENMENT_CONTROL. This
    is not an issue by itself: HV_X64_MSR_REENLIGHTENMENT_CONTROL is a
    partition-wide MSR and it doesn't matter which particular CPU will be
    used to receive reenlightenment notifications. The only real problem can
    (in theory) be observed if the CPU whose id was acquired with
    smp_processor_id() goes offline before we manage to write to the MSR,
    the logic in hv_cpu_die() won't be able to reassign it correctly.
    
    Reported-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Link: https://lore.kernel.org/r/20211012155005.1613352-1-vkuznets@redhat.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4cfdf5fa8fcb60c55e825de3c0876a2a27778b5
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Mon Oct 18 12:57:57 2021 +0200

    wcn36xx: Correct band/freq reporting on RX
    
    [ Upstream commit 8a27ca39478270e07baf9c09aa0c99709769ba03 ]
    
    For packets originating from hardware scan, the channel and band is
    included in the buffer descriptor (bd->rf_band & bd->rx_ch).
    
    For 2Ghz band the channel value is directly reported in the 4-bit
    rx_ch field. For 5Ghz band, the rx_ch field contains a mapping
    index (given the 4-bit limitation).
    
    The reserved0 value field is also used to extend 4-bit mapping to
    5-bit mapping to support more than 16 5Ghz channels.
    
    This change adds correct reporting of the frequency/band, that is
    used in scan mechanism. And is required for 5Ghz hardware scan
    support.
    
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Tested-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634554678-7993-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a27095cda17df56acc97e8e7dc765ff5d8e5f479
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Mon Oct 18 15:34:13 2021 +0800

    spi: bcm-qspi: Fix missing clk_disable_unprepare() on error in bcm_qspi_probe()
    
    [ Upstream commit ca9b8f56ec089d3a436050afefd17b7237301f47 ]
    
    Fix the missing clk_disable_unprepare() before return
    from bcm_qspi_probe() in the error handling case.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211018073413.2029081-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b917f9b94633bde8982f98965aa1fa534b9e8f46
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Jul 27 17:01:14 2021 -0400

    btrfs: do not take the uuid_mutex in btrfs_rm_device
    
    [ Upstream commit 8ef9dc0f14ba6124c62547a4fdc59b163d8b864e ]
    
    We got the following lockdep splat while running fstests (specifically
    btrfs/003 and btrfs/020 in a row) with the new rc.  This was uncovered
    by 87579e9b7d8d ("loop: use worker per cgroup instead of kworker") which
    converted loop to using workqueues, which comes with lockdep
    annotations that don't exist with kworkers.  The lockdep splat is as
    follows:
    
      WARNING: possible circular locking dependency detected
      5.14.0-rc2-custom+ #34 Not tainted
      ------------------------------------------------------
      losetup/156417 is trying to acquire lock:
      ffff9c7645b02d38 ((wq_completion)loop0){+.+.}-{0:0}, at: flush_workqueue+0x84/0x600
    
      but task is already holding lock:
      ffff9c7647395468 (&lo->lo_mutex){+.+.}-{3:3}, at: __loop_clr_fd+0x41/0x650 [loop]
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #5 (&lo->lo_mutex){+.+.}-{3:3}:
             __mutex_lock+0xba/0x7c0
             lo_open+0x28/0x60 [loop]
             blkdev_get_whole+0x28/0xf0
             blkdev_get_by_dev.part.0+0x168/0x3c0
             blkdev_open+0xd2/0xe0
             do_dentry_open+0x163/0x3a0
             path_openat+0x74d/0xa40
             do_filp_open+0x9c/0x140
             do_sys_openat2+0xb1/0x170
             __x64_sys_openat+0x54/0x90
             do_syscall_64+0x3b/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xae
    
      -> #4 (&disk->open_mutex){+.+.}-{3:3}:
             __mutex_lock+0xba/0x7c0
             blkdev_get_by_dev.part.0+0xd1/0x3c0
             blkdev_get_by_path+0xc0/0xd0
             btrfs_scan_one_device+0x52/0x1f0 [btrfs]
             btrfs_control_ioctl+0xac/0x170 [btrfs]
             __x64_sys_ioctl+0x83/0xb0
             do_syscall_64+0x3b/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xae
    
      -> #3 (uuid_mutex){+.+.}-{3:3}:
             __mutex_lock+0xba/0x7c0
             btrfs_rm_device+0x48/0x6a0 [btrfs]
             btrfs_ioctl+0x2d1c/0x3110 [btrfs]
             __x64_sys_ioctl+0x83/0xb0
             do_syscall_64+0x3b/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xae
    
      -> #2 (sb_writers#11){.+.+}-{0:0}:
             lo_write_bvec+0x112/0x290 [loop]
             loop_process_work+0x25f/0xcb0 [loop]
             process_one_work+0x28f/0x5d0
             worker_thread+0x55/0x3c0
             kthread+0x140/0x170
             ret_from_fork+0x22/0x30
    
      -> #1 ((work_completion)(&lo->rootcg_work)){+.+.}-{0:0}:
             process_one_work+0x266/0x5d0
             worker_thread+0x55/0x3c0
             kthread+0x140/0x170
             ret_from_fork+0x22/0x30
    
      -> #0 ((wq_completion)loop0){+.+.}-{0:0}:
             __lock_acquire+0x1130/0x1dc0
             lock_acquire+0xf5/0x320
             flush_workqueue+0xae/0x600
             drain_workqueue+0xa0/0x110
             destroy_workqueue+0x36/0x250
             __loop_clr_fd+0x9a/0x650 [loop]
             lo_ioctl+0x29d/0x780 [loop]
             block_ioctl+0x3f/0x50
             __x64_sys_ioctl+0x83/0xb0
             do_syscall_64+0x3b/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xae
    
      other info that might help us debug this:
      Chain exists of:
        (wq_completion)loop0 --> &disk->open_mutex --> &lo->lo_mutex
       Possible unsafe locking scenario:
             CPU0                    CPU1
             ----                    ----
        lock(&lo->lo_mutex);
                                     lock(&disk->open_mutex);
                                     lock(&lo->lo_mutex);
        lock((wq_completion)loop0);
    
       *** DEADLOCK ***
      1 lock held by losetup/156417:
       #0: ffff9c7647395468 (&lo->lo_mutex){+.+.}-{3:3}, at: __loop_clr_fd+0x41/0x650 [loop]
    
      stack backtrace:
      CPU: 8 PID: 156417 Comm: losetup Not tainted 5.14.0-rc2-custom+ #34
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
      Call Trace:
       dump_stack_lvl+0x57/0x72
       check_noncircular+0x10a/0x120
       __lock_acquire+0x1130/0x1dc0
       lock_acquire+0xf5/0x320
       ? flush_workqueue+0x84/0x600
       flush_workqueue+0xae/0x600
       ? flush_workqueue+0x84/0x600
       drain_workqueue+0xa0/0x110
       destroy_workqueue+0x36/0x250
       __loop_clr_fd+0x9a/0x650 [loop]
       lo_ioctl+0x29d/0x780 [loop]
       ? __lock_acquire+0x3a0/0x1dc0
       ? update_dl_rq_load_avg+0x152/0x360
       ? lock_is_held_type+0xa5/0x120
       ? find_held_lock.constprop.0+0x2b/0x80
       block_ioctl+0x3f/0x50
       __x64_sys_ioctl+0x83/0xb0
       do_syscall_64+0x3b/0x90
       entry_SYSCALL_64_after_hwframe+0x44/0xae
      RIP: 0033:0x7f645884de6b
    
    Usually the uuid_mutex exists to protect the fs_devices that map
    together all of the devices that match a specific uuid.  In rm_device
    we're messing with the uuid of a device, so it makes sense to protect
    that here.
    
    However in doing that it pulls in a whole host of lockdep dependencies,
    as we call mnt_may_write() on the sb before we grab the uuid_mutex, thus
    we end up with the dependency chain under the uuid_mutex being added
    under the normal sb write dependency chain, which causes problems with
    loop devices.
    
    We don't need the uuid mutex here however.  If we call
    btrfs_scan_one_device() before we scratch the super block we will find
    the fs_devices and not find the device itself and return EBUSY because
    the fs_devices is open.  If we call it after the scratch happens it will
    not appear to be a valid btrfs file system.
    
    We do not need to worry about other fs_devices modifying operations here
    because we're protected by the exclusive operations locking.
    
    So drop the uuid_mutex here in order to fix the lockdep splat.
    
    A more detailed explanation from the discussion:
    
    We are worried about rm and scan racing with each other, before this
    change we'll zero the device out under the UUID mutex so when scan does
    run it'll make sure that it can go through the whole device scan thing
    without rm messing with us.
    
    We aren't worried if the scratch happens first, because the result is we
    don't think this is a btrfs device and we bail out.
    
    The only case we are concerned with is we scratch _after_ scan is able
    to read the superblock and gets a seemingly valid super block, so lets
    consider this case.
    
    Scan will call device_list_add() with the device we're removing.  We'll
    call find_fsid_with_metadata_uuid() and get our fs_devices for this
    UUID.  At this point we lock the fs_devices->device_list_mutex.  This is
    what protects us in this case, but we have two cases here.
    
    1. We aren't to the device removal part of the RM.  We found our device,
       and device name matches our path, we go down and we set total_devices
       to our super number of devices, which doesn't affect anything because
       we haven't done the remove yet.
    
    2. We are past the device removal part, which is protected by the
       device_list_mutex.  Scan doesn't find the device, it goes down and
       does the
    
       if (fs_devices->opened)
               return -EBUSY;
    
       check and we bail out.
    
    Nothing about this situation is ideal, but the lockdep splat is real,
    and the fix is safe, tho admittedly a bit scary looking.
    
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ copy more from the discussion ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 428bb3d71e35b41f6ee325d680c56a6d6e9594f8
Author: Sidong Yang <realwakka@gmail.com>
Date:   Thu Aug 26 14:44:36 2021 +0000

    btrfs: reflink: initialize return value to 0 in btrfs_extent_same()
    
    [ Upstream commit 44bee215f72f13874c0e734a0712c2e3264c0108 ]
    
    Fix a warning reported by smatch that ret could be returned without
    initialized.  The dedupe operations are supposed to to return 0 for a 0
    length range but the caller does not pass olen == 0. To keep this
    behaviour and also fix the warning initialize ret to 0.
    
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Sidong Yang <realwakka@gmail.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eeb96ebdc6862fa597daf594e4131d019c7611f7
Author: Stefan Schaeckeler <schaecsn@gmx.net>
Date:   Sun Oct 24 15:04:45 2021 -0700

    ACPI: AC: Quirk GK45 to skip reading _PSR
    
    [ Upstream commit 3d730ee686800d71ecc5c3cb8460dcdcdeaf38a3 ]
    
    Let GK45 not go into BIOS for determining the AC power state.
    
    The BIOS wrongly returns 0, so hardcode the power state to 1.
    
    The mini PC GK45 by Besstar Tech Lld. (aka Kodlix) just runs
    off AC. It does not include any batteries. Nevertheless BIOS
    reports AC off:
    
    root@kodlix:/usr/src/linux# cat /sys/class/power_supply/ADP1/online
    0
    
    root@kodlix:/usr/src/linux# modprobe acpi_dbg
    root@kodlix:/usr/src/linux# tools/power/acpi/acpidbg
    
    - find _PSR
       \_SB.PCI0.SBRG.H_EC.ADP1._PSR Method       000000009283cee8 001 Args 0 Len 001C Aml 00000000f54e5f67
    
    - execute \_SB.PCI0.SBRG.H_EC.ADP1._PSR
    Evaluating \_SB.PCI0.SBRG.H_EC.ADP1._PSR
    Evaluation of \_SB.PCI0.SBRG.H_EC.ADP1._PSR returned object 00000000dc08c187, external buffer length 18
     [Integer] = 0000000000000000
    
    that should be
    
     [Integer] = 0000000000000001
    
    Signed-off-by: Stefan Schaeckeler <schaecsn@gmx.net>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42d8c280dd65ec49ff5ceb6b9a1173dcbd8d7f95
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 25 11:15:55 2021 -0700

    net: annotate data-race in neigh_output()
    
    [ Upstream commit d18785e213866935b4c3dc0c33c3e18801ce0ce8 ]
    
    neigh_output() reads n->nud_state and hh->hh_len locklessly.
    
    This is fine, but we need to add annotations and document this.
    
    We evaluate skip_cache first to avoid reading these fields
    if the cache has to by bypassed.
    
    syzbot report:
    
    BUG: KCSAN: data-race in __neigh_event_send / ip_finish_output2
    
    write to 0xffff88810798a885 of 1 bytes by interrupt on cpu 1:
     __neigh_event_send+0x40d/0xac0 net/core/neighbour.c:1128
     neigh_event_send include/net/neighbour.h:444 [inline]
     neigh_resolve_output+0x104/0x410 net/core/neighbour.c:1476
     neigh_output include/net/neighbour.h:510 [inline]
     ip_finish_output2+0x80a/0xaa0 net/ipv4/ip_output.c:221
     ip_finish_output+0x3b5/0x510 net/ipv4/ip_output.c:309
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:423
     dst_output include/net/dst.h:450 [inline]
     ip_local_out+0x164/0x220 net/ipv4/ip_output.c:126
     __ip_queue_xmit+0x9d3/0xa20 net/ipv4/ip_output.c:525
     ip_queue_xmit+0x34/0x40 net/ipv4/ip_output.c:539
     __tcp_transmit_skb+0x142a/0x1a00 net/ipv4/tcp_output.c:1405
     tcp_transmit_skb net/ipv4/tcp_output.c:1423 [inline]
     tcp_xmit_probe_skb net/ipv4/tcp_output.c:4011 [inline]
     tcp_write_wakeup+0x4a9/0x810 net/ipv4/tcp_output.c:4064
     tcp_send_probe0+0x2c/0x2b0 net/ipv4/tcp_output.c:4079
     tcp_probe_timer net/ipv4/tcp_timer.c:398 [inline]
     tcp_write_timer_handler+0x394/0x520 net/ipv4/tcp_timer.c:626
     tcp_write_timer+0xb9/0x180 net/ipv4/tcp_timer.c:642
     call_timer_fn+0x2e/0x1d0 kernel/time/timer.c:1421
     expire_timers+0x135/0x240 kernel/time/timer.c:1466
     __run_timers+0x368/0x430 kernel/time/timer.c:1734
     run_timer_softirq+0x19/0x30 kernel/time/timer.c:1747
     __do_softirq+0x12c/0x26e kernel/softirq.c:558
     invoke_softirq kernel/softirq.c:432 [inline]
     __irq_exit_rcu kernel/softirq.c:636 [inline]
     irq_exit_rcu+0x4e/0xa0 kernel/softirq.c:648
     sysvec_apic_timer_interrupt+0x69/0x80 arch/x86/kernel/apic/apic.c:1097
     asm_sysvec_apic_timer_interrupt+0x12/0x20
     native_safe_halt arch/x86/include/asm/irqflags.h:51 [inline]
     arch_safe_halt arch/x86/include/asm/irqflags.h:89 [inline]
     acpi_safe_halt drivers/acpi/processor_idle.c:109 [inline]
     acpi_idle_do_entry drivers/acpi/processor_idle.c:553 [inline]
     acpi_idle_enter+0x258/0x2e0 drivers/acpi/processor_idle.c:688
     cpuidle_enter_state+0x2b4/0x760 drivers/cpuidle/cpuidle.c:237
     cpuidle_enter+0x3c/0x60 drivers/cpuidle/cpuidle.c:351
     call_cpuidle kernel/sched/idle.c:158 [inline]
     cpuidle_idle_call kernel/sched/idle.c:239 [inline]
     do_idle+0x1a3/0x250 kernel/sched/idle.c:306
     cpu_startup_entry+0x15/0x20 kernel/sched/idle.c:403
     secondary_startup_64_no_verify+0xb1/0xbb
    
    read to 0xffff88810798a885 of 1 bytes by interrupt on cpu 0:
     neigh_output include/net/neighbour.h:507 [inline]
     ip_finish_output2+0x79a/0xaa0 net/ipv4/ip_output.c:221
     ip_finish_output+0x3b5/0x510 net/ipv4/ip_output.c:309
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:423
     dst_output include/net/dst.h:450 [inline]
     ip_local_out+0x164/0x220 net/ipv4/ip_output.c:126
     __ip_queue_xmit+0x9d3/0xa20 net/ipv4/ip_output.c:525
     ip_queue_xmit+0x34/0x40 net/ipv4/ip_output.c:539
     __tcp_transmit_skb+0x142a/0x1a00 net/ipv4/tcp_output.c:1405
     tcp_transmit_skb net/ipv4/tcp_output.c:1423 [inline]
     tcp_xmit_probe_skb net/ipv4/tcp_output.c:4011 [inline]
     tcp_write_wakeup+0x4a9/0x810 net/ipv4/tcp_output.c:4064
     tcp_send_probe0+0x2c/0x2b0 net/ipv4/tcp_output.c:4079
     tcp_probe_timer net/ipv4/tcp_timer.c:398 [inline]
     tcp_write_timer_handler+0x394/0x520 net/ipv4/tcp_timer.c:626
     tcp_write_timer+0xb9/0x180 net/ipv4/tcp_timer.c:642
     call_timer_fn+0x2e/0x1d0 kernel/time/timer.c:1421
     expire_timers+0x135/0x240 kernel/time/timer.c:1466
     __run_timers+0x368/0x430 kernel/time/timer.c:1734
     run_timer_softirq+0x19/0x30 kernel/time/timer.c:1747
     __do_softirq+0x12c/0x26e kernel/softirq.c:558
     invoke_softirq kernel/softirq.c:432 [inline]
     __irq_exit_rcu kernel/softirq.c:636 [inline]
     irq_exit_rcu+0x4e/0xa0 kernel/softirq.c:648
     sysvec_apic_timer_interrupt+0x69/0x80 arch/x86/kernel/apic/apic.c:1097
     asm_sysvec_apic_timer_interrupt+0x12/0x20
     native_safe_halt arch/x86/include/asm/irqflags.h:51 [inline]
     arch_safe_halt arch/x86/include/asm/irqflags.h:89 [inline]
     acpi_safe_halt drivers/acpi/processor_idle.c:109 [inline]
     acpi_idle_do_entry drivers/acpi/processor_idle.c:553 [inline]
     acpi_idle_enter+0x258/0x2e0 drivers/acpi/processor_idle.c:688
     cpuidle_enter_state+0x2b4/0x760 drivers/cpuidle/cpuidle.c:237
     cpuidle_enter+0x3c/0x60 drivers/cpuidle/cpuidle.c:351
     call_cpuidle kernel/sched/idle.c:158 [inline]
     cpuidle_idle_call kernel/sched/idle.c:239 [inline]
     do_idle+0x1a3/0x250 kernel/sched/idle.c:306
     cpu_startup_entry+0x15/0x20 kernel/sched/idle.c:403
     rest_init+0xee/0x100 init/main.c:734
     arch_call_rest_init+0xa/0xb
     start_kernel+0x5e4/0x669 init/main.c:1142
     secondary_startup_64_no_verify+0xb1/0xbb
    
    value changed: 0x20 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.15.0-rc6-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2e5f43db0c116c91f545b317bef3f333bdc5301
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Oct 25 16:14:00 2021 +0200

    vrf: run conntrack only in context of lower/physdev for locally generated packets
    
    [ Upstream commit 8c9c296adfae9ea05f655d69e9f6e13daa86fb4a ]
    
    The VRF driver invokes netfilter for output+postrouting hooks so that users
    can create rules that check for 'oif $vrf' rather than lower device name.
    
    This is a problem when NAT rules are configured.
    
    To avoid any conntrack involvement in round 1, tag skbs as 'untracked'
    to prevent conntrack from picking them up.
    
    This gets cleared before the packet gets handed to the ip stack so
    conntrack will be active on the second iteration.
    
    One remaining issue is that a rule like
    
      output ... oif $vrfname notrack
    
    won't propagate to the second round because we can't tell
    'notrack set via ruleset' and 'notrack set by vrf driver' apart.
    However, this isn't a regression: the 'notrack' removal happens
    instead of unconditional nf_reset_ct().
    I'd also like to avoid leaking more vrf specific conditionals into the
    netfilter infra.
    
    For ingress, conntrack has already been done before the packet makes it
    to the vrf driver, with this patch egress does connection tracking with
    lower/physical device as well.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3ae170b8e3fb0b8a49f44911f4d700bb5a9d997
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 18 15:30:06 2021 +0100

    ARM: 9136/1: ARMv7-M uses BE-8, not BE-32
    
    [ Upstream commit 345dac33f58894a56d17b92a41be10e16585ceff ]
    
    When configuring the kernel for big-endian, we set either BE-8 or BE-32
    based on the CPU architecture level. Until linux-4.4, we did not have
    any ARMv7-M platform allowing big-endian builds, but now i.MX/Vybrid
    is in that category, adn we get a build error because of this:
    
    arch/arm/kernel/module-plts.c: In function 'get_module_plt':
    arch/arm/kernel/module-plts.c:60:46: error: implicit declaration of function '__opcode_to_mem_thumb32' [-Werror=implicit-function-declaration]
    
    This comes down to picking the wrong default, ARMv7-M uses BE8
    like ARMv7-A does. Changing the default gets the kernel to compile
    and presumably works.
    
    https://lore.kernel.org/all/1455804123-2526139-2-git-send-email-arnd@arndb.de/
    
    Tested-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b870d8a76c04bb6875c68c261f266a1fac2241a9
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Thu Oct 7 15:57:44 2021 +0200

    gfs2: Fix glock_hash_walk bugs
    
    [ Upstream commit 7427f3bb49d81525b7dd1d0f7c5f6bbc752e6f0e ]
    
    So far, glock_hash_walk took a reference on each glock it iterated over, and it
    was the examiner's responsibility to drop those references.  Dropping the final
    reference to a glock can sleep and the examiners are called in a RCU critical
    section with spin locks held, so examiners that didn't need the extra reference
    had to drop it asynchronously via gfs2_glock_queue_put or similar.  This wasn't
    done correctly in thaw_glock which did call gfs2_glock_put, and not at all in
    dump_glock_func.
    
    Change glock_hash_walk to not take glock references at all.  That way, the
    examiners that don't need them won't have to bother with slow asynchronous
    puts, and the examiners that do need references can take them themselves.
    
    Reported-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16a7981188a33bb31d5dd579920f18fe895be958
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Oct 11 20:53:02 2021 +0200

    gfs2: Cancel remote delete work asynchronously
    
    [ Upstream commit 486408d690e130c3adacf816754b97558d715f46 ]
    
    In gfs2_inode_lookup and gfs2_create_inode, we're calling
    gfs2_cancel_delete_work which currently cancels any remote delete work
    (delete_work_func) synchronously.  This means that if the work is
    currently running, it will wait for it to finish.  We're doing this to
    pevent a previous instance of an inode from having any influence on the
    next instance.
    
    However, delete_work_func uses gfs2_inode_lookup internally, and we can
    end up in a deadlock when delete_work_func gets interrupted at the wrong
    time.  For example,
    
      (1) An inode's iopen glock has delete work queued, but the inode
          itself has been evicted from the inode cache.
    
      (2) The delete work is preempted before reaching gfs2_inode_lookup.
    
      (3) Another process recreates the inode (gfs2_create_inode).  It tries
          to cancel any outstanding delete work, which blocks waiting for
          the ongoing delete work to finish.
    
      (4) The delete work calls gfs2_inode_lookup, which blocks waiting for
          gfs2_create_inode to instantiate and unlock the new inode =>
          deadlock.
    
    It turns out that when the delete work notices that its inode has been
    re-instantiated, it will do nothing.  This means that it's safe to
    cancel the delete work asynchronously.  This prevents the kind of
    deadlock described above.
    
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ceac307b58ed35ba85fad928ca48119acd50a41
Author: Stephen Suryaputra <ssuryaextr@gmail.com>
Date:   Wed Oct 20 16:06:18 2021 -0400

    gre/sit: Don't generate link-local addr if addr_gen_mode is IN6_ADDR_GEN_MODE_NONE
    
    [ Upstream commit 61e18ce7348bfefb5688a8bcd4b4d6b37c0f9b2a ]
    
    When addr_gen_mode is set to IN6_ADDR_GEN_MODE_NONE, the link-local addr
    should not be generated. But it isn't the case for GRE (as well as GRE6)
    and SIT tunnels. Make it so that tunnels consider the addr_gen_mode,
    especially for IN6_ADDR_GEN_MODE_NONE.
    
    Do this in add_v4_addrs() to cover both GRE and SIT only if the addr
    scope is link.
    
    Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
    Acked-by: Antonio Quartulli <a@unstable.cc>
    Link: https://lore.kernel.org/r/20211020200618.467342-1-ssuryaextr@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25a45d399996bfbcb5c995b23d03f8df5f3bd6f9
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 21 09:55:17 2021 +0900

    ARM: clang: Do not rely on lr register for stacktrace
    
    [ Upstream commit b3ea5d56f212ad81328c82454829a736197ebccc ]
    
    Currently the stacktrace on clang compiled arm kernel uses the 'lr'
    register to find the first frame address from pt_regs. However, that
    is wrong after calling another function, because the 'lr' register
    is used by 'bl' instruction and never be recovered.
    
    As same as gcc arm kernel, directly use the frame pointer (r11) of
    the pt_regs to find the first frame address.
    
    Note that this fixes kretprobe stacktrace issue only with
    CONFIG_UNWINDER_FRAME_POINTER=y. For the CONFIG_UNWINDER_ARM,
    we need another fix.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c11aecbe0542afa4832dbb9b48d1c45064b2cb1b
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Tue Oct 19 20:54:31 2021 +0900

    smackfs: use __GFP_NOFAIL for smk_cipso_doi()
    
    [ Upstream commit f91488ee15bd3cac467e2d6a361fc2d34d1052ae ]
    
    syzbot is reporting kernel panic at smk_cipso_doi() due to memory
    allocation fault injection [1]. The reason for need to use panic() was
    not explained. But since no fix was proposed for 18 months, for now
    let's use __GFP_NOFAIL for utilizing syzbot resource on other bugs.
    
    Link: https://syzkaller.appspot.com/bug?extid=89731ccb6fec15ce1c22 [1]
    Reported-by: syzbot <syzbot+89731ccb6fec15ce1c22@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32a9a8fdbab717abb6fc51647e00f764320460af
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Oct 17 11:43:40 2021 +0300

    iwlwifi: mvm: disable RX-diversity in powersave
    
    [ Upstream commit e5322b9ab5f63536c41301150b7ce64605ce52cc ]
    
    Just like we have default SMPS mode as dynamic in powersave,
    we should not enable RX-diversity in powersave, to reduce
    power consumption when connected to a non-MIMO AP.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211017113927.fc896bc5cdaa.I1d11da71b8a5cbe921a37058d5f578f1b14a2023@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e658d59f0ee4890446e457d8eec1f27bcb0643d0
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Thu Oct 21 13:41:30 2021 +0200

    selftests/bpf: Fix perf_buffer test on system with offline cpus
    
    [ Upstream commit d4121376ac7a9c81a696d7558789b2f29ef3574e ]
    
    The perf_buffer fails on system with offline cpus:
    
      # test_progs -t perf_buffer
      test_perf_buffer:PASS:nr_cpus 0 nsec
      test_perf_buffer:PASS:nr_on_cpus 0 nsec
      test_perf_buffer:PASS:skel_load 0 nsec
      test_perf_buffer:PASS:attach_kprobe 0 nsec
      test_perf_buffer:PASS:perf_buf__new 0 nsec
      test_perf_buffer:PASS:epoll_fd 0 nsec
      skipping offline CPU #24
      skipping offline CPU #25
      skipping offline CPU #26
      skipping offline CPU #27
      skipping offline CPU #28
      skipping offline CPU #29
      skipping offline CPU #30
      skipping offline CPU #31
      test_perf_buffer:PASS:perf_buffer__poll 0 nsec
      test_perf_buffer:PASS:seen_cpu_cnt 0 nsec
      test_perf_buffer:FAIL:buf_cnt got 24, expected 32
      Summary: 0/0 PASSED, 0 SKIPPED, 1 FAILED
    
    Changing the test to check online cpus instead of possible.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20211021114132.8196-2-jolsa@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6dca066fc4f8c068e968dc365f6cd1aa9c6baed
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Thu Oct 21 11:56:03 2021 -0600

    selftests: kvm: fix mismatched fclose() after popen()
    
    [ Upstream commit c3867ab5924b7a9a0b4a117902a08669d8be7c21 ]
    
    get_warnings_count() does fclose() using File * returned from popen().
    Fix it to call pclose() as it should.
    
    tools/testing/selftests/kvm/x86_64/mmio_warning_test
    x86_64/mmio_warning_test.c: In function ‘get_warnings_count’:
    x86_64/mmio_warning_test.c:87:9: warning: ‘fclose’ called on pointer returned from a mismatched allocation function [-Wmismatched-dealloc]
       87 |         fclose(f);
          |         ^~~~~~~~~
    x86_64/mmio_warning_test.c:84:13: note: returned from ‘popen’
       84 |         f = popen("dmesg | grep \"WARNING:\" | wc -l", "r");
          |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f4bd00a6ec6550515ffce7b91488f899a96d2bc
Author: Ye Bin <yebin10@huawei.com>
Date:   Wed Oct 13 20:19:14 2021 +0800

    PM: hibernate: Get block device exclusively in swsusp_check()
    
    [ Upstream commit 39fbef4b0f77f9c89c8f014749ca533643a37c9f ]
    
    The following kernel crash can be triggered:
    
    [   89.266592] ------------[ cut here ]------------
    [   89.267427] kernel BUG at fs/buffer.c:3020!
    [   89.268264] invalid opcode: 0000 [#1] SMP KASAN PTI
    [   89.269116] CPU: 7 PID: 1750 Comm: kmmpd-loop0 Not tainted 5.10.0-862.14.0.6.x86_64-08610-gc932cda3cef4-dirty #20
    [   89.273169] RIP: 0010:submit_bh_wbc.isra.0+0x538/0x6d0
    [   89.277157] RSP: 0018:ffff888105ddfd08 EFLAGS: 00010246
    [   89.278093] RAX: 0000000000000005 RBX: ffff888124231498 RCX: ffffffffb2772612
    [   89.279332] RDX: 1ffff11024846293 RSI: 0000000000000008 RDI: ffff888124231498
    [   89.280591] RBP: ffff8881248cc000 R08: 0000000000000001 R09: ffffed1024846294
    [   89.281851] R10: ffff88812423149f R11: ffffed1024846293 R12: 0000000000003800
    [   89.283095] R13: 0000000000000001 R14: 0000000000000000 R15: ffff8881161f7000
    [   89.284342] FS:  0000000000000000(0000) GS:ffff88839b5c0000(0000) knlGS:0000000000000000
    [   89.285711] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   89.286701] CR2: 00007f166ebc01a0 CR3: 0000000435c0e000 CR4: 00000000000006e0
    [   89.287919] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   89.289138] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   89.290368] Call Trace:
    [   89.290842]  write_mmp_block+0x2ca/0x510
    [   89.292218]  kmmpd+0x433/0x9a0
    [   89.294902]  kthread+0x2dd/0x3e0
    [   89.296268]  ret_from_fork+0x22/0x30
    [   89.296906] Modules linked in:
    
    by running the following commands:
    
     1. mkfs.ext4 -O mmp  /dev/sda -b 1024
     2. mount /dev/sda /home/test
     3. echo "/dev/sda" > /sys/power/resume
    
    That happens because swsusp_check() calls set_blocksize() on the
    target partition which confuses the file system:
    
           Thread1                       Thread2
    mount /dev/sda /home/test
    get s_mmp_bh  --> has mapped flag
    start kmmpd thread
                                    echo "/dev/sda" > /sys/power/resume
                                      resume_store
                                        software_resume
                                          swsusp_check
                                            set_blocksize
                                              truncate_inode_pages_range
                                                truncate_cleanup_page
                                                  block_invalidatepage
                                                    discard_buffer --> clean mapped flag
    write_mmp_block
      submit_bh
        submit_bh_wbc
          BUG_ON(!buffer_mapped(bh))
    
    To address this issue, modify swsusp_check() to open the target block
    device with exclusive access.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    [ rjw: Subject and changelog edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a0b68eecb5b557241597f9a887b99d9821916d5
Author: Hannes Reinecke <hare@suse.de>
Date:   Wed Oct 20 07:59:10 2021 +0200

    nvme: drop scan_lock and always kick requeue list when removing namespaces
    
    [ Upstream commit 2b81a5f015199f3d585ce710190a9e87714d3c1e ]
    
    When reading the partition table on initial scan hits an I/O error the
    I/O will hang with the scan_mutex held:
    
    [<0>] do_read_cache_page+0x49b/0x790
    [<0>] read_part_sector+0x39/0xe0
    [<0>] read_lba+0xf9/0x1d0
    [<0>] efi_partition+0xf1/0x7f0
    [<0>] bdev_disk_changed+0x1ee/0x550
    [<0>] blkdev_get_whole+0x81/0x90
    [<0>] blkdev_get_by_dev+0x128/0x2e0
    [<0>] device_add_disk+0x377/0x3c0
    [<0>] nvme_mpath_set_live+0x130/0x1b0 [nvme_core]
    [<0>] nvme_mpath_add_disk+0x150/0x160 [nvme_core]
    [<0>] nvme_alloc_ns+0x417/0x950 [nvme_core]
    [<0>] nvme_validate_or_alloc_ns+0xe9/0x1e0 [nvme_core]
    [<0>] nvme_scan_work+0x168/0x310 [nvme_core]
    [<0>] process_one_work+0x231/0x420
    
    and trying to delete the controller will deadlock as it tries to grab
    the scan mutex:
    
    [<0>] nvme_mpath_clear_ctrl_paths+0x25/0x80 [nvme_core]
    [<0>] nvme_remove_namespaces+0x31/0xf0 [nvme_core]
    [<0>] nvme_do_delete_ctrl+0x4b/0x80 [nvme_core]
    
    As we're now properly ordering the namespace list there is no need to
    hold the scan_mutex in nvme_mpath_clear_ctrl_paths() anymore.
    And we always need to kick the requeue list as the path will be marked
    as unusable and I/O will be requeued _without_ a current path.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82327823f34e920cfb27c796c82ff72a6554cebf
Author: Israel Rukshin <israelr@nvidia.com>
Date:   Wed Oct 6 08:09:45 2021 +0000

    nvmet-tcp: fix use-after-free when a port is removed
    
    [ Upstream commit 2351ead99ce9164fb42555aee3f96af84c4839e9 ]
    
    When removing a port, all its controllers are being removed, but there
    are queues on the port that doesn't belong to any controller (during
    connection time). This causes a use-after-free bug for any command
    that dereferences req->port (like in nvmet_alloc_ctrl). Those queues
    should be destroyed before freeing the port via configfs. Destroy
    the remaining queues after the accept_work was cancelled guarantees
    that no new queue will be created.
    
    Signed-off-by: Israel Rukshin <israelr@nvidia.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2659d8213d886bfe6f37abc2661a8404c36d5a32
Author: Israel Rukshin <israelr@nvidia.com>
Date:   Wed Oct 6 08:09:44 2021 +0000

    nvmet-rdma: fix use-after-free when a port is removed
    
    [ Upstream commit fcf73a804c7d6bbf0ea63531c6122aa363852e04 ]
    
    When removing a port, all its controllers are being removed, but there
    are queues on the port that doesn't belong to any controller (during
    connection time). This causes a use-after-free bug for any command
    that dereferences req->port (like in nvmet_alloc_ctrl). Those queues
    should be destroyed before freeing the port via configfs. Destroy the
    remaining queues after the RDMA-CM was destroyed guarantees that no
    new queue will be created.
    
    Signed-off-by: Israel Rukshin <israelr@nvidia.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e73574f7bc9b83f290fbc7760a9153e05133cbf3
Author: Israel Rukshin <israelr@nvidia.com>
Date:   Wed Oct 6 08:09:43 2021 +0000

    nvmet: fix use-after-free when a port is removed
    
    [ Upstream commit e3e19dcc4c416d65f99f13d55be2b787f8d0050e ]
    
    When a port is removed through configfs, any connected controllers
    are starting teardown flow asynchronously and can still send commands.
    This causes a use-after-free bug for any command that dereferences
    req->port (like in nvmet_parse_io_cmd).
    
    To fix this, wait for all the teardown scheduled works to complete
    (like release_work at rdma/tcp drivers). This ensures there are no
    active controllers when the port is eventually removed.
    
    Signed-off-by: Israel Rukshin <israelr@nvidia.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a10bf4c9dd3ba8937d108b615ad5efcfd632e3a
Author: Michael Tretter <m.tretter@pengutronix.de>
Date:   Wed Sep 8 14:03:10 2021 +0100

    media: allegro: ignore interrupt if mailbox is not initialized
    
    [ Upstream commit 1ecda6393db4be44aba27a243e648dc98c9b92e3 ]
    
    The mailbox is initialized after the interrupt handler is installed. As
    the firmware is loaded and started even later, it should not happen that
    the interrupt occurs without the mailbox being initialized.
    
    As the Linux Driver Verification project (linuxtesting.org) keeps
    reporting this as an error, add a check to ignore interrupts before the
    mailbox is initialized to fix this potential null pointer dereference.
    
    Reported-by: Yuri Savinykh <s02190703@gse.cs.msu.ru>
    Reported-by: Nadezda Lutovinova <lutovinova@ispras.ru>
    Signed-off-by: Michael Tretter <m.tretter@pengutronix.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49cc377654d9b59a1356db000472eee2007b4162
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Oct 20 08:21:40 2021 -0600

    block: remove inaccurate requeue check
    
    [ Upstream commit 037057a5a979c7eeb2ee5d12cf4c24b805192c75 ]
    
    This check is meant to catch cases where a requeue is attempted on a
    request that is still inserted. It's never really been useful to catch any
    misuse, and now it's actively wrong. Outside of that, this should not be a
    BUG_ON() to begin with.
    
    Remove the check as it's now causing active harm, as requeue off the plug
    path will trigger it even though the request state is just fine.
    
    Reported-by: Yi Zhang <yi.zhang@redhat.com>
    Link: https://lore.kernel.org/linux-block/CAHj4cs80zAUc2grnCZ015-2Rvd-=gXRfB_dFKy=RTm+wRo09HQ@mail.gmail.com/
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 451cef276fe48fa43625654f07fc6f6db11746c9
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Oct 16 04:02:59 2021 +0000

    mwl8k: Fix use-after-free in mwl8k_fw_state_machine()
    
    [ Upstream commit 257051a235c17e33782b6e24a4b17f2d7915aaec ]
    
    When the driver fails to request the firmware, it calls its error
    handler. In the error handler, the driver detaches device from driver
    first before releasing the firmware, which can cause a use-after-free bug.
    
    Fix this by releasing firmware first.
    
    The following log reveals it:
    
    [    9.007301 ] BUG: KASAN: use-after-free in mwl8k_fw_state_machine+0x320/0xba0
    [    9.010143 ] Workqueue: events request_firmware_work_func
    [    9.010830 ] Call Trace:
    [    9.010830 ]  dump_stack_lvl+0xa8/0xd1
    [    9.010830 ]  print_address_description+0x87/0x3b0
    [    9.010830 ]  kasan_report+0x172/0x1c0
    [    9.010830 ]  ? mutex_unlock+0xd/0x10
    [    9.010830 ]  ? mwl8k_fw_state_machine+0x320/0xba0
    [    9.010830 ]  ? mwl8k_fw_state_machine+0x320/0xba0
    [    9.010830 ]  __asan_report_load8_noabort+0x14/0x20
    [    9.010830 ]  mwl8k_fw_state_machine+0x320/0xba0
    [    9.010830 ]  ? mwl8k_load_firmware+0x5f0/0x5f0
    [    9.010830 ]  request_firmware_work_func+0x172/0x250
    [    9.010830 ]  ? read_lock_is_recursive+0x20/0x20
    [    9.010830 ]  ? process_one_work+0x7a1/0x1100
    [    9.010830 ]  ? request_firmware_nowait+0x460/0x460
    [    9.010830 ]  ? __this_cpu_preempt_check+0x13/0x20
    [    9.010830 ]  process_one_work+0x9bb/0x1100
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634356979-6211-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16c2dd0ab5c24a124c92ab4b730073ffa3d9b952
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Wed Jul 14 15:56:10 2021 +0800

    mt76: mt7915: fix an off-by-one bound check
    
    [ Upstream commit d45dac0732a287fc371a23f257cce04e65627947 ]
    
    The bounds check on datalen is off-by-one, so fix it.
    
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea7f8803a3144fdbb22257c7a501ee7b3caa8009
Author: Kalesh Singh <kaleshsingh@google.com>
Date:   Wed Oct 13 21:52:17 2021 -0700

    tracing/cfi: Fix cmp_entries_* functions signature mismatch
    
    [ Upstream commit 7ce1bb83a14019f8c396d57ec704d19478747716 ]
    
    If CONFIG_CFI_CLANG=y, attempting to read an event histogram will cause
    the kernel to panic due to failed CFI check.
    
        1. echo 'hist:keys=common_pid' >> events/sched/sched_switch/trigger
        2. cat events/sched/sched_switch/hist
        3. kernel panics on attempting to read hist
    
    This happens because the sort() function expects a generic
    int (*)(const void *, const void *) pointer for the compare function.
    To prevent this CFI failure, change tracing map cmp_entries_* function
    signatures to match this.
    
    Also, fix the build error reported by the kernel test robot [1].
    
    [1] https://lore.kernel.org/r/202110141140.zzi4dRh4-lkp@intel.com/
    
    Link: https://lkml.kernel.org/r/20211014045217.3265162-1-kaleshsingh@google.com
    
    Signed-off-by: Kalesh Singh <kaleshsingh@google.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5736f1dead8484cadf0843d5d9707ae1173f31e1
Author: Menglong Dong <imagedong@tencent.com>
Date:   Sun Oct 17 20:04:02 2021 +0800

    workqueue: make sysfs of unbound kworker cpumask more clever
    
    [ Upstream commit d25302e46592c97d29f70ccb1be558df31a9a360 ]
    
    Some unfriendly component, such as dpdk, write the same mask to
    unbound kworker cpumask again and again. Every time it write to
    this interface some work is queue to cpu, even though the mask
    is same with the original mask.
    
    So, fix it by return success and do nothing if the cpumask is
    equal with the old one.
    
    Signed-off-by: Mengen Sun <mengensun@tencent.com>
    Signed-off-by: Menglong Dong <imagedong@tencent.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab5c46f258c9040347ac145b524c01834c9f15b8
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 11 05:31:40 2021 +0800

    lib/xz: Validate the value before assigning it to an enum variable
    
    [ Upstream commit 4f8d7abaa413c34da9d751289849dbfb7c977d05 ]
    
    This might matter, for example, if the underlying type of enum xz_check
    was a signed char. In such a case the validation wouldn't have caught an
    unsupported header. I don't know if this problem can occur in the kernel
    on any arch but it's still good to fix it because some people might copy
    the XZ code to their own projects from Linux instead of the upstream
    XZ Embedded repository.
    
    This change may increase the code size by a few bytes. An alternative
    would have been to use an unsigned int instead of enum xz_check but
    using an enumeration looks cleaner.
    
    Link: https://lore.kernel.org/r/20211010213145.17462-3-xiang@kernel.org
    Signed-off-by: Lasse Collin <lasse.collin@tukaani.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa5d35e350f6587a17e7b17cc26eb0bfd7dda04c
Author: Lasse Collin <lasse.collin@tukaani.org>
Date:   Mon Oct 11 05:31:39 2021 +0800

    lib/xz: Avoid overlapping memcpy() with invalid input with in-place decompression
    
    [ Upstream commit 83d3c4f22a36d005b55f44628f46cc0d319a75e8 ]
    
    With valid files, the safety margin described in lib/decompress_unxz.c
    ensures that these buffers cannot overlap. But if the uncompressed size
    of the input is larger than the caller thought, which is possible when
    the input file is invalid/corrupt, the buffers can overlap. Obviously
    the result will then be garbage (and usually the decoder will return
    an error too) but no other harm will happen when such an over-run occurs.
    
    This change only affects uncompressed LZMA2 chunks and so this
    should have no effect on performance.
    
    Link: https://lore.kernel.org/r/20211010213145.17462-2-xiang@kernel.org
    Signed-off-by: Lasse Collin <lasse.collin@tukaani.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cad55afe37c9d4c796d9b2f9531e96ed4204d631
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Sat Oct 16 11:26:21 2021 +0000

    memstick: r592: Fix a UAF bug when removing the driver
    
    [ Upstream commit 738216c1953e802aa9f930c5d15b8f9092c847ff ]
    
    In r592_remove(), the driver will free dma after freeing the host, which
    may cause a UAF bug.
    
    The following log reveals it:
    
    [   45.361796 ] BUG: KASAN: use-after-free in r592_remove+0x269/0x350 [r592]
    [   45.364286 ] Call Trace:
    [   45.364472 ]  dump_stack_lvl+0xa8/0xd1
    [   45.364751 ]  print_address_description+0x87/0x3b0
    [   45.365137 ]  kasan_report+0x172/0x1c0
    [   45.365415 ]  ? r592_remove+0x269/0x350 [r592]
    [   45.365834 ]  ? r592_remove+0x269/0x350 [r592]
    [   45.366168 ]  __asan_report_load8_noabort+0x14/0x20
    [   45.366531 ]  r592_remove+0x269/0x350 [r592]
    [   45.378785 ]
    [   45.378903 ] Allocated by task 4674:
    [   45.379162 ]  ____kasan_kmalloc+0xb5/0xe0
    [   45.379455 ]  __kasan_kmalloc+0x9/0x10
    [   45.379730 ]  __kmalloc+0x150/0x280
    [   45.379984 ]  memstick_alloc_host+0x2a/0x190
    [   45.380664 ]
    [   45.380781 ] Freed by task 5509:
    [   45.381014 ]  kasan_set_track+0x3d/0x70
    [   45.381293 ]  kasan_set_free_info+0x23/0x40
    [   45.381635 ]  ____kasan_slab_free+0x10b/0x140
    [   45.381950 ]  __kasan_slab_free+0x11/0x20
    [   45.382241 ]  slab_free_freelist_hook+0x81/0x150
    [   45.382575 ]  kfree+0x13e/0x290
    [   45.382805 ]  memstick_free+0x1c/0x20
    [   45.383070 ]  device_release+0x9c/0x1d0
    [   45.383349 ]  kobject_put+0x2ef/0x4c0
    [   45.383616 ]  put_device+0x1f/0x30
    [   45.383865 ]  memstick_free_host+0x24/0x30
    [   45.384162 ]  r592_remove+0x242/0x350 [r592]
    [   45.384473 ]  pci_device_remove+0xa9/0x250
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Link: https://lore.kernel.org/r/1634383581-11055-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2338c3501726895c1657adda2308fcf9e6f17449
Author: Xiao Ni <xni@redhat.com>
Date:   Wed Oct 13 22:59:33 2021 +0800

    md: update superblock after changing rdev flags in state_store
    
    [ Upstream commit 8b9e2291e355a0eafdd5b1e21a94a6659f24b351 ]
    
    When the in memory flag is changed, we need to persist the change in the
    rdev superblock flags. This is needed for "writemostly" and "failfast".
    
    Reviewed-by: Li Feng <fengli@smartx.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b34ea3c91eacdc50c761506cab35b14f67216f76
Author: Jens Axboe <axboe@kernel.dk>
Date:   Wed Oct 6 12:01:07 2021 -0600

    block: bump max plugged deferred size from 16 to 32
    
    [ Upstream commit ba0ffdd8ce48ad7f7e85191cd29f9674caca3745 ]
    
    Particularly for NVMe with efficient deferred submission for many
    requests, there are nice benefits to be seen by bumping the default max
    plug count from 16 to 32. This is especially true for virtualized setups,
    where the submit part is more expensive. But can be noticed even on
    native hardware.
    
    Reduce the multiple queue factor from 4 to 2, since we're changing the
    default size.
    
    While changing it, move the defines into the block layer private header.
    These aren't values that anyone outside of the block layer uses, or
    should use.
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 517feec952ae3d728cea482fead1232a19b95078
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Wed Sep 29 10:25:54 2021 -0600

    drm/msm: prevent NULL dereference in msm_gpu_crashstate_capture()
    
    [ Upstream commit b220c154832c5cd0df34cbcbcc19d7135c16e823 ]
    
    Coverity complains of a possible NULL dereference:
    
    CID 120718 (#1 of 1): Dereference null return value (NULL_RETURNS)
    23. dereference: Dereferencing a pointer that might be NULL state->bos when
        calling msm_gpu_crashstate_get_bo. [show details]
    301                        msm_gpu_crashstate_get_bo(state, submit->bos[i].obj,
    302                                submit->bos[i].iova, submit->bos[i].flags);
    
    Fix this by employing the same state->bos NULL check as is used in the next
    for loop.
    
    Cc: Rob Clark <robdclark@gmail.com>
    Cc: Sean Paul <sean@poorly.run>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: linux-arm-msm@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: freedreno@lists.freedesktop.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20210929162554.14295-1-tim.gardner@canonical.com
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1d7f0202a9f038a59cc6ed954fdb4eba1324abe
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Sep 29 15:02:18 2021 -0700

    leaking_addresses: Always print a trailing newline
    
    [ Upstream commit cf2a85efdade117e2169d6e26641016cbbf03ef0 ]
    
    For files that lack trailing newlines and match a leaking address (e.g.
    wchan[1]), the leaking_addresses.pl report would run together with the
    next line, making things look corrupted.
    
    Unconditionally remove the newline on input, and write it back out on
    output.
    
    [1] https://lore.kernel.org/all/20210103142726.GC30643@xsang-OptiPlex-9020/
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20211008111626.151570317@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9101e2574b8153c80eb9056f86cfa4a853158f21
Author: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
Date:   Tue Oct 12 12:34:02 2021 +0200

    net: phy: micrel: make *-skew-ps check more lenient
    
    [ Upstream commit 67ca5159dbe2edb5dae7544447b8677d2596933a ]
    
    It seems reasonable to fine-tune only some of the skew values when using
    one of the rgmii-*id PHY modes, and even when all skew values are
    specified, using the correct ID PHY mode makes sense for documentation
    purposes. Such a configuration also appears in the binding docs in
    Documentation/devicetree/bindings/net/micrel-ksz90x1.txt, so the driver
    should not warn about it.
    
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Link: https://lore.kernel.org/r/20211012103402.21438-1-matthias.schiffer@ew.tq-group.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 832fad367cac9ca075a1aff92e21dc77ea308e96
Author: Yifan Zhang <yifan1.zhang@amd.com>
Date:   Mon Oct 11 20:42:31 2021 +0800

    drm/amdkfd: fix resume error when iommu disabled in Picasso
    
    [ Upstream commit 6f4b590aae217da16cfa44039a2abcfb209137ab ]
    
    When IOMMU disabled in sbios and kfd in iommuv2 path,
    IOMMU resume failure blocks system resume. Don't allow kfd to
    use iommu v2 when iommu is disabled.
    
    Reported-by: youling <youling257@gmail.com>
    Tested-by: youling <youling257@gmail.com>
    Signed-off-by: Yifan Zhang <yifan1.zhang@amd.com>
    Reviewed-by: James Zhu <James.Zhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65c84e09e8d431c6c3273f118fedd4a46e67313c
Author: André Almeida <andrealmeid@collabora.com>
Date:   Fri Oct 8 00:05:29 2021 -0300

    ACPI: battery: Accept charges over the design capacity as full
    
    [ Upstream commit 2835f327bd1240508db2c89fe94a056faa53c49a ]
    
    Some buggy firmware and/or brand new batteries can support a charge that's
    slightly over the reported design capacity. In such cases, the kernel will
    report to userspace that the charging state of the battery is "Unknown",
    when in reality the battery charge is "Full", at least from the design
    capacity point of view. Make the fallback condition accepts capacities
    over the designed capacity so userspace knows that is full.
    
    Signed-off-by: André Almeida <andrealmeid@collabora.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b60086601832a8f8c05f7a833f2869aad21f2b50
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Wed Jul 21 19:03:47 2021 +0200

    iov_iter: Fix iov_iter_get_pages{,_alloc} page fault return value
    
    [ Upstream commit 814a66741b9ffb5e1ba119e368b178edb0b7322d ]
    
    Both iov_iter_get_pages and iov_iter_get_pages_alloc return the number
    of bytes of the iovec they could get the pages for.  When they cannot
    get any pages, they're supposed to return 0, but when the start of the
    iovec isn't page aligned, the calculation goes wrong and they return a
    negative value.  Fix both functions.
    
    In addition, change iov_iter_get_pages_alloc to return NULL in that case
    to prevent resource leaks.
    
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 219df0f6bad4d301799c894e384e3832682d34f1
Author: Xin Xiong <xiongx18@fudan.edu.cn>
Date:   Sat Oct 9 12:19:18 2021 +0800

    mmc: moxart: Fix reference count leaks in moxart_probe
    
    [ Upstream commit 8105c2abbf36296bf38ca44f55ee45d160db476a ]
    
    The issue happens in several error handling paths on two refcounted
    object related to the object "host" (dma_chan_rx, dma_chan_tx). In
    these paths, the function forgets to decrement one or both objects'
    reference count increased earlier by dma_request_chan(), causing
    reference count leaks.
    
    Fix it by balancing the refcounts of both objects in some error
    handling paths. In correspondence with the changes in moxart_probe(),
    IS_ERR() is replaced with IS_ERR_OR_NULL() in moxart_remove() as well.
    
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Link: https://lore.kernel.org/r/20211009041918.28419-1-xiongx18@fudan.edu.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38608d32adf08d7f9bf11f964e13fc7b14fde4c6
Author: Tuo Li <islituo@gmail.com>
Date:   Thu Aug 5 08:38:53 2021 -0700

    ath: dfs_pattern_detector: Fix possible null-pointer dereference in channel_detector_create()
    
    [ Upstream commit 4b6012a7830b813799a7faf40daa02a837e0fd5b ]
    
    kzalloc() is used to allocate memory for cd->detectors, and if it fails,
    channel_detector_exit() behind the label fail will be called:
      channel_detector_exit(dpd, cd);
    
    In channel_detector_exit(), cd->detectors is dereferenced through:
      struct pri_detector *de = cd->detectors[i];
    
    To fix this possible null-pointer dereference, check cd->detectors before
    the for loop to dereference cd->detectors.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210805153854.154066-1-islituo@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c2434d9a6c6807f84a7c7be9396588897e4f31f
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Aug 18 11:24:50 2021 -0400

    tracefs: Have tracefs directories not set OTH permission bits by default
    
    [ Upstream commit 49d67e445742bbcb03106b735b2ab39f6e5c56bc ]
    
    The tracefs file system is by default mounted such that only root user can
    access it. But there are legitimate reasons to create a group and allow
    those added to the group to have access to tracing. By changing the
    permissions of the tracefs mount point to allow access, it will allow
    group access to the tracefs directory.
    
    There should not be any real reason to allow all access to the tracefs
    directory as it contains sensitive information. Have the default
    permission of directories being created not have any OTH (other) bits set,
    such that an admin that wants to give permission to a group has to first
    disable all OTH bits in the file system.
    
    Link: https://lkml.kernel.org/r/20210818153038.664127804@goodmis.org
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8524501a0e7af259779c556a2fda2ff2dd47c992
Author: Antoine Tenart <atenart@kernel.org>
Date:   Thu Oct 7 16:00:51 2021 +0200

    net-sysfs: try not to restart the syscall if it will fail eventually
    
    [ Upstream commit 146e5e733310379f51924111068f08a3af0db830 ]
    
    Due to deadlocks in the networking subsystem spotted 12 years ago[1],
    a workaround was put in place[2] to avoid taking the rtnl lock when it
    was not available and restarting the syscall (back to VFS, letting
    userspace spin). The following construction is found a lot in the net
    sysfs and sysctl code:
    
      if (!rtnl_trylock())
              return restart_syscall();
    
    This can be problematic when multiple userspace threads use such
    interfaces in a short period, making them to spin a lot. This happens
    for example when adding and moving virtual interfaces: userspace
    programs listening on events, such as systemd-udevd and NetworkManager,
    do trigger actions reading files in sysfs. It gets worse when a lot of
    virtual interfaces are created concurrently, say when creating
    containers at boot time.
    
    Returning early without hitting the above pattern when the syscall will
    fail eventually does make things better. While it is not a fix for the
    issue, it does ease things.
    
    [1] https://lore.kernel.org/netdev/49A4D5D5.5090602@trash.net/
        https://lore.kernel.org/netdev/m14oyhis31.fsf@fess.ebiederm.org/
        and https://lore.kernel.org/netdev/20090226084924.16cb3e08@nehalam/
    [2] Rightfully, those deadlocks are *hard* to solve.
    
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Reviewed-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b94e5bd540f4387fb7833509816ae02cc816a65a
Author: Anant Thazhemadam <anant.thazhemadam@gmail.com>
Date:   Mon Dec 7 07:16:06 2020 +0100

    media: usb: dvd-usb: fix uninit-value bug in dibusb_read_eeprom_byte()
    
    [ Upstream commit 899a61a3305d49e8a712e9ab20d0db94bde5929f ]
    
    In dibusb_read_eeprom_byte(), if dibusb_i2c_msg() fails, val gets
    assigned an value that's not properly initialized.
    Using kzalloc() in place of kmalloc() for the buffer fixes this issue,
    as the val can now be set to 0 in the event dibusb_i2c_msg() fails.
    
    Reported-by: syzbot+e27b4fd589762b0b9329@syzkaller.appspotmail.com
    Tested-by: syzbot+e27b4fd589762b0b9329@syzkaller.appspotmail.com
    Signed-off-by: Anant Thazhemadam <anant.thazhemadam@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3bc3e114135b6c450f5d4926db6141506dbfc69
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Thu Oct 7 00:26:22 2021 +0200

    media: ipu3-imgu: VIDIOC_QUERYCAP: Fix bus_info
    
    [ Upstream commit ea2b9a33711604e91f8c826f4dcb3c12baa1990a ]
    
    bus_info field had a different value for the media entity and the video
    device.
    
    Fixes v4l2-compliance:
    
    v4l2-compliance.cpp(637): media bus_info 'PCI:0000:00:05.0' differs from
                              V4L2 bus_info 'PCI:viewfinder'
    
    Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b499d405716061def13c61b74fdcba9ab74801ee
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Thu Oct 7 00:26:21 2021 +0200

    media: ipu3-imgu: imgu_fmt: Handle properly try
    
    [ Upstream commit 553481e38045f349bb9aa596d03bebd020020c9c ]
    
    For a try_fmt call, the node noes not need to be enabled.
    
    Fixes v4l2-compliance
    
    fail: v4l2-test-formats.cpp(717): Video Output Multiplanar is valid, but
                                      no TRY_FMT was implemented
    test VIDIOC_TRY_FMT: FAIL
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 272e54604cf7f9420d907c39d977e08e0f7ffde5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Sep 29 18:31:25 2021 +0200

    ACPICA: Avoid evaluating methods too early during system resume
    
    [ Upstream commit d3c4b6f64ad356c0d9ddbcf73fa471e6a841cc5c ]
    
    ACPICA commit 0762982923f95eb652cf7ded27356b247c9774de
    
    During wakeup from system-wide sleep states, acpi_get_sleep_type_data()
    is called and it tries to get memory from the slab allocator in order
    to evaluate a control method, but if KFENCE is enabled in the kernel,
    the memory allocation attempt causes an IRQ work to be queued and a
    self-IPI to be sent to the CPU running the code which requires the
    memory controller to be ready, so if that happens too early in the
    wakeup path, it doesn't work.
    
    Prevent that from taking place by calling acpi_get_sleep_type_data()
    for S0 upfront, when preparing to enter a given sleep state, and
    saving the data obtained by it for later use during system wakeup.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=214271
    Reported-by: Reik Keutterling <spielkind@gmail.com>
    Tested-by: Reik Keutterling <spielkind@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f09e1a2d2c74ff5bdeb6b0ad63435ee0eb9c4263
Author: Josh Don <joshdon@google.com>
Date:   Fri Aug 27 09:54:38 2021 -0700

    fs/proc/uptime.c: Fix idle time reporting in /proc/uptime
    
    [ Upstream commit a130e8fbc7de796eb6e680724d87f4737a26d0ac ]
    
    /proc/uptime reports idle time by reading the CPUTIME_IDLE field from
    the per-cpu kcpustats. However, on NO_HZ systems, idle time is not
    continually updated on idle cpus, leading this value to appear
    incorrectly small.
    
    /proc/stat performs an accounting update when reading idle time; we
    can use the same approach for uptime.
    
    With this patch, /proc/stat and /proc/uptime now agree on idle time.
    Additionally, the following shows idle time tick up consistently on an
    idle machine:
    
      (while true; do cat /proc/uptime; sleep 1; done) | awk '{print $2-prev; prev=$2}'
    
    Reported-by: Luigi Rizzo <lrizzo@google.com>
    Signed-off-by: Josh Don <joshdon@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lkml.kernel.org/r/20210827165438.3280779-1-joshdon@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e242c557ad5d827dacba8ad9b03e90ebeb78581
Author: Corey Minyard <cminyard@mvista.com>
Date:   Thu Sep 16 11:36:20 2021 -0500

    ipmi: Disable some operations during a panic
    
    [ Upstream commit b36eb5e7b75a756baa64909a176dd4269ee05a8b ]
    
    Don't do kfree or other risky things when oops_in_progress is set.
    It's easy enough to avoid doing them
    
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f38e5e803df5acf8438c2891d01410b333fc19b
Author: Nadezda Lutovinova <lutovinova@ispras.ru>
Date:   Wed Aug 11 19:18:16 2021 +0200

    media: rcar-csi2: Add checking to rcsi2_start_receiver()
    
    [ Upstream commit fc41665498332ad394b7db37f23e9394096ddc71 ]
    
    If rcsi2_code_to_fmt() return NULL, then null pointer dereference occurs
    in the next cycle. That should not be possible now but adding checking
    protects from future bugs.
    The patch adds checking if format is NULL.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Nadezda Lutovinova <lutovinova@ispras.ru>
    Reviewed-by: Jacopo Mondi <jacopo@jmondi.org>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d5575b3f536adfc2189e79a783a28a930730c81
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Sep 28 18:06:33 2021 +0200

    brcmfmac: Add DMI nvram filename quirk for Cyberbook T116 tablet
    
    [ Upstream commit 49c3eb3036e6359c5c20fe76c611a2c0e0d4710e ]
    
    The Cyberbook T116 tablet contains quite generic names in the sys_vendor
    and product_name DMI strings, without this patch brcmfmac will try to load:
    "brcmfmac43455-sdio.Default string-Default string.txt" as nvram file which
    is way too generic.
    
    The nvram file shipped on the factory Android image contains the exact
    same settings as those used on the AcePC T8 mini PC, so point the new
    DMI nvram filename quirk to the acepc-t8 nvram file.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210928160633.96928-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d54f52d8fdb95eb4ca7c7c917186591edb56377
Author: Zong-Zhe Yang <kevin_yang@realtek.com>
Date:   Mon Sep 27 19:18:30 2021 +0800

    rtw88: fix RX clock gate setting while fifo dump
    
    [ Upstream commit c5a8e90730a322f236731fc347dd3afa5db5550e ]
    
    When fw fifo dumps, RX clock gating should be disabled to avoid
    something unexpected. However, the register operation ran into
    a mistake. So, we fix it.
    
    Signed-off-by: Zong-Zhe Yang <kevin_yang@realtek.com>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210927111830.5354-1-pkshih@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d506a3d60df938d82fcaa875475bfad759941554
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Sep 26 10:12:24 2021 -0700

    ia64: don't do IA64_CMPXCHG_DEBUG without CONFIG_PRINTK
    
    [ Upstream commit c15b5fc054c3d6c97e953617605235c5cb8ce979 ]
    
    When CONFIG_PRINTK is not set, the CMPXCHG_BUGCHECK() macro calls
    _printk(), but _printk() is a static inline function, not available
    as an extern.
    Since the purpose of the macro is to print the BUGCHECK info,
    make this config option depend on PRINTK.
    
    Fixes multiple occurrences of this build error:
    
    ../include/linux/printk.h:208:5: error: static declaration of '_printk' follows non-static declaration
      208 | int _printk(const char *s, ...)
          |     ^~~~~~~
    In file included from ../arch/ia64/include/asm/cmpxchg.h:5,
    ../arch/ia64/include/uapi/asm/cmpxchg.h:146:28: note: previous declaration of '_printk' with type 'int(const char *, ...)'
      146 |                 extern int _printk(const char *fmt, ...);
    
    Cc: linux-ia64@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Chris Down <chris@chrisdown.name>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2709971f9f60e49c805c7da4a0e85664f5532e58
Author: Rajat Asthana <rajatasthana4@gmail.com>
Date:   Wed Aug 18 22:31:10 2021 +0200

    media: mceusb: return without resubmitting URB in case of -EPROTO error.
    
    [ Upstream commit 476db72e521983ecb847e4013b263072bb1110fc ]
    
    Syzkaller reported a warning called "rcu detected stall in dummy_timer".
    
    The error seems to be an error in mceusb_dev_recv(). In the case of
    -EPROTO error, the routine immediately resubmits the URB. Instead it
    should return without resubmitting URB.
    
    Reported-by: syzbot+4d3749e9612c2cfab956@syzkaller.appspotmail.com
    Signed-off-by: Rajat Asthana <rajatasthana4@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40b8e7dee544c067ed63488de026f4d1fc025dea
Author: Martin Kepplinger <martink@posteo.de>
Date:   Wed Sep 8 10:47:46 2021 +0200

    media: imx: set a media_device bus_info string
    
    [ Upstream commit 6d0d779b212c27293d9ccb4da092ff0ccb6efa39 ]
    
    Some tools like v4l2-compliance let users select a media device based
    on the bus_info string which can be quite convenient. Use a unique
    string for that.
    
    This also fixes the following v4l2-compliance warning:
    warn: v4l2-test-media.cpp(52): empty bus_info
    
    Signed-off-by: Martin Kepplinger <martin.kepplinger@puri.sm>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a62edd8390ecef22fb9e7c1647926799620a6b9a
Author: Nadezda Lutovinova <lutovinova@ispras.ru>
Date:   Wed Aug 11 15:32:28 2021 +0200

    media: s5p-mfc: Add checking to s5p_mfc_probe().
    
    [ Upstream commit cdfaf4752e6915a4b455ad4400133e540e4dc965 ]
    
    If of_device_get_match_data() return NULL,
    then null pointer dereference occurs in  s5p_mfc_init_pm().
    The patch adds checking if dev->variant is NULL.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Nadezda Lutovinova <lutovinova@ispras.ru>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b570e36a779c981267400a40895dff42de1346e5
Author: Tuo Li <islituo@gmail.com>
Date:   Thu Aug 5 09:55:35 2021 +0200

    media: s5p-mfc: fix possible null-pointer dereference in s5p_mfc_probe()
    
    [ Upstream commit 8515965e5e33f4feb56134348c95953f3eadfb26 ]
    
    The variable pdev is assigned to dev->plat_dev, and dev->plat_dev is
    checked in:
      if (!dev->plat_dev)
    
    This indicates both dev->plat_dev and pdev can be NULL. If so, the
    function dev_err() is called to print error information.
      dev_err(&pdev->dev, "No platform data specified\n");
    
    However, &pdev->dev is an illegal address, and it is dereferenced in
    dev_err().
    
    To fix this possible null-pointer dereference, replace dev_err() with
    mfc_err().
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4037b9b10621cfd0df79f2ef765fe15f16c7870
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Jun 18 14:29:13 2021 +0200

    media: uvcvideo: Set unique vdev name based in type
    
    [ Upstream commit e3f60e7e1a2b451f538f9926763432249bcf39c4 ]
    
    All the entities must have a unique name. We can have a descriptive and
    unique name by appending the function and the entity->id.
    
    This is even resilent to multi chain devices.
    
    Fixes v4l2-compliance:
    Media Controller ioctls:
                    fail: v4l2-test-media.cpp(205): v2_entity_names_set.find(key) != v2_entity_names_set.end()
            test MEDIA_IOC_G_TOPOLOGY: FAIL
                    fail: v4l2-test-media.cpp(394): num_data_links != num_links
            test MEDIA_IOC_ENUM_ENTITIES/LINKS: FAIL
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9349416402d89fb179c02e86d40caf5d892835a
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Jun 18 14:29:09 2021 +0200

    media: uvcvideo: Return -EIO for control errors
    
    [ Upstream commit ffccdde5f0e17d2f0d788a9d831a027187890eaa ]
    
    The device is doing something unexpected with the control. Either because
    the protocol is not properly implemented or there has been a HW error.
    
    Fixes v4l2-compliance:
    
    Control ioctls (Input 0):
                    fail: v4l2-test-controls.cpp(448): s_ctrl returned an error (22)
            test VIDIOC_G/S_CTRL: FAIL
                    fail: v4l2-test-controls.cpp(698): s_ext_ctrls returned an error (22)
            test VIDIOC_G/S/TRY_EXT_CTRLS: FAIL
    
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2052c4cebce9e5f60c8a5b0e8fc4c2727d2a39ab
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Jun 18 14:29:08 2021 +0200

    media: uvcvideo: Set capability in s_param
    
    [ Upstream commit 97a2777a96070afb7da5d587834086c0b586c8cc ]
    
    Fixes v4l2-compliance:
    
    Format ioctls (Input 0):
                    warn: v4l2-test-formats.cpp(1339): S_PARM is supported but doesn't report V4L2_CAP_TIMEPERFRAME
                    fail: v4l2-test-formats.cpp(1241): node->has_frmintervals && !cap->capability
    
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c91bb4fbde4729fe692575e82cce43c11063098
Author: Dmitriy Ulitin <ulitin@ispras.ru>
Date:   Thu May 27 17:06:26 2021 +0200

    media: stm32: Potential NULL pointer dereference in dcmi_irq_thread()
    
    [ Upstream commit 548fa43a58696450c15b8f5564e99589c5144664 ]
    
    At the moment of enabling irq handling:
    
    1922 ret = devm_request_threaded_irq(&pdev->dev, irq, dcmi_irq_callback,
    1923                    dcmi_irq_thread, IRQF_ONESHOT,
    1924                    dev_name(&pdev->dev), dcmi);
    
    there is still uninitialized field sd_format of struct stm32_dcmi *dcmi.
    If an interrupt occurs in the interval between the installation of the
    interrupt handler and the initialization of this field, NULL pointer
    dereference happens.
    
    This field is dereferenced in the handler function without any check:
    
    457 if (dcmi->sd_format->fourcc == V4L2_PIX_FMT_JPEG &&
    458         dcmi->misr & IT_FRAME) {
    
    The patch moves interrupt handler installation
    after initialization of the sd_format field that happens in
    dcmi_graph_notify_complete() via dcmi_set_default_fmt().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Dmitriy Ulitin <ulitin@ispras.ru>
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 309ea2248d0ac305e41379bb50329a1664085a3f
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Tue Aug 10 18:29:43 2021 +0200

    media: atomisp: Fix error handling in probe
    
    [ Upstream commit e16f5e39acd6d10cc63ae39bc0a77188ed828f22 ]
    
    There were several issues with handling errors in lm3554_probe():
    - Probe did not set the error code when v4l2_ctrl_handler_init() failed.
    - It intermixed gotos for handling errors of v4l2_ctrl_handler_init()
      and media_entity_pads_init().
    - It did not set the error code for failures of v4l2_ctrl_new_custom().
    - Probe did not free resources in case of failures of
      atomisp_register_i2c_module().
    
    The patch fixes all these issues.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Link: https://lore.kernel.org/linux-media/20210810162943.19852-1-novikov@ispras.ru
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4c652bd3506e9a5feb9e32f50a0b4cf5e3860f7
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Jun 23 08:01:05 2021 +0200

    media: netup_unidvb: handle interrupt properly according to the firmware
    
    [ Upstream commit dbb4cfea6efe979ed153bd59a6a527a90d3d0ab3 ]
    
    The interrupt handling should be related to the firmware version. If
    the driver matches an old firmware, then the driver should not handle
    interrupt such as i2c or dma, otherwise it will cause some errors.
    
    This log reveals it:
    
    [   27.708641] INFO: trying to register non-static key.
    [   27.710851] The code is fine but needs lockdep annotation, or maybe
    [   27.712010] you didn't initialize this object before use?
    [   27.712396] turning off the locking correctness validator.
    [   27.712787] CPU: 2 PID: 0 Comm: swapper/2 Not tainted 5.12.4-g70e7f0549188-dirty #169
    [   27.713349] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    [   27.714149] Call Trace:
    [   27.714329]  <IRQ>
    [   27.714480]  dump_stack+0xba/0xf5
    [   27.714737]  register_lock_class+0x873/0x8f0
    [   27.715052]  ? __lock_acquire+0x323/0x1930
    [   27.715353]  __lock_acquire+0x75/0x1930
    [   27.715636]  lock_acquire+0x1dd/0x3e0
    [   27.715905]  ? netup_i2c_interrupt+0x19/0x310
    [   27.716226]  _raw_spin_lock_irqsave+0x4b/0x60
    [   27.716544]  ? netup_i2c_interrupt+0x19/0x310
    [   27.716863]  netup_i2c_interrupt+0x19/0x310
    [   27.717178]  netup_unidvb_isr+0xd3/0x160
    [   27.717467]  __handle_irq_event_percpu+0x53/0x3e0
    [   27.717808]  handle_irq_event_percpu+0x35/0x90
    [   27.718129]  handle_irq_event+0x39/0x60
    [   27.718409]  handle_fasteoi_irq+0xc2/0x1d0
    [   27.718707]  __common_interrupt+0x7f/0x150
    [   27.719008]  common_interrupt+0xb4/0xd0
    [   27.719289]  </IRQ>
    [   27.719446]  asm_common_interrupt+0x1e/0x40
    [   27.719747] RIP: 0010:native_safe_halt+0x17/0x20
    [   27.720084] Code: 07 0f 00 2d 8b ee 4c 00 f4 5d c3 0f 1f 84 00 00 00 00 00 8b 05 72 95 17 02 55 48 89 e5 85 c0 7e 07 0f 00 2d 6b ee 4c 00 fb f4 <5d> c3 cc cc cc cc cc cc cc 55 48 89 e5 e8 67 53 ff ff 8b 0d 29 f6
    [   27.721386] RSP: 0018:ffffc9000008fe90 EFLAGS: 00000246
    [   27.721758] RAX: 0000000000000000 RBX: 0000000000000002 RCX: 0000000000000000
    [   27.722262] RDX: 0000000000000000 RSI: ffffffff85f7c054 RDI: ffffffff85ded4e6
    [   27.722770] RBP: ffffc9000008fe90 R08: 0000000000000001 R09: 0000000000000001
    [   27.723277] R10: 0000000000000000 R11: 0000000000000001 R12: ffffffff86a75408
    [   27.723781] R13: 0000000000000000 R14: 0000000000000000 R15: ffff888100260000
    [   27.724289]  default_idle+0x9/0x10
    [   27.724537]  arch_cpu_idle+0xa/0x10
    [   27.724791]  default_idle_call+0x6e/0x250
    [   27.725082]  do_idle+0x1f0/0x2d0
    [   27.725326]  cpu_startup_entry+0x18/0x20
    [   27.725613]  start_secondary+0x11f/0x160
    [   27.725902]  secondary_startup_64_no_verify+0xb0/0xbb
    [   27.726272] BUG: kernel NULL pointer dereference, address: 0000000000000002
    [   27.726768] #PF: supervisor read access in kernel mode
    [   27.727138] #PF: error_code(0x0000) - not-present page
    [   27.727507] PGD 8000000118688067 P4D 8000000118688067 PUD 10feab067 PMD 0
    [   27.727999] Oops: 0000 [#1] PREEMPT SMP PTI
    [   27.728302] CPU: 2 PID: 0 Comm: swapper/2 Not tainted 5.12.4-g70e7f0549188-dirty #169
    [   27.728861] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    [   27.729660] RIP: 0010:netup_i2c_interrupt+0x23/0x310
    [   27.730019] Code: 0f 1f 80 00 00 00 00 55 48 89 e5 41 55 41 54 53 48 89 fb e8 af 6e 95 fd 48 89 df e8 e7 9f 1c 01 49 89 c5 48 8b 83 48 08 00 00 <66> 44 8b 60 02 44 89 e0 48 8b 93 48 08 00 00 83 e0 f8 66 89 42 02
    [   27.731339] RSP: 0018:ffffc90000118e90 EFLAGS: 00010046
    [   27.731716] RAX: 0000000000000000 RBX: ffff88810803c4d8 RCX: 0000000000000000
    [   27.732223] RDX: 0000000000000001 RSI: ffffffff85d37b94 RDI: ffff88810803c4d8
    [   27.732727] RBP: ffffc90000118ea8 R08: 0000000000000000 R09: 0000000000000001
    [   27.733239] R10: ffff88810803c4f0 R11: 61646e6f63657320 R12: 0000000000000000
    [   27.733745] R13: 0000000000000046 R14: ffff888101041000 R15: ffff8881081b2400
    [   27.734251] FS:  0000000000000000(0000) GS:ffff88817bc80000(0000) knlGS:0000000000000000
    [   27.734821] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   27.735228] CR2: 0000000000000002 CR3: 0000000108194000 CR4: 00000000000006e0
    [   27.735735] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   27.736241] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   27.736744] Call Trace:
    [   27.736924]  <IRQ>
    [   27.737074]  netup_unidvb_isr+0xd3/0x160
    [   27.737363]  __handle_irq_event_percpu+0x53/0x3e0
    [   27.737706]  handle_irq_event_percpu+0x35/0x90
    [   27.738028]  handle_irq_event+0x39/0x60
    [   27.738306]  handle_fasteoi_irq+0xc2/0x1d0
    [   27.738602]  __common_interrupt+0x7f/0x150
    [   27.738899]  common_interrupt+0xb4/0xd0
    [   27.739176]  </IRQ>
    [   27.739331]  asm_common_interrupt+0x1e/0x40
    [   27.739633] RIP: 0010:native_safe_halt+0x17/0x20
    [   27.739967] Code: 07 0f 00 2d 8b ee 4c 00 f4 5d c3 0f 1f 84 00 00 00 00 00 8b 05 72 95 17 02 55 48 89 e5 85 c0 7e 07 0f 00 2d 6b ee 4c 00 fb f4 <5d> c3 cc cc cc cc cc cc cc 55 48 89 e5 e8 67 53 ff ff 8b 0d 29 f6
    [   27.741275] RSP: 0018:ffffc9000008fe90 EFLAGS: 00000246
    [   27.741647] RAX: 0000000000000000 RBX: 0000000000000002 RCX: 0000000000000000
    [   27.742148] RDX: 0000000000000000 RSI: ffffffff85f7c054 RDI: ffffffff85ded4e6
    [   27.742652] RBP: ffffc9000008fe90 R08: 0000000000000001 R09: 0000000000000001
    [   27.743154] R10: 0000000000000000 R11: 0000000000000001 R12: ffffffff86a75408
    [   27.743652] R13: 0000000000000000 R14: 0000000000000000 R15: ffff888100260000
    [   27.744157]  default_idle+0x9/0x10
    [   27.744405]  arch_cpu_idle+0xa/0x10
    [   27.744658]  default_idle_call+0x6e/0x250
    [   27.744948]  do_idle+0x1f0/0x2d0
    [   27.745190]  cpu_startup_entry+0x18/0x20
    [   27.745475]  start_secondary+0x11f/0x160
    [   27.745761]  secondary_startup_64_no_verify+0xb0/0xbb
    [   27.746123] Modules linked in:
    [   27.746348] Dumping ftrace buffer:
    [   27.746596]    (ftrace buffer empty)
    [   27.746852] CR2: 0000000000000002
    [   27.747094] ---[ end trace ebafd46f83ab946d ]---
    [   27.747424] RIP: 0010:netup_i2c_interrupt+0x23/0x310
    [   27.747778] Code: 0f 1f 80 00 00 00 00 55 48 89 e5 41 55 41 54 53 48 89 fb e8 af 6e 95 fd 48 89 df e8 e7 9f 1c 01 49 89 c5 48 8b 83 48 08 00 00 <66> 44 8b 60 02 44 89 e0 48 8b 93 48 08 00 00 83 e0 f8 66 89 42 02
    [   27.749082] RSP: 0018:ffffc90000118e90 EFLAGS: 00010046
    [   27.749461] RAX: 0000000000000000 RBX: ffff88810803c4d8 RCX: 0000000000000000
    [   27.749966] RDX: 0000000000000001 RSI: ffffffff85d37b94 RDI: ffff88810803c4d8
    [   27.750471] RBP: ffffc90000118ea8 R08: 0000000000000000 R09: 0000000000000001
    [   27.750976] R10: ffff88810803c4f0 R11: 61646e6f63657320 R12: 0000000000000000
    [   27.751480] R13: 0000000000000046 R14: ffff888101041000 R15: ffff8881081b2400
    [   27.751986] FS:  0000000000000000(0000) GS:ffff88817bc80000(0000) knlGS:0000000000000000
    [   27.752560] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   27.752970] CR2: 0000000000000002 CR3: 0000000108194000 CR4: 00000000000006e0
    [   27.753481] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   27.753984] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   27.754487] Kernel panic - not syncing: Fatal exception in interrupt
    [   27.755033] Dumping ftrace buffer:
    [   27.755279]    (ftrace buffer empty)
    [   27.755534] Kernel Offset: disabled
    [   27.755785] Rebooting in 1 seconds..
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09ee09359af9cf42b0ebc640adca63008cb8dffa
Author: Dirk Bender <d.bender@phytec.de>
Date:   Mon Jul 26 09:35:15 2021 +0200

    media: mt9p031: Fix corrupted frame after restarting stream
    
    [ Upstream commit 0961ba6dd211a4a52d1dd4c2d59be60ac2dc08c7 ]
    
    To prevent corrupted frames after starting and stopping the sensor its
    datasheet specifies a specific pause sequence to follow:
    
    Stopping:
            Set Pause_Restart Bit -> Set Restart Bit -> Set Chip_Enable Off
    
    Restarting:
            Set Chip_Enable On -> Clear Pause_Restart Bit
    
    The Restart Bit is cleared automatically and must not be cleared
    manually as this would cause undefined behavior.
    
    Signed-off-by: Dirk Bender <d.bender@phytec.de>
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aded39ff1f7a496b3c343f9e0e4130375ff05bdb
Author: Alagu Sankar <alagusankar@silex-india.com>
Date:   Tue Sep 28 14:00:47 2021 +0300

    ath10k: high latency fixes for beacon buffer
    
    [ Upstream commit e263bdab9c0e8025fb7f41f153709a9cda51f6b6 ]
    
    Beacon buffer for high latency devices does not use DMA. other similar
    buffer allocation methods in the driver have already been modified for
    high latency path. Fix the beacon buffer allocation left out in the
    earlier high latency changes.
    
    Signed-off-by: Alagu Sankar <alagusankar@silex-india.com>
    Signed-off-by: Erik Stromdahl <erik.stromdahl@gmail.com>
    [fabio: adapt it to use ar->bus_param.dev_type ]
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210818232627.2040121-1-festevam@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 461a71a1a62aeb1c92fd5c52d4a93bb5a280cf24
Author: Baochen Qiang <bqiang@codeaurora.org>
Date:   Tue Sep 28 14:00:46 2021 +0300

    ath11k: Change DMA_FROM_DEVICE to DMA_TO_DEVICE when map reinjected packets
    
    [ Upstream commit 86a03dad0f5ad8182ed5fcf7bf3eec71cd96577c ]
    
    For fragmented packets, ath11k reassembles each fragment as a normal
    packet and then reinjects it into HW ring. In this case, the DMA
    direction should be DMA_TO_DEVICE, not DMA_FROM_DEVICE, otherwise
    invalid payload will be reinjected to HW and then delivered to host.
    What is more, since arbitrary memory could be allocated to the frame, we
    don't know what kind of data is contained in the buffer reinjected.
    Thus, as a bad result, private info may be leaked.
    
    Note that this issue is only found on Intel platform.
    
    Tested-on: QCA6390 hw2.0 PCI WLAN.HST.1.0.1-01740-QCAHSTSWPLZ_V2_TO_X86-1
    Signed-off-by: Baochen Qiang <bqiang@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210916064617.20006-1-bqiang@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43ab6457883670e0080938e2bb0544f58880f063
Author: Wen Gong <wgong@codeaurora.org>
Date:   Tue Sep 28 14:00:45 2021 +0300

    ath11k: add handler for scan event WMI_SCAN_EVENT_DEQUEUED
    
    [ Upstream commit 441b3b5911f8ead7f2fe2336587b340a33044d58 ]
    
    When wlan interface is up, 11d scan is sent to the firmware, and the
    firmware needs to spend couple of seconds to complete the 11d scan. If
    immediately a normal scan from user space arrives to ath11k, then the
    normal scan request is also sent to the firmware, but the scan started
    event will be reported to ath11k until the 11d scan complete. When timed
    out for the scan started in ath11k, ath11k stops the normal scan and the
    firmware reports WMI_SCAN_EVENT_DEQUEUED to ath11k for the normal scan.
    ath11k has no handler for the event and then timed out for the scan
    completed in ath11k_scan_stop(), and ath11k prints the following error
    message.
    
    [ 1491.604750] ath11k_pci 0000:02:00.0: failed to receive scan abort comple: timed out
    [ 1491.604756] ath11k_pci 0000:02:00.0: failed to stop scan: -110
    [ 1491.604758] ath11k_pci 0000:02:00.0: failed to start hw scan: -110
    
    Add a handler for WMI_SCAN_EVENT_DEQUEUED and then complete the scan to
    get rid of the above error message.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-01720.1-QCAHSPSWPL_V1_V2_SILICONZ_LITE-1
    
    Signed-off-by: Wen Gong <wgong@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210914164226.38843-1-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97890f36333dd3932c7704ceeb7c13289c184537
Author: Sriram R <srirrama@codeaurora.org>
Date:   Tue Sep 28 12:05:40 2021 +0300

    ath11k: Avoid reg rules update during firmware recovery
    
    [ Upstream commit 69a0fcf8a9f2273040d03e5ee77c9689c09e9d3a ]
    
    During firmware recovery, the default reg rules which are
    received via WMI_REG_CHAN_LIST_CC_EVENT can overwrite
    the currently configured user regd.
    
    See below snap for example,
    
    root@OpenWrt:/# iw reg get | grep country
    country FR: DFS-ETSI
    country FR: DFS-ETSI
    country FR: DFS-ETSI
    country FR: DFS-ETSI
    
    root@OpenWrt:/# echo assert > /sys/kernel/debug/ath11k/ipq8074\ hw2.0/simulate_f
    w_crash
    <snip>
    [ 5290.471696] ath11k c000000.wifi1: pdev 1 successfully recovered
    
    root@OpenWrt:/# iw reg get | grep country
    country FR: DFS-ETSI
    country US: DFS-FCC
    country US: DFS-FCC
    country US: DFS-FCC
    
    In the above, the user configured country 'FR' is overwritten
    when the rules of default country 'US' are received and updated during
    recovery. Hence avoid processing of these rules in general
    during firmware recovery as they have been already applied during
    driver registration or after last set user country is configured.
    
    This scenario applies for both AP and STA devices basically because
    cfg80211 is not aware of the recovery and only the driver recovers, but
    changing or resetting of the reg domain during recovery is not needed so
    as to continue with the configured regdomain currently in use.
    
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.4.0.1-01460-QCAHKSWPL_SILICONZ-1
    
    Signed-off-by: Sriram R <srirrama@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210721212029.142388-3-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2114f80889d89f96e65e0f8a74bd0ecf10b658f5
Author: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
Date:   Thu Sep 16 12:54:07 2021 -0400

    drm/amdgpu: Fix MMIO access page fault
    
    [ Upstream commit c03509cbc01559549700e14c4a6239f2572ab4ba ]
    
    Add more guards to MMIO access post device
    unbind/unplug
    
    Bug: https://bugs.archlinux.org/task/72092?project=1&order=dateopened&sort=desc&pagenum=1
    Signed-off-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Reviewed-by: James Zhu <James.Zhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68ac723fb17e52c101b722c10ed5ff23e1a3e071
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Sep 20 20:03:03 2021 -0700

    fscrypt: allow 256-bit master keys with AES-256-XTS
    
    [ Upstream commit 7f595d6a6cdc336834552069a2e0a4f6d4756ddf ]
    
    fscrypt currently requires a 512-bit master key when AES-256-XTS is
    used, since AES-256-XTS keys are 512-bit and fscrypt requires that the
    master key be at least as long any key that will be derived from it.
    
    However, this is overly strict because AES-256-XTS doesn't actually have
    a 512-bit security strength, but rather 256-bit.  The fact that XTS
    takes twice the expected key size is a quirk of the XTS mode.  It is
    sufficient to use 256 bits of entropy for AES-256-XTS, provided that it
    is first properly expanded into a 512-bit key, which HKDF-SHA512 does.
    
    Therefore, relax the check of the master key size to use the security
    strength of the derived key rather than the size of the derived key
    (except for v1 encryption policies, which don't use HKDF).
    
    Besides making things more flexible for userspace, this is needed in
    order for the use of a KDF which only takes a 256-bit key to be
    introduced into the fscrypt key hierarchy.  This will happen with
    hardware-wrapped keys support, as all known hardware which supports that
    feature uses an SP800-108 KDF using AES-256-CMAC, so the wrapped keys
    are wrapped 256-bit AES keys.  Moreover, there is interest in fscrypt
    supporting the same type of AES-256-CMAC based KDF in software as an
    alternative to HKDF-SHA512.  There is no security problem with such
    features, so fix the key length check to work properly with them.
    
    Reviewed-by: Paul Crowley <paulcrowley@google.com>
    Link: https://lore.kernel.org/r/20210921030303.5598-1-ebiggers@kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f526d948c38ddda95c1855663e8fb8b87314fdce
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Tue Sep 14 21:59:08 2021 +0200

    mwifiex: Properly initialize private structure on interface type changes
    
    [ Upstream commit c606008b70627a2fc485732a53cc22f0f66d0981 ]
    
    When creating a new virtual interface in mwifiex_add_virtual_intf(), we
    update our internal driver states like bss_type, bss_priority, bss_role
    and bss_mode to reflect the mode the firmware will be set to.
    
    When switching virtual interface mode using
    mwifiex_init_new_priv_params() though, we currently only update bss_mode
    and bss_role. In order for the interface mode switch to actually work,
    we also need to update bss_type to its proper value, so do that.
    
    This fixes a crash of the firmware (because the driver tries to execute
    commands that are invalid in AP mode) when switching from station mode
    to AP mode.
    
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210914195909.36035-9-verdre@v0yd.nl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bab15174ec2fdaa8c886050f83cc3441407cc478
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Tue Sep 14 21:59:03 2021 +0200

    mwifiex: Run SET_BSS_MODE when changing from P2P to STATION vif-type
    
    [ Upstream commit c2e9666cdffd347460a2b17988db4cfaf2a68fb9 ]
    
    We currently handle changing from the P2P to the STATION virtual
    interface type slightly different than changing from P2P to ADHOC: When
    changing to STATION, we don't send the SET_BSS_MODE command. We do send
    that command on all other type-changes though, and it probably makes
    sense to send the command since after all we just changed our BSS_MODE.
    Looking at prior changes to this part of the code, it seems that this is
    simply a leftover from old refactorings.
    
    Since sending the SET_BSS_MODE command is the only difference between
    mwifiex_change_vif_to_sta_adhoc() and the current code, we can now use
    mwifiex_change_vif_to_sta_adhoc() for both switching to ADHOC and
    STATION interface type.
    
    This does not fix any particular bug and just "looked right", so there's
    a small chance it might be a regression.
    
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210914195909.36035-4-verdre@v0yd.nl
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ca1711d59f1a9ff6c7c68e5a690891082486f34
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Sep 15 16:19:46 2021 +0200

    x86: Increase exception stack sizes
    
    [ Upstream commit 7fae4c24a2b84a66c7be399727aca11e7a888462 ]
    
    It turns out that a single page of stack is trivial to overflow with
    all the tracing gunk enabled. Raise the exception stacks to 2 pages,
    which is still half the interrupt stacks, which are at 4 pages.
    
    Reported-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/YUIO9Ye98S5Eb68w@hirez.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c04dabbd1aa391adeaeb6c52e121435ff21ab00
Author: Seevalamuthu Mariappan <seevalam@codeaurora.org>
Date:   Wed Jul 21 00:49:22 2021 +0300

    ath11k: Align bss_chan_info structure with firmware
    
    [ Upstream commit feab5bb8f1d4621025dceae7eef62d5f92de34ac ]
    
    pdev_id in structure 'wmi_pdev_bss_chan_info_event' is wrongly placed
    at the beginning. This causes invalid values in survey dump. Hence, align
    the structure with the firmware.
    
    Note: The firmware releases follow this order since the feature was
    implemented. Also, it is not changing across the branches including
    QCA6390.
    
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.1.0.1-01228-QCAHKSWPL_SILICONZ-1
    
    Signed-off-by: Ritesh Singh <ritesi@codeaurora.org>
    Signed-off-by: Seevalamuthu Mariappan <seevalam@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210720214922.118078-3-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fac6feca95fd7e8029c72be874bd62796f2f9cb
Author: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
Date:   Sat Aug 28 23:41:40 2021 -0700

    smackfs: Fix use-after-free in netlbl_catmap_walk()
    
    [ Upstream commit 0817534ff9ea809fac1322c5c8c574be8483ea57 ]
    
    Syzkaller reported use-after-free bug as described in [1]. The bug is
    triggered when smk_set_cipso() tries to free stale category bitmaps
    while there are concurrent reader(s) using the same bitmaps.
    
    Wait for RCU grace period to finish before freeing the category bitmaps
    in smk_set_cipso(). This makes sure that there are no more readers using
    the stale bitmaps and freeing them should be safe.
    
    [1] https://lore.kernel.org/netdev/000000000000a814c505ca657a4e@google.com/
    
    Reported-by: syzbot+3f91de0b813cc3d19a80@syzkaller.appspotmail.com
    Signed-off-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02ddf26d849dd241e22a8713e15e243d851199cc
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Wed Aug 11 09:07:44 2021 -0700

    rcu-tasks: Move RTGS_WAIT_CBS to beginning of rcu_tasks_kthread() loop
    
    [ Upstream commit 0db7c32ad3160ae06f497d48a74bd46a2a35e6bf ]
    
    Early in debugging, it made some sense to differentiate the first
    iteration from subsequent iterations, but now this just causes confusion.
    This commit therefore moves the "set_tasks_gp_state(rtp, RTGS_WAIT_CBS)"
    statement to the beginning of the "for" loop in rcu_tasks_kthread().
    
    Reported-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d433ab5c8c26fa33ef9013b375a74d30918ac03
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Sep 13 15:53:30 2021 -0700

    net: sched: update default qdisc visibility after Tx queue cnt changes
    
    [ Upstream commit 1e080f17750d1083e8a32f7b350584ae1cd7ff20 ]
    
    mq / mqprio make the default child qdiscs visible. They only do
    so for the qdiscs which are within real_num_tx_queues when the
    device is registered. Depending on order of calls in the driver,
    or if user space changes config via ethtool -L the number of
    qdiscs visible under tc qdisc show will differ from the number
    of queues. This is confusing to users and potentially to system
    configuration scripts which try to make sure qdiscs have the
    right parameters.
    
    Add a new Qdisc_ops callback and make relevant qdiscs TTRT.
    
    Note that this uncovers the "shortcut" created by
    commit 1f27cde313d7 ("net: sched: use pfifo_fast for non real queues")
    The default child qdiscs beyond initial real_num_tx are always
    pfifo_fast, no matter what the sysfs setting is. Fixing this
    gets a little tricky because we'd need to keep a reference
    on whatever the default qdisc was at the time of creation.
    In practice this is likely an non-issue the qdiscs likely have
    to be configured to non-default settings, so whatever user space
    is doing such configuration can replace the pfifos... now that
    it will see them.
    
    Reported-by: Matthew Massey <matthewmassey@fb.com>
    Reviewed-by: Dave Taht <dave.taht@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28118dcc871e4b015c6537488374b1a4bbffb6d4
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jun 24 11:41:10 2021 +0200

    locking/lockdep: Avoid RCU-induced noinstr fail
    
    [ Upstream commit ce0b9c805dd66d5e49fd53ec5415ae398f4c56e6 ]
    
    vmlinux.o: warning: objtool: look_up_lock_class()+0xc7: call to rcu_read_lock_any_held() leaves .noinstr.text section
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lore.kernel.org/r/20210624095148.311980536@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b92a5df2c7adc79a57481445f67de0c1c716581f
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Tue Sep 14 23:20:59 2021 +0200

    MIPS: lantiq: dma: reset correct number of channel
    
    [ Upstream commit 5ca9ce2ba4d5884cd94d1a856c675ab1242cd242 ]
    
    Different SoCs have a different number of channels, e.g .:
    * amazon-se has 10 channels,
    * danube+ar9 have 20 channels,
    * vr9 has 28 channels,
    * ar10 has 24 channels.
    
    We can read the ID register and, depending on the reported
    number of channels, reset the appropriate number of channels.
    
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5af57ce8a6155fe3e4270d28d171abf8903bebc0
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Tue Sep 14 23:20:58 2021 +0200

    MIPS: lantiq: dma: add small delay after reset
    
    [ Upstream commit c12aa581f6d5e80c3c3675ab26a52c2b3b62f76e ]
    
    Reading the DMA registers immediately after the reset causes
    Data Bus Error. Adding a small delay fixes this issue.
    
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 396e302cc835975d42c7c88750e406ef2e01536e
Author: Barnabás Pőcze <pobrn@protonmail.com>
Date:   Sat Sep 4 17:56:26 2021 +0000

    platform/x86: wmi: do not fail if disabling fails
    
    [ Upstream commit 1975718c488a39128f1f515b23ae61a5a214cc3d ]
    
    Previously, `__query_block()` would fail if the
    second WCxx method call failed. However, the
    WQxx method might have succeeded, and potentially
    allocated memory for the result. Instead of
    throwing away the result and potentially
    leaking memory, ignore the result of
    the second WCxx call.
    
    Signed-off-by: Barnabás Pőcze <pobrn@protonmail.com>
    Link: https://lore.kernel.org/r/20210904175450.156801-25-pobrn@protonmail.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f43cda650d5ca7cac9ced26bb2f3f64643ddb9d
Author: Scott Wood <swood@redhat.com>
Date:   Fri Aug 20 09:42:36 2021 +0200

    rcutorture: Avoid problematic critical section nesting on PREEMPT_RT
    
    [ Upstream commit 71921a9606ddbcc1d98c00eca7ae82c373d1fecd ]
    
    rcutorture is generating some nesting scenarios that are not compatible on PREEMPT_RT.
    For example:
            preempt_disable();
            rcu_read_lock_bh();
            preempt_enable();
            rcu_read_unlock_bh();
    
    The problem here is that on PREEMPT_RT the bottom halves have to be
    disabled and enabled in preemptible context.
    
    Reorder locking: start with BH locking and continue with then with
    disabling preemption or interrupts. In the unlocking do it reverse by
    first enabling interrupts and preemption and BH at the very end.
    Ensure that on PREEMPT_RT BH locking remains unchanged if in
    non-preemptible context.
    
    Link: https://lkml.kernel.org/r/20190911165729.11178-6-swood@redhat.com
    Link: https://lkml.kernel.org/r/20210819182035.GF4126399@paulmck-ThinkPad-P17-Gen-1
    Signed-off-by: Scott Wood <swood@redhat.com>
    [bigeasy: Drop ATOM_BH, make it only about changing BH in atomic
    context. Allow enabling RCU in IRQ-off section. Reword commit message.]
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7987f31e54a2a453c54bdc516fe7a48035fddf03
Author: Simon Ser <contact@emersion.fr>
Date:   Sat Sep 11 10:24:40 2021 +0000

    drm/panel-orientation-quirks: add Valve Steam Deck
    
    [ Upstream commit 9eeb7b4e40bfd69d8aaa920c7e9df751c9e11dce ]
    
    Valve's Steam Deck has a 800x1280 LCD screen.
    
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Cc: Jared Baldridge <jrb@expunge.us>
    Cc: Emil Velikov <emil.l.velikov@gmail.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210911102430.253986-1-contact@emersion.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c10465f6d6208db2e45a6dac1db312b9589b2583
Author: Wang ShaoBo <bobo.shaobowang@huawei.com>
Date:   Tue Aug 31 17:35:37 2021 -0700

    Bluetooth: fix use-after-free error in lock_sock_nested()
    
    [ Upstream commit 1bff51ea59a9afb67d2dd78518ab0582a54a472c ]
    
    use-after-free error in lock_sock_nested is reported:
    
    [  179.140137][ T3731] =====================================================
    [  179.142675][ T3731] BUG: KMSAN: use-after-free in lock_sock_nested+0x280/0x2c0
    [  179.145494][ T3731] CPU: 4 PID: 3731 Comm: kworker/4:2 Not tainted 5.12.0-rc6+ #54
    [  179.148432][ T3731] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    [  179.151806][ T3731] Workqueue: events l2cap_chan_timeout
    [  179.152730][ T3731] Call Trace:
    [  179.153301][ T3731]  dump_stack+0x24c/0x2e0
    [  179.154063][ T3731]  kmsan_report+0xfb/0x1e0
    [  179.154855][ T3731]  __msan_warning+0x5c/0xa0
    [  179.155579][ T3731]  lock_sock_nested+0x280/0x2c0
    [  179.156436][ T3731]  ? kmsan_get_metadata+0x116/0x180
    [  179.157257][ T3731]  l2cap_sock_teardown_cb+0xb8/0x890
    [  179.158154][ T3731]  ? __msan_metadata_ptr_for_load_8+0x10/0x20
    [  179.159141][ T3731]  ? kmsan_get_metadata+0x116/0x180
    [  179.159994][ T3731]  ? kmsan_get_shadow_origin_ptr+0x84/0xb0
    [  179.160959][ T3731]  ? l2cap_sock_recv_cb+0x420/0x420
    [  179.161834][ T3731]  l2cap_chan_del+0x3e1/0x1d50
    [  179.162608][ T3731]  ? kmsan_get_metadata+0x116/0x180
    [  179.163435][ T3731]  ? kmsan_get_shadow_origin_ptr+0x84/0xb0
    [  179.164406][ T3731]  l2cap_chan_close+0xeea/0x1050
    [  179.165189][ T3731]  ? kmsan_internal_unpoison_shadow+0x42/0x70
    [  179.166180][ T3731]  l2cap_chan_timeout+0x1da/0x590
    [  179.167066][ T3731]  ? __msan_metadata_ptr_for_load_8+0x10/0x20
    [  179.168023][ T3731]  ? l2cap_chan_create+0x560/0x560
    [  179.168818][ T3731]  process_one_work+0x121d/0x1ff0
    [  179.169598][ T3731]  worker_thread+0x121b/0x2370
    [  179.170346][ T3731]  kthread+0x4ef/0x610
    [  179.171010][ T3731]  ? process_one_work+0x1ff0/0x1ff0
    [  179.171828][ T3731]  ? kthread_blkcg+0x110/0x110
    [  179.172587][ T3731]  ret_from_fork+0x1f/0x30
    [  179.173348][ T3731]
    [  179.173752][ T3731] Uninit was created at:
    [  179.174409][ T3731]  kmsan_internal_poison_shadow+0x5c/0xf0
    [  179.175373][ T3731]  kmsan_slab_free+0x76/0xc0
    [  179.176060][ T3731]  kfree+0x3a5/0x1180
    [  179.176664][ T3731]  __sk_destruct+0x8af/0xb80
    [  179.177375][ T3731]  __sk_free+0x812/0x8c0
    [  179.178032][ T3731]  sk_free+0x97/0x130
    [  179.178686][ T3731]  l2cap_sock_release+0x3d5/0x4d0
    [  179.179457][ T3731]  sock_close+0x150/0x450
    [  179.180117][ T3731]  __fput+0x6bd/0xf00
    [  179.180787][ T3731]  ____fput+0x37/0x40
    [  179.181481][ T3731]  task_work_run+0x140/0x280
    [  179.182219][ T3731]  do_exit+0xe51/0x3e60
    [  179.182930][ T3731]  do_group_exit+0x20e/0x450
    [  179.183656][ T3731]  get_signal+0x2dfb/0x38f0
    [  179.184344][ T3731]  arch_do_signal_or_restart+0xaa/0xe10
    [  179.185266][ T3731]  exit_to_user_mode_prepare+0x2d2/0x560
    [  179.186136][ T3731]  syscall_exit_to_user_mode+0x35/0x60
    [  179.186984][ T3731]  do_syscall_64+0xc5/0x140
    [  179.187681][ T3731]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  179.188604][ T3731] =====================================================
    
    In our case, there are two Thread A and B:
    
    Context: Thread A:              Context: Thread B:
    
    l2cap_chan_timeout()            __se_sys_shutdown()
      l2cap_chan_close()              l2cap_sock_shutdown()
        l2cap_chan_del()                l2cap_chan_close()
          l2cap_sock_teardown_cb()        l2cap_sock_teardown_cb()
    
    Once l2cap_sock_teardown_cb() excuted, this sock will be marked as SOCK_ZAPPED,
    and can be treated as killable in l2cap_sock_kill() if sock_orphan() has
    excuted, at this time we close sock through sock_close() which end to call
    l2cap_sock_kill() like Thread C:
    
    Context: Thread C:
    
    sock_close()
      l2cap_sock_release()
        sock_orphan()
        l2cap_sock_kill()  #free sock if refcnt is 1
    
    If C completed, Once A or B reaches l2cap_sock_teardown_cb() again,
    use-after-free happened.
    
    We should set chan->data to NULL if sock is destructed, for telling teardown
    operation is not allowed in l2cap_sock_teardown_cb(), and also we should
    avoid killing an already killed socket in l2cap_sock_close_cb().
    
    Signed-off-by: Wang ShaoBo <bobo.shaobowang@huawei.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4dfba42604f08a505f1a1efc69ec5207ea6243de
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Aug 28 18:18:18 2021 +0200

    Bluetooth: sco: Fix lock_sock() blockage by memcpy_from_msg()
    
    [ Upstream commit 99c23da0eed4fd20cae8243f2b51e10e66aa0951 ]
    
    The sco_send_frame() also takes lock_sock() during memcpy_from_msg()
    call that may be endlessly blocked by a task with userfaultd
    technique, and this will result in a hung task watchdog trigger.
    
    Just like the similar fix for hci_sock_sendmsg() in commit
    92c685dc5de0 ("Bluetooth: reorganize functions..."), this patch moves
    the  memcpy_from_msg() out of lock_sock() for addressing the hang.
    
    This should be the last piece for fixing CVE-2021-3640 after a few
    already queued fixes.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 509ae4a4f0745bff108723e5d9a61b1113ea89fe
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun May 30 13:04:27 2021 +0200

    drm: panel-orientation-quirks: Add quirk for the Samsung Galaxy Book 10.6
    
    [ Upstream commit 88fa1fde918951c175ae5ea0f31efc4bb1736ab9 ]
    
    The Samsung Galaxy Book 10.6 uses a panel which has been mounted
    90 degrees rotated. Add a quirk for this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Simon Ser <contact@emersion.fr>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210530110428.12994-4-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62b90d7eeb6deb0124dcfe1b12f41c1524d26352
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun May 30 13:04:26 2021 +0200

    drm: panel-orientation-quirks: Add quirk for KD Kurio Smart C15200 2-in-1
    
    [ Upstream commit a53f1dd3ab9fec715c6c2e8e01bf4d3c07eef8e5 ]
    
    The KD Kurio Smart C15200 2-in-1 uses  a panel which has been mounted 90
    degrees rotated. Add a quirk for this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Simon Ser <contact@emersion.fr>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210530110428.12994-3-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 780fff2c75f096f3bc46855b105b83b4cec5cba7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun May 30 13:04:25 2021 +0200

    drm: panel-orientation-quirks: Update the Lenovo Ideapad D330 quirk (v2)
    
    [ Upstream commit 820a2ab23d5eab4ccfb82581eda8ad4acf18458f ]
    
    2 improvements to the Lenovo Ideapad D330 panel-orientation quirks:
    
    1. Some versions of the Lenovo Ideapad D330 have a DMI_PRODUCT_NAME of
    "81H3" and others have "81MD". Testing has shown that the "81MD" also has
    a 90 degree mounted panel. Drop the DMI_PRODUCT_NAME from the existing
    quirk so that the existing quirk matches both variants.
    
    2. Some of the Lenovo Ideapad D330 models have a HD (800x1280) screen
    instead of a FHD (1200x1920) screen (both are mounted right-side-up) add
    a second Lenovo Ideapad D330 quirk for the HD version.
    
    Changes in v2:
    - Add a new quirk for Lenovo Ideapad D330 models with a HD screen instead
      of a FHD screen
    
    Link: https://github.com/systemd/systemd/pull/18884
    Acked-by: Simon Ser <contact@emersion.fr>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210530110428.12994-2-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6758d6651627323ec95d5e4cccf31f4760dcfba1
Author: Charan Teja Reddy <charante@codeaurora.org>
Date:   Fri Jul 23 18:01:08 2021 +0530

    dma-buf: WARN on dmabuf release with pending attachments
    
    [ Upstream commit f492283b157053e9555787262f058ae33096f568 ]
    
    It is expected from the clients to follow the below steps on an imported
    dmabuf fd:
    a) dmabuf = dma_buf_get(fd) // Get the dmabuf from fd
    b) dma_buf_attach(dmabuf); // Clients attach to the dmabuf
       o Here the kernel does some slab allocations, say for
    dma_buf_attachment and may be some other slab allocation in the
    dmabuf->ops->attach().
    c) Client may need to do dma_buf_map_attachment().
    d) Accordingly dma_buf_unmap_attachment() should be called.
    e) dma_buf_detach () // Clients detach to the dmabuf.
       o Here the slab allocations made in b) are freed.
    f) dma_buf_put(dmabuf) // Can free the dmabuf if it is the last
    reference.
    
    Now say an erroneous client failed at step c) above thus it directly
    called dma_buf_put(), step f) above. Considering that it may be the last
    reference to the dmabuf, buffer will be freed with pending attachments
    left to the dmabuf which can show up as the 'memory leak'. This should
    at least be reported as the WARN().
    
    Signed-off-by: Charan Teja Reddy <charante@codeaurora.org>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627043468-16381-1-git-send-email-charante@codeaurora.org
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 890e4edcecfa2380ec8507a260f4c8eb7da218b9
Author: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date:   Tue Sep 14 14:18:05 2021 +0200

    power: supply: max17042_battery: Clear status bits in interrupt handler
    
    commit 0cf48167b87e388fa1268c9fe6d2443ae7f43d8a upstream.
    
    The gauge requires us to clear the status bits manually for some alerts
    to be properly dismissed. Previously the IRQ was configured to react only
    on falling edge, which wasn't technically correct (the ALRT line is active
    low), but it had a happy side-effect of preventing interrupt storms
    on uncleared alerts from happening.
    
    Fixes: 7fbf6b731bca ("power: supply: max17042: Do not enforce (incorrect) interrupt trigger type")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 898622adb7e9232b01482a24146b6c3492e3a919
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Oct 21 10:34:47 2021 +0200

    USB: chipidea: fix interrupt deadlock
    
    commit 9aaa81c3366e8393a62374e3a1c67c69edc07b8a upstream.
    
    Chipidea core was calling the interrupt handler from non-IRQ context
    with interrupts enabled, something which can lead to a deadlock if
    there's an actual interrupt trying to take a lock that's already held
    (e.g. the controller lock in udc_irq()).
    
    Add a wrapper that can be used to fake interrupts instead of calling the
    handler directly.
    
    Fixes: 3ecb3e09b042 ("usb: chipidea: Use extcon framework for VBUS and ID detect")
    Fixes: 876d4e1e8298 ("usb: chipidea: core: add wakeup support for extcon")
    Cc: Peter Chen <peter.chen@kernel.org>
    Cc: stable@vger.kernel.org      # 4.4
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211021083447.20078-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6edf4cffe1b46e2b1f07659132224706d01cf6de
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:51:59 2021 +0200

    USB: iowarrior: fix control-message timeouts
    
    commit 79a4479a17b83310deb0b1a2a274fe5be12d2318 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Use the common control-message timeout define for the five-second
    timeout and drop the driver-specific one.
    
    Fixes: 946b960d13c1 ("USB: add driver for iowarrior devices.")
    Cc: stable@vger.kernel.org      # 2.6.21
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025115159.4954-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e71591e916ba1c2d183c72c8eda7a2be990b599
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:58:11 2021 +0200

    most: fix control-message timeouts
    
    commit 63b3e810eff65fb8587fcb26fa0b56802be12dcf upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Use the common control-message timeout defines for the five-second
    timeouts.
    
    Fixes: 97a6f772f36b ("drivers: most: add USB adapter driver")
    Cc: stable@vger.kernel.org      # 5.9
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025115811.5410-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edc546625456da4cc1968086b5a76143fbb0c75d
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Oct 15 13:14:20 2021 +0200

    serial: 8250: fix racy uartclk update
    
    commit 211cde4f5817dc88ef7f8f2fa286e57fbf14c8ee upstream.
    
    Commit 868f3ee6e452 ("serial: 8250: Add 8250 port clock update method")
    added a hack to support SoCs where the UART reference clock can
    change behind the back of the driver but failed to add the proper
    locking.
    
    First, make sure to take a reference to the tty struct to avoid
    dereferencing a NULL pointer if the clock change races with a hangup.
    
    Second, the termios semaphore must be held during the update to prevent
    a racing termios change.
    
    Fixes: 868f3ee6e452 ("serial: 8250: Add 8250 port clock update method")
    Fixes: c8dff3aa8241 ("serial: 8250: Skip uninitialized TTY port baud rate update")
    Cc: stable@vger.kernel.org      # 5.9
    Cc: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Tested-by: Serge Semin <fancer.lancer@gmail.com>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211015111422.1027-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f31af4e78b4d8f006bb7049138fbc7c9141ac7a
Author: Wang Hai <wanghai38@huawei.com>
Date:   Fri Oct 15 16:55:43 2021 +0800

    USB: serial: keyspan: fix memleak on probe errors
    
    commit 910c996335c37552ee30fcb837375b808bb4f33b upstream.
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff888258228440 (size 64):
      comm "kworker/7:2", pid 2005, jiffies 4294989509 (age 824.540s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff8167939c>] slab_post_alloc_hook+0x9c/0x490
        [<ffffffff8167f627>] kmem_cache_alloc_trace+0x1f7/0x470
        [<ffffffffa02ac0e4>] keyspan_port_probe+0xa4/0x5d0 [keyspan]
        [<ffffffffa0294c07>] usb_serial_device_probe+0x97/0x1d0 [usbserial]
        [<ffffffff82b50ca7>] really_probe+0x167/0x460
        [<ffffffff82b51099>] __driver_probe_device+0xf9/0x180
        [<ffffffff82b51173>] driver_probe_device+0x53/0x130
        [<ffffffff82b516f5>] __device_attach_driver+0x105/0x130
        [<ffffffff82b4cfe9>] bus_for_each_drv+0x129/0x190
        [<ffffffff82b50a69>] __device_attach+0x1c9/0x270
        [<ffffffff82b518d0>] device_initial_probe+0x20/0x30
        [<ffffffff82b4f062>] bus_probe_device+0x142/0x160
        [<ffffffff82b4a4e9>] device_add+0x829/0x1300
        [<ffffffffa0295fda>] usb_serial_probe.cold+0xc9b/0x14ac [usbserial]
        [<ffffffffa02266aa>] usb_probe_interface+0x1aa/0x3c0 [usbcore]
        [<ffffffff82b50ca7>] really_probe+0x167/0x460
    
    If keyspan_port_probe() fails to allocate memory for an out_buffer[i] or
    in_buffer[i], the previously allocated memory for out_buffer or
    in_buffer needs to be freed on the error handling path, otherwise a
    memory leak will result.
    
    Fixes: bad41a5bf177 ("USB: keyspan: fix port DMA-buffer allocations")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Link: https://lore.kernel.org/r/20211015085543.1203011-1-wanghai38@huawei.com
    Cc: stable@vger.kernel.org      # 3.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab4755ea9114760abd146751f4407af85c29c72c
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Wed Aug 18 10:05:25 2021 +0200

    iio: ad5770r: make devicetree property reading consistent
    
    commit 26df977a909f818b7d346b3990735513e7e0bf93 upstream.
    
    The bindings file for this driver is defining the property as 'reg' but
    the driver was reading it with the 'num' name. The bindings actually had
    the 'num' property when added in
    commit ea52c21268e6 ("dt-bindings: iio: dac: Add docs for AD5770R DAC")
    and then changed it to 'reg' in
    commit 2cf3818f18b2 ("dt-bindings: iio: dac: AD5570R fix bindings errors").
    However, both these commits landed in v5.7 so the assumption is
    that either 'num' is not being used or if it is, the validations were not
    done.
    
    Anyways, if someone comes back yelling about this, we might just support
    both of the properties in the future. Not ideal, but that's life...
    
    Fixes: 2cf3818f18b2 ("dt-bindings: iio: dac: AD5570R fix bindings errors")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20210818080525.62790-1-nuno.sa@analog.com
    Cc: Stable@vger.kernel.org
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 638462060859244823a572bd0e35e3a45d2978d5
Author: Pekka Korpinen <pekka.korpinen@iki.fi>
Date:   Wed Sep 29 21:57:55 2021 +0300

    iio: dac: ad5446: Fix ad5622_write() return value
    
    commit 558df982d4ead9cac628153d0d7b60feae05ddc8 upstream.
    
    On success i2c_master_send() returns the number of bytes written. The
    call from iio_write_channel_info(), however, expects the return value to
    be zero on success.
    
    This bug causes incorrect consumption of the sysfs buffer in
    iio_write_channel_info(). When writing more than two characters to
    out_voltage0_raw, the ad5446 write handler is called multiple times
    causing unexpected behavior.
    
    Fixes: 3ec36a2cf0d5 ("iio:ad5446: Add support for I2C based DACs")
    Signed-off-by: Pekka Korpinen <pekka.korpinen@iki.fi>
    Link: https://lore.kernel.org/r/20210929185755.2384-1-pekka.korpinen@iki.fi
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4e7a8c4321faa4e64868f4d79a29fa0f1c805d7
Author: Tao Zhang <quic_taozha@quicinc.com>
Date:   Thu Aug 19 17:29:37 2021 +0800

    coresight: cti: Correct the parameter for pm_runtime_put
    
    commit 692c9a499b286ea478f41b23a91fe3873b9e1326 upstream.
    
    The input parameter of the function pm_runtime_put should be the
    same in the function cti_enable_hw and cti_disable_hw. The correct
    parameter to use here should be dev->parent.
    
    Signed-off-by: Tao Zhang <quic_taozha@quicinc.com>
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Fixes: 835d722ba10a ("coresight: cti: Initial CoreSight CTI Driver")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1629365377-5937-1-git-send-email-quic_taozha@quicinc.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46709163a54aa02e314aa8e1db41a3053763af17
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Oct 22 09:43:23 2021 +0800

    pinctrl: core: fix possible memory leak in pinctrl_enable()
    
    commit c7892ae13e461ed20154321eb792e07ebe38f5b3 upstream.
    
    I got memory leak as follows when doing fault injection test:
    
    unreferenced object 0xffff888020a7a680 (size 64):
      comm "i2c-mcp23018-41", pid 23090, jiffies 4295160544 (age 8.680s)
      hex dump (first 32 bytes):
        00 48 d3 1e 80 88 ff ff 00 1a 56 c1 ff ff ff ff  .H........V.....
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<0000000083c79b35>] kmem_cache_alloc_trace+0x16d/0x360
        [<0000000051803c95>] pinctrl_init_controller+0x6ed/0xb70
        [<0000000064346707>] pinctrl_register+0x27/0x80
        [<0000000029b0e186>] devm_pinctrl_register+0x5b/0xe0
        [<00000000391f5a3e>] mcp23s08_probe_one+0x968/0x118a [pinctrl_mcp23s08]
        [<000000006112c039>] mcp230xx_probe+0x266/0x560 [pinctrl_mcp23s08_i2c]
    
    If pinctrl_claim_hogs() fails, the 'pindesc' allocated in pinctrl_register_one_pin()
    need be freed.
    
    Cc: stable@vger.kernel.org
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 950b0d91dc10 ("pinctrl: core: Fix regression caused by delayed work for hogs")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211022014323.1156924-1-yangyingliang@huawei.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bc8317b8cd5b2f8860f0923bab8085a6b4cb318
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Oct 8 17:38:21 2021 +0800

    quota: correct error number in free_dqentry()
    
    commit d0e36a62bd4c60c09acc40e06ba4831a4d0bc75b upstream.
    
    Fix the error path in free_dqentry(), pass out the error number if the
    block to free is not correct.
    
    Fixes: 1ccd14b9c271 ("quota: Split off quota tree handling into a separate file")
    Link: https://lore.kernel.org/r/20211008093821.1001186-3-yi.zhang@huawei.com
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Cc: stable@kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ceeb0a8a8716a1c72af3fa4d4f98c3aced32b037
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Oct 8 17:38:20 2021 +0800

    quota: check block number when reading the block in quota file
    
    commit 9bf3d20331295b1ecb81f4ed9ef358c51699a050 upstream.
    
    The block number in the quota tree on disk should be smaller than the
    v2_disk_dqinfo.dqi_blocks. If the quota file was corrupted, we may be
    allocating an 'allocated' block and that would lead to a loop in a tree,
    which will probably trigger oops later. This patch adds a check for the
    block number in the quota tree to prevent such potential issue.
    
    Link: https://lore.kernel.org/r/20211008093821.1001186-2-yi.zhang@huawei.com
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Cc: stable@kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc1274df3ff418f46ffe98e452f6ff149951f53c
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Oct 28 20:56:59 2021 +0200

    PCI: aardvark: Fix support for PCI_ROM_ADDRESS1 on emulated bridge
    
    commit 239edf686c14a9ff926dec2f350289ed7adfefe2 upstream.
    
    This register is exported at address offset 0x30.
    
    Link: https://lore.kernel.org/r/20211028185659.20329-8-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2e8961fbc3aaf164ed4bff922e327de11ba312e
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Oct 28 20:56:57 2021 +0200

    PCI: aardvark: Set PCI Bridge Class Code to PCI Bridge
    
    commit 84e1b4045dc887b78bdc87d92927093dc3a465aa upstream.
    
    Aardvark controller has something like config space of a Root Port
    available at offset 0x0 of internal registers - these registers are used
    for implementation of the emulated bridge.
    
    The default value of Class Code of this bridge corresponds to a RAID Mass
    storage controller, though. (This is probably intended for when the
    controller is used as Endpoint.)
    
    Change the Class Code to correspond to a PCI Bridge.
    
    Add comment explaining this change.
    
    Link: https://lore.kernel.org/r/20211028185659.20329-6-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd5d982822cf2b14c2d6aff5a43a5f667c56c758
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Oct 28 20:56:58 2021 +0200

    PCI: aardvark: Fix support for PCI_BRIDGE_CTL_BUS_RESET on emulated bridge
    
    commit bc4fac42e5f8460af09c0a7f2f1915be09e20c71 upstream.
    
    Aardvark supports PCIe Hot Reset via PCIE_CORE_CTRL1_REG.
    
    Use it for implementing PCI_BRIDGE_CTL_BUS_RESET bit of PCI_BRIDGE_CONTROL
    register on emulated bridge.
    
    With this, the function pci_reset_secondary_bus() starts working and can
    reset connected PCIe card. Custom userspace script [1] which uses setpci
    can trigger PCIe Hot Reset and reset the card manually.
    
    [1] https://alexforencich.com/wiki/en/pcie/hot-reset-linux
    
    Link: https://lore.kernel.org/r/20211028185659.20329-7-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b99c6fb65b43804d7db5c2eab9d46db8909d83c
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Oct 28 20:56:56 2021 +0200

    PCI: aardvark: Fix support for bus mastering and PCI_COMMAND on emulated bridge
    
    commit 771153fc884f566a89af2d30033b7f3bc6e24e84 upstream.
    
    From very vague, ambiguous and incomplete information from Marvell we
    deduced that the 32-bit Aardvark register at address 0x4
    (PCIE_CORE_CMD_STATUS_REG), which is not documented for Root Complex mode
    in the Functional Specification (only for Endpoint mode), controls two
    16-bit PCIe registers: Command Register and Status Registers of PCIe Root
    Port.
    
    This means that bit 2 controls bus mastering and forwarding of memory and
    I/O requests in the upstream direction. According to PCI specifications
    bits [0:2] of Command Register, this should be by default disabled on
    reset. So explicitly disable these bits at early setup of the Aardvark
    driver.
    
    Remove code which unconditionally enables all 3 bits and let kernel code
    (via pci_set_master() function) to handle bus mastering of Root PCIe
    Bridge via emulated PCI_COMMAND on emulated bridge.
    
    Link: https://lore.kernel.org/r/20211028185659.20329-5-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org # b2a56469d550 ("PCI: aardvark: Add FIXME comment for PCIE_CORE_CMD_STATUS_REG access")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bb5399c1c73e36fbb186f3eda84e39e5422ed31
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Oct 28 20:56:55 2021 +0200

    PCI: aardvark: Read all 16-bits from PCIE_MSI_PAYLOAD_REG
    
    commit 95997723b6402cd6c53e0f9e7ac640ec64eaaff8 upstream.
    
    The PCIE_MSI_PAYLOAD_REG contains 16-bit MSI number, not only lower
    8 bits. Fix reading content of this register and add a comment
    describing the access to this register.
    
    Link: https://lore.kernel.org/r/20211028185659.20329-4-kabel@kernel.org
    Fixes: 8c39d710363c ("PCI: aardvark: Add Aardvark PCI host controller driver")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ad10bbf8477d54f61c2d977da12a11091e7610a
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Oct 28 20:56:54 2021 +0200

    PCI: aardvark: Fix return value of MSI domain .alloc() method
    
    commit e4313be1599d397625c14fb7826996813622decf upstream.
    
    MSI domain callback .alloc() (implemented by advk_msi_irq_domain_alloc()
    function) should return zero on success, since non-zero value indicates
    failure.
    
    When the driver was converted to generic MSI API in commit f21a8b1b6837
    ("PCI: aardvark: Move to MSI handling using generic MSI support"), it
    was converted so that it returns hwirq number.
    
    Fix this.
    
    Link: https://lore.kernel.org/r/20211028185659.20329-3-kabel@kernel.org
    Fixes: f21a8b1b6837 ("PCI: aardvark: Move to MSI handling using generic MSI support")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a0da19be5eb819311ac9d54e42ed7b6c78cf6db
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:44 2021 +0200

    PCI: aardvark: Fix configuring Reference clock
    
    commit 46ef6090dbf590711cb12680b6eafde5fa21fe87 upstream.
    
    Commit 366697018c9a ("PCI: aardvark: Add PHY support") introduced
    configuration of PCIe Reference clock via PCIE_CORE_REF_CLK_REG register,
    but did it incorrectly.
    
    PCIe Reference clock differential pair is routed from system board to
    endpoint card, so on CPU side it has output direction. Therefore it is
    required to enable transmitting and disable receiving.
    
    Default configuration according to Armada 3700 Functional Specifications is
    enabled receiver part and disabled transmitter.
    
    We need this change because otherwise PCIe Reference clock is configured to
    some undefined state when differential pair is used for both transmitting
    and receiving.
    
    Fix this by disabling receiver part.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-6-kabel@kernel.org
    Fixes: 366697018c9a ("PCI: aardvark: Add PHY support")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fb031fcd423bde73dccd3d752ca1f76fb23b503
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:52 2021 +0200

    PCI: aardvark: Fix reporting Data Link Layer Link Active
    
    commit 2b650b7ff20eb7ea8ef9031d20fb657286ab90cc upstream.
    
    Add support for reporting PCI_EXP_LNKSTA_DLLLA bit in Link Control register
    on emulated bridge via current LTSSM state. Also correctly indicate DLLLA
    capability via PCI_EXP_LNKCAP_DLLLARC bit in Link Control Capability
    register.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-14-kabel@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b861523d7ceb88bf1ee36a0ab523f3d7ca03ca7
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:46 2021 +0200

    PCI: aardvark: Do not unmask unused interrupts
    
    commit 1fb95d7d3c7a926b002fe8a6bd27a1cb428b46dc upstream.
    
    There are lot of undocumented interrupt bits. To prevent unwanted
    spurious interrupts, fix all *_ALL_MASK macros to define all interrupt
    bits, so that driver can properly mask all interrupts, including those
    which are undocumented.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-8-kabel@kernel.org
    Fixes: 8c39d710363c ("PCI: aardvark: Add Aardvark PCI host controller driver")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1085ee5236ef46836690a29a6e6749e61f904105
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:51 2021 +0200

    PCI: aardvark: Fix checking for link up via LTSSM state
    
    commit 661c399a651c11aaf83c45cbfe0b4a1fb7bc3179 upstream.
    
    Current implementation of advk_pcie_link_up() is wrong as it marks also
    link disabled or hot reset states as link up.
    
    Fix it by marking link up only to those states which are defined in PCIe
    Base specification 3.0, Table 4-14: Link Status Mapped to the LTSSM.
    
    To simplify implementation, Define macros for every LTSSM state which
    aardvark hardware can return in CFG_REG register.
    
    Fix also checking for link training according to the same Table 4-14.
    Define a new function advk_pcie_link_training() for this purpose.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-13-kabel@kernel.org
    Fixes: 8c39d710363c ("PCI: aardvark: Add Aardvark PCI host controller driver")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org
    Cc: Remi Pommarel <repk@triplefau.lt>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bcbace714bb82721a38955b358afd476c800c3b
Author: Pali Rohár <pali@kernel.org>
Date:   Tue Oct 5 20:09:45 2021 +0200

    PCI: aardvark: Do not clear status bits of masked interrupts
    
    commit a7ca6d7fa3c02c032db5440ff392d96c04684c21 upstream.
    
    The PCIE_ISR1_REG says which interrupts are currently set / active,
    including those which are masked.
    
    The driver currently reads this register and looks if some unmasked
    interrupts are active, and if not, it clears status bits of _all_
    interrupts, including the masked ones.
    
    This is incorrect, since, for example, some drivers may poll these bits.
    
    Remove this clearing, and also remove this early return statement
    completely, since it does not change functionality in any way.
    
    Link: https://lore.kernel.org/r/20211005180952.6812-7-kabel@kernel.org
    Fixes: 8c39d710363c ("PCI: aardvark: Add Aardvark PCI host controller driver")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1a8fb237470f1579fe4504389f4b3cf2e4015e8
Author: Li Chen <lchen@ambarella.com>
Date:   Thu Oct 21 02:50:19 2021 +0000

    PCI: cadence: Add cdns_plat_pcie_probe() missing return
    
    commit 27cd7e3c9bb1ae13bc16f08138edd6e4df3cd211 upstream.
    
    When cdns_plat_pcie_probe() succeeds, return success instead of falling
    into the error handling code.
    
    Fixes: bd22885aa188 ("PCI: cadence: Refactor driver to use as a core library")
    Link: https://lore.kernel.org/r/DM6PR19MB40271B93057D949310F0B0EDA0BF9@DM6PR19MB4027.namprd19.prod.outlook.com
    Signed-off-by: Xuliang Zhang <xlzhanga@ambarella.com>
    Signed-off-by: Li Chen <lchen@ambarella.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adcfc317d3f5d14d02881211f409c32f6f845fd2
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Oct 28 20:56:53 2021 +0200

    PCI: pci-bridge-emul: Fix emulation of W1C bits
    
    commit 7a41ae80bdcb17e14dd7d83239b8a0cf368f18be upstream.
    
    The pci_bridge_emul_conf_write() function correctly clears W1C bits in
    cfgspace cache, but it does not inform the underlying implementation
    about the clear request: the .write_op() method is given the value with
    these bits cleared.
    
    This is wrong if the .write_op() needs to know which bits were requested
    to be cleared.
    
    Fix the value to be passed into the .write_op() method to have requested
    W1C bits set, so that it can clear them.
    
    Both pci-bridge-emul users (mvebu and aardvark) are compatible with this
    change.
    
    Link: https://lore.kernel.org/r/20211028185659.20329-2-kabel@kernel.org
    Fixes: 23a5fba4d941 ("PCI: Introduce PCI bridge emulated config space common logic")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fd9f0509a1452b45e89c668e2bab854cb05cd25
Author: yangerkun <yangerkun@huawei.com>
Date:   Thu Sep 30 11:22:28 2021 +0800

    ovl: fix use after free in struct ovl_aio_req
    
    commit 9a254403760041528bc8f69fe2f5e1ef86950991 upstream.
    
    Example for triggering use after free in a overlay on ext4 setup:
    
    aio_read
      ovl_read_iter
        vfs_iter_read
          ext4_file_read_iter
            ext4_dio_read_iter
              iomap_dio_rw -> -EIOCBQUEUED
              /*
               * Here IO is completed in a separate thread,
               * ovl_aio_cleanup_handler() frees aio_req which has iocb embedded
               */
              file_accessed(iocb->ki_filp); /**BOOM**/
    
    Fix by introducing a refcount in ovl_aio_req similarly to aio_kiocb.  This
    guarantees that iocb is only freed after vfs_read/write_iter() returns on
    underlying fs.
    
    Fixes: 2406a307ac7d ("ovl: implement async IO routines")
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Link: https://lore.kernel.org/r/20210930032228.3199690-3-yangerkun@huawei.com/
    Cc: <stable@vger.kernel.org> # v5.6
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af7d25d7853c286126e660e59cfa52c026334881
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Nov 2 10:19:44 2021 +0100

    xen/balloon: add late_initcall_sync() for initial ballooning done
    
    commit 40fdea0284bb20814399da0484a658a96c735d90 upstream.
    
    When running as PVH or HVM guest with actual memory < max memory the
    hypervisor is using "populate on demand" in order to allow the guest
    to balloon down from its maximum memory size. For this to work
    correctly the guest must not touch more memory pages than its target
    memory size as otherwise the PoD cache will be exhausted and the guest
    is crashed as a result of that.
    
    In extreme cases ballooning down might not be finished today before
    the init process is started, which can consume lots of memory.
    
    In order to avoid random boot crashes in such cases, add a late init
    call to wait for ballooning down having finished for PVH/HVM guests.
    
    Warn on console if initial ballooning fails, panic() after stalling
    for more than 3 minutes per default. Add a module parameter for
    changing this timeout.
    
    [boris: replaced pr_info() with pr_notice()]
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/20211102091944.17487-1-jgross@suse.com
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96e7880a432a429994f3389ecf90587a4a130a13
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Sun Oct 24 17:03:15 2021 +0300

    ALSA: mixer: fix deadlock in snd_mixer_oss_set_volume
    
    commit 3ab7992018455ac63c33e9b3eaa7264e293e40f4 upstream.
    
    In commit 411cef6adfb3 ("ALSA: mixer: oss: Fix racy access to slots")
    added mutex protection in snd_mixer_oss_set_volume(). Second
    mutex_lock() in same function looks like typo, fix it.
    
    Reported-by: syzbot+ace149a75a9a0a399ac7@syzkaller.appspotmail.com
    Fixes: 411cef6adfb3 ("ALSA: mixer: oss: Fix racy access to slots")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: https://lore.kernel.org/r/20211024140315.16704-1-paskripkin@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 694c0c84a6ec3cdb143c2fcf037b880b07c2f798
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 20 18:48:46 2021 +0200

    ALSA: mixer: oss: Fix racy access to slots
    
    commit 411cef6adfb38a5bb6bd9af3941b28198e7fb680 upstream.
    
    The OSS mixer can reassign the mapping slots dynamically via proc
    file.  Although the addition and deletion of those slots are protected
    by mixer->reg_mutex, the access to slots aren't, hence this may cause
    UAF when the slots in use are deleted concurrently.
    
    This patch applies the mixer->reg_mutex in all appropriate code paths
    (i.e. the ioctl functions) that may access slots.
    
    Reported-by: syzbot+9988f17cf72a1045a189@syzkaller.appspotmail.com
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/00000000000036adc005ceca9175@google.com
    Link: https://lore.kernel.org/r/20211020164846.922-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd0b29a89bc29b9b3728185382ea14ee6225af3f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Oct 29 13:30:51 2021 +0200

    ifb: fix building without CONFIG_NET_CLS_ACT
    
    commit 7444d706be31753f65052c7f6325fc8470cc1789 upstream.
    
    The driver no longer depends on this option, but it fails to
    build if it's disabled because the skb->tc_skip_classify is
    hidden behind an #ifdef:
    
    drivers/net/ifb.c:81:8: error: no member named 'tc_skip_classify' in 'struct sk_buff'
                    skb->tc_skip_classify = 1;
    
    Use the same #ifdef around the assignment.
    
    Fixes: 046178e726c2 ("ifb: Depend on netfilter alternatively to tc")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47462c5e600fbaffd755cd13dedd80d04e41ff83
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Oct 2 15:09:00 2021 +0200

    serial: core: Fix initializing and restoring termios speed
    
    commit 027b57170bf8bb6999a28e4a5f3d78bf1db0f90c upstream.
    
    Since commit edc6afc54968 ("tty: switch to ktermios and new framework")
    termios speed is no longer stored only in c_cflag member but also in new
    additional c_ispeed and c_ospeed members. If BOTHER flag is set in c_cflag
    then termios speed is stored only in these new members.
    
    Therefore to correctly restore termios speed it is required to store also
    ispeed and ospeed members, not only cflag member.
    
    In case only cflag member with BOTHER flag is restored then functions
    tty_termios_baud_rate() and tty_termios_input_baud_rate() returns baudrate
    stored in c_ospeed / c_ispeed member, which is zero as it was not restored
    too. If reported baudrate is invalid (e.g. zero) then serial core functions
    report fallback baudrate value 9600. So it means that in this case original
    baudrate is lost and kernel changes it to value 9600.
    
    Simple reproducer of this issue is to boot kernel with following command
    line argument: "console=ttyXXX,86400" (where ttyXXX is the device name).
    For speed 86400 there is no Bnnn constant and therefore kernel has to
    represent this speed via BOTHER c_cflag. Which means that speed is stored
    only in c_ospeed and c_ispeed members, not in c_cflag anymore.
    
    If bootloader correctly configures serial device to speed 86400 then kernel
    prints boot log to early console at speed speed 86400 without any issue.
    But after kernel starts initializing real console device ttyXXX then speed
    is changed to fallback value 9600 because information about speed was lost.
    
    This patch fixes above issue by storing and restoring also ispeed and
    ospeed members, which are required for BOTHER flag.
    
    Fixes: edc6afc54968 ("[PATCH] tty: switch to ktermios and new framework")
    Cc: stable@vger.kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20211002130900.9518-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1e6e42740cb3904d80abd2e0c623c7736ed57d9
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Mon Nov 8 10:58:10 2021 -0500

    ring-buffer: Protect ring_buffer_reset() from reentrancy
    
    commit 51d157946666382e779f94c39891e8e9a020da78 upstream.
    
    The resetting of the entire ring buffer use to simply go through and reset
    each individual CPU buffer that had its own protection and synchronization.
    But this was very slow, due to performing a synchronization for each CPU.
    The code was reshuffled to do one disabling of all CPU buffers, followed
    by a single RCU synchronization, and then the resetting of each of the CPU
    buffers. But unfortunately, the mutex that prevented multiple occurrences
    of resetting the buffer was not moved to the upper function, and there is
    nothing to protect from it.
    
    Take the ring buffer mutex around the global reset.
    
    Cc: stable@vger.kernel.org
    Fixes: b23d7a5f4a07a ("ring-buffer: speed up buffer resets by avoiding synchronize_rcu for each CPU")
    Reported-by: "Tzvetomir Stoyanov (VMware)" <tz.stoyanov@gmail.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93fccb1f8939ef5328a674a2301286a0d0a77bfa
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Wed Sep 29 11:36:45 2021 +0800

    powerpc/85xx: Fix oops when mpc85xx_smp_guts_ids node cannot be found
    
    commit 3c2172c1c47b4079c29f0e6637d764a99355ebcd upstream.
    
    When the field described in mpc85xx_smp_guts_ids[] is not configured in
    dtb, the mpc85xx_setup_pmc() does not assign a value to the "guts"
    variable. As a result, the oops is triggered when
    mpc85xx_freeze_time_base() is executed.
    
    Fixes: 56f1ba280719 ("powerpc/mpc85xx: refactor the PM operations")
    Cc: stable@vger.kernel.org # v4.6+
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210929033646.39630-2-nixiaoming@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 875609ad8020a818ec25244fa0915e04e2cf4bf5
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Oct 28 22:38:26 2021 +0800

    can: j1939: j1939_can_recv(): ignore messages with invalid source address
    
    commit a79305e156db3d24fcd8eb649cdb3c3b2350e5c2 upstream.
    
    According to SAE-J1939-82 2015 (A.3.6 Row 2), a receiver should never
    send TP.CM_CTS to the global address, so we can add a check in
    j1939_can_recv() to drop messages with invalid source address.
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Link: https://lore.kernel.org/all/1635431907-15617-3-git-send-email-zhangchangzhong@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3cb7b5c9d140b1a678b74ba8d2544e1eb66e2fc
Author: Zhang Changzhong <zhangchangzhong@huawei.com>
Date:   Thu Oct 28 22:38:25 2021 +0800

    can: j1939: j1939_tp_cmd_recv(): ignore abort message in the BAM transport
    
    commit c0f49d98006f2db3333b917caac65bce2af9865c upstream.
    
    This patch prevents BAM transport from being closed by receiving abort
    message, as specified in SAE-J1939-82 2015 (A.3.3 Row 4).
    
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Link: https://lore.kernel.org/all/1635431907-15617-2-git-send-email-zhangchangzhong@huawei.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Zhang Changzhong <zhangchangzhong@huawei.com>
    Acked-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f9d6d391ff5f8a3a4f6a0547fe8ed78dc4d8f15
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Nov 9 01:30:44 2021 +0000

    KVM: nVMX: Query current VMCS when determining if MSR bitmaps are in use
    
    commit 7dfbc624eb5726367900c8d86deff50836240361 upstream.
    
    Check the current VMCS controls to determine if an MSR write will be
    intercepted due to MSR bitmaps being disabled.  In the nested VMX case,
    KVM will disable MSR bitmaps in vmcs02 if they're disabled in vmcs12 or
    if KVM can't map L1's bitmaps for whatever reason.
    
    Note, the bad behavior is relatively benign in the current code base as
    KVM sets all bits in vmcs02's MSR bitmap by default, clears bits if and
    only if L0 KVM also disables interception of an MSR, and only uses the
    buggy helper for MSR_IA32_SPEC_CTRL.  Because KVM explicitly tests WRMSR
    before disabling interception of MSR_IA32_SPEC_CTRL, the flawed check
    will only result in KVM reading MSR_IA32_SPEC_CTRL from hardware when it
    isn't strictly necessary.
    
    Tag the fix for stable in case a future fix wants to use
    msr_write_intercepted(), in which case a buggy implementation in older
    kernels could prove subtly problematic.
    
    Fixes: d28b387fb74d ("KVM/VMX: Allow direct access to MSR_IA32_SPEC_CTRL")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20211109013047.2041518-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd37419f4fde95bf08d31588b80f69b99ac07b3f
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Wed Nov 3 11:05:45 2021 +0000

    KVM: arm64: Extract ESR_ELx.EC only
    
    commit 8bb084119f1acc2ec55ea085a97231e3ddb30782 upstream.
    
    Since ARMv8.0 the upper 32 bits of ESR_ELx have been RES0, and recently
    some of the upper bits gained a meaning and can be non-zero. For
    example, when FEAT_LS64 is implemented, ESR_ELx[36:32] contain ISS2,
    which for an ST64BV or ST64BV0 can be non-zero. This can be seen in ARM
    DDI 0487G.b, page D13-3145, section D13.2.37.
    
    Generally, we must not rely on RES0 bit remaining zero in future, and
    when extracting ESR_ELx.EC we must mask out all other bits.
    
    All C code uses the ESR_ELx_EC() macro, which masks out the irrelevant
    bits, and therefore no alterations are required to C code to avoid
    consuming irrelevant bits.
    
    In a couple of places the KVM assembly extracts ESR_ELx.EC using LSR on
    an X register, and so could in theory consume previously RES0 bits. In
    both cases this is for comparison with EC values ESR_ELx_EC_HVC32 and
    ESR_ELx_EC_HVC64, for which the upper bits of ESR_ELx must currently be
    zero, but this could change in future.
    
    This patch adjusts the KVM vectors to use UBFX rather than LSR to
    extract ESR_ELx.EC, ensuring these are robust to future additions to
    ESR_ELx.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexandru Elisei <alexandru.elisei@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Cc: Will Deacon <will@kernel.org>
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20211103110545.4613-1-mark.rutland@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 924955df37f25a832b6a690160c611f121257abf
Author: Henrik Grimler <henrik@grimler.se>
Date:   Wed Sep 29 20:14:17 2021 +0200

    power: supply: max17042_battery: use VFSOC for capacity when no rsns
    
    commit 223a3b82834f036a62aa831f67cbf1f1d644c6e2 upstream.
    
    On Galaxy S3 (i9300/i9305), which has the max17047 fuel gauge and no
    current sense resistor (rsns), the RepSOC register does not provide an
    accurate state of charge value. The reported value is wrong, and does
    not change over time. VFSOC however, which uses the voltage fuel gauge
    to determine the state of charge, always shows an accurate value.
    
    For devices without current sense, VFSOC is already used for the
    soc-alert (0x0003 is written to MiscCFG register), so with this change
    the source of the alert and the PROP_CAPACITY value match.
    
    Fixes: 359ab9f5b154 ("power_supply: Add MAX17042 Fuel Gauge Driver")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Suggested-by: Wolfgang Wiedmeyer <wolfgit@wiedmeyer.de>
    Signed-off-by: Henrik Grimler <henrik@grimler.se>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2feac81edcdb38435a9ac061c720248166d626f
Author: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date:   Tue Sep 14 14:18:06 2021 +0200

    power: supply: max17042_battery: Prevent int underflow in set_soc_threshold
    
    commit e660dbb68c6b3f7b9eb8b9775846a44f9798b719 upstream.
    
    max17042_set_soc_threshold gets called with offset set to 1, which means
    that minimum threshold value would underflow once SOC got down to 0,
    causing invalid alerts from the gauge.
    
    Fixes: e5f3872d2044 ("max17042: Add support for signalling change in SOC")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5720436bc7ba3370dc8c9baf0b1b28c93bdd9644
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Sep 29 00:22:47 2021 +0200

    mtd: rawnand: socrates: Keep the driver compatible with on-die ECC engines
    
    commit b4ebddd6540d78a7f977b3fea0261bd575c6ffe2 upstream.
    
    Following the introduction of the generic ECC engine infrastructure, it
    was necessary to reorganize the code and move the ECC configuration in
    the ->attach_chip() hook. Failing to do that properly lead to a first
    series of fixes supposed to stabilize the situation. Unfortunately, this
    only fixed the use of software ECC engines, preventing any other kind of
    engine to be used, including on-die ones.
    
    It is now time to (finally) fix the situation by ensuring that we still
    provide a default (eg. software ECC) but will still support different
    ECC engines such as on-die ECC engines if properly described in the
    device tree.
    
    There are no changes needed on the core side in order to do this, but we
    just need to leverage the logic there which allows:
    1- a subsystem default (set to Host engines in the raw NAND world)
    2- a driver specific default (here set to software ECC engines)
    3- any type of engine requested by the user (ie. described in the DT)
    
    As the raw NAND subsystem has not yet been fully converted to the ECC
    engine infrastructure, in order to provide a default ECC engine for this
    driver we need to set chip->ecc.engine_type *before* calling
    nand_scan(). During the initialization step, the core will consider this
    entry as the default engine for this driver. This value may of course
    be overloaded by the user if the usual DT properties are provided.
    
    Fixes: b36bf0a0fe5d ("mtd: rawnand: socrates: Move the ECC initialization to ->attach_chip()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210928222258.199726-9-miquel.raynal@bootlin.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e867f8bb3fe234524cc55bdbec9fe2cc5999241
Author: Meng Li <Meng.Li@windriver.com>
Date:   Tue Oct 19 11:05:55 2021 +0800

    soc: fsl: dpio: use the combined functions to protect critical zone
    
    commit dc7e5940aad6641bd5ab33ea8b21c4b3904d989f upstream.
    
    In orininal code, use 2 function spin_lock() and local_irq_save() to
    protect the critical zone. But when enable the kernel debug config,
    there are below inconsistent lock state detected.
    ================================
    WARNING: inconsistent lock state
    5.10.63-yocto-standard #1 Not tainted
    --------------------------------
    inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
    lock_torture_wr/226 [HC0[0]:SC1[5]:HE1:SE0] takes:
    ffff002005b2dd80 (&p->access_spinlock){+.?.}-{3:3}, at: qbman_swp_enqueue_multiple_mem_back+0x44/0x270
    {SOFTIRQ-ON-W} state was registered at:
      lock_acquire.part.0+0xf8/0x250
      lock_acquire+0x68/0x84
      _raw_spin_lock+0x68/0x90
      qbman_swp_enqueue_multiple_mem_back+0x44/0x270
      ......
      cryptomgr_test+0x38/0x60
      kthread+0x158/0x164
      ret_from_fork+0x10/0x38
    irq event stamp: 4498
    hardirqs last  enabled at (4498): [<ffff800010fcf980>] _raw_spin_unlock_irqrestore+0x90/0xb0
    hardirqs last disabled at (4497): [<ffff800010fcffc4>] _raw_spin_lock_irqsave+0xd4/0xe0
    softirqs last  enabled at (4458): [<ffff8000100108c4>] __do_softirq+0x674/0x724
    softirqs last disabled at (4465): [<ffff80001005b2a4>] __irq_exit_rcu+0x190/0x19c
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
           CPU0
           ----
      lock(&p->access_spinlock);
      <Interrupt>
        lock(&p->access_spinlock);
     *** DEADLOCK ***
    
    So, in order to avoid deadlock, use the combined functions
    spin_lock_irqsave/spin_unlock_irqrestore() to protect critical zone.
    
    Fixes: 3b2abda7d28c ("soc: fsl: dpio: Replace QMAN array mode with ring mode enqueue")
    Cc: stable@vger.kernel.org
    Signed-off-by: Meng Li <Meng.Li@windriver.com>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55c97165adf6dd3939f6925a254e0c44c50dd464
Author: Meng Li <Meng.Li@windriver.com>
Date:   Tue Oct 19 10:32:41 2021 +0800

    soc: fsl: dpio: replace smp_processor_id with raw_smp_processor_id
    
    commit e775eb9fc2a4107f03222fa48bc95c2c82427e64 upstream.
    
    When enable debug kernel configs,there will be calltrace as below:
    
    BUG: using smp_processor_id() in preemptible [00000000] code: swapper/0/1
    caller is debug_smp_processor_id+0x20/0x30
    CPU: 6 PID: 1 Comm: swapper/0 Not tainted 5.10.63-yocto-standard #1
    Hardware name: NXP Layerscape LX2160ARDB (DT)
    Call trace:
     dump_backtrace+0x0/0x1a0
     show_stack+0x24/0x30
     dump_stack+0xf0/0x13c
     check_preemption_disabled+0x100/0x110
     debug_smp_processor_id+0x20/0x30
     dpaa2_io_query_fq_count+0xdc/0x154
     dpaa2_eth_stop+0x144/0x314
     __dev_close_many+0xdc/0x160
     __dev_change_flags+0xe8/0x220
     dev_change_flags+0x30/0x70
     ic_close_devs+0x50/0x78
     ip_auto_config+0xed0/0xf10
     do_one_initcall+0xac/0x460
     kernel_init_freeable+0x30c/0x378
     kernel_init+0x20/0x128
     ret_from_fork+0x10/0x38
    
    Based on comment in the context, it doesn't matter whether
    preemption is disable or not. So, replace smp_processor_id()
    with raw_smp_processor_id() to avoid above call trace.
    
    Fixes: c89105c9b390 ("staging: fsl-mc: Move DPIO from staging to drivers/soc/fsl")
    Cc: stable@vger.kernel.org
    Signed-off-by: Meng Li <Meng.Li@windriver.com>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62bd9eac5fa203876b064c572aa8ebe8c86b788f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Oct 20 12:43:51 2021 -0500

    signal/mips: Update (_save|_restore)_fp_context to fail with -EFAULT
    
    commit 95bf9d646c3c3f95cb0be7e703b371db8da5be68 upstream.
    
    When an instruction to save or restore a register from the stack fails
    in _save_fp_context or _restore_fp_context return with -EFAULT.  This
    change was made to r2300_fpu.S[1] but it looks like it got lost with
    the introduction of EX2[2].  This is also what the other implementation
    of _save_fp_context and _restore_fp_context in r4k_fpu.S does, and
    what is needed for the callers to be able to handle the error.
    
    Furthermore calling do_exit(SIGSEGV) from bad_stack is wrong because
    it does not terminate the entire process it just terminates a single
    thread.
    
    As the changed code was the only caller of arch/mips/kernel/syscall.c:bad_stack
    remove the problematic and now unused helper function.
    
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Cc: Maciej Rozycki <macro@orcam.me.uk>
    Cc: linux-mips@vger.kernel.org
    [1] 35938a00ba86 ("MIPS: Fix ISA I FP sigcontext access violation handling")
    [2] f92722dc4545 ("MIPS: Correct MIPS I FP sigcontext layout")
    Cc: stable@vger.kernel.org
    Fixes: f92722dc4545 ("MIPS: Correct MIPS I FP sigcontext layout")
    Acked-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Acked-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Link: https://lkml.kernel.org/r/20211020174406.17889-5-ebiederm@xmission.com
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e63b85a489d18f1c27bd6dbfc4dd1073f95e327
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Wed Sep 22 11:10:06 2021 +0200

    memory: renesas-rpc-if: Correct QSPI data transfer in Manual mode
    
    commit fff53a551db50f5edecaa0b29a64056ab8d2bbca upstream.
    
    This patch fixes 2 problems:
    [1] The output warning logs and data loss when performing
    mount/umount then remount the device with jffs2 format.
    [2] The access width of SMWDR[0:1]/SMRDR[0:1] register is wrong.
    
    This is the sample warning logs when performing mount/umount then
    remount the device with jffs2 format:
    jffs2: jffs2_scan_inode_node(): CRC failed on node at 0x031c51d4:
    Read 0x00034e00, calculated 0xadb272a7
    
    The reason for issue [1] is that the writing data seems to
    get messed up.
    Data is only completed when the number of bytes is divisible by 4.
    If you only have 3 bytes of data left to write, 1 garbage byte
    is inserted after the end of the write stream.
    If you only have 2 bytes of data left to write, 2 bytes of '00'
    are added into the write stream.
    If you only have 1 byte of data left to write, 2 bytes of '00'
    are added into the write stream. 1 garbage byte is inserted after
    the end of the write stream.
    
    To solve problem [1], data must be written continuously in serial
    and the write stream ends when data is out.
    
    Following HW manual 62.2.15, access to SMWDR0 register should be
    in the same size as the transfer size specified in the SPIDE[3:0]
    bits in the manual mode enable setting register (SMENR).
    Be sure to access from address 0.
    
    So, in 16-bit transfer (SPIDE[3:0]=b'1100), SMWDR0 should be
    accessed by 16-bit width.
    Similar to SMWDR1, SMDDR0/1 registers.
    In current code, SMWDR0 register is accessed by regmap_write()
    that only set up to do 32-bit width.
    
    To solve problem [2], data must be written 16-bit or 8-bit when
    transferring 1-byte or 2-byte.
    
    Fixes: ca7d8b980b67 ("memory: add Renesas RPC-IF driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Duc Nguyen <duc.nguyen.ub@renesas.com>
    [wsa: refactored to use regmap only via reg_read/reg_write]
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Link: https://lore.kernel.org/r/20210922091007.5516-1-wsa+renesas@sang-engineering.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fbecebb31c7071ec6047a978ae6dae092c09d19
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Sep 1 13:21:34 2021 -0500

    signal: Remove the bogus sigkill_pending in ptrace_stop
    
    commit 7d613f9f72ec8f90ddefcae038fdae5adb8404b3 upstream.
    
    The existence of sigkill_pending is a little silly as it is
    functionally a duplicate of fatal_signal_pending that is used in
    exactly one place.
    
    Checking for pending fatal signals and returning early in ptrace_stop
    is actively harmful.  It casues the ptrace_stop called by
    ptrace_signal to return early before setting current->exit_code.
    Later when ptrace_signal reads the signal number from
    current->exit_code is undefined, making it unpredictable what will
    happen.
    
    Instead rely on the fact that schedule will not sleep if there is a
    pending signal that can awaken a task.
    
    Removing the explict sigkill_pending test fixes fixes ptrace_signal
    when ptrace_stop does not stop because current->exit_code is always
    set to to signr.
    
    Cc: stable@vger.kernel.org
    Fixes: 3d749b9e676b ("ptrace: simplify ptrace_stop()->sigkill_pending() path")
    Fixes: 1a669c2f16d4 ("Add arch_ptrace_stop")
    Link: https://lkml.kernel.org/r/87pmsyx29t.fsf@disp2133
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c6fedce4a6a6a9739926a0c28d53ff41e256d08
Author: Alok Prasad <palok@marvell.com>
Date:   Wed Oct 27 18:43:29 2021 +0000

    RDMA/qedr: Fix NULL deref for query_qp on the GSI QP
    
    commit 4f960393a0ee9a39469ceb7c8077ae8db665cc12 upstream.
    
    This patch fixes a crash caused by querying the QP via netlink, and
    corrects the state of GSI qp. GSI qp's have a NULL qed_qp.
    
    The call trace is generated by:
     $ rdma res show
    
     BUG: kernel NULL pointer dereference, address: 0000000000000034
     Hardware name: Dell Inc. PowerEdge R720/0M1GCR, BIOS 1.2.6 05/10/2012
     RIP: 0010:qed_rdma_query_qp+0x33/0x1a0 [qed]
     RSP: 0018:ffffba560a08f580 EFLAGS: 00010206
     RAX: 0000000200000000 RBX: ffffba560a08f5b8 RCX: 0000000000000000
     RDX: ffffba560a08f5b8 RSI: 0000000000000000 RDI: ffff9807ee458090
     RBP: ffffba560a08f5a0 R08: 0000000000000000 R09: ffff9807890e7048
     R10: ffffba560a08f658 R11: 0000000000000000 R12: 0000000000000000
     R13: ffff9807ee458090 R14: ffff9807f0afb000 R15: ffffba560a08f7ec
     FS:  00007fbbf8bfe740(0000) GS:ffff980aafa00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000034 CR3: 00000001720ba001 CR4: 00000000000606f0
     Call Trace:
      qedr_query_qp+0x82/0x360 [qedr]
      ib_query_qp+0x34/0x40 [ib_core]
      ? ib_query_qp+0x34/0x40 [ib_core]
      fill_res_qp_entry_query.isra.26+0x47/0x1d0 [ib_core]
      ? __nla_put+0x20/0x30
      ? nla_put+0x33/0x40
      fill_res_qp_entry+0xe3/0x120 [ib_core]
      res_get_common_dumpit+0x3f8/0x5d0 [ib_core]
      ? fill_res_cm_id_entry+0x1f0/0x1f0 [ib_core]
      nldev_res_get_qp_dumpit+0x1a/0x20 [ib_core]
      netlink_dump+0x156/0x2f0
      __netlink_dump_start+0x1ab/0x260
      rdma_nl_rcv+0x1de/0x330 [ib_core]
      ? nldev_res_get_cm_id_dumpit+0x20/0x20 [ib_core]
      netlink_unicast+0x1b8/0x270
      netlink_sendmsg+0x33e/0x470
      sock_sendmsg+0x63/0x70
      __sys_sendto+0x13f/0x180
      ? setup_sgl.isra.12+0x70/0xc0
      __x64_sys_sendto+0x28/0x30
      do_syscall_64+0x3a/0xb0
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Cc: stable@vger.kernel.org
    Fixes: cecbcddf6461 ("qedr: Add support for QP verbs")
    Link: https://lore.kernel.org/r/20211027184329.18454-1-palok@marvell.com
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: Shai Malin <smalin@marvell.com>
    Signed-off-by: Prabhakar Kushwaha <pkushwaha@marvell.com>
    Signed-off-by: Alok Prasad <palok@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30cdf50357695b89d879a345e9b3afb186f64aff
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Thu Aug 26 08:32:39 2021 -0700

    perf/x86/intel/uncore: Fix Intel ICX IIO event constraints
    
    commit f42e8a603c88f72bf047a710b9fc1d3579f31e71 upstream.
    
    According to the latest uncore document, both NUM_OUTSTANDING_REQ_OF_CPU
    (0x88) event and COMP_BUF_OCCUPANCY(0xd5) event also have constraints. Add
    them into the event constraints table.
    
    Fixes: 2b3b76b5ec67 ("perf/x86/intel/uncore: Add Ice Lake server uncore support")
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1629991963-102621-4-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aef1a67fbf4923a21e5de6353a137ed60e2c61ed
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Thu Aug 26 08:32:37 2021 -0700

    perf/x86/intel/uncore: Support extra IMC channel on Ice Lake server
    
    commit 496a18f09374ad89b3ab4366019bc3975db90234 upstream.
    
    There are three channels on a Ice Lake server, but only two channels
    will ever be active. Current perf only enables two channels.
    
    Support the extra IMC channel, which may be activated on some Ice Lake
    machines. For a non-activated channel, the SW can still access it. The
    write will be ignored by the HW. 0 is always returned for the reading.
    
    Fixes: 2b3b76b5ec67 ("perf/x86/intel/uncore: Add Ice Lake server uncore support")
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1629991963-102621-2-git-send-email-kan.liang@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da8b3b95c57fd96baafdda2334f0c0cdfe827b9e
Author: Marek Vasut <marex@denx.de>
Date:   Thu Sep 16 16:42:45 2021 +0200

    rsi: Fix module dev_oper_mode parameter description
    
    commit 31f97cf9f0c31143a2a6fcc89c4a1286ce20157e upstream.
    
    The module parameters are missing dev_oper_mode 12, BT classic alone,
    add it. Moreover, the parameters encode newlines, which ends up being
    printed malformed e.g. by modinfo, so fix that too.
    
    However, the module parameter string is duplicated in both USB and SDIO
    modules and the dev_oper_mode mode enumeration in those module parameters
    is a duplicate of macros used by the driver. Furthermore, the enumeration
    is confusing.
    
    So, deduplicate the module parameter string and use __stringify() to
    encode the correct mode enumeration values into the module parameter
    string. Finally, replace 'Wi-Fi' with 'Wi-Fi alone' and 'BT' with
    'BT classic alone' to clarify what those modes really mean.
    
    Fixes: 898b255339310 ("rsi: add module parameter operating mode")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Amitkumar Karwar <amit.karwar@redpinesignals.com>
    Cc: Angus Ainslie <angus@akkea.ca>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: Karun Eagalapati <karun256@gmail.com>
    Cc: Martin Fuzzey <martin.fuzzey@flowbird.group>
    Cc: Martin Kepplinger <martink@posteo.de>
    Cc: Prameela Rani Garnepudi <prameela.j04cs@gmail.com>
    Cc: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Cc: Siva Rebbagondla <siva8118@gmail.com>
    Cc: netdev@vger.kernel.org
    Cc: <stable@vger.kernel.org> # 4.17+
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210916144245.10181-1-marex@denx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d69ffec3aa22825be17a8c1611e101a269fa6030
Author: Martin Fuzzey <martin.fuzzey@flowbird.group>
Date:   Mon Aug 30 17:26:46 2021 +0200

    rsi: fix rate mask set leading to P2P failure
    
    commit b515d097053a71d624e0c5840b42cd4caa653941 upstream.
    
    P2P client mode was only working the first time.
    On subsequent connection attempts the group was successfully created but
    no data was sent (no transmitted data packets were seen with a sniffer).
    
    The reason for this was that the hardware was being configured in fixed
    rate mode with rate RSI_RATE_1 (1Mbps) which is not valid in the 5GHz band.
    
    In P2P mode wpa_supplicant uses NL80211_CMD_SET_TX_BITRATE_MASK to disallow
    the 11b rates in the 2.4GHz band which updated common->fixedrate_mask.
    
    rsi_set_min_rate() then used the fixedrate_mask to calculate the minimum
    allowed rate, or 0xffff = auto if none was found.
    However that calculation did not account for the different rate sets
    allowed in the different bands leading to the error.
    
    Fixing set_min_rate() would result in 6Mb/s being used all the time
    which is not what we want either.
    
    The reason the problem did not occur on the first connection is that
    rsi_mac80211_set_rate_mask() only updated the fixedrate_mask for
    the *current* band. When it was called that was still 2.4GHz as the
    switch is done later. So the when set_min_rate() was subsequently
    called after the switch to 5GHz it still had a mask of zero, leading
    to defaulting to auto mode.
    
    Fix this by differentiating the case of a single rate being
    requested, in which case the hardware will be used in fixed rate
    mode with just that rate, and multiple rates being requested,
    in which case we remain in auto mode but the firmware rate selection
    algorithm is configured with a restricted set of rates.
    
    Fixes: dad0d04fa7ba ("rsi: Add RS9113 wireless driver")
    Signed-off-by: Martin Fuzzey <martin.fuzzey@flowbird.group>
    CC: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1630337206-12410-4-git-send-email-martin.fuzzey@flowbird.group
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41d97e0360e9af3714b32b790885aa1f0d763712
Author: Martin Fuzzey <martin.fuzzey@flowbird.group>
Date:   Mon Aug 30 17:26:45 2021 +0200

    rsi: fix key enabled check causing unwanted encryption for vap_id > 0
    
    commit 99ac6018821253ec67f466086afb63fc18ea48e2 upstream.
    
    My previous patch checked if encryption should be enabled by directly
    checking info->control.hw_key (like the downstream driver).
    However that missed that the control and driver_info members of
    struct ieee80211_tx_info are union fields.
    
    Due to this when rsi_core_xmit() updates fields in "tx_params"
    (driver_info) it can overwrite the control.hw_key, causing the result
    of the later test to be incorrect.
    
    With the current structure layout the first byte of control.hw_key is
    overlayed with the vap_id so, since we only test if control.hw_key is
    NULL / non NULL, a non zero vap_id will incorrectly enable encryption.
    
    In basic STA and AP modes the vap_id is always zero so it works but in
    P2P client mode a second VIF is created causing vap_id to be non zero
    and hence encryption to be enabled before keys have been set.
    
    Fix this by extracting the key presence flag to a new field in the driver
    private tx_params structure and populating it first.
    
    Fixes: 314538041b56 ("rsi: fix AP mode with WPA failure due to encrypted EAPOL")
    Signed-off-by: Martin Fuzzey <martin.fuzzey@flowbird.group>
    CC: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1630337206-12410-3-git-send-email-martin.fuzzey@flowbird.group
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46752a7aed913a7f653053f025f96d0d9a457f84
Author: Martin Fuzzey <martin.fuzzey@flowbird.group>
Date:   Mon Aug 30 17:26:44 2021 +0200

    rsi: fix occasional initialisation failure with BT coex
    
    commit 9b14ed6e11b72dd4806535449ca6c6962cb2369d upstream.
    
    When BT coexistence is enabled (eg oper mode 13, which is the default)
    the initialisation on startup sometimes silently fails.
    
    In a normal initialisation we see
            usb 1-1.3: Product: Wireless USB Network Module
            usb 1-1.3: Manufacturer: Redpine Signals, Inc.
            usb 1-1.3: SerialNumber: 000000000001
            rsi_91x: rsi_probe: Initialized os intf ops
            rsi_91x: rsi_load_9116_firmware: Loading chunk 0
            rsi_91x: rsi_load_9116_firmware: Loading chunk 1
            rsi_91x: rsi_load_9116_firmware: Loading chunk 2
            rsi_91x: Max Stations Allowed = 1
    
    But sometimes the last log is missing and the wlan net device is
    not created.
    
    Running a userspace loop that resets the hardware via a GPIO shows the
    problem occurring ~5/100 resets.
    
    The problem does not occur in oper mode 1 (wifi only).
    
    Adding logs shows that the initialisation state machine requests a MAC
    reset via rsi_send_reset_mac() but the firmware does not reply, leading
    to the initialisation sequence being incomplete.
    
    Fix this by delaying attaching the BT adapter until the wifi
    initialisation has completed.
    
    With this applied I have done > 300 reset loops with no errors.
    
    Fixes: 716b840c7641 ("rsi: handle BT traffic in driver")
    Signed-off-by: Martin Fuzzey <martin.fuzzey@flowbird.group>
    CC: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1630337206-12410-2-git-send-email-martin.fuzzey@flowbird.group
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a194e9c721d9e0ca6fc10814acb647055d8f3d18
Author: Benjamin Li <benl@squareup.com>
Date:   Wed Sep 1 11:06:05 2021 -0700

    wcn36xx: handle connection loss indication
    
    commit d6dbce453b19c64b96f3e927b10230f9a704b504 upstream.
    
    Firmware sends delete_sta_context_ind when it detects the AP has gone
    away in STA mode. Right now the handler for that indication only handles
    AP mode; fix it to also handle STA mode.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Benjamin Li <benl@squareup.com>
    Reviewed-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Reviewed-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210901180606.11686-1-benl@squareup.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 701cf28e019d5f88684aec194d7f0119772bc10a
Author: Reimar Döffinger <Reimar.Doeffinger@gmx.de>
Date:   Tue Oct 12 08:27:44 2021 +0200

    libata: fix checking of DMA state
    
    commit f971a85439bd25dc7b4d597cf5e4e8dc7ffc884b upstream.
    
    Checking if DMA is enabled should be done via the
    ata_dma_enabled helper function, since the init state
    0xff indicates disabled.
    This meant that ATA_CMD_READ_LOG_DMA_EXT was used and probed
    for before DMA was enabled, which caused hangs for some combinations
    of controllers and devices.
    It might also have caused it to be incorrectly disabled as broken,
    but there have been no reports of that.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=195895
    Signed-off-by: Reimar Döffinger <Reimar.Doeffinger@gmx.de>
    Tested-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 890e416c026ee339cd08c6d8e4fba86868e3f510
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Mon Oct 11 15:32:24 2021 +0200

    mwifiex: Try waking the firmware until we get an interrupt
    
    commit 8e3e59c31fea5de95ffc52c46f0c562c39f20c59 upstream.
    
    It seems that the PCIe+USB firmware (latest version 15.68.19.p21) of the
    88W8897 card sometimes ignores or misses when we try to wake it up by
    writing to the firmware status register. This leads to the firmware
    wakeup timeout expiring and the driver resetting the card because we
    assume the firmware has hung up or crashed.
    
    Turns out that the firmware actually didn't hang up, but simply "missed"
    our wakeup request and didn't send us an interrupt with an AWAKE event.
    
    Trying again to read the firmware status register after a short timeout
    usually makes the firmware wake up as expected, so add a small retry
    loop to mwifiex_pm_wakeup_card() that looks at the interrupt status to
    check whether the card woke up.
    
    The number of tries and timeout lengths for this were determined
    experimentally: The firmware usually takes about 500 us to wake up
    after we attempt to read the status register. In some cases where the
    firmware is very busy (for example while doing a bluetooth scan) it
    might even miss our requests for multiple milliseconds, which is why
    after 15 tries the waiting time gets increased to 10 ms. The maximum
    number of tries it took to wake the firmware when testing this was
    around 20, so a maximum number of 50 tries should give us plenty of
    safety margin.
    
    Here's a reproducer for those firmware wakeup failures I've found:
    
    1) Make sure wifi powersaving is enabled (iw dev wlp1s0 set power_save on)
    2) Connect to any wifi network (makes firmware go into wifi powersaving
    mode, not deep sleep)
    3) Make sure bluetooth is turned off (to ensure the firmware actually
    enters powersave mode and doesn't keep the radio active doing bluetooth
    stuff)
    4) To confirm that wifi powersaving is entered ping a device on the LAN,
    pings should be a few ms higher than without powersaving
    5) Run "while true; do iwconfig; sleep 0.0001; done", this wakes and
    suspends the firmware extremely often
    6) Wait until things explode, for me it consistently takes <5 minutes
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=109681
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211011133224.15561-3-verdre@v0yd.nl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d59d2f7af7e041cafe32a7c42002308ea53dc24f
Author: Jonas Dreßler <verdre@v0yd.nl>
Date:   Mon Oct 11 15:32:23 2021 +0200

    mwifiex: Read a PCI register after writing the TX ring write pointer
    
    commit e5f4eb8223aa740237cd463246a7debcddf4eda1 upstream.
    
    On the 88W8897 PCIe+USB card the firmware randomly crashes after setting
    the TX ring write pointer. The issue is present in the latest firmware
    version 15.68.19.p21 of the PCIe+USB card.
    
    Those firmware crashes can be worked around by reading any PCI register
    of the card after setting that register, so read the PCI_VENDOR_ID
    register here. The reason this works is probably because we keep the bus
    from entering an ASPM state for a bit longer, because that's what causes
    the cards firmware to crash.
    
    This fixes a bug where during RX/TX traffic and with ASPM L1 substates
    enabled (the specific substates where the issue happens appear to be
    platform dependent), the firmware crashes and eventually a command
    timeout appears in the logs.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=109681
    Cc: stable@vger.kernel.org
    Signed-off-by: Jonas Dreßler <verdre@v0yd.nl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211011133224.15561-2-verdre@v0yd.nl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daccf40320d41fe7241caa8c47584b934b0fe97f
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Oct 22 14:58:23 2021 +0200

    PM: sleep: Do not let "syscore" devices runtime-suspend during system transitions
    
    commit 928265e3601cde78c7e0a3e518a93b27defed3b1 upstream.
    
    There is no reason to allow "syscore" devices to runtime-suspend
    during system-wide PM transitions, because they are subject to the
    same possible failure modes as any other devices in that respect.
    
    Accordingly, change device_prepare() and device_complete() to call
    pm_runtime_get_noresume() and pm_runtime_put(), respectively, for
    "syscore" devices too.
    
    Fixes: 057d51a1268f ("Merge branch 'pm-sleep'")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: 3.10+ <stable@vger.kernel.org> # 3.10+
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c422d63010a741902c233bec6ef07eae944b661
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Mon Oct 25 16:12:18 2021 +0300

    wcn36xx: Fix (QoS) null data frame bitrate/modulation
    
    commit d3fd2c95c1c13ec217d43ebef3c61cfa00a6cd37 upstream.
    
    We observe unexpected connection drops with some APs due to
    non-acked mac80211 generated null data frames (keep-alive).
    After debugging and capture, we noticed that null frames are
    submitted at standard data bitrate and that the given APs are
    in trouble with that.
    
    After setting the null frame bitrate to control bitrate, all
    null frames are acked as expected and connection is maintained.
    
    Not sure if it's a requirement of the specification, but it seems
    the right thing to do anyway, null frames are mostly used for control
    purpose (power-saving, keep-alive...), and submitting them with
    a slower/simpler bitrate/modulation is more robust.
    
    Cc: stable@vger.kernel.org
    Fixes: 512b191d9652 ("wcn36xx: Fix TX data path")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634560399-15290-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1b8ad661ff16e89cf7753cfe81afea5094f163b
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Mon Oct 25 16:12:18 2021 +0300

    wcn36xx: Fix tx_status mechanism
    
    commit a9e79b116cc4d0057e912be8f40b2c2e5bdc7c43 upstream.
    
    This change fix the TX ack mechanism in various ways:
    
    - For NO_ACK tagged packets, we don't need to wait for TX_ACK indication
    and so are not subject to the single packet ack limitation. So we don't
    have to stop the tx queue, and can call the tx status callback as soon
    as DMA transfer has completed.
    
    - Fix skb ownership/reference. Only start status indication timeout
    once the DMA transfer has been completed. This avoids the skb to be
    both referenced in the DMA tx ring and by the tx_ack_skb pointer,
    preventing any use-after-free or double-free.
    
    - This adds a sanity (paranoia?) check on the skb tx ack pointer.
    
    - Resume TX queue if TX status tagged packet TX fails.
    
    Cc: stable@vger.kernel.org
    Fixes: fdf21cc37149 ("wcn36xx: Add TX ack support")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634567281-28997-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d62e1c9bc5575ac042748814a1d3d3e5cc967d6
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Wed Oct 20 15:38:53 2021 +0200

    wcn36xx: Fix HT40 capability for 2Ghz band
    
    commit 960ae77f25631bbe4e3aafefe209b52e044baf31 upstream.
    
    All wcn36xx controllers are supposed to support HT40 (and SGI40),
    This doubles the maximum bitrate/throughput with compatible APs.
    
    Tested with wcn3620 & wcn3680B.
    
    Cc: stable@vger.kernel.org
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1634737133-22336-1-git-send-email-loic.poulain@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c044f34ca22f26b0845912e3ca7b33d77b041c70
Author: Lukas Wunner <lukas@wunner.de>
Date:   Tue Oct 26 07:15:32 2021 +0200

    ifb: Depend on netfilter alternatively to tc
    
    commit 046178e726c2977d686ba5e07105d5a6685c830e upstream.
    
    IFB originally depended on NET_CLS_ACT for traffic redirection.
    But since v4.5, that may be achieved with NFT_FWD_NETDEV as well.
    
    Fixes: 39e6dea28adc ("netfilter: nf_tables: add forward expression to the netdev family")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: <stable@vger.kernel.org> # v4.5+: bcfabee1afd9: netfilter: nft_fwd_netdev: allow to redirect to ifb via ingress
    Cc: <stable@vger.kernel.org> # v4.5+
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7400e2ec8de2cf0f8a858aeeaec2722106b2aab
Author: Austin Kim <austin.kim@lge.com>
Date:   Thu Oct 28 12:26:42 2021 +0100

    evm: mark evm_fixmode as __ro_after_init
    
    commit 32ba540f3c2a7ef61ed5a577ce25069a3d714fc9 upstream.
    
    The evm_fixmode is only configurable by command-line option and it is never
    modified outside initcalls, so declaring it with __ro_after_init is better.
    
    Signed-off-by: Austin Kim <austin.kim@lge.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eab090dfcb1dbb5b8469343357ad037827345270
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:05:21 2021 +0200

    rtl8187: fix control-message timeouts
    
    commit 2e9be536a213e838daed6ba42024dd68954ac061 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 605bebe23bf6 ("[PATCH] Add rtl8187 wireless driver")
    Cc: stable@vger.kernel.org      # 2.6.23
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211025120522.6045-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73b79ada4c1c4e26714b611223c49483421ffc25
Author: Ingmar Klein <ingmar_klein@web.de>
Date:   Fri Apr 9 11:26:33 2021 +0200

    PCI: Mark Atheros QCA6174 to avoid bus reset
    
    commit e3f4bd3462f6f796594ecc0dda7144ed2d1e5a26 upstream.
    
    When passing the Atheros QCA6174 through to a virtual machine, the VM hangs
    at the point where the ath10k driver loads.
    
    Add a quirk to avoid bus resets on this device, which avoids the hang.
    
    [bhelgaas: commit log]
    Link: https://lore.kernel.org/r/08982e05-b6e8-5a8d-24ab-da1488ee50a8@web.de
    Signed-off-by: Ingmar Klein <ingmar_klein@web.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30182b8c138818302d44a16fe5debc66ad23c021
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 27 10:08:17 2021 +0200

    ath10k: fix division by zero in send path
    
    commit a006acb931317aad3a8dd41333ebb0453caf49b8 upstream.
    
    Add the missing endpoint max-packet sanity check to probe() to avoid
    division by zero in ath10k_usb_hif_tx_sg() in case a malicious device
    has broken descriptors (or when doing descriptor fuzz testing).
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 4db66499df91 ("ath10k: add initial USB support")
    Cc: stable@vger.kernel.org      # 4.14
    Cc: Erik Stromdahl <erik.stromdahl@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027080819.6675-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce560076091a1c39909db8fee3dd01751b0206a4
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:05:19 2021 +0200

    ath10k: fix control-message timeout
    
    commit 5286132324230168d3fab6ffc16bfd7de85bdfb4 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 4db66499df91 ("ath10k: add initial USB support")
    Cc: stable@vger.kernel.org      # 4.14
    Cc: Erik Stromdahl <erik.stromdahl@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211025120522.6045-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1336b2af8adcea8e70b759f3bd852a4ffb1404a1
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:05:20 2021 +0200

    ath6kl: fix control-message timeout
    
    commit a066d28a7e729f808a3e6eff22e70c003091544e upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 241b128b6b69 ("ath6kl: add back beginnings of USB support")
    Cc: stable@vger.kernel.org      # 3.4
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211025120522.6045-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f34487c7f223c435dce529ec8cfe55826bd9d8e3
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 27 10:08:18 2021 +0200

    ath6kl: fix division by zero in send path
    
    commit c1b9ca365deae667192be9fe24db244919971234 upstream.
    
    Add the missing endpoint max-packet sanity check to probe() to avoid
    division by zero in ath10k_usb_hif_tx_sg() in case a malicious device
    has broken descriptors (or when doing descriptor fuzz testing).
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 9cbee358687e ("ath6kl: add full USB support")
    Cc: stable@vger.kernel.org      # 3.5
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027080819.6675-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd1e4d8c61ef577c1b21f96d6a04ab0cb771f9d6
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 27 10:08:19 2021 +0200

    mwifiex: fix division by zero in fw download path
    
    commit 89f8765a11d8df49296d92c404067f9b5c58ee26 upstream.
    
    Add the missing endpoint sanity checks to probe() to avoid division by
    zero in mwifiex_write_data_sync() in case a malicious device has broken
    descriptors (or when doing descriptor fuzz testing).
    
    Only add checks for the firmware-download boot stage, which require both
    command endpoints, for now. The driver looks like it will handle a
    missing endpoint during normal operation without oopsing, albeit not
    very gracefully as it will try to submit URBs to the default pipe and
    fail.
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 4daffe354366 ("mwifiex: add support for Marvell USB8797 chipset")
    Cc: stable@vger.kernel.org      # 3.5
    Cc: Amitkumar Karwar <akarwar@marvell.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027080819.6675-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5d8d76710e83d45af60afe95304d9c46b2258cc
Author: Eric Badger <ebadger@purestorage.com>
Date:   Sun Oct 10 10:06:56 2021 -0700

    EDAC/sb_edac: Fix top-of-high-memory value for Broadwell/Haswell
    
    commit 537bddd069c743759addf422d0b8f028ff0f8dbc upstream.
    
    The computation of TOHM is off by one bit. This missed bit results in
    too low a value for TOHM, which can cause errors in regular memory to
    incorrectly report:
    
      EDAC MC0: 1 CE Error at MMIOH area, on addr 0x000000207fffa680 on any memory
    
    Fixes: 50d1bb93672f ("sb_edac: add support for Haswell based systems")
    Cc: stable@vger.kernel.org
    Reported-by: Meeta Saggi <msaggi@purestorage.com>
    Signed-off-by: Eric Badger <ebadger@purestorage.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Link: https://lore.kernel.org/r/20211010170127.848113-1-ebadger@purestorage.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31f5c925464aa500dbd0bdd59bbc2e23d6d098fc
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Oct 8 13:37:14 2021 +0200

    regulator: dt-bindings: samsung,s5m8767: correct s5m8767,pmic-buck-default-dvs-idx property
    
    commit a7fda04bc9b6ad9da8e19c9e6e3b1dab773d068a upstream.
    
    The driver was always parsing "s5m8767,pmic-buck-default-dvs-idx", not
    "s5m8767,pmic-buck234-default-dvs-idx".
    
    Cc: <stable@vger.kernel.org>
    Fixes: 26aec009f6b6 ("regulator: add device tree support for s5m8767")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Message-Id: <20211008113723.134648-3-krzysztof.kozlowski@canonical.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02ecf56faa56f46be1c6ac7975cdc23710517349
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Oct 8 13:37:13 2021 +0200

    regulator: s5m8767: do not use reset value as DVS voltage if GPIO DVS is disabled
    
    commit b16bef60a9112b1e6daf3afd16484eb06e7ce792 upstream.
    
    The driver and its bindings, before commit 04f9f068a619 ("regulator:
    s5m8767: Modify parsing method of the voltage table of buck2/3/4") were
    requiring to provide at least one safe/default voltage for DVS registers
    if DVS GPIO is not being enabled.
    
    IOW, if s5m8767,pmic-buck2-uses-gpio-dvs is missing, the
    s5m8767,pmic-buck2-dvs-voltage should still be present and contain one
    voltage.
    
    This requirement was coming from driver behavior matching this condition
    (none of DVS GPIO is enabled): it was always initializing the DVS
    selector pins to 0 and keeping the DVS enable setting at reset value
    (enabled).  Therefore if none of DVS GPIO is enabled in devicetree,
    driver was configuring the first DVS voltage for buck[234].
    
    Mentioned commit 04f9f068a619 ("regulator: s5m8767: Modify parsing
    method of the voltage table of buck2/3/4") broke it because DVS voltage
    won't be parsed from devicetree if DVS GPIO is not enabled.  After the
    change, driver will configure bucks to use the register reset value as
    voltage which might have unpleasant effects.
    
    Fix this by relaxing the bindings constrain: if DVS GPIO is not enabled
    in devicetree (therefore DVS voltage is also not parsed), explicitly
    disable it.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 04f9f068a619 ("regulator: s5m8767: Modify parsing method of the voltage table of buck2/3/4")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Message-Id: <20211008113723.134648-2-krzysztof.kozlowski@canonical.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b7e3bb16310e597aac1d35f1bf260143e8d5def
Author: Zev Weiss <zev@bewilderbeest.net>
Date:   Tue Sep 28 02:22:35 2021 -0700

    hwmon: (pmbus/lm25066) Add offset coefficients
    
    commit ae59dc455a78fb73034dd1fbb337d7e59c27cbd8 upstream.
    
    With the exception of the lm5066i, all the devices handled by this
    driver had been missing their offset ('b') coefficients for direct
    format readings.
    
    Cc: stable@vger.kernel.org
    Fixes: 58615a94f6a1 ("hwmon: (pmbus/lm25066) Add support for LM25056")
    Fixes: e53e6497fc9f ("hwmon: (pmbus/lm25066) Refactor device specific coefficients")
    Signed-off-by: Zev Weiss <zev@bewilderbeest.net>
    Link: https://lore.kernel.org/r/20210928092242.30036-2-zev@bewilderbeest.net
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db04fb4111e6f5cf1518c7a4718ccde1756f909e
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Wed Jul 28 16:03:13 2021 +0200

    selinux: fix race condition when computing ocontext SIDs
    
    commit cbfcd13be5cb2a07868afe67520ed181956579a7 upstream.
    
    Current code contains a lot of racy patterns when converting an
    ocontext's context structure to an SID. This is being done in a "lazy"
    fashion, such that the SID is looked up in the SID table only when it's
    first needed and then cached in the "sid" field of the ocontext
    structure. However, this is done without any locking or memory barriers
    and is thus unsafe.
    
    Between commits 24ed7fdae669 ("selinux: use separate table for initial
    SID lookup") and 66f8e2f03c02 ("selinux: sidtab reverse lookup hash
    table"), this race condition lead to an actual observable bug, because a
    pointer to the shared sid field was passed directly to
    sidtab_context_to_sid(), which was using this location to also store an
    intermediate value, which could have been read by other threads and
    interpreted as an SID. In practice this caused e.g. new mounts to get a
    wrong (seemingly random) filesystem context, leading to strange denials.
    This bug has been spotted in the wild at least twice, see [1] and [2].
    
    Fix the race condition by making all the racy functions use a common
    helper that ensures the ocontext::sid accesses are made safely using the
    appropriate SMP constructs.
    
    Note that security_netif_sid() was populating the sid field of both
    contexts stored in the ocontext, but only the first one was actually
    used. The SELinux wiki's documentation on the "netifcon" policy
    statement [3] suggests that using only the first context is intentional.
    I kept only the handling of the first context here, as there is really
    no point in doing the SID lookup for the unused one.
    
    I wasn't able to reproduce the bug mentioned above on any kernel that
    includes commit 66f8e2f03c02, even though it has been reported that the
    issue occurs with that commit, too, just less frequently. Thus, I wasn't
    able to verify that this patch fixes the issue, but it makes sense to
    avoid the race condition regardless.
    
    [1] https://github.com/containers/container-selinux/issues/89
    [2] https://lists.fedoraproject.org/archives/list/selinux@lists.fedoraproject.org/thread/6DMTAMHIOAOEMUAVTULJD45JZU7IBAFM/
    [3] https://selinuxproject.org/page/NetworkStatements#netifcon
    
    Cc: stable@vger.kernel.org
    Cc: Xinjie Zheng <xinjie@google.com>
    Reported-by: Sujithra Periasamy <sujithra@google.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a09a5f4c075d0c91d040d58b8a15d08b5cd94943
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Sep 14 23:40:27 2021 +0900

    ia64: kprobes: Fix to pass correct trampoline address to the handler
    
    commit a7fe2378454cf46cd5e2776d05e72bbe8f0a468c upstream.
    
    The following commit:
    
       Commit e792ff804f49 ("ia64: kprobes: Use generic kretprobe trampoline handler")
    
    Passed the wrong trampoline address to __kretprobe_trampoline_handler(): it
    passes the descriptor address instead of function entry address.
    
    Pass the right parameter.
    
    Also use correct symbol dereference function to get the function address
    from 'kretprobe_trampoline' - an IA64 special.
    
    Link: https://lkml.kernel.org/r/163163042696.489837.12551102356265354730.stgit@devnote2
    
    Fixes: e792ff804f49 ("ia64: kprobes: Use generic kretprobe trampoline handler")
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: X86 ML <x86@kernel.org>
    Cc: Daniel Xu <dxu@dxuuu.xyz>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Abhishek Sagar <sagar.abhishek@gmail.com>
    Cc: Andrii Nakryiko <andrii.nakryiko@gmail.com>
    Cc: Paul McKenney <paulmck@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f65b76c444587ca1033a9af1ce60766ac910628
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Oct 8 17:11:05 2021 -0700

    KVM: VMX: Unregister posted interrupt wakeup handler on hardware unsetup
    
    commit ec5a4919fa7b7d8c7a2af1c7e799b1fe4be84343 upstream.
    
    Unregister KVM's posted interrupt wakeup handler during unsetup so that a
    spurious interrupt that arrives after kvm_intel.ko is unloaded doesn't
    call into freed memory.
    
    Fixes: bf9f6ac8d749 ("KVM: Update Posted-Interrupts Descriptor when vCPU is blocked")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20211009001107.3936588-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4a4c9dc4407ae77ebf4ad8bdf9ecf57e29658b4
Author: Anand Jain <anand.jain@oracle.com>
Date:   Tue Oct 19 18:43:38 2021 +0800

    btrfs: call btrfs_check_rw_degradable only if there is a missing device
    
    commit 5c78a5e7aa835c4f08a7c90fe02d19f95a776f29 upstream.
    
    In open_ctree() in btrfs_check_rw_degradable() [1], we check each block
    group individually if at least the minimum number of devices is available
    for that profile. If all the devices are available, then we don't have to
    check degradable.
    
    [1]
    open_ctree()
    ::
    3559 if (!sb_rdonly(sb) && !btrfs_check_rw_degradable(fs_info, NULL)) {
    
    Also before calling btrfs_check_rw_degradable() in open_ctee() at the
    line number shown below [2] we call btrfs_read_chunk_tree() and down to
    add_missing_dev() to record number of missing devices.
    
    [2]
    open_ctree()
    ::
    3454         ret = btrfs_read_chunk_tree(fs_info);
    
    btrfs_read_chunk_tree()
      read_one_chunk() / read_one_dev()
        add_missing_dev()
    
    So, check if there is any missing device before btrfs_check_rw_degradable()
    in open_ctree().
    
    Also, with this the mount command could save ~16ms.[3] in the most
    common case, that is no device is missing.
    
    [3]
     1) * 16934.96 us | btrfs_check_rw_degradable [btrfs]();
    
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b406439afe734da8bbd15b7dcaaa297c77a98905
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Oct 14 17:26:04 2021 +0100

    btrfs: fix lost error handling when replaying directory deletes
    
    commit 10adb1152d957a4d570ad630f93a88bb961616c1 upstream.
    
    At replay_dir_deletes(), if find_dir_range() returns an error we break out
    of the main while loop and then assign a value of 0 (success) to the 'ret'
    variable, resulting in completely ignoring that an error happened. Fix
    that by jumping to the 'out' label when find_dir_range() returns an error
    (negative value).
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8992aab294cb7c70d430e7ad6671ccb0002de5b7
Author: Li Zhang <zhanglikernel@gmail.com>
Date:   Tue Oct 5 01:15:33 2021 +0800

    btrfs: clear MISSING device status bit in btrfs_close_one_device
    
    commit 5d03dbebba2594d2e6fbf3b5dd9060c5a835de3b upstream.
    
    Reported bug: https://github.com/kdave/btrfs-progs/issues/389
    
    There's a problem with scrub reporting aborted status but returning
    error code 0, on a filesystem with missing and readded device.
    
    Roughly these steps:
    
    - mkfs -d raid1 dev1 dev2
    - fill with data
    - unmount
    - make dev1 disappear
    - mount -o degraded
    - copy more data
    - make dev1 appear again
    
    Running scrub afterwards reports that the command was aborted, but the
    system log message says the exit code was 0.
    
    It seems that the cause of the error is decrementing
    fs_devices->missing_devices but not clearing device->dev_state.  Every
    time we umount filesystem, it would call close_ctree, And it would
    eventually involve btrfs_close_one_device to close the device, but it
    only decrements fs_devices->missing_devices but does not clear the
    device BTRFS_DEV_STATE_MISSING bit. Worse, this bug will cause Integer
    Overflow, because every time umount, fs_devices->missing_devices will
    decrease. If fs_devices->missing_devices value hit 0, it would overflow.
    
    With added debugging:
    
       loop1: detected capacity change from 0 to 20971520
       BTRFS: device fsid 56ad51f1-5523-463b-8547-c19486c51ebb devid 1 transid 21 /dev/loop1 scanned by systemd-udevd (2311)
       loop2: detected capacity change from 0 to 20971520
       BTRFS: device fsid 56ad51f1-5523-463b-8547-c19486c51ebb devid 2 transid 17 /dev/loop2 scanned by systemd-udevd (2313)
       BTRFS info (device loop1): flagging fs with big metadata feature
       BTRFS info (device loop1): allowing degraded mounts
       BTRFS info (device loop1): using free space tree
       BTRFS info (device loop1): has skinny extents
       BTRFS info (device loop1):  before clear_missing.00000000f706684d /dev/loop1 0
       BTRFS warning (device loop1): devid 2 uuid 6635ac31-56dd-4852-873b-c60f5e2d53d2 is missing
       BTRFS info (device loop1):  before clear_missing.0000000000000000 /dev/loop2 1
       BTRFS info (device loop1): flagging fs with big metadata feature
       BTRFS info (device loop1): allowing degraded mounts
       BTRFS info (device loop1): using free space tree
       BTRFS info (device loop1): has skinny extents
       BTRFS info (device loop1):  before clear_missing.00000000f706684d /dev/loop1 0
       BTRFS warning (device loop1): devid 2 uuid 6635ac31-56dd-4852-873b-c60f5e2d53d2 is missing
       BTRFS info (device loop1):  before clear_missing.0000000000000000 /dev/loop2 0
       BTRFS info (device loop1): flagging fs with big metadata feature
       BTRFS info (device loop1): allowing degraded mounts
       BTRFS info (device loop1): using free space tree
       BTRFS info (device loop1): has skinny extents
       BTRFS info (device loop1):  before clear_missing.00000000f706684d /dev/loop1 18446744073709551615
       BTRFS warning (device loop1): devid 2 uuid 6635ac31-56dd-4852-873b-c60f5e2d53d2 is missing
       BTRFS info (device loop1):  before clear_missing.0000000000000000 /dev/loop2 18446744073709551615
    
    If fs_devices->missing_devices is 0, next time it would be 18446744073709551615
    
    After apply this patch, the fs_devices->missing_devices seems to be
    right:
    
      $ truncate -s 10g test1
      $ truncate -s 10g test2
      $ losetup /dev/loop1 test1
      $ losetup /dev/loop2 test2
      $ mkfs.btrfs -draid1 -mraid1 /dev/loop1 /dev/loop2 -f
      $ losetup -d /dev/loop2
      $ mount -o degraded /dev/loop1 /mnt/1
      $ umount /mnt/1
      $ mount -o degraded /dev/loop1 /mnt/1
      $ umount /mnt/1
      $ mount -o degraded /dev/loop1 /mnt/1
      $ umount /mnt/1
      $ dmesg
    
       loop1: detected capacity change from 0 to 20971520
       loop2: detected capacity change from 0 to 20971520
       BTRFS: device fsid 15aa1203-98d3-4a66-bcae-ca82f629c2cd devid 1 transid 5 /dev/loop1 scanned by mkfs.btrfs (1863)
       BTRFS: device fsid 15aa1203-98d3-4a66-bcae-ca82f629c2cd devid 2 transid 5 /dev/loop2 scanned by mkfs.btrfs (1863)
       BTRFS info (device loop1): flagging fs with big metadata feature
       BTRFS info (device loop1): allowing degraded mounts
       BTRFS info (device loop1): disk space caching is enabled
       BTRFS info (device loop1): has skinny extents
       BTRFS info (device loop1):  before clear_missing.00000000975bd577 /dev/loop1 0
       BTRFS warning (device loop1): devid 2 uuid 8b333791-0b3f-4f57-b449-1c1ab6b51f38 is missing
       BTRFS info (device loop1):  before clear_missing.0000000000000000 /dev/loop2 1
       BTRFS info (device loop1): checking UUID tree
       BTRFS info (device loop1): flagging fs with big metadata feature
       BTRFS info (device loop1): allowing degraded mounts
       BTRFS info (device loop1): disk space caching is enabled
       BTRFS info (device loop1): has skinny extents
       BTRFS info (device loop1):  before clear_missing.00000000975bd577 /dev/loop1 0
       BTRFS warning (device loop1): devid 2 uuid 8b333791-0b3f-4f57-b449-1c1ab6b51f38 is missing
       BTRFS info (device loop1):  before clear_missing.0000000000000000 /dev/loop2 1
       BTRFS info (device loop1): flagging fs with big metadata feature
       BTRFS info (device loop1): allowing degraded mounts
       BTRFS info (device loop1): disk space caching is enabled
       BTRFS info (device loop1): has skinny extents
       BTRFS info (device loop1):  before clear_missing.00000000975bd577 /dev/loop1 0
       BTRFS warning (device loop1): devid 2 uuid 8b333791-0b3f-4f57-b449-1c1ab6b51f38 is missing
       BTRFS info (device loop1):  before clear_missing.0000000000000000 /dev/loop2 1
    
    CC: stable@vger.kernel.org # 4.19+
    Signed-off-by: Li Zhang <zhanglikernel@gmail.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a99da5b68080829982b07b12295646e101763528
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Nov 6 19:19:36 2020 +0100

    rds: stop using dmapool
    
    [ Upstream commit 42f2611cc1738b201701e717246e11e86bef4e1e ]
    
    RDMA ULPs should only perform DMA through the ib_dma_* API instead of
    using the hidden dma_device directly.  In addition using the dma coherent
    API family that dmapool is a part of can be very ineffcient on plaforms
    that are not DMA coherent.  Switch to use slab allocations and the
    ib_dma_* APIs instead.
    
    Link: https://lore.kernel.org/r/20201106181941.1878556-6-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bfb1c1a16ffb12b765cdf1aa3ae2e818b986d89
Author: Wen Gu <guwen@linux.alibaba.com>
Date:   Thu Oct 28 15:13:47 2021 +0800

    net/smc: Correct spelling mistake to TCPF_SYN_RECV
    
    [ Upstream commit f3a3a0fe0b644582fa5d83dd94b398f99fc57914 ]
    
    There should use TCPF_SYN_RECV instead of TCP_SYN_RECV.
    
    Signed-off-by: Wen Gu <guwen@linux.alibaba.com>
    Reviewed-by: Tony Lu <tonylu@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b86eb2f34d1e3e47451777cd4bfd3754914ed66
Author: Tony Lu <tonylu@linux.alibaba.com>
Date:   Thu Oct 28 15:13:45 2021 +0800

    net/smc: Fix smc_link->llc_testlink_time overflow
    
    [ Upstream commit c4a146c7cf5e8ad76231523b174d161bf152c6e7 ]
    
    The value of llc_testlink_time is set to the value stored in
    net->ipv4.sysctl_tcp_keepalive_time when linkgroup init. The value of
    sysctl_tcp_keepalive_time is already jiffies, so we don't need to
    multiply by HZ, which would cause smc_link->llc_testlink_time overflow,
    and test_link send flood.
    
    Signed-off-by: Tony Lu <tonylu@linux.alibaba.com>
    Reviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Reviewed-by: Wen Gu <guwen@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2167a9a12cc9d246f9075a2fdf37618ff3032117
Author: Yu Xiao <yu.xiao@corigine.com>
Date:   Thu Oct 28 12:00:36 2021 +0200

    nfp: bpf: relax prog rejection for mtu check through max_pkt_offset
    
    [ Upstream commit 90a881fc352a953f1c8beb61977a2db0818157d4 ]
    
    MTU change is refused whenever the value of new MTU is bigger than
    the max packet bytes that fits in NFP Cluster Target Memory (CTM).
    However, an eBPF program doesn't always need to access the whole
    packet data.
    
    The maximum direct packet access (DPA) offset has always been
    caculated by verifier and stored in the max_pkt_offset field of prog
    aux data.
    
    Signed-off-by: Yu Xiao <yu.xiao@corigine.com>
    Reviewed-by: Yinjun Zhang <yinjun.zhang@corigine.com>
    Reviewed-by: Niklas Soderlund <niklas.soderlund@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9a7d5fe155245e396ac6a3ce3b84c069ee602fa
Author: Dongli Zhang <dongli.zhang@oracle.com>
Date:   Tue Oct 26 14:50:31 2021 -0700

    vmxnet3: do not stop tx queues after netif_device_detach()
    
    [ Upstream commit 9159f102402a64ac85e676b75cc1f9c62c5b4b73 ]
    
    The netif_device_detach() conditionally stops all tx queues if the queues
    are running. There is no need to call netif_tx_stop_all_queues() again.
    
    Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9813218e96db4fbfd1dfae4d2bbd979d3031597f
Author: Janghyub Seo <jhyub06@gmail.com>
Date:   Tue Oct 26 07:12:42 2021 +0000

    r8169: Add device 10ec:8162 to driver r8169
    
    [ Upstream commit 72f898ca0ab85fde6facf78b14d9f67a4a7b32d1 ]
    
    This patch makes the driver r8169 pick up device Realtek Semiconductor Co.
    , Ltd. Device [10ec:8162].
    
    Signed-off-by: Janghyub Seo <jhyub06@gmail.com>
    Suggested-by: Rushab Shah <rushabshah32@gmail.com>
    Link: https://lore.kernel.org/r/1635231849296.1489250046.441294000@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad6a2a1e566ff3996b07e20cb3d096fc4b81cd02
Author: Amit Engel <amit.engel@dell.com>
Date:   Wed Oct 27 09:49:27 2021 +0300

    nvmet-tcp: fix header digest verification
    
    [ Upstream commit 86aeda32b887cdaeb0f4b7bfc9971e36377181c7 ]
    
    Pass the correct length to nvmet_tcp_verify_hdgst, which is the pdu
    header length.  This fixes a wrong behaviour where header digest
    verification passes although the digest is wrong.
    
    Signed-off-by: Amit Engel <amit.engel@dell.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8270435cfb4c20992d3048fe1813b853399218f
Author: Naohiro Aota <naohiro.aota@wdc.com>
Date:   Wed Oct 27 01:51:27 2021 +0900

    block: schedule queue restart after BLK_STS_ZONE_RESOURCE
    
    [ Upstream commit 9586e67b911c95ba158fcc247b230e9c2d718623 ]
    
    When dispatching a zone append write request to a SCSI zoned block device,
    if the target zone of the request is already locked, the device driver will
    return BLK_STS_ZONE_RESOURCE and the request will be pushed back to the
    hctx dipatch queue. The queue will be marked as RESTART in
    dd_finish_request() and restarted in __blk_mq_free_request(). However, this
    restart applies to the hctx of the completed request. If the requeued
    request is on a different hctx, dispatch will no be retried until another
    request is submitted or the next periodic queue run triggers, leading to up
    to 30 seconds latency for the requeued request.
    
    Fix this problem by scheduling a queue restart similarly to the
    BLK_STS_RESOURCE case or when we cannot get the budget.
    
    Also, consolidate the checks into the "need_resource" variable to simplify
    the condition.
    
    Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: Niklas Cassel <Niklas.Cassel@wdc.com>
    Link: https://lore.kernel.org/r/20211026165127.4151055-1-naohiro.aota@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d1fb5c12cc0c88159ebf946385141ed3019f009
Author: Mario <awxkrnl@gmail.com>
Date:   Tue Oct 26 13:27:37 2021 +0200

    drm: panel-orientation-quirks: Add quirk for GPD Win3
    
    [ Upstream commit 61b1d445f3bfe4c3ba4335ceeb7e8ba688fd31e2 ]
    
    Fixes screen orientation for GPD Win 3 handheld gaming console.
    
    Signed-off-by: Mario Risoldi <awxkrnl@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211026112737.9181-1-awxkrnl@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d41059b9e23bbb573fbf59c03334a138fbe55ef
Author: Walter Stoll <walter.stoll@duagon.com>
Date:   Thu Oct 14 12:22:29 2021 +0200

    watchdog: Fix OMAP watchdog early handling
    
    [ Upstream commit cd004d8299f1dc6cfa6a4eea8f94cb45eaedf070 ]
    
    TI's implementation does not service the watchdog even if the kernel
    command line parameter omap_wdt.early_enable is set to 1. This patch
    fixes the issue.
    
    Signed-off-by: Walter Stoll <walter.stoll@duagon.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/88a8fe5229cd68fa0f1fd22f5d66666c1b7057a0.camel@duagon.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8cb3f4ffa3ad0b4f0d62334aa6cda28e7f93881
Author: Cyril Strejc <cyril.strejc@skoda.cz>
Date:   Sun Oct 24 22:14:25 2021 +0200

    net: multicast: calculate csum of looped-back and forwarded packets
    
    [ Upstream commit 9122a70a6333705c0c35614ddc51c274ed1d3637 ]
    
    During a testing of an user-space application which transmits UDP
    multicast datagrams and utilizes multicast routing to send the UDP
    datagrams out of defined network interfaces, I've found a multicast
    router does not fill-in UDP checksum into locally produced, looped-back
    and forwarded UDP datagrams, if an original output NIC the datagrams
    are sent to has UDP TX checksum offload enabled.
    
    The datagrams are sent malformed out of the NIC the datagrams have been
    forwarded to.
    
    It is because:
    
    1. If TX checksum offload is enabled on the output NIC, UDP checksum
       is not calculated by kernel and is not filled into skb data.
    
    2. dev_loopback_xmit(), which is called solely by
       ip_mc_finish_output(), sets skb->ip_summed = CHECKSUM_UNNECESSARY
       unconditionally.
    
    3. Since 35fc92a9 ("[NET]: Allow forwarding of ip_summed except
       CHECKSUM_COMPLETE"), the ip_summed value is preserved during
       forwarding.
    
    4. If ip_summed != CHECKSUM_PARTIAL, checksum is not calculated during
       a packet egress.
    
    The minimum fix in dev_loopback_xmit():
    
    1. Preserves skb->ip_summed CHECKSUM_PARTIAL. This is the
       case when the original output NIC has TX checksum offload enabled.
       The effects are:
    
         a) If the forwarding destination interface supports TX checksum
            offloading, the NIC driver is responsible to fill-in the
            checksum.
    
         b) If the forwarding destination interface does NOT support TX
            checksum offloading, checksums are filled-in by kernel before
            skb is submitted to the NIC driver.
    
         c) For local delivery, checksum validation is skipped as in the
            case of CHECKSUM_UNNECESSARY, thanks to skb_csum_unnecessary().
    
    2. Translates ip_summed CHECKSUM_NONE to CHECKSUM_UNNECESSARY. It
       means, for CHECKSUM_NONE, the behavior is unmodified and is there
       to skip a looped-back packet local delivery checksum validation.
    
    Signed-off-by: Cyril Strejc <cyril.strejc@skoda.cz>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07f7a1864929fe705afd9b5b97946fe0b2983064
Author: Thomas Perrot <thomas.perrot@bootlin.com>
Date:   Fri Oct 22 16:21:04 2021 +0200

    spi: spl022: fix Microwire full duplex mode
    
    [ Upstream commit d81d0e41ed5fe7229a2c9a29d13bad288c7cf2d2 ]
    
    There are missing braces in the function that verify controller parameters,
    then an error is always returned when the parameter to select Microwire
    frames operation is used on devices allowing it.
    
    Signed-off-by: Thomas Perrot <thomas.perrot@bootlin.com>
    Link: https://lore.kernel.org/r/20211022142104.1386379-1-thomas.perrot@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db1d9d102ee45b0462237d3257d1520806ab0b4e
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Fri Oct 15 10:26:34 2021 +0200

    nvmet-tcp: fix a memory leak when releasing a queue
    
    [ Upstream commit 926245c7d22271307606c88b1fbb2539a8550e94 ]
    
    page_frag_free() won't completely release the memory
    allocated for the commands, the cache page must be explicitly
    freed by calling __page_frag_cache_drain().
    
    This bug can be easily reproduced by repeatedly
    executing the following command on the initiator:
    
    $echo 1 > /sys/devices/virtual/nvme-fabrics/ctl/nvme0/reset_controller
    
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: John Meneghini <jmeneghi@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e86b727a94fc4d532a166c449ab96e3b15015ea
Author: Dongli Zhang <dongli.zhang@oracle.com>
Date:   Fri Oct 22 16:31:39 2021 -0700

    xen/netfront: stop tx queues during live migration
    
    [ Upstream commit 042b2046d0f05cf8124c26ff65dbb6148a4404fb ]
    
    The tx queues are not stopped during the live migration. As a result, the
    ndo_start_xmit() may access netfront_info->queues which is freed by
    talk_to_netback()->xennet_destroy_queues().
    
    This patch is to netif_device_detach() at the beginning of xen-netfront
    resuming, and netif_device_attach() at the end of resuming.
    
         CPU A                                CPU B
    
     talk_to_netback()
     -> if (info->queues)
            xennet_destroy_queues(info);
        to free netfront_info->queues
    
                                            xennet_start_xmit()
                                            to access netfront_info->queues
    
      -> err = xennet_create_queues(info, &num_queues);
    
    The idea is borrowed from virtio-net.
    
    Cc: Joe Jin <joe.jin@oracle.com>
    Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69b14e23dfc3c140a9513266763c58d4688b038a
Author: Asmaa Mnebhi <asmaa@nvidia.com>
Date:   Fri Oct 22 09:44:38 2021 -0400

    gpio: mlxbf2.c: Add check for bgpio_init failure
    
    [ Upstream commit c0eee6fbfa2b3377f1efed10dad539abeb7312aa ]
    
    Add a check if bgpio_init fails.
    
    Signed-off-by: Asmaa Mnebhi <asmaa@nvidia.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b92ac0a9ca8f27076c2096cae0896b94aaa4a6ac
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Thu Oct 14 15:25:53 2021 +0100

    bpf: Prevent increasing bpf_jit_limit above max
    
    [ Upstream commit fadb7ff1a6c2c565af56b4aacdd086b067eed440 ]
    
    Restrict bpf_jit_limit to the maximum supported by the arch's JIT.
    
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20211014142554.53120-4-lmb@cloudflare.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3564fb7b0bf11d941d57c87b0f38a656a997860
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Thu Oct 14 15:25:52 2021 +0100

    bpf: Define bpf_jit_alloc_exec_limit for arm64 JIT
    
    [ Upstream commit 5d63ae908242f028bd10860cba98450d11c079b8 ]
    
    Expose the maximum amount of useable memory from the arm64 JIT.
    
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20211014142554.53120-3-lmb@cloudflare.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ad7f317b93394d4e866aee763ff1726cb6c6cea
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Oct 21 16:02:47 2021 +0200

    fcnal-test: kill hanging ping/nettest binaries on cleanup
    
    [ Upstream commit 1f83b835a3eaa5ae4bd825fb07182698bfc243ba ]
    
    On my box I see a bunch of ping/nettest processes hanging
    around after fcntal-test.sh is done.
    
    Clean those up before netns deletion.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20211021140247.29691-1-fw@strlen.de
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc3e73ebb79b01abc121703669c65f54f0023cfe
Author: Bryant Mairs <bryant@mai.rs>
Date:   Tue Oct 19 09:24:33 2021 -0500

    drm: panel-orientation-quirks: Add quirk for Aya Neo 2021
    
    [ Upstream commit def0c3697287f6e85d5ac68b21302966c95474f9 ]
    
    Fixes screen orientation for the Aya Neo 2021 handheld gaming console.
    
    Signed-off-by: Bryant Mairs <bryant@mai.rs>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211019142433.4295-1-bryant@mai.rs
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4002f3944d413c7ba22588c333c5645b029e6ecb
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Oct 17 10:59:49 2021 -0700

    mmc: winbond: don't build on M68K
    
    [ Upstream commit 162079f2dccd02cb4b6654defd32ca387dd6d4d4 ]
    
    The Winbond MMC driver fails to build on ARCH=m68k so prevent
    that build config. Silences these build errors:
    
    ../drivers/mmc/host/wbsd.c: In function 'wbsd_request_end':
    ../drivers/mmc/host/wbsd.c:212:28: error: implicit declaration of function 'claim_dma_lock' [-Werror=implicit-function-declaration]
      212 |                 dmaflags = claim_dma_lock();
    ../drivers/mmc/host/wbsd.c:215:17: error: implicit declaration of function 'release_dma_lock'; did you mean 'release_task'? [-Werror=implicit-function-declaration]
      215 |                 release_dma_lock(dmaflags);
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Pierre Ossman <pierre@ossman.eu>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211017175949.23838-1-rdunlap@infradead.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1ea41f91dcbd2dd69ce47dbe8693261f20cbe3d
Author: Paweł Anikiel <pan@semihalf.com>
Date:   Mon Sep 20 14:41:41 2021 +0200

    reset: socfpga: add empty driver allowing consumers to probe
    
    [ Upstream commit 3ad60b4b3570937f3278509fe6797a5093ce53f8 ]
    
    The early reset driver doesn't ever probe, which causes consuming
    devices to be unable to probe. Add an empty driver to set this device
    as available, allowing consumers to probe.
    
    Signed-off-by: Paweł Anikiel <pan@semihalf.com>
    Link: https://lore.kernel.org/r/20210920124141.1166544-4-pan@semihalf.com
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a903984385175d5e074963d8a97736dff1100bb9
Author: Bastien Roucariès <rouca@debian.org>
Date:   Thu Sep 16 08:17:21 2021 +0000

    ARM: dts: sun7i: A20-olinuxino-lime2: Fix ethernet phy-mode
    
    [ Upstream commit 55dd7e059098ce4bd0a55c251cb78e74604abb57 ]
    
    Commit bbc4d71d6354 ("net: phy: realtek: fix rtl8211e rx/tx delay
    config") sets the RX/TX delay according to the phy-mode property in the
    device tree. For the A20-olinuxino-lime2 board this is "rgmii", which is the
    wrong setting.
    
    Following the example of a900cac3750b ("ARM: dts: sun7i: a20: bananapro:
    Fix ethernet phy-mode") the phy-mode is changed to "rgmii-id" which gets
    the Ethernet working again on this board.
    
    Signed-off-by: Bastien Roucariès <rouca@debian.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20210916081721.237137-1-rouca@debian.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f03e04bb9d11d0f2e64e32b85c7473fd27e86d9a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Oct 18 15:19:08 2021 +0200

    hyperv/vmbus: include linux/bitops.h
    
    [ Upstream commit 8017c99680fa65e1e8d999df1583de476a187830 ]
    
    On arm64 randconfig builds, hyperv sometimes fails with this
    error:
    
    In file included from drivers/hv/hv_trace.c:3:
    In file included from drivers/hv/hyperv_vmbus.h:16:
    In file included from arch/arm64/include/asm/sync_bitops.h:5:
    arch/arm64/include/asm/bitops.h:11:2: error: only <linux/bitops.h> can be included directly
    In file included from include/asm-generic/bitops/hweight.h:5:
    include/asm-generic/bitops/arch_hweight.h:9:9: error: implicit declaration of function '__sw_hweight32' [-Werror,-Wimplicit-function-declaration]
    include/asm-generic/bitops/atomic.h:17:7: error: implicit declaration of function 'BIT_WORD' [-Werror,-Wimplicit-function-declaration]
    
    Include the correct header first.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20211018131929.2260087-1-arnd@kernel.org
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6491ccdde2c5d1c7cf3114f867513ad13903104f
Author: Erik Ekman <erik@kryo.se>
Date:   Wed Oct 20 00:40:16 2021 +0200

    sfc: Don't use netif_info before net_device setup
    
    [ Upstream commit bf6abf345dfa77786aca554bc58c64bd428ecb1d ]
    
    Use pci_info instead to avoid unnamed/uninitialized noise:
    
    [197088.688729] sfc 0000:01:00.0: Solarflare NIC detected
    [197088.690333] sfc 0000:01:00.0: Part Number : SFN5122F
    [197088.729061] sfc 0000:01:00.0 (unnamed net_device) (uninitialized): no SR-IOV VFs probed
    [197088.729071] sfc 0000:01:00.0 (unnamed net_device) (uninitialized): no PTP support
    
    Inspired by fa44821a4ddd ("sfc: don't use netif_info et al before
    net_device is registered") from Heiner Kallweit.
    
    Signed-off-by: Erik Ekman <erik@kryo.se>
    Acked-by: Martin Habets <habetsm.xilinx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e519acba2faeca5259fe7126850a28ff76500819
Author: Erik Ekman <erik@kryo.se>
Date:   Tue Oct 19 23:13:32 2021 +0200

    sfc: Export fibre-specific supported link modes
    
    [ Upstream commit c62041c5baa9ded3bc6fd38d3f724de70683b489 ]
    
    The 1/10GbaseT modes were set up for cards with SFP+ cages in
    3497ed8c852a5 ("sfc: report supported link speeds on SFP connections").
    10GbaseT was likely used since no 10G fibre mode existed.
    
    The missing fibre modes for 1/10G were added to ethtool.h in 5711a9822144
    ("net: ethtool: add support for 1000BaseX and missing 10G link modes")
    shortly thereafter.
    
    The user guide available at https://support-nic.xilinx.com/wp/drivers
    lists support for the following cable and transceiver types in section 2.9:
    - QSFP28 100G Direct Attach Cables
    - QSFP28 100G SR Optical Transceivers (with SR4 modules listed)
    - SFP28 25G Direct Attach Cables
    - SFP28 25G SR Optical Transceivers
    - QSFP+ 40G Direct Attach Cables
    - QSFP+ 40G Active Optical Cables
    - QSFP+ 40G SR4 Optical Transceivers
    - QSFP+ to SFP+ Breakout Direct Attach Cables
    - QSFP+ to SFP+ Breakout Active Optical Cables
    - SFP+ 10G Direct Attach Cables
    - SFP+ 10G SR Optical Transceivers
    - SFP+ 10G LR Optical Transceivers
    - SFP 1000BASE‐T Transceivers
    - 1G Optical Transceivers
    (From user guide issue 28. Issue 16 which also includes older cards like
    SFN5xxx/SFN6xxx has matching lists for 1/10/40G transceiver types.)
    
    Regarding SFP+ 10GBASE‐T transceivers the latest guide says:
    "Solarflare adapters do not support 10GBASE‐T transceiver modules."
    
    Tested using SFN5122F-R7 (with 2 SFP+ ports). Supported link modes do not change
    depending on module used (tested with 1000BASE-T, 1000BASE-BX10, 10GBASE-LR).
    Before:
    
    $ ethtool ext
    Settings for ext:
            Supported ports: [ FIBRE ]
            Supported link modes:   1000baseT/Full
                                    10000baseT/Full
            Supported pause frame use: Symmetric Receive-only
            Supports auto-negotiation: No
            Supported FEC modes: Not reported
            Advertised link modes:  Not reported
            Advertised pause frame use: No
            Advertised auto-negotiation: No
            Advertised FEC modes: Not reported
            Link partner advertised link modes:  Not reported
            Link partner advertised pause frame use: No
            Link partner advertised auto-negotiation: No
            Link partner advertised FEC modes: Not reported
            Speed: 1000Mb/s
            Duplex: Full
            Auto-negotiation: off
            Port: FIBRE
            PHYAD: 255
            Transceiver: internal
            Current message level: 0x000020f7 (8439)
                                   drv probe link ifdown ifup rx_err tx_err hw
            Link detected: yes
    
    After:
    
    $ ethtool ext
    Settings for ext:
            Supported ports: [ FIBRE ]
            Supported link modes:   1000baseT/Full
                                    1000baseX/Full
                                    10000baseCR/Full
                                    10000baseSR/Full
                                    10000baseLR/Full
            Supported pause frame use: Symmetric Receive-only
            Supports auto-negotiation: No
            Supported FEC modes: Not reported
            Advertised link modes:  Not reported
            Advertised pause frame use: No
            Advertised auto-negotiation: No
            Advertised FEC modes: Not reported
            Link partner advertised link modes:  Not reported
            Link partner advertised pause frame use: No
            Link partner advertised auto-negotiation: No
            Link partner advertised FEC modes: Not reported
            Speed: 1000Mb/s
            Duplex: Full
            Auto-negotiation: off
            Port: FIBRE
            PHYAD: 255
            Transceiver: internal
            Supports Wake-on: g
            Wake-on: d
            Current message level: 0x000020f7 (8439)
                                   drv probe link ifdown ifup rx_err tx_err hw
            Link detected: yes
    
    Signed-off-by: Erik Ekman <erik@kryo.se>
    Acked-by: Martin Habets <habetsm.xilinx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7986fdbbe0090d208a2299d432f806979f6611b2
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Oct 18 14:32:57 2021 +0000

    cavium: Fix return values of the probe function
    
    [ Upstream commit c69b2f46876825c726bd8a97c7fa852d8932bc32 ]
    
    During the process of driver probing, the probe function should return < 0
    for failure, otherwise, the kernel will treat value > 0 as success.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad01685177ce41afeab8c878405935c817487227
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Oct 18 14:20:38 2021 +0000

    mISDN: Fix return values of the probe function
    
    [ Upstream commit e211210098cb7490db2183d725f5c0f10463a704 ]
    
    During the process of driver probing, the probe function should return < 0
    for failure, otherwise, the kernel will treat value > 0 as success.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6cb5e09e16a049ac7f5d44d5cde0f65c72bda83
Author: Dmitry Bogdanov <d.bogdanov@yadro.com>
Date:   Mon Oct 18 15:26:50 2021 +0300

    scsi: qla2xxx: Fix unmap of already freed sgl
    
    [ Upstream commit 4a8f71014b4d56c4fb287607e844c0a9f68f46d9 ]
    
    The sgl is freed in the target stack in target_release_cmd_kref() before
    calling qlt_free_cmd() but there is an unmap of sgl in qlt_free_cmd() that
    causes a panic if sgl is not yet DMA unmapped:
    
    NIP dma_direct_unmap_sg+0xdc/0x180
    LR  dma_direct_unmap_sg+0xc8/0x180
    Call Trace:
     ql_dbg_prefix+0x68/0xc0 [qla2xxx] (unreliable)
     dma_unmap_sg_attrs+0x54/0xf0
     qlt_unmap_sg.part.19+0x54/0x1c0 [qla2xxx]
     qlt_free_cmd+0x124/0x1d0 [qla2xxx]
     tcm_qla2xxx_release_cmd+0x4c/0xa0 [tcm_qla2xxx]
     target_put_sess_cmd+0x198/0x370 [target_core_mod]
     transport_generic_free_cmd+0x6c/0x1b0 [target_core_mod]
     tcm_qla2xxx_complete_free+0x6c/0x90 [tcm_qla2xxx]
    
    The sgl may be left unmapped in error cases of response sending.  For
    instance, qlt_rdy_to_xfer() maps sgl and exits when session is being
    deleted keeping the sgl mapped.
    
    This patch removes use-after-free of the sgl and ensures that the sgl is
    unmapped for any command that was not sent to firmware.
    
    Link: https://lore.kernel.org/r/20211018122650.11846-1-d.bogdanov@yadro.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77fee241e6eb95a3ef317a1243e4a6f0f439f9d2
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Oct 18 01:56:21 2021 +0000

    scsi: qla2xxx: Return -ENOMEM if kzalloc() fails
    
    [ Upstream commit 06634d5b6e923ed0d4772aba8def5a618f44c7fe ]
    
    The driver probing function should return < 0 for failure, otherwise
    kernel will treat value > 0 as success.
    
    Link: https://lore.kernel.org/r/1634522181-31166-1-git-send-email-zheyuma97@gmail.com
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 940783d08d1592619d3de15931de38c6da09cf13
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Oct 18 02:16:22 2021 +0000

    cavium: Return negative value when pci_alloc_irq_vectors() fails
    
    [ Upstream commit b2cddb44bddc1a9c5949a978bb454bba863264db ]
    
    During the process of driver probing, the probe function should return < 0
    for failure, otherwise, the kernel will treat value > 0 as success.
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75710d583cc4ccdfad1d94078ab8368a7353a5df
Author: Davide Baldo <davide@baldo.me>
Date:   Fri Oct 15 09:21:22 2021 +0200

    ALSA: hda/realtek: Fixes HP Spectre x360 15-eb1xxx speakers
    
    [ Upstream commit d94befbb5ae379f6dfd4fa6d460eacc09fa7b9c3 ]
    
    In laptop 'HP Spectre x360 Convertible 15-eb1xxx/8811' both front and
    rear speakers are silent, this patch fixes that by overriding the pin
    layout and by initializing the amplifier which needs a GPIO pin to be
    set to 1 then 0, similar to the existing HP Spectre x360 14 model.
    
    In order to have volume control, both front and rear speakers were
    forced to use the DAC1.
    
    This patch also correctly map the mute LED but since there is no
    microphone on/off switch exposed by the alsa subsystem it never turns
    on by itself.
    
    There are still known audio issues in this laptop: headset microphone
    doesn't work, the button to mute/unmute microphone is not yet mapped,
    the LED of the mute/unmute speakers doesn't seems to be exposed via
    GPIO and never turns on.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=213953
    Signed-off-by: Davide Baldo <davide@baldo.me>
    Link: https://lore.kernel.org/r/20211015072121.5287-1-davide@baldo.me
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92556e3c2b2ed414225282b0024868b65ba3aafc
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Oct 9 14:58:40 2021 +0800

    ASoC: soc-core: fix null-ptr-deref in snd_soc_del_component_unlocked()
    
    [ Upstream commit c448b7aa3e66042fc0f849d9a0fb90d1af82e948 ]
    
    'component' is allocated in snd_soc_register_component(), but component->list
    is not initalized, this may cause snd_soc_del_component_unlocked() deref null
    ptr in the error handing case.
    
    KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
    RIP: 0010:__list_del_entry_valid+0x81/0xf0
    Call Trace:
     snd_soc_del_component_unlocked+0x69/0x1b0 [snd_soc_core]
     snd_soc_add_component.cold+0x54/0x6c [snd_soc_core]
     snd_soc_register_component+0x70/0x90 [snd_soc_core]
     devm_snd_soc_register_component+0x5e/0xd0 [snd_soc_core]
     tas2552_probe+0x265/0x320 [snd_soc_tas2552]
     ? tas2552_component_probe+0x1e0/0x1e0 [snd_soc_tas2552]
     i2c_device_probe+0xa31/0xbe0
    
    Fix by adding INIT_LIST_HEAD() to snd_soc_component_initialize().
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211009065840.3196239-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73199aadcd5c56be232902debe74e2d6a4080313
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Oct 8 17:11:04 2021 -0700

    x86/irq: Ensure PI wakeup handler is unregistered before module unload
    
    commit 6ff53f6a438f72998f56e82e76694a1df9d1ea2c upstream.
    
    Add a synchronize_rcu() after clearing the posted interrupt wakeup handler
    to ensure all readers, i.e. in-flight IRQ handlers, see the new handler
    before returning to the caller.  If the caller is an exiting module and
    is unregistering its handler, failure to wait could result in the IRQ
    handler jumping into an unloaded module.
    
    The registration path doesn't require synchronization, as it's the
    caller's responsibility to not generate interrupts it cares about until
    after its handler is registered.
    
    Fixes: f6b3c72c2366 ("x86/irq: Define a global vector for VT-d Posted-Interrupts")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20211009001107.3936588-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df8a74fc15ea59bdd1a1aebc8b1187370576e4e1
Author: Jane Malalane <jane.malalane@citrix.com>
Date:   Thu Oct 21 11:47:44 2021 +0100

    x86/cpu: Fix migration safety with X86_BUG_NULL_SEL
    
    commit 415de44076640483648d6c0f6d645a9ee61328ad upstream.
    
    Currently, Linux probes for X86_BUG_NULL_SEL unconditionally which
    makes it unsafe to migrate in a virtualised environment as the
    properties across the migration pool might differ.
    
    To be specific, the case which goes wrong is:
    
    1. Zen1 (or earlier) and Zen2 (or later) in a migration pool
    2. Linux boots on Zen2, probes and finds the absence of X86_BUG_NULL_SEL
    3. Linux is then migrated to Zen1
    
    Linux is now running on a X86_BUG_NULL_SEL-impacted CPU while believing
    that the bug is fixed.
    
    The only way to address the problem is to fully trust the "no longer
    affected" CPUID bit when virtualised, because in the above case it would
    be clear deliberately to indicate the fact "you might migrate to
    somewhere which has this behaviour".
    
    Zen3 adds the NullSelectorClearsBase CPUID bit to indicate that loading
    a NULL segment selector zeroes the base and limit fields, as well as
    just attributes. Zen2 also has this behaviour but doesn't have the NSCB
    bit.
    
     [ bp: Minor touchups. ]
    
    Signed-off-by: Jane Malalane <jane.malalane@citrix.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    CC: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20211021104744.24126-1-jane.malalane@citrix.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 115810a265273c052e754af60ab4faed908838de
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Fri Oct 15 12:24:16 2021 -0500

    x86/sme: Use #define USE_EARLY_PGTABLE_L5 in mem_encrypt_identity.c
    
    commit e7d445ab26db833d6640d4c9a08bee176777cc82 upstream.
    
    When runtime support for converting between 4-level and 5-level pagetables
    was added to the kernel, the SME code that built pagetables was updated
    to use the pagetable functions, e.g. p4d_offset(), etc., in order to
    simplify the code. However, the use of the pagetable functions in early
    boot code requires the use of the USE_EARLY_PGTABLE_L5 #define in order to
    ensure that the proper definition of pgtable_l5_enabled() is used.
    
    Without the #define, pgtable_l5_enabled() is #defined as
    cpu_feature_enabled(X86_FEATURE_LA57). In early boot, the CPU features
    have not yet been discovered and populated, so pgtable_l5_enabled() will
    return false even when 5-level paging is enabled. This causes the SME code
    to always build 4-level pagetables to perform the in-place encryption.
    If 5-level paging is enabled, switching to the SME pagetables results in
    a page-fault that kills the boot.
    
    Adding the #define results in pgtable_l5_enabled() using the
    __pgtable_l5_enabled variable set in early boot and the SME code building
    pagetables for the proper paging level.
    
    Fixes: aad983913d77 ("x86/mm/encrypt: Simplify sme_populate_pgd() and sme_populate_pgd_large()")
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: <stable@vger.kernel.org> # 4.18.x
    Link: https://lkml.kernel.org/r/2cb8329655f5c753905812d951e212022a480475.1634318656.git.thomas.lendacky@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b05eea1bcb363dc2aa139ddb1b1876fb6ef85977
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Tue Nov 2 11:10:37 2021 +0100

    fuse: fix page stealing
    
    commit 712a951025c0667ff00b25afc360f74e639dfabe upstream.
    
    It is possible to trigger a crash by splicing anon pipe bufs to the fuse
    device.
    
    The reason for this is that anon_pipe_buf_release() will reuse buf->page if
    the refcount is 1, but that page might have already been stolen and its
    flags modified (e.g. PG_lru added).
    
    This happens in the unlikely case of fuse_dev_splice_write() getting around
    to calling pipe_buf_release() after a page has been stolen, added to the
    page cache and removed from the page cache.
    
    Fix by calling pipe_buf_release() right after the page was inserted into
    the page cache.  In this case the page has an elevated refcount so any
    release function will know that the page isn't reusable.
    
    Reported-by: Frank Dinoff <fdinoff@google.com>
    Link: https://lore.kernel.org/r/CAAmZXrsGg2xsP1CK+cbuEMumtrqdvD-NKnWzhNcvn71RV3c1yw@mail.gmail.com/
    Fixes: dd3bb14f44a6 ("fuse: support splice() writing to fuse device")
    Cc: <stable@vger.kernel.org> # v2.6.35
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d81e341fb13ad8cd21e10d795c577c060dab130d
Author: yangerkun <yangerkun@huawei.com>
Date:   Fri Sep 3 14:27:48 2021 +0800

    ext4: refresh the ext4_ext_path struct after dropping i_data_sem.
    
    commit 1811bc401aa58c7bdb0df3205aa6613b49d32127 upstream.
    
    After we drop i_data sem, we need to reload the ext4_ext_path
    structure since the extent tree can change once i_data_sem is
    released.
    
    This addresses the BUG:
    
    [52117.465187] ------------[ cut here ]------------
    [52117.465686] kernel BUG at fs/ext4/extents.c:1756!
    ...
    [52117.478306] Call Trace:
    [52117.478565]  ext4_ext_shift_extents+0x3ee/0x710
    [52117.479020]  ext4_fallocate+0x139c/0x1b40
    [52117.479405]  ? __do_sys_newfstat+0x6b/0x80
    [52117.479805]  vfs_fallocate+0x151/0x4b0
    [52117.480177]  ksys_fallocate+0x4a/0xa0
    [52117.480533]  __x64_sys_fallocate+0x22/0x30
    [52117.480930]  do_syscall_64+0x35/0x80
    [52117.481277]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [52117.481769] RIP: 0033:0x7fa062f855ca
    
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20210903062748.4118886-4-yangerkun@huawei.com
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4089432dc0302a981bfc7e3fe63885eb0a6c8589
Author: yangerkun <yangerkun@huawei.com>
Date:   Fri Sep 3 14:27:47 2021 +0800

    ext4: ensure enough credits in ext4_ext_shift_path_extents
    
    commit 4268496e48dc681cfa53b92357314b5d7221e625 upstream.
    
    Like ext4_ext_rm_leaf, we can ensure that there are enough credits
    before every call that will consume credits.  As part of this fix we
    fold the functionality of ext4_access_path() into
    ext4_ext_shift_path_extents().  This change is needed as a preparation
    for the next bugfix patch.
    
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20210903062748.4118886-3-yangerkun@huawei.com
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa21b7e3d3205322d11dbced09941702ef308d8d
Author: Shaoying Xu <shaoyi@amazon.com>
Date:   Thu Sep 2 16:44:12 2021 +0000

    ext4: fix lazy initialization next schedule time computation in more granular unit
    
    commit 39fec6889d15a658c3a3ebb06fd69d3584ddffd3 upstream.
    
    Ext4 file system has default lazy inode table initialization setup once
    it is mounted. However, it has issue on computing the next schedule time
    that makes the timeout same amount in jiffies but different real time in
    secs if with various HZ values. Therefore, fix by measuring the current
    time in a more granular unit nanoseconds and make the next schedule time
    independent of the HZ value.
    
    Fixes: bfff68738f1c ("ext4: add support for lazy inode table initialization")
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20210902164412.9994-2-shaoyi@amazon.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 782025948bc6ab36ebad2de20816b0302a3269a9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 5 10:15:17 2021 +0100

    ALSA: timer: Unconditionally unlink slave instances, too
    
    commit ffdd98277f0a1d15a67a74ae09bee713df4c0dbc upstream.
    
    Like the previous fix (commit c0317c0e8709 "ALSA: timer: Fix
    use-after-free problem"), we have to unlink slave timer instances
    immediately at snd_timer_stop(), too.  Otherwise it may leave a stale
    entry in the list if the slave instance is freed before actually
    running.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211105091517.21733-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b980ce4ebb8b8d79b71b63f374607fa434a1d9dd
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Wed Nov 3 03:35:17 2021 +0000

    ALSA: timer: Fix use-after-free problem
    
    commit c0317c0e87094f5b5782b6fdef5ae0a4b150496c upstream.
    
    When the timer instance was add into ack_list but was not currently in
    process, the user could stop it via snd_timer_stop1() without delete it
    from the ack_list. Then the user could free the timer instance and when
    it was actually processed UAF occurred.
    
    This issue could be reproduced via testcase snd_timer01 in ltp - running
    several instances of that testcase at the same time.
    
    What I actually met was that the ack_list of the timer broken and the
    kernel went into deadloop with irqoff. That could be detected by
    hardlockup detector on board or when we run it on qemu, we could use gdb
    to dump the ack_list when the console has no response.
    
    To fix this issue, we delete the timer instance from ack_list and
    active_list unconditionally in snd_timer_stop1().
    
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211103033517.80531-1-wangwensheng4@huawei.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c6fd525044c20082233f15312f62a9aee18ec38
Author: Austin Kim <austin.kim@lge.com>
Date:   Tue Nov 9 00:37:42 2021 +0000

    ALSA: synth: missing check for possible NULL after the call to kstrdup
    
    commit d159037abbe3412285c271bdfb9cdf19e62678ff upstream.
    
    If kcalloc() return NULL due to memory starvation, it is possible for
    kstrdup() to return NULL in similar case. So add null check after the call
    to kstrdup() is made.
    
    [ minor coding-style fix by tiwai ]
    
    Signed-off-by: Austin Kim <austin.kim@lge.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211109003742.GA5423@raspberrypi
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecd536c57ab71ed1b06ebbc6231101545127cc0b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 10 20:46:33 2021 +0100

    ALSA: hda: Free card instance properly at probe errors
    
    commit 39173303c83859723dab32c2abfb97296d6af3bf upstream.
    
    The recent change in hda-intel driver to allow repeated probes
    surfaced a problem that has been hidden until; the probe process in
    the work calls azx_free() at the error path, and this skips the card
    free process that eventually releases codec instances.  As a result,
    we get a kernel WARNING like:
    
      snd_hda_intel 0000:00:1f.3: Cannot probe codecs, giving up
      ------------[ cut here ]------------
      WARNING: CPU: 14 PID: 186 at sound/hda/hdac_bus.c:73
      ....
    
    For fixing this, we need to call snd_card_free() instead of
    azx_free().  Additionally, the device drvdata has to be cleared, as
    the driver binding itself is still active.  Then the PM and other
    driver callbacks will ignore the procedure.
    
    Fixes: c0f1886de7e1 ("ALSA: hda: intel: Allow repeatedly probing on codec configuration errors")
    Reported-and-tested-by: Scott Branden <scott.branden@broadcom.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/063e2397-7edb-5f48-7b0d-618b938d9dd8@broadcom.com
    Link: https://lore.kernel.org/r/20211110194633.19098-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f503a25a3de3d8ce434277edee518555c6e89465
Author: Alexander Tsoy <alexander@tsoy.me>
Date:   Sat Oct 30 20:43:08 2021 +0300

    ALSA: usb-audio: Add registration quirk for JBL Quantum 400
    
    commit 763d92ed5dece7d439fc28a88b2d2728d525ffd9 upstream.
    
    Add another device ID for JBL Quantum 400. It requires the same quirk as
    other JBL Quantum devices.
    
    Signed-off-by: Alexander Tsoy <alexander@tsoy.me>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211030174308.1011825-1-alexander@tsoy.me
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9259518fab5bc80f88c1c902bd57b6807377fba8
Author: Jason Ormes <skryking@gmail.com>
Date:   Sat Oct 30 15:04:05 2021 -0500

    ALSA: usb-audio: Line6 HX-Stomp XL USB_ID for 48k-fixed quirk
    
    commit 8f27b689066113a3e579d4df171c980c54368c4e upstream.
    
    Adding the Line6 HX-Stomp XL USB_ID as it needs this fixed frequency
    quirk as well.
    
    The device is basically just the HX-Stomp with some more buttons on
    the face.  I've done some recording with it after adding it, and it
    seems to function properly with this fix.  The Midi features appear to
    be working as well.
    
    [ a coding style fix and patch reformat by tiwai ]
    
    Signed-off-by: Jason Ormes <skryking@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211030200405.1358678-1-skryking@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c7a3f2d79f73edf5a8fa1d57edefaec617b5db3
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:11:42 2021 +0200

    ALSA: line6: fix control and interrupt message timeouts
    
    commit f4000b58b64344871d7b27c05e73932f137cfef6 upstream.
    
    USB control and interrupt message timeouts are specified in milliseconds
    and should specifically not vary with CONFIG_HZ.
    
    Fixes: 705ececd1c60 ("Staging: add line6 usb driver")
    Cc: stable@vger.kernel.org      # 2.6.30
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025121142.6531-3-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21f9c02a4dedca2f9011bbeaf1159b04d9931a34
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 14:11:41 2021 +0200

    ALSA: 6fire: fix control and bulk message timeouts
    
    commit 9b371c6cc37f954360989eec41c2ddc5a6b83917 upstream.
    
    USB control and bulk message timeouts are specified in milliseconds and
    should specifically not vary with CONFIG_HZ.
    
    Fixes: c6d43ba816d1 ("ALSA: usb/6fire - Driver for TerraTec DMX 6Fire USB")
    Cc: stable@vger.kernel.org      # 2.6.39
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211025121142.6531-2-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e4c288a74a3238b5e8ce63cb984ec62a3fd6495
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 26 11:54:01 2021 +0200

    ALSA: ua101: fix division by zero at probe
    
    commit 55f261b73a7e1cb254577c3536cef8f415de220a upstream.
    
    Add the missing endpoint max-packet sanity check to probe() to avoid
    division by zero in alloc_stream_buffers() in case a malicious device
    has broken descriptors (or when doing descriptor fuzz testing).
    
    Note that USB core will reject URBs submitted for endpoints with zero
    wMaxPacketSize but that drivers doing packet-size calculations still
    need to handle this (cf. commit 2548288b4fb0 ("USB: Fix: Don't skip
    endpoint descriptors with maxpacket=0")).
    
    Fixes: 63978ab3e3e9 ("sound: add Edirol UA-101 support")
    Cc: stable@vger.kernel.org      # 2.6.34
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20211026095401.26522-1-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f9e9c389e107e2c4f262beeab483d8947d1ab4e
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Nov 10 22:40:32 2021 +0800

    ALSA: hda/realtek: Add quirk for HP EliteBook 840 G7 mute LED
    
    commit c058493df7edcef8f48c1494d9a84218519f966b upstream.
    
    The mute and micmute LEDs don't work on HP EliteBook 840 G7. The same
    quirk for other HP laptops can let LEDs work, so apply it.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211110144033.118451-1-kai.heng.feng@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62b189f9f3c51c986595904399011001b06a43cb
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Nov 7 09:33:39 2021 +0100

    ALSA: hda/realtek: Add quirk for ASUS UX550VE
    
    commit 4fad4fb9871b43389e4f4bead18ec693064697bb upstream.
    
    ASUS UX550VE (SSID 1043:1970) requires a similar workaround for
    managing the routing of the 4 speakers like some other ASUS models.
    Add a corresponding quirk entry for fixing it.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=212641
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211107083339.18013-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a770cb746bddce4ebd985f9e560f132b7bdec089
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Thu Nov 4 16:57:26 2021 +0100

    ALSA: hda/realtek: Add a quirk for Acer Spin SP513-54N
    
    commit 2a5bb694488bb6593066d46881bfd9d07edd1628 upstream.
    
    Another model requires ALC255_FIXUP_ACER_MIC_NO_PRESENCE fixup.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211853
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211104155726.2090997-1-perex@perex.cz
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88bcfcc50d0ead805cb1ab5791982e2589da3997
Author: Jeremy Soller <jeremy@system76.com>
Date:   Tue Nov 2 11:21:04 2021 -0600

    ALSA: hda/realtek: Headset fixup for Clevo NH77HJQ
    
    commit 1278cc5ac2f96bab50dd55c8c05e0a6a77ce323e upstream.
    
    On Clevo NH77HJ, NH77HP, and their 15" variants, there is a headset
    microphone input attached to 0x19 that does not have a jack detect. In
    order to get it working, the pin configuration needs to be set
    correctly, and a new ALC256_FIXUP_SYSTEM76_MIC_NO_PRESENCE fixup is
    applied. This is similar to the existing System76 quirk for ALC293, but
    for ALC256.
    
    Signed-off-by: Jeremy Soller <jeremy@system76.com>
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211102172104.10610-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0288f838a2e3a7a6814911c82a25b1ff7dde2e52
Author: Tim Crawford <tcrawford@system76.com>
Date:   Mon Nov 1 10:21:34 2021 -0600

    ALSA: hda/realtek: Add quirk for Clevo PC70HS
    
    commit dbfe83507cf4ea66ce4efee2ac14c5ad420e31d3 upstream.
    
    Apply the PB51ED PCI quirk to the Clevo PC70HS. Fixes audio output from
    the internal speakers.
    
    Signed-off-by: Tim Crawford <tcrawford@system76.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211101162134.5336-1-tcrawford@system76.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d0e5d2eaff1c065116668582808003b4cd88780
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Oct 28 09:09:11 2021 +0200

    ALSA: hda/realtek: Add a quirk for HP OMEN 15 mute LED
    
    commit 375f8426ed994addd2be4d76febc946a6fdd8280 upstream.
    
    HP OMEN 15 laptop requires the quirk to fiddle with COEF 0x0b bit 2
    for toggling the mute LED.  It's already implemented for other HP
    laptops, and we just need to add a proper fixup entry.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=214735
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211028070911.18891-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0750e98010a162191f7cb01f177e8df162af814
Author: Johnathon Clark <john.clark@cantab.net>
Date:   Wed Oct 20 14:12:51 2021 +0100

    ALSA: hda/realtek: Fix mic mute LED for the HP Spectre x360 14
    
    commit 5fc462c3aaad601d5089fd5588a5799896a6937d upstream.
    
    On the 'HP Spectre x360 Convertible 14-ea0xx' the microphone mute led is
    controlled by GPIO 0x04. The speaker mute LED does not seem to be
    exposed by GPIO and is there not set.
    
    [ a slight coding-style fix by tiwai ]
    
    Fixes: c3bb2b521944 ("ALSA: hda/realtek: Quirk for HP Spectre x360 14 amp setup")
    Signed-off-by: Johnathon Clark <john.clark@cantab.net>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211020131253.35894-1-john.clark@cantab.net
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2b3dbc9fd241af29c36225e107d3ffa912ec97b
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Fri Jun 18 14:29:03 2021 +0200

    media: v4l2-ioctl: Fix check_ext_ctrls
    
    commit 861f92cb9160b14beef0ada047384c2340701ee2 upstream.
    
    Drivers that do not use the ctrl-framework use this function instead.
    
    Fix the following issues:
    
    - Do not check for multiple classes when getting the DEF_VAL.
    - Return -EINVAL for request_api calls
    - Default value cannot be changed, return EINVAL as soon as possible.
    - Return the right error_idx
    [If an error is found when validating the list of controls passed with
    VIDIOC_G_EXT_CTRLS, then error_idx shall be set to ctrls->count to
    indicate to userspace that no actual hardware was touched.
    It would have been much nicer of course if error_idx could point to the
    control index that failed the validation, but sadly that's not how the
    API was designed.]
    
    Fixes v4l2-compliance:
    Control ioctls (Input 0):
            warn: v4l2-test-controls.cpp(834): error_idx should be equal to count
            warn: v4l2-test-controls.cpp(855): error_idx should be equal to count
                    fail: v4l2-test-controls.cpp(813): doioctl(node, VIDIOC_G_EXT_CTRLS, &ctrls)
            test VIDIOC_G/S/TRY_EXT_CTRLS: FAIL
    Buffer ioctls (Input 0):
                    fail: v4l2-test-buffers.cpp(1994): ret != EINVAL && ret != EBADR && ret != ENOTTY
            test Requests: FAIL
    
    Cc: stable@vger.kernel.org
    Fixes: 6fa6f831f095 ("media: v4l2-ctrls: add core request support")
    Suggested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 151eff588043db6383ec062120c79c11ed5908c5
Author: Sean Young <sean@mess.org>
Date:   Wed Sep 15 18:14:07 2021 +0200

    media: ir-kbd-i2c: improve responsiveness of hauppauge zilog receivers
    
    commit c73ba202a851c0b611ef2c25e568fadeff5e667f upstream.
    
    The IR receiver has two issues:
    
     - Sometimes there is no response to a button press
     - Sometimes a button press is repeated when it should not have been
    
    Hanging the polling interval fixes this behaviour.
    
    Link: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=994050
    
    Cc: stable@vger.kernel.org
    Suggested-by: Joaquín Alberto Calderón Pozo <kini_calderon@hotmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71a137376b6496bedc3e26574ebf451bf97107a0
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Fri Oct 8 11:04:23 2021 +0100

    media: rkvdec: Support dynamic resolution changes
    
    commit 0887e9e152efbd3601d6c907e90033d25067277d upstream.
    
    The mem-to-mem stateless decoder API specifies support for dynamic
    resolution changes. In particular, the decoder should accept format
    changes on the OUTPUT queue even when buffers have been allocated,
    as long as it is not streaming.
    
    Relax restrictions for S_FMT as described in the previous paragraph,
    and as long as the codec format remains the same. This aligns it with
    the Hantro and Cedrus decoders. This change was mostly based on commit
    ae02d49493b5 ("media: hantro: Fix s_fmt for dynamic resolution changes").
    
    Since rkvdec_s_fmt() is now just a wrapper around the output/capture
    variants without any additional shared functionality, drop the wrapper
    and call the respective functions directly.
    
    Fixes: cd33c830448b ("media: rkvdec: Add the rkvdec driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2b5126a777b61bfca2472fcfc3bdc920da61844
Author: Sean Young <sean@mess.org>
Date:   Sun Oct 17 13:01:15 2021 +0100

    media: ite-cir: IR receiver stop working after receive overflow
    
    commit fdc881783099c6343921ff017450831c8766d12a upstream.
    
    On an Intel NUC6iSYK, no IR is reported after a receive overflow.
    
    When a receiver overflow occurs, this condition is only cleared by
    reading the fifo. Make sure we read anything in the fifo.
    
    Fixes: 28c7afb07ccf ("media: ite-cir: check for receive overflow")
    Suggested-by: Bryan Pass <bryan.pass@gmail.com>
    Tested-by: Bryan Pass <bryan.pass@gmail.com>
    Cc: stable@vger.kernel.org>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39275d2ec6ffbdb97d462e2529b3ae9e4da4bfca
Author: Chen-Yu Tsai <wenst@chromium.org>
Date:   Fri Oct 8 11:04:22 2021 +0100

    media: rkvdec: Do not override sizeimage for output format
    
    commit 298d8e8f7bcf023aceb60232d59b983255fec0df upstream.
    
    The rkvdec H.264 decoder currently overrides sizeimage for the output
    format. This causes issues when userspace requires and requests a larger
    buffer, but ends up with one of insufficient size.
    
    Instead, only provide a default size if none was requested. This fixes
    the video_decode_accelerator_tests from Chromium failing on the first
    frame due to insufficient buffer space. It also aligns the behavior
    of the rkvdec driver with the Hantro and Cedrus drivers.
    
    Fixes: cd33c830448b ("media: rkvdec: Add the rkvdec driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 949c5b6daa75aff41ff8861381be67337e133f5f
Author: Tang Bin <tangbin@cmss.chinamobile.com>
Date:   Thu Oct 21 09:34:22 2021 +0800

    crypto: s5p-sss - Add error handling in s5p_aes_probe()
    
    commit a472cc0dde3eb057db71c80f102556eeced03805 upstream.
    
    The function s5p_aes_probe() does not perform sufficient error
    checking after executing platform_get_resource(), thus fix it.
    
    Fixes: c2afad6c6105 ("crypto: s5p-sss - Add HASH support for Exynos")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Tang Bin <tangbin@cmss.chinamobile.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ac25cd2f4ec9c2feb2ab06442830bab8edf2b54
Author: jing yangyang <cgel.zte@gmail.com>
Date:   Thu Aug 19 19:30:16 2021 -0700

    firmware/psci: fix application of sizeof to pointer
    
    commit 2ac5fb35cd520ab1851c9a4816c523b65276052f upstream.
    
    sizeof when applied to a pointer typed expression gives the size of
    the pointer.
    
    ./drivers/firmware/psci/psci_checker.c:158:41-47: ERROR application of sizeof to pointer
    
    This issue was detected with the help of Coccinelle.
    
    Fixes: 7401056de5f8 ("drivers/firmware: psci_checker: stash and use topology_core_cpumask for hotplug tests")
    Cc: stable@vger.kernel.org
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: jing yangyang <jing.yangyang@zte.com.cn>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd189feebaf83849d220fefa39a1c2bfdbcd4406
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 8 08:33:57 2021 +0300

    tpm: Check for integer overflow in tpm2_map_response_body()
    
    commit a0bcce2b2a169e10eb265c8f0ebdd5ae4c875670 upstream.
    
    The "4 * be32_to_cpu(data->count)" multiplication can potentially
    overflow which would lead to memory corruption.  Add a check for that.
    
    Cc: stable@vger.kernel.org
    Fixes: 745b361e989a ("tpm: infrastructure for TPM spaces")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32498b8889c8d1f9b2b67f4e43e017c63359b03e
Author: Helge Deller <deller@gmx.de>
Date:   Tue Oct 5 00:27:49 2021 +0200

    parisc: Fix ptrace check on syscall return
    
    commit 8779e05ba8aaffec1829872ef9774a71f44f6580 upstream.
    
    The TIF_XXX flags are stored in the flags field in the thread_info
    struct (TI_FLAGS), not in the flags field of the task_struct structure
    (TASK_FLAGS).
    
    It seems this bug didn't generate any important side-effects, otherwise it
    wouldn't have went unnoticed for 12 years (since v2.6.32).
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Fixes: ecd3d4bc06e48 ("parisc: stop using task->ptrace for {single,block}step flags")
    Cc: Kyle McMartin <kyle@mcmartin.ca>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15b4142aea0a46fcb65dc2940909316996ee3334
Author: Helge Deller <deller@gmx.de>
Date:   Sun Oct 31 21:58:12 2021 +0100

    parisc: Fix set_fixmap() on PA1.x CPUs
    
    commit 6e866a462867b60841202e900f10936a0478608c upstream.
    
    Fix a kernel crash which happens on PA1.x CPUs while initializing the
    FTRACE/KPROBE breakpoints.  The PTE table entries for the fixmap area
    were not created correctly.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Fixes: ccfbc68d41c2 ("parisc: add set_fixmap()/clear_fixmap()")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 284ad310542ffb4e5c2acf11d8a6420b5b7b9cea
Author: Sungjong Seo <sj1557.seo@samsung.com>
Date:   Tue Oct 19 15:14:21 2021 +0900

    exfat: fix incorrect loading of i_blocks for large files
    
    commit 0c336d6e33f4bedc443404c89f43c91c8bd9ee11 upstream.
    
    When calculating i_blocks, there was a mistake that was masked with a
    32-bit variable. So i_blocks for files larger than 4 GiB had incorrect
    values. Mask with a 64-bit variable instead of 32-bit one.
    
    Fixes: 5f2aa075070c ("exfat: add inode operations")
    Cc: stable@vger.kernel.org # v5.7+
    Reported-by: Ganapathi Kamath <hgkamath@hotmail.com>
    Signed-off-by: Sungjong Seo <sj1557.seo@samsung.com>
    Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 823b487cfbfc80f4accb8e3bad23d02745bcf6f4
Author: Christian Löhle <CLoehle@hyperstone.com>
Date:   Thu Sep 16 05:59:19 2021 +0000

    mmc: dw_mmc: Dont wait for DRTO on Write RSP error
    
    commit 43592c8736e84025d7a45e61a46c3fa40536a364 upstream.
    
    Only wait for DRTO on reads, otherwise the driver hangs.
    
    The driver prevents sending CMD12 on response errors like CRCs. According
    to the comment this is because some cards have problems with this during
    the UHS tuning sequence. Unfortunately this workaround currently also
    applies for any command with data. On reads this will set the drto timer,
    which then triggers after a while. On writes this will not set any timer
    and the tasklet will not be scheduled again.
    
    I cannot test for the UHS workarounds need, but even if so, it should at
    most apply to reads. I have observed many hangs when CMD25 response
    contained a CRC error. This patch fixes this without touching the actual
    UHS tuning workaround.
    
    Signed-off-by: Christian Loehle <cloehle@hyperstone.com>
    Reviewed-by: Jaehoon Chung <jh80.chung@samsung.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/af8f8b8674ba4fcc9a781019e4aeb72c@hyperstone.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b24b669d3f99ec25e2c74de2c05156d9812c662
Author: Derong Liu <derong.liu@mediatek.com>
Date:   Fri Aug 27 15:15:37 2021 +0800

    mmc: mtk-sd: Add wait dma stop done flow
    
    commit 43e5fee317f4b0a48992b8b07935b1a3ac20ce84 upstream.
    
    We found this issue on a 5G platform, during CMDQ error handling, if DMA
    status is active when it call msdc_reset_hw(), it means mmc host hw reset
    and DMA transfer will be parallel, mmc host may access sram region
    unexpectedly. According to the programming guide of mtk-sd host, it needs
    to wait for dma stop done after set dma stop.
    
    This change should be applied to all SoCs.
    
    Signed-off-by: Derong Liu <derong.liu@mediatek.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210827071537.1034-1-derong.liu@mediatek.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1d31266de3ddd5c5bc54f8e917c4f20453156ac
Author: Quinn Tran <qutran@marvell.com>
Date:   Wed Sep 8 09:46:21 2021 -0700

    scsi: qla2xxx: Fix use after free in eh_abort path
    
    commit 3d33b303d4f3b74a71bede5639ebba3cfd2a2b4d upstream.
    
    In eh_abort path driver prematurely exits the call to upper layer. Check
    whether command is aborted / completed by firmware before exiting the call.
    
    9 [ffff8b1ebf803c00] page_fault at ffffffffb0389778
      [exception RIP: qla2x00_status_entry+0x48d]
      RIP: ffffffffc04fa62d  RSP: ffff8b1ebf803cb0  RFLAGS: 00010082
      RAX: 00000000ffffffff  RBX: 00000000000e0000  RCX: 0000000000000000
      RDX: 0000000000000000  RSI: 00000000000013d8  RDI: fffff3253db78440
      RBP: ffff8b1ebf803dd0   R8: ffff8b1ebcd9b0c0   R9: 0000000000000000
      R10: ffff8b1e38a30808  R11: 0000000000001000  R12: 00000000000003e9
      R13: 0000000000000000  R14: ffff8b1ebcd9d740  R15: 0000000000000028
      ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
    10 [ffff8b1ebf803cb0] enqueue_entity at ffffffffafce708f
    11 [ffff8b1ebf803d00] enqueue_task_fair at ffffffffafce7b88
    12 [ffff8b1ebf803dd8] qla24xx_process_response_queue at ffffffffc04fc9a6
    [qla2xxx]
    13 [ffff8b1ebf803e78] qla24xx_msix_rsp_q at ffffffffc04ff01b [qla2xxx]
    14 [ffff8b1ebf803eb0] __handle_irq_event_percpu at ffffffffafd50714
    
    Link: https://lore.kernel.org/r/20210908164622.19240-10-njavali@marvell.com
    Fixes: f45bca8c5052 ("scsi: qla2xxx: Fix double scsi_done for abort path")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Co-developed-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: David Jeffery <djeffery@redhat.com>
    Co-developed-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Quinn Tran <qutran@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37b15db1d87c8b5d90b2a0ad67eaa8510eb69d02
Author: Arun Easi <aeasi@marvell.com>
Date:   Wed Sep 8 09:46:18 2021 -0700

    scsi: qla2xxx: Fix kernel crash when accessing port_speed sysfs file
    
    commit 3ef68d4f0c9e7cb589ae8b70f07d77f528105331 upstream.
    
    Kernel crashes when accessing port_speed sysfs file.  The issue happens on
    a CNA when the local array was accessed beyond bounds. Fix this by changing
    the lookup.
    
    BUG: unable to handle kernel paging request at 0000000000004000
    PGD 0 P4D 0
    Oops: 0000 [#1] SMP PTI
    CPU: 15 PID: 455213 Comm: sosreport Kdump: loaded Not tainted
    4.18.0-305.7.1.el8_4.x86_64 #1
    RIP: 0010:string_nocheck+0x12/0x70
    Code: 00 00 4c 89 e2 be 20 00 00 00 48 89 ef e8 86 9a 00 00 4c 01
    e3 eb 81 90 49 89 f2 48 89 ce 48 89 f8 48 c1 fe 30 66 85 f6 74 4f <44> 0f b6 0a
    45 84 c9 74 46 83 ee 01 41 b8 01 00 00 00 48 8d 7c 37
    RSP: 0018:ffffb5141c1afcf0 EFLAGS: 00010286
    RAX: ffff8bf4009f8000 RBX: ffff8bf4009f9000 RCX: ffff0a00ffffff04
    RDX: 0000000000004000 RSI: ffffffffffffffff RDI: ffff8bf4009f8000
    RBP: 0000000000004000 R08: 0000000000000001 R09: ffffb5141c1afb84
    R10: ffff8bf4009f9000 R11: ffffb5141c1afce6 R12: ffff0a00ffffff04
    R13: ffffffffc08e21aa R14: 0000000000001000 R15: ffffffffc08e21aa
    FS:  00007fc4ebfff700(0000) GS:ffff8c717f7c0000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000004000 CR3: 000000edfdee6006 CR4: 00000000001706e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      string+0x40/0x50
      vsnprintf+0x33c/0x520
      scnprintf+0x4d/0x90
      qla2x00_port_speed_show+0xb5/0x100 [qla2xxx]
      dev_attr_show+0x1c/0x40
      sysfs_kf_seq_show+0x9b/0x100
      seq_read+0x153/0x410
      vfs_read+0x91/0x140
      ksys_read+0x4f/0xb0
      do_syscall_64+0x5b/0x1a0
      entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    Link: https://lore.kernel.org/r/20210908164622.19240-7-njavali@marvell.com
    Fixes: 4910b524ac9e ("scsi: qla2xxx: Add support for setting port speed")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06cc8187dbb6218b746a2976c05cb8934a1ff728
Author: Tadeusz Struk <tadeusz.struk@linaro.org>
Date:   Wed Nov 3 10:06:59 2021 -0700

    scsi: core: Remove command size deduction from scsi_setup_scsi_cmnd()
    
    commit 703535e6ae1e94c89a9c1396b4c7b6b41160ef0c upstream.
    
    No need to deduce command size in scsi_setup_scsi_cmnd() anymore as
    appropriate checks have been added to scsi_fill_sghdr_rq() function and the
    cmd_len should never be zero here.  The code to do that wasn't correct
    anyway, as it used uninitialized cmd->cmnd, which caused a null-ptr-deref
    if the command size was zero as in the trace below. Fix this by removing
    the unneeded code.
    
    KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
    CPU: 0 PID: 1822 Comm: repro Not tainted 5.15.0 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04/01/2014
    Call Trace:
     blk_mq_dispatch_rq_list+0x7c7/0x12d0
     __blk_mq_sched_dispatch_requests+0x244/0x380
     blk_mq_sched_dispatch_requests+0xf0/0x160
     __blk_mq_run_hw_queue+0xe8/0x160
     __blk_mq_delay_run_hw_queue+0x252/0x5d0
     blk_mq_run_hw_queue+0x1dd/0x3b0
     blk_mq_sched_insert_request+0x1ff/0x3e0
     blk_execute_rq_nowait+0x173/0x1e0
     blk_execute_rq+0x15c/0x540
     sg_io+0x97c/0x1370
     scsi_ioctl+0xe16/0x28e0
     sd_ioctl+0x134/0x170
     blkdev_ioctl+0x362/0x6e0
     block_ioctl+0xb0/0xf0
     vfs_ioctl+0xa7/0xf0
     do_syscall_64+0x3d/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    ---[ end trace 8b086e334adef6d2 ]---
    Kernel panic - not syncing: Fatal exception
    
    Link: https://lore.kernel.org/r/20211103170659.22151-2-tadeusz.struk@linaro.org
    Fixes: 2ceda20f0a99 ("scsi: core: Move command size detection out of the fast path")
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: James E.J. Bottomley <jejb@linux.ibm.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: <linux-scsi@vger.kernel.org>
    Cc: <linux-kernel@vger.kernel.org>
    Cc: <stable@vger.kernel.org> # 5.15, 5.14, 5.10
    Reported-by: syzbot+5516b30f5401d4dcbcae@syzkaller.appspotmail.com
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Tadeusz Struk <tadeusz.struk@linaro.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d623bf1736b71563c039c67636398c7c6086445
Author: Jan Kara <jack@suse.cz>
Date:   Fri Nov 5 13:34:55 2021 -0700

    ocfs2: fix data corruption on truncate
    
    commit 839b63860eb3835da165642923120d305925561d upstream.
    
    Patch series "ocfs2: Truncate data corruption fix".
    
    As further testing has shown, commit 5314454ea3f ("ocfs2: fix data
    corruption after conversion from inline format") didn't fix all the data
    corruption issues the customer started observing after 6dbf7bb55598
    ("fs: Don't invalidate page buffers in block_write_full_page()") This
    time I have tracked them down to two bugs in ocfs2 truncation code.
    
    One bug (truncating page cache before clearing tail cluster and setting
    i_size) could cause data corruption even before 6dbf7bb55598, but before
    that commit it needed a race with page fault, after 6dbf7bb55598 it
    started to be pretty deterministic.
    
    Another bug (zeroing pages beyond old i_size) used to be harmless
    inefficiency before commit 6dbf7bb55598.  But after commit 6dbf7bb55598
    in combination with the first bug it resulted in deterministic data
    corruption.
    
    Although fixing only the first problem is needed to stop data
    corruption, I've fixed both issues to make the code more robust.
    
    This patch (of 2):
    
    ocfs2_truncate_file() did unmap invalidate page cache pages before
    zeroing partial tail cluster and setting i_size.  Thus some pages could
    be left (and likely have left if the cluster zeroing happened) in the
    page cache beyond i_size after truncate finished letting user possibly
    see stale data once the file was extended again.  Also the tail cluster
    zeroing was not guaranteed to finish before truncate finished causing
    possible stale data exposure.  The problem started to be particularly
    easy to hit after commit 6dbf7bb55598 "fs: Don't invalidate page buffers
    in block_write_full_page()" stopped invalidation of pages beyond i_size
    from page writeback path.
    
    Fix these problems by unmapping and invalidating pages in the page cache
    after the i_size is reduced and tail cluster is zeroed out.
    
    Link: https://lkml.kernel.org/r/20211025150008.29002-1-jack@suse.cz
    Link: https://lkml.kernel.org/r/20211025151332.11301-1-jack@suse.cz
    Fixes: ccd979bdbce9 ("[PATCH] OCFS2: The Second Oracle Cluster Filesystem")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39264eaa6d44df00e53d2f9b503c6439b7ec270c
Author: Damien Le Moal <damien.lemoal@opensource.wdc.com>
Date:   Thu Nov 4 17:31:58 2021 +0900

    libata: fix read log timeout value
    
    commit 68dbbe7d5b4fde736d104cbbc9a2fce875562012 upstream.
    
    Some ATA drives are very slow to respond to READ_LOG_EXT and
    READ_LOG_DMA_EXT commands issued from ata_dev_configure() when the
    device is revalidated right after resuming a system or inserting the
    ATA adapter driver (e.g. ahci). The default 5s timeout
    (ATA_EH_CMD_DFL_TIMEOUT) used for these commands is too short, causing
    errors during the device configuration. Ex:
    
    ...
    ata9: SATA max UDMA/133 abar m524288@0x9d200000 port 0x9d200400 irq 209
    ata9: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
    ata9.00: ATA-9: XXX  XXXXXXXXXXXXXXX, XXXXXXXX, max UDMA/133
    ata9.00: qc timeout (cmd 0x2f)
    ata9.00: Read log page 0x00 failed, Emask 0x4
    ata9.00: Read log page 0x00 failed, Emask 0x40
    ata9.00: NCQ Send/Recv Log not supported
    ata9.00: Read log page 0x08 failed, Emask 0x40
    ata9.00: 27344764928 sectors, multi 16: LBA48 NCQ (depth 32), AA
    ata9.00: Read log page 0x00 failed, Emask 0x40
    ata9.00: ATA Identify Device Log not supported
    ata9.00: failed to set xfermode (err_mask=0x40)
    ata9: SATA link up 6.0 Gbps (SStatus 133 SControl 300)
    ata9.00: configured for UDMA/133
    ...
    
    The timeout error causes a soft reset of the drive link, followed in
    most cases by a successful revalidation as that give enough time to the
    drive to become fully ready to quickly process the read log commands.
    However, in some cases, this also fails resulting in the device being
    dropped.
    
    Fix this by using adding the ata_eh_revalidate_timeouts entries for the
    READ_LOG_EXT and READ_LOG_DMA_EXT commands. This defines a timeout
    increased to 15s, retriable one time.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab0a06769e69f8ecdf291ee8028a00e7b196aeff
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 3 08:00:19 2021 +0100

    Input: i8042 - Add quirk for Fujitsu Lifebook T725
    
    commit 16e28abb7290c4ca3b3a0f333ba067f34bb18c86 upstream.
    
    Fujitsu Lifebook T725 laptop requires, like a few other similar
    models, the nomux and notimeout options to probe the touchpad
    properly.  This patch adds the corresponding quirk entries.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1191980
    Tested-by: Neal Gompa <ngompa13@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Link: https://lore.kernel.org/r/20211103070019.13374-1-tiwai@suse.de
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c341d11c8bd366791cacfbf96608de905607fde
Author: Phoenix Huang <phoenix@emc.com.tw>
Date:   Sun Nov 7 22:00:03 2021 -0800

    Input: elantench - fix misreporting trackpoint coordinates
    
    commit be896bd3b72b44126c55768f14c22a8729b0992e upstream.
    
    Some firmwares occasionally report bogus data from trackpoint, with X or Y
    displacement being too large (outside of [-127, 127] range). Let's drop such
    packets so that we do not generate jumps.
    
    Signed-off-by: Phoenix Huang <phoenix@emc.com.tw>
    Tested-by: Yufei Du <yufeidu@cs.unc.edu>
    Link: https://lore.kernel.org/r/20210729010940.5752-1-phoenix@emc.com.tw
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1eb42de7cf9511702df7751626c21a87f9d0ef9
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Nov 9 22:58:01 2021 -0800

    Input: iforce - fix control-message timeout
    
    commit 744d0090a5f6dfa4c81b53402ccdf08313100429 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 487358627825 ("Input: iforce - use DMA-safe buffer when getting IDs from USB")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Cc: stable@vger.kernel.org      # 5.3
    Link: https://lore.kernel.org/r/20211025115501.5190-1-johan@kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afbec52fbce006a775edb21f87ccae713bc0e7d6
Author: Todd Kjos <tkjos@google.com>
Date:   Wed Nov 10 15:00:36 2021 -0800

    binder: use cred instead of task for getsecid
    
    commit 4d5b5539742d2554591751b4248b0204d20dcc9d upstream.
    
    Use the 'struct cred' saved at binder_open() to lookup
    the security ID via security_cred_getsecid(). This
    ensures that the security context that opened binder
    is the one used to generate the secctx.
    
    Cc: stable@vger.kernel.org # 5.4+
    Fixes: ec74136ded79 ("binder: create node flag to request sender's security context")
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Suggested-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d9f4ae7cd6f5283dd0e343265268c695ef592b0
Author: Todd Kjos <tkjos@google.com>
Date:   Wed Nov 10 15:00:35 2021 -0800

    binder: use cred instead of task for selinux checks
    
    commit 52f88693378a58094c538662ba652aff0253c4fe upstream.
    
    Since binder was integrated with selinux, it has passed
    'struct task_struct' associated with the binder_proc
    to represent the source and target of transactions.
    The conversion of task to SID was then done in the hook
    implementations. It turns out that there are race conditions
    which can result in an incorrect security context being used.
    
    Fix by using the 'struct cred' saved during binder_open and pass
    it to the selinux subsystem.
    
    Cc: stable@vger.kernel.org # 5.14 (need backport for earlier stables)
    Fixes: 79af73079d75 ("Add security hooks to binder and implement the hooks for SELinux.")
    Suggested-by: Jann Horn <jannh@google.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd9cea41ac6e08f615030dea28b23e12b7a2674f
Author: Todd Kjos <tkjos@google.com>
Date:   Wed Nov 10 15:00:34 2021 -0800

    binder: use euid from cred instead of using task
    
    commit 29bc22ac5e5bc63275e850f0c8fc549e3d0e306b upstream.
    
    Save the 'struct cred' associated with a binder process
    at initial open to avoid potential race conditions
    when converting to an euid.
    
    Set a transaction's sender_euid from the 'struct cred'
    saved at binder_open() instead of looking up the euid
    from the binder proc's 'struct task'. This ensures
    the euid is associated with the security context that
    of the task that opened binder.
    
    Cc: stable@vger.kernel.org # 4.4+
    Fixes: 457b9a6f09f0 ("Staging: android: add binder driver")
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Suggested-by: Stephen Smalley <stephen.smalley.work@gmail.com>
    Suggested-by: Jann Horn <jannh@google.com>
    Acked-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f1d5a1a7d80175f9a1af6b00aa7415c5ba08290
Author: Nehal Bakulchandra Shah <Nehal-Bakulchandra.shah@amd.com>
Date:   Thu Oct 14 15:12:00 2021 +0300

    usb: xhci: Enable runtime-pm by default on AMD Yellow Carp platform
    
    commit 660a92a59b9e831a0407e41ff62875656d30006e upstream.
    
    AMD's Yellow Carp platform supports runtime power management for
    XHCI Controllers, so enable the same by default for all XHCI Controllers.
    
    [ regrouped and aligned the PCI_DEVICE_ID definitions -Mathias]
    
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@amd.com>
    Reviewed-by: Basavaraj Natikar <Basavaraj.Natikar@amd.com>
    Signed-off-by: Nehal Bakulchandra Shah <Nehal-Bakulchandra.shah@amd.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20211014121200.75433-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff32302687fdb7b6b49393d6feecdbe73607b506
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Nov 5 18:00:36 2021 +0200

    xhci: Fix USB 3.1 enumeration issues by increasing roothub power-on-good delay
    
    commit e1959faf085b004e6c3afaaaa743381f00e7c015 upstream.
    
    Some USB 3.1 enumeration issues were reported after the hub driver removed
    the minimum 100ms limit for the power-on-good delay.
    
    Since commit 90d28fb53d4a ("usb: core: reduce power-on-good delay time of
    root hub") the hub driver sets the power-on-delay based on the
    bPwrOn2PwrGood value in the hub descriptor.
    
    xhci driver has a 20ms bPwrOn2PwrGood value for both roothubs based
    on xhci spec section 5.4.8, but it's clearly not enough for the
    USB 3.1 devices, causing enumeration issues.
    
    Tests indicate full 100ms delay is needed.
    
    Reported-by: Walt Jr. Brake <mr.yming81@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Fixes: 90d28fb53d4a ("usb: core: reduce power-on-good delay time of root hub")
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211105160036.549516-1-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
