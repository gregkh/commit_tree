commit 0d1912303e54ed1b2a371be0bba51c384dd57326
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 16 08:43:17 2016 -0700

    Linux 4.4.6

commit f3f47e76d14820b150479d78ac8edad33a1e0c19
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Mar 8 16:47:53 2016 +0000

    ld-version: Fix awk regex compile failure
    
    commit 4b7b1ef2c2f83d702272555e8adb839a50ba0f8e upstream.
    
    The ld-version.sh script fails on some versions of awk with the
    following error, resulting in build failures for MIPS:
    
    awk: scripts/ld-version.sh: line 4: regular expression compile failed (missing '(')
    
    This is due to the regular expression ".*)", meant to strip off the
    beginning of the ld version string up to the close bracket, however
    brackets have a meaning in regular expressions, so lets escape it so
    that awk doesn't expect a corresponding open bracket.
    
    Fixes: ccbef1674a15 ("Kbuild, lto: add ld-version and ld-ifversion ...")
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Tested-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Cc: Michal Marek <mmarek@suse.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kbuild@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12838/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e3f456d1bb095f02979a83a48cdc5cc4d866a23
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Sat Mar 5 20:00:12 2016 -0800

    target: Drop incorrect ABORT_TASK put for completed commands
    
    commit 7f54ab5ff52fb0b91569bc69c4a6bc5cac1b768d upstream.
    
    This patch fixes a recent ABORT_TASK regression associated
    with commit febe562c, where a left-over target_put_sess_cmd()
    would still be called when __target_check_io_state() detected
    a command has already been completed, and explicit ABORT must
    be avoided.
    
    Note commit febe562c dropped the local kref_get_unless_zero()
    check in core_tmr_abort_task(), but did not drop this extra
    corresponding target_put_sess_cmd() in the failure path.
    
    So go ahead and drop this now bogus target_put_sess_cmd(),
    and avoid this potential use-after-free.
    
    Reported-by: Dan Lane <dracodan@gmail.com>
    Cc: Quinn Tran <quinn.tran@qlogic.com>
    Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
    Cc: Sagi Grimberg <sagig@mellanox.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b59ea3efba4889ece81056883193d78b51db11d1
Author: Ming Lei <ming.lei@canonical.com>
Date:   Sat Mar 12 22:56:19 2016 +0800

    block: don't optimize for non-cloned bio in bio_get_last_bvec()
    
    commit 90d0f0f11588ec692c12f9009089b398be395184 upstream.
    
    For !BIO_CLONED bio, we can use .bi_vcnt safely, but it
    doesn't mean we can just simply return .bi_io_vec[.bi_vcnt - 1]
    because the start postion may have been moved in the middle of
    the bvec, such as splitting in the middle of bvec.
    
    Fixes: 7bcd79ac50d9(block: bio: introduce helpers to get the 1st and last bvec)
    Reported-by: Kent Overstreet <kent.overstreet@gmail.com>
    Signed-off-by: Ming Lei <ming.lei@canonical.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2cee580a541ab6f3ed75fe35b11d8074c2b58a1
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Mar 4 10:10:51 2016 +0000

    MIPS: smp.c: Fix uninitialised temp_foreign_map
    
    commit d825c06bfe8b885b797f917ad47365d0e9c21fbb upstream.
    
    When calculate_cpu_foreign_map() recalculates the cpu_foreign_map
    cpumask it uses the local variable temp_foreign_map without initialising
    it to zero. Since the calculation only ever sets bits in this cpumask
    any existing bits at that memory location will remain set and find their
    way into cpu_foreign_map too. This could potentially lead to cache
    operations suboptimally doing smp calls to multiple VPEs in the same
    core, even though the VPEs share primary caches.
    
    Therefore initialise temp_foreign_map using cpumask_clear() before use.
    
    Fixes: cccf34e9411c ("MIPS: c-r4k: Fix cache flushing for MT cores")
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/12759/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 588bad2ef32cae7abad24d5ca2f4611a7a7fb2a2
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Sun Mar 6 22:28:56 2016 +0100

    MIPS: Fix build error when SMP is used without GIC
    
    commit 7a50e4688dabb8005df39b2b992d76629b8af8aa upstream.
    
    The MIPS_GIC_IPI should only be selected when MIPS_GIC is also
    selected, otherwise it results in a compile error. smp-gic.c uses some
    functions from include/linux/irqchip/mips-gic.h like
    plat_ipi_call_int_xlate() which are only added to the header file when
    MIPS_GIC is set. The Lantiq SoC does not use the GIC, but supports SMP.
    The calls top the functions from smp-gic.c are already protected by
    some #ifdefs
    
    The first part of this was introduced in commit 72e20142b2bf ("MIPS:
    Move GIC IPI functions out of smp-cmp.c")
    
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/12774/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f639e2e95ea8c06f287f768bc17d03d43480d0d
Author: Rui Wang <rui.y.wang@intel.com>
Date:   Fri Jan 8 23:09:59 2016 +0800

    ovl: fix getcwd() failure after unsuccessful rmdir
    
    commit ce9113bbcbf45a57c082d6603b9a9f342be3ef74 upstream.
    
    ovl_remove_upper() should do d_drop() only after it successfully
    removes the dir, otherwise a subsequent getcwd() system call will
    fail, breaking userspace programs.
    
    This is to fix: https://bugzilla.kernel.org/show_bug.cgi?id=110491
    
    Signed-off-by: Rui Wang <rui.y.wang@intel.com>
    Reviewed-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3600dd6476cd5ce390991860789163aa109f490
Author: Konstantin Khlebnikov <koct9i@gmail.com>
Date:   Sun Jan 31 16:21:29 2016 +0300

    ovl: copy new uid/gid into overlayfs runtime inode
    
    commit b81de061fa59f17d2730aabb1b84419ef3913810 upstream.
    
    Overlayfs must update uid/gid after chown, otherwise functions
    like inode_owner_or_capable() will check user against stale uid.
    Catched by xfstests generic/087, it chowns file and calls utimes.
    
    Signed-off-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b7f12be0d39e42cce88aa6b78a968d389273d8c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Mar 1 11:56:22 2016 -0800

    userfaultfd: don't block on the last VM updates at exit time
    
    commit 39680f50ae54cbbb6e72ac38b8329dd3eb9105f4 upstream.
    
    The exit path will do some final updates to the VM of an exiting process
    to inform others of the fact that the process is going away.
    
    That happens, for example, for robust futex state cleanup, but also if
    the parent has asked for a TID update when the process exits (we clear
    the child tid field in user space).
    
    However, at the time we do those final VM accesses, we've already
    stopped accepting signals, so the usual "stop waiting for userfaults on
    signal" code in fs/userfaultfd.c no longer works, and the process can
    become an unkillable zombie waiting for something that will never
    happen.
    
    To solve this, just make handle_userfault() abort any user fault
    handling if we're already in the exit path past the signal handling
    state being dead (marked by PF_EXITING).
    
    This VM special case is pretty ugly, and it is possible that we should
    look at finalizing signals later (or move the VM final accesses
    earlier).  But in the meantime this is a fairly minimally intrusive fix.
    
    Reported-and-tested-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6175c8fd13cd61d7a17868aed1c332e6e7a855ea
Author: Russell Currey <ruscur@russell.cc>
Date:   Wed Jan 13 12:04:32 2016 +1100

    powerpc/powernv: Fix OPAL_CONSOLE_FLUSH prototype and usages
    
    commit c88c5d43732a0356f99e5e4d1ad62ab1ea516b81 upstream.
    
    The recently added OPAL API call, OPAL_CONSOLE_FLUSH, originally took no
    parameters and returned nothing.  The call was updated to accept the
    terminal number to flush, and returned various values depending on the
    state of the output buffer.
    
    The prototype has been updated and its usage in the OPAL kmsg dumper has
    been modified to support its new behaviour as an incremental flush.
    
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2cd42d38981cd6d43cf3332017c768a212fb65c
Author: Russell Currey <ruscur@russell.cc>
Date:   Fri Nov 27 17:23:07 2015 +1100

    powerpc/powernv: Add a kmsg_dumper that flushes console output on panic
    
    commit affddff69c55eb68969448f35f59054a370bc7c1 upstream.
    
    On BMC machines, console output is controlled by the OPAL firmware and is
    only flushed when its pollers are called.  When the kernel is in a panic
    state, it no longer calls these pollers and thus console output does not
    completely flush, causing some output from the panic to be lost.
    
    Output is only actually lost when the kernel is configured to not power off
    or reboot after panic (i.e. CONFIG_PANIC_TIMEOUT is set to 0) since OPAL
    flushes the console buffer as part of its power down routines.  Before this
    patch, however, only partial output would be printed during the timeout wait.
    
    This patch adds a new kmsg_dumper which gets called at panic time to ensure
    panic output is not lost.  It accomplishes this by calling OPAL_CONSOLE_FLUSH
    in the OPAL API, and if that is not available, the pollers are called enough
    times to (hopefully) completely flush the buffer.
    
    The flushing mechanism will only affect output printed at and before the
    kmsg_dump call in kernel/panic.c:panic().  As such, the "end Kernel panic"
    message may still be truncated as follows:
    
    >Call Trace:
    >[c000000f1f603b00] [c0000000008e9458] dump_stack+0x90/0xbc (unreliable)
    >[c000000f1f603b30] [c0000000008e7e78] panic+0xf8/0x2c4
    >[c000000f1f603bc0] [c000000000be4860] mount_block_root+0x288/0x33c
    >[c000000f1f603c80] [c000000000be4d14] prepare_namespace+0x1f4/0x254
    >[c000000f1f603d00] [c000000000be43e8] kernel_init_freeable+0x318/0x350
    >[c000000f1f603dc0] [c00000000000bd74] kernel_init+0x24/0x130
    >[c000000f1f603e30] [c0000000000095b0] ret_from_kernel_thread+0x5c/0xac
    >---[ end Kernel panic - not
    
    This functionality is implemented as a kmsg_dumper as it seems to be the
    most sensible way to introduce platform-specific functionality to the
    panic function.
    
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 331004fb48a2fb412059a93b50c72b1d67cfa47d
Author: Andreas Schwab <schwab@linux-m68k.org>
Date:   Fri Feb 5 19:50:03 2016 +0100

    powerpc: Fix dedotify for binutils >= 2.26
    
    commit f15838e9cac8f78f0cc506529bb9d3b9fa589c1f upstream.
    
    Since binutils 2.26 BFD is doing suffix merging on STRTAB sections.  But
    dedotify modifies the symbol names in place, which can also modify
    unrelated symbols with a name that matches a suffix of a dotted name.  To
    remove the leading dot of a symbol name we can just increment the pointer
    into the STRTAB section instead.
    
    Backport to all stables to avoid breakage when people update their
    binutils - mpe.
    
    Signed-off-by: Andreas Schwab <schwab@linux-m68k.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8456804460f5c232f097e72051beea063f16074
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Mar 8 11:31:00 2016 -0500

    Revert "drm/radeon/pm: adjust display configuration after powerstate"
    
    commit d74e766e1916d0e09b86e4b5b9d0f819628fd546 upstream.
    
    This reverts commit 39d4275058baf53e89203407bf3841ff2c74fa32.
    
    This caused a regression on some older hardware.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=113891
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a2d3f49bd33fa1cf7de91b2053e48e47606c33e
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Tue Mar 1 21:31:17 2016 +0100

    drm/radeon: Fix error handling in radeon_flip_work_func.
    
    commit 1e1490a38504419e349caa1b7d55d5c141a9bccb upstream.
    
    This is a port of the patch "drm/amdgpu: Fix error handling in amdgpu_flip_work_func."
    to fix the following problem for radeon as well which was
    reported against amdgpu:
    
    The patch e1d09dc0ccc6: "drm/amdgpu: Don't hang in
    amdgpu_flip_work_func on disabled crtc." from Feb 19, 2016, leads to
    the following static checker warning, as reported by Dan Carpenter in
    https://lists.freedesktop.org/archives/dri-devel/2016-February/101987.html
    
    drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:127 amdgpu_flip_work_func()     warn: should this be 'repcnt == -1'
    drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:136 amdgpu_flip_work_func() error: double unlock 'spin_lock:&crtc->dev->event_lock'
    drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:136 amdgpu_flip_work_func() error: double unlock 'irqsave:flags'
    
    This patch fixes both reported problems:
    
    Change post-decrement of repcnt to pre-decrement, so
    it can't underflow anymore, but still performs up to
    three repetitions - three is the maximum one could
    expect in practice.
    
    Move the spin_unlock_irqrestore to where it actually
    belongs.
    
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: Michel Dänzer <michel.daenzer@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f36e5ab227c3ca8770fddc5596a024176de0852
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Tue Mar 1 21:31:16 2016 +0100

    drm/amdgpu: Fix error handling in amdgpu_flip_work_func.
    
    commit 90e94b160c7f647ddffda707f5e3c0c66c170df8 upstream.
    
    The patch e1d09dc0ccc6: "drm/amdgpu: Don't hang in
    amdgpu_flip_work_func on disabled crtc." from Feb 19, 2016, leads to
    the following static checker warning, as reported by Dan Carpenter in
    https://lists.freedesktop.org/archives/dri-devel/2016-February/101987.html
    
    drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:127 amdgpu_flip_work_func() warn: should this be 'repcnt == -1'
    drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:136 amdgpu_flip_work_func() error: double unlock 'spin_lock:&crtc->dev->event_lock'
    drivers/gpu/drm/amd/amdgpu/amdgpu_display.c:136 amdgpu_flip_work_func() error: double unlock 'irqsave:flags'
    
    This patch fixes both reported problems:
    
    Change post-decrement of repcnt to pre-decrement, so
    it can't underflow anymore, but still performs up to
    three repetitions - three is the maximum one could
    expect in practice.
    
    Move the spin_unlock_irqrestore to where it actually
    belongs.
    
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: Michel Dänzer <michel.daenzer@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f0679556b563bcd3d433d5781454123f1d134c5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Mar 7 13:15:09 2016 -0800

    Revert "drm/radeon: call hpd_irq_event on resume"
    
    commit 256faedcfd646161477d47a1a78c32a562d2e845 upstream.
    
    This reverts commit dbb17a21c131eca94eb31136eee9a7fe5aff00d9.
    
    It turns out that commit can cause problems for systems with multiple
    GPUs, and causes X to hang on at least a HP Pavilion dv7 with hybrid
    graphics.
    
    This got noticed originally in 4.4.4, where this patch had already
    gotten back-ported, but 4.5-rc7 was verified to have the same problem.
    
    Alexander Deucher says:
     "It looks like you have a muxed system so I suspect what's happening is
      that one of the display is being reported as connected for both the
      IGP and the dGPU and then the desktop environment gets confused or
      there some sort problem in the detect functions since the mux is not
      switched to the dGPU.  I don't see an easy fix unless Dave has any
      ideas.  I'd say just revert for now"
    
    Reported-by: Jörg-Volker Peetz <jvpeetz@web.de>
    Acked-by: Alexander Deucher <Alexander.Deucher@amd.com>
    Cc: Dave Airlie <airlied@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4cf671b1de7f0ba46d7ee3cd4bf6fcaaf8021f1
Author: Dexuan Cui <decui@microsoft.com>
Date:   Thu Feb 25 01:58:12 2016 -0800

    x86/mm: Fix slow_virt_to_phys() for X86_PAE again
    
    commit bf70e5513dfea29c3682e7eb3dbb45f0723bac09 upstream.
    
    "d1cd12108346: x86, pageattr: Prevent overflow in slow_virt_to_phys() for
    X86_PAE" was unintentionally removed by the recent "34437e67a672: x86/mm: Fix
    slow_virt_to_phys() to handle large PAT bit".
    
    And, the variable 'phys_addr' was defined as "unsigned long" by mistake -- it should
    be "phys_addr_t".
    
    As a result, Hyper-V network driver in 32-PAE Linux guest can't work again.
    
    Fixes: commit 34437e67a672: "x86/mm: Fix slow_virt_to_phys() to handle large PAT bit"
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Reviewed-by: Toshi Kani <toshi.kani@hpe.com>
    Cc: olaf@aepfle.de
    Cc: jasowang@redhat.com
    Cc: driverdev-devel@linuxdriverproject.org
    Cc: linux-mm@kvack.org
    Cc: apw@canonical.com
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Link: http://lkml.kernel.org/r/1456394292-9030-1-git-send-email-decui@microsoft.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53bff80358e0c66cf8863b903679075b3c522b4d
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Mon Jan 4 17:32:26 2016 +0100

    gpu: ipu-v3: Do not bail out on missing optional port nodes
    
    commit 17e0521750399205f432966e602e125294879cdd upstream.
    
    The port nodes are documented as optional, treat them accordingly.
    
    Reported-by: Martin Fuzzey <mfuzzey@parkeon.com>
    Reported-by: Chris Healy <Chris.Healy@zii.aero>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Fixes: 304e6be652e2 ("gpu: ipu-v3: Assign of_node of child platform devices to corresponding ports")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ded9853a1443276acc2920d6aee6762581d5e8f7
Author: Jouni Malinen <jouni@qca.qualcomm.com>
Date:   Tue Mar 1 00:29:00 2016 +0200

    mac80211: Fix Public Action frame RX in AP mode
    
    commit 1ec7bae8bec9b72e347e01330c745ab5cdd66f0e upstream.
    
    Public Action frames use special rules for how the BSSID field (Address
    3) is set. A wildcard BSSID is used in cases where the transmitter and
    recipient are not members of the same BSS. As such, we need to accept
    Public Action frames with wildcard BSSID.
    
    Commit db8e17324553 ("mac80211: ignore frames between TDLS peers when
    operating as AP") added a rule that drops Action frames to TDLS-peers
    based on an Action frame having different DA (Address 1) and BSSID
    (Address 3) values. This is not correct since it misses the possibility
    of BSSID being a wildcard BSSID in which case the Address 1 would not
    necessarily match.
    
    Fix this by allowing mac80211 to accept wildcard BSSID in an Action
    frame when in AP mode.
    
    Fixes: db8e17324553 ("mac80211: ignore frames between TDLS peers when operating as AP")
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df1ceb2f08f4aef5eddbc17d509d1edb0aa1c2a8
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Feb 26 22:13:40 2016 +0100

    mac80211: check PN correctly for GCMP-encrypted fragmented MPDUs
    
    commit 9acc54beb474c81148e2946603d141cf8716b19f upstream.
    
    Just like for CCMP we need to check that for GCMP the fragments
    have PNs that increment by one; the spec was updated to fix this
    security issue and now has the following text:
    
            The receiver shall discard MSDUs and MMPDUs whose constituent
            MPDU PN values are not incrementing in steps of 1.
    
    Adapt the code for CCMP to work for GCMP as well, luckily the
    relevant fields already alias each other so no code duplication
    is needed (just check the aliasing with BUILD_BUG_ON.)
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f67a4187a42f7d621ab2334b3db20920c1e3db3
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Wed Feb 24 12:07:17 2016 +0100

    mac80211: minstrel_ht: fix a logic error in RTS/CTS handling
    
    commit c36dd3eaf1a674a45b58b922258d6eaa8932e292 upstream.
    
    RTS/CTS needs to be enabled if the rate is a fallback rate *or* if it's
    a dual-stream rate and the sta is in dynamic SMPS mode.
    
    Fixes: a3ebb4e1b763 ("mac80211: minstrel_ht: handle peers in dynamic SMPS")
    Reported-by: Matías Richart <mrichart@fing.edu.uy>
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ab2f1e2aab12c0fcdfa29ed00785563c45c1462
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Thu Feb 18 19:49:18 2016 +0100

    mac80211: minstrel_ht: set default tx aggregation timeout to 0
    
    commit 7a36b930e6ed4702c866dc74a5ad07318a57c688 upstream.
    
    The value 5000 was put here with the addition of the timeout field to
    ieee80211_start_tx_ba_session. It was originally added in mac80211 to
    save resources for drivers like iwlwifi, which only supports a limited
    number of concurrent aggregation sessions.
    
    Since iwlwifi does not use minstrel_ht and other drivers don't need
    this, 0 is a better default - especially since there have been
    recent reports of aggregation setup related issues reproduced with
    ath9k. This should improve stability without causing any adverse
    effects.
    
    Acked-by: Avery Pennarun <apenwarr@gmail.com>
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fac8bf1bee1ada2132b3423a506ae06e242baf74
Author: Chris Bainbridge <chris.bainbridge@gmail.com>
Date:   Wed Jan 27 15:46:18 2016 +0000

    mac80211: fix use of uninitialised values in RX aggregation
    
    commit f39ea2690bd61efec97622c48323f40ed6e16317 upstream.
    
    Use kzalloc instead of kmalloc for struct tid_ampdu_rx to
    initialize the "removed" field (all others are initialized
    manually). That fixes:
    
    UBSAN: Undefined behaviour in net/mac80211/rx.c:932:29
    load of value 2 is not a valid value for type '_Bool'
    CPU: 3 PID: 1134 Comm: kworker/u16:7 Not tainted 4.5.0-rc1+ #265
    Workqueue: phy0 rt2x00usb_work_rxdone
     0000000000000004 ffff880254a7ba50 ffffffff8181d866 0000000000000007
     ffff880254a7ba78 ffff880254a7ba68 ffffffff8188422d ffffffff8379b500
     ffff880254a7bab8 ffffffff81884747 0000000000000202 0000000348620032
    Call Trace:
     [<ffffffff8181d866>] dump_stack+0x45/0x5f
     [<ffffffff8188422d>] ubsan_epilogue+0xd/0x40
     [<ffffffff81884747>] __ubsan_handle_load_invalid_value+0x67/0x70
     [<ffffffff82227b4d>] ieee80211_sta_reorder_release.isra.16+0x5ed/0x730
     [<ffffffff8222ca14>] ieee80211_prepare_and_rx_handle+0xd04/0x1c00
     [<ffffffff8222db03>] __ieee80211_rx_handle_packet+0x1f3/0x750
     [<ffffffff8222e4a7>] ieee80211_rx_napi+0x447/0x990
    
    While at it, convert to use sizeof(*tid_agg_rx) instead.
    
    Fixes: 788211d81bfdf ("mac80211: fix RX A-MPDU session reorder timer deletion")
    Signed-off-by: Chris Bainbridge <chris.bainbridge@gmail.com>
    [reword commit message, use sizeof(*tid_agg_rx)]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03d76167b7f4f7a517a3d6dc9ff73af8cca4c029
Author: Sven Eckelmann <sven.eckelmann@open-mesh.com>
Date:   Tue Feb 2 08:12:26 2016 +0100

    mac80211: minstrel: Change expected throughput unit back to Kbps
    
    commit 212c5a5e6ba61678be6b5fee576e38bccb50b613 upstream.
    
    The change from cur_tp to the function
    minstrel_get_tp_avg/minstrel_ht_get_tp_avg changed the unit used for the
    current throughput. For example in minstrel_ht the correct
    conversion between them would be:
    
        mrs->cur_tp / 10 == minstrel_ht_get_tp_avg(..).
    
    This factor 10 must also be included in the calculation of
    minstrel_get_expected_throughput and minstrel_ht_get_expected_throughput to
    return values with the unit [Kbps] instead of [10Kbps]. Otherwise routing
    algorithms like B.A.T.M.A.N. V will make incorrect decision based on these
    values. Its kernel based implementation expects expected_throughput always
    to have the unit [Kbps] and not sometimes [10Kbps] and sometimes [Kbps].
    
    The same requirement has iw or olsrdv2's nl80211 based statistics module
    which retrieve the same data via NL80211_STA_INFO_TX_BITRATE.
    
    Fixes: 6a27b2c40b48 ("mac80211: restructure per-rate throughput calculation into function")
    Signed-off-by: Sven Eckelmann <sven@open-mesh.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c904a4498dd61a5c58e7c38edc042268603202c
Author: Liad Kaufman <liad.kaufman@intel.com>
Date:   Sun Feb 14 15:32:58 2016 +0200

    iwlwifi: mvm: inc pending frames counter also when txing non-sta
    
    commit fb896c44f88a75843a072cd6961b1615732f7811 upstream.
    
    Until this patch, when TXing non-sta the pending_frames counter
    wasn't increased, but it WAS decreased in
    iwl_mvm_rx_tx_cmd_single(), what makes it negative in certain
    conditions. This in turn caused much trouble when we need to
    remove the station since we won't be waiting forever until
    pending_frames gets 0. In certain cases, we were exhausting
    the station table even in BSS mode, because we had a lot of
    stale stations.
    
    Increase the counter also in iwl_mvm_tx_skb_non_sta() after a
    successful TX to avoid this outcome.
    
    Signed-off-by: Liad Kaufman <liad.kaufman@intel.com>
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16517aa05d49d235451e357e2ef5b38c0584904b
Author: Maximilain Schneider <max@schneidersoft.net>
Date:   Tue Feb 23 01:17:28 2016 +0000

    can: gs_usb: fixed disconnect bug by removing erroneous use of kfree()
    
    commit e9a2d81b1761093386a0bb8a4f51642ac785ef63 upstream.
    
    gs_destroy_candev() erroneously calls kfree() on a struct gs_can *, which is
    allocated through alloc_candev() and should instead be freed using
    free_candev() alone.
    
    The inappropriate use of kfree() causes the kernel to hang when
    gs_destroy_candev() is called.
    
    Only the struct gs_usb * which is allocated through kzalloc() should be freed
    using kfree() when the device is disconnected.
    
    Signed-off-by: Maximilian Schneider <max@schneidersoft.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfed1f518daa78346fb3f118367212ad352b2f07
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Jan 27 13:29:34 2016 +0100

    cfg80211/wext: fix message ordering
    
    commit cb150b9d23be6ee7f3a0fff29784f1c5b5ac514d upstream.
    
    Since cfg80211 frequently takes actions from its netdev notifier
    call, wireless extensions messages could still be ordered badly
    since the wext netdev notifier, since wext is built into the
    kernel, runs before the cfg80211 netdev notifier. For example,
    the following can happen:
    
    5: wlan1: <BROADCAST,MULTICAST> mtu 1500 qdisc mq state DOWN group default
        link/ether 02:00:00:00:01:00 brd ff:ff:ff:ff:ff:ff
    5: wlan1: <BROADCAST,MULTICAST,UP>
        link/ether
    
    when setting the interface down causes the wext message.
    
    To also fix this, export the wireless_nlevent_flush() function
    and also call it from the cfg80211 notifier.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 176e879db6c9ecd702b4deac2bc419c030afd630
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Jan 27 12:37:52 2016 +0100

    wext: fix message delay/ordering
    
    commit 8bf862739a7786ae72409220914df960a0aa80d8 upstream.
    
    Beniamino reported that he was getting an RTM_NEWLINK message for a
    given interface, after the RTM_DELLINK for it. It turns out that the
    message is a wireless extensions message, which was sent because the
    interface had been connected and disconnection while it was deleted
    caused a wext message.
    
    For its netlink messages, wext uses RTM_NEWLINK, but the message is
    without all the regular rtnetlink attributes, so "ip monitor link"
    prints just rudimentary information:
    
    5: wlan1: <BROADCAST,MULTICAST> mtu 1500 qdisc mq state DOWN group default
        link/ether 02:00:00:00:01:00 brd ff:ff:ff:ff:ff:ff
    Deleted 5: wlan1: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default
        link/ether 02:00:00:00:01:00 brd ff:ff:ff:ff:ff:ff
    5: wlan1: <BROADCAST,MULTICAST,UP>
        link/ether
    (from my hwsim reproduction)
    
    This can cause userspace to get confused since it doesn't expect an
    RTM_NEWLINK message after RTM_DELLINK.
    
    The reason for this is that wext schedules a worker to send out the
    messages, and the scheduling delay can cause the messages to get out
    to userspace in different order.
    
    To fix this, have wext register a netdevice notifier and flush out
    any pending messages when netdevice state changes. This fixes any
    ordering whenever the original message wasn't sent by a notifier
    itself.
    
    Reported-by: Beniamino Galvani <bgalvani@redhat.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 455fadecd1f79dcdef31a1c3b5d85d28f6e07081
Author: Konstantin Khlebnikov <koct9i@gmail.com>
Date:   Sun Jan 31 16:22:16 2016 +0300

    ovl: fix working on distributed fs as lower layer
    
    commit b5891cfab08fe3144a616e8e734df7749fb3b7d0 upstream.
    
    This adds missing .d_select_inode into alternative dentry_operations.
    
    Signed-off-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Fixes: 7c03b5d45b8e ("ovl: allow distributed fs as lower layer")
    Fixes: 4bacc9c9234c ("overlayfs: Make f_path always point to the overlay and f_inode to the underlay")
    Reviewed-by: Nikolay Borisov <kernel@kyup.com>
    Tested-by: Nikolay Borisov <kernel@kyup.com>
    Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e25cdcefedc43f0e633866a526bc1ba2dd13d32e
Author: Konstantin Khlebnikov <koct9i@gmail.com>
Date:   Sun Jan 31 16:17:53 2016 +0300

    ovl: ignore lower entries when checking purity of non-directory entries
    
    commit 45d11738969633ec07ca35d75d486bf2d8918df6 upstream.
    
    After rename file dentry still holds reference to lower dentry from
    previous location. This doesn't matter for data access because data comes
    from upper dentry. But this stale lower dentry taints dentry at new
    location and turns it into non-pure upper. Such file leaves visible
    whiteout entry after remove in directory which shouldn't have whiteouts at
    all.
    
    Overlayfs already tracks pureness of file location in oe->opaque.  This
    patch just uses that for detecting actual path type.
    
    Comment from Vivek Goyal's patch:
    
    Here are the details of the problem. Do following.
    
    $ mkdir upper lower work merged upper/dir/
    $ touch lower/test
    $ sudo mount -t overlay overlay -olowerdir=lower,upperdir=upper,workdir=
    work merged
    $ mv merged/test merged/dir/
    $ rm merged/dir/test
    $ ls -l merged/dir/
    /usr/bin/ls: cannot access merged/dir/test: No such file or directory
    total 0
    c????????? ? ? ? ?            ? test
    
    Basic problem seems to be that once a file has been unlinked, a whiteout
    has been left behind which was not needed and hence it becomes visible.
    
    Whiteout is visible because parent dir is of not type MERGE, hence
    od->is_real is set during ovl_dir_open(). And that means ovl_iterate()
    passes on iterate handling directly to underlying fs. Underlying fs does
    not know/filter whiteouts so it becomes visible to user.
    
    Why did we leave a whiteout to begin with when we should not have.
    ovl_do_remove() checks for OVL_TYPE_PURE_UPPER() and does not leave
    whiteout if file is pure upper. In this case file is not found to be pure
    upper hence whiteout is left.
    
    So why file was not PURE_UPPER in this case? I think because dentry is
    still carrying some leftover state which was valid before rename. For
    example, od->numlower was set to 1 as it was a lower file. After rename,
    this state is not valid anymore as there is no such file in lower.
    
    Signed-off-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Reported-by: Viktor Stanchev <me@viktorstanchev.com>
    Suggested-by: Vivek Goyal <vgoyal@redhat.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=109611
    Acked-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <miklos@szeredi.hu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f2200cf57226e0a04721ddb4bd20f4c20acda22
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 29 18:01:12 2016 +0100

    ASoC: wm8958: Fix enum ctl accesses in a wrong type
    
    commit d0784829ae3b0beeb69b476f017d5c8a2eb95198 upstream.
    
    "MBC Mode", "VSS Mode", "VSS HPF Mode" and "Enhanced EQ Mode" ctls in
    wm8958 codec driver are enum, while the current driver accesses
    wrongly via value.integer.value[].  They have to be via
    value.enumerated.item[] instead.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d8dddbd2b08b540ad91b7f2282036192088316e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 29 18:01:15 2016 +0100

    ASoC: wm8994: Fix enum ctl accesses in a wrong type
    
    commit 8019c0b37cd5a87107808300a496388b777225bf upstream.
    
    The DRC Mode like "AIF1DRC1 Mode" and EQ Mode like "AIF1.1 EQ Mode" in
    wm8994 codec driver are enum ctls, while the current driver accesses
    wrongly via value.integer.value[].  They have to be via
    value.enumerated.item[] instead.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48034ae67832eda955353f686416228baefafed1
Author: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
Date:   Thu Feb 18 15:47:13 2016 +0000

    ASoC: samsung: Use IRQ safe spin lock calls
    
    commit 316fa9e09ad76e095b9d7e9350c628b918370a22 upstream.
    
    Lockdep warns of a potential lock inversion, i2s->lock is held numerous
    times whilst we are under the substream lock (snd_pcm_stream_lock). If
    we use the IRQ unsafe spin lock calls, you can also end up locking
    snd_pcm_stream_lock whilst under i2s->lock (if an IRQ happens whilst we
    are holding i2s->lock). This could result in deadlock.
    
    [   18.147001]        CPU0                    CPU1
    [   18.151509]        ----                    ----
    [   18.156022]   lock(&(&pri_dai->spinlock)->rlock);
    [   18.160701]                                local_irq_disable();
    [   18.166622]                                lock(&(&substream->self_group.lock)->rlock);
    [   18.174595]                                lock(&(&pri_dai->spinlock)->rlock);
    [   18.181806]   <Interrupt>
    [   18.184408]     lock(&(&substream->self_group.lock)->rlock);
    [   18.190045]
    [   18.190045]  *** DEADLOCK ***
    
    This patch changes to using the irq safe spinlock calls, to avoid this
    issue.
    
    Fixes: ce8bcdbb61d9 ("ASoC: samsung: i2s: Protect more registers with a spinlock")
    Signed-off-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Tested-by: Anand Moon <linux.amoon@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21a397c8ec9180ab9d064b4b0954191c8b383799
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 29 17:20:48 2016 +0100

    ASoC: dapm: Fix ctl value accesses in a wrong type
    
    commit 741338f99f16dc24d2d01ac777b0798ae9d10a90 upstream.
    
    snd_soc_dapm_dai_link_get() and _put() access the associated ctl
    values as value.integer.value[].  However, this is an enum ctl, and it
    has to be accessed via value.enumerated.item[].  The former is long
    while the latter is unsigned int, so they don't align.
    
    Fixes: c66150824b8a ('ASoC: dapm: add code to configure dai link parameters')
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c92cc68a18238456bda23678d96e91afd9a8f6c
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Mar 7 22:17:07 2016 -0500

    ncpfs: fix a braino in OOM handling in ncp_fill_cache()
    
    commit 803c00123a8012b3a283c0530910653973ef6d8f upstream.
    
    Failing to allocate an inode for child means that cache for *parent* is
    incompletely populated.  So it's parent directory inode ('dir') that
    needs NCPI_DIR_CACHE flag removed, *not* the child inode ('inode', which
    is what we'd failed to allocate in the first place).
    
    Fucked-up-in: commit 5e993e25 ("ncpfs: get rid of d_validate() nonsense")
    Fucked-up-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a29fe6f3c9c25c0cf3d190e0c0667da3ef4ca611
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Mar 7 23:07:10 2016 -0500

    jffs2: reduce the breakage on recovery from halfway failed rename()
    
    commit f93812846f31381d35c04c6c577d724254355e7f upstream.
    
    d_instantiate(new_dentry, old_inode) is absolutely wrong thing to
    do - it will oops if new_dentry used to be positive, for starters.
    What we need is d_invalidate() the target and be done with that.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 782cfeb248a789e4ee9d9bcea1211e718df76f3b
Author: Ludovic Desroches <ludovic.desroches@atmel.com>
Date:   Thu Mar 10 10:17:55 2016 +0100

    dmaengine: at_xdmac: fix residue computation
    
    commit 25c5e9626ca4d40928dc9c44f009ce2ed0a739e7 upstream.
    
    When computing the residue we need two pieces of information: the current
    descriptor and the remaining data of the current descriptor. To get
    that information, we need to read consecutively two registers but we
    can't do it in an atomic way. For that reason, we have to check manually
    that current descriptor has not changed.
    
    Signed-off-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Suggested-by: Cyrille Pitchen <cyrille.pitchen@atmel.com>
    Reported-by: David Engraf <david.engraf@sysgo.com>
    Tested-by: David Engraf <david.engraf@sysgo.com>
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel
    eXtended DMA Controller driver")
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3c83858c6aee893f8a3555aab3b72ae72f0f39f
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Mar 9 11:58:41 2016 -0500

    tracing: Fix check for cpu online when event is disabled
    
    commit dc17147de328a74bbdee67c1bf37d2f1992de756 upstream.
    
    Commit f37755490fe9b ("tracepoints: Do not trace when cpu is offline") added
    a check to make sure that tracepoints only get called when the cpu is
    online, as it uses rcu_read_lock_sched() for protection.
    
    Commit 3a630178fd5f3 ("tracing: generate RCU warnings even when tracepoints
    are disabled") added lockdep checks (including rcu checks) for events that
    are not enabled to catch possible RCU issues that would only be triggered if
    a trace event was enabled. Commit f37755490fe9b only stopped the warnings
    when the trace event was enabled but did not prevent warnings if the trace
    event was called when disabled.
    
    To fix this, the cpu online check is moved to where the condition is added
    to the trace event. This will place the cpu online check in all places that
    it may be used now and in the future.
    
    Fixes: f37755490fe9b ("tracepoints: Do not trace when cpu is offline")
    Fixes: 3a630178fd5f3 ("tracing: generate RCU warnings even when tracepoints are disabled")
    Reported-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc5a60756e536494af2fb4d044cd65a765eeddae
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Mar 1 12:58:06 2016 +0100

    s390/dasd: fix diag 0x250 inline assembly
    
    commit ce0c12b633846a47e103842149a5bac2e5d261ec upstream.
    
    git commit 1ec2772e0c3c ("s390/diag: add a statistic for diagnose
    calls") added function calls to gather diagnose statistics.
    
    In case of the dasd diag driver the function call was added between a
    register asm statement which initialized register r2 and the inline
    assembly itself.  The function call clobbers the contents of register
    r2 and therefore the diag 0x250 call behaves in a more or less random
    way.
    
    Fix this by extracting the function call into a separate function like
    we do everywhere else.
    
    Fixes: 1ec2772e0c3c ("s390/diag: add a statistic for diagnose calls")
    Reported-and-tested-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5833fac3b88d39b39402309399e8b0aaa54e5f75
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Feb 15 14:46:49 2016 +0100

    s390/mm: four page table levels vs. fork
    
    commit 3446c13b268af86391d06611327006b059b8bab1 upstream.
    
    The fork of a process with four page table levels is broken since
    git commit 6252d702c5311ce9 "[S390] dynamic page tables."
    
    All new mm contexts are created with three page table levels and
    an asce limit of 4TB. If the parent has four levels dup_mmap will
    add vmas to the new context which are outside of the asce limit.
    The subsequent call to copy_page_range will walk the three level
    page table structure of the new process with non-zero pgd and pud
    indexes. This leads to memory clobbers as the pgd_index *and* the
    pud_index is added to the mm->pgd pointer without a pgd_deref
    in between.
    
    The init_new_context() function is selecting the number of page
    table levels for a new context. The function is used by mm_init()
    which in turn is called by dup_mm() and mm_alloc(). These two are
    used by fork() and exec(). The init_new_context() function can
    distinguish the two cases by looking at mm->context.asce_limit,
    for fork() the mm struct has been copied and the number of page
    table levels may not change. For exec() the mm_alloc() function
    set the new mm structure to zero, in this case a three-level page
    table is created as the temporary stack space is located at
    STACK_TOP_MAX = 4TB.
    
    This fixes CVE-2016-2143.
    
    Reported-by: Marcin Kościelnicki <koriakin@0x04.net>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ebd29d6b940626569c18bd7673550078ae855da
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Mar 9 14:28:02 2016 +0100

    KVM: MMU: fix reserved bit check for ept=0/CR0.WP=0/CR4.SMEP=1/EFER.NX=0
    
    commit 5f0b819995e172f48fdcd91335a2126ba7d9deae upstream.
    
    KVM has special logic to handle pages with pte.u=1 and pte.w=0 when
    CR0.WP=1.  These pages' SPTEs flip continuously between two states:
    U=1/W=0 (user and supervisor reads allowed, supervisor writes not allowed)
    and U=0/W=1 (supervisor reads and writes allowed, user writes not allowed).
    
    When SMEP is in effect, however, U=0 will enable kernel execution of
    this page.  To avoid this, KVM also sets NX=1 in the shadow PTE together
    with U=0, making the two states U=1/W=0/NX=gpte.NX and U=0/W=1/NX=1.
    When guest EFER has the NX bit cleared, the reserved bit check thinks
    that the latter state is invalid; teach it that the smep_andnot_wp case
    will also use the NX bit of SPTEs.
    
    Reviewed-by: Xiao Guangrong <guangrong.xiao@linux.inel.com>
    Fixes: c258b62b264fdc469b6d3610a907708068145e3b
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68ed2ca153c74438cff147eeabc3306c07d730bb
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Mar 8 12:13:39 2016 +0100

    KVM: MMU: fix ept=0/pte.u=1/pte.w=0/CR0.WP=0/CR4.SMEP=1/EFER.NX=0 combo
    
    commit 844a5fe219cf472060315971e15cbf97674a3324 upstream.
    
    Yes, all of these are needed. :) This is admittedly a bit odd, but
    kvm-unit-tests access.flat tests this if you run it with "-cpu host"
    and of course ept=0.
    
    KVM runs the guest with CR0.WP=1, so it must handle supervisor writes
    specially when pte.u=1/pte.w=0/CR0.WP=0.  Such writes cause a fault
    when U=1 and W=0 in the SPTE, but they must succeed because CR0.WP=0.
    When KVM gets the fault, it sets U=0 and W=1 in the shadow PTE and
    restarts execution.  This will still cause a user write to fault, while
    supervisor writes will succeed.  User reads will fault spuriously now,
    and KVM will then flip U and W again in the SPTE (U=1, W=0).  User reads
    will be enabled and supervisor writes disabled, going back to the
    originary situation where supervisor writes fault spuriously.
    
    When SMEP is in effect, however, U=0 will enable kernel execution of
    this page.  To avoid this, KVM also sets NX=1 in the shadow PTE together
    with U=0.  If the guest has not enabled NX, the result is a continuous
    stream of page faults due to the NX bit being reserved.
    
    The fix is to force EFER.NX=1 even if the CPU is taking care of the EFER
    switch.  (All machines with SMEP have the CPU_LOAD_IA32_EFER vm-entry
    control, so they do not use user-return notifiers for EFER---if they did,
    EFER.NX would be forced to the same value as the host).
    
    There is another bug in the reserved bit check, which I've split to a
    separate patch for easier application to stable kernels.
    
    Cc: Andy Lutomirski <luto@amacapital.net>
    Reviewed-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>
    Fixes: f6577a5fa15d82217ca73c74cd2dcbc0f6c781dd
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c463a390a89beb929ed2750c79d6eb6d06c7cdd
Author: Paul Mackerras <paulus@samba.org>
Date:   Sat Mar 5 19:34:39 2016 +1100

    KVM: PPC: Book3S HV: Sanitize special-purpose register values on guest exit
    
    commit ccec44563b18a0ce90e2d4f332784b3cb25c8e9c upstream.
    
    Thomas Huth discovered that a guest could cause a hard hang of a
    host CPU by setting the Instruction Authority Mask Register (IAMR)
    to a suitable value.  It turns out that this is because when the
    code was added to context-switch the new special-purpose registers
    (SPRs) that were added in POWER8, we forgot to add code to ensure
    that they were restored to a sane value on guest exit.
    
    This adds code to set those registers where a bad value could
    compromise the execution of the host kernel to a suitable neutral
    value on guest exit.
    
    Fixes: b005255e12a3
    Reported-by: Thomas Huth <thuth@redhat.com>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78939530542f409efa9f6c2a34c8463ab745aa64
Author: David Hildenbrand <dahi@linux.vnet.ibm.com>
Date:   Tue Mar 8 12:24:30 2016 +0100

    KVM: s390: correct fprs on SIGP (STOP AND) STORE STATUS
    
    commit 9522b37f5a8c7bfabe46eecadf2e130f1103f337 upstream.
    
    With MACHINE_HAS_VX, we convert the floating point registers from the
    vector registeres when storing the status. For other VCPUs, these are
    stored to vcpu->run->s.regs.vrs, but we are using current->thread.fpu.vxrs,
    which resolves to the currently loaded VCPU.
    
    So kvm_s390_store_status_unloaded() currently writes the wrong floating
    point registers (converted from the vector registers) when called from
    another VCPU on a z13.
    
    This is only the case for old user space not handling SIGP STORE STATUS and
    SIGP STOP AND STORE STATUS, but relying on the kernel implementation. All
    other calls come from the loaded VCPU via kvm_s390_store_status().
    
    Fixes: 9abc2a08a7d6 (KVM: s390: fix memory overwrites when vx is disabled)
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bbe5fa4f79aecdbd38331c81cdaa95990d4f04e
Author: Radim Krčmář <rkrcmar@redhat.com>
Date:   Fri Mar 4 15:08:42 2016 +0100

    KVM: VMX: disable PEBS before a guest entry
    
    commit 7099e2e1f4d9051f31bbfa5803adf954bb5d76ef upstream.
    
    Linux guests on Haswell (and also SandyBridge and Broadwell, at least)
    would crash if you decided to run a host command that uses PEBS, like
      perf record -e 'cpu/mem-stores/pp' -a
    
    This happens because KVM is using VMX MSR switching to disable PEBS, but
    SDM [2015-12] 18.4.4.4 Re-configuring PEBS Facilities explains why it
    isn't safe:
      When software needs to reconfigure PEBS facilities, it should allow a
      quiescent period between stopping the prior event counting and setting
      up a new PEBS event. The quiescent period is to allow any latent
      residual PEBS records to complete its capture at their previously
      specified buffer address (provided by IA32_DS_AREA).
    
    There might not be a quiescent period after the MSR switch, so a CPU
    ends up using host's MSR_IA32_DS_AREA to access an area in guest's
    memory.  (Or MSR switching is just buggy on some models.)
    
    The guest can learn something about the host this way:
    If the guest doesn't map address pointed by MSR_IA32_DS_AREA, it results
    in #PF where we leak host's MSR_IA32_DS_AREA through CR2.
    
    After that, a malicious guest can map and configure memory where
    MSR_IA32_DS_AREA is pointing and can therefore get an output from
    host's tracing.
    
    This is not a critical leak as the host must initiate with PEBS tracing
    and I have not been able to get a record from more than one instruction
    before vmentry in vmx_vcpu_run() (that place has most registers already
    overwritten with guest's).
    
    We could disable PEBS just few instructions before vmentry, but
    disabling it earlier shouldn't affect host tracing too much.
    We also don't need to switch MSR_IA32_PEBS_ENABLE on VMENTRY, but that
    optimization isn't worth its code, IMO.
    
    (If you are implementing PEBS for guests, be sure to handle the case
     where both host and guest enable PEBS, because this patch doesn't.)
    
    Fixes: 26a4f3c08de4 ("perf/x86: disable PEBS on a guest entry.")
    Reported-by: Jiří Olša <jolsa@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9e1bbef7e774dd315fb7f2e239c39cd2bb9674b
Author: David Matlack <dmatlack@google.com>
Date:   Tue Mar 8 16:19:44 2016 -0800

    kvm: cap halt polling at exactly halt_poll_ns
    
    commit 313f636d5c490c9741d3f750dc8da33029edbc6b upstream.
    
    When growing halt-polling, there is no check that the poll time exceeds
    the limit. It's possible for vcpu->halt_poll_ns grow once past
    halt_poll_ns, and stay there until a halt which takes longer than
    vcpu->halt_poll_ns. For example, booting a Linux guest with
    halt_poll_ns=11000:
    
     ... kvm:kvm_halt_poll_ns: vcpu 0: halt_poll_ns 0 (shrink 10000)
     ... kvm:kvm_halt_poll_ns: vcpu 0: halt_poll_ns 10000 (grow 0)
     ... kvm:kvm_halt_poll_ns: vcpu 0: halt_poll_ns 20000 (grow 10000)
    
    Signed-off-by: David Matlack <dmatlack@google.com>
    Fixes: aca6ff29c4063a8d467cdee241e6b3bf7dc4a171
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 431c9f011595ab1dc5ccac2d7d094b5a6bd519a4
Author: Krzysztof Hałasa <khalasa@piap.pl>
Date:   Tue Mar 1 07:07:18 2016 +0100

    PCI: Allow a NULL "parent" pointer in pci_bus_assign_domain_nr()
    
    commit 54c6e2dd00c313d0add58e5befe62fe6f286d03b upstream.
    
    pci_create_root_bus() passes a "parent" pointer to
    pci_bus_assign_domain_nr().  When CONFIG_PCI_DOMAINS_GENERIC is defined,
    pci_bus_assign_domain_nr() dereferences that pointer.  Many callers of
    pci_create_root_bus() supply a NULL "parent" pointer, which leads to a NULL
    pointer dereference error.
    
    7c674700098c ("PCI: Move domain assignment from arm64 to generic code")
    moved the "parent" dereference from arm64 to generic code.  Only arm64 used
    that code (because only arm64 defined CONFIG_PCI_DOMAINS_GENERIC), and it
    always supplied a valid "parent" pointer.  Other arches supplied NULL
    "parent" pointers but didn't defined CONFIG_PCI_DOMAINS_GENERIC, so they
    used a no-op version of pci_bus_assign_domain_nr().
    
    8c7d14746abc ("ARM/PCI: Move to generic PCI domains") defined
    CONFIG_PCI_DOMAINS_GENERIC on ARM, and many ARM platforms use
    pci_common_init(), which supplies a NULL "parent" pointer.
    These platforms (cns3xxx, dove, footbridge, iop13xx, etc.) crash
    with a NULL pointer dereference like this while probing PCI:
    
      Unable to handle kernel NULL pointer dereference at virtual address 000000a4
      PC is at pci_bus_assign_domain_nr+0x10/0x84
      LR is at pci_create_root_bus+0x48/0x2e4
      Kernel panic - not syncing: Attempted to kill init!
    
    [bhelgaas: changelog, add "Reported:" and "Fixes:" tags]
    Reported: http://forum.doozan.com/read.php?2,17868,22070,quote=1
    Fixes: 8c7d14746abc ("ARM/PCI: Move to generic PCI domains")
    Fixes: 7c674700098c ("PCI: Move domain assignment from arm64 to generic code")
    Signed-off-by: Krzysztof Hałasa <khalasa@piap.pl>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6327a31a3f875c438ca13058bc4c73f1a752cd8a
Author: Lokesh Vutla <lokeshvutla@ti.com>
Date:   Mon Mar 7 01:41:21 2016 -0700

    ARM: OMAP2+: hwmod: Introduce ti,no-idle dt property
    
    commit 2e18f5a1bc18e8af7031b3b26efde25307014837 upstream.
    
    Introduce a dt property, ti,no-idle, that prevents an IP to idle at any
    point. This is to handle Errata i877, which tells that GMAC clocks
    cannot be disabled.
    
    Acked-by: Roger Quadros <rogerq@ti.com>
    Tested-by: Mugunthan V N <mugunthanvnm@ti.com>
    Signed-off-by: Lokesh Vutla <lokeshvutla@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Dave Gerlach <d-gerlach@ti.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 958df498a691413a38246a3b8d3866c504e6fab0
Author: Mugunthan V N <mugunthanvnm@ti.com>
Date:   Mon Mar 7 01:41:22 2016 -0700

    ARM: dts: dra7: do not gate cpsw clock due to errata i877
    
    commit 0f514e690740e54815441a87708c3326f8aa8709 upstream.
    
    Errata id: i877
    
    Description:
    ------------
    The RGMII 1000 Mbps Transmit timing is based on the output clock
    (rgmiin_txc) being driven relative to the rising edge of an internal
    clock and the output control/data (rgmiin_txctl/txd) being driven relative
    to the falling edge of an internal clock source. If the internal clock
    source is allowed to be static low (i.e., disabled) for an extended period
    of time then when the clock is actually enabled the timing delta between
    the rising edge and falling edge can change over the lifetime of the
    device. This can result in the device switching characteristics degrading
    over time, and eventually failing to meet the Data Manual Delay Time/Skew
    specs.
    To maintain RGMII 1000 Mbps IO Timings, SW should minimize the
    duration that the Ethernet internal clock source is disabled. Note that
    the device reset state for the Ethernet clock is "disabled".
    Other RGMII modes (10 Mbps, 100Mbps) are not affected
    
    Workaround:
    -----------
    If the SoC Ethernet interface(s) are used in RGMII mode at 1000 Mbps,
    SW should minimize the time the Ethernet internal clock source is disabled
    to a maximum of 200 hours in a device life cycle. This is done by enabling
    the clock as early as possible in IPL (QNX) or SPL/u-boot (Linux/Android)
    by setting the register CM_GMAC_CLKSTCTRL[1:0]CLKTRCTRL = 0x2:SW_WKUP.
    
    So, do not allow to gate the cpsw clocks using ti,no-idle property in
    cpsw node assuming 1000 Mbps is being used all the time. If someone does
    not need 1000 Mbps and wants to gate clocks to cpsw, this property needs
    to be deleted in their respective board files.
    
    Signed-off-by: Mugunthan V N <mugunthanvnm@ti.com>
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Lokesh Vutla <lokeshvutla@ti.com>
    Signed-off-by: Paul Walmsley <paul@pwsan.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 744744e2b69a31d45696c97b9b08b90e90cc35db
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Tue Mar 8 16:59:57 2016 +0100

    ARM: mvebu: fix overlap of Crypto SRAM with PCIe memory window
    
    commit d7d5a43c0d16760f25d892bf9329848167a8b8a4 upstream.
    
    When the Crypto SRAM mappings were added to the Device Tree files
    describing the Armada XP boards in commit c466d997bb16 ("ARM: mvebu:
    define crypto SRAM ranges for all armada-xp boards"), the fact that
    those mappings were overlaping with the PCIe memory aperture was
    overlooked. Due to this, we currently have for all Armada XP platforms
    a situation that looks like this:
    
    Memory mapping on Armada XP boards with internal registers at
    0xf1000000:
    
     - 0x00000000 -> 0xf0000000     3.75G   RAM
     - 0xf0000000 -> 0xf1000000     16M     NOR flashes (AXP GP / AXP DB)
     - 0xf1000000 -> 0xf1100000     1M      internal registers
     - 0xf8000000 -> 0xffe0000      126M    PCIe memory aperture
     - 0xf8100000 -> 0xf8110000     64KB    Crypto SRAM #0  => OVERLAPS WITH PCIE !
     - 0xf8110000 -> 0xf8120000     64KB    Crypto SRAM #1  => OVERLAPS WITH PCIE !
     - 0xffe00000 -> 0xfff00000     1M      PCIe I/O aperture
     - 0xfff0000  -> 0xffffffff     1M      BootROM
    
    The overlap means that when PCIe devices are added, depending on their
    memory window needs, they might or might not be mapped into the
    physical address space. Indeed, they will not be mapped if the area
    allocated in the PCIe memory aperture by the PCI core overlaps with
    one of the Crypto SRAM. Typically, a Intel IGB PCIe NIC that needs 8MB
    of PCIe memory will see its PCIe memory window allocated from
    0xf80000000 for 8MB, which overlaps with the Crypto SRAM windows. Due
    to this, the PCIe window is not created, and any attempt to access the
    PCIe window makes the kernel explode:
    
    [    3.302213] igb: Copyright (c) 2007-2014 Intel Corporation.
    [    3.307841] pci 0000:00:09.0: enabling device (0140 -> 0143)
    [    3.313539] mvebu_mbus: cannot add window '4:f8', conflicts with another window
    [    3.320870] mvebu-pcie soc:pcie-controller: Could not create MBus window at [mem 0xf8000000-0xf87fffff]: -22
    [    3.330811] Unhandled fault: external abort on non-linefetch (0x1008) at 0xf08c0018
    
    This problem does not occur on Armada 370 boards, because we use the
    following memory mapping (for boards that have internal registers at
    0xf1000000):
    
     - 0x00000000 -> 0xf0000000     3.75G   RAM
     - 0xf0000000 -> 0xf1000000     16M     NOR flashes (AXP GP / AXP DB)
     - 0xf1000000 -> 0xf1100000     1M      internal registers
     - 0xf1100000 -> 0xf1110000     64KB    Crypto SRAM #0 => OK !
     - 0xf8000000 -> 0xffe0000      126M    PCIe memory
     - 0xffe00000 -> 0xfff00000     1M      PCIe I/O
     - 0xfff0000  -> 0xffffffff     1M      BootROM
    
    Obviously, the solution is to align the location of the Crypto SRAM
    mappings of Armada XP to be similar with the ones on Armada 370, i.e
    have them between the "internal registers" area and the beginning of
    the PCIe aperture.
    
    However, we have a special case with the OpenBlocks AX3-4 platform,
    which has a 128 MB NOR flash. Currently, this NOR flash is mapped from
    0xf0000000 to 0xf8000000. This is possible because on OpenBlocks
    AX3-4, the internal registers are not at 0xf1000000. And this explains
    why the Crypto SRAM mappings were not configured at the same place on
    Armada XP.
    
    Hence, the solution is two-fold:
    
     (1) Move the NOR flash mapping on Armada XP OpenBlocks AX3-4 from
         0xe8000000 to 0xf0000000. This frees the 0xf0000000 ->
         0xf80000000 space.
    
     (2) Move the Crypto SRAM mappings on Armada XP to be similar to
         Armada 370 (except of course that Armada XP has two Crypto SRAM
         and not one).
    
    After this patch, the memory mapping on Armada XP boards with
    registers at 0xf1 is:
    
     - 0x00000000 -> 0xf0000000     3.75G   RAM
     - 0xf0000000 -> 0xf1000000     16M     NOR flashes (AXP GP / AXP DB)
     - 0xf1000000 -> 0xf1100000     1M      internal registers
     - 0xf1100000 -> 0xf1110000     64KB    Crypto SRAM #0
     - 0xf1110000 -> 0xf1120000     64KB    Crypto SRAM #1
     - 0xf8000000 -> 0xffe0000      126M    PCIe memory
     - 0xffe00000 -> 0xfff00000     1M      PCIe I/O
     - 0xfff0000  -> 0xffffffff     1M      BootROM
    
    And the memory mapping for the special case of the OpenBlocks AX3-4
    (internal registers at 0xd0000000, NOR of 128 MB):
    
     - 0x00000000 -> 0xc0000000     3G      RAM
     - 0xd0000000 -> 0xd1000000     1M      internal registers
     - 0xe800000  -> 0xf0000000     128M    NOR flash
     - 0xf1100000 -> 0xf1110000     64KB    Crypto SRAM #0
     - 0xf1110000 -> 0xf1120000     64KB    Crypto SRAM #1
     - 0xf8000000 -> 0xffe0000      126M    PCIe memory
     - 0xffe00000 -> 0xfff00000     1M      PCIe I/O
     - 0xfff0000  -> 0xffffffff     1M      BootROM
    
    Fixes: c466d997bb16 ("ARM: mvebu: define crypto SRAM ranges for all armada-xp boards")
    Reported-by: Phil Sutter <phil@nwl.cc>
    Cc: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Acked-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97142f3009557c27091c694f927041f28ef81573
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Mar 8 21:09:29 2016 +0700

    arm64: account for sparsemem section alignment when choosing vmemmap offset
    
    commit 36e5cd6b897e17d03008f81e075625d8e43e52d0 upstream.
    
    Commit dfd55ad85e4a ("arm64: vmemmap: use virtual projection of linear
    region") fixed an issue where the struct page array would overflow into the
    adjacent virtual memory region if system RAM was placed so high up in
    physical memory that its addresses were not representable in the build time
    configured virtual address size.
    
    However, the fix failed to take into account that the vmemmap region needs
    to be relatively aligned with respect to the sparsemem section size, so that
    a sequence of page structs corresponding with a sparsemem section in the
    linear region appears naturally aligned in the vmemmap region.
    
    So round up vmemmap to sparsemem section size. Since this essentially moves
    the projection of the linear region up in memory, also revert the reduction
    of the size of the vmemmap region.
    
    Fixes: dfd55ad85e4a ("arm64: vmemmap: use virtual projection of linear region")
    Tested-by: Mark Langsdorf <mlangsdo@redhat.com>
    Tested-by: David Daney <david.daney@cavium.com>
    Tested-by: Robert Richter <rrichter@cavium.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
