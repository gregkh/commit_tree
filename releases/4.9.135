commit b24c9962b179803dc1d51f17cf1acc58be8bbb2e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Oct 20 09:51:33 2018 +0200

    Linux 4.9.135

commit 68747bc054d3a30141aba12082a33cddce9b54ec
Author: Long Li <longli@microsoft.com>
Date:   Sun Apr 30 16:21:19 2017 -0700

    HV: properly delay KVP packets when negotiation is in progress
    
    commit a3ade8cc474d848676278660e65f5af1e9e094d9 upstream.
    
    The host may send multiple negotiation packets
    (due to timeout) before the KVP user-mode daemon
    is connected. KVP user-mode daemon is connected.
    We need to defer processing those packets
    until the daemon is negotiated and connected.
    It's okay for guest to respond
    to all negotiation packets.
    
    In addition, the host may send multiple staged
    KVP requests as soon as negotiation is done.
    We need to properly process those packets using one
    tasklet for exclusive access to ring buffer.
    
    This patch is based on the work of
    Nick Meier <Nick.Meier@microsoft.com>.
    
    The above is the original changelog of
    a3ade8cc474d ("HV: properly delay KVP packets when negotiation is in progress"
    
    Here I re-worked the original patch because the mainline version
    can't work for the linux-4.4.y branch, on which channel->callback_event
    doesn't exist yet. In the mainline, channel->callback_event was added by:
    631e63a9f346 ("vmbus: change to per channel tasklet"). Here we don't want
    to backport it to v4.4, as it requires extra supporting changes and fixes,
    which are unnecessary as to the KVP bug we're trying to resolve.
    
    NOTE: before this patch is used, we should cherry-pick the other related
    3 patches from the mainline first:
    
    The background of this backport request is that: recently Wang Jian reported
    some KVP issues: https://github.com/LIS/lis-next/issues/593:
    e.g. the /var/lib/hyperv/.kvp_pool_* files can not be updated, and sometimes
    if the hv_kvp_daemon doesn't timely start, the host may not be able to query
    the VM's IP address via KVP.
    
    Reported-by: Wang Jian <jianjian.wang1@gmail.com>
    Tested-by: Wang Jian <jianjian.wang1@gmail.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dd55897f23c4e3e3a864c5c72722f7e412138e9
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Jun 16 23:41:59 2018 -0400

    ext4: avoid running out of journal credits when appending to an inline file
    
    commit 8bc1379b82b8e809eef77a9fedbb75c6c297be19 upstream.
    
    Use a separate journal transaction if it turns out that we need to
    convert an inline file to use an data block.  Otherwise we could end
    up failing due to not having journal credits.
    
    This addresses CVE-2018-10883.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=200071
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    [fengc@google.com: 4.4 and 4.9 backport: adjust context]
    Signed-off-by: Chenbo Feng <fengc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aee0c9e837c2d33cb072cbea01511fb77edc7ff8
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Apr 25 16:10:48 2017 +0200

    sched/cputime: Fix ksoftirqd cputime accounting regression
    
    commit 25e2d8c1b9e327ed260edd13169cc22bc7a78bc6 upstream.
    
    irq_time_read() returns the irqtime minus the ksoftirqd time. This
    is necessary because irq_time_read() is used to substract the IRQ time
    from the sum_exec_runtime of a task. If we were to include the softirq
    time of ksoftirqd, this task would substract its own CPU time everytime
    it updates ksoftirqd->sum_exec_runtime which would therefore never
    progress.
    
    But this behaviour got broken by:
    
      a499a5a14db ("sched/cputime: Increment kcpustat directly on irqtime account")
    
    ... which now includes ksoftirqd softirq time in the time returned by
    irq_time_read().
    
    This has resulted in wrong ksoftirqd cputime reported to userspace
    through /proc/stat and thus "top" not showing ksoftirqd when it should
    after intense networking load.
    
    ksoftirqd->stime happens to be correct but it gets scaled down by
    sum_exec_runtime through task_cputime_adjusted().
    
    To fix this, just account the strict IRQ time in a separate counter and
    use it to report the IRQ time.
    
    Reported-and-tested-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Reviewed-by: Rik van Riel <riel@redhat.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stanislaw Gruszka <sgruszka@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Wanpeng Li <wanpeng.li@hotmail.com>
    Link: http://lkml.kernel.org/r/1493129448-5356-1-git-send-email-fweisbec@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ivan Delalande <colona@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 034cd8a20fac15adb526234b61218bbae0b94406
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Jan 31 04:09:32 2017 +0100

    sched/cputime: Increment kcpustat directly on irqtime account
    
    commit a499a5a14dbd1d0315a96fc62a8798059325e9e6 upstream.
    
    The irqtime is accounted is nsecs and stored in
    cpu_irq_time.hardirq_time and cpu_irq_time.softirq_time. Once the
    accumulated amount reaches a new jiffy, this one gets accounted to the
    kcpustat.
    
    This was necessary when kcpustat was stored in cputime_t, which could at
    worst have jiffies granularity. But now kcpustat is stored in nsecs
    so this whole discretization game with temporary irqtime storage has
    become unnecessary.
    
    We can now directly account the irqtime to the kcpustat.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Stanislaw Gruszka <sgruszka@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Wanpeng Li <wanpeng.li@hotmail.com>
    Link: http://lkml.kernel.org/r/1485832191-26889-17-git-send-email-fweisbec@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ivan Delalande <colona@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74d6f8eac6eaf486b0bd6c1f30bd33fff43808c1
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Jan 31 04:09:20 2017 +0100

    macintosh/rack-meter: Convert cputime64_t use to u64
    
    commit 564b733c899f4e12a64946658960fce80cad0b05 upstream.
    
    cputime_t is going to be removed and replaced by nsecs units,
    so convert the drivers/macintosh/rack-meter.c use to u64..
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Stanislaw Gruszka <sgruszka@redhat.com>
    Cc: Wanpeng Li <wanpeng.li@hotmail.com>
    Link: http://lkml.kernel.org/r/1485832191-26889-5-git-send-email-fweisbec@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ivan Delalande <colona@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbf9a0532e028aacfed113995f32d93d4a388f04
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Jan 31 04:09:19 2017 +0100

    sched/cputime: Convert kcpustat to nsecs
    
    commit 7fb1327ee9b92fca27662f9b9d60c7c3376d6c69 upstream.
    
    Kernel CPU stats are stored in cputime_t which is an architecture
    defined type, and hence a bit opaque and requiring accessors and mutators
    for any operation.
    
    Converting them to nsecs simplifies the code and is one step toward
    the removal of cputime_t in the core code.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Stanislaw Gruszka <sgruszka@redhat.com>
    Cc: Wanpeng Li <wanpeng.li@hotmail.com>
    Link: http://lkml.kernel.org/r/1485832191-26889-4-git-send-email-fweisbec@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [colona: minor conflict as 527b0a76f41d ("sched/cpuacct: Avoid %lld seq_printf
     warning") is missing from v4.9]
    Signed-off-by: Ivan Delalande <colona@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92811e27679945a0cef78288e3d45bc22f3ff86f
Author: Stephen Warren <swarren@nvidia.com>
Date:   Wed Aug 16 14:30:10 2017 -0600

    usb: gadget: serial: fix oops when data rx'd after close
    
    commit daa35bd95634a2a2d72d1049c93576a02711cb1a upstream.
    
    When the gadget serial device has no associated TTY, do not pass any
    received data into the TTY layer for processing; simply drop it instead.
    This prevents the TTY layer from calling back into the gadget serial
    driver, which will then crash in e.g. gs_write_room() due to lack of
    gadget serial device to TTY association (i.e. a NULL pointer dereference).
    
    Signed-off-by: Stephen Warren <swarren@nvidia.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f01e8fee66fd4cb10407ac68e52b579c9b65ee20
Author: Natanael Copa <ncopa@alpinelinux.org>
Date:   Thu Oct 18 17:04:17 2018 +0200

    HID: quirks: fix support for Apple Magic Keyboards
    
    Commit b6cc0ba2cbf4 (HID: add support for Apple Magic Keyboards)
    backported support for the Magic Keyboard over Bluetooth, but did not
    add the BT_VENDOR_ID_APPLE to hid_have_special_driver[] so the hid-apple
    driver is never loaded and Fn key does not work at all.
    
    Adding BT_VENDOR_ID_APPLE to hid_have_special_driver[] is not needed
    after commit e04a0442d33b (HID: core: remove the absolute need of
    hid_have_special_driver[]), so 4.16 kernels and newer does not need it.
    
    Fixes: b6cc0ba2cbf4 (HID: add support for Apple Magic Keyboards)
    Bugzilla-id: https://bugzilla.kernel.org/show_bug.cgi?id=99881
    Signed-off-by: Natanael Copa <ncopa@alpinelinux.org>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d4c6663ebf6988bdb67676436234041ba715585
Author: Alexey Brodkin <abrodkin@synopsys.com>
Date:   Sun Sep 16 23:47:57 2018 +0300

    ARC: build: Don't set CROSS_COMPILE in arch's Makefile
    
    commit 40660f1fcee8d524a60b5101538e42b1f39f106d upstream.
    
    There's not much sense in doing that because if user or
    his build-system didn't set CROSS_COMPILE we still may
    very well make incorrect guess.
    
    But as it turned out setting CROSS_COMPILE is not as harmless
    as one may think: with recent changes that implemented automatic
    discovery of __host__ gcc features unconditional setup of
    CROSS_COMPILE leads to failures on execution of "make xxx_defconfig"
    with absent cross-compiler, for more info see [1].
    
    Set CROSS_COMPILE as well gets in the way if we want only to build
    .dtb's (again with absent cross-compiler which is not really needed
    for building .dtb's), see [2].
    
    Note, we had to change LIBGCC assignment type from ":=" to "="
    so that is is resolved on its usage, otherwise if it is resolved
    at declaration time with missing CROSS_COMPILE we're getting this
    error message from host GCC:
    
    | gcc: error: unrecognized command line option -mmedium-calls
    | gcc: error: unrecognized command line option -mno-sdata
    
    [1] http://lists.infradead.org/pipermail/linux-snps-arc/2018-September/004308.html
    [2] http://lists.infradead.org/pipermail/linux-snps-arc/2018-September/004320.html
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Rob Herring <robh@kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4450e391ae3fc706f0910cefae0904f75f7595c
Author: Alexey Brodkin <abrodkin@synopsys.com>
Date:   Thu Sep 13 23:24:28 2018 +0300

    ARC: build: Get rid of toolchain check
    
    commit 615f64458ad890ef94abc879a66d8b27236e733a upstream.
    
    This check is very naive: we simply test if GCC invoked without
    "-mcpu=XXX" has ARC700 define set. In that case we think that GCC
    was built with "--with-cpu=arc700" and has libgcc built for ARC700.
    
    Otherwise if ARC700 is not defined we think that everythng was built
    for ARCv2.
    
    But in reality our life is much more interesting.
    
    1. Regardless of GCC configuration (i.e. what we pass in "--with-cpu"
       it may generate code for any ARC core).
    
    2. libgcc might be built with explicitly specified "--mcpu=YYY"
    
    That's exactly what happens in case of multilibbed toolchains:
     - GCC is configured with default settings
     - All the libs built for many different CPU flavors
    
    I.e. that check gets in the way of usage of multilibbed
    toolchains. And even non-multilibbed toolchains are affected.
    OpenEmbedded also builds GCC without "--with-cpu" because
    each and every target component later is compiled with explicitly
    set "-mcpu=ZZZ".
    
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc3f9ba43933d3a3291f0aea434b0276c9930386
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Aug 10 10:22:24 2017 +0800

    netfilter: check for seqadj ext existence before adding it in nf_nat_setup_info
    
    commit ab6dd1beac7be3c17f8bf3d38bdf29ecb7293f1e upstream.
    
    Commit 4440a2ab3b9f ("netfilter: synproxy: Check oom when adding synproxy
    and seqadj ct extensions") wanted to drop the packet when it fails to add
    seqadj ext due to no memory by checking if nfct_seqadj_ext_add returns
    NULL.
    
    But that nfct_seqadj_ext_add returns NULL can also happen when seqadj ext
    already exists in a nf_conn. It will cause that userspace protocol doesn't
    work when both dnat and snat are configured.
    
    Li Shuang found this issue in the case:
    
    Topo:
       ftp client                   router                  ftp server
      10.167.131.2  <-> 10.167.131.254  10.167.141.254 <-> 10.167.141.1
    
    Rules:
      # iptables -t nat -A PREROUTING -i eth1 -p tcp -m tcp --dport 21 -j \
        DNAT --to-destination 10.167.141.1
      # iptables -t nat -A POSTROUTING -o eth2 -p tcp -m tcp --dport 21 -j \
        SNAT --to-source 10.167.141.254
    
    In router, when both dnat and snat are added, nf_nat_setup_info will be
    called twice. The packet can be dropped at the 2nd time for DNAT due to
    seqadj ext is already added at the 1st time for SNAT.
    
    This patch is to fix it by checking for seqadj ext existence before adding
    it, so that the packet will not be dropped if seqadj ext already exists.
    
    Note that as Florian mentioned, as a long term, we should review ext_add()
    behaviour, it's better to return a pointer to the existing ext instead.
    
    Fixes: 4440a2ab3b9f ("netfilter: synproxy: Check oom when adding synproxy and seqadj ct extensions")
    Reported-by: Li Shuang <shuali@redhat.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3309ad2e08a575aa50133ff533d8c9b08e8af03e
Author: Jan Kara <jack@suse.cz>
Date:   Tue Oct 9 12:19:17 2018 +0200

    mm: Preserve _PAGE_DEVMAP across mprotect() calls
    
    commit 4628a64591e6cee181237060961e98c615c33966 upstream.
    
    Currently _PAGE_DEVMAP bit is not preserved in mprotect(2) calls. As a
    result we will see warnings such as:
    
    BUG: Bad page map in process JobWrk0013  pte:800001803875ea25 pmd:7624381067
    addr:00007f0930720000 vm_flags:280000f9 anon_vma:          (null) mapping:ffff97f2384056f0 index:0
    file:457-000000fe00000030-00000009-000000ca-00000001_2001.fileblock fault:xfs_filemap_fault [xfs] mmap:xfs_file_mmap [xfs] readpage:          (null)
    CPU: 3 PID: 15848 Comm: JobWrk0013 Tainted: G        W          4.12.14-2.g7573215-default #1 SLE12-SP4 (unreleased)
    Hardware name: Intel Corporation S2600WFD/S2600WFD, BIOS SE5C620.86B.01.00.0833.051120182255 05/11/2018
    Call Trace:
     dump_stack+0x5a/0x75
     print_bad_pte+0x217/0x2c0
     ? enqueue_task_fair+0x76/0x9f0
     _vm_normal_page+0xe5/0x100
     zap_pte_range+0x148/0x740
     unmap_page_range+0x39a/0x4b0
     unmap_vmas+0x42/0x90
     unmap_region+0x99/0xf0
     ? vma_gap_callbacks_rotate+0x1a/0x20
     do_munmap+0x255/0x3a0
     vm_munmap+0x54/0x80
     SyS_munmap+0x1d/0x30
     do_syscall_64+0x74/0x150
     entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    ...
    
    when mprotect(2) gets used on DAX mappings. Also there is a wide variety
    of other failures that can result from the missing _PAGE_DEVMAP flag
    when the area gets used by get_user_pages() later.
    
    Fix the problem by including _PAGE_DEVMAP in a set of flags that get
    preserved by mprotect(2).
    
    Fixes: 69660fd797c3 ("x86, mm: introduce _PAGE_DEVMAP")
    Fixes: ebd31197931d ("powerpc/mm: Add devmap support for ppc64")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e34bd9a96704f7089ccad61b6e01ea985fa54dd6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 12 15:22:59 2018 -0700

    mremap: properly flush TLB before releasing the page
    
    commit eb66ae030829605d61fbef1909ce310e29f78821 upstream.
    
    Jann Horn points out that our TLB flushing was subtly wrong for the
    mremap() case.  What makes mremap() special is that we don't follow the
    usual "add page to list of pages to be freed, then flush tlb, and then
    free pages".  No, mremap() obviously just _moves_ the page from one page
    table location to another.
    
    That matters, because mremap() thus doesn't directly control the
    lifetime of the moved page with a freelist: instead, the lifetime of the
    page is controlled by the page table locking, that serializes access to
    the entry.
    
    As a result, we need to flush the TLB not just before releasing the lock
    for the source location (to avoid any concurrent accesses to the entry),
    but also before we release the destination page table lock (to avoid the
    TLB being flushed after somebody else has already done something to that
    page).
    
    This also makes the whole "need_flush" logic unnecessary, since we now
    always end up flushing the TLB for every valid entry.
    
    Reported-and-tested-by: Jann Horn <jannh@google.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Tested-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 792a9648aebf685073348ba556cf6c5e809b47ca
Author: Arindam Nath <arindam.nath@amd.com>
Date:   Tue Sep 18 15:40:58 2018 +0530

    iommu/amd: Return devid as alias for ACPI HID devices
    
    [ Upstream commit 5ebb1bc2d63d90dd204169e21fd7a0b4bb8c776e ]
    
    ACPI HID devices do not actually have an alias for
    them in the IVRS. But dev_data->alias is still used
    for indexing into the IOMMU device table for devices
    being handled by the IOMMU. So for ACPI HID devices,
    we simply return the corresponding devid as an alias,
    as parsed from IVRS table.
    
    Signed-off-by: Arindam Nath <arindam.nath@amd.com>
    Fixes: 2bf9a0a12749 ('iommu/amd: Add iommu support for ACPI HID devices')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16b07d3af6402ede0ab3dbcf342a99e972fce8bc
Author: Michael Neuling <mikey@neuling.org>
Date:   Tue Sep 25 19:36:47 2018 +1000

    powerpc/tm: Avoid possible userspace r1 corruption on reclaim
    
    [ Upstream commit 96dc89d526ef77604376f06220e3d2931a0bfd58 ]
    
    Current we store the userspace r1 to PACATMSCRATCH before finally
    saving it to the thread struct.
    
    In theory an exception could be taken here (like a machine check or
    SLB miss) that could write PACATMSCRATCH and hence corrupt the
    userspace r1. The SLB fault currently doesn't touch PACATMSCRATCH, but
    others do.
    
    We've never actually seen this happen but it's theoretically
    possible. Either way, the code is fragile as it is.
    
    This patch saves r1 to the kernel stack (which can't fault) before we
    turn MSR[RI] back on. PACATMSCRATCH is still used but only with
    MSR[RI] off. We then copy r1 from the kernel stack to the thread
    struct once we have MSR[RI] back on.
    
    Suggested-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42c08c3675b0b671f386d0168f3441f55dacb24a
Author: Michael Neuling <mikey@neuling.org>
Date:   Mon Sep 24 17:27:04 2018 +1000

    powerpc/tm: Fix userspace r13 corruption
    
    [ Upstream commit cf13435b730a502e814c63c84d93db131e563f5f ]
    
    When we treclaim we store the userspace checkpointed r13 to a scratch
    SPR and then later save the scratch SPR to the user thread struct.
    
    Unfortunately, this doesn't work as accessing the user thread struct
    can take an SLB fault and the SLB fault handler will write the same
    scratch SPRG that now contains the userspace r13.
    
    To fix this, we store r13 to the kernel stack (which can't fault)
    before we access the user thread struct.
    
    Found by running P8 guest + powervm + disable_1tb_segments + TM. Seen
    as a random userspace segfault with r13 looking like a kernel address.
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Reviewed-by: Breno Leitao <leitao@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39f289c179b42e8152a5fb29b494a95a952e5fc1
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Sep 21 02:44:12 2018 -0700

    net/mlx4: Use cpumask_available for eq->affinity_mask
    
    [ Upstream commit 8ac1ee6f4d62e781e3b3fd8b9c42b70371427669 ]
    
    Clang warns that the address of a pointer will always evaluated as true
    in a boolean context:
    
    drivers/net/ethernet/mellanox/mlx4/eq.c:243:11: warning: address of
    array 'eq->affinity_mask' will always evaluate to 'true'
    [-Wpointer-bool-conversion]
            if (!eq->affinity_mask || cpumask_empty(eq->affinity_mask))
                ~~~~~^~~~~~~~~~~~~
    1 warning generated.
    
    Use cpumask_available, introduced in commit f7e30f01a9e2 ("cpumask: Add
    helper cpumask_available()"), which does the proper checking and avoids
    this warning.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/86
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c3973c7ca22aa719cb088660bfdab0d9ec837b6
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Sep 21 09:01:01 2018 +0200

    scsi: sd: don't crash the host on invalid commands
    
    [ Upstream commit f1f1fadacaf08b7cf11714c0c29f8fa4d4ef68a9 ]
    
    When sd_init_command() get's a command with a unknown req_op() it crashes the
    system via BUG().
    
    This makes debugging the actual reason for the broken request cmd_flags pretty
    hard as the system is down before it's able to write out debugging data on the
    serial console or the trace buffer.
    
    Change the BUG() to a WARN_ON() and return BLKPREP_KILL to fail gracefully and
    return an I/O error to the producer of the request.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4cd341ac13b1b21aba00dfcc51527423b98e013
Author: Alexandru Gheorghe <alexandru-cosmin.gheorghe@arm.com>
Date:   Mon Jul 16 11:07:07 2018 +0100

    drm: mali-dp: Call drm_crtc_vblank_reset on device init
    
    [ Upstream commit 69be1984ded00a11b1ed0888c6d8e4f35370372f ]
    
    Currently, if userspace calls drm_wait_vblank before the crtc is
    activated the crtc vblank_enable hook is called, which in case of
    malidp driver triggers some warninngs. This happens because on
    device init we don't inform the drm core about the vblank state
    by calling drm_crtc_vblank_on/off/reset which together with
    drm_vblank_get have some magic that prevents calling drm_vblank_enable
    when crtc is off.
    
    Signed-off-by: Alexandru Gheorghe <alexandru-cosmin.gheorghe@arm.com>
    Acked-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51ddce702e50ec859be0d8b4ed5eaaea66e98cf4
Author: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
Date:   Tue Sep 18 12:22:26 2018 +0200

    ravb: do not write 1 to reserved bits
    
    [ Upstream commit 2fe397a3959de8a472f165e6d152f64cb77fa2cc ]
    
    EtherAVB hardware requires 0 to be written to status register bits in
    order to clear them, however, care must be taken not to:
    
    1. Clear other bits, by writing zero to them
    2. Write one to reserved bits
    
    This patch corrects the ravb driver with respect to the second point above.
    This is done by defining reserved bit masks for the affected registers and,
    after auditing the code, ensure all sites that may write a one to a
    reserved bit use are suitably masked.
    
    Signed-off-by: Kazuya Mizuguchi <kazuya.mizuguchi.ks@renesas.com>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6c1b1555f98d402f2b12c3d6506f32ac2301fab
Author: Michael Schmitz <schmitzmic@gmail.com>
Date:   Mon Sep 17 15:27:49 2018 -0700

    Input: atakbd - fix Atari CapsLock behaviour
    
    [ Upstream commit 52d2c7bf7c90217fbe875d2d76f310979c48eb83 ]
    
    The CapsLock key on Atari keyboards is not a toggle, it does send the
    normal make and break scancodes.
    
    Drop the CapsLock toggle handling code, which did cause the CapsLock
    key to merely act as a Shift key.
    
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Andreas Schwab <schwab@linux-m68k.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aedfb5c77e84bd4d8d6750568470453d58699d90
Author: Andreas Schwab <schwab@linux-m68k.org>
Date:   Mon Sep 17 12:43:34 2018 -0700

    Input: atakbd - fix Atari keymap
    
    [ Upstream commit 9e62df51be993035c577371ffee5477697a56aad ]
    
    Fix errors in Atari keymap (mostly in keypad, help and undo keys).
    
    Patch provided on debian-68k ML by Andreas Schwab <schwab@linux-m68k.org>,
    keymap array size and unhandled scancode limit adjusted to 0x73 by me.
    
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Andreas Schwab <schwab@linux-m68k.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89c3a401791ecc27aa3f6f3b982415afbd95ee08
Author: Laura Abbott <labbott@redhat.com>
Date:   Tue Sep 11 12:22:26 2018 -0700

    scsi: ibmvscsis: Ensure partition name is properly NUL terminated
    
    [ Upstream commit adad633af7b970bfa5dd1b624a4afc83cac9b235 ]
    
    While reviewing another part of the code, Kees noticed that the strncpy of the
    partition name might not always be NUL terminated. Switch to using strscpy
    which does this safely.
    
    Reported-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83ab0f02992aa0e6d600024438de279722910492
Author: Laura Abbott <labbott@redhat.com>
Date:   Tue Sep 11 12:22:25 2018 -0700

    scsi: ibmvscsis: Fix a stringop-overflow warning
    
    [ Upstream commit d792d4c4fc866ae224b0b0ca2aabd87d23b4d6cc ]
    
    There's currently a warning about string overflow with strncat:
    
    drivers/scsi/ibmvscsi_tgt/ibmvscsi_tgt.c: In function 'ibmvscsis_probe':
    drivers/scsi/ibmvscsi_tgt/ibmvscsi_tgt.c:3479:2: error: 'strncat' specified
    bound 64 equals destination size [-Werror=stringop-overflow=]
      strncat(vscsi->eye, vdev->name, MAX_EYE);
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Switch to a single snprintf instead of a strcpy + strcat to handle this
    cleanly.
    
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c15d1a5f9094bf8c68435fdb31a0cabba8f1deb
Author: Keerthy <j-keerthy@ti.com>
Date:   Wed Aug 8 18:44:59 2018 +0530

    clocksource/drivers/ti-32k: Add CLOCK_SOURCE_SUSPEND_NONSTOP flag for non-am43 SoCs
    
    [ Upstream commit 3b7d96a0dbb6b630878597a1838fc39f808b761b ]
    
    The 32k clocksource is NONSTOP for non-am43 SoCs. Hence
    add the flag for all the other SoCs.
    
    Reported-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7d7586381175c057124708585a3a2f1de6a5404
Author: Marek Lindner <mareklindner@neomailbox.ch>
Date:   Fri Sep 7 05:45:55 2018 +0800

    batman-adv: fix hardif_neigh refcount on queue_work() failure
    
    [ Upstream commit 4c4af6900844ab04c9434c972021d7b48610e06a ]
    
    The hardif_neigh refcounter is to be decreased by the queued work and
    currently is never decreased if the queue_work() call fails.
    Fix by checking the queue_work() return value and decrease refcount
    if necessary.
    
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b296f3d042a0b013aee31ea2e3254c8c1e2e0bd
Author: Marek Lindner <mareklindner@neomailbox.ch>
Date:   Fri Sep 7 05:45:54 2018 +0800

    batman-adv: fix backbone_gw refcount on queue_work() failure
    
    [ Upstream commit 5af96b9c59c72fb2af2d19c5cc2f3cdcee391dff ]
    
    The backbone_gw refcounter is to be decreased by the queued work and
    currently is never decreased if the queue_work() call fails.
    Fix by checking the queue_work() return value and decrease refcount
    if necessary.
    
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 450db3d8652e41dc8d211b401e52f01d0857c76b
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Aug 12 21:04:45 2018 +0200

    batman-adv: Prevent duplicated tvlv handler
    
    [ Upstream commit ae3cdc97dc10c7a3b31f297dab429bfb774c9ccb ]
    
    The function batadv_tvlv_handler_register is responsible for adding new
    tvlv_handler to the handler_list. It first checks whether the entry
    already is in the list or not. If it is, then the creation of a new entry
    is aborted.
    
    But the lock for the list is only held when the list is really modified.
    This could lead to duplicated entries because another context could create
    an entry with the same key between the check and the list manipulation.
    
    The check and the manipulation of the list must therefore be in the same
    locked code section.
    
    Fixes: ef26157747d4 ("batman-adv: tvlv - basic infrastructure")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b7a4dffc2cb61ad533de10cffd154df8bc1f557
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Aug 12 21:04:44 2018 +0200

    batman-adv: Prevent duplicated global TT entry
    
    [ Upstream commit e7136e48ffdfb9f37b0820f619380485eb407361 ]
    
    The function batadv_tt_global_orig_entry_add is responsible for adding new
    tt_orig_list_entry to the orig_list. It first checks whether the entry
    already is in the list or not. If it is, then the creation of a new entry
    is aborted.
    
    But the lock for the list is only held when the list is really modified.
    This could lead to duplicated entries because another context could create
    an entry with the same key between the check and the list manipulation.
    
    The check and the manipulation of the list must therefore be in the same
    locked code section.
    
    Fixes: d657e621a0f5 ("batman-adv: add reference counting for type batadv_tt_orig_list_entry")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49580031565ecde9433bab43776ddf4573b69614
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Aug 12 21:04:43 2018 +0200

    batman-adv: Prevent duplicated softif_vlan entry
    
    [ Upstream commit 94cb82f594ed86be303398d6dfc7640a6f1d45d4 ]
    
    The function batadv_softif_vlan_get is responsible for adding new
    softif_vlan to the softif_vlan_list. It first checks whether the entry
    already is in the list or not. If it is, then the creation of a new entry
    is aborted.
    
    But the lock for the list is only held when the list is really modified.
    This could lead to duplicated entries because another context could create
    an entry with the same key between the check and the list manipulation.
    
    The check and the manipulation of the list must therefore be in the same
    locked code section.
    
    Fixes: 5d2c05b21337 ("batman-adv: add per VLAN interface attribute framework")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2231ff0dcb30ac7b8ca96bece238bb488110b9b0
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Aug 12 21:04:42 2018 +0200

    batman-adv: Prevent duplicated nc_node entry
    
    [ Upstream commit fa122fec8640eb7186ce5a41b83a4c1744ceef8f ]
    
    The function batadv_nc_get_nc_node is responsible for adding new nc_nodes
    to the in_coding_list and out_coding_list. It first checks whether the
    entry already is in the list or not. If it is, then the creation of a new
    entry is aborted.
    
    But the lock for the list is only held when the list is really modified.
    This could lead to duplicated entries because another context could create
    an entry with the same key between the check and the list manipulation.
    
    The check and the manipulation of the list must therefore be in the same
    locked code section.
    
    Fixes: d56b1705e28c ("batman-adv: network coding - detect coding nodes and remove these after timeout")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78364cd96c84e333f64e7a981b7f232cdc28ce88
Author: Sven Eckelmann <sven@narfation.org>
Date:   Fri Aug 31 16:56:29 2018 +0200

    batman-adv: Fix segfault when writing to sysfs elp_interval
    
    [ Upstream commit a25bab9d723a08bd0bdafb1529faf9094c690b70 ]
    
    The per hardif sysfs file "batman_adv/elp_interval" is using the generic
    functions to store/show uint values. The helper __batadv_store_uint_attr
    requires the softif net_device as parameter to print the resulting change
    as info text when the users writes to this file. It uses the helper
    function batadv_info to add it at the same time to the kernel ring buffer
    and to the batman-adv debug log (when CONFIG_BATMAN_ADV_DEBUG is enabled).
    
    The function batadv_info requires as first parameter the batman-adv softif
    net_device. This parameter is then used to find the private buffer which
    contains the debug log for this batman-adv interface. But
    batadv_store_throughput_override used as first argument the slave
    net_device. This slave device doesn't have the batadv_priv private data
    which is access by batadv_info.
    
    Writing to this file with CONFIG_BATMAN_ADV_DEBUG enabled can either lead
    to a segfault or to memory corruption.
    
    Fixes: 0744ff8fa8fa ("batman-adv: Add hard_iface specific sysfs wrapper macros for UINT")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92017857d65625fec7a816127eee65e766a6ee5a
Author: Sven Eckelmann <sven@narfation.org>
Date:   Fri Aug 31 16:46:47 2018 +0200

    batman-adv: Fix segfault when writing to throughput_override
    
    [ Upstream commit b9fd14c20871e6189f635e49b32d7789e430b3c8 ]
    
    The per hardif sysfs file "batman_adv/throughput_override" prints the
    resulting change as info text when the users writes to this file. It uses
    the helper function batadv_info to add it at the same time to the kernel
    ring buffer and to the batman-adv debug log (when CONFIG_BATMAN_ADV_DEBUG
    is enabled).
    
    The function batadv_info requires as first parameter the batman-adv softif
    net_device. This parameter is then used to find the private buffer which
    contains the debug log for this batman-adv interface. But
    batadv_store_throughput_override used as first argument the slave
    net_device. This slave device doesn't have the batadv_priv private data
    which is access by batadv_info.
    
    Writing to this file with CONFIG_BATMAN_ADV_DEBUG enabled can either lead
    to a segfault or to memory corruption.
    
    Fixes: 0b5ecc6811bd ("batman-adv: add throughput override attribute to hard_ifaces")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c9a83360f1cb89de7a7f801685edfd351eea07e
Author: Jozef Balga <jozef.balga@gmail.com>
Date:   Tue Aug 21 05:01:04 2018 -0400

    media: af9035: prevent buffer overflow on write
    
    [ Upstream commit 312f73b648626a0526a3aceebb0a3192aaba05ce ]
    
    When less than 3 bytes are written to the device, memcpy is called with
    negative array size which leads to buffer overflow and kernel panic. This
    patch adds a condition and returns -EOPNOTSUPP instead.
    Fixes bugzilla issue 64871
    
    [mchehab+samsung@kernel.org: fix a merge conflict and changed the
     condition to match the patch's comment, e. g. len == 3 could
     also be valid]
    Signed-off-by: Jozef Balga <jozef.balga@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
