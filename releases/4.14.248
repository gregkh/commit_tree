commit f11944f1aa1cda3fd8b4edc71e3cf9dceb40234f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Sep 26 13:37:30 2021 +0200

    Linux 4.14.248
    
    Link: https://lore.kernel.org/r/20210924124329.173674820@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210925120745.079749171@linuxfoundation.org
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc39ebada9e42cea16db80181789e0d0d14ce1cc
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 12:08:17 2021 -0700

    drm/nouveau/nvkm: Replace -ENOSYS with -ENODEV
    
    commit e8f71f89236ef82d449991bfbc237e3cb6ea584f upstream.
    
    nvkm test builds fail with the following error.
    
      drivers/gpu/drm/nouveau/nvkm/engine/device/ctrl.c: In function 'nvkm_control_mthd_pstate_info':
      drivers/gpu/drm/nouveau/nvkm/engine/device/ctrl.c:60:35: error: overflow in conversion from 'int' to '__s8' {aka 'signed char'} changes value from '-251' to '5'
    
    The code builds on most architectures, but fails on parisc where ENOSYS
    is defined as 251.
    
    Replace the error code with -ENODEV (-19).  The actual error code does
    not really matter and is not passed to userspace - it just has to be
    negative.
    
    Fixes: 7238eca4cf18 ("drm/nouveau: expose pstate selection per-power source in sysfs")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ff47ebccf6538c81f797453f494e6f5ed4f872e
Author: Li Jinlin <lijinlin3@huawei.com>
Date:   Tue Sep 7 20:12:42 2021 +0800

    blk-throttle: fix UAF by deleteing timer in blk_throtl_exit()
    
    [ Upstream commit 884f0e84f1e3195b801319c8ec3d5774e9bf2710 ]
    
    The pending timer has been set up in blk_throtl_init(). However, the
    timer is not deleted in blk_throtl_exit(). This means that the timer
    handler may still be running after freeing the timer, which would
    result in a use-after-free.
    
    Fix by calling del_timer_sync() to delete the timer in blk_throtl_exit().
    
    Signed-off-by: Li Jinlin <lijinlin3@huawei.com>
    Link: https://lore.kernel.org/r/20210907121242.2885564-1-lijinlin3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b75f2109ae875b96477bb2e9f3a1fc09883c7422
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:52 2021 +0200

    pwm: rockchip: Don't modify HW state in .remove() callback
    
    [ Upstream commit 9d768cd7fd42bb0be16f36aec48548fca5260759 ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6686b79fe0c9fcc431181c2f8c99dc2b774cc0d
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:23 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_delete_snapshot_group
    
    [ Upstream commit 17243e1c3072b8417a5ebfc53065d0a87af7ca77 ]
    
    kobject_put() should be used to cleanup the memory associated with the
    kobject instead of kobject_del().  See the section "Kobject removal" of
    "Documentation/core-api/kobject.rst".
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-7-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-7-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c97b3f5b48446f99608eaf44900b33533638f839
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:21 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_snapshot_group
    
    [ Upstream commit b2fe39c248f3fa4bbb2a20759b4fdd83504190f7 ]
    
    If kobject_init_and_add returns with error, kobject_put() is needed here
    to avoid memory leak, because kobject_init_and_add may return error
    without freeing the memory associated with the kobject it allocated.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-6-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-6-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba2a1f0dd10a8b30e67feb03f6a17533933c6840
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:18 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_delete_##name##_group
    
    [ Upstream commit a3e181259ddd61fd378390977a1e4e2316853afa ]
    
    The kobject_put() should be used to cleanup the memory associated with the
    kobject instead of kobject_del.  See the section "Kobject removal" of
    "Documentation/core-api/kobject.rst".
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-5-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-5-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 796cfc16ff5bc4f4056e426feafd27ab8bed93a0
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:15 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_##name##_group
    
    [ Upstream commit 24f8cb1ed057c840728167dab33b32e44147c86f ]
    
    If kobject_init_and_add return with error, kobject_put() is needed here to
    avoid memory leak, because kobject_init_and_add may return error without
    freeing the memory associated with the kobject it allocated.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-4-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-4-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5b374ef1f2c1f371e39f2558f5adc50d5fa9bfb
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:12 2021 -0700

    nilfs2: fix NULL pointer in nilfs_##name##_attr_release
    
    [ Upstream commit dbc6e7d44a514f231a64d9d5676e001b660b6448 ]
    
    In nilfs_##name##_attr_release, kobj->parent should not be referenced
    because it is a NULL pointer.  The release() method of kobject is always
    called in kobject_put(kobj), in the implementation of kobject_put(), the
    kobj->parent will be assigned as NULL before call the release() method.
    So just use kobj to get the subgroups, which is more efficient and can fix
    a NULL pointer reference problem.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-3-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-3-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6c813ceed08b93e3a52511e0327b3af86e54c31
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:09 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_device_group
    
    [ Upstream commit 5f5dec07aca7067216ed4c1342e464e7307a9197 ]
    
    Patch series "nilfs2: fix incorrect usage of kobject".
    
    This patchset from Nanyong Sun fixes memory leak issues and a NULL
    pointer dereference issue caused by incorrect usage of kboject in nilfs2
    sysfs implementation.
    
    This patch (of 6):
    
    Reported by syzkaller:
    
      BUG: memory leak
      unreferenced object 0xffff888100ca8988 (size 8):
      comm "syz-executor.1", pid 1930, jiffies 4294745569 (age 18.052s)
      hex dump (first 8 bytes):
      6c 6f 6f 70 31 00 ff ff loop1...
      backtrace:
        kstrdup+0x36/0x70 mm/util.c:60
        kstrdup_const+0x35/0x60 mm/util.c:83
        kvasprintf_const+0xf1/0x180 lib/kasprintf.c:48
        kobject_set_name_vargs+0x56/0x150 lib/kobject.c:289
        kobject_add_varg lib/kobject.c:384 [inline]
        kobject_init_and_add+0xc9/0x150 lib/kobject.c:473
        nilfs_sysfs_create_device_group+0x150/0x7d0 fs/nilfs2/sysfs.c:986
        init_nilfs+0xa21/0xea0 fs/nilfs2/the_nilfs.c:637
        nilfs_fill_super fs/nilfs2/super.c:1046 [inline]
        nilfs_mount+0x7b4/0xe80 fs/nilfs2/super.c:1316
        legacy_get_tree+0x105/0x210 fs/fs_context.c:592
        vfs_get_tree+0x8e/0x2d0 fs/super.c:1498
        do_new_mount fs/namespace.c:2905 [inline]
        path_mount+0xf9b/0x1990 fs/namespace.c:3235
        do_mount+0xea/0x100 fs/namespace.c:3248
        __do_sys_mount fs/namespace.c:3456 [inline]
        __se_sys_mount fs/namespace.c:3433 [inline]
        __x64_sys_mount+0x14b/0x1f0 fs/namespace.c:3433
        do_syscall_x64 arch/x86/entry/common.c:50 [inline]
        do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80
        entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    If kobject_init_and_add return with error, then the cleanup of kobject
    is needed because memory may be allocated in kobject_init_and_add
    without freeing.
    
    And the place of cleanup_dev_kobject should use kobject_put to free the
    memory associated with the kobject.  As the section "Kobject removal" of
    "Documentation/core-api/kobject.rst" says, kobject_del() just makes the
    kobject "invisible", but it is not cleaned up.  And no more cleanup will
    do after cleanup_dev_kobject, so kobject_put is needed here.
    
    Link: https://lkml.kernel.org/r/1625651306-10829-1-git-send-email-konishi.ryusuke@gmail.com
    Link: https://lkml.kernel.org/r/1625651306-10829-2-git-send-email-konishi.ryusuke@gmail.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Link: https://lkml.kernel.org/r/20210629022556.3985106-2-sunnanyong@huawei.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dcd580adb06555b44aedf5a77c25a76d052823b
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Sep 2 08:31:03 2021 -0400

    ceph: lockdep annotations for try_nonblocking_invalidate
    
    [ Upstream commit 3eaf5aa1cfa8c97c72f5824e2e9263d6cc977b03 ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 403e261da7073c75adc59e1e350cb9f442c44da7
Author: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
Date:   Thu Aug 19 14:28:48 2021 +0530

    dmaengine: xilinx_dma: Set DMA mask for coherent APIs
    
    [ Upstream commit aac6c0f90799d66b8989be1e056408f33fd99fe6 ]
    
    The xilinx dma driver uses the consistent allocations, so for correct
    operation also set the DMA mask for coherent APIs. It fixes the below
    kernel crash with dmatest client when DMA IP is configured with 64-bit
    address width and linux is booted from high (>4GB) memory.
    
    Call trace:
    [  489.531257]  dma_alloc_from_pool+0x8c/0x1c0
    [  489.535431]  dma_direct_alloc+0x284/0x330
    [  489.539432]  dma_alloc_attrs+0x80/0xf0
    [  489.543174]  dma_pool_alloc+0x160/0x2c0
    [  489.547003]  xilinx_cdma_prep_memcpy+0xa4/0x180
    [  489.551524]  dmatest_func+0x3cc/0x114c
    [  489.555266]  kthread+0x124/0x130
    [  489.558486]  ret_from_fork+0x10/0x3c
    [  489.562051] ---[ end trace 248625b2d596a90a ]---
    
    Signed-off-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Reviewed-by: Harini Katakam <harini.katakam@xilinx.com>
    Link: https://lore.kernel.org/r/1629363528-30347-1-git-send-email-radhey.shyam.pandey@xilinx.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 743ab7b546add83426e5fc7797f1d013887f9804
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Aug 9 11:24:09 2021 +0200

    dmaengine: ioat: depends on !UML
    
    [ Upstream commit bbac7a92a46f0876e588722ebe552ddfe6fd790f ]
    
    Now that UML has PCI support, this driver must depend also on
    !UML since it pokes at X86_64 architecture internals that don't
    exist on ARCH=um.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20210809112409.a3a0974874d2.I2ffe3d11ed37f735da2f39884a74c953b258b995@changeid
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51723ba63725ca1c2aad66569c979799fe578a05
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 08:30:41 2021 -0700

    parisc: Move pci_dev_is_behind_card_dino to where it is used
    
    [ Upstream commit 907872baa9f1538eed02ec737b8e89eba6c6e4b9 ]
    
    parisc build test images fail to compile with the following error.
    
    drivers/parisc/dino.c:160:12: error:
            'pci_dev_is_behind_card_dino' defined but not used
    
    Move the function just ahead of its only caller to avoid the error.
    
    Fixes: 5fa1659105fa ("parisc: Disable HP HSC-PCI Cards to prevent kernel crash")
    Cc: Helge Deller <deller@gmx.de>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e0854da3322d740821f6b7b0ffc3b621092baef
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Sep 7 20:00:47 2021 -0700

    Kconfig.debug: drop selecting non-existing HARDLOCKUP_DETECTOR_ARCH
    
    [ Upstream commit 6fe26259b4884b657cbc233fb9cdade9d704976e ]
    
    Commit 05a4a9527931 ("kernel/watchdog: split up config options") adds a
    new config HARDLOCKUP_DETECTOR, which selects the non-existing config
    HARDLOCKUP_DETECTOR_ARCH.
    
    Hence, ./scripts/checkkconfigsymbols.py warns:
    
    HARDLOCKUP_DETECTOR_ARCH Referencing files: lib/Kconfig.debug
    
    Simply drop selecting the non-existing HARDLOCKUP_DETECTOR_ARCH.
    
    Link: https://lkml.kernel.org/r/20210806115618.22088-1-lukas.bulwahn@gmail.com
    Fixes: 05a4a9527931 ("kernel/watchdog: split up config options")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Babu Moger <babu.moger@oracle.com>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb4de81eb940e7027f37a6fd3b7ddcb4403deb56
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:49 2021 +0200

    pwm: lpc32xx: Don't modify HW state in .probe() after the PWM chip was registered
    
    commit 3d2813fb17e5fd0d73c1d1442ca0192bde4af10e upstream.
    
    This fixes a race condition: After pwmchip_add() is called there might
    already be a consumer and then modifying the hardware behind the
    consumer's back is bad. So set the default before.
    
    (Side-note: I don't know what this register setting actually does, if
    this modifies the polarity there is an inconsistency because the
    inversed polarity isn't considered if the PWM is already running during
    .probe().)
    
    Fixes: acfd92fdfb93 ("pwm: lpc32xx: Set PWM_PIN_LEVEL bit to default value")
    Cc: Sylvain Lemieux <slemieux@tycoint.com>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 360f114624b1dcb3895c1ad41c442b3e4450f925
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Tue Sep 7 19:58:21 2021 -0700

    profiling: fix shift-out-of-bounds bugs
    
    commit 2d186afd04d669fe9c48b994c41a7405a3c9f16d upstream.
    
    Syzbot reported shift-out-of-bounds bug in profile_init().
    The problem was in incorrect prof_shift. Since prof_shift value comes from
    userspace we need to clamp this value into [0, BITS_PER_LONG -1]
    boundaries.
    
    Second possible shiht-out-of-bounds was found by Tetsuo:
    sample_step local variable in read_profile() had "unsigned int" type,
    but prof_shift allows to make a BITS_PER_LONG shift. So, to prevent
    possible shiht-out-of-bounds sample_step type was changed to
    "unsigned long".
    
    Also, "unsigned short int" will be sufficient for storing
    [0, BITS_PER_LONG] value, that's why there is no need for
    "unsigned long" prof_shift.
    
    Link: https://lkml.kernel.org/r/20210813140022.5011-1-paskripkin@gmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+e68c89a9510c159d9684@syzkaller.appspotmail.com
    Suggested-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f83a3a14bb71091f2b6acb0eb9127de84f10443
Author: Cyrill Gorcunov <gorcunov@gmail.com>
Date:   Tue Sep 7 20:00:41 2021 -0700

    prctl: allow to setup brk for et_dyn executables
    
    commit e1fbbd073137a9d63279f6bf363151a938347640 upstream.
    
    Keno Fischer reported that when a binray loaded via ld-linux-x the
    prctl(PR_SET_MM_MAP) doesn't allow to setup brk value because it lays
    before mm:end_data.
    
    For example a test program shows
    
     | # ~/t
     |
     | start_code      401000
     | end_code        401a15
     | start_stack     7ffce4577dd0
     | start_data      403e10
     | end_data        40408c
     | start_brk       b5b000
     | sbrk(0)         b5b000
    
    and when executed via ld-linux
    
     | # /lib64/ld-linux-x86-64.so.2 ~/t
     |
     | start_code      7fc25b0a4000
     | end_code        7fc25b0c4524
     | start_stack     7fffcc6b2400
     | start_data      7fc25b0ce4c0
     | end_data        7fc25b0cff98
     | start_brk       55555710c000
     | sbrk(0)         55555710c000
    
    This of course prevent criu from restoring such programs.  Looking into
    how kernel operates with brk/start_brk inside brk() syscall I don't see
    any problem if we allow to setup brk/start_brk without checking for
    end_data.  Even if someone pass some weird address here on a purpose then
    the worst possible result will be an unexpected unmapping of existing vma
    (own vma, since prctl works with the callers memory) but test for
    RLIMIT_DATA is still valid and a user won't be able to gain more memory in
    case of expanding VMAs via new values shipped with prctl call.
    
    Link: https://lkml.kernel.org/r/20210121221207.GB2174@grain
    Fixes: bbdc6076d2e5 ("binfmt_elf: move brk out of mmap when doing direct loader exec")
    Signed-off-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reported-by: Keno Fischer <keno@juliacomputing.com>
    Acked-by: Andrey Vagin <avagin@gmail.com>
    Tested-by: Andrey Vagin <avagin@gmail.com>
    Cc: Dmitry Safonov <0x7f454c46@gmail.com>
    Cc: Kirill Tkhai <ktkhai@virtuozzo.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Cc: Alexander Mikhalitsyn <alexander.mikhalitsyn@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ce897d970188359df34009b96d7757b56271b54
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Mon May 17 16:35:57 2021 +0800

    9p/trans_virtio: Remove sysfs file on probe failure
    
    commit f997ea3b7afc108eb9761f321b57de2d089c7c48 upstream.
    
    This ensures we don't leak the sysfs file if we failed to
    allocate chan->vc_wq during probe.
    
    Link: http://lkml.kernel.org/r/20210517083557.172-1-xieyongji@bytedance.com
    Fixes: 86c8437383ac ("net/9p: Add sysfs mount_tag file for virtio 9P device")
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9a531262879b463d8556c9be14711fcc6d4450b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 10 11:44:13 2021 +0300

    thermal/drivers/exynos: Fix an error code in exynos_tmu_probe()
    
    commit 02d438f62c05f0d055ceeedf12a2f8796b258c08 upstream.
    
    This error path return success but it should propagate the negative
    error code from devm_clk_get().
    
    Fixes: 6c247393cfdd ("thermal: exynos: Add TMU support for Exynos7 SoC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210810084413.GA23810@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f95cf346c9b7b2061fb87d1fa902b3c0b94dd362
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jul 30 23:27:15 2021 +0300

    dmaengine: acpi: Avoid comparison GSI with Linux vIRQ
    
    commit 67db87dc8284070adb15b3c02c1c31d5cf51c5d6 upstream.
    
    Currently the CRST parsing relies on the fact that on most of x86 devices
    the IRQ mapping is 1:1 with Linux vIRQ. However, it may be not true for
    some. Fix this by converting GSI to Linux vIRQ before checking it.
    
    Fixes: ee8209fd026b ("dma: acpi-dma: parse CSRT to extract additional resources")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210730202715.24375-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c4a5606951cf2be8cbed4d4aefbbeaedb4cb24f
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jun 28 16:13:44 2021 -0300

    sctp: add param size validation for SCTP_PARAM_SET_PRIMARY
    
    commit ef6c8d6ccf0c1dccdda092ebe8782777cd7803c9 upstream.
    
    When SCTP handles an INIT chunk, it calls for example:
    sctp_sf_do_5_1B_init
      sctp_verify_init
        sctp_verify_param
      sctp_process_init
        sctp_process_param
          handling of SCTP_PARAM_SET_PRIMARY
    
    sctp_verify_init() wasn't doing proper size validation and neither the
    later handling, allowing it to work over the chunk itself, possibly being
    uninitialized memory.
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e58e3511b3c2080071ce451917d032f1e39c0788
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jun 28 16:13:43 2021 -0300

    sctp: validate chunk size in __rcv_asconf_lookup
    
    commit b6ffe7671b24689c09faa5675dd58f93758a97ae upstream.
    
    In one of the fallbacks that SCTP has for identifying an association for an
    incoming packet, it looks for AddIp chunk (from ASCONF) and take a peek.
    Thing is, at this stage nothing was validating that the chunk actually had
    enough content for that, allowing the peek to happen over uninitialized
    memory.
    
    Similar check already exists in actual asconf handling in
    sctp_verify_asconf().
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c143f6d7934543b846fa7366451dff61516f0bde
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Wed Jun 12 05:49:50 2019 +0000

    crypto: talitos - fix max key size for sha384 and sha512
    
    commit 192125ed5ce62afba24312d8e7a0314577565b4a upstream.
    
    Below commit came with a typo in the CONFIG_ symbol, leading
    to a permanently reduced max key size regarless of the driver
    capabilities.
    
    Reported-by: Horia Geantă <horia.geanta@nxp.com>
    Fixes: b8fbdc2bc4e7 ("crypto: talitos - reduce max key size for SEC1")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Reviewed-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Nobuhiro Iwamatsu (CIP) <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea8343805d31c0dd62f77657317e8349840710f4
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Dec 15 20:47:16 2020 -0800

    apparmor: remove duplicate macro list_entry_is_head()
    
    commit 9801ca279ad37f72f71234fa81722afd95a3f997 upstream.
    
    Strangely I hadn't had noticed the existence of the list_entry_is_head()
    in apparmor code when added the same one in the list.h.  Luckily it's
    fully identical and didn't break builds.  In any case we don't need a
    duplicate anymore, thus remove it from apparmor code.
    
    Link: https://lkml.kernel.org/r/20201208100639.88182-1-andriy.shevchenko@linux.intel.com
    Fixes: e130816164e244 ("include/linux/list.h: add a macro to test if entry is pointing to the head")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: John Johansen <john.johansen@canonical.com>
    Cc: James Morris <jmorris@namei.org>
    Cc: "Serge E . Hallyn " <serge@hallyn.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Nobuhiro Iwamatsu (CIP) <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef349a61e7bb5da4024aee164fce52c7e1eaed77
Author: Neeraj Upadhyay <neeraju@codeaurora.org>
Date:   Tue Nov 19 03:17:07 2019 +0000

    rcu: Fix missed wakeup of exp_wq waiters
    
    commit fd6bc19d7676a060a171d1cf3dcbf6fd797eb05f upstream.
    
    Tasks waiting within exp_funnel_lock() for an expedited grace period to
    elapse can be starved due to the following sequence of events:
    
    1.      Tasks A and B both attempt to start an expedited grace
            period at about the same time.  This grace period will have
            completed when the lower four bits of the rcu_state structure's
            ->expedited_sequence field are 0b'0100', for example, when the
            initial value of this counter is zero.  Task A wins, and thus
            does the actual work of starting the grace period, including
            acquiring the rcu_state structure's .exp_mutex and sets the
            counter to 0b'0001'.
    
    2.      Because task B lost the race to start the grace period, it
            waits on ->expedited_sequence to reach 0b'0100' inside of
            exp_funnel_lock(). This task therefore blocks on the rcu_node
            structure's ->exp_wq[1] field, keeping in mind that the
            end-of-grace-period value of ->expedited_sequence (0b'0100')
            is shifted down two bits before indexing the ->exp_wq[] field.
    
    3.      Task C attempts to start another expedited grace period,
            but blocks on ->exp_mutex, which is still held by Task A.
    
    4.      The aforementioned expedited grace period completes, so that
            ->expedited_sequence now has the value 0b'0100'.  A kworker task
            therefore acquires the rcu_state structure's ->exp_wake_mutex
            and starts awakening any tasks waiting for this grace period.
    
    5.      One of the first tasks awakened happens to be Task A.  Task A
            therefore releases the rcu_state structure's ->exp_mutex,
            which allows Task C to start the next expedited grace period,
            which causes the lower four bits of the rcu_state structure's
            ->expedited_sequence field to become 0b'0101'.
    
    6.      Task C's expedited grace period completes, so that the lower four
            bits of the rcu_state structure's ->expedited_sequence field now
            become 0b'1000'.
    
    7.      The kworker task from step 4 above continues its wakeups.
            Unfortunately, the wake_up_all() refetches the rcu_state
            structure's .expedited_sequence field:
    
            wake_up_all(&rnp->exp_wq[rcu_seq_ctr(rcu_state.expedited_sequence) & 0x3]);
    
            This results in the wakeup being applied to the rcu_node
            structure's ->exp_wq[2] field, which is unfortunate given that
            Task B is instead waiting on ->exp_wq[1].
    
    On a busy system, no harm is done (or at least no permanent harm is done).
    Some later expedited grace period will redo the wakeup.  But on a quiet
    system, such as many embedded systems, it might be a good long time before
    there was another expedited grace period.  On such embedded systems,
    this situation could therefore result in a system hang.
    
    This issue manifested as DPM device timeout during suspend (which
    usually qualifies as a quiet time) due to a SCSI device being stuck in
    _synchronize_rcu_expedited(), with the following stack trace:
    
            schedule()
            synchronize_rcu_expedited()
            synchronize_rcu()
            scsi_device_quiesce()
            scsi_bus_suspend()
            dpm_run_callback()
            __device_suspend()
    
    This commit therefore prevents such delays, timeouts, and hangs by
    making rcu_exp_wait_wake() use its "s" argument consistently instead of
    refetching from rcu_state.expedited_sequence.
    
    Fixes: 3b5f668e715b ("rcu: Overlap wakeups with next expedited grace period")
    Signed-off-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: David Chen <david.chen@nutanix.com>
    Acked-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daf48f68fca9040b542282a5cd17397af316dd89
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Mon Sep 6 15:04:14 2021 +0200

    s390/bpf: Fix optimizing out zero-extensions
    
    commit db7bee653859ef7179be933e7d1384644f795f26 upstream.
    
    Currently the JIT completely removes things like `reg32 += 0`,
    however, the BPF_ALU semantics requires the target register to be
    zero-extended in such cases.
    
    Fix by optimizing out only the arithmetic operation, but not the
    subsequent zero-extension.
    
    Reported-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Fixes: 054623105728 ("s390/bpf: Add s390x eBPF JIT compiler backend")
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
