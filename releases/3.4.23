commit b947fcbcca85da6ad3ec79f6aa86b550f458e049
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Dec 10 10:59:56 2012 -0800

    Linux 3.4.23

commit cc7c332b34cb936b4a27c1c185700c9a0f7c7bf0
Author: Michal Marek <mmarek@suse.cz>
Date:   Tue Sep 25 16:03:03 2012 +0200

    kbuild: Do not package /boot and /lib in make tar-pkg
    
    commit fe04ddf7c2910362f3817c8156e41cbd6c0ee35d upstream.
    
    There were reports of users destroying their Fedora installs by a kernel
    tarball that replaces the /lib -> /usr/lib symlink. Let's remove the
    toplevel directories from the tarball to prevent this from happening.
    
    Reported-by: Andi Kleen <andi@firstfloor.org>
    Suggested-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Michal Marek <mmarek@suse.cz>
    [bwh: Fold in commit 3ce9e53e788881da0d5f3912f80e0dd6b501f304 to avoid
     conflicts]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e252d8f530e5d322c53d014ce07b8115dfdac78
Author: Peng Tao <bergwolf@gmail.com>
Date:   Fri Aug 24 00:27:51 2012 +0800

    pnfsblock: fix partial page buffer wirte
    
    commit fe6e1e8d9fad86873eb74a26e80a8f91f9e870b5 upstream.
    
    If applications use flock to protect its write range, generic NFS
    will not do read-modify-write cycle at page cache level. Therefore
    LD should know how to handle non-sector aligned writes. Otherwise
    there will be data corruption.
    
    Signed-off-by: Peng Tao <tao.peng@emc.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f036099aa85d361fd062384c8e831b580de7bbb2
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Thu Oct 18 21:07:01 2012 +0100

    drm/i915: Add no-lvds quirk for Supermicro X7SPA-H
    
    commit c31407a3672aaebb4acddf90944a114fa5c8af7b upstream.
    
    Reported-and-tested-by: Francois Tigeot <ftigeot@wolfpond.org>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=55375
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 693023b7b8b1a869a7dc2b52a235f77080feed24
Author: Calvin Walton <calvin.walton@kepstin.ca>
Date:   Fri Aug 24 07:56:31 2012 -0400

    i915: Quirk no_lvds on Gigabyte GA-D525TUD ITX motherboard
    
    commit a51d4ed01e5bb39d2cf36a12f9976ab08872c192 upstream.
    
    This board is incorrectly detected as having an LVDS connector,
    resulting in the VGA output (the only available output on the board)
    showing the console only in the top-left 1024x768 pixels, and an extra
    LVDS connector appearing in X.
    
    It's a desktop Mini-ITX board using an Atom D525 CPU with an NM10
    chipset.
    
    I've had this board for about a year, but this is the first time I
    noticed the issue because I've been running it headless for most of its
    life.
    
    Signed-off-by: Calvin Walton <calvin.walton@kepstin.ca>
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd81606a09d4ee84de72f02293f826508d1581b0
Author: Alan Cox <alan@linux.intel.com>
Date:   Fri Oct 26 01:05:56 2012 +0200

    ACPI: missing break
    
    commit 879dca019dc43a1622edca3e7dde644b14b5acc5 upstream.
    
    We handle NOTIFY_THROTTLING so don't then fall through to unsupported event.
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3c8a4858ca78c5da18cd77660ba23ada1c938a9
Author: Ariel Elior <ariele@broadcom.com>
Date:   Thu Nov 22 07:16:17 2012 +0000

    bnx2x: remove redundant warning log
    
    commit 4a25417c20fac00b3afd58ce27408f964d19e708 upstream.
    
    fix bug where a register which was only meant to be read in 578xx/57712
    devices causes a bogus error message to be logged when read from other
    devices.
    
    Signed-off-by: Ariel Elior <ariele@broadcom.com>
    Signed-off-by: Eilon Greenstein <eilong@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: CAI Qian <caiqian@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d81da8645585b9c116a7ac20b99ac8909677c80
Author: Mike Galbraith <efault@gmx.de>
Date:   Mon Dec 3 06:25:25 2012 +0100

    Revert "sched, autogroup: Stop going ahead if autogroup is disabled"
    
    commit fd8ef11730f1d03d5d6555aa53126e9e34f52f12 upstream.
    
    This reverts commit 800d4d30c8f20bd728e5741a3b77c4859a613f7c.
    
    Between commits 8323f26ce342 ("sched: Fix race in task_group()") and
    800d4d30c8f2 ("sched, autogroup: Stop going ahead if autogroup is
    disabled"), autogroup is a wreck.
    
    With both applied, all you have to do to crash a box is disable
    autogroup during boot up, then reboot..  boom, NULL pointer dereference
    due to commit 800d4d30c8f2 not allowing autogroup to move things, and
    commit 8323f26ce342 making that the only way to switch runqueues:
    
      BUG: unable to handle kernel NULL pointer dereference at           (null)
      IP: [<ffffffff81063ac0>] effective_load.isra.43+0x50/0x90
      Pid: 7047, comm: systemd-user-se Not tainted 3.6.8-smp #7 MEDIONPC MS-7502/MS-7502
      RIP: effective_load.isra.43+0x50/0x90
      Process systemd-user-se (pid: 7047, threadinfo ffff880221dde000, task ffff88022618b3a0)
      Call Trace:
        select_task_rq_fair+0x255/0x780
        try_to_wake_up+0x156/0x2c0
        wake_up_state+0xb/0x10
        signal_wake_up+0x28/0x40
        complete_signal+0x1d6/0x250
        __send_signal+0x170/0x310
        send_signal+0x40/0x80
        do_send_sig_info+0x47/0x90
        group_send_sig_info+0x4a/0x70
        kill_pid_info+0x3a/0x60
        sys_kill+0x97/0x1a0
        ? vfs_read+0x120/0x160
        ? sys_read+0x45/0x90
        system_call_fastpath+0x16/0x1b
      Code: 49 0f af 41 50 31 d2 49 f7 f0 48 83 f8 01 48 0f 46 c6 48 2b 07 48 8b bf 40 01 00 00 48 85 ff 74 3a 45 31 c0 48 8b 8f 50 01 00 00 <48> 8b 11 4c 8b 89 80 00 00 00 49 89 d2 48 01 d0 45 8b 59 58 4c
      RIP  [<ffffffff81063ac0>] effective_load.isra.43+0x50/0x90
       RSP <ffff880221ddfbd8>
      CR2: 0000000000000000
    
    Signed-off-by: Mike Galbraith <efault@gmx.de>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Cc: Yong Zhang <yong.zhang0@gmail.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43477d60e75490b168627aaafccb7032b28d2574
Author: Jean Delvare <jdelvare@suse.de>
Date:   Thu Oct 18 15:54:45 2012 +0200

    i7300_edac: Fix error flag testing
    
    commit 7e06b7a3333f5c7a0cec12aff20d39c5c87c0795 upstream.
    
    * Right-shift the values in GET_FBD_FAT_IDX and GET_FBD_NF_IDX, so
      that the callers get the result they expect.
    * Fix definition of FERR_FAT_FBD_ERR_MASK.
    * Call GET_FBD_NF_IDX, not GET_FBD_FAT_IDX, when operating on
      register FERR_NF_FBD. We were lucky they have the same definition.
    
    This fixes kernel bug #44131:
    https://bugzilla.kernel.org/show_bug.cgi?id=44131
    
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Cc: Mauro Carvalho Chehab <mchehab@redhat.com>
    Cc: Doug Thompson <dougthompson@xmission.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3921710aa40ae72bd2580282548f763b008a1d0
Author: NeilBrown <neilb@suse.de>
Date:   Thu Nov 22 14:42:49 2012 +1100

    md/raid10: close race that lose writes lost when replacement completes.
    
    commit e7c0c3fa29280d62aa5e11101a674bb3064bd791 upstream.
    
    When a replacement operation completes there is a small window
    when the original device is marked 'faulty' and the replacement
    still looks like a replacement.  The faulty should be removed and
    the replacement moved in place very quickly, bit it isn't instant.
    
    So the code write out to the array must handle the possibility that
    the only working device for some slot in the replacement - but it
    doesn't.  If the primary device is faulty it just gives up.  This
    can lead to corruption.
    
    So make the code more robust: if either  the primary or the
    replacement is present and working, write to them.  Only when
    neither are present do we give up.
    
    This bug has been present since replacement was introduced in
    3.3, so it is suitable for any -stable kernel since then.
    
    Reported-by: "George Spelvin" <linux@horizon.com>
    Signed-off-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbdd7f0c98e8ee0d49da5e8b462ad2ba07d0f358
Author: Mike Galbraith <mgalbraith@suse.de>
Date:   Wed Nov 28 07:17:18 2012 +0100

    workqueue: exit rescuer_thread() as TASK_RUNNING
    
    commit 412d32e6c98527078779e5b515823b2810e40324 upstream.
    
    A rescue thread exiting TASK_INTERRUPTIBLE can lead to a task scheduling
    off, never to be seen again.  In the case where this occurred, an exiting
    thread hit reiserfs homebrew conditional resched while holding a mutex,
    bringing the box to its knees.
    
    PID: 18105  TASK: ffff8807fd412180  CPU: 5   COMMAND: "kdmflush"
     #0 [ffff8808157e7670] schedule at ffffffff8143f489
     #1 [ffff8808157e77b8] reiserfs_get_block at ffffffffa038ab2d [reiserfs]
     #2 [ffff8808157e79a8] __block_write_begin at ffffffff8117fb14
     #3 [ffff8808157e7a98] reiserfs_write_begin at ffffffffa0388695 [reiserfs]
     #4 [ffff8808157e7ad8] generic_perform_write at ffffffff810ee9e2
     #5 [ffff8808157e7b58] generic_file_buffered_write at ffffffff810eeb41
     #6 [ffff8808157e7ba8] __generic_file_aio_write at ffffffff810f1a3a
     #7 [ffff8808157e7c58] generic_file_aio_write at ffffffff810f1c88
     #8 [ffff8808157e7cc8] do_sync_write at ffffffff8114f850
     #9 [ffff8808157e7dd8] do_acct_process at ffffffff810a268f
        [exception RIP: kernel_thread_helper]
        RIP: ffffffff8144a5c0  RSP: ffff8808157e7f58  RFLAGS: 00000202
        RAX: 0000000000000000  RBX: 0000000000000000  RCX: 0000000000000000
        RDX: 0000000000000000  RSI: ffffffff8107af60  RDI: ffff8803ee491d18
        RBP: 0000000000000000   R8: 0000000000000000   R9: 0000000000000000
        R10: 0000000000000000  R11: 0000000000000000  R12: 0000000000000000
        R13: 0000000000000000  R14: 0000000000000000  R15: 0000000000000000
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
    
    Signed-off-by: Mike Galbraith <mgalbraith@suse.de>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b9dd61a10bed126661645cbf2623965fbbdefb3
Author: Vincent Palatin <vpalatin@chromium.org>
Date:   Fri Nov 30 12:15:32 2012 -0800

    x86, fpu: Avoid FPU lazy restore after suspend
    
    commit 644c154186386bb1fa6446bc5e037b9ed098db46 upstream.
    
    When a cpu enters S3 state, the FPU state is lost.
    After resuming for S3, if we try to lazy restore the FPU for a process running
    on the same CPU, this will result in a corrupted FPU context.
    
    Ensure that "fpu_owner_task" is properly invalided when (re-)initializing a CPU,
    so nobody will try to lazy restore a state which doesn't exist in the hardware.
    
    Tested with a 64-bit kernel on a 4-core Ivybridge CPU with eagerfpu=off,
    by doing thousands of suspend/resume cycles with 4 processes doing FPU
    operations running. Without the patch, a process is killed after a
    few hundreds cycles by a SIGFPE.
    
    Signed-off-by: Vincent Palatin <vpalatin@chromium.org>
    Cc: Duncan Laurie <dlaurie@chromium.org>
    Cc: Olof Johansson <olofj@chromium.org>
    Link: http://lkml.kernel.org/r/1354306532-1014-1-git-send-email-vpalatin@chromium.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 659cca40ff27f7d73a0c49ac6c8d8b3838202524
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Nov 21 00:19:06 2012 -0700

    ARM: Kirkwood: Update PCI-E fixup
    
    commit 1dc831bf53fddcc6443f74a39e72db5bcea4f15d upstream.
    
    - The code relies on rc_pci_fixup being called, which only happens
      when CONFIG_PCI_QUIRKS is enabled, so add that to Kconfig. Omitting
      this causes a booting failure with a non-obvious cause.
    - Update rc_pci_fixup to set the class properly, copying the
      more modern style from other places
    - Correct the rc_pci_fixup comment
    
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b4d372b78bef8ebbccca2e310973b550f1dc6f2
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Thu Nov 29 13:54:34 2012 -0800

    mm: soft offline: split thp at the beginning of soft_offline_page()
    
    commit 783657a7dc20e5c0efbc9a09a9dd38e238a723da upstream.
    
    When we try to soft-offline a thp tail page, put_page() is called on the
    tail page unthinkingly and VM_BUG_ON is triggered in put_compound_page().
    
    This patch splits thp before going into the main body of soft-offlining.
    
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Andi Kleen <andi.kleen@intel.com>
    Cc: Wu Fengguang <fengguang.wu@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25a30e7cc1562e110c401f286f41c801d80b2b0a
Author: Jianguo Wu <wujianguo@huawei.com>
Date:   Thu Nov 29 13:54:21 2012 -0800

    mm/vmemmap: fix wrong use of virt_to_page
    
    commit ae64ffcac35de0db628ba9631edf8ff34c5cd7ac upstream.
    
    I enable CONFIG_DEBUG_VIRTUAL and CONFIG_SPARSEMEM_VMEMMAP, when doing
    memory hotremove, there is a kernel BUG at arch/x86/mm/physaddr.c:20.
    
    It is caused by free_section_usemap()->virt_to_page(), virt_to_page() is
    only used for kernel direct mapping address, but sparse-vmemmap uses
    vmemmap address, so it is going wrong here.
    
      ------------[ cut here ]------------
      kernel BUG at arch/x86/mm/physaddr.c:20!
      invalid opcode: 0000 [#1] SMP
      Modules linked in: acpihp_drv acpihp_slot edd cpufreq_conservative cpufreq_userspace cpufreq_powersave acpi_cpufreq mperf fuse vfat fat loop dm_mod coretemp kvm crc32c_intel ipv6 ixgbe igb iTCO_wdt i7core_edac edac_core pcspkr iTCO_vendor_support ioatdma microcode joydev sr_mod i2c_i801 dca lpc_ich mfd_core mdio tpm_tis i2c_core hid_generic tpm cdrom sg tpm_bios rtc_cmos button ext3 jbd mbcache usbhid hid uhci_hcd ehci_hcd usbcore usb_common sd_mod crc_t10dif processor thermal_sys hwmon scsi_dh_alua scsi_dh_hp_sw scsi_dh_rdac scsi_dh_emc scsi_dh ata_generic ata_piix libata megaraid_sas scsi_mod
      CPU 39
      Pid: 6454, comm: sh Not tainted 3.7.0-rc1-acpihp-final+ #45 QCI QSSC-S4R/QSSC-S4R
      RIP: 0010:[<ffffffff8103c908>]  [<ffffffff8103c908>] __phys_addr+0x88/0x90
      RSP: 0018:ffff8804440d7c08  EFLAGS: 00010006
      RAX: 0000000000000006 RBX: ffffea0012000000 RCX: 000000000000002c
      ...
    
    Signed-off-by: Jianguo Wu <wujianguo@huawei.com>
    Signed-off-by: Jiang Liu <jiang.liu@huawei.com>
    Reviewd-by: Wen Congyang <wency@cn.fujitsu.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Reviewed-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Reviewed-by: Michal Hocko <mhocko@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86d80959eb81b931a509fe9ea78b31f319882637
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Nov 19 09:11:27 2012 -0500

    drm/radeon: properly track the crtc not_enabled case evergreen_mc_stop()
    
    commit 804cc4a0ad3a896ca295f771a28c6eb36ced7903 upstream.
    
    The save struct is not initialized previously so explicitly
    mark the crtcs as not used when they are not in use.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0c246c82dc5d1a9ab857364522ec56627a858eb
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Aug 15 17:18:42 2012 -0400

    drm/radeon: properly handle mc_stop/mc_resume on evergreen+ (v2)
    
    commit 62444b7462a2b98bc78d68736c03a7c4e66ba7e2 upstream.
    
    - Stop the displays from accessing the FB
    - Block CPU access
    - Turn off MC client access
    
    This should fix issues some users have seen, especially
    with UEFI, when changing the MC FB location that result
    in hangs or display corruption.
    
    v2: fix crtc enabled check noticed by Luca Tettamanti
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfbc8b9eab0b50753a397de1abed62d4397e13ca
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Aug 15 17:13:53 2012 -0400

    drm/radeon/dce4+: don't use radeon_crtc for vblank callback
    
    commit 4a15903db02026728d0cf2755c6fabae16b8db6a upstream.
    
    This might be called before we've allocated the radeon_crtcs
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c004e0d6faac4da0488b72f0791a5f3de26c4e4e
Author: Russell King - ARM Linux <linux@arm.linux.org.uk>
Date:   Sun Nov 18 16:39:32 2012 +0000

    Dove: Fix irq_to_pmu()
    
    commit d356cf5a74afa32b40decca3c9dd88bc3cd63eb5 upstream.
    
    PMU interrupts start at IRQ_DOVE_PMU_START, not IRQ_DOVE_PMU_START + 1.
    Fix the condition.  (It may have been less likely to occur had the code
    been written "if (irq >= IRQ_DOVE_PMU_START" which imho is the easier
    to understand notation, and matches the normal way of thinking about
    these things.)
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99e48f99066295c88c95058ecdfdd07145bef156
Author: Russell King - ARM Linux <linux@arm.linux.org.uk>
Date:   Sun Nov 18 16:29:44 2012 +0000

    Dove: Attempt to fix PMU/RTC interrupts
    
    commit 5d3df935426271016b895aecaa247101b4bfa35e upstream.
    
    Fix the acknowledgement of PMU interrupts on Dove: some Dove hardware
    has not been sensibly designed so that interrupts can be handled in a
    race free manner.  The PMU is one such instance.
    
    The pending (aka 'cause') register is a bunch of RW bits, meaning that
    these bits can be both cleared and set by software (confirmed on the
    Armada-510 on the cubox.)
    
    Hardware sets the appropriate bit when an interrupt is asserted, and
    software is required to clear the bits which are to be processed.  If
    we write ~(1 << bit), then we end up asserting every other interrupt
    except the one we're processing.  So, we need to do a read-modify-write
    cycle to clear the asserted bit.
    
    However, any interrupts which occur in the middle of this cycle will
    also be written back as zero, which will also clear the new interrupts.
    
    The upshot of this is: there is _no_ way to safely clear down interrupts
    in this register (and other similarly behaving interrupt pending
    registers on this device.)  The patch below at least stops us creating
    new interrupts.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
