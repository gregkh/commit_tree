commit 9a95f25269bd9257ab9fba7bb14355d50b5f39ec
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Jan 27 14:46:54 2020 +0100

    Linux 4.14.168

commit 4127249099b796b1fd5c74562ce94b94cda38553
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Dec 1 11:53:10 2018 +1100

    m68k: Call timer_interrupt() with interrupts disabled
    
    [ Upstream commit 1efdd4bd254311498123a15fa0acd565f454da97 ]
    
    Some platforms execute their timer handler with the interrupt priority
    level set below 6. That means the handler could be interrupted by another
    driver and this could lead to re-entry of the timer core.
    
    Avoid this by use of local_irq_save/restore for timer interrupt dispatch.
    This provides mutual exclusion around the timer interrupt flag access
    which is needed later in this series for the clocksource conversion.
    
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.21.1811131407120.2697@nanos.tec.linutronix.de
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c662630d94fc07da206a8423bfbf9c2330bb2c8
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Thu Nov 21 09:10:49 2019 +0100

    serial: stm32: fix clearing interrupt error flags
    
    [ Upstream commit 1250ed7114a977cdc2a67a0c09d6cdda63970eb9 ]
    
    The interrupt clear flag register is a "write 1 to clear" register.
    So, only writing ones allows to clear flags:
    - Replace buggy stm32_clr_bits() by a simple write to clear error flags
    - Replace useless read/modify/write stm32_set_bits() routine by a
      simple write to clear TC (transfer complete) flag.
    
    Fixes: 4f01d833fdcd ("serial: stm32: fix rx error handling")
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1574323849-1909-1-git-send-email-fabrice.gasnier@st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30987a4fd901be1a688feaf4b672d825ceffcd1c
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Tue Feb 26 12:22:11 2019 +0200

    IB/iser: Fix dma_nents type definition
    
    [ Upstream commit c1545f1a200f4adc4ef8dd534bf33e2f1aa22c2f ]
    
    The retured value from ib_dma_map_sg saved in dma_nents variable. To avoid
    future mismatch between types, define dma_nents as an integer instead of
    unsigned.
    
    Fixes: 57b26497fabe ("IB/iser: Pass the correct number of entries for dma mapped SGL")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Israel Rukshin <israelr@mellanox.com>
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Acked-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 602cfd269e9cf2fa1c2242985ac0406834389402
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Tue Nov 19 12:03:31 2019 +0000

    arm64: dts: juno: Fix UART frequency
    
    [ Upstream commit 39a1a8941b27c37f79508426e27a2ec29829d66c ]
    
    Older versions of the Juno *SoC* TRM [1] recommended that the UART clock
    source should be 7.2738 MHz, whereas the *system* TRM [2] stated a more
    correct value of 7.3728 MHz. Somehow the wrong value managed to end up in
    our DT.
    
    Doing a prime factorisation, a modulo divide by 115200 and trying
    to buy a 7.2738 MHz crystal at your favourite electronics dealer suggest
    that the old value was actually a typo. The actual UART clock is driven
    by a PLL, configured via a parameter in some board.txt file in the
    firmware, which reads 7.37 MHz (sic!).
    
    Fix this to correct the baud rate divisor calculation on the Juno board.
    
    [1] http://infocenter.arm.com/help/topic/com.arm.doc.ddi0515b.b/DDI0515B_b_juno_arm_development_platform_soc_trm.pdf
    [2] http://infocenter.arm.com/help/topic/com.arm.doc.100113_0000_07_en/arm_versatile_express_juno_development_platform_(v2m_juno)_technical_reference_manual_100113_0000_07_en.pdf
    
    Fixes: 71f867ec130e ("arm64: Add Juno board device tree.")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Acked-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75262c4cc870f6ccf29d33d8758a826dc735e3cf
Author: Sam Bobroff <sbobroff@linux.ibm.com>
Date:   Mon Nov 18 10:53:53 2019 +1100

    drm/radeon: fix bad DMA from INTERRUPT_CNTL2
    
    [ Upstream commit 62d91dd2851e8ae2ca552f1b090a3575a4edf759 ]
    
    The INTERRUPT_CNTL2 register expects a valid DMA address, but is
    currently set with a GPU MC address.  This can cause problems on
    systems that detect the resulting DMA read from an invalid address
    (found on a Power8 guest).
    
    Instead, use the DMA address of the dummy page because it will always
    be safe.
    
    Fixes: d8f60cfc9345 ("drm/radeon/kms: Add support for interrupts on r6xx/r7xx chips (v3)")
    Fixes: 25a857fbe973 ("drm/radeon/kms: add support for interrupts on SI")
    Fixes: a59781bbe528 ("drm/radeon: add support for interrupts on CIK (v5)")
    Signed-off-by: Sam Bobroff <sbobroff@linux.ibm.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3ba33cc5a94f5469865263bbb99c8ad3631ea3f
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Mon Nov 18 15:38:02 2019 +0800

    dmaengine: ti: edma: fix missed failure handling
    
    [ Upstream commit 340049d453682a9fe8d91fe794dd091730f4bb25 ]
    
    When devm_kcalloc fails, it forgets to call edma_free_slot.
    Replace direct return with failure handler to fix it.
    
    Fixes: 1be5336bc7ba ("dmaengine: edma: New device tree binding")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Link: https://lore.kernel.org/r/20191118073802.28424-1-hslester96@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit beb22d9386c3eab7938f6920e01768e98a3924e9
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Wed Oct 2 16:52:37 2019 -0500

    affs: fix a memory leak in affs_remount
    
    [ Upstream commit 450c3d4166837c496ebce03650c08800991f2150 ]
    
    In affs_remount if data is provided it is duplicated into new_opts.  The
    allocated memory for new_opts is only released if parse_options fails.
    
    There's a bit of history behind new_options, originally there was
    save/replace options on the VFS layer so the 'data' passed must not
    change (thus strdup), this got cleaned up in later patches. But not
    completely.
    
    There's no reason to do the strdup in cases where the filesystem does
    not need to reuse the 'data' again, because strsep would modify it
    directly.
    
    Fixes: c8f33d0bec99 ("affs: kstrdup() memory handling")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    [ update changelog ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c17dd4b587bed444f1ea58bfc9bd90f44bf9db3
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:43 2019 +0100

    mmc: core: fix wl1251 sdio quirks
    
    [ Upstream commit 16568b4a4f0c34bd35cfadac63303c7af7812764 ]
    
    wl1251 and wl1271 have different vendor id and device id.
    So we need to handle both with sdio quirks.
    
    Fixes: 884f38607897 ("mmc: core: move some sdio IDs out of quirks file")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7effc7cf857317e78fdaa9111243ee9d24a8e80f
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:42 2019 +0100

    mmc: sdio: fix wl1251 vendor id
    
    [ Upstream commit e5db673e7fe2f971ec82039a28dc0811c2100e87 ]
    
    v4.11-rc1 did introduce a patch series that rearranged the
    sdio quirks into a header file. Unfortunately this did forget
    to handle SDIO_VENDOR_ID_TI differently between wl1251 and
    wl1271 with the result that although the wl1251 was found on
    the sdio bus, the firmware did not load any more and there was
    no interface registration.
    
    This patch defines separate constants to be used by sdio quirks
    and drivers.
    
    Fixes: 884f38607897 ("mmc: core: move some sdio IDs out of quirks file")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68b7234958105858d85a5130d73e3f5fe5e70c22
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 8 05:07:46 2019 -0800

    packet: fix data-race in fanout_flow_is_huge()
    
    [ Upstream commit b756ad928d98e5ef0b74af7546a6a31a8dadde00 ]
    
    KCSAN reported the following data-race [1]
    
    Adding a couple of READ_ONCE()/WRITE_ONCE() should silence it.
    
    Since the report hinted about multiple cpus using the history
    concurrently, I added a test avoiding writing on it if the
    victim slot already contains the desired value.
    
    [1]
    
    BUG: KCSAN: data-race in fanout_demux_rollover / fanout_demux_rollover
    
    read to 0xffff8880b01786cc of 4 bytes by task 18921 on cpu 1:
     fanout_flow_is_huge net/packet/af_packet.c:1303 [inline]
     fanout_demux_rollover+0x33e/0x3f0 net/packet/af_packet.c:1353
     packet_rcv_fanout+0x34e/0x490 net/packet/af_packet.c:1453
     deliver_skb net/core/dev.c:1888 [inline]
     dev_queue_xmit_nit+0x15b/0x540 net/core/dev.c:1958
     xmit_one net/core/dev.c:3195 [inline]
     dev_hard_start_xmit+0x3f5/0x430 net/core/dev.c:3215
     __dev_queue_xmit+0x14ab/0x1b40 net/core/dev.c:3792
     dev_queue_xmit+0x21/0x30 net/core/dev.c:3825
     neigh_direct_output+0x1f/0x30 net/core/neighbour.c:1530
     neigh_output include/net/neighbour.h:511 [inline]
     ip6_finish_output2+0x7a2/0xec0 net/ipv6/ip6_output.c:116
     __ip6_finish_output net/ipv6/ip6_output.c:142 [inline]
     __ip6_finish_output+0x2d7/0x330 net/ipv6/ip6_output.c:127
     ip6_finish_output+0x41/0x160 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip6_output+0xf2/0x280 net/ipv6/ip6_output.c:175
     dst_output include/net/dst.h:436 [inline]
     ip6_local_out+0x74/0x90 net/ipv6/output_core.c:179
     ip6_send_skb+0x53/0x110 net/ipv6/ip6_output.c:1795
     udp_v6_send_skb.isra.0+0x3ec/0xa70 net/ipv6/udp.c:1173
     udpv6_sendmsg+0x1906/0x1c20 net/ipv6/udp.c:1471
     inet6_sendmsg+0x6d/0x90 net/ipv6/af_inet6.c:576
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0x9f/0xc0 net/socket.c:657
     ___sys_sendmsg+0x2b7/0x5d0 net/socket.c:2311
     __sys_sendmmsg+0x123/0x350 net/socket.c:2413
     __do_sys_sendmmsg net/socket.c:2442 [inline]
     __se_sys_sendmmsg net/socket.c:2439 [inline]
     __x64_sys_sendmmsg+0x64/0x80 net/socket.c:2439
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    write to 0xffff8880b01786cc of 4 bytes by task 18922 on cpu 0:
     fanout_flow_is_huge net/packet/af_packet.c:1306 [inline]
     fanout_demux_rollover+0x3a4/0x3f0 net/packet/af_packet.c:1353
     packet_rcv_fanout+0x34e/0x490 net/packet/af_packet.c:1453
     deliver_skb net/core/dev.c:1888 [inline]
     dev_queue_xmit_nit+0x15b/0x540 net/core/dev.c:1958
     xmit_one net/core/dev.c:3195 [inline]
     dev_hard_start_xmit+0x3f5/0x430 net/core/dev.c:3215
     __dev_queue_xmit+0x14ab/0x1b40 net/core/dev.c:3792
     dev_queue_xmit+0x21/0x30 net/core/dev.c:3825
     neigh_direct_output+0x1f/0x30 net/core/neighbour.c:1530
     neigh_output include/net/neighbour.h:511 [inline]
     ip6_finish_output2+0x7a2/0xec0 net/ipv6/ip6_output.c:116
     __ip6_finish_output net/ipv6/ip6_output.c:142 [inline]
     __ip6_finish_output+0x2d7/0x330 net/ipv6/ip6_output.c:127
     ip6_finish_output+0x41/0x160 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip6_output+0xf2/0x280 net/ipv6/ip6_output.c:175
     dst_output include/net/dst.h:436 [inline]
     ip6_local_out+0x74/0x90 net/ipv6/output_core.c:179
     ip6_send_skb+0x53/0x110 net/ipv6/ip6_output.c:1795
     udp_v6_send_skb.isra.0+0x3ec/0xa70 net/ipv6/udp.c:1173
     udpv6_sendmsg+0x1906/0x1c20 net/ipv6/udp.c:1471
     inet6_sendmsg+0x6d/0x90 net/ipv6/af_inet6.c:576
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0x9f/0xc0 net/socket.c:657
     ___sys_sendmsg+0x2b7/0x5d0 net/socket.c:2311
     __sys_sendmmsg+0x123/0x350 net/socket.c:2413
     __do_sys_sendmmsg net/socket.c:2442 [inline]
     __se_sys_sendmmsg net/socket.c:2439 [inline]
     __x64_sys_sendmmsg+0x64/0x80 net/socket.c:2439
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 18922 Comm: syz-executor.3 Not tainted 5.4.0-rc6+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 3b3a5b0aab5b ("packet: rollover huge flows before small flows")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00719495ea54c6d40a11ee1785ea2cedc8573042
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 5 14:11:49 2019 -0800

    net: neigh: use long type to store jiffies delta
    
    [ Upstream commit 9d027e3a83f39b819e908e4e09084277a2e45e95 ]
    
    A difference of two unsigned long needs long storage.
    
    Fixes: c7fb64db001f ("[NETLINK]: Neighbour table configuration and statistics via rtnetlink")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de67fb88a153da82174e8496166fcb72e337d962
Author: Stephen Hemminger <sthemmin@microsoft.com>
Date:   Fri Nov 1 16:42:37 2019 -0700

    hv_netvsc: flag software created hash value
    
    [ Upstream commit df9f540ca74297a84bafacfa197e9347b20beea5 ]
    
    When the driver needs to create a hash value because it
    was not done at higher level, then the hash should be marked
    as a software not hardware hash.
    
    Fixes: f72860afa2e3 ("hv_netvsc: Exclude non-TCP port numbers from vRSS hashing")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9d56b8e366ae31bcb4e74056cda11432dc251c1
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Mon Nov 4 21:33:50 2019 +0800

    MIPS: Loongson: Fix return value of loongson_hwmon_init
    
    [ Upstream commit dece3c2a320b0a6d891da6ff774ab763969b6860 ]
    
    When call function hwmon_device_register failed, use the actual
    return value instead of always -ENOMEM.
    
    Fixes: 64f09aa967e1 ("MIPS: Loongson-3: Add CPU Hwmon platform driver")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Paul Burton <paulburton@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Huacai Chen <chenhc@lemote.com>
    Cc: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 495d767ec747d62fb16b246832b545db1c8f1f8f
Author: Marc Dionne <marc.dionne@auristor.com>
Date:   Thu Nov 21 15:37:26 2019 +0000

    afs: Fix large file support
    
    [ Upstream commit b485275f1aca8a9da37fd35e4fad673935e827da ]
    
    By default s_maxbytes is set to MAX_NON_LFS, which limits the usable
    file size to 2GB, enforced by the vfs.
    
    Commit b9b1f8d5930a ("AFS: write support fixes") added support for the
    64-bit fetch and store server operations, but did not change this value.
    As a result, attempts to write past the 2G mark result in EFBIG errors:
    
     $ dd if=/dev/zero of=foo bs=1M count=1 seek=2048
     dd: error writing 'foo': File too large
    
    Set s_maxbytes to MAX_LFS_FILESIZE.
    
    Fixes: b9b1f8d5930a ("AFS: write support fixes")
    Signed-off-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fde9261b5217d48dc19f93610759d7a658237c9a
Author: Stefan Wahren <stefan.wahren@in-tech.com>
Date:   Wed Nov 20 18:29:13 2019 +0100

    net: qca_spi: Move reset_count to struct qcaspi
    
    [ Upstream commit bc19c32904e36548335b35fdce6ce734e20afc0a ]
    
    The reset counter is specific for every QCA700x chip. So move this
    into the private driver struct. Otherwise we get unpredictable reset
    behavior in setups with multiple QCA700x chips.
    
    Fixes: 291ab06ecf67 (net: qualcomm: new Ethernet over SPI driver for QCA7000)
    Signed-off-by: Stefan Wahren <stefan.wahren@in-tech.com>
    Signed-off-by: Stefan Wahren <wahrenst@gmx.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b630744138cd00215befad571428b38b4b9f219d
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 18 09:16:58 2019 -0700

    net: netem: correct the parent's backlog when corrupted packet was dropped
    
    [ Upstream commit e0ad032e144731a5928f2d75e91c2064ba1a764c ]
    
    If packet corruption failed we jump to finish_segs and return
    NET_XMIT_SUCCESS. Seeing success will make the parent qdisc
    increment its backlog, that's incorrect - we need to return
    NET_XMIT_DROP.
    
    Fixes: 6071bd1aa13e ("netem: Segment GSO packets on enqueue")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0f8a42943c46030a40737a02e871186968f0123
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Fri Oct 18 09:16:57 2019 -0700

    net: netem: fix error path for corrupted GSO frames
    
    [ Upstream commit a7fa12d15855904aff1716e1fc723c03ba38c5cc ]
    
    To corrupt a GSO frame we first perform segmentation.  We then
    proceed using the first segment instead of the full GSO skb and
    requeue the rest of the segments as separate packets.
    
    If there are any issues with processing the first segment we
    still want to process the rest, therefore we jump to the
    finish_segs label.
    
    Commit 177b8007463c ("net: netem: fix backlog accounting for
    corrupted GSO frames") started using the pointer to the first
    segment in the "rest of segments processing", but as mentioned
    above the first segment may had already been freed at this point.
    
    Backlog corrections for parent qdiscs have to be adjusted.
    
    Fixes: 177b8007463c ("net: netem: fix backlog accounting for corrupted GSO frames")
    Reported-by: kbuild test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ca124f27e5083048bb9d8c5a87deca63b1a027e
Author: Robin Gong <yibin.gong@nxp.com>
Date:   Tue Sep 24 09:49:18 2019 +0000

    dmaengine: imx-sdma: fix size check for sdma script_number
    
    [ Upstream commit bd73dfabdda280fc5f05bdec79b6721b4b2f035f ]
    
    Illegal memory will be touch if SDMA_SCRIPT_ADDRS_ARRAY_SIZE_V3
    (41) exceed the size of structure sdma_script_start_addrs(40),
    thus cause memory corrupt such as slob block header so that kernel
    trap into while() loop forever in slob_free(). Please refer to below
    code piece in imx-sdma.c:
    for (i = 0; i < sdma->script_number; i++)
            if (addr_arr[i] > 0)
                    saddr_arr[i] = addr_arr[i]; /* memory corrupt here */
    That issue was brought by commit a572460be9cf ("dmaengine: imx-sdma: Add
    support for version 3 firmware") because SDMA_SCRIPT_ADDRS_ARRAY_SIZE_V3
    (38->41 3 scripts added) not align with script number added in
    sdma_script_start_addrs(2 scripts).
    
    Fixes: a572460be9cf ("dmaengine: imx-sdma: Add support for version 3 firmware")
    Cc: stable@vger.kernel
    Link: https://www.spinics.net/lists/arm-kernel/msg754895.html
    Signed-off-by: Robin Gong <yibin.gong@nxp.com>
    Reported-by: Jurgen Lambrecht <J.Lambrecht@TELEVIC.com>
    Link: https://lore.kernel.org/r/1569347584-3478-1-git-send-email-yibin.gong@nxp.com
    [vkoul: update the patch title]
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35ff594b0da23f442a881154356deadf86e2d3ca
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Fri Oct 11 06:39:39 2019 -0700

    drm/msm/dsi: Implement reset correctly
    
    [ Upstream commit 78e31c42261779a01bc73472d0f65f15378e9de3 ]
    
    On msm8998, vblank timeouts are observed because the DSI controller is not
    reset properly, which ends up stalling the MDP.  This is because the reset
    logic is not correct per the hardware documentation.
    
    The documentation states that after asserting reset, software should wait
    some time (no indication of how long), or poll the status register until it
    returns 0 before deasserting reset.
    
    wmb() is insufficient for this purpose since it just ensures ordering, not
    timing between writes.  Since asserting and deasserting reset occurs on the
    same register, ordering is already guaranteed by the architecture, making
    the wmb extraneous.
    
    Since we would define a timeout for polling the status register to avoid a
    possible infinite loop, lets just use a static delay of 20 ms, since 16.666
    ms is the time available to process one frame at 60 fps.
    
    Fixes: a689554ba6ed ("drm/msm: Initial add DSI connector support")
    Cc: Hai Li <hali@codeaurora.org>
    Cc: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Reviewed-by: Sean Paul <sean@poorly.run>
    [seanpaul renamed RESET_DELAY to DSI_RESET_TOGGLE_DELAY_MS]
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191011133939.16551-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8e920b22026c4717daee0e16ecee828aecfcb84
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 9 15:10:15 2019 -0700

    tcp: annotate lockless access to tcp_memory_pressure
    
    [ Upstream commit 1f142c17d19a5618d5a633195a46f2c8be9bf232 ]
    
    tcp_memory_pressure is read without holding any lock,
    and its value could be changed on other cpus.
    
    Use READ_ONCE() to annotate these lockless reads.
    
    The write side is already using atomic ops.
    
    Fixes: b8da51ebb1aa ("tcp: introduce tcp_under_memory_pressure()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 681c8c92c4b78e80e0853f8e18861e93069d68e6
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 9 14:51:20 2019 -0700

    net: add {READ|WRITE}_ONCE() annotations on ->rskq_accept_head
    
    [ Upstream commit 60b173ca3d1cd1782bd0096dc17298ec242f6fb1 ]
    
    reqsk_queue_empty() is called from inet_csk_listen_poll() while
    other cpus might write ->rskq_accept_head value.
    
    Use {READ|WRITE}_ONCE() to avoid compiler tricks
    and potential KCSAN splats.
    
    Fixes: fff1f3001cc5 ("tcp: add a spinlock to protect struct request_sock_queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ffb5a9b396d7857600fdf94432a94490c0cae71
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 9 12:55:53 2019 -0700

    net: avoid possible false sharing in sk_leave_memory_pressure()
    
    [ Upstream commit 503978aca46124cd714703e180b9c8292ba50ba7 ]
    
    As mentioned in https://github.com/google/ktsan/wiki/READ_ONCE-and-WRITE_ONCE#it-may-improve-performance
    a C compiler can legally transform :
    
    if (memory_pressure && *memory_pressure)
            *memory_pressure = 0;
    
    to :
    
    if (memory_pressure)
            *memory_pressure = 0;
    
    Fixes: 0604475119de ("tcp: add TCPMemoryPressuresChrono counter")
    Fixes: 180d8cd942ce ("foundations of per-cgroup memory pressure controlling.")
    Fixes: 3ab224be6d69 ("[NET] CORE: Introducing new memory accounting interface.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e891a20643c751e07f1404c6e9e2267391a37f04
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Oct 9 11:10:52 2019 +0800

    act_mirred: Fix mirred_init_module error handling
    
    [ Upstream commit 11c9a7d38af524217efb7a176ad322b97ac2f163 ]
    
    If tcf_register_action failed, mirred_device_notifier
    should be unregistered.
    
    Fixes: 3b87956ea645 ("net sched: fix race in mirred device removal")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3134607b52605e595781f5083621bc7eb60e1242
Author: Antonio Borneo <antonio.borneo@st.com>
Date:   Mon Oct 7 17:43:04 2019 +0200

    net: stmmac: fix length of PTP clock's name string
    
    [ Upstream commit 5da202c88f8c355ad79bc2e8eb582e6d433060e7 ]
    
    The field "name" in struct ptp_clock_info has a fixed size of 16
    chars and is used as zero terminated string by clock_name_show()
    in drivers/ptp/ptp_sysfs.c
    The current initialization value requires 17 chars to fit also the
    null termination, and this causes overflow to the next bytes in
    the struct when the string is read as null terminated:
            hexdump -C /sys/class/ptp/ptp0/clock_name
            00000000  73 74 6d 6d 61 63 5f 70  74 70 5f 63 6c 6f 63 6b  |stmmac_ptp_clock|
            00000010  a0 ac b9 03 0a                                    |.....|
    where the extra 4 bytes (excluding the newline) after the string
    represent the integer 0x03b9aca0 = 62500000 assigned to the field
    "max_adj" that follows "name" in the same struct.
    
    There is no strict requirement for the "name" content and in the
    comment in ptp_clock_kernel.h it's reported it should just be 'A
    short "friendly name" to identify the clock'.
    Replace it with "stmmac ptp".
    
    Signed-off-by: Antonio Borneo <antonio.borneo@st.com>
    Fixes: 92ba6888510c ("stmmac: add the support for PTP hw clock driver")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8cfe559cb47108cc97353b65d79115cf6bf1b57
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Oct 6 14:24:27 2019 -0700

    llc: fix sk_buff refcounting in llc_conn_state_process()
    
    [ Upstream commit 36453c852816f19947ca482a595dffdd2efa4965 ]
    
    If llc_conn_state_process() sees that llc_conn_service() put the skb on
    a list, it will drop one fewer references to it.  This is wrong because
    the current behavior is that llc_conn_service() never consumes a
    reference to the skb.
    
    The code also makes the number of skb references being dropped
    conditional on which of ind_prim and cfm_prim are nonzero, yet neither
    of these affects how many references are *acquired*.  So there is extra
    code that tries to fix this up by sometimes taking another reference.
    
    Remove the unnecessary/broken refcounting logic and instead just add an
    skb_get() before the only two places where an extra reference is
    actually consumed.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e39340636dd980978224755f7bb641eeb08b88f4
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Oct 6 14:24:26 2019 -0700

    llc: fix another potential sk_buff leak in llc_ui_sendmsg()
    
    [ Upstream commit fc8d5db10cbe1338a52ebc74e7feab9276721774 ]
    
    All callers of llc_conn_state_process() except llc_build_and_send_pkt()
    (via llc_ui_sendmsg() -> llc_ui_send_data()) assume that it always
    consumes a reference to the skb.  Fix this caller to do the same.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05c2aa29d3a4e6d88015cecf04085d4b13ec1ae2
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Oct 4 15:37:05 2019 +0300

    mac80211: accept deauth frames in IBSS mode
    
    [ Upstream commit 95697f9907bfe3eab0ef20265a766b22e27dde64 ]
    
    We can process deauth frames and all, but we drop them very
    early in the RX path today - this could never have worked.
    
    Fixes: 2cc59e784b54 ("mac80211: reply to AUTH with DEAUTH if sta allocation fails in IBSS")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20191004123706.15768-2-luca@coelho.fi
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe89f528b519c29e392a4acd71c00753702f27e9
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Sun Oct 6 13:08:56 2019 +0200

    net: stmmac: gmac4+: Not all Unicast addresses may be available
    
    [ Upstream commit 25683bab09a70542b9f8e3e28f79b3369e56701f ]
    
    Some setups may not have all Unicast addresses filters available. Check
    the number of available filters before trying to setup it.
    
    Fixes: 477286b53f55 ("stmmac: add GMAC4 core support")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae79af838296f399eb53f555e76e86217695d6da
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Oct 3 13:57:29 2019 +0200

    nvme: retain split access workaround for capability reads
    
    [ Upstream commit 3a8ecc935efabdad106b5e06d07b150c394b4465 ]
    
    Commit 7fd8930f26be4
    
      "nvme: add a common helper to read Identify Controller data"
    
    has re-introduced an issue that we have attempted to work around in the
    past, in commit a310acd7a7ea ("NVMe: use split lo_hi_{read,write}q").
    
    The problem is that some PCIe NVMe controllers do not implement 64-bit
    outbound accesses correctly, which is why the commit above switched
    to using lo_hi_[read|write]q for all 64-bit BAR accesses occuring in
    the code.
    
    In the mean time, the NVMe subsystem has been refactored, and now calls
    into the PCIe support layer for NVMe via a .reg_read64() method, which
    fails to use lo_hi_readq(), and thus reintroduces the problem that the
    workaround above aimed to address.
    
    Given that, at the moment, .reg_read64() is only used to read the
    capability register [which is known to tolerate split reads], let's
    switch .reg_read64() to lo_hi_readq() as well.
    
    This fixes a boot issue on some ARM boxes with NVMe behind a Synopsys
    DesignWare PCIe host controller.
    
    Fixes: 7fd8930f26be4 ("nvme: add a common helper to read Identify Controller data")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3dc236296a368bb3c5571207176d8e547589aadf
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 14:05:54 2019 +0300

    net: ethernet: stmmac: Fix signedness bug in ipq806x_gmac_of_parse()
    
    [ Upstream commit 231042181dc9d6122c6faba64e99ccb25f13cc6c ]
    
    The "gmac->phy_mode" variable is an enum and in this context GCC will
    treat it as an unsigned int so the error handling will never be
    triggered.
    
    Fixes: b1c17215d718 ("stmmac: add ipq806x glue layer")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed3f1423a1b303aac7aa3f38ab3535397e1e1e42
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 14:01:00 2019 +0300

    of: mdio: Fix a signedness bug in of_phy_get_and_connect()
    
    [ Upstream commit d7eb651212fdbafa82d485d8e76095ac3b14c193 ]
    
    The "iface" variable is an enum and in this context GCC treats it as
    an unsigned int so the error handling is never triggered.
    
    Fixes: b78624125304 ("of_mdio: Abstract a general interface for phy connect")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 168de4c8560e2ee278709557bf74d1418b18ddf4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 13:59:11 2019 +0300

    net: axienet: fix a signedness bug in probe
    
    [ Upstream commit 73e211e11be86715d66bd3c9d38b3c34b05fca9a ]
    
    The "lp->phy_mode" is an enum but in this context GCC treats it as an
    unsigned int so the error handling is never triggered.
    
    Fixes: ee06b1728b95 ("net: axienet: add support for standard phy-mode binding")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd885e8726baad6e386c182272bd52ed1612cb7a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 13:58:22 2019 +0300

    net: stmmac: dwmac-meson8b: Fix signedness bug in probe
    
    [ Upstream commit f10210517a2f37feea2edf85eb34c98977265c16 ]
    
    The "dwmac->phy_mode" is an enum and in this context GCC treats it as
    an unsigned int so the error handling is never triggered.
    
    Fixes: 566e82516253 ("net: stmmac: add a glue driver for the Amlogic Meson 8b / GXBB DWMAC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba54da52df0d948f9965f2d054df87e72b30dca0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 13:56:04 2019 +0300

    net: broadcom/bcmsysport: Fix signedness in bcm_sysport_probe()
    
    [ Upstream commit 25a584955f020d6ec499c513923fb220f3112d2b ]
    
    The "priv->phy_interface" variable is an enum and in this context GCC
    will treat it as unsigned so the error handling will never be
    triggered.
    
    Fixes: 80105befdb4b ("net: systemport: add Broadcom SYSTEMPORT Ethernet MAC driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb6066a342cd90eb5d2bcd438ccb242bb67e278e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 13:55:32 2019 +0300

    net: hisilicon: Fix signedness bug in hix5hd2_dev_probe()
    
    [ Upstream commit 002dfe8085255b7bf1e0758c3d195c5412d35be9 ]
    
    The "priv->phy_mode" variable is an enum and in this context GCC will
    treat it as unsigned to the error handling will never trigger.
    
    Fixes: 57c5bc9ad7d7 ("net: hisilicon: add hix5hd2 mac driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39479c6c4695855c5d09fc2290723c8f00098110
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 25 13:54:30 2019 +0300

    net: aquantia: Fix aq_vec_isr_legacy() return value
    
    [ Upstream commit 31aefe14bc9f56566041303d733fda511d3a1c3e ]
    
    The irqreturn_t type is an enum or an unsigned int in GCC.  That
    creates to problems because it can't detect if the
    self->aq_hw_ops->hw_irq_read() call fails and at the end the function
    always returns IRQ_HANDLED.
    
    drivers/net/ethernet/aquantia/atlantic/aq_vec.c:316 aq_vec_isr_legacy() warn: unsigned 'err' is never less than zero.
    drivers/net/ethernet/aquantia/atlantic/aq_vec.c:329 aq_vec_isr_legacy() warn: always true condition '(err >= 0) => (0-u32max >= 0)'
    
    Fixes: 970a2e9864b0 ("net: ethernet: aquantia: Vector operations")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Igor Russkikh <igor.russkikh@aquantia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91586b4d9cae8fd12c6e6ae1b1c2c342c88cc95d
Author: Filippo Sironi <sironi@amazon.de>
Date:   Tue Sep 10 19:49:21 2019 +0200

    iommu/amd: Wait for completion of IOTLB flush in attach_device
    
    [ Upstream commit 0b15e02f0cc4fb34a9160de7ba6db3a4013dc1b7 ]
    
    To make sure the domain tlb flush completes before the
    function returns, explicitly wait for its completion.
    
    Signed-off-by: Filippo Sironi <sironi@amazon.de>
    Fixes: 42a49f965a8d ("amd-iommu: flush domain tlb when attaching a new device")
    [joro: Added commit message and fixes tag]
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bfb051a68c2b0f08ac685296993574e5861bd9b
Author: Gerd Rausch <gerd.rausch@oracle.com>
Date:   Thu Sep 12 13:49:41 2019 -0700

    net/rds: Fix 'ib_evt_handler_call' element in 'rds_ib_stat_names'
    
    [ Upstream commit 05a82481a3024b94db00b8c816bb3d526b5209e0 ]
    
    All entries in 'rds_ib_stat_names' are stringified versions
    of the corresponding "struct rds_ib_statistics" element
    without the "s_"-prefix.
    
    Fix entry 'ib_evt_handler_call' to do the same.
    
    Fixes: f4f943c958a2 ("RDS: IB: ack more receive completions to improve performance")
    Signed-off-by: Gerd Rausch <gerd.rausch@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f746a04e45c0b7baa0facd3ebba1b02693e33f2
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Mon Sep 2 11:27:31 2019 +0200

    RDMA/cma: Fix false error message
    
    [ Upstream commit a6e4d254c19b541a58caced322111084b27a7788 ]
    
    In addr_handler(), assuming status == 0 and the device already has been
    acquired (id_priv->cma_dev != NULL), we get the following incorrect
    "error" message:
    
    RDMA CM: ADDR_ERROR: failed to resolve IP. status 0
    
    Fixes: 498683c6a7ee ("IB/cma: Add debug messages to error flows")
    Link: https://lore.kernel.org/r/20190902092731.1055757-1-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4f56e03bf2a69548cedaeaa46a691da520cc7d3
Author: Nicolas Boichat <drinkcat@chromium.org>
Date:   Tue Sep 10 16:46:17 2019 +0300

    ath10k: adjust skb length in ath10k_sdio_mbox_rx_packet
    
    [ Upstream commit b7139960832eb56fa15d390a4b5c8c5739bd0d1a ]
    
    When the FW bundles multiple packets, pkt->act_len may be incorrect
    as it refers to the first packet only (however, the FW will only
    bundle packets that fit into the same pkt->alloc_len).
    
    Before this patch, the skb length would be set (incorrectly) to
    pkt->act_len in ath10k_sdio_mbox_rx_packet, and then later manually
    adjusted in ath10k_sdio_mbox_rx_process_packet.
    
    The first problem is that ath10k_sdio_mbox_rx_process_packet does not
    use proper skb_put commands to adjust the length (it directly changes
    skb->len), so we end up with a mismatch between skb->head + skb->tail
    and skb->data + skb->len. This is quite serious, and causes corruptions
    in the TCP stack, as the stack tries to coalesce packets, and relies
    on skb->tail being correct (that is, skb_tail_pointer must point to
    the first byte_after_ the data).
    
    Instead of re-adjusting the size in ath10k_sdio_mbox_rx_process_packet,
    this moves the code to ath10k_sdio_mbox_rx_packet, and also add a
    bounds check, as skb_put would crash the kernel if not enough space is
    available.
    
    Tested with QCA6174 SDIO with firmware
    WLAN.RMH.4.4.1-00007-QCARMSWP-1.
    
    Fixes: 8530b4e7b22bc3b ("ath10k: sdio: set skb len for all rx packets")
    Signed-off-by: Nicolas Boichat <drinkcat@chromium.org>
    Signed-off-by: Wen Gong <wgong@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c09015c8bcb8599e711bb3db13aa1fc2d0ecdda
Author: Li Jin <li.jin@broadcom.com>
Date:   Thu Aug 29 10:22:27 2019 +0530

    pinctrl: iproc-gpio: Fix incorrect pinconf configurations
    
    [ Upstream commit 398a1f50e3c731586182fd52b834103b0aa2f826 ]
    
    Fix drive strength for AON/CRMU controller; fix pull-up/down setting
    for CCM/CDRU controller.
    
    Fixes: 616043d58a89 ("pinctrl: Rename gpio driver from cygnus to iproc")
    Signed-off-by: Li Jin <li.jin@broadcom.com>
    Link: https://lore.kernel.org/r/1567054348-19685-2-git-send-email-srinath.mannam@broadcom.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 742ca82d31dfaac9bcdf552ca9b555658687c5a0
Author: Mao Wenan <maowenan@huawei.com>
Date:   Wed Sep 11 09:36:23 2019 +0800

    net: sonic: replace dev_kfree_skb in sonic_send_packet
    
    [ Upstream commit 49f6c90bf6805948b597eabb499e500a47cf24be ]
    
    sonic_send_packet will be processed in irq or non-irq
    context, so it would better use dev_kfree_skb_any
    instead of dev_kfree_skb.
    
    Fixes: d9fb9f384292 ("*sonic/natsemi/ns83829: Move the National Semi-conductor drivers")
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c565cc955e6b5f07b97ab074bfbbc37b7682a35
Author: Dan Robertson <dan@dlrobertson.com>
Date:   Thu Sep 5 01:45:54 2019 +0000

    hwmon: (shtc1) fix shtc1 and shtw1 id mask
    
    [ Upstream commit fdc7d8e829ec755c5cfb2f5a8d8c0cdfb664f895 ]
    
    Fix an error in the bitmaskfor the shtc1 and shtw1 bitmask used to
    retrieve the chip ID from the ID register. See section 5.7 of the shtw1
    or shtc1 datasheet for details.
    
    Fixes: 1a539d372edd9832444e7a3daa710c444c014dc9 ("hwmon: add support for Sensirion SHTC1 sensor")
    Signed-off-by: Dan Robertson <dan@dlrobertson.com>
    Link: https://lore.kernel.org/r/20190905014554.21658-3-dan@dlrobertson.com
    [groeck: Reordered to be first in series and adjusted accordingly]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22437abfe204d1797245896a701bc2dc5a90c7ca
Author: Firo Yang <firo.yang@suse.com>
Date:   Thu Aug 8 04:03:49 2019 +0000

    ixgbe: sync the first fragment unconditionally
    
    [ Upstream commit e7ba676c6188d394a0133fc4b9bcd7ee50d54b7f ]
    
    In Xen environment, if Xen-swiotlb is enabled, ixgbe driver
    could possibly allocate a page, DMA memory buffer, for the first
    fragment which is not suitable for Xen-swiotlb to do DMA operations.
    Xen-swiotlb have to internally allocate another page for doing DMA
    operations. This mechanism requires syncing the data from the internal
    page to the page which ixgbe sends to upper network stack. However,
    since commit f3213d932173 ("ixgbe: Update driver to make use of DMA
    attributes in Rx path"), the unmap operation is performed with
    DMA_ATTR_SKIP_CPU_SYNC. As a result, the sync is not performed.
    Since the sync isn't performed, the upper network stack could receive
    a incomplete network packet. By incomplete, it means the linear data
    on the first fragment(between skb->head and skb->end) is invalid. So
    we have to copy the data from the internal xen-swiotlb page to the page
    which ixgbe sends to upper network stack through the sync operation.
    
    More details from Alexander Duyck:
    Specifically since we are mapping the frame with
    DMA_ATTR_SKIP_CPU_SYNC we have to unmap with that as well. As a result
    a sync is not performed on an unmap and must be done manually as we
    skipped it for the first frag. As such we need to always sync before
    possibly performing a page unmap operation.
    
    Fixes: f3213d932173 ("ixgbe: Update driver to make use of DMA attributes in Rx path")
    Signed-off-by: Firo Yang <firo.yang@suse.com>
    Reviewed-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7a67b4e8e8d68d6301d233645a3bfbfba40bc35
Author: Omar Sandoval <osandov@fb.com>
Date:   Thu Aug 15 14:04:02 2019 -0700

    btrfs: use correct count in btrfs_file_write_iter()
    
    [ Upstream commit c09767a8960ca0500fb636bf73686723337debf4 ]
    
    generic_write_checks() may modify iov_iter_count(), so we must get the
    count after the call, not before. Using the wrong one has a couple of
    consequences:
    
    1. We check a longer range in check_can_nocow() for nowait than we're
       actually writing.
    2. We create extra hole extent maps in btrfs_cont_expand(). As far as I
       can tell, this is harmless, but I might be missing something.
    
    These issues are pretty minor, but let's fix it before something more
    important trips on it.
    
    Fixes: edf064e7c6fe ("btrfs: nowait aio support")
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 510cd98350463b841fdc01065eac4cec180ba9d5
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Jul 4 16:24:44 2019 +0100

    Btrfs: fix inode cache waiters hanging on path allocation failure
    
    [ Upstream commit 9d123a35d7e97bb2139747b16127c9b22b6a593e ]
    
    If the caching thread fails to allocate a path, it returns without waking
    up any cache waiters, leaving them hang forever. Fix this by following the
    same approach as when we fail to start the caching thread: print an error
    message, disable inode caching and make the wakers fallback to non-caching
    mode behaviour (calling btrfs_find_free_objectid()).
    
    Fixes: 581bb050941b4f ("Btrfs: Cache free inode numbers in memory")
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2162f5aae4a7feb883739ca92054715f8151bd7a
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Jul 4 16:24:32 2019 +0100

    Btrfs: fix inode cache waiters hanging on failure to start caching thread
    
    [ Upstream commit a68ebe0790fc88b4314d17984a2cf99ce2361901 ]
    
    If we fail to start the inode caching thread, we print an error message
    and disable the inode cache, however we never wake up any waiters, so they
    hang forever waiting for the caching to finish. Fix this by waking them
    up and have them fallback to a call to btrfs_find_free_objectid().
    
    Fixes: e60efa84252c05 ("Btrfs: avoid triggering bug_on() when we fail to start inode caching task")
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d479ec44e1c4257e69b400bf9ba429105d9e7aa
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Jul 4 16:24:09 2019 +0100

    Btrfs: fix hang when loading existing inode cache off disk
    
    [ Upstream commit 7764d56baa844d7f6206394f21a0e8c1f303c476 ]
    
    If we are able to load an existing inode cache off disk, we set the state
    of the cache to BTRFS_CACHE_FINISHED, but we don't wake up any one waiting
    for the cache to be available. This means that anyone waiting for the
    cache to be available, waiting on the condition that either its state is
    BTRFS_CACHE_FINISHED or its available free space is greather than zero,
    can hang forever.
    
    This could be observed running fstests with MOUNT_OPTIONS="-o inode_cache",
    in particular test case generic/161 triggered it very frequently for me,
    producing a trace like the following:
    
      [63795.739712] BTRFS info (device sdc): enabling inode map caching
      [63795.739714] BTRFS info (device sdc): disk space caching is enabled
      [63795.739716] BTRFS info (device sdc): has skinny extents
      [64036.653886] INFO: task btrfs-transacti:3917 blocked for more than 120 seconds.
      [64036.654079]       Not tainted 5.2.0-rc4-btrfs-next-50 #1
      [64036.654143] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      [64036.654232] btrfs-transacti D    0  3917      2 0x80004000
      [64036.654239] Call Trace:
      [64036.654258]  ? __schedule+0x3ae/0x7b0
      [64036.654271]  schedule+0x3a/0xb0
      [64036.654325]  btrfs_commit_transaction+0x978/0xae0 [btrfs]
      [64036.654339]  ? remove_wait_queue+0x60/0x60
      [64036.654395]  transaction_kthread+0x146/0x180 [btrfs]
      [64036.654450]  ? btrfs_cleanup_transaction+0x620/0x620 [btrfs]
      [64036.654456]  kthread+0x103/0x140
      [64036.654464]  ? kthread_create_worker_on_cpu+0x70/0x70
      [64036.654476]  ret_from_fork+0x3a/0x50
      [64036.654504] INFO: task xfs_io:3919 blocked for more than 120 seconds.
      [64036.654568]       Not tainted 5.2.0-rc4-btrfs-next-50 #1
      [64036.654617] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      [64036.654685] xfs_io          D    0  3919   3633 0x00000000
      [64036.654691] Call Trace:
      [64036.654703]  ? __schedule+0x3ae/0x7b0
      [64036.654716]  schedule+0x3a/0xb0
      [64036.654756]  btrfs_find_free_ino+0xa9/0x120 [btrfs]
      [64036.654764]  ? remove_wait_queue+0x60/0x60
      [64036.654809]  btrfs_create+0x72/0x1f0 [btrfs]
      [64036.654822]  lookup_open+0x6bc/0x790
      [64036.654849]  path_openat+0x3bc/0xc00
      [64036.654854]  ? __lock_acquire+0x331/0x1cb0
      [64036.654869]  do_filp_open+0x99/0x110
      [64036.654884]  ? __alloc_fd+0xee/0x200
      [64036.654895]  ? do_raw_spin_unlock+0x49/0xc0
      [64036.654909]  ? do_sys_open+0x132/0x220
      [64036.654913]  do_sys_open+0x132/0x220
      [64036.654926]  do_syscall_64+0x60/0x1d0
      [64036.654933]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fix this by adding a wake_up() call right after setting the cache state to
    BTRFS_CACHE_FINISHED, at start_caching(), when we are able to load the
    cache from disk.
    
    Fixes: 82d5902d9c681b ("Btrfs: Support reading/writing on disk free ino cache")
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit caa4dd3ae27bc135274c39ea5de64e521875e848
Author: Govindarajulu Varadarajan <gvaradar@cisco.com>
Date:   Tue Aug 27 14:13:40 2019 -0700

    scsi: fnic: fix msix interrupt allocation
    
    [ Upstream commit 3ec24fb4c035e9cbb2f02a48640a09aa913442a2 ]
    
    pci_alloc_irq_vectors() returns number of vectors allocated.  Fix the check
    for error condition.
    
    Fixes: cca678dfbad49 ("scsi: fnic: switch to pci_alloc_irq_vectors")
    Link: https://lore.kernel.org/r/20190827211340.1095-1-gvaradar@cisco.com
    Signed-off-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Acked-by: Satish Kharat <satishkh@cisco.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b71eb46f20c8d6f235d71ca21db58c4ed5cf503
Author: Mao Wenan <maowenan@huawei.com>
Date:   Thu Sep 5 09:57:12 2019 +0800

    net: sonic: return NETDEV_TX_OK if failed to map buffer
    
    [ Upstream commit 6e1cdedcf0362fed3aedfe051d46bd7ee2a85fe1 ]
    
    NETDEV_TX_BUSY really should only be used by drivers that call
    netif_tx_stop_queue() at the wrong moment. If dma_map_single() is
    failed to map tx DMA buffer, it might trigger an infinite loop.
    This patch use NETDEV_TX_OK instead of NETDEV_TX_BUSY, and change
    printk to pr_err_ratelimited.
    
    Fixes: d9fb9f384292 ("*sonic/natsemi/ns83829: Move the National Semi-conductor drivers")
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36803fe500521550b631de05717d5ce22a5a62a2
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Mon Jul 29 12:52:15 2019 -0700

    tty: serial: fsl_lpuart: Use appropriate lpuart32_* I/O funcs
    
    [ Upstream commit 1da17d7cf8e2c4b60163d54300f72c02f510327c ]
    
    When dealing with 32-bit variant of LPUART IP block appropriate I/O
    helpers have to be used to properly deal with endianness
    differences. Change all of the offending code to do that.
    
    Fixes: a5fa2660d787 ("tty/serial/fsl_lpuart: Add CONSOLE_POLL support
    for lpuart32.")
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Cc: Stefan Agner <stefan@agner.ch>
    Cc: Bhuvanchandra DV <bhuvanchandra.dv@toradex.com>
    Cc: Chris Healy <cphealy@gmail.com>
    Cc: Cory Tusar <cory.tusar@zii.aero>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jslaby@suse.com>
    Cc: linux-imx@nxp.com
    Cc: linux-serial@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Link: https://lore.kernel.org/r/20190729195226.8862-14-andrew.smirnov@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 763ce5f99060cd589174f3394a83343c8e21f87b
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Aug 19 09:41:39 2019 +0200

    ath9k: dynack: fix possible deadlock in ath_dynack_node_{de}init
    
    [ Upstream commit e1aa1a1db3b01c9890e82cf065cee99962ba1ed9 ]
    
    Fix following lockdep warning disabling bh in
    ath_dynack_node_init/ath_dynack_node_deinit
    
    [   75.955878] --------------------------------
    [   75.955880] inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
    [   75.955884] swapper/0/0 [HC0[0]:SC1[3]:HE1:SE0] takes:
    [   75.955888] 00000000792a7ee0 (&(&da->qlock)->rlock){+.?.}, at: ath_dynack_sample_ack_ts+0x4d/0xa0 [ath9k_hw]
    [   75.955905] {SOFTIRQ-ON-W} state was registered at:
    [   75.955912]   lock_acquire+0x9a/0x160
    [   75.955917]   _raw_spin_lock+0x2c/0x70
    [   75.955927]   ath_dynack_node_init+0x2a/0x60 [ath9k_hw]
    [   75.955934]   ath9k_sta_state+0xec/0x160 [ath9k]
    [   75.955976]   drv_sta_state+0xb2/0x740 [mac80211]
    [   75.956008]   sta_info_insert_finish+0x21a/0x420 [mac80211]
    [   75.956039]   sta_info_insert_rcu+0x12b/0x2c0 [mac80211]
    [   75.956069]   sta_info_insert+0x7/0x70 [mac80211]
    [   75.956093]   ieee80211_prep_connection+0x42e/0x730 [mac80211]
    [   75.956120]   ieee80211_mgd_auth.cold+0xb9/0x15c [mac80211]
    [   75.956152]   cfg80211_mlme_auth+0x143/0x350 [cfg80211]
    [   75.956169]   nl80211_authenticate+0x25e/0x2b0 [cfg80211]
    [   75.956172]   genl_family_rcv_msg+0x198/0x400
    [   75.956174]   genl_rcv_msg+0x42/0x90
    [   75.956176]   netlink_rcv_skb+0x35/0xf0
    [   75.956178]   genl_rcv+0x1f/0x30
    [   75.956180]   netlink_unicast+0x154/0x200
    [   75.956182]   netlink_sendmsg+0x1bf/0x3d0
    [   75.956186]   ___sys_sendmsg+0x2c2/0x2f0
    [   75.956187]   __sys_sendmsg+0x44/0x80
    [   75.956190]   do_syscall_64+0x55/0x1a0
    [   75.956192]   entry_SYSCALL_64_after_hwframe+0x49/0xbe
    [   75.956194] irq event stamp: 2357092
    [   75.956196] hardirqs last  enabled at (2357092): [<ffffffff818c62de>] _raw_spin_unlock_irqrestore+0x3e/0x50
    [   75.956199] hardirqs last disabled at (2357091): [<ffffffff818c60b1>] _raw_spin_lock_irqsave+0x11/0x80
    [   75.956202] softirqs last  enabled at (2357072): [<ffffffff8106dc09>] irq_enter+0x59/0x60
    [   75.956204] softirqs last disabled at (2357073): [<ffffffff8106dcbe>] irq_exit+0xae/0xc0
    [   75.956206]
                   other info that might help us debug this:
    [   75.956207]  Possible unsafe locking scenario:
    
    [   75.956208]        CPU0
    [   75.956209]        ----
    [   75.956210]   lock(&(&da->qlock)->rlock);
    [   75.956213]   <Interrupt>
    [   75.956214]     lock(&(&da->qlock)->rlock);
    [   75.956216]
                    *** DEADLOCK ***
    
    [   75.956217] 1 lock held by swapper/0/0:
    [   75.956219]  #0: 000000003bb5675c (&(&sc->sc_pcu_lock)->rlock){+.-.}, at: ath9k_tasklet+0x55/0x240 [ath9k]
    [   75.956225]
                   stack backtrace:
    [   75.956228] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.3.0-rc1-wdn+ #13
    [   75.956229] Hardware name: Dell Inc. Studio XPS 1340/0K183D, BIOS A11 09/08/2009
    [   75.956231] Call Trace:
    [   75.956233]  <IRQ>
    [   75.956236]  dump_stack+0x67/0x90
    [   75.956239]  mark_lock+0x4c1/0x640
    [   75.956242]  ? check_usage_backwards+0x130/0x130
    [   75.956245]  ? sched_clock_local+0x12/0x80
    [   75.956247]  __lock_acquire+0x484/0x7a0
    [   75.956250]  ? __lock_acquire+0x3b9/0x7a0
    [   75.956252]  lock_acquire+0x9a/0x160
    [   75.956259]  ? ath_dynack_sample_ack_ts+0x4d/0xa0 [ath9k_hw]
    [   75.956262]  _raw_spin_lock_bh+0x34/0x80
    [   75.956268]  ? ath_dynack_sample_ack_ts+0x4d/0xa0 [ath9k_hw]
    [   75.956275]  ath_dynack_sample_ack_ts+0x4d/0xa0 [ath9k_hw]
    [   75.956280]  ath_rx_tasklet+0xd09/0xe90 [ath9k]
    [   75.956286]  ath9k_tasklet+0x102/0x240 [ath9k]
    [   75.956288]  tasklet_action_common.isra.0+0x6d/0x170
    [   75.956291]  __do_softirq+0xcc/0x425
    [   75.956294]  irq_exit+0xae/0xc0
    [   75.956296]  do_IRQ+0x8a/0x110
    [   75.956298]  common_interrupt+0xf/0xf
    [   75.956300]  </IRQ>
    [   75.956303] RIP: 0010:cpuidle_enter_state+0xb2/0x400
    [   75.956308] RSP: 0018:ffffffff82203e70 EFLAGS: 00000202 ORIG_RAX: ffffffffffffffd7
    [   75.956310] RAX: ffffffff82219800 RBX: ffffffff822bd0a0 RCX: 0000000000000000
    [   75.956312] RDX: 0000000000000046 RSI: 0000000000000006 RDI: ffffffff82219800
    [   75.956314] RBP: ffff888155a01c00 R08: 00000011af51aabe R09: 0000000000000000
    [   75.956315] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000002
    [   75.956317] R13: 00000011af51aabe R14: 0000000000000003 R15: ffffffff82219800
    [   75.956321]  cpuidle_enter+0x24/0x40
    [   75.956323]  do_idle+0x1ac/0x220
    [   75.956326]  cpu_startup_entry+0x14/0x20
    [   75.956329]  start_kernel+0x482/0x489
    [   75.956332]  secondary_startup_64+0xa4/0xb0
    
    Fixes: c774d57fd47c ("ath9k: add dynamic ACK timeout estimation")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Tested-by: Koen Vandeputte <koen.vandeputte@ncentric.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0d6177fda727f29889ad9bab6b9bb7e867d8fed
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Aug 15 12:58:46 2019 +0100

    iio: dac: ad5380: fix incorrect assignment to val
    
    [ Upstream commit b1e18768ef1214c0a8048327918a182cabe09f9d ]
    
    Currently the pointer val is being incorrectly incremented
    instead of the value pointed to by val. Fix this by adding
    in the missing * indirection operator.
    
    Addresses-Coverity: ("Unused value")
    Fixes: c03f2c536818 ("staging:iio:dac: Add AD5380 driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 950f6f8492deeb68cfe71799b5e1531e35c19463
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Aug 27 09:16:20 2019 +0100

    bcma: fix incorrect update of BCMA_CORE_PCI_MDIO_DATA
    
    [ Upstream commit 420c20be08a4597404d272ae9793b642401146eb ]
    
    An earlier commit re-worked the setting of the bitmask and is now
    assigning v with some bit flags rather than bitwise or-ing them
    into v, consequently the earlier bit-settings of v are being lost.
    Fix this by replacing an assignment with the bitwise or instead.
    
    Addresses-Coverity: ("Unused value")
    Fixes: 2be25cac8402 ("bcma: add constants for PCI and use them")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a3d966299aa7009cad9230107b4b0a2188c84e0
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Sep 2 23:14:56 2019 +0000

    irqdomain: Add the missing assignment of domain->fwnode for named fwnode
    
    [ Upstream commit 711419e504ebd68c8f03656616829c8ad7829389 ]
    
    Recently device pass-through stops working for Linux VM running on Hyper-V.
    
    git-bisect shows the regression is caused by the recent commit
    467a3bb97432 ("PCI: hv: Allocate a named fwnode ..."), but the root cause
    is that the commit d59f6617eef0 forgets to set the domain->fwnode for
    IRQCHIP_FWNODE_NAMED*, and as a result:
    
    1. The domain->fwnode remains to be NULL.
    
    2. irq_find_matching_fwspec() returns NULL since "h->fwnode == fwnode" is
    false, and pci_set_bus_msi_domain() sets the Hyper-V PCI root bus's
    msi_domain to NULL.
    
    3. When the device is added onto the root bus, the device's dev->msi_domain
    is set to NULL in pci_set_msi_domain().
    
    4. When a device driver tries to enable MSI-X, pci_msi_setup_msi_irqs()
    calls arch_setup_msi_irqs(), which uses the native MSI chip (i.e.
    arch/x86/kernel/apic/msi.c: pci_msi_controller) to set up the irqs, but
    actually pci_msi_setup_msi_irqs() is supposed to call
    msi_domain_alloc_irqs() with the hbus->irq_domain, which is created in
    hv_pcie_init_irq_domain() and is associated with the Hyper-V chip
    hv_msi_irq_chip. Consequently, the irq line is not properly set up, and
    the device driver can not receive any interrupt.
    
    Fixes: d59f6617eef0 ("genirq: Allow fwnode to carry name information only")
    Fixes: 467a3bb97432 ("PCI: hv: Allocate a named fwnode instead of an address-based one")
    Reported-by: Lili Deng <v-lide@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/PU1P153MB01694D9AF625AC335C600C5FBFBE0@PU1P153MB0169.APCP153.PROD.OUTLOOK.COM
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6cda623b5b86879d05fae8eb0e2b562a27dc3ce
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 29 15:28:39 2019 +0300

    staging: greybus: light: fix a couple double frees
    
    [ Upstream commit 329101244f214952606359d254ae883b7109e1a5 ]
    
    The problem is in gb_lights_request_handler().  If we get a request to
    change the config then we release the light with gb_lights_light_release()
    and re-allocated it.  However, if the allocation fails part way through
    then we call gb_lights_light_release() again.  This can lead to a couple
    different double frees where we haven't cleared out the original values:
    
            gb_lights_light_v4l2_unregister(light);
            ...
            kfree(light->channels);
            kfree(light->name);
    
    I also made a small change to how we set "light->channels_count = 0;".
    The original code handled this part fine and did not cause a use after
    free but it was sort of complicated to read.
    
    Fixes: 2870b52bae4c ("greybus: lights: add lights implementation")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Link: https://lore.kernel.org/r/20190829122839.GA20116@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 236a45c27006a0c73f763240531a19a5fd6a5255
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sun Sep 1 12:03:08 2019 +0900

    x86, perf: Fix the dependency of the x86 insn decoder selftest
    
    [ Upstream commit 7720804a2ae46c90265a32c81c45fb6f8d2f4e8b ]
    
    Since x86 instruction decoder is not only for kprobes,
    it should be tested when the insn.c is compiled.
    (e.g. perf is enabled but kprobes is disabled)
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: cbe5c34c8c1f ("x86: Compile insn.c and inat.c only for KPROBES")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d9754bd7419b466b47723781dd98b3a4c56fbe1
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Thu Aug 1 14:33:30 2019 -0700

    power: supply: Init device wakeup after device_add()
    
    [ Upstream commit 8288022284859acbcc3cf1a073a1e2692d6c2543 ]
    
    We may want to use the device pointer in device_init_wakeup() with
    functions that expect the device to already be added with device_add().
    For example, if we were to link the device initializing wakeup to
    something in sysfs such as a class for wakeups we'll run into an error.
    It looks like this code was written with the assumption that the device
    would be added before initializing wakeup due to the order of operations
    in power_supply_unregister().
    
    Let's change the order of operations so we don't run into problems here.
    
    Fixes: 948dcf966228 ("power_supply: Prevent suspend until power supply events are processed")
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Tri Vo <trong@android.com>
    Cc: Kalesh Singh <kaleshsingh@google.com>
    Cc: Ravi Chandra Sadineni <ravisadineni@chromium.org>
    Cc: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cf42a20d95d975fb46841413ecb6670fe791e3d
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu Aug 8 12:00:18 2019 -0700

    hwmon: (lm75) Fix write operations for negative temperatures
    
    [ Upstream commit 7d82fcc9d9e81241778aaa22fda7be753e237d86 ]
    
    Writes into limit registers fail if the temperature written is negative.
    The regmap write operation checks the value range, regmap_write accepts
    an unsigned int as parameter, and the temperature value passed to
    regmap_write is kept in a variable declared as long. Negative values
    are converted large unsigned integers, which fails the range check.
    Fix by type casting the temperature to u16 when calling regmap_write().
    
    Cc: Iker Perez del Palomar Sustatxa <iker.perez@codethink.co.uk>
    Fixes: e65365fed87f ("hwmon: (lm75) Convert to use regmap")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abb78b8d946459494af91302e6da94a9f3f9dab2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Aug 30 18:47:15 2019 -0700

    Partially revert "kfifo: fix kfifo_alloc() and kfifo_init()"
    
    [ Upstream commit ab9bb6318b0967671e0c9b6537c1537d51ca4f45 ]
    
    Commit dfe2a77fd243 ("kfifo: fix kfifo_alloc() and kfifo_init()") made
    the kfifo code round the number of elements up.  That was good for
    __kfifo_alloc(), but it's actually wrong for __kfifo_init().
    
    The difference? __kfifo_alloc() will allocate the rounded-up number of
    elements, but __kfifo_init() uses an allocation done by the caller.  We
    can't just say "use more elements than the caller allocated", and have
    to round down.
    
    The good news? All the normal cases will be using power-of-two arrays
    anyway, and most users of kfifo's don't use kfifo_init() at all, but one
    of the helper macros to declare a KFIFO that enforce the proper
    power-of-two behavior.  But it looks like at least ibmvscsis might be
    affected.
    
    The bad news? Will Deacon refers to an old thread and points points out
    that the memory ordering in kfifo's is questionable.  See
    
      https://lore.kernel.org/lkml/20181211034032.32338-1-yuleixzhang@tencent.com/
    
    for more.
    
    Fixes: dfe2a77fd243 ("kfifo: fix kfifo_alloc() and kfifo_init()")
    Reported-by: laokz <laokz@foxmail.com>
    Cc: Stefani Seibold <stefani@seibold.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Greg KH <greg@kroah.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Will Deacon <will@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e37950799ad018334e321c6fcbccdfbc1a909c85
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Aug 30 22:42:55 2019 +0300

    ahci: Do not export local variable ahci_em_messages
    
    [ Upstream commit 60fc35f327e0a9e60b955c0f3c3ed623608d1baa ]
    
    The commit ed08d40cdec4
      ("ahci: Changing two module params with static and __read_mostly")
    moved ahci_em_messages to be static while missing the fact of exporting it.
    
    WARNING: "ahci_em_messages" [vmlinux] is a static EXPORT_SYMBOL_GPL
    
    Drop export for the local variable ahci_em_messages.
    
    Fixes: ed08d40cdec4 ("ahci: Changing two module params with static and __read_mostly")
    Cc: Chuansheng Liu <chuansheng.liu@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91f098c085ceb891302fa9707d3da94be6a88524
Author: Yong Wu <yong.wu@mediatek.com>
Date:   Sat Aug 24 11:01:50 2019 +0800

    iommu/mediatek: Fix iova_to_phys PA start for 4GB mode
    
    [ Upstream commit 76ce65464fcd2c21db84391572b7938b716aceb0 ]
    
    In M4U 4GB mode, the physical address is remapped as below:
    
    CPU Physical address:
    
    ====================
    
    0      1G       2G     3G       4G     5G
    |---A---|---B---|---C---|---D---|---E---|
    +--I/O--+------------Memory-------------+
    
    IOMMU output physical address:
     =============================
    
                                    4G      5G     6G      7G      8G
                                    |---E---|---B---|---C---|---D---|
                                    +------------Memory-------------+
    
    The Region 'A'(I/O) can not be mapped by M4U; For Region 'B'/'C'/'D', the
    bit32 of the CPU physical address always is needed to set, and for Region
    'E', the CPU physical address keep as is. something looks like this:
    CPU PA         ->    M4U OUTPUT PA
    0x4000_0000          0x1_4000_0000 (Add bit32)
    0x8000_0000          0x1_8000_0000 ...
    0xc000_0000          0x1_c000_0000 ...
    0x1_0000_0000        0x1_0000_0000 (No change)
    
    Additionally, the iommu consumers always use the CPU phyiscal address.
    
    The PA in the iova_to_phys that is got from v7s always is u32, But
    from the CPU point of view, PA only need add BIT(32) when PA < 0x4000_0000.
    
    Fixes: 30e2fccf9512 ("iommu/mediatek: Enlarge the validate PA range
    for 4GB mode")
    Signed-off-by: Yong Wu <yong.wu@mediatek.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0972c51f346f0be5581620d61afdea6857c08503
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Mon Jul 29 14:10:12 2019 -0700

    mips: avoid explicit UB in assignment of mips_io_port_base
    
    [ Upstream commit 12051b318bc3ce5b42d6d786191008284b067d83 ]
    
    The code in question is modifying a variable declared const through
    pointer manipulation.  Such code is explicitly undefined behavior, and
    is the lone issue preventing malta_defconfig from booting when built
    with Clang:
    
    If an attempt is made to modify an object defined with a const-qualified
    type through use of an lvalue with non-const-qualified type, the
    behavior is undefined.
    
    LLVM is removing such assignments. A simple fix is to not declare
    variables const that you plan on modifying.  Limiting the scope would be
    a better method of preventing unwanted writes to such a variable.
    
    Further, the code in question mentions "compiler bugs" without any links
    to bug reports, so it is difficult to know if the issue is resolved in
    GCC. The patch was authored in 2006, which would have been GCC 4.0.3 or
    4.1.1. The minimal supported version of GCC in the Linux kernel is
    currently 4.6.
    
    For what its worth, there was UB before the commit in question, it just
    added a barrier and got lucky IRT codegen. I don't think there's any
    actual compiler bugs related, just runtime bugs due to UB.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/610
    Fixes: 966f4406d903 ("[MIPS] Work around bad code generation for <asm/io.h>.")
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Debugged-by: Nathan Chancellor <natechancellor@gmail.com>
    Suggested-by: Eli Friedman <efriedma@quicinc.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: ralf@linux-mips.org
    Cc: jhogan@kernel.org
    Cc: Maciej W. Rozycki <macro@linux-mips.org>
    Cc: Hassan Naveed <hnaveed@wavecomp.com>
    Cc: Stephen Kitt <steve@sk2.org>
    Cc: Serge Semin <fancer.lancer@gmail.com>
    Cc: Mike Rapoport <rppt@linux.ibm.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: clang-built-linux@googlegroups.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6698015a135887a55621e35f65f6b4a448f19e1f
Author: Bruno Thomsen <bruno.thomsen@gmail.com>
Date:   Thu Aug 22 15:19:34 2019 +0200

    rtc: pcf2127: bugfix: read rtc disables watchdog
    
    [ Upstream commit 7f43020e3bdb63d65661ed377682702f8b34d3ea ]
    
    The previous fix listed bulk read of registers as root cause of
    accendential disabling of watchdog, since the watchdog counter
    register (WD_VAL) was zeroed.
    
    Fixes: 3769a375ab83 rtc: pcf2127: bulk read only date and time registers.
    
    Tested with the same PCF2127 chip as Sean reveled root cause
    of WD_VAL register value zeroing was caused by reading CTRL2
    register which is one of the watchdog feature control registers.
    
    So the solution is to not read the first two control registers
    (CTRL1 and CTRL2) in pcf2127_rtc_read_time as they are not
    needed anyway. Size of local buf variable is kept to allow
    easy usage of register defines to improve readability of code.
    
    Debug trace line was updated after CTRL1 and CTRL2 are no longer
    read from the chip. Also replaced magic numbers in buf access
    with register defines.
    
    Signed-off-by: Bruno Thomsen <bruno.thomsen@gmail.com>
    Link: https://lore.kernel.org/r/20190822131936.18772-3-bruno.thomsen@gmail.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cd97e29c3dd3ef05c92dbae84bb45bceb9ea14b
Author: Alexandre Kroupski <alexandre.kroupski@ingenico.com>
Date:   Tue Aug 20 08:37:45 2019 -0300

    media: atmel: atmel-isi: fix timeout value for stop streaming
    
    [ Upstream commit 623fd246bb40234fe68dd4e7c1f1f081f9c45a3d ]
    
    In case of sensor malfunction, stop streaming timeout takes much longer
    than expected. This is due to conversion of time to jiffies: milliseconds
    multiplied with HZ (ticks/second) gives out a value of jiffies with 10^3
    greater. We need to also divide by 10^3 to obtain the right jiffies value.
    In other words FRAME_INTERVAL_MILLI_SEC must be in seconds in order to
    multiply by HZ and get the right jiffies value to add to the current
    jiffies for the timeout expire time.
    
    Fixes: 195ebc43bf76 ("[media] V4L: at91: add Atmel Image Sensor Interface (ISI) support")
    Signed-off-by: Alexandre Kroupski <alexandre.kroupski@ingenico.com>
    Reviewed-by: Eugen Hristev <eugen.hristev@microchip.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9878718005a17512f6fcdcbfc64a2a3837e07bc7
Author: Felix Fietkau <nbd@nbd.name>
Date:   Tue Aug 20 11:54:46 2019 +0200

    mac80211: minstrel_ht: fix per-group max throughput rate initialization
    
    [ Upstream commit 56dd918ff06e3ee24d8067e93ed12b2a39e71394 ]
    
    The group number needs to be multiplied by the number of rates per group
    to get the full rate index
    
    Fixes: 5935839ad735 ("mac80211: improve minstrel_ht rate sorting by throughput & probability")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Link: https://lore.kernel.org/r/20190820095449.45255-1-nbd@nbd.name
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b394b564c08798124b9b41b50019d1cf6ec9714
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Aug 20 16:15:43 2019 +0300

    dmaengine: dw: platform: Switch to acpi_dma_controller_register()
    
    [ Upstream commit e7b8514e4d68bec21fc6385fa0a66797ddc34ac9 ]
    
    There is a possibility to have registered ACPI DMA controller
    while it has been gone already.
    
    To avoid the potential crash, move to non-managed
    acpi_dma_controller_register().
    
    Fixes: 42c91ee71d6d ("dw_dmac: add ACPI support")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20190820131546.75744-8-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e62abd5b37521c7020d8650dcb753cc32a82df69
Author: Maxime Ripard <mripard@kernel.org>
Date:   Mon Aug 19 21:25:17 2019 +0200

    ASoC: sun4i-i2s: RX and TX counter registers are swapped
    
    [ Upstream commit cf2c0e1ce9544df42170fb921f12da82dc0cc8d6 ]
    
    The RX and TX counters registers offset have been swapped, fix that.
    
    Fixes: fa7c0d13cb26 ("ASoC: sunxi: Add Allwinner A10 Digital Audio driver")
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Link: https://lore.kernel.org/r/8b26477560ad5fd8f69e037b167c5e61de5c26a3.1566242458.git-series.maxime.ripard@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cde0dc52e7d462332bdcf7dc22ab6ccc865b4b52
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Fri Aug 16 12:33:54 2019 -0500

    signal: Allow cifs and drbd to receive their terminating signals
    
    [ Upstream commit 33da8e7c814f77310250bb54a9db36a44c5de784 ]
    
    My recent to change to only use force_sig for a synchronous events
    wound up breaking signal reception cifs and drbd.  I had overlooked
    the fact that by default kthreads start out with all signals set to
    SIG_IGN.  So a change I thought was safe turned out to have made it
    impossible for those kernel thread to catch their signals.
    
    Reverting the work on force_sig is a bad idea because what the code
    was doing was very much a misuse of force_sig.  As the way force_sig
    ultimately allowed the signal to happen was to change the signal
    handler to SIG_DFL.  Which after the first signal will allow userspace
    to send signals to these kernel threads.  At least for
    wake_ack_receiver in drbd that does not appear actively wrong.
    
    So correct this problem by adding allow_kernel_signal that will allow
    signals whose siginfo reports they were sent by the kernel through,
    but will not allow userspace generated signals, and update cifs and
    drbd to call allow_kernel_signal in an appropriate place so that their
    thread can receive this signal.
    
    Fixing things this way ensures that userspace won't be able to send
    signals and cause problems, that it is clear which signals the
    threads are expecting to receive, and it guarantees that nothing
    else in the system will be affected.
    
    This change was partly inspired by similar cifs and drbd patches that
    added allow_signal.
    
    Reported-by: ronnie sahlberg <ronniesahlberg@gmail.com>
    Reported-by: Christoph Böhmwalder <christoph.boehmwalder@linbit.com>
    Tested-by: Christoph Böhmwalder <christoph.boehmwalder@linbit.com>
    Cc: Steve French <smfrench@gmail.com>
    Cc: Philipp Reisner <philipp.reisner@linbit.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Fixes: 247bc9470b1e ("cifs: fix rmmod regression in cifs.ko caused by force_sig changes")
    Fixes: 72abe3bcf091 ("signal/cifs: Fix cifs_put_tcp_session to call send_sig instead of force_sig")
    Fixes: fee109901f39 ("signal/drbd: Use send_sig not force_sig")
    Fixes: 3cf5d076fb4d ("signal: Remove task parameter from force_sig")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c5e0766089dceeeff6dde7dec7bb9e25d064a9c
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Sat Aug 17 17:04:49 2019 -0400

    bnxt_en: Fix handling FRAG_ERR when NVM_INSTALL_UPDATE cmd fails
    
    [ Upstream commit dd2ebf3404c7c295014bc025dea23960960ceb1a ]
    
    If FW returns FRAG_ERR in response error code, driver is resending the
    command only when HWRM command returns success. Fix the code to resend
    NVM_INSTALL_UPDATE command with DEFRAG install flags, if FW returns
    FRAG_ERR in its response error code.
    
    Fixes: cb4d1d626145 ("bnxt_en: Retry failed NVM_INSTALL_UPDATE with defragmentation flag enabled.")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 060fc2173afad7e1f13c9b47b3a2d43e2d2afe6c
Author: Gerd Rausch <gerd.rausch@oracle.com>
Date:   Thu Jul 11 12:15:50 2019 -0700

    net/rds: Add a few missing rds_stat_names entries
    
    [ Upstream commit 55c70ca00c982fbc0df4c4d3e31747fb73f4ddb5 ]
    
    In a previous commit, fields were added to "struct rds_statistics"
    but array "rds_stat_names" was not updated accordingly.
    
    Please note the inconsistent naming of the string representations
    that is done in the name of compatibility
    with the Oracle internal code-base.
    
    s_recv_bytes_added_to_socket     -> "recv_bytes_added_to_sock"
    s_recv_bytes_removed_from_socket -> "recv_bytes_freed_fromsock"
    
    Fixes: 192a798f5299 ("RDS: add stat for socket recv memory usage")
    Signed-off-by: Gerd Rausch <gerd.rausch@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b569bda1c5c0b3edfaabf155ec5a239676f86b79
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Aug 15 17:19:20 2019 +0800

    ASoC: wm8737: Fix copy-paste error in wm8737_snd_controls
    
    [ Upstream commit 554b75bde64bcad9662530726d1483f7ef012069 ]
    
    sound/soc/codecs/wm8737.c:112:29: warning:
     high_3d defined but not used [-Wunused-const-variable=]
    
    'high_3d' should be used for 3D High Cut-off.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 2a9ae13a2641 ("ASoC: Add initial WM8737 driver")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20190815091920.64480-1-yuehaibing@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41c4947ed34f7d9e2ad460c84bd677f178e6f13c
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Aug 15 17:01:57 2019 +0800

    ASoC: cs4349: Use PM ops 'cs4349_runtime_pm'
    
    [ Upstream commit 9b4275c415acca6264a3d7f1182589959c93d530 ]
    
    sound/soc/codecs/cs4349.c:358:32: warning:
     cs4349_runtime_pm defined but not used [-Wunused-const-variable=]
    
    cs4349_runtime_pm ops already defined, it seems
    we should enable it.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: e40da86 ("ASoC: cs4349: Add support for Cirrus Logic CS4349")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20190815090157.70036-1-yuehaibing@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02a996446ae1b0f09ed9d006578e0ca33196f2c7
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Aug 15 17:23:00 2019 +0800

    ASoC: es8328: Fix copy-paste error in es8328_right_line_controls
    
    [ Upstream commit 630742c296341a8cfe00dfd941392025ba8dd4e8 ]
    
    It seems 'es8328_rline_enum' should be used
    in es8328_right_line_controls
    
    Fixes: 567e4f98922c ("ASoC: add es8328 codec driver")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20190815092300.68712-1-yuehaibing@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25f9e3e502a92782b5f9f270ba15b25490f65a77
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Aug 12 14:29:38 2019 -0400

    ext4: set error return correctly when ext4_htree_store_dirent fails
    
    [ Upstream commit 7a14826ede1d714f0bb56de8167c0e519041eeda ]
    
    Currently when the call to ext4_htree_store_dirent fails the error return
    variable 'ret' is is not being set to the error code and variable count is
    instead, hence the error code is not being returned.  Fix this by assigning
    ret to the error return code.
    
    Addresses-Coverity: ("Unused value")
    Fixes: 8af0f0822797 ("ext4: fix readdir error in the case of inline_data+dir_index")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ea904f9954ee9072114a8d52c951b13bb8ed7bd
Author: Iuliana Prodan <iuliana.prodan@nxp.com>
Date:   Wed Jul 31 16:08:12 2019 +0300

    crypto: caam - free resources in case caam_rng registration failed
    
    [ Upstream commit c59a1d41672a89b5cac49db1a472ff889e35a2d2 ]
    
    Check the return value of the hardware registration for caam_rng and free
    resources in case of failure.
    
    Fixes: e24f7c9e87d4 ("crypto: caam - hwrng support")
    Signed-off-by: Iuliana Prodan <iuliana.prodan@nxp.com>
    Reviewed-by: Horia Geanta <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f996f9ee615bebddcab67e4ebaeb5ce56956d256
Author: Steve French <stfrench@microsoft.com>
Date:   Tue Jul 23 22:14:29 2019 -0500

    cifs: fix rmmod regression in cifs.ko caused by force_sig changes
    
    [ Upstream commit 247bc9470b1eeefc7b58cdf2c39f2866ba651509 ]
    
    Fixes: 72abe3bcf091 ("signal/cifs: Fix cifs_put_tcp_session to call send_sig instead of force_sig")
    
    The global change from force_sig caused module unloading of cifs.ko
    to fail (since the cifsd process could not be killed, "rmmod cifs"
    now would always fail)
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed1929a76537c41b212adc93013e46dd3f7b46f9
Author: Mark Zhang <markz@mellanox.com>
Date:   Wed Jul 31 14:40:13 2019 +0300

    net/mlx5: Fix mlx5_ifc_query_lag_out_bits
    
    [ Upstream commit ea77388b02270b0af8dc57f668f311235ea068f0 ]
    
    Remove the "reserved_at_40" field to match the device specification.
    
    Fixes: 84df61ebc69b ("net/mlx5: Add HW interfaces used by LAG")
    Signed-off-by: Mark Zhang <markz@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9abc2bb43a47a30ea1ccbf8d27bc8d92604404bd
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Wed Jun 19 14:29:58 2019 +0200

    ARM: dts: stm32: add missing vdda-supply to adc on stm32h743i-eval
    
    [ Upstream commit 493e84c5dc4d703d976b5875f5db22dae08a0782 ]
    
    Add missing vdda-supply required by STM32 ADC.
    
    Fixes: 090992a9ca54 ("ARM: dts: stm32: enable ADC on stm32h743i-eval
    board")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 801dafc3218c23ba1ea39f409b962113604f64bc
Author: Jon Maloy <jon.maloy@ericsson.com>
Date:   Tue Jul 30 16:23:18 2019 +0200

    tipc: reduce risk of wakeup queue starvation
    
    [ Upstream commit 7c5b42055964f587e55bd87ef334c3a27e95d144 ]
    
    In commit 365ad353c256 ("tipc: reduce risk of user starvation during
    link congestion") we allowed senders to add exactly one list of extra
    buffers to the link backlog queues during link congestion (aka
    "oversubscription"). However, the criteria for when to stop adding
    wakeup messages to the input queue when the overload abates is
    inaccurate, and may cause starvation problems during very high load.
    
    Currently, we stop adding wakeup messages after 10 total failed attempts
    where we find that there is no space left in the backlog queue for a
    certain importance level. The counter for this is accumulated across all
    levels, which may lead the algorithm to leave the loop prematurely,
    although there may still be plenty of space available at some levels.
    The result is sometimes that messages near the wakeup queue tail are not
    added to the input queue as they should be.
    
    We now introduce a more exact algorithm, where we keep adding wakeup
    messages to a level as long as the backlog queue has free slots for
    the corresponding level, and stop at the moment there are no more such
    slots or when there are no more wakeup messages to dequeue.
    
    Fixes: 365ad35 ("tipc: reduce risk of user starvation during link congestion")
    Reported-by: Tung Nguyen <tung.q.nguyen@dektech.com.au>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 183eebd4efa7904e6d9e95b8e482f2969f743f66
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Mon Jul 29 09:14:22 2019 +0200

    ALSA: aoa: onyx: always initialize register read value
    
    [ Upstream commit f474808acb3c4b30552d9c59b181244e0300d218 ]
    
    A lot of places in the driver use onyx_read_register() without
    checking the return value, and it's been working OK for ~10 years
    or so, so probably never fails ... Rather than trying to check the
    return value everywhere, which would be relatively intrusive, at
    least make sure we don't use an uninitialized value.
    
    Fixes: f3d9478b2ce4 ("[ALSA] snd-aoa: add snd-aoa")
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c877153dc53dc4abf4d85ce587735bb284fd7f28
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jul 12 10:59:24 2019 +0200

    crypto: ccp - Reduce maximum stack usage
    
    [ Upstream commit 72c8117adfced37df101c8c0b3f363e0906f83f0 ]
    
    Each of the operations in ccp_run_cmd() needs several hundred
    bytes of kernel stack. Depending on the inlining, these may
    need separate stack slots that add up to more than the warning
    limit, as shown in this clang based build:
    
    drivers/crypto/ccp/ccp-ops.c:871:12: error: stack frame size of 1164 bytes in function 'ccp_run_aes_cmd' [-Werror,-Wframe-larger-than=]
    static int ccp_run_aes_cmd(struct ccp_cmd_queue *cmd_q, struct ccp_cmd *cmd)
    
    The problem may also happen when there is no warning, e.g. in the
    ccp_run_cmd()->ccp_run_aes_cmd()->ccp_run_aes_gcm_cmd() call chain with
    over 2000 bytes.
    
    Mark each individual function as 'noinline_for_stack' to prevent
    this from happening, and move the calls to the two special cases for aes
    into the top-level function. This will keep the actual combined stack
    usage to the mimimum: 828 bytes for ccp_run_aes_gcm_cmd() and
    at most 524 bytes for each of the other cases.
    
    Fixes: 63b945091a07 ("crypto: ccp - CCP device driver and interface support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d3b98c7a9b6019ef93c3838db68f31f4d3c5f60
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Jul 22 20:47:06 2019 +0200

    x86/kgbd: Use NMI_VECTOR not APIC_DM_NMI
    
    [ Upstream commit 2591bc4e8d70b4e1330d327fb7e3921f4e070a51 ]
    
    apic->send_IPI_allbutself() takes a vector number as argument.
    
    APIC_DM_NMI is clearly not a vector number. It's defined to 0x400 which is
    outside the vector space.
    
    Use NMI_VECTOR instead as that's what it is intended to be.
    
    Fixes: 82da3ff89dc2 ("x86: kgdb support")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20190722105218.855189979@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8d45c212e5066ec20efca6dbe47f88096c33161
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jul 12 11:24:09 2019 +0200

    mic: avoid statically declaring a 'struct device'.
    
    [ Upstream commit bc83f79bd2119230888fb8574639d5a51b38f903 ]
    
    Generally, declaring a platform device as a static variable is
    a bad idea and can cause all kinds of problems, in particular
    with the DMA configuration and lifetime rules.
    
    A specific problem we hit here is from a bug in clang that warns
    about certain (otherwise valid) macros when used in static variables:
    
    drivers/misc/mic/card/mic_x100.c:285:27: warning: shift count >= width of type [-Wshift-count-overflow]
    static u64 mic_dma_mask = DMA_BIT_MASK(64);
                              ^~~~~~~~~~~~~~~~
    include/linux/dma-mapping.h:141:54: note: expanded from macro 'DMA_BIT_MASK'
     #define DMA_BIT_MASK(n) (((n) == 64) ? ~0ULL : ((1ULL<<(n))-1))
                                                         ^ ~~~
    
    A slightly better way here is to create the platform device dynamically
    and set the dma mask in the probe function.
    This avoids the warning and some other problems, but is still not ideal
    because the device creation should really be separated from the driver,
    and the fact that the device has no parent means we have to force
    the dma mask rather than having it set up from the bus that the device
    is actually on.
    
    Fixes: dd8d8d44df64 ("misc: mic: MIC card driver specific changes to enable SCIF")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20190712092426.872625-1-arnd@arndb.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccb5bd32b590aa439a8376228d0b6b6f883d69d8
Author: Ruslan Bilovol <ruslan.bilovol@gmail.com>
Date:   Sun Jul 7 15:17:19 2019 +0300

    usb: host: xhci-hub: fix extra endianness conversion
    
    [ Upstream commit 6269e4c76eacabaea0d0099200ae1a455768d208 ]
    
    Don't do extra cpu_to_le32 conversion for
    put_unaligned_le32 because it is already implemented
    in this function.
    
    Fixes sparse error:
    xhci-hub.c:1152:44: warning: incorrect type in argument 1 (different base types)
    xhci-hub.c:1152:44:    expected unsigned int [usertype] val
    xhci-hub.c:1152:44:    got restricted __le32 [usertype]
    
    Fixes: 395f540 "xhci: support new USB 3.1 hub request to get extended port status"
    Cc: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Link: https://lore.kernel.org/r/1562501839-26522-1-git-send-email-ruslan.bilovol@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f08d7d4acf11febbb125489c0e123c1d22e8744
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jul 22 17:01:23 2019 +0200

    qed: reduce maximum stack frame size
    
    [ Upstream commit 7c116e02a4a7575c8c62bfd2106e3e3ec8fb99dc ]
    
    clang warns about an overly large stack frame in one function
    when it decides to inline all __qed_get_vport_*() functions into
    __qed_get_vport_stats():
    
    drivers/net/ethernet/qlogic/qed/qed_l2.c:1889:13: error: stack frame size of 1128 bytes in function '_qed_get_vport_stats' [-Werror,-Wframe-larger-than=]
    
    Use a noinline_for_stack annotation to prevent clang from inlining
    these, which keeps the maximum stack usage at around half of that
    in the worst case, similar to what we get with gcc.
    
    Fixes: 86622ee75312 ("qed: Move statistics to L2 code")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cade65b0a4545b71843dcea2764931f64c5e24bf
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Jul 16 22:42:18 2019 +0800

    libertas_tf: Use correct channel range in lbtf_geo_init
    
    [ Upstream commit 2ec4ad49b98e4a14147d04f914717135eca7c8b1 ]
    
    It seems we should use 'range' instead of 'priv->range'
    in lbtf_geo_init(), because 'range' is the corret one
    related to current regioncode.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 691cdb49388b ("libertas_tf: command helper functions for libertas_tf")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07f604c86825735985d4f1c8a4bd01e76132baa1
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Jul 15 13:03:48 2019 +0200

    PM: sleep: Fix possible overflow in pm_system_cancel_wakeup()
    
    [ Upstream commit 2933954b71f10d392764f95eec0f0aa2d103054b ]
    
    It is not actually guaranteed that pm_abort_suspend will be
    nonzero when pm_system_cancel_wakeup() is called which may lead to
    subtle issues, so make it use atomic_dec_if_positive() instead of
    atomic_dec() for the safety sake.
    
    Fixes: 33e4f80ee69b ("ACPI / PM: Ignore spurious SCI wakeups from suspend-to-idle")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed45a2de36f8ecadebabe6cbc09607c9fc144aef
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Sat Jul 13 11:46:28 2019 +0800

    clk: sunxi-ng: v3s: add the missing PLL_DDR1
    
    [ Upstream commit c5ed9475c22c89d5409402055142372e35d26a3f ]
    
    The user manual of V3/V3s/S3 declares a PLL_DDR1, however it's forgot
    when developing the V3s CCU driver.
    
    Add back the missing PLL_DDR1.
    
    Fixes: d0f11d14b0bc ("clk: sunxi-ng: add support for V3s CCU")
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4077713e39ed3b1672fa833375453800c431b6c2
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Jul 2 10:18:35 2019 +0100

    scsi: libfc: fix null pointer dereference on a null lport
    
    [ Upstream commit 41a6bf6529edd10a6def42e3b2c34a7474bcc2f5 ]
    
    Currently if lport is null then the null lport pointer is dereference when
    printing out debug via the FC_LPORT_DB macro. Fix this by using the more
    generic FC_LIBFC_DBG debug macro instead that does not use lport.
    
    Addresses-Coverity: ("Dereference after null check")
    Fixes: 7414705ea4ae ("libfc: Add runtime debugging with debug_logging module parameter")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b8e04d87ab02f5769b0912780cf0c198c4257e9
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Sat Jul 6 12:23:41 2019 +0800

    net: pasemi: fix an use-after-free in pasemi_mac_phy_init()
    
    [ Upstream commit faf5577f2498cea23011b5c785ef853ded22700b ]
    
    The phy_dn variable is still being used in of_phy_connect() after the
    of_node_put() call, which may result in use-after-free.
    
    Fixes: 1dd2d06c0459 ("net: Rework pasemi_mac driver to use of_mdio infrastructure")
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Luis Chamberlain <mcgrof@kernel.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: netdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 192a3c131e58c13987dfdb8e5c4a5d2d03114dd4
Author: Xi Wang <wangxi11@huawei.com>
Date:   Mon Jun 24 19:47:51 2019 +0800

    RDMA/hns: Fixs hw access invalid dma memory error
    
    [ Upstream commit ec5bc2cc69b4fc494e04d10fc5226f6f9cf67c56 ]
    
    When smmu is enable, if execute the perftest command and then use 'kill
    -9' to exit, follow this operation repeatedly, the kernel will have a high
    probability to print the following smmu event:
    
      arm-smmu-v3 arm-smmu-v3.1.auto: event 0x10 received:
      arm-smmu-v3 arm-smmu-v3.1.auto:  0x00007d0000000010
      arm-smmu-v3 arm-smmu-v3.1.auto:  0x0000020900000080
      arm-smmu-v3 arm-smmu-v3.1.auto:  0x00000000f47cf000
      arm-smmu-v3 arm-smmu-v3.1.auto:  0x00000000f47cf000
    
    This is because the hw will periodically refresh the qpc cache until the
    next reset.
    
    This patch fixed it by removing the action that release qpc memory in the
    'hns_roce_qp_free' function.
    
    Fixes: 9a4435375cd1 ("IB/hns: Add driver files for hns RoCE driver")
    Signed-off-by: Xi Wang <wangxi11@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97464364e3e1642315a9f194258b50e6781be139
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jun 28 16:59:45 2019 +0200

    devres: allow const resource arguments
    
    [ Upstream commit 9dea44c91469512d346e638694c22c30a5273992 ]
    
    devm_ioremap_resource() does not currently take 'const' arguments,
    which results in a warning from the first driver trying to do it
    anyway:
    
    drivers/gpio/gpio-amd-fch.c: In function 'amd_fch_gpio_probe':
    drivers/gpio/gpio-amd-fch.c:171:49: error: passing argument 2 of 'devm_ioremap_resource' discards 'const' qualifier from pointer target type [-Werror=discarded-qualifiers]
      priv->base = devm_ioremap_resource(&pdev->dev, &amd_fch_gpio_iores);
                                                     ^~~~~~~~~~~~~~~~~~~
    
    Change the prototype to allow it, as there is no real reason not to.
    
    Fixes: 9bb2e0452508 ("gpio: amd: Make resource struct const")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20190628150049.1108048-1-arnd@arndb.de
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviwed-By: Enrico Weigelt <info@metux.net>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37624e6350ed8f773e814311e482fbe6c4d77ca2
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jul 2 15:55:28 2019 +0100

    rxrpc: Fix uninitialized error code in rxrpc_send_data_packet()
    
    [ Upstream commit 3427beb6375d04e9627c67343872e79341a684ea ]
    
    With gcc 4.1:
    
        net/rxrpc/output.c: In function ‘rxrpc_send_data_packet’:
        net/rxrpc/output.c:338: warning: ‘ret’ may be used uninitialized in this function
    
    Indeed, if the first jump to the send_fragmentable label is made, and
    the address family is not handled in the switch() statement, ret will be
    used uninitialized.
    
    Fix this by BUG()'ing as is done in other places in rxrpc where internal
    support for future address families will need adding.  It should not be
    possible to reach this normally as the address families are checked
    up-front.
    
    Fixes: 5a924b8951f835b5 ("rxrpc: Don't store the rxrpc header in the Tx queue sk_buffs")
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92cbf173ea692cd2111d3cedebe408a68a96d0f6
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jun 21 15:56:31 2019 +0300

    mfd: intel-lpss: Release IDA resources
    
    [ Upstream commit 02f36911c1b41fcd8779fa0c135aab0554333fa5 ]
    
    ida instances allocate some internal memory for ->free_bitmap
    in addition to the base 'struct ida'. Use ida_destroy() to release
    that memory at module_exit().
    
    Fixes: 4b45efe85263 ("mfd: Add support for Intel Sunrisepoint LPSS devices")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be4a793b10fd11c2a519d6222799b53d8af2c05d
Author: Kevin Mitchell <kevmitch@arista.com>
Date:   Wed Jun 12 14:52:03 2019 -0700

    iommu/amd: Make iommu_disable safer
    
    [ Upstream commit 3ddbe913e55516d3e2165d43d4d5570761769878 ]
    
    Make it safe to call iommu_disable during early init error conditions
    before mmio_base is set, but after the struct amd_iommu has been added
    to the amd_iommu_list. For example, this happens if firmware fails to
    fill in mmio_phys in the ACPI table leading to a NULL pointer
    dereference in iommu_feature_disable.
    
    Fixes: 2c0ae1720c09c ('iommu/amd: Convert iommu initialization to state machine')
    Signed-off-by: Kevin Mitchell <kevmitch@arista.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46942fb18681b3d70441353af7bb39d856ab931f
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Sat Jun 29 11:16:45 2019 -0400

    bnxt_en: Fix ethtool selftest crash under error conditions.
    
    [ Upstream commit d27e2ca1166aefd54d9c48fb6647dee8115a5dfc ]
    
    After ethtool loopback packet tests, we re-open the nic for the next
    IRQ test.  If the open fails, we must not proceed with the IRQ test
    or we will crash with NULL pointer dereference.  Fix it by checking
    the bnxt_open_nic() return code before proceeding.
    
    Reported-by: Somasundaram Krishnasamy <somasundaram.krishnasamy@oracle.com>
    Fixes: 67fea463fd87 ("bnxt_en: Add interrupt test to ethtool -t selftest.")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 383019e9d2dcb8e8e0cc67f5f0c8552ff8ad67b1
Author: Bryan O'Donoghue <pure.logic@nexus-software.ie>
Date:   Wed Jun 26 11:27:29 2019 +0100

    nvmem: imx-ocotp: Ensure WAIT bits are preserved when setting timing
    
    [ Upstream commit 0493c4792b4eb260441e57f52cc11a9ded48b5a7 ]
    
    The i.MX6 and i.MX8 both have a bit-field spanning bits 27:22 called the
    WAIT field.
    
    The WAIT field according to the documentation for both parts "specifies
    time interval between auto read and write access in one time program. It is
    given in number of ipg_clk periods."
    
    This patch ensures that the relevant field is read and written back to the
    timing register.
    
    Fixes: 0642bac7da42 ("nvmem: imx-ocotp: add write support")
    
    Signed-off-by: Bryan O'Donoghue <pure.logic@nexus-software.ie>
    Reviewed-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de2970e92948b7de60ba41f36b05aa1740e77b6a
Author: Nathan Huckleberry <nhuck@google.com>
Date:   Tue Jun 11 14:11:34 2019 -0700

    clk: qcom: Fix -Wunused-const-variable
    
    [ Upstream commit da642427bd7710ec4f4140f693f59aa8521a358c ]
    
    Clang produces the following warning
    
    drivers/clk/qcom/gcc-msm8996.c:133:32: warning: unused variable
    'gcc_xo_gpll0_gpll2_gpll3_gpll0_early_div_map' [-Wunused-const-variable]
    static const struct
    parent_map gcc_xo_gpll0_gpll2_gpll3_gpll0_early_div_map[] =
    { ^drivers/clk/qcom/gcc-msm8996.c:141:27: warning: unused variable
    'gcc_xo_gpll0_gpll2_gpll3_gpll0_early_div' [-Wunused-const-variable] static
    const char * const gcc_xo_gpll0_gpll2_gpll3_gpll0_early_div[] = { ^
    drivers/clk/qcom/gcc-msm8996.c:187:32: warning: unused variable
    'gcc_xo_gpll0_gpll2_gpll3_gpll1_gpll4_gpll0_early_div_map'
    [-Wunused-const-variable] static const struct parent_map
    gcc_xo_gpll0_gpll2_gpll3_gpll1_gpll4_gpll0_early_div_map[] = { ^
    drivers/clk/qcom/gcc-msm8996.c:197:27: warning: unused variable
    'gcc_xo_gpll0_gpll2_gpll3_gpll1_gpll4_gpll0_early_div'
    [-Wunused-const-variable] static const char * const
    gcc_xo_gpll0_gpll2_gpll3_gpll1_gpll4_gpll0_early_div[] = {
    
    It looks like these were never used.
    
    Fixes: b1e010c0730a ("clk: qcom: Add MSM8996 Global Clock Control (GCC) driver")
    Cc: clang-built-linux@googlegroups.com
    Link: https://github.com/ClangBuiltLinux/linux/issues/518
    Suggested-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Nathan Huckleberry <nhuck@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f08cd3c7db421905dd1c15b2b2f9a4d0a3c5ab8f
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Jun 13 16:32:32 2019 +0300

    dmaengine: hsu: Revert "set HSU_CH_MTSR to memory width"
    
    [ Upstream commit c24a5c735f87d0549060de31367c095e8810b895 ]
    
    The commit
    
      080edf75d337 ("dmaengine: hsu: set HSU_CH_MTSR to memory width")
    
    has been mistakenly submitted. The further investigations show that
    the original code does better job since the memory side transfer size
    has never been configured by DMA users.
    
    As per latest revision of documentation: "Channel minimum transfer size
    (CHnMTSR)... For IOSF UART, maximum value that can be programmed is 64 and
    minimum value that can be programmed is 1."
    
    This reverts commit 080edf75d337d35faa6fc3df99342b10d2848d16.
    
    Fixes: 080edf75d337 ("dmaengine: hsu: set HSU_CH_MTSR to memory width")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 232ac0764ac76ff4f8eef9a8c24a661dbd0a6382
Author: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
Date:   Tue Jun 4 09:59:53 2019 +0530

    perf/ioctl: Add check for the sample_period value
    
    [ Upstream commit 913a90bc5a3a06b1f04c337320e9aeee2328dd77 ]
    
    perf_event_open() limits the sample_period to 63 bits. See:
    
      0819b2e30ccb ("perf: Limit perf_event_attr::sample_period to 63 bits")
    
    Make ioctl() consistent with it.
    
    Also on PowerPC, negative sample_period could cause a recursive
    PMIs leading to a hang (reported when running perf-fuzzer).
    
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: acme@kernel.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: maddy@linux.vnet.ibm.com
    Cc: mpe@ellerman.id.au
    Fixes: 0819b2e30ccb ("perf: Limit perf_event_attr::sample_period to 63 bits")
    Link: https://lkml.kernel.org/r/20190604042953.914-1-ravi.bangoria@linux.ibm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc99903915ab5d06368c97058e017ae4580b13e5
Author: Rob Clark <robdclark@chromium.org>
Date:   Mon Jun 24 09:09:47 2019 -0700

    drm/msm/a3xx: remove TPL1 regs from snapshot
    
    [ Upstream commit f47bee2ba447bebc304111c16ef1e1a73a9744dd ]
    
    These regs are write-only, and the hw throws a hissy-fit (ie. reboots)
    when we try to read them for GPU state snapshot, in response to a GPU
    hang.  It is rather impolite when GPU recovery triggers an insta-
    reboot, so lets remove the TPL1 registers from the snapshot.
    
    Fixes: 7198e6b03155 drm/msm: add a3xx gpu support
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Jordan Crouse <jcrouse@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a473d3bd98c7c1f717f5bdaab64b74e5b1e8b1b
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Tue Jun 4 12:23:36 2019 +0800

    rtc: pcf8563: Clear event flags and disable interrupts before requesting irq
    
    [ Upstream commit 3572e8aea3bf925dac1dbf86127657c39fe5c254 ]
    
    Besides the alarm, the PCF8563 also has a timer triggered interrupt.
    In cases where the previous system left the timer and interrupts on,
    or somehow the bits got enabled, the interrupt would keep triggering
    as the kernel doesn't know about it.
    
    Clear both the alarm and timer event flags, and disable the interrupts,
    before requesting the interrupt line.
    
    Fixes: ede3e9d47cca ("drivers/rtc/rtc-pcf8563.c: add alarm support")
    Fixes: a45d528aab8b ("rtc: pcf8563: clear expired alarm at boot time")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59010f8ca3b284b9da05f5c2721a95b5275ce639
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Tue Jun 4 12:23:35 2019 +0800

    rtc: pcf8563: Fix interrupt trigger method
    
    [ Upstream commit 65f662cbf829834fa4d94190eb7691e5a9cb92d8 ]
    
    The PCF8563 datasheet says the interrupt line is active low and stays
    active until the events are cleared, i.e. a level trigger interrupt.
    
    Fix the flags used to request the interrupt.
    
    Fixes: ede3e9d47cca ("drivers/rtc/rtc-pcf8563.c: add alarm support")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d999896bec7cd5cedb3d9afc4ea1ff6db041be5b
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Thu Jun 20 12:20:02 2019 +0300

    ASoC: ti: davinci-mcasp: Fix slot mask settings when using multiple AXRs
    
    [ Upstream commit fd14f4436fd47d5418023c90e933e66d3645552e ]
    
    If multiple serializers are connected in the system and the number of
    channels will need to use more than one serializer the mask to enable the
    serializers were left to 0 if tdm_mask is provided
    
    Fixes: dd55ff8346a97 ("ASoC: davinci-mcasp: Add set_tdm_slots() support")
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6668f5207180535ae8ca2e33a80464c9e291c5b
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Tue Jun 18 20:43:01 2019 +0200

    net/af_iucv: always register net_device notifier
    
    [ Upstream commit 06996c1d4088a0d5f3e7789d7f96b4653cc947cc ]
    
    Even when running as VM guest (ie pr_iucv != NULL), af_iucv can still
    open HiperTransport-based connections. For robust operation these
    connections require the af_iucv_netdev_notifier, so register it
    unconditionally.
    
    Also handle any error that register_netdevice_notifier() returns.
    
    Fixes: 9fbd87d41392 ("af_iucv: handle netdev events")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9085504b3b57fca32dc54ce56c8499512c60ddeb
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Jun 17 11:11:10 2019 -0700

    net: netem: fix backlog accounting for corrupted GSO frames
    
    [ Upstream commit 177b8007463c4f36c9a2c7ce7aa9875a4cad9bd5 ]
    
    When GSO frame has to be corrupted netem uses skb_gso_segment()
    to produce the list of frames, and re-enqueues the segments one
    by one.  The backlog length has to be adjusted to account for
    new frames.
    
    The current calculation is incorrect, leading to wrong backlog
    lengths in the parent qdisc (both bytes and packets), and
    incorrect packet backlog count in netem itself.
    
    Parent backlog goes negative, netem's packet backlog counts
    all non-first segments twice (thus remaining non-zero even
    after qdisc is emptied).
    
    Move the variables used to count the adjustment into local
    scope to make 100% sure they aren't used at any stage in
    backports.
    
    Fixes: 6071bd1aa13e ("netem: Segment GSO packets on enqueue")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Dirk van der Merwe <dirk.vandermerwe@netronome.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68925f1521a2f57f7785a9377fe6baeb6ef0f986
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Tue May 21 08:00:30 2019 -0700

    drm/msm/mdp5: Fix mdp5_cfg_init error return
    
    [ Upstream commit fc19cbb785d7bbd1a1af26229b5240a3ab332744 ]
    
    If mdp5_cfg_init fails because of an unknown major version, a null pointer
    dereference occurs.  This is because the caller of init expects error
    pointers, but init returns NULL on error.  Fix this by returning the
    expected values on error.
    
    Fixes: 2e362e1772b8 (drm/msm/mdp5: introduce mdp5_cfg module)
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a275c6ff76d87d9dd4d59c35413aaa4a6a5c0d4
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Tue Jun 11 23:45:06 2019 -0500

    powerpc/pseries/mobility: rebuild cacheinfo hierarchy post-migration
    
    [ Upstream commit e610a466d16a086e321f0bd421e2fc75cff28605 ]
    
    It's common for the platform to replace the cache device nodes after a
    migration. Since the cacheinfo code is never informed about this, it
    never drops its references to the source system's cache nodes, causing
    it to wind up in an inconsistent state resulting in warnings and oopses
    as soon as CPU online/offline occurs after the migration, e.g.
    
      cache for /cpus/l3-cache@3113(Unified) refers to cache for /cpus/l2-cache@200d(Unified)
      WARNING: CPU: 15 PID: 86 at arch/powerpc/kernel/cacheinfo.c:176 release_cache+0x1bc/0x1d0
      [...]
      NIP release_cache+0x1bc/0x1d0
      LR  release_cache+0x1b8/0x1d0
      Call Trace:
        release_cache+0x1b8/0x1d0 (unreliable)
        cacheinfo_cpu_offline+0x1c4/0x2c0
        unregister_cpu_online+0x1b8/0x260
        cpuhp_invoke_callback+0x114/0xf40
        cpuhp_thread_fun+0x270/0x310
        smpboot_thread_fn+0x2c8/0x390
        kthread+0x1b8/0x1c0
        ret_from_kernel_thread+0x5c/0x68
    
    Using device tree notifiers won't work since we want to rebuild the
    hierarchy only after all the removals and additions have occurred and
    the device tree is in a consistent state. Call cacheinfo_teardown()
    before processing device tree updates, and rebuild the hierarchy
    afterward.
    
    Fixes: 410bccf97881 ("powerpc/pseries: Partition migration in the kernel")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55221779bb3255b1d8e9fd20ed5d5998d65cd6f4
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Tue Jun 11 23:45:04 2019 -0500

    powerpc/cacheinfo: add cacheinfo_teardown, cacheinfo_rebuild
    
    [ Upstream commit d4aa219a074a5abaf95a756b9f0d190b5c03a945 ]
    
    Allow external callers to force the cacheinfo code to release all its
    references to cache nodes, e.g. before processing device tree updates
    post-migration, and to rebuild the hierarchy afterward.
    
    CPU online/offline must be blocked by callers; enforce this.
    
    Fixes: 410bccf97881 ("powerpc/pseries: Partition migration in the kernel")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0f944d4cb3a9e4e8ebebf5379ede31cc3a3fbe2
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Thu Jun 13 11:29:40 2019 +0300

    qed: iWARP - Use READ_ONCE and smp_store_release to access ep->state
    
    [ Upstream commit 6117561e1bb30b2fe7f51e1961f34dbedd0bec8a ]
    
    Destroy QP waits for it's ep object state to be set to CLOSED
    before proceeding. ep->state can be updated from a different
    context. Add smp_store_release/READ_ONCE to synchronize.
    
    Fixes: fc4c6065e661 ("qed: iWARP implement disconnect flows")
    Signed-off-by: Ariel Elior <ariel.elior@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7edbb6415098817533b9024694b2a6c05c74fc1
Author: Eric Auger <eric.auger@redhat.com>
Date:   Mon Jun 3 08:53:31 2019 +0200

    iommu/vt-d: Duplicate iommu_resv_region objects per device list
    
    [ Upstream commit 5f64ce5411b467f1cfea6c63e2494c22b773582b ]
    
    intel_iommu_get_resv_regions() aims to return the list of
    reserved regions accessible by a given @device. However several
    devices can access the same reserved memory region and when
    building the list it is not safe to use a single iommu_resv_region
    object, whose container is the RMRR. This iommu_resv_region must
    be duplicated per device reserved region list.
    
    Let's remove the struct iommu_resv_region from the RMRR unit
    and allocate the iommu_resv_region directly in
    intel_iommu_get_resv_regions(). We hold the dmar_global_lock instead
    of the rcu-lock to allow sleeping.
    
    Fixes: 0659b8dc45a6 ("iommu/vt-d: Implement reserved region get/put callbacks")
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Reviewed-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21b0815f71553fe95ddc16caf5b33eecad2bd56d
Author: George Wilkie <gwilkie@vyatta.att-mail.com>
Date:   Fri Jun 7 11:49:41 2019 +0100

    mpls: fix warning with multi-label encap
    
    [ Upstream commit 2f3f7d1fa0d1039b24a55d127ed190f196fc3e79 ]
    
    If you configure a route with multiple labels, e.g.
      ip route add 10.10.3.0/24 encap mpls 16/100 via 10.10.2.2 dev ens4
    A warning is logged:
      kernel: [  130.561819] netlink: 'ip': attribute type 1 has an invalid
      length.
    
    This happens because mpls_iptunnel_policy has set the type of
    MPLS_IPTUNNEL_DST to fixed size NLA_U32.
    Change it to a minimum size.
    nla_get_labels() does the remaining validation.
    
    Fixes: e3e4712ec096 ("mpls: ip tunnel support")
    Signed-off-by: George Wilkie <gwilkie@vyatta.att-mail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 317357415bef2cc2ec618d4c4f274abbcdc20bab
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Jun 4 10:55:15 2019 -0400

    media: vivid: fix incorrect assignment operation when setting video mode
    
    [ Upstream commit d4ec9550e4b2d2e357a46fdc65d8ef3d4d15984c ]
    
    The assigment of FB_VMODE_NONINTERLACE to var->vmode should be a
    bit-wise or of FB_VMODE_NONINTERLACE instead of an assignment,
    otherwise the previous clearing of the FB_VMODE_MASK bits of
    var->vmode makes no sense and is redundant.
    
    Addresses-Coverity: ("Unused value")
    Fixes: ad4e02d5081d ("[media] vivid: add a simple framebuffer device for overlay testing")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4fa8aa0ef869c05559653c23359c68c5bb921b7
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed May 22 11:45:47 2019 -0700

    cpufreq: brcmstb-avs-cpufreq: Fix types for voltage/frequency
    
    [ Upstream commit 4c5681fcc684c762b09435de3e82ffeee7769d21 ]
    
    What we read back from the register is going to be capped at 32-bits,
    and cpufreq_freq_table.frequency is an unsigned int. Avoid any possible
    value truncation by using the appropriate return value.
    
    Fixes: de322e085995 ("cpufreq: brcmstb-avs-cpufreq: AVS CPUfreq driver for Broadcom STB SoCs")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Markus Mayer <mmayer@broadcom.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ba089779082da6e53b4a57d478091a94e94abb4
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed May 22 11:45:46 2019 -0700

    cpufreq: brcmstb-avs-cpufreq: Fix initial command check
    
    [ Upstream commit 22a26cc6a51ef73dcfeb64c50513903f6b2d53d8 ]
    
    There is a logical error in brcm_avs_is_firmware_loaded() whereby if the
    firmware returns -EINVAL, we will be reporting this as an error. The
    comment is correct, the code was not.
    
    Fixes: de322e085995 ("cpufreq: brcmstb-avs-cpufreq: AVS CPUfreq driver for Broadcom STB SoCs")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Markus Mayer <mmayer@broadcom.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7313729555616597f2ca79cb72de28778298abeb
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Tue May 28 11:47:30 2019 -0700

    netvsc: unshare skb in VF rx handler
    
    [ Upstream commit 996ed04741467f6d1552440c92988b132a9487ec ]
    
    The netvsc VF skb handler should make sure that skb is not
    shared. Similar logic already exists in bonding and team device
    drivers.
    
    This is not an issue in practice because the VF devicex
    does not send up shared skb's. But the netvsc driver
    should do the right thing if it did.
    
    Fixes: 0c195567a8f6 ("netvsc: transparent VF management")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f80b033f61bafc56239ae6507d944aa4d13ddd6
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 27 16:56:48 2019 -0700

    inet: frags: call inet_frags_fini() after unregister_pernet_subsys()
    
    [ Upstream commit ae7352d384a552d8c799c242e74a934809990a71 ]
    
    Both IPv6 and 6lowpan are calling inet_frags_fini() too soon.
    
    inet_frags_fini() is dismantling a kmem_cache, that might be needed
    later when unregister_pernet_subsys() eventually has to remove
    frags queues from hash tables and free them.
    
    This fixes potential use-after-free, and is a prereq for the following patch.
    
    Fixes: d4ad4d22e7ac ("inet: frags: use kmem_cache for inet_frag_queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9360b13308b085c57430e8b28fa5ea1ecf6e6645
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed May 15 12:33:50 2019 -0500

    signal/cifs: Fix cifs_put_tcp_session to call send_sig instead of force_sig
    
    [ Upstream commit 72abe3bcf0911d69b46c1e8bdb5612675e0ac42c ]
    
    The locking in force_sig_info is not prepared to deal with a task that
    exits or execs (as sighand may change).  The is not a locking problem
    in force_sig as force_sig is only built to handle synchronous
    exceptions.
    
    Further the function force_sig_info changes the signal state if the
    signal is ignored, or blocked or if SIGNAL_UNKILLABLE will prevent the
    delivery of the signal.  The signal SIGKILL can not be ignored and can
    not be blocked and SIGNAL_UNKILLABLE won't prevent it from being
    delivered.
    
    So using force_sig rather than send_sig for SIGKILL is confusing
    and pointless.
    
    Because it won't impact the sending of the signal and and because
    using force_sig is wrong, replace force_sig with send_sig.
    
    Cc: Namjae Jeon <namjae.jeon@samsung.com>
    Cc: Jeff Layton <jlayton@primarydata.com>
    Cc: Steve French <smfrench@gmail.com>
    Fixes: a5c3e1c725af ("Revert "cifs: No need to send SIGKILL to demux_thread during umount"")
    Fixes: e7ddee9037e7 ("cifs: disable sharing session and tcon and add new TCP sharing code")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a31ef6b36d7703379d46914eae56f65b6d6e108b
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue May 21 15:27:35 2019 +0800

    iommu: Use right function to get group for device
    
    [ Upstream commit 57274ea25736496ee019a5c40479855b21888839 ]
    
    The iommu_group_get_for_dev() will allocate a group for a
    device if it isn't in any group. This isn't the use case
    in iommu_request_dm_for_dev(). Let's use iommu_group_get()
    instead.
    
    Fixes: d290f1e70d85a ("iommu: Introduce iommu_request_dm_for_dev()")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50eafd6938decd0693085d0b713060bd0e539d8b
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri May 24 09:15:17 2019 -0700

    misc: sgi-xp: Properly initialize buf in xpc_get_rsvd_page_pa
    
    [ Upstream commit b0576f9ecb5c51e9932531d23c447b2739261841 ]
    
    Clang warns:
    
    drivers/misc/sgi-xp/xpc_partition.c:73:14: warning: variable 'buf' is
    uninitialized when used within its own initialization [-Wuninitialized]
            void *buf = buf;
                  ~~~   ^~~
    1 warning generated.
    
    Arnd's explanation during review:
    
      /*
       * Returns the physical address of the partition's reserved page through
       * an iterative number of calls.
       *
       * On first call, 'cookie' and 'len' should be set to 0, and 'addr'
       * set to the nasid of the partition whose reserved page's address is
       * being sought.
       * On subsequent calls, pass the values, that were passed back on the
       * previous call.
       *
       * While the return status equals SALRET_MORE_PASSES, keep calling
       * this function after first copying 'len' bytes starting at 'addr'
       * into 'buf'. Once the return status equals SALRET_OK, 'addr' will
       * be the physical address of the partition's reserved page. If the
       * return status equals neither of these, an error as occurred.
       */
      static inline s64
      sn_partition_reserved_page_pa(u64 buf, u64 *cookie, u64 *addr, u64 *len)
    
      so *len is set to zero on the first call and tells the bios how many
      bytes are accessible at 'buf', and it does get updated by the BIOS to
      tell us how many bytes it needs, and then we allocate that and try again.
    
    Fixes: 279290294662 ("[IA64-SGI] cleanup the way XPC locates the reserved page")
    Link: https://github.com/ClangBuiltLinux/linux/issues/466
    Suggested-by: Stephen Hines <srhines@google.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c837323da42905c0dd26bf062ed4d3a2eedc41f5
Author: Erwan Le Ray <erwan.leray@st.com>
Date:   Tue May 21 17:45:46 2019 +0200

    serial: stm32: fix wakeup source initialization
    
    [ Upstream commit 5297f274e8b61ceb9676cba6649d3de9d03387ad ]
    
    Fixes dedicated_irq_wakeup issue and deactivated uart as wakeup source by
    default.
    
    Fixes: 270e5a74fe4c ("serial: stm32: add wakeup mechanism")
    Signed-off-by: Erwan Le Ray <erwan.leray@st.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6859cf2284a7c4be2e8678bf75ffd7c8f51a0147
Author: Erwan Le Ray <erwan.leray@st.com>
Date:   Tue May 21 17:45:45 2019 +0200

    serial: stm32: Add support of TC bit status check
    
    [ Upstream commit 64c32eab660386f9904bb295a104c9c425e9f8b2 ]
    
    Adds a check on the Transmission Complete bit status before closing the
    com port. Prevents the port closure before the end of the transmission.
    TC poll loop is moved from stm32_tx_dma_complete to stm32_shutdown
    routine, in order to check TC before shutdown in both dma and
    PIO tx modes.
    TC clear is added in stm32_transmit_char routine, in order to be cleared
    before transmitting in both dma and PIO tx modes.
    
    Fixes: 3489187204eb ("serial: stm32: adding dma support")
    Signed-off-by: Erwan Le Ray <erwan.leray@st.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e0f6b8569f2a2b447a13dfecacd35a6bc3aa421
Author: Erwan Le Ray <erwan.leray@st.com>
Date:   Tue May 21 17:45:44 2019 +0200

    serial: stm32: fix transmit_chars when tx is stopped
    
    [ Upstream commit b83b957c91f68e53f0dc596e129e8305761f2a32 ]
    
    Disables the tx irq  when the transmission is ended and updates stop_tx
    conditions for code cleanup.
    
    Fixes: 48a6092fb41f ("serial: stm32-usart: Add STM32 USART Driver")
    Signed-off-by: Erwan Le Ray <erwan.leray@st.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58828c8a7ba68580c5683781cfcc644d43c21778
Author: Erwan Le Ray <erwan.leray@st.com>
Date:   Tue May 21 17:45:42 2019 +0200

    serial: stm32: fix rx error handling
    
    [ Upstream commit 4f01d833fdcdd6f9b85d9e5d5d7568eb683626a7 ]
    
    - Fixes parity and framing error bit by clearing parity and framing error
      flag. The current implementation doesn't clear the error bits when an
      error is detected.
    - Fixes the incorrect name of framing error clearing flag in header file.
    - Fixes misalignement between data frame and errors status. The status
      read for "n" frame was the status of "n+1" frame".
    - Fixes break detection was not triggered by the expected register.
    
    Fixes: 48a6092fb41f ("serial: stm32-usart: Add STM32 USART Driver")
    Signed-off-by: Erwan Le Ray <erwan.leray@st.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9080a21773ca3f60d98b0126951a6135c2d96f66
Author: Hook, Gary <Gary.Hook@amd.com>
Date:   Tue May 14 21:53:30 2019 +0000

    crypto: ccp - Fix 3DES complaint from ccp-crypto module
    
    [ Upstream commit 89646fdda4cae203185444ac7988835f36a21ee1 ]
    
    Crypto self-tests reveal an error:
    
    alg: skcipher: cbc-des3-ccp encryption test failed (wrong output IV) on test vector 0, cfg="in-place"
    
    The offset value should not be recomputed when retrieving the context.
    Also, a code path exists which makes decisions based on older (version 3)
    hardware; a v3 device deosn't support 3DES so remove this check.
    
    Fixes: 990672d48515 ('crypto: ccp - Enable 3DES function on v5 CCPs')
    
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a90e4a8e08333eaae2767a766c4fd6d165af10d4
Author: Hook, Gary <Gary.Hook@amd.com>
Date:   Tue May 14 21:53:23 2019 +0000

    crypto: ccp - fix AES CFB error exposed by new test vectors
    
    [ Upstream commit c3b359d6567c0b8f413e924feb37cf025067d55a ]
    
    Updated testmgr will exhibit this error message when loading the
    ccp-crypto module:
    
    alg: skcipher: cfb-aes-ccp encryption failed with err -22 on test vector 3, cfg="in-place"
    
    Update the CCP crypto driver to correctly treat CFB as a streaming mode
    cipher (instead of block mode). Update the configuration for CFB to
    specify the block size as a single byte;
    
    Fixes: 2b789435d7f3 ('crypto: ccp - CCP AES crypto API support')
    
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d56b73c7e727b3a1de39035a504637b800adccd
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Wed May 22 11:00:36 2019 +0000

    spi: spi-fsl-spi: call spi_finalize_current_message() at the end
    
    [ Upstream commit 44a042182cb1e9f7916e015c836967bf638b33c4 ]
    
    spi_finalize_current_message() shall be called once all
    actions are finished, otherwise the last actions might
    step over a newly started transfer.
    
    Fixes: c592becbe704 ("spi: fsl-(e)spi: migrate to generic master queueing")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a494caf49a7fc9946d87bbd347a8965e9200b39
Author: Sagiv Ozeri <sagiv.ozeri@marvell.com>
Date:   Mon May 20 12:33:20 2019 +0300

    RDMA/qedr: Fix incorrect device rate.
    
    [ Upstream commit 69054666df0a9b4e8331319f98b6b9a88bc3fcc4 ]
    
    Use the correct enum value introduced in commit 12113a35ada6 ("IB/core:
    Add HDR speed enum") Prior to this change a 50Gbps port would show 40Gbps.
    
    This patch also cleaned up the redundant redefiniton of ib speeds for
    qedr.
    
    Fixes: 12113a35ada6 ("IB/core: Add HDR speed enum")
    Signed-off-by: Sagiv Ozeri <sagiv.ozeri@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 733ab5b38187791b0cc9e7de8f0f795be5cd48d9
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Apr 18 14:27:09 2019 +0200

    arm64: dts: meson: libretech-cc: set eMMC as removable
    
    [ Upstream commit 9f72e321d5506fe3e162a6308a4a295d7f10bb5d ]
    
    The eMMC on this board is add-on module which is not mandatory. Removing
    'non-removable' property should prevent some errors when booting a board
    w/o an eMMC module present.
    
    Fixes: 72fb2c852188 ("ARM64: dts: meson-gxl-s905x-libretech-cc: fixup board definition")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Reviewed-by: Martin Blumenstingl<martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71bc62b08059915218d3fbc78092f40cedbfe446
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Thu May 16 16:53:52 2019 +0100

    dmaengine: tegra210-adma: Fix crash during probe
    
    [ Upstream commit b53611fb1ce9b1786bd18205473e0c1d6bfa8934 ]
    
    Commit f33e7bb3eb92 ("dmaengine: tegra210-adma: restore channel status")
    added support to save and restore the DMA channel registers when runtime
    suspending the ADMA. This change is causing the kernel to crash when
    probing the ADMA, if the device is probed deferred when looking up the
    channel interrupts. The crash occurs because not all of the channel base
    addresses have been setup at this point and in the clean-up path of the
    probe, pm_runtime_suspend() is called invoking its callback which
    expects all the channel base addresses to be initialised.
    
    Although this could be fixed by simply checking for a NULL address, on
    further review of the driver it seems more appropriate that we only call
    pm_runtime_get_sync() after all the channel interrupts and base
    addresses have been configured. Therefore, fix this crash by moving the
    calls to pm_runtime_enable(), pm_runtime_get_sync() and
    tegra_adma_init() after the DMA channels have been initialised.
    
    Fixes: f33e7bb3eb92 ("dmaengine: tegra210-adma: restore channel status")
    
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f531be6de4085e1e61fb01ef02c4278ce263d60
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Sat May 18 17:40:14 2019 +0200

    ARM: dts: sun8i-h3: Fix wifi in Beelink X2 DT
    
    [ Upstream commit ca0961011db57e39880df0b5708df8aa3339dc6f ]
    
    mmc1 node where wifi module is connected doesn't have properly defined
    power supplies so wifi module is never powered up. Fix that by
    specifying additional power supplies.
    
    Additionally, this STB may have either Realtek or Broadcom based wifi
    module. One based on Broadcom module also needs external clock to work
    properly. Fix that by adding clock property to wifi_pwrseq node.
    
    Fixes: e582b47a9252 ("ARM: dts: sun8i-h3: Add dts for the Beelink X2 STB")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 857247a21385e45dbffbc87b95f3761faa04fa81
Author: Robert Richter <rrichter@marvell.com>
Date:   Tue May 14 10:49:09 2019 +0000

    EDAC/mc: Fix edac_mc_find() in case no device is found
    
    [ Upstream commit 29a0c843973bc385918158c6976e4dbe891df969 ]
    
    The function should return NULL in case no device is found, but it
    always returns the last checked mc device from the list even if the
    index did not match. Fix that.
    
    I did some analysis why this did not raise any issues for about 3 years
    and the reason is that edac_mc_find() is mostly used to search for
    existing devices. Thus, the bug is not triggered.
    
     [ bp: Drop the if (mci->mc_idx > idx) test in favor of readability. ]
    
    Fixes: c73e8833bec5 ("EDAC, mc: Fix locking around mc_devices list")
    Signed-off-by: Robert Richter <rrichter@marvell.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "linux-edac@vger.kernel.org" <linux-edac@vger.kernel.org>
    Cc: James Morse <james.morse@arm.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Link: https://lkml.kernel.org/r/20190514104838.15065-1-rrichter@marvell.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0450254e832c40401c074c84e664d2f37bae7155
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Thu May 2 11:32:38 2019 -0700

    thermal: cpu_cooling: Actually trace CPU load in thermal_power_cpu_get_power
    
    [ Upstream commit bf45ac18b78038e43af3c1a273cae4ab5704d2ce ]
    
    The CPU load values passed to the thermal_power_cpu_get_power
    tracepoint are zero for all CPUs, unless, unless the
    thermal_power_cpu_limit tracepoint is enabled too:
    
      irq/41-rockchip-98    [000] ....   290.972410: thermal_power_cpu_get_power:
      cpus=0000000f freq=1800000 load={{0x0,0x0,0x0,0x0}} dynamic_power=4815
    
    vs
    
      irq/41-rockchip-96    [000] ....    95.773585: thermal_power_cpu_get_power:
      cpus=0000000f freq=1800000 load={{0x56,0x64,0x64,0x5e}} dynamic_power=4959
      irq/41-rockchip-96    [000] ....    95.773596: thermal_power_cpu_limit:
      cpus=0000000f freq=408000 cdev_state=10 power=416
    
    There seems to be no good reason for omitting the CPU load information
    depending on another tracepoint. My guess is that the intention was to
    check whether thermal_power_cpu_get_power is (still) enabled, however
    'load_cpu != NULL' already indicates that it was at least enabled when
    cpufreq_get_requested_power() was entered, there seems little gain
    from omitting the assignment if the tracepoint was just disabled, so
    just remove the check.
    
    Fixes: 6828a4711f99 ("thermal: add trace events to the power allocator governor")
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Reviewed-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Acked-by: Javi Merino <javi.merino@kernel.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 616d12400dc2cf57969978fd96e257d6559ea046
Author: Brian Masney <masneyb@onstation.org>
Date:   Wed Apr 24 05:25:03 2019 -0400

    backlight: lm3630a: Return 0 on success in update_status functions
    
    [ Upstream commit d3f48ec0954c6aac736ab21c34a35d7554409112 ]
    
    lm3630a_bank_a_update_status() and lm3630a_bank_b_update_status()
    both return the brightness value if the brightness was successfully
    updated. Writing to these attributes via sysfs would cause a 'Bad
    address' error to be returned. These functions should return 0 on
    success, so let's change it to correct that error.
    
    Fixes: 28e64a68a2ef ("backlight: lm3630: apply chip revision")
    Signed-off-by: Brian Masney <masneyb@onstation.org>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67b69c426a1c8d5a5e771c7ff1348e1bd3803719
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon May 6 15:50:18 2019 +0300

    kdb: do a sanity check on the cpu in kdb_per_cpu()
    
    [ Upstream commit b586627e10f57ee3aa8f0cfab0d6f7dc4ae63760 ]
    
    The "whichcpu" comes from argv[3].  The cpu_online() macro looks up the
    cpu in a bitmap of online cpus, but if the value is too high then it
    could read beyond the end of the bitmap and possibly Oops.
    
    Fixes: 5d5314d6795f ("kdb: core for kgdb back end (1 of 2)")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1229ccad5380c4b97874bdb4d9e6c7d639417151
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Apr 27 22:43:49 2019 +0100

    ARM: riscpc: fix lack of keyboard interrupts after irq conversion
    
    [ Upstream commit 63a0666bca9311f35017be454587f3ba903644b8 ]
    
    Fix lack of keyboard interrupts for RiscPC due to incorrect conversion.
    
    Fixes: e8d36d5dbb6a ("ARM: kill off set_irq_flags usage")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f6200cb6dc2fb7a55a218e23806c140fc89ad2e
Author: Bichao Zheng <bichao.zheng@amlogic.com>
Date:   Mon Apr 1 20:18:17 2019 +0200

    pwm: meson: Don't disable PWM when setting duty repeatedly
    
    [ Upstream commit a279345807e1e0ae79567a52cfdd9d30c9174a3c ]
    
    There is an abnormally low about 20ms,when setting duty repeatedly.
    Because setting the duty will disable PWM and then enable. Delete
    this operation now.
    
    Fixes: 211ed630753d2f ("pwm: Add support for Meson PWM Controller")
    Signed-off-by: Bichao Zheng <bichao.zheng@amlogic.com>
    [ Dropped code instead of hiding it behind a comment ]
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 220461f5537b050ee0fc4ff129e0e68dd60fd7f6
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Mon Apr 1 20:18:16 2019 +0200

    pwm: meson: Consider 128 a valid pre-divider
    
    [ Upstream commit 51496e4446875726d50a5617a6e0e0dabbc2e6da ]
    
    The pre-divider allows configuring longer PWM periods compared to using
    the input clock directly. The pre-divider is 7 bit wide, meaning it's
    maximum value is 128 (the register value is off-by-one: 0x7f or 127).
    
    Change the loop to also allow for the maximum possible value to be
    considered valid.
    
    Fixes: 211ed630753d2f ("pwm: Add support for Meson PWM Controller")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eba68981c6eb2246198d6fe8f5f959ab2ca982ff
Author: Florian Westphal <fw@strlen.de>
Date:   Sun May 5 18:47:33 2019 +0200

    netfilter: ebtables: CONFIG_COMPAT: reject trailing data after last rule
    
    [ Upstream commit 680f6af5337c98d116e4f127cea7845339dba8da ]
    
    If userspace provides a rule blob with trailing data after last target,
    we trigger a splat, then convert ruleset to 64bit format (with trailing
    data), then pass that to do_replace_finish() which then returns -EINVAL.
    
    Erroring out right away avoids the splat plus unneeded translation and
    error unwind.
    
    Fixes: 81e675c227ec ("netfilter: ebtables: add CONFIG_COMPAT support")
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b98958074cae36b6bc6b4267b06af266bc3ea511
Author: Iuliana Prodan <iuliana.prodan@nxp.com>
Date:   Tue May 7 16:37:03 2019 +0300

    crypto: caam - fix caam_dump_sg that iterates through scatterlist
    
    [ Upstream commit 8c65d35435e8cbfdf953cafe5ebe3648ee9276a2 ]
    
    Fix caam_dump_sg by correctly determining the next scatterlist
    entry in the list.
    
    Fixes: 5ecf8ef9103c ("crypto: caam - fix sg dump")
    Signed-off-by: Iuliana Prodan <iuliana.prodan@nxp.com>
    Reviewed-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a21d4ba48183c5c498cbdea1f64e4dbb2bad5a7f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 24 12:44:18 2019 +0300

    platform/x86: alienware-wmi: printing the wrong error code
    
    [ Upstream commit 6d1f8b3d75419a8659ac916a1e9543bb3513a882 ]
    
    The "out_data" variable is uninitialized at the point.  Originally, this
    used to print "status" instead and that seems like the correct thing to
    print.
    
    Fixes: bc2ef884320b ("alienware-wmi: For WMAX HDMI method, introduce a way to query HDMI cable status")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Mario Limonciello <mario.limonciello@dell.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2b94c244825fb80e03a83c1d29522e6265cddef
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 24 05:46:27 2019 -0400

    media: davinci/vpbe: array underflow in vpbe_enum_outputs()
    
    [ Upstream commit b72845ee5577b227131b1fef23f9d9a296621d7b ]
    
    In vpbe_enum_outputs() we check if (temp_index >= cfg->num_outputs) but
    the problem is that "temp_index" can be negative.  This patch changes
    the types to unsigned to address this array underflow bug.
    
    Fixes: 66715cdc3224 ("[media] davinci vpbe: VPBE display driver")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: "Lad, Prabhakar" <prabhakar.csengg@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecad62adbecc3dde19a5ed239e16dbb76b958bcd
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Apr 11 05:01:57 2019 -0400

    media: omap_vout: potential buffer overflow in vidioc_dqbuf()
    
    [ Upstream commit dd6e2a981bfe83aa4a493143fd8cf1edcda6c091 ]
    
    The "b->index" is a u32 the comes from the user in the ioctl.  It hasn't
    been checked.  We aren't supposed to use it but we're instead supposed
    to use the value that gets written to it when we call videobuf_dqbuf().
    
    The videobuf_dqbuf() first memsets it to zero and then re-initializes it
    inside the videobuf_status() function.  It's this final value which we
    want.
    
    Hans Verkuil pointed out that we need to check the return from
    videobuf_dqbuf().  I ended up doing a little cleanup related to that as
    well.
    
    Fixes: 72915e851da9 ("[media] V4L2: OMAP: VOUT: dma map and unmap v4l2 buffers in qbuf and dqbuf")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbd028fdf2ad4edaab71243346a5ba11814d8e3f
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon May 6 22:44:04 2019 +0800

    l2tp: Fix possible NULL pointer dereference
    
    [ Upstream commit 638a3a1e349ddf5b82f222ff5cb3b4f266e7c278 ]
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000128
    PGD 0 P4D 0
    Oops: 0000 [#1
    CPU: 0 PID: 5697 Comm: modprobe Tainted: G        W         5.1.0-rc7+ #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.9.3-0-ge2fc41e-prebuilt.qemu-project.org 04/01/2014
    RIP: 0010:__lock_acquire+0x53/0x10b0
    Code: 8b 1c 25 40 5e 01 00 4c 8b 6d 10 45 85 e4 0f 84 bd 06 00 00 44 8b 1d 7c d2 09 02 49 89 fe 41 89 d2 45 85 db 0f 84 47 02 00 00 <48> 81 3f a0 05 70 83 b8 00 00 00 00 44 0f 44 c0 83 fe 01 0f 86 3a
    RSP: 0018:ffffc90001c07a28 EFLAGS: 00010002
    RAX: 0000000000000000 RBX: ffff88822f038440 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000128
    RBP: ffffc90001c07a88 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000001
    R13: 0000000000000000 R14: 0000000000000128 R15: 0000000000000000
    FS:  00007fead0811540(0000) GS:ffff888237a00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000128 CR3: 00000002310da000 CR4: 00000000000006f0
    Call Trace:
     ? __lock_acquire+0x24e/0x10b0
     lock_acquire+0xdf/0x230
     ? flush_workqueue+0x71/0x530
     flush_workqueue+0x97/0x530
     ? flush_workqueue+0x71/0x530
     l2tp_exit_net+0x170/0x2b0 [l2tp_core
     ? l2tp_exit_net+0x93/0x2b0 [l2tp_core
     ops_exit_list.isra.6+0x36/0x60
     unregister_pernet_operations+0xb8/0x110
     unregister_pernet_device+0x25/0x40
     l2tp_init+0x55/0x1000 [l2tp_core
     ? 0xffffffffa018d000
     do_one_initcall+0x6c/0x3cc
     ? do_init_module+0x22/0x1f1
     ? rcu_read_lock_sched_held+0x97/0xb0
     ? kmem_cache_alloc_trace+0x325/0x3b0
     do_init_module+0x5b/0x1f1
     load_module+0x1db1/0x2690
     ? m_show+0x1d0/0x1d0
     __do_sys_finit_module+0xc5/0xd0
     __x64_sys_finit_module+0x15/0x20
     do_syscall_64+0x6b/0x1d0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x7fead031a839
    Code: 00 f3 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 1f f6 2c 00 f7 d8 64 89 01 48
    RSP: 002b:00007ffe8d9acca8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    RAX: ffffffffffffffda RBX: 0000560078398b80 RCX: 00007fead031a839
    RDX: 0000000000000000 RSI: 000056007659dc2e RDI: 0000000000000003
    RBP: 000056007659dc2e R08: 0000000000000000 R09: 0000560078398b80
    R10: 0000000000000003 R11: 0000000000000246 R12: 0000000000000000
    R13: 00005600783a04a0 R14: 0000000000040000 R15: 0000560078398b80
    Modules linked in: l2tp_core(+) e1000 ip_tables ipv6 [last unloaded: l2tp_core
    CR2: 0000000000000128
    ---[ end trace 8322b2b8bf83f8e1
    
    If alloc_workqueue fails in l2tp_init, l2tp_net_ops
    is unregistered on failure path. Then l2tp_exit_net
    is called which will flush NULL workqueue, this patch
    add a NULL check to fix it.
    
    Fixes: 67e04c29ec0d ("l2tp: unregister l2tp_net_ops on failure path")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f736690af39473dce29705e4a75a44c9fe242e21
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Apr 30 17:49:33 2019 -0500

    vfio/mdev: Fix aborting mdev child device removal if one fails
    
    [ Upstream commit 6093e348a5e2475c5bb2e571346460f939998670 ]
    
    device_for_each_child() stops executing callback function for remaining
    child devices, if callback hits an error.
    Each child mdev device is independent of each other.
    While unregistering parent device, mdev core must remove all child mdev
    devices.
    Therefore, mdev_device_remove_cb() always returns success so that
    device_for_each_child doesn't abort if one child removal hits error.
    
    While at it, improve remove and unregister functions for below simplicity.
    
    There isn't need to pass forced flag pointer during mdev parent
    removal which invokes mdev_device_remove(). So simplify the flow.
    
    mdev_device_remove() is called from two paths.
    1. mdev_unregister_driver()
         mdev_device_remove_cb()
           mdev_device_remove()
    2. remove_store()
         mdev_device_remove()
    
    Fixes: 7b96953bc640 ("vfio: Mediated device Core driver")
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d464b0246a08f2a03c4c5c3e7fc8cc226f77064
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Apr 30 17:49:28 2019 -0500

    vfio/mdev: Avoid release parent reference during error path
    
    [ Upstream commit 60e7f2c3fe9919cee9534b422865eed49f4efb15 ]
    
    During mdev parent registration in mdev_register_device(),
    if parent device is duplicate, it releases the reference of existing
    parent device.
    This is incorrect. Existing parent device should not be touched.
    
    Fixes: 7b96953bc640 ("vfio: Mediated device Core driver")
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Kirti Wankhede <kwankhede@nvidia.com>
    Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae04bb451d966c993d7afe9ed0e8655810805801
Author: David Howells <dhowells@redhat.com>
Date:   Wed May 1 13:27:09 2019 +0100

    afs: Fix the afs.cell and afs.volume xattr handlers
    
    [ Upstream commit c73aa4102f5b9f261a907c3b3df94cd2c478504d ]
    
    Fix the ->get handlers for the afs.cell and afs.volume xattrs to pass the
    source data size to memcpy() rather than target buffer size.
    
    Overcopying the source data occasionally causes the kernel to oops.
    
    Fixes: d3e3b7eac886 ("afs: Add metadata xattrs")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1dc93fb4fe6690531f499e99f7eb2031ad1202c5
Author: Igor Konopko <igor.j.konopko@intel.com>
Date:   Sat May 4 20:37:59 2019 +0200

    lightnvm: pblk: fix lock order in pblk_rb_tear_down_check
    
    [ Upstream commit 486b5aac85f6ec0b2df3e82a6a629d5eb7804db5 ]
    
    In pblk_rb_tear_down_check() the spinlock functions are not
    called in proper order.
    
    Fixes: a4bd217 ("lightnvm: physical block device (pblk) target")
    Signed-off-by: Igor Konopko <igor.j.konopko@intel.com>
    Reviewed-by: Javier González <javier@javigon.com>
    Reviewed-by: Hans Holmberg <hans.holmberg@cnexlabs.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acab21ffa8c0951f2180f80184c921fa4799c786
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Apr 17 16:28:37 2019 +0800

    mmc: core: fix possible use after free of host
    
    [ Upstream commit 8e1943af2986db42bee2b8dddf49a36cdb2e9219 ]
    
    In the function mmc_alloc_host, the function put_device is called to
    release allocated resources when mmc_gpio_alloc fails. Finally, the
    function pointed by host->class_dev.class->dev_release (i.e.,
    mmc_host_classdev_release) is used to release resources including the
    host structure. However, after put_device, host is used and released
    again. Resulting in a use-after-free bug.
    
    Fixes: 1ed217194488 ("mmc: core: fix error path in mmc_host_alloc")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5131126c746631b34fcd001594b4c1c73dbc425a
Author: Sameer Pujar <spujar@nvidia.com>
Date:   Thu May 2 18:25:17 2019 +0530

    dmaengine: tegra210-adma: restore channel status
    
    [ Upstream commit f33e7bb3eb922618612a90f0a828c790e8880773 ]
    
    Status of ADMA channel registers is not saved and restored during system
    suspend. During active playback if system enters suspend, this results in
    wrong state of channel registers during system resume and playback fails
    to resume properly. Fix this by saving following channel registers in
    runtime suspend and restore during runtime resume.
     * ADMA_CH_LOWER_SRC_ADDR
     * ADMA_CH_LOWER_TRG_ADDR
     * ADMA_CH_FIFO_CTRL
     * ADMA_CH_CONFIG
     * ADMA_CH_CTRL
     * ADMA_CH_CMD
     * ADMA_CH_TC
    Runtime PM calls will be inovked during system resume path if a playback
    or capture needs to be resumed. Hence above changes work fine for system
    suspend case.
    
    Fixes: f46b195799b5 ("dmaengine: tegra-adma: Add support for Tegra210 ADMA")
    Signed-off-by: Sameer Pujar <spujar@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 709f31c4b346c16ff25829e908bde81f9d7f3f7d
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Wed May 1 16:47:09 2019 +0300

    net: ena: fix ena_com_fill_hash_function() implementation
    
    [ Upstream commit 11bd7a00c0d8ffe33d1e926f8e789b4aea787186 ]
    
    ena_com_fill_hash_function() didn't configure the rss->hash_func.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Netanel Belgazal <netanel@amazon.com>
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 086815f78499514e5d532df6343aadd65ed2a247
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Wed May 1 16:47:06 2019 +0300

    net: ena: fix incorrect test of supported hash function
    
    [ Upstream commit d3cfe7ddbc3dfbb9b201615b7fef8fd66d1b5fe8 ]
    
    ena_com_set_hash_function() tests if a hash function is supported
    by the device before setting it.
    The test returns the opposite result than needed.
    Reverse the condition to return the correct value.
    Also use the BIT macro instead of inline shift.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7799cd5d6b0efea6dbad635738b9049362810457
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Wed May 1 16:47:05 2019 +0300

    net: ena: fix: Free napi resources when ena_up() fails
    
    [ Upstream commit b287cdbd1cedfc9606682c6e02b58d00ff3a33ae ]
    
    ena_up() calls ena_init_napi() but does not call ena_del_napi() in
    case of failure. This causes a segmentation fault upon rmmod when
    netif_napi_del() is called. Fix this bug by calling ena_del_napi()
    before returning error from ena_up().
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44d443842c6a5c4b8a5ca3cd1748a63f13541052
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Wed May 1 16:47:03 2019 +0300

    net: ena: fix swapped parameters when calling ena_com_indirect_table_fill_entry
    
    [ Upstream commit 3c6eeff295f01bdf1c6c3addcb0a04c0c6c029e9 ]
    
    second parameter should be the index of the table rather than the value.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Saeed Bshara <saeedb@amazon.com>
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit feed4aa653cf0bdf4f1b5cb8ae80ee5a8186840b
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Thu May 2 09:34:26 2019 +0800

    iommu/vt-d: Make kernel parameter igfx_off work with vIOMMU
    
    [ Upstream commit 5daab58043ee2bca861068e2595564828f3bc663 ]
    
    The kernel parameter igfx_off is used by users to disable
    DMA remapping for the Intel integrated graphic device. It
    was designed for bare metal cases where a dedicated IOMMU
    is used for graphic. This doesn't apply to virtual IOMMU
    case where an include-all IOMMU is used.  This makes the
    kernel parameter work with virtual IOMMU as well.
    
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Suggested-by: Kevin Tian <kevin.tian@intel.com>
    Fixes: c0771df8d5297 ("intel-iommu: Export a flag indicating that the IOMMU is used for iGFX.")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Tested-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35fe8691b18701ac0ff6fc7efd601f7bb930bab0
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Wed May 1 08:38:30 2019 +0300

    IB/mlx5: Add missing XRC options to QP optional params mask
    
    [ Upstream commit 8f4426aa19fcdb9326ac44154a117b1a3a5ae126 ]
    
    The QP transition optional parameters for the various transition for XRC
    QPs are identical to those for RC QPs.
    
    Many of the XRC QP transition optional parameter bits are missing from the
    QP optional mask table.  These omissions caused failures when doing XRC QP
    state transitions.
    
    For example, when trying to change the response timer of an XRC receive QP
    via the RTS2RTS transition, the new timer value was ignored because
    MLX5_QP_OPTPAR_RNR_TIMEOUT bit was missing from the optional params mask
    for XRC qps for the RTS2RTS transition.
    
    Fix this by adding the missing XRC optional parameters for all QP
    transitions to the opt_mask table.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Fixes: a4774e9095de ("IB/mlx5: Fix opt param mask according to firmware spec")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e5c78fb5b18af8d51433cb74358979a0f13a36e
Author: Minas Harutyunyan <minas.harutyunyan@synopsys.com>
Date:   Fri Feb 22 15:49:19 2019 +0400

    dwc2: gadget: Fix completed transfer size calculation in DDMA
    
    [ Upstream commit 5acb4b970184d189d901192d075997c933b82260 ]
    
    Fix calculation of transfer size on completion in function
    dwc2_gadget_get_xfersize_ddma().
    
    Added increment of descriptor pointer to move to next descriptor in
    the loop.
    
    Fixes: aa3e8bc81311 ("usb: dwc2: gadget: DDMA transfer start and complete")
    
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 152920f6c6fe9fa91e837dc99b34b607b10d4958
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Apr 16 14:25:32 2019 +0200

    usb: gadget: fsl: fix link error against usb-gadget module
    
    [ Upstream commit 2100e3ca3676e894fa48b8f6f01d01733387fe81 ]
    
    The dependency to ensure this driver links correctly fails since
    it can not be a loadable module:
    
    drivers/usb/phy/phy-fsl-usb.o: In function `fsl_otg_set_peripheral':
    phy-fsl-usb.c:(.text+0x2224): undefined reference to `usb_gadget_vbus_disconnect'
    
    Make the option 'tristate' so it can work correctly.
    
    Fixes: 5a8d651a2bde ("usb: gadget: move gadget API functions to udc-core")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0075f99fb42ddcf77c527740fa9503bbad0f98d0
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Apr 29 11:47:49 2019 +0200

    ASoC: fix valid stream condition
    
    [ Upstream commit 6a7c59c6d9f3b280e81d7a04bbe4e55e90152dce ]
    
    A stream may specify a rate range using 'rate_min' and 'rate_max', so a
    stream may be valid and not specify any rates. However, as stream cannot
    be valid and not have any channel. Let's use this condition instead to
    determine if a stream is valid or not.
    
    Fixes: cde79035c6cf ("ASoC: Handle multiple codecs with split playback / capture")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd1ce3f27ba05819659b28a41d6885cac1cdca0d
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Apr 29 11:46:55 2019 -0400

    packet: in recvmsg msg_name return at least sizeof sockaddr_ll
    
    [ Upstream commit b2cf86e1563e33a14a1c69b3e508d15dc12f804c ]
    
    Packet send checks that msg_name is at least sizeof sockaddr_ll.
    Packet recv must return at least this length, so that its output
    can be passed unmodified to packet send.
    
    This ceased to be true since adding support for lladdr longer than
    sll_addr. Since, the return value uses true address length.
    
    Always return at least sizeof sockaddr_ll, even if address length
    is shorter. Zero the padding bytes.
    
    Change v1->v2: do not overwrite zeroed padding again. use copy_len.
    
    Fixes: 0fb375fb9b93 ("[AF_PACKET]: Allow for > 8 byte hardware addresses.")
    Suggested-by: David Laight <David.Laight@aculab.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a75405369e9cdb7509dd760c0213154e819c353
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Apr 17 14:44:42 2019 -0700

    scsi: qla2xxx: Avoid that qlt_send_resp_ctio() corrupts memory
    
    [ Upstream commit a861b49273578e255426a499842cf7f465456351 ]
    
    The "(&ctio->u.status1.sense_data)[i]" where i >= 0 expressions in
    qlt_send_resp_ctio() are probably typos and should have been
    "(&ctio->u.status1.sense_data[4 * i])" instead. Instead of only fixing
    these typos, modify the code for storing sense data such that it becomes
    easy to read. This patch fixes a Coverity complaint about accessing an
    array outside its bounds.
    
    Cc: Himanshu Madhani <hmadhani@marvell.com>
    Cc: Giridhar Malavali <gmalavali@marvell.com>
    Fixes: be25152c0d9e ("qla2xxx: Improve T10-DIF/PI handling in driver.") # v4.11.
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Acked-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab353598ceed8af45a9a83bf50b5e2056733742c
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Apr 17 14:44:11 2019 -0700

    scsi: qla2xxx: Fix a format specifier
    
    [ Upstream commit 19ce192cd718e02f880197c0983404ca48236807 ]
    
    Since mcmd->sess->port_name is eight bytes long, use %8phC to format that
    port name instead of %phC.
    
    Cc: Himanshu Madhani <hmadhani@marvell.com>
    Cc: Giridhar Malavali <gmalavali@marvell.com>
    Fixes: 726b85487067 ("qla2xxx: Add framework for async fabric discovery") # v4.11.
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Acked-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ded647fdda63e9dd50d51f1303768e673e6339c1
Author: Hongbo Yao <yaohongbo@huawei.com>
Date:   Mon Apr 8 22:01:03 2019 +0800

    irqchip/gic-v3-its: fix some definitions of inner cacheability attributes
    
    [ Upstream commit 0f29456d08042134aff6e562d07a6365c841c4ad ]
    
    Some definitions of Inner Cacheability attibutes need to be corrected.
    
    Fixes: 8c828a535e29f ("irqchip/gicv3-its: Restore all cacheability attributes")
    Signed-off-by: Hongbo Yao <yaohongbo@huawei.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5553f27402b64e7164d7ddf7b87bc5d48042433
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Sun Apr 7 13:59:02 2019 -0400

    NFS: Don't interrupt file writeout due to fatal errors
    
    [ Upstream commit 14bebe3c90b326d2a0df78aed5e9de090c71d878 ]
    
    When flushing out dirty pages, the fact that we may hit fatal errors
    is not a reason to stop writeback. Those errors are reported through
    fsync(), not through the flush mechanism.
    
    Fixes: a6598813a4c5b ("NFS: Don't write back further requests if there...")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1a19d86859db27a62762d9f6b49c80b85b29316
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 24 13:00:03 2019 +0200

    ALSA: usb-audio: Handle the error from snd_usb_mixer_apply_create_quirk()
    
    [ Upstream commit 328e9f6973be2ee67862cb17bf6c0c5c5918cd72 ]
    
    The error from snd_usb_mixer_apply_create_quirk() is ignored in the
    current usb-audio driver code, which will continue the probing even
    after the error.  Let's take it more serious.
    
    Fixes: 7b1eda223deb ("ALSA: usb-mixer: factor out quirks")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2722d16445fab8dde6166f12875e3b93a366a1a8
Author: Alexandru Ardelean <alexandru.ardelean@analog.com>
Date:   Tue Mar 26 16:05:20 2019 +0200

    dmaengine: axi-dmac: Don't check the number of frames for alignment
    
    [ Upstream commit 648865a79d8ee3d1aa64aab5eb2a9d12eeed14f9 ]
    
    In 2D transfers (for the AXI DMAC), the number of frames (numf) represents
    Y_LENGTH, and the length of a frame is X_LENGTH. 2D transfers are useful
    for video transfers where screen resolutions ( X * Y ) are typically
    aligned for X, but not for Y.
    
    There is no requirement for Y_LENGTH to be aligned to the bus-width (or
    anything), and this is also true for AXI DMAC.
    
    Checking the Y_LENGTH for alignment causes false errors when initiating DMA
    transfers. This change fixes this by checking only that the Y_LENGTH is
    non-zero.
    
    Fixes: 0e3b67b348b8 ("dmaengine: Add support for the Analog Devices AXI-DMAC DMA controller")
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d5d07b98b7dbfa0b87c02b5925498d5fd667993
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 3 08:34:16 2019 +0300

    6lowpan: Off by one handling ->nexthdr
    
    [ Upstream commit f57c4bbf34439531adccd7d3a4ecc14f409c1399 ]
    
    NEXTHDR_MAX is 255.  What happens here is that we take a u8 value
    "hdr->nexthdr" from the network and then look it up in
    lowpan_nexthdr_nhcs[].  The problem is that if hdr->nexthdr is 0xff then
    we read one element beyond the end of the array so the array needs to
    be one element larger.
    
    Fixes: 92aa7c65d295 ("6lowpan: add generic nhc layer interface")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Jukka Rissanen <jukka.rissanen@linux.intel.com>
    Acked-by: Alexander Aring <aring@mojatatu.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62ca24f153245509e1278c8fe62b6ec01f8a3739
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Sat Mar 30 10:01:32 2019 -0400

    media: ov2659: fix unbalanced mutex_lock/unlock
    
    [ Upstream commit 384538bda10913e5c94ec5b5d34bd3075931bcf4 ]
    
    Avoid returning with mutex locked.
    
    Fixes: fa8cb6444c32 ("[media] ov2659: Don't depend on subdev API")
    
    Cc: "Lad, Prabhakar" <prabhakar.csengg@gmail.com>
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Acked-by: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78f7e2aa4e4549429bb5d4ca8fdfca8c8cd237dd
Author: Vladimir Oltean <olteanv@gmail.com>
Date:   Fri Apr 12 02:23:14 2019 +0300

    ARM: dts: ls1021: Fix SGMII PCS link remaining down after PHY disconnect
    
    [ Upstream commit c7861adbe37f576931650ad8ef805e0c47564b9a ]
    
    Each eTSEC MAC has its own TBI (SGMII) PCS and private MDIO bus.
    But due to a DTS oversight, both SGMII-compatible MACs of the LS1021 SoC
    are pointing towards the same internal PCS. Therefore nobody is
    controlling the internal PCS of eTSEC0.
    
    Upon initial ndo_open, the SGMII link is ok by virtue of U-boot
    initialization. But upon an ifdown/ifup sequence, the code path from
    ndo_open -> init_phy -> gfar_configure_serdes does not get executed for
    the PCS of eTSEC0 (and is executed twice for MAC eTSEC1). So the SGMII
    link remains down for eTSEC0. On the LS1021A-TWR board, to signal this
    failure condition, the PHY driver keeps printing
    '803x_aneg_done: SGMII link is not ok'.
    
    Also, it changes compatible of mdio0 to "fsl,etsec2-mdio" to match
    mdio1 device.
    
    Fixes: 055223d4d22d ("ARM: dts: ls1021a: Enable the eTSEC ports on QDS and TWR")
    Signed-off-by: Vladimir Oltean <olteanv@gmail.com>
    Reviewed-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c707b68465f91759515e09783119a8cc2f802530
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Fri Mar 22 04:24:37 2019 +0000

    powerpc: vdso: Make vdso32 installation conditional in vdso_install
    
    [ Upstream commit ff6d27823f619892ab96f7461764840e0d786b15 ]
    
    The 32-bit vDSO is not needed and not normally built for 64-bit
    little-endian configurations.  However, the vdso_install target still
    builds and installs it.  Add the same config condition as is normally
    used for the build.
    
    Fixes: e0d005916994 ("powerpc/vdso: Disable building the 32-bit VDSO ...")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0d4d3bdf73f868e6afbec16395d1edc448651b0
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Apr 8 10:13:44 2019 -0700

    selftests/ipc: Fix msgque compiler warnings
    
    [ Upstream commit a147faa96f832f76e772b1e448e94ea84c774081 ]
    
    This fixes the various compiler warnings when building the msgque
    selftest. The primary change is using sys/msg.h instead of linux/msg.h
    directly to gain the API declarations.
    
    Fixes: 3a665531a3b7 ("selftests: IPC message queue copy feature test")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edefec3a6d59fad0902d8d2209442a593a6af6e6
Author: Jie Liu <liujie165@huawei.com>
Date:   Tue Apr 16 13:10:09 2019 +0800

    tipc: set sysctl_tipc_rmem and named_timeout right range
    
    [ Upstream commit 4bcd4ec1017205644a2697bccbc3b5143f522f5f ]
    
    We find that sysctl_tipc_rmem and named_timeout do not have the right minimum
    setting. sysctl_tipc_rmem should be larger than zero, like sysctl_tcp_rmem.
    And named_timeout as a timeout setting should be not less than zero.
    
    Fixes: cc79dd1ba9c10 ("tipc: change socket buffer overflow control to respect sk_rcvbuf")
    Fixes: a5325ae5b8bff ("tipc: add name distributor resiliency queue")
    Signed-off-by: Jie Liu <liujie165@huawei.com>
    Reported-by: Qiang Ning <ningqiang1@huawei.com>
    Reviewed-by: Zhiqiang Liu <liuzhiqiang26@huawei.com>
    Reviewed-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16d61aeda20bb6cd5c88f0c6c4bdc78ee9436d70
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Mar 30 00:17:12 2019 +0000

    platform/x86: alienware-wmi: fix kfree on potentially uninitialized pointer
    
    [ Upstream commit 98e2630284ab741804bd0713e932e725466f2f84 ]
    
    Currently the kfree of output.pointer can be potentially freeing
    an uninitalized pointer in the case where out_data is NULL. Fix this
    by reworking the case where out_data is not-null to perform the
    ACPI status check and also the kfree of outpoint.pointer in one block
    and hence ensuring the pointer is only freed when it has been used.
    
    Also replace the if (ptr != NULL) idiom with just if (ptr).
    
    Fixes: ff0e9f26288d ("platform/x86: alienware-wmi: Correct a memory leak")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec16a5a2cc3059b2d6571b7db1e9ad98cf7882ee
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Apr 5 08:44:41 2019 -0700

    hwmon: (w83627hf) Use request_muxed_region for Super-IO accesses
    
    [ Upstream commit e95fd518d05bfc087da6fcdea4900a57cfb083bd ]
    
    Super-IO accesses may fail on a system with no or unmapped LPC bus.
    
    Also, other drivers may attempt to access the LPC bus at the same time,
    resulting in undefined behavior.
    
    Use request_muxed_region() to ensure that IO access on the requested
    address space is supported, and to ensure that access by multiple drivers
    is synchronized.
    
    Fixes: b72656dbc491 ("hwmon: (w83627hf) Stop using globals for I/O port numbers")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2a71849205a6746f6013e71062c8e15e8ccdafd
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Mon Apr 15 21:48:39 2019 +0800

    net: hns3: fix for vport->bw_limit overflow problem
    
    [ Upstream commit 2566f10676ba996b745e138f54f3e2f974311692 ]
    
    When setting vport->bw_limit to hdev->tm_info.pg_info[0].bw_limit
    in hclge_tm_vport_tc_info_update, vport->bw_limit can be as big as
    HCLGE_ETHER_MAX_RATE (100000), which can not fit into u16 (65535).
    
    So this patch fixes it by using u32 for vport->bw_limit.
    
    Fixes: 848440544b41 ("net: hns3: Add support of TX Scheduler & Shaper to HNS3 driver")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7919eec49098a9c5172dd67132227d12e08b155
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Jan 29 16:03:24 2019 +0800

    ARM: pxa: ssp: Fix "WARNING: invalid free of devm_ allocated data"
    
    [ Upstream commit 9ee8578d953023cc57e7e736ae48502c707c0210 ]
    
    Since commit 1c459de1e645 ("ARM: pxa: ssp: use devm_ functions")
    kfree, iounmap, clk_put etc are not needed anymore in remove path.
    
    Fixes: 1c459de1e645 ("ARM: pxa: ssp: use devm_ functions")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    [ commit message spelling fix ]
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e03671470aebcb8f7b4f19997e047fbdc7f5b261
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Apr 2 12:58:05 2019 -0700

    scsi: target/core: Fix a race condition in the LUN lookup code
    
    [ Upstream commit 63f7479439c95bcd49b7dd4af809862c316c71a3 ]
    
    The rcu_dereference(deve->se_lun) expression occurs twice in the LUN lookup
    functions. Since these expressions are not serialized against deve->se_lun
    assignments each of these expressions may yield a different result. Avoid
    that the wrong LUN pointer is stored in se_cmd by reading deve->se_lun only
    once.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Nicholas Bellinger <nab@linux-iscsi.org>
    Fixes: 29a05deebf6c ("target: Convert se_node_acl->device_list[] to RCU hlist") # v4.10
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 770d2807dc789f27f21c5f6555f2b1c4e6db3a6d
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Apr 4 12:44:46 2019 -0700

    scsi: qla2xxx: Unregister chrdev if module initialization fails
    
    [ Upstream commit c794d24ec9eb6658909955772e70f34bef5b5b91 ]
    
    If module initialization fails after the character device has been
    registered, unregister the character device. Additionally, avoid
    duplicating error path code.
    
    Cc: Himanshu Madhani <hmadhani@marvell.com>
    Cc: Giridhar Malavali <giridhar.malavali@qlogic.com>
    Fixes: 6a03b4cd78f3 ("[SCSI] qla2xxx: Add char device to increase driver use count") # v2.6.35.
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 105f6b1ab3d04b6477cb1d45b4d8dba5e64c210e
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Apr 3 15:47:59 2019 +0800

    ehea: Fix a copy-paste err in ehea_init_port_res
    
    [ Upstream commit c8f191282f819ab4e9b47b22a65c6c29734cefce ]
    
    pr->tx_bytes should be assigned to tx_bytes other than
    rx_bytes.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: ce45b873028f ("ehea: Fixing statistics")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a040d2bf4437e0efd75a811207e79be3001cc5b9
Author: Martin Sperl <kernel@martin.sperl.org>
Date:   Sat Mar 30 09:31:02 2019 +0000

    spi: bcm2835aux: fix driver to not allow 65535 (=-1) cs-gpios
    
    [ Upstream commit 509c583620e9053e43d611bf1614fc3d3abafa96 ]
    
    The original driver by default defines num_chipselects as -1.
    This actually allicates an array of 65535 entries in
    of_spi_register_master.
    
    There is a side-effect for buggy device trees that (contrary to
    dt-binding documentation) have no cs-gpio defined.
    
    This mode was never supported by the driver due to limitations
    of native cs and additional code complexity and is explicitly
    not stated to be implemented.
    
    To keep backwards compatibility with such buggy DTs we limit
    the number of chip_selects to 1, as for all practical purposes
    it is only ever realistic to use a single chip select in
    native cs mode without negative side-effects.
    
    Fixes: 1ea29b39f4c812ec ("spi: bcm2835aux: add bcm2835 auxiliary spi device...")
    Signed-off-by: Martin Sperl <kernel@martin.sperl.org>
    Acked-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a96770dea1ba612fe7210bd7ad1dfa6b86ca948b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 28 17:18:41 2019 +0300

    soc/fsl/qe: Fix an error code in qe_pin_request()
    
    [ Upstream commit 5674a92ca4b7e5a6a19231edd10298d30324cd27 ]
    
    We forgot to set "err" on this error path.
    
    Fixes: 1a2d397a6eb5 ("gpio/powerpc: Eliminate duplication of of_get_named_gpio_flags()")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd9f7b6a0a4ffe6ff00454085c4f0abef44d221f
Author: Sowjanya Komatineni <skomatineni@nvidia.com>
Date:   Tue Mar 26 22:56:29 2019 -0700

    spi: tegra114: configure dma burst size to fifo trig level
    
    [ Upstream commit f4ce428c41fb22e3ed55496dded94df44cb920fa ]
    
    Fixes: Configure DMA burst size to be same as SPI TX/RX trigger levels
    to avoid mismatch.
    
    SPI FIFO trigger levels are calculated based on the transfer length.
    So this patch moves DMA slave configuration to happen before start
    of DMAs.
    
    Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 938f5d5d4802b99fcca2ae846f73e16cd77740ab
Author: Sowjanya Komatineni <skomatineni@nvidia.com>
Date:   Tue Mar 26 22:56:28 2019 -0700

    spi: tegra114: flush fifos
    
    [ Upstream commit c4fc9e5b28ff787e35137c2cc13316bb11d7657b ]
    
    Fixes: Flush TX and RX FIFOs before start of new transfer and on FIFO
    overflow or underrun errors.
    
    Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f24affc80580feff6a7517f8f716cfff04b63740
Author: Sowjanya Komatineni <skomatineni@nvidia.com>
Date:   Tue Mar 26 22:56:27 2019 -0700

    spi: tegra114: terminate dma and reset on transfer timeout
    
    [ Upstream commit 32bd1a9551cae34e6889afa235c7afdfede9aeac ]
    
    Fixes: terminate DMA and perform controller reset on transfer timeout
    to clear the FIFO's and errors.
    
    Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffd39bb17e492dc878ed4b72201d115f7522a015
Author: Sowjanya Komatineni <skomatineni@nvidia.com>
Date:   Tue Mar 26 22:56:24 2019 -0700

    spi: tegra114: fix for unpacked mode transfers
    
    [ Upstream commit 1a89ac5b91895127f7c586ec5075c3753ca25501 ]
    
    Fixes: computation of actual bytes to fill/receive in/from FIFO in unpacked
    mode when transfer length is not a multiple of requested bits per word.
    
    unpacked mode transfers fails when the transfer includes partial bytes in
    the last word.
    
    Total words to be written/read to/from FIFO is computed based on transfer
    length and bits per word. Unpacked mode includes 0 padding bytes for partial
    words to align with bits per word and these extra bytes are also accounted
    for calculating bytes left to transfer in the current driver.
    
    This causes extra bytes access of tx/rx buffers along with buffer index
    position crossing actual length where remain_len becomes negative and due to
    unsigned type, negative value is a 32 bit representation of signed value
    and transferred bytes never meets the actual transfer length resulting in
    transfer timeout and a hang.
    
    This patch fixes this with proper computation of the actual bytes to fill in
    FIFO during transmit and the actual bytes to read from FIFO during receive
    ignoring 0 padded bytes.
    
    Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58ac2bc9ce809985c78bf4855dfa69e8505e6bfc
Author: Sowjanya Komatineni <skomatineni@nvidia.com>
Date:   Tue Mar 26 22:56:23 2019 -0700

    spi: tegra114: clear packed bit for unpacked mode
    
    [ Upstream commit 7b3d10cdf54b8bc1dc0da21faed9789ac4da3684 ]
    
    Fixes: Clear packed bit when not using packed mode.
    
    Packed bit is not cleared when not using packed mode. This results
    in transfer timeouts for the unpacked mode transfers followed by the
    packed mode transfers.
    
    Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4c8d9e5ea524d7f53e54da2920a7d1250822ec5
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Mar 14 22:01:24 2019 -0400

    media: tw5864: Fix possible NULL pointer dereference in tw5864_handle_frame
    
    [ Upstream commit 2e7682ebfc750177a4944eeb56e97a3f05734528 ]
    
    'vb' null check should be done before dereferencing it in
    tw5864_handle_frame, otherwise a NULL pointer dereference
    may occur.
    
    Fixes: 34d1324edd31 ("[media] pci: Add tw5864 driver")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9162cb9cf6d9ed5e3b8d0fd6cdae4048b008e645
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Mar 22 10:34:22 2019 -0400

    media: davinci-isif: avoid uninitialized variable use
    
    [ Upstream commit 0e633f97162c1c74c68e2eb20bbd9259dce87cd9 ]
    
    clang warns about a possible variable use that gcc never
    complained about:
    
    drivers/media/platform/davinci/isif.c:982:32: error: variable 'frame_size' is uninitialized when used here
          [-Werror,-Wuninitialized]
                    dm365_vpss_set_pg_frame_size(frame_size);
                                                 ^~~~~~~~~~
    drivers/media/platform/davinci/isif.c:887:2: note: variable 'frame_size' is declared here
            struct vpss_pg_frame_size frame_size;
            ^
    1 error generated.
    
    There is no initialization for this variable at all, and there
    has never been one in the mainline kernel, so we really should
    not put that stack data into an mmio register.
    
    On the other hand, I suspect that gcc checks the condition
    more closely and notices that the global
    isif_cfg.bayer.config_params.test_pat_gen flag is initialized
    to zero and never written to from any code path, so anything
    depending on it can be eliminated.
    
    To shut up the clang warning, just remove the dead code manually,
    it has probably never been used because any attempt to do so
    would have resulted in undefined behavior.
    
    Fixes: 63e3ab142fa3 ("V4L/DVB: V4L - vpfe capture - source for ISIF driver on DM365")
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ea5302d4890fa1fd2277f9514c633c4c6ab5354
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Mar 21 11:00:21 2019 -0700

    ARM: OMAP2+: Fix potentially uninitialized return value for _setup_reset()
    
    [ Upstream commit 7f0d078667a494466991aa7133f49594f32ff6a2 ]
    
    Commit 747834ab8347 ("ARM: OMAP2+: hwmod: revise hardreset behavior") made
    the call to _enable() conditional based on no oh->rst_lines_cnt. This
    caused the return value to be potentially uninitialized. Curiously we see
    no compiler warnings for this, probably as this gets inlined.
    
    We call _setup_reset() from _setup() and only _setup_postsetup() if the
    return value is zero. Currently the return value can be uninitialized for
    cases where oh->rst_lines_cnt is set and HWMOD_INIT_NO_RESET is not set.
    
    Fixes: 747834ab8347 ("ARM: OMAP2+: hwmod: revise hardreset behavior")
    Cc: Paul Walmsley <paul@pwsan.com>
    Cc: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a8e28387cf4797860080bfeb09076540b4b4e53
Author: Maxime Ripard <mripard@kernel.org>
Date:   Mon Mar 25 14:52:50 2019 +0100

    arm64: dts: allwinner: a64: Add missing PIO clocks
    
    [ Upstream commit 562bf19611c000cb7219431c3cc78aa60c2b371e ]
    
    The pinctrl binding mandates that we have the three clocks fed into the PIO
    described.
    
    Even though the old case is still supported for backward compatibility, we
    should update our DTs to fix this.
    
    Fixes: 6bc37fac30cf ("arm64: dts: add Allwinner A64 SoC .dtsi")
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bd4bd3e35d156dda9c0da69ebdef0e83c3dd360
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Dec 1 11:53:10 2018 +1100

    m68k: mac: Fix VIA timer counter accesses
    
    [ Upstream commit 0ca7ce7db771580433bf24454f7a1542bd326078 ]
    
    This resolves some bugs that affect VIA timer counter accesses.
    Avoid lost interrupts caused by reading the counter low byte register.
    Make allowance for the fact that the counter will be decremented to
    0xFFFF before being reloaded.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34bb4eab1942bc1d54e4d14a8ddfc3be7904fe6e
Author: Jon Maloy <jon.maloy@ericsson.com>
Date:   Fri Mar 22 15:03:51 2019 +0100

    tipc: tipc clang warning
    
    [ Upstream commit 737889efe9713a0f20a75fd0de952841d9275e6b ]
    
    When checking the code with clang -Wsometimes-uninitialized we get the
    following warning:
    
    if (!tipc_link_is_establishing(l)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    net/tipc/node.c:847:46: note: uninitialized use occurs here
          tipc_bearer_xmit(n->net, bearer_id, &xmitq, maddr);
    
    net/tipc/node.c:831:2: note: remove the 'if' if its condition is always
    true
    if (!tipc_link_is_establishing(l)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    net/tipc/node.c:821:31: note: initialize the variable 'maddr' to silence
    this warning
    struct tipc_media_addr *maddr;
    
    We fix this by initializing 'maddr' to NULL. For the matter of clarity,
    we also test if 'xmitq' is non-empty before we use it and 'maddr'
    further down in the  function. It will never happen that 'xmitq' is non-
    empty at the same time as 'maddr' is NULL, so this is a sufficient test.
    
    Fixes: 598411d70f85 ("tipc: make resetting of links non-atomic")
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2f301a5a385581a38e740379126a3800417924c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Mar 22 15:19:16 2019 +0100

    jfs: fix bogus variable self-initialization
    
    [ Upstream commit a5fdd713d256887b5f012608701149fa939e5645 ]
    
    A statement was originally added in 2006 to shut up a gcc warning,
    now but now clang warns about it:
    
    fs/jfs/jfs_txnmgr.c:1932:15: error: variable 'pxd' is uninitialized when used within its own initialization
          [-Werror,-Wuninitialized]
                    pxd_t pxd = pxd;        /* truncated extent of xad */
                          ~~~   ^~~
    
    Modern versions of gcc are fine without the silly assignment, so just
    drop it. Tested with gcc-4.6 (released 2011), 4.7, 4.8, and 4.9.
    
    Fixes: c9e3ad6021e5 ("JFS: Get rid of "may be used uninitialized" warnings")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96ef352408a62a567c38b02b39bb87a5efb4c375
Author: Axel Lin <axel.lin@ingics.com>
Date:   Mon Mar 4 16:57:52 2019 +0800

    regulator: tps65086: Fix tps65086_ldoa1_ranges for selector 0xB
    
    [ Upstream commit e69b394703e032e56a140172440ec4f9890b536d ]
    
    selector 0xB (1011) should be 2.6V rather than 2.7V, fit ix.
    
    Table 5-4. LDOA1 Output Voltage Options
    VID Bits VOUT VID Bits VOUT VID Bits VOUT VID Bits VOUT
    0000     1.35 0100     1.8  1000     2.3  1100     2.85
    0001     1.5  0101     1.9  1001     2.4  1101     3.0
    0010     1.6  0110     2.0  1010     2.5  1110     3.3
    0011     1.7  0111     2.1  1011     2.6  1111     Not Used
    
    Fixes: d2a2e729a666 ("regulator: tps65086: Add regulator driver for the TPS65086 PMIC")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f51a1bbe9fecdd7f7bdf7e58287bc0beda5d404
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Sat Jan 19 22:52:23 2019 -0500

    media: cx23885: check allocation return
    
    [ Upstream commit a3d7f22ef34ec4206b50ee121384d5c8bebd5591 ]
    
    Checking of kmalloc() seems to have been committed - as
    cx23885_dvb_register() is checking for != 0 return, returning
    -ENOMEM should be fine here.  While at it address the coccicheck
    suggestion to move to kmemdup rather than using kmalloc+memcpy.
    
    Fixes: 46b21bbaa8a8 ("[media] Add support for DViCO FusionHDTV DVB-T Dual Express2")
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d53d5a2de14502ff1a62764e67568a68a558f1b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 6 02:27:43 2019 -0500

    media: wl128x: Fix an error code in fm_download_firmware()
    
    [ Upstream commit ef4bb63dc1f7213c08e13f6943c69cd27f69e4a3 ]
    
    We forgot to set "ret" on this error path.
    
    Fixes: e8454ff7b9a4 ("[media] drivers:media:radio: wl128x: FM Driver Common sources")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ae3b318c93ee18af1144fb11df995ba7bd7a190
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Feb 22 01:37:02 2019 -0500

    media: cx18: update *pos correctly in cx18_read_pos()
    
    [ Upstream commit 7afb0df554292dca7568446f619965fb8153085d ]
    
    We should be updating *pos.  The current code is a no-op.
    
    Fixes: 1c1e45d17b66 ("V4L/DVB (7786): cx18: new driver for the Conexant CX23418 MPEG encoder chip")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9ce28072898cafd5a06ac7a7b29c2827ae7125b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Feb 22 01:36:41 2019 -0500

    media: ivtv: update *pos correctly in ivtv_read_pos()
    
    [ Upstream commit f8e579f3ca0973daef263f513da5edff520a6c0d ]
    
    We had intended to update *pos, but the current code is a no-op.
    
    Fixes: 1a0adaf37c30 ("V4L/DVB (5345): ivtv driver for Conexant cx23416/cx23415 MPEG encoder/decoder")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0d7c1cbd50bc1d32e37ea9b92c30b66075979b5
Author: Axel Lin <axel.lin@ingics.com>
Date:   Fri Mar 1 14:16:40 2019 +0800

    regulator: lp87565: Fix missing register for LP87565_BUCK_0
    
    [ Upstream commit d1a6cbdf1e597917cb642c655512d91b71a35d22 ]
    
    LP87565_BUCK_0 is missed, fix it.
    
    Fixes: f0168a9bf ("regulator: lp87565: Add support for lp87565 PMIC regulators")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Reviewed-by: Keerthy <j-keerthy@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ef50cb11df1163b45ac989df6b235a09a42c772
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Mar 12 02:43:18 2019 -0500

    net: sh_eth: fix a missing check of of_get_phy_mode
    
    [ Upstream commit 035a14e71f27eefa50087963b94cbdb3580d08bf ]
    
    of_get_phy_mode may fail and return a negative error code;
    the fix checks the return value of of_get_phy_mode and
    returns NULL of it fails.
    
    Fixes: b356e978e92f ("sh_eth: add device tree support")
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Tested-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cd5e08b9af2b40ca7537ec2c66f1459cd95ad8b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 7 08:41:22 2019 +0300

    xen, cpu_hotplug: Prevent an out of bounds access
    
    [ Upstream commit 201676095dda7e5b31a5e1d116d10fc22985075e ]
    
    The "cpu" variable comes from the sscanf() so Smatch marks it as
    untrusted data.  We can't pass a higher value than "nr_cpu_ids" to
    cpu_possible() or it results in an out of bounds access.
    
    Fixes: d68d82afd4c8 ("xen: implement CPU hotplugging")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ba5c4da88ae802ba8f43710d2965aa0ecba6492
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 7 16:29:33 2019 -0800

    drivers/rapidio/rio_cm.c: fix potential oops in riocm_ch_listen()
    
    [ Upstream commit 5ac188b12e7cbdd92dee60877d1fac913fc1d074 ]
    
    If riocm_get_channel() fails, then we should just return -EINVAL.
    Calling riocm_put_channel() will trigger a NULL dereference and
    generally we should call put() if the get() didn't succeed.
    
    Link: http://lkml.kernel.org/r/20190110130230.GB27017@kadam
    Fixes: b6e8d4aa1110 ("rapidio: add RapidIO channelized messaging driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Alexandre Bounine <alexandre.bounine@idt.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6bf70766f60c396a8e4cb3ff0385cca93a4b1c9
Author: Steve Sistare <steven.sistare@oracle.com>
Date:   Fri Mar 1 06:46:28 2019 -0800

    scsi: megaraid_sas: reduce module load time
    
    [ Upstream commit 31b6a05f86e690e1818116fd23c3be915cc9d9ed ]
    
    megaraid_sas takes 1+ seconds to load while waiting for firmware:
    
    [2.822603] megaraid_sas 0000:03:00.0: Waiting for FW to come to ready state
    [3.871003] megaraid_sas 0000:03:00.0: FW now in Ready state
    
    This is due to the following loop in megasas_transition_to_ready(), which
    waits a minimum of 1 second, even though the FW becomes ready in tens of
    millisecs:
    
            /*
             * The cur_state should not last for more than max_wait secs
             */
            for (i = 0; i < max_wait; i++) {
                    ...
                    msleep(1000);
            ...
            dev_info(&instance->pdev->dev, "FW now in Ready state\n");
    
    This is a regression, caused by a change of the msleep granularity from 1
    to 1000 due to concern about waiting too long on systems with coarse
    jiffies.
    
    To fix, increase iterations and use msleep(20), which results in:
    
    [2.670627] megaraid_sas 0000:03:00.0: Waiting for FW to come to ready state
    [2.739386] megaraid_sas 0000:03:00.0: FW now in Ready state
    
    Fixes: fb2f3e96d80f ("scsi: megaraid_sas: Fix msleep granularity")
    Signed-off-by: Steve Sistare <steven.sistare@oracle.com>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba0c43da8f5d7cb2942ccf2780ad9c67ed7ba042
Author: Qian Cai <cai@lca.pw>
Date:   Thu Feb 28 17:01:55 2019 -0500

    x86/mm: Remove unused variable 'cpu'
    
    [ Upstream commit 3609e31bc8dc03b701390f79c74fc7fe92b95039 ]
    
    The commit a2055abe9c67 ("x86/mm: Pass flush_tlb_info to
    flush_tlb_others() etc") removed the unnecessary cpu parameter from
    uv_flush_tlb_others() but left an unused variable.
    
    arch/x86/mm/tlb.c: In function 'native_flush_tlb_others':
    arch/x86/mm/tlb.c:688:16: warning: variable 'cpu' set but not used
    [-Wunused-but-set-variable]
       unsigned int cpu;
                    ^~~
    
    Fixes: a2055abe9c67 ("x86/mm: Pass flush_tlb_info to flush_tlb_others() etc")
    Signed-off-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andyt Lutomirski <luto@kernel.org>
    Cc: dave.hansen@linux.intel.com
    Cc: peterz@infradead.org
    Cc: bp@alien8.de
    Cc: hpa@zytor.com
    Link: https://lkml.kernel.org/r/20190228220155.88124-1-cai@lca.pw
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3323a093f3af8a715ce76c7d0783b1ac3a0cf93
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Nov 7 10:36:10 2018 +0800

    nios2: ksyms: Add missing symbol exports
    
    [ Upstream commit 0f8ed994575429d6042cf5d7ef70081c94091587 ]
    
    Building nios2:allmodconfig fails as follows (each symbol is only listed
    once).
    
    ERROR: "__ashldi3" [drivers/md/dm-writecache.ko] undefined!
    ERROR: "__ashrdi3" [fs/xfs/xfs.ko] undefined!
    ERROR: "__ucmpdi2" [drivers/media/i2c/adv7842.ko] undefined!
    ERROR: "__lshrdi3" [drivers/md/dm-zoned.ko] undefined!
    ERROR: "flush_icache_range" [drivers/misc/lkdtm/lkdtm.ko] undefined!
    ERROR: "empty_zero_page" [drivers/md/dm-mod.ko] undefined!
    
    The problem is seen with gcc 7.3.0.
    
    Export the missing symbols.
    
    Fixes: 2fc8483fdcde ("nios2: Build infrastructure")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ley Foon Tan <ley.foon.tan@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43f5a75119f6d03f88b6c59ca2745934d72ea698
Author: Rashmica Gupta <rashmica.g@gmail.com>
Date:   Wed Feb 13 10:29:49 2019 +1100

    powerpc/mm: Check secondary hash page table
    
    [ Upstream commit 790845e2f12709d273d08ea7a2af7c2593689519 ]
    
    We were always calling base_hpte_find() with primary = true,
    even when we wanted to check the secondary table.
    
    mpe: I broke this when refactoring Rashmica's original patch.
    
    Fixes: 1515ab932156 ("powerpc/mm: Dump hash table")
    Signed-off-by: Rashmica Gupta <rashmica.g@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b24a4144fbd078e6665ba8c64e6611eb14cecc5
Author: Igor Russkikh <Igor.Russkikh@aquantia.com>
Date:   Wed Feb 27 12:10:09 2019 +0000

    net: aquantia: fixed instack structure overflow
    
    [ Upstream commit 8006e3730b6e900319411e35cee85b4513d298df ]
    
    This is a real stack undercorruption found by kasan build.
    
    The issue did no harm normally because it only overflowed
    2 bytes after `bitary` array which on most architectures
    were mapped into `err` local.
    
    Fixes: bab6de8fd180 ("net: ethernet: aquantia: Atlantic A0 and B0 specific functions.")
    Signed-off-by: Nikita Danilov <nikita.danilov@aquantia.com>
    Signed-off-by: Igor Russkikh <igor.russkikh@aquantia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76cc6d437e1349c34ef08fb428d1e4ef0c912c9d
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Feb 26 11:19:46 2019 -0500

    NFSv4/flexfiles: Fix invalid deref in FF_LAYOUT_DEVID_NODE()
    
    [ Upstream commit 108bb4afd351d65826648a47f11fa3104e250d9b ]
    
    If the attempt to instantiate the mirror's layout DS pointer failed,
    then that pointer may hold a value of type ERR_PTR(), so we need
    to check that before we dereference it.
    
    Fixes: 65990d1afbd2d ("pNFS/flexfiles: Fix a deadlock on LAYOUTGET")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 223b167f01e30201e5de6db87b273ba5a36992a4
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Feb 25 14:13:41 2019 +0100

    netfilter: nft_set_hash: fix lookups with fixed size hash on big endian
    
    [ Upstream commit 3b02b0adc242a72b5e46019b6a9e4f84823592f6 ]
    
    Call jhash_1word() for the 4-bytes key case from the insertion and
    deactivation path, otherwise big endian arch set lookups fail.
    
    Fixes: 446a8268b7f5 ("netfilter: nft_set_hash: add lookup variant for fixed size hashtable")
    Reported-by: Florian Westphal <fw@strlen.de>
    Tested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79db752d9004b3a77528078b68de18861805b800
Author: Axel Lin <axel.lin@ingics.com>
Date:   Sun Feb 24 21:16:51 2019 +0800

    regulator: wm831x-dcdc: Fix list of wm831x_dcdc_ilim from mA to uA
    
    [ Upstream commit c25d47888f0fb3d836d68322d4aea2caf31a75a6 ]
    
    The wm831x_dcdc_ilim entries needs to be uA because it is used to compare
    with min_uA and max_uA.
    While at it also make the array const and change to use unsigned int.
    
    Fixes: e4ee831f949a ("regulator: Add WM831x DC-DC buck convertor support")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a65ea1ea865e74490b2cb186d3ce3f934b9550d
Author: Vladimir Murzin <vladimir.murzin@arm.com>
Date:   Wed Feb 20 15:00:13 2019 +0100

    ARM: 8848/1: virt: Align GIC version check with arm64 counterpart
    
    [ Upstream commit 9db043d36bd379f4cc99054c079de0dabfc38d03 ]
    
    arm64 has got relaxation on GIC version check at early boot stage due
    to update of the GIC architecture let's align ARM with that.
    
    To help backports (even though the code was correct at the time of writing)
    Fixes: e59941b9b381 ("ARM: 8527/1: virt: enable GICv3 system registers")
    Signed-off-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit feb8ad9508f6fbba81b99cf25af1de7bee72c7b3
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Feb 18 09:31:41 2019 +0100

    ARM: 8847/1: pm: fix HYP/SVC mode mismatch when MCPM is used
    
    [ Upstream commit ca70ea43f80c98582f5ffbbd1e6f4da2742da0c4 ]
    
    MCPM does a soft reset of the CPUs and uses common cpu_resume() routine to
    perform low-level platform initialization. This results in a try to install
    HYP stubs for the second time for each CPU and results in false HYP/SVC
    mode mismatch detection. The HYP stubs are already installed at the
    beginning of the kernel initialization on the boot CPU (head.S) or in the
    secondary_startup() for other CPUs. To fix this issue MCPM code should use
    a cpu_resume() routine without HYP stubs installation.
    
    This change fixes HYP/SVC mode mismatch on Samsung Exynos5422-based Odroid
    XU3/XU4/HC1 boards.
    
    Fixes: 3721924c8154 ("ARM: 8081/1: MCPM: provide infrastructure to allow for MCPM loopback")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Anand Moon <linux.amoon@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d95167b06b8696044c516891e0c51be7dd34e631
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Sun Dec 23 21:59:18 2018 +0100

    mmc: sdhci-brcmstb: handle mmc_of_parse() errors during probe
    
    [ Upstream commit 1e20186e706da8446f9435f2924cd65ab1397e73 ]
    
    We need to handle mmc_of_parse() errors during probe otherwise the
    MMC driver could start without proper initialization (e.g. power sequence).
    
    Fixes: 476bf3d62d5c ("mmc: sdhci-brcmstb: Add driver for Broadcom BRCMSTB SoCs")
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cf0f51cc94c3e29ffc345f82468fe7c29df3b5b
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Fri Feb 22 14:20:27 2019 -0500

    NFS/pnfs: Bulk destroy of layouts needs to be safe w.r.t. umount
    
    [ Upstream commit 5085607d209102b37b169bc94d0aa39566a9842a ]
    
    If a bulk layout recall or a metadata server reboot coincides with a
    umount, then holding a reference to an inode is unsafe unless we
    also hold a reference to the super block.
    
    Fixes: fd9a8d7160937 ("NFSv4.1: Fix bulk recall and destroy of layouts")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fdf4970d3f8832525554a4f0a79d71ecc469e1b
Author: Mattias Jacobsson <2pi@mok.nu>
Date:   Wed Jan 30 16:14:24 2019 +0100

    platform/x86: wmi: fix potential null pointer dereference
    
    [ Upstream commit c355ec651a8941864549f2586f969d0eb7bf499a ]
    
    In the function wmi_dev_match() the variable id is dereferenced without
    first performing a NULL check. The variable can for example be NULL if
    a WMI driver is registered without specifying the id_table field in
    struct wmi_driver.
    
    Add a NULL check and return that the driver can't handle the device if
    the variable is NULL.
    
    Fixes: 844af950da94 ("platform/x86: wmi: Turn WMI into a bus driver")
    Signed-off-by: Mattias Jacobsson <2pi@mok.nu>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba95507ae390062f5af1e8de76c8161fcc69eade
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Oct 18 11:57:04 2018 +0200

    clocksource/drivers/exynos_mct: Fix error path in timer resources initialization
    
    [ Upstream commit b9307420196009cdf18bad55e762ac49fb9a80f4 ]
    
    While freeing interrupt handlers in error path, don't assume that all
    requested interrupts are per-processor interrupts and properly release
    standard interrupts too.
    
    Reported-by: Krzysztof Kozlowski <krzk@kernel.org>
    Fixes: 56a94f13919c ("clocksource: exynos_mct: Avoid blocking calls in the cpu hotplug notifier")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc423232fb93e234e8e43edc0ca1cda830e48e21
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Thu Jan 10 14:22:07 2019 +0800

    clocksource/drivers/sun5i: Fail gracefully when clock rate is unavailable
    
    [ Upstream commit e7e7e0d7beafebd11b0c065cd5fbc1e5759c5aab ]
    
    If the clock tree is not fully populated when the timer-sun5i init code
    is called, attempts to get the clock rate for the timer would fail and
    return 0.
    
    Make the init code for both clock events and clocksource check the
    returned clock rate and fail gracefully if the result is 0, instead of
    causing a divide by 0 exception later on.
    
    Fixes: 4a59058f0b09 ("clocksource/drivers/sun5i: Refactor the current code")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Acked-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a155d39d1e4c1b7e7edcc8885742a87c2c479cd6
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Feb 21 14:51:25 2019 -0500

    NFS: Fix a soft lockup in the delegation recovery code
    
    [ Upstream commit 6f9449be53f3ce383caed797708b332ede8d952c ]
    
    Fix a soft lockup when NFS client delegation recovery is attempted
    but the inode is in the process of being freed. When the
    igrab(inode) call fails, and we have to restart the recovery process,
    we need to ensure that we won't attempt to recover the same delegation
    again.
    
    Fixes: 45870d6909d5a ("NFSv4.1: Test delegation stateids when server...")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afdb6f57d778dff7b58e7e1cba5d12ca9baff795
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Feb 11 11:20:01 2019 +1100

    powerpc/64s: Fix logic when handling unknown CPU features
    
    [ Upstream commit 8cfaf106918a8c13abb24c641556172afbb9545c ]
    
    In cpufeatures_process_feature(), if a provided CPU feature is unknown and
    enable_unknown is false, we erroneously print that the feature is being
    enabled and return true, even though no feature has been enabled, and
    may also set feature bits based on the last entry in the match table.
    
    Fix this so that we only set feature bits from the match table if we have
    actually enabled a feature from that table, and when failing to enable an
    unknown feature, always print the "not enabling" message and return false.
    
    Coincidentally, some older gccs (<GCC 7), when invoked with
    -fsanitize-coverage=trace-pc, cause a spurious uninitialised variable
    warning in this function:
    
      arch/powerpc/kernel/dt_cpu_ftrs.c: In function ‘cpufeatures_process_feature’:
      arch/powerpc/kernel/dt_cpu_ftrs.c:686:7: warning: ‘m’ may be used uninitialized in this function [-Wmaybe-uninitialized]
        if (m->cpu_ftr_bit_mask)
    
    An upcoming patch will enable support for kcov, which requires this option.
    This patch avoids the warning.
    
    Fixes: 5a61ef74f269 ("powerpc/64s: Support new device tree binding for discovering CPU features")
    Reported-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    [ajd: add commit message]
    Signed-off-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ada2bd122e42038dd0df468d1642095a05a33be
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Feb 20 22:25:24 2019 -0700

    staging: rtlwifi: Use proper enum for return in halmac_parse_psd_data_88xx
    
    [ Upstream commit e8edc32d70a4e09160835792eb5d1af71a0eec14 ]
    
    Clang warns:
    
    drivers/staging/rtlwifi/halmac/halmac_88xx/halmac_func_88xx.c:2472:11:
    warning: implicit conversion from enumeration type 'enum
    halmac_cmd_process_status' to different enumeration type 'enum
    halmac_ret_status' [-Wenum-conversion]
                            return HALMAC_CMD_PROCESS_ERROR;
                            ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~
    1 warning generated.
    
    Fix this by using the proper enum for allocation failures,
    HALMAC_RET_MALLOC_FAIL, which is used in the rest of this file.
    
    Fixes: e4b08e16b7d9 ("staging: r8822be: check kzalloc return or bail")
    Link: https://github.com/ClangBuiltLinux/linux/issues/375
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69c5a33b72bd84a36a158c7a0401c67d776ddeec
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Jan 30 07:58:38 2019 -0600

    fs/nfs: Fix nfs_parse_devname to not modify it's argument
    
    [ Upstream commit 40cc394be1aa18848b8757e03bd8ed23281f572e ]
    
    In the rare and unsupported case of a hostname list nfs_parse_devname
    will modify dev_name.  There is no need to modify dev_name as the all
    that is being computed is the length of the hostname, so the computed
    length can just be shorted.
    
    Fixes: dc04589827f7 ("NFS: Use common device name parsing logic for NFSv4 and NFSv2/v3")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23e85b26ea102e64d39e1d12e109d65b51d27575
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 19 16:46:50 2019 +0100

    ASoC: qcom: Fix of-node refcount unbalance in apq8016_sbc_parse_of()
    
    [ Upstream commit 8d1667200850f8753c0265fa4bd25c9a6e5f94ce ]
    
    The apq8016 driver leaves the of-node refcount at aborting from the
    loop of for_each_child_of_node() in the error path.  Not only the
    iterator node of for_each_child_of_node(), the children nodes referred
    from it for codec and cpu have to be properly unreferenced.
    
    Fixes: bdb052e81f62 ("ASoC: qcom: add apq8016 sound card support")
    Cc: Patrick Lai <plai@codeaurora.org>
    Cc: Banajit Goswami <bgoswami@codeaurora.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cdadf8223915491fd3b774581b199b76fcc48e0
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Dec 19 15:29:49 2018 +0000

    drm/nouveau/pmu: don't print reply values if exec is false
    
    [ Upstream commit b1d03fc36ec9834465a08c275c8d563e07f6f6bf ]
    
    Currently the uninitialized values in the array reply are printed out
    when exec is false and nvkm_pmu_send has not updated the array. Avoid
    confusion by only dumping out these values if they have been actually
    updated.
    
    Detected by CoverityScan, CID#1271291 ("Uninitialized scaler variable")
    Fixes: ebb58dc2ef8c ("drm/nouveau/pmu: rename from pwr (no binary change)")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fd24a6a8a063c064a664797d4913d5f365f56a2
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sun Nov 25 17:09:18 2018 +0000

    drm/nouveau/bios/ramcfg: fix missing parentheses when calculating RON
    
    [ Upstream commit 13649101a25c53c87f4ab98a076dfe61f3636ab1 ]
    
    Currently, the expression for calculating RON is always going to result
    in zero no matter the value of ram->mr[1] because the ! operator has
    higher precedence than the shift >> operator.  I believe the missing
    parentheses around the expression before appying the ! operator will
    result in the desired result.
    
    [ Note, not tested ]
    
    Detected by CoveritScan, CID#1324005 ("Operands don't affect result")
    
    Fixes: c25bf7b6155c ("drm/nouveau/bios/ramcfg: Separate out RON pull value")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4ece3516ea926242fdeed6975a5751a203656ab
Author: Vinod Koul <vkoul@kernel.org>
Date:   Tue Feb 19 12:29:43 2019 +0530

    net: dsa: qca8k: Enable delay for RGMII_ID mode
    
    [ Upstream commit a968b5e9d5879f9535d6099505f9e14abcafb623 ]
    
    RGMII_ID specifies that we should have internal delay, so resurrect the
    delay addition routine but under the RGMII_ID mode.
    
    Fixes: 40269aa9f40a ("net: dsa: qca8k: disable delay for RGMII mode")
    Tested-by: Michal Vokáč <michal.vokac@ysoft.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2797d17a7a22aa4480733df4b983bd8cc94aac0a
Author: Axel Lin <axel.lin@ingics.com>
Date:   Tue Feb 19 18:00:02 2019 +0800

    regulator: pv88090: Fix array out-of-bounds access
    
    [ Upstream commit a5455c9159414748bed4678184bf69989a4f7ba3 ]
    
    Fix off-by-one while iterating current_limits array.
    The valid index should be 0 ~ n_current_limits -1.
    
    Fixes: c90456e36d9c ("regulator: pv88090: new regulator driver")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecd54f78e7156ec2ee15c6f017e1f0e10cbc7bf5
Author: Axel Lin <axel.lin@ingics.com>
Date:   Tue Feb 19 18:00:01 2019 +0800

    regulator: pv88080: Fix array out-of-bounds access
    
    [ Upstream commit 3c413f594c4f9df40061445667ca11a12bc8ee34 ]
    
    Fix off-by-one while iterating current_limits array.
    The valid index should be 0 ~ n_current_limits -1.
    
    Fixes: 99cf3af5e2d5 ("regulator: pv88080: new regulator driver")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea988ebd9f2a774d9c9b0f996a88e0890643d773
Author: Axel Lin <axel.lin@ingics.com>
Date:   Tue Feb 19 18:00:00 2019 +0800

    regulator: pv88060: Fix array out-of-bounds access
    
    [ Upstream commit 7cd415f875591bc66c5ecb49bf84ef97e80d7b0e ]
    
    Fix off-by-one while iterating current_limits array.
    The valid index should be 0 ~ n_current_limits -1.
    
    Fixes: f307a7e9b7af ("regulator: pv88060: new regulator driver")
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2792ec5b8af1b98a0e9488860178088106f198fa
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Feb 18 22:34:51 2019 +0800

    cdc-wdm: pass return value of recover_from_urb_loss
    
    [ Upstream commit 0742a338f5b3446a26de551ad8273fb41b2787f2 ]
    
    'rv' is the correct return value, pass it upstream instead of 0
    
    Fixes: 17d80d562fd7 ("USB: autosuspend for cdc-wdm")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11d671a2d81df342d448322cbf2935d2a45a45a1
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Mon Feb 18 18:27:06 2019 +0000

    dmaengine: mv_xor: Use correct device for DMA API
    
    [ Upstream commit 3e5daee5ecf314da33a890fabaa2404244cd2a36 ]
    
    Using dma_dev->dev for mappings before it's assigned with the correct
    device is unlikely to work as expected, and with future dma-direct
    changes, passing a NULL device may end up crashing entirely. I don't
    know enough about this hardware or the mv_xor_prep_dma_interrupt()
    operation to implement the appropriate error-handling logic that would
    have revealed those dma_map_single() calls failing on arm64 for as long
    as the driver has been enabled there, but moving the assignment earlier
    will at least make the current code operate as intended.
    
    Fixes: 22843545b200 ("dma: mv_xor: Add support for DMA_INTERRUPT")
    Reported-by: John David Anglin <dave.anglin@bell.net>
    Tested-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Acked-by: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
    Tested-by: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e4d478a2878419f981631bea5521d59e083768e
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Fri Feb 15 10:24:22 2019 +0100

    staging: r8822be: check kzalloc return or bail
    
    [ Upstream commit e4b08e16b7d9d030b6475ef48f94d734a39f3c81 ]
    
    The kzalloc() in halmac_parse_psd_data_88xx() can fail and return NULL
    so check the psd_set->data after allocation and if allocation failed
    return HALMAC_CMD_PROCESS_ERROR.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Fixes: 938a0447f094 ("staging: r8822be: Add code for halmac sub-drive")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3af53fe7cffc149f38f93ad8da77b99c0425ef06
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Tue Feb 12 15:37:45 2019 +1100

    KVM: PPC: Release all hardware TCE tables attached to a group
    
    [ Upstream commit a67614cc05a5052b265ea48196dab2fce11f5f2e ]
    
    The SPAPR TCE KVM device references all hardware IOMMU tables assigned to
    some IOMMU group to ensure that in-kernel KVM acceleration of H_PUT_TCE
    can work. The tables are references when an IOMMU group gets registered
    with the VFIO KVM device by the KVM_DEV_VFIO_GROUP_ADD ioctl;
    KVM_DEV_VFIO_GROUP_DEL calls into the dereferencing code
    in kvm_spapr_tce_release_iommu_group() which walks through the list of
    LIOBNs, finds a matching IOMMU table and calls kref_put() when found.
    
    However that code stops after the very first successful derefencing
    leaving other tables referenced till the SPAPR TCE KVM device is destroyed
    which normally happens on guest reboot or termination so if we do hotplug
    and unplug in a loop, we are leaking IOMMU tables here.
    
    This removes a premature return to let kvm_spapr_tce_release_iommu_group()
    find and dereference all attached tables.
    
    Fixes: 121f80ba68f ("KVM: PPC: VFIO: Add in-kernel acceleration for VFIO")
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be889c947784c83f8eb69156c23cc36067fb8226
Author: Vadim Pasternak <vadimp@mellanox.com>
Date:   Mon Feb 18 19:54:40 2019 +0000

    hwmon: (pmbus/tps53679) Fix driver info initialization in probe routine
    
    [ Upstream commit ff066653aeed8ee2d4dadb1e35774dd91ecbb19f ]
    
    Fix tps53679_probe() by using dynamically allocated "pmbus_driver_info"
    structure instead of static. Usage of static structures causes
    overwritten of the field "vrm_version", in case the system is equipped
    with several tps53679 devices with the different "vrm_version".
    In such case the last probed device overwrites this field for all
    others.
    
    Fixes: 610526527a13 ("hwmon: (pmbus) Add support for Texas Instruments tps53679 device")
    Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6de29266dd3971d38956ee4d3b1fefee6cb4cbe5
Author: Eric Auger <eric.auger@redhat.com>
Date:   Fri Feb 15 17:16:06 2019 +0100

    vfio_pci: Enable memory accesses before calling pci_map_rom
    
    [ Upstream commit 0cfd027be1d6def4a462cdc180c055143af24069 ]
    
    pci_map_rom/pci_get_rom_size() performs memory access in the ROM.
    In case the Memory Space accesses were disabled, readw() is likely
    to trigger a synchronous external abort on some platforms.
    
    In case memory accesses were disabled, re-enable them before the
    call and disable them back again just after.
    
    Fixes: 89e1f7d4c66d ("vfio: Add PCI device driver")
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Suggested-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0515d58763c039d326172e1aeed5c6a96a52b4c
Author: David Howells <dhowells@redhat.com>
Date:   Thu Feb 14 16:20:37 2019 +0000

    keys: Timestamp new keys
    
    [ Upstream commit 7c1857bdbdf1e4c541e45eab477ee23ed4333ea4 ]
    
    Set the timestamp on new keys rather than leaving it unset.
    
    Fixes: 31d5a79d7f3d ("KEYS: Do LRU discard in full keyrings")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa8552dae83acba4c9442fadbddab1d278168531
Author: Ming Lei <ming.lei@redhat.com>
Date:   Fri Feb 15 19:13:08 2019 +0800

    block: don't use bio->bi_vcnt to figure out segment number
    
    [ Upstream commit 1a67356e9a4829da2935dd338630a550c59c8489 ]
    
    It is wrong to use bio->bi_vcnt to figure out how many segments
    there are in the bio even though CLONED flag isn't set on this bio,
    because this bio may be splitted or advanced.
    
    So always use bio_segments() in blk_recount_segments(), and it shouldn't
    cause any performance loss now because the physical segment number is figured
    out in blk_queue_split() and BIO_SEG_VALID is set meantime since
    bdced438acd83ad83a6c ("block: setup bi_phys_segments after splitting").
    
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Fixes: 76d8137a3113 ("blk-merge: recaculate segment if it isn't less than max segments")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30cf71254f9f661906f5c3eac379723899a5633e
Author: Sven Van Asbroeck <thesven73@gmail.com>
Date:   Mon Feb 11 10:04:26 2019 -0500

    usb: phy: twl6030-usb: fix possible use-after-free on remove
    
    [ Upstream commit 5895d311d28f2605e2f71c1a3e043ed38f3ac9d2 ]
    
    In remove(), use cancel_delayed_work_sync() to cancel the
    delayed work. Otherwise there's a chance that this work
    will continue to run until after the device has been removed.
    
    This issue was detected with the help of Coccinelle.
    
    Cc: Tony Lindgren <tony@atomide.com>
    Cc: Bin Liu <b-liu@ti.com>
    Fixes: b6a619a883c3 ("usb: phy: Check initial state for twl6030")
    Signed-off-by: Sven Van Asbroeck <TheSven73@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7020a36d86bc76f49fffaf3cdf668b4a781a7b4f
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Mon Feb 11 17:04:00 2019 +0800

    PCI: endpoint: functions: Use memcpy_fromio()/memcpy_toio()
    
    [ Upstream commit 726dabfde6aa35a4f1508e235ae37edbbf9fbc65 ]
    
    Functions copying from/to IO addresses should use the
    memcpy_fromio()/memcpy_toio() API rather than plain memcpy().
    
    Fix the issue detected through the sparse tool.
    
    Fixes: 349e7a85b25f ("PCI: endpoint: functions: Add an EP function to test PCI")
    Suggested-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    [lorenzo.pieralisi@arm.com: updated log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    CC: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    CC: Bjorn Helgaas <bhelgaas@google.com>
    CC: Gustavo Pimentel <gustavo.pimentel@synopsys.com>
    CC: Niklas Cassel <niklas.cassel@axis.com>
    CC: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    CC: Cyrille Pitchen <cyrille.pitchen@free-electrons.com>
    CC: linux-pci@vger.kernel.org
    CC: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36f3abf8c0fccd453e45e9ab6638cbaa9ad48586
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jan 23 16:51:21 2019 +0100

    pinctrl: sh-pfc: sh73a0: Fix fsic_spdif pin groups
    
    [ Upstream commit 0e6e448bdcf896d001a289a6112a704542d51516 ]
    
    There are two pin groups for the FSIC SPDIF signal, but the FSIC pin
    group array lists only one, and it refers to a nonexistent group.
    
    Fixes: 2ecd4154c906b7d6 ("sh-pfc: sh73a0: Add FSI pin groups and functions")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b95aa104952712b8db2263e9da99e59775cbd104
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jan 23 17:14:07 2019 +0100

    pinctrl: sh-pfc: r8a7792: Fix vin1_data18_b pin group
    
    [ Upstream commit b9fd50488b4939ce5b3a026d29e752e17c2d1800 ]
    
    The vin1_data18_b pin group itself is present, but it is not listed in
    the VIN1 pin group array, and thus cannot be selected.
    
    Fixes: 7dd74bb1f058786e ("pinctrl: sh-pfc: r8a7792: Add VIN pin groups")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ca523cc81fbc0775efda6fe25456af78770d6af
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jan 23 17:07:43 2019 +0100

    pinctrl: sh-pfc: r8a7791: Fix scifb2_data_c pin group
    
    [ Upstream commit a4b0350047f1b10207e25e72d7cd3f7826e93769 ]
    
    The entry for "scifb2_data_c" in the SCIFB2 pin group array contains a
    typo, thus the group cannot be selected.
    
    Fixes: 5088451962389924 ("pinctrl: sh-pfc: r8a7791 PFC support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27aa08b95d655306cc88647412595f8a4e9f86a8
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 24 13:04:52 2019 +0100

    pinctrl: sh-pfc: emev2: Add missing pinmux functions
    
    [ Upstream commit 1ecd8c9cb899ae277e6986ae134635cb1a50f5de ]
    
    The err_rst_reqb, ext_clki, lowpwr, and ref_clko pin groups are present,
    but no pinmux functions refer to them, hence they can not be selected.
    
    Fixes: 1e7d5d849cf4f0c5 ("sh-pfc: Add emev2 pinmux support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a580884bdb09f906d4eb7be5c2387b6d803dce95
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Feb 5 12:08:19 2019 +0300

    drm/etnaviv: potential NULL dereference
    
    [ Upstream commit 9e05352340d3a3e68c144136db9810b26ebb88c3 ]
    
    The etnaviv_gem_prime_get_sg_table() is supposed to return error
    pointers.  Otherwise it can lead to a NULL dereference when it's called
    from drm_gem_map_dma_buf().
    
    Fixes: 5f4a4a73f437 ("drm/etnaviv: fix gem_prime_get_sg_table to return new SG table")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d47846800bcc9883f2f0f954f16dcd1ed8dacd75
Author: Steve Wise <larrystevenwise@gmail.com>
Date:   Fri Feb 1 12:44:53 2019 -0800

    iw_cxgb4: use tos when finding ipv6 routes
    
    [ Upstream commit c8a7eb554a83214c3d8ee5cb322da8c72810d2dc ]
    
    When IPv6 support was added, the correct tos was not passed to
    cxgb_find_route6(). This potentially results in the wrong route entry.
    
    Fixes: 830662f6f032 ("RDMA/cxgb4: Add support for active and passive open connection with IPv6 address")
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d53fea06ecdcf579c2ef4f285734e4964d72a3f2
Author: Steve Wise <larrystevenwise@gmail.com>
Date:   Fri Feb 1 12:44:41 2019 -0800

    iw_cxgb4: use tos when importing the endpoint
    
    [ Upstream commit cb3ba0bde881f0cb7e3945d2a266901e2bd18c92 ]
    
    import_ep() is passed the correct tos, but doesn't use it correctly.
    
    Fixes: ac8e4c69a021 ("cxgb4/iw_cxgb4: TOS support")
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bcb908399dc48093396dba7fe5f7a93e13cbad8
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Feb 8 19:24:45 2019 +0100

    fbdev: chipsfb: remove set but not used variable 'size'
    
    [ Upstream commit 8e71fa5e4d86bedfd26df85381d65d6b4c860020 ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    drivers/video/fbdev/chipsfb.c: In function 'chipsfb_pci_init':
    drivers/video/fbdev/chipsfb.c:352:22: warning:
     variable 'size' set but not used [-Wunused-but-set-variable]
    
    Fixes: 8c8709334cec ("[PATCH] ppc32: Remove CONFIG_PMAC_PBOOK").
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Christophe Leroy <christophe.leroy@c-s.fr>
    [b.zolnierkie: minor commit summary and description fixups]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 814b711f62dc28f367f7d636501b2aa725961cd1
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Feb 6 10:31:02 2019 +0000

    rtc: pm8xxx: fix unintended sign extension
    
    [ Upstream commit e42280886018c6f77f0a90190f7cba344b0df3e0 ]
    
    Shifting a u8 by 24 will cause the value to be promoted to an integer. If
    the top bit of the u8 is set then the following conversion to an unsigned
    long will sign extend the value causing the upper 32 bits to be set in
    the result.
    
    Fix this by casting the u8 value to an unsigned long before the shift.
    
    Detected by CoverityScan, CID#1309693 ("Unintended sign extension")
    
    Fixes: 9a9a54ad7aa2 ("drivers/rtc: add support for Qualcomm PMIC8xxx RTC")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6518484b920e1a409184c29d9db5f8e39be4e861
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Feb 6 10:08:11 2019 +0000

    rtc: 88pm80x: fix unintended sign extension
    
    [ Upstream commit fb0b322537a831b5b0cb948c56f8f958ce493d3a ]
    
    Shifting a u8 by 24 will cause the value to be promoted to an integer. If
    the top bit of the u8 is set then the following conversion to an unsigned
    long will sign extend the value causing the upper 32 bits to be set in
    the result.
    
    Fix this by casting the u8 value to an unsigned long before the shift.
    
    Detected by CoverityScan, CID#714646-714649 ("Unintended sign extension")
    
    Fixes: 2985c29c1964 ("rtc: Add rtc support to 88PM80X PMIC")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3726373c3f243b1c41d35a2cec03c3149679bc4e
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Feb 6 09:50:53 2019 +0000

    rtc: 88pm860x: fix unintended sign extension
    
    [ Upstream commit dc9e47160626cdb58d5c39a4f43dcfdb27a5c004 ]
    
    Shifting a u8 by 24 will cause the value to be promoted to an integer. If
    the top bit of the u8 is set then the following conversion to an unsigned
    long will sign extend the value causing the upper 32 bits to be set in
    the result.
    
    Fix this by casting the u8 value to an unsigned long before the shift.
    
    Detected by CoverityScan, CID#144925-144928 ("Unintended sign extension")
    
    Fixes: 008b30408c40 ("mfd: Add rtc support to 88pm860x")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b9eaf82c2a711fcd2c6d011bac59bbc7d26be83
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Fri Jan 25 15:35:58 2019 +0100

    rtc: ds1307: rx8130: Fix alarm handling
    
    [ Upstream commit 3f929cad943380370b6db31fcb7a38d898d91089 ]
    
    When the EXTENSION.WADA bit is set, register 0x19 contains a bitmap of
    week days, not a day of month. As Linux only handles a single alarm
    without repetition using day of month is more flexible, so clear this
    bit. (Otherwise a value depending on time.tm_wday would have to be
    written to register 0x19.)
    
    Also optimize setting the AIE bit to use a single register write instead
    of a bulk write of three registers.
    
    Fixes: ee0981be7704 ("rtc: ds1307: Add support for Epson RX8130CE")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 391fd358568db5b98464b26c8fca0b2c03f6fef4
Author: Moritz Fischer <mdf@kernel.org>
Date:   Wed Feb 6 21:45:29 2019 -0800

    net: phy: fixed_phy: Fix fixed_phy not checking GPIO
    
    [ Upstream commit 8f289805616e81f7c1690931aa8a586c76f4fa88 ]
    
    Fix fixed_phy not checking GPIO if no link_update callback
    is registered.
    
    In the original version all users registered a link_update
    callback so the issue was masked.
    
    Fixes: a5597008dbc2 ("phy: fixed_phy: Add gpio to determine link up/down.")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 032c10fb504cf15575a69e2f7e673c72c720ade7
Author: Michael Kao <michael.kao@mediatek.com>
Date:   Fri Feb 1 15:38:07 2019 +0800

    thermal: mediatek: fix register index error
    
    [ Upstream commit eb9aecd90d1a39601e91cd08b90d5fee51d321a6 ]
    
    The index of msr and adcpnp should match the sensor
    which belongs to the selected bank in the for loop.
    
    Fixes: b7cf0053738c ("thermal: Add Mediatek thermal driver for mt2701.")
    Signed-off-by: Michael Kao <michael.kao@mediatek.com>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d7e9d2378899ee8e7abf8b74561d18958739042
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Feb 5 18:04:49 2019 +0000

    rtc: ds1672: fix unintended sign extension
    
    [ Upstream commit f0c04c276739ed8acbb41b4868e942a55b128dca ]
    
    Shifting a u8 by 24 will cause the value to be promoted to an integer. If
    the top bit of the u8 is set then the following conversion to an unsigned
    long will sign extend the value causing the upper 32 bits to be set in
    the result.
    
    Fix this by casting the u8 value to an unsigned long before the shift.
    
    Detected by CoverityScan, CID#138801 ("Unintended sign extension")
    
    Fixes: edf1aaa31fc5 ("[PATCH] RTC subsystem: DS1672 driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 526eb7a254e9ffabfe567438dc091ad5ebb5c7ee
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Feb 2 22:34:49 2019 +0000

    staging: most: cdev: add missing check for cdev_add failure
    
    [ Upstream commit 5ae890780e1b4d08f2c0c5d4ea96fc3928fc0ee9 ]
    
    Currently the call to cdev_add is missing a check for failure. Fix this by
    checking for failure and exiting via a new error path that ensures the
    allocated comp_channel struct is kfree'd.
    
    Detected by CoverityScan, CID#1462359 ("Unchecked return value")
    
    Fixes: 9bc79bbcd0c5 ("Staging: most: add MOST driver's aim-cdev module")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cd9f229dd3e4980580406f5a47230ec5ee836d7
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Wed Dec 12 09:45:11 2018 +0200

    iwlwifi: mvm: fix RSS config command
    
    [ Upstream commit 608dce95db10b8ee1a26dbce3f60204bb69812a5 ]
    
    The hash mask is a bitmap, so we should use BIT() on
    the enum values.
    
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Fixes: 43413a975d06 ("iwlwifi: mvm: support rss queues configuration command")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 505672b687af62983b8bd9d1c5c243cd3e518fad
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Tue Jan 29 21:20:41 2019 +0200

    ARM: dts: lpc32xx: phy3250: fix SD card regulator voltage
    
    [ Upstream commit dc141b99fc36cf910a1d8d5ee30f43f2442fd1bd ]
    
    The fixed voltage regulator on Phytec phyCORE-LPC3250 board, which
    supplies SD/MMC card's power, has a constant output voltage level
    of either 3.15V or 3.3V, the actual value depends on JP4 position,
    the power rail is referenced as VCC_SDIO in the board hardware manual.
    
    Fixes: d06670e96267 ("arm: dts: phy3250: add SD fixed regulator")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f68e0cc797f7813608f934496c4db4276d1073e8
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Tue Jan 29 21:20:40 2019 +0200

    ARM: dts: lpc32xx: fix ARM PrimeCell LCD controller clocks property
    
    [ Upstream commit 30fc01bae3cda747e7d9c352b1aa51ca113c8a9d ]
    
    The originally added ARM PrimeCell PL111 clocks property misses
    the required "clcdclk" clock, which is the same as a clock to enable
    the LCD controller on NXP LPC3230 and NXP LPC3250 SoCs.
    
    Fixes: 93898eb775e5 ("arm: dts: lpc32xx: add clock properties to device nodes")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3064d2f21f4a684539384055956605e4dfdc97b
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Tue Jan 29 21:20:39 2019 +0200

    ARM: dts: lpc32xx: fix ARM PrimeCell LCD controller variant
    
    [ Upstream commit 7a0790a4121cbcd111cc537cdc801c46ccb789ee ]
    
    ARM PrimeCell PL111 LCD controller is found on On NXP LPC3230
    and LPC3250 SoCs variants, the original reference in compatible
    property to an older one ARM PrimeCell PL110 is invalid.
    
    Fixes: e04920d9efcb3 ("ARM: LPC32xx: DTS files for device tree conversion")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53e4e15bb1539a2fa74333f01d7f3cd2a9778a18
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Sat Jan 26 16:29:21 2019 +0200

    ARM: dts: lpc32xx: reparent keypad controller to SIC1
    
    [ Upstream commit 489261c45f0ebbc1c2813f337bbdf858267f5033 ]
    
    After switching to a new interrupt controller scheme by separating SIC1
    and SIC2 from MIC interrupt controller just one SoC keypad controller
    was not taken into account, fix it now:
    
      WARNING: CPU: 0 PID: 1 at kernel/irq/irqdomain.c:524 irq_domain_associate+0x50/0x1b0
      error: hwirq 0x36 is too large for interrupt-controller@40008000
      ...
      lpc32xx_keys 40050000.key: failed to get platform irq
      lpc32xx_keys: probe of 40050000.key failed with error -22
    
    Fixes: 9b8ad3fb81ae ("ARM: dts: lpc32xx: reparent SIC1 and SIC2 interrupts from MIC")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25b8cd12a15c73acf75dcb0483d3857cfbae4c48
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Sat Jan 26 16:29:20 2019 +0200

    ARM: dts: lpc32xx: add required clocks property to keypad device node
    
    [ Upstream commit 3e88bc38b9f6fe4b69cecf81badd3c19fde97f97 ]
    
    NXP LPC32xx keypad controller requires a clock property to be defined.
    
    The change fixes the driver initialization problem:
    
      lpc32xx_keys 40050000.key: failed to get clock
      lpc32xx_keys: probe of 40050000.key failed with error -2
    
    Fixes: 93898eb775e5 ("arm: dts: lpc32xx: add clock properties to device nodes")
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7ee5bfb5541b2d8b652f1026c12a5a631d14b8e
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Feb 1 01:47:53 2019 +0100

    driver core: Do not resume suppliers under device_links_write_lock()
    
    [ Upstream commit 5db25c9eb893df8f6b93c1d97b8006d768e1b6f5 ]
    
    It is incorrect to call pm_runtime_get_sync() under
    device_links_write_lock(), because it may end up trying to take
    device_links_read_lock() while resuming the target device and that
    will deadlock in the non-SRCU case, so avoid that by resuming the
    supplier device in device_link_add() before calling
    device_links_write_lock().
    
    Fixes: 21d5c57b3726 ("PM / runtime: Use device links")
    Fixes: baa8809f6097 ("PM / runtime: Optimize the use of device links")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7a7f04e10017bf95eea0cb294287b4ab26e541a
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Jan 23 11:24:18 2019 +0000

    crypto: crypto4xx - Fix wrong ppc4xx_trng_probe()/ppc4xx_trng_remove() arguments
    
    [ Upstream commit 6e88098ca43a3d80ae86908f7badba683c8a0d84 ]
    
    When building without CONFIG_HW_RANDOM_PPC4XX, I hit the following build failure:
    drivers/crypto/amcc/crypto4xx_core.c: In function 'crypto4xx_probe':
    drivers/crypto/amcc/crypto4xx_core.c:1407:20: error: passing argument 1 of 'ppc4xx_trng_probe' from incompatible pointer type [-Werror=incompatible-pointer-types]
    In file included from drivers/crypto/amcc/crypto4xx_core.c:50:0:
    drivers/crypto/amcc/crypto4xx_trng.h:28:20: note: expected 'struct crypto4xx_device *' but argument is of type 'struct crypto4xx_core_device *'
    drivers/crypto/amcc/crypto4xx_core.c: In function 'crypto4xx_remove':
    drivers/crypto/amcc/crypto4xx_core.c:1434:21: error: passing argument 1 of 'ppc4xx_trng_remove' from incompatible pointer type [-Werror=incompatible-pointer-types]
    In file included from drivers/crypto/amcc/crypto4xx_core.c:50:0:
    drivers/crypto/amcc/crypto4xx_trng.h:30:20: note: expected 'struct crypto4xx_device *' but argument is of type 'struct crypto4xx_core_device *'
    
    This patch fix the needed argument of ppc4xx_trng_probe()/ppc4xx_trng_remove() in that case.
    
    Fixes: 5343e674f32f ("crypto4xx: integrate ppc4xx-rng into crypto4xx")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 548752cabfaaf3945f2da9d202e70015c2991e9a
Author: Liu Jian <liujian56@huawei.com>
Date:   Wed Jan 23 06:45:38 2019 +0800

    driver: uio: fix possible use-after-free in __uio_register_device
    
    [ Upstream commit 221a1f4ac12d2ab46246c160b2e00d1b1160d5d9 ]
    
    In uio_dev_add_attributes() error handing case, idev is used after
    device_unregister(), in which 'idev' has been released, touch idev cause
    use-after-free.
    
    Fixes: a93e7b331568 ("uio: Prevent device destruction while fds are open")
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Reviewed-by: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b97b03ace9e5f2d84dba9e8e347e76cfda40dbf
Author: Liu Jian <liujian56@huawei.com>
Date:   Wed Jan 23 06:45:37 2019 +0800

    driver: uio: fix possible memory leak in __uio_register_device
    
    [ Upstream commit 1a392b3de7c5747506b38fc14b2e79977d3c7770 ]
    
    'idev' is malloced in __uio_register_device() and leak free it before
    leaving from the uio_get_minor() error handing case, it will cause
    memory leak.
    
    Fixes: a93e7b331568 ("uio: Prevent device destruction while fds are open")
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Reviewed-by: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35eb06fa70302bc971342646ee3a0012e6d2e401
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Jan 30 18:30:51 2019 +0800

    tty: ipwireless: Fix potential NULL pointer dereference
    
    [ Upstream commit 7dd50e205b3348dc7784efbdf85723551de64a25 ]
    
    There is a potential NULL pointer dereference in case
    alloc_ctrl_packet() fails and returns NULL.
    
    Fixes: 099dc4fb6265 ("ipwireless: driver for PC Card 3G/UMTS modem")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f401472074c6900cb0a87aa91fc4d86b34df0374
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Nov 8 09:51:56 2018 +0100

    iwlwifi: mvm: fix A-MPDU reference assignment
    
    [ Upstream commit 1f7698abedeeb3fef3cbcf78e16f925df675a179 ]
    
    The current code assigns the reference, and then goes to increment
    it if the toggle bit has changed. That way, we get
    
    Toggle  0  0  0  0  1  1  1  1
    ID      1  1  1  1  1  2  2  2
    
    Fix that by assigning the post-toggle ID to get
    
    Toggle  0  0  0  0  1  1  1  1
    ID      1  1  1  1  2  2  2  2
    
    Reported-by: Danny Alexander <danny.alexander@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Fixes: fbe4112791b8 ("iwlwifi: mvm: update mpdu metadata API")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1abaee5e625d202274ed9bb32431d9958fae82cd
Author: Moni Shoua <monis@mellanox.com>
Date:   Wed Dec 26 19:21:21 2018 +0200

    net/mlx5: Take lock with IRQs disabled to avoid deadlock
    
    [ Upstream commit 33814e5d127e21f53b52e17b0722c1b57d4f4d29 ]
    
    The lock in qp_table might be taken from process context or from
    interrupt context. This may lead to a deadlock unless it is taken with
    IRQs disabled.
    
    Discovered by lockdep
    
    ================================
    WARNING: inconsistent lock state
    4.20.0-rc6
    --------------------------------
    inconsistent {HARDIRQ-ON-W} -> {IN-HARDIRQ-W}
    
    python/12572 [HC1[1]:SC0[0]:HE0:SE1] takes:
    00000000052a4df4 (&(&table->lock)->rlock#2){?.+.}, /0x50 [mlx5_core]
    {HARDIRQ-ON-W} state was registered at:
      _raw_spin_lock+0x33/0x70
      mlx5_get_rsc+0x1a/0x50 [mlx5_core]
      mlx5_ib_eqe_pf_action+0x493/0x1be0 [mlx5_ib]
      process_one_work+0x90c/0x1820
      worker_thread+0x87/0xbb0
      kthread+0x320/0x3e0
      ret_from_fork+0x24/0x30
    irq event stamp: 103928
    hardirqs last  enabled at (103927): [] nk+0x1a/0x1c
    hardirqs last disabled at (103928): [] unk+0x1a/0x1c
    softirqs last  enabled at (103924): [] tcp_sendmsg+0x31/0x40
    softirqs last disabled at (103922): [] 80
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(&(&table->lock)->rlock#2);
    
        lock(&(&table->lock)->rlock#2);
    
     *** DEADLOCK ***
    
    Fixes: 032080ab43ac ("IB/mlx5: Lock QP during page fault handling")
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61c39d4a8938e8a537e466e11cb005d51004e0e6
Author: Mordechay Goodstein <mordechay.goodstein@intel.com>
Date:   Sun Oct 21 18:27:26 2018 +0300

    iwlwifi: mvm: avoid possible access out of array.
    
    [ Upstream commit b0d795a9ae558209656b18930c2b4def5f8fdfb8 ]
    
    The value in txq_id can be out of array scope,
    validate it before accessing the array.
    
    Signed-off-by: Mordechay Goodstein <mordechay.goodstein@intel.com>
    Fixes: cf961e16620f ("iwlwifi: mvm: support dqa-mode agg on non-shared queue")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bac5b8392da768ffe67ccc0310f35e4a64a277f
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Fri Jan 25 11:23:04 2019 +0800

    clk: sunxi-ng: sun8i-a23: Enable PLL-MIPI LDOs when ungating it
    
    [ Upstream commit 108a459ef4cd17a28711d81092044e597b5c7618 ]
    
    The PLL-MIPI clock is somewhat special as it has its own LDOs which
    need to be turned on for this PLL to actually work and output a clock
    signal.
    
    Add the 2 LDO enable bits to the gate bits.
    
    Fixes: 5690879d93e8 ("clk: sunxi-ng: Add A23 CCU")
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07e548c4126bda5687c3961ff07de9fb57028c2b
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Jan 23 20:00:22 2019 +0800

    spi/topcliff_pch: Fix potential NULL dereference on allocation error
    
    [ Upstream commit e902cdcb5112b89ee445588147964723fd69ffb4 ]
    
    In pch_spi_handle_dma, it doesn't check for NULL returns of kcalloc
    so it would result in an Oops.
    
    Fixes: c37f3c2749b5 ("spi/topcliff_pch: DMA support")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50e12e2be9c0739c472a4b37f2ef1e5ddbfb9f68
Author: Eric Wong <e@80x24.org>
Date:   Sun Jan 6 08:21:03 2019 +0000

    rtc: cmos: ignore bogus century byte
    
    [ Upstream commit 2a4daadd4d3e507138f8937926e6a4df49c6bfdc ]
    
    Older versions of Libreboot and Coreboot had an invalid value
    (`3' in my case) in the century byte affecting the GM45 in
    the Thinkpad X200.  Not everybody's updated their firmwares,
    and Linux <= 4.2 was able to read the RTC without problems,
    so workaround this by ignoring invalid values.
    
    Fixes: 3c217e51d8a272b9 ("rtc: cmos: century support")
    
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Sylvain Chouleur <sylvain.chouleur@intel.com>
    Cc: Patrick McDermott <patrick.mcdermott@libiquity.com>
    Cc: linux-rtc@vger.kernel.org
    Signed-off-by: Eric Wong <e@80x24.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fafa1309c2a4926a8744906d0adc2edc164dd4e3
Author: Israel Rukshin <israelr@mellanox.com>
Date:   Thu Jan 17 15:45:45 2019 +0000

    IB/iser: Pass the correct number of entries for dma mapped SGL
    
    [ Upstream commit 57b26497fabe1b9379b59fbc7e35e608e114df16 ]
    
    ib_dma_map_sg() augments the SGL into a 'dma mapped SGL'. This process may
    change the number of entries and the lengths of each entry.
    
    Code that touches dma_address is iterating over the 'dma mapped SGL' and
    must use dma_nents which returned from ib_dma_map_sg().
    
    ib_sg_to_pages() and ib_map_mr_sg() are using dma_address so they must use
    dma_nents.
    
    Fixes: 39405885005a ("IB/iser: Port to new fast registration API")
    Fixes: bfe066e256d5 ("IB/iser: Reuse ib_sg_to_pages")
    Signed-off-by: Israel Rukshin <israelr@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Acked-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 886969f813beca055d92fa106a7dafa3702819d0
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Jan 18 10:06:52 2019 +0100

    ASoC: imx-sgtl5000: put of nodes if finding codec fails
    
    [ Upstream commit d9866572486802bc598a3e8576a5231378d190de ]
    
    Make sure to properly put the of node in case finding the codec
    fails.
    
    Fixes: 81e8e4926167 ("ASoC: fsl: add sgtl5000 clock support for imx-sgtl5000")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Reviewed-by: Daniel Baluta <daniel.baluta@nxp.com>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 478428c99780eae874e04d07a1ce32fa99a9a484
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jan 10 12:17:58 2019 -0800

    crypto: tgr192 - fix unaligned memory access
    
    [ Upstream commit f990f7fb58ac8ac9a43316f09a48cff1a49dda42 ]
    
    Fix an unaligned memory access in tgr192_transform() by using the
    unaligned access helpers.
    
    Fixes: 06ace7a9bafe ("[CRYPTO] Use standard byte order macros wherever possible")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc757cbe47a3e4b8e83c0b471890eeb7a3cb986a
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Jan 9 06:11:18 2019 +0000

    crypto: brcm - Fix some set-but-not-used warning
    
    [ Upstream commit 707d0cf8f7cff6dfee9197002859912310532c4f ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    drivers/crypto/bcm/cipher.c: In function 'handle_ahash_req':
    drivers/crypto/bcm/cipher.c:720:15: warning:
     variable 'chunk_start' set but not used [-Wunused-but-set-variable]
    
    drivers/crypto/bcm/cipher.c: In function 'spu_rx_callback':
    drivers/crypto/bcm/cipher.c:1679:31: warning:
     variable 'areq' set but not used [-Wunused-but-set-variable]
    
    drivers/crypto/bcm/cipher.c:1678:22: warning:
     variable 'ctx' set but not used [-Wunused-but-set-variable]
    
    Fixes: 9d12ba86f818 ("crypto: brcm - Add Broadcom SPU driver")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Raveendra Padasalagi <raveendra.padasalagi@broadcom.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3691b5e7d89c4367493887902d8b64a1266c360
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Jan 15 16:19:00 2019 +0900

    kbuild: mark prepare0 as PHONY to fix external module build
    
    [ Upstream commit e00d8880481497474792d28c14479a9fb6752046 ]
    
    Commit c3ff2a5193fa ("powerpc/32: add stack protector support")
    caused kernel panic on PowerPC when an external module is used with
    CONFIG_STACKPROTECTOR because the 'prepare' target was not executed
    for the external module build.
    
    Commit e07db28eea38 ("kbuild: fix single target build for external
    module") turned it into a build error because the 'prepare' target is
    now executed but the 'prepare0' target is missing for the external
    module build.
    
    External module on arm/arm64 with CONFIG_STACKPROTECTOR_PER_TASK is
    also broken in the same way.
    
    Move 'PHONY += prepare0' to the common place. GNU Make is fine with
    missing rule for phony targets. I also removed the comment which is
    wrong irrespective of this commit.
    
    I minimize the change so it can be easily backported to 4.20.x
    
    To fix v4.20, please backport e07db28eea38 ("kbuild: fix single target
    build for external module"), and then this commit.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=201891
    Fixes: e07db28eea38 ("kbuild: fix single target build for external module")
    Fixes: c3ff2a5193fa ("powerpc/32: add stack protector support")
    Fixes: 189af4657186 ("ARM: smp: add support for per-task stack canaries")
    Fixes: 0a1213fa7432 ("arm64: enable per-task stack canaries")
    Cc: linux-stable <stable@vger.kernel.org> # v4.20
    Reported-by: Samuel Holland <samuel@sholland.org>
    Reported-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69984b65b6ea27570a65c13a81ad735476aeb473
Author: Pawe? Chmiel <pawel.mikolaj.chmiel@gmail.com>
Date:   Wed Jan 9 13:00:41 2019 -0500

    media: s5p-jpeg: Correct step and max values for V4L2_CID_JPEG_RESTART_INTERVAL
    
    [ Upstream commit 19c624c6b29e244c418f8b44a711cbf5e82e3cd4 ]
    
    This commit corrects max and step values for v4l2 control for
    V4L2_CID_JPEG_RESTART_INTERVAL. Max should be 0xffff and step should be 1.
    It was found by using v4l2-compliance tool and checking result of
    VIDIOC_QUERY_EXT_CTRL/QUERYMENU test.
    Previously it was complaining that step was bigger than difference
    between max and min.
    
    Fixes: 15f4bc3b1f42 ("[media] s5p-jpeg: Add JPEG controls support")
    
    Signed-off-by: Pawe? Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Reviewed-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Reviewed-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 199b745a0bda8f0f5bf73c5538c91b4a644047d1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jan 14 13:49:46 2019 +0300

    drm/etnaviv: NULL vs IS_ERR() buf in etnaviv_core_dump()
    
    [ Upstream commit f8261c376e7f8cb9024af5a6c54be540c7f9108e ]
    
    The etnaviv_gem_get_pages() never returns NULL.  It returns error
    pointers on error.
    
    Fixes: a8c21a5451d8 ("drm/etnaviv: add initial etnaviv DRM driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70da6cce28e018bf19d0ace8d2e34cfbe14fe159
Author: Raju Rangoju <rajur@chelsio.com>
Date:   Fri Jan 11 20:27:18 2019 +0530

    RDMA/iw_cxgb4: Fix the unchecked ep dereference
    
    [ Upstream commit 3352976c892301fd576a2e9ff0ac7337b2e2ca48 ]
    
    The patch 944661dd97f4: "RDMA/iw_cxgb4: atomically lookup ep and get a
    reference" from May 6, 2016, leads to the following Smatch complaint:
    
        drivers/infiniband/hw/cxgb4/cm.c:2953 terminate()
        error: we previously assumed 'ep' could be null (see line 2945)
    
    Fixes: 944661dd97f4 ("RDMA/iw_cxgb4: atomically lookup ep and get a reference")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Raju Rangoju <rajur@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45ad6d87fd90814aee96d9d6cd2dd76fe0e1d5e5
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Fri Jan 4 18:08:09 2019 +0000

    spi: cadence: Correct initialisation of runtime PM
    
    [ Upstream commit 734882a8bf984c2ac8a57d8ac3ee53230bd0bed8 ]
    
    Currently the driver calls pm_runtime_put_autosuspend but without ever
    having done a pm_runtime_get, this causes the reference count in the pm
    runtime core to become -1. The bad reference count causes the core to
    sometimes suspend whilst an active SPI transfer is in progress.
    
    arizona spi0.1: SPI transfer timed out
    spi_master spi0: failed to transfer one message from queue
    
    The correct proceedure is to do all the initialisation that requires the
    hardware to be powered up before enabling the PM runtime, then enable
    the PM runtime having called pm_runtime_set_active to inform it that the
    hardware is currently powered up. The core will then power it down at
    it's leisure and no explicit pm_runtime_put is required.
    
    Fixes: d36ccd9f7ea4 ("spi: cadence: Runtime pm adaptation")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91eebda6ad45d30fc46c910c090272693a8ef99d
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Fri Dec 14 12:01:02 2018 +0100

    arm64: dts: apq8016-sbc: Increase load on l11 for SDCARD
    
    [ Upstream commit af61bef513ba179559e56908b8c465e587bc3890 ]
    
    In the same way as for msm8974-hammerhead, l11 load, used for SDCARD
    VMMC, needs to be increased in order to prevent any voltage drop issues
    (due to limited current) happening with some SDCARDS or during specific
    operations (e.g. write).
    
    Tested on Dragonboard-410c and DART-SD410 boards.
    
    Fixes: 4c7d53d16d77 (arm64: dts: apq8016-sbc: add regulators support)
    Reported-by: Manabu Igusa <migusa@arrowjapan.com>
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5ed3f2b4b72f584e639863ecbac090c622f0ffc
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Dec 17 17:18:30 2018 +0800

    drm/shmob: Fix return value check in shmob_drm_probe
    
    [ Upstream commit 06c3bbd3c12737a50c2e981821b5585e1786e73d ]
    
    In case of error, the function devm_ioremap_resource() returns ERR_PTR()
    and never returns NULL. The NULL test in the return value check should
    be replaced with IS_ERR().
    
    Fixes: 8f1597c8f1a5 ("drm: shmobile: Perform initialization/cleanup at probe/remove time")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 346e59489df79cb0e1dd2647560b6e64a3c0bbb2
Author: Gal Pressman <galpress@amazon.com>
Date:   Mon Jan 7 17:27:56 2019 +0200

    RDMA/qedr: Fix out of bounds index check in query pkey
    
    [ Upstream commit dbe30dae487e1a232158c24b432d45281c2805b7 ]
    
    The pkey table size is QEDR_ROCE_PKEY_TABLE_LEN, index should be tested
    for >= QEDR_ROCE_PKEY_TABLE_LEN instead of > QEDR_ROCE_PKEY_TABLE_LEN.
    
    Fixes: a7efd7773e31 ("qedr: Add support for PD,PKEY and CQ verbs")
    Signed-off-by: Gal Pressman <galpress@amazon.com>
    Acked-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 499cd1060357131a4348534f8cf35b8b4e0efb5f
Author: Gal Pressman <galpress@amazon.com>
Date:   Mon Jan 7 17:27:55 2019 +0200

    RDMA/ocrdma: Fix out of bounds index check in query pkey
    
    [ Upstream commit b188940796c7be31c1b8c25a9a0e0842c2e7a49e ]
    
    The pkey table size is one element, index should be tested for > 0 instead
    of > 1.
    
    Fixes: fe2caefcdf58 ("RDMA/ocrdma: Add driver for Emulex OneConnect IBoE RDMA adapter")
    Signed-off-by: Gal Pressman <galpress@amazon.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4963f23081cc55c4e92269c8e0c13f85c63e9094
Author: Gal Pressman <galpress@amazon.com>
Date:   Mon Jan 7 17:27:54 2019 +0200

    IB/usnic: Fix out of bounds index check in query pkey
    
    [ Upstream commit 4959d5da5737dd804255c75b8cea0a2929ce279a ]
    
    The pkey table size is one element, index should be tested for > 0 instead
    of > 1.
    
    Fixes: e3cf00d0a87f ("IB/usnic: Add Cisco VIC low-level hardware driver")
    Signed-off-by: Gal Pressman <galpress@amazon.com>
    Acked-by: Parvi Kaustubhi <pkaustub@cisco.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97f78f43c0fa18b80fd60a6c6f9fabc1a62faaf9
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Sun Dec 30 12:55:09 2018 +0100

    MIPS: BCM63XX: drop unused and broken DSP platform device
    
    [ Upstream commit 682fee802843b332f9c51ffc8e062de5ff773f2e ]
    
    Trying to register the DSP platform device results in a null pointer
    access:
    
    [    0.124184] CPU 0 Unable to handle kernel paging request at virtual address 00000000, epc == 804e305c, ra == 804e6f20
    [    0.135208] Oops[#1]:
    [    0.137514] CPU: 0 PID: 1 Comm: swapper Not tainted 4.14.87
    ...
    [    0.197117] epc   : 804e305c bcm63xx_dsp_register+0x80/0xa4
    [    0.202838] ra    : 804e6f20 board_register_devices+0x258/0x390
    ...
    
    This happens because it tries to copy the passed platform data over the
    platform_device's unpopulated platform_data.
    
    Since this code has been broken since its submission, no driver was ever
    submitted for it, and apparently nobody was using it, just remove it
    instead of trying to fix it.
    
    Fixes: e7300d04bd08 ("MIPS: BCM63xx: Add support for the Broadcom BCM63xx family of SOCs.")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Cc: linux-mips@linux-mips.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9585b6996e002e55ba9c5db257e8bcc60574443
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:50:13 2018 -0500

    clk: dove: fix refcount leak in dove_clk_init()
    
    [ Upstream commit 8d726c5128298386b907963033be93407b0c4275 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Fixes: 8f7fc5450b64 ("clk: mvebu: dove: maintain clock init order")
    Fixes: 63b8d92c793f ("clk: add Dove PLL divider support for GPU, VMeta and AXI clocks")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 938021a99d967a9310505d3b33b5fcb258cdd08c
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:48:05 2018 -0500

    clk: mv98dx3236: fix refcount leak in mv98dx3236_clk_init()
    
    [ Upstream commit 9b4eedf627045ae5ddcff60a484200cdd554c413 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Fixes: 337072604224 ("clk: mvebu: Expand mv98dx3236-core-clock support")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3af85e1c58892fb137f9cf722bf5ef777f62fcaf
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:42:26 2018 -0500

    clk: armada-xp: fix refcount leak in axp_clk_init()
    
    [ Upstream commit db20a90a4b6745dad62753f8bd2f66afdd5abc84 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Fixes: 0a11a6ae9437 ("clk: mvebu: armada-xp: maintain clock init order")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0843f4fac91a3c0a9249f378a97b53e8f325d2ad
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:40:19 2018 -0500

    clk: kirkwood: fix refcount leak in kirkwood_clk_init()
    
    [ Upstream commit e7beeab9c61591cd0e690d8733d534c3f4278ff8 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Fixes: 58d516ae95cb ("clk: mvebu: kirkwood: maintain clock init order")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a924a933d8b493a1eda0c1aa4d5b864a3dd415c3
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:36:58 2018 -0500

    clk: armada-370: fix refcount leak in a370_clk_init()
    
    [ Upstream commit a3c24050bdf70c958a8d98c2823b66ea761e6a31 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Reviewed-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Fixes: 07ad6836fa21 ("clk: mvebu: armada-370: maintain clock init order")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ddbaa5cac637e24b77f2a9b28507599cac6006f5
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:59:36 2018 -0500

    clk: vf610: fix refcount leak in vf610_clocks_init()
    
    [ Upstream commit 567177024e0313e4f0dcba7ba10c0732e50e655d ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: 1f2c5fd5f048 ("ARM: imx: add VF610 clock support")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 006495b2ecd3c677cdfc54332b102e4165ce7e62
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:57:16 2018 -0500

    clk: imx7d: fix refcount leak in imx7d_clocks_init()
    
    [ Upstream commit 5f8c183a996b76bb09748073c856e4246fd4ce95 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: 8f6d8094b215 ("ARM: imx: add imx7d clk tree support")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b88284ee4364acac121148fed4649f2214fd1b94
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:55:10 2018 -0500

    clk: imx6sx: fix refcount leak in imx6sx_clocks_init()
    
    [ Upstream commit 1731e14fb30212dd8c1e9f8fc1af061e56498c55 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: d55135689019 ("ARM: imx: add clock driver for imx6sx")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f55851dbf0ee077452b79678d795943e5e1f5121
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:53:00 2018 -0500

    clk: imx6q: fix refcount leak in imx6q_clocks_init()
    
    [ Upstream commit c9ec1d8fef31b5fc9e90e99f9bd685db5caa7c5e ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: 2acd1b6f889c ("ARM: i.MX6: implement clocks using common clock framework")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e080a42d5011fd0a6bf1fdbbe4b7476ecaeb47c
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:32:15 2018 -0500

    clk: samsung: exynos4: fix refcount leak in exynos4_get_xom()
    
    [ Upstream commit cee82eb9532090cd1dc953e845d71f9b1445c84e ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: e062b571777f ("clk: exynos4: register clocks using common clock framework")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e5dbea8fdaa1b4f64e00bac5ec5844c429f324d
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:29:02 2018 -0500

    clk: socfpga: fix refcount leak
    
    [ Upstream commit 7f9705beeb3759e69165e7aff588f6488ff6c1ac ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: 5343325ff3dd ("clk: socfpga: add a clock driver for the Arria 10 platform")
    Fixes: a30d27ed739b ("clk: socfpga: fix clock driver for 3.15")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c3e2bc4635e31b48147b34c7810c187e351b8d6
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:14:42 2018 -0500

    clk: qoriq: fix refcount leak in clockgen_init()
    
    [ Upstream commit 70af6c5b5270e8101f318c4b69cc98a726edfab9 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: 0dfc86b3173f ("clk: qoriq: Move chip-specific knowledge into driver")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4483d0e723477f76b59fe0b8213fd35d6d0a9ecb
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Wed Dec 26 08:10:01 2018 -0500

    clk: highbank: fix refcount leak in hb_clk_init()
    
    [ Upstream commit 5eb8ba90958de1285120dae5d3a5d2b1a360b3b4 ]
    
    The of_find_compatible_node() returns a node pointer with refcount
    incremented, but there is the lack of use of the of_node_put() when
    done. Add the missing of_node_put() to release the refcount.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Fixes: 26cae166cff9 ("ARM: highbank: remove custom .init_time hook")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15751bde70756fb2e84e6f9fb96c183fe4b31954
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 21 00:38:30 2018 -0800

    Input: nomadik-ske-keypad - fix a loop timeout test
    
    [ Upstream commit 4d8f727b83bcd6702c2d210330872c9122d2d360 ]
    
    The loop exits with "timeout" set to -1 not to 0.
    
    Fixes: 1158f0f16224 ("Input: add support for Nomadik SKE keypad controller")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43c3e957462b3f13dab55197bb3bcb9155b301b8
Author: Petr Machata <petrm@mellanox.com>
Date:   Tue Dec 18 13:16:02 2018 +0000

    vxlan: changelink: Fix handling of default remotes
    
    [ Upstream commit ce5e098f7a10b4bf8e948c12fa350320c5c3afad ]
    
    Default remotes are stored as FDB entries with an Ethernet address of
    00:00:00:00:00:00. When a request is made to change a remote address of
    a VXLAN device, vxlan_changelink() first deletes the existing default
    remote, and then creates a new FDB entry.
    
    This works well as long as the list of default remotes matches exactly
    the configuration of a VXLAN remote address. Thus when the VXLAN device
    has a remote of X, there should be exactly one default remote FDB entry
    X. If the VXLAN device has no remote address, there should be no such
    entry.
    
    Besides using "ip link set", it is possible to manipulate the list of
    default remotes by using the "bridge fdb". It is therefore easy to break
    the above condition. Under such circumstances, the __vxlan_fdb_delete()
    call doesn't delete the FDB entry itself, but just one remote. The
    following vxlan_fdb_create() then creates a new FDB entry, leading to a
    situation where two entries exist for the address 00:00:00:00:00:00,
    each with a different subset of default remotes.
    
    An even more obvious breakage rooted in the same cause can be observed
    when a remote address is configured for a VXLAN device that did not have
    one before. In that case vxlan_changelink() doesn't remove any remote,
    and just creates a new FDB entry for the new address:
    
    $ ip link add name vx up type vxlan id 2000 dstport 4789
    $ bridge fdb ap dev vx 00:00:00:00:00:00 dst 192.0.2.20 self permanent
    $ bridge fdb ap dev vx 00:00:00:00:00:00 dst 192.0.2.30 self permanent
    $ ip link set dev vx type vxlan remote 192.0.2.30
    $ bridge fdb sh dev vx | grep 00:00:00:00:00:00
    00:00:00:00:00:00 dst 192.0.2.30 self permanent <- new entry, 1 rdst
    00:00:00:00:00:00 dst 192.0.2.20 self permanent <- orig. entry, 2 rdsts
    00:00:00:00:00:00 dst 192.0.2.30 self permanent
    
    To fix this, instead of calling vxlan_fdb_create() directly, defer to
    vxlan_fdb_update(). That has logic to handle the duplicates properly.
    Additionally, it also handles notifications, so drop that call from
    changelink as well.
    
    Fixes: 0241b836732f ("vxlan: fix default fdb entry netlink notify ordering during netdev create")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 311550b992d4694a223a7f0c2a5aaeac00f4249d
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 13 14:32:34 2018 +0100

    pinctrl: sh-pfc: sh7734: Remove bogus IPSR10 value
    
    [ Upstream commit 4d374bacd7c9665179f9752a52d5d602c45d8190 ]
    
    The IP10[5:3] field in Peripheral Function Select Register 10 has a
    width of 3 bits, i.e. it allows programming one out of 8 different
    configurations.
    However, 9 values are provided instead of 8, overflowing into the
    subsequent field in the register, and thus breaking the configuration of
    the latter.
    
    Fix this by dropping a bogus zero value.
    
    Fixes: ac1ebc2190f575fc ("sh-pfc: Add sh7734 pinmux support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2e6f04f6ee3fe5e4f72eb1763f228c4a0c2c701
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 13 14:27:56 2018 +0100

    pinctrl: sh-pfc: sh7269: Add missing PCIOR0 field
    
    [ Upstream commit 9540cbdfcd861caf67a6f0e4bb7f46d41c4aad86 ]
    
    The Port C I/O Register 0 contains 7 reserved bits, but the descriptor
    contains only dummy configuration values for 6 reserved bits, thus
    breaking the configuration of all subsequent fields in the register.
    
    Fix this by adding the two missing configuration values.
    
    Fixes: f5e811f2a43117b2 ("sh-pfc: Add sh7269 pinmux support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a442c5c032d6afcc26225ef5180b8ac4c85696e
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 13 13:59:42 2018 +0100

    pinctrl: sh-pfc: r8a77995: Remove bogus SEL_PWM[0-3]_3 configurations
    
    [ Upstream commit e28dc3f09c9d2555a9bd982f0847988591052226 ]
    
    While the SEL_PWM[0-3] fields in the Module Select Register 0 support 4
    possible configurations per PWM pin, only the first 3 are valid.
    
    Replace the invalid and unused configurations for SEL_PWM[0-3]_3 by
    dummies.
    
    Fixes: 794a6711764658a1 ("pinctrl: sh-pfc: Initial R8A77995 PFC support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fb9bf82e2a0e8271110498a029f8092bc2debc4
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 14:42:16 2018 +0100

    pinctrl: sh-pfc: sh7734: Add missing IPSR11 field
    
    [ Upstream commit 94482af7055e1ffa211c1135256b85590ebcac99 ]
    
    The Peripheral Function Select Register 11 contains 3 reserved bits and
    15 variable-width fields, but the variable field descriptor does not
    contain the 3-bit field IP11[25:23].
    
    Fixes: 856cb4bb337ee504 ("sh: Add support pinmux for SH7734")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c387ed6cc6d234d3c0eafa9ecadaaac6aa27b30
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 14:21:16 2018 +0100

    pinctrl: sh-pfc: r8a7794: Remove bogus IPSR9 field
    
    [ Upstream commit 6a6c195d98a1a5e70faa87f594d7564af1dd1bed ]
    
    The Peripheral Function Select Register 9 contains 12 fields, but the
    variable field descriptor contains a 13th bogus field of 3 bits.
    
    Fixes: 43c4436e2f1890a7 ("pinctrl: sh-pfc: add R8A7794 PFC support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7dcf563d22795fef5d4a3476bed486fc1f013efe
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 11:20:14 2018 +0100

    pinctrl: sh-pfc: sh73a0: Add missing TO pin to tpu4_to3 group
    
    [ Upstream commit 124cde98f856b6206b804acbdec3b7c80f8c3427 ]
    
    The tpu4_to3_mux[] array contains the TPU4TO3 pin mark, but the
    tpu4_to3_pins[] array lacks the corresponding pin number.
    
    Add the missing pin number, for non-GPIO pin F26.
    
    Fixes: 5da4eb049de803c7 ("sh-pfc: sh73a0: Add TPU pin groups and functions")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6e7548315d703b5194f793c346c7fd93bd0d42f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 11:12:20 2018 +0100

    pinctrl: sh-pfc: r8a7791: Remove bogus marks from vin1_b_data18 group
    
    [ Upstream commit 0d6256cb880166a4111bebce35790019e56b6e1b ]
    
    The vin1_b_data18_mux[] arrays contains pin marks for the 2 LSB bits of
    the color components.  The vin1_b_data18_pins[] array rightfully does
    not include the corresponding pin numbers, as RGB18 is subset of RGB24,
    containing only the 6 MSB bits of each component.
    
    Fixes: 8e32c9671f84acd8 ("pinctrl: sh-pfc: r8a7791: Add VIN pins")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 550ba4ad0da3d94a0ee5a1016e23467f854ba603
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 11:05:57 2018 +0100

    pinctrl: sh-pfc: r8a7791: Remove bogus ctrl marks from qspi_data4_b group
    
    [ Upstream commit 884fa25fb6e5e63ab970d612a628313bb68f37cc ]
    
    The qspi_data4_b_mux[] array contains pin marks for the clock and chip
    select pins.  The qspi_data4_b_pins[] array rightfully does not contain
    the corresponding pin numbers, as the control pins are provided by a
    separate group (qspi_ctrl_b).
    
    Fixes: 2d0c386f135e4186 ("pinctrl: sh-pfc: r8a7791: Add QSPI pin groups")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da8432d949db61082b75154272e37dbafa29e4d7
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 11:00:27 2018 +0100

    pinctrl: sh-pfc: r8a7740: Add missing LCD0 marks to lcd0_data24_1 group
    
    [ Upstream commit 96bb2a6ab4eca10e5b6490b3f0738e9f7ec22c2b ]
    
    The lcd0_data24_1_pins[] array contains the LCD0 D1[2-5] pin numbers,
    but the lcd0_data24_1_mux[] array lacks the corresponding pin marks.
    
    Fixes: 06c7dd866da70f6c ("sh-pfc: r8a7740: Add LCDC0 and LCDC1 pin groups and functions")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da93a64fe66594d356097b09d590cfe188117222
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 12 10:57:27 2018 +0100

    pinctrl: sh-pfc: r8a7740: Add missing REF125CK pin to gether_gmii group
    
    [ Upstream commit 1ebc589a7786f17f97b9e87b44e0fb4d0290d8f8 ]
    
    The gether_gmii_mux[] array contains the REF125CK pin mark, but the
    gether_gmii_pins[] array lacks the corresponding pin number.
    
    Fixes: bae11d30d0cafdc5 ("sh-pfc: r8a7740: Add GETHER pin groups and functions")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 336384d871a9797a620063158c3d80988ea0cc47
Author: Kelvin Cao <kelvin.cao@microchip.com>
Date:   Mon Dec 10 17:12:20 2018 +0800

    switchtec: Remove immediate status check after submitting MRPC command
    
    [ Upstream commit 526180408b815aa7b96fd48bd23cdd33ef04e38e ]
    
    After submitting a Firmware Download MRPC command, Switchtec firmware will
    delay Management EP BAR MemRd TLP responses by more than 10ms.  This is a
    firmware limitation.  Delayed MemRd completions are a problem for systems
    with a low Completion Timeout (CTO).
    
    The current driver checks the MRPC status immediately after submitting an
    MRPC command, which results in a delayed MemRd completion that may cause a
    Completion Timeout.
    
    Remove the immediate status check and rely on the check after receiving an
    interrupt or timing out.
    
    This is only a software workaround to the READ issue and a proper fix of
    this should be done in firmware.
    
    Fixes: 080b47def5e5 ("MicroSemi Switchtec management interface driver")
    Signed-off-by: Kelvin Cao <kelvin.cao@microchip.com>
    Signed-off-by: Wesley Sheng <wesley.sheng@microchip.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c52e16253a5d6d810696a647107ea55909708f2
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Thu Dec 6 19:28:51 2018 +0100

    staging: bcm2835-camera: Abort probe if there is no camera
    
    [ Upstream commit 7566f39dfdc11f8a97d5810c6e6295a88f97ef91 ]
    
    Abort the probing of the camera driver in case there isn't a camera
    actually connected to the Raspberry Pi. This solution also avoids a
    NULL ptr dereference of mmal instance on driver unload.
    
    Fixes: 7b3ad5abf027 ("staging: Import the BCM2835 MMAL-based V4L2 camera driver.")
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7c34c31038087b6ba47c193f38a055d3adcd71d
Author: Yuval Shaia <yuval.shaia@oracle.com>
Date:   Sun Dec 9 15:53:49 2018 +0200

    IB/rxe: Fix incorrect cache cleanup in error flow
    
    [ Upstream commit 6db21d8986e14e2e86573a3b055b05296188bd2c ]
    
    Array iterator stays at the same slot, fix it.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Signed-off-by: Yuval Shaia <yuval.shaia@oracle.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Zhu Yanjun <yanjun.zhu@oracle.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b1cee5e5f1fb7d9938066acd36f8be60e017742
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Nov 28 09:02:41 2018 +0000

    net: phy: Fix not to call phy_resume() if PHY is not attached
    
    [ Upstream commit ef1b5bf506b1f0ee3edc98533e1f3ecb105eb46a ]
    
    This patch fixes an issue that mdio_bus_phy_resume() doesn't call
    phy_resume() if the PHY is not attached.
    
    Fixes: 803dd9c77ac3 ("net: phy: avoid suspending twice a PHY")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc27e03fc4769daeeb17947f99001eb94221922c
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Nov 13 17:46:14 2018 -0500

    drm/dp_mst: Skip validating ports during destruction, just ref
    
    [ Upstream commit c54c7374ff44de5e609506aca7c0deae4703b6d1 ]
    
    Jerry Zuo pointed out a rather obscure hotplugging issue that it seems I
    accidentally introduced into DRM two years ago.
    
    Pretend we have a topology like this:
    
    |- DP-1: mst_primary
       |- DP-4: active display
       |- DP-5: disconnected
       |- DP-6: active hub
          |- DP-7: active display
          |- DP-8: disconnected
          |- DP-9: disconnected
    
    If we unplug DP-6, the topology starting at DP-7 will be destroyed but
    it's payloads will live on in DP-1's VCPI allocations and thus require
    removal. However, this removal currently fails because
    drm_dp_update_payload_part1() will (rightly so) try to validate the port
    before accessing it, fail then abort. If we keep going, eventually we
    run the MST hub out of bandwidth and all new allocations will start to
    fail (or in my case; all new displays just start flickering a ton).
    
    We could just teach drm_dp_update_payload_part1() not to drop the port
    ref in this case, but then we also need to teach
    drm_dp_destroy_payload_step1() to do the same thing, then hope no one
    ever adds anything to the that requires a validated port reference in
    drm_dp_destroy_connector_work(). Kind of sketchy.
    
    So let's go with a more clever solution: any port that
    drm_dp_destroy_connector_work() interacts with is guaranteed to still
    exist in memory until we say so. While said port might not be valid we
    don't really care: that's the whole reason we're destroying it in the
    first place! So, teach drm_dp_get_validated_port_ref() to use the all
    mighty current_work() function to avoid attempting to validate ports
    from the context of mgr->destroy_connector_work. I can't see any
    situation where this wouldn't be safe, and this avoids having to play
    whack-a-mole in the future of trying to work around port validation.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 263efde31f97 ("drm/dp/mst: Get validated port ref in drm_dp_update_payload_part1()")
    Reported-by: Jerry Zuo <Jerry.Zuo@amd.com>
    Cc: Jerry Zuo <Jerry.Zuo@amd.com>
    Cc: Harry Wentland <Harry.Wentland@amd.com>
    Cc: <stable@vger.kernel.org> # v4.6+
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181113224613.28809-1-lyude@redhat.com
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6e209a13a61b65848e214319e3348e5e23346cb
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Nov 19 11:32:41 2018 +0800

    exportfs: fix 'passing zero to ERR_PTR()' warning
    
    [ Upstream commit 909e22e05353a783c526829427e9a8de122fba9c ]
    
    Fix a static code checker warning:
      fs/exportfs/expfs.c:171 reconnect_one() warn: passing zero to 'ERR_PTR'
    
    The error path for lookup_one_len_unlocked failure
    should set err to PTR_ERR.
    
    Fixes: bbf7a8a3562f ("exportfs: move most of reconnect_path to helper function")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a0c3bc2cf9e08a6abed982fdeba0e8aca48fbe6
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Oct 27 15:49:26 2018 +0100

    pcrypt: use format specifier in kobject_add
    
    [ Upstream commit b1e3874c75ab15288f573b3532e507c37e8e7656 ]
    
    Passing string 'name' as the format specifier is potentially hazardous
    because name could (although very unlikely to) have a format specifier
    embedded in it causing issues when parsing the non-existent arguments
    to these.  Follow best practice by using the "%s" format string for
    the string 'name'.
    
    Cleans up clang warning:
    crypto/pcrypt.c:397:40: warning: format string is not a string literal
    (potentially insecure) [-Wformat-security]
    
    Fixes: a3fb1e330dd2 ("pcrypt: Added sysfs interface to pcrypt")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3708b8b2762296d7dde4fcac127c5bfffc3b8e5
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Mon Aug 27 17:13:06 2018 -0500

    NTB: ntb_hw_idt: replace IS_ERR_OR_NULL with regular NULL checks
    
    [ Upstream commit 1b7619828d0c341612f58683e73f279c37e70bbc ]
    
    Both devm_kcalloc() and devm_kzalloc() return NULL on error. They
    never return error pointers.
    
    The use of IS_ERR_OR_NULL is currently applied to the wrong
    context.
    
    Fix this by replacing IS_ERR_OR_NULL with regular NULL checks.
    
    Fixes: bf2a952d31d2 ("NTB: Add IDT 89HPESxNTx PCIe-switches support")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b92c7db5c89f62989cdd5049b7f4a9b83082324f
Author: Petr Machata <petrm@mellanox.com>
Date:   Wed Oct 31 09:56:42 2018 +0000

    mlxsw: reg: QEEC: Add minimum shaper fields
    
    [ Upstream commit 8b931821aa04823e2e5df0ae93937baabbd23286 ]
    
    Add QEEC.mise (minimum shaper enable) and QEEC.min_shaper_rate to enable
    configuration of minimum shaper.
    
    Increase the QEEC length to 0x20 as well: that's the length that the
    register has had for a long time now, but with the configurations that
    mlxsw typically exercises, the firmware tolerated 0x1C-sized packets.
    With mise=true however, FW rejects packets unless they have the full
    required length.
    
    Fixes: b9b7cee40579 ("mlxsw: reg: Add QoS ETS Element Configuration register")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a5aee840210828e511cf45a94692d2854836361
Author: Maxime Ripard <mripard@kernel.org>
Date:   Sun Oct 21 18:34:46 2018 +0200

    drm/sun4i: hdmi: Fix double flag assignation
    
    [ Upstream commit 1e0ff648940e603cab6c52cf3723017d30d78f30 ]
    
    The is_double flag is a boolean currently assigned to the value of the d
    variable, that is either 1 or 2. It means that this is_double variable is
    always set to true, even though the initial intent was to have it set to
    true when d is 2.
    
    Fix this.
    
    Fixes: 9c5681011a0c ("drm/sun4i: Add HDMI support")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Reviewed-by: Giulio Benetti <giulio.benetti@micronovasrl.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20181021163446.29135-2-maxime.ripard@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfd5e35ba3b4c33dd846d521fdf7933a52c8c543
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Oct 12 12:12:28 2018 +0200

    pwm: lpss: Release runtime-pm reference from the driver's remove callback
    
    [ Upstream commit 42885551cedb45961879d2fc3dc3c4dc545cc23e ]
    
    For each pwm output which gets enabled through pwm_lpss_apply(), we do a
    pm_runtime_get_sync().
    
    This commit adds pm_runtime_put() calls to pwm_lpss_remove() to balance
    these when the driver gets removed with some of the outputs still enabled.
    
    Fixes: f080be27d7d9 ("pwm: lpss: Add support for runtime PM")
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27db95dfd2045e39226feba0610f67063f8f6e82
Author: Spencer E. Olson <olsonse@umich.edu>
Date:   Wed Oct 3 14:54:16 2018 -0600

    staging: comedi: ni_mio_common: protect register write overflow
    
    [ Upstream commit 1cbca5852d6c16e85a21487a15d211195aacd4a1 ]
    
    Fixes two problems introduced as early as
    commit 03aef4b6dc12  ("Staging: comedi: add ni_mio_common code"):
    (1) Ensures that the last four bits of NISTC_RTSI_TRIGB_OUT_REG register is
        not unduly overwritten on e-series devices.  On e-series devices, the
        first three of the last four bits are reserved.  The last bit defines
        the output selection of the RGOUT0 pin, otherwise known as
        RTSI_Sub_Selection.  For m-series devices, these last four bits are
        indeed used as the output selection of the RTSI7 pin (and the
        RTSI_Sub_Selection bit for the RGOUT0 pin is moved to the
        RTSI_Trig_Direction register.
    (2) Allows all 4 RTSI_BRD lines to be treated as valid sources for RTSI
        lines.
    
    This patch also cleans up the ni_get_rtsi_routing command for readability.
    
    Fixes: 03aef4b6dc12  ("Staging: comedi: add ni_mio_common code")
    Signed-off-by: Spencer E. Olson <olsonse@umich.edu>
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48eba57c43a1ee1810a257152c89cf7dfa812d56
Author: Nicolas Huaman <nicolas@herochao.de>
Date:   Thu Oct 4 16:42:05 2018 +0200

    ALSA: usb-audio: update quirk for B&W PX to remove microphone
    
    [ Upstream commit c369c8db15d51fa175d2ba85928f79d16af6b562 ]
    
    A quirk in snd-usb-audio was added to automate setting sample rate to
    4800k and remove the previously exposed nonfunctional microphone for
    the Bowers & Wilkins PX:
    commit 240a8af929c7c57dcde28682725b29cf8474e8e5
    https://lore.kernel.org/patchwork/patch/919689/
    
    However the headphones where updated shortly after that to remove the
    unintentional microphone functionality. I guess because of this the
    headphones now crash when connecting them via USB while the quirk is
    active. Dmesg:
    
    snd-usb-audio: probe of 2-3:1.0 failed with error -22
    usb 2-3: 2:1: cannot get min/max values for control 2 (id 2)
    
    This patch removes the microfone and allows the headphones to connect
    and work out of the box. It is based on the current mainline kernel
     and successfully applied an tested on my machine (4.18.10.arch1-1).
    
    Fixes: 240a8af929c7 ("ALSA: usb-audio: Add a quirck for B&W PX headphones")
    Signed-off-by: Nicolas Huaman <nicolas@herochao.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 805d9b456cea5b0c09e2a2cab291bd6291f8ed85
Author: Alex Estrin <alex.estrin@intel.com>
Date:   Wed Sep 26 10:56:03 2018 -0700

    IB/hfi1: Add mtu check for operational data VLs
    
    [ Upstream commit eb50130964e8c1379f37c3d3bab33a411ec62e98 ]
    
    Since Virtual Lanes BCT credits and MTU are set through separate MADs, we
    have to ensure both are valid, and data VLs are ready for transmission
    before we allow port transition to Armed state.
    
    Fixes: 5e2d6764a729 ("IB/hfi1: Verify port data VLs credits on transition to Armed")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Alex Estrin <alex.estrin@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19f75f6e5d3df311c0845c88cb60143f1621febd
Author: Zhu Yanjun <yanjun.zhu@oracle.com>
Date:   Sun Sep 30 01:57:42 2018 -0400

    IB/rxe: replace kvfree with vfree
    
    [ Upstream commit 721ad7e643f7002efa398838693f90284ea216d1 ]
    
    The buf is allocated by vmalloc_user in the function rxe_queue_init.
    So it is better to free it by vfree.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Zhu Yanjun <yanjun.zhu@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0442e745fbbc4678fbd341ebe9876b4041d7fd12
Author: John Garry <john.garry@huawei.com>
Date:   Sat Sep 22 01:25:26 2018 +0800

    drm/hisilicon: hibmc: Don't overwrite fb helper surface depth
    
    [ Upstream commit 0ff9f49646353ce31312411e7e7bd2281492a40e ]
    
    Currently the driver overwrites the surface depth provided by the fb
    helper to give an invalid bpp/surface depth combination.
    
    This has been exposed by commit 70109354fed2 ("drm: Reject unknown legacy
    bpp and depth for drm_mode_addfb ioctl"), which now causes the driver to
    fail to probe.
    
    Fix by not overwriting the surface depth.
    
    Fixes: d1667b86795a ("drm/hisilicon/hibmc: Add support for frame buffer")
    Signed-off-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Xinliang Liu <z.liuxinliang@hisilicon.com>
    Signed-off-by: Xinliang Liu <z.liuxinliang@hisilicon.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f4a33710523bb7be8b2d5c3c64ee737b957021f
Author: Jitendra Bhivare <jitendra.bhivare@broadcom.com>
Date:   Tue Aug 28 10:22:58 2018 -0700

    PCI: iproc: Remove PAXC slot check to allow VF support
    
    [ Upstream commit 4da6b4480766e5bc9c4d7bc14bf1d0939a1a5fa7 ]
    
    Fix previous incorrect logic that limits PAXC slot number to zero only.
    In order for SRIOV/VF to work, we need to allow the slot number to be
    greater than zero.
    
    Fixes: 46560388c476c ("PCI: iproc: Allow multiple devices except on PAXC")
    Signed-off-by: Jitendra Bhivare <jitendra.bhivare@broadcom.com>
    Signed-off-by: Ray Jui <ray.jui@broadcom.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Andy Gospodarek <gospo@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49f3e22df7169a098a13384b51a2caabbd77604c
Author: Jann Horn <jannh@google.com>
Date:   Thu Sep 13 18:12:09 2018 +0200

    apparmor: don't try to replace stale label in ptrace access check
    
    [ Upstream commit 1f8266ff58840d698a1e96d2274189de1bdf7969 ]
    
    As a comment above begin_current_label_crit_section() explains,
    begin_current_label_crit_section() must run in sleepable context because
    when label_is_stale() is true, aa_replace_current_label() runs, which uses
    prepare_creds(), which can sleep.
    Until now, the ptrace access check (which runs with a task lock held)
    violated this rule.
    
    Also add a might_sleep() assertion to begin_current_label_crit_section(),
    because asserts are less likely to be ignored than comments.
    
    Fixes: b2d09ae449ced ("apparmor: move ptrace checks to using labels")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 961e9f394d4ce5ec9518bd2c04469da5d2d9d3b3
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Tue Sep 11 16:18:36 2018 +0200

    ALSA: hda: fix unused variable warning
    
    [ Upstream commit 5b03006d5c58ddd31caf542eef4d0269bcf265b3 ]
    
    When CONFIG_X86=n function azx_snoop doesn't use the variable chip it
    only returns true.
    
    sound/pci/hda/hda_intel.c: In function ‘dma_alloc_pages’:
    sound/pci/hda/hda_intel.c:2002:14: warning: unused variable ‘chip’ [-Wunused-variable]
      struct azx *chip = bus_to_azx(bus);
                  ^~~~
    
    Create a inline function of azx_snoop.
    
    Fixes: a41d122449be ("ALSA: hda - Embed bus into controller object")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81f7d38650d13e431464e4935d188900bbd2ce5b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 4 12:42:50 2018 +0300

    drm/virtio: fix bounds check in virtio_gpu_cmd_get_capset()
    
    [ Upstream commit 09c4b49457434fa74749ad6194ef28464d9f5df9 ]
    
    This doesn't affect runtime because in the current code "idx" is always
    valid.
    
    First, we read from "vgdev->capsets[idx].max_size" before checking
    whether "idx" is within bounds.  And secondly the bounds check is off by
    one so we could end up reading one element beyond the end of the
    vgdev->capsets[] array.
    
    Fixes: 62fb7a5e1096 ("virtio-gpu: add 3d/virgl support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180704094250.m7sgvvzg3dhcvv3h@kili.mountain
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 204ad0b43e88bee9b46b1ac5e8c65d1bdf3da35b
Author: Peter Rosin <peda@axentia.se>
Date:   Mon Aug 6 08:19:09 2018 +0200

    drm/sti: do not remove the drm_bridge that was never added
    
    [ Upstream commit 66e31a72dc38543b2d9d1ce267dc78ba9beebcfd ]
    
    Removing the drm_bridge_remove call should avoid a NULL dereference
    during list processing in drm_bridge_remove if the error path is ever
    taken.
    
    The more natural approach would perhaps be to add a drm_bridge_add,
    but there are several other bridges that never call drm_bridge_add.
    Just removing the drm_bridge_remove is the easier fix.
    
    Fixes: 84601dbdea36 ("drm: sti: rework init sequence")
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180806061910.29914-2-peda@axentia.se
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90225af01dc97d907e9e44e694fba55212bb228e
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Thu Nov 14 13:58:49 2019 +0100

    crypto: sun4i-ss - fix big endian issues
    
    commit d1d787bcebfe122a5bd443ae565696661e2e9656 upstream.
    
    When testing BigEndian kernel, the sun4i-ss was failling all crypto
    tests.
    This patch fix endian issues with it.
    
    Fixes: 6298e948215f ("crypto: sunxi-ss - Add Allwinner Security System crypto accelerator")
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea6e0910c76008e4db710d9f02b743714daad611
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Sep 21 10:44:01 2019 +0200

    mt7601u: fix bbp version check in mt7601u_wait_bbp_ready
    
    commit 15e14f76f85f4f0eab3b8146e1cd3c58ce272823 upstream.
    
    Fix bbp ready check in mt7601u_wait_bbp_ready. The issue is reported by
    coverity with the following error:
    
    Logical vs. bitwise operator
    The expression's value does not depend on the operands; inadvertent use
    of the wrong operator is a likely logic error.
    
    Addresses-Coverity-ID: 1309441 ("Logical vs. bitwise operator")
    Fixes: c869f77d6abb ("add mt7601u driver")
    Acked-by: Jakub Kicinski <kubakici@wp.pl>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d6331c0f5b4b2b40e109ab6df11c3a880eda3be
Author: Tung Nguyen <tung.q.nguyen@dektech.com.au>
Date:   Thu Nov 28 10:10:07 2019 +0700

    tipc: fix wrong timeout input for tipc_wait_for_cond()
    
    commit 12db3c8083fcab4270866a88191933f2d9f24f89 upstream.
    
    In function __tipc_shutdown(), the timeout value passed to
    tipc_wait_for_cond() is not jiffies.
    
    This commit fixes it by converting that value from milliseconds
    to jiffies.
    
    Fixes: 365ad353c256 ("tipc: reduce risk of user starvation during link congestion")
    Signed-off-by: Tung Nguyen <tung.q.nguyen@dektech.com.au>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e4108de535ce81a68eb7418ad92ce4b87eb5e61
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Dec 4 11:50:15 2019 +0000

    powerpc/archrandom: fix arch_get_random_seed_int()
    
    commit b6afd1234cf93aa0d71b4be4788c47534905f0be upstream.
    
    Commit 01c9348c7620ec65
    
      powerpc: Use hardware RNG for arch_get_random_seed_* not arch_get_random_*
    
    updated arch_get_random_[int|long]() to be NOPs, and moved the hardware
    RNG backing to arch_get_random_seed_[int|long]() instead. However, it
    failed to take into account that arch_get_random_int() was implemented
    in terms of arch_get_random_long(), and so we ended up with a version
    of the former that is essentially a NOP as well.
    
    Fix this by calling arch_get_random_seed_long() from
    arch_get_random_seed_int() instead.
    
    Fixes: 01c9348c7620ec65 ("powerpc: Use hardware RNG for arch_get_random_seed_* not arch_get_random_*")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191204115015.18015-1-ardb@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 137875d425bb04eb6fbf98f50fdae0a592dee96b
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Wed Sep 4 08:56:25 2019 +0300

    mfd: intel-lpss: Add default I2C device properties for Gemini Lake
    
    commit 3f31bc67e4dc6a555341dffefe328ddd58e8b431 upstream.
    
    It turned out Intel Gemini Lake doesn't use the same I2C timing
    parameters as Broxton.
    
    I got confirmation from the Windows team that Gemini Lake systems should
    use updated timing parameters that differ from those used in Broxton
    based systems.
    
    Fixes: f80e78aa11ad ("mfd: intel-lpss: Add Intel Gemini Lake PCI IDs")
    Tested-by: Chris Chiu <chiu@endlessm.com>
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e71ab588b09178efc05c401db29b6c8f426b9917
Author: Jan Kara <jack@suse.cz>
Date:   Wed Oct 23 17:00:45 2019 -0700

    xfs: Sanity check flags of Q_XQUOTARM call
    
    commit 3dd4d40b420846dd35869ccc8f8627feef2cff32 upstream.
    
    Flags passed to Q_XQUOTARM were not sanity checked for invalid values.
    Fix that.
    
    Fixes: 9da93f9b7cdf ("xfs: fix Q_XQUOTARM ioctl")
    Reported-by: Yang Xu <xuyang2018.jy@cn.fujitsu.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
