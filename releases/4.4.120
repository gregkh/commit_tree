commit 47356cfded444826565f2430bce8ba294372b861
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Mar 3 10:19:46 2018 +0100

    Linux 4.4.120

commit cacdb0162489b42f6b46e132b4d08860aa9a07c9
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Dec 7 07:20:46 2017 +0000

    MIPS: Implement __multi3 for GCC7 MIPS64r6 builds
    
    commit ebabcf17bcd7ce968b1631ebe08236275698f39b upstream.
    
    GCC7 is a bit too eager to generate suboptimal __multi3 calls (128bit
    multiply with 128bit result) for MIPS64r6 builds, even in code which
    doesn't explicitly use 128bit types, such as the following:
    
    unsigned long func(unsigned long a, unsigned long b)
    {
            return a > (~0UL) / b;
    }
    
    Which GCC rearanges to:
    
    return (unsigned __int128)a * (unsigned __int128)b > 0xffffffffffffffff;
    
    Therefore implement __multi3, but only for MIPS64r6 with GCC7 as under
    normal circumstances we wouldn't expect any calls to __multi3 to be
    generated from kernel code.
    
    Reported-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Tested-by: Waldemar Brodkorb <wbx@openadk.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Maciej W. Rozycki <macro@mips.com>
    Cc: Matthew Fortune <matthew.fortune@mips.com>
    Cc: Florian Fainelli <florian@openwrt.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17890/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37d866a9e5656b2c4e32817a8cb0ff212ad227e9
Author: Yangbo Lu <yangbo.lu@nxp.com>
Date:   Tue Jan 9 11:02:33 2018 +0800

    net: gianfar_ptp: move set_fipers() to spinlock protecting area
    
    
    [ Upstream commit 11d827a993a969c3c6ec56758ff63a44ba19b466 ]
    
    set_fipers() calling should be protected by spinlock in
    case that any interrupt breaks related registers setting
    and the function we expect. This patch is to move set_fipers()
    to spinlock protecting area in ptp_gianfar_adjtime().
    
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adad04f306ea7e2d8734305cf76508cb2643422b
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jan 8 19:02:29 2018 -0200

    sctp: make use of pre-calculated len
    
    
    [ Upstream commit c76f97c99ae6d26d14c7f0e50e074382bfbc9f98 ]
    
    Some sockopt handling functions were calculating the length of the
    buffer to be written to userspace and then calculating it again when
    actually writing the buffer, which could lead to some write not using
    an up-to-date length.
    
    This patch updates such places to just make use of the len variable.
    
    Also, replace some sizeof(type) to sizeof(var).
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 041250d9c35afde56628f11c4ed6d59d701b0b4c
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:22 2018 +0000

    xen/gntdev: Fix partial gntdev_mmap() cleanup
    
    
    [ Upstream commit cf2acf66ad43abb39735568f55e1f85f9844e990 ]
    
    When cleaning up after a partially successful gntdev_mmap(), unmap the
    successfully mapped grant pages otherwise Xen will kill the domain if
    in debug mode (Attempt to implicitly unmap a granted PTE) or Linux will
    kill the process and emit "BUG: Bad page map in process" if Xen is in
    release mode.
    
    This is only needed when use_ptemod is true because gntdev_put_map()
    will unmap grant pages itself when use_ptemod is false.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ca929480b7b03c064c2258891f0bcd6f53122cc
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Tue Jan 9 12:10:21 2018 +0000

    xen/gntdev: Fix off-by-one error when unmapping with holes
    
    
    [ Upstream commit 951a010233625b77cde3430b4b8785a9a22968d1 ]
    
    If the requested range has a hole, the calculation of the number of
    pages to unmap is off by one. Fix it.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f102d7af10cdbc9a90abb635c790f1071765421
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Jan 6 21:53:26 2018 +0300

    SolutionEngine771x: fix Ether platform data
    
    
    [ Upstream commit 195e2addbce09e5afbc766efc1e6567c9ce840d3 ]
    
    The 'sh_eth' driver's probe() method would fail  on the SolutionEngine7710
    board and crash on SolutionEngine7712 board  as the platform code is
    hopelessly behind the driver's platform data --  it passes the PHY address
    instead of 'struct sh_eth_plat_data *'; pass the latter to the driver in
    order to fix the bug...
    
    Fixes: 71557a37adb5 ("[netdrvr] sh_eth: Add SH7619 support")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f49e50f830a17f8ea0b6e3df0630e64f0e150a77
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 6 09:00:09 2018 +0100

    mdio-sun4i: Fix a memory leak
    
    
    [ Upstream commit 56c0290202ab94a2f2780c449395d4ae8495fab4 ]
    
    If the probing of the regulator is deferred, the memory allocated by
    'mdiobus_alloc_size()' will be leaking.
    It should be freed before the next call to 'sun4i_mdio_probe()' which will
    reallocate it.
    
    Fixes: 4bdcb1dd9feb ("net: Add MDIO bus driver for the Allwinner EMAC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63b9e4176b4a47dfa4e1354eb08360d0db4920df
Author: Eduardo Otubo <otubo@redhat.com>
Date:   Fri Jan 5 09:42:16 2018 +0100

    xen-netfront: enable device after manual module load
    
    
    [ Upstream commit b707fda2df4070785d0fa8a278aa13944c5f51f8 ]
    
    When loading the module after unloading it, the network interface would
    not be enabled and thus wouldn't have a backend counterpart and unable
    to be used by the guest.
    
    The guest would face errors like:
    
      [root@guest ~]# ethtool -i eth0
      Cannot get driver information: No such device
    
      [root@guest ~]# ifconfig eth0
      eth0: error fetching interface information: Device not found
    
    This patch initializes the state of the netfront device whenever it is
    loaded manually, this state would communicate the netback to create its
    device and establish the connection between them.
    
    Signed-off-by: Eduardo Otubo <otubo@redhat.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e943a8530a7ed15a9f1f1856742fac8a99c6d17
Author: Venkat Duvvuru <venkatkumar.duvvuru@broadcom.com>
Date:   Thu Jan 4 18:46:55 2018 -0500

    bnxt_en: Fix the 'Invalid VF' id check in bnxt_vf_ndo_prep routine.
    
    
    [ Upstream commit 78f300049335ae81a5cc6b4b232481dc5e1f9d41 ]
    
    In bnxt_vf_ndo_prep (which is called by bnxt_get_vf_config ndo), there is a
    check for "Invalid VF id". Currently, the check is done against max_vfs.
    However, the user doesn't always create max_vfs. So, the check should be
    against the created number of VFs. The number of bnxt_vf_info structures
    that are allocated in bnxt_alloc_vf_resources routine is the "number of
    requested VFs". So, if an "invalid VF id" falls between the requested
    number of VFs and the max_vfs, the driver will be dereferencing an invalid
    pointer.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Venkat Devvuru <venkatkumar.duvvuru@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7776af55a7aea339c72a13ab6d2f2e90383e19bf
Author: Luu An Phu <phu.luuan@nxp.com>
Date:   Tue Jan 2 10:44:18 2018 +0700

    can: flex_can: Correct the checking for frame length in flexcan_start_xmit()
    
    
    [ Upstream commit 13454c14550065fcc1705d6bd4ee6d40e057099f ]
    
    The flexcan_start_xmit() function compares the frame length with data
    register length to write frame content into data[0] and data[1]
    register. Data register length is 4 bytes and frame maximum length is 8
    bytes.
    
    Fix the check that compares frame length with 3. Because the register
    length is 4.
    
    Signed-off-by: Luu An Phu <phu.luuan@nxp.com>
    Reviewed-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab70448a0cfc317a6ce4a4235a63543117c9d0ea
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Jan 4 15:51:53 2018 +0100

    mac80211: mesh: drop frames appearing to be from us
    
    
    [ Upstream commit 736a80bbfda709fb3631f5f62056f250a38e5804 ]
    
    If there are multiple mesh stations with the same MAC address,
    they will both get confused and start throwing warnings.
    
    Obviously in this case nothing can actually work anyway, so just
    drop frames that look like they're from ourselves early on.
    
    Reported-by: Gui Iribarren <gui@altermundi.net>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fe227000f71fa94a1415d0c8cafa7edda1534ba
Author: Xiongwei Song <sxwjean@gmail.com>
Date:   Tue Jan 2 21:24:55 2018 +0800

    drm/ttm: check the return value of kzalloc
    
    
    [ Upstream commit 19d859a7205bc59ffc38303eb25ae394f61d21dc ]
    
    In the function ttm_page_alloc_init, kzalloc call is made for variable
    _manager, we need to check its return value, it may return NULL.
    
    Signed-off-by: Xiongwei Song <sxwjean@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d60bca969011e3505db238c33d00ac62906e5fe2
Author: Tushar Dave <tushar.n.dave@oracle.com>
Date:   Wed Dec 6 02:26:29 2017 +0530

    e1000: fix disabling already-disabled warning
    
    
    [ Upstream commit 0b76aae741abb9d16d2c0e67f8b1e766576f897d ]
    
    This patch adds check so that driver does not disable already
    disabled device.
    
    [   44.637743] advantechwdt: Unexpected close, not stopping watchdog!
    [   44.997548] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input6
    [   45.013419] e1000 0000:00:03.0: disabling already-disabled device
    [   45.013447] ------------[ cut here ]------------
    [   45.014868] WARNING: CPU: 1 PID: 71 at drivers/pci/pci.c:1641 pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.016171] CPU: 1 PID: 71 Comm: rcu_perf_shutdo Not tainted 4.14.0-01330-g3c07399 #1
    [   45.017197] task: ffff88011bee9e40 task.stack: ffffc90000860000
    [   45.017987] RIP: 0010:pci_disable_device+0xa1/0x105:
                                                    pci_disable_device at drivers/pci/pci.c:1640
    [   45.018603] RSP: 0000:ffffc90000863e30 EFLAGS: 00010286
    [   45.019282] RAX: 0000000000000035 RBX: ffff88013a230008 RCX: 0000000000000000
    [   45.020182] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000203
    [   45.021084] RBP: ffff88013a3f31e8 R08: 0000000000000001 R09: 0000000000000000
    [   45.021986] R10: ffffffff827ec29c R11: 0000000000000002 R12: 0000000000000001
    [   45.022946] R13: ffff88013a230008 R14: ffff880117802b20 R15: ffffc90000863e8f
    [   45.023842] FS:  0000000000000000(0000) GS:ffff88013fd00000(0000) knlGS:0000000000000000
    [   45.024863] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   45.025583] CR2: ffffc900006d4000 CR3: 000000000220f000 CR4: 00000000000006a0
    [   45.026478] Call Trace:
    [   45.026811]  __e1000_shutdown+0x1d4/0x1e2:
                                                    __e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5162
    [   45.027344]  ? rcu_perf_cleanup+0x2a1/0x2a1:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:627
    [   45.027883]  e1000_shutdown+0x14/0x3a:
                                                    e1000_shutdown at drivers/net/ethernet/intel/e1000/e1000_main.c:5235
    [   45.028351]  device_shutdown+0x110/0x1aa:
                                                    device_shutdown at drivers/base/core.c:2807
    [   45.028858]  kernel_power_off+0x31/0x64:
                                                    kernel_power_off at kernel/reboot.c:260
    [   45.029343]  rcu_perf_shutdown+0x9b/0xa7:
                                                    rcu_perf_shutdown at kernel/rcu/rcuperf.c:637
    [   45.029852]  ? __wake_up_common_lock+0xa2/0xa2:
                                                    autoremove_wake_function at kernel/sched/wait.c:376
    [   45.030414]  kthread+0x126/0x12e:
                                                    kthread at kernel/kthread.c:233
    [   45.030834]  ? __kthread_bind_mask+0x8e/0x8e:
                                                    kthread at kernel/kthread.c:190
    [   45.031399]  ? ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.031883]  ? kernel_init+0xa/0xf5:
                                                    kernel_init at init/main.c:997
    [   45.032325]  ret_from_fork+0x1f/0x30:
                                                    ret_from_fork at arch/x86/entry/entry_64.S:443
    [   45.032777] Code: 00 48 85 ed 75 07 48 8b ab a8 00 00 00 48 8d bb 98 00 00 00 e8 aa d1 11 00 48 89 ea 48 89 c6 48 c7 c7 d8 e4 0b 82 e8 55 7d da ff <0f> ff b9 01 00 00 00 31 d2 be 01 00 00 00 48 c7 c7 f0 b1 61 82
    [   45.035222] ---[ end trace c257137b1b1976ef ]---
    [   45.037838] ACPI: Preparing to enter system sleep state S5
    
    Signed-off-by: Tushar Dave <tushar.n.dave@oracle.com>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bfb63b4e796aadf5ac7a2988c68bda5fa265977
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: check result of register_shrinker()
    
    
    [ Upstream commit 3a3882ff26fbdbaf5f7e13f6a0bccfbf7121041d ]
    
    xfs_qm_init_quotainfo() does not check result of register_shrinker()
    which was tagged as __must_check recently, reported by sparse.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    [darrick: move xfs_qm_destroy_quotainos nearer xfs_qm_init_quotainos]
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a72e35738163e36905012537c6a44c87fa61475a
Author: Aliaksei Karaliou <akaraliou.dev@gmail.com>
Date:   Thu Dec 21 13:18:26 2017 -0800

    xfs: quota: fix missed destroy of qi_tree_lock
    
    
    [ Upstream commit 2196881566225f3c3428d1a5f847a992944daa5b ]
    
    xfs_qm_destroy_quotainfo() does not destroy quotainfo->qi_tree_lock
    while destroys quotainfo->qi_quotaofflock.
    
    Signed-off-by: Aliaksei Karaliou <akaraliou.dev@gmail.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fed4d0f0eece8427ee125c5e8475fe862b6cea65
Author: Erez Shitrit <erezsh@mellanox.com>
Date:   Sun Dec 31 15:33:15 2017 +0200

    IB/ipoib: Fix race condition in neigh creation
    
    
    [ Upstream commit 16ba3defb8bd01a9464ba4820a487f5b196b455b ]
    
    When using enhanced mode for IPoIB, two threads may execute xmit in
    parallel to two different TX queues while the target is the same.
    In this case, both of them will add the same neighbor to the path's
    neigh link list and we might see the following message:
    
      list_add double add: new=ffff88024767a348, prev=ffff88024767a348...
      WARNING: lib/list_debug.c:31__list_add_valid+0x4e/0x70
      ipoib_start_xmit+0x477/0x680 [ib_ipoib]
      dev_hard_start_xmit+0xb9/0x3e0
      sch_direct_xmit+0xf9/0x250
      __qdisc_run+0x176/0x5d0
      __dev_queue_xmit+0x1f5/0xb10
      __dev_queue_xmit+0x55/0xb10
    
    Analysis:
    Two SKB are scheduled to be transmitted from two cores.
    In ipoib_start_xmit, both gets NULL when calling ipoib_neigh_get.
    Two calls to neigh_add_path are made. One thread takes the spin-lock
    and calls ipoib_neigh_alloc which creates the neigh structure,
    then (after the __path_find) the neigh is added to the path's neigh
    link list. When the second thread enters the critical section it also
    calls ipoib_neigh_alloc but in this case it gets the already allocated
    ipoib_neigh structure, which is already linked to the path's neigh
    link list and adds it again to the list. Which beside of triggering
    the list, it creates a loop in the linked list. This loop leads to
    endless loop inside path_rec_completion.
    
    Solution:
    Check list_empty(&neigh->list) before adding to the list.
    Add a similar fix in "ipoib_multicast.c::ipoib_mcast_send"
    
    Fixes: b63b70d87741 ('IPoIB: Use a private hash table for path lookup in xmit path')
    Signed-off-by: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7658893313ff67b2ef6ad3b821952809158d916
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Dec 31 15:33:14 2017 +0200

    IB/mlx4: Fix mlx4_ib_alloc_mr error flow
    
    
    [ Upstream commit 5a371cf87e145b86efd32007e46146e78c1eff6d ]
    
    ibmr.device is being set only after ib_alloc_mr() is successfully complete.
    Therefore, in case imlx4_mr_enable() returns with error, the error flow
    unwinder calls to mlx4_free_priv_pages(), which uses ibmr.device.
    
    Such usage causes to NULL dereference oops and to fix it, the IB device
    should be set in the mr struct earlier stage (e.g. prior to calling
    mlx4_free_priv_pages()).
    
    Fixes: 1b2cd0fc673c ("IB/mlx4: Support the new memory registration API")
    Signed-off-by: Nitzan Carmi <nitzanc@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8d6a1cfa3090d11bc811a80d48a0877ada33278
Author: Stefan Haberland <sth@linux.vnet.ibm.com>
Date:   Wed Dec 6 10:30:39 2017 +0100

    s390/dasd: fix wrongly assigned configuration data
    
    
    [ Upstream commit 8a9bd4f8ebc6800bfc0596e28631ff6809a2f615 ]
    
    We store per path and per device configuration data to identify the
    path or device correctly. The per path configuration data might get
    mixed up if the original request gets into error recovery and is
    started with a random path mask.
    
    This would lead to a wrong identification of a path in case of a CUIR
    event for example.
    
    Fix by copying the path mask from the original request to the error
    recovery request in case it is a path verification request.
    
    Signed-off-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Reviewed-by: Jan Hoeppner <hoeppner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20ac8f72514b3af8b62c520d55656ded865eff00
Author: Matthieu CASTET <matthieu.castet@parrot.com>
Date:   Tue Dec 12 11:10:44 2017 +0100

    led: core: Fix brightness setting when setting delay_off=0
    
    
    [ Upstream commit 2b83ff96f51d0b039c4561b9f95c824d7bddb85c ]
    
    With the current code, the following sequence won't work :
    echo timer > trigger
    
    echo 0 >  delay_off
    * at this point we call
    ** led_delay_off_store
    ** led_blink_set

commit a4bd8a5a0c27b22b77076d6699b8fd9a4ddcea92
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Fri Dec 22 13:01:39 2017 -0200

    bnx2x: Improve reliability in case of nested PCI errors
    
    
    [ Upstream commit f7084059a9cb9e56a186e1677b1dcffd76c2cd24 ]
    
    While in recovery process of PCI error (called EEH on PowerPC arch),
    another PCI transaction could be corrupted causing a situation of
    nested PCI errors. Also, this scenario could be reproduced with
    error injection mechanisms (for debug purposes).
    
    We observe that in case of nested PCI errors, bnx2x might attempt to
    initialize its shmem and cause a kernel crash due to bad addresses
    read from MCP. Multiple different stack traces were observed depending
    on the point the second PCI error happens.
    
    This patch avoids the crashes by:
    
     * failing PCI recovery in case of nested errors (since multiple
     PCI errors in a row are not expected to lead to a functional
     adapter anyway), and by,
    
     * preventing access to adapter FW when MCP is failed (we mark it as
     failed when shmem cannot get initialized properly).
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Acked-by: Shahed Shaikh <Shahed.Shaikh@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1f8a5e0a7cbf92ebcd42e8180942a794df1b64b
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:29 2017 +0530

    tg3: Enable PHY reset in MTU change path for 5720
    
    
    [ Upstream commit e60ee41aaf898584205a6af5c996860d0fe6a836 ]
    
    A customer noticed RX path hang when MTU is changed on the fly while
    running heavy traffic with NCSI enabled for 5717 and 5719. Since 5720
    belongs to same ASIC family, we observed same issue and same fix
    could solve this problem for 5720.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0349a209bac39c5cce82217c3c6b959719837efa
Author: Siva Reddy Kallam <siva.kallam@broadcom.com>
Date:   Fri Dec 22 16:05:28 2017 +0530

    tg3: Add workaround to restrict 5762 MRRS to 2048
    
    
    [ Upstream commit 4419bb1cedcda0272e1dc410345c5a1d1da0e367 ]
    
    One of AMD based server with 5762 hangs with jumbo frame traffic.
    This AMD platform has southbridge limitation which is restricting MRRS
    to 4000. As a work around, driver to restricts the MRRS to 2048 for
    this particular 5762 NX1 card.
    
    Signed-off-by: Siva Reddy Kallam <siva.kallam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0db6b1db4f27f1a9f42c37579aee125334ce702e
Author: James Hogan <jhogan@kernel.org>
Date:   Tue Dec 5 23:31:35 2017 +0000

    lib/mpi: Fix umul_ppmm() for MIPS64r6
    
    
    [ Upstream commit bbc25bee37d2b32cf3a1fab9195b6da3a185614a ]
    
    Current MIPS64r6 toolchains aren't able to generate efficient
    DMULU/DMUHU based code for the C implementation of umul_ppmm(), which
    performs an unsigned 64 x 64 bit multiply and returns the upper and
    lower 64-bit halves of the 128-bit result. Instead it widens the 64-bit
    inputs to 128-bits and emits a __multi3 intrinsic call to perform a 128
    x 128 multiply. This is both inefficient, and it results in a link error
    since we don't include __multi3 in MIPS linux.
    
    For example commit 90a53e4432b1 ("cfg80211: implement regdb signature
    checking") merged in v4.15-rc1 recently broke the 64r6_defconfig and
    64r6el_defconfig builds by indirectly selecting MPILIB. The same build
    errors can be reproduced on older kernels by enabling e.g. CRYPTO_RSA:
    
    lib/mpi/generic_mpih-mul1.o: In function `mpihelp_mul_1':
    lib/mpi/generic_mpih-mul1.c:50: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul2.o: In function `mpihelp_addmul_1':
    lib/mpi/generic_mpih-mul2.c:49: undefined reference to `__multi3'
    lib/mpi/generic_mpih-mul3.o: In function `mpihelp_submul_1':
    lib/mpi/generic_mpih-mul3.c:49: undefined reference to `__multi3'
    lib/mpi/mpih-div.o In function `mpihelp_divrem':
    lib/mpi/mpih-div.c:205: undefined reference to `__multi3'
    lib/mpi/mpih-div.c:142: undefined reference to `__multi3'
    
    Therefore add an efficient MIPS64r6 implementation of umul_ppmm() using
    inline assembly and the DMULU/DMUHU instructions, to prevent __multi3
    calls being emitted.
    
    Fixes: 7fd08ca58ae6 ("MIPS: Add build support for the MIPS R6 ISA")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: linux-mips@linux-mips.org
    Cc: linux-crypto@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cb222a5d7b25985bcf2e06ec189c0f08a8ae823
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Dec 21 22:35:19 2017 +0100

    ARM: dts: ls1021a: fix incorrect clock references
    
    
    [ Upstream commit 506e8a912661c97b41adc8a286b875d01323ec45 ]
    
    dtc warns about two 'clocks' properties that have an extraneous '1'
    at the end:
    
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a
    arch/arm/boot/dts/ls1021a-qds.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2180000/mux@77/i2c@4/sgtl5000@2a:clocks[1])
    Property 'clocks', cell 1 is not a phandle reference in /soc/i2c@2190000/sgtl5000@a
    arch/arm/boot/dts/ls1021a-twr.dtb: Warning (clocks_property): Missing property '#clock-cells' in node /soc/interrupt-controller@1400000 or bad phandle (referred from /soc/i2c@2190000/sgtl5000@a:clocks[1])
    
    The clocks that get referenced here are fixed-rate, so they do not
    take any argument, and dtc interprets the next cell as a phandle, which
    is invalid.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 257cdd54c1bde7f272f79792715cd7af83ccb31e
Author: Cathy Avery <cavery@redhat.com>
Date:   Tue Dec 19 13:32:48 2017 -0500

    scsi: storvsc: Fix scsi_cmd error assignments in storvsc_handle_error
    
    
    [ Upstream commit d1b8b2391c24751e44f618fcf86fb55d9a9247fd ]
    
    When an I/O is returned with an srb_status of SRB_STATUS_INVALID_LUN
    which has zero good_bytes it must be assigned an error. Otherwise the
    I/O will be continuously requeued and will cause a deadlock in the case
    where disks are being hot added and removed. sd_probe_async will wait
    forever for its I/O to complete while holding scsi_sd_probe_domain.
    
    Also returning the default error of DID_TARGET_FAILURE causes multipath
    to not retry the I/O resulting in applications receiving I/O errors
    before a failover can occur.
    
    Signed-off-by: Cathy Avery <cavery@redhat.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Reviewed-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c6ca58a82c7b249bba64f734097d60053f6f54a
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Fri Dec 15 20:20:06 2017 +0300

    net: arc_emac: fix arc_emac_rx() error paths
    
    
    [ Upstream commit e688822d035b494071ecbadcccbd6f3325fb0f59 ]
    
    arc_emac_rx() has some issues found by code review.
    
    In case netdev_alloc_skb_ip_align() or dma_map_single() failure
    rx fifo entry will not be returned to EMAC.
    
    In case dma_map_single() failure previously allocated skb became
    lost to driver. At the same time address of newly allocated skb
    will not be provided to EMAC.
    
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c963a35f66fc03d8fceceecd261333629a4233a
Author: Radu Pirea <radu.pirea@microchip.com>
Date:   Fri Dec 15 17:40:17 2017 +0200

    spi: atmel: fixed spin_lock usage inside atmel_spi_remove
    
    
    [ Upstream commit 66e900a3d225575c8b48b59ae1fe74bb6e5a65cc ]
    
    The only part of atmel_spi_remove which needs to be atomic is hardware
    reset.
    
    atmel_spi_stop_dma calls dma_terminate_all and this needs interrupts
    enabled.
    atmel_spi_release_dma calls dma_release_channel and dma_release_channel
    locks a mutex inside of spin_lock.
    
    So the call of these functions can't be inside a spin_lock.
    
    Reported-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Radu Pirea <radu.pirea@microchip.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef7f640966e5c5d9c6acbe0e20a99e5001020b1f
Author: Karol Herbst <kherbst@redhat.com>
Date:   Fri Nov 24 03:56:26 2017 +0100

    drm/nouveau/pci: do a msi rearm on init
    
    
    [ Upstream commit a121027d2747168df0aac0c3da35509eea39f61c ]
    
    On my GP107 when I load nouveau after unloading it, for some reason the
    GPU stopped sending or the CPU stopped receiving interrupts if MSI was
    enabled.
    
    Doing a rearm once before getting any interrupts fixes this.
    
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Reviewed-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cf1dead545b29f92722c8d1021db26beee31c83
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Dec 18 15:05:07 2017 -0500

    sget(): handle failures of register_shrinker()
    
    
    [ Upstream commit 9ee332d99e4d5a97548943b81c54668450ce641b ]
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f63882e762ebe312cc58404f959fc3de98b4491
Author: Chunyan Zhang <zhang.lyra@gmail.com>
Date:   Fri Dec 1 03:51:04 2017 +0100

    ARM: 8731/1: Fix csum_partial_copy_from_user() stack mismatch
    
    
    [ Upstream commit 36b0cb84ee858f02c256d26f0cb4229c78e3399e ]
    
    An additional 'ip' will be pushed to the stack, for restoring the
    DACR later, if CONFIG_CPU_SW_DOMAIN_PAN defined.
    
    However, the fixup still get the err_ptr by add #8*4 to sp, which
    results in the fact that the code area pointed by the LR will be
    overwritten, or the kernel will crash if CONFIG_DEBUG_RODATA is enabled.
    
    This patch fixes the stack mismatch.
    
    Fixes: a5e090acbf54 ("ARM: software-based priviledged-no-access support")
    Signed-off-by: Lvqiang Huang <Lvqiang.Huang@spreadtrum.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa79bac9953c99d13c2bc7b43c9ed157ff5b031a
Author: Brendan McGrath <redmcg@redmandi.dyndns.org>
Date:   Wed Dec 13 22:14:57 2017 +1100

    ipv6: icmp6: Allow icmp messages to be looped back
    
    
    [ Upstream commit 588753f1eb18978512b1c9b85fddb457d46f9033 ]
    
    One example of when an ICMPv6 packet is required to be looped back is
    when a host acts as both a Multicast Listener and a Multicast Router.
    
    A Multicast Router will listen on address ff02::16 for MLDv2 messages.
    
    Currently, MLDv2 messages originating from a Multicast Listener running
    on the same host as the Multicast Router are not being delivered to the
    Multicast Router. This is due to dst.input being assigned the default
    value of dst_discard.
    
    This results in the packet being looped back but discarded before being
    delivered to the Multicast Router.
    
    This patch sets dst.input to ip6_input to ensure a looped back packet
    is delivered to the Multicast Router.
    
    Signed-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 197190bc5c48731fbcb0f89cdb18b1df4ebd5259
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Tue Dec 5 11:51:40 2017 +0100

    mtd: nand: gpmi: Fix failure when a erased page has a bitflip at BBM
    
    
    [ Upstream commit fdf2e821052958a114618a95ab18a300d0b080cb ]
    
    When erased subpages are read then the BCH decoder returns STATUS_ERASED
    if they are all empty, or STATUS_UNCORRECTABLE if there are bitflips.
    When there are bitflips, we have to set these bits again to show the
    upper layers a completely erased page. When a bitflip happens in the
    exact byte where the bad block marker is, then this byte is swapped
    with another byte in block_mark_swapping(). The correction code then
    detects a bitflip in another subpage and no longer corrects the bitflip
    where it really happens.
    
    Correct this behaviour by calling block_mark_swapping() after the
    bitflips have been corrected.
    
    In our case UBIFS failed with this bug because it expects erased
    pages to be really empty:
    
    UBIFS error (pid 187): ubifs_scan: corrupt empty space at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: corruption at LEB 36:118735
    UBIFS error (pid 187): ubifs_scanned_corruption: first 8192 bytes from LEB 36:118735
    UBIFS error (pid 187): ubifs_scan: LEB 36 scanning failed
    UBIFS error (pid 187): do_commit: commit failed, error -117
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Acked-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 023ca5b884d2759b56dc8d480942835881853513
Author: Yunlei He <heyunlei@huawei.com>
Date:   Fri May 19 15:06:12 2017 +0800

    f2fs: fix a bug caused by NULL extent tree
    
    commit dad48e73127ba10279ea33e6dbc8d3905c4d31c0 upstream.
    
    Thread A:                                       Thread B:
    
    -f2fs_remount
        -sbi->mount_opt.opt = 0;
                                                    <--- -f2fs_iget
                                                             -do_read_inode
                                                                 -f2fs_init_extent_tree
                                                                     -F2FS_I(inode)->extent_tree is NULL
            -default_options && parse_options
                -remount return
                                                    <---  -f2fs_map_blocks
                                                              -f2fs_lookup_extent_tree
                                                                  -f2fs_bug_on(sbi, !et);
    
    The same problem with f2fs_new_inode.
    
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b77d5ffcb7528dd9ae9510d899b08a5f325bfeeb
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Thu Dec 21 11:41:35 2017 +0100

    hrtimer: Ensure POSIX compliance (relative CLOCK_REALTIME hrtimers)
    
    commit 48d0c9becc7f3c66874c100c126459a9da0fdced upstream.
    
    The POSIX specification defines that relative CLOCK_REALTIME timers are not
    affected by clock modifications. Those timers have to use CLOCK_MONOTONIC
    to ensure POSIX compliance.
    
    The introduction of the additional HRTIMER_MODE_PINNED mode broke this
    requirement for pinned timers.
    
    There is no user space visible impact because user space timers are not
    using pinned mode, but for consistency reasons this needs to be fixed.
    
    Check whether the mode has the HRTIMER_MODE_REL bit set instead of
    comparing with HRTIMER_MODE_ABS.
    
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: keescook@chromium.org
    Fixes: 597d0275736d ("timers: Framework for identifying pinned timers")
    Link: http://lkml.kernel.org/r/20171221104205.7269-7-anna-maria@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
