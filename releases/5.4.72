commit 52f6ded2a377ac4f191c84182488e454b1386239
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Oct 17 10:11:24 2020 +0200

    Linux 5.4.72
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20201016090437.308349327@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 865b015e8d419c9161d8103a750d02ca357b1cfd
Author: Dominik Przychodni <dominik.przychodni@intel.com>
Date:   Mon Aug 31 11:59:59 2020 +0100

    crypto: qat - check cipher length for aead AES-CBC-HMAC-SHA
    
    commit 45cb6653b0c355fc1445a8069ba78a4ce8720511 upstream.
    
    Return -EINVAL for authenc(hmac(sha1),cbc(aes)),
    authenc(hmac(sha256),cbc(aes)) and authenc(hmac(sha512),cbc(aes))
    if the cipher length is not multiple of the AES block.
    This is to prevent an undefined device behaviour.
    
    Fixes: d370cec32194 ("crypto: qat - Intel(R) QAT crypto interface")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dominik Przychodni <dominik.przychodni@intel.com>
    [giovanni.cabiddu@intel.com: reworded commit message]
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa1167908ac4f8119f0a52df03b5cc1a2f624260
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Oct 2 17:55:22 2020 +1000

    crypto: bcm - Verify GCM/CCM key length in setkey
    
    commit 10a2f0b311094ffd45463a529a410a51ca025f27 upstream.
    
    The setkey function for GCM/CCM algorithms didn't verify the key
    length before copying the key and subtracting the salt length.
    
    This patch delays the copying of the key til after the verification
    has been done.  It also adds checks on the key length to ensure
    that it's at least as long as the salt.
    
    Fixes: 9d12ba86f818 ("crypto: brcm - Add Broadcom SPU driver")
    Cc: <stable@vger.kernel.org>
    Reported-by: kiyin(尹亮) <kiyin@tencent.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 564312e08892a3e5ac38569280c89032bd7a5b00
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Sep 30 11:16:14 2020 +0200

    xen/events: don't use chip_data for legacy IRQs
    
    commit 0891fb39ba67bd7ae023ea0d367297ffff010781 upstream.
    
    Since commit c330fb1ddc0a ("XEN uses irqdesc::irq_data_common::handler_data to store a per interrupt XEN data pointer which contains XEN specific information.")
    Xen is using the chip_data pointer for storing IRQ specific data. When
    running as a HVM domain this can result in problems for legacy IRQs, as
    those might use chip_data for their own purposes.
    
    Use a local array for this purpose in case of legacy IRQs, avoiding the
    double use.
    
    Cc: stable@vger.kernel.org
    Fixes: c330fb1ddc0a ("XEN uses irqdesc::irq_data_common::handler_data to store a per interrupt XEN data pointer which contains XEN specific information.")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Tested-by: Stefan Bader <stefan.bader@canonical.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20200930091614.13660-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 041445d0d5777f06db80e7041a0e100e520983f5
Author: Jan Kara <jack@suse.cz>
Date:   Wed Sep 30 17:08:20 2020 +0200

    reiserfs: Fix oops during mount
    
    commit c2bb80b8bdd04dfe32364b78b61b6a47f717af52 upstream.
    
    With suitably crafted reiserfs image and mount command reiserfs will
    crash when trying to verify that XATTR_ROOT directory can be looked up
    in / as that recurses back to xattr code like:
    
     xattr_lookup+0x24/0x280 fs/reiserfs/xattr.c:395
     reiserfs_xattr_get+0x89/0x540 fs/reiserfs/xattr.c:677
     reiserfs_get_acl+0x63/0x690 fs/reiserfs/xattr_acl.c:209
     get_acl+0x152/0x2e0 fs/posix_acl.c:141
     check_acl fs/namei.c:277 [inline]
     acl_permission_check fs/namei.c:309 [inline]
     generic_permission+0x2ba/0x550 fs/namei.c:353
     do_inode_permission fs/namei.c:398 [inline]
     inode_permission+0x234/0x4a0 fs/namei.c:463
     lookup_one_len+0xa6/0x200 fs/namei.c:2557
     reiserfs_lookup_privroot+0x85/0x1e0 fs/reiserfs/xattr.c:972
     reiserfs_fill_super+0x2b51/0x3240 fs/reiserfs/super.c:2176
     mount_bdev+0x24f/0x360 fs/super.c:1417
    
    Fix the problem by bailing from reiserfs_xattr_get() when xattrs are not
    yet initialized.
    
    CC: stable@vger.kernel.org
    Reported-by: syzbot+9b33c9b118d77ff59b6f@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 046616898a572b68d91af0640723541c188e7667
Author: Jan Kara <jack@suse.cz>
Date:   Mon Sep 21 15:08:50 2020 +0200

    reiserfs: Initialize inode keys properly
    
    commit 4443390e08d34d5771ab444f601cf71b3c9634a4 upstream.
    
    reiserfs_read_locked_inode() didn't initialize key length properly. Use
    _make_cpu_key() macro for key initialization so that all key member are
    properly initialized.
    
    CC: stable@vger.kernel.org
    Reported-by: syzbot+d94d02749498bb7bab4b@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22ab9ca024a09b1130449c98b18ac96e87bedc52
Author: Mychaela N. Falconia <falcon@freecalypso.org>
Date:   Wed Sep 16 01:56:29 2020 +0000

    USB: serial: ftdi_sio: add support for FreeCalypso JTAG+UART adapters
    
    commit 6cf87e5edd9944e1d3b6efd966ea401effc304ee upstream.
    
    There exist many FT2232-based JTAG+UART adapter designs in which
    FT2232 Channel A is used for JTAG and Channel B is used for UART.
    The best way to handle them in Linux is to have the ftdi_sio driver
    create a ttyUSB device only for Channel B and not for Channel A:
    a ttyUSB device for Channel A would be bogus and will disappear as
    soon as the user runs OpenOCD or other applications that access
    Channel A for JTAG from userspace, causing undesirable noise for
    users.  The ftdi_sio driver already has a dedicated quirk for such
    JTAG+UART FT2232 adapters, and it requires assigning custom USB IDs
    to such adapters and adding these IDs to the driver with the
    ftdi_jtag_quirk applied.
    
    Boutique hardware manufacturer Falconia Partners LLC has created a
    couple of JTAG+UART adapter designs (one buffered, one unbuffered)
    as part of FreeCalypso project, and this hardware is specifically made
    to be used with Linux hosts, with the intent that Channel A will be
    accessed only from userspace via appropriate applications, and that
    Channel B will be supported by the ftdi_sio kernel driver, presenting
    a standard ttyUSB device to userspace.  Toward this end the hardware
    manufacturer will be programming FT2232 EEPROMs with custom USB IDs,
    specifically with the intent that these IDs will be recognized by
    the ftdi_sio driver with the ftdi_jtag_quirk applied.
    
    Signed-off-by: Mychaela N. Falconia <falcon@freecalypso.org>
    [johan: insert in PID order and drop unused define]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfb1438e8c1525efa3fec807f8f3e73b72a4623d
Author: Scott Chen <scott@labau.com.tw>
Date:   Thu Sep 24 14:27:45 2020 +0800

    USB: serial: pl2303: add device-id for HP GC device
    
    commit 031f9664f8f9356cee662335bc56c93d16e75665 upstream.
    
    This is adds a device id for HP LD381 which is a pl2303GC-base device.
    
    Signed-off-by: Scott Chen <scott@labau.com.tw>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aecf3a1c11dc60d4eddd90ac54ac82a468062918
Author: Anant Thazhemadam <anant.thazhemadam@gmail.com>
Date:   Sat Oct 10 13:59:32 2020 +0530

    staging: comedi: check validity of wMaxPacketSize of usb endpoints found
    
    commit e1f13c879a7c21bd207dc6242455e8e3a1e88b40 upstream.
    
    While finding usb endpoints in vmk80xx_find_usb_endpoints(), check if
    wMaxPacketSize = 0 for the endpoints found.
    
    Some devices have isochronous endpoints that have wMaxPacketSize = 0
    (as required by the USB-2 spec).
    However, since this doesn't apply here, wMaxPacketSize = 0 can be
    considered to be invalid.
    
    Reported-by: syzbot+009f546aa1370056b1c2@syzkaller.appspotmail.com
    Tested-by: syzbot+009f546aa1370056b1c2@syzkaller.appspotmail.com
    Signed-off-by: Anant Thazhemadam <anant.thazhemadam@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201010082933.5417-1-anant.thazhemadam@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8aff87284be632386a823eda95f4f9cd4f7f366b
Author: Leonid Bloch <lb.workbox@gmail.com>
Date:   Sun Oct 4 18:58:13 2020 +0300

    USB: serial: option: Add Telit FT980-KS composition
    
    commit 924a9213358fb92fa3c3225d6d042aa058167405 upstream.
    
    This commit adds the following Telit FT980-KS composition:
    
    0x1054: rndis, diag, adb, nmea, modem, modem, aux
    
    AT commands can be sent to /dev/ttyUSB2.
    
    Signed-off-by: Leonid Bloch <lb.workbox@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/ce86bc05-f4e2-b199-0cdc-792715e3f275@asocscloud.com
    Link: https://lore.kernel.org/r/20201004155813.2342-1-lb.workbox@gmail.com
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c3eb734ef1fe19b7cb052ec74384c8c1f310f47
Author: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
Date:   Sat Oct 3 11:40:29 2020 +0200

    USB: serial: option: add Cellient MPL200 card
    
    commit 3e765cab8abe7f84cb80d4a7a973fc97d5742647 upstream.
    
    Add usb ids of the Cellient MPL200 card.
    
    Signed-off-by: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/3db5418fe9e516f4b290736c5a199c9796025e3c.1601715478.git.wilken.gottwalt@mailbox.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b970578274e9b6967bc1e90fcb870199133531f0
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Sep 24 11:14:10 2020 +0200

    media: usbtv: Fix refcounting mixup
    
    commit bf65f8aabdb37bc1a785884374e919477fe13e10 upstream.
    
    The premature free in the error path is blocked by V4L
    refcounting, not USB refcounting. Thanks to
    Ben Hutchings for review.
    
    [v2] corrected attributions
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Fixes: 50e704453553 ("media: usbtv: prevent double free in error case")
    CC: stable@vger.kernel.org
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ad2e647d91f94b8ab10602ead5a8ce4b53ed93a
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed May 20 14:20:14 2020 -0700

    Bluetooth: Disconnect if E0 is used for Level 4
    
    commit 8746f135bb01872ff412d408ea1aa9ebd328c1f5 upstream.
    
    E0 is not allowed with Level 4:
    
    BLUETOOTH CORE SPECIFICATION Version 5.2 | Vol 3, Part C page 1319:
    
      '128-bit equivalent strength for link and encryption keys
       required using FIPS approved algorithms (E0 not allowed,
       SAFER+ not allowed, and P-192 not allowed; encryption key
       not shortened'
    
    SC enabled:
    
    > HCI Event: Read Remote Extended Features (0x23) plen 13
            Status: Success (0x00)
            Handle: 256
            Page: 1/2
            Features: 0x0b 0x00 0x00 0x00 0x00 0x00 0x00 0x00
              Secure Simple Pairing (Host Support)
              LE Supported (Host)
              Secure Connections (Host Support)
    > HCI Event: Encryption Change (0x08) plen 4
            Status: Success (0x00)
            Handle: 256
            Encryption: Enabled with AES-CCM (0x02)
    
    SC disabled:
    
    > HCI Event: Read Remote Extended Features (0x23) plen 13
            Status: Success (0x00)
            Handle: 256
            Page: 1/2
            Features: 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00
              Secure Simple Pairing (Host Support)
              LE Supported (Host)
    > HCI Event: Encryption Change (0x08) plen 4
            Status: Success (0x00)
            Handle: 256
            Encryption: Enabled with E0 (0x01)
    [May 8 20:23] Bluetooth: hci0: Invalid security: expect AES but E0 was used
    < HCI Command: Disconnect (0x01|0x0006) plen 3
            Handle: 256
            Reason: Authentication Failure (0x05)
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: Hans-Christian Noren Egtvedt <hegtvedt@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21d2051d1f1c4c4e1bd49ddef278891e35fad0ec
Author: Patrick Steinhardt <ps@pks.im>
Date:   Wed Jul 15 19:43:33 2020 +0200

    Bluetooth: Fix update of connection state in `hci_encrypt_cfm`
    
    commit 339ddaa626995bc6218972ca241471f3717cc5f4 upstream.
    
    Starting with the upgrade to v5.8-rc3, I've noticed I wasn't able to
    connect to my Bluetooth headset properly anymore. While connecting to
    the device would eventually succeed, bluetoothd seemed to be confused
    about the current connection state where the state was flapping hence
    and forth. Bisecting this issue led to commit 3ca44c16b0dc (Bluetooth:
    Consolidate encryption handling in hci_encrypt_cfm, 2020-05-19), which
    refactored `hci_encrypt_cfm` to also handle updating the connection
    state.
    
    The commit in question changed the code to call `hci_connect_cfm` inside
    `hci_encrypt_cfm` and to change the connection state. But with the
    conversion, we now only update the connection state if a status was set
    already. In fact, the reverse should be true: the status should be
    updated if no status is yet set. So let's fix the isuse by reversing the
    condition.
    
    Fixes: 3ca44c16b0dc ("Bluetooth: Consolidate encryption handling in hci_encrypt_cfm")
    Signed-off-by: Patrick Steinhardt <ps@pks.im>
    Acked-by:  Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed6c361e3229a2aa64b04617baa7f452bed28bcc
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Tue May 19 13:25:19 2020 -0700

    Bluetooth: Consolidate encryption handling in hci_encrypt_cfm
    
    commit 3ca44c16b0dcc764b641ee4ac226909f5c421aa3 upstream.
    
    This makes hci_encrypt_cfm calls hci_connect_cfm in case the connection
    state is BT_CONFIG so callers don't have to check the state.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: Hans-Christian Noren Egtvedt <hegtvedt@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 155bf3fd4e8cba644c64ce173db05e211150092d
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Aug 6 11:17:14 2020 -0700

    Bluetooth: MGMT: Fix not checking if BT_HS is enabled
    
    commit b560a208cda0297fef6ff85bbfd58a8f0a52a543 upstream.
    
    This checks if BT_HS is enabled relecting it on MGMT_SETTING_HS instead
    of always reporting it as supported.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66a14350de9a4e3db7dedb524518b1394a5f7162
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Aug 6 11:17:12 2020 -0700

    Bluetooth: L2CAP: Fix calling sk_filter on non-socket based channel
    
    commit f19425641cb2572a33cb074d5e30283720bd4d22 upstream.
    
    Only sockets will have the chan->data set to an actual sk, channels
    like A2MP would have its own data which would likely cause a crash when
    calling sk_filter, in order to fix this a new callback has been
    introduced so channels can implement their own filtering if necessary.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d9e9b6e1a26bb248c0afee754d5a577abd4376b
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Aug 6 11:17:11 2020 -0700

    Bluetooth: A2MP: Fix not initializing all members
    
    commit eddb7732119d53400f48a02536a84c509692faa8 upstream.
    
    This fixes various places where a stack variable is used uninitialized.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54f8badb9bc96f520433b6e2c83de19b2fbcd42b
Author: Arjan van de Ven <arjan@linux.intel.com>
Date:   Wed Oct 9 15:04:33 2019 +0200

    ACPI: Always build evged in
    
    commit ac36d37e943635fc072e9d4f47e40a48fbcdb3f0 upstream.
    
    Although the Generic Event Device is a Hardware-reduced
    platfom device in principle, it should not be restricted to
    ACPI_REDUCED_HARDWARE_ONLY.
    
    Kernels supporting both fixed and hardware-reduced ACPI platforms
    should be able to probe the GED when dynamically detecting that a
    platform is hardware-reduced. For that, the driver must be
    unconditionally built in.
    
    Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Vishnu Rangayyan <vishnu.rangayyan@apple.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30ddaa4c0c958c7e9e25897170c6c7a5efb2adb3
Author: Dmitry Golovin <dima@golovin.in>
Date:   Tue Nov 19 16:39:42 2019 +0100

    ARM: 8939/1: kbuild: use correct nm executable
    
    [ Upstream commit 29c623d64f0dcd6aa10e0eabd16233e77114090b ]
    
    Since $(NM) variable can be easily overridden for the whole build, it's
    better to use it instead of $(CROSS_COMPILE)nm. The use of $(CROSS_COMPILE)
    prefixed variables where their calculated equivalents can be used is
    incorrect. This fixes issues with builds where $(NM) is set to llvm-nm.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/766
    
    Signed-off-by: Dmitry Golovin <dima@golovin.in>
    Suggested-by: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Matthias Maennich <maennich@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bf467fdfeaee73df086f0f199609985cba93d9b
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Oct 14 10:44:47 2020 +0800

    btrfs: take overcommit into account in inc_block_group_ro
    
    commit a30a3d2067536cbcce26c055e70cc3a6ae4fd45c upstream
    
    inc_block_group_ro does a calculation to see if we have enough room left
    over if we mark this block group as read only in order to see if it's ok
    to mark the block group as read only.
    
    The problem is this calculation _only_ works for data, where our used is
    always less than our total.  For metadata we will overcommit, so this
    will almost always fail for metadata.
    
    Fix this by exporting btrfs_can_overcommit, and then see if we have
    enough space to remove the remaining free space in the block group we
    are trying to mark read only.  If we do then we can mark this block
    group as read only.
    
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39c5eb1482b2461ea54e0d23c4742987c20480fa
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Oct 14 10:44:46 2020 +0800

    btrfs: don't pass system_chunk into can_overcommit
    
    commit 9f246926b4d5db4c5e8c78e4897757de26c95be6 upstream
    
    We have the space_info, we can just check its flags to see if it's the
    system chunk space info.
    
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc79abf4afea97d5ce682aa2bd1095fb74400916
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue May 5 21:36:42 2020 +0800

    perf cs-etm: Move definition of 'traceid_list' global variable from header file
    
    commit 168200b6d6ea0cb5765943ec5da5b8149701f36a upstream.
    
    The variable 'traceid_list' is defined in the header file cs-etm.h,
    if multiple C files include cs-etm.h the compiler might complaint for
    multiple definition of 'traceid_list'.
    
    To fix multiple definition error, move the definition of 'traceid_list'
    into cs-etm.c.
    
    Fixes: cd8bfd8c973e ("perf tools: Add processing of coresight metadata")
    Reported-by: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Reviewed-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Reviewed-by: Mike Leach <mike.leach@linaro.org>
    Tested-by: Mike Leach <mike.leach@linaro.org>
    Tested-by: Thomas Backlund <tmb@mageia.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Suzuki Poulouse <suzuki.poulose@arm.com>
    Cc: Tor Jeremiassen <tor@ti.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lore.kernel.org/lkml/20200505133642.4756-1-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Paul Barker <pbarker@konsulko.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
