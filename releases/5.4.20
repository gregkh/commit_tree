commit 27dfbcc2f53d5b14ef78156d15ff92619807d46c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 14 16:34:20 2020 -0500

    Linux 5.4.20

commit 2d8fdc5744ff678e23d8869f57cedab4f5546f74
Author: Stephen Smalley <sds@tycho.nsa.gov>
Date:   Fri Nov 22 12:22:45 2019 -0500

    selinux: fall back to ref-walk if audit is required
    
    commit 0188d5c025ca8fe756ba3193bd7d150139af5a88 upstream.
    
    commit bda0be7ad994 ("security: make inode_follow_link RCU-walk aware")
    passed down the rcu flag to the SELinux AVC, but failed to adjust the
    test in slow_avc_audit() to also return -ECHILD on LSM_AUDIT_DATA_DENTRY.
    Previously, we only returned -ECHILD if generating an audit record with
    LSM_AUDIT_DATA_INODE since this was only relevant from inode_permission.
    Move the handling of MAY_NOT_BLOCK to avc_audit() and its inlined
    equivalent in selinux_inode_permission() immediately after we determine
    that audit is required, and always fall back to ref-walk in this case.
    
    Fixes: bda0be7ad994 ("security: make inode_follow_link RCU-walk aware")
    Reported-by: Will Deacon <will@kernel.org>
    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae7f404d922747e9e97679d5bbde51e0a72693ca
Author: Nicolai Stange <nstange@suse.de>
Date:   Tue Jan 14 11:39:03 2020 +0100

    libertas: make lbs_ibss_join_existing() return error code on rates overflow
    
    [ Upstream commit 1754c4f60aaf1e17d886afefee97e94d7f27b4cb ]
    
    Commit e5e884b42639 ("libertas: Fix two buffer overflows at parsing bss
    descriptor") introduced a bounds check on the number of supplied rates to
    lbs_ibss_join_existing() and made it to return on overflow.
    
    However, the aforementioned commit doesn't set the return value accordingly
    and thus, lbs_ibss_join_existing() would return with zero even though it
    failed.
    
    Make lbs_ibss_join_existing return -EINVAL in case the bounds check on the
    number of supplied rates fails.
    
    Fixes: e5e884b42639 ("libertas: Fix two buffer overflows at parsing bss descriptor")
    Signed-off-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61087dce64a53f13b8cc162032f25ef80f50b15c
Author: Nicolai Stange <nstange@suse.de>
Date:   Tue Jan 14 11:39:02 2020 +0100

    libertas: don't exit from lbs_ibss_join_existing() with RCU read lock held
    
    [ Upstream commit c7bf1fb7ddca331780b9a733ae308737b39f1ad4 ]
    
    Commit e5e884b42639 ("libertas: Fix two buffer overflows at parsing bss
    descriptor") introduced a bounds check on the number of supplied rates to
    lbs_ibss_join_existing().
    
    Unfortunately, it introduced a return path from within a RCU read side
    critical section without a corresponding rcu_read_unlock(). Fix this.
    
    Fixes: e5e884b42639 ("libertas: Fix two buffer overflows at parsing bss descriptor")
    Signed-off-by: Nicolai Stange <nstange@suse.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c822e1f31186767d6b7261c3c066f01907ecfca
Author: Qing Xu <m1s5p6688@gmail.com>
Date:   Thu Jan 2 10:39:27 2020 +0800

    mwifiex: Fix possible buffer overflows in mwifiex_cmd_append_vsie_tlv()
    
    [ Upstream commit b70261a288ea4d2f4ac7cd04be08a9f0f2de4f4d ]
    
    mwifiex_cmd_append_vsie_tlv() calls memcpy() without checking
    the destination size may trigger a buffer overflower,
    which a local user could use to cause denial of service
    or the execution of arbitrary code.
    Fix it by putting the length check before calling memcpy().
    
    Signed-off-by: Qing Xu <m1s5p6688@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5b071e3f44d1125694ad4dcf1234fb9a78d0be6
Author: Qing Xu <m1s5p6688@gmail.com>
Date:   Thu Jan 2 10:39:26 2020 +0800

    mwifiex: Fix possible buffer overflows in mwifiex_ret_wmm_get_status()
    
    [ Upstream commit 3a9b153c5591548612c3955c9600a98150c81875 ]
    
    mwifiex_ret_wmm_get_status() calls memcpy() without checking the
    destination size.Since the source is given from remote AP which
    contains illegal wmm elements , this may trigger a heap buffer
    overflow.
    Fix it by putting the length check before calling memcpy().
    
    Signed-off-by: Qing Xu <m1s5p6688@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2cf2b620af7b59269b3fe24182b18e119f03628f
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Mon Dec 9 16:57:11 2019 +0800

    dmaengine: axi-dmac: add a check for devm_regmap_init_mmio
    
    commit a5b982af953bcc838cd198b0434834cc1dff14ec upstream.
    
    The driver misses checking the result of devm_regmap_init_mmio().
    Add a check to fix it.
    
    Fixes: fc15be39a827 ("dmaengine: axi-dmac: add regmap support")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Reviewed-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Link: https://lore.kernel.org/r/20191209085711.16001-1-hslester96@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eada328f7f9bc4807fdf071861558fb131c09f85
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Fri Dec 13 11:33:04 2019 +0100

    clk: meson: g12a: fix missing uart2 in regmap table
    
    commit b1b3f0622a9d52ac19a63619911823c89a4d85a4 upstream.
    
    UART2 peripheral is missing from the regmap fixup table of the g12a family
    clock controller. As it is, any access to this clock would Oops, which is
    not great.
    
    Add the clock to the table to fix the problem.
    
    Fixes: 085a4ea93d54 ("clk: meson: g12a: add peripheral clock controller")
    Reported-by: Dmitry Shmidt <dimitrysh@google.com>
    Tested-by: Dmitry Shmidt <dimitrysh@google.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Tested-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cfb0b360b377d3b712e91b1e7c53766eda50412
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Fri Jan 3 12:41:56 2020 +0100

    mfd: max77650: Select REGMAP_IRQ in Kconfig
    
    commit cb7a374a5e7a5af3f8c839f74439193add6d0589 upstream.
    
    MAX77650 MFD driver uses regmap_irq API but doesn't select the required
    REGMAP_IRQ option in Kconfig. This can cause the following build error
    if regmap irq is not enabled implicitly by someone else:
    
        ld: drivers/mfd/max77650.o: in function `max77650_i2c_probe':
        max77650.c:(.text+0xcb): undefined reference to `devm_regmap_add_irq_chip'
        ld: max77650.c:(.text+0xdb): undefined reference to `regmap_irq_get_domain'
        make: *** [Makefile:1079: vmlinux] Error 1
    
    Fix it by adding the missing option.
    
    Fixes: d0f60334500b ("mfd: Add new driver for MAX77650 PMIC")
    Reported-by: Paul Gazzillo <paul@pgazz.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b9586e82c90d34caa30f6b763820eddce93ae44
Author: Ben Whitten <ben.whitten@gmail.com>
Date:   Sat Jan 18 20:56:24 2020 +0000

    regmap: fix writes to non incrementing registers
    
    commit 2e31aab08bad0d4ee3d3d890a7b74cb6293e0a41 upstream.
    
    When checking if a register block is writable we must ensure that the
    block does not start with or contain a non incrementing register.
    
    Fixes: 8b9f9d4dc511 ("regmap: verify if register is writeable before writing operations")
    Signed-off-by: Ben Whitten <ben.whitten@gmail.com>
    Link: https://lore.kernel.org/r/20200118205625.14532-1-ben.whitten@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4eb12ef7491d76506549b61704c6a62cc545a307
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Dec 18 20:48:07 2019 +0100

    pinctrl: sh-pfc: r8a7778: Fix duplicate SDSELF_B and SD1_CLK_B
    
    commit 805f635703b2562b5ddd822c62fc9124087e5dd5 upstream.
    
    The FN_SDSELF_B and FN_SD1_CLK_B enum IDs are used twice, which means
    one set of users must be wrong.  Replace them by the correct enum IDs.
    
    Fixes: 87f8c988636db0d4 ("sh-pfc: Add r8a7778 pinmux support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20191218194812.12741-2-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b07d15aa5b46c82bffa18357c3c0eef2adac569
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 13 11:16:53 2019 +0100

    pinctrl: sh-pfc: r8a77965: Fix DU_DOTCLKIN3 drive/bias control
    
    commit a34cd9dfd03fa9ec380405969f1d638bc63b8d63 upstream.
    
    R-Car Gen3 Hardware Manual Errata for Rev. 2.00 of October 24, 2019
    changed the configuration bits for drive and bias control for the
    DU_DOTCLKIN3 pin on R-Car M3-N, to match the same pin on R-Car H3.
    Update the driver to reflect this.
    
    After this, the handling of drive and bias control for the various
    DU_DOTCLKINx pins is consistent across all of the R-Car H3, M3-W,
    M3-W+, and M3-N SoCs.
    
    Fixes: 86c045c2e4201e94 ("pinctrl: sh-pfc: r8a77965: Replace DU_DOTCLKIN2 by DU_DOTCLKIN3")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20191113101653.28428-1-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 875e01dd8a972115b58589e4715dec046eb51c0f
Author: Stephen Smalley <sds@tycho.nsa.gov>
Date:   Fri Jan 17 15:24:07 2020 -0500

    selinux: fix regression introduced by move_mount(2) syscall
    
    commit 98aa00345de54b8340dc2ddcd87f446d33387b5e upstream.
    
    commit 2db154b3ea8e ("vfs: syscall: Add move_mount(2) to move mounts around")
    introduced a new move_mount(2) system call and a corresponding new LSM
    security_move_mount hook but did not implement this hook for any existing
    LSM.  This creates a regression for SELinux with respect to consistent
    checking of mounts; the existing selinux_mount hook checks mounton
    permission to the mount point path.  Provide a SELinux hook
    implementation for move_mount that applies this same check for
    consistency.  In the future we may wish to add a new move_mount
    filesystem permission and check as well, but this addresses
    the immediate regression.
    
    Fixes: 2db154b3ea8e ("vfs: syscall: Add move_mount(2) to move mounts around")
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    Reviewed-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b2e595dfe2bbbedee5cf2298739d9b6663e7d6d
Author: Stephen Smalley <sds@tycho.nsa.gov>
Date:   Fri Nov 22 12:22:44 2019 -0500

    selinux: revert "stop passing MAY_NOT_BLOCK to the AVC upon follow_link"
    
    commit 1a37079c236d55fb31ebbf4b59945dab8ec8764c upstream.
    
    This reverts commit e46e01eebbbc ("selinux: stop passing MAY_NOT_BLOCK
    to the AVC upon follow_link"). The correct fix is to instead fall
    back to ref-walk if audit is required irrespective of the specific
    audit data type.  This is done in the next commit.
    
    Fixes: e46e01eebbbc ("selinux: stop passing MAY_NOT_BLOCK to the AVC upon follow_link")
    Reported-by: Will Deacon <will@kernel.org>
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 837c36e0451f14225e684bb4942a9f4b4eed3cb7
Author: Coly Li <colyli@suse.de>
Date:   Fri Jan 24 01:01:37 2020 +0800

    bcache: avoid unnecessary btree nodes flushing in btree_flush_write()
    
    commit 2aa8c529387c25606fdc1484154b92f8bfbc5746 upstream.
    
    the commit 91be66e1318f ("bcache: performance improvement for
    btree_flush_write()") was an effort to flushing btree node with oldest
    btree node faster in following methods,
    - Only iterate dirty btree nodes in c->btree_cache, avoid scanning a lot
      of clean btree nodes.
    - Take c->btree_cache as a LRU-like list, aggressively flushing all
      dirty nodes from tail of c->btree_cache util the btree node with
      oldest journal entry is flushed. This is to reduce the time of holding
      c->bucket_lock.
    
    Guoju Fang and Shuang Li reported that they observe unexptected extra
    write I/Os on cache device after applying the above patch. Guoju Fang
    provideed more detailed diagnose information that the aggressive
    btree nodes flushing may cause 10x more btree nodes to flush in his
    workload. He points out when system memory is large enough to hold all
    btree nodes in memory, c->btree_cache is not a LRU-like list any more.
    Then the btree node with oldest journal entry is very probably not-
    close to the tail of c->btree_cache list. In such situation much more
    dirty btree nodes will be aggressively flushed before the target node
    is flushed. When slow SATA SSD is used as cache device, such over-
    aggressive flushing behavior will cause performance regression.
    
    After spending a lot of time on debug and diagnose, I find the real
    condition is more complicated, aggressive flushing dirty btree nodes
    from tail of c->btree_cache list is not a good solution.
    - When all btree nodes are cached in memory, c->btree_cache is not
      a LRU-like list, the btree nodes with oldest journal entry won't
      be close to the tail of the list.
    - There can be hundreds dirty btree nodes reference the oldest journal
      entry, before flushing all the nodes the oldest journal entry cannot
      be reclaimed.
    When the above two conditions mixed together, a simply flushing from
    tail of c->btree_cache list is really NOT a good idea.
    
    Fortunately there is still chance to make btree_flush_write() work
    better. Here is how this patch avoids unnecessary btree nodes flushing,
    - Only acquire c->journal.lock when getting oldest journal entry of
      fifo c->journal.pin. In rested locations check the journal entries
      locklessly, so their values can be changed on other cores
      in parallel.
    - In loop list_for_each_entry_safe_reverse(), checking latest front
      point of fifo c->journal.pin. If it is different from the original
      point which we get with locking c->journal.lock, it means the oldest
      journal entry is reclaim on other cores. At this moment, all selected
      dirty nodes recorded in array btree_nodes[] are all flushed and clean
      on other CPU cores, it is unncessary to iterate c->btree_cache any
      longer. Just quit the list_for_each_entry_safe_reverse() loop and
      the following for-loop will skip all the selected clean nodes.
    - Find a proper time to quit the list_for_each_entry_safe_reverse()
      loop. Check the refcount value of orignial fifo front point, if the
      value is larger than selected node number of btree_nodes[], it means
      more matching btree nodes should be scanned. Otherwise it means no
      more matching btee nodes in rest of c->btree_cache list, the loop
      can be quit. If the original oldest journal entry is reclaimed and
      fifo front point is updated, the refcount of original fifo front point
      will be 0, then the loop will be quit too.
    - Not hold c->bucket_lock too long time. c->bucket_lock is also required
      for space allocation for cached data, hold it for too long time will
      block regular I/O requests. When iterating list c->btree_cache, even
      there are a lot of maching btree nodes, in order to not holding
      c->bucket_lock for too long time, only BTREE_FLUSH_NR nodes are
      selected and to flush in following for-loop.
    With this patch, only btree nodes referencing oldest journal entry
    are flushed to cache device, no aggressive flushing for  unnecessary
    btree node any more. And in order to avoid blocking regluar I/O
    requests, each time when btree_flush_write() called, at most only
    BTREE_FLUSH_NR btree nodes are selected to flush, even there are more
    maching btree nodes in list c->btree_cache.
    
    At last, one more thing to explain: Why it is safe to read front point
    of c->journal.pin without holding c->journal.lock inside the
    list_for_each_entry_safe_reverse() loop ?
    
    Here is my answer: When reading the front point of fifo c->journal.pin,
    we don't need to know the exact value of front point, we just want to
    check whether the value is different from the original front point
    (which is accurate value because we get it while c->jouranl.lock is
    held). For such purpose, it works as expected without holding
    c->journal.lock. Even the front point is changed on other CPU core and
    not updated to local core, and current iterating btree node has
    identical journal entry local as original fetched fifo front point, it
    is still safe. Because after holding mutex b->write_lock (with memory
    barrier) this btree node can be found as clean and skipped, the loop
    will quite latter when iterate on next node of list c->btree_cache.
    
    Fixes: 91be66e1318f ("bcache: performance improvement for btree_flush_write()")
    Reported-by: Guoju Fang <fangguoju@gmail.com>
    Reported-by: Shuang Li <psymon@bonuscloud.io>
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c71d438e7e58a6889b89889282f17eed7e6958e
Author: Beniamin Bia <beniamin.bia@analog.com>
Date:   Tue Jan 14 15:24:01 2020 +0200

    dt-bindings: iio: adc: ad7606: Fix wrong maxItems value
    
    commit a6c4f77cb3b11f81077b53c4a38f21b92d41f21e upstream.
    
    This patch set the correct value for oversampling maxItems. In the
    original example, appears 3 items for oversampling while the maxItems
    is set to 1, this patch fixes those issues.
    
    Fixes: 416f882c3b40 ("dt-bindings: iio: adc: Migrate AD7606 documentation to yaml")
    Signed-off-by: Beniamin Bia <beniamin.bia@analog.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d15a2930f6d7e0d53533f07892a4047817a025a2
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Oct 22 15:25:22 2019 +0200

    media: i2c: adv748x: Fix unsafe macros
    
    commit 0d962e061abcf1b9105f88fb850158b5887fbca3 upstream.
    
    Enclose multiple macro parameters in parentheses in order to
    make such macros safer and fix the Clang warning below:
    
    drivers/media/i2c/adv748x/adv748x-afe.c:452:12: warning: operator '?:'
    has lower precedence than '|'; '|' will be evaluated first
    [-Wbitwise-conditional-parentheses]
    
    ret = sdp_clrset(state, ADV748X_SDP_FRP, ADV748X_SDP_FRP_MASK, enable
    ? ctrl->val - 1 : 0);
    
    Fixes: 3e89586a64df ("media: i2c: adv748x: add adv748x driver")
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30dd20c6d0e34d99a0a2b697b2f351fc2658f2c8
Author: Christophe Roullier <christophe.roullier@st.com>
Date:   Fri Nov 22 14:22:46 2019 +0100

    drivers: watchdog: stm32_iwdg: set WDOG_HW_RUNNING at probe
    
    commit 85fdc63fe256b595f923a69848cd99972ff446d8 upstream.
    
    If the watchdog hardware is already enabled during the boot process,
    when the Linux watchdog driver loads, it should start/reset the watchdog
    and tell the watchdog framework. As a result, ping can be generated from
    the watchdog framework (if CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED is set),
    until the userspace watchdog daemon takes over control
    
    Fixes:4332d113c66a ("watchdog: Add STM32 IWDG driver")
    
    Signed-off-by: Christophe Roullier <christophe.roullier@st.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20191122132246.8473-1-christophe.roullier@st.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dfa11837606a7f46735207fe4382d5f2441db7d
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Mon Jan 13 10:54:35 2020 +0200

    crypto: caam/qi2 - fix typo in algorithm's driver name
    
    commit 53146d152510584c2034c62778a7cbca25743ce9 upstream.
    
    Fixes: 8d818c105501 ("crypto: caam/qi2 - add DPAA2-CAAM driver")
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f42c6de7b941cfe42d801ead31aa7ca342a21c1
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Dec 30 21:19:33 2019 -0600

    crypto: atmel-sha - fix error handling when setting hmac key
    
    commit b529f1983b2dcc46354f311feda92e07b6e9e2da upstream.
    
    HMAC keys can be of any length, and atmel_sha_hmac_key_set() can only
    fail due to -ENOMEM.  But atmel_sha_hmac_setkey() incorrectly treated
    any error as a "bad key length" error.  Fix it to correctly propagate
    the -ENOMEM error code and not set any tfm result flags.
    
    Fixes: 81d8750b2b59 ("crypto: atmel-sha - add support to hmac(shaX)")
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Cc: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb42d3f4ec8677deee363e672d5a3fbba9a865f8
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Dec 30 21:19:32 2019 -0600

    crypto: artpec6 - return correct error code for failed setkey()
    
    commit b828f905904cd76424230c69741a4cabb0174168 upstream.
    
    ->setkey() is supposed to retun -EINVAL for invalid key lengths, not -1.
    
    Fixes: a21eb94fc4d3 ("crypto: axis - add ARTPEC-6/7 crypto accelerator driver")
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Lars Persson <lars.persson@axis.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Lars Persson <lars.persson@axis.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee1c6b1aa9dc791d433e95536d42a6bbd4b00ae6
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Dec 1 13:53:26 2019 -0800

    crypto: testmgr - don't try to decrypt uninitialized buffers
    
    commit eb455dbd02cb1074b37872ffca30a81cb2a18eaa upstream.
    
    Currently if the comparison fuzz tests encounter an encryption error
    when generating an skcipher or AEAD test vector, they will still test
    the decryption side (passing it the uninitialized ciphertext buffer)
    and expect it to fail with the same error.
    
    This is sort of broken because it's not well-defined usage of the API to
    pass an uninitialized buffer, and furthermore in the AEAD case it's
    acceptable for the decryption error to be EBADMSG (meaning "inauthentic
    input") even if the encryption error was something else like EINVAL.
    
    Fix this for skcipher by explicitly initializing the ciphertext buffer
    on error, and for AEAD by skipping the decryption test on error.
    
    Reported-by: Pascal Van Leeuwen <pvanleeuwen@verimatrix.com>
    Fixes: d435e10e67be ("crypto: testmgr - fuzz skciphers against their generic implementation")
    Fixes: 40153b10d91c ("crypto: testmgr - fuzz AEADs against their generic implementation")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 771fd0b2e8bf7332f18c471230cf4a3db023831c
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Dec 30 11:29:45 2019 +0800

    mtd: sharpslpart: Fix unsigned comparison to zero
    
    commit f33113b542219448fa02d77ca1c6f4265bd7f130 upstream.
    
    The unsigned variable log_num is being assigned a return value
    from the call to sharpsl_nand_get_logical_num that can return
    -EINVAL.
    
    Detected using Coccinelle:
    ./drivers/mtd/parsers/sharpslpart.c:207:6-13: WARNING: Unsigned expression compared with zero: log_num > 0
    
    Fixes: 8a4580e4d298 ("mtd: sharpslpart: Add sharpslpart partition parser")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1765aaef17530464ce5e02659249c8b6ea5e9f68
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Dec 9 14:44:23 2019 -0700

    mtd: onenand_base: Adjust indentation in onenand_read_ops_nolock
    
    commit 0e7ca83e82d021c928dadf4c13c137d57337540d upstream.
    
    Clang warns:
    
    ../drivers/mtd/nand/onenand/onenand_base.c:1269:3: warning: misleading
    indentation; statement is not part of the previous 'if'
    [-Wmisleading-indentation]
            while (!ret) {
            ^
    ../drivers/mtd/nand/onenand/onenand_base.c:1266:2: note: previous
    statement is here
            if (column + thislen > writesize)
            ^
    1 warning generated.
    
    This warning occurs because there is a space before the tab of the while
    loop. There are spaces at the beginning of a lot of the lines in this
    block, remove them so that the indentation is consistent with the Linux
    kernel coding style and clang no longer warns.
    
    Fixes: a8de85d55700 ("[MTD] OneNAND: Implement read-while-load")
    Link: https://github.com/ClangBuiltLinux/linux/issues/794
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7df80a021f66aea81a859aef6ffbe5cb2a502abf
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Mon Jan 13 23:30:23 2020 +0000

    arm64: nofpsmid: Handle TIF_FOREIGN_FPSTATE flag cleanly
    
    commit 52f73c383b2418f2d31b798e765ae7d596c35021 upstream.
    
    We detect the absence of FP/SIMD after an incapable CPU is brought up,
    and by then we have kernel threads running already with TIF_FOREIGN_FPSTATE set
    which could be set for early userspace applications (e.g, modprobe triggered
    from initramfs) and init. This could cause the applications to loop forever in
    do_nofity_resume() as we never clear the TIF flag, once we now know that
    we don't support FP.
    
    Fix this by making sure that we clear the TIF_FOREIGN_FPSTATE flag
    for tasks which may have them set, as we would have done in the normal
    case, but avoiding touching the hardware state (since we don't support any).
    
    Also to make sure we handle the cases seemlessly we categorise the
    helper functions to two :
     1) Helpers for common core code, which calls into take appropriate
        actions without knowing the current FPSIMD state of the CPU/task.
    
        e.g fpsimd_restore_current_state(), fpsimd_flush_task_state(),
            fpsimd_save_and_flush_cpu_state().
    
        We bail out early for these functions, taking any appropriate actions
        (e.g, clearing the TIF flag) where necessary to hide the handling
        from core code.
    
     2) Helpers used when the presence of FP/SIMD is apparent.
        i.e, save/restore the FP/SIMD register state, modify the CPU/task
        FP/SIMD state.
        e.g,
    
        fpsimd_save(), task_fpsimd_load() - save/restore task FP/SIMD registers
    
        fpsimd_bind_task_to_cpu()  \
                                    - Update the "state" metadata for CPU/task.
        fpsimd_bind_state_to_cpu() /
    
        fpsimd_update_current_state() - Update the fp/simd state for the current
                                        task from memory.
    
        These must not be called in the absence of FP/SIMD. Put in a WARNING
        to make sure they are not invoked in the absence of FP/SIMD.
    
    KVM also uses the TIF_FOREIGN_FPSTATE flag to manage the FP/SIMD state
    on the CPU. However, without FP/SIMD support we trap all accesses and
    inject undefined instruction. Thus we should never "load" guest state.
    Add a sanity check to make sure this is valid.
    
    Fixes: 82e0191a1aa11abf ("arm64: Support systems without FP/ASIMD")
    Cc: Will Deacon <will@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ec337059d71e9a2f66f223d47a9ae428a435c41
Author: Alexandru Elisei <alexandru.elisei@arm.com>
Date:   Mon Jan 27 10:36:52 2020 +0000

    KVM: arm64: Treat emulated TVAL TimerValue as a signed 32-bit integer
    
    commit 4a267aa707953a9a73d1f5dc7f894dd9024a92be upstream.
    
    According to the ARM ARM, registers CNT{P,V}_TVAL_EL0 have bits [63:32]
    RES0 [1]. When reading the register, the value is truncated to the least
    significant 32 bits [2], and on writes, TimerValue is treated as a signed
    32-bit integer [1, 2].
    
    When the guest behaves correctly and writes 32-bit values, treating TVAL
    as an unsigned 64 bit register works as expected. However, things start
    to break down when the guest writes larger values, because
    (u64)0x1_ffff_ffff = 8589934591. but (s32)0x1_ffff_ffff = -1, and the
    former will cause the timer interrupt to be asserted in the future, but
    the latter will cause it to be asserted now.  Let's treat TVAL as a
    signed 32-bit register on writes, to match the behaviour described in
    the architecture, and the behaviour experimentally exhibited by the
    virtual timer on a non-vhe host.
    
    [1] Arm DDI 0487E.a, section D13.8.18
    [2] Arm DDI 0487E.a, section D11.2.4
    
    Signed-off-by: Alexandru Elisei <alexandru.elisei@arm.com>
    [maz: replaced the read-side mask with lower_32_bits]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Fixes: 8fa761624871 ("KVM: arm/arm64: arch_timer: Fix CNTP_TVAL calculation")
    Link: https://lore.kernel.org/r/20200127103652.2326-1-alexandru.elisei@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a17d21640453719e6f7a9de53d2982f0f7b2357b
Author: Eric Auger <eric.auger@redhat.com>
Date:   Fri Jan 24 15:25:34 2020 +0100

    KVM: arm64: pmu: Fix chained SW_INCR counters
    
    commit aa76829171e98bd75a0cc00b6248eca269ac7f4f upstream.
    
    At the moment a SW_INCR counter always overflows on 32-bit
    boundary, independently on whether the n+1th counter is
    programmed as CHAIN.
    
    Check whether the SW_INCR counter is a 64b counter and if so,
    implement the 64b logic.
    
    Fixes: 80f393a23be6 ("KVM: arm/arm64: Support chained PMU counters")
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200124142535.29386-4-eric.auger@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6229d1b5c223bdcbf031b1fd62ef751cc409d78
Author: Eric Auger <eric.auger@redhat.com>
Date:   Fri Jan 24 15:25:32 2020 +0100

    KVM: arm64: pmu: Don't increment SW_INCR if PMCR.E is unset
    
    commit 3837407c1aa1101ed5e214c7d6041e7a23335c6e upstream.
    
    The specification says PMSWINC increments PMEVCNTR<n>_EL1 by 1
    if PMEVCNTR<n>_EL0 is enabled and configured to count SW_INCR.
    
    For PMEVCNTR<n>_EL0 to be enabled, we need both PMCNTENSET to
    be set for the corresponding event counter but we also need
    the PMCR.E bit to be set.
    
    Fixes: 7a0adc7064b8 ("arm64: KVM: Add access handler for PMSWINC register")
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Andrew Murray <andrew.murray@arm.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200124142535.29386-2-eric.auger@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93a509cf118223f8372d49fc8711dbbec27c1c67
Author: James Morse <james.morse@arm.com>
Date:   Tue Jan 21 12:33:56 2020 +0000

    KVM: arm: Make inject_abt32() inject an external abort instead
    
    commit 21aecdbd7f3ab02c9b82597dc733ee759fb8b274 upstream.
    
    KVM's inject_abt64() injects an external-abort into an aarch64 guest.
    The KVM_CAP_ARM_INJECT_EXT_DABT is intended to do exactly this, but
    for an aarch32 guest inject_abt32() injects an implementation-defined
    exception, 'Lockdown fault'.
    
    Change this to external abort. For non-LPAE we now get the documented:
    | Unhandled fault: external abort on non-linefetch (0x008) at 0x9c800f00
    and for LPAE:
    | Unhandled fault: synchronous external abort (0x210) at 0x9c800f00
    
    Fixes: 74a64a981662a ("KVM: arm/arm64: Unify 32bit fault injection")
    Reported-by: Beata Michalska <beata.michalska@linaro.org>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200121123356.203000-3-james.morse@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cce31930ad32bd064d938a903305c57d529976a
Author: James Morse <james.morse@arm.com>
Date:   Tue Jan 21 12:33:55 2020 +0000

    KVM: arm: Fix DFSR setting for non-LPAE aarch32 guests
    
    commit 018f22f95e8a6c3e27188b7317ef2c70a34cb2cd upstream.
    
    Beata reports that KVM_SET_VCPU_EVENTS doesn't inject the expected
    exception to a non-LPAE aarch32 guest.
    
    The host intends to inject DFSR.FS=0x14 "IMPLEMENTATION DEFINED fault
    (Lockdown fault)", but the guest receives DFSR.FS=0x04 "Fault on
    instruction cache maintenance". This fault is hooked by
    do_translation_fault() since ARMv6, which goes on to silently 'handle'
    the exception, and restart the faulting instruction.
    
    It turns out, when TTBCR.EAE is clear DFSR is split, and FS[4] has
    to shuffle up to DFSR[10].
    
    As KVM only does this in one place, fix up the static values. We
    now get the expected:
    | Unhandled fault: lock abort (0x404) at 0x9c800f00
    
    Fixes: 74a64a981662a ("KVM: arm/arm64: Unify 32bit fault injection")
    Reported-by: Beata Michalska <beata.michalska@linaro.org>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200121123356.203000-2-james.morse@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48f9ec2020b31abf92544b01d2719a2b18b5df7e
Author: Gavin Shan <gshan@redhat.com>
Date:   Tue Jan 21 16:56:59 2020 +1100

    KVM: arm/arm64: Fix young bit from mmu notifier
    
    commit cf2d23e0bac9f6b5cd1cba8898f5f05ead40e530 upstream.
    
    kvm_test_age_hva() is called upon mmu_notifier_test_young(), but wrong
    address range has been passed to handle_hva_to_gpa(). With the wrong
    address range, no young bits will be checked in handle_hva_to_gpa().
    It means zero is always returned from mmu_notifier_test_young().
    
    This fixes the issue by passing correct address range to the underly
    function handle_hva_to_gpa(), so that the hardware young (access) bit
    will be visited.
    
    Fixes: 35307b9a5f7e ("arm/arm64: KVM: Implement Stage-2 page aging")
    Signed-off-by: Gavin Shan <gshan@redhat.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20200121055659.19560-1-gshan@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 537493f1460a27f81eb1499d62ec974c6103690e
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Mon Jan 13 23:30:21 2020 +0000

    arm64: ptrace: nofpsimd: Fail FP/SIMD regset operations
    
    commit c9d66999f064947e6b577ceacc1eb2fbca6a8d3c upstream.
    
    When fp/simd is not supported on the system, fail the operations
    of FP/SIMD regsets.
    
    Fixes: 82e0191a1aa11abf ("arm64: Support systems without FP/ASIMD")
    Cc: Will Deacon <will@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37014cee458cd4a5b8d849f6ad0af82cc6f2c3e0
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Mon Jan 13 23:30:20 2020 +0000

    arm64: cpufeature: Set the FP/SIMD compat HWCAP bits properly
    
    commit 7559950aef1ab8792c50797c6c5c7c5150a02460 upstream.
    
    We set the compat_elf_hwcap bits unconditionally on arm64 to
    include the VFP and NEON support. However, the FP/SIMD unit
    is optional on Arm v8 and thus could be missing. We already
    handle this properly in the kernel, but still advertise to
    the COMPAT applications that the VFP is available. Fix this
    to make sure we only advertise when we really have them.
    
    Fixes: 82e0191a1aa11abf ("arm64: Support systems without FP/ASIMD")
    Cc: Will Deacon <will@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a2b07a2c3dde4e2ce6398a7a7187b49489493ad
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Mon Jan 13 23:30:19 2020 +0000

    arm64: cpufeature: Fix the type of no FP/SIMD capability
    
    commit 449443c03d8cfdacf7313e17779a2594ebf87e6d upstream.
    
    The NO_FPSIMD capability is defined with scope SYSTEM, which implies
    that the "absence" of FP/SIMD on at least one CPU is detected only
    after all the SMP CPUs are brought up. However, we use the status
    of this capability for every context switch. So, let us change
    the scope to LOCAL_CPU to allow the detection of this capability
    as and when the first CPU without FP is brought up.
    
    Also, the current type allows hotplugged CPU to be brought up without
    FP/SIMD when all the current CPUs have FP/SIMD and we have the userspace
    up. Fix both of these issues by changing the capability to
    BOOT_RESTRICTED_LOCAL_CPU_FEATURE.
    
    Fixes: 82e0191a1aa11abf ("arm64: Support systems without FP/ASIMD")
    Cc: Will Deacon <will@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba95651cefe1d1c4a262f8e78548812cd6ab073c
Author: Qais Yousef <qais.yousef@arm.com>
Date:   Tue Dec 24 11:54:04 2019 +0000

    sched/uclamp: Fix a bug in propagating uclamp value in new cgroups
    
    commit 7226017ad37a888915628e59a84a2d1e57b40707 upstream.
    
    When a new cgroup is created, the effective uclamp value wasn't updated
    with a call to cpu_util_update_eff() that looks at the hierarchy and
    update to the most restrictive values.
    
    Fix it by ensuring to call cpu_util_update_eff() when a new cgroup
    becomes online.
    
    Without this change, the newly created cgroup uses the default
    root_task_group uclamp values, which is 1024 for both uclamp_{min, max},
    which will cause the rq to to be clamped to max, hence cause the
    system to run at max frequency.
    
    The problem was observed on Ubuntu server and was reproduced on Debian
    and Buildroot rootfs.
    
    By default, Ubuntu and Debian create a cpu controller cgroup hierarchy
    and add all tasks to it - which creates enough noise to keep the rq
    uclamp value at max most of the time. Imitating this behavior makes the
    problem visible in Buildroot too which otherwise looks fine since it's a
    minimal userspace.
    
    Fixes: 0b60ba2dd342 ("sched/uclamp: Propagate parent clamps")
    Reported-by: Doug Smythies <dsmythies@telus.net>
    Signed-off-by: Qais Yousef <qais.yousef@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Doug Smythies <dsmythies@telus.net>
    Link: https://lore.kernel.org/lkml/000701d5b965$361b6c60$a2524520$@net/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d42957c9045d90bca865f534b6114551034c944
Author: Olof Johansson <olof@lixom.net>
Date:   Wed Dec 18 01:18:49 2019 +0100

    ARM: 8949/1: mm: mark free_memmap as __init
    
    commit 31f3010e60522ede237fb145a63b4af5a41718c2 upstream.
    
    As of commit ac7c3e4ff401 ("compiler: enable CONFIG_OPTIMIZE_INLINING
    forcibly"), free_memmap() might not always be inlined, and thus is
    triggering a section warning:
    
    WARNING: vmlinux.o(.text.unlikely+0x904): Section mismatch in reference from the function free_memmap() to the function .meminit.text:memblock_free()
    
    Mark it as __init, since the faller (free_unused_memmap) already is.
    
    Fixes: ac7c3e4ff401 ("compiler: enable CONFIG_OPTIMIZE_INLINING forcibly")
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 199808393ef710f880305b259b1767278da425ba
Author: Eric Auger <eric.auger@redhat.com>
Date:   Fri Dec 13 10:42:37 2019 +0100

    KVM: arm/arm64: vgic-its: Fix restoration of unmapped collections
    
    commit 8c58be34494b7f1b2adb446e2d8beeb90e5de65b upstream.
    
    Saving/restoring an unmapped collection is a valid scenario. For
    example this happens if a MAPTI command was sent, featuring an
    unmapped collection. At the moment the CTE fails to be restored.
    Only compare against the number of online vcpus if the rdist
    base is set.
    
    Fixes: ea1ad53e1e31a ("KVM: arm64: vgic-its: Collection table save/restore")
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Zenghui Yu <yuzenghui@huawei.com>
    Link: https://lore.kernel.org/r/20191213094237.19627-1-eric.auger@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c406e5352155d0616e233621b0c87247c20d9370
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Dec 11 13:04:08 2019 +0200

    ARM: at91: pm: use of_device_id array to find the proper shdwc node
    
    commit ec6e618c8c018c1361d77789a100a5f6f6317178 upstream.
    
    Use of_device_id array to find the proper shdwc compatibile node.
    SAM9X60's shdwc changes were not integrated when
    commit eaedc0d379da ("ARM: at91: pm: add ULP1 support for SAM9X60")
    was integrated.
    
    Fixes: eaedc0d379da ("ARM: at91: pm: add ULP1 support for SAM9X60")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/1576062248-18514-3-git-send-email-claudiu.beznea@microchip.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69f08f44b4c1292621c91c568dfd3cd8f1f3b7fd
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Dec 11 13:04:07 2019 +0200

    ARM: at91: pm: use SAM9X60 PMC's compatible
    
    commit 6b9dfd986a81a999a27b6ed9dbe91203089c62dd upstream.
    
    SAM9X60 PMC's has a different PMC. It was not integrated at the moment
    commit 01c7031cfa73 ("ARM: at91: pm: initial PM support for SAM9X60")
    was published.
    
    Fixes: 01c7031cfa73 ("ARM: at91: pm: initial PM support for SAM9X60")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/1576062248-18514-2-git-send-email-claudiu.beznea@microchip.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 451b91d88a1d685d42933cc6c22c8592c1974a1b
Author: Shameer Kolothum <shameerali.kolothum.thodi@huawei.com>
Date:   Wed Nov 13 16:11:38 2019 +0000

    iommu/arm-smmu-v3: Populate VMID field for CMDQ_OP_TLBI_NH_VA
    
    commit 935d43ba272e0001f8ef446a3eff15d8175cb11b upstream.
    
    CMDQ_OP_TLBI_NH_VA requires VMID and this was missing since
    commit 1c27df1c0a82 ("iommu/arm-smmu: Use correct address mask
    for CMD_TLBI_S2_IPA"). Add it back.
    
    Fixes: 1c27df1c0a82 ("iommu/arm-smmu: Use correct address mask for CMD_TLBI_S2_IPA")
    Signed-off-by: Shameer Kolothum <shameerali.kolothum.thodi@huawei.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4faf627c76e7c8cc7eef5f33b0aed212d314041
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Mon Dec 16 15:19:22 2019 +1100

    powerpc/pseries: Allow not having ibm, hypertas-functions::hcall-multi-tce for DDW
    
    commit 7559d3d295f3365ea7ac0c0274c05e633fe4f594 upstream.
    
    By default a pseries guest supports a H_PUT_TCE hypercall which maps
    a single IOMMU page in a DMA window. Additionally the hypervisor may
    support H_PUT_TCE_INDIRECT/H_STUFF_TCE which update multiple TCEs at once;
    this is advertised via the device tree /rtas/ibm,hypertas-functions
    property which Linux converts to FW_FEATURE_MULTITCE.
    
    FW_FEATURE_MULTITCE is checked when dma_iommu_ops is used; however
    the code managing the huge DMA window (DDW) ignores it and calls
    H_PUT_TCE_INDIRECT even if it is explicitly disabled via
    the "multitce=off" kernel command line parameter.
    
    This adds FW_FEATURE_MULTITCE checking to the DDW code path.
    
    This changes tce_build_pSeriesLP to take liobn and page size as
    the huge window does not have iommu_table descriptor which usually
    the place to store these numbers.
    
    Fixes: 4e8b0cf46b25 ("powerpc/pseries: Add support for dynamic dma windows")
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
    Tested-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191216041924.42318-3-aik@ozlabs.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cff30edec932d21b3f20af7379148adade442124
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Mon Jan 20 14:10:02 2020 -0800

    powerpc/pseries/vio: Fix iommu_table use-after-free refcount warning
    
    commit aff8c8242bc638ba57247ae1ec5f272ac3ed3b92 upstream.
    
    Commit e5afdf9dd515 ("powerpc/vfio_spapr_tce: Add reference counting to
    iommu_table") missed an iommu_table allocation in the pseries vio code.
    The iommu_table is allocated with kzalloc and as a result the associated
    kref gets a value of zero. This has the side effect that during a DLPAR
    remove of the associated virtual IOA the iommu_tce_table_put() triggers
    a use-after-free underflow warning.
    
    Call Trace:
    [c0000002879e39f0] [c00000000071ecb4] refcount_warn_saturate+0x184/0x190
    (unreliable)
    [c0000002879e3a50] [c0000000000500ac] iommu_tce_table_put+0x9c/0xb0
    [c0000002879e3a70] [c0000000000f54e4] vio_dev_release+0x34/0x70
    [c0000002879e3aa0] [c00000000087cfa4] device_release+0x54/0xf0
    [c0000002879e3b10] [c000000000d64c84] kobject_cleanup+0xa4/0x240
    [c0000002879e3b90] [c00000000087d358] put_device+0x28/0x40
    [c0000002879e3bb0] [c0000000007a328c] dlpar_remove_slot+0x15c/0x250
    [c0000002879e3c50] [c0000000007a348c] remove_slot_store+0xac/0xf0
    [c0000002879e3cd0] [c000000000d64220] kobj_attr_store+0x30/0x60
    [c0000002879e3cf0] [c0000000004ff13c] sysfs_kf_write+0x6c/0xa0
    [c0000002879e3d10] [c0000000004fde4c] kernfs_fop_write+0x18c/0x260
    [c0000002879e3d60] [c000000000410f3c] __vfs_write+0x3c/0x70
    [c0000002879e3d80] [c000000000415408] vfs_write+0xc8/0x250
    [c0000002879e3dd0] [c0000000004157dc] ksys_write+0x7c/0x120
    [c0000002879e3e20] [c00000000000b278] system_call+0x5c/0x68
    
    Further, since the refcount was always zero the iommu_tce_table_put()
    fails to call the iommu_table release function resulting in a leak.
    
    Fix this issue be initilizing the iommu_table kref immediately after
    allocation.
    
    Fixes: e5afdf9dd515 ("powerpc/vfio_spapr_tce: Add reference counting to iommu_table")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1579558202-26052-1-git-send-email-tyreld@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ca556d5edfd66cd89da7e2b26dfbd4858735e71
Author: Vaibhav Jain <vaibhav@linux.ibm.com>
Date:   Wed Jan 22 21:21:40 2020 +0530

    powerpc/papr_scm: Fix leaking 'bus_desc.provider_name' in some paths
    
    commit 5649607a8d0b0e019a4db14aab3de1e16c3a2b4f upstream.
    
    String 'bus_desc.provider_name' allocated inside
    papr_scm_nvdimm_init() will leaks in case call to
    nvdimm_bus_register() fails or when papr_scm_remove() is called.
    
    This minor patch ensures that 'bus_desc.provider_name' is freed in
    error path for nvdimm_bus_register() as well as in papr_scm_remove().
    
    Fixes: b5beae5e224f ("powerpc/pseries: Add driver for PAPR SCM regions")
    Signed-off-by: Vaibhav Jain <vaibhav@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200122155140.120429-1-vaibhav@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05a23f436471816b6a22afd0511d3747972a564b
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Tue Jan 14 08:13:10 2020 +0000

    powerpc/ptdump: Only enable PPC_CHECK_WX with STRICT_KERNEL_RWX
    
    commit f509247b08f2dcf7754d9ed85ad69a7972aa132b upstream.
    
    ptdump_check_wx() is called from mark_rodata_ro() which only exists
    when CONFIG_STRICT_KERNEL_RWX is selected.
    
    Fixes: 453d87f6a8ae ("powerpc/mm: Warn if W+X pages found on boot")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/922d4939c735c6b52b4137838bcc066fffd4fc33.1578989545.git.christophe.leroy@c-s.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17f37249d7db610163e3ab87a8e6e8dd6dbd6112
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Tue Jan 14 08:13:08 2020 +0000

    powerpc/ptdump: Fix W+X verification call in mark_rodata_ro()
    
    commit e26ad936dd89d79f66c2b567f700e0c2a7103070 upstream.
    
    ptdump_check_wx() also have to be called when pages are mapped
    by blocks.
    
    Fixes: 453d87f6a8ae ("powerpc/mm: Warn if W+X pages found on boot")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/37517da8310f4457f28921a4edb88fb21d27b62a.1578989531.git.christophe.leroy@c-s.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d7edac1469eddb98d66947f3cdb726bc5e695d2
Author: Ram Pai <linuxram@us.ibm.com>
Date:   Mon Dec 16 15:19:21 2019 +1100

    Revert "powerpc/pseries/iommu: Don't use dma_iommu_ops on secure guests"
    
    commit d862b44133b7a1d7de25288e09eabf4df415e971 upstream.
    
    This reverts commit edea902c1c1efb855f77e041f9daf1abe7a9768a.
    
    At the time the change allowed direct DMA ops for secure VMs; however
    since then we switched on using SWIOTLB backed with IOMMU (direct mapping)
    and to make this work, we need dma_iommu_ops which handles all cases
    including TCE mapping I/O pages in the presence of an IOMMU.
    
    Fixes: edea902c1c1e ("powerpc/pseries/iommu: Don't use dma_iommu_ops on secure guests")
    Signed-off-by: Ram Pai <linuxram@us.ibm.com>
    [aik: added "revert" and "fixes:"]
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
    Tested-by: Thiago Jung Bauermann <bauerman@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191216041924.42318-2-aik@ozlabs.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c764da005af27caad9789e8e013fcaa6126ade
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Feb 14 09:36:33 2019 -0800

    soc: qcom: rpmhpd: Set 'active_only' for active only power domains
    
    commit 5d0d4d42bed0090d3139e7c5ca1587d76d48add6 upstream.
    
    The 'active_only' attribute was accidentally never set to true for any
    power domains meaning that all the code handling this attribute was
    dead.
    
    NOTE that the RPM power domain code (as opposed to the RPMh one) gets
    this right.
    
    Acked-by: Rajendra Nayak <rnayak@codeaurora.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Fixes: 279b7e8a62cc ("soc: qcom: rpmhpd: Add RPMh power domain driver")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20190214173633.211000-1-dianders@chromium.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bf48acf43385315b4495a17fe2eb92af7a8fc1c
Author: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
Date:   Sat Dec 14 00:27:12 2019 +0800

    tools/power/acpi: fix compilation error
    
    commit 1985f8c7f9a42a651a9750d6fcadc74336d182df upstream.
    
    If we compile tools/acpi target in the top source directory, we'd get a
    compilation error showing as bellow:
    
            # make tools/acpi
              DESCEND  power/acpi
              DESCEND  tools/acpidbg
              CC       tools/acpidbg/acpidbg.o
            Assembler messages:
            Fatal error: can't create /home/lzy/kernel-upstream/power/acpi/\
                            tools/acpidbg/acpidbg.o: No such file or directory
            ../../Makefile.rules:26: recipe for target '/home/lzy/kernel-upstream/\
                            power/acpi/tools/acpidbg/acpidbg.o' failed
            make[3]: *** [/home/lzy/kernel-upstream//power/acpi/tools/acpidbg/\
                            acpidbg.o] Error 1
            Makefile:19: recipe for target 'acpidbg' failed
            make[2]: *** [acpidbg] Error 2
            Makefile:54: recipe for target 'acpi' failed
            make[1]: *** [acpi] Error 2
            Makefile:1607: recipe for target 'tools/acpi' failed
            make: *** [tools/acpi] Error 2
    
    Fixes: d5a4b1a540b8 ("tools/power/acpi: Remove direct kernel source include reference")
    Signed-off-by: Zhengyuan Liu <liuzhengyuan@kylinos.cn>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d3453a5660b0872e0e2dfe26aaa29b9ffbe49b1
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Fri Jan 10 18:20:07 2020 +0100

    ARM: dts: at91: sama5d3: define clock rate range for tcb1
    
    commit a7e0f3fc01df4b1b7077df777c37feae8c9e8b6d upstream.
    
    The clock rate range for the TCB1 clock is missing. define it in the device
    tree.
    
    Reported-by: Karl Rudbæk Olsen <karl@micro-technic.com>
    Fixes: d2e8190b7916 ("ARM: at91/dt: define sama5d3 clocks")
    Link: https://lore.kernel.org/r/20200110172007.1253659-2-alexandre.belloni@bootlin.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 581a5fbf4f6df71757f34d5f36dff113ddaf0af2
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Fri Jan 10 18:20:06 2020 +0100

    ARM: dts: at91: sama5d3: fix maximum peripheral clock rates
    
    commit ee0aa926ddb0bd8ba59e33e3803b3b5804e3f5da upstream.
    
    Currently the maximum rate for peripheral clock is calculated based on a
    typical 133MHz MCK. The maximum frequency is defined in the datasheet as a
    ratio to MCK. Some sama5d3 platforms are using a 166MHz MCK. Update the
    device trees to match the maximum rate based on 166MHz.
    
    Reported-by: Karl Rudbæk Olsen <karl@micro-technic.com>
    Fixes: d2e8190b7916 ("ARM: at91/dt: define sama5d3 clocks")
    Link: https://lore.kernel.org/r/20200110172007.1253659-1-alexandre.belloni@bootlin.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e8802c935097aa2ed2063d288c6646896237d16
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Wed Dec 25 02:06:07 2019 +0100

    ARM: dts: meson8b: use the actual frequency for the GPU's 364MHz OPP
    
    commit c3dd3315ab58b2cfa1916df55b0d0f9fbd94266f upstream.
    
    The clock setup on Meson8 cannot achieve a Mali frequency of exactly
    182.15MHz. The vendor driver uses "FCLK_DIV7 / 1" for this frequency,
    which translates to 2550MHz / 7 / 1 = 364285714Hz.
    Update the GPU operating point to that specific frequency to not confuse
    myself when comparing the frequency from the .dts with the actual clock
    rate on the system.
    
    Fixes: c3ea80b6138cae ("ARM: dts: meson8b: add the Mali-450 MP2 GPU")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16665fffafee50b638b73eacff80f930a0a2a617
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Wed Dec 25 02:06:06 2019 +0100

    ARM: dts: meson8: use the actual frequency for the GPU's 182.1MHz OPP
    
    commit fe634a7a9a57fb736e39fb71aa9adc6448a90f94 upstream.
    
    The clock setup on Meson8 cannot achieve a Mali frequency of exactly
    182.15MHz. The vendor driver uses "FCLK_DIV7 / 2" for this frequency,
    which translates to 2550MHz / 7 / 2 = 182142857Hz.
    Update the GPU operating point to that specific frequency to not confuse
    myself when comparing the frequency from the .dts with the actual clock
    rate on the system.
    
    Fixes: 7d3f6b536e72c9 ("ARM: dts: meson8: add the Mali-450 MP6 GPU")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d2d8cd29c1b76686ea18cad233276fa83f253cf
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Thu Dec 19 12:28:45 2019 +0200

    arm64: dts: marvell: clearfog-gt-8k: fix switch cpu port node
    
    commit 62bba54d99407aedfe9b0a02e72e23c06e2b0116 upstream.
    
    Explicitly set the switch cpu (upstream) port phy-mode and managed
    properties. This fixes the Marvell 88E6141 switch serdes configuration
    with the recently enabled phylink layer.
    
    Fixes: a6120833272c ("arm64: dts: add support for SolidRun Clearfog GT 8K")
    Reported-by: Denis Odintsov <d.odintsov@traviangames.com>
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c44134c2a287ed11c00d95fcc57ac4c47db1f493
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Dec 16 11:08:22 2019 +0900

    arm64: dts: renesas: r8a77990: ebisu: Remove clkout-lr-synchronous from sound
    
    commit bf2b74ce9b33a2edd6ba1930ce60a71830790910 upstream.
    
    rcar_sound doesn't support clkout-lr-synchronous in upstream.
    It was supported under out-of-tree rcar_sound.
    upstream rcar_sound is supporting
            - clkout-lr-synchronous
            + clkout-lr-asynchronous
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/87mubt3tux.wl-kuninori.morimoto.gx@renesas.com
    Fixes: 56629fcba94c698d ("arm64: dts: renesas: ebisu: Enable Audio")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f9da85057c1b4a6291c82a6db0d40e0865fa66a
Author: Tero Kristo <t-kristo@ti.com>
Date:   Wed Dec 11 08:07:18 2019 -0600

    ARM: dts: am43xx: add support for clkout1 clock
    
    commit 01053dadb79d63b65f7b353e68b4b6ccf4effedb upstream.
    
    clkout1 clock node and its generation tree was missing. Add this based
    on the data on TRM and PRCM functional spec.
    
    commit 664ae1ab2536 ("ARM: dts: am43xx: add clkctrl nodes") effectively
    reverted this commit 8010f13a40d3 ("ARM: dts: am43xx: add support for
    clkout1 clock") which is needed for the ov2659 camera sensor clock
    definition hence it is being re-applied here.
    
    Note that because of the current dts node name dependency for mapping to
    clock domain, we must still use "clkout1-*ck" naming instead of generic
    "clock@" naming for the node. And because of this, it's probably best to
    apply the dts node addition together along with the other clock changes.
    
    Fixes: 664ae1ab2536 ("ARM: dts: am43xx: add clkctrl nodes")
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Tested-by: Benoit Parrot <bparrot@ti.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd13285419b9bb3a254c9bdd6382640266a39665
Author: Ingo van Lil <inguin@gmx.de>
Date:   Tue Dec 3 15:21:47 2019 +0100

    ARM: dts: at91: Reenable UART TX pull-ups
    
    commit 9d39d86cd4af2b17b970d63307daad71f563d207 upstream.
    
    Pull-ups for SAM9 UART/USART TX lines were disabled in a previous
    commit. However, several chips in the SAM9 family require pull-ups to
    prevent the TX lines from falling (and causing an endless break
    condition) when the transceiver is disabled.
    
    From the SAM9G20 datasheet, 32.5.1: "To prevent the TXD line from
    falling when the USART is disabled, the use of an internal pull up
    is mandatory.". This commit reenables the pull-ups for all chips having
    that sentence in their datasheets.
    
    Fixes: 5e04822f7db5 ("ARM: dts: at91: fixes uart pinctrl, set pullup on rx, clear pullup on tx")
    Signed-off-by: Ingo van Lil <inguin@gmx.de>
    Cc: Peter Rosin <peda@axentia.se>
    Link: https://lore.kernel.org/r/20191203142147.875227-1-inguin@gmx.de
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d01521db86ac5a51a2a3d66a8a73571cca12bd97
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Nov 16 11:06:56 2019 +0000

    arm64: dts: uDPU: fix broken ethernet
    
    commit 1eebac0240580b531954b02c05068051df41142a upstream.
    
    The uDPU uses both ethernet controllers, which ties up COMPHY 0 for
    eth1 and COMPHY 1 for eth0, with no USB3 comphy.  The addition of
    COMPHY support made the kernel override the setup by the boot loader
    breaking this platform by assuming that COMPHY 0 was always used for
    USB3.  Delete the USB3 COMPHY definition at platform level, and add
    phy specifications for the ethernet channels.
    
    Fixes: bd3d25b07342 ("arm64: dts: marvell: armada-37xx: link USB hosts with their PHYs")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ee40005f420dafb7a0c584700c7c039d635b50b
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Wed Nov 6 20:59:48 2019 -0800

    arm64: dts: qcom: msm8998: Fix tcsr syscon size
    
    commit 05caa5bf9cab9983dd7a50428c46b7e617ba20d6 upstream.
    
    The tcsr syscon region is really 0x40000 in size.  We need access to the
    full region so that we can access the axi resets when managing the
    modem subsystem.
    
    Fixes: c7833949564e ("arm64: dts: qcom: msm8998: Add smem related nodes")
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Link: https://lore.kernel.org/r/20191107045948.4341-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc684844e7e09d384ee838a80c894a1735bb0645
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Jan 22 19:05:20 2020 +0300

    platform/x86: intel_mid_powerbtn: Take a copy of ddata
    
    commit 5e0c94d3aeeecc68c573033f08d9678fecf253bd upstream.
    
    The driver gets driver_data from memory that is marked as const (which
    is probably put to read-only memory) and it then modifies it. This
    likely causes some sort of fault to happen.
    
    Fix this by taking a copy of the structure.
    
    Fixes: c94a8ff14de3 ("platform/x86: intel_mid_powerbtn: make mid_pb_ddata const")
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b09e3d3e79cf9c0cb11768eb60a27e35720d7e26
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Tue Jan 14 17:09:24 2020 +0100

    ARC: [plat-axs10x]: Add missing multicast filter number to GMAC node
    
    commit 7980dff398f86a618f502378fa27cf7e77449afa upstream.
    
    Add a missing property to GMAC node so that multicast filtering works
    correctly.
    
    Fixes: 556cc1c5f528 ("ARC: [axs101] Add support for AXS101 SDP (software development platform)")
    Acked-by: Alexey Brodkin <abrodkin@synopsys.com>
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2de1af2bcba06b97583121d9739ba9e5f5d89f49
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Fri Dec 13 12:19:34 2019 +0530

    watchdog: qcom: Use platform_get_irq_optional() for bark irq
    
    commit e0b4f4e0cf7fa9d62628d4249c765ec18dffd143 upstream.
    
    platform_get_irq() prints an error message when the interrupt
    is not available. So on platforms where bark interrupt is
    not specified, following error message is observed on SDM845.
    
    [    2.975888] qcom_wdt 17980000.watchdog: IRQ index 0 not found
    
    This is also seen on SC7180, SM8150 SoCs as well.
    Fix this by using platform_get_irq_optional() instead.
    
    Fixes: 36375491a4395654 ("watchdog: qcom: support pre-timeout when the bark irq is available")
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20191213064934.4112-1-saiprakash.ranjan@codeaurora.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f599ae7529e63ce597e21155c116e78926f3b7e3
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Jan 23 15:14:35 2020 +0200

    rtc: cmos: Stop using shared IRQ
    
    commit b6da197a2e9670df6f07e6698629e9ce95ab614e upstream.
    
    As reported by Guilherme G. Piccoli:
    
    ---8<---8<---8<---
    
    The rtc-cmos interrupt setting was changed in the commit 079062b28fb4
    ("rtc: cmos: prevent kernel warning on IRQ flags mismatch") in order
    to allow shared interrupts; according to that commit's description,
    some machine got kernel warnings due to the interrupt line being shared
    between rtc-cmos and other hardware, and rtc-cmos didn't allow IRQ sharing
    that time.
    
    After the aforementioned commit though it was observed a huge increase
    in lost HPET interrupts in some systems, observed through the following
    kernel message:
    
    [...] hpet1: lost 35 rtc interrupts
    
    After investigation, it was narrowed down to the shared interrupts
    usage when having the kernel option "irqpoll" enabled. In this case,
    all IRQ handlers are called for non-timer interrupts, if such handlers
    are setup in shared IRQ lines. The rtc-cmos IRQ handler could be set to
    hpet_rtc_interrupt(), which will produce the kernel "lost interrupts"
    message after doing work - lots of readl/writel to HPET registers, which
    are known to be slow.
    
    Although "irqpoll" is not a default kernel option, it's used in some contexts,
    one being the kdump kernel (which is an already "impaired" kernel usually
    running with 1 CPU available), so the performance burden could be considerable.
    Also, the same issue would happen (in a shorter extent though) when using
    "irqfixup" kernel option.
    
    In a quick experiment, a virtual machine with uptime of 2 minutes produced
    >300 calls to hpet_rtc_interrupt() when "irqpoll" was set, whereas without
    sharing interrupts this number reduced to 1 interrupt. Machines with more
    hardware than a VM should generate even more unnecessary HPET interrupts
    in this scenario.
    
    ---8<---8<---8<---
    
    After looking into the rtc-cmos driver history and DSDT table from
    the Microsoft Surface 3, we may notice that Hans de Goede submitted
    a correct fix (see dependency below). Thus, we simply revert
    the culprit commit.
    
    Fixes: 079062b28fb4 ("rtc: cmos: prevent kernel warning on IRQ flags mismatch")
    Depends-on: a1e23a42f1bd ("rtc: cmos: Do not assume irq 8 for rtc when there are no legacy irqs")
    Reported-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Tested-by: Guilherme G. Piccoli <gpiccoli@canonical.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20200123131437.28157-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a3aa58c0e027b5d7997bee1a64860ddc6059942
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Thu Dec 12 16:31:10 2019 +0100

    rtc: hym8563: Return -EINVAL if the time is known to be invalid
    
    commit f236a2a2ebabad0848ad0995af7ad1dc7029e895 upstream.
    
    The current code returns -EPERM when the voltage loss bit is set.
    Since the bit indicates that the time value is not valid, return
    -EINVAL instead, which is the appropriate error code for this
    situation.
    
    Fixes: dcaf03849352 ("rtc: add hym8563 rtc-driver")
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Link: https://lore.kernel.org/r/20191212153111.966923-1-paul.kocialkowski@bootlin.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffad5982ce5828b80316673c60f153abf8cfa11b
Author: Steven Clarkson <sc@lambdal.com>
Date:   Thu Jan 30 16:48:16 2020 -0800

    x86/boot: Handle malformed SRAT tables during early ACPI parsing
    
    [ Upstream commit 2b73ea3796242608b4ccf019ff217156c92e92fe ]
    
    Break an infinite loop when early parsing of the SRAT table is caused
    by a subtable with zero length. Known to affect the ASUS WS X299 SAGE
    motherboard with firmware version 1201 which has a large block of
    zeros in its SRAT table. The kernel could boot successfully on this
    board/firmware prior to the introduction of early parsing this table or
    after a BIOS update.
    
     [ bp: Fixup whitespace damage and commit message. Make it return 0 to
       denote that there are no immovable regions because who knows what
       else is broken in this BIOS. ]
    
    Fixes: 02a3e3cdb7f1 ("x86/boot: Parse SRAT table and count immovable memory regions")
    Signed-off-by: Steven Clarkson <sc@lambdal.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: linux-acpi@vger.kernel.org
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=206343
    Link: https://lkml.kernel.org/r/CAHKq8taGzj0u1E_i=poHUam60Bko5BpiJ9jn0fAupFUYexvdUQ@mail.gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4818129947c87e5ce62b468a4a2516bb38f7f24
Author: Robert Milkowski <rmilkowski@gmail.com>
Date:   Thu Jan 30 09:43:25 2020 +0000

    NFSv4.0: nfs4_do_fsinfo() should not do implicit lease renewals
    
    commit 7dc2993a9e51dd2eee955944efec65bef90265b7 upstream.
    
    Currently, each time nfs4_do_fsinfo() is called it will do an implicit
    NFS4 lease renewal, which is not compliant with the NFS4 specification.
    This can result in a lease being expired by an NFS server.
    
    Commit 83ca7f5ab31f ("NFS: Avoid PUTROOTFH when managing leases")
    introduced implicit client lease renewal in nfs4_do_fsinfo(),
    which can result in the NFSv4.0 lease to expire on a server side,
    and servers returning NFS4ERR_EXPIRED or NFS4ERR_STALE_CLIENTID.
    
    This can easily be reproduced by frequently unmounting a sub-mount,
    then stat'ing it to get it mounted again, which will delay or even
    completely prevent client from sending RENEW operations if no other
    NFS operations are issued. Eventually nfs server will expire client's
    lease and return an error on file access or next RENEW.
    
    This can also happen when a sub-mount is automatically unmounted
    due to inactivity (after nfs_mountpoint_expiry_timeout), then it is
    mounted again via stat(). This can result in a short window during
    which client's lease will expire on a server but not on a client.
    This specific case was observed on production systems.
    
    This patch removes the implicit lease renewal from nfs4_do_fsinfo().
    
    Fixes: 83ca7f5ab31f ("NFS: Avoid PUTROOTFH when managing leases")
    Signed-off-by: Robert Milkowski <rmilkowski@gmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf360732f811fd402d8c278124e8a6a9e43a09bf
Author: Robert Milkowski <rmilkowski@gmail.com>
Date:   Tue Jan 28 08:37:47 2020 +0000

    NFSv4: try lease recovery on NFS4ERR_EXPIRED
    
    commit 924491f2e476f7234d722b24171a4daff61bbe13 upstream.
    
    Currently, if an nfs server returns NFS4ERR_EXPIRED to open(),
    we return EIO to applications without even trying to recover.
    
    Fixes: 272289a3df72 ("NFSv4: nfs4_do_handle_exception() handle revoke/expiry of a single stateid")
    Signed-off-by: Robert Milkowski <rmilkowski@gmail.com>
    Reviewed-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d0a6d77b69c31554158fd4eae867aaab0d3c102
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Sun Jan 26 17:31:13 2020 -0500

    NFSv4: pnfs_roc() must use cred_fscmp() to compare creds
    
    commit 387122478775be5d9816c34aa29de53d0b926835 upstream.
    
    When comparing two 'struct cred' for equality w.r.t. behaviour under
    filesystem access, we need to use cred_fscmp().
    
    Fixes: a52458b48af1 ("NFS/NFSD/SUNRPC: replace generic creds with 'struct cred'.")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86065de0eb0aa42009e73664c063536e84651c91
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Mon Jan 6 15:25:06 2020 -0500

    NFS: Fix fix of show_nfs_errors
    
    commit 118b6292195cfb86a9f43cb65610fc6d980c65f4 upstream.
    
    Casting a negative value to an unsigned long is not the same as
    converting it to its absolute value.
    
    Fixes: 96650e2effa2 ("NFS: Fix show_nfs_errors macros again")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d7030939d22cd749d14df657eed174f0958699b
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Mon Jan 6 15:25:04 2020 -0500

    NFS/pnfs: Fix pnfs_generic_prepare_to_resend_writes()
    
    commit 221203ce6406273cf00e5c6397257d986c003ee6 upstream.
    
    Instead of making assumptions about the commit verifier contents, change
    the commit code to ensure we always check that the verifier was set
    by the XDR code.
    
    Fixes: f54bcf2ecee9 ("pnfs: Prepare for flexfiles by pulling out common code")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ef47a06d2d4b7b16e5ef0f18754040da50f1f36
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Mon Jan 6 15:25:00 2020 -0500

    NFS: Revalidate the file size on a fatal write error
    
    commit 0df68ced55443243951d02cc497be31fadf28173 upstream.
    
    If we suffer a fatal error upon writing a file, which causes us to
    need to revalidate the entire mapping, then we should also revalidate
    the file size.
    
    Fixes: d2ceb7e57086 ("NFS: Don't use page_file_mapping after removing the page")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7560b5b72a2f537f8e1fb17a5021cfee089b247
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Dec 30 16:32:38 2019 +0100

    nfs: NFS_SWAP should depend on SWAP
    
    commit 474c4f306eefbb21b67ebd1de802d005c7d7ecdc upstream.
    
    If CONFIG_SWAP=n, it does not make much sense to offer the user the
    option to enable support for swapping over NFS, as that will still fail
    at run time:
    
        # swapon /swap
        swapon: /swap: swapon failed: Function not implemented
    
    Fix this by adding a dependency on CONFIG_SWAP.
    
    Fixes: a564b8f0398636ba ("nfs: enable swap on NFS")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7842c7b30d7586046593b5790a1c5ddd7de63c5e
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Fri Feb 7 10:37:12 2020 +0000

    bpf, sockmap: Check update requirements after locking
    
    commit 85b8ac01a421791d66c3a458a7f83cfd173fe3fa upstream.
    
    It's currently possible to insert sockets in unexpected states into
    a sockmap, due to a TOCTTOU when updating the map from a syscall.
    sock_map_update_elem checks that sk->sk_state == TCP_ESTABLISHED,
    locks the socket and then calls sock_map_update_common. At this
    point, the socket may have transitioned into another state, and
    the earlier assumptions don't hold anymore. Crucially, it's
    conceivable (though very unlikely) that a socket has become unhashed.
    This breaks the sockmap's assumption that it will get a callback
    via sk->sk_prot->unhash.
    
    Fix this by checking the (fixed) sk_type and sk_protocol without the
    lock, followed by a locked check of sk_state.
    
    Unfortunately it's not possible to push the check down into
    sock_(map|hash)_update_common, since BPF_SOCK_OPS_PASSIVE_ESTABLISHED_CB
    run before the socket has transitioned from TCP_SYN_RECV into
    TCP_ESTABLISHED.
    
    Fixes: 604326b41a6f ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20200207103713.28175-1-lmb@cloudflare.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45d7b0e316d95ad89949fe943630982946c8a6ed
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Fri Feb 7 00:18:10 2020 -0800

    bpf: Improve bucket_log calculation logic
    
    commit 88d6f130e5632bbf419a2e184ec7adcbe241260b upstream.
    
    It was reported that the max_t, ilog2, and roundup_pow_of_two macros have
    exponential effects on the number of states in the sparse checker.
    
    This patch breaks them up by calculating the "nbuckets" first so that the
    "bucket_log" only needs to take ilog2().
    
    In addition, Linus mentioned:
    
      Patch looks good, but I'd like to point out that it's not just sparse.
    
      You can see it with a simple
    
        make net/core/bpf_sk_storage.i
        grep 'smap->bucket_log = ' net/core/bpf_sk_storage.i | wc
    
      and see the end result:
    
          1  365071 2686974
    
      That's one line (the assignment line) that is 2,686,974 characters in
      length.
    
      Now, sparse does happen to react particularly badly to that (I didn't
      look to why, but I suspect it's just that evaluating all the types
      that don't actually ever end up getting used ends up being much more
      expensive than it should be), but I bet it's not good for gcc either.
    
    Fixes: 6ac99e8f23d4 ("bpf: Introduce bpf sk local storage")
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Link: https://lore.kernel.org/bpf/20200207081810.3918919-1-kafai@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb675fde4c44a888abe25f0a1ad289d520eabd28
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Thu Feb 6 12:16:52 2020 +0100

    selftests/bpf: Test freeing sockmap/sockhash with a socket in it
    
    commit 5d3919a953c3c96c02fc7a337f8376cde43ae31f upstream.
    
    Commit 7e81a3530206 ("bpf: Sockmap, ensure sock lock held during tear
    down") introduced sleeping issues inside RCU critical sections and while
    holding a spinlock on sockmap/sockhash tear-down. There has to be at least
    one socket in the map for the problem to surface.
    
    This adds a test that triggers the warnings for broken locking rules. Not a
    fix per se, but rather tooling to verify the accompanying fixes. Run on a
    VM with 1 vCPU to reproduce the warnings.
    
    Fixes: 7e81a3530206 ("bpf: Sockmap, ensure sock lock held during tear down")
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20200206111652.694507-4-jakub@cloudflare.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1098f9696152ae215abeca4ba3ace2cf3327f8b0
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Thu Feb 6 12:16:51 2020 +0100

    bpf, sockhash: Synchronize_rcu before free'ing map
    
    commit 0b2dc83906cf1e694e48003eae5df8fa63f76fd9 upstream.
    
    We need to have a synchronize_rcu before free'ing the sockhash because any
    outstanding psock references will have a pointer to the map and when they
    use it, this could trigger a use after free.
    
    This is a sister fix for sockhash, following commit 2bb90e5cc90e ("bpf:
    sockmap, synchronize_rcu before free'ing map") which addressed sockmap,
    which comes from a manual audit.
    
    Fixes: 604326b41a6fb ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20200206111652.694507-3-jakub@cloudflare.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 657a17ce530e5b6d15b186cc7901960bded16e8b
Author: Jakub Sitnicki <jakub@cloudflare.com>
Date:   Thu Feb 6 12:16:50 2020 +0100

    bpf, sockmap: Don't sleep while holding RCU lock on tear-down
    
    commit db6a5018b6e008c1d69c6628cdaa9541b8e70940 upstream.
    
    rcu_read_lock is needed to protect access to psock inside sock_map_unref
    when tearing down the map. However, we can't afford to sleep in lock_sock
    while in RCU read-side critical section. Grab the RCU lock only after we
    have locked the socket.
    
    This fixes RCU warnings triggerable on a VM with 1 vCPU when free'ing a
    sockmap/sockhash that contains at least one socket:
    
    | =============================
    | WARNING: suspicious RCU usage
    | 5.5.0-04005-g8fc91b972b73 #450 Not tainted
    | -----------------------------
    | include/linux/rcupdate.h:272 Illegal context switch in RCU read-side critical section!
    |
    | other info that might help us debug this:
    |
    |
    | rcu_scheduler_active = 2, debug_locks = 1
    | 4 locks held by kworker/0:1/62:
    |  #0: ffff88813b019748 ((wq_completion)events){+.+.}, at: process_one_work+0x1d7/0x5e0
    |  #1: ffffc900000abe50 ((work_completion)(&map->work)){+.+.}, at: process_one_work+0x1d7/0x5e0
    |  #2: ffffffff82065d20 (rcu_read_lock){....}, at: sock_map_free+0x5/0x170
    |  #3: ffff8881368c5df8 (&stab->lock){+...}, at: sock_map_free+0x64/0x170
    |
    | stack backtrace:
    | CPU: 0 PID: 62 Comm: kworker/0:1 Not tainted 5.5.0-04005-g8fc91b972b73 #450
    | Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014
    | Workqueue: events bpf_map_free_deferred
    | Call Trace:
    |  dump_stack+0x71/0xa0
    |  ___might_sleep+0x105/0x190
    |  lock_sock_nested+0x28/0x90
    |  sock_map_free+0x95/0x170
    |  bpf_map_free_deferred+0x58/0x80
    |  process_one_work+0x260/0x5e0
    |  worker_thread+0x4d/0x3e0
    |  kthread+0x108/0x140
    |  ? process_one_work+0x5e0/0x5e0
    |  ? kthread_park+0x90/0x90
    |  ret_from_fork+0x3a/0x50
    
    | =============================
    | WARNING: suspicious RCU usage
    | 5.5.0-04005-g8fc91b972b73-dirty #452 Not tainted
    | -----------------------------
    | include/linux/rcupdate.h:272 Illegal context switch in RCU read-side critical section!
    |
    | other info that might help us debug this:
    |
    |
    | rcu_scheduler_active = 2, debug_locks = 1
    | 4 locks held by kworker/0:1/62:
    |  #0: ffff88813b019748 ((wq_completion)events){+.+.}, at: process_one_work+0x1d7/0x5e0
    |  #1: ffffc900000abe50 ((work_completion)(&map->work)){+.+.}, at: process_one_work+0x1d7/0x5e0
    |  #2: ffffffff82065d20 (rcu_read_lock){....}, at: sock_hash_free+0x5/0x1d0
    |  #3: ffff888139966e00 (&htab->buckets[i].lock){+...}, at: sock_hash_free+0x92/0x1d0
    |
    | stack backtrace:
    | CPU: 0 PID: 62 Comm: kworker/0:1 Not tainted 5.5.0-04005-g8fc91b972b73-dirty #452
    | Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014
    | Workqueue: events bpf_map_free_deferred
    | Call Trace:
    |  dump_stack+0x71/0xa0
    |  ___might_sleep+0x105/0x190
    |  lock_sock_nested+0x28/0x90
    |  sock_hash_free+0xec/0x1d0
    |  bpf_map_free_deferred+0x58/0x80
    |  process_one_work+0x260/0x5e0
    |  worker_thread+0x4d/0x3e0
    |  kthread+0x108/0x140
    |  ? process_one_work+0x5e0/0x5e0
    |  ? kthread_park+0x90/0x90
    |  ret_from_fork+0x3a/0x50
    
    Fixes: 7e81a3530206 ("bpf: Sockmap, ensure sock lock held during tear down")
    Signed-off-by: Jakub Sitnicki <jakub@cloudflare.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20200206111652.694507-2-jakub@cloudflare.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dfc34bd009a49367c56e174e9205a16e9f36752
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Feb 6 11:29:06 2020 +0100

    bpftool: Don't crash on missing xlated program instructions
    
    commit d95f1e8b462c4372ac409886070bb8719d8a4d3a upstream.
    
    Turns out the xlated program instructions can also be missing if
    kptr_restrict sysctl is set. This means that the previous fix to check the
    jited_prog_insns pointer was insufficient; add another check of the
    xlated_prog_insns pointer as well.
    
    Fixes: 5b79bcdf0362 ("bpftool: Don't crash on missing jited insns or ksyms")
    Fixes: cae73f233923 ("bpftool: use bpf_program__get_prog_info_linear() in prog.c:do_dump()")
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Quentin Monnet <quentin@isovalent.com>
    Link: https://lore.kernel.org/bpf/20200206102906.112551-1-toke@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec81471a70d100fed872f3f25e069e51afb356c4
Author: Avraham Stern <avraham.stern@intel.com>
Date:   Fri Jan 31 15:45:27 2020 +0200

    iwlwifi: mvm: avoid use after free for pmsr request
    
    commit cc4255eff523f25187bb95561642941de0e57497 upstream.
    
    When a FTM request is aborted, the driver sends the abort command to
    the fw and waits for a response. When the response arrives, the driver
    calls cfg80211_pmsr_complete() for that request.
    However, cfg80211 frees the requested data immediately after sending
    the abort command, so this may lead to use after free.
    
    Fix it by clearing the request data in the driver when the abort
    command arrives and ignoring the fw notification that will come
    afterwards.
    
    Signed-off-by: Avraham Stern <avraham.stern@intel.com>
    Fixes: fc36ffda3267 ("iwlwifi: mvm: support FTM initiator")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b706a498638231b66cee74b20b2696bf95477f1d
Author: Dongdong Liu <liudongdong3@huawei.com>
Date:   Thu Jan 23 16:26:31 2020 +0800

    PCI/AER: Initialize aer_fifo
    
    commit d95f20c4f07020ebc605f3b46af4b6db9eb5fc99 upstream.
    
    Previously we did not call INIT_KFIFO() for aer_fifo.  This leads to
    kfifo_put() sometimes returning 0 (queue full) when in fact it is not.
    
    It is easy to reproduce the problem by using aer-inject:
    
      $ aer-inject -s :82:00.0 multiple-corr-nonfatal
    
    The content of the multiple-corr-nonfatal file is as below:
    
      AER
      COR RCVR
      HL 0 1 2 3
      AER
      UNCOR POISON_TLP
      HL 4 5 6 7
    
    Fixes: 27c1ce8bbed7 ("PCI/AER: Use kfifo for tracking events instead of reimplementing it")
    Link: https://lore.kernel.org/r/1579767991-103898-1-git-send-email-liudongdong3@huawei.com
    Signed-off-by: Dongdong Liu <liudongdong3@huawei.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b51ac6e721d53b68011b0be2d317d460de6e14f7
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Jan 8 14:32:08 2020 -0700

    PCI: Don't disable bridge BARs when assigning bus resources
    
    commit 9db8dc6d0785225c42a37be7b44d1b07b31b8957 upstream.
    
    Some PCI bridges implement BARs in addition to bridge windows.  For
    example, here's a PLX switch:
    
      04:00.0 PCI bridge: PLX Technology, Inc. PEX 8724 24-Lane, 6-Port PCI
                Express Gen 3 (8 GT/s) Switch, 19 x 19mm FCBGA (rev ca)
                (prog-if 00 [Normal decode])
          Flags: bus master, fast devsel, latency 0, IRQ 30, NUMA node 0
          Memory at 90a00000 (32-bit, non-prefetchable) [size=256K]
          Bus: primary=04, secondary=05, subordinate=0a, sec-latency=0
          I/O behind bridge: 00002000-00003fff
          Memory behind bridge: 90000000-909fffff
          Prefetchable memory behind bridge: 0000380000800000-0000380000bfffff
    
    Previously, when the kernel assigned resource addresses (with the
    pci=realloc command line parameter, for example) it could clear the struct
    resource corresponding to the BAR.  When this happened, lspci would report
    this BAR as "ignored":
    
       Region 0: Memory at <ignored> (32-bit, non-prefetchable) [size=256K]
    
    This is because the kernel reports a zero start address and zero flags
    in the corresponding sysfs resource file and in /proc/bus/pci/devices.
    Investigation with 'lspci -x', however, shows the BIOS-assigned address
    will still be programmed in the device's BAR registers.
    
    It's clearly a bug that the kernel lost track of the BAR value, but in most
    cases, this still won't result in a visible issue because nothing uses the
    memory, so nothing is affected.  However, when an IOMMU is in use, it will
    not reserve this space in the IOVA because the kernel no longer thinks the
    range is valid.  (See dmar_init_reserved_ranges() for the Intel
    implementation of this.)
    
    Without the proper reserved range, a DMA mapping may allocate an IOVA that
    matches a bridge BAR, which results in DMA accesses going to the BAR
    instead of the intended RAM.
    
    The problem was in pci_assign_unassigned_root_bus_resources().  When any
    resource from a bridge device fails to get assigned, the code set the
    resource's flags to zero.  This makes sense for bridge windows, as they
    will be re-enabled later, but for regular BARs, it makes the kernel
    permanently lose track of the fact that they decode address space.
    
    Change pci_assign_unassigned_root_bus_resources() and
    pci_assign_unassigned_bridge_resources() so they only clear "res->flags"
    for bridge *windows*, not bridge BARs.
    
    Fixes: da7822e5ad71 ("PCI: update bridge resources to get more big ranges when allocating space (again)")
    Link: https://lore.kernel.org/r/20200108213208.4612-1-logang@deltatee.com
    [bhelgaas: commit log, check for pci_is_bridge()]
    Reported-by: Kit Chow <kchow@gigaio.com>
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67016624a0be081d360ece058c1db2149e71fcca
Author: Marcel Ziswiler <marcel@ziswiler.com>
Date:   Tue Jan 7 09:14:02 2020 +0100

    PCI: tegra: Fix afi_pex2_ctrl reg offset for Tegra30
    
    commit 21a92676e1fe292acb077b13106b08c22ed36b14 upstream.
    
    Fix AFI_PEX2_CTRL reg offset for Tegra30 by moving it from the Tegra20
    SoC struct where it erroneously got added. This fixes the AFI_PEX2_CTRL
    reg offset being uninitialised subsequently failing to bring up the
    third PCIe port.
    
    Fixes: adb2653b3d2e ("PCI: tegra: Add AFI_PEX2_CTRL reg offset as part of SoC struct")
    Signed-off-by: Marcel Ziswiler <marcel@ziswiler.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Andrew Murray <andrew.murray@arm.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df26f04f23bd252219e6704f3a4c58c48415aa22
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Mon Jan 6 12:03:27 2020 -0700

    PCI/switchtec: Fix vep_vector_number ioread width
    
    commit 9375646b4cf03aee81bc6c305aa18cc80b682796 upstream.
    
    vep_vector_number is actually a 16 bit register which should be read with
    ioread16() instead of ioread32().
    
    Fixes: 080b47def5e5 ("MicroSemi Switchtec management interface driver")
    Link: https://lore.kernel.org/r/20200106190337.2428-3-logang@deltatee.com
    Reported-by: Doug Meyer <dmeyer@gigaio.com>
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b72b8d0725b0fa3d6ae991824be7df74ecf8077f
Author: Wesley Sheng <wesley.sheng@microchip.com>
Date:   Mon Jan 6 12:03:26 2020 -0700

    PCI/switchtec: Use dma_set_mask_and_coherent()
    
    commit aa82130a22f77c1aa5794703730304d035a0c1f4 upstream.
    
    Use dma_set_mask_and_coherent() instead of dma_set_coherent_mask() as the
    Switchtec hardware fully supports 64bit addressing and we should set both
    the streaming and coherent masks the same.
    
    [logang@deltatee.com: reworked commit message]
    Fixes: aff614c6339c ("switchtec: Set DMA coherent mask")
    Link: https://lore.kernel.org/r/20200106190337.2428-2-logang@deltatee.com
    Signed-off-by: Wesley Sheng <wesley.sheng@microchip.com>
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15818c08ca79d3798da9e9f0225026abc47a379a
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Thu Dec 19 13:15:38 2019 +0000

    ath10k: pci: Only dump ATH10K_MEM_REGION_TYPE_IOREG when safe
    
    commit d239380196c4e27a26fa4bea73d2bf994c14ec2d upstream.
    
    ath10k_pci_dump_memory_reg() will try to access memory of type
    ATH10K_MEM_REGION_TYPE_IOREG however, if a hardware restart is in progress
    this can crash a system.
    
    Individual ioread32() time has been observed to jump from 15-20 ticks to >
    80k ticks followed by a secure-watchdog bite and a system reset.
    
    Work around this corner case by only issuing the read transaction when the
    driver state is ATH10K_STATE_ON.
    
    Tested-on: QCA9988 PCI 10.4-3.9.0.2-00044
    
    Fixes: 219cc084c6706 ("ath10k: add memory dump support QCA9984")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f0e6425a2da71f6c0a2e4d78f9231ca6778f71b
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Mon Nov 25 13:52:52 2019 -0600

    PCI/IOV: Fix memory leak in pci_iov_add_virtfn()
    
    commit 8c386cc817878588195dde38e919aa6ba9409d58 upstream.
    
    In the implementation of pci_iov_add_virtfn() the allocated virtfn is
    leaked if pci_setup_device() fails. The error handling is not calling
    pci_stop_and_remove_bus_device(). Change the goto label to failed2.
    
    Fixes: 156c55325d30 ("PCI: Check for pci_setup_device() failure in pci_iov_add_virtfn()")
    Link: https://lore.kernel.org/r/20191125195255.23740-1-navid.emamdoost@gmail.com
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da268240fb0a0be2112bbde938812a4958e7f3de
Author: Bean Huo <beanhuo@micron.com>
Date:   Mon Jan 20 14:08:13 2020 +0100

    scsi: ufs: Fix ufshcd_probe_hba() reture value in case ufshcd_scsi_add_wlus() fails
    
    commit b9fc5320212efdfb4e08b825aaa007815fd11d16 upstream.
    
    A non-zero error value likely being returned by ufshcd_scsi_add_wlus() in
    case of failure of adding the WLs, but ufshcd_probe_hba() doesn't use this
    value, and doesn't report this failure to upper caller.  This patch is to
    fix this issue.
    
    Fixes: 2a8fa600445c ("ufs: manually add well known logical units")
    Link: https://lore.kernel.org/r/20200120130820.1737-2-huobean@gmail.com
    Reviewed-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21702236f3520d28981267bd4bf5ca68fd9231db
Author: Artemy Kovalyov <artemyko@mellanox.com>
Date:   Tue Jan 28 15:56:12 2020 +0200

    RDMA/umem: Fix ib_umem_find_best_pgsz()
    
    commit 36798d5ae1af62e830c5e045b2e41ce038690c61 upstream.
    
    Except for the last entry, the ending iova alignment sets the maximum
    possible page size as the low bits of the iova must be zero when starting
    the next chunk.
    
    Fixes: 4a35339958f1 ("RDMA/umem: Add API to find best driver supported page size in an MR")
    Link: https://lore.kernel.org/r/20200128135612.174820-1-leon@kernel.org
    Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Tested-by: Gal Pressman <galpress@amazon.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56b22525ab803752197a64baddf1cb927a424937
Author: Parav Pandit <parav@mellanox.com>
Date:   Sun Jan 26 16:26:46 2020 +0200

    RDMA/cma: Fix unbalanced cm_id reference count during address resolve
    
    commit b4fb4cc5ba83b20dae13cef116c33648e81d2f44 upstream.
    
    Below commit missed the AF_IB and loopback code flow in
    rdma_resolve_addr().  This leads to an unbalanced cm_id refcount in
    cma_work_handler() which puts the refcount which was not incremented prior
    to queuing the work.
    
    A call trace is observed with such code flow:
    
     BUG: unable to handle kernel NULL pointer dereference at (null)
     [<ffffffff96b67e16>] __mutex_lock_slowpath+0x166/0x1d0
     [<ffffffff96b6715f>] mutex_lock+0x1f/0x2f
     [<ffffffffc0beabb5>] cma_work_handler+0x25/0xa0
     [<ffffffff964b9ebf>] process_one_work+0x17f/0x440
     [<ffffffff964baf56>] worker_thread+0x126/0x3c0
    
    Hence, hold the cm_id reference when scheduling the resolve work item.
    
    Fixes: 722c7b2bfead ("RDMA/{cma, core}: Avoid callback on rdma_addr_cancel()")
    Link: https://lore.kernel.org/r/20200126142652.104803-2-leon@kernel.org
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b73401025a14b11f229526af4e799fa796284fe6
Author: Michael Guralnik <michaelgur@mellanox.com>
Date:   Wed Jan 8 20:05:35 2020 +0200

    RDMA/uverbs: Verify MR access flags
    
    commit ca95c1411198c2d87217c19d44571052cdc94725 upstream.
    
    Verify that MR access flags that are passed from user are all supported
    ones, otherwise an error is returned.
    
    Fixes: 4fca03778351 ("IB/uverbs: Move ib_access_flags and ib_read_counters_flags to uapi")
    Link: https://lore.kernel.org/r/1578506740-22188-6-git-send-email-yishaih@mellanox.com
    Signed-off-by: Michael Guralnik <michaelgur@mellanox.com>
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78923675151e24668be3b618c13647c7475fa64f
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Jan 8 19:22:03 2020 +0200

    RDMA/core: Fix locking in ib_uverbs_event_read
    
    commit 14e23bd6d22123f6f3b2747701fa6cd4c6d05873 upstream.
    
    This should not be using ib_dev to test for disassociation, during
    disassociation is_closed is set under lock and the waitq is triggered.
    
    Instead check is_closed and be sure to re-obtain the lock to test the
    value after the wait_event returns.
    
    Fixes: 036b10635739 ("IB/uverbs: Enable device removal when there are active user space applications")
    Link: https://lore.kernel.org/r/1578504126-9400-12-git-send-email-yishaih@mellanox.com
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Reviewed-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33daaea78a1f4463f6849b9e1e9e77996c263a92
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Mon Dec 30 10:24:28 2019 +0800

    RDMA/i40iw: fix a potential NULL pointer dereference
    
    commit 04db1580b5e48a79e24aa51ecae0cd4b2296ec23 upstream.
    
    A NULL pointer can be returned by in_dev_get(). Thus add a corresponding
    check so that a NULL pointer dereference will be avoided at this place.
    
    Fixes: 8e06af711bf2 ("i40iw: add main, hdr, status")
    Link: https://lore.kernel.org/r/1577672668-46499-1-git-send-email-xiyuyang19@fudan.edu.cn
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1f90d263a3b2b6ca1bc49b3542aaf13e6df7eba
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Mon Dec 16 13:04:36 2019 +0100

    RDMA/netlink: Do not always generate an ACK for some netlink operations
    
    commit a242c36951ecd24bc16086940dbe6b522205c461 upstream.
    
    In rdma_nl_rcv_skb(), the local variable err is assigned the return value
    of the supplied callback function, which could be one of
    ib_nl_handle_resolve_resp(), ib_nl_handle_set_timeout(), or
    ib_nl_handle_ip_res_resp(). These three functions all return skb->len on
    success.
    
    rdma_nl_rcv_skb() is merely a copy of netlink_rcv_skb(). The callback
    functions used by the latter have the convention: "Returns 0 on success or
    a negative error code".
    
    In particular, the statement (equal for both functions):
    
       if (nlh->nlmsg_flags & NLM_F_ACK || err)
    
    implies that rdma_nl_rcv_skb() always will ack a message, independent of
    the NLM_F_ACK being set in nlmsg_flags or not.
    
    The fix could be to change the above statement, but it is better to keep
    the two *_rcv_skb() functions equal in this respect and instead change the
    three callback functions in the rdma subsystem to the correct convention.
    
    Fixes: 2ca546b92a02 ("IB/sa: Route SA pathrecord query through netlink")
    Fixes: ae43f8286730 ("IB/core: Add IP to GID netlink offload")
    Link: https://lore.kernel.org/r/20191216120436.3204814-1-haakon.bugge@oracle.com
    Suggested-by: Mark Haywood <mark.haywood@oracle.com>
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Tested-by: Mark Haywood <mark.haywood@oracle.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 839fb9e04cd7edcbe0d8ae712a52f4d6522af5b8
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Thu Jan 23 16:55:21 2020 +0100

    IB/mlx4: Fix leak in id_map_find_del
    
    commit ea660ad7c1c476fd6e5e3b17780d47159db71dea upstream.
    
    Using CX-3 virtual functions, either from a bare-metal machine or
    pass-through from a VM, MAD packets are proxied through the PF driver.
    
    Since the VF drivers have separate name spaces for MAD Transaction Ids
    (TIDs), the PF driver has to re-map the TIDs and keep the book keeping in
    a cache.
    
    Following the RDMA Connection Manager (CM) protocol, it is clear when an
    entry has to evicted from the cache. When a DREP is sent from
    mlx4_ib_multiplex_cm_handler(), id_map_find_del() is called. Similar when
    a REJ is received by the mlx4_ib_demux_cm_handler(), id_map_find_del() is
    called.
    
    This function wipes out the TID in use from the IDR or XArray and removes
    the id_map_entry from the table.
    
    In short, it does everything except the topping of the cake, which is to
    remove the entry from the list and free it. In other words, for the REJ
    case enumerated above, one id_map_entry will be leaked.
    
    For the other case above, a DREQ has been received first. The reception of
    the DREQ will trigger queuing of a delayed work to delete the
    id_map_entry, for the case where the VM doesn't send back a DREP.
    
    In the normal case, the VM _will_ send back a DREP, and id_map_find_del()
    will be called.
    
    But this scenario introduces a secondary leak. First, when the DREQ is
    received, a delayed work is queued. The VM will then return a DREP, which
    will call id_map_find_del(). As stated above, this will free the TID used
    from the XArray or IDR. Now, there is window where that particular TID can
    be re-allocated, lets say by an outgoing REQ. This TID will later be wiped
    out by the delayed work, when the function id_map_ent_timeout() is
    called. But the id_map_entry allocated by the outgoing REQ will not be
    de-allocated, and we have a leak.
    
    Both leaks are fixed by removing the id_map_find_del() function and only
    using schedule_delayed(). Of course, a check in schedule_delayed() to see
    if the work already has been queued, has been added.
    
    Another benefit of always using the delayed version for deleting entries,
    is that we do get a TimeWait effect; a TID no longer in use, will occupy
    the XArray or IDR for CM_CLEANUP_CACHE_TIMEOUT time, without any ability
    of being re-used for that time period.
    
    Fixes: 3cf69cc8dbeb ("IB/mlx4: Add CM paravirtualization")
    Link: https://lore.kernel.org/r/20200123155521.1212288-1-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Manjunath Patil <manjunath.b.patil@oracle.com>
    Reviewed-by: Rama Nichanamatlu <rama.nichanamatlu@oracle.com>
    Reviewed-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 996dc3d50add6069079fe82d8e17a0050cb22131
Author: Sergey Gorenko <sergeygo@mellanox.com>
Date:   Wed Jan 15 13:30:55 2020 +0000

    IB/srp: Never use immediate data if it is disabled by a user
    
    commit 0fbb37dd82998b5c83355997b3bdba2806968ac7 upstream.
    
    Some SRP targets that do not support specification SRP-2, put the garbage
    to the reserved bits of the SRP login response.  The problem was not
    detected for a long time because the SRP initiator ignored those bits. But
    now one of them is used as SRP_LOGIN_RSP_IMMED_SUPP. And it causes a
    critical error on the target when the initiator sends immediate data.
    
    The ib_srp module has a use_imm_date parameter to enable or disable
    immediate data manually. But it does not help in the above case, because
    use_imm_date is ignored at handling the SRP login response. The problem is
    definitely caused by a bug on the target side, but the initiator's
    behavior also does not look correct.  The initiator should not use
    immediate data if use_imm_date is disabled by a user.
    
    This commit adds an additional checking of use_imm_date at the handling of
    SRP login response to avoid unexpected use of immediate data.
    
    Fixes: 882981f4a411 ("RDMA/srp: Add support for immediate data")
    Link: https://lore.kernel.org/r/20200115133055.30232-1-sergeygo@mellanox.com
    Signed-off-by: Sergey Gorenko <sergeygo@mellanox.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56f5f41e80b32dc66eb752270f28944629f0a017
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Wed Jan 15 10:50:50 2020 +0200

    IB/mlx4: Fix memory leak in add_gid error flow
    
    commit eaad647e5cc27f7b46a27f3b85b14c4c8a64bffa upstream.
    
    In procedure mlx4_ib_add_gid(), if the driver is unable to update the FW
    gid table, there is a memory leak in the driver's copy of the gid table:
    the gid entry's context buffer is not freed.
    
    If such an error occurs, free the entry's context buffer, and mark the
    entry as available (by setting its context pointer to NULL).
    
    Fixes: e26be1bfef81 ("IB/mlx4: Implement ib_device callbacks")
    Link: https://lore.kernel.org/r/20200115085050.73746-1-leon@kernel.org
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b96c27b1891ba4318af11dd09318f2993e71bc8b
Author: Sunil Muthuswamy <sunilmut@microsoft.com>
Date:   Fri Jan 24 03:08:18 2020 +0000

    hv_sock: Remove the accept port restriction
    
    [ Upstream commit c742c59e1fbd022b64d91aa9a0092b3a699d653c ]
    
    Currently, hv_sock restricts the port the guest socket can accept
    connections on. hv_sock divides the socket port namespace into two parts
    for server side (listening socket), 0-0x7FFFFFFF & 0x80000000-0xFFFFFFFF
    (there are no restrictions on client port namespace). The first part
    (0-0x7FFFFFFF) is reserved for sockets where connections can be accepted.
    The second part (0x80000000-0xFFFFFFFF) is reserved for allocating ports
    for the peer (host) socket, once a connection is accepted.
    This reservation of the port namespace is specific to hv_sock and not
    known by the generic vsock library (ex: af_vsock). This is problematic
    because auto-binds/ephemeral ports are handled by the generic vsock
    library and it has no knowledge of this port reservation and could
    allocate a port that is not compatible with hv_sock (and legitimately so).
    The issue hasn't surfaced so far because the auto-bind code of vsock
    (__vsock_bind_stream) prior to the change 'VSOCK: bind to random port for
    VMADDR_PORT_ANY' would start walking up from LAST_RESERVED_PORT (1023) and
    start assigning ports. That will take a large number of iterations to hit
    0x7FFFFFFF. But, after the above change to randomize port selection, the
    issue has started coming up more frequently.
    There has really been no good reason to have this port reservation logic
    in hv_sock from the get go. Reserving a local port for peer ports is not
    how things are handled generally. Peer ports should reflect the peer port.
    This fixes the issue by lifting the port reservation, and also returns the
    right peer port. Since the code converts the GUID to the peer port (by
    using the first 4 bytes), there is a possibility of conflicts, but that
    seems like a reasonable risk to take, given this is limited to vsock and
    that only applies to all local sockets.
    
    Signed-off-by: Sunil Muthuswamy <sunilmut@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7775193b64344079f5555387548f6356640244d
Author: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Date:   Mon Nov 4 14:48:11 2019 -0800

    ASoC: pcm: update FE/BE trigger order based on the command
    
    [ Upstream commit acbf27746ecfa96b290b54cc7f05273482ea128a ]
    
    Currently, the trigger orders SND_SOC_DPCM_TRIGGER_PRE/POST
    determine the order in which FE DAI and BE DAI are triggered.
    In the case of SND_SOC_DPCM_TRIGGER_PRE, the FE DAI is
    triggered before the BE DAI and in the case of
    SND_SOC_DPCM_TRIGGER_POST, the BE DAI is triggered before
    the FE DAI. And this order remains the same irrespective of the
    trigger command.
    
    In the case of the SOF driver, during playback, the FW
    expects the BE DAI to be triggered before the FE DAI during
    the START trigger. The BE DAI trigger handles the starting of
    Link DMA and so it must be started before the FE DAI is started
    to prevent xruns during pause/release. This can be addressed
    by setting the trigger order for the FE dai link to
    SND_SOC_DPCM_TRIGGER_POST. But during the STOP trigger,
    the FW expects the FE DAI to be triggered before the BE DAI.
    Retaining the same order during the START and STOP commands,
    results in FW error as the DAI component in the FW is still
    active.
    
    The issue can be fixed by mirroring the trigger order of
    FE and BE DAI's during the START and STOP trigger. So, with the
    trigger order set to SND_SOC_DPCM_TRIGGER_PRE, the FE DAI will be
    trigger first during SNDRV_PCM_TRIGGER_START/STOP/RESUME
    and the BE DAI will be triggered first during the
    STOP/SUSPEND/PAUSE commands. Conversely, with the trigger order
    set to SND_SOC_DPCM_TRIGGER_POST, the BE DAI will be triggered
    first during the SNDRV_PCM_TRIGGER_START/STOP/RESUME commands
    and the FE DAI will be triggered first during the
    SNDRV_PCM_TRIGGER_STOP/SUSPEND/PAUSE commands.
    
    Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20191104224812.3393-2-ranjani.sridharan@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
