commit a844dc4c544291470aa69edbe2434b040794e269
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 5 15:38:36 2019 +0100

    Linux 4.14.158

commit 982d424239d7fae74938557428d45c717567ea9b
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Nov 20 09:25:13 2019 +0800

    net: fec: fix clock count mis-match
    
    commit a31eda65ba210741b598044d045480494d0ed52a upstream.
    
    pm_runtime_put_autosuspend in probe will call runtime suspend to
    disable clks automatically if CONFIG_PM is defined. (If CONFIG_PM
    is not defined, its implementation will be empty, then runtime
    suspend will not be called.)
    
    Therefore, we can call pm_runtime_get_sync to runtime resume it
    first to enable clks, which matches the runtime suspend. (Only when
    CONFIG_PM is defined, otherwise pm_runtime_get_sync will also be
    empty, then runtime resume will not be called.)
    
    Then it is fine to disable clks without causing clock count mis-match.
    
    Fixes: c43eab3eddb4 ("net: fec: add missed clk_disable_unprepare in remove")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d4408556902692f348e599819cd3ea0587edb19
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 22 19:56:41 2019 +0100

    platform/x86: hp-wmi: Fix ACPI errors caused by passing 0 as input size
    
    commit f3e4f3fc8ee9729c4b1b27a478c68b713df53c0c upstream.
    
    The AML code implementing the WMI methods creates a variable length
    field to hold the input data we pass like this:
    
            CreateDWordField (Arg1, 0x0C, DSZI)
            Local5 = DSZI /* \HWMC.DSZI */
            CreateField (Arg1, 0x80, (Local5 * 0x08), DAIN)
    
    If we pass 0 as bios_args.datasize argument then (Local5 * 0x08)
    is 0 which results in these errors:
    
    [   71.973305] ACPI BIOS Error (bug): Attempt to CreateField of length zero (20190816/dsopcode-133)
    [   71.973332] ACPI Error: Aborting method \HWMC due to previous error (AE_AML_OPERAND_VALUE) (20190816/psparse-529)
    [   71.973413] ACPI Error: Aborting method \_SB.WMID.WMAA due to previous error (AE_AML_OPERAND_VALUE) (20190816/psparse-529)
    
    And in our HPWMI_WIRELESS2_QUERY calls always failing. for read commands
    like HPWMI_WIRELESS2_QUERY the DSZI value is not used / checked, except for
    read commands where extra input is needed to specify exactly what to read.
    
    So for HPWMI_WIRELESS2_QUERY we can safely pass the size of the expected
    output as insize to hp_wmi_perform_query(), as we are already doing for all
    other HPWMI_READ commands we send. Doing so fixes these errors.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197007
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201981
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 591547ec35c1a8f19f0fd584dd610d184c9f1b9d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Nov 22 19:56:40 2019 +0100

    platform/x86: hp-wmi: Fix ACPI errors caused by too small buffer
    
    commit 16245db1489cd9aa579506f64afeeeb13d825a93 upstream.
    
    The HP WMI calls may take up to 128 bytes of data as input, and
    the AML methods implementing the WMI calls, declare a couple of fields for
    accessing input in different sizes, specifycally the HWMC method contains:
    
            CreateField (Arg1, 0x80, 0x0400, D128)
    
    Even though we do not use any of the WMI command-types which need a buffer
    of this size, the APCI interpreter still tries to create it as it is
    declared in generoc code at the top of the HWMC method which runs before
    the code looks at which command-type is requested.
    
    This results in many of these errors on many different HP laptop models:
    
    [   14.459261] ACPI Error: Field [D128] at 1152 exceeds Buffer [NULL] size 160 (bits) (20170303/dsopcode-236)
    [   14.459268] ACPI Error: Method parse/execution failed [\HWMC] (Node ffff8edcc61507f8), AE_AML_BUFFER_LIMIT (20170303/psparse-543)
    [   14.459279] ACPI Error: Method parse/execution failed [\_SB.WMID.WMAA] (Node ffff8edcc61523c0), AE_AML_BUFFER_LIMIT (20170303/psparse-543)
    
    This commit increases the size of the data element of the bios_args struct
    to 128 bytes fixing these errors.
    
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=197007
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=201981
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 861bdf61e64d8afda07ab76398d645cf1d778040
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Tue Feb 26 14:51:04 2019 +0100

    ASoC: stm32: i2s: fix IRQ clearing
    
    commit 8ba3c5215d69c09f5c39783ff3b78347769822ad upstream.
    
    Because of regmap cache, interrupts may not be cleared
    as expected.
    Declare IFCR register as write only and make writings
    to IFCR register unconditional.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8eccb17132c587a0b98301d79cdc52930516d689
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Tue Feb 26 14:51:05 2019 +0100

    ASoC: stm32: i2s: fix 16 bit format support
    
    commit 0c4c68d6fa1bae74d450e50823c24fcc3cd0b171 upstream.
    
    I2S supports 16 bits data in 32 channel length.
    However the expected driver behavior, is to
    set channel length to 16 bits when data format is 16 bits.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 704a74eb0c0729be77fb36ac8759f2f66f2589ec
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Tue Feb 26 14:51:07 2019 +0100

    ASoC: stm32: i2s: fix dma configuration
    
    commit 1ac2bd16448997d9ec01922423486e1e85535eda upstream.
    
    DMA configuration is not balanced on start/stop.
    Move DMA configuration to trigger callback.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c319da0690bf14bd2b8da37e59dbe9f32e5f97ac
Author: Alexandre Torgue <alexandre.torgue@st.com>
Date:   Thu Feb 14 17:54:24 2019 +0100

    pinctrl: stm32: fix memory leak issue
    
    commit cd8c9b5a49576bf28990237715bc2cb2210ac80a upstream.
    
    configs is allocated by pinconf_generic_parse_dt_config(),
    pinctrl_utils_add_map_configs() duplicates configs so it can and has to
    be freed to prevent memory leaks.
    
    Signed-off-by: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 517287405bf928638ab7dd30ba2226e51f9cba45
Author: Fabien Dessenne <fabien.dessenne@st.com>
Date:   Fri Jan 4 14:47:16 2019 +0100

    mailbox: mailbox-test: fix null pointer if no mmio
    
    commit 6899b4f7c99c72968e58e502f96084f74f6e5e86 upstream.
    
    Fix null pointer issue if resource_size is called with no ioresource.
    
    Signed-off-by: Ludovic Barre <ludovic.barre@st.com>
    Signed-off-by: Fabien Dessenne <fabien.dessenne@st.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 934ff312e52e3dd4e547c9f6a6367410311347d0
Author: Lionel Debieve <lionel.debieve@st.com>
Date:   Mon Apr 1 12:30:45 2019 +0200

    hwrng: stm32 - fix unbalanced pm_runtime_enable
    
    commit af0d4442dd6813de6e77309063beb064fa8e89ae upstream.
    
    No remove function implemented yet in the driver.
    Without remove function, the pm_runtime implementation
    complains when removing and probing again the driver.
    
    Signed-off-by: Lionel Debieve <lionel.debieve@st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6cea8a29103f366e3c4aaba9c82ab3c78c1865c
Author: Hugues Fruchet <hugues.fruchet@st.com>
Date:   Thu Feb 28 12:10:53 2019 -0500

    media: stm32-dcmi: fix DMA corruption when stopping streaming
    
    commit b3ce6f6ff3c260ee53b0f2236e5fd950d46957da upstream.
    
    Avoid call of dmaengine_terminate_all() between
    dmaengine_prep_slave_single() and dmaengine_submit() by locking
    the whole DMA submission sequence.
    
    Signed-off-by: Hugues Fruchet <hugues.fruchet@st.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12127f571caf8de22c76c867271281a26925b0be
Author: Lionel Debieve <lionel.debieve@st.com>
Date:   Fri Jun 28 13:26:54 2019 +0200

    crypto: stm32/hash - Fix hmac issue more than 256 bytes
    
    commit 0acabecebc912b3ba06289e4ef40476acc499a37 upstream.
    
    Correct condition for the second hmac loop. Key must be only
    set in the first loop. Initial condition was wrong,
    HMAC_KEY flag was not properly checked.
    
    Signed-off-by: Lionel Debieve <lionel.debieve@st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 564262cf4274a238a124fa76e48f14ead06caac2
Author: Candle Sun <candle.sun@unisoc.com>
Date:   Tue Oct 22 22:21:39 2019 +0800

    HID: core: check whether Usage Page item is after Usage ID items
    
    commit 1cb0d2aee26335d0bccf29100c7bed00ebece851 upstream.
    
    Upstream commit 58e75155009c ("HID: core: move Usage Page concatenation
    to Main item") adds support for Usage Page item after Usage ID items
    (such as keyboards manufactured by Primax).
    
    Usage Page concatenation in Main item works well for following report
    descriptor patterns:
    
        USAGE_PAGE (Keyboard)                   05 07
        USAGE_MINIMUM (Keyboard LeftControl)    19 E0
        USAGE_MAXIMUM (Keyboard Right GUI)      29 E7
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (8)                        95 08
        INPUT (Data,Var,Abs)                    81 02
    
    -------------
    
        USAGE_MINIMUM (Keyboard LeftControl)    19 E0
        USAGE_MAXIMUM (Keyboard Right GUI)      29 E7
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (8)                        95 08
        USAGE_PAGE (Keyboard)                   05 07
        INPUT (Data,Var,Abs)                    81 02
    
    But it makes the parser act wrong for the following report
    descriptor pattern(such as some Gamepads):
    
        USAGE_PAGE (Button)                     05 09
        USAGE (Button 1)                        09 01
        USAGE (Button 2)                        09 02
        USAGE (Button 4)                        09 04
        USAGE (Button 5)                        09 05
        USAGE (Button 7)                        09 07
        USAGE (Button 8)                        09 08
        USAGE (Button 14)                       09 0E
        USAGE (Button 15)                       09 0F
        USAGE (Button 13)                       09 0D
        USAGE_PAGE (Consumer Devices)           05 0C
        USAGE (Back)                            0a 24 02
        USAGE (HomePage)                        0a 23 02
        LOGICAL_MINIMUM (0)                     15 00
        LOGICAL_MAXIMUM (1)                     25 01
        REPORT_SIZE (1)                         75 01
        REPORT_COUNT (11)                       95 0B
        INPUT (Data,Var,Abs)                    81 02
    
    With Usage Page concatenation in Main item, parser recognizes all the
    11 Usages as consumer keys, it is not the HID device's real intention.
    
    This patch checks whether Usage Page is really defined after Usage ID
    items by comparing usage page using status.
    
    Usage Page concatenation on currently defined Usage Page will always
    do in local parsing when Usage ID items encountered.
    
    When Main item is parsing, concatenation will do again with last
    defined Usage Page if this page has not been used in the previous
    usages concatenation.
    
    Signed-off-by: Candle Sun <candle.sun@unisoc.com>
    Signed-off-by: Nianfu Bai <nianfu.bai@unisoc.com>
    Cc: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Siarhei Vishniakou <svv@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61fa9f167caaa73d0a7c88f498eceeb12c6fa3db
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:46 2019 +0100

    futex: Prevent exit livelock
    
    commit 3ef240eaff36b8119ac9e2ea17cbf41179c930ba upstream.
    
    Oleg provided the following test case:
    
    int main(void)
    {
            struct sched_param sp = {};
    
            sp.sched_priority = 2;
            assert(sched_setscheduler(0, SCHED_FIFO, &sp) == 0);
    
            int lock = vfork();
            if (!lock) {
                    sp.sched_priority = 1;
                    assert(sched_setscheduler(0, SCHED_FIFO, &sp) == 0);
                    _exit(0);
            }
    
            syscall(__NR_futex, &lock, FUTEX_LOCK_PI, 0,0,0);
            return 0;
    }
    
    This creates an unkillable RT process spinning in futex_lock_pi() on a UP
    machine or if the process is affine to a single CPU. The reason is:
    
     parent                                 child
    
      set FIFO prio 2
    
      vfork()                       ->      set FIFO prio 1
       implies wait_for_child()             sched_setscheduler(...)
                                            exit()
                                            do_exit()
                                            ....
                                            mm_release()
                                              tsk->futex_state = FUTEX_STATE_EXITING;
                                              exit_futex(); (NOOP in this case)
                                              complete() --> wakes parent
      sys_futex()
        loop infinite because
        tsk->futex_state == FUTEX_STATE_EXITING
    
    The same problem can happen just by regular preemption as well:
    
      task holds futex
      ...
      do_exit()
        tsk->futex_state = FUTEX_STATE_EXITING;
    
      --> preemption (unrelated wakeup of some other higher prio task, e.g. timer)
    
      switch_to(other_task)
    
      return to user
      sys_futex()
            loop infinite as above
    
    Just for the fun of it the futex exit cleanup could trigger the wakeup
    itself before the task sets its futex state to DEAD.
    
    To cure this, the handling of the exiting owner is changed so:
    
       - A refcount is held on the task
    
       - The task pointer is stored in a caller visible location
    
       - The caller drops all locks (hash bucket, mmap_sem) and blocks
         on task::futex_exit_mutex. When the mutex is acquired then
         the exiting task has completed the cleanup and the state
         is consistent and can be reevaluated.
    
    This is not a pretty solution, but there is no choice other than returning
    an error code to user space, which would break the state consistency
    guarantee and open another can of problems including regressions.
    
    For stable backports the preparatory commits ac31c7ff8624 .. ba31c1a48538
    are required as well, but for anything older than 5.3.y the backports are
    going to be provided when this hits mainline as the other dependencies for
    those kernels are definitely not stable material.
    
    Fixes: 778e9a9c3e71 ("pi-futex: fix exit races and locking problems")
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Stable Team <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20191106224557.041676471@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e00df182908f34360c3c9f2d13cc719362e9c0
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:45 2019 +0100

    futex: Provide distinct return value when owner is exiting
    
    commit ac31c7ff8624409ba3c4901df9237a616c187a5d upstream.
    
    attach_to_pi_owner() returns -EAGAIN for various cases:
    
     - Owner task is exiting
     - Futex value has changed
    
    The caller drops the held locks (hash bucket, mmap_sem) and retries the
    operation. In case of the owner task exiting this can result in a live
    lock.
    
    As a preparatory step for seperating those cases, provide a distinct return
    value (EBUSY) for the owner exiting case.
    
    No functional change.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.935606117@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac7e59a0c1ae35a252b2e9946547b82be90cec36
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:44 2019 +0100

    futex: Add mutex around futex exit
    
    commit 3f186d974826847a07bc7964d79ec4eded475ad9 upstream.
    
    The mutex will be used in subsequent changes to replace the busy looping of
    a waiter when the futex owner is currently executing the exit cleanup to
    prevent a potential live lock.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.845798895@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d143b66d4677bacb9ae20490c8ce725ccbd83fb
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:43 2019 +0100

    futex: Provide state handling for exec() as well
    
    commit af8cbda2cfcaa5515d61ec500498d46e9a8247e2 upstream.
    
    exec() attempts to handle potentially held futexes gracefully by running
    the futex exit handling code like exit() does.
    
    The current implementation has no protection against concurrent incoming
    waiters. The reason is that the futex state cannot be set to
    FUTEX_STATE_DEAD after the cleanup because the task struct is still active
    and just about to execute the new binary.
    
    While its arguably buggy when a task holds a futex over exec(), for
    consistency sake the state handling can at least cover the actual futex
    exit cleanup section. This provides state consistency protection accross
    the cleanup. As the futex state of the task becomes FUTEX_STATE_OK after the
    cleanup has been finished, this cannot prevent subsequent attempts to
    attach to the task in case that the cleanup was not successfull in mopping
    up all leftovers.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.753355618@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0633e316e2a8bbea17949ae85c9cebf3a67eeaa1
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:42 2019 +0100

    futex: Sanitize exit state handling
    
    commit 4a8e991b91aca9e20705d434677ac013974e0e30 upstream.
    
    Instead of having a smp_mb() and an empty lock/unlock of task::pi_lock move
    the state setting into to the lock section.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.645603214@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1be36de0acdc5d58d8e2510b8b35c6d97c881451
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:41 2019 +0100

    futex: Mark the begin of futex exit explicitly
    
    commit 18f694385c4fd77a09851fd301236746ca83f3cb upstream.
    
    Instead of relying on PF_EXITING use an explicit state for the futex exit
    and set it in the futex exit function. This moves the smp barrier and the
    lock/unlock serialization into the futex code.
    
    As with the DEAD state this is restricted to the exit path as exec
    continues to use the same task struct.
    
    This allows to simplify that logic in a next step.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.539409004@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32676552cfea1aa1d96b23000c8d9af735cd064f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:40 2019 +0100

    futex: Set task::futex_state to DEAD right after handling futex exit
    
    commit f24f22435dcc11389acc87e5586239c1819d217c upstream.
    
    Setting task::futex_state in do_exit() is rather arbitrarily placed for no
    reason. Move it into the futex code.
    
    Note, this is only done for the exit cleanup as the exec cleanup cannot set
    the state to FUTEX_STATE_DEAD because the task struct is still in active
    use.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.439511191@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6dc90f43fc4595db805e980c7ddf45f7b86afd8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:39 2019 +0100

    futex: Split futex_mm_release() for exit/exec
    
    commit 150d71584b12809144b8145b817e83b81158ae5f upstream.
    
    To allow separate handling of the futex exit state in the futex exit code
    for exit and exec, split futex_mm_release() into two functions and invoke
    them from the corresponding exit/exec_mm_release() callsites.
    
    Preparatory only, no functional change.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.332094221@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d79d1c681ac4f4e0702ceb346150db4b3bb87c7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:38 2019 +0100

    exit/exec: Seperate mm_release()
    
    commit 4610ba7ad877fafc0a25a30c6c82015304120426 upstream.
    
    mm_release() contains the futex exit handling. mm_release() is called from
    do_exit()->exit_mm() and from exec()->exec_mm().
    
    In the exit_mm() case PF_EXITING and the futex state is updated. In the
    exec_mm() case these states are not touched.
    
    As the futex exit code needs further protections against exit races, this
    needs to be split into two functions.
    
    Preparatory only, no functional change.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.240518241@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c35d0ebed357f47ede0afef03699db29f14032c1
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:37 2019 +0100

    futex: Replace PF_EXITPIDONE with a state
    
    commit 3d4775df0a89240f671861c6ab6e8d59af8e9e41 upstream.
    
    The futex exit handling relies on PF_ flags. That's suboptimal as it
    requires a smp_mb() and an ugly lock/unlock of the exiting tasks pi_lock in
    the middle of do_exit() to enforce the observability of PF_EXITING in the
    futex code.
    
    Add a futex_state member to task_struct and convert the PF_EXITPIDONE logic
    over to the new state. The PF_EXITING dependency will be cleaned up in a
    later step.
    
    This prepares for handling various futex exit issues later.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.149449274@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f6c5ebbbbc9d9193831e77e614c61ad03c77925
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Nov 6 22:55:36 2019 +0100

    futex: Move futex exit handling into futex code
    
    commit ba31c1a48538992316cc71ce94fa9cd3e7b427c0 upstream.
    
    The futex exit handling is #ifdeffed into mm_release() which is not pretty
    to begin with. But upcoming changes to address futex exit races need to add
    more functionality to this exit code.
    
    Split it out into a function, move it into futex code and make the various
    futex exit functions static.
    
    Preparatory only and no functional change.
    
    Folded build fix from Borislav.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20191106224556.049705556@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e24098da750991f75819069c79e090dfd029219
Author: Yang Tao <yang.tao172@zte.com.cn>
Date:   Wed Nov 6 22:55:35 2019 +0100

    futex: Prevent robust futex exit race
    
    commit ca16d5bee59807bf04deaab0a8eccecd5061528c upstream.
    
    Robust futexes utilize the robust_list mechanism to allow the kernel to
    release futexes which are held when a task exits. The exit can be voluntary
    or caused by a signal or fault. This prevents that waiters block forever.
    
    The futex operations in user space store a pointer to the futex they are
    either locking or unlocking in the op_pending member of the per task robust
    list.
    
    After a lock operation has succeeded the futex is queued in the robust list
    linked list and the op_pending pointer is cleared.
    
    After an unlock operation has succeeded the futex is removed from the
    robust list linked list and the op_pending pointer is cleared.
    
    The robust list exit code checks for the pending operation and any futex
    which is queued in the linked list. It carefully checks whether the futex
    value is the TID of the exiting task. If so, it sets the OWNER_DIED bit and
    tries to wake up a potential waiter.
    
    This is race free for the lock operation but unlock has two race scenarios
    where waiters might not be woken up. These issues can be observed with
    regular robust pthread mutexes. PI aware pthread mutexes are not affected.
    
    (1) Unlocking task is killed after unlocking the futex value in user space
        before being able to wake a waiter.
    
            pthread_mutex_unlock()
                    |
                    V
            atomic_exchange_rel (&mutex->__data.__lock, 0)
                            <------------------------killed
                lll_futex_wake ()                   |
                                                    |
                                                    |(__lock = 0)
                                                    |(enter kernel)
                                                    |
                                                    V
                                                do_exit()
                                                exit_mm()
                                              mm_release()
                                            exit_robust_list()
                                            handle_futex_death()
                                                    |
                                                    |(__lock = 0)
                                                    |(uval = 0)
                                                    |
                                                    V
            if ((uval & FUTEX_TID_MASK) != task_pid_vnr(curr))
                    return 0;
    
        The sanity check which ensures that the user space futex is owned by
        the exiting task prevents the wakeup of waiters which in consequence
        block infinitely.
    
    (2) Waiting task is killed after a wakeup and before it can acquire the
        futex in user space.
    
            OWNER                         WAITER
                                    futex_wait()
       pthread_mutex_unlock()               |
                    |                       |
                    |(__lock = 0)           |
                    |                       |
                    V                       |
             futex_wake() ------------>  wakeup()
                                            |
                                            |(return to userspace)
                                            |(__lock = 0)
                                            |
                                            V
                            oldval = mutex->__data.__lock
                                              <-----------------killed
        atomic_compare_and_exchange_val_acq (&mutex->__data.__lock,  |
                            id | assume_other_futex_waiters, 0)      |
                                                                     |
                                                                     |
                                                       (enter kernel)|
                                                                     |
                                                                     V
                                                             do_exit()
                                                            |
                                                            |
                                                            V
                                            handle_futex_death()
                                            |
                                            |(__lock = 0)
                                            |(uval = 0)
                                            |
                                            V
            if ((uval & FUTEX_TID_MASK) != task_pid_vnr(curr))
                    return 0;
    
        The sanity check which ensures that the user space futex is owned
        by the exiting task prevents the wakeup of waiters, which seems to
        be correct as the exiting task does not own the futex value, but
        the consequence is that other waiters wont be woken up and block
        infinitely.
    
    In both scenarios the following conditions are true:
    
       - task->robust_list->list_op_pending != NULL
       - user space futex value == 0
       - Regular futex (not PI)
    
    If these conditions are met then it is reasonably safe to wake up a
    potential waiter in order to prevent the above problems.
    
    As this might be a false positive it can cause spurious wakeups, but the
    waiter side has to handle other types of unrelated wakeups, e.g. signals
    gracefully anyway. So such a spurious wakeup will not affect the
    correctness of these operations.
    
    This workaround must not touch the user space futex value and cannot set
    the OWNER_DIED bit because the lock value is 0, i.e. uncontended. Setting
    OWNER_DIED in this case would result in inconsistent state and subsequently
    in malfunction of the owner died handling in user space.
    
    The rest of the user space state is still consistent as no other task can
    observe the list_op_pending entry in the exiting tasks robust list.
    
    The eventually woken up waiter will observe the uncontended lock value and
    take it over.
    
    [ tglx: Massaged changelog and comment. Made the return explicit and not
            depend on the subsequent check and added constants to hand into
            handle_futex_death() instead of plain numbers. Fixed a few coding
            style issues. ]
    
    Fixes: 0771dfefc9e5 ("[PATCH] lightweight robust futexes: core")
    Signed-off-by: Yang Tao <yang.tao172@zte.com.cn>
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1573010582-35297-1-git-send-email-wang.yi59@zte.com.cn
    Link: https://lkml.kernel.org/r/20191106224555.943191378@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c08f1da992db758dc3f6a5a56518a7ab68fc1d3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Apr 17 16:31:07 2018 +0200

    y2038: futex: Move compat implementation into futex.c
    
    commit 04e7712f4460585e5eed5b853fd8b82a9943958f upstream.
    
    We are going to share the compat_sys_futex() handler between 64-bit
    architectures and 32-bit architectures that need to deal with both 32-bit
    and 64-bit time_t, and this is easier if both entry points are in the
    same file.
    
    In fact, most other system call handlers do the same thing these days, so
    let's follow the trend here and merge all of futex_compat.c into futex.c.
    
    In the process, a few minor changes have to be done to make sure everything
    still makes sense: handle_futex_death() and futex_cmpxchg_enabled() become
    local symbol, and the compat version of the fetch_robust_entry() function
    gets renamed to compat_fetch_robust_entry() to avoid a symbol clash.
    
    This is intended as a purely cosmetic patch, no behavior should
    change.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87b4ed6c62132663689f553ba506bfe5891c0f2e
Author: huijin.park <huijin.park@samsung.com>
Date:   Wed Nov 28 03:02:14 2018 -0500

    mtd: spi-nor: cast to u64 to avoid uint overflows
    
    commit 84a1c2109d23df3543d96231c4fee1757299bb1a upstream.
    
    The "params->size" is defined as "u64".
    And "info->sector_size" and "info->n_sectors" are defined as
    unsigned int and u16.
    Thus, u64 data might have strange data(loss data) if the result
    overflows an unsigned int.
    This patch casts "info->sector_size" to an u64.
    
    Signed-off-by: huijin.park <huijin.park@samsung.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77cfe99a0765b45473bbf7af3123bb39018d6005
Author: Wen Yang <yellowriver2010@hotmail.com>
Date:   Thu Feb 7 03:50:55 2019 +0000

    mtd: rawnand: atmel: fix possible object reference leak
    
    commit a12085d13997ed15f745f33a0e01002541160179 upstream.
    
    of_find_device_by_node() takes a reference to the struct device
    when it finds a match via get_device, there is no need to call
    get_device() twice.
    We also should make sure to drop the reference to the device
    taken by of_find_device_by_node() on driver unbind.
    
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Signed-off-by: Wen Yang <yellowriver2010@hotmail.com>
    Suggested-by: Boris Brezillon <bbrezillon@kernel.org>
    Reviewed-by: Boris Brezillon <bbrezillon@kernel.org>
    Reviewed-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Cc: Tudor Ambarus <tudor.ambarus@microchip.com>
    Cc: Boris Brezillon <bbrezillon@kernel.org>
    Cc: Miquel Raynal <miquel.raynal@bootlin.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Brian Norris <computersforpeace@gmail.com>
    Cc: Marek Vasut <marek.vasut@gmail.com>
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Cc: Ludovic Desroches <ludovic.desroches@microchip.com>
    Cc: linux-mtd@lists.infradead.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 623771d7948f8550b3c05cb65ea6606a20c39e6c
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Mon Apr 1 16:49:01 2019 +0200

    mtd: rawnand: atmel: Fix spelling mistake in error message
    
    commit e39bb786816453788836c367caefd72eceea380c upstream.
    
    Wrong copy/paste from the previous block, the error message should
    refer to #size-cells instead of #address-cells.
    
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c19b9c45fc58396b6e443381153911cdf48bbc28
Author: Paul Thomas <pthomas8589@gmail.com>
Date:   Mon Apr 8 15:37:54 2019 -0400

    net: macb driver, check for SKBTX_HW_TSTAMP
    
    commit a62520473f15750cd1432d36b377a06cd7cff8d2 upstream.
    
    Make sure SKBTX_HW_TSTAMP (i.e. SOF_TIMESTAMPING_TX_HARDWARE) has been
    enabled for this skb. It does fix the issue where normal socks that
    aren't expecting a timestamp will not wake up on select, but when a
    user does want a SOF_TIMESTAMPING_TX_HARDWARE it does work.
    
    Signed-off-by: Paul Thomas <pthomas8589@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e23d6338d76bb24a4a02210db17e805de3b8974
Author: Harini Katakam <harini.katakam@xilinx.com>
Date:   Thu Jun 27 11:51:00 2019 +0530

    net: macb: Fix SUBNS increment and increase resolution
    
    commit 7ad342bc58cc5197cd2f12a3c30b3949528c6d83 upstream.
    
    The subns increment register has 24 bits as follows:
    RegBit[15:0] = Subns[23:8]; RegBit[31:24] = Subns[7:0]
    
    Fix the same in the driver and increase sub ns resolution to the
    best capable, 24 bits. This should be the case on all GEM versions
    that this PTP driver supports.
    
    Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdcaab7abf3b4ced5f4dddf4d361351992756147
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Wed May 8 14:15:03 2019 +0000

    watchdog: sama5d4: fix WDD value to be always set to max
    
    commit 8632944841d41a36d77dd1fa88d4201b5291100f upstream.
    
    WDD value must be always set to max (0xFFF) otherwise the hardware
    block will reset the board on the first ping of the watchdog.
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb3257cba634f9a520467f6c8c56f4abfa347484
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Nov 7 21:43:41 2019 -0500

    ext4: add more paranoia checking in ext4_expand_extra_isize handling
    
    commit 4ea99936a1630f51fc3a2d61a58ec4a1c4b7d55a upstream.
    
    It's possible to specify a non-zero s_want_extra_isize via debugging
    option, and this can cause bad things(tm) to happen when using a file
    system with an inode size of 128 bytes.
    
    Add better checking when the file system is mounted, as well as when
    we are actually doing the trying to do the inode expansion.
    
    Link: https://lore.kernel.org/r/20191110121510.GH23325@mit.edu
    Reported-by: syzbot+f8d6f8386ceacdbfff57@syzkaller.appspotmail.com
    Reported-by: syzbot+33d7ea72e47de3bdf4e1@syzkaller.appspotmail.com
    Reported-by: syzbot+44b6763edfc17144296f@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c6e9591255b8726de77c33c916d2c161e9eedda
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Thu Nov 28 14:29:09 2019 +0800

    net: sched: fix `tc -s class show` no bstats on class with nolock subqueues
    
    [ Upstream commit 14e54ab9143fa60794d13ea0a66c792a2046a8f3 ]
    
    When a classful qdisc's child qdisc has set the flag
    TCQ_F_CPUSTATS (pfifo_fast for example), the child qdisc's
    cpu_bstats should be passed to gnet_stats_copy_basic(),
    but many classful qdisc didn't do that. As a result,
    `tc -s class show dev DEV` always return 0 for bytes and
    packets in this case.
    
    Pass the child qdisc's cpu_bstats to gnet_stats_copy_basic()
    to fix this issue.
    
    The qstats also has this problem, but it has been fixed
    in 5dd431b6b9 ("net: sched: introduce and use qstats read...")
    and bstats still remains buggy.
    
    Fixes: 22e0f8b9322c ("net: sched: make bstats per cpu and estimator RCU safe")
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: Tony Lu <tonylu@linux.alibaba.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d1ff8fb1144b13804bbedb2ec3874c46a9db8ba
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sat Nov 23 11:56:49 2019 +0800

    sctp: cache netns in sctp_ep_common
    
    [ Upstream commit 312434617cb16be5166316cf9d08ba760b1042a1 ]
    
    This patch is to fix a data-race reported by syzbot:
    
      BUG: KCSAN: data-race in sctp_assoc_migrate / sctp_hash_obj
    
      write to 0xffff8880b67c0020 of 8 bytes by task 18908 on cpu 1:
        sctp_assoc_migrate+0x1a6/0x290 net/sctp/associola.c:1091
        sctp_sock_migrate+0x8aa/0x9b0 net/sctp/socket.c:9465
        sctp_accept+0x3c8/0x470 net/sctp/socket.c:4916
        inet_accept+0x7f/0x360 net/ipv4/af_inet.c:734
        __sys_accept4+0x224/0x430 net/socket.c:1754
        __do_sys_accept net/socket.c:1795 [inline]
        __se_sys_accept net/socket.c:1792 [inline]
        __x64_sys_accept+0x4e/0x60 net/socket.c:1792
        do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      read to 0xffff8880b67c0020 of 8 bytes by task 12003 on cpu 0:
        sctp_hash_obj+0x4f/0x2d0 net/sctp/input.c:894
        rht_key_get_hash include/linux/rhashtable.h:133 [inline]
        rht_key_hashfn include/linux/rhashtable.h:159 [inline]
        rht_head_hashfn include/linux/rhashtable.h:174 [inline]
        head_hashfn lib/rhashtable.c:41 [inline]
        rhashtable_rehash_one lib/rhashtable.c:245 [inline]
        rhashtable_rehash_chain lib/rhashtable.c:276 [inline]
        rhashtable_rehash_table lib/rhashtable.c:316 [inline]
        rht_deferred_worker+0x468/0xab0 lib/rhashtable.c:420
        process_one_work+0x3d4/0x890 kernel/workqueue.c:2269
        worker_thread+0xa0/0x800 kernel/workqueue.c:2415
        kthread+0x1d4/0x200 drivers/block/aoe/aoecmd.c:1253
        ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:352
    
    It was caused by rhashtable access asoc->base.sk when sctp_assoc_migrate
    is changing its value. However, what rhashtable wants is netns from asoc
    base.sk, and for an asoc, its netns won't change once set. So we can
    simply fix it by caching netns since created.
    
    Fixes: d6c0256a60e6 ("sctp: add the rhashtable apis for sctp global transport hashtable")
    Reported-by: syzbot+e3b35fe7918ff0ee474e@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d75732b5f0cf60154a78d5710821cb3063e6578
Author: John Rutherford <john.rutherford@dektech.com.au>
Date:   Tue Nov 26 13:52:55 2019 +1100

    tipc: fix link name length check
    
    [ Upstream commit fd567ac20cb0377ff466d3337e6e9ac5d0cb15e4 ]
    
    In commit 4f07b80c9733 ("tipc: check msg->req data len in
    tipc_nl_compat_bearer_disable") the same patch code was copied into
    routines: tipc_nl_compat_bearer_disable(),
    tipc_nl_compat_link_stat_dump() and tipc_nl_compat_link_reset_stats().
    The two link routine occurrences should have been modified to check
    the maximum link name length and not bearer name length.
    
    Fixes: 4f07b80c9733 ("tipc: check msg->reg data len in tipc_nl_compat_bearer_disable")
    Signed-off-by: John Rutherford <john.rutherford@dektech.com.au>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 796c569498e1ce5159f070c142ba1bfebd33cc18
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sun Dec 1 18:41:25 2019 +0100

    openvswitch: remove another BUG_ON()
    
    [ Upstream commit 8a574f86652a4540a2433946ba826ccb87f398cc ]
    
    If we can't build the flow del notification, we can simply delete
    the flow, no need to crash the kernel. Still keep a WARN_ON to
    preserve debuggability.
    
    Note: the BUG_ON() predates the Fixes tag, but this change
    can be applied only after the mentioned commit.
    
    v1 -> v2:
     - do not leak an skb on error
    
    Fixes: aed067783e50 ("openvswitch: Minimize ovs_flow_cmd_del critical section.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2356f0b95fc04f37a028e4f67ef7812aacd2e30c
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Sun Dec 1 18:41:24 2019 +0100

    openvswitch: drop unneeded BUG_ON() in ovs_flow_cmd_build_info()
    
    [ Upstream commit 8ffeb03fbba3b599690b361467bfd2373e8c450f ]
    
    All the callers of ovs_flow_cmd_build_info() already deal with
    error return code correctly, so we can handle the error condition
    in a more gracefull way. Still dump a warning to preserve
    debuggability.
    
    v1 -> v2:
     - clarify the commit message
     - clean the skb and report the error (DaveM)
    
    Fixes: ccb1352e76cf ("net: Add Open vSwitch kernel components.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5bcc687e3d699bc4949bf37ef5f77fa50269f8c
Author: Jouni Hogander <jouni.hogander@unikie.com>
Date:   Mon Nov 25 14:23:43 2019 +0200

    slip: Fix use-after-free Read in slip_open
    
    [ Upstream commit e58c1912418980f57ba2060017583067f5f71e52 ]
    
    Slip_open doesn't clean-up device which registration failed from the
    slip_devs device list. On next open after failure this list is iterated
    and freed device is accessed. Fix this by calling sl_free_netdev in error
    path.
    
    Here is the trace from the Syzbot:
    
    __dump_stack lib/dump_stack.c:77 [inline]
    dump_stack+0x197/0x210 lib/dump_stack.c:118
    print_address_description.constprop.0.cold+0xd4/0x30b mm/kasan/report.c:374
    __kasan_report.cold+0x1b/0x41 mm/kasan/report.c:506
    kasan_report+0x12/0x20 mm/kasan/common.c:634
    __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:132
    sl_sync drivers/net/slip/slip.c:725 [inline]
    slip_open+0xecd/0x11b7 drivers/net/slip/slip.c:801
    tty_ldisc_open.isra.0+0xa3/0x110 drivers/tty/tty_ldisc.c:469
    tty_set_ldisc+0x30e/0x6b0 drivers/tty/tty_ldisc.c:596
    tiocsetd drivers/tty/tty_io.c:2334 [inline]
    tty_ioctl+0xe8d/0x14f0 drivers/tty/tty_io.c:2594
    vfs_ioctl fs/ioctl.c:46 [inline]
    file_ioctl fs/ioctl.c:509 [inline]
    do_vfs_ioctl+0xdb6/0x13e0 fs/ioctl.c:696
    ksys_ioctl+0xab/0xd0 fs/ioctl.c:713
    __do_sys_ioctl fs/ioctl.c:720 [inline]
    __se_sys_ioctl fs/ioctl.c:718 [inline]
    __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:718
    do_syscall_64+0xfa/0x760 arch/x86/entry/common.c:290
    entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: 3b5a39979daf ("slip: Fix memory leak in slip_open error path")
    Reported-by: syzbot+4d5170758f3762109542@syzkaller.appspotmail.com
    Cc: David Miller <davem@davemloft.net>
    Cc: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Jouni Hogander <jouni.hogander@unikie.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e32df103ca66a9efce43c6100bb0f8d973f24b6
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Nov 26 12:55:50 2019 +0100

    openvswitch: fix flow command message size
    
    [ Upstream commit 4e81c0b3fa93d07653e2415fa71656b080a112fd ]
    
    When user-space sets the OVS_UFID_F_OMIT_* flags, and the relevant
    flow has no UFID, we can exceed the computed size, as
    ovs_nla_put_identifier() will always dump an OVS_FLOW_ATTR_KEY
    attribute.
    Take the above in account when computing the flow command message
    size.
    
    Fixes: 74ed7ab9264c ("openvswitch: Add support for unique flow IDs.")
    Reported-by: Qi Jun Ding <qding@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b61349a540d0b3a2f6133a4bc16239cf24820c5
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed Nov 27 00:16:44 2019 +0200

    net: psample: fix skb_over_panic
    
    [ Upstream commit 7eb9d7675c08937cd11d32b0b40442d4d731c5ee ]
    
    We need to calculate the skb size correctly otherwise we risk triggering
    skb_over_panic[1]. The issue is that data_len is added to the skb in a
    nl attribute, but we don't account for its header size (nlattr 4 bytes)
    and alignment. We account for it when calculating the total size in
    the > PSAMPLE_MAX_PACKET_SIZE comparison correctly, but not when
    allocating after that. The fix is simple - use nla_total_size() for
    data_len when allocating.
    
    To reproduce:
     $ tc qdisc add dev eth1 clsact
     $ tc filter add dev eth1 egress matchall action sample rate 1 group 1 trunc 129
     $ mausezahn eth1 -b bcast -a rand -c 1 -p 129
     < skb_over_panic BUG(), tail is 4 bytes past skb->end >
    
    [1] Trace:
     [   50.459526][ T3480] skbuff: skb_over_panic: text:(____ptrval____) len:196 put:136 head:(____ptrval____) data:(____ptrval____) tail:0xc4 end:0xc0 dev:<NULL>
     [   50.474339][ T3480] ------------[ cut here ]------------
     [   50.481132][ T3480] kernel BUG at net/core/skbuff.c:108!
     [   50.486059][ T3480] invalid opcode: 0000 [#1] PREEMPT SMP
     [   50.489463][ T3480] CPU: 3 PID: 3480 Comm: mausezahn Not tainted 5.4.0-rc7 #108
     [   50.492844][ T3480] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-2.fc30 04/01/2014
     [   50.496551][ T3480] RIP: 0010:skb_panic+0x79/0x7b
     [   50.498261][ T3480] Code: bc 00 00 00 41 57 4c 89 e6 48 c7 c7 90 29 9a 83 4c 8b 8b c0 00 00 00 50 8b 83 b8 00 00 00 50 ff b3 c8 00 00 00 e8 ae ef c0 fe <0f> 0b e8 2f df c8 fe 48 8b 55 08 44 89 f6 4c 89 e7 48 c7 c1 a0 22
     [   50.504111][ T3480] RSP: 0018:ffffc90000447a10 EFLAGS: 00010282
     [   50.505835][ T3480] RAX: 0000000000000087 RBX: ffff888039317d00 RCX: 0000000000000000
     [   50.507900][ T3480] RDX: 0000000000000000 RSI: ffffffff812716e1 RDI: 00000000ffffffff
     [   50.509820][ T3480] RBP: ffffc90000447a60 R08: 0000000000000001 R09: 0000000000000000
     [   50.511735][ T3480] R10: ffffffff81d4f940 R11: 0000000000000000 R12: ffffffff834a22b0
     [   50.513494][ T3480] R13: ffffffff82c10433 R14: 0000000000000088 R15: ffffffff838a8084
     [   50.515222][ T3480] FS:  00007f3536462700(0000) GS:ffff88803eac0000(0000) knlGS:0000000000000000
     [   50.517135][ T3480] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     [   50.518583][ T3480] CR2: 0000000000442008 CR3: 000000003b222000 CR4: 00000000000006e0
     [   50.520723][ T3480] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     [   50.522709][ T3480] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     [   50.524450][ T3480] Call Trace:
     [   50.525214][ T3480]  skb_put.cold+0x1b/0x1b
     [   50.526171][ T3480]  psample_sample_packet+0x1d3/0x340
     [   50.527307][ T3480]  tcf_sample_act+0x178/0x250
     [   50.528339][ T3480]  tcf_action_exec+0xb1/0x190
     [   50.529354][ T3480]  mall_classify+0x67/0x90
     [   50.530332][ T3480]  tcf_classify+0x72/0x160
     [   50.531286][ T3480]  __dev_queue_xmit+0x3db/0xd50
     [   50.532327][ T3480]  dev_queue_xmit+0x18/0x20
     [   50.533299][ T3480]  packet_sendmsg+0xee7/0x2090
     [   50.534331][ T3480]  sock_sendmsg+0x54/0x70
     [   50.535271][ T3480]  __sys_sendto+0x148/0x1f0
     [   50.536252][ T3480]  ? tomoyo_file_ioctl+0x23/0x30
     [   50.537334][ T3480]  ? ksys_ioctl+0x5e/0xb0
     [   50.540068][ T3480]  __x64_sys_sendto+0x2a/0x30
     [   50.542810][ T3480]  do_syscall_64+0x73/0x1f0
     [   50.545383][ T3480]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
     [   50.548477][ T3480] RIP: 0033:0x7f35357d6fb3
     [   50.551020][ T3480] Code: 48 8b 0d 18 90 20 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d f9 d3 20 00 00 75 13 49 89 ca b8 2c 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 34 c3 48 83 ec 08 e8 eb f6 ff ff 48 89 04 24
     [   50.558547][ T3480] RSP: 002b:00007ffe0c7212c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
     [   50.561870][ T3480] RAX: ffffffffffffffda RBX: 0000000001dac010 RCX: 00007f35357d6fb3
     [   50.565142][ T3480] RDX: 0000000000000082 RSI: 0000000001dac2a2 RDI: 0000000000000003
     [   50.568469][ T3480] RBP: 00007ffe0c7212f0 R08: 00007ffe0c7212d0 R09: 0000000000000014
     [   50.571731][ T3480] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000082
     [   50.574961][ T3480] R13: 0000000001dac2a2 R14: 0000000000000001 R15: 0000000000000003
     [   50.578170][ T3480] Modules linked in: sch_ingress virtio_net
     [   50.580976][ T3480] ---[ end trace 61a515626a595af6 ]---
    
    CC: Yotam Gigi <yotamg@mellanox.com>
    CC: Jiri Pirko <jiri@mellanox.com>
    CC: Jamal Hadi Salim <jhs@mojatatu.com>
    CC: Simon Horman <simon.horman@netronome.com>
    CC: Roopa Prabhu <roopa@cumulusnetworks.com>
    Fixes: 6ae0a6286171 ("net: Introduce psample, a new genetlink channel for packet sampling")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e854565dbbd3b65f3a7c5f10c3434634e523e66a
Author: Menglong Dong <dong.menglong@zte.com.cn>
Date:   Mon Nov 25 16:58:09 2019 +0800

    macvlan: schedule bc_work even if error
    
    [ Upstream commit 1d7ea55668878bb350979c377fc72509dd6f5b21 ]
    
    While enqueueing a broadcast skb to port->bc_queue, schedule_work()
    is called to add port->bc_work, which processes the skbs in
    bc_queue, to "events" work queue. If port->bc_queue is full, the
    skb will be discarded and schedule_work(&port->bc_work) won't be
    called. However, if port->bc_queue is full and port->bc_work is not
    running or pending, port->bc_queue will keep full and schedule_work()
    won't be called any more, and all broadcast skbs to macvlan will be
    discarded. This case can happen:
    
    macvlan_process_broadcast() is the pending function of port->bc_work,
    it moves all the skbs in port->bc_queue to the queue "list", and
    processes the skbs in "list". During this, new skbs will keep being
    added to port->bc_queue in macvlan_broadcast_enqueue(), and
    port->bc_queue may already full when macvlan_process_broadcast()
    return. This may happen, especially when there are a lot of real-time
    threads and the process is preempted.
    
    Fix this by calling schedule_work(&port->bc_work) even if
    port->bc_work is full in macvlan_broadcast_enqueue().
    
    Fixes: 412ca1550cbe ("macvlan: Move broadcasts into a work queue")
    Signed-off-by: Menglong Dong <dong.menglong@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6a10a40a4f8e5cdaaafc85bdd7e4113223a07ba
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Fri Apr 12 06:19:46 2019 -0400

    media: atmel: atmel-isc: fix INIT_WORK misplacement
    
    commit 79199002db5c571e335131856b3ff057ffd9f3c0 upstream.
    
    In case the completion function failes, unbind will be called
    which will call cancel_work for awb_work.
    This will trigger a WARN message from the workqueue.
    To avoid this, move the INIT_WORK call at the start of the completion
    function. This way the work is always initialized, which corresponds
    to the 'always canceled' unbind code.
    
    Fixes: 93d4a26c3d ("[media] atmel-isc: add the isc pipeline function")
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c4575f07080c2ccefa0a5bef1753a2c7d6ed258
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Fri Apr 12 06:19:49 2019 -0400

    media: atmel: atmel-isc: fix asd memory allocation
    
    commit 1e4e25c4959c10728fbfcc6a286f9503d32dfe02 upstream.
    
    The subsystem will free the asd memory on notifier cleanup, if the asd is
    added to the notifier.
    However the memory is freed using kfree.
    Thus, we cannot allocate the asd using devm_*
    This can lead to crashes and problems.
    To test this issue, just return an error at probe, but cleanup the
    notifier beforehand.
    
    Fixes: 106267444f ("[media] atmel-isc: add the Image Sensor Controller code")
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae21311f818a810be0c4c1b90d52debc86f2be1f
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Mar 25 10:49:33 2019 +0100

    pwm: Clear chip_data in pwm_put()
    
    commit e926b12c611c2095c7976e2ed31753ad6eb5ff1a upstream.
    
    After a PWM is disposed by its user the per chip data becomes invalid.
    Clear the data in common code instead of the device drivers to get
    consistent behaviour. Before this patch only three of nine drivers
    cleaned up here.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5ac276a5e5303083b48906706eac43f79516b3a
Author: Luca Ceresoli <luca@lucaceresoli.net>
Date:   Tue May 14 15:23:07 2019 +0200

    net: macb: fix error format in dev_err()
    
    commit f413cbb332a0b5251a790f396d0eb4ebcade5dec upstream.
    
    Errors are negative numbers. Using %u shows them as very large positive
    numbers such as 4294967277 that don't make sense. Use the %d format
    instead, and get a much nicer -19.
    
    Signed-off-by: Luca Ceresoli <luca@lucaceresoli.net>
    Fixes: b48e0bab142f ("net: macb: Migrate to devm clock interface")
    Fixes: 93b31f48b3ba ("net/macb: unify clock management")
    Fixes: 421d9df0628b ("net/macb: merge at91_ether driver into macb driver")
    Fixes: aead88bd0e99 ("net: ethernet: macb: Add support for rx_clk")
    Fixes: f5473d1d44e4 ("net: macb: Support clock management for tsu_clk")
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b58babc4aa19c852cb3f9de2c6b6a9f91a2834a
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Apr 15 10:13:51 2019 -0400

    media: v4l2-ctrl: fix flags for DO_WHITE_BALANCE
    
    commit a0816e5088baab82aa738d61a55513114a673c8e upstream.
    
    Control DO_WHITE_BALANCE is a button, with read only and execute-on-write flags.
    Adding this control in the proper list in the fill function.
    
    After adding it here, we can see output of v4l2-ctl -L
    do_white_balance 0x0098090d (button) : flags=write-only, execute-on-write
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 171148ea3ab00b372f29d41b56fec44313cb0dca
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Nov 6 08:13:49 2019 +0100

    xfrm: Fix memleak on xfrm state destroy
    
    commit 86c6739eda7d2a03f2db30cbee67a5fb81afa8ba upstream.
    
    We leak the page that we use to create skb page fragments
    when destroying the xfrm_state. Fix this by dropping a
    page reference if a page was assigned to the xfrm_state.
    
    Fixes: cac2661c53f3 ("esp4: Avoid skb_cow_data whenever possible")
    Reported-by: JD <jdtxs00@gmail.com>
    Reported-by: Paul Wouters <paul@nohats.ca>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a6f9bc592ef8bd28629dbc32cc82150ea060045
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Tue Nov 5 17:05:13 2019 +0200

    mei: bus: prefix device names on bus with the bus name
    
    commit 7a2b9e6ec84588b0be65cc0ae45a65bac431496b upstream.
    
    Add parent device name to the name of devices on bus to avoid
    device names collisions for same client UUID available
    from different MEI heads. Namely this prevents sysfs collision under
    /sys/bus/mei/device/
    
    In the device part leave just UUID other parameters that are
    required for device matching are not required here and are
    just bloating the name.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Link: https://lore.kernel.org/r/20191105150514.14010-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df3353a27f13209e7e3de80bd5714d5b42a8abc0
Author: Fabio D'Urso <fabiodurso@hotmail.it>
Date:   Thu Nov 14 01:30:53 2019 +0000

    USB: serial: ftdi_sio: add device IDs for U-Blox C099-F9P
    
    commit c1a1f273d0825774c80896b8deb1c9ea1d0b91e3 upstream.
    
    This device presents itself as a USB hub with three attached devices:
     - An ACM serial port connected to the GPS module (not affected by this
       commit)
     - An FTDI serial port connected to the GPS module (1546:0502)
     - Another FTDI serial port connected to the ODIN-W2 radio module
       (1546:0503)
    
    This commit registers U-Blox's VID and the PIDs of the second and third
    devices.
    
    Datasheet: https://www.u-blox.com/sites/default/files/C099-F9P-AppBoard-Mbed-OS3-FW_UserGuide_%28UBX-18063024%29.pdf
    
    Signed-off-by: Fabio D'Urso <fabiodurso@hotmail.it>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67e31c8e6aad3f52234cf8ba9c5fcafc183cd8c1
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 11 12:38:45 2019 +0100

    staging: rtl8723bs: Add 024c:0525 to the list of SDIO device-ids
    
    commit 3d5f1eedbfd22ceea94b39989d6021b1958181f4 upstream.
    
    Add 024c:0525 to the list of SDIO device-ids, based on a patch found
    in the Android X86 kernels. According to that patch this device id is
    used on the Alcatel Plus 10 device.
    
    Reported-and-tested-by: youling257 <youling257@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191111113846.24940-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee5f5bbef31027004663c1824d7819465bec8457
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 11 12:38:46 2019 +0100

    staging: rtl8723bs: Drop ACPI device ids
    
    commit 2d9d2491530a156b9a5614adf9dc79285e35d55e upstream.
    
    The driver only binds by SDIO device-ids, all the ACPI device-id does
    is causing the driver to load unnecessarily on devices where the DSDT
    contains a bogus OBDA8723 device.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191111113846.24940-2-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3a967f00a54885eaea6034c8a3c538f65a0b9e7
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Nov 5 22:49:11 2019 +0800

    staging: rtl8192e: fix potential use after free
    
    commit b7aa39a2ed0112d07fc277ebd24a08a7b2368ab9 upstream.
    
    The variable skb is released via kfree_skb() when the return value of
    _rtl92e_tx is not zero. However, after that, skb is accessed again to
    read its length, which may result in a use after free bug. This patch
    fixes the bug by moving the release operation to where skb is never
    used later.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/1572965351-6745-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 607047ef2b4366139f1024272e11dc05f3102742
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Oct 16 16:21:43 2018 +0200

    clk: at91: generated: set audio_pll_allowed in at91_clk_register_generated()
    
    commit c1e4580a1d0ff510d56268c1fc7fcfeec366fe70 upstream.
    
    Set gck->audio_pll_allowed in at91_clk_register_generated. This makes it
    easier to do it from code that is not parsing device tree.
    
    Also, this fixes an issue where the resulting clk_hw can be dereferenced
    before being tested for error.
    
    Fixes: 1a1a36d72e3d ("clk: at91: clk-generated: make gclk determine audio_pll rate")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f42cde9910ebc4e4157583f83d777dbb0ee9846
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 9 15:30:31 2019 +0000

    clk: at91: fix update bit maps on CFG_MOR write
    
    commit 263eaf8f172d9f44e15d6aca85fe40ec18d2c477 upstream.
    
    The regmap update bits call was not selecting the proper mask, considering
    the bits which was updating.
    Update the mask from call to also include OSCBYPASS.
    Removed MOSCEN which was not updated.
    
    Fixes: 1bdf02326b71 ("clk: at91: make use of syscon/regmap internally")
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Link: https://lkml.kernel.org/r/1568042692-11784-1-git-send-email-eugen.hristev@microchip.com
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8725aa80dd65f0389f5097cc5f7f36ca7d399009
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Fri Nov 29 10:03:50 2019 +0100

    mm, gup: add missing refcount overflow checks on s390
    
    The mainline commit 8fde12ca79af ("mm: prevent get_user_pages() from
    overflowing page refcount") was backported to 4.14.y stable as commit
    04198de24771. The backport however missed that in 4.14, there are several
    arch-specific gup.c versions with fast gup implementations, so these do not
    prevent refcount overflow.
    
    This stable-only commit fixes the s390 version, and is based on the backport in
    SUSE SLES/openSUSE 4.12-based kernels.
    
    The remaining architectures with own gup.c are sparc, mips, sh. It's unlikely
    the known overflow scenario based on FUSE, which needs 140GB of RAM, is a
    problem for those architectures, and I don't feel confident enough to patch
    them.
    
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef04ffdd59623ef169aa1e28c896ed8801e247cb
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Wed Jan 30 09:47:00 2019 +0100

    mtd: Remove a debug trace in mtdpart.c
    
    [ Upstream commit bda2ab56356b9acdfab150f31c4bac9846253092 ]
    
    Commit 2b6f0090a333 ("mtd: Check add_mtd_device() ret code") contained
    a leftover of the debug session that led to this bug fix. Remove this
    pr_info().
    
    Fixes: 2b6f0090a333 ("mtd: Check add_mtd_device() ret code")
    Signed-off-by: Boris Brezillon <bbrezillon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0583dc6fceb6b70cbd7e39802da41d8269fe82ac
Author: Gen Zhang <blackgod016574@gmail.com>
Date:   Sun May 26 10:42:40 2019 +0800

    powerpc/pseries/dlpar: Fix a missing check in dlpar_parse_cc_property()
    
    [ Upstream commit efa9ace68e487ddd29c2b4d6dd23242158f1f607 ]
    
    In dlpar_parse_cc_property(), 'prop->name' is allocated by kstrdup().
    kstrdup() may return NULL, so it should be checked and handle error.
    And prop should be freed if 'prop->name' is NULL.
    
    Signed-off-by: Gen Zhang <blackgod016574@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e7b61dce67264cd55bfd488f96a1d2f103c5989
Author: John Garry <john.garry@huawei.com>
Date:   Sat Jan 5 00:01:27 2019 +0800

    scsi: libsas: Check SMP PHY control function result
    
    [ Upstream commit 01929a65dfa13e18d89264ab1378854a91857e59 ]
    
    Currently the SMP PHY control execution result is checked, however the
    function result for the command is not.
    
    As such, we may be missing all potential errors, like SMP FUNCTION FAILED,
    INVALID REQUEST FRAME LENGTH, etc., meaning the PHY control request has
    failed.
    
    In some scenarios we need to ensure the function result is accepted, so add
    a check for this.
    
    Tested-by: Jian Luo <luojian5@huawei.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74fac32b6474ec92898dafcf270fc0d113026e07
Author: James Morse <james.morse@arm.com>
Date:   Tue Jan 29 18:48:39 2019 +0000

    ACPI / APEI: Switch estatus pool to use vmalloc memory
    
    [ Upstream commit 0ac234be1a9497498e57d958f4251f5257b116b4 ]
    
    The ghes code is careful to parse and round firmware's advertised
    memory requirements for CPER records, up to a maximum of 64K.
    However when ghes_estatus_pool_expand() does its work, it splits
    the requested size into PAGE_SIZE granules.
    
    This means if firmware generates 5K of CPER records, and correctly
    describes this in the table, __process_error() will silently fail as it
    is unable to allocate more than PAGE_SIZE.
    
    Switch the estatus pool to vmalloc() memory. On x86 vmalloc() memory
    may fault and be fixed up by vmalloc_fault(). To prevent this call
    vmalloc_sync_all() before an NMI handler could discover the memory.
    
    Signed-off-by: James Morse <james.morse@arm.com>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ad61d642b69e42554a14eba7f18cbb20f1d6f61
Author: James Morse <james.morse@arm.com>
Date:   Tue Jan 29 18:48:37 2019 +0000

    ACPI / APEI: Don't wait to serialise with oops messages when panic()ing
    
    [ Upstream commit 78b0b690f6558ed788dccafa45965325dd11ba89 ]
    
    oops_begin() exists to group printk() messages with the oops message
    printed by die(). To reach this caller we know that platform firmware
    took this error first, then notified the OS via NMI with a 'panic'
    severity.
    
    Don't wait for another CPU to release the die-lock before panic()ing,
    our only goal is to print this fatal error and panic().
    
    This code is always called in_nmi(), and since commit 42a0bb3f7138
    ("printk/nmi: generic solution for safe printk in NMI"), it has been
    safe to call printk() from this context. Messages are batched in a
    per-cpu buffer and printed via irq-work, or a call back from panic().
    
    Link: https://patchwork.kernel.org/patch/10313555/
    Acked-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e2dd42cede242f4ca4e7205f51c8b9ff706ca5c
Author: John Garry <john.garry@huawei.com>
Date:   Sat Jan 5 00:01:28 2019 +0800

    scsi: libsas: Support SATA PHY connection rate unmatch fixing during discovery
    
    [ Upstream commit cec9771d2e954650095aa37a6a97722c8194e7d2 ]
    
       +----------+             +----------+
       |          |             |          |
       |          |--- 3.0 G ---|          |--- 6.0 G --- SAS  disk
       |          |             |          |
       |          |--- 3.0 G ---|          |--- 6.0 G --- SAS  disk
       |initiator |             |          |
       | device   |--- 3.0 G ---| Expander |--- 6.0 G --- SAS  disk
       |          |             |          |
       |          |--- 3.0 G ---|          |--- 6.0 G --- SATA disk  -->failed to connect
       |          |             |          |
       |          |             |          |--- 6.0 G --- SATA disk  -->failed to connect
       |          |             |          |
       +----------+             +----------+
    
    According to Serial Attached SCSI - 1.1 (SAS-1.1):
    If an expander PHY attached to a SATA PHY is using a physical link rate
    greater than the maximum connection rate supported by the pathway from an
    STP initiator port, a management application client should use the SMP PHY
    CONTROL function (see 10.4.3.10) to set the PROGRAMMED MAXIMUM PHYSICAL
    LINK RATE field of the expander PHY to the maximum connection rate
    supported by the pathway from that STP initiator port.
    
    Currently libsas does not support checking if this condition occurs, nor
    rectifying when it does.
    
    Such a condition is not at all common, however it has been seen on some
    pre-silicon environments where the initiator PHY only supports a 1.5 Gbit
    maximum linkrate, mated with 12G expander PHYs and 3/6G SATA phy.
    
    This patch adds support for checking and rectifying this condition during
    initial device discovery only.
    
    We do support checking min pathway connection rate during revalidation phase,
    when new devices can be detected in the topology. However we do not
    support in the case of the the user reprogramming PHY linkrates, such that
    min pathway condition is not met/maintained.
    
    A note on root port PHY rates:
    The libsas root port PHY rates calculation is broken. Libsas sets the
    rates (min, max, and current linkrate) of a root port to the same linkrate
    of the first PHY member of that same port. In doing so, it assumes that
    all other PHYs which subsequently join the port to have the same
    negotiated linkrate, when they could actually be different.
    
    In practice this doesn't happen, as initiator and expander PHYs are
    normally initialised with consistent min/max linkrates.
    
    This has not caused an issue so far, so leave alone for now.
    
    Tested-by: Jian Luo <luojian5@huawei.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01dbfb2c74e7f38f225153c156065c7011754c6e
Author: Chris Coulson <chris.coulson@canonical.com>
Date:   Mon Feb 4 10:21:23 2019 +0000

    apparmor: delete the dentry in aafs_remove() to avoid a leak
    
    [ Upstream commit 201218e4d3dfa1346e30997f48725acce3f26d01 ]
    
    Although the apparmorfs dentries are always dropped from the dentry cache
    when the usage count drops to zero, there is no guarantee that this will
    happen in aafs_remove(), as another thread might still be using it. In
    this scenario, this means that the dentry will temporarily continue to
    appear in the results of lookups, even after the call to aafs_remove().
    
    In the case of removal of a profile - it also causes simple_rmdir()
    on the profile directory to fail, as the directory won't be empty until
    the usage counts of all child dentries have decreased to zero. This
    results in the dentry for the profile directory leaking and appearing
    empty in the file system tree forever.
    
    Signed-off-by: Chris Coulson <chris.coulson@canonical.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f27946e2af3d70a72937af1a34d12863f39db50
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Wed Mar 13 21:53:24 2019 +0800

    iommu/amd: Fix NULL dereference bug in match_hid_uid
    
    [ Upstream commit bb6bccba390c7d743c1e4427de4ef284c8cc6869 ]
    
    Add a non-NULL check to fix potential NULL pointer dereference
    Cleanup code to call function once.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Fixes: 2bf9a0a12749b ('iommu/amd: Add iommu support for ACPI HID devices')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cc8bd14e94d9feb4563ae76018359cf7794b654
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Wed Jan 23 07:39:34 2019 +0800

    net: hns3: Change fw error code NOT_EXEC to NOT_SUPPORTED
    
    [ Upstream commit 4a402f47cfce904051cd8b31bef4fe2910d9dce9 ]
    
    According to firmware error code definition, the error code of 2
    means NOT_SUPPORTED, this patch changes it to NOT_SUPPORTED.
    
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebf233fd40bfc70e53ac9ba6b46ec7b3439c3da1
Author: Peng Sun <sironhide0null@gmail.com>
Date:   Wed Feb 27 22:36:25 2019 +0800

    bpf: drop refcount if bpf_map_new_fd() fails in map_create()
    
    [ Upstream commit 352d20d611414715353ee65fc206ee57ab1a6984 ]
    
    In bpf/syscall.c, map_create() first set map->usercnt to 1, a file
    descriptor is supposed to return to userspace. When bpf_map_new_fd()
    fails, drop the refcount.
    
    Fixes: bd5f5f4ecb78 ("bpf: Add BPF_MAP_GET_FD_BY_ID")
    Signed-off-by: Peng Sun <sironhide0null@gmail.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e4a0cf997f8c40747bdf6465070f2bc04dcdc18
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Feb 28 16:34:37 2019 +0100

    kvm: properly check debugfs dentry before using it
    
    [ Upstream commit 8ed0579c12b2fe56a1fac2f712f58fc26c1dc49b ]
    
    debugfs can now report an error code if something went wrong instead of
    just NULL.  So if the return value is to be used as a "real" dentry, it
    needs to be checked if it is an error before dereferencing it.
    
    This is now happening because of ff9fb72bc077 ("debugfs: return error
    values, not NULL").  syzbot has found a way to trigger multiple debugfs
    files attempting to be created, which fails, and then the error code
    gets passed to dentry_path_raw() which obviously does not like it.
    
    Reported-by: Eric Biggers <ebiggers@kernel.org>
    Reported-and-tested-by: syzbot+7857962b4d45e602b8ad@syzkaller.appspotmail.com
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: kvm@vger.kernel.org
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d962062251ce74041ba3ce03d7e34a51bbb67f7
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Feb 27 13:37:26 2019 +0300

    net: dev: Use unsigned integer as an argument to left-shift
    
    [ Upstream commit f4d7b3e23d259c44f1f1c39645450680fcd935d6 ]
    
    1 << 31 is Undefined Behaviour according to the C standard.
    Use U type modifier to avoid theoretical overflow.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e50f6c7dc3006d3f92d668b61b2e75bec793ccf
Author: Peng Sun <sironhide0null@gmail.com>
Date:   Tue Feb 26 22:15:37 2019 +0800

    bpf: decrease usercnt if bpf_map_new_fd() fails in bpf_map_get_fd_by_id()
    
    [ Upstream commit 781e62823cb81b972dc8652c1827205cda2ac9ac ]
    
    In bpf/syscall.c, bpf_map_get_fd_by_id() use bpf_map_inc_not_zero()
    to increase the refcount, both map->refcnt and map->usercnt. Then, if
    bpf_map_new_fd() fails, should handle map->usercnt too.
    
    Fixes: bd5f5f4ecb78 ("bpf: Add BPF_MAP_GET_FD_BY_ID")
    Signed-off-by: Peng Sun <sironhide0null@gmail.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a184a9d6015ec0ec7ee7551d7157594ee89d02b2
Author: Maciej Kwiecien <maciej.kwiecien@nokia.com>
Date:   Fri Feb 22 09:45:26 2019 +0100

    sctp: don't compare hb_timer expire date before starting it
    
    [ Upstream commit d1f20c03f48102e52eb98b8651d129b83134cae4 ]
    
    hb_timer might not start at all for a particular transport because its
    start is conditional. In a result a node is not sending heartbeats.
    
    Function sctp_transport_reset_hb_timer has two roles:
        - initial start of hb_timer for a given transport,
        - update expire date of hb_timer for a given transport.
    The function is optimized to update timer's expire only if it is before
    a new calculated one but this comparison is invalid for a timer which
    has not yet started. Such a timer has expire == 0 and if a new expire
    value is bigger than (MAX_JIFFIES / 2 + 2) then "time_before" macro will
    fail and timer will not start resulting in no heartbeat packets send by
    the node.
    
    This was found when association was initialized within first 5 mins
    after system boot due to jiffies init value which is near to MAX_JIFFIES.
    
    Test kernel version: 4.9.154 (ARCH=arm)
    hb_timer.expire = 0;                //initialized, not started timer
    new_expire = MAX_JIFFIES / 2 + 2;   //or more
    time_before(hb_timer.expire, new_expire) == false
    
    Fixes: ba6f5e33bdbb ("sctp: avoid refreshing heartbeat timer too often")
    Reported-by: Marcin Stojek <marcin.stojek@nokia.com>
    Tested-by: Marcin Stojek <marcin.stojek@nokia.com>
    Signed-off-by: Maciej Kwiecien <maciej.kwiecien@nokia.com>
    Reviewed-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75fa3a9a2f7b6daf266c6cbbecdd83fbcb9dad6b
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Feb 12 12:26:27 2019 -0800

    net: fix possible overflow in __sk_mem_raise_allocated()
    
    [ Upstream commit 5bf325a53202b8728cf7013b72688c46071e212e ]
    
    With many active TCP sockets, fat TCP sockets could fool
    __sk_mem_raise_allocated() thanks to an overflow.
    
    They would increase their share of the memory, instead
    of decreasing it.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50740980d526e97eea76ed0ff54b1935ed971565
Author: Bert Kenward <bkenward@solarflare.com>
Date:   Tue Feb 12 13:10:00 2019 +0000

    sfc: initialise found bitmap in efx_ef10_mtd_probe
    
    [ Upstream commit c65285428b6e7797f1bb063f33b0ae7e93397b7b ]
    
    The bitmap of found partitions in efx_ef10_mtd_probe was not
    initialised, causing partitions to be suppressed based off whatever
    value was in the bitmap at the start.
    
    Fixes: 3366463513f5 ("sfc: suppress duplicate nvmem partition types in efx_ef10_mtd_probe")
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5924bac0cf78e60d74d0b3185b033fdefde7acf
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Mon Feb 11 09:18:28 2019 +0700

    tipc: fix skb may be leaky in tipc_link_input
    
    [ Upstream commit 7384b538d3aed2ed49d3575483d17aeee790fb06 ]
    
    When we free skb at tipc_data_input, we return a 'false' boolean.
    Then, skb passed to subcalling tipc_link_input in tipc_link_rcv,
    
    <snip>
    1303 int tipc_link_rcv:
    ...
    1354    if (!tipc_data_input(l, skb, l->inputq))
    1355        rc |= tipc_link_input(l, skb, l->inputq);
    </snip>
    
    Fix it by simple changing to a 'true' boolean when skb is being free-ed.
    Then, tipc_link_rcv will bypassed to subcalling tipc_link_input as above
    condition.
    
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <maloy@donjonn.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 479d9460a2919e1900d5147a1271837201ffdfda
Author: Jan Kara <jack@suse.cz>
Date:   Thu Feb 7 11:55:39 2019 +0100

    blktrace: Show requests without sector
    
    [ Upstream commit 0803de78049fe1b0baf44bcddc727b036fb9139b ]
    
    Currently, blktrace will not show requests that don't have any data as
    rq->__sector is initialized to -1 which is out of device range and thus
    discarded by act_log_check(). This is most notably the case for cache
    flush requests sent to the device. Fix the problem by making
    blk_rq_trace_sector() return 0 for requests without initialized sector.
    
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbd45bd490f0a71a59c364d6fc664c1086771721
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Wed Jan 30 18:51:02 2019 +0100

    net/smc: prevent races between smc_lgr_terminate() and smc_conn_free()
    
    [ Upstream commit 77f838ace755d2f466536c44dac6c856f62cd901 ]
    
    To prevent races between smc_lgr_terminate() and smc_conn_free() add an
    extra check of the lgr field before accessing it, and cancel a delayed
    free_work when a new smc connection is created.
    This fixes the problem that free_work cleared the lgr variable but
    smc_lgr_terminate() or smc_conn_free() still access it in parallel.
    
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b89c62555ab774d816c7b3d341cfb9f3b27c7a59
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sat Jan 26 21:12:19 2019 +0100

    decnet: fix DN_IFREQ_SIZE
    
    [ Upstream commit 50c2936634bcb1db78a8ca63249236810c11a80f ]
    
    Digging through the ioctls with Al because of the previous
    patches, we found that on 64-bit decnet's dn_dev_ioctl()
    is wrong, because struct ifreq::ifr_ifru is actually 24
    bytes (not 16 as expected from struct sockaddr) due to the
    ifru_map and ifru_settings members.
    
    Clearly, decnet expects the ioctl to be called with a struct
    like
      struct ifreq_dn {
        char ifr_name[IFNAMSIZ];
        struct sockaddr_dn ifr_addr;
      };
    
    since it does
      struct ifreq *ifr = ...;
      struct sockaddr_dn *sdn = (struct sockaddr_dn *)&ifr->ifr_addr;
    
    This means that DN_IFREQ_SIZE is too big for what it wants on
    64-bit, as it is
      sizeof(struct ifreq) - sizeof(struct sockaddr) +
      sizeof(struct sockaddr_dn)
    
    This assumes that sizeof(struct sockaddr) is the size of ifr_ifru
    but that isn't true.
    
    Fix this to use offsetof(struct ifreq, ifr_ifru).
    
    This indeed doesn't really matter much - the result is that we
    copy in/out 8 bytes more than we should on 64-bit platforms. In
    case the "struct ifreq_dn" lands just on the end of a page though
    it might lead to faults.
    
    As far as I can tell, it has been like this forever, so it seems
    very likely that nobody cares.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35e074ebdadb8f2f186d189269b05fd3297b2341
Author: wenxu <wenxu@ucloud.cn>
Date:   Sat Jan 19 13:11:25 2019 +0800

    ip_tunnel: Make none-tunnel-dst tunnel port work with lwtunnel
    
    [ Upstream commit d71b57532d70c03f4671dd04e84157ac6bf021b0 ]
    
    ip l add dev tun type gretap key 1000
    ip a a dev tun 10.0.0.1/24
    
    Packets with tun-id 1000 can be recived by tun dev. But packet can't
    be sent through dev tun for non-tunnel-dst
    
    With this patch: tunnel-dst can be get through lwtunnel like beflow:
    ip r a 10.0.0.7 encap ip dst 172.168.0.11 dev tun
    
    Signed-off-by: wenxu <wenxu@ucloud.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3513e5c27a7e6113012c9dcabcbc65975a55025
Author: Edward Cree <ecree@solarflare.com>
Date:   Tue Jan 22 19:02:17 2019 +0000

    sfc: suppress duplicate nvmem partition types in efx_ef10_mtd_probe
    
    [ Upstream commit 3366463513f544c12c6b88c13da4462ee9e7a1a1 ]
    
    Use a bitmap to keep track of which partition types we've already seen;
     for duplicates, return -EEXIST from efx_ef10_mtd_probe_partition() and
     thus skip adding that partition.
    Duplicate partitions occur because of the A/B backup scheme used by newer
     sfc NICs.  Prior to this patch they cause sysfs_warn_dup errors because
     they have the same name, causing us not to expose any MTDs at all.
    
    Signed-off-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 189f921470547fc15f1e4c49bb5a27f9b4a0b6f4
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Tue Dec 18 16:46:29 2018 +0100

    gpu: ipu-v3: pre: don't trigger update if buffer address doesn't change
    
    [ Upstream commit eb0200a4357da100064971689d3a0e9e3cf57f33 ]
    
    On a NOP double buffer update where current buffer address is the same
    as the next buffer address, the SDW_UPDATE bit clears too late. As we
    are now using this bit to determine when it is safe to signal flip
    completion to userspace this will delay completion of atomic commits
    where one plane doesn't change the buffer by a whole frame period.
    
    Fix this by remembering the last buffer address and just skip the
    double buffer update if it would not change the buffer address.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    [p.zabel@pengutronix.de: initialize last_bufaddr in ipu_pre_configure]
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f21cb374df34cacd7cae4dff25989e9288e5d537
Author: He Zhe <zhe.he@windriver.com>
Date:   Thu Jan 17 17:00:19 2019 +0800

    serial: 8250: Fix serial8250 initialization crash
    
    [ Upstream commit 352c4cf40c4a7d439fa5d30aa2160f54b394da82 ]
    
    The initialization code of interrupt backoff work might reference NULL
    pointer and cause the following crash, if no port was found.
    
    [   10.017727] CPU 0 Unable to handle kernel paging request at virtual address 000001b0, epc == 807088e0, ra == 8070863c
    ---- snip ----
    [   11.704470] [<807088e0>] serial8250_register_8250_port+0x318/0x4ac
    [   11.747251] [<80708d74>] serial8250_probe+0x148/0x1c0
    [   11.789301] [<80728450>] platform_drv_probe+0x40/0x94
    [   11.830515] [<807264f8>] really_probe+0xf8/0x318
    [   11.870876] [<80726b7c>] __driver_attach+0x110/0x12c
    [   11.910960] [<80724374>] bus_for_each_dev+0x78/0xcc
    [   11.951134] [<80725958>] bus_add_driver+0x200/0x234
    [   11.989756] [<807273d8>] driver_register+0x84/0x148
    [   12.029832] [<80d72f84>] serial8250_init+0x138/0x198
    [   12.070447] [<80100e6c>] do_one_initcall+0x5c/0x2a0
    [   12.110104] [<80d3a208>] kernel_init_freeable+0x370/0x484
    [   12.150722] [<80a49420>] kernel_init+0x10/0xf8
    [   12.191517] [<8010756c>] ret_from_kernel_thread+0x14/0x1c
    
    This patch makes sure the initialization code can be reached only if a port
    is found.
    
    Fixes: 6d7f677a2afa ("serial: 8250: Rate limit serial port rx interrupts during input overruns")
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Darwin Dingel <darwin.dingel@alliedtelesis.co.nz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 951c390b1edccf886a91dd019e569a4b9b5fdec0
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Mon Jan 14 13:38:43 2019 +0300

    net/core/neighbour: fix kmemleak minimal reference count for hash tables
    
    [ Upstream commit 01b833ab44c9e484060aad72267fc7e71beb559b ]
    
    This should be 1 for normal allocations, 0 disables leak reporting.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reported-by: Cong Wang <xiyou.wangcong@gmail.com>
    Fixes: 85704cb8dcfd ("net/core/neighbour: tell kmemleak about hash tables")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ab9b2bc8a7617c8a5d7f34505c3f8485d580607
Author: Ming Lei <ming.lei@redhat.com>
Date:   Tue Jan 15 17:31:29 2019 -0600

    PCI/MSI: Return -ENOSPC from pci_alloc_irq_vectors_affinity()
    
    [ Upstream commit 77f88abd4a6f73a1a68dbdc0e3f21575fd508fc3 ]
    
    The API of pci_alloc_irq_vectors_affinity() says it returns -ENOSPC if
    fewer than @min_vecs interrupt vectors are available for @dev.
    
    However, if a device supports MSI-X but not MSI and a caller requests
    @min_vecs that can't be satisfied by MSI-X, we previously returned -EINVAL
    (from the failed attempt to enable MSI), not -ENOSPC.
    
    When -ENOSPC is returned, callers may reduce the number IRQs they request
    and try again.  Most callers can use the @min_vecs and @max_vecs
    parameters to avoid this retry loop, but that doesn't work when using IRQ
    affinity "nr_sets" because rebalancing the sets is driver-specific.
    
    This return value bug has been present since pci_alloc_irq_vectors() was
    added in v4.10 by aff171641d18 ("PCI: Provide sensible IRQ vector
    alloc/free routines"), but it wasn't an issue because @min_vecs/@max_vecs
    removed the need for callers to iteratively reduce the number of IRQs
    requested and retry the allocation, so they didn't need to distinguish
    -ENOSPC from -EINVAL.
    
    In v5.0, 6da4b3ab9a6e ("genirq/affinity: Add support for allocating
    interrupt sets") added IRQ sets to the interface, which reintroduced the
    need to check for -ENOSPC and possibly reduce the number of IRQs requested
    and retry the allocation.
    
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acf72ff8b68cf81044bfa0d04093151b2340c430
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Tue Jan 8 12:30:00 2019 +0300

    net/core/neighbour: tell kmemleak about hash tables
    
    [ Upstream commit 85704cb8dcfd88d351bfc87faaeba1c8214f3177 ]
    
    This fixes false-positive kmemleak reports about leaked neighbour entries:
    
    unreferenced object 0xffff8885c6e4d0a8 (size 1024):
      comm "softirq", pid 0, jiffies 4294922664 (age 167640.804s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 20 2c f3 83 ff ff ff ff  ........ ,......
        08 c0 ef 5f 84 88 ff ff 01 8c 7d 02 01 00 00 00  ..._......}.....
      backtrace:
        [<00000000748509fe>] ip6_finish_output2+0x887/0x1e40
        [<0000000036d7a0d8>] ip6_output+0x1ba/0x600
        [<0000000027ea7dba>] ip6_send_skb+0x92/0x2f0
        [<00000000d6e2111d>] udp_v6_send_skb.isra.24+0x680/0x15e0
        [<000000000668a8be>] udpv6_sendmsg+0x18c9/0x27a0
        [<000000004bd5fa90>] sock_sendmsg+0xb3/0xf0
        [<000000008227b29f>] ___sys_sendmsg+0x745/0x8f0
        [<000000008698009d>] __sys_sendmsg+0xde/0x170
        [<00000000889dacf1>] do_syscall_64+0x9b/0x400
        [<0000000081cdb353>] entry_SYSCALL_64_after_hwframe+0x49/0xbe
        [<000000005767ed39>] 0xffffffffffffffff
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d0a31370a92aa6e1bd12b00b2f4dd0a0183672d
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Sat Jan 5 10:52:23 2019 -0600

    tipc: fix memory leak in tipc_nl_compat_publ_dump
    
    [ Upstream commit f87d8ad9233f115db92c6c087d58403b0009ed36 ]
    
    There is a memory leak in case genlmsg_put fails.
    
    Fix this by freeing *args* before return.
    
    Addresses-Coverity-ID: 1476406 ("Resource leak")
    Fixes: 46273cf7e009 ("tipc: fix a missing check of genlmsg_put")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43ac6874069c9e6a01b3bce018778a230c153e75
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Wed Jan 2 15:36:54 2019 +0100

    mtd: Check add_mtd_device() ret code
    
    [ Upstream commit 2b6f0090a3335b7bdd03ca520c35591159463041 ]
    
    add_mtd_device() can fail. We should always check its return value
    and gracefully handle the failure case. Fix the call sites where this
    not done (in mtdpart.c) and add a __must_check attribute to the
    prototype to avoid this kind of mistakes.
    
    Signed-off-by: Boris Brezillon <bbrezillon@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8e74cb55c41aa7fae79afa399899728803417e9
Author: Olof Johansson <olof@lixom.net>
Date:   Sat Jan 5 13:21:18 2019 -0800

    lib/genalloc.c: include vmalloc.h
    
    [ Upstream commit 35004f2e55807a1a1491db24ab512dd2f770a130 ]
    
    Fixes build break on most ARM/ARM64 defconfigs:
    
      lib/genalloc.c: In function 'gen_pool_add_virt':
      lib/genalloc.c:190:10: error: implicit declaration of function 'vzalloc_node'; did you mean 'kzalloc_node'?
      lib/genalloc.c:190:8: warning: assignment to 'struct gen_pool_chunk *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
      lib/genalloc.c: In function 'gen_pool_destroy':
      lib/genalloc.c:254:3: error: implicit declaration of function 'vfree'; did you mean 'kfree'?
    
    Fixes: 6862d2fc8185 ('lib/genalloc.c: use vzalloc_node() to allocate the bitmap')
    Cc: Huang Shijie <sjhuang@iluvatar.ai>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alexey Skidanov <alexey.skidanov@intel.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30e1e00002bfb0ac87d5d4ec06704cbec11be440
Author: Qian Cai <cai@gmx.us>
Date:   Thu Jan 3 15:29:05 2019 -0800

    drivers/base/platform.c: kmemleak ignore a known leak
    
    [ Upstream commit 967d3010df8b6f6f9aa95c198edc5fe3646ebf36 ]
    
    unreferenced object 0xffff808ec6dc5a80 (size 128):
      comm "swapper/0", pid 1, jiffies 4294938063 (age 2560.530s)
      hex dump (first 32 bytes):
        ff ff ff ff 00 00 00 00 6b 6b 6b 6b 6b 6b 6b 6b  ........kkkkkkkk
        6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk
      backtrace:
        [<00000000476dcf8c>] kmem_cache_alloc_trace+0x430/0x500
        [<000000004f708d37>] platform_device_register_full+0xbc/0x1e8
        [<000000006c2a7ec7>] acpi_create_platform_device+0x370/0x450
        [<00000000ef135642>] acpi_default_enumeration+0x34/0x78
        [<000000003bd9a052>] acpi_bus_attach+0x2dc/0x3e0
        [<000000003cf4f7f2>] acpi_bus_attach+0x108/0x3e0
        [<000000003cf4f7f2>] acpi_bus_attach+0x108/0x3e0
        [<000000002968643e>] acpi_bus_scan+0xb0/0x110
        [<0000000010dd0bd7>] acpi_scan_init+0x1a8/0x410
        [<00000000965b3c5a>] acpi_init+0x408/0x49c
        [<00000000ed4b9fe2>] do_one_initcall+0x178/0x7f4
        [<00000000a5ac5a74>] kernel_init_freeable+0x9d4/0xa9c
        [<0000000070ea6c15>] kernel_init+0x18/0x138
        [<00000000fb8fff06>] ret_from_fork+0x10/0x1c
        [<0000000041273a0d>] 0xffffffffffffffff
    
    Then, faddr2line pointed out this line,
    
    /*
     * This memory isn't freed when the device is put,
     * I don't have a nice idea for that though.  Conceptually
     * dma_mask in struct device should not be a pointer.
     * See http://thread.gmane.org/gmane.linux.kernel.pci/9081
     */
    pdev->dev.dma_mask =
            kmalloc(sizeof(*pdev->dev.dma_mask), GFP_KERNEL);
    
    Since this leak has existed for more than 8 years and it does not
    reference other parts of the memory, let kmemleak ignore it, so users
    don't need to waste time reporting this in the future.
    
    Link: http://lkml.kernel.org/r/20181206160751.36211-1-cai@gmx.us
    Signed-off-by: Qian Cai <cai@gmx.us>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "Rafael J . Wysocki" <rafael.j.wysocki@intel.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c2ec471cf5f8a5ddd7c66a739ae575b30b6341e
Author: Yi Wang <wang.yi59@zte.com.cn>
Date:   Thu Jan 3 15:28:03 2019 -0800

    fork: fix some -Wmissing-prototypes warnings
    
    [ Upstream commit fb5bf31722d0805a3f394f7d59f2e8cd07acccb7 ]
    
    We get a warning when building kernel with W=1:
    
      kernel/fork.c:167:13: warning: no previous prototype for `arch_release_thread_stack' [-Wmissing-prototypes]
      kernel/fork.c:779:13: warning: no previous prototype for `fork_init' [-Wmissing-prototypes]
    
    Add the missing declaration in head file to fix this.
    
    Also, remove arch_release_thread_stack() completely because no arch
    seems to implement it since bb9d81264 (arch: remove tile port).
    
    Link: http://lkml.kernel.org/r/1542170087-23645-1-git-send-email-wang.yi59@zte.com.cn
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afe13dc9835a4ca5bd44f74fdc6e8b3a8b6dd402
Author: Huang Shijie <sjhuang@iluvatar.ai>
Date:   Thu Jan 3 15:26:51 2019 -0800

    lib/genalloc.c: use vzalloc_node() to allocate the bitmap
    
    [ Upstream commit 6862d2fc81859f88c1f3f660886427893f2b4f3f ]
    
    Some devices may have big memory on chip, such as over 1G.  In some
    cases, the nbytes maybe bigger then 4M which is the bounday of the
    memory buddy system (4K default).
    
    So use vzalloc_node() to allocate the bitmap.  Also use vfree to free
    it.
    
    Link: http://lkml.kernel.org/r/20181225015701.6289-1-sjhuang@iluvatar.ai
    Signed-off-by: Huang Shijie <sjhuang@iluvatar.ai>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Alexey Skidanov <alexey.skidanov@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 525ef5687c35eda312a7add8a221580d0c4aee55
Author: Alexey Skidanov <alexey.skidanov@intel.com>
Date:   Thu Jan 3 15:26:44 2019 -0800

    lib/genalloc.c: fix allocation of aligned buffer from non-aligned chunk
    
    [ Upstream commit 52fbf1134d479234d7e64ba9dcbaea23405f229e ]
    
    gen_pool_alloc_algo() uses different allocation functions implementing
    different allocation algorithms.  With gen_pool_first_fit_align()
    allocation function, the returned address should be aligned on the
    requested boundary.
    
    If chunk start address isn't aligned on the requested boundary, the
    returned address isn't aligned too.  The only way to get properly
    aligned address is to initialize the pool with chunks aligned on the
    requested boundary.  If want to have an ability to allocate buffers
    aligned on different boundaries (for example, 4K, 1MB, ...), the chunk
    start address should be aligned on the max possible alignment.
    
    This happens because gen_pool_first_fit_align() looks for properly
    aligned memory block without taking into account the chunk start address
    alignment.
    
    To fix this, we provide chunk start address to
    gen_pool_first_fit_align() and change its implementation such that it
    starts looking for properly aligned block with appropriate offset
    (exactly as is done in CMA).
    
    Link: https://lkml.kernel.org/lkml/a170cf65-6884-3592-1de9-4c235888cc8a@intel.com
    Link: http://lkml.kernel.org/r/1541690953-4623-1-git-send-email-alexey.skidanov@intel.com
    Signed-off-by: Alexey Skidanov <alexey.skidanov@intel.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Logan Gunthorpe <logang@deltatee.com>
    Cc: Daniel Mentz <danielmentz@google.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a439b577e36e8f6a9452c3731d2a6a088a85c33
Author: Wei Yang <richard.weiyang@gmail.com>
Date:   Fri Dec 28 00:34:36 2018 -0800

    vmscan: return NODE_RECLAIM_NOSCAN in node_reclaim() when CONFIG_NUMA is n
    
    [ Upstream commit 8b09549c2bfd9f3f8f4cdad74107ef4f4ff9cdd7 ]
    
    Commit fa5e084e43eb ("vmscan: do not unconditionally treat zones that
    fail zone_reclaim() as full") changed the return value of
    node_reclaim().  The original return value 0 means NODE_RECLAIM_SOME
    after this commit.
    
    While the return value of node_reclaim() when CONFIG_NUMA is n is not
    changed.  This will leads to call zone_watermark_ok() again.
    
    This patch fixes the return value by adjusting to NODE_RECLAIM_NOSCAN.
    Since node_reclaim() is only called in page_alloc.c, move it to
    mm/internal.h.
    
    Link: http://lkml.kernel.org/r/20181113080436.22078-1-richard.weiyang@gmail.com
    Signed-off-by: Wei Yang <richard.weiyang@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c11d159d2fb5f81868454b385694fac1526b99d7
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Fri Dec 28 00:32:53 2018 -0800

    ocfs2: clear journal dirty flag after shutdown journal
    
    [ Upstream commit d85400af790dba2aa294f0a77e712f166681f977 ]
    
    Dirty flag of the journal should be cleared at the last stage of umount,
    if do it before jbd2_journal_destroy(), then some metadata in uncommitted
    transaction could be lost due to io error, but as dirty flag of journal
    was already cleared, we can't find that until run a full fsck.  This may
    cause system panic or other corruption.
    
    Link: http://lkml.kernel.org/r/20181121020023.3034-3-junxiao.bi@oracle.com
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Reviewed-by: Yiwen Jiang <jiangyiwen@huawei.com>
    Reviewed-by: Joseph Qi <jiangqi903@gmail.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6082b56e9eddfc23e432ff63fc092413992d2d2
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Wed Dec 26 16:28:30 2018 +0800

    net/wan/fsl_ucc_hdlc: Avoid double free in ucc_hdlc_probe()
    
    [ Upstream commit 40752b3eae29f8ca2378e978a02bd6dbeeb06d16 ]
    
    This patch fixes potential double frees if register_hdlc_device() fails.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Reviewed-by: Peng Hao <peng.hao2@zte.com.cn>
    CC: Zhao Qiang <qiang.zhao@nxp.com>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: netdev@vger.kernel.org
    CC: linuxppc-dev@lists.ozlabs.org
    CC: linux-kernel@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 709f50b180528ad1e89d9a8ad59cc81a85937bb8
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Wed Dec 26 00:09:04 2018 -0600

    tipc: fix a missing check of genlmsg_put
    
    [ Upstream commit 46273cf7e009231d2b6bc10a926e82b8928a9fb2 ]
    
    genlmsg_put could fail. The fix inserts a check of its return value, and
    if it fails, returns -EMSGSIZE.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4bc476bd09e09d8f854dd8b7dcb60cb0c4dfafe
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Dec 25 22:23:19 2018 -0600

    atl1e: checking the status of atl1e_write_phy_reg
    
    [ Upstream commit ff07d48d7bc0974d4f96a85a4df14564fb09f1ef ]
    
    atl1e_write_phy_reg() could fail. The fix issues an error message when
    it fails.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04e35269d5d34ad5e4e13105048c77b872438e02
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Dec 25 22:08:18 2018 -0600

    net: dsa: bcm_sf2: Propagate error value from mdio_write
    
    [ Upstream commit e49505f7255be8ced695919c08a29bf2c3d79616 ]
    
    Both bcm_sf2_sw_indir_rw and mdiobus_write_nested could fail, so let's
    return their error codes upstream.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f2a742cea6d028c703f53fb57919c101e6aef12
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Dec 25 20:57:14 2018 -0600

    net: stmicro: fix a missing check of clk_prepare
    
    [ Upstream commit f86a3b83833e7cfe558ca4d70b64ebc48903efec ]
    
    clk_prepare() could fail, so let's check its status, and if it fails,
    return its error code upstream.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3092e216b75397f09611a6d409476e5d7e8a75c2
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Dec 25 20:55:37 2018 -0600

    net: (cpts) fix a missing check of clk_prepare
    
    [ Upstream commit 2d822f2dbab7f4c820f72eb8570aacf3f35855bd ]
    
    clk_prepare() could fail, so let's check its status, and if it fails,
    return its error code upstream.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 212c573efd8ff7a4351675a35d6bc59e6c2a9f3d
Author: Richard Weinberger <richard@nod.at>
Date:   Tue Oct 30 12:58:12 2018 +0100

    um: Make GCOV depend on !KCOV
    
    [ Upstream commit 550ed0e2036663b35cec12374b835444f9c60454 ]
    
    Both do more or less the same thing and are mutually exclusive.
    If both are enabled the build will fail.
    Sooner or later we can kill UML's GCOV.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ccb647772d94c8a5f006f2f1df877e93e7b06d7
Author: Chao Yu <chao@kernel.org>
Date:   Tue Dec 18 19:20:17 2018 +0800

    f2fs: fix to dirty inode synchronously
    
    [ Upstream commit b32e019049e959ee10ec359893c9dd5d057dad55 ]
    
    If user change inode's i_flags via ioctl, let's add it into global
    dirty list, so that checkpoint can guarantee its persistence before
    fsync, it can make checkpoint keeping strong consistency.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 145422360a329f12f8c19ddad5edb178625966ee
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sun Dec 23 19:42:38 2018 -0600

    net/net_namespace: Check the return value of register_pernet_subsys()
    
    [ Upstream commit 0eb987c874dc93f9c9d85a6465dbde20fdd3884c ]
    
    In net_ns_init(), register_pernet_subsys() could fail while registering
    network namespace subsystems. The fix checks the return value and
    sends a panic() on failure.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffe6754349892403d348eb5793aaf278a12aa414
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sun Dec 23 18:54:53 2018 -0600

    net/netlink_compat: Fix a missing check of nla_parse_nested
    
    [ Upstream commit 89dfd0083751d00d5d7ead36f6d8b045bf89c5e1 ]
    
    In tipc_nl_compat_sk_dump(), if nla_parse_nested() fails, it could return
    an error. To be consistent with other invocations of the function call,
    on error, the fix passes the return value upstream.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e5d1310f341064b9325d93fee11221708aa6e67
Author: Alexander Shiyan <shc_work@mail.ru>
Date:   Wed Dec 19 13:39:24 2018 +0300

    pwm: clps711x: Fix period calculation
    
    [ Upstream commit b0f17570b8203c22f139459c86cfbaa0311313ed ]
    
    Commit e39c0df1be5a ("pwm: Introduce the pwm_args concept") has
    changed the variable for the period for clps711x-pwm driver, so now
    pwm_get/set_period() works with pwm->state.period variable instead
    of pwm->args.period.
    This patch changes the period variable in other places where it is used.
    
    Signed-off-by: Alexander Shiyan <shc_work@mail.ru>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97dbfe465b0435c79733b9231110c98e4c00f630
Author: Fabio Estevam <festevam@gmail.com>
Date:   Thu Dec 13 07:52:32 2018 -0200

    crypto: mxc-scc - fix build warnings on ARM64
    
    [ Upstream commit 2326828ee40357b3d2b1359b8ca7526af201495b ]
    
    The following build warnings are seen when building for ARM64 allmodconfig:
    
    drivers/crypto/mxc-scc.c:181:20: warning: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' {aka 'long unsigned int'} [-Wformat=]
    drivers/crypto/mxc-scc.c:186:21: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t' {aka 'long unsigned int'} [-Wformat=]
    drivers/crypto/mxc-scc.c:277:21: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t' {aka 'long unsigned int'} [-Wformat=]
    drivers/crypto/mxc-scc.c:339:3: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
    drivers/crypto/mxc-scc.c:340:3: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
    
    Fix them by using the %zu specifier to print a size_t variable and using
    a plain %x to print the result of a readl().
    
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2936c4f8aaf349fcd3e4581fdd72d530ce123448
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Nov 27 19:16:44 2018 +1100

    powerpc/pseries: Fix node leak in update_lmb_associativity_index()
    
    [ Upstream commit 47918bc68b7427e961035949cc1501a864578a69 ]
    
    In update_lmb_associativity_index() we lookup dr_node using
    of_find_node_by_path() which takes a reference for us. In the
    non-error case we forget to drop the reference. Note that
    find_aa_index() does modify properties of the node, but doesn't need
    an extra reference held once it's returned.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2885cf0d501fa480009ecc2deefb2802ce354b6e
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Mon Dec 10 11:41:29 2018 +0000

    powerpc/83xx: handle machine check caused by watchdog timer
    
    [ Upstream commit 0deae39cec6dab3a66794f3e9e83ca4dc30080f1 ]
    
    When the watchdog timer is set in interrupt mode, it causes a
    machine check when it times out. The purpose of this mode is to
    ease debugging, not to crash the kernel and reboot the machine.
    
    This patch implements a special handling for that, in order to not
    crash the kernel if the watchdog times out while in interrupt or
    within the idle task.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    [scottwood: added missing #include]
    Signed-off-by: Scott Wood <oss@buserror.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a8fb5b9fd37157b5017e1a8a5a6fe7946aa4df6
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Fri Dec 21 00:29:19 2018 -0600

    regulator: tps65910: fix a missing check of return value
    
    [ Upstream commit cd07e3701fa6a4c68f8493ee1d12caa18d46ec6a ]
    
    tps65910_reg_set_bits() may fail. The fix checks if it fails, and if so,
    returns with its error code.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94848ffd66c2ddcb725a296b71b5f8dbe2cbeaa2
Author: Parav Pandit <parav@mellanox.com>
Date:   Fri Dec 14 00:32:42 2018 -0600

    IB/rxe: Make counters thread safe
    
    [ Upstream commit d5108e69fe013ff47ab815b849caba9cc33ca1e5 ]
    
    Current rxe device counters are not thread safe.
    When multiple QPs are used, they can be racy.
    Make them thread safe by making it atomic64.
    
    Fixes: 0b1e5b99a48b ("IB/rxe: Add port protocol stats")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a2dfdab05f913eb0cc3e4494d9e8d9d869c3611
Author: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Date:   Thu Dec 20 17:23:39 2018 +0100

    drbd: fix print_st_err()'s prototype to match the definition
    
    [ Upstream commit 2c38f035117331eb78d0504843c79ea7c7fabf37 ]
    
    print_st_err() is defined with its 4th argument taking an
    'enum drbd_state_rv' but its prototype use an int for it.
    
    Fix this by using 'enum drbd_state_rv' in the prototype too.
    
    Signed-off-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Signed-off-by: Roland Kammerer <roland.kammerer@linbit.com>
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 262b7951cdf19bb112332f8811f7143647c783df
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Thu Dec 20 17:23:37 2018 +0100

    drbd: do not block when adjusting "disk-options" while IO is frozen
    
    [ Upstream commit f708bd08ecbdc23d03aaedf5b3311ebe44cfdb50 ]
    
    "suspending" IO is overloaded.
    It can mean "do not allow new requests" (obviously),
    but it also may mean "must not complete pending IO",
    for example while the fencing handlers do their arbitration.
    
    When adjusting disk options, we suspend io (disallow new requests), then
    wait for the activity-log to become unused (drain all IO completions),
    and possibly replace it with a new activity log of different size.
    
    If the other "suspend IO" aspect is active, pending IO completions won't
    happen, and we would block forever (unkillable drbdsetup process).
    
    Fix this by skipping the activity log adjustment if the "al-extents"
    setting did not change. Also, in case it did change, fail early without
    blocking if it looks like we would block forever.
    
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3be18effa2147010a0ef8fee8e58e121c5c5ea8
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Thu Dec 20 17:23:35 2018 +0100

    drbd: reject attach of unsuitable uuids even if connected
    
    [ Upstream commit fe43ed97bba3b11521abd934b83ed93143470e4f ]
    
    Multiple failure scenario:
    a) all good
       Connected Primary/Secondary UpToDate/UpToDate
    b) lose disk on Primary,
       Connected Primary/Secondary Diskless/UpToDate
    c) continue to write to the device,
       changes only make it to the Secondary storage.
    d) lose disk on Secondary,
       Connected Primary/Secondary Diskless/Diskless
    e) now try to re-attach on Primary
    
    This would have succeeded before, even though that is clearly the
    wrong data set to attach to (missing the modifications from c).
    Because we only compared our "effective" and the "to-be-attached"
    data generation uuid tags if (device->state.conn < C_CONNECTED).
    
    Fix: change that constraint to (device->state.pdsk != D_UP_TO_DATE)
    compare the uuids, and reject the attach.
    
    This patch also tries to improve the reverse scenario:
    first lose Secondary, then Primary disk,
    then try to attach the disk on Secondary.
    
    Before this patch, the attach on the Secondary succeeds, but since commit
    drbd: disconnect, if the wrong UUIDs are attached on a connected peer
    the Primary will notice unsuitable data, and drop the connection hard.
    
    Though unfortunately at a point in time during the handshake where
    we cannot easily abort the attach on the peer without more
    refactoring of the handshake.
    
    We now reject any attach to "unsuitable" uuids,
    as long as we can see a Primary role,
    unless we already have access to "good" data.
    
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f76565605852d998c0ba92b5f33a875a97debade
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Thu Dec 20 17:23:31 2018 +0100

    drbd: ignore "all zero" peer volume sizes in handshake
    
    [ Upstream commit 94c43a13b8d6e3e0dd77b3536b5e04a84936b762 ]
    
    During handshake, if we are diskless ourselves, we used to accept any size
    presented by the peer.
    
    Which could be zero if that peer was just brought up and connected
    to us without having a disk attached first, in which case both
    peers would just "flip" their volume sizes.
    
    Now, even a diskless node will ignore "zero" sizes
    presented by a diskless peer.
    
    Also a currently Diskless Primary will refuse to shrink during handshake:
    it may be frozen, and waiting for a "suitable" local disk or peer to
    re-appear (on-no-data-accessible suspend-io). If the peer is smaller
    than what we used to be, it is not suitable.
    
    The logic for a diskless node during handshake is now supposed to be:
    believe the peer, if
     - I don't have a current size myself
     - we agree on the size anyways
     - I do have a current size, am Secondary, and he has the only disk
     - I do have a current size, am Primary, and he has the only disk,
       which is larger than my current size
    
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a355ad546e7b9464f19a424ed4efe2d0139a31f1
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Mon Nov 19 15:25:17 2018 +1100

    powerpc/powernv/eeh/npu: Fix uninitialized variables in opal_pci_eeh_freeze_status
    
    [ Upstream commit c20577014f85f36d4e137d3d52a1f61225b4a3d2 ]
    
    The current implementation of the OPAL_PCI_EEH_FREEZE_STATUS call in
    skiboot's NPU driver does not touch the pci_error_type parameter so
    it might have garbage but the powernv code analyzes it nevertheless.
    
    This initializes pcierr and fstate to zero in all call sites.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Sam Bobroff <sbobroff@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a0d07f81e7e38ad063f9f94edcb812dff868a4f
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Tue Oct 2 13:22:31 2018 +1000

    vfio/spapr_tce: Get rid of possible infinite loop
    
    [ Upstream commit 517ad4ae8aa93dccdb9a88c27257ecb421c9e848 ]
    
    As a part of cleanup, the SPAPR TCE IOMMU subdriver releases preregistered
    memory. If there is a bug in memory release, the loop in
    tce_iommu_release() becomes infinite; this actually happened to me.
    
    This makes the loop finite and prints a warning on every failure to make
    the code more bug prone.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Acked-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fc4b8531e870c28d2da90b5ced666456e4cfa38
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Tue Dec 11 13:27:33 2018 +1100

    powerpc/44x/bamboo: Fix PCI range
    
    [ Upstream commit 3cfb9ebe906b51f2942b1e251009bb251efd2ba6 ]
    
    The bamboo dts has a bug: it uses a non-naturally aligned range
    for PCI memory space. This isnt' supported by the code, thus
    causing PCI to break on this system.
    
    This is due to the fact that while the chip memory map has 1G
    reserved for PCI memory, it's only 512M aligned. The code doesn't
    know how to split that into 2 different PMMs and fails, so limit
    the region to 512M.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b862fa12bf28136c8049e1dc0ae629efbfbbb11b
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Dec 14 15:23:33 2018 +0000

    powerpc/mm: Make NULL pointer deferences explicit on bad page faults.
    
    [ Upstream commit 49a502ea23bf9dec47f8f3c3960909ff409cd1bb ]
    
    As several other arches including x86, this patch makes it explicit
    that a bad page fault is a NULL pointer dereference when the fault
    address is lower than PAGE_SIZE
    
    In the mean time, this page makes all bad_page_fault() messages
    shorter so that they remain on one single line. And it prefixes them
    by "BUG: " so that they get easily grepped.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    [mpe: Avoid pr_cont()]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f95eb11d2d0d34b06ab1c5bce18237d68fedd2d
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Dec 14 10:27:47 2018 +0000

    powerpc/prom: fix early DEBUG messages
    
    [ Upstream commit b18f0ae92b0a1db565c3e505fa87b6971ad3b641 ]
    
    This patch fixes early DEBUG messages in prom.c:
    - Use %px instead of %p to see the addresses
    - Cast memblock_phys_mem_size() with (unsigned long long) to
    avoid build failure when phys_addr_t is not 64 bits.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a910cb308dc5c63c52c671eb14926fdc35c948cf
Author: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
Date:   Mon Oct 9 19:42:40 2017 +0530

    powerpc/perf: Fix unit_sel/cache_sel checks
    
    [ Upstream commit 2d46d4877b1afd14059393a48bdb8ce27955174c ]
    
    Raw event code has couple of fields "unit" and "cache" in it, to capture
    the "unit" to monitor for a given pmcxsel and cache reload qualifier to
    program in MMCR1.
    
    isa207_get_constraint() refers "unit" field to update the MMCRC (L2/L3)
    Event bus control fields with "cache" bits of the raw event code.
    These are power8 specific and not supported by PowerISA v3.0 pmu. So wrap
    the checks to be power8 specific. Also, "cache" bit field is referred to
    update MMCR1[16:17] and this check can be power8 specific.
    
    Fixes: 7ffd948fae4cd ('powerpc/perf: factor out power8 pmu functions')
    Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e477ef5cddfa70e7f66b06bc517b7bd0edc424d
Author: Kyle Roeschley <kyle.roeschley@ni.com>
Date:   Wed Dec 5 09:43:13 2018 +0200

    ath6kl: Fix off by one error in scan completion
    
    [ Upstream commit 5803c12816c43bd09e5f4247dd9313c2d9a2c41b ]
    
    When ath6kl was reworked to share code between regular and scheduled scans
    in commit 3b8ffc6a22ba ("ath6kl: Configure probed SSID list consistently"),
    probed SSID entry changed from 1-index to 0-indexed. However,
    ath6kl_cfg80211_scan_complete_event() was missed in that change. Fix its
    indexing so that we correctly clear out the probed SSID list.
    
    Signed-off-by: Kyle Roeschley <kyle.roeschley@ni.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e44926f59412c5867cd31a4bd47dafdbfb53577d
Author: Kyle Roeschley <kyle.roeschley@ni.com>
Date:   Wed Dec 5 09:43:11 2018 +0200

    ath6kl: Only use match sets when firmware supports it
    
    [ Upstream commit fb376a495fbdb886f38cfaf5a3805401b9e46f13 ]
    
    Commit dd45b7598f1c ("ath6kl: Include match ssid list in scheduled scan")
    merged the probed and matched SSID lists before sending them to the
    firmware. In the process, it assumed match set support is always available
    in ath6kl_set_probed_ssids, which breaks scans for hidden SSIDs. Now, check
    that the firmware supports matching SSIDs in scheduled scans before setting
    MATCH_SSID_FLAG.
    
    Fixes: dd45b7598f1c ("ath6kl: Include match ssid list in scheduled scan")
    Signed-off-by: Kyle Roeschley <kyle.roeschley@ni.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0a23cf647fdf3088f879c9520bbcc593477cf06
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed Dec 19 15:42:50 2018 +0530

    scsi: csiostor: fix incorrect dma device in case of vport
    
    [ Upstream commit 9934613edcb40b92a216122876cd3b7e76d08390 ]
    
    In case of ->vport_create() call scsi_add_host_with_dma() instead of
    scsi_add_host() to pass correct dma device.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed5ba2cc5bf99f76ec3bcfd9eac3fa3b9c11096c
Author: Anatoliy Glagolev <glagolig@gmail.com>
Date:   Thu Dec 6 16:48:45 2018 -0700

    scsi: qla2xxx: deadlock by configfs_depend_item
    
    [ Upstream commit 17b18eaa6f59044a5172db7d07149e31ede0f920 ]
    
    The intent of invoking configfs_depend_item in commit 7474f52a82d51
    ("tcm_qla2xxx: Perform configfs depend/undepend for base_tpg")
    was to prevent a physical Fibre Channel port removal when
    virtual (NPIV) ports announced through that physical port are active.
    The change does not work as expected: it makes enabled physical port
    dependent on target configfs subsystem (the port's parent), something
    the configfs guarantees anyway.
    
    Besides, scheduling work in a worker thread and waiting for the work's
    completion is not really a valid workaround for the requirement not to call
    configfs_depend_item from a configfs callback: the call occasionally
    deadlocks.
    
    Thus, removing configfs_depend_item calls does not break anything and fixes
    the deadlock problem.
    
    Signed-off-by: Anatoliy Glagolev <glagolig@gmail.com>
    Acked-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b7152c9eadb11a5b179310a4c4f78c17cf96de1
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Dec 17 13:20:36 2018 -0800

    RDMA/srp: Propagate ib_post_send() failures to the SCSI mid-layer
    
    [ Upstream commit 2ee00f6a98c36f7e4ba07cc33f24cc5a69060cc9 ]
    
    This patch avoids that the SCSI mid-layer keeps retrying forever if
    ib_post_send() fails. This was discovered while testing immediate
    data support and passing a too large num_sge value to ib_post_send().
    
    Cc: Sergey Gorenko <sergeygo@mellanox.com>
    Cc: Max Gurtovoy <maxg@mellanox.com>
    Cc: Laurence Oberman <loberman@redhat.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcf9cabb99bf316ccddbe3436419b00399590a9e
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Mon Dec 3 13:20:47 2018 +0100

    openrisc: Fix broken paths to arch/or32
    
    [ Upstream commit 57ce8ba0fd3a95bf29ed741df1c52bd591bf43ff ]
    
    OpenRISC was mainlined as "openrisc", not "or32".
    vmlinux.lds is generated from vmlinux.lds.S.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 077d87993053a743ddf29540ab9a75928e6cf27c
Author: Alexander Shiyan <shc_work@mail.ru>
Date:   Wed Dec 19 14:19:20 2018 +0300

    serial: max310x: Fix tx_empty() callback
    
    [ Upstream commit a8da3c7873ea57acb8f9cea58c0af477522965aa ]
    
    Function max310x_tx_empty() accesses the IRQSTS register, which is
    cleared by IC when reading, so if there is an interrupt status, we
    will lose it. This patch implement the transmitter check only by
    the current FIFO level.
    
    Signed-off-by: Alexander Shiyan <shc_work@mail.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6418ce8b8526b03d04f79816eb412b9907425bc
Author: Jonathan Bakker <xc-racer2@live.ca>
Date:   Wed Dec 19 12:22:28 2018 +0100

    Bluetooth: hci_bcm: Handle specific unknown packets after firmware loading
    
    [ Upstream commit 22bba80500fdf624a7cfbb65fdfa97a038ae224d ]
    
    The Broadcom controller on aries S5PV210 boards sends out a couple of
    unknown packets after the firmware is loaded.  This will cause
    logging of errors such as:
            Bluetooth: hci0: Frame reassembly failed (-84)
    
    This is probably also the case with other boards, as there are related
    Android userspace patches for custom ROMs such as
    https://review.lineageos.org/#/c/LineageOS/android_system_bt/+/142721/
    Since this appears to be intended behaviour, treated them as diagnostic
    packets.
    
    Note that this is another variant of commit 01d5e44ace8a
    ("Bluetooth: hci_bcm: Handle empty packet after firmware loading")
    
    Signed-off-by: Jonathan Bakker <xc-racer2@live.ca>
    Signed-off-by: Paweł Chmiel <pawel.mikolaj.chmiel@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b63cd67875dda7d041f0febc2bb5453361b8b101
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Tue Dec 18 23:04:13 2018 -0600

    drivers/regulator: fix a missing check of return value
    
    [ Upstream commit 966e927bf8cc6a44f8b72582a1d6d3ffc73b12ad ]
    
    If palmas_smps_read() fails, we should not use the read data in "reg"
    which may contain random value. The fix inserts a check for the return
    value of palmas_smps_read(): If it fails, we return the error code
    upstream and stop using "reg".
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f871fc2e6ad9a83f30343a7ebfee2130cad4c496
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Nov 16 17:31:08 2018 +0000

    powerpc/xmon: fix dump_segments()
    
    [ Upstream commit 32c8c4c621897199e690760c2d57054f8b84b6e6 ]
    
    mfsrin() takes segment num from bits 31-28 (IBM bits 0-3).
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    [mpe: Clarify bit numbering]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2585fe4893a0c4c18f0727a8185c5281c8a7c59e
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Nov 16 17:27:42 2018 +0000

    powerpc/book3s/32: fix number of bats in p/v_block_mapped()
    
    [ Upstream commit e93ba1b7eb5b188c749052df7af1c90821c5f320 ]
    
    This patch fixes the loop in p_block_mapped() and v_block_mapped()
    to scan the entire bat_addrs[] array.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ab07796de822dced31e4522ee1b4691b14c3cf9
Author: Petr Machata <petrm@mellanox.com>
Date:   Tue Dec 18 13:16:00 2018 +0000

    vxlan: Fix error path in __vxlan_dev_create()
    
    [ Upstream commit 6db9246871394b3a136cd52001a0763676563840 ]
    
    When a failure occurs in rtnl_configure_link(), the current code
    calls unregister_netdevice() to roll back the earlier call to
    register_netdevice(), and jumps to errout, which calls
    vxlan_fdb_destroy().
    
    However unregister_netdevice() calls transitively ndo_uninit, which is
    vxlan_uninit(), and that already takes care of deleting the default FDB
    entry by calling vxlan_fdb_delete_default(). Since the entry added
    earlier in __vxlan_dev_create() is exactly the default entry, the
    cleanup code in the errout block always leads to double free and thus a
    panic.
    
    Besides, since vxlan_fdb_delete_default() always destroys the FDB entry
    with notification enabled, the deletion of the default entry is notified
    even before the addition was notified.
    
    Instead, move the unregister_netdevice() call after the manual destroy,
    which solves both problems.
    
    Fixes: 0241b836732f ("vxlan: fix default fdb entry netlink notify ordering during netdev create")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit befe38cd27eacd0e77c760183fc526f3806f9fde
Author: Tao Ren <taoren@fb.com>
Date:   Wed Oct 3 14:53:50 2018 -0700

    clocksource/drivers/fttmr010: Fix invalid interrupt register access
    
    [ Upstream commit 86fe57fc47b17b3528fa5497fc57e158d846c4ea ]
    
    TIMER_INTR_MASK register (Base Address of Timer + 0x38) is not designed
    for masking interrupts on ast2500 chips, and it's not even listed in
    ast2400 datasheet, so it's not safe to access TIMER_INTR_MASK on aspeed
    chips.
    
    Similarly, TIMER_INTR_STATE register (Base Address of Timer + 0x34) is
    not interrupt status register on ast2400 and ast2500 chips. Although
    there is no side effect to reset the register in fttmr010_common_init(),
    it's just misleading to do so.
    
    Besides, "count_down" is renamed to "is_aspeed" in "fttmr010" structure,
    and more comments are added so the code is more readble.
    
    Signed-off-by: Tao Ren <taoren@fb.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 652904f9337fd43e15437b91cd9a26d1d0a49676
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Dec 17 10:05:36 2018 +0300

    IB/qib: Fix an error code in qib_sdma_verbs_send()
    
    [ Upstream commit 5050ae5fa3d54c8e83e1e447cc7e3591110a7f57 ]
    
    We accidentally return success on this error path.
    
    Fixes: f931551bafe1 ("IB/qib: Add new qib driver for QLogic PCIe InfiniBand adapters")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cc7f4c628d92275572683219ea5e34580bd83bd
Author: Nick Bowler <nbowler@draconx.ca>
Date:   Mon Dec 17 09:35:27 2018 -0800

    xfs: Fix bulkstat compat ioctls on x32 userspace.
    
    [ Upstream commit 7ca860e3c1a74ad6bd8949364073ef1044cad758 ]
    
    The bulkstat family of ioctls are problematic on x32, because there is
    a mixup of native 32-bit and 64-bit conventions.  The xfs_fsop_bulkreq
    struct contains pointers and 32-bit integers so that matches the native
    32-bit layout, and that means the ioctl implementation goes into the
    regular compat path on x32.
    
    However, the 'ubuffer' member of that struct in turn refers to either
    struct xfs_inogrp or xfs_bstat (or an array of these).  On x32, those
    structures match the native 64-bit layout.  The compat implementation
    writes out the 32-bit version of these structures.  This is not the
    expected format for x32 userspace, causing problems.
    
    Fortunately the functions which actually output these xfs_inogrp and
    xfs_bstat structures have an easy way to select which output format
    is required, so we just need a little tweak to select the right format
    on x32.
    
    Signed-off-by: Nick Bowler <nbowler@draconx.ca>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05ec56052bb9f14986b3ff0b05518f2a91874c0f
Author: Nick Bowler <nbowler@draconx.ca>
Date:   Mon Dec 17 09:35:27 2018 -0800

    xfs: Align compat attrlist_by_handle with native implementation.
    
    [ Upstream commit c456d64449efe37da50832b63d91652a85ea1d20 ]
    
    While inspecting the ioctl implementations, I noticed that the compat
    implementation of XFS_IOC_ATTRLIST_BY_HANDLE does not do exactly the
    same thing as the native implementation.  Specifically, the "cursor"
    does not appear to be written out to userspace on the compat path,
    like it is on the native path.
    
    This adjusts the compat implementation to copy out the cursor just
    like the native implementation does.  The attrlist cursor does not
    require any special compat handling.  This fixes xfstests xfs/269
    on both IA-32 and x32 userspace, when running on an amd64 kernel.
    
    Signed-off-by: Nick Bowler <nbowler@draconx.ca>
    Fixes: 0facef7fb053b ("xfs: in _attrlist_by_handle, copy the cursor back to userspace")
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fff825f248888723a2aec73d031754098bf3ebf1
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Tue Dec 18 08:29:32 2018 -0600

    gfs2: take jdata unstuff into account in do_grow
    
    [ Upstream commit bc0205612bbd4dd4026d4ba6287f5643c37366ec ]
    
    Before this patch, function do_grow would not reserve enough journal
    blocks in the transaction to unstuff jdata files while growing them.
    This patch adds the logic to add one more block if the file to grow
    is jdata.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Reviewed-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6cd92fcabd6cc78bb1808c6a18245c842722fc1
Author: Sweet Tea <sweettea@redhat.com>
Date:   Tue Nov 13 08:04:24 2018 -0500

    dm flakey: Properly corrupt multi-page bios.
    
    [ Upstream commit a00f5276e26636cbf72f24f79831026d2e2868e7 ]
    
    The flakey target is documented to be able to corrupt the Nth byte in
    a bio, but does not corrupt byte indices after the first biovec in the
    bio. Change the corrupting function to actually corrupt the Nth byte
    no matter in which biovec that index falls.
    
    A test device generating two-page bios, atop a flakey device configured
    to corrupt a byte index on the second page, verified both the failure
    to corrupt before this patch and the expected corruption after this
    change.
    
    Signed-off-by: John Dorminy <jdorminy@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b2db05c8e561a53494fcac016d145dcfaa4fa7f
Author: Peter Hutterer <peter.hutterer@who-t.net>
Date:   Thu Dec 13 11:28:51 2018 +1000

    HID: doc: fix wrong data structure reference for UHID_OUTPUT
    
    [ Upstream commit 46b14eef59a8157138dc02f916a7f97c73b3ec53 ]
    
    Signed-off-by: Peter Hutterer <peter.hutterer@who-t.net>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 449c108f09d83bd2e57f11a240213f3320e9edb0
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 13 14:41:11 2018 +0100

    pinctrl: sh-pfc: sh7734: Fix shifted values in IPSR10
    
    [ Upstream commit 054f2400f706327f96770219c3065b5131f8f154 ]
    
    Some values in the Peripheral Function Select Register 10 descriptor are
    shifted by one position, which may cause a peripheral function to be
    programmed incorrectly.
    
    Fixing this makes all HSCIF0 pins use Function 4 (value 3), like was
    already the case for the HSCK0 pin in field IP10[5:3].
    
    Fixes: ac1ebc2190f575fc ("sh-pfc: Add sh7734 pinmux support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9714561e561d8a7c3c8c65f3743e617bed9a686f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Dec 13 14:09:56 2018 +0100

    pinctrl: sh-pfc: sh7264: Fix PFCR3 and PFCR0 register configuration
    
    [ Upstream commit 1b99d0c80bbe1810572c2cb77b90f67886adfa8d ]
    
    The Port F Control Register 3 (PFCR3) contains only a single field.
    However, counting from left to right, it is the fourth field, not the
    first field.
    Insert the missing dummy configuration values (3 fields of 16 values) to
    fix this.
    
    The descriptor for the Port F Control Register 0 (PFCR0) lacks the
    description for the 4th field (PF0 Mode, PF0MD[2:0]).
    Add the missing configuration values to fix this.
    
    Fixes: a8d42fc4217b1ea1 ("sh-pfc: Add sh7264 pinmux support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdf2e054bb9ddbcbf5d11567bb36802381fecede
Author: Michael Mueller <mimu@linux.ibm.com>
Date:   Fri Nov 30 15:32:06 2018 +0100

    KVM: s390: unregister debug feature on failing arch init
    
    [ Upstream commit 308c3e6673b012beecb96ef04cc65f4a0e7cdd99 ]
    
    Make sure the debug feature and its allocated resources get
    released upon unsuccessful architecture initialization.
    
    A related indication of the issue will be reported as kernel
    message.
    
    Signed-off-by: Michael Mueller <mimu@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Pierre Morel <pmorel@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Message-Id: <20181130143215.69496-2-mimu@linux.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2135588adb3cd6660ed8d5f0815607f1bf768165
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Sun Dec 16 18:46:31 2018 -0500

    bnxt_en: query force speeds before disabling autoneg mode.
    
    [ Upstream commit 56d374624778652d2a999e18c87a25338b127b41 ]
    
    With autoneg enabled, PHY loopback test fails. To disable autoneg,
    driver needs to send a valid forced speed to FW. FW is not sending
    async event for invalid speeds. To fix this, query forced speeds
    and send the correct speed when disabling autoneg mode.
    
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 086d895a99a1b03c4dc3875a8e6f2b001b4a529e
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Sun Dec 16 18:46:28 2018 -0500

    bnxt_en: Return linux standard errors in bnxt_ethtool.c
    
    [ Upstream commit 7c675421afef18253a86ffc383f57bc15ef32ea8 ]
    
    Currently firmware specific errors are returned directly in flash_device
    and reset ethtool hooks. Modify it to return linux standard errors
    to userspace when flashing operations fail.
    
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3cc434913830c35ef2bd9f467f15763a577c3bbc
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Nov 9 22:26:42 2018 -0500

    exofs_mount(): fix leaks on failure exits
    
    [ Upstream commit 26cb5a328c6b2bda9e859307ce4cfc60df3a2c28 ]
    
    ... and don't abuse mount_nodev(), while we are at it.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Reviewed-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2fce585d55ca4b530bc4372f66bfed23abca225
Author: Leon Romanovsky <leon@kernel.org>
Date:   Thu Dec 13 13:15:11 2018 +0200

    net/mlx5: Continue driver initialization despite debugfs failure
    
    [ Upstream commit 199fa087dc6b503baad06712716fac645a983e8a ]
    
    The failure to create debugfs entry is unpleasant event, but not enough
    to abort drier initialization. Align the mlx5_core code to debugfs design
    and continue execution whenever debugfs_create_dir() successes or not.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Reviewed-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db94533f587d7770f1fc6f8659795fbff50fa28a
Author: Martin Schiller <ms@dev.tdt.de>
Date:   Fri Dec 14 08:48:25 2018 +0100

    pinctrl: xway: fix gpio-hog related boot issues
    
    [ Upstream commit 9b4924da4711674e62d97d4f5360446cc78337af ]
    
    This patch is based on commit a86caa9ba5d7 ("pinctrl: msm: fix gpio-hog
    related boot issues").
    
    It fixes the issue that the gpio ranges needs to be defined before
    gpiochip_add().
    
    Therefore, we also have to swap the order of registering the pinctrl
    driver and registering the gpio chip.
    
    You also have to add the "gpio-ranges" property to the pinctrl device
    node to get it finally working.
    
    Signed-off-by: Martin Schiller <ms@dev.tdt.de>
    Acked-by: John Crispin <john@phrozen.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a509ddd2fb1b2bdcbe4596651c68a6eac594ea04
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Oct 19 11:04:27 2018 -0700

    vfio-mdev/samples: Use u8 instead of char for handle functions
    
    [ Upstream commit 8ba35b3a0046d6573c98f00461d9bd1b86250d35 ]
    
    Clang warns:
    
    samples/vfio-mdev/mtty.c:592:39: warning: implicit conversion from 'int'
    to 'char' changes value from 162 to -94 [-Wconstant-conversion]
                    *buf = UART_MSR_DSR | UART_MSR_DDSR | UART_MSR_DCD;
                         ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
    1 warning generated.
    
    Turns out that all uses of buf in this function ultimately end up stored
    or cast to an unsigned type. Just use u8, which has the same number of
    bits but can store this larger number so Clang no longer warns.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e50bf6849f4de99385ba6bbc548cc0ecc86a5cdb
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Fri Dec 14 12:55:45 2018 +0000

    xen/pciback: Check dev_data before using it
    
    [ Upstream commit 1669907e3d1abfa3f7586e2d55dbbc117b5adba2 ]
    
    If pcistub_init_device fails, the release function will be called with
    dev_data set to NULL.  Check it before using it to avoid a NULL pointer
    dereference.
    
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8113c362adcb8735c81f80cf24d781708047ce1
Author: Andrea Righi <righi.andrea@gmail.com>
Date:   Mon Dec 10 16:12:57 2018 +0100

    kprobes/x86/xen: blacklist non-attachable xen interrupt functions
    
    [ Upstream commit bf9445a33ae6ac2f0822d2f1ce1365408387d568 ]
    
    Blacklist symbols in Xen probe-prohibited areas, so that user can see
    these prohibited symbols in debugfs.
    
    See also: a50480cb6d61.
    
    Signed-off-by: Andrea Righi <righi.andrea@gmail.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f8c923839721a9ea266230d99e2b9452efdf434
Author: Darwin Dingel <darwin.dingel@alliedtelesis.co.nz>
Date:   Mon Dec 10 11:29:09 2018 +1300

    serial: 8250: Rate limit serial port rx interrupts during input overruns
    
    [ Upstream commit 6d7f677a2afa1c82d7fc7af7f9159cbffd5dc010 ]
    
    When a serial port gets faulty or gets flooded with inputs, its interrupt
    handler starts to work double time to get the characters to the workqueue
    for the tty layer to handle them. When this busy time on the serial/tty
    subsystem happens during boot, where it is also busy on the userspace
    trying to initialise, some processes can continuously get preempted
    and will be on hold until the interrupts subside.
    
    The fix is to backoff on processing received characters for a specified
    amount of time when an input overrun is seen (received a new character
    before the previous one is processed). This only stops receive and will
    continue to transmit characters to serial port. After the backoff period
    is done, it receive will be re-enabled. This is optional and will only
    be enabled by setting 'overrun-throttle-ms' in the dts.
    
    Signed-off-by: Darwin Dingel <darwin.dingel@alliedtelesis.co.nz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab8f3d980d5df972d577dbf1287de029187dbee2
Author: Pan Bian <bianpan2016@163.com>
Date:   Thu Nov 22 08:52:33 2018 +0800

    HID: intel-ish-hid: fixes incorrect error handling
    
    [ Upstream commit 6e0856d317440a950b17c00a9283114f025e5699 ]
    
    The memory chunk allocated by hid_allocate_device() should be released
    by hid_destroy_device(), not kfree().
    
    Fixes: 0b28cb4bcb1("HID: intel-ish-hid: ISH HID client driver")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe6f3973ff0ac8a6bd72b944acac90a95fe1b4a4
Author: Josef Bacik <jbacik@fb.com>
Date:   Mon Dec 3 10:20:32 2018 -0500

    btrfs: only track ref_heads in delayed_ref_updates
    
    [ Upstream commit 158ffa364bf723fa1ef128060646d23dc3942994 ]
    
    We use this number to figure out how many delayed refs to run, but
    __btrfs_run_delayed_refs really only checks every time we need a new
    delayed ref head, so we always run at least one ref head completely no
    matter what the number of items on it.  Fix the accounting to only be
    adjusted when we add/remove a ref head.
    
    In addition to using this number to limit the number of delayed refs
    run, a future patch is also going to use it to calculate the amount of
    space required for delayed refs space reservation.
    
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2faad660e05fc979be6d385b92f9e9e159d304d1
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Sun Dec 16 09:34:17 2018 +0100

    mtd: rawnand: sunxi: Write pageprog related opcodes to WCMD_SET
    
    [ Upstream commit 732774437ae01d9882e60314e303898e63c7f038 ]
    
    The opcodes used by the controller when doing batched page prog should
    be written in NFC_REG_WCMD_SET not FC_REG_RCMD_SET. Luckily, the
    default NFC_REG_WCMD_SET value matches the one we set in the driver
    which explains why we didn't notice the problem.
    
    Fixes: 614049a8d904 ("mtd: nand: sunxi: add support for DMA assisted operations")
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41703d1bd5752694bb7cb3a5e33e65aabb3e42aa
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Dec 6 16:18:25 2018 +0100

    mmc: meson-gx: make sure the descriptor is stopped on errors
    
    [ Upstream commit 18f92bc02f1739b5c4d5b70009fbb7eada45bca3 ]
    
    On errors, if we don't stop the descriptor chain, it may continue to
    run and raise IRQ after we have called mmc_request_done(). This is bad
    because we won't be able to get cmd anymore and properly deal with the
    IRQ.
    
    This patch makes sure the descriptor chain is stopped before
    calling mmc_request_done()
    
    Fixes: 79ed05e329c3 ("mmc: meson-gx: add support for descriptor chain mode")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c92b652d8126399f45286ce656683b9076f91f9
Author: Lepton Wu <ytht.net@gmail.com>
Date:   Tue Dec 11 11:12:55 2018 -0800

    VSOCK: bind to random port for VMADDR_PORT_ANY
    
    [ Upstream commit 8236b08cf50f85bbfaf48910a0b3ee68318b7c4b ]
    
    The old code always starts from fixed port for VMADDR_PORT_ANY. Sometimes
    when VMM crashed, there is still orphaned vsock which is waiting for
    close timer, then it could cause connection time out for new started VM
    if they are trying to connect to same port with same guest cid since the
    new packets could hit that orphaned vsock. We could also fix this by doing
    more in vhost_vsock_reset_orphans, but any way, it should be better to start
    from a random local port instead of a fixed one.
    
    Signed-off-by: Lepton Wu <ytht.net@gmail.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf208699455507006166c19e21a09d0e8c39eead
Author: Jim Mattson <jmattson@google.com>
Date:   Wed Dec 5 15:28:58 2018 -0800

    kvm: vmx: Set IA32_TSC_AUX for legacy mode guests
    
    [ Upstream commit 0023ef39dc35c773c436eaa46ca539a26b308b55 ]
    
    RDTSCP is supported in legacy mode as well as long mode. The
    IA32_TSC_AUX MSR should be set to the correct guest value before
    entering any guest that supports RDTSCP.
    
    Fixes: 4e47c7a6d714 ("KVM: VMX: Add instruction rdtscp support for guest")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Peter Shier <pshier@google.com>
    Reviewed-by: Marc Orr <marcorr@google.com>
    Reviewed-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d3a9de5cbacb29a5498da0cebb5fe01d104f5d0
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 6 10:45:49 2018 +0100

    gpiolib: Fix return value of gpio_to_desc() stub if !GPIOLIB
    
    [ Upstream commit c5510b8dafce5f3f5a039c9b262ebcae0092c462 ]
    
    If CONFIG_GPOILIB is not set, the stub of gpio_to_desc() should return
    the same type of error as regular version: NULL.  All the callers
    compare the return value of gpio_to_desc() against NULL, so returned
    ERR_PTR would be treated as non-error case leading to dereferencing of
    error value.
    
    Fixes: 79a9becda894 ("gpiolib: export descriptor-based GPIO interface")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f0d3384d10f21a705e5916384f24bcfa93637f4
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Thu Aug 16 09:23:08 2018 +0300

    iwlwifi: move iwl_nvm_check_version() into dvm
    
    [ Upstream commit 64866e5da1eabd0c52ff45029b245f5465920031 ]
    
    This function is only half-used by mvm (i.e. only the nvm_version part
    matters, since the calibration version is irrelevant), so it's
    pointless to export it from iwlwifi.  If mvm uses this function, it
    has the additional complexity of setting the calib version to a bogus
    value on all cfg structs.
    
    To avoid this, move the function to dvm and make a simple comparison
    of the nvm_version in mvm instead.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3c40bd22da10e52b72222315ecac0cd7a4ef23e
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Dec 7 20:33:53 2018 +0900

    microblaze: move "... is ready" messages to arch/microblaze/Makefile
    
    [ Upstream commit 2e14f94cf4bc2f15ca5362e81ca3a987c79e3062 ]
    
    To prepare for more fixes, move this to arch/microblaze/Makefile.
    Otherwise, the same "... is ready" would be printed multiple times.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54a708ab4f564941e43a0ee33744835523bf336d
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Dec 7 20:33:52 2018 +0900

    microblaze: adjust the help to the real behavior
    
    [ Upstream commit bafcc61d998c1ca18f556d92a0e95335ac68c7da ]
    
    "make ARCH=microblaze help" mentions simpleImage.<dt>.unstrip,
    but it is not a real Make target. It does not work because Makefile
    assumes "system.unstrip" is the name of DT.
    
    $ make ARCH=microblaze CROSS_COMPILE=microblaze-linux- simpleImage.system.unstrip
      [ snip ]
    make[1]: *** No rule to make target 'arch/microblaze/boot/dts/system.unstrip.dtb', needed by 'arch/microblaze/boot/dts/system.dtb'.  Stop.
    make: *** [Makefile;1060: arch/microblaze/boot/dts] Error 2
    make: *** Waiting for unfinished jobs....
    
    simpleImage.<dt> works like a phony target that generates multiple
    images. Reflect the real behavior. I removed the DT directory path
    information because it is already explained a few lines below.
    
    While I am here, I deleted the redundant *_defconfig explanation.
    
    The top-level Makefile caters to list available defconfig files:
    
      mmu_defconfig            - Build for mmu
      nommu_defconfig          - Build for nommu
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8f7562fce7d23a7258435ad20c243e0939c294f
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Nov 28 11:20:03 2018 +0800

    ubi: Do not drop UBI device reference before using
    
    [ Upstream commit e542087701f09418702673631a908429feb3eae0 ]
    
    The UBI device reference is dropped but then the device is used as a
    parameter of ubi_err. The bug is introduced in changing ubi_err's
    behavior. The old ubi_err does not require a UBI device as its first
    parameter, but the new one does.
    
    Fixes: 32608703310 ("UBI: Extend UBI layer debug/messaging capabilities")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 628eaca54b500244deb3cd28fea181204fffc9c9
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Nov 28 10:57:33 2018 +0800

    ubi: Put MTD device after it is not used
    
    [ Upstream commit b95f83ab762dd6211351b9140f99f43644076ca8 ]
    
    The MTD device reference is dropped via put_mtd_device, however its
    field ->index is read and passed to ubi_msg. To fix this, the patch
    moves the reference dropping after calling ubi_msg.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23df2afe9da6642bfecfb8f2b817aef8bcffc8ef
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Wed Dec 12 15:18:52 2018 -0800

    xfs: require both realtime inodes to mount
    
    [ Upstream commit 64bafd2f1e484e27071e7584642005d56516cb77 ]
    
    Since mkfs always formats the filesystem with the realtime bitmap and
    summary inodes immediately after the root directory, we should expect
    that both of them are present and loadable, even if there isn't a
    realtime volume attached.  There's no reason to skip this if rbmino ==
    NULLFSINO; in fact, this causes an immediate crash if the there /is/ a
    realtime volume and someone writes to it.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Bill O'Donnell <billodo@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d6babdd9c5eaa61aaf6bcd0763af3fe8f0aa4b9
Author: Pan Bian <bianpan2016@163.com>
Date:   Thu Nov 29 18:48:10 2018 +0800

    rtl818x: fix potential use after free
    
    [ Upstream commit afbb1947db94eacc5a13302eee88a9772fb78935 ]
    
    entry is released via usb_put_urb just after calling usb_submit_urb.
    However, entry is used if the submission fails, resulting in a use after
    free bug. The patch fixes this.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    ACKed-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cdb45a907c49369b1deb4748fb27c5f25fca4c8
Author: Brian Norris <briannorris@chromium.org>
Date:   Mon Dec 3 14:26:55 2018 -0800

    mwifiex: debugfs: correct histogram spacing, formatting
    
    [ Upstream commit 4cb777c64e030778c569f605398d7604d8aabc0f ]
    
    Currently, snippets of this file look like:
    
    rx rates (in Mbps): 0=1M   1=2M2=5.5M  3=11M   4=6M   5=9M  6=12M
    7=18M  8=24M  9=36M  10=48M  11=54M12-27=MCS0-15(BW20) 28-43=MCS0-15(BW40)
    44-53=MCS0-9(VHT:BW20)54-63=MCS0-9(VHT:BW40)64-73=MCS0-9(VHT:BW80)
    ...
    noise_flr[--96dBm] = 22
    noise_flr[--95dBm] = 149
    noise_flr[--94dBm] = 9
    noise_flr[--93dBm] = 2
    
    We're missing some spaces, and we're adding a minus sign ('-') on values
    that are already negative signed integers.
    
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 070fc4ce25c831193918880ab307549ff9285167
Author: Pan Bian <bianpan2016@163.com>
Date:   Thu Nov 29 18:25:19 2018 +0800

    mwifiex: fix potential NULL dereference and use after free
    
    [ Upstream commit 1dcd9429212b98bea87fc6ec92fb50bf5953eb47 ]
    
    There are two defects: (1) passing a NULL bss to
    mwifiex_save_hidden_ssid_channels will result in NULL dereference,
    (2) using bss after dropping the reference to it via cfg80211_put_bss.
    To fix them, the patch moves the buggy code to the branch that bss is
    not NULL and puts it before cfg80211_put_bss.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d98de9d9b8427db4be1b91949cc633aab5f7e76a
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Dec 6 15:55:41 2018 -0800

    crypto: user - support incremental algorithm dumps
    
    [ Upstream commit 0ac6b8fb23c724b015d9ca70a89126e8d1563166 ]
    
    CRYPTO_MSG_GETALG in NLM_F_DUMP mode sometimes doesn't return all
    registered crypto algorithms, because it doesn't support incremental
    dumps.  crypto_dump_report() only permits itself to be called once, yet
    the netlink subsystem allocates at most ~64 KiB for the skb being dumped
    to.  Thus only the first recvmsg() returns data, and it may only include
    a subset of the crypto algorithms even if the user buffer passed to
    recvmsg() is large enough to hold all of them.
    
    Fix this by using one of the arguments in the netlink_callback structure
    to keep track of the current position in the algorithm list.  Then
    userspace can do multiple recvmsg() on the socket after sending the dump
    request.  This is the way netlink dumps work elsewhere in the kernel;
    it's unclear why this was different (probably just an oversight).
    
    Also fix an integer overflow when calculating the dump buffer size hint.
    
    Fixes: a38f7907b926 ("crypto: Add userspace configuration API")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a959526b56d926167b18abd951b04ab9dc8d546
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Dec 10 19:37:01 2018 -0800

    scsi: lpfc: Enable Management features for IF_TYPE=6
    
    [ Upstream commit 719162bd5bb968203397b9b1d0dd30a9797bbd09 ]
    
    Addition of support for if_type=6 missed several checks for interface type,
    resulting in the failure of several key management features such as
    firmware dump and loopback testing.
    
    Correct the checks on the if_type so that both SLI4 IF_TYPE's 2 and 6 are
    supported.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77cf4c5b45b0a9e6854e8e352dce55fa8769354c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Dec 8 13:59:24 2018 +0100

    ACPI / LPSS: Ignore acpi_device_fix_up_power() return value
    
    [ Upstream commit 1a2fa02f7489dc4d746f2a15fb77b3ce1affade8 ]
    
    Ignore acpi_device_fix_up_power() return value. If we return an error
    we end up with acpi_default_enumeration() still creating a platform-
    device for the device and we end up with the device still being used
    but without the special LPSS related handling which is not useful.
    
    Specicifically ignoring the error fixes the touchscreen no longer
    working after a suspend/resume on a Prowise PT301 tablet.
    
    This tablet has a broken _PS0 method on the touchscreen's I2C controller,
    causing acpi_device_fix_up_power() to fail, causing fallback to standard
    platform-dev handling and specifically causing acpi_lpss_save/restore_ctx
    to not run.
    
    The I2C controllers _PS0 method does actually turn on the device, but then
    does some more nonsense which fails when run during early boot trying to
    use I2C opregion handling on another not-yet registered I2C controller.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c03e74b67b61b41fb62e518957f95fde18d3e6fa
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Dec 10 22:58:38 2018 +0100

    ARM: ks8695: fix section mismatch warning
    
    [ Upstream commit 4aa64677330beeeed721b4b122884dabad845d66 ]
    
    WARNING: vmlinux.o(.text+0x13250): Section mismatch in reference from the function acs5k_i2c_init() to the (unknown reference) .init.data:(unknown)
    The function acs5k_i2c_init() references
    the (unknown reference) __initdata (unknown).
    This is often because acs5k_i2c_init lacks a __initdata
    annotation or the annotation of (unknown) is wrong.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 456536aa540f8e2696533222ef10a4c456c1c9ee
Author: Thomas Meyer <thomas@m3y3r.de>
Date:   Sun Dec 2 21:52:11 2018 +0100

    PM / AVS: SmartReflex: NULL check before some freeing functions is not needed
    
    [ Upstream commit 14d338a857f05f894ba3badd9e6d3039c68b8180 ]
    
    NULL check before some freeing functions is not needed.
    
    Signed-off-by: Thomas Meyer <thomas@m3y3r.de>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb97bd1891697d7cce8d03e71de238d043e9c086
Author: Gal Pressman <galpress@amazon.com>
Date:   Mon Dec 10 17:17:25 2018 +0200

    RDMA/vmw_pvrdma: Use atomic memory allocation in create AH
    
    [ Upstream commit a276a4d93bf1580d737f38d1810e5f4b166f3edd ]
    
    Create address handle callback should not sleep, use GFP_ATOMIC instead of
    GFP_KERNEL for memory allocation.
    
    Fixes: 29c8d9eba550 ("IB: Add vmw_pvrdma driver")
    Cc: Adit Ranadive <aditr@vmware.com>
    Signed-off-by: Gal Pressman <galpress@amazon.com>
    Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4bf1456a9fcc5614ba8292c35cc72a4b3aa4d7c
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Tue Dec 4 19:57:42 2018 +0200

    ARM: OMAP1: fix USB configuration for device-only setups
    
    [ Upstream commit c7b7b5cbd0c859b1546a5a3455d457708bdadf4c ]
    
    Currently we do USB configuration only if the host mode (CONFIG_USB)
    is enabled. But it should be done also in the case of device-only setups,
    so change the condition to CONFIG_USB_SUPPORT. This allows to use
    omap_udc on Palm Tungsten E.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7324581318f696cbb615d796657b11eae041c353
Author: Suzuki K Poulose <Suzuki.Poulose@arm.com>
Date:   Mon Dec 10 18:07:33 2018 +0000

    arm64: smp: Handle errors reported by the firmware
    
    [ Upstream commit f357b3a7e17af7736d67d8267edc1ed3d1dd9391 ]
    
    The __cpu_up() routine ignores the errors reported by the firmware
    for a CPU bringup operation and looks for the error status set by the
    booting CPU. If the CPU never entered the kernel, we could end up
    in assuming stale error status, which otherwise would have been
    set/cleared appropriately by the booting CPU.
    
    Reported-by: Steve Capper <steve.capper@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63f1e5fb8f1ed58562fff5258bf8bdb686fc0544
Author: Steve Capper <steve.capper@arm.com>
Date:   Thu Dec 6 22:50:40 2018 +0000

    arm64: mm: Prevent mismatched 52-bit VA support
    
    [ Upstream commit a96a33b1ca57dbea4285893dedf290aeb8eb090b ]
    
    For cases where there is a mismatch in ARMv8.2-LVA support between CPUs
    we have to be careful in allowing secondary CPUs to boot if 52-bit
    virtual addresses have already been enabled on the boot CPU.
    
    This patch adds code to the secondary startup path. If the boot CPU has
    enabled 52-bit VAs then ID_AA64MMFR2_EL1 is checked to see if the
    secondary can also enable 52-bit support. If not, the secondary is
    prevented from booting and an error message is displayed indicating why.
    
    Technically this patch could be implemented using the cpufeature code
    when considering 52-bit userspace support. However, we employ low level
    checks here as the cpufeature code won't be able to run if we have
    mismatched 52-bit kernel va support.
    
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 048b7d2c8a884220c7e3e107b9779bf6c01067cb
Author: Helge Deller <deller@gmx.de>
Date:   Thu Nov 15 21:06:34 2018 +0100

    parisc: Fix HP SDC hpa address output
    
    [ Upstream commit c4bff35ca1bfba886da6223c9fed76a2b1382b8e ]
    
    Show the hpa address of the HP SDC instead of a hashed value, e.g.:
    HP SDC: HP SDC at 0xf0201000, IRQ 23 (NMI IRQ 24)
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7a995e699837c36fcee377f3a210fb5b61a0783
Author: Helge Deller <deller@gmx.de>
Date:   Thu Nov 15 21:09:59 2018 +0100

    parisc: Fix serio address output
    
    [ Upstream commit 785145171d17af2554128becd6a7c8f89e101141 ]
    
    We want the hpa addresses printed in the serio modules, not some
    virtual ioremap()ed address, e.g.:
    
     serio: gsc-ps2-keyboard port at 0xf0108000 irq 22 @ 2:0:11
     serio: gsc-ps2-mouse port at 0xf0108100 irq 22 @ 2:0:12
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 221c05bd1f8c996751f48f5de5a3f1ae0890a9cd
Author: Fabio Estevam <festevam@gmail.com>
Date:   Wed Dec 5 16:10:01 2018 -0200

    ARM: dts: imx53-voipac-dmm-668: Fix memory node duplication
    
    [ Upstream commit 998a84c27a7f3f9133d32af64e19c05cec161a1a ]
    
    imx53-voipac-dmm-668 has two memory nodes, but the correct representation
    would be to use a single one with two reg entries - one for each RAM chip
    select, so fix it accordingly.
    
    Reported-by: Marco Franchi <marco.franchi@nxp.com>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Marco Franchi <marco.franchi@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fd7de500ef668af49dfa1e507eadb5d02a69ca0
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Nov 28 10:04:16 2018 +0100

    ARM: debug-imx: only define DEBUG_IMX_UART_PORT if needed
    
    [ Upstream commit 7c41ea57beb2aee96fa63091a457b1a2826f3c42 ]
    
    If debugging on i.MX is enabled DEBUG_IMX_UART_PORT defines which UART
    is used for the debug output. If however debugging is off don't only
    hide the then unused config item but drop it completely by using a
    dependency instead of a conditional prompt.
    
    This fixes DEBUG_IMX_UART_PORT being present in the kernel config even
    if DEBUG_LL is disabled.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b9ea58bc7318c54170ffc21a9b2bcc845db481f
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Fri Oct 19 09:00:51 2018 +0200

    ARM: dts: Fix up SQ201 flash access
    
    [ Upstream commit d88b11ef91b15d0af9c0676cbf4f441a0dff0c56 ]
    
    This sets the partition information on the SQ201 to be read
    out from the RedBoot partition table, removes the static
    partition table and sets our boot options to mount root from
    /dev/mtdblock2 where the squashfs+JFFS2 resides.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78f7d2dbdf06f4af54d63c2c5334ad08710617d7
Author: James Smart <jsmart2021@gmail.com>
Date:   Thu Nov 29 16:09:40 2018 -0800

    scsi: lpfc: Fix dif and first burst use in write commands
    
    [ Upstream commit 7c4042a4d0b7532cfbc90478fd3084b2dab5849e ]
    
    When dif and first burst is used in a write command wqe, the driver was not
    properly setting fields in the io command request. This resulted in no dif
    bytes being sent and invalid xfer_rdy's, resulting in the io being aborted
    by the hardware.
    
    Correct the wqe initializaton when both dif and first burst are used.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e0c82241c09a79de8d2e9d63b3219b6719a7012
Author: James Smart <jsmart2021@gmail.com>
Date:   Thu Nov 29 16:09:32 2018 -0800

    scsi: lpfc: Fix kernel Oops due to null pring pointers
    
    [ Upstream commit 5a9eeff57f340238c39c95d8e7e54c96fc722de7 ]
    
    Driver is hitting null pring pointers in lpfc_do_work().
    
    Pointer assignment occurs based on SLI-revision. If recovering after an
    error, its possible the sli revision for the port was cleared, making the
    lpfc_phba_elsring() not return a ring pointer, thus the null pointer.
    
    Add SLI revision checking to lpfc_phba_elsring() and status checking to all
    callers.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc34231181d38f730e71d3df5d2b9508390be204
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Thu Oct 17 21:22:18 2019 +0200

    pwm: bcm-iproc: Prevent unloading the driver module while in use
    
    [ Upstream commit 24906a41eecb73d51974ade0847c21e429beec60 ]
    
    The owner member of struct pwm_ops must be set to THIS_MODULE to
    increase the reference count of the module such that the module cannot
    be removed while its code is in use.
    
    Fixes: daa5abc41c80 ("pwm: Add support for Broadcom iProc PWM controller")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b68abc88cafbfb4451fa333469464b185371ce1f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 7 10:48:47 2019 +0300

    block: drbd: remove a stray unlock in __drbd_send_protocol()
    
    [ Upstream commit 8e9c523016cf9983b295e4bc659183d1fa6ef8e0 ]
    
    There are two callers of this function and they both unlock the mutex so
    this ends up being a double unlock.
    
    Fixes: 44ed167da748 ("drbd: rcu_read_lock() and rcu_dereference() for tconn->net_conf")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7c4a8ed5846e81e003944258d3bc75e3a06600d
Author: Ahmed Zaki <anzaki@gmail.com>
Date:   Thu Oct 31 06:12:43 2019 -0600

    mac80211: fix station inactive_time shortly after boot
    
    [ Upstream commit 285531f9e6774e3be71da6673d475ff1a088d675 ]
    
    In the first 5 minutes after boot (time of INITIAL_JIFFIES),
    ieee80211_sta_last_active() returns zero if last_ack is zero. This
    leads to "inactive time" showing jiffies_to_msecs(jiffies).
    
     # iw wlan0 station get fc:ec:da:64:a6:dd
     Station fc:ec:da:64:a6:dd (on wlan0)
            inactive time:  4294894049 ms
            .
            .
            connected time: 70 seconds
    
    Fix by returning last_rx if last_ack == 0.
    
    Signed-off-by: Ahmed Zaki <anzaki@gmail.com>
    Link: https://lore.kernel.org/r/20191031121243.27694-1-anzaki@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06d3f91ed5172ef57c3abf3c2fb40fee5fb6560f
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Nov 7 09:39:32 2019 -0500

    ceph: return -EINVAL if given fsc mount option on kernel w/o support
    
    [ Upstream commit ff29fde84d1fc82f233c7da0daa3574a3942bec7 ]
    
    If someone requests fscache on the mount, and the kernel doesn't
    support it, it should fail the mount.
    
    [ Drop ceph prefix -- it's provided by pr_err. ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 106f14d2ee321f0d12ae48e44f4ffb4eaba6dd72
Author: Doug Berger <opendmb@gmail.com>
Date:   Tue Nov 5 11:07:26 2019 -0800

    net: bcmgenet: reapply manual settings to the PHY
    
    [ Upstream commit 0686bd9d5e6863f60e4bb1e78e6fe7bb217a0890 ]
    
    The phy_init_hw() function may reset the PHY to a configuration
    that does not match manual network settings stored in the phydev
    structure. If the phy state machine is polled rather than event
    driven this can create a timing hazard where the phy state machine
    might alter the settings stored in the phydev structure from the
    value read from the BMCR.
    
    This commit follows invocations of phy_init_hw() by the bcmgenet
    driver with invocations of the genphy_config_aneg() function to
    ensure that the BMCR is written to match the settings held in the
    phydev structure. This prevents the risk of manual settings being
    accidentally altered.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2acd1714d09607216529c4566571506c13d7dcba
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Tue Nov 5 21:17:06 2019 -0800

    scripts/gdb: fix debugging modules compiled with hot/cold partitioning
    
    [ Upstream commit 8731acc5068eb3f422a45c760d32198175c756f8 ]
    
    gcc's -freorder-blocks-and-partition option makes it group frequently
    and infrequently used code in .text.hot and .text.unlikely sections
    respectively.  At least when building modules on s390, this option is
    used by default.
    
    gdb assumes that all code is located in .text section, and that .text
    section is located at module load address.  With such modules this is no
    longer the case: there is code in .text.hot and .text.unlikely, and
    either of them might precede .text.
    
    Fix by explicitly telling gdb the addresses of code sections.
    
    It might be tempting to do this for all sections, not only the ones in
    the white list.  Unfortunately, gdb appears to have an issue, when
    telling it about e.g. loadable .note.gnu.build-id section causes it to
    think that non-loadable .note.Linux section is loaded at address 0,
    which in turn causes NULL pointers to be resolved to bogus symbols.  So
    keep using the white list approach for the time being.
    
    Link: http://lkml.kernel.org/r/20191028152734.13065-1-iii@linux.ibm.com
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Reviewed-by: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Kieran Bingham <kbingham@kernel.org>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 477daab60643cc5c7efcd5b1e1ea02d193135246
Author: Xingyu Chen <xingyu.chen@amlogic.com>
Date:   Sun Sep 29 18:53:49 2019 +0800

    watchdog: meson: Fix the wrong value of left time
    
    [ Upstream commit 2c77734642d52448aca673e889b39f981110828b ]
    
    The left time value is wrong when we get it by sysfs. The left time value
    should be equal to preset timeout value minus elapsed time value. According
    to the Meson-GXB/GXL datasheets which can be found at [0], the timeout value
    is saved to BIT[0-15] of the WATCHDOG_TCNT, and elapsed time value is saved
    to BIT[16-31] of the WATCHDOG_TCNT.
    
    [0]: http://linux-meson.com
    
    Fixes: 683fa50f0e18 ("watchdog: Add Meson GXBB Watchdog Driver")
    Signed-off-by: Xingyu Chen <xingyu.chen@amlogic.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de8d7ad94e35f6936732e6cb85bd6d0bb3b82e7b
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Sep 24 18:45:38 2019 +0000

    can: rx-offload: can_rx_offload_irq_offload_fifo(): continue on error
    
    [ Upstream commit 1f7f504dcd9d1262437bdcf4fa071e41dec1af03 ]
    
    In case of a resource shortage, i.e. the rx_offload queue will overflow
    or a skb fails to be allocated (due to OOM),
    can_rx_offload_offload_one() will call mailbox_read() to discard the
    mailbox and return an ERR_PTR.
    
    If the hardware FIFO is empty can_rx_offload_offload_one() will return
    NULL.
    
    In case a CAN frame was read from the hardware,
    can_rx_offload_offload_one() returns the skb containing it.
    
    Without this patch can_rx_offload_irq_offload_fifo() bails out if no skb
    returned, regardless of the reason.
    
    Similar to can_rx_offload_irq_offload_timestamp() in case of a resource
    shortage the whole FIFO should be discarded, to avoid an IRQ storm and
    give the system some time to recover. However if the FIFO is empty the
    loop can be left.
    
    With this patch the loop is left in case of empty FIFO, but not on
    errors.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 900a8c4842445e3627757e0f6139f2edbb203f53
Author: Jeroen Hofstee <jhofstee@victronenergy.com>
Date:   Tue Sep 24 18:45:38 2019 +0000

    can: rx-offload: can_rx_offload_irq_offload_timestamp(): continue on error
    
    [ Upstream commit c2a9f74c9d18acfdcabd3361adc7eac82c537a66 ]
    
    In case of a resource shortage, i.e. the rx_offload queue will overflow
    or a skb fails to be allocated (due to OOM),
    can_rx_offload_offload_one() will call mailbox_read() to discard the
    mailbox and return an ERR_PTR.
    
    However can_rx_offload_irq_offload_timestamp() bails out in the error
    case. In case of a resource shortage all mailboxes should be discarded,
    to avoid an IRQ storm and give the system some time to recover.
    
    Since can_rx_offload_irq_offload_timestamp() is typically called from a
    while loop, all message will eventually be discarded. So let's continue
    on error instead to discard them directly.
    
    Signed-off-by: Jeroen Hofstee <jhofstee@victronenergy.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0aad062e96ed750e3daaec68ca5685dcf70f90f
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 21:00:32 2019 +0200

    can: rx-offload: can_rx_offload_offload_one(): use ERR_PTR() to propagate error value in case of errors
    
    [ Upstream commit d763ab3044f0bf50bd0e6179f6b2cf1c125d1d94 ]
    
    Before this patch can_rx_offload_offload_one() returns a pointer to a
    skb containing the read CAN frame or a NULL pointer.
    
    However the meaning of the NULL pointer is ambiguous, it can either mean
    the requested mailbox is empty or there was an error.
    
    This patch fixes this situation by returning:
    - pointer to skb on success
    - NULL pointer if mailbox is empty
    - ERR_PTR() in case of an error
    
    All users of can_rx_offload_offload_one() have been adopted, no
    functional change intended.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c7dd979e1f70beece01e1fbd6006e1a4a81e880
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 15:15:07 2019 +0200

    can: rx-offload: can_rx_offload_offload_one(): increment rx_fifo_errors on queue overflow or OOM
    
    [ Upstream commit 4e9016bee3bf0c24963097edace034ff205b565c ]
    
    If the rx-offload skb_queue is full or the skb allocation fails (due to OOM),
    the mailbox contents is discarded.
    
    This patch adds the incrementing of the rx_fifo_errors statistics counter.
    
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3cc7954719dfdc37d14bab5377d74de73630316
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 16:03:18 2019 +0200

    can: rx-offload: can_rx_offload_offload_one(): do not increase the skb_queue beyond skb_queue_len_max
    
    [ Upstream commit a2dc3f5e1022a5ede8af9ab89a144f1e69db8636 ]
    
    The skb_queue is a linked list, holding the skb to be processed in the
    next NAPI call.
    
    Without this patch, the queue length in can_rx_offload_offload_one() is
    limited to skb_queue_len_max + 1. As the skb_queue is a linked list, no
    array or other resources are accessed out-of-bound, however this
    behaviour is counterintuitive.
    
    This patch limits the rx-offload skb_queue length to skb_queue_len_max.
    
    Fixes: d254586c3453 ("can: rx-offload: Add support for HW fifo based irq offloading")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37d45825181d0481f7f1e9eb87e899f3e9826408
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 9 15:48:48 2019 +0200

    can: rx-offload: can_rx_offload_queue_tail(): fix error handling, avoid skb mem leak
    
    [ Upstream commit 6caf8a6d6586d44fd72f4aa1021d14aa82affafb ]
    
    If the rx-offload skb_queue is full can_rx_offload_queue_tail() will not
    queue the skb and return with an error.
    
    This patch frees the skb in case of a full queue, which brings
    can_rx_offload_queue_tail() in line with the
    can_rx_offload_queue_sorted() function, which has been adjusted in the
    previous patch.
    
    The return value is adjusted to -ENOBUFS to better reflect the actual
    problem.
    
    The device stats handling is left to the caller.
    
    Fixes: d254586c3453 ("can: rx-offload: Add support for HW fifo based irq offloading")
    Reported-by: Kurt Van Dijck <dev.kurt@vandijck-laurijssen.be>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b448e73cd2cf2ec5bdab5ed8a322c000dc5fea8f
Author: Jeroen Hofstee <jhofstee@victronenergy.com>
Date:   Tue Oct 1 21:01:20 2019 +0000

    can: c_can: D_CAN: c_can_chip_config(): perform a sofware reset on open
    
    [ Upstream commit 23c5a9488f076bab336177cd1d1a366bd8ddf087 ]
    
    When the CAN interface is closed it the hardwre is put in power down
    mode, but does not reset the error counters / state. Reset the D_CAN on
    open, so the reported state and the actual state match.
    
    According to [1], the C_CAN module doesn't have the software reset.
    
    [1] http://www.bosch-semiconductors.com/media/ip_modules/pdf_2/c_can_fd8/users_manual_c_can_fd8_r210_1.pdf
    
    Signed-off-by: Jeroen Hofstee <jhofstee@victronenergy.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a07253754ad72d0d4cf64dfcbff66da7bf1cd74c
Author: Jeroen Hofstee <jhofstee@victronenergy.com>
Date:   Wed Sep 25 08:58:45 2019 +0000

    can: peak_usb: report bus recovery as well
    
    [ Upstream commit 128a1b87d3ceb2ba449d5aadb222fe22395adeb0 ]
    
    While the state changes are reported when the error counters increase
    and decrease, there is no event when the bus recovers and the error
    counters decrease again. So add those as well.
    
    Change the state going downward to be ERROR_PASSIVE -> ERROR_WARNING ->
    ERROR_ACTIVE instead of directly to ERROR_ACTIVE again.
    
    Signed-off-by: Jeroen Hofstee <jhofstee@victronenergy.com>
    Cc: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fc27a2497def71f459ee326c9b7580530b7a838
Author: Florian Westphal <fw@strlen.de>
Date:   Sun Nov 3 20:54:28 2019 +0100

    bridge: ebtables: don't crash when using dnat target in output chains
    
    [ Upstream commit b23c0742c2ce7e33ed79d10e451f70fdb5ca85d1 ]
    
    xt_in() returns NULL in the output hook, skip the pkt_type change for
    that case, redirection only makes sense in broute/prerouting hooks.
    
    Reported-by: Tom Yan <tom.ty89@gmail.com>
    Cc: Linus Lüssing <linus.luessing@c0d3.blue>
    Fixes: cf3cb246e277d ("bridge: ebtables: fix reception of frames DNAT-ed to bridge device/port")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c4879a381c5ca3d9a8a6f884b55f53d3c02a710
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Mon Nov 4 23:50:00 2019 +0800

    net: fec: add missed clk_disable_unprepare in remove
    
    [ Upstream commit c43eab3eddb4c6742ac20138659a9b701822b274 ]
    
    This driver forgets to disable and unprepare clks when remove.
    Add calls to clk_disable_unprepare to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be5d20130b6572f8f36405beb27e8227eb9a4ae2
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Wed Oct 2 11:34:36 2019 +0300

    clk: ti: dra7-atl-clock: Remove ti_clk_add_alias call
    
    [ Upstream commit 9982b0f69b49931b652d35f86f519be2ccfc7027 ]
    
    ti_clk_register() calls it already so the driver should not create
    duplicated alias.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lkml.kernel.org/r/20191002083436.10194-1-peter.ujfalusi@ti.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 222b0c56d2849a48b3ba57ff08c64f5591e72a74
Author: Xiaochen Shen <xiaochen.shen@intel.com>
Date:   Tue Oct 29 13:25:02 2019 +0800

    x86/resctrl: Prevent NULL pointer dereference when reading mondata
    
    [ Upstream commit 26467b0f8407cbd628fa5b7bcfd156e772004155 ]
    
    When a mon group is being deleted, rdtgrp->flags is set to RDT_DELETED
    in rdtgroup_rmdir_mon() firstly. The structure of rdtgrp will be freed
    until rdtgrp->waitcount is dropped to 0 in rdtgroup_kn_unlock() later.
    
    During the window of deleting a mon group, if an application calls
    rdtgroup_mondata_show() to read mondata under this mon group,
    'rdtgrp' returned from rdtgroup_kn_lock_live() is a NULL pointer when
    rdtgrp->flags is RDT_DELETED. And then 'rdtgrp' is passed in this path:
    rdtgroup_mondata_show() --> mon_event_read() --> mon_event_count().
    Thus it results in NULL pointer dereference in mon_event_count().
    
    Check 'rdtgrp' in rdtgroup_mondata_show(), and return -ENOENT
    immediately when reading mondata during the window of deleting a mon
    group.
    
    Fixes: d89b7379015f ("x86/intel_rdt/cqm: Add mon_data")
    Signed-off-by: Xiaochen Shen <xiaochen.shen@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Fenghua Yu <fenghua.yu@intel.com>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: pei.p.jia@intel.com
    Cc: Reinette Chatre <reinette.chatre@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/1572326702-27577-1-git-send-email-xiaochen.shen@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0840f62f1a51df5853b3f22ffc5be91438304db
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Sat Nov 2 00:25:08 2019 -0400

    idr: Fix idr_alloc_u32 on 32-bit systems
    
    [ Upstream commit b7e9728f3d7fc5c5c8508d99f1675212af5cfd49 ]
    
    Attempting to allocate an entry at 0xffffffff when one is already
    present would succeed in allocating one at 2^32, which would confuse
    everything.  Return -ENOSPC in this case, as expected.
    
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7086d6a65075d96c203a03d464bd439fd81160e5
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Oct 23 12:28:09 2019 +0100

    clk: sunxi-ng: a80: fix the zero'ing of bits 16 and 18
    
    [ Upstream commit cdfc2e2086bf9c465f44e2db25561373b084a113 ]
    
    The zero'ing of bits 16 and 18 is incorrect. Currently the code
    is masking with the bitwise-and of BIT(16) & BIT(18) which is
    0, so the updated value for val is always zero. Fix this by bitwise
    and-ing value with the correct mask that will zero bits 16 and 18.
    
    Addresses-Coverity: (" Suspicious &= or |= constant expression")
    Fixes: b8eb71dcdd08 ("clk: sunxi-ng: Add A80 CCU")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae3883adf0b73a9b0fec533ce023195ec5348dc2
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Fri Sep 20 17:39:06 2019 +0200

    clk: at91: avoid sleeping early
    
    [ Upstream commit 658fd65cf0b0d511de1718e48d9a28844c385ae0 ]
    
    It is not allowed to sleep to early in the boot process and this may lead
    to kernel issues if the bootloader didn't prepare the slow clock and main
    clock.
    
    This results in the following error and dump stack on the AriettaG25:
       bad: scheduling from the idle thread!
    
    Ensure it is possible to sleep, else simply have a delay.
    
    Reported-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lkml.kernel.org/r/20190920153906.20887-1-alexandre.belloni@bootlin.com
    Fixes: 80eded6ce8bb ("clk: at91: add slow clks driver")
    Tested-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b27f7fe373eddcbf66a8be94f5844b9b07b238b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Oct 22 20:57:06 2019 -0700

    reset: fix reset_control_ops kerneldoc comment
    
    [ Upstream commit f430c7ed8bc22992ed528b518da465b060b9223f ]
    
    Add a missing short description to the reset_control_ops documentation.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    [p.zabel@pengutronix.de: rebased and updated commit message]
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8284286df09a6f61a47dae2a73b375adf3ec03a
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Oct 25 11:02:01 2019 +0200

    clk: samsung: exynos5420: Preserve PLL configuration during suspend/resume
    
    [ Upstream commit e9323b664ce29547d996195e8a6129a351c39108 ]
    
    Properly save and restore all top PLL related configuration registers
    during suspend/resume cycle. So far driver only handled EPLL and RPLL
    clocks, all other were reset to default values after suspend/resume cycle.
    This caused for example lower G3D (MALI Panfrost) performance after system
    resume, even if performance governor has been selected.
    
    Reported-by: Reported-by: Marian Mihailescu <mihailescu2m@gmail.com>
    Fixes: 773424326b51 ("clk: samsung: exynos5420: add more registers to restore list")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7c8540ceb631e1b8d054845c871c01f3c1175ee
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Wed Oct 23 14:46:44 2019 +0100

    ASoC: kirkwood: fix external clock probe defer
    
    [ Upstream commit 4523817d51bc3b2ef38da768d004fda2c8bc41de ]
    
    When our call to get the external clock fails, we forget to clean up
    the enabled internal clock correctly.  Enable the clock after we have
    obtained all our resources.
    
    Fixes: 84aac6c79bfd ("ASoC: kirkwood: fix loss of external clock at probe time")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/E1iNGyK-0004oF-6A@rmk-PC.armlinux.org.uk
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 533cdfe9cc126a9e19b54a8958684cd1baa29500
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Tue Oct 22 14:06:23 2019 +0530

    reset: Fix memory leak in reset_control_array_put()
    
    [ Upstream commit 532f9cd6ee994ed10403e856ca27501428048597 ]
    
    Memory allocated for 'struct reset_control_array' in
    of_reset_control_array_get() is never freed in
    reset_control_array_put() resulting in kmemleak showing
    the following backtrace.
    
      backtrace:
        [<00000000c5f17595>] __kmalloc+0x1b0/0x2b0
        [<00000000bd499e13>] of_reset_control_array_get+0xa4/0x180
        [<000000004cc02754>] 0xffff800008c669e4
        [<0000000050a83b24>] platform_drv_probe+0x50/0xa0
        [<00000000d3a0b0bc>] really_probe+0x108/0x348
        [<000000005aa458ac>] driver_probe_device+0x58/0x100
        [<000000008853626c>] device_driver_attach+0x6c/0x90
        [<0000000085308d19>] __driver_attach+0x84/0xc8
        [<00000000080d35f2>] bus_for_each_dev+0x74/0xc8
        [<00000000dd7f015b>] driver_attach+0x20/0x28
        [<00000000923ba6e6>] bus_add_driver+0x148/0x1f0
        [<0000000061473b66>] driver_register+0x60/0x110
        [<00000000c5bec167>] __platform_driver_register+0x40/0x48
        [<000000007c764b4f>] 0xffff800008c6c020
        [<0000000047ec2e8c>] do_one_initcall+0x5c/0x1b0
        [<0000000093d4b50d>] do_init_module+0x54/0x1d0
    
    Fixes: 17c82e206d2a ("reset: Add APIs to manage array of resets")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7434723ba87267dc9547b09fb9ac584a98103b76
Author: Xiaojun Sang <xsang@codeaurora.org>
Date:   Mon Oct 21 10:54:32 2019 +0100

    ASoC: compress: fix unsigned integer overflow check
    
    [ Upstream commit d3645b055399538415586ebaacaedebc1e5899b0 ]
    
    Parameter fragments and fragment_size are type of u32. U32_MAX is
    the correct check.
    
    Signed-off-by: Xiaojun Sang <xsang@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Link: https://lore.kernel.org/r/20191021095432.5639-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fce0adc143d76a81c414854dbaddc7252d894d1
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sun Oct 20 17:30:06 2019 +0200

    ASoC: msm8916-wcd-analog: Fix RX1 selection in RDAC2 MUX
    
    [ Upstream commit 9110d1b0e229cebb1ffce0c04db2b22beffd513d ]
    
    According to the PM8916 Hardware Register Description,
    CDC_D_CDC_CONN_HPHR_DAC_CTL has only a single bit (RX_SEL)
    to switch between RX1 (0) and RX2 (1). It is not possible to
    disable it entirely to achieve the "ZERO" state.
    
    However, at the moment the "RDAC2 MUX" mixer defines three possible
    values ("ZERO", "RX2" and "RX1"). Setting the mixer to "ZERO"
    actually configures it to RX1. Setting the mixer to "RX1" has
    (seemingly) no effect.
    
    Remove "ZERO" and replace it with "RX1" to fix this.
    
    Fixes: 585e881e5b9e ("ASoC: codecs: Add msm8916-wcd analog codec")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Acked-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20191020153007.206070-1-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05fb6527b1b2d91d38fd258e8670d6cd2f9f163b
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Sep 21 17:04:11 2019 +0200

    clk: meson: gxbb: let sar_adc_clk_div set the parent clock rate
    
    [ Upstream commit 44b09b11b813b8550e6b976ea51593bc23bba8d1 ]
    
    The meson-saradc driver manually sets the input clock for
    sar_adc_clk_sel. Update the GXBB clock driver (which is used on GXBB,
    GXL and GXM) so the rate settings on sar_adc_clk_div are propagated up
    to sar_adc_clk_sel which will let the common clock framework select the
    best matching parent clock if we want that.
    
    This makes sar_adc_clk_div consistent with the axg-aoclk and g12a-aoclk
    drivers, which both also specify CLK_SET_RATE_PARENT.
    
    Fixes: 33d0fcdfe0e870 ("clk: gxbb: add the SAR ADC clocks and expose them")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f4788e49910473a1be6bb14aaa01915d895377d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 5 08:25:45 2019 +0100

    Revert "KVM: nVMX: reset cache/shadows when switching loaded VMCS"
    
    This reverts commit 9f0b41be6aff47c24c6431bdc76f86b9cd647a0d which is
    commit b7031fd40fcc741b0f9b0c04c8d844e445858b84 upstream.
    
    It should not have been selected for a stable kernel as it breaks the
    nVMX regression tests.
    
    Reported-by: Jack Wang <jack.wang.usish@gmail.com>
    Reported-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Cc: Sean Christopherson <sean.j.christopherson@intel.com>
    Cc: Jim Mattson <jmattson@google.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
