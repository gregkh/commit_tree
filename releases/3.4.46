commit d9973ea05c48df87d0e18fdec61121930d5cde9d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun May 19 10:58:34 2013 -0700

    Linux 3.4.46

commit 53b4378e4f77b7ab6565d6d40559bd5eb1b34629
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Thu May 16 17:43:55 2013 +0200

    usermodehelper: check subprocess_info->path != NULL
    
    commit 264b83c07a84223f0efd0d1db9ccc66d6f88288f upstream.
    
    argv_split(empty_or_all_spaces) happily succeeds, it simply returns
    argc == 0 and argv[0] == NULL. Change call_usermodehelper_exec() to
    check sub_info->path != NULL to avoid the crash.
    
    This is the minimal fix, todo:
    
     - perhaps we should change argv_split() to return NULL or change the
       callers.
    
     - kill or justify ->path[0] check
    
     - narrow the scope of helper_lock()
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Acked-By: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b58f2e1650eafddfdfcff2f4831bf2896f8c9bf6
Author: Kees Cook <keescook@chromium.org>
Date:   Sun May 12 22:00:51 2013 -0700

    drm/radeon: check incoming cliprects pointer
    
    commit fefaedcfb82d2e57c2320acf60604ab03b750cc0 upstream.
    
    The "boxes" parameter points into userspace memory. It should be verified
    like any other operation against user memory.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85e3025845566a5295bf91c514efb3fd640c1a56
Author: Benjamin LaHaise <bcrl@kvack.org>
Date:   Thu May 16 14:04:27 2013 -0500

    ipmi: ipmi_devintf: compat_ioctl method fails to take ipmi_mutex
    
    commit 6368087e851e697679af059b4247aca33a69cef3 upstream.
    
    When a 32 bit version of ipmitool is used on a 64 bit kernel, the
    ipmi_devintf code fails to correctly acquire ipmi_mutex.  This results in
    incomplete data being retrieved in some cases, or other possible failures.
    Add a wrapper around compat_ipmi_ioctl() to take ipmi_mutex to fix this.
    
    Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65b904e51e44d998ea4a7e9e95e4f2a96754c936
Author: Chen Gang <gang.chen@asianux.com>
Date:   Thu May 16 14:04:25 2013 -0500

    drivers/char/ipmi: memcpy, need additional 2 bytes to avoid memory overflow
    
    commit a5f2b3d6a738e7d4180012fe7b541172f8c8dcea upstream.
    
    When calling memcpy, read_data and write_data need additional 2 bytes.
    
      write_data:
        for checking:  "if (size > IPMI_MAX_MSG_LENGTH)"
        for operating: "memcpy(bt->write_data + 3, data + 1, size - 1)"
    
      read_data:
        for checking:  "if (msg_len < 3 || msg_len > IPMI_MAX_MSG_LENGTH)"
        for operating: "memcpy(data + 2, bt->read_data + 4, msg_len - 2)"
    
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8401f498590491d3d940d8d78911d554c3e8e215
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Mon May 6 03:23:40 2013 +0000

    ACPI / EC: Restart transaction even when the IBF flag set
    
    commit 28fe5c825f8e15744d04c7c1b8df197950923ecd upstream.
    
    The EC driver works abnormally with IBF flag always set.
    IBF means "The host has written a byte of data to the command
    or data port, but the embedded controller has not yet read it".
    If IBF is set in the EC status and not cleared, this will cause
    all subsequent EC requests to fail with a timeout error.
    
    Change the EC driver so that it doesn't refuse to restart a
    transaction if IBF is set in the status.  Also increase the
    number of transaction restarts to 5, as it turns out that 2
    is not sufficient in some cases.
    
    This bug happens on several different machines (Asus V1S,
    Dell Latitude E6530, Samsung R719, Acer Aspire 5930G,
    Sony Vaio SR19VN and others).
    
    [rjw: Changelog]
    References: https://bugzilla.kernel.org/show_bug.cgi?id=14733
    References: https://bugzilla.kernel.org/show_bug.cgi?id=15560
    References: https://bugzilla.kernel.org/show_bug.cgi?id=15946
    References: https://bugzilla.kernel.org/show_bug.cgi?id=42945
    References: https://bugzilla.kernel.org/show_bug.cgi?id=48221
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 173603ab8ed8aff22b3606abf3b1dc591cc5ccd7
Author: Shlomo Pongratz <shlomop@mellanox.com>
Date:   Sun May 5 17:36:26 2013 +0300

    iscsi-target: Fix processing of OOO commands
    
    commit 3eccfdb01da58fbd0f789ae6ca61cee3769e26de upstream.
    
    Fix two issues in OOO commands processing done at iscsit_attach_ooo_cmdsn.
    
    Handle command serial numbers wrap around by using iscsi_sna_lt and not regular comparisson.
    
    The routine iterates until it finds an entry whose serial number is greater than the serial number of
    the new one, thus the new entry should be inserted before that entry and not after.
    
    Signed-off-by: Shlomo Pongratz <shlomop@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1f6964aaa88bbd9695a51fc7b46177bed91e425
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Mon Apr 29 16:21:07 2013 -0700

    drivers/rtc/rtc-pcf2123.c: fix error return code in pcf2123_probe()
    
    commit 35623715818dfa720cccf99cd280dcbb4b78da23 upstream.
    
    Fix to return -ENODEV in the chip not found error handling
    case instead of 0, as done elsewhere in this function.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Cc: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jonghwan Choi <jhbird.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e0bc33ad782e6dfc69796c4dcbbfa7338019548
Author: Philipp Reisner <philipp.reisner@linbit.com>
Date:   Wed Mar 27 14:08:47 2013 +0100

    drbd: fix for deadlock when using automatic split-brain-recovery
    
    commit 7c689e63a847316c1b2500f86891b0a574ce7e69 upstream.
    
    With an automatic after split-brain recovery policy of
    "after-sb-1pri call-pri-lost-after-sb",
    when trying to drbd_set_role() to R_SECONDARY,
    we run into a deadlock.
    
    This was first recognized and supposedly fixed by
    2009-06-10 "Fixed a deadlock when using automatic split brain recovery when both nodes are"
    replacing drbd_set_role() with drbd_change_state() in that code-path,
    but the first hunk of that patch forgets to remove the drbd_set_role().
    
    We apparently only ever tested the "two primaries" case.
    
    Signed-off-by: Philipp Reisner <philipp.reisner@linbit.com>
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Jonghwan Choi <jhbird.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ea659de2177294c23a256bbdd17d07c55162fcc
Author: Francois Romieu <romieu@fr.zoreil.com>
Date:   Fri May 10 00:53:11 2013 +0200

    r8169: fix vlan tag read ordering.
    
    commit ce11ff5e5963e441feb591e76278528f876c332d upstream.
    
    Control of receive descriptor must not be returned to ethernet chipset
    before vlan tag processing is done.
    
    VLAN tag receive word is now reset both in normal and error path.
    
    Signed-off-by: Francois Romieu <romieu@fr.zoreil.com>
    Spotted-by: Timo Teras <timo.teras@iki.fi>
    Cc: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dab2d3dc45ae7343216635d981d43637e1cb7d45
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Tue May 7 16:18:13 2013 -0700

    hugetlbfs: fix mmap failure in unaligned size request
    
    commit af73e4d9506d3b797509f3c030e7dcd554f7d9c4 upstream.
    
    The current kernel returns -EINVAL unless a given mmap length is
    "almost" hugepage aligned.  This is because in sys_mmap_pgoff() the
    given length is passed to vm_mmap_pgoff() as it is without being aligned
    with hugepage boundary.
    
    This is a regression introduced in commit 40716e29243d ("hugetlbfs: fix
    alignment of huge page requests"), where alignment code is pushed into
    hugetlb_file_setup() and the variable len in caller side is not changed.
    
    To fix this, this patch partially reverts that commit, and adds
    alignment code in caller side.  And it also introduces hstate_sizelog()
    in order to get proper hstate to specified hugepage size.
    
    Addresses https://bugzilla.kernel.org/show_bug.cgi?id=56881
    
    [akpm@linux-foundation.org: fix warning when CONFIG_HUGETLB_PAGE=n]
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Reported-by: <iceman_dvd@yahoo.com>
    Cc: Steven Truelove <steven.truelove@utoronto.ca>
    Cc: Jianguo Wu <wujianguo@huawei.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jianguo Wu <wujianguo@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd77cf8cc7aca5902e759c26049730c151bc885f
Author: Tomoya MORINAGA <tomoya.rohm@gmail.com>
Date:   Tue Feb 12 11:25:33 2013 +0900

    pch_dma: Use GFP_ATOMIC because called from interrupt context
    
    commit 5c1ef59168c485318e40ba485c1eba57d81d0faa upstream.
    
    pdc_desc_get() is called from pd_prep_slave_sg, and the function is
    called from interrupt context(e.g. Uart driver "pch_uart.c").
    In fact, I saw kernel error message.
    So, GFP_ATOMIC must be used not GFP_NOIO.
    
    Signed-off-by: Tomoya MORINAGA <tomoya.rohm@gmail.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22f9c13508be586b3cf6a531dc980b169c1320fe
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Wed Sep 26 23:45:39 2012 +0100

    dm thin: do not set discard_zeroes_data
    
    commit 307615a26e95406c42c95916a66ba50434567e0f upstream.
    
    The dm thin pool target claims to support the zeroing of discarded
    data areas.  This turns out to be incorrect when processing discards
    that do not exactly cover a complete number of blocks, so the target
    must always set discard_zeroes_data_unsupported.
    
    The thin pool target will zero blocks when they are allocated if the
    skip_block_zeroing feature is not specified.  The block layer
    may send a discard that only partly covers a block.  If a thin pool
    block is partially discarded then there is no guarantee that the
    discarded data will get zeroed before it is accessed again.
    Due to this, thin devices cannot claim discards will always zero data.
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Cc: Libo Chen <libo.chen@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a98124aac0b5adc5de8ae54f11322781cb4d85c3
Author: Cong Wang <amwang@redhat.com>
Date:   Thu May 9 22:40:00 2013 +0000

    xfrm6: release dev before returning error
    
    [ Upstream commit 84c4a9dfbf430861e7588d95ae3ff61535dca351 ]
    
    We forget to call dev_put() on error path in xfrm6_fill_dst(),
    its caller doesn't handle this.
    
    Signed-off-by: Cong Wang <amwang@redhat.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d9577d0b2d7958c821236064d995a995e1c4256
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu May 9 10:28:16 2013 +0000

    ipv6: do not clear pinet6 field
    
    [ Upstream commit f77d602124d865c38705df7fa25c03de9c284ad2 ]
    
    We have seen multiple NULL dereferences in __inet6_lookup_established()
    
    After analysis, I found that inet6_sk() could be NULL while the
    check for sk_family == AF_INET6 was true.
    
    Bug was added in linux-2.6.29 when RCU lookups were introduced in UDP
    and TCP stacks.
    
    Once an IPv6 socket, using SLAB_DESTROY_BY_RCU is inserted in a hash
    table, we no longer can clear pinet6 field.
    
    This patch extends logic used in commit fcbdf09d9652c891
    ("net: fix nulls list corruptions in sk_prot_alloc")
    
    TCP/UDP/UDPLite IPv6 protocols provide their own .clear_sk() method
    to make sure we do not clear pinet6 field.
    
    At socket clone phase, we do not really care, as cloning the parent (non
    NULL) pinet6 is not adding a fatal race.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2f17ef7c7a9ac2a9ed1160c768c67d2cf86b8d5
Author: Jiri Pirko <jiri@resnulli.us>
Date:   Thu May 9 04:23:40 2013 +0000

    macvlan: fix passthru mode race between dev removal and rx path
    
    [ Upstream commit 233c7df0821c4190e2d3f4be0f2ca0ab40a5ed8c, note
      that I had to add list_first_or_null_rcu to rculist.h in order
      to accomodate this fix. ]
    
    Currently, if macvlan in passthru mode is created and data are rxed and
    you remove this device, following panic happens:
    
    NULL pointer dereference at 0000000000000198
    IP: [<ffffffffa0196058>] macvlan_handle_frame+0x153/0x1f7 [macvlan]
    
    I'm using following script to trigger this:
    <script>
    while [ 1 ]
    do
            ip link add link e1 name macvtap0 type macvtap mode passthru
            ip link set e1 up
            ip link set macvtap0 up
            IFINDEX=`ip link |grep macvtap0 | cut -f 1 -d ':'`
            cat /dev/tap$IFINDEX  >/dev/null &
            ip link del dev macvtap0
    done
    </script>
    
    I run this script while "ping -f" is running on another machine to send
    packets to e1 rx.
    
    Reason of the panic is that list_first_entry() is blindly called in
    macvlan_handle_frame() even if the list was empty. vlan is set to
    incorrect pointer which leads to the crash.
    
    I'm fixing this by protecting port->vlans list by rcu and by preventing
    from getting incorrect pointer in case the list is empty.
    
    Introduced by: commit eb06acdc85585f2 "macvlan: Introduce 'passthru' mode to takeover the underlying device"
    
    Signed-off-by: Jiri Pirko <jiri@resnulli.us>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e52507b9069411a0a770d49daa246f8cb2fbcde4
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Wed May 8 09:45:47 2013 +0000

    if_cablemodem.h: Add parenthesis around ioctl macros
    
    [ Upstream commit 4f924b2aa4d3cb30f07e57d6b608838edcbc0d88 ]
    
    Protect the SIOCGCM* ioctl macros with parenthesis.
    
    Reported-by: Paul Wouters <pwouters@redhat.com>
    Signed-off-by: Josh Boyer <jwboyer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9faef35be7ff4fbaeb6ed86ca5a3fdcf46d630be
Author: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Date:   Thu May 9 11:14:07 2013 +0000

    3c59x: fix PCI resource management
    
    [ Upstream commit 4b264a1676e70dc656ba53a8cac690f2d4b65f4e ]
    
    The driver wrongly claimed I/O ports at an address returned by pci_iomap() --
    even if it was passed an MMIO address.  Fix this by claiming/releasing all PCI
    resources in the PCI driver's probe()/remove() methods instead and get rid of
    'must_free_region' flag weirdness (why would Cardbus claim anything for us?).
    
    Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 555f6a1e0bbc82fde6e4f537e5618b8921134b64
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Thu May 2 11:10:22 2013 +0000

    3c59x: fix freeing nonexistent resource on driver unload
    
    [ Upstream commit c81400be716aa4c76f6ebf339ba94358dbbf6da6 ]
    
    When unloading the driver that drives an EISA board, a message similar to the
    following one is displayed:
    
    Trying to free nonexistent resource <0000000000013000-000000000001301f>
    
    Then an user is unable to reload the driver because the resource it requested in
    the previous load hasn't been freed. This happens most probably due to a typo in
    vortex_eisa_remove() which calls release_region() with 'dev->base_addr'  instead
    of 'edev->base_addr'...
    
    Reported-by: Matthew Whitehead <tedheadster@gmail.com>
    Tested-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cbf196bdbc142f8d66de1bf95f4ff9b230c1b10
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri May 3 02:57:00 2013 +0000

    packet: tpacket_v3: do not trigger bug() on wrong header status
    
    [ Upstream commit 8da3056c04bfc5f69f840ab038a38389e2de8189 ]
    
    Jakub reported that it is fairly easy to trigger the BUG() macro
    from user space with TPACKET_V3's RX_RING by just giving a wrong
    header status flag. We already had a similar situation in commit
    7f5c3e3a80e6654 (``af_packet: remove BUG statement in
    tpacket_destruct_skb'') where this was the case in the TX_RING
    side that could be triggered from user space. So really, don't use
    BUG() or BUG_ON() unless there's really no way out, and i.e.
    don't use it for consistency checking when there's user space
    involved, no excuses, especially not if you're slapping the user
    with WARN + dump_stack + BUG all at once. The two functions are
    of concern:
    
      prb_retire_current_block() [when block status != TP_STATUS_KERNEL]
      prb_open_block() [when block_status != TP_STATUS_KERNEL]
    
    Calls to prb_open_block() are guarded by ealier checks if block_status
    is really TP_STATUS_KERNEL (racy!), but the first one BUG() is easily
    triggable from user space. System behaves still stable after they are
    removed. Also remove that yoda condition entirely, since it's already
    guarded.
    
    Reported-by: Jakub Zawadzki <darkjames-ws@darkjames.pl>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7157a527af680c157244db79f2d7f15d889f2ad1
Author: stephen hemminger <stephen@networkplumber.org>
Date:   Thu May 2 14:23:28 2013 +0000

    bridge: fix race with topology change timer
    
    [ Upstream commit 83401eb4990ff6af55aeed8f49681558544192e6 ]
    
    A bridge should only send topology change notice if it is not
    the root bridge. It is possible for message age timer to elect itself
    as a new root bridge, and still have a topology change timer running
    but waiting for bridge lock on other CPU.
    
    Solve the race by checking if we are root bridge before continuing.
    This was the root cause of the cases where br_send_tcn_bpdu would OOPS.
    
    Reported-by: JerryKang <jerry.kang@samsung.com>
    Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 074d34feb18f1439e13053d0869df368e8ea2107
Author: Bjørn Mork <bjorn@mork.no>
Date:   Wed May 1 23:06:42 2013 +0000

    net: vlan,ethtool: netdev_features_t is more than 32 bit
    
    [ Upstream commit b29d3145183da4e07d4b570fa8acdd3ac4a5c572 ]
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7433ca9c45b8a8c98de9cd57f84d107d05925102
Author: Patrick McHardy <kaber@trash.net>
Date:   Wed May 1 22:36:49 2013 +0000

    net: use netdev_features_t in skb_needs_linearize()
    
    [ Upstream commit 6708c9e5cc9bfc7c9a00ce9c0fdd0b1d4952b3d1 ]
    
    Signed-off-by: Patrick McHardy <kaber@trash.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddb85c714d57cabde95e71a20ee9f3aac0db167f
Author: Jamal Hadi Salim <jhs@mojatatu.com>
Date:   Sun Apr 28 05:06:38 2013 +0000

    net_sched: act_ipt forward compat with xtables
    
    [ Upstream commit 0dcffd09641f3abb21ac5cabc61542ab289d1a3c ]
    
    Deal with changes in newer xtables while maintaining backward
    compatibility. Thanks to Jan Engelhardt for suggestions.
    
    Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79b2981d7cedbab20d617cd4eeacf74657dfd9cf
Author: Matthew Whitehead <tedheadster@gmail.com>
Date:   Mon Apr 29 17:46:53 2013 -0400

    3c509.c: call SET_NETDEV_DEV for all device types (ISA/ISAPnP/EISA)
    
    [ Upstream commit 3b54912f9cd167641b91d4a697bd742f70e534fe ]
    
    The venerable 3c509 driver only sets its device parent in one case, the ISAPnP one.
    It does this with the SET_NETDEV_DEV function. It should register with the device
    hierarchy in two additional cases: standard (non-PnP) ISA and EISA.
    
    - Currently they appear here:
    /sys/devices/virtual/net/eth0 (standard ISA)
    /sys/devices/virtual/net/eth1 (EISA)
    
    - Rather, they should instead be here:
    /sys/devices/isa/3c509.0/net/eth0 (standard ISA)
    /sys/devices/pci0000:00/0000:00:07.0/00:04/net/eth1 (EISA)
    
    Tested on ISA and EISA boards.
    
    Signed-off-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71ee19e72689cb4568e042ed49d1ac27336a10d6
Author: Ben Hutchings <bhutchings@solarflare.com>
Date:   Mon Apr 22 22:40:07 2013 +0100

    sfc: Fix naming of MTD partitions for FPGA bitfiles
    
    [ Upstream commit 89cc80a44b7c320e08599cb86f6aef0ead8986a1 ]
    
    efx_mcdi_get_board_cfg() uses a buffer for the firmware response that
    is only large enough to hold subtypes for the originally defined set
    of NVRAM partitions.  Longer responses are truncated, and we may read
    off the end of the buffer when copying out subtypes for additional
    partitions.  In particular, this can result in the MTD partition for
    an FPGA bitfile being named e.g. 'eth5 sfc_fpga:00' when it should be
    'eth5 sfc_fpga:01'.  This means the firmware update tool (sfupdate)
    can't tell which bitfile should be written to the partition.
    
    Correct the response buffer size.
    
    Signed-off-by: Ben Hutchings <bhutchings@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e1546d7e14ef043ff74070cea0aff55ba2f600c
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 24 18:34:55 2013 -0700

    tcp: force a dst refcount when prequeue packet
    
    [ Upstream commit 093162553c33e9479283e107b4431378271c735d ]
    
    Before escaping RCU protected section and adding packet into
    prequeue, make sure the dst is refcounted.
    
    Reported-by: Mike Galbraith <bitbucket@online.de>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1203d9c66e6b892bd8043eea51c5cd510d097266
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Apr 18 12:57:11 2013 +0000

    net: qmi_wwan: prevent duplicate mac address on link (firmware bug workaround)
    
    [ Upstream commit cc6ba5fdaabea7a7b28de3ba1e0fe54d92232fe5 ]
    
    We normally trust and use the CDC functional descriptors provided by a
    number of devices.  But some of these will erroneously list the address
    reserved for the device end of the link.  Attempting to use this on
    both the device and host side will naturally not work.
    
    Work around this bug by ignoring the functional descriptor and assign a
    random address instead in this case.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8abf422282e2452c83392717481ad850b0d982c
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Apr 18 12:57:10 2013 +0000

    net: qmi_wwan: fixup destination address (firmware bug workaround)
    
    [ Upstream commit 6483bdc9d76fb98174797516a19d289eb837909e ]
    
    Received packets are sometimes addressed to 00:a0:c6:00:00:00
    instead of the address the device firmware should have learned
    from the host:
    
    321.224126 77.16.85.204 -> 148.122.171.134 ICMP 98 Echo (ping) request  id=0x4025, seq=64/16384, ttl=64
    
    0000  82 c0 82 c9 f1 67 82 c0 82 c9 f1 67 08 00 45 00   .....g.....g..E.
    0010  00 54 00 00 40 00 40 01 57 cc 4d 10 55 cc 94 7a   .T..@.@.W.M.U..z
    0020  ab 86 08 00 62 fc 40 25 00 40 b2 bc 6e 51 00 00   ....b.@%.@..nQ..
    0030  00 00 6b bd 09 00 00 00 00 00 10 11 12 13 14 15   ..k.............
    0040  16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25   .......... !"#$%
    0050  26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35   &'()*+,-./012345
    0060  36 37                                             67
    
    321.240607 148.122.171.134 -> 77.16.85.204 ICMP 98 Echo (ping) reply    id=0x4025, seq=64/16384, ttl=55
    
    0000  00 a0 c6 00 00 00 02 50 f3 00 00 00 08 00 45 00   .......P......E.
    0010  00 54 00 56 00 00 37 01 a0 76 94 7a ab 86 4d 10   .T.V..7..v.z..M.
    0020  55 cc 00 00 6a fc 40 25 00 40 b2 bc 6e 51 00 00   U...j.@%.@..nQ..
    0030  00 00 6b bd 09 00 00 00 00 00 10 11 12 13 14 15   ..k.............
    0040  16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25   .......... !"#$%
    0050  26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35   &'()*+,-./012345
    0060  36 37                                             67
    
    The bogus address is always the same, and matches the address
    suggested by many devices as a default address.  It is likely a
    hardcoded firmware default.
    
    The circumstances where this bug has been observed indicates that
    the trigger is related to timing or some other factor the host
    cannot control. Repeating the exact same configuration sequence
    that caused it to trigger once, will not necessarily cause it to
    trigger the next time. Reproducing the bug is therefore difficult.
    This opens up a possibility that the bug is more common than we can
    confirm, because affected devices often will work properly again
    after a reset.  A procedure most users are likely to try out before
    reporting a bug.
    
    Unconditionally rewriting the destination address if the first digit
    of the received packet is 0, is considered an acceptable compromise
    since we already have to inspect this digit.  The simplification will
    cause unnecessary rewrites if the real address starts with 0, but this
    is still better than adding additional tests for this particular case.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ed87e67b0065b56379b8c5f560c211efaa9a210
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Apr 18 12:57:09 2013 +0000

    net: qmi_wwan: fixup missing ethernet header (firmware bug workaround)
    
    [ Upstream commit 6ff509af3869ccac69dcf8905fc75b9a76951594 ]
    
    A number of LTE devices from different vendors all suffer from the
    same firmware bug: Most of the packets received from the device while
    it is attached to a LTE network will not have an ethernet header. The
    devices work as expected when attached to 2G or 3G networks, sending
    an ethernet header with all packets.
    
    This driver is not aware of which network the modem attached to, and
    even if it were there are still some packet types which are always
    received with the header intact.
    
    All devices supported by this driver have severely limited
    networking capabilities:
     - can only transmit IPv4, IPv6 and possibly ARP
     - can only support a single host hardware address at any time
     - will only do point-to-point communcation with the host
    
    Because of this, we are able to reliably identify any bogus raw IP
    packets by simply looking at the 4 IP version bits.  All we need to
    do is to avoid 4 or 6 in the first digit of the mac address.  This
    workaround ensures this, and fix up the received packets as necessary.
    
    Given the distribution of the bug, it is believed that the source is
    the chipset vendor.  The devices which are verified to be affected are:
     Huawei E392u-12 (Qualcomm MDM9200)
     Pantech UML290  (Qualcomm MDM9600)
     Novatel USB551L (Qualcomm MDM9600)
     Novatel E362    (Qualcomm MDM9600)
    
    It is believed that the bug depend on firmware revision, which means
    that possibly all devices based on the above mentioned chipset may be
    affected if we consider all available firmware revisions.
    
    The information about affected devices and versions is likely
    incomplete.  As the additional overhead for packets not needing this
    fixup is very small, it is considered acceptable to apply the
    workaround to all devices handled by this driver.
    
    Reported-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25853a12e468fa75e82fca7208f03ad4c879f95f
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Sat Apr 20 12:08:11 2013 +0200

    drm/mm: fix dump table BUG
    
    commit 3a359f0b21ab218c1bf7a6a1b638b6fd143d0b99 upstream.
    
    In
    
    commit 9e8944ab564f2e3dde90a518cd32048c58918608
    Author: Chris Wilson <chris@chris-wilson.co.uk>
    Date:   Thu Nov 15 11:32:17 2012 +0000
    
        drm: Introduce an iterator over holes in the drm_mm range manager
    
    helpers and iterators for hole handling have been introduced with some
    debug BUG_ONs sprinkled over. Unfortunately this broke the mm dumper
    which unconditionally tried to compute the size of the very first
    hole.
    
    While at it unify the code a bit with the hole dumping in the loop.
    
    v2: Extract a hole dump helper.
    
    Reported-by: Christopher Harvey <charvey@matrox.com>
    Cc: Christopher Harvey <charvey@matrox.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Acked-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5219d3dd6f96a7640929307a2344d9905cdf6b2c
Author: Thommy Jakobsson <thommyj@gmail.com>
Date:   Tue Apr 23 21:45:11 2013 +0200

    B43: Handle DMA RX descriptor underrun
    
    commit 73b82bf0bfbf58e6ff328d3726934370585f6e78 upstream.
    
    Add handling of rx descriptor underflow. This fixes a fault that could
    happen on slow machines, where data is received faster than the CPU can
    handle. In such a case the device will use up all rx descriptors and
    refuse to send any more data before confirming that it is ok. This
    patch enables necessary interrupt to discover such a situation and will
    handle them by dropping everything in the ring buffer.
    
    Reviewed-by: Michael Buesch <m@bues.ch>
    Signed-off-by: Thommy Jakobsson <thommyj@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2969620bf1452ec310fdcbf0d5a567627d0f5c74
Author: Daniel Drake <dsd@laptop.org>
Date:   Wed May 8 15:37:19 2013 -0400

    mwifiex: fix setting of multicast filter
    
    commit ccd384b10420ac81ba3fb9b0a7d18272c7173552 upstream.
    
    A small bug in this code was causing the ALLMULTI filter to be set
    when in fact we were just wanting to program a selective multicast list
    to the hardware.
    
    Fix that bug and remove a redundant if condition in the code that
    follows.
    
    This fixes wakeup behaviour when multicast WOL is enabled. Previously,
    all multicast packets would wake up the system. Now, only those that the
    host intended to receive trigger wakeups.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Acked-by: Bing Zhao <bzhao@marvell.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f68f0ba1c85d66c3f8665c59a007971ad11adc1
Author: Bing Zhao <bzhao@marvell.com>
Date:   Mon May 6 19:46:53 2013 -0700

    mwifiex: clear is_suspended flag when interrupt is received early
    
    commit 48795424acff7215d5eac0b52793a2c1eb3a6283 upstream.
    
    When the XO-4 with 8787 wireless is woken up due to wake-on-WLAN
    mwifiex is often flooded with "not allowed while suspended" messages
    and the interface is unusable.
    
    [  202.171609] int: sdio_ireg = 0x1
    [  202.180700] info: mwifiex_process_hs_config: auto cancelling host
                   sleep since there is interrupt from the firmware
    [  202.201880] event: wakeup device...
    [  202.211452] event: hs_deactivated
    [  202.514638] info: --- Rx: Data packet ---
    [  202.514753] data: 4294957544 BSS(0-0): Data <= kernel
    [  202.514825] PREP_CMD: device in suspended state
    [  202.514839] data: dequeuing the packet ec7248c0 ec4869c0
    [  202.514886] mwifiex_write_data_sync: not allowed while suspended
    [  202.514886] host_to_card, write iomem (1) failed: -1
    [  202.514917] mwifiex_write_data_sync: not allowed while suspended
    [  202.514936] host_to_card, write iomem (2) failed: -1
    [  202.514949] mwifiex_write_data_sync: not allowed while suspended
    [  202.514965] host_to_card, write iomem (3) failed: -1
    [  202.514976] mwifiex_write_data_async failed: 0xFFFFFFFF
    
    This can be readily reproduced when putting the XO-4 in a loop where
    it goes to sleep due to inactivity, but then wakes up due to an
    incoming ping. The error is hit within an hour or two.
    
    This issue happens when an interrupt comes in early while host sleep
    is still activated. Driver handles this case by auto cancelling host
    sleep. However is_suspended flag is still set which prevents any cmd
    or data from being sent to firmware. Fix it by clearing is_suspended
    flag in this path.
    
    Reported-by: Daniel Drake <dsd@laptop.org>
    Tested-by: Daniel Drake <dsd@laptop.org>
    Signed-off-by: Bing Zhao <bzhao@marvell.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48633a6011b0bcbf2bf5a4071a5a55a4a3b45a94
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Sat Apr 27 11:47:01 2013 +0200

    ath9k: fix key allocation error handling for powersave keys
    
    commit 4ef69d0394cba8caa9f75d3f2e53429bfb8b3045 upstream.
    
    If no keycache slots are available, ath_key_config can return -ENOSPC.
    If the key index is not checked for errors, it can lead to logspam that
    looks like this: "ath: wiphy0: keyreset: keycache entry 228 out of range"
    This can cause follow-up errors if the invalid keycache index gets
    used for tx.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36d1c0c62aca74313a95f71c180c73a2eda80ea9
Author: Robert Jennings <rcj@linux.vnet.ibm.com>
Date:   Tue May 7 04:34:11 2013 +0000

    powerpc: Bring all threads online prior to migration/hibernation
    
    commit 120496ac2d2d60aee68d3123a68169502a85f4b5 upstream.
    
    This patch brings online all threads which are present but not online
    prior to migration/hibernation.  After migration/hibernation those
    threads are taken back offline.
    
    During migration/hibernation all online CPUs must call H_JOIN, this is
    required by the hypervisor.  Without this patch, threads that are offline
    (H_CEDE'd) will not be woken to make the H_JOIN call and the OS will be
    deadlocked (all threads either JOIN'd or CEDE'd).
    
    Signed-off-by: Robert Jennings <rcj@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d556c9b5a98ceee8b1d1d74d7277141da437bc26
Author: Lachlan McIlroy <lmcilroy@redhat.com>
Date:   Sun May 5 23:10:00 2013 -0400

    ext4: limit group search loop for non-extent files
    
    commit e6155736ad76b2070652745f9e54cdea3f0d8567 upstream.
    
    In the case where we are allocating for a non-extent file,
    we must limit the groups we allocate from to those below
    2^32 blocks, and ext4_mb_regular_allocator() attempts to
    do this initially by putting a cap on ngroups for the
    subsequent search loop.
    
    However, the initial target group comes in from the
    allocation context (ac), and it may already be beyond
    the artificially limited ngroups.  In this case,
    the limit
    
            if (group == ngroups)
                    group = 0;
    
    at the top of the loop is never true, and the loop will
    run away.
    
    Catch this case inside the loop and reset the search to
    start at group 0.
    
    [sandeen@redhat.com: add commit msg & comments]
    
    Signed-off-by: Lachlan McIlroy <lmcilroy@redhat.com>
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cba998b9b3799a5d6861a969d7b7d9b4f4f181f6
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Tue May 14 15:40:48 2013 -0400

    tracing: Fix leaks of filter preds
    
    commit 60705c89460fdc7227f2d153b68b3f34814738a4 upstream.
    
    Special preds are created when folding a series of preds that
    can be done in serial. These are allocated in an ops field of
    the pred structure. But they were never freed, causing memory
    leaks.
    
    This was discovered using the kmemleak checker:
    
    unreferenced object 0xffff8800797fd5e0 (size 32):
      comm "swapper/0", pid 1, jiffies 4294690605 (age 104.608s)
      hex dump (first 32 bytes):
        00 00 01 00 03 00 05 00 07 00 09 00 0b 00 0d 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff814b52af>] kmemleak_alloc+0x73/0x98
        [<ffffffff8111ff84>] kmemleak_alloc_recursive.constprop.42+0x16/0x18
        [<ffffffff81120e68>] __kmalloc+0xd7/0x125
        [<ffffffff810d47eb>] kcalloc.constprop.24+0x2d/0x2f
        [<ffffffff810d4896>] fold_pred_tree_cb+0xa9/0xf4
        [<ffffffff810d3781>] walk_pred_tree+0x47/0xcc
        [<ffffffff810d5030>] replace_preds.isra.20+0x6f8/0x72f
        [<ffffffff810d50b5>] create_filter+0x4e/0x8b
        [<ffffffff81b1c30d>] ftrace_test_event_filter+0x5a/0x155
        [<ffffffff8100028d>] do_one_initcall+0xa0/0x137
        [<ffffffff81afbedf>] kernel_init_freeable+0x14d/0x1dc
        [<ffffffff814b24b7>] kernel_init+0xe/0xdb
        [<ffffffff814d539c>] ret_from_fork+0x7c/0xb0
        [<ffffffffffffffff>] 0xffffffffffffffff
    
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Tom Zanussi <tzanussi@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33b7cfcb34b4ae37cde7a8a1c97c9be27677e931
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri May 3 15:02:50 2013 +0200

    tick: Cleanup NOHZ per cpu data on cpu down
    
    commit 4b0c0f294f60abcdd20994a8341a95c8ac5eeb96 upstream.
    
    Prarit reported a crash on CPU offline/online. The reason is that on
    CPU down the NOHZ related per cpu data of the dead cpu is not cleaned
    up. If at cpu online an interrupt happens before the per cpu tick
    device is registered the irq_enter() check potentially sees stale data
    and dereferences a NULL pointer.
    
    Cleanup the data after the cpu is dead.
    
    Reported-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Mike Galbraith <bitbucket@online.de>
    Link: http://lkml.kernel.org/r/alpine.LFD.2.02.1305031451561.2886@ionos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed032fd4d81041e4002fc55ff1832ee588f103da
Author: Tirupathi Reddy <tirupath@codeaurora.org>
Date:   Tue May 14 13:59:02 2013 +0530

    timer: Don't reinitialize the cpu base lock during CPU_UP_PREPARE
    
    commit 42a5cf46cd56f46267d2a9fcf2655f4078cd3042 upstream.
    
    An inactive timer's base can refer to a offline cpu's base.
    
    In the current code, cpu_base's lock is blindly reinitialized each
    time a CPU is brought up. If a CPU is brought online during the period
    that another thread is trying to modify an inactive timer on that CPU
    with holding its timer base lock, then the lock will be reinitialized
    under its feet. This leads to following SPIN_BUG().
    
    <0> BUG: spinlock already unlocked on CPU#3, kworker/u:3/1466
    <0> lock: 0xe3ebe000, .magic: dead4ead, .owner: kworker/u:3/1466, .owner_cpu: 1
    <4> [<c0013dc4>] (unwind_backtrace+0x0/0x11c) from [<c026e794>] (do_raw_spin_unlock+0x40/0xcc)
    <4> [<c026e794>] (do_raw_spin_unlock+0x40/0xcc) from [<c076c160>] (_raw_spin_unlock+0x8/0x30)
    <4> [<c076c160>] (_raw_spin_unlock+0x8/0x30) from [<c009b858>] (mod_timer+0x294/0x310)
    <4> [<c009b858>] (mod_timer+0x294/0x310) from [<c00a5e04>] (queue_delayed_work_on+0x104/0x120)
    <4> [<c00a5e04>] (queue_delayed_work_on+0x104/0x120) from [<c04eae00>] (sdhci_msm_bus_voting+0x88/0x9c)
    <4> [<c04eae00>] (sdhci_msm_bus_voting+0x88/0x9c) from [<c04d8780>] (sdhci_disable+0x40/0x48)
    <4> [<c04d8780>] (sdhci_disable+0x40/0x48) from [<c04bf300>] (mmc_release_host+0x4c/0xb0)
    <4> [<c04bf300>] (mmc_release_host+0x4c/0xb0) from [<c04c7aac>] (mmc_sd_detect+0x90/0xfc)
    <4> [<c04c7aac>] (mmc_sd_detect+0x90/0xfc) from [<c04c2504>] (mmc_rescan+0x7c/0x2c4)
    <4> [<c04c2504>] (mmc_rescan+0x7c/0x2c4) from [<c00a6a7c>] (process_one_work+0x27c/0x484)
    <4> [<c00a6a7c>] (process_one_work+0x27c/0x484) from [<c00a6e94>] (worker_thread+0x210/0x3b0)
    <4> [<c00a6e94>] (worker_thread+0x210/0x3b0) from [<c00aad9c>] (kthread+0x80/0x8c)
    <4> [<c00aad9c>] (kthread+0x80/0x8c) from [<c000ea80>] (kernel_thread_exit+0x0/0x8)
    
    As an example, this particular crash occurred when CPU #3 is executing
    mod_timer() on an inactive timer whose base is refered to offlined CPU
    #2.  The code locked the timer_base corresponding to CPU #2. Before it
    could proceed, CPU #2 came online and reinitialized the spinlock
    corresponding to its base. Thus now CPU #3 held a lock which was
    reinitialized. When CPU #3 finally ended up unlocking the old cpu_base
    corresponding to CPU #2, we hit the above SPIN_BUG().
    
    CPU #0          CPU #3                                 CPU #2
    ------          -------                                -------
    .....            ......                               <Offline>
                    mod_timer()
                     lock_timer_base
                       spin_lock_irqsave(&base->lock)
    
    cpu_up(2)        .....                                  ......
                                                            init_timers_cpu()
    ....             .....                                  spin_lock_init(&base->lock)
    .....              spin_unlock_irqrestore(&base->lock)  ......
                       <spin_bug>
    
    Allocation of per_cpu timer vector bases is done only once under
    "tvec_base_done[]" check. In the current code, spinlock_initialization
    of base->lock isn't under this check. When a CPU is up each time the
    base lock is reinitialized. Move base spinlock initialization under
    the check.
    
    Signed-off-by: Tirupathi Reddy <tirupath@codeaurora.org>
    Link: http://lkml.kernel.org/r/1368520142-4136-1-git-send-email-tirupath@codeaurora.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad86524f948c1914dbd5bc460a5c6fd131ec054a
Author: Anton Blanchard <anton@samba.org>
Date:   Wed Jan 9 10:46:17 2013 +1100

    audit: Syscall rules are not applied to existing processes on non-x86
    
    commit cdee3904b4ce7c03d1013ed6dd704b43ae7fc2e9 upstream.
    
    Commit b05d8447e782 (audit: inline audit_syscall_entry to reduce
    burden on archs) changed audit_syscall_entry to check for a dummy
    context before calling __audit_syscall_entry. Unfortunately the dummy
    context state is maintained in __audit_syscall_entry so once set it
    never gets cleared, even if the audit rules change.
    
    As a result, if there are no auditing rules when a process starts
    then it will never be subject to any rules added later. x86 doesn't
    see this because it has an assembly fast path that calls directly into
    __audit_syscall_entry.
    
    I noticed this issue when working on audit performance optimisations.
    I wrote a set of simple test cases available at:
    
    http://ozlabs.org/~anton/junkcode/audit_tests.tar.gz
    
    02_new_rule.py fails without the patch and passes with it. The
    test case clears all rules, starts a process, adds a rule then
    verifies the process produces a syscall audit record.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Eric Paris <eparis@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c8b65e18db43c918ec3491e2712432d2a33f8a5
Author: James Bottomley <JBottomley@Parallels.com>
Date:   Wed Apr 24 14:02:53 2013 -0700

    SCSI: sd: fix array cache flushing bug causing performance problems
    
    commit 39c60a0948cc06139e2fbfe084f83cb7e7deae3b upstream.
    
    Some arrays synchronize their full non volatile cache when the sd driver sends
    a SYNCHRONIZE CACHE command.  Unfortunately, they can have Terrabytes of this
    and we send a SYNCHRONIZE CACHE for every barrier if an array reports it has a
    writeback cache.  This leads to massive slowdowns on journalled filesystems.
    
    The fix is to allow userspace to turn off the writeback cache setting as a
    temporary measure (i.e. without doing the MODE SELECT to write it back to the
    device), so even though the device reported it has a writeback cache, the
    user, knowing that the cache is non volatile and all they care about is
    filesystem correctness, can turn that bit off in the kernel and avoid the
    performance ruinous (and safety irrelevant) SYNCHRONIZE CACHE commands.
    
    The way you do this is add a 'temporary' prefix when performing the usual
    cache setting operations, so
    
    echo temporary write through > /sys/class/scsi_disk/<disk>/cache_type
    
    Reported-by: Ric Wheeler <rwheeler@redhat.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a95901e93b435c0ab9013704b9943d39aef7539
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Sun May 5 09:30:09 2013 -0400

    xen/vcpu/pvhvm: Fix vcpu hotplugging hanging.
    
    commit 7f1fc268c47491fd5e63548f6415fc8604e13003 upstream.
    
    If a user did:
    
            echo 0 > /sys/devices/system/cpu/cpu1/online
            echo 1 > /sys/devices/system/cpu/cpu1/online
    
    we would (this a build with DEBUG enabled) get to:
    smpboot: ++++++++++++++++++++=_---CPU UP  1
    .. snip..
    smpboot: Stack at about ffff880074c0ff44
    smpboot: CPU1: has booted.
    
    and hang. The RCU mechanism would kick in an try to IPI the CPU1
    but the IPIs (and all other interrupts) would never arrive at the
    CPU1. At first glance at least. A bit digging in the hypervisor
    trace shows that (using xenanalyze):
    
    [vla] d4v1 vec 243 injecting
       0.043163027 --|x d4v1 intr_window vec 243 src 5(vector) intr f3
    ]  0.043163639 --|x d4v1 vmentry cycles 1468
    ]  0.043164913 --|x d4v1 vmexit exit_reason PENDING_INTERRUPT eip ffffffff81673254
       0.043164913 --|x d4v1 inj_virq vec 243  real
      [vla] d4v1 vec 243 injecting
       0.043164913 --|x d4v1 intr_window vec 243 src 5(vector) intr f3
    ]  0.043165526 --|x d4v1 vmentry cycles 1472
    ]  0.043166800 --|x d4v1 vmexit exit_reason PENDING_INTERRUPT eip ffffffff81673254
       0.043166800 --|x d4v1 inj_virq vec 243  real
      [vla] d4v1 vec 243 injecting
    
    there is a pending event (subsequent debugging shows it is the IPI
    from the VCPU0 when smpboot.c on VCPU1 has done
    "set_cpu_online(smp_processor_id(), true)") and the guest VCPU1 is
    interrupted with the callback IPI (0xf3 aka 243) which ends up calling
    __xen_evtchn_do_upcall.
    
    The __xen_evtchn_do_upcall seems to do *something* but not acknowledge
    the pending events. And the moment the guest does a 'cli' (that is the
    ffffffff81673254 in the log above) the hypervisor is invoked again to
    inject the IPI (0xf3) to tell the guest it has pending interrupts.
    This repeats itself forever.
    
    The culprit was the per_cpu(xen_vcpu, cpu) pointer. At the bootup
    we set each per_cpu(xen_vcpu, cpu) to point to the
    shared_info->vcpu_info[vcpu] but later on use the VCPUOP_register_vcpu_info
    to register per-CPU  structures (xen_vcpu_setup).
    This is used to allow events for more than 32 VCPUs and for performance
    optimizations reasons.
    
    When the user performs the VCPU hotplug we end up calling the
    the xen_vcpu_setup once more. We make the hypercall which returns
    -EINVAL as it does not allow multiple registration calls (and
    already has re-assigned where the events are being set). We pick
    the fallback case and set per_cpu(xen_vcpu, cpu) to point to the
    shared_info->vcpu_info[vcpu] (which is a good fallback during bootup).
    However the hypervisor is still setting events in the register
    per-cpu structure (per_cpu(xen_vcpu_info, cpu)).
    
    As such when the events are set by the hypervisor (such as timer one),
    and when we iterate in __xen_evtchn_do_upcall we end up reading stale
    events from the shared_info->vcpu_info[vcpu] instead of the
    per_cpu(xen_vcpu_info, cpu) structures. Hence we never acknowledge the
    events that the hypervisor has set and the hypervisor keeps on reminding
    us to ack the events which we never do.
    
    The fix is simple. Don't on the second time when xen_vcpu_setup is
    called over-write the per_cpu(xen_vcpu, cpu) if it points to
    per_cpu(xen_vcpu_info).
    
    Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c43bab8955fbdcf7dab17cfd0fa5eab40b4ac88c
Author: Shuah Khan <shuah@kernel.org>
Date:   Sat Mar 9 11:39:22 2013 -0700

    hp_accel: Ignore the error from lis3lv02d_poweron() at resume
    
    commit 7783819920ca52fc582a2782f654fe6ed373f465 upstream.
    
    The error in lis3lv02_poweron() is harmless in the resume path, so
    we should ignore it. It is inline with the other usages of lis3lv02_poweron()
    and matches the 3.0 code for this routine. This patch is in suse git and
    might have missed making it into the mainline.
    opensuse - commit id: 66ccdac87c322cf7af12bddba8c805af640b1cff
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Shuah Khan <shuah.khan@hp.com>
    Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bca778136280b1ab9f2d23b94670ad5ba63c1f94
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri May 3 16:09:09 2013 -0400

    nfsd4: don't allow owner override on 4.1 CLAIM_FH opens
    
    commit 9f415eb25574db4b73a9a712a4438e41dc284922 upstream.
    
    The Linux client is using CLAIM_FH to implement regular opens, not just
    recovery cases, so it depends on the server to check permissions
    correctly.
    
    Therefore the owner override, which may make sense in the delegation
    recovery case, isn't right in the CLAIM_FH case.
    
    Symptoms: on a client with 49f9a0fafd844c32f2abada047c0b9a5ba0d6255
    "NFSv4.1: Enable open-by-filehandle", Bryan noticed this:
    
            touch test.txt
            chmod 000 test.txt
            echo test > test.txt
    
    succeeding.
    
    Reported-by: Bryan Schumaker <bjschuma@netapp.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c89f6c7515b1713eebf62f67a48f9d6dcf5c3d94
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Fri May 10 14:37:15 2013 +0100

    dm snapshot: fix error return code in snapshot_ctr
    
    commit 09e8b813897a0f85bb401435d009228644c81214 upstream.
    
    Return -ENOMEM instead of success if unable to allocate pending
    exception mempool in snapshot_ctr.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a85550214614cd7e66d995592dbd54b14db50c01
Author: Wang YanQing <udknight@gmail.com>
Date:   Tue May 7 11:27:33 2013 +0800

    ALSA: HDA: Fix Oops caused by dereference NULL pointer
    
    commit 2195b063f6609e4c6268f291683902f25eaf9aa6 upstream.
    
    The interrupt handler azx_interrupt will call azx_update_rirb,
    which may call snd_hda_queue_unsol_event, snd_hda_queue_unsol_event
    will dereference chip->bus pointer.
    
    The problem is we alloc chip->bus in azx_codec_create
    which will be called after we enable IRQ and enable unsolicited
    event in azx_probe.
    
    This will cause Oops due dereference NULL pointer. I meet it, good luck:)
    
    [Rearranged the NULL check before the tracepoint and added another
     NULL check of bus->workq -- tiwai]
    
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b03a3c907aa9f1caa0624055374a633a03f8e8b2
Author: Bob Moore <robert.moore@intel.com>
Date:   Wed May 8 04:01:15 2013 +0000

    ACPICA: Fix possible buffer overflow during a field unit read operation
    
    commit 61388f9e5d93053cf399a356414f31f9b4814c6d upstream.
    
    Can only happen under these conditions: 1) The DSDT version is 1,
    meaning integers are 32-bits.  2) The field is between 33 and 64
    bits long.
    
    It applies cleanly back to ACPICA 20100806+ (Linux v2.6.37+).
    
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fbe1888cace5d821aa59f804737c90ac6eb4542
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Apr 30 10:24:41 2013 +0300

    ASoC: wm8994: missing break in wm8994_aif3_hw_params()
    
    commit 4495e46fe18f198366961bb2b324a694ef8a9b44 upstream.
    
    The missing break here means that we always return early and the
    function is a no-op.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4831852099fa57f0ac7948339a1e7554db67335b
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Wed May 8 16:48:00 2013 -0700

    ARM: OMAP: RX-51: change probe order of touchscreen and panel SPI devices
    
    commit e65f131a14726e5f1b880a528271a52428e5b3a5 upstream.
    
    Commit 9fdca9df (spi: omap2-mcspi: convert to module_platform_driver)
    broke the SPI display/panel driver probe on RX-51/N900. The exact cause is
    not fully understood, but it seems to be related to the probe order. SPI
    communication to the panel driver (spi1.2) fails unless the touchscreen
    (spi1.0) has been probed/initialized before. When the omap2-mcspi driver
    was converted to a platform driver, it resulted in that the devices are
    probed immediately after the board registers them in the order they are
    listed in the board file.
    
    Fix the issue by moving the touchscreen before the panel in the SPI
    device list.
    
    The patch fixes the following failure:
    
    [    1.260955] acx565akm spi1.2: invalid display ID
    [    1.265899] panel-acx565akm display0: acx_panel_probe panel detect error
    [    1.273071] omapdss CORE error: driver probe failed: -19
    
    Tested-by: Sebastian Reichel <sre@debian.org>
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Cc: Pali Rohár <pali.rohar@gmail.com>
    Cc: Joni Lapilainen <joni.lapilainen@gmail.com>
    Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb5dfa51315da5d7c041f49f7f139a6c6659b584
Author: Gleb Natapov <gleb@redhat.com>
Date:   Wed May 8 18:38:44 2013 +0300

    KVM: VMX: fix halt emulation while emulating invalid guest sate
    
    commit 8d76c49e9ffeee839bc0b7a3278a23f99101263e upstream.
    
    The invalid guest state emulation loop does not check halt_request
    which causes 100% cpu loop while guest is in halt and in invalid
    state, but more serious issue is that this leaves halt_request set, so
    random instruction emulated by vm86 #GP exit can be interpreted
    as halt which causes guest hang. Fix both problems by handling
    halt_request in emulation loop.
    
    Reported-by: Tomas Papan <tomas.papan@gmail.com>
    Tested-by: Tomas Papan <tomas.papan@gmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
