commit c5464f4be19b78584713800a695dffdcf1761e27
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Oct 17 08:56:30 2020 +0200

    Linux 5.8.16
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jeffrin Jose T <jeffrin@rajagiritech.edu.in>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20201016090437.153175229@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cadc0dd5ce2401c6fcea797e9eea188cef57986
Author: Jan Kara <jack@suse.cz>
Date:   Wed Sep 30 17:08:20 2020 +0200

    reiserfs: Fix oops during mount
    
    commit c2bb80b8bdd04dfe32364b78b61b6a47f717af52 upstream.
    
    With suitably crafted reiserfs image and mount command reiserfs will
    crash when trying to verify that XATTR_ROOT directory can be looked up
    in / as that recurses back to xattr code like:
    
     xattr_lookup+0x24/0x280 fs/reiserfs/xattr.c:395
     reiserfs_xattr_get+0x89/0x540 fs/reiserfs/xattr.c:677
     reiserfs_get_acl+0x63/0x690 fs/reiserfs/xattr_acl.c:209
     get_acl+0x152/0x2e0 fs/posix_acl.c:141
     check_acl fs/namei.c:277 [inline]
     acl_permission_check fs/namei.c:309 [inline]
     generic_permission+0x2ba/0x550 fs/namei.c:353
     do_inode_permission fs/namei.c:398 [inline]
     inode_permission+0x234/0x4a0 fs/namei.c:463
     lookup_one_len+0xa6/0x200 fs/namei.c:2557
     reiserfs_lookup_privroot+0x85/0x1e0 fs/reiserfs/xattr.c:972
     reiserfs_fill_super+0x2b51/0x3240 fs/reiserfs/super.c:2176
     mount_bdev+0x24f/0x360 fs/super.c:1417
    
    Fix the problem by bailing from reiserfs_xattr_get() when xattrs are not
    yet initialized.
    
    CC: stable@vger.kernel.org
    Reported-by: syzbot+9b33c9b118d77ff59b6f@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 492f415bb105ae3078cb5dac334fec2f68ec09a8
Author: Jan Kara <jack@suse.cz>
Date:   Mon Sep 21 15:08:50 2020 +0200

    reiserfs: Initialize inode keys properly
    
    commit 4443390e08d34d5771ab444f601cf71b3c9634a4 upstream.
    
    reiserfs_read_locked_inode() didn't initialize key length properly. Use
    _make_cpu_key() macro for key initialization so that all key member are
    properly initialized.
    
    CC: stable@vger.kernel.org
    Reported-by: syzbot+d94d02749498bb7bab4b@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27319196d1042ee7eee42864fc82b13a7cfb5df4
Author: Mychaela N. Falconia <falcon@freecalypso.org>
Date:   Wed Sep 16 01:56:29 2020 +0000

    USB: serial: ftdi_sio: add support for FreeCalypso JTAG+UART adapters
    
    commit 6cf87e5edd9944e1d3b6efd966ea401effc304ee upstream.
    
    There exist many FT2232-based JTAG+UART adapter designs in which
    FT2232 Channel A is used for JTAG and Channel B is used for UART.
    The best way to handle them in Linux is to have the ftdi_sio driver
    create a ttyUSB device only for Channel B and not for Channel A:
    a ttyUSB device for Channel A would be bogus and will disappear as
    soon as the user runs OpenOCD or other applications that access
    Channel A for JTAG from userspace, causing undesirable noise for
    users.  The ftdi_sio driver already has a dedicated quirk for such
    JTAG+UART FT2232 adapters, and it requires assigning custom USB IDs
    to such adapters and adding these IDs to the driver with the
    ftdi_jtag_quirk applied.
    
    Boutique hardware manufacturer Falconia Partners LLC has created a
    couple of JTAG+UART adapter designs (one buffered, one unbuffered)
    as part of FreeCalypso project, and this hardware is specifically made
    to be used with Linux hosts, with the intent that Channel A will be
    accessed only from userspace via appropriate applications, and that
    Channel B will be supported by the ftdi_sio kernel driver, presenting
    a standard ttyUSB device to userspace.  Toward this end the hardware
    manufacturer will be programming FT2232 EEPROMs with custom USB IDs,
    specifically with the intent that these IDs will be recognized by
    the ftdi_sio driver with the ftdi_jtag_quirk applied.
    
    Signed-off-by: Mychaela N. Falconia <falcon@freecalypso.org>
    [johan: insert in PID order and drop unused define]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56eff39822151625ed54b17125f526e8a1f7d740
Author: Scott Chen <scott@labau.com.tw>
Date:   Thu Sep 24 14:27:45 2020 +0800

    USB: serial: pl2303: add device-id for HP GC device
    
    commit 031f9664f8f9356cee662335bc56c93d16e75665 upstream.
    
    This is adds a device id for HP LD381 which is a pl2303GC-base device.
    
    Signed-off-by: Scott Chen <scott@labau.com.tw>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e95645fd1e28bb00888b2a0aec7015474d113e35
Author: Anant Thazhemadam <anant.thazhemadam@gmail.com>
Date:   Sat Oct 10 13:59:32 2020 +0530

    staging: comedi: check validity of wMaxPacketSize of usb endpoints found
    
    commit e1f13c879a7c21bd207dc6242455e8e3a1e88b40 upstream.
    
    While finding usb endpoints in vmk80xx_find_usb_endpoints(), check if
    wMaxPacketSize = 0 for the endpoints found.
    
    Some devices have isochronous endpoints that have wMaxPacketSize = 0
    (as required by the USB-2 spec).
    However, since this doesn't apply here, wMaxPacketSize = 0 can be
    considered to be invalid.
    
    Reported-by: syzbot+009f546aa1370056b1c2@syzkaller.appspotmail.com
    Tested-by: syzbot+009f546aa1370056b1c2@syzkaller.appspotmail.com
    Signed-off-by: Anant Thazhemadam <anant.thazhemadam@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201010082933.5417-1-anant.thazhemadam@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75ea7049c9c60873df3238c0da9a71a0185f6f50
Author: Leonid Bloch <lb.workbox@gmail.com>
Date:   Sun Oct 4 18:58:13 2020 +0300

    USB: serial: option: Add Telit FT980-KS composition
    
    commit 924a9213358fb92fa3c3225d6d042aa058167405 upstream.
    
    This commit adds the following Telit FT980-KS composition:
    
    0x1054: rndis, diag, adb, nmea, modem, modem, aux
    
    AT commands can be sent to /dev/ttyUSB2.
    
    Signed-off-by: Leonid Bloch <lb.workbox@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/ce86bc05-f4e2-b199-0cdc-792715e3f275@asocscloud.com
    Link: https://lore.kernel.org/r/20201004155813.2342-1-lb.workbox@gmail.com
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7f0e37b29f44868fdcd43eb681756614aa25328
Author: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
Date:   Sat Oct 3 11:40:29 2020 +0200

    USB: serial: option: add Cellient MPL200 card
    
    commit 3e765cab8abe7f84cb80d4a7a973fc97d5742647 upstream.
    
    Add usb ids of the Cellient MPL200 card.
    
    Signed-off-by: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/3db5418fe9e516f4b290736c5a199c9796025e3c.1601715478.git.wilken.gottwalt@mailbox.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6efa7525a593c11f1f0d0ac2dd0f67eb471c586
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Sep 24 11:14:10 2020 +0200

    media: usbtv: Fix refcounting mixup
    
    commit bf65f8aabdb37bc1a785884374e919477fe13e10 upstream.
    
    The premature free in the error path is blocked by V4L
    refcounting, not USB refcounting. Thanks to
    Ben Hutchings for review.
    
    [v2] corrected attributions
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Fixes: 50e704453553 ("media: usbtv: prevent double free in error case")
    CC: stable@vger.kernel.org
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b7150e1c95eb61c8fec801203f84b17f90563bd
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed May 20 14:20:14 2020 -0700

    Bluetooth: Disconnect if E0 is used for Level 4
    
    commit 8746f135bb01872ff412d408ea1aa9ebd328c1f5 upstream.
    
    E0 is not allowed with Level 4:
    
    BLUETOOTH CORE SPECIFICATION Version 5.2 | Vol 3, Part C page 1319:
    
      '128-bit equivalent strength for link and encryption keys
       required using FIPS approved algorithms (E0 not allowed,
       SAFER+ not allowed, and P-192 not allowed; encryption key
       not shortened'
    
    SC enabled:
    
    > HCI Event: Read Remote Extended Features (0x23) plen 13
            Status: Success (0x00)
            Handle: 256
            Page: 1/2
            Features: 0x0b 0x00 0x00 0x00 0x00 0x00 0x00 0x00
              Secure Simple Pairing (Host Support)
              LE Supported (Host)
              Secure Connections (Host Support)
    > HCI Event: Encryption Change (0x08) plen 4
            Status: Success (0x00)
            Handle: 256
            Encryption: Enabled with AES-CCM (0x02)
    
    SC disabled:
    
    > HCI Event: Read Remote Extended Features (0x23) plen 13
            Status: Success (0x00)
            Handle: 256
            Page: 1/2
            Features: 0x03 0x00 0x00 0x00 0x00 0x00 0x00 0x00
              Secure Simple Pairing (Host Support)
              LE Supported (Host)
    > HCI Event: Encryption Change (0x08) plen 4
            Status: Success (0x00)
            Handle: 256
            Encryption: Enabled with E0 (0x01)
    [May 8 20:23] Bluetooth: hci0: Invalid security: expect AES but E0 was used
    < HCI Command: Disconnect (0x01|0x0006) plen 3
            Handle: 256
            Reason: Authentication Failure (0x05)
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: Hans-Christian Noren Egtvedt <hegtvedt@cisco.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e473bae14f3f027177153ab50ceda77a6d6b06b
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Aug 6 11:17:14 2020 -0700

    Bluetooth: MGMT: Fix not checking if BT_HS is enabled
    
    commit b560a208cda0297fef6ff85bbfd58a8f0a52a543 upstream.
    
    This checks if BT_HS is enabled relecting it on MGMT_SETTING_HS instead
    of always reporting it as supported.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffddc73458e83e015f47e5e92c880fd54be27f95
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Aug 6 11:17:12 2020 -0700

    Bluetooth: L2CAP: Fix calling sk_filter on non-socket based channel
    
    commit f19425641cb2572a33cb074d5e30283720bd4d22 upstream.
    
    Only sockets will have the chan->data set to an actual sk, channels
    like A2MP would have its own data which would likely cause a crash when
    calling sk_filter, in order to fix this a new callback has been
    introduced so channels can implement their own filtering if necessary.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a350bfd9a93fd1b3d1707bf1d1db3cfb823a8d10
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Aug 6 11:17:11 2020 -0700

    Bluetooth: A2MP: Fix not initializing all members
    
    commit eddb7732119d53400f48a02536a84c509692faa8 upstream.
    
    This fixes various places where a stack variable is used uninitialized.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fae48c4bf677e7d32e5d0c35e85f45787d307fd
Author: Dominik Przychodni <dominik.przychodni@intel.com>
Date:   Mon Aug 31 11:59:59 2020 +0100

    crypto: qat - check cipher length for aead AES-CBC-HMAC-SHA
    
    commit 45cb6653b0c355fc1445a8069ba78a4ce8720511 upstream.
    
    Return -EINVAL for authenc(hmac(sha1),cbc(aes)),
    authenc(hmac(sha256),cbc(aes)) and authenc(hmac(sha512),cbc(aes))
    if the cipher length is not multiple of the AES block.
    This is to prevent an undefined device behaviour.
    
    Fixes: d370cec32194 ("crypto: qat - Intel(R) QAT crypto interface")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dominik Przychodni <dominik.przychodni@intel.com>
    [giovanni.cabiddu@intel.com: reworded commit message]
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4ab0a2944b84e34dcce6b24803fa107deee2b21
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Oct 2 17:55:22 2020 +1000

    crypto: bcm - Verify GCM/CCM key length in setkey
    
    commit 10a2f0b311094ffd45463a529a410a51ca025f27 upstream.
    
    The setkey function for GCM/CCM algorithms didn't verify the key
    length before copying the key and subtracting the salt length.
    
    This patch delays the copying of the key til after the verification
    has been done.  It also adds checks on the key length to ensure
    that it's at least as long as the salt.
    
    Fixes: 9d12ba86f818 ("crypto: brcm - Add Broadcom SPU driver")
    Cc: <stable@vger.kernel.org>
    Reported-by: kiyin(尹亮) <kiyin@tencent.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
