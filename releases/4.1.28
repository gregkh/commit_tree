commit 5880876e94699ce010554f483ccf0009997955ca
Author: Sasha Levin <sasha.levin@oracle.com>
Date:   Wed Jul 13 14:17:46 2016 -0400

    Linux 4.1.28
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 116c75f642ad4a6d267f399c9f1fe8b91fb822c5
Author: Hugh Dickins <hughd@google.com>
Date:   Sun Jul 10 16:46:32 2016 -0700

    tmpfs: fix regression hang in fallocate undo
    
    [ Upstream commit 7f556567036cb7f89aabe2f0954b08566b4efb53 ]
    
    The well-spotted fallocate undo fix is good in most cases, but not when
    fallocate failed on the very first page.  index 0 then passes lend -1
    to shmem_undo_range(), and that has two bad effects: (a) that it will
    undo every fallocation throughout the file, unrestricted by the current
    range; but more importantly (b) it can cause the undo to hang, because
    lend -1 is treated as truncation, which makes it keep on retrying until
    every page has gone, but those already fully instantiated will never go
    away.  Big thank you to xfstests generic/269 which demonstrates this.
    
    Fixes: b9b4bb26af01 ("tmpfs: don't undo fallocate past its last page")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b7aa372fec2c1d4a1fcf4398ae88ba94134b9522
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 15:37:59 2016 +0200

    netfilter: x_tables: introduce and use xt_copy_counters_from_user
    
    [ Upstream commit d7591f0c41ce3e67600a982bab6989ef0f07b3ce ]
    
    The three variants use same copy&pasted code, condense this into a
    helper and use that.
    
    Make sure info.name is 0-terminated.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit af815d264b7ed1cdceb0e1fdf4fa7d3bd5fe9a99
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:34 2016 +0200

    netfilter: x_tables: do compat validation via translate_table
    
    [ Upstream commit 09d9686047dbbe1cf4faa558d3ecc4aae2046054 ]
    
    This looks like refactoring, but its also a bug fix.
    
    Problem is that the compat path (32bit iptables, 64bit kernel) lacks a few
    sanity tests that are done in the normal path.
    
    For example, we do not check for underflows and the base chain policies.
    
    While its possible to also add such checks to the compat path, its more
    copy&pastry, for instance we cannot reuse check_underflow() helper as
    e->target_offset differs in the compat case.
    
    Other problem is that it makes auditing for validation errors harder; two
    places need to be checked and kept in sync.
    
    At a high level 32 bit compat works like this:
    1- initial pass over blob:
       validate match/entry offsets, bounds checking
       lookup all matches and targets
       do bookkeeping wrt. size delta of 32/64bit structures
       assign match/target.u.kernel pointer (points at kernel
       implementation, needed to access ->compatsize etc.)
    
    2- allocate memory according to the total bookkeeping size to
       contain the translated ruleset
    
    3- second pass over original blob:
       for each entry, copy the 32bit representation to the newly allocated
       memory.  This also does any special match translations (e.g.
       adjust 32bit to 64bit longs, etc).
    
    4- check if ruleset is free of loops (chase all jumps)
    
    5-first pass over translated blob:
       call the checkentry function of all matches and targets.
    
    The alternative implemented by this patch is to drop steps 3&4 from the
    compat process, the translation is changed into an intermediate step
    rather than a full 1:1 translate_table replacement.
    
    In the 2nd pass (step #3), change the 64bit ruleset back to a kernel
    representation, i.e. put() the kernel pointer and restore ->u.user.name .
    
    This gets us a 64bit ruleset that is in the format generated by a 64bit
    iptables userspace -- we can then use translate_table() to get the
    'native' sanity checks.
    
    This has two drawbacks:
    
    1. we re-validate all the match and target entry structure sizes even
    though compat translation is supposed to never generate bogus offsets.
    2. we put and then re-lookup each match and target.
    
    THe upside is that we get all sanity tests and ruleset validations
    provided by the normal path and can remove some duplicated compat code.
    
    iptables-restore time of autogenerated ruleset with 300k chains of form
    -A CHAIN0001 -m limit --limit 1/s -j CHAIN0002
    -A CHAIN0002 -m limit --limit 1/s -j CHAIN0003
    
    shows no noticeable differences in restore times:
    old:   0m30.796s
    new:   0m31.521s
    64bit: 0m25.674s
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2756b2a32469316c98a46359710ea2bfdbfe331e
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:33 2016 +0200

    netfilter: x_tables: xt_compat_match_from_user doesn't need a retval
    
    [ Upstream commit 0188346f21e6546498c2a0f84888797ad4063fc5 ]
    
    Always returned 0.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 05e089b3a29c6c965fa9c8801ea72d21a959ca46
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:31 2016 +0200

    netfilter: ip6_tables: simplify translate_compat_table args
    
    [ Upstream commit 329a0807124f12fe1c8032f95d8a8eb47047fb0e ]
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cd76c8c82c48ca6c1e3da1df7c1dca7f44302c65
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:30 2016 +0200

    netfilter: ip_tables: simplify translate_compat_table args
    
    [ Upstream commit 7d3f843eed29222254c9feab481f55175a1afcc9 ]
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7bdf4f49826159635b21516296be211f420eefac
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:32 2016 +0200

    netfilter: arp_tables: simplify translate_compat_table args
    
    [ Upstream commit 8dddd32756f6fe8e4e82a63361119b7e2384e02f ]
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d97246b5d16b77b57d835b6b4d1bde8ea6566b46
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Jun 1 02:04:44 2016 +0200

    netfilter: x_tables: don't reject valid target size on some architectures
    
    [ Upstream commit 7b7eba0f3515fca3296b8881d583f7c1042f5226 ]
    
    Quoting John Stultz:
      In updating a 32bit arm device from 4.6 to Linus' current HEAD, I
      noticed I was having some trouble with networking, and realized that
      /proc/net/ip_tables_names was suddenly empty.
      Digging through the registration process, it seems we're catching on the:
    
       if (strcmp(t->u.user.name, XT_STANDARD_TARGET) == 0 &&
           target_offset + sizeof(struct xt_standard_target) != next_offset)
             return -EINVAL;
    
      Where next_offset seems to be 4 bytes larger then the
      offset + standard_target struct size.
    
    next_offset needs to be aligned via XT_ALIGN (so we can access all members
    of ip(6)t_entry struct).
    
    This problem didn't show up on i686 as it only needs 4-byte alignment for
    u64, but iptables userspace on other 32bit arches does insert extra padding.
    
    Reported-by: John Stultz <john.stultz@linaro.org>
    Tested-by: John Stultz <john.stultz@linaro.org>
    Fixes: 7ed2abddd20cf ("netfilter: x_tables: check standard target size too")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a605e7476c66a13312189026e6977bad6ed3050d
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:29 2016 +0200

    netfilter: x_tables: validate all offsets and sizes in a rule
    
    [ Upstream commit 13631bfc604161a9d69cd68991dff8603edd66f9 ]
    
    Validate that all matches (if any) add up to the beginning of
    the target and that each match covers at least the base structure size.
    
    The compat path should be able to safely re-use the function
    as the structures only differ in alignment; added a
    BUILD_BUG_ON just in case we have an arch that adds padding as well.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 451e4403bc4abc51539376d4314baa739ab9e996
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:28 2016 +0200

    netfilter: x_tables: check for bogus target offset
    
    [ Upstream commit ce683e5f9d045e5d67d1312a42b359cb2ab2a13c ]
    
    We're currently asserting that targetoff + targetsize <= nextoff.
    
    Extend it to also check that targetoff is >= sizeof(xt_entry).
    Since this is generic code, add an argument pointing to the start of the
    match/target, we can then derive the base structure size from the delta.
    
    We also need the e->elems pointer in a followup change to validate matches.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 73bfda1c492bef7038a87adfa887b7e6b7cd6679
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:27 2016 +0200

    netfilter: x_tables: check standard target size too
    
    [ Upstream commit 7ed2abddd20cf8f6bd27f65bd218f26fa5bf7f44 ]
    
    We have targets and standard targets -- the latter carries a verdict.
    
    The ip/ip6tables validation functions will access t->verdict for the
    standard targets to fetch the jump offset or verdict for chainloop
    detection, but this happens before the targets get checked/validated.
    
    Thus we also need to check for verdict presence here, else t->verdict
    can point right after a blob.
    
    Spotted with UBSAN while testing malformed blobs.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit acbcf85306bd563910a2afe07f07d30381b031b0
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:26 2016 +0200

    netfilter: x_tables: add compat version of xt_check_entry_offsets
    
    [ Upstream commit fc1221b3a163d1386d1052184202d5dc50d302d1 ]
    
    32bit rulesets have different layout and alignment requirements, so once
    more integrity checks get added to xt_check_entry_offsets it will reject
    well-formed 32bit rulesets.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit aae91919c9d6d1aa6d6390826979e6d2c89a7ba4
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:25 2016 +0200

    netfilter: x_tables: assert minimum target size
    
    [ Upstream commit a08e4e190b866579896c09af59b3bdca821da2cd ]
    
    The target size includes the size of the xt_entry_target struct.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 801cd32774d12dccfcfc0c22b0b26d84ed995c6f
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:24 2016 +0200

    netfilter: x_tables: kill check_entry helper
    
    [ Upstream commit aa412ba225dd3bc36d404c28cdc3d674850d80d0 ]
    
    Once we add more sanity testing to xt_check_entry_offsets it
    becomes relvant if we're expecting a 32bit 'config_compat' blob
    or a normal one.
    
    Since we already have a lot of similar-named functions (check_entry,
    compat_check_entry, find_and_check_entry, etc.) and the current
    incarnation is short just fold its contents into the callers.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a471ac817cf0e0d6e87779ca1fee216ba849e613
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:23 2016 +0200

    netfilter: x_tables: add and use xt_check_entry_offsets
    
    [ Upstream commit 7d35812c3214afa5b37a675113555259cfd67b98 ]
    
    Currently arp/ip and ip6tables each implement a short helper to check that
    the target offset is large enough to hold one xt_entry_target struct and
    that t->u.target_size fits within the current rule.
    
    Unfortunately these checks are not sufficient.
    
    To avoid adding new tests to all of ip/ip6/arptables move the current
    checks into a helper, then extend this helper in followup patches.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8163327a3a927c36f7c032bb67957e6c0f4ec27d
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:22 2016 +0200

    netfilter: x_tables: validate targets of jumps
    
    [ Upstream commit 36472341017529e2b12573093cc0f68719300997 ]
    
    When we see a jump also check that the offset gets us to beginning of
    a rule (an ipt_entry).
    
    The extra overhead is negible, even with absurd cases.
    
    300k custom rules, 300k jumps to 'next' user chain:
    [ plus one jump from INPUT to first userchain ]:
    
    Before:
    real    0m24.874s
    user    0m7.532s
    sys     0m16.076s
    
    After:
    real    0m27.464s
    user    0m7.436s
    sys     0m18.840s
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cf756388f8f34e02a338356b3685c46938139871
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:21 2016 +0200

    netfilter: x_tables: don't move to non-existent next rule
    
    [ Upstream commit f24e230d257af1ad7476c6e81a8dc3127a74204e ]
    
    Ben Hawkes says:
    
     In the mark_source_chains function (net/ipv4/netfilter/ip_tables.c) it
     is possible for a user-supplied ipt_entry structure to have a large
     next_offset field. This field is not bounds checked prior to writing a
     counter value at the supplied offset.
    
    Base chains enforce absolute verdict.
    
    User defined chains are supposed to end with an unconditional return,
    xtables userspace adds them automatically.
    
    But if such return is missing we will move to non-existent next rule.
    
    Reported-by: Ben Hawkes <hawkes@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 850c377e0e2d76723884d610ff40827d26aa21eb
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:52 2016 +0100

    netfilter: x_tables: fix unconditional helper
    
    [ Upstream commit 54d83fc74aa9ec72794373cb47432c5f7fb1a309 ]
    
    Ben Hawkes says:
    
     In the mark_source_chains function (net/ipv4/netfilter/ip_tables.c) it
     is possible for a user-supplied ipt_entry structure to have a large
     next_offset field. This field is not bounds checked prior to writing a
     counter value at the supplied offset.
    
    Problem is that mark_source_chains should not have been called --
    the rule doesn't have a next entry, so its supposed to return
    an absolute verdict of either ACCEPT or DROP.
    
    However, the function conditional() doesn't work as the name implies.
    It only checks that the rule is using wildcard address matching.
    
    However, an unconditional rule must also not be using any matches
    (no -m args).
    
    The underflow validator only checked the addresses, therefore
    passing the 'unconditional absolute verdict' test, while
    mark_source_chains also tested for presence of matches, and thus
    proceeeded to the next (not-existent) rule.
    
    Unify this so that all the callers have same idea of 'unconditional rule'.
    
    Reported-by: Ben Hawkes <hawkes@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a1c49d8cf9aa2be958c34fae1f84b1e3006f0c67
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:50 2016 +0100

    netfilter: x_tables: make sure e->next_offset covers remaining blob size
    
    [ Upstream commit 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91 ]
    
    Otherwise this function may read data beyond the ruleset blob.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 780daa25f811f1aeefb9da76ef93c32b17a5f102
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:49 2016 +0100

    netfilter: x_tables: validate e->target_offset early
    
    [ Upstream commit bdf533de6968e9686df777dc178486f600c6e617 ]
    
    We should check that e->target_offset is sane before
    mark_source_chains gets called since it will fetch the target entry
    for loop detection.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1a1f239be5b547551adc3bc871521c21aa7966ab
Author: Ralf Baechle <ralf@linux-mips.org>
Date:   Thu Feb 4 01:24:40 2016 +0100

    MIPS: Fix 64k page support for 32 bit kernels.
    
    [ Upstream commit d7de413475f443957a0c1d256e405d19b3a2cb22 ]
    
    TASK_SIZE was defined as 0x7fff8000UL which for 64k pages is not a
    multiple of the page size.  Somewhere further down the math fails
    such that executing an ELF binary fails.
    
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Tested-by: Joshua Henderson <joshua.henderson@microchip.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 445ff22b967197364e31d6ee7f9bdfc3955c091b
Author: David S. Miller <davem@davemloft.net>
Date:   Sat May 28 20:41:12 2016 -0700

    sparc64: Fix return from trap window fill crashes.
    
    [ Upstream commit 7cafc0b8bf130f038b0ec2dcdd6a9de6dc59b65a ]
    
    We must handle data access exception as well as memory address unaligned
    exceptions from return from trap window fill faults, not just normal
    TLB misses.
    
    Otherwise we can get an OOPS that looks like this:
    
    ld-linux.so.2(36808): Kernel bad sw trap 5 [#1]
    CPU: 1 PID: 36808 Comm: ld-linux.so.2 Not tainted 4.6.0 #34
    task: fff8000303be5c60 ti: fff8000301344000 task.ti: fff8000301344000
    TSTATE: 0000004410001601 TPC: 0000000000a1a784 TNPC: 0000000000a1a788 Y: 00000002    Not tainted
    TPC: <do_sparc64_fault+0x5c4/0x700>
    g0: fff8000024fc8248 g1: 0000000000db04dc g2: 0000000000000000 g3: 0000000000000001
    g4: fff8000303be5c60 g5: fff800030e672000 g6: fff8000301344000 g7: 0000000000000001
    o0: 0000000000b95ee8 o1: 000000000000012b o2: 0000000000000000 o3: 0000000200b9b358
    o4: 0000000000000000 o5: fff8000301344040 sp: fff80003013475c1 ret_pc: 0000000000a1a77c
    RPC: <do_sparc64_fault+0x5bc/0x700>
    l0: 00000000000007ff l1: 0000000000000000 l2: 000000000000005f l3: 0000000000000000
    l4: fff8000301347e98 l5: fff8000024ff3060 l6: 0000000000000000 l7: 0000000000000000
    i0: fff8000301347f60 i1: 0000000000102400 i2: 0000000000000000 i3: 0000000000000000
    i4: 0000000000000000 i5: 0000000000000000 i6: fff80003013476a1 i7: 0000000000404d4c
    I7: <user_rtt_fill_fixup+0x6c/0x7c>
    Call Trace:
     [0000000000404d4c] user_rtt_fill_fixup+0x6c/0x7c
    
    The window trap handlers are slightly clever, the trap table entries for them are
    composed of two pieces of code.  First comes the code that actually performs
    the window fill or spill trap handling, and then there are three instructions at
    the end which are for exception processing.
    
    The userland register window fill handler is:
    
            add     %sp, STACK_BIAS + 0x00, %g1;            \
            ldxa    [%g1 + %g0] ASI, %l0;                   \
            mov     0x08, %g2;                              \
            mov     0x10, %g3;                              \
            ldxa    [%g1 + %g2] ASI, %l1;                   \
            mov     0x18, %g5;                              \
            ldxa    [%g1 + %g3] ASI, %l2;                   \
            ldxa    [%g1 + %g5] ASI, %l3;                   \
            add     %g1, 0x20, %g1;                         \
            ldxa    [%g1 + %g0] ASI, %l4;                   \
            ldxa    [%g1 + %g2] ASI, %l5;                   \
            ldxa    [%g1 + %g3] ASI, %l6;                   \
            ldxa    [%g1 + %g5] ASI, %l7;                   \
            add     %g1, 0x20, %g1;                         \
            ldxa    [%g1 + %g0] ASI, %i0;                   \
            ldxa    [%g1 + %g2] ASI, %i1;                   \
            ldxa    [%g1 + %g3] ASI, %i2;                   \
            ldxa    [%g1 + %g5] ASI, %i3;                   \
            add     %g1, 0x20, %g1;                         \
            ldxa    [%g1 + %g0] ASI, %i4;                   \
            ldxa    [%g1 + %g2] ASI, %i5;                   \
            ldxa    [%g1 + %g3] ASI, %i6;                   \
            ldxa    [%g1 + %g5] ASI, %i7;                   \
            restored;                                       \
            retry; nop; nop; nop; nop;                      \
            b,a,pt  %xcc, fill_fixup_dax;                   \
            b,a,pt  %xcc, fill_fixup_mna;                   \
            b,a,pt  %xcc, fill_fixup;
    
    And the way this works is that if any of those memory accesses
    generate an exception, the exception handler can revector to one of
    those final three branch instructions depending upon which kind of
    exception the memory access took.  In this way, the fault handler
    doesn't have to know if it was a spill or a fill that it's handling
    the fault for.  It just always branches to the last instruction in
    the parent trap's handler.
    
    For example, for a regular fault, the code goes:
    
    winfix_trampoline:
            rdpr    %tpc, %g3
            or      %g3, 0x7c, %g3
            wrpr    %g3, %tnpc
            done
    
    All window trap handlers are 0x80 aligned, so if we "or" 0x7c into the
    trap time program counter, we'll get that final instruction in the
    trap handler.
    
    On return from trap, we have to pull the register window in but we do
    this by hand instead of just executing a "restore" instruction for
    several reasons.  The largest being that from Niagara and onward we
    simply don't have enough levels in the trap stack to fully resolve all
    possible exception cases of a window fault when we are already at
    trap level 1 (which we enter to get ready to return from the original
    trap).
    
    This is executed inline via the FILL_*_RTRAP handlers.  rtrap_64.S's
    code branches directly to these to do the window fill by hand if
    necessary.  Now if you look at them, we'll see at the end:
    
                ba,a,pt    %xcc, user_rtt_fill_fixup;
                ba,a,pt    %xcc, user_rtt_fill_fixup;
                ba,a,pt    %xcc, user_rtt_fill_fixup;
    
    And oops, all three cases are handled like a fault.
    
    This doesn't work because each of these trap types (data access
    exception, memory address unaligned, and faults) store their auxiliary
    info in different registers to pass on to the C handler which does the
    real work.
    
    So in the case where the stack was unaligned, the unaligned trap
    handler sets up the arg registers one way, and then we branched to
    the fault handler which expects them setup another way.
    
    So the FAULT_TYPE_* value ends up basically being garbage, and
    randomly would generate the backtrace seen above.
    
    Reported-by: Nick Alcock <nix@esperi.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6d3c93761479927258727fcdcf5e673aa5d8aaf4
Author: David S. Miller <davem@davemloft.net>
Date:   Sat May 28 21:21:31 2016 -0700

    sparc: Harden signal return frame checks.
    
    [ Upstream commit d11c2a0de2824395656cf8ed15811580c9dd38aa ]
    
    All signal frames must be at least 16-byte aligned, because that is
    the alignment we explicitly create when we build signal return stack
    frames.
    
    All stack pointers must be at least 8-byte aligned.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit ea312fcb4efc84b28f891485d6c4aca2163c2438
Author: David S. Miller <davem@davemloft.net>
Date:   Wed May 25 12:51:20 2016 -0700

    sparc64: Take ctx_alloc_lock properly in hugetlb_setup().
    
    [ Upstream commit 9ea46abe22550e3366ff7cee2f8391b35b12f730 ]
    
    On cheetahplus chips we take the ctx_alloc_lock in order to
    modify the TLB lookup parameters for the indexed TLBs, which
    are stored in the context register.
    
    This is called with interrupts disabled, however ctx_alloc_lock
    is an IRQ safe lock, therefore we must take acquire/release it
    properly with spin_{lock,unlock}_irq().
    
    Reported-by: Meelis Roos <mroos@linux.ee>
    Tested-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a74b2f239c2be446c4e7cdb0cdcb641e968a9ce0
Author: Babu Moger <babu.moger@oracle.com>
Date:   Thu Mar 24 13:02:22 2016 -0700

    sparc/PCI: Fix for panic while enabling SR-IOV
    
    [ Upstream commit d0c31e02005764dae0aab130a57e9794d06b824d ]
    
    We noticed this panic while enabling SR-IOV in sparc.
    
    mlx4_core: Mellanox ConnectX core driver v2.2-1 (Jan  1 2015)
    mlx4_core: Initializing 0007:01:00.0
    mlx4_core 0007:01:00.0: Enabling SR-IOV with 5 VFs
    mlx4_core: Initializing 0007:01:00.1
    Unable to handle kernel NULL pointer dereference
    insmod(10010): Oops [#1]
    CPU: 391 PID: 10010 Comm: insmod Not tainted
                    4.1.12-32.el6uek.kdump2.sparc64 #1
    TPC: <dma_supported+0x20/0x80>
    I7: <__mlx4_init_one+0x324/0x500 [mlx4_core]>
    Call Trace:
     [00000000104c5ea4] __mlx4_init_one+0x324/0x500 [mlx4_core]
     [00000000104c613c] mlx4_init_one+0xbc/0x120 [mlx4_core]
     [0000000000725f14] local_pci_probe+0x34/0xa0
     [0000000000726028] pci_call_probe+0xa8/0xe0
     [0000000000726310] pci_device_probe+0x50/0x80
     [000000000079f700] really_probe+0x140/0x420
     [000000000079fa24] driver_probe_device+0x44/0xa0
     [000000000079fb5c] __device_attach+0x3c/0x60
     [000000000079d85c] bus_for_each_drv+0x5c/0xa0
     [000000000079f588] device_attach+0x88/0xc0
     [000000000071acd0] pci_bus_add_device+0x30/0x80
     [0000000000736090] virtfn_add.clone.1+0x210/0x360
     [00000000007364a4] sriov_enable+0x2c4/0x520
     [000000000073672c] pci_enable_sriov+0x2c/0x40
     [00000000104c2d58] mlx4_enable_sriov+0xf8/0x180 [mlx4_core]
     [00000000104c49ac] mlx4_load_one+0x42c/0xd40 [mlx4_core]
    Disabling lock debugging due to kernel taint
    Caller[00000000104c5ea4]: __mlx4_init_one+0x324/0x500 [mlx4_core]
    Caller[00000000104c613c]: mlx4_init_one+0xbc/0x120 [mlx4_core]
    Caller[0000000000725f14]: local_pci_probe+0x34/0xa0
    Caller[0000000000726028]: pci_call_probe+0xa8/0xe0
    Caller[0000000000726310]: pci_device_probe+0x50/0x80
    Caller[000000000079f700]: really_probe+0x140/0x420
    Caller[000000000079fa24]: driver_probe_device+0x44/0xa0
    Caller[000000000079fb5c]: __device_attach+0x3c/0x60
    Caller[000000000079d85c]: bus_for_each_drv+0x5c/0xa0
    Caller[000000000079f588]: device_attach+0x88/0xc0
    Caller[000000000071acd0]: pci_bus_add_device+0x30/0x80
    Caller[0000000000736090]: virtfn_add.clone.1+0x210/0x360
    Caller[00000000007364a4]: sriov_enable+0x2c4/0x520
    Caller[000000000073672c]: pci_enable_sriov+0x2c/0x40
    Caller[00000000104c2d58]: mlx4_enable_sriov+0xf8/0x180 [mlx4_core]
    Caller[00000000104c49ac]: mlx4_load_one+0x42c/0xd40 [mlx4_core]
    Caller[00000000104c5f90]: __mlx4_init_one+0x410/0x500 [mlx4_core]
    Caller[00000000104c613c]: mlx4_init_one+0xbc/0x120 [mlx4_core]
    Caller[0000000000725f14]: local_pci_probe+0x34/0xa0
    Caller[0000000000726028]: pci_call_probe+0xa8/0xe0
    Caller[0000000000726310]: pci_device_probe+0x50/0x80
    Caller[000000000079f700]: really_probe+0x140/0x420
    Caller[000000000079fa24]: driver_probe_device+0x44/0xa0
    Caller[000000000079fb08]: __driver_attach+0x88/0xa0
    Caller[000000000079d90c]: bus_for_each_dev+0x6c/0xa0
    Caller[000000000079f29c]: driver_attach+0x1c/0x40
    Caller[000000000079e35c]: bus_add_driver+0x17c/0x220
    Caller[00000000007a02d4]: driver_register+0x74/0x120
    Caller[00000000007263fc]: __pci_register_driver+0x3c/0x60
    Caller[00000000104f62bc]: mlx4_init+0x60/0xcc [mlx4_core]
    Kernel panic - not syncing: Fatal exception
    Press Stop-A (L1-A) to return to the boot prom
    ---[ end Kernel panic - not syncing: Fatal exception
    
    Details:
    Here is the call sequence
    virtfn_add->__mlx4_init_one->dma_set_mask->dma_supported
    
    The panic happened at line 760(file arch/sparc/kernel/iommu.c)
    
    758 int dma_supported(struct device *dev, u64 device_mask)
    759 {
    760         struct iommu *iommu = dev->archdata.iommu;
    761         u64 dma_addr_mask = iommu->dma_addr_mask;
    762
    763         if (device_mask >= (1UL << 32UL))
    764                 return 0;
    765
    766         if ((device_mask & dma_addr_mask) == dma_addr_mask)
    767                 return 1;
    768
    769 #ifdef CONFIG_PCI
    770         if (dev_is_pci(dev))
    771             return pci64_dma_supported(to_pci_dev(dev), device_mask);
    772 #endif
    773
    774         return 0;
    775 }
    776 EXPORT_SYMBOL(dma_supported);
    
    Same panic happened with Intel ixgbe driver also.
    
    SR-IOV code looks for arch specific data while enabling
    VFs. When VF device is added, driver probe function makes set
    of calls to initialize the pci device. Because the VF device is
    added different way than the normal PF device(which happens via
    of_create_pci_dev for sparc), some of the arch specific initialization
    does not happen for VF device.  That causes panic when archdata is
    accessed.
    
    To fix this, I have used already defined weak function
    pcibios_setup_device to copy archdata from PF to VF.
    Also verified the fix.
    
    Signed-off-by: Babu Moger <babu.moger@oracle.com>
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Reviewed-by: Ethan Zhao <ethan.zhao@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit dc316fc9cbd77586c674e92288ece8383b738dac
Author: David S. Miller <davem@davemloft.net>
Date:   Tue Mar 1 00:25:32 2016 -0500

    sparc64: Fix sparc64_set_context stack handling.
    
    [ Upstream commit 397d1533b6cce0ccb5379542e2e6d079f6936c46 ]
    
    Like a signal return, we should use synchronize_user_stack() rather
    than flush_user_windows().
    
    Reported-by: Ilya Malakhov <ilmalakhovthefirst@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 25f7f80eabe7a0553851990c8367aab1533b7021
Author: Nitin Gupta <nitin.m.gupta@oracle.com>
Date:   Tue Jan 5 22:35:35 2016 -0800

    sparc64: Fix numa node distance initialization
    
    [ Upstream commit 36beca6571c941b28b0798667608239731f9bc3a ]
    
    Orabug: 22495713
    
    Currently, NUMA node distance matrix is initialized only
    when a machine descriptor (MD) exists. However, sun4u
    machines (e.g. Sun Blade 2500) do not have an MD and thus
    distance values were left uninitialized. The initialization
    is now moved such that it happens on both sun4u and sun4v.
    
    Signed-off-by: Nitin Gupta <nitin.m.gupta@oracle.com>
    Tested-by: Mikael Pettersson <mikpelinux@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 693b8dc4b23b853c5636fc04909bff48e44758cc
Author: David S. Miller <davem@davemloft.net>
Date:   Wed Apr 27 17:27:37 2016 -0400

    sparc64: Fix bootup regressions on some Kconfig combinations.
    
    [ Upstream commit 49fa5230462f9f2c4e97c81356473a6bdf06c422 ]
    
    The system call tracing bug fix mentioned in the Fixes tag
    below increased the amount of assembler code in the sequence
    of assembler files included by head_64.S
    
    This caused to total set of code to exceed 0x4000 bytes in
    size, which overflows the expression in head_64.S that works
    to place swapper_tsb at address 0x408000.
    
    When this is violated, the TSB is not properly aligned, and
    also the trap table is not aligned properly either.  All of
    this together results in failed boots.
    
    So, do two things:
    
    1) Simplify some code by using ba,a instead of ba/nop to get
       those bytes back.
    
    2) Add a linker script assertion to make sure that if this
       happens again the build will fail.
    
    Fixes: 1a40b95374f6 ("sparc: Fix system call tracing register handling.")
    Reported-by: Meelis Roos <mroos@linux.ee>
    Reported-by: Joerg Abraham <joerg.abraham@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d2e4e89ae871295c539334f50368bb48f74c3caf
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Mon Jan 18 06:32:30 2016 -0500

    sparc: Fix system call tracing register handling.
    
    [ Upstream commit 1a40b95374f680625318ab61d81958e949e0afe3 ]
    
    A system call trace trigger on entry allows the tracing
    process to inspect and potentially change the traced
    process's registers.
    
    Account for that by reloading the %g1 (syscall number)
    and %i0-%i5 (syscall argument) values.  We need to be
    careful to revalidate the range of %g1, and reload the
    system call table entry it corresponds to into %l7.
    
    Reported-by: Mike Frysinger <vapier@gentoo.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Tested-by: Mike Frysinger <vapier@gentoo.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit daaaff2715757a241f178547cb39ae63882ad7da
Author: Yuchung Cheng <ycheng@google.com>
Date:   Mon Jun 6 15:07:18 2016 -0700

    tcp: record TLP and ER timer stats in v6 stats
    
    [ Upstream commit ce3cf4ec0305919fc69a972f6c2b2efd35d36abc ]
    
    The v6 tcp stats scan do not provide TLP and ER timer information
    correctly like the v4 version . This patch fixes that.
    
    Fixes: 6ba8a3b19e76 ("tcp: Tail loss probe (TLP)")
    Fixes: eed530b6c676 ("tcp: early retransmit")
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e2de678c191464580160b68b896d9078aca8b2fc
Author: Edward Cree <ecree@solarflare.com>
Date:   Tue May 24 18:53:36 2016 +0100

    sfc: on MC reset, clear PIO buffer linkage in TXQs
    
    [ Upstream commit c0795bf64cba4d1b796fdc5b74b33772841ed1bb ]
    
    Otherwise, if we fail to allocate new PIO buffers, our TXQs will try to
    use the old ones, which aren't there any more.
    
    Fixes: 183233bec810 "sfc: Allocate and link PIO buffers; map them with write-combining"
    Signed-off-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 27b56c6154943a860c9266ec8f3dc96ba2b1aa19
Author: Jason Wang <jasowang@redhat.com>
Date:   Thu May 19 13:36:51 2016 +0800

    tuntap: correctly wake up process during uninit
    
    [ Upstream commit addf8fc4acb1cf79492ac64966f07178793cb3d7 ]
    
    We used to check dev->reg_state against NETREG_REGISTERED after each
    time we are woke up. But after commit 9e641bdcfa4e ("net-tun:
    restructure tun_do_read for better sleep/wakeup efficiency"), it uses
    skb_recv_datagram() which does not check dev->reg_state. This will
    result if we delete a tun/tap device after a process is blocked in the
    reading. The device will wait for the reference count which was held
    by that process for ever.
    
    Fixes this by using RCV_SHUTDOWN which will be checked during
    sk_recv_datagram() before trying to wake up the process during uninit.
    
    Fixes: 9e641bdcfa4e ("net-tun: restructure tun_do_read for better
    sleep/wakeup efficiency")
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Xi Wang <xii@google.com>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8454d6443c84ee3501de20b9ff2034ea4767a0da
Author: Richard Alpe <richard.alpe@ericsson.com>
Date:   Tue May 17 16:57:37 2016 +0200

    tipc: fix nametable publication field in nl compat
    
    [ Upstream commit 03aaaa9b941e136757b55c4cf775aab6068dfd94 ]
    
    The publication field of the old netlink API should contain the
    publication key and not the publication reference.
    
    Fixes: 44a8ae94fd55 (tipc: convert legacy nl name table dump to nl compat)
    Signed-off-by: Richard Alpe <richard.alpe@ericsson.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e39cd93be0009ae4548a737756a947d2030956ab
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon May 16 17:28:16 2016 +0800

    netlink: Fix dump skb leak/double free
    
    [ Upstream commit 92964c79b357efd980812c4de5c1fd2ec8bb5520 ]
    
    When we free cb->skb after a dump, we do it after releasing the
    lock.  This means that a new dump could have started in the time
    being and we'll end up freeing their skb instead of ours.
    
    This patch saves the skb and module before we unlock so we free
    the right memory.
    
    Fixes: 16b304f3404f ("netlink: Eliminate kmalloc in netlink dump operation.")
    Reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 49956430d3d55b47e4a2d2f5f777d641cae137d6
Author: Richard Alpe <richard.alpe@ericsson.com>
Date:   Mon May 16 11:14:54 2016 +0200

    tipc: check nl sock before parsing nested attributes
    
    [ Upstream commit 45e093ae2830cd1264677d47ff9a95a71f5d9f9c ]
    
    Make sure the socket for which the user is listing publication exists
    before parsing the socket netlink attributes.
    
    Prior to this patch a call without any socket caused a NULL pointer
    dereference in tipc_nl_publ_dump().
    
    Tested-and-reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Richard Alpe <richard.alpe@ericsson.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.cm>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 186e7c38727f7a9fecbf238bbff9675e83842a99
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Mon Jan 4 16:10:19 2016 +1100

    xfs: print name of verifier if it fails
    
    [ Upstream commit 233135b763db7c64d07b728a9c66745fb0376275 ]
    
    This adds a name to each buf_ops structure, so that if
    a verifier fails we can print the type of verifier that
    failed it.  Should be a slight debugging aid, I hope.
    
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2612a949cf5c2a868adee1ca6bcbf01cd4e2f01e
Author: Willy Tarreau <w@1wt.eu>
Date:   Mon Jan 18 16:36:09 2016 +0100

    pipe: limit the per-user amount of pages allocated in pipes
    
    [ Upstream commit 759c01142a5d0f364a462346168a56de28a80f52 ]
    
    On no-so-small systems, it is possible for a single process to cause an
    OOM condition by filling large pipes with data that are never read. A
    typical process filling 4000 pipes with 1 MB of data will use 4 GB of
    memory. On small systems it may be tricky to set the pipe max size to
    prevent this from happening.
    
    This patch makes it possible to enforce a per-user soft limit above
    which new pipes will be limited to a single page, effectively limiting
    them to 4 kB each, as well as a hard limit above which no new pipes may
    be created for this user. This has the effect of protecting the system
    against memory abuse without hurting other users, and still allowing
    pipes to work correctly though with less data at once.
    
    The limit are controlled by two new sysctls : pipe-user-pages-soft, and
    pipe-user-pages-hard. Both may be disabled by setting them to zero. The
    default soft limit allows the default number of FDs per process (1024)
    to create pipes of the default size (64kB), thus reaching a limit of 64MB
    before starting to create only smaller pipes. With 256 processes limited
    to 1024 FDs each, this results in 1024*64kB + (256*1024 - 1024) * 4kB =
    1084 MB of memory allocated for a user. The hard limit is disabled by
    default to avoid breaking existing applications that make intensive use
    of pipes (eg: for splicing).
    
    Reported-by: socketpair@gmail.com
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Mitigates: CVE-2013-4312 (Linux 2.0+)
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e8ebd0cf882ba73a5c867bb7228dba1ae746c047
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Mar 17 20:37:10 2016 +0800

    MIPS: Reserve nosave data for hibernation
    
    [ Upstream commit a95d069204e178f18476f5499abab0d0d9cbc32c ]
    
    After commit 92923ca3aacef63c92d ("mm: meminit: only set page reserved
    in the memblock region"), the MIPS hibernation is broken. Because pages
    in nosave data section should be "reserved", but currently they aren't
    set to "reserved" at initialization. This patch makes hibernation work
    again.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: Aurelien Jarno <aurelien@aurel32.net>
    Cc: Steven J . Hill <sjhill@realitydiluted.com>
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/12888/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 664fcc116904a7414f7bbd0831c973cbd28b59ad
Author: Chanwoo Choi <cw00.choi@samsung.com>
Date:   Thu Apr 21 18:58:31 2016 +0900

    serial: samsung: Reorder the sequence of clock control when call s3c24xx_serial_set_termios()
    
    [ Upstream commit b8995f527aac143e83d3900ff39357651ea4e0f6 ]
    
    This patch fixes the broken serial log when changing the clock source
    of uart device. Before disabling the original clock source, this patch
    enables the new clock source to protect the clock off state for a split second.
    
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Reviewed-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5ec75b71be17201805f2e6b7ef9f17f2d6b412d3
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Tue May 3 17:05:54 2016 +0200

    tty: vt, return error when con_startup fails
    
    [ Upstream commit 6798df4c5fe0a7e6d2065cf79649a794e5ba7114 ]
    
    When csw->con_startup() fails in do_register_con_driver, we return no
    error (i.e. 0). This was changed back in 2006 by commit 3e795de763.
    Before that we used to return -ENODEV.
    
    So fix the return value to be -ENODEV in that case again.
    
    Fixes: 3e795de763 ("VT binding: Add binding/unbinding support for the VT console")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Reported-by: "Dan Carpenter" <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 87e0b5757eab598f4b55babdc8879e143a556b7a
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Mar 21 12:33:00 2016 +0100

    KVM: x86: mask CPUID(0xD,0x1).EAX against host value
    
    [ Upstream commit 316314cae15fb0e3869b76b468f59a0c83ac3d4e ]
    
    This ensures that the guest doesn't see XSAVE extensions
    (e.g. xgetbv1 or xsavec) that the host lacks.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4b6986fcceb200b2edd97d7cc5799d8a7ae53086
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Mar 30 13:49:14 2016 +0200

    usb: gadget: f_fs: Fix EFAULT generation for async read operations
    
    [ Upstream commit 332a5b446b7916d272c2a659a3b20909ce34d2c1 ]
    
    In the current implementation functionfs generates a EFAULT for async read
    operations if the read buffer size is larger than the URB data size. Since
    a application does not necessarily know how much data the host side is
    going to send it typically supplies a buffer larger than the actual data,
    which will then result in a EFAULT error.
    
    This behaviour was introduced while refactoring the code to use iov_iter
    interface in commit c993c39b8639 ("gadget/function/f_fs.c: use put iov_iter
    into io_data"). The original code took the minimum over the URB size and
    the user buffer size and then attempted to copy that many bytes using
    copy_to_user(). If copy_to_user() could not copy all data a EFAULT error
    was generated. Restore the original behaviour by only generating a EFAULT
    error when the number of bytes copied is not the size of the URB and the
    target buffer has not been fully filled.
    
    Commit 342f39a6c8d3 ("usb: gadget: f_fs: fix check in read operation")
    already fixed the same problem for the synchronous read path.
    
    Fixes: c993c39b8639 ("gadget/function/f_fs.c: use put iov_iter into io_data")
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 616ffbf1a53617037e2e46d2f40232a5cb1ea8c0
Author: Andy Gross <andy.gross@linaro.org>
Date:   Tue May 3 15:24:11 2016 -0500

    clk: qcom: msm8916: Fix crypto clock flags
    
    [ Upstream commit 2a0974aa1a0b40a92387ea03dbfeacfbc9ba182c ]
    
    This patch adds the CLK_SET_RATE_PARENT flag for the crypto core and
    ahb blocks.  Without this flag, clk_set_rate can fail for certain
    frequency requests.
    
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Fixes: 3966fab8b6ab ("clk: qcom: Add MSM8916 Global Clock Controller support")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit ec2744d3c8e70f1beedeaa361dd8b162017a12e7
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Mar 25 10:02:41 2016 -0400

    Btrfs: don't use src fd for printk
    
    [ Upstream commit c79b4713304f812d3d6c95826fc3e5fc2c0b0c14 ]
    
    The fd we pass in may not be on a btrfs file system, so don't try to do
    BTRFS_I() on it.  Thanks,
    
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 545655ed2eea768dc9abd8899b65b5c272bc5104
Author: Lucas Stach <dev@lynxeye.de>
Date:   Thu May 5 10:16:44 2016 -0400

    drm/radeon: fix PLL sharing on DCE6.1 (v2)
    
    [ Upstream commit e3c00d87845ab375f90fa6e10a5e72a3a5778cd3 ]
    
    On DCE6.1 PPLL2 is exclusively available to UNIPHYA, so it should not
    be taken into consideration when looking for an already enabled PLL
    to be shared with other outputs.
    
    This fixes the broken VGA port (TRAVIS DP->VGA bridge) on my Richland
    based laptop, where the internal display is connected to UNIPHYA through
    a TRAVIS DP->LVDS bridge.
    
    Bug:
    https://bugs.freedesktop.org/show_bug.cgi?id=78987
    
    v2: agd: add check in radeon_get_shared_nondp_ppll as well, drop
        extra parameter.
    
    Signed-off-by: Lucas Stach <dev@lynxeye.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a36c14ba24b1ba16964d0289fe8b282b780a5554
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Fri Apr 15 16:38:40 2016 +0200

    s390/mm: fix asce_bits handling with dynamic pagetable levels
    
    [ Upstream commit 723cacbd9dc79582e562c123a0bacf8bfc69e72a ]
    
    There is a race with multi-threaded applications between context switch and
    pagetable upgrade. In switch_mm() a new user_asce is built from mm->pgd and
    mm->context.asce_bits, w/o holding any locks. A concurrent mmap with a
    pagetable upgrade on another thread in crst_table_upgrade() could already
    have set new asce_bits, but not yet the new mm->pgd. This would result in a
    corrupt user_asce in switch_mm(), and eventually in a kernel panic from a
    translation exception.
    
    Fix this by storing the complete asce instead of just the asce_bits, which
    can then be read atomically from switch_mm(), so that it either sees the
    old value or the new value, but no mixture. Both cases are OK. Having the
    old value would result in a page fault on access to the higher level memory,
    but the fault handler would see the new mm->pgd, if it was a valid access
    after the mmap on the other thread has completed. So as worst-case scenario
    we would have a page fault loop for the racing thread until the next time
    slice.
    
    Also remove dead code and simplify the upgrade/downgrade path, there are no
    upgrades from 2 levels, and only downgrades from 3 levels for compat tasks.
    There are also no concurrent upgrades, because the mmap_sem is held with
    down_write() in do_mmap, so the flush and table checks during upgrade can
    be removed.
    
    Reported-by: Michael Munday <munday@ca.ibm.com>
    Reviewed-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 90eb6718b9db5c145f7c2d4a14df6a4b8d96e7b3
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 9 20:55:16 2016 -0700

    tcp: refresh skb timestamp at retransmit time
    
    [ Upstream commit 10a81980fc47e64ffac26a073139813d3f697b64 ]
    
    In the very unlikely case __tcp_retransmit_skb() can not use the cloning
    done in tcp_transmit_skb(), we need to refresh skb_mstamp before doing
    the copy and transmit, otherwise TCP TS val will be an exact copy of
    original transmit.
    
    Fixes: 7faee5c0d514 ("tcp: remove TCP_SKB_CB(skb)->when")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b2b95b3fbd93c910210922809f6c4d24be172b1c
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Sun May 8 12:10:14 2016 -0400

    net: fix a kernel infoleak in x25 module
    
    [ Upstream commit 79e48650320e6fba48369fccf13fd045315b19b8 ]
    
    Stack object "dte_facilities" is allocated in x25_rx_call_request(),
    which is supposed to be initialized in x25_negotiate_facilities.
    However, 5 fields (8 bytes in total) are not initialized. This
    object is then copied to userland via copy_to_user, thus infoleak
    occurs.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 806d70c7da5bc0dc43e54fe0362fc0fcf573bfe2
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed May 4 16:18:45 2016 +0200

    net: bridge: fix old ioctl unlocked net device walk
    
    [ Upstream commit 31ca0458a61a502adb7ed192bf9716c6d05791a5 ]
    
    get_bridge_ifindices() is used from the old "deviceless" bridge ioctl
    calls which aren't called with rtnl held. The comment above says that it is
    called with rtnl but that is not really the case.
    Here's a sample output from a test ASSERT_RTNL() which I put in
    get_bridge_ifindices and executed "brctl show":
    [  957.422726] RTNL: assertion failed at net/bridge//br_ioctl.c (30)
    [  957.422925] CPU: 0 PID: 1862 Comm: brctl Tainted: G        W  O
    4.6.0-rc4+ #157
    [  957.423009] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
    BIOS 1.8.1-20150318_183358- 04/01/2014
    [  957.423009]  0000000000000000 ffff880058adfdf0 ffffffff8138dec5
    0000000000000400
    [  957.423009]  ffffffff81ce8380 ffff880058adfe58 ffffffffa05ead32
    0000000000000001
    [  957.423009]  00007ffec1a444b0 0000000000000400 ffff880053c19130
    0000000000008940
    [  957.423009] Call Trace:
    [  957.423009]  [<ffffffff8138dec5>] dump_stack+0x85/0xc0
    [  957.423009]  [<ffffffffa05ead32>]
    br_ioctl_deviceless_stub+0x212/0x2e0 [bridge]
    [  957.423009]  [<ffffffff81515beb>] sock_ioctl+0x22b/0x290
    [  957.423009]  [<ffffffff8126ba75>] do_vfs_ioctl+0x95/0x700
    [  957.423009]  [<ffffffff8126c159>] SyS_ioctl+0x79/0x90
    [  957.423009]  [<ffffffff8163a4c0>] entry_SYSCALL_64_fastpath+0x23/0xc1
    
    Since it only reads bridge ifindices, we can use rcu to safely walk the net
    device list. Also remove the wrong rtnl comment above.
    
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8817c1b1dad9fe118779eb3df237674856514fc8
Author: Ian Campbell <ian.campbell@docker.com>
Date:   Wed May 4 14:21:53 2016 +0100

    VSOCK: do not disconnect socket when peer has shutdown SEND only
    
    [ Upstream commit dedc58e067d8c379a15a8a183c5db318201295bb ]
    
    The peer may be expecting a reply having sent a request and then done a
    shutdown(SHUT_WR), so tearing down the whole socket at this point seems
    wrong and breaks for me with a client which does a SHUT_WR.
    
    Looking at other socket family's stream_recvmsg callbacks doing a shutdown
    here does not seem to be the norm and removing it does not seem to have
    had any adverse effects that I can see.
    
    I'm using Stefan's RFC virtio transport patches, I'm unsure of the impact
    on the vmci transport.
    
    Signed-off-by: Ian Campbell <ian.campbell@docker.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Stefan Hajnoczi <stefanha@redhat.com>
    Cc: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
    Cc: Andy King <acking@vmware.com>
    Cc: Dmitry Torokhov <dtor@vmware.com>
    Cc: Jorgen Hansen <jhansen@vmware.com>
    Cc: Adit Ranadive <aditr@vmware.com>
    Cc: netdev@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8bba1625512245771bdb2cb1502697228fe7e1b2
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Wed May 4 15:00:33 2016 +0300

    net/mlx4_en: Fix endianness bug in IPV6 csum calculation
    
    [ Upstream commit 82d69203df634b4dfa765c94f60ce9482bcc44d6 ]
    
    Use htons instead of unconditionally byte swapping nexthdr.  On a little
    endian systems shifting the byte is correct behavior, but it results in
    incorrect csums on big endian architectures.
    
    Fixes: f8c6455bb04b ('net/mlx4_en: Extend checksum offloading by CHECKSUM COMPLETE')
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Carol Soto <clsoto@us.ibm.com>
    Tested-by: Carol Soto <clsoto@us.ibm.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 9a9390bcf56680c487a8e4c89c813a48bfedc4b6
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:46:24 2016 -0400

    net: fix infoleak in rtnetlink
    
    [ Upstream commit 5f8e44741f9f216e33736ea4ec65ca9ac03036e6 ]
    
    The stack object “map” has a total size of 32 bytes. Its last 4
    bytes are padding generated by compiler. These padding bytes are
    not initialized and sent out via “nla_put”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5923f46563d1ce74c1f1178cba5a67735bb83e6d
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:35:05 2016 -0400

    net: fix infoleak in llc
    
    [ Upstream commit b8670c09f37bdf2847cc44f36511a53afc6161fd ]
    
    The stack object “info” has a total size of 12 bytes. Its last byte
    is padding which is not initialized and leaked via “put_cmsg”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 9a7e38d01e351fc5de11b2a033ced5ff04090b81
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue May 3 16:38:53 2016 +0200

    net: fec: only clear a queue's work bit if the queue was emptied
    
    [ Upstream commit 1c021bb717a70aaeaa4b25c91f43c2aeddd922de ]
    
    In the receive path a queue's work bit was cleared unconditionally even
    if fec_enet_rx_queue only read out a part of the available packets from
    the hardware. This resulted in not reading any packets in the next napi
    turn and so packets were delayed or lost.
    
    The obvious fix is to only clear a queue's bit when the queue was
    emptied.
    
    Fixes: 4d494cdc92b3 ("net: fec: change data structure to support multiqueue")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Fugang Duan <fugang.duan@nxp.com>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5305392b443d3ba1414deff068ca1542f197d5ec
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Mon May 2 12:20:15 2016 -0400

    netem: Segment GSO packets on enqueue
    
    [ Upstream commit 6071bd1aa13ed9e41824bafad845b7b7f4df5cfd ]
    
    This was recently reported to me, and reproduced on the latest net kernel,
    when attempting to run netperf from a host that had a netem qdisc attached
    to the egress interface:
    
    [  788.073771] ---------------------[ cut here ]---------------------------
    [  788.096716] WARNING: at net/core/dev.c:2253 skb_warn_bad_offload+0xcd/0xda()
    [  788.129521] bnx2: caps=(0x00000001801949b3, 0x0000000000000000) len=2962
    data_len=0 gso_size=1448 gso_type=1 ip_summed=3
    [  788.182150] Modules linked in: sch_netem kvm_amd kvm crc32_pclmul ipmi_ssif
    ghash_clmulni_intel sp5100_tco amd64_edac_mod aesni_intel lrw gf128mul
    glue_helper ablk_helper edac_mce_amd cryptd pcspkr sg edac_core hpilo ipmi_si
    i2c_piix4 k10temp fam15h_power hpwdt ipmi_msghandler shpchp acpi_power_meter
    pcc_cpufreq nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables xfs libcrc32c
    sd_mod crc_t10dif crct10dif_generic mgag200 syscopyarea sysfillrect sysimgblt
    i2c_algo_bit drm_kms_helper ahci ata_generic pata_acpi ttm libahci
    crct10dif_pclmul pata_atiixp tg3 libata crct10dif_common drm crc32c_intel ptp
    serio_raw bnx2 r8169 hpsa pps_core i2c_core mii dm_mirror dm_region_hash dm_log
    dm_mod
    [  788.465294] CPU: 16 PID: 0 Comm: swapper/16 Tainted: G        W
    ------------   3.10.0-327.el7.x86_64 #1
    [  788.511521] Hardware name: HP ProLiant DL385p Gen8, BIOS A28 12/17/2012
    [  788.542260]  ffff880437c036b8 f7afc56532a53db9 ffff880437c03670
    ffffffff816351f1
    [  788.576332]  ffff880437c036a8 ffffffff8107b200 ffff880633e74200
    ffff880231674000
    [  788.611943]  0000000000000001 0000000000000003 0000000000000000
    ffff880437c03710
    [  788.647241] Call Trace:
    [  788.658817]  <IRQ>  [<ffffffff816351f1>] dump_stack+0x19/0x1b
    [  788.686193]  [<ffffffff8107b200>] warn_slowpath_common+0x70/0xb0
    [  788.713803]  [<ffffffff8107b29c>] warn_slowpath_fmt+0x5c/0x80
    [  788.741314]  [<ffffffff812f92f3>] ? ___ratelimit+0x93/0x100
    [  788.767018]  [<ffffffff81637f49>] skb_warn_bad_offload+0xcd/0xda
    [  788.796117]  [<ffffffff8152950c>] skb_checksum_help+0x17c/0x190
    [  788.823392]  [<ffffffffa01463a1>] netem_enqueue+0x741/0x7c0 [sch_netem]
    [  788.854487]  [<ffffffff8152cb58>] dev_queue_xmit+0x2a8/0x570
    [  788.880870]  [<ffffffff8156ae1d>] ip_finish_output+0x53d/0x7d0
    ...
    
    The problem occurs because netem is not prepared to handle GSO packets (as it
    uses skb_checksum_help in its enqueue path, which cannot manipulate these
    frames).
    
    The solution I think is to simply segment the skb in a simmilar fashion to the
    way we do in __dev_queue_xmit (via validate_xmit_skb), with some minor changes.
    When we decide to corrupt an skb, if the frame is GSO, we segment it, corrupt
    the first segment, and enqueue the remaining ones.
    
    tested successfully by myself on the latest net kernel, to which this applies
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Jamal Hadi Salim <jhs@mojatatu.com>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: netem@lists.linux-foundation.org
    CC: eric.dumazet@gmail.com
    CC: stephen@networkplumber.org
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit dfc58a04d16c3132f3691c021a67938617905679
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:03 2016 -0800

    sch_dsmark: update backlog as well
    
    [ Upstream commit bdf17661f63a79c3cb4209b970b1cc39e34f7543 ]
    
    Similarly, we need to update backlog too when we update qlen.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 64e1762ae4128508d4a9ef483d77ac52c89f5630
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:02 2016 -0800

    sch_htb: update backlog as well
    
    [ Upstream commit 431e3a8e36a05a37126f34b41aa3a5a6456af04e ]
    
    We saw qlen!=0 but backlog==0 on our production machine:
    
    qdisc htb 1: dev eth0 root refcnt 2 r2q 10 default 1 direct_packets_stat 0 ver 3.17
     Sent 172680457356 bytes 222469449 pkt (dropped 0, overlimits 123575834 requeues 0)
     backlog 0b 72p requeues 0
    
    The problem is we only count qlen for HTB qdisc but not backlog.
    We need to update backlog too when we update qlen, so that we
    can at least know the average packet length.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 236094acb4b5c224d68d3b279941d24d555078d4
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:01 2016 -0800

    net_sched: update hierarchical backlog too
    
    [ Upstream commit 2ccccf5fb43ff62b2b96cc58d95fc0b3596516e4 ]
    
    When the bottom qdisc decides to, for example, drop some packet,
    it calls qdisc_tree_decrease_qlen() to update the queue length
    for all its ancestors, we need to update the backlog too to
    keep the stats on root qdisc accurate.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 11316d7eef2230000bb4fa3d4b9056690fda3ef2
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:00 2016 -0800

    net_sched: introduce qdisc_replace() helper
    
    [ Upstream commit 86a7996cc8a078793670d82ed97d5a99bb4e8496 ]
    
    Remove nearly duplicated code and prepare for the following patch.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7b6460337ed23f3b29958e853f7d1f191bfd844d
Author: Jann Horn <jannh@google.com>
Date:   Tue Apr 26 22:26:26 2016 +0200

    bpf: fix double-fdput in replace_map_fd_with_map_ptr()
    
    [ Upstream commit 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7 ]
    
    When bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode
    references a non-map file descriptor as a map file descriptor, the error
    handling code called fdput() twice instead of once (in __bpf_map_get() and
    in replace_map_fd_with_map_ptr()). If the file descriptor table of the
    current task is shared, this causes f_count to be decremented too much,
    allowing the struct file to be freed while it is still in use
    (use-after-free). This can be exploited to gain root privileges by an
    unprivileged user.
    
    This bug was introduced in
    commit 0246e64d9a5f ("bpf: handle pseudo BPF_LD_IMM64 insn"), but is only
    exploitable since
    commit 1be7f75d1668 ("bpf: enable non-root eBPF programs") because
    previously, CAP_SYS_ADMIN was required to reach the vulnerable code.
    
    (posted publicly according to request by maintainer)
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit eeee948a652e9ee02643bf031cd613339ccc6864
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Apr 23 11:35:46 2016 -0700

    net/mlx4_en: fix spurious timestamping callbacks
    
    [ Upstream commit fc96256c906362e845d848d0f6a6354450059e81 ]
    
    When multiple skb are TX-completed in a row, we might incorrectly keep
    a timestamp of a prior skb and cause extra work.
    
    Fixes: ec693d47010e8 ("net/mlx4_en: Add HW timestamping (TS) support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2c5ac2bfe56da842b7c84e99e9811f118b6f7a17
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Apr 21 22:23:31 2016 +0200

    ipv4/fib: don't warn when primary address is missing if in_dev is dead
    
    [ Upstream commit 391a20333b8393ef2e13014e6e59d192c5594471 ]
    
    After commit fbd40ea0180a ("ipv4: Don't do expensive useless work
    during inetdev destroy.") when deleting an interface,
    fib_del_ifaddr() can be executed without any primary address
    present on the dead interface.
    
    The above is safe, but triggers some "bug: prim == NULL" warnings.
    
    This commit avoids warning if the in_dev is dead
    
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 303c69a17dc9ec4c26682dfcf7be27805544354e
Author: Simon Horman <simon.horman@netronome.com>
Date:   Thu Apr 21 11:49:15 2016 +1000

    openvswitch: use flow protocol when recalculating ipv6 checksums
    
    [ Upstream commit b4f70527f052b0c00be4d7cac562baa75b212df5 ]
    
    When using masked actions the ipv6_proto field of an action
    to set IPv6 fields may be zero rather than the prevailing protocol
    which will result in skipping checksum recalculation.
    
    This patch resolves the problem by relying on the protocol
    in the flow key rather than that in the set field action.
    
    Fixes: 83d2b9ba1abc ("net: openvswitch: Support masked set actions.")
    Cc: Jarno Rajahalme <jrajahalme@nicira.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a2e388f2537a23348810b20ae82468f13d3fb123
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Apr 20 23:23:08 2016 +0100

    atl2: Disable unimplemented scatter/gather feature
    
    [ Upstream commit f43bfaeddc79effbf3d0fcb53ca477cca66f3db8 ]
    
    atl2 includes NETIF_F_SG in hw_features even though it has no support
    for non-linear skbs.  This bug was originally harmless since the
    driver does not claim to implement checksum offload and that used to
    be a requirement for SG.
    
    Now that SG and checksum offload are independent features, if you
    explicitly enable SG *and* use one of the rare protocols that can use
    SG without checkusm offload, this potentially leaks sensitive
    information (before you notice that it just isn't working).  Therefore
    this obscure bug has been designated CVE-2016-2117.
    
    Reported-by: Justin Yackoski <jyackoski@crypto-nite.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Fixes: ec5f06156423 ("net: Kill link between CSUM and SG features.")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a4e1611c8bc5e331e07bea540d3571911df6ac52
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Tue Apr 12 10:26:19 2016 -0700

    bpf/verifier: reject invalid LD_ABS | BPF_DW instruction
    
    [ Upstream commit d82bccc69041a51f7b7b9b4a36db0772f4cdba21 ]
    
    verifier must check for reserved size bits in instruction opcode and
    reject BPF_LD | BPF_ABS | BPF_DW and BPF_LD | BPF_IND | BPF_DW instructions,
    otherwise interpreter will WARN_RATELIMIT on them during execution.
    
    Fixes: ddd872bc3098 ("bpf: verifier: add checks for BPF_ABS | BPF_IND instructions")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5730fd5d72071c9ae96929292351029ea56de7c0
Author: Lars Persson <lars.persson@axis.com>
Date:   Tue Apr 12 08:45:52 2016 +0200

    net: sched: do not requeue a NULL skb
    
    [ Upstream commit 3dcd493fbebfd631913df6e2773cc295d3bf7d22 ]
    
    A failure in validate_xmit_skb_list() triggered an unconditional call
    to dev_requeue_skb with skb=NULL. This slowly grows the queue
    discipline's qlen count until all traffic through the queue stops.
    
    We take the optimistic approach and continue running the queue after a
    failure since it is unknown if later packets also will fail in the
    validate path.
    
    Fixes: 55a93b3ea780 ("qdisc: validate skb without holding lock")
    Signed-off-by: Lars Persson <larper@axis.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4b5223be98e1972e177f319159a29eb3bab2720e
Author: Mathias Krause <minipli@googlemail.com>
Date:   Sun Apr 10 12:52:28 2016 +0200

    packet: fix heap info leak in PACKET_DIAG_MCLIST sock_diag interface
    
    [ Upstream commit 309cf37fe2a781279b7675d4bb7173198e532867 ]
    
    Because we miss to wipe the remainder of i->addr[] in packet_mc_add(),
    pdiag_put_mclist() leaks uninitialized heap bytes via the
    PACKET_DIAG_MCLIST netlink attribute.
    
    Fix this by explicitly memset(0)ing the remaining bytes in i->addr[].
    
    Fixes: eea68e2f1a00 ("packet: Report socket mclist info via diag module")
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Pavel Emelyanov <xemul@parallels.com>
    Acked-by: Pavel Emelyanov <xemul@virtuozzo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 80565d16c385958217a0c204f19475ce8210e64a
Author: Chris Friesen <chris.friesen@windriver.com>
Date:   Fri Apr 8 15:21:30 2016 -0600

    route: do not cache fib route info on local routes with oif
    
    [ Upstream commit d6d5e999e5df67f8ec20b6be45e2229455ee3699 ]
    
    For local routes that require a particular output interface we do not want
    to cache the result.  Caching the result causes incorrect behaviour when
    there are multiple source addresses on the interface.  The end result
    being that if the intended recipient is waiting on that interface for the
    packet he won't receive it because it will be delivered on the loopback
    interface and the IP_PKTINFO ipi_ifindex will be set to the loopback
    interface as well.
    
    This can be tested by running a program such as "dhcp_release" which
    attempts to inject a packet on a particular interface so that it is
    received by another program on the same board.  The receiving process
    should see an IP_PKTINFO ipi_ifndex value of the source interface
    (e.g., eth1) instead of the loopback interface (e.g., lo).  The packet
    will still appear on the loopback interface in tcpdump but the important
    aspect is that the CMSG info is correct.
    
    Sample dhcp_release command line:
    
       dhcp_release eth1 192.168.204.222 02:11:33:22:44:66
    
    Signed-off-by: Allain Legacy <allain.legacy@windriver.com>
    Signed off-by: Chris Friesen <chris.friesen@windriver.com>
    Reviewed-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1ea4df4a2642ba2856a70e4530ae922f0c8e672e
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Apr 10 23:01:30 2016 -0400

    decnet: Do not build routes to devices without decnet private data.
    
    [ Upstream commit a36a0d4008488fa545c74445d69eaf56377d5d4e ]
    
    In particular, make sure we check for decnet private presence
    for loopback devices.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 51319f40e513500085f25ae42ace31b8bc4bcfc2
Author: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
Date:   Wed Mar 23 21:07:39 2016 -0700

    ACPI / processor: Request native thermal interrupt handling via _OSC
    
    [ Upstream commit a21211672c9a1d730a39aa65d4a5b3414700adfb ]
    
    There are several reports of freeze on enabling HWP (Hardware PStates)
    feature on Skylake-based systems by the Intel P-states driver. The root
    cause is identified as the HWP interrupts causing BIOS code to freeze.
    
    HWP interrupts use the thermal LVT which can be handled by Linux
    natively, but on the affected Skylake-based systems SMM will respond
    to it by default.  This is a problem for several reasons:
     - On the affected systems the SMM thermal LVT handler is broken (it
       will crash when invoked) and a BIOS update is necessary to fix it.
     - With thermal interrupt handled in SMM we lose all of the reporting
       features of the arch/x86/kernel/cpu/mcheck/therm_throt driver.
     - Some thermal drivers like x86-package-temp depend on the thermal
       threshold interrupts signaled via the thermal LVT.
     - The HWP interrupts are useful for debugging and tuning
       performance (if the kernel can handle them).
    The native handling of thermal interrupts needs to be enabled
    because of that.
    
    This requires some way to tell SMM that the OS can handle thermal
    interrupts.  That can be done by using _OSC/_PDC in processor
    scope very early during ACPI initialization.
    
    The meaning of _OSC/_PDC bit 12 in processor scope is whether or
    not the OS supports native handling of interrupts for Collaborative
    Processor Performance Control (CPPC) notifications.  Since on
    HWP-capable systems CPPC is a firmware interface to HWP, setting
    this bit effectively tells the firmware that the OS will handle
    thermal interrupts natively going forward.
    
    For details on _OSC/_PDC refer to:
    http://www.intel.com/content/www/us/en/standards/processor-vendor-specific-acpi-specification.html
    
    To implement the _OSC/_PDC handshake as described, introduce a new
    function, acpi_early_processor_osc(), that walks the ACPI
    namespace looking for ACPI processor objects and invokes _OSC for
    them with bit 12 in the capabilities buffer set and terminates the
    namespace walk on the first success.
    
    Also modify intel_thermal_interrupt() to clear HWP status bits in
    the HWP_STATUS MSR to acknowledge HWP interrupts (which prevents
    them from firing continuously).
    
    Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    [ rjw: Subject & changelog, function rename ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fd4453a9c8a4ccc784a51c71411b113f8a997ea1
Author: Richard Leitner <dev@g0hl1n.net>
Date:   Tue Apr 5 15:03:48 2016 +0200

    iio: ak8975: fix maybe-uninitialized warning
    
    [ Upstream commit 05be8d4101d960bad271d32b4f6096af1ccb1534 ]
    
    If i2c_device_id *id is NULL and acpi_match_device returns NULL too,
    then chipset may be unitialized when accessing &ak_def_array[chipset] in
    ak8975_probe. Therefore initialize chipset to AK_MAX_TYPE, which will
    return an error when not changed.
    
    This patch fixes the following maybe-uninitialized warning:
    
    drivers/iio/magnetometer/ak8975.c: In function ‘ak8975_probe’:
    drivers/iio/magnetometer/ak8975.c:788:14: warning: ‘chipset’ may be used
    uninitialized in this function [-Wmaybe-uninitialized]
      data->def = &ak_def_array[chipset];
    
    Signed-off-by: Richard Leitner <dev@g0hl1n.net>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <jic23@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b55c212a0f25d8999b9601a120506861d85f6fd3
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Mar 20 12:27:53 2016 +0100

    batman-adv: Reduce refcnt of removed router when updating route
    
    [ Upstream commit d1a65f1741bfd9c69f9e4e2ad447a89b6810427d ]
    
    _batadv_update_route rcu_derefences orig_ifinfo->router outside of a
    spinlock protected region to print some information messages to the debug
    log. But this pointer is not checked again when the new pointer is assigned
    in the spinlock protected region. Thus is can happen that the value of
    orig_ifinfo->router changed in the meantime and thus the reference counter
    of the wrong router gets reduced after the spinlock protected region.
    
    Just rcu_dereferencing the value of orig_ifinfo->router inside the spinlock
    protected region (which also set the new pointer) is enough to get the
    correct old router object.
    
    Fixes: e1a5382f978b ("batman-adv: Make orig_node->router an rcu protected pointer")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Antonio Quartulli <a@unstable.cc>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit eaa401a078fffcd5e1d078cb10b0efcd8e2d6c20
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Fri Mar 11 14:04:49 2016 +0100

    batman-adv: Fix broadcast/ogm queue limit on a removed interface
    
    [ Upstream commit c4fdb6cff2aa0ae740c5f19b6f745cbbe786d42f ]
    
    When removing a single interface while a broadcast or ogm packet is
    still pending then we will free the forward packet without releasing the
    queue slots again.
    
    This patch is supposed to fix this issue.
    
    Fixes: 6d5808d4ae1b ("batman-adv: Add missing hardif_free_ref in forw_packet_free")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    [sven@narfation.org: fix conflicts with current version]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Antonio Quartulli <a@unstable.cc>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit f7ac631102975609851be1969f7d89a77ecaa52e
Author: Sven Eckelmann <sven@narfation.org>
Date:   Fri Feb 26 17:56:13 2016 +0100

    batman-adv: Check skb size before using encapsulated ETH+VLAN header
    
    [ Upstream commit c78296665c3d81f040117432ab9e1cb125521b0c ]
    
    The encapsulated ethernet and VLAN header may be outside the received
    ethernet frame. Thus the skb buffer size has to be checked before it can be
    parsed to find out if it encapsulates another batman-adv packet.
    
    Fixes: 420193573f11 ("batman-adv: softif bridge loop avoidance")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Marek Lindner <mareklindner@neomailbox.ch>
    Signed-off-by: Antonio Quartulli <a@unstable.cc>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7b1f624b9e5dbba4d7613a9b9050526eba6da626
Author: Jason Baron <jbaron@akamai.com>
Date:   Thu May 5 16:22:12 2016 -0700

    mm: update min_free_kbytes from khugepaged after core initialization
    
    [ Upstream commit bc22af74f271ef76b2e6f72f3941f91f0da3f5f8 ]
    
    Khugepaged attempts to raise min_free_kbytes if its set too low.
    However, on boot khugepaged sets min_free_kbytes first from
    subsys_initcall(), and then the mm 'core' over-rides min_free_kbytes
    after from init_per_zone_wmark_min(), via a module_init() call.
    
    Khugepaged used to use a late_initcall() to set min_free_kbytes (such
    that it occurred after the core initialization), however this was
    removed when the initialization of min_free_kbytes was integrated into
    the starting of the khugepaged thread.
    
    The fix here is simply to invoke the core initialization using a
    core_initcall() instead of module_init(), such that the previous
    initialization ordering is restored.  I didn't restore the
    late_initcall() since start_stop_khugepaged() already sets
    min_free_kbytes via set_recommended_min_free_kbytes().
    
    This was noticed when we had a number of page allocation failures when
    moving a workload to a kernel with this new initialization ordering.  On
    an 8GB system this restores min_free_kbytes back to 67584 from 11365
    when CONFIG_TRANSPARENT_HUGEPAGE=y is set and either
    CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS=y or
    CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y.
    
    Fixes: 79553da293d3 ("thp: cleanup khugepaged startup")
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 93c4863f4435023fcfdae542039860349189b334
Author: Mathias Krause <minipli@googlemail.com>
Date:   Thu May 5 16:22:26 2016 -0700

    proc: prevent accessing /proc/<PID>/environ until it's ready
    
    [ Upstream commit 8148a73c9901a8794a50f950083c00ccf97d43b3 ]
    
    If /proc/<PID>/environ gets read before the envp[] array is fully set up
    in create_{aout,elf,elf_fdpic,flat}_tables(), we might end up trying to
    read more bytes than are actually written, as env_start will already be
    set but env_end will still be zero, making the range calculation
    underflow, allowing to read beyond the end of what has been written.
    
    Fix this as it is done for /proc/<PID>/cmdline by testing env_end for
    zero.  It is, apparently, intentionally set last in create_*_tables().
    
    This bug was found by the PaX size_overflow plugin that detected the
    arithmetic underflow of 'this_len = env_end - (env_start + src)' when
    env_end is still zero.
    
    The expected consequence is that userland trying to access
    /proc/<PID>/environ of a not yet fully set up process may get
    inconsistent data as we're in the middle of copying in the environment
    variables.
    
    Fixes: https://forums.grsecurity.net/viewtopic.php?f=3&t=4363
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=116461
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Cc: Emese Revfy <re.emese@gmail.com>
    Cc: Pax Team <pageexec@freemail.hu>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Mateusz Guzik <mguzik@redhat.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Cyrill Gorcunov <gorcunov@openvz.org>
    Cc: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d6c812a33d16d1e2dd9ab209c69d9755da5cc425
Author: Knut Wohlrab <Knut.Wohlrab@de.bosch.com>
Date:   Mon Apr 25 14:08:25 2016 -0700

    Input: zforce_ts - fix dual touch recognition
    
    [ Upstream commit 6984ab1ab35f422292b7781c65284038bcc0f6a6 ]
    
    A wrong decoding of the touch coordinate message causes a wrong touch
    ID. Touch ID for dual touch must be 0 or 1.
    
    According to the actual Neonode nine byte touch coordinate coding,
    the state is transported in the lower nibble and the touch ID in
    the higher nibble of payload byte five.
    
    Signed-off-by: Knut Wohlrab <Knut.Wohlrab@de.bosch.com>
    Signed-off-by: Oleksij Rempel <linux@rempel-privat.de>
    Signed-off-by: Dirk Behme <dirk.behme@de.bosch.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b7c61d507c7f67c6441da26942c5c65c49511d35
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:29:44 2016 +0100

    lpfc: fix misleading indentation
    
    [ Upstream commit aeb6641f8ebdd61939f462a8255b316f9bfab707 ]
    
    gcc-6 complains about the indentation of the lpfc_destroy_vport_work_array()
    call in lpfc_online(), which clearly doesn't look right:
    
    drivers/scsi/lpfc/lpfc_init.c: In function 'lpfc_online':
    drivers/scsi/lpfc/lpfc_init.c:2880:3: warning: statement is indented as if it were guarded by... [-Wmisleading-indentation]
       lpfc_destroy_vport_work_array(phba, vports);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/scsi/lpfc/lpfc_init.c:2863:2: note: ...this 'if' clause, but it is not
      if (vports != NULL)
      ^~
    
    Looking at the patch that introduced this code, it's clear that the
    behavior is correct and the indentation is wrong.
    
    This fixes the indentation and adds curly braces around the previous
    if() block for clarity, as that is most likely what caused the code
    to be misindented in the first place.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 549e55cd2a1b ("[SCSI] lpfc 8.2.2 : Fix locking around HBA's port_list")
    Reviewed-by: Sebastian Herbszt <herbszt@gmx.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8859f16ee6d1c3ceb81e7b295cd9b3ff0689228e
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Tue Mar 1 17:26:48 2016 -0800

    clk: qcom: msm8960: Fix ce3_src register offset
    
    [ Upstream commit 0f75e1a370fd843c9e508fc1ccf0662833034827 ]
    
    The offset seems to have been copied from the sata clk. Fix it so
    that enabling the crypto engine source clk works.
    
    Tested-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Fixes: 5f775498bdc4 ("clk: qcom: Fully support apq8064 global clock control")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b1a774dd632be6ec5494b0eaf55981b561ddec22
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Feb 24 09:39:11 2016 +0100

    clk: versatile: sp810: support reentrance
    
    [ Upstream commit ec7957a6aa0aaf981fb8356dc47a2cdd01cde03c ]
    
    Despite care take to allocate clocks state containers the
    SP810 driver actually just supports creating one instance:
    all clocks registered for every instance will end up with the
    exact same name and __clk_init() will fail.
    
    Rename the timclken<0> .. timclken<n> to sp810_<instance>_<n>
    so every clock on every instance gets a unique name.
    
    This is necessary for the RealView PBA8 which has two SP810
    blocks: the second block will not register its clocks unless
    every clock on every instance is unique and results in boot
    logs like this:
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 0 at ../drivers/clk/versatile/clk-sp810.c:137
      clk_sp810_of_setup+0x110/0x154()
    Modules linked in:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted
    4.5.0-rc2-00030-g352718fc39f6-dirty #225
    Hardware name: ARM RealView Machine (Device Tree Support)
    [<c00167f8>] (unwind_backtrace) from [<c0013204>]
                 (show_stack+0x10/0x14)
    [<c0013204>] (show_stack) from [<c01a049c>]
                 (dump_stack+0x84/0x9c)
    [<c01a049c>] (dump_stack) from [<c0024990>]
                 (warn_slowpath_common+0x74/0xb0)
    [<c0024990>] (warn_slowpath_common) from [<c0024a68>]
                 (warn_slowpath_null+0x1c/0x24)
    [<c0024a68>] (warn_slowpath_null) from [<c051eb44>]
                 (clk_sp810_of_setup+0x110/0x154)
    [<c051eb44>] (clk_sp810_of_setup) from [<c051e3a4>]
                 (of_clk_init+0x12c/0x1c8)
    [<c051e3a4>] (of_clk_init) from [<c0504714>]
                 (time_init+0x20/0x2c)
    [<c0504714>] (time_init) from [<c0501b18>]
                 (start_kernel+0x244/0x3c4)
    [<c0501b18>] (start_kernel) from [<7000807c>] (0x7000807c)
    ---[ end trace cb88537fdc8fa200 ]---
    
    Cc: Michael Turquette <mturquette@baylibre.com>
    Cc: Pawel Moll <pawel.moll@arm.com>
    Fixes: 6e973d2c4385 "clk: vexpress: Add separate SP810 driver"
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5356deeafda4e139a44f6f82a99439d93a7b84cf
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Mon Feb 22 11:43:39 2016 +0000

    clk: qcom: msm8960: fix ce3_core clk enable register
    
    [ Upstream commit 732d6913691848db9fabaa6a25b4d6fad10ddccf ]
    
    This patch corrects the enable register offset which is actually 0x36cc
    instead of 0x36c4
    
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Fixes: 5f775498bdc4 ("clk: qcom: Fully support apq8064 global clock control")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit ea0b24134918a838f1ff94ac4707d3dcc637630c
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Tue Feb 2 11:37:50 2016 +0800

    clk: rockchip: free memory in error cases when registering clock branches
    
    [ Upstream commit 2467b6745e0ae9c6cdccff24c4cceeb14b1cce3f ]
    
    Add free memeory if rockchip_clk_register_branch fails.
    
    Fixes: a245fecbb806 ("clk: rockchip: add basic infrastructure...")
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 9eb52957b6a4a3e86ae25735c5cf1f1945ad33c4
Author: Dan Streetman <dan.streetman@canonical.com>
Date:   Thu Jan 14 13:42:32 2016 -0500

    nbd: ratelimit error msgs after socket close
    
    [ Upstream commit da6ccaaa79caca4f38b540b651238f87215217a2 ]
    
    Make the "Attempted send on closed socket" error messages generated in
    nbd_request_handler() ratelimited.
    
    When the nbd socket is shutdown, the nbd_request_handler() function emits
    an error message for every request remaining in its queue.  If the queue
    is large, this will spam a large amount of messages to the log.  There's
    no need for a separate error message for each request, so this patch
    ratelimits it.
    
    In the specific case this was found, the system was virtual and the error
    messages were logged to the serial port, which overwhelmed it.
    
    Fixes: 4d48a542b427 ("nbd: fix I/O hang on disconnected nbds")
    Signed-off-by: Dan Streetman <dan.streetman@canonical.com>
    Signed-off-by: Markus Pargmann <mpa@pengutronix.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7361f006e36e20a81edede6724be39e718d4347f
Author: Julian Anastasov <ja@ssi.bg>
Date:   Sat Mar 5 15:03:22 2016 +0200

    ipvs: drop first packet to redirect conntrack
    
    [ Upstream commit f719e3754ee2f7275437e61a6afd520181fdd43b ]
    
    Jiri Bohac is reporting for a problem where the attempt
    to reschedule existing connection to another real server
    needs proper redirect for the conntrack used by the IPVS
    connection. For example, when IPVS connection is created
    to NAT-ed real server we alter the reply direction of
    conntrack. If we later decide to select different real
    server we can not alter again the conntrack. And if we
    expire the old connection, the new connection is left
    without conntrack.
    
    So, the only way to redirect both the IPVS connection and
    the Netfilter's conntrack is to drop the SYN packet that
    hits existing connection, to wait for the next jiffie
    to expire the old connection and its conntrack and to rely
    on client's retransmission to create new connection as
    usually.
    
    Jiri Bohac provided a fix that drops all SYNs on rescheduling,
    I extended his patch to do such drops only for connections
    that use conntrack. Here is the original report from Jiri Bohac:
    
    Since commit dc7b3eb900aa ("ipvs: Fix reuse connection if real server
    is dead"), new connections to dead servers are redistributed
    immediately to new servers.  The old connection is expired using
    ip_vs_conn_expire_now() which sets the connection timer to expire
    immediately.
    
    However, before the timer callback, ip_vs_conn_expire(), is run
    to clean the connection's conntrack entry, the new redistributed
    connection may already be established and its conntrack removed
    instead.
    
    Fix this by dropping the first packet of the new connection
    instead, like we do when the destination server is not available.
    The timer will have deleted the old conntrack entry long before
    the first packet of the new connection is retransmitted.
    
    Fixes: dc7b3eb900aa ("ipvs: Fix reuse connection if real server is dead")
    Signed-off-by: Jiri Bohac <jbohac@suse.cz>
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 98f453547cfb0e1a1295e13905214a9f592d1e1c
Author: Marco Angaroni <marcoangaroni@gmail.com>
Date:   Sat Mar 5 12:10:02 2016 +0100

    ipvs: correct initial offset of Call-ID header search in SIP persistence engine
    
    [ Upstream commit 7617a24f83b5d67f4dab1844956be1cebc44aec8 ]
    
    The IPVS SIP persistence engine is not able to parse the SIP header
    "Call-ID" when such header is inserted in the first positions of
    the SIP message.
    
    When IPVS is configured with "--pe sip" option, like for example:
    ipvsadm -A -u 1.2.3.4:5060 -s rr --pe sip -p 120 -o
    some particular messages (see below for details) do not create entries
    in the connection template table, which can be listed with:
    ipvsadm -Lcn --persistent-conn
    
    Problematic SIP messages are SIP responses having "Call-ID" header
    positioned just after message first line:
    SIP/2.0 200 OK
    [Call-ID header here]
    [rest of the headers]
    
    When "Call-ID" header is positioned down (after a few other headers)
    it is correctly recognized.
    
    This is due to the data offset used in get_callid function call inside
    ip_vs_pe_sip.c file: since dptr already points to the start of the
    SIP message, the value of dataoff should be initially 0.
    Otherwise the header is searched starting from some bytes after the
    first character of the SIP message.
    
    Fixes: 758ff0338722 ("IPVS: sip persistence engine")
    Signed-off-by: Marco Angaroni <marcoangaroni@gmail.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7267c9680f5a0ca9e068bb8986b3c336fd02bb1e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:29:45 2016 +0100

    megaraid_sas: add missing curly braces in ioctl handler
    
    [ Upstream commit 3deb9438d34a09f6796639b652a01d110aca9f75 ]
    
    gcc-6 found a dubious indentation in the megasas_mgmt_fw_ioctl
    function:
    
    drivers/scsi/megaraid/megaraid_sas_base.c: In function 'megasas_mgmt_fw_ioctl':
    drivers/scsi/megaraid/megaraid_sas_base.c:6658:4: warning: statement is indented as if it were guarded by... [-Wmisleading-indentation]
        kbuff_arr[i] = NULL;
        ^~~~~~~~~
    drivers/scsi/megaraid/megaraid_sas_base.c:6653:3: note: ...this 'if' clause, but it is not
       if (kbuff_arr[i])
       ^~
    
    The code is actually correct, as there is no downside in clearing a NULL
    pointer again.
    
    This clarifies the code and avoids the warning by adding extra curly
    braces.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 90dc9d98f01b ("megaraid_sas : MFI MPT linked list corruption fix")
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e28574abf31fbce4ae38606989b3f18e72838b97
Author: NeilBrown <neilb@suse.com>
Date:   Fri Mar 4 17:20:13 2016 +1100

    sunrpc/cache: drop reference when sunrpc_cache_pipe_upcall() detects a race
    
    [ Upstream commit a6ab1e8126d205238defbb55d23661a3a5c6a0d8 ]
    
    sunrpc_cache_pipe_upcall() can detect a race if CACHE_PENDING is no longer
    set.  In this case it aborts the queuing of the upcall.
    However it has already taken a new counted reference on "h" and
    doesn't "put" it, even though it frees the data structure holding the reference.
    
    So let's delay the "cache_get" until we know we need it.
    
    Fixes: f9e1aedc6c79 ("sunrpc/cache: remove races with queuing an upcall.")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 00c0a9f44f68bfe9af73f84cdb93b1695da66b44
Author: Guo-Fu Tseng <cooldavid@cooldavid.org>
Date:   Sat Mar 5 08:11:56 2016 +0800

    jme: Fix device PM wakeup API usage
    
    [ Upstream commit 81422e672f8181d7ad1ee6c60c723aac649f538f ]
    
    According to Documentation/power/devices.txt
    
    The driver should not use device_set_wakeup_enable() which is the policy
    for user to decide.
    
    Using device_init_wakeup() to initialize dev->power.should_wakeup and
    dev->power.can_wakeup on driver initialization.
    
    And use device_may_wakeup() on suspend to decide if WoL function should
    be enabled on NIC.
    
    Reported-by: Diego Viola <diego.viola@gmail.com>
    Signed-off-by: Guo-Fu Tseng <cooldavid@cooldavid.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 781fff9fdb879457cd067994f162fa2dc21f4bbc
Author: Guo-Fu Tseng <cooldavid@cooldavid.org>
Date:   Sat Mar 5 08:11:55 2016 +0800

    jme: Do not enable NIC WoL functions on S0
    
    [ Upstream commit 0772a99b818079e628a1da122ac7ee023faed83e ]
    
    Otherwise it might be back on resume right after going to suspend in
    some hardware.
    
    Reported-by: Diego Viola <diego.viola@gmail.com>
    Signed-off-by: Guo-Fu Tseng <cooldavid@cooldavid.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 61116b29f126e6e7a6975f9a391d18ecd3bad83d
Author: Pali Rohár <pali@kernel.org>
Date:   Fri Feb 19 10:35:39 2016 -0800

    ARM: OMAP3: Add cpuidle parameters table for omap3430
    
    [ Upstream commit 98f42221501353067251fbf11e732707dbb68ce3 ]
    
    Based on CPU type choose generic omap3 or omap3430 specific cpuidle
    parameters. Parameters for omap3430 were measured on Nokia N900 device and
    added by commit 5a1b1d3a9efa ("OMAP3: RX-51: Pass cpu idle parameters")
    which were later removed by commit 231900afba52 ("ARM: OMAP3: cpuidle -
    remove rx51 cpuidle parameters table") due to huge code complexity.
    
    This patch brings cpuidle parameters for omap3430 devices again, but uses
    simple condition based on CPU type.
    
    Fixes: 231900afba52 ("ARM: OMAP3: cpuidle - remove rx51 cpuidle
    parameters table")
    Signed-off-by: Pali Rohár <pali.rohar@gmail.com>
    Acked-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 95297bf99436694051ee91fd5eee3c3aa02fda5d
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Mar 7 16:44:44 2016 -0300

    perf stat: Document --detailed option
    
    [ Upstream commit f594bae08183fb6b57db55387794ece3e1edf6f6 ]
    
    I'm surprised this remained undocumented since at least 2011. And it is
    actually a very useful switch, as Steve and I came to realize recently.
    
    Add the text from
    
      2cba3ffb9a9d ("perf stat: Add -d -d and -d -d -d options to show more CPU events")
    
    which added the incrementing aspect to -d.
    
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Davidlohr Bueso <dbueso@suse.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mel Gorman <mgorman@suse.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 2cba3ffb9a9d ("perf stat: Add -d -d and -d -d -d options to show more CPU events")
    Link: http://lkml.kernel.org/r/1457347294-32546-1-git-send-email-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cedfda9c15cbb1404ba6acdc2d3ea3fc73aa76f8
Author: Marcin Ślusarz <marcin.slusarz@gmail.com>
Date:   Tue Jan 19 20:03:03 2016 +0100

    perf tools: handle spaces in file names obtained from /proc/pid/maps
    
    [ Upstream commit 89fee59b504f86925894fcc9ba79d5c933842f93 ]
    
    Steam frequently puts game binaries in folders with spaces.
    
    Note: "(deleted)" markers are now treated as part of the file name.
    
    Signed-off-by: Marcin Ślusarz <marcin.slusarz@gmail.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Fixes: 6064803313ba ("perf tools: Use sscanf for parsing /proc/pid/maps")
    Link: http://lkml.kernel.org/r/20160119190303.GA17579@marcin-Inspiron-7720
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7925f4fb3d8b5b0c1bb9c5ded85078197c6f87af
Author: Eryu Guan <guaneryu@gmail.com>
Date:   Sat Mar 12 21:40:32 2016 -0500

    ext4: fix NULL pointer dereference in ext4_mark_inode_dirty()
    
    [ Upstream commit 5e1021f2b6dff1a86a468a1424d59faae2bc63c1 ]
    
    ext4_reserve_inode_write() in ext4_mark_inode_dirty() could fail on
    error (e.g. EIO) and iloc.bh can be NULL in this case. But the error is
    ignored in the following "if" condition and ext4_expand_extra_isize()
    might be called with NULL iloc.bh set, which triggers NULL pointer
    dereference.
    
    This is uncovered by commit 8b4953e13f4c ("ext4: reserve code points for
    the project quota feature"), which enlarges the ext4_inode size, and
    run the following script on new kernel but with old mke2fs:
    
      #/bin/bash
      mnt=/mnt/ext4
      devname=ext4-error
      dev=/dev/mapper/$devname
      fsimg=/home/fs.img
    
      trap cleanup 0 1 2 3 9 15
    
      cleanup()
      {
              umount $mnt >/dev/null 2>&1
              dmsetup remove $devname
              losetup -d $backend_dev
              rm -f $fsimg
              exit 0
      }
    
      rm -f $fsimg
      fallocate -l 1g $fsimg
      backend_dev=`losetup -f --show $fsimg`
      devsize=`blockdev --getsz $backend_dev`
    
      good_tab="0 $devsize linear $backend_dev 0"
      error_tab="0 $devsize error $backend_dev 0"
    
      dmsetup create $devname --table "$good_tab"
    
      mkfs -t ext4 $dev
      mount -t ext4 -o errors=continue,strictatime $dev $mnt
    
      dmsetup load $devname --table "$error_tab" && dmsetup resume $devname
      echo 3 > /proc/sys/vm/drop_caches
      ls -l $mnt
      exit 0
    
    [ Patch changed to simplify the function a tiny bit. -- Ted ]
    
    Signed-off-by: Eryu Guan <guaneryu@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6e939f787e830777bdafd5d70f13ed6498dc7ac0
Author: Karol Herbst <nouveau@karolherbst.de>
Date:   Thu Mar 3 02:03:11 2016 +0100

    x86/mm/kmmio: Fix mmiotrace for hugepages
    
    [ Upstream commit cfa52c0cfa4d727aa3e457bf29aeff296c528a08 ]
    
    Because Linux might use bigger pages than the 4K pages to handle those mmio
    ioremaps, the kmmio code shouldn't rely on the pade id as it currently does.
    
    Using the memory address instead of the page id lets us look up how big the
    page is and what its base address is, so that we won't get a page fault
    within the same page twice anymore.
    
    Tested-by: Pierre Moreau <pierre.morrow@free.fr>
    Signed-off-by: Karol Herbst <nouveau@karolherbst.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: linux-mm@kvack.org
    Cc: linux-x86_64@vger.kernel.org
    Cc: nouveau@lists.freedesktop.org
    Cc: pq@iki.fi
    Cc: rostedt@goodmis.org
    Link: http://lkml.kernel.org/r/1456966991-6861-1-git-send-email-nouveau@karolherbst.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4385d1a4421af970858491b1c35676271c89c2d9
Author: Michael Hennerich <michael.hennerich@analog.com>
Date:   Mon Feb 22 10:20:24 2016 +0100

    drivers/misc/ad525x_dpot: AD5274 fix RDAC read back errors
    
    [ Upstream commit f3df53e4d70b5736368a8fe8aa1bb70c1cb1f577 ]
    
    Fix RDAC read back errors caused by a typo. Value must shift by 2.
    
    Fixes: a4bd394956f2 ("drivers/misc/ad525x_dpot.c: new features")
    Signed-off-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d8b755902390e7ceb32a08a82f4c9e1ce72fb11e
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Feb 4 09:26:35 2016 +0900

    rtc: max77686: Properly handle regmap_irq_get_virq() error code
    
    [ Upstream commit fb166ba1d7f0a662f7332f4ff660a0d6f4d76915 ]
    
    The regmap_irq_get_virq() can return 0 or -EINVAL in error conditions
    but driver checked only for value of 0.
    
    This could lead to a cast of -EINVAL to an unsigned int used as a
    interrupt number for devm_request_threaded_irq(). Although this is not
    yet fatal (devm_request_threaded_irq() will just fail with -EINVAL) but
    might be a misleading when diagnosing errors.
    
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Fixes: 6f1c1e71d933 ("mfd: max77686: Convert to use regmap_irq")
    Reviewed-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 49d22c01a3ee52d3783465079c64c3974ce53ab7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 2 13:07:45 2016 +0300

    rtc: ds1685: passing bogus values to irq_restore
    
    [ Upstream commit 8c09b9fdecab1f4a289f07b46e2ad174b6641928 ]
    
    We call spin_lock_irqrestore with "flags" set to zero instead of to the
    value from spin_lock_irqsave().
    
    Fixes: aaaf5fbf56f1 ('rtc: add driver for DS1685 family of real time clocks')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1d22cdabe02c2c89fa78fc29795336edcc4445c0
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Mar 1 09:50:01 2016 +0100

    rtc: vr41xx: Wire up alarm_irq_enable
    
    [ Upstream commit a25f4a95ec3cded34c1250364eba704c5e4fdac4 ]
    
    drivers/rtc/rtc-vr41xx.c:229: warning: ‘vr41xx_rtc_alarm_irq_enable’ defined but not used
    
    Apparently the conversion to alarm_irq_enable forgot to wire up the
    callback.
    
    Fixes: 16380c153a69c378 ("RTC: Convert rtc drivers to use the alarm_irq_enable method")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit aa9d9e960c1f06ff27438ab61194e877edd6ff83
Author: Alexander Kochetkov <al.kochet@gmail.com>
Date:   Sun Mar 6 12:43:57 2016 +0300

    rtc: hym8563: fix invalid year calculation
    
    [ Upstream commit d5861262210067fc01b2fb4f7af2fd85a3453f15 ]
    
    Year field must be in BCD format, according to
    hym8563 datasheet.
    
    Due to the bug year 2016 became 2010.
    
    Fixes: dcaf03849352 ("rtc: add hym8563 rtc-driver")
    Signed-off-by: Alexander Kochetkov <al.kochet@gmail.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2de533754013067d325cc1211edcc03e4d14096c
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Dec 14 14:29:23 2015 +0000

    misc/bmp085: Enable building as a module
    
    [ Upstream commit 50e6315dba721cbc24ccd6d7b299f1782f210a98 ]
    
    Commit 985087dbcb02 'misc: add support for bmp18x chips to the bmp085
    driver' changed the BMP085 config symbol to a boolean.  I see no
    reason why the shared code cannot be built as a module, so change it
    back to tristate.
    
    Fixes: 985087dbcb02 ("misc: add support for bmp18x chips to the bmp085 driver")
    Cc: Eric Andersson <eric.andersson@unixphere.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a5e1649e0c4382a0994e91d958ffa70aa11ac226
Author: Sushaanth Srirangapathi <sushaanth.s@ti.com>
Date:   Mon Feb 29 18:42:19 2016 +0530

    fbdev: da8xx-fb: fix videomodes of lcd panels
    
    [ Upstream commit 713fced8d10fa1c759c8fb6bf9aaa681bae68cad ]
    
    Commit 028cd86b794f4a ("video: da8xx-fb: fix the polarities of the
    hsync/vsync pulse") fixes polarities of HSYNC/VSYNC pulse but
    forgot to update known_lcd_panels[] which had sync values
    according to old logic. This breaks LCD at least on DA850 EVM.
    
    This patch fixes this issue and I have tested this for panel
    "Sharp_LK043T1DG01" using DA850 EVM board.
    
    Fixes: 028cd86b794f4a ("video: da8xx-fb: fix the polarities of the hsync/vsync pulse")
    Signed-off-by: Sushaanth Srirangapathi <sushaanth.s@ti.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2d7efc56371c93957871838253fefe2fb4446b77
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 15 14:53:29 2016 -0700

    paride: make 'verbose' parameter an 'int' again
    
    [ Upstream commit dec63a4dec2d6d01346fd5d96062e67c0636852b ]
    
    gcc-6.0 found an ancient bug in the paride driver, which had a
    "module_param(verbose, bool, 0);" since before 2.6.12, but actually uses
    it to accept '0', '1' or '2' as arguments:
    
      drivers/block/paride/pd.c: In function 'pd_init_dev_parms':
      drivers/block/paride/pd.c:298:29: warning: comparison of constant '1' with boolean expression is always false [-Wbool-compare]
       #define DBMSG(msg) ((verbose>1)?(msg):NULL)
    
    In 2012, Rusty did a cleanup patch that also changed the type of the
    variable to 'bool', which introduced what is now a gcc warning.
    
    This changes the type back to 'int' and adapts the module_param() line
    instead, so it should work as documented in case anyone ever cares about
    running the ancient driver with debugging.
    
    Fixes: 90ab5ee94171 ("module_param: make bool parameters really bool (drivers & misc)")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Rusty Russell <rusty@rustcorp.com.au>
    Cc: Tim Waugh <tim@cyberelk.net>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Cc: Jens Axboe <axboe@fb.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1cc58547374cfa39193c7bc66119b50fcfbc9342
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 16 15:53:11 2016 +0100

    regulator: s5m8767: fix get_register() error handling
    
    [ Upstream commit e07ff9434167981c993a26d2edbbcb8e13801dbb ]
    
    The s5m8767_pmic_probe() function calls s5m8767_get_register() to
    read data without checking the return code, which produces a compile-time
    warning when that data is accessed:
    
    drivers/regulator/s5m8767.c: In function 's5m8767_pmic_probe':
    drivers/regulator/s5m8767.c:924:7: error: 'enable_reg' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    drivers/regulator/s5m8767.c:944:30: error: 'enable_val' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    
    This changes the s5m8767_get_register() function to return a -EINVAL
    not just for an invalid register number but also for an invalid
    regulator number, as both would result in returning uninitialized
    data. The s5m8767_pmic_probe() function is then changed accordingly
    to fail on a read error, as all the other callers of s5m8767_get_register()
    already do.
    
    In practice this probably cannot happen, as we don't call
    s5m8767_get_register() with invalid arguments, but the gcc
    warning seems valid in principle, in terms writing safe
    error checking.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 9c4c60554acf ("regulator: s5m8767: Convert to use regulator_[enable|disable|is_enabled]_regmap")
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 377e05c42b3078841377779f6f7f0f37b0ef31a2
Author: Huibin Hong <huibin.hong@rock-chips.com>
Date:   Wed Feb 24 18:00:04 2016 +0800

    spi/rockchip: Make sure spi clk is on in rockchip_spi_set_cs
    
    [ Upstream commit b920cc3191d7612f26f36ee494e05b5ffd9044c0 ]
    
    Rockchip_spi_set_cs could be called by spi_setup, but
    spi_setup may be called by device driver after runtime suspend.
    Then the spi clock is closed, rockchip_spi_set_cs may access the
    spi registers, which causes cpu block in some socs.
    
    Fixes: 64e36824b32 ("spi/rockchip: add driver for Rockchip RK3xxx")
    Signed-off-by: Huibin Hong <huibin.hong@rock-chips.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 25c871c07f37b8cbaebc97403233185479af095d
Author: Ignat Korchagin <ignat.korchagin@gmail.com>
Date:   Thu Mar 17 18:00:29 2016 +0000

    USB: usbip: fix potential out-of-bounds write
    
    [ Upstream commit b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb ]
    
    Fix potential out-of-bounds write to urb->transfer_buffer
    usbip handles network communication directly in the kernel. When receiving a
    packet from its peer, usbip code parses headers according to protocol. As
    part of this parsing urb->actual_length is filled. Since the input for
    urb->actual_length comes from the network, it should be treated as untrusted.
    Any entity controlling the network may put any value in the input and the
    preallocated urb->transfer_buffer may not be large enough to hold the data.
    Thus, the malicious entity is able to write arbitrary data to kernel memory.
    
    Signed-off-by: Ignat Korchagin <ignat.korchagin@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cef12dbf18ab7617cacf7c271da43624afac5520
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Jan 21 15:32:15 2016 -0500

    cgroup: make sure a parent css isn't freed before its children
    
    [ Upstream commit 8bb5ef79bc0f4016ecf79e8dce6096a3c63603e4 ]
    
    There are three subsystem callbacks in css shutdown path -
    css_offline(), css_released() and css_free().  Except for
    css_released(), cgroup core didn't guarantee the order of invocation.
    css_offline() or css_free() could be called on a parent css before its
    children.  This behavior is unexpected and led to bugs in cpu and
    memory controller.
    
    The previous patch updated ordering for css_offline() which fixes the
    cpu controller issue.  While there currently isn't a known bug caused
    by misordering of css_free() invocations, let's fix it too for
    consistency.
    
    css_free() ordering can be trivially fixed by moving putting of the
    parent css below css_free() invocation.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 339861186370771cdf9df0ba6d1b2cb2440a1d61
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Feb 1 22:06:55 2016 +0000

    efi: Expose non-blocking set_variable() wrapper to efivars
    
    [ Upstream commit 9c6672ac9c91f7eb1ec436be1442b8c26d098e55 ]
    
    Commit 6d80dba1c9fe ("efi: Provide a non-blocking SetVariable()
    operation") implemented a non-blocking alternative for the UEFI
    SetVariable() invocation performed by efivars, since it may
    occur in atomic context. However, this version of the function
    was never exposed via the efivars struct, so the non-blocking
    versions was not actually callable. Fix that.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 6d80dba1c9fe ("efi: Provide a non-blocking SetVariable() operation")
    Link: http://lkml.kernel.org/r/1454364428-494-2-git-send-email-matt@codeblueprint.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fad61c46cc9c999169b95d14a67c60a0a7141d00
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Jan 27 14:26:18 2016 +0100

    ASoC: ssm4567: Reset device before regcache_sync()
    
    [ Upstream commit 712a8038cc24dba668afe82f0413714ca87184e0 ]
    
    When the ssm4567 is powered up the driver calles regcache_sync() to restore
    the register map content. regcache_sync() assumes that the device is in its
    power-on reset state. Make sure that this is the case by explicitly
    resetting the ssm4567 register map before calling regcache_sync() otherwise
    we might end up with a incorrect register map which leads to undefined
    behaviour.
    
    One such undefined behaviour was observed when returning from system
    suspend while a playback stream is active, in that case the ssm4567 was
    kept muted after resume.
    
    Fixes: 1ee44ce03011 ("ASoC: ssm4567: Add driver for Analog Devices SSM4567 amplifier")
    Reported-by: Harsha Priya <harshapriya.n@intel.com>
    Tested-by: Fang, Yang A <yang.a.fang@intel.com>
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0cbc7967e970b92f2b60a5d935dc49eef08cfa2e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jan 25 18:07:33 2016 +0100

    ASoC: s3c24xx: use const snd_soc_component_driver pointer
    
    [ Upstream commit ba4bc32eaa39ba7687f0958ae90eec94da613b46 ]
    
    An older patch to convert the API in the s3c i2s driver
    ended up passing a const pointer into a function that takes
    a non-const pointer, so we now get a warning:
    
    sound/soc/samsung/s3c2412-i2s.c: In function 's3c2412_iis_dev_probe':
    sound/soc/samsung/s3c2412-i2s.c:172:9: error: passing argument 3 of 's3c_i2sv2_register_component' discards 'const' qualifier from pointer target type [-Werror=discarded-qualifiers]
    
    However, the s3c_i2sv2_register_component() function again
    passes the pointer into another function taking a const, so
    we just need to change its prototype.
    
    Fixes: eca3b01d0885 ("ASoC: switch over to use snd_soc_register_component() on s3c i2s")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 44783088d3fea68985f644312b3e76cd6dde8d18
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Sat Apr 16 21:14:52 2016 -0400

    i2c: exynos5: Fix possible ABBA deadlock by keeping I2C clock prepared
    
    [ Upstream commit 10ff4c5239a137abfc896ec73ef3d15a0f86a16a ]
    
    The exynos5 I2C controller driver always prepares and enables a clock
    before using it and then disables unprepares it when the clock is not
    used anymore.
    
    But this can cause a possible ABBA deadlock in some scenarios since a
    driver that uses regmap to access its I2C registers, will first grab
    the regmap lock and then the I2C xfer function will grab the prepare
    lock when preparing the I2C clock. But since the clock driver also
    uses regmap for I2C accesses, preparing a clock will first grab the
    prepare lock and then the regmap lock when using the regmap API.
    
    An example of this happens on the Exynos5422 Odroid XU4 board where a
    s2mps11 PMIC is used and both the s2mps11 regulators and clk drivers
    share the same I2C regmap.
    
    The possible deadlock is reported by the kernel lockdep:
    
      Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(sec_core:428:(regmap)->lock);
                                    lock(prepare_lock);
                                    lock(sec_core:428:(regmap)->lock);
       lock(prepare_lock);
    
      *** DEADLOCK ***
    
    Fix it by leaving the code prepared on probe and use {en,dis}able in
    the I2C transfer function.
    
    This patch is similar to commit 34e81ad5f0b6 ("i2c: s3c2410: fix ABBA
    deadlock by keeping clock prepared") that fixes the same bug in other
    driver for an I2C controller found in Samsung SoCs.
    
    Reported-by: Anand Moon <linux.amoon@gmail.com>
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Reviewed-by: Anand Moon <linux.amoon@gmail.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit be109716b05f8c1f2bd4c1389327c7848b894e20
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Jan 11 20:48:32 2016 +0200

    drm/i915: Cleanup phys status page too
    
    [ Upstream commit 7d3fdfff23852fe458a0d0979a3555fe60f1e563 ]
    
    Restore the lost phys status page cleanup.
    
    Fixes the following splat with DMA_API_DEBUG=y:
    
    WARNING: CPU: 0 PID: 21615 at ../lib/dma-debug.c:974 dma_debug_device_change+0x190/0x1f0()
    pci 0000:00:02.0: DMA-API: device driver has pending DMA allocations while released from device [count=1]
                   One of leaked entries details: [device address=0x0000000023163000] [size=4096 bytes] [mapped with DMA_BIDIRECTIONAL] [mapped as coherent]
    Modules linked in: i915(-) i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm sha256_generic hmac drbg ctr ccm sch_fq_codel binfmt_misc joydev mousedev arc4 ath5k iTCO_wdt mac80211 smsc_ircc2 ath snd_intel8x0m snd_intel8x0 snd_ac97_codec ac97_bus psmouse snd_pcm input_leds i2c_i801 pcspkr snd_timer cfg80211 snd soundcore i2c_core ehci_pci firewire_ohci ehci_hcd firewire_core lpc_ich 8139too rfkill crc_itu_t mfd_core mii usbcore rng_core intel_agp intel_gtt usb_common agpgart irda crc_ccitt fujitsu_laptop led_class parport_pc video parport evdev backlight
    CPU: 0 PID: 21615 Comm: rmmod Tainted: G     U          4.4.0-rc4-mgm-ovl+ #4
    Hardware name: FUJITSU SIEMENS LIFEBOOK S6120/FJNB16C, BIOS Version 1.26  05/10/2004
     e31a3de0 e31a3de0 e31a3d9c c128d4bd e31a3dd0 c1045a0c c15e00c4 e31a3dfc
     0000546f c15dfad2 000003ce c12b3740 000003ce c12b3740 00000000 00000001
     f61fb8a0 e31a3de8 c1045a83 00000009 e31a3de0 c15e00c4 e31a3dfc e31a3e4c
    Call Trace:
     [<c128d4bd>] dump_stack+0x16/0x19
     [<c1045a0c>] warn_slowpath_common+0x8c/0xd0
     [<c12b3740>] ? dma_debug_device_change+0x190/0x1f0
     [<c12b3740>] ? dma_debug_device_change+0x190/0x1f0
     [<c1045a83>] warn_slowpath_fmt+0x33/0x40
     [<c12b3740>] dma_debug_device_change+0x190/0x1f0
     [<c1065499>] notifier_call_chain+0x59/0x70
     [<c10655af>] __blocking_notifier_call_chain+0x3f/0x80
     [<c106560f>] blocking_notifier_call_chain+0x1f/0x30
     [<c134cfb3>] __device_release_driver+0xc3/0xf0
     [<c134d0d7>] driver_detach+0x97/0xa0
     [<c134c440>] bus_remove_driver+0x40/0x90
     [<c134db18>] driver_unregister+0x28/0x60
     [<c1079e8c>] ? trace_hardirqs_on_caller+0x12c/0x1d0
     [<c12c0618>] pci_unregister_driver+0x18/0x80
     [<f83e96e7>] drm_pci_exit+0x87/0xb0 [drm]
     [<f8b3be2d>] i915_exit+0x1b/0x1ee [i915]
     [<c10b999c>] SyS_delete_module+0x14c/0x210
     [<c1079e8c>] ? trace_hardirqs_on_caller+0x12c/0x1d0
     [<c115a9bd>] ? ____fput+0xd/0x10
     [<c1002014>] do_fast_syscall_32+0xa4/0x450
     [<c149f6fa>] sysenter_past_esp+0x3b/0x5d
    ---[ end trace c2ecbc77760f10a0 ]---
    Mapped at:
     [<c12b3183>] debug_dma_alloc_coherent+0x33/0x90
     [<f83e989c>] drm_pci_alloc+0x18c/0x1e0 [drm]
     [<f8acd59f>] intel_init_ring_buffer+0x2af/0x490 [i915]
     [<f8acd8b0>] intel_init_render_ring_buffer+0x130/0x750 [i915]
     [<f8aaea4e>] i915_gem_init_rings+0x1e/0x110 [i915]
    
    v2: s/BUG_ON/WARN_ON/ since dim doens't like the former anymore
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Fixes: 5c6c600 ("drm/i915: Remove DRI1 ring accessors and API")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk> (v1)
    Link: http://patchwork.freedesktop.org/patch/msgid/1452538112-5331-1-git-send-email-ville.syrjala@linux.intel.com
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4e57736de7ebcaf667ef07a8b7d34060ac3d153b
Author: Keerthy <j-keerthy@ti.com>
Date:   Thu Apr 14 10:29:16 2016 +0530

    pinctrl: single: Fix pcs_parse_bits_in_pinctrl_entry to use __ffs than ffs
    
    [ Upstream commit 56b367c0cd67d4c3006738e7dc9dda9273fd2bfe ]
    
    pcs_parse_bits_in_pinctrl_entry uses ffs which gives bit indices
    ranging from 1 to MAX. This leads to a corner case where we try to request
    the pin number = MAX and fails.
    
    bit_pos value is being calculted using ffs. pin_num_from_lsb uses
    bit_pos value. pins array is populated with:
    
    pin + pin_num_from_lsb.
    
    The above is 1 more than usual bit indices as bit_pos uses ffs to compute
    first set bit. Hence the last of the pins array is populated with the MAX
    value and not MAX - 1 which causes error when we call pin_request.
    
    mask_pos is rightly calculated as ((pcs->fmask) << (bit_pos - 1))
    Consequently val_pos and submask are correct.
    
    Hence use __ffs which gives (ffs(x) - 1) as the first bit set.
    
    fixes: 4e7e8017a8 ("pinctrl: pinctrl-single: enhance to configure multiple pins of different modules")
    Signed-off-by: Keerthy <j-keerthy@ti.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 372574134cc15a03608d87a3577885b049e40db3
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Feb 16 16:03:23 2016 +0100

    xen kconfig: don't "select INPUT_XEN_KBDDEV_FRONTEND"
    
    [ Upstream commit 13aa38e291bdd4e4018f40dd2f75e464814dcbf3 ]
    
    The Xen framebuffer driver selects the xen keyboard driver, so the latter
    will be built-in if XEN_FBDEV_FRONTEND=y. However, when CONFIG_INPUT
    is a loadable module, this configuration cannot work. On mainline kernels,
    the symbol will be enabled but not used, while in combination with
    a patch I have to detect such useless configurations, we get the
    expected link failure:
    
    drivers/input/built-in.o: In function `xenkbd_remove':
    xen-kbdfront.c:(.text+0x2f0): undefined reference to `input_unregister_device'
    xen-kbdfront.c:(.text+0x30e): undefined reference to `input_unregister_device'
    
    This removes the extra "select", as it just causes more trouble than
    it helps. In theory, some defconfig file might break if it has
    XEN_FBDEV_FRONTEND in it but not INPUT_XEN_KBDDEV_FRONTEND. The Kconfig
    fragment we ship in the kernel (kernel/configs/xen.config) however
    already enables both, and anyone using an old .config file would
    keep having both enabled.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Suggested-by: David Vrabel <david.vrabel@citrix.com>
    Fixes: 36c1132e34bd ("xen kconfig: fix select INPUT_XEN_KBDDEV_FRONTEND")
    Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e9f20ca83ec68dddf1366fe99456a12072dc8bac
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Sun Apr 17 05:21:42 2016 -0700

    Input: pmic8xxx-pwrkey - fix algorithm for converting trigger delay
    
    [ Upstream commit eda5ecc0a6b865561997e177c393f0b0136fe3b7 ]
    
    The trigger delay algorithm that converts from microseconds to
    the register value looks incorrect. According to most of the PMIC
    documentation, the equation is
    
            delay (Seconds) = (1 / 1024) * 2 ^ (x + 4)
    
    except for one case where the documentation looks to have a
    formatting issue and the equation looks like
    
            delay (Seconds) = (1 / 1024) * 2 x + 4
    
    Most likely this driver was written with the improper
    documentation to begin with. According to the downstream sources
    the valid delays are from 2 seconds to 1/64 second, and the
    latter equation just doesn't make sense for that. Let's fix the
    algorithm and the range check to match the documentation and the
    downstream sources.
    
    Reported-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Fixes: 92d57a73e410 ("input: Add support for Qualcomm PMIC8XXX power key")
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Tested-by: John Stultz <john.stultz@linaro.org>
    Acked-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit f49eb503f0f9ab66874a81992b14249a1c59b6ad
Author: Anton Blanchard <anton@samba.org>
Date:   Fri Apr 15 12:08:19 2016 +1000

    powerpc: Update TM user feature bits in scan_features()
    
    [ Upstream commit 4705e02498d6d5a7ab98dfee9595cd5e91db2017 ]
    
    We need to update the user TM feature bits (PPC_FEATURE2_HTM and
    PPC_FEATURE2_HTM) to mirror what we do with the kernel TM feature
    bit.
    
    At the moment, if firmware reports TM is not available we turn off
    the kernel TM feature bit but leave the userspace ones on. Userspace
    thinks it can execute TM instructions and it dies trying.
    
    This (together with a QEMU patch) fixes PR KVM, which doesn't currently
    support TM.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0ee1b6dbc57dc78541df83157e1251b983c51485
Author: Davidlohr Bueso <dave@stgolabs.net>
Date:   Wed Apr 20 20:09:24 2016 -0700

    futex: Acknowledge a new waiter in counter before plist
    
    [ Upstream commit fe1bce9e2107ba3a8faffe572483b6974201a0e6 ]
    
    Otherwise an incoming waker on the dest hash bucket can miss
    the waiter adding itself to the plist during the lockless
    check optimization (small window but still the correct way
    of doing this); similarly to the decrement counterpart.
    
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: bigeasy@linutronix.de
    Cc: dvhart@infradead.org
    Cc: stable@kernel.org
    Link: http://lkml.kernel.org/r/1461208164-29150-1-git-send-email-dave@stgolabs.net
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 17e8cd1e540985cd11cc6f007867fa1679b8f866
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Jan 21 14:23:07 2016 +0100

    mac80211: fix txq queue related crashes
    
    [ Upstream commit 2a58d42c1e018ad514d4e23fd33fb2ded95d3ee6 ]
    
    The driver can access the queue simultanously
    while mac80211 tears down the interface. Without
    spinlock protection this could lead to corrupting
    sk_buff_head and subsequently to an invalid
    pointer dereference.
    
    Fixes: ba8c3d6f16a1 ("mac80211: add an intermediate software queue implementation")
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 193517ef5a16dedb1ba9bca6a9e490780cdf3f3a
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Mon Jan 25 14:43:24 2016 +0100

    mac80211: fix unnecessary frame drops in mesh fwding
    
    [ Upstream commit cf44012810ccdd8fd947518e965cb04b7b8498be ]
    
    The ieee80211_queue_stopped() expects hw queue
    number but it was given raw WMM AC number instead.
    
    This could cause frame drops and problems with
    traffic in some cases - most notably if driver
    doesn't map AC numbers to queue numbers 1:1 and
    uses ieee80211_stop_queues() and
    ieee80211_wake_queue() only without ever calling
    ieee80211_wake_queues().
    
    On ath10k it was possible to hit this problem in
    the following case:
    
      1. wlan0 uses queue 0
         (ath10k maps queues per vif)
      2. offchannel uses queue 15
      3. queues 1-14 are unused
      4. ieee80211_stop_queues()
      5. ieee80211_wake_queue(q=0)
      6. ieee80211_wake_queue(q=15)
         (other queues are not woken up because both
          driver and mac80211 know other queues are
          unused)
      7. ieee80211_rx_h_mesh_fwding()
      8. ieee80211_select_queue_80211() returns 2
      9. ieee80211_queue_stopped(q=2) returns true
     10. frame is dropped (oops!)
    
    Fixes: d3c1597b8d1b ("mac80211: fix forwarded mesh frame queue mapping")
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit bd6b2f89b2357c2daabd596d8c1c78940030042c
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Mon Jan 25 15:46:35 2016 +0200

    mac80211: fix ibss scan parameters
    
    [ Upstream commit d321cd014e51baab475efbdec468255b9e0ec822 ]
    
    When joining IBSS a full scan should be initiated in order to search
    for existing cell, unless the fixed_channel parameter was set.
    A default channel to create the IBSS on if no cell was found is
    provided as well.
    However - a scan is initiated only on the default channel provided
    regardless of whether ifibss->fixed_channel is set or not, with the
    obvious result of the cell not joining existing IBSS cell that is
    on another channel.
    
    Fixes: 76bed0f43b27 ("mac80211: IBSS fix scan request")
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6c59578f592a6873a71bc1397ccf60615d2abec0
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 26 23:05:31 2016 +0100

    mac80211: avoid excessive stack usage in sta_info
    
    [ Upstream commit 0ef049dc1167fe834d0ad5d63f89eddc5c70f6e4 ]
    
    When CONFIG_OPTIMIZE_INLINING is set, the sta_info_insert_finish
    function consumes more stack than normally, exceeding the
    1024 byte limit on ARM:
    
    net/mac80211/sta_info.c: In function 'sta_info_insert_finish':
    net/mac80211/sta_info.c:561:1: error: the frame size of 1080 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]
    
    It turns out that there are two functions that put a 'struct station_info'
    on the stack: __sta_info_destroy_part2 and sta_info_insert_finish, and
    this structure alone requires up to 792 bytes.
    
    Hoping that both are called rarely enough, this replaces the
    on-stack structure with a dynamic allocation, which unfortunately
    requires some suboptimal error handling for out-of-memory.
    
    The __sta_info_destroy_part2 function is actually affected by the
    stack usage twice because it calls cfg80211_del_sta_sinfo(), which
    has another instance of struct station_info on its stack.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 98b6218388e3 ("mac80211/cfg80211: add station events")
    Fixes: 6f7a8d26e266 ("mac80211: send statistics with delete station event")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit f46752f2993159836cb0591f5b6083f9ff2d7039
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Wed Sep 9 11:38:56 2015 -0300

    [media] v4l: vsp1: Set the SRU CTRL0 register when starting the stream
    
    [ Upstream commit f6acfcdc5b8cdc9ddd53a459361820b9efe958c4 ]
    
    Commit 58f896d859ce ("[media] v4l: vsp1: sru: Make the intensity
    controllable during streaming") refactored the stream start code and
    removed the SRU CTRL0 register write by mistake. Add it back.
    
    Fixes: 58f896d859ce ("[media] v4l: vsp1: sru: Make the intensity controllable during streaming")
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 80a3bf1c098ce3e0b711695743037b859db536c0
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Fri Feb 26 08:21:35 2016 -0300

    [media] coda: fix error path in case of missing pdata on non-DT platform
    
    [ Upstream commit bc717d5e92c8c079280eb4acbe335c6f25041aa2 ]
    
    If we bail out this early, v4l2_device_register() has not been called
    yet, so no need to call v4l2_device_unregister().
    
    Fixes: b7bd660a51f0 ("[media] coda: Call v4l2_device_unregister() from a single location")
    
    Reported-by: Michael Olbrich <m.olbrich@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 921aa6dd8753b3c81e3daaeb1ba2acd70ed36a2d
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Thu Mar 24 13:15:45 2016 +0100

    pinctrl: nomadik: fix pull debug print inversion
    
    [ Upstream commit 6ee334559324a55725e22463de633b99ad99fcad ]
    
    Pull up was reported as pull down and vice versa. Fix this.
    
    Fixes: 8f1774a2a971 "pinctrl: nomadik: improve GPIO debug prints"
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 80618333cec2c6b69244c7a478580e5ffccb6d24
Author: Thadeu Lima de Souza Cascardo <cascardo@redhat.com>
Date:   Fri Apr 1 17:17:50 2016 -0300

    ip6_tunnel: set rtnl_link_ops before calling register_netdevice
    
    [ Upstream commit b6ee376cb0b7fb4e7e07d6cd248bd40436fb9ba6 ]
    
    When creating an ip6tnl tunnel with ip tunnel, rtnl_link_ops is not set
    before ip6_tnl_create2 is called. When register_netdevice is called, there
    is no linkinfo attribute in the NEWLINK message because of that.
    
    Setting rtnl_link_ops before calling register_netdevice fixes that.
    
    Fixes: 0b112457229d ("ip6tnl: add support of link creation via rtnl")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@redhat.com>
    Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1d8ad31a7ef1e1dcc4968518d5cefcd492bc2c58
Author: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
Date:   Sun Apr 3 22:09:24 2016 +0800

    ipv6: l2tp: fix a potential issue in l2tp_ip6_recv
    
    [ Upstream commit be447f305494e019dfc37ea4cdf3b0e4200b4eba ]
    
    pskb_may_pull() can change skb->data, so we have to load ptr/optr at the
    right place.
    
    Signed-off-by: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a9c5107769719e76a895fd59408442e5629fc40f
Author: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
Date:   Sun Apr 3 22:09:23 2016 +0800

    ipv4: l2tp: fix a potential issue in l2tp_ip_recv
    
    [ Upstream commit 5745b8232e942abd5e16e85fa9b27cc21324acf0 ]
    
    pskb_may_pull() can change skb->data, so we have to load ptr/optr at the
    right place.
    
    Signed-off-by: Haishuang Yan <yanhaishuang@cmss.chinamobile.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5e6a091fd631b29332d3f61e92857ebd5d85a4be
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Thu Mar 31 18:10:31 2016 +0200

    rtnl: fix msg size calculation in if_nlmsg_size()
    
    [ Upstream commit c57c7a95da842807b475b823ed2e5435c42cb3b0 ]
    
    Size of the attribute IFLA_PHYS_PORT_NAME was missing.
    
    Fixes: db24a9044ee1 ("net: add support for phys_port_name")
    CC: David Ahern <dsahern@gmail.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b95228fd0efb56afd9aaec13a76f530f85fcb502
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Mar 29 08:43:41 2016 -0700

    ipv6: udp: fix UDP_MIB_IGNOREDMULTI updates
    
    [ Upstream commit 2d4212261fdf13e29728ddb5ea9d60c342cc92b5 ]
    
    IPv6 counters updates use a different macro than IPv4.
    
    Fixes: 36cbb2452cbaf ("udp: Increment UDP_MIB_IGNOREDMULTI for arriving unmatched multicasts")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Rick Jones <rick.jones2@hp.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 95e4695bd33e9f8ddabaf4fa64857e9bed1bda80
Author: Bjørn Mork <bjorn@mork.no>
Date:   Mon Mar 28 22:38:16 2016 +0200

    qmi_wwan: add "D-Link DWM-221 B1" device id
    
    [ Upstream commit e84810c7b85a2d7897797b3ad3e879168a8e032a ]
    
    Thomas reports:
    "Windows:
    
    00 diagnostics
    01 modem
    02 at-port
    03 nmea
    04 nic
    
    Linux:
    
    T:  Bus=02 Lev=01 Prnt=01 Port=03 Cnt=01 Dev#=  4 Spd=480 MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2001 ProdID=7e19 Rev=02.32
    S:  Manufacturer=Mobile Connect
    S:  Product=Mobile Connect
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#= 5 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage"
    
    Reported-by: Thomas Schäfer <tschaefer@t-online.de>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a23597733aed572b2de06562f5d3913b76bddfdc
Author: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
Date:   Wed Mar 23 22:39:50 2016 -0600

    xfrm: Fix crash observed during device unregistration and decryption
    
    [ Upstream commit 071d36bf21bcc837be00cea55bcef8d129e7f609 ]
    
    A crash is observed when a decrypted packet is processed in receive
    path. get_rps_cpus() tries to dereference the skb->dev fields but it
    appears that the device is freed from the poison pattern.
    
    [<ffffffc000af58ec>] get_rps_cpu+0x94/0x2f0
    [<ffffffc000af5f94>] netif_rx_internal+0x140/0x1cc
    [<ffffffc000af6094>] netif_rx+0x74/0x94
    [<ffffffc000bc0b6c>] xfrm_input+0x754/0x7d0
    [<ffffffc000bc0bf8>] xfrm_input_resume+0x10/0x1c
    [<ffffffc000ba6eb8>] esp_input_done+0x20/0x30
    [<ffffffc0000b64c8>] process_one_work+0x244/0x3fc
    [<ffffffc0000b7324>] worker_thread+0x2f8/0x418
    [<ffffffc0000bb40c>] kthread+0xe0/0xec
    
    -013|get_rps_cpu(
         |    dev = 0xFFFFFFC08B688000,
         |    skb = 0xFFFFFFC0C76AAC00 -> (
         |      dev = 0xFFFFFFC08B688000 -> (
         |        name =
    "......................................................
         |        name_hlist = (next = 0xAAAAAAAAAAAAAAAA, pprev =
    0xAAAAAAAAAAA
    
    Following are the sequence of events observed -
    
    - Encrypted packet in receive path from netdevice is queued
    - Encrypted packet queued for decryption (asynchronous)
    - Netdevice brought down and freed
    - Packet is decrypted and returned through callback in esp_input_done
    - Packet is queued again for process in network stack using netif_rx
    
    Since the device appears to have been freed, the dereference of
    skb->dev in get_rps_cpus() leads to an unhandled page fault
    exception.
    
    Fix this by holding on to device reference when queueing packets
    asynchronously and releasing the reference on call back return.
    
    v2: Make the change generic to xfrm as mentioned by Steffen and
    update the title to xfrm
    
    Suggested-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Jerome Stanislaus <jeromes@codeaurora.org>
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fc74ace8df9bffbab3b886686db02f0809bdc5e9
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Wed Mar 23 16:38:55 2016 +0100

    ppp: take reference on channels netns
    
    [ Upstream commit 1f461dcdd296eecedaffffc6bae2bfa90bd7eb89 ]
    
    Let channels hold a reference on their network namespace.
    Some channel types, like ppp_async and ppp_synctty, can have their
    userspace controller running in a different namespace. Therefore they
    can't rely on them to preclude their netns from being removed from
    under them.
    
    ==================================================================
    BUG: KASAN: use-after-free in ppp_unregister_channel+0x372/0x3a0 at
    addr ffff880064e217e0
    Read of size 8 by task syz-executor/11581
    =============================================================================
    BUG net_namespace (Not tainted): kasan: bad access detected
    -----------------------------------------------------------------------------
    
    Disabling lock debugging due to kernel taint
    INFO: Allocated in copy_net_ns+0x6b/0x1a0 age=92569 cpu=3 pid=6906
    [<      none      >] ___slab_alloc+0x4c7/0x500 kernel/mm/slub.c:2440
    [<      none      >] __slab_alloc+0x4c/0x90 kernel/mm/slub.c:2469
    [<     inline     >] slab_alloc_node kernel/mm/slub.c:2532
    [<     inline     >] slab_alloc kernel/mm/slub.c:2574
    [<      none      >] kmem_cache_alloc+0x23a/0x2b0 kernel/mm/slub.c:2579
    [<     inline     >] kmem_cache_zalloc kernel/include/linux/slab.h:597
    [<     inline     >] net_alloc kernel/net/core/net_namespace.c:325
    [<      none      >] copy_net_ns+0x6b/0x1a0 kernel/net/core/net_namespace.c:360
    [<      none      >] create_new_namespaces+0x2f6/0x610 kernel/kernel/nsproxy.c:95
    [<      none      >] copy_namespaces+0x297/0x320 kernel/kernel/nsproxy.c:150
    [<      none      >] copy_process.part.35+0x1bf4/0x5760 kernel/kernel/fork.c:1451
    [<     inline     >] copy_process kernel/kernel/fork.c:1274
    [<      none      >] _do_fork+0x1bc/0xcb0 kernel/kernel/fork.c:1723
    [<     inline     >] SYSC_clone kernel/kernel/fork.c:1832
    [<      none      >] SyS_clone+0x37/0x50 kernel/kernel/fork.c:1826
    [<      none      >] entry_SYSCALL_64_fastpath+0x16/0x7a kernel/arch/x86/entry/entry_64.S:185
    
    INFO: Freed in net_drop_ns+0x67/0x80 age=575 cpu=2 pid=2631
    [<      none      >] __slab_free+0x1fc/0x320 kernel/mm/slub.c:2650
    [<     inline     >] slab_free kernel/mm/slub.c:2805
    [<      none      >] kmem_cache_free+0x2a0/0x330 kernel/mm/slub.c:2814
    [<     inline     >] net_free kernel/net/core/net_namespace.c:341
    [<      none      >] net_drop_ns+0x67/0x80 kernel/net/core/net_namespace.c:348
    [<      none      >] cleanup_net+0x4e5/0x600 kernel/net/core/net_namespace.c:448
    [<      none      >] process_one_work+0x794/0x1440 kernel/kernel/workqueue.c:2036
    [<      none      >] worker_thread+0xdb/0xfc0 kernel/kernel/workqueue.c:2170
    [<      none      >] kthread+0x23f/0x2d0 kernel/drivers/block/aoe/aoecmd.c:1303
    [<      none      >] ret_from_fork+0x3f/0x70 kernel/arch/x86/entry/entry_64.S:468
    INFO: Slab 0xffffea0001938800 objects=3 used=0 fp=0xffff880064e20000
    flags=0x5fffc0000004080
    INFO: Object 0xffff880064e20000 @offset=0 fp=0xffff880064e24200
    
    CPU: 1 PID: 11581 Comm: syz-executor Tainted: G    B           4.4.0+
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.8.2-0-g33fbe13 by qemu-project.org 04/01/2014
     00000000ffffffff ffff8800662c7790 ffffffff8292049d ffff88003e36a300
     ffff880064e20000 ffff880064e20000 ffff8800662c77c0 ffffffff816f2054
     ffff88003e36a300 ffffea0001938800 ffff880064e20000 0000000000000000
    Call Trace:
     [<     inline     >] __dump_stack kernel/lib/dump_stack.c:15
     [<ffffffff8292049d>] dump_stack+0x6f/0xa2 kernel/lib/dump_stack.c:50
     [<ffffffff816f2054>] print_trailer+0xf4/0x150 kernel/mm/slub.c:654
     [<ffffffff816f875f>] object_err+0x2f/0x40 kernel/mm/slub.c:661
     [<     inline     >] print_address_description kernel/mm/kasan/report.c:138
     [<ffffffff816fb0c5>] kasan_report_error+0x215/0x530 kernel/mm/kasan/report.c:236
     [<     inline     >] kasan_report kernel/mm/kasan/report.c:259
     [<ffffffff816fb4de>] __asan_report_load8_noabort+0x3e/0x40 kernel/mm/kasan/report.c:280
     [<     inline     >] ? ppp_pernet kernel/include/linux/compiler.h:218
     [<ffffffff83ad71b2>] ? ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392
     [<     inline     >] ppp_pernet kernel/include/linux/compiler.h:218
     [<ffffffff83ad71b2>] ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392
     [<     inline     >] ? ppp_pernet kernel/drivers/net/ppp/ppp_generic.c:293
     [<ffffffff83ad6f26>] ? ppp_unregister_channel+0xe6/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392
     [<ffffffff83ae18f3>] ppp_asynctty_close+0xa3/0x130 kernel/drivers/net/ppp/ppp_async.c:241
     [<ffffffff83ae1850>] ? async_lcp_peek+0x5b0/0x5b0 kernel/drivers/net/ppp/ppp_async.c:1000
     [<ffffffff82c33239>] tty_ldisc_close.isra.1+0x99/0xe0 kernel/drivers/tty/tty_ldisc.c:478
     [<ffffffff82c332c0>] tty_ldisc_kill+0x40/0x170 kernel/drivers/tty/tty_ldisc.c:744
     [<ffffffff82c34943>] tty_ldisc_release+0x1b3/0x260 kernel/drivers/tty/tty_ldisc.c:772
     [<ffffffff82c1ef21>] tty_release+0xac1/0x13e0 kernel/drivers/tty/tty_io.c:1901
     [<ffffffff82c1e460>] ? release_tty+0x320/0x320 kernel/drivers/tty/tty_io.c:1688
     [<ffffffff8174de36>] __fput+0x236/0x780 kernel/fs/file_table.c:208
     [<ffffffff8174e405>] ____fput+0x15/0x20 kernel/fs/file_table.c:244
     [<ffffffff813595ab>] task_work_run+0x16b/0x200 kernel/kernel/task_work.c:115
     [<     inline     >] exit_task_work kernel/include/linux/task_work.h:21
     [<ffffffff81307105>] do_exit+0x8b5/0x2c60 kernel/kernel/exit.c:750
     [<ffffffff813fdd20>] ? debug_check_no_locks_freed+0x290/0x290 kernel/kernel/locking/lockdep.c:4123
     [<ffffffff81306850>] ? mm_update_next_owner+0x6f0/0x6f0 kernel/kernel/exit.c:357
     [<ffffffff813215e6>] ? __dequeue_signal+0x136/0x470 kernel/kernel/signal.c:550
     [<ffffffff8132067b>] ? recalc_sigpending_tsk+0x13b/0x180 kernel/kernel/signal.c:145
     [<ffffffff81309628>] do_group_exit+0x108/0x330 kernel/kernel/exit.c:880
     [<ffffffff8132b9d4>] get_signal+0x5e4/0x14f0 kernel/kernel/signal.c:2307
     [<     inline     >] ? kretprobe_table_lock kernel/kernel/kprobes.c:1113
     [<ffffffff8151d355>] ? kprobe_flush_task+0xb5/0x450 kernel/kernel/kprobes.c:1158
     [<ffffffff8115f7d3>] do_signal+0x83/0x1c90 kernel/arch/x86/kernel/signal.c:712
     [<ffffffff8151d2a0>] ? recycle_rp_inst+0x310/0x310 kernel/include/linux/list.h:655
     [<ffffffff8115f750>] ? setup_sigcontext+0x780/0x780 kernel/arch/x86/kernel/signal.c:165
     [<ffffffff81380864>] ? finish_task_switch+0x424/0x5f0 kernel/kernel/sched/core.c:2692
     [<     inline     >] ? finish_lock_switch kernel/kernel/sched/sched.h:1099
     [<ffffffff81380560>] ? finish_task_switch+0x120/0x5f0 kernel/kernel/sched/core.c:2678
     [<     inline     >] ? context_switch kernel/kernel/sched/core.c:2807
     [<ffffffff85d794e9>] ? __schedule+0x919/0x1bd0 kernel/kernel/sched/core.c:3283
     [<ffffffff81003901>] exit_to_usermode_loop+0xf1/0x1a0 kernel/arch/x86/entry/common.c:247
     [<     inline     >] prepare_exit_to_usermode kernel/arch/x86/entry/common.c:282
     [<ffffffff810062ef>] syscall_return_slowpath+0x19f/0x210 kernel/arch/x86/entry/common.c:344
     [<ffffffff85d88022>] int_ret_from_sys_call+0x25/0x9f kernel/arch/x86/entry/entry_64.S:281
    Memory state around the buggy address:
     ffff880064e21680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880064e21700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff880064e21780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                           ^
     ffff880064e21800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880064e21880: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Fixes: 273ec51dd7ce ("net: ppp_generic - introduce net-namespace functionality v2")
    Reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Reviewed-by: Cyrill Gorcunov <gorcunov@openvz.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 263a20bc8ce3c3cb2ad3078457dc7abd29bc9165
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Mar 22 09:19:38 2016 +0100

    ipv4: fix broadcast packets reception
    
    [ Upstream commit ad0ea1989cc4d5905941d0a9e62c63ad6d859cef ]
    
    Currently, ingress ipv4 broadcast datagrams are dropped since,
    in udp_v4_early_demux(), ip_check_mc_rcu() is invoked even on
    bcast packets.
    
    This patch addresses the issue, invoking ip_check_mc_rcu()
    only for mcast packets.
    
    Fixes: 6e5403093261 ("ipv4/udp: Verify multicast group is ours in upd_v4_early_demux()")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6acfc65a07790d15de590a2441ab55f51d36733a
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 17 17:23:36 2016 -0700

    bonding: fix bond_get_stats()
    
    [ Upstream commit fe30937b65354c7fec244caebbdaae68e28ca797 ]
    
    bond_get_stats() can be called from rtnetlink (with RTNL held)
    or from /proc/net/dev seq handler (with RCU held)
    
    The logic added in commit 5f0c5f73e5ef ("bonding: make global bonding
    stats more reliable") kind of assumed only one cpu could run there.
    
    If multiple threads are reading /proc/net/dev, stats can be really
    messed up after a while.
    
    A second problem is that some fields are 32bit, so we need to properly
    handle the wrap around problem.
    
    Given that RTNL is not always held, we need to use
    bond_for_each_slave_rcu().
    
    Fixes: 5f0c5f73e5ef ("bonding: make global bonding stats more reliable")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Andy Gospodarek <gospo@cumulusnetworks.com>
    Cc: Jay Vosburgh <j.vosburgh@gmail.com>
    Cc: Veaceslav Falico <vfalico@gmail.com>
    Reviewed-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1fdc6943a177598ea960188f8972808bfa20dd84
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 17 11:57:06 2016 -0700

    net: bcmgenet: fix dma api length mismatch
    
    [ Upstream commit eee577232203842b4dcadb7ab477a298479633ed ]
    
    When un-mapping skb->data in __bcmgenet_tx_reclaim(),
    we must use the length that was used in original dma_map_single(),
    instead of skb->len that might be bigger (includes the frags)
    
    We simply can store skb_len into tx_cb_ptr->dma_len and use it
    at unmap time.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit bb9863ec605470a48c67b91a37c25d04136acab6
Author: Manish Chopra <manish.chopra@qlogic.com>
Date:   Tue Mar 15 07:13:45 2016 -0400

    qlge: Fix receive packets drop.
    
    [ Upstream commit 2c9a266afefe137bff06bbe0fc48b4d3b3cb348c ]
    
    When running small packets [length < 256 bytes] traffic, packets were
    being dropped due to invalid data in those packets which were
    delivered by the driver upto the stack. Using pci_dma_sync_single_for_cpu
    ensures copying latest and updated data into skb from the receive buffer.
    
    Signed-off-by: Sony Chacko <sony.chacko@qlogic.com>
    Signed-off-by: Manish Chopra <manish.chopra@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 827e50724c0009dc327627df1edb478cda1ca32a
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Mon Mar 14 21:17:16 2016 +0100

    ppp: ensure file->private_data can't be overridden
    
    [ Upstream commit e8e56ffd9d2973398b60ece1f1bebb8d67b4d032 ]
    
    Locking ppp_mutex must be done before dereferencing file->private_data,
    otherwise it could be modified before ppp_unattached_ioctl() takes the
    lock. This could lead ppp_unattached_ioctl() to override ->private_data,
    thus leaking reference to the ppp_file previously pointed to.
    
    v2: lock all ppp_ioctl() instead of just checking private_data in
        ppp_unattached_ioctl(), to avoid ambiguous behaviour.
    
    Fixes: f3ff8a4d80e8 ("ppp: push BKL down into the driver")
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 58bcdf4573b78c0eecf682abe636ad7363e19635
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:18:36 2016 +0100

    ath9k: fix buffer overrun for ar9287
    
    [ Upstream commit 83d6f1f15f8cce844b0a131cbc63e444620e48b5 ]
    
    Code that was added back in 2.6.38 has an obvious overflow
    when accessing a static array, and at the time it was added
    only a code comment was put in front of it as a reminder
    to have it reviewed properly.
    
    This has not happened, but gcc-6 now points to the specific
    overflow:
    
    drivers/net/wireless/ath/ath9k/eeprom.c: In function 'ath9k_hw_get_gain_boundaries_pdadcs':
    drivers/net/wireless/ath/ath9k/eeprom.c:483:44: error: array subscript is above array bounds [-Werror=array-bounds]
         maxPwrT4[i] = data_9287[idxL].pwrPdg[i][4];
                       ~~~~~~~~~~~~~~~~~~~~~~~~~^~~
    
    It turns out that the correct array length exists in the local
    'intercepts' variable of this function, so we can just use that
    instead of hardcoding '4', so this patch changes all three
    instances to use that variable. The other two instances were
    already correct, but it's more consistent this way.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 940cd2c12ebf ("ath9k_hw: merge the ar9287 version of ath9k_hw_get_gain_boundaries_pdadcs")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7b95465ef5afa3924fc3dbb5d27a9667a18f4f81
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:18:35 2016 +0100

    farsync: fix off-by-one bug in fst_add_one
    
    [ Upstream commit e725a66c0202b5f36c2f9d59d26a65c53bbf21f7 ]
    
    gcc-6 finds an out of bounds access in the fst_add_one function
    when calculating the end of the mmio area:
    
    drivers/net/wan/farsync.c: In function 'fst_add_one':
    drivers/net/wan/farsync.c:418:53: error: index 2 denotes an offset greater than size of 'u8[2][8192] {aka unsigned char[2][8192]}' [-Werror=array-bounds]
     #define BUF_OFFSET(X)   (BFM_BASE + offsetof(struct buf_window, X))
                                                         ^
    include/linux/compiler-gcc.h:158:21: note: in definition of macro '__compiler_offsetof'
      __builtin_offsetof(a, b)
                         ^
    drivers/net/wan/farsync.c:418:37: note: in expansion of macro 'offsetof'
     #define BUF_OFFSET(X)   (BFM_BASE + offsetof(struct buf_window, X))
                                         ^~~~~~~~
    drivers/net/wan/farsync.c:2519:36: note: in expansion of macro 'BUF_OFFSET'
                                      + BUF_OFFSET ( txBuffer[i][NUM_TX_BUFFER][0]);
                                        ^~~~~~~~~~
    
    The warning is correct, but not critical because this appears
    to be a write-only variable that is set by each WAN driver but
    never accessed afterwards.
    
    I'm taking the minimal fix here, using the correct pointer by
    pointing 'mem_end' to the last byte inside of the register area
    as all other WAN drivers do, rather than the first byte outside of
    it. An alternative would be to just remove the mem_end member
    entirely.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c7c3a3219def53ece4b535f220deefa021ee09f7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 14 15:18:34 2016 +0100

    mlx4: add missing braces in verify_qp_parameters
    
    [ Upstream commit baefd7015cdb304ce6c94f9679d0486c71954766 ]
    
    The implementation of QP paravirtualization back in linux-3.7 included
    some code that looks very dubious, and gcc-6 has grown smart enough
    to warn about it:
    
    drivers/net/ethernet/mellanox/mlx4/resource_tracker.c: In function 'verify_qp_parameters':
    drivers/net/ethernet/mellanox/mlx4/resource_tracker.c:3154:5: error: statement is indented as if it were guarded by... [-Werror=misleading-indentation]
         if (optpar & MLX4_QP_OPTPAR_ALT_ADDR_PATH) {
         ^~
    drivers/net/ethernet/mellanox/mlx4/resource_tracker.c:3144:4: note: ...this 'if' clause, but it is not
        if (slave != mlx4_master_func_num(dev))
    
    >From looking at the context, I'm reasonably sure that the indentation
    is correct but that it should have contained curly braces from the
    start, as the update_gid() function in the same patch correctly does.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Fixes: 54679e148287 ("mlx4: Implement QP paravirtualization and maintain phys_pkey_cache for smp_snoop")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8ca7bf099ae0e6ff096b3910895b5285a112aeb5
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Mar 14 09:56:35 2016 -0300

    net: Fix use after free in the recvmmsg exit path
    
    [ Upstream commit 34b88a68f26a75e4fded796f1a49c40f82234b7d ]
    
    The syzkaller fuzzer hit the following use-after-free:
    
      Call Trace:
       [<ffffffff8175ea0e>] __asan_report_load8_noabort+0x3e/0x40 mm/kasan/report.c:295
       [<ffffffff851cc31a>] __sys_recvmmsg+0x6fa/0x7f0 net/socket.c:2261
       [<     inline     >] SYSC_recvmmsg net/socket.c:2281
       [<ffffffff851cc57f>] SyS_recvmmsg+0x16f/0x180 net/socket.c:2270
       [<ffffffff86332bb6>] entry_SYSCALL_64_fastpath+0x16/0x7a
      arch/x86/entry/entry_64.S:185
    
    And, as Dmitry rightly assessed, that is because we can drop the
    reference and then touch it when the underlying recvmsg calls return
    some packets and then hit an error, which will make recvmmsg to set
    sock->sk->sk_err, oops, fix it.
    
    Reported-and-Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Kostya Serebryany <kcc@google.com>
    Cc: Sasha Levin <sasha.levin@oracle.com>
    Fixes: a2e2725541fa ("net: Introduce recvmmsg socket syscall")
    http://lkml.kernel.org/r/20160122211644.GC2470@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 86de8271be91cce66aace5a3ae8afd3f28094957
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Mar 13 23:28:00 2016 -0400

    ipv4: Don't do expensive useless work during inetdev destroy.
    
    [ Upstream commit fbd40ea0180a2d328c5adc61414dc8bab9335ce2 ]
    
    When an inetdev is destroyed, every address assigned to the interface
    is removed.  And in this scenerio we do two pointless things which can
    be very expensive if the number of assigned interfaces is large:
    
    1) Address promotion.  We are deleting all addresses, so there is no
       point in doing this.
    
    2) A full nf conntrack table purge for every address.  We only need to
       do this once, as is already caught by the existing
       masq_dev_notifier so masq_inet_event() can skip this.
    
    Reported-by: Solar Designer <solar@openwall.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Tested-by: Cyrill Gorcunov <gorcunov@openvz.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 686263920d666722c42b5347123113bd85ec67cc
Author: Willem de Bruijn <willemb@google.com>
Date:   Tue Mar 8 15:18:54 2016 -0500

    macvtap: always pass ethernet header in linear
    
    [ Upstream commit 8e2ad4113ce4671686740f808ff2795395c39eef ]
    
    The stack expects link layer headers in the skb linear section.
    Macvtap can create skbs with llheader in frags in edge cases:
    when (IFF_VNET_HDR is off or vnet_hdr.hdr_len < ETH_HLEN) and
    prepad + len > PAGE_SIZE and vnet_hdr.flags has no or bad csum.
    
    Add checks to ensure linear is always at least ETH_HLEN.
    At this point, len is already ensured to be >= ETH_HLEN.
    
    For backwards compatiblity, rounds up short vnet_hdr.hdr_len.
    This differs from tap and packet, which return an error.
    
    Fixes b9fb9ee07e67 ("macvtap: add GSO/csum offload support")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5284ee1e9da2f8f78b5b800109ef4c436c58876d
Author: Rajesh Borundia <rajesh.borundia@qlogic.com>
Date:   Tue Mar 8 02:39:58 2016 -0500

    qlcnic: Fix mailbox completion handling during spurious interrupt
    
    [ Upstream commit 819bfe764dceec2f6b4551768453f374b4c60443 ]
    
    o While the driver is in the middle of a MB completion processing
    and it receives a spurious MB interrupt, it is mistaken as a good MB
    completion interrupt leading to premature completion of the next MB
    request. Fix the driver to guard against this by checking the current
    state of MB processing and ignore the spurious interrupt.
    Also added a stats counter to record this condition.
    
    Signed-off-by: Rajesh Borundia <rajesh.borundia@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fa565f5389b3886d3b28a8c12ad7ee8511098ca3
Author: Rajesh Borundia <rajesh.borundia@qlogic.com>
Date:   Tue Mar 8 02:39:57 2016 -0500

    qlcnic: Remove unnecessary usage of atomic_t
    
    [ Upstream commit 5bf93251cee1fb66141d1d2eaff86e04a9397bdf ]
    
    o atomic_t usage is incorrect as we are not implementing
    any atomicity.
    
    Signed-off-by: Rajesh Borundia <rajesh.borundia@qlogic.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 52643323baa9f6aea370fb00c9a01798ff727302
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Oct 24 00:46:03 2015 +0300

    sh_eth: fix RX buffer size alignment
    
    [ Upstream commit ab8579169b79c062935dade949287113c7c1ba73 ]
    
    Both  Renesas R-Car and RZ/A1 manuals state that RX buffer  length must be
    a multiple of 32 bytes, while the driver  only uses 16 byte granularity...
    
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c5e6283a4379eaae2d7fe596fc29ea02a14ac818
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Tue Mar 8 01:36:28 2016 +0300

    sh_eth: fix NULL pointer dereference in sh_eth_ring_format()
    
    [ Upstream commit c1b7fca65070bfadca94dd53a4e6b71cd4f69715 ]
    
    In a low memory situation, if netdev_alloc_skb() fails on a first RX ring
    loop iteration  in sh_eth_ring_format(), 'rxdesc' is still NULL.  Avoid
    kernel oops by adding the 'rxdesc' check after the loop.
    
    Reported-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 795f5dc952b62c0a4afe5d8872f6f16372243293
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Mar 9 21:58:34 2016 -0500

    packet: validate variable length ll headers
    
    [ Upstream commit 9ed988cd591500c040b2a6257bc68543e08ceeef ]
    
    Replace link layer header validation check ll_header_truncate with
    more generic dev_validate_header.
    
    Validation based on hard_header_len incorrectly drops valid packets
    in variable length protocols, such as AX25. dev_validate_header
    calls header_ops.validate for such protocols to ensure correctness
    below hard_header_len.
    
    See also http://comments.gmane.org/gmane.linux.network/401064
    
    Fixes 9c7077622dd9 ("packet: make packet_snd fail on len smaller than l2 header")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 58ba5f64ecb7c1909c060793be9e46cc28b417db
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Mar 9 21:58:33 2016 -0500

    ax25: add link layer header validation function
    
    [ Upstream commit ea47781c26510e5d97f80f9aceafe9065bd5e3aa ]
    
    As variable length protocol, AX25 fails link layer header validation
    tests based on a minimum length. header_ops.validate allows protocols
    to validate headers that are shorter than hard_header_len. Implement
    this callback for AX25.
    
    See also http://comments.gmane.org/gmane.linux.network/401064
    
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1df16498dfd0d5a129bdf2982d9a08df73e8923d
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Mar 9 21:58:32 2016 -0500

    net: validate variable length ll headers
    
    [ Upstream commit 2793a23aacbd754dbbb5cb75093deb7e4103bace ]
    
    Netdevice parameter hard_header_len is variously interpreted both as
    an upper and lower bound on link layer header length. The field is
    used as upper bound when reserving room at allocation, as lower bound
    when validating user input in PF_PACKET.
    
    Clarify the definition to be maximum header length. For validation
    of untrusted headers, add an optional validate member to header_ops.
    
    Allow bypassing of validation by passing CAP_SYS_RAWIO, for instance
    for deliberate testing of corrupt input. In this case, pad trailing
    bytes, as some device drivers expect completely initialized headers.
    
    See also http://comments.gmane.org/gmane.linux.network/401064
    
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 58c92f1359c6811478159cfe3cc3118bdb995608
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Nov 22 17:46:09 2015 +0100

    packet: Allow packets with only a header (but no payload)
    
    [ Upstream commit 880621c2605b82eb5af91a2c94223df6f5a3fb64 ]
    
    Commit 9c7077622dd91 ("packet: make packet_snd fail on len smaller
    than l2 header") added validation for the packet size in packet_snd.
    This change enforces that every packet needs a header (with at least
    hard_header_len bytes) plus a payload with at least one byte. Before
    this change the payload was optional.
    
    This fixes PPPoE connections which do not have a "Service" or
    "Host-Uniq" configured (which is violating the spec, but is still
    widely used in real-world setups). Those are currently failing with the
    following message: "pppd: packet size is too short (24 <= 24)"
    
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6def7a990b10af3532caed172e7ada9dbb596a53
Author: Bill Sommerfeld <wsommerfeld@google.com>
Date:   Fri Mar 4 14:47:21 2016 -0800

    udp6: fix UDP/IPv6 encap resubmit path
    
    [ Upstream commit 59dca1d8a6725a121dae6c452de0b2611d5865dc ]
    
    IPv4 interprets a negative return value from a protocol handler as a
    request to redispatch to a new protocol.  In contrast, IPv6 interprets a
    negative value as an error, and interprets a positive value as a request
    for redispatch.
    
    UDP for IPv6 was unaware of this difference.  Change __udp6_lib_rcv() to
    return a positive value for redispatch.  Note that the socket's
    encap_rcv hook still needs to return a negative value to request
    dispatch, and in the case of IPv6 packets, adjust IP6CB(skb)->nhoff to
    identify the byte containing the next protocol.
    
    Signed-off-by: Bill Sommerfeld <wsommerfeld@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 900aa9788446a8bc7fc40f21199bbe1dbdc1bf19
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Mar 7 11:31:10 2016 +0100

    usbnet: cleanup after bind() in probe()
    
    [ Upstream commit 1666984c8625b3db19a9abc298931d35ab7bc64b ]
    
    In case bind() works, but a later error forces bailing
    in probe() in error cases work and a timer may be scheduled.
    They must be killed. This fixes an error case related to
    the double free reported in
    http://www.spinics.net/lists/netdev/msg367669.html
    and needs to go on top of Linus' fix to cdc-ncm.
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cf852e989018e95f25e8a620f77e380812a9460f
Author: Bjørn Mork <bjorn@mork.no>
Date:   Thu Mar 3 22:20:53 2016 +0100

    cdc_ncm: toggle altsetting to force reset before setup
    
    [ Upstream commit 48906f62c96cc2cd35753e59310cb70eb08cc6a5 ]
    
    Some devices will silently fail setup unless they are reset first.
    This is necessary even if the data interface is already in
    altsetting 0, which it will be when the device is probed for the
    first time.  Briefly toggling the altsetting forces a function
    reset regardless of the initial state.
    
    This fixes a setup problem observed on a number of Huawei devices,
    appearing to operate in NTB-32 mode even if we explicitly set them
    to NTB-16 mode.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit af4f7a3ca6a0928551220a7a8bea3cd3e70b873e
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 1 16:15:16 2016 +0100

    ipv6: re-enable fragment header matching in ipv6_find_hdr
    
    [ Upstream commit 5d150a985520bbe3cb2aa1ceef24a7e32f20c15f ]
    
    When ipv6_find_hdr is used to find a fragment header
    (caller specifies target NEXTHDR_FRAGMENT) we erronously return
    -ENOENT for all fragments with nonzero offset.
    
    Before commit 9195bb8e381d, when target was specified, we did not
    enter the exthdr walk loop as nexthdr == target so this used to work.
    
    Now we do (so we can skip empty route headers). When we then stumble upon
    a frag with nonzero frag_off we must return -ENOENT ("header not found")
    only if the caller did not specifically request NEXTHDR_FRAGMENT.
    
    This allows nfables exthdr expression to match ipv6 fragments, e.g. via
    
    nft add rule ip6 filter input frag frag-off gt 0
    
    Fixes: 9195bb8e381d ("ipv6: improve ipv6_find_hdr() to skip empty routing headers")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4ded71d9c776483496b7249fafd375e7e09bb205
Author: Bjørn Mork <bjorn@mork.no>
Date:   Tue Mar 1 14:31:02 2016 +0100

    qmi_wwan: add Sierra Wireless EM74xx device ID
    
    [ Upstream commit bf13c94ccb33c3182efc92ce4989506a0f541243 ]
    
    The MC74xx and EM74xx modules use different IDs by default, according
    to the Lenovo EM7455 driver for Windows.
    
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fda740f68c700b1da33a512ec8005d86f275265a
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Mon Feb 29 15:03:33 2016 -0800

    mld, igmp: Fix reserved tailroom calculation
    
    [ Upstream commit 1837b2e2bcd23137766555a63867e649c0b637f0 ]
    
    The current reserved_tailroom calculation fails to take hlen and tlen into
    account.
    
    skb:
    [__hlen__|__data____________|__tlen___|__extra__]
    ^                                               ^
    head                                            skb_end_offset
    
    In this representation, hlen + data + tlen is the size passed to alloc_skb.
    "extra" is the extra space made available in __alloc_skb because of
    rounding up by kmalloc. We can reorder the representation like so:
    
    [__hlen__|__data____________|__extra__|__tlen___]
    ^                                               ^
    head                                            skb_end_offset
    
    The maximum space available for ip headers and payload without
    fragmentation is min(mtu, data + extra). Therefore,
    reserved_tailroom
    = data + extra + tlen - min(mtu, data + extra)
    = skb_end_offset - hlen - min(mtu, skb_end_offset - hlen - tlen)
    = skb_tailroom - min(mtu, skb_tailroom - tlen) ; after skb_reserve(hlen)
    
    Compare the second line to the current expression:
    reserved_tailroom = skb_end_offset - min(mtu, skb_end_offset)
    and we can see that hlen and tlen are not taken into account.
    
    The min() in the third line can be expanded into:
    if mtu < skb_tailroom - tlen:
            reserved_tailroom = skb_tailroom - mtu
    else:
            reserved_tailroom = tlen
    
    Depending on hlen, tlen, mtu and the number of multicast address records,
    the current code may output skbs that have less tailroom than
    dev->needed_tailroom or it may output more skbs than needed because not all
    space available is used.
    
    Fixes: 4c672e4b ("ipv6: mld: fix add_grhead skb_over_panic for devs with large MTUs")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 67eab3249eacc0861cf57f6d929e66bf78159379
Author: Xin Long <lucien.xin@gmail.com>
Date:   Sun Feb 28 10:03:51 2016 +0800

    sctp: lack the check for ports in sctp_v6_cmp_addr
    
    [ Upstream commit 40b4f0fd74e46c017814618d67ec9127ff20f157 ]
    
    As the member .cmp_addr of sctp_af_inet6, sctp_v6_cmp_addr should also check
    the port of addresses, just like sctp_v4_cmp_addr, cause it's invoked by
    sctp_cmp_addr_exact().
    
    Now sctp_v6_cmp_addr just check the port when two addresses have different
    family, and lack the port check for two ipv6 addresses. that will make
    sctp_hash_cmp() cannot work well.
    
    so fix it by adding ports comparison in sctp_v6_cmp_addr().
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8590142dc5b464c3bbf60ef0b14322850983c1c1
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Tue Feb 23 19:23:24 2016 +0000

    net: qca_spi: clear IFF_TX_SKB_SHARING
    
    [ Upstream commit a4690afeb0d2d7ba4d60dfa98a89f3bb1ce60ecd ]
    
    ether_setup sets IFF_TX_SKB_SHARING but this is not supported by
    qca_spi as it modifies the skb on xmit.
    
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: 291ab06ecf67 (net: qualcomm: new Ethernet over SPI driver for QCA7000)
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 830b50eabc046fee60aedf8dc6384a9894033f31
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Tue Feb 23 19:23:23 2016 +0000

    net: qca_spi: Don't clear IFF_BROADCAST
    
    [ Upstream commit 2b70bad23c89b121a3e4a00f8968d14ebb78887d ]
    
    Currently qcaspi_netdev_setup accidentally clears IFF_BROADCAST.
    So fix this by keeping the flags from ether_setup.
    
    Reported-by: Michael Heimpold <michael.heimpold@i2se.com>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Fixes: 291ab06ecf67 (net: qualcomm: new Ethernet over SPI driver for QCA7000)
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2131abc39f1033260ffc66a37e26bef9ddab8b16
Author: Diego Viola <diego.viola@gmail.com>
Date:   Tue Feb 23 12:04:04 2016 -0300

    net: jme: fix suspend/resume on JMC260
    
    [ Upstream commit ee50c130c82175eaa0820c96b6d3763928af2241 ]
    
    The JMC260 network card fails to suspend/resume because the call to
    jme_start_irq() was too early, moving the call to jme_start_irq() after
    the call to jme_reset_link() makes it work.
    
    Prior this change suspend/resume would fail unless /sys/power/pm_async=0
    was explicitly specified.
    
    Relevant bug report: https://bugzilla.kernel.org/show_bug.cgi?id=112351
    
    Signed-off-by: Diego Viola <diego.viola@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit ea82b38fce682e4277cb20f385b3cebbb91cd1e5
Author: Bernie Harris <bernie.harris@alliedtelesis.co.nz>
Date:   Mon Feb 22 12:58:05 2016 +1300

    tunnel: Clear IPCB(skb)->opt before dst_link_failure called
    
    [ Upstream commit 5146d1f151122e868e594c7b45115d64825aee5f ]
    
    IPCB may contain data from previous layers (in the observed case the
    qdisc layer). In the observed scenario, the data was misinterpreted as
    ip header options, which later caused the ihl to be set to an invalid
    value (<5). This resulted in an infinite loop in the mips implementation
    of ip_fast_csum.
    
    This patch clears IPCB(skb)->opt before dst_link_failure can be called for
    various types of tunnels. This change only applies to encapsulated ipv4
    packets.
    
    The code introduced in 11c21a30 which clears all of IPCB has been removed
    to be consistent with these changes, and instead the opt field is cleared
    unconditionally in ip_tunnel_xmit. The change in ip_tunnel_xmit applies to
    SIT, GRE, and IPIP tunnels.
    
    The relevant vti, l2tp, and pptp functions already contain similar code for
    clearing the IPCB.
    
    Signed-off-by: Bernie Harris <bernie.harris@alliedtelesis.co.nz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 3de6011e6ba781498f9a5ba52638c0dbcd346832
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sun Feb 21 10:12:39 2016 +0300

    tcp: convert cached rtt from usec to jiffies when feeding initial rto
    
    [ Upstream commit 9bdfb3b79e61c60e1a3e2dc05ad164528afa6b8a ]
    
    Currently it's converted into msecs, thus HZ=1000 intact.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Fixes: 740b0f1841f6 ("tcp: switch rtt estimations to usec resolution")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d393b6c7cba4d7e9fd07e0d774e875e6ff0d1dd2
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 28 10:21:20 2016 -0400

    drm/radeon: add a dpm quirk for all R7 370 parts
    
    [ Upstream commit 0e5585dc870af947fab2af96a88c2d8b4270247c ]
    
    Higher mclk values are not stable due to a bug somewhere.
    Limit them for now.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cd18a79a6445fecf42114a9124c5ff23d72201cd
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Mar 25 10:31:04 2016 -0400

    drm/radeon: add a dpm quirk for sapphire Dual-X R7 370 2G D5
    
    [ Upstream commit f971f2263deaa4a441e377b385c11aee0f3b3f9a ]
    
    bug:
    https://bugs.freedesktop.org/show_bug.cgi?id=94692
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 28a201e2e8323ffeb3ac2fc51b454a410dde3527
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Mar 30 11:40:43 2016 +0200

    drm/udl: Use unlocked gem unreferencing
    
    [ Upstream commit 72b9ff0612ad8fc969b910cd00ac16b57a1a9ba4 ]
    
    For drm_gem_object_unreference callers are required to hold
    dev->struct_mutex, which these paths don't. Enforcing this requirement
    has become a bit more strict with
    
    commit ef4c6270bf2867e2f8032e9614d1a8cfc6c71663
    Author: Daniel Vetter <daniel.vetter@ffwll.ch>
    Date:   Thu Oct 15 09:36:25 2015 +0200
    
        drm/gem: Check locking in drm_gem_object_unreference
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit da38a239f06b9bd2e8338c0f8c468d2ae04eb046
Author: Todd Previte <tprevite@gmail.com>
Date:   Sat Apr 18 00:04:18 2015 -0700

    drm: Fix for DP CTS test 4.2.2.5 - I2C DEFER handling
    
    [ Upstream commit 396aa4451e865d1e36d6d4e0686a9303c038b606 ]
    
    For test 4.2.2.5 to pass per the Link CTS Core 1.2 rev1.1 spec, the source
    device must attempt at least 7 times to read the EDID when it receives an
    I2C defer. The normal DRM code makes only 7 retries, regardless of whether
    or not the response is a native defer or an I2C defer. Test 4.2.2.5 fails
    since there are native defers interspersed with the I2C defers which
    results in less than 7 EDID read attempts.
    
    The solution is to add the numer of defers to the retry counter when an I2C
    DEFER is returned such that another read attempt will be made. This situation
    should normally only occur in compliance testing, however, as a worse case
    real-world scenario, it would result in 13 attempts ( 6 native defers, 7 I2C
    defers) for a single transaction to complete. The net result is a slightly
    slower response to an EDID read that shouldn't significantly impact overall
    performance.
    
    V2:
    - Added a check on the number of I2C Defers to limit the number
      of times that the retries variable will be decremented. This
      is to address review feedback regarding possible infinite loops
      from misbehaving sink devices.
    V3:
    - Fixed the limit value to 7 instead of 8 to get the correct retry
      count.
    - Combined the increment of the defer count into the if-statement
    V4:
    - Removed i915 tag from subject as the patch is not i915-specific
    V5:
    - Updated the for-loop to add the number of i2c defers to the retry
      counter such that the correct number of retry attempts will be
      made
    
    Signed-off-by: Todd Previte <tprevite@gmail.com>
    Cc: dri-devel@lists.freedesktop.org
    Reviewed-by: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7e69c7b26e03e6f573d8613326c94f7ddc5935b8
Author: Sebastian Siewior <bigeasy@linutronix.de>
Date:   Tue Mar 8 10:03:56 2016 +0100

    powerpc/mm: Fixup preempt underflow with huge pages
    
    [ Upstream commit 08a5bb2921e490939f78f38fd0d02858bb709942 ]
    
    hugepd_free() used __get_cpu_var() once. Nothing ensured that the code
    accessing the variable did not migrate from one CPU to another and soon
    this was noticed by Tiejun Chen in 94b09d755462 ("powerpc/hugetlb:
    Replace __get_cpu_var with get_cpu_var"). So we had it fixed.
    
    Christoph Lameter was doing his __get_cpu_var() replaces and forgot
    PowerPC. Then he noticed this and sent his fixed up batch again which
    got applied as 69111bac42f5 ("powerpc: Replace __get_cpu_var uses").
    
    The careful reader will noticed one little detail: get_cpu_var() got
    replaced with this_cpu_ptr(). So now we have a put_cpu_var() which does
    a preempt_enable() and nothing that does preempt_disable() so we
    underflow the preempt counter.
    
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 39bf5645d861cb5dc7913b183fecfc6fad033b4e
Author: Xishi Qiu <qiuxishi@huawei.com>
Date:   Fri Apr 1 14:31:20 2016 -0700

    mm: fix invalid node in alloc_migrate_target()
    
    [ Upstream commit 6f25a14a7053b69917e2ebea0d31dd444cd31fd5 ]
    
    It is incorrect to use next_node to find a target node, it will return
    MAX_NUMNODES or invalid node.  This will lead to crash in buddy system
    allocation.
    
    Fixes: c8721bbbdd36 ("mm: memory-hotplug: enable memory hotplug to handle hugepage")
    Signed-off-by: Xishi Qiu <qiuxishi@huawei.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Joonsoo Kim <js1304@gmail.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: "Laura Abbott" <lauraa@codeaurora.org>
    Cc: Hui Zhu <zhuhui@xiaomi.com>
    Cc: Wang Xiaoqiang <wangxq10@lzu.edu.cn>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b9f2aab60bfe7f85dc9ffaeb6f258bfcd4d5bc1a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 1 12:28:16 2016 +0200

    ALSA: timer: Use mod_timer() for rearming the system timer
    
    [ Upstream commit 4a07083ed613644c96c34a7dd2853dc5d7c70902 ]
    
    ALSA system timer backend stops the timer via del_timer() without sync
    and leaves del_timer_sync() at the close instead.  This is because of
    the restriction by the design of ALSA timer: namely, the stop callback
    may be called from the timer handler, and calling the sync shall lead
    to a hangup.  However, this also triggers a kernel BUG() when the
    timer is rearmed immediately after stopping without sync:
     kernel BUG at kernel/time/timer.c:966!
     Call Trace:
      <IRQ>
      [<ffffffff8239c94e>] snd_timer_s_start+0x13e/0x1a0
      [<ffffffff8239e1f4>] snd_timer_interrupt+0x504/0xec0
      [<ffffffff8122fca0>] ? debug_check_no_locks_freed+0x290/0x290
      [<ffffffff8239ec64>] snd_timer_s_function+0xb4/0x120
      [<ffffffff81296b72>] call_timer_fn+0x162/0x520
      [<ffffffff81296add>] ? call_timer_fn+0xcd/0x520
      [<ffffffff8239ebb0>] ? snd_timer_interrupt+0xec0/0xec0
      ....
    
    It's the place where add_timer() checks the pending timer.  It's clear
    that this may happen after the immediate restart without sync in our
    cases.
    
    So, the workaround here is just to use mod_timer() instead of
    add_timer().  This looks like a band-aid fix, but it's a right move,
    as snd_timer_interrupt() takes care of the continuous rearm of timer.
    
    Reported-by: Jiri Slaby <jslaby@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fb7a806fe08816a6fd2eb258db5e28218624bd07
Author: Nicolai Stange <nicstange@gmail.com>
Date:   Sun Mar 20 23:23:46 2016 +0100

    PKCS#7: pkcs7_validate_trust(): initialize the _trusted output argument
    
    [ Upstream commit e54358915d0a00399c11c2c23ae1be674cba188a ]
    
    Despite what the DocBook comment to pkcs7_validate_trust() says, the
    *_trusted argument is never set to false.
    
    pkcs7_validate_trust() only positively sets *_trusted upon encountering
    a trusted PKCS#7 SignedInfo block.
    
    This is quite unfortunate since its callers, system_verify_data() for
    example, depend on pkcs7_validate_trust() clearing *_trusted on non-trust.
    
    Indeed, UBSAN splats when attempting to load the uninitialized local
    variable 'trusted' from system_verify_data() in pkcs7_validate_trust():
    
      UBSAN: Undefined behaviour in crypto/asymmetric_keys/pkcs7_trust.c:194:14
      load of value 82 is not a valid value for type '_Bool'
      [...]
      Call Trace:
        [<ffffffff818c4d35>] dump_stack+0xbc/0x117
        [<ffffffff818c4c79>] ? _atomic_dec_and_lock+0x169/0x169
        [<ffffffff8194113b>] ubsan_epilogue+0xd/0x4e
        [<ffffffff819419fa>] __ubsan_handle_load_invalid_value+0x111/0x158
        [<ffffffff819418e9>] ? val_to_string.constprop.12+0xcf/0xcf
        [<ffffffff818334a4>] ? x509_request_asymmetric_key+0x114/0x370
        [<ffffffff814b83f0>] ? kfree+0x220/0x370
        [<ffffffff818312c2>] ? public_key_verify_signature_2+0x32/0x50
        [<ffffffff81835e04>] pkcs7_validate_trust+0x524/0x5f0
        [<ffffffff813c391a>] system_verify_data+0xca/0x170
        [<ffffffff813c3850>] ? top_trace_array+0x9b/0x9b
        [<ffffffff81510b29>] ? __vfs_read+0x279/0x3d0
        [<ffffffff8129372f>] mod_verify_sig+0x1ff/0x290
        [...]
    
    The implication is that pkcs7_validate_trust() effectively grants trust
    when it really shouldn't have.
    
    Fix this by explicitly setting *_trusted to false at the very beginning
    of pkcs7_validate_trust().
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Nicolai Stange <nicstange@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit bf15ba34c2a9afb0090294597ec4122f92616b38
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Mar 26 12:28:05 2016 -0700

    hwmon: (max1111) Return -ENODEV from max1111_read_channel if not instantiated
    
    [ Upstream commit 3c2e2266a5bd2d1cef258e6e54dca1d99946379f ]
    
    arm:pxa_defconfig can result in the following crash if the max1111 driver
    is not instantiated.
    
    Unhandled fault: page domain fault (0x01b) at 0x00000000
    pgd = c0004000
    [00000000] *pgd=00000000
    Internal error: : 1b [#1] PREEMPT ARM
    Modules linked in:
    CPU: 0 PID: 300 Comm: kworker/0:1 Not tainted 4.5.0-01301-g1701f680407c #10
    Hardware name: SHARP Akita
    Workqueue: events sharpsl_charge_toggle
    task: c390a000 ti: c391e000 task.ti: c391e000
    PC is at max1111_read_channel+0x20/0x30
    LR is at sharpsl_pm_pxa_read_max1111+0x2c/0x3c
    pc : [<c03aaab0>]    lr : [<c0024b50>]    psr: 20000013
    ...
    [<c03aaab0>] (max1111_read_channel) from [<c0024b50>]
                                            (sharpsl_pm_pxa_read_max1111+0x2c/0x3c)
    [<c0024b50>] (sharpsl_pm_pxa_read_max1111) from [<c00262e0>]
                                            (spitzpm_read_devdata+0x5c/0xc4)
    [<c00262e0>] (spitzpm_read_devdata) from [<c0024094>]
                                            (sharpsl_check_battery_temp+0x78/0x110)
    [<c0024094>] (sharpsl_check_battery_temp) from [<c0024f9c>]
                                            (sharpsl_charge_toggle+0x48/0x110)
    [<c0024f9c>] (sharpsl_charge_toggle) from [<c004429c>]
                                            (process_one_work+0x14c/0x48c)
    [<c004429c>] (process_one_work) from [<c0044618>] (worker_thread+0x3c/0x5d4)
    [<c0044618>] (worker_thread) from [<c004a238>] (kthread+0xd0/0xec)
    [<c004a238>] (kthread) from [<c000a670>] (ret_from_fork+0x14/0x24)
    
    This can occur because the SPI controller driver (SPI_PXA2XX) is built as
    module and thus not necessarily loaded. While building SPI_PXA2XX into the
    kernel would make the problem disappear, it appears prudent to ensure that
    the driver is instantiated before accessing its data structures.
    
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4c06bf7e573a4e8cd8bf42ed99524e30b3aa8cbd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 10 20:56:20 2016 +0100

    ALSA: pcm: Avoid "BUG:" string for warnings again
    
    [ Upstream commit 0ab1ace856205d10cbc1924b2d931c01ffd216a6 ]
    
    The commit [d507941beb1e: ALSA: pcm: Correct PCM BUG error message]
    made the warning prefix back to "BUG:" due to its previous wrong
    prefix.  But a kernel message containing "BUG:" seems taken as an Oops
    message wrongly by some brain-dead daemons, and it annoys users in the
    end.  Instead of teaching daemons, change the string again to a more
    reasonable one.
    
    Fixes: 507941beb1e ('ALSA: pcm: Correct PCM BUG error message')
    Cc: <stable@vger.kernel.org> # v3.19+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cab680963342190c38a0df2e16b6184f9f67189a
Author: Asai Thambi SP <asamymuthupa@micron.com>
Date:   Wed Feb 24 21:16:00 2016 -0800

    mtip32xx: Fix broken service thread handling
    
    [ Upstream commit 1b899eb4833d3394f37272d38b4b1a26eac30feb ]
    
    commit cfc05bd31384c4898bf2437a4de5557f3cf9803a upstream.
    
    Service thread does not detect the need for taskfile error hanlding. Fixed the
    flag condition to process taskfile error.
    
    Signed-off-by: Selvan Mani <smani@micron.com>
    Signed-off-by: Asai Thambi S P <asamymuthupa@micron.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 30dbed7b3dcc4b968ec050589f7acdcdabea8c7a
Author: Asai Thambi SP <asamymuthupa@micron.com>
Date:   Wed Feb 24 21:17:47 2016 -0800

    mtip32xx: Fix for rmmod crash when drive is in FTL rebuild
    
    [ Upstream commit 59cf70e236c96594d9f1e065755d8fce9df5356b ]
    
    When FTL rebuild is in progress, alloc_disk() initializes the disk
    but device node will be created by add_disk() only after successful
    completion of FTL rebuild. So, skip deletion of device node in
    removal path when FTL rebuild is in progress.
    
    Signed-off-by: Selvan Mani <smani@micron.com>
    Signed-off-by: Asai Thambi S P <asamymuthupa@micron.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c6aa8bae477bf2fdaacbc8683f5801511aa3b859
Author: Sebastian Frias <sf84@laposte.net>
Date:   Fri Dec 18 17:40:05 2015 +0100

    8250: use callbacks to access UART_DLL/UART_DLM
    
    [ Upstream commit 0b41ce991052022c030fd868e03877700220b090 ]
    
    Some UART HW has a single register combining UART_DLL/UART_DLM
    (this was probably forgotten in the change that introduced the
    callbacks, commit b32b19b8ffc05cbd3bf91c65e205f6a912ca15d9)
    
    Fixes: b32b19b8ffc0 ("[SERIAL] 8250: set divisor register correctly ...")
    
    Signed-off-by: Sebastian Frias <sf84@laposte.net>
    Reviewed-by: Peter Hurley <peter@hurleysoftware.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e4e503b2a3c6ad22375010933041f05b2ef00367
Author: Grazvydas Ignotas <notasas@gmail.com>
Date:   Sat Feb 13 22:41:51 2016 +0200

    HID: logitech: fix Dual Action gamepad support
    
    [ Upstream commit 5d74325a2201376a95520a4a38a1ce2c65761c49 ]
    
    The patch that added Logitech Dual Action gamepad support forgot to
    update the special driver list for the device. This caused the logitech
    driver not to probe unless kernel module load order was favorable.
    Update the special driver list to fix it. Thanks to Simon Wood for the
    idea.
    
    Cc: Vitaly Katraew <zawullon@gmail.com>
    Fixes: 56d0c8b7c8fb ("HID: add support for Logitech Dual Action gamepads")
    Signed-off-by: Grazvydas Ignotas <notasas@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit eae5f796a5de5ebc33e745126ce232f534fd0d0e
Author: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Date:   Mon Feb 8 22:31:08 2016 +0200

    tpm: fix the cleanup of struct tpm_chip
    
    [ Upstream commit 8e0ee3c9faed7ca68807ea45141775856c438ac0 ]
    
    If the initialization fails before tpm_chip_register(), put_device()
    will be not called, which causes release callback not to be called.
    This patch fixes the issue by adding put_device() to devres list of
    the parent device.
    
    Fixes: 313d21eeab ("tpm: device class for tpm")
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    cc: stable@vger.kernel.org
    Reviewed-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 03e046efdbd3bccaac952553065adb70fb6976aa
Author: Vladis Dronov <vdronov@redhat.com>
Date:   Thu Mar 31 12:05:43 2016 -0400

    ALSA: usb-audio: Fix double-free in error paths after snd_usb_add_audio_stream() call
    
    [ Upstream commit 836b34a935abc91e13e63053d0a83b24dfb5ea78 ]
    
    create_fixed_stream_quirk(), snd_usb_parse_audio_interface() and
    create_uaxx_quirk() functions allocate the audioformat object by themselves
    and free it upon error before returning. However, once the object is linked
    to a stream, it's freed again in snd_usb_audio_pcm_free(), thus it'll be
    double-freed, eventually resulting in a memory corruption.
    
    This patch fixes these failures in the error paths by unlinking the audioformat
    object before freeing it.
    
    Based on a patch by Takashi Iwai <tiwai@suse.de>
    
    [Note for stable backports:
     this patch requires the commit 902eb7fd1e4a ('ALSA: usb-audio: Minor
     code cleanup in create_fixed_stream_quirk()')]
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1283358
    Reported-by: Ralf Spenneberg <ralf@spenneberg.net>
    Cc: <stable@vger.kernel.org> # see the note above
    Signed-off-by: Vladis Dronov <vdronov@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 00ef5df8687ff1a51660a5d27c202417a69b5018
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 15 12:14:49 2016 +0100

    ALSA: usb-audio: Minor code cleanup in create_fixed_stream_quirk()
    
    [ Upstream commit 902eb7fd1e4af3ac69b9b30f8373f118c92b9729 ]
    
    Just a minor code cleanup: unify the error paths.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b5ba0d06632445b3810b50093cd22a2ab06900de
Author: DingXiang <dingxiang@huawei.com>
Date:   Tue Feb 2 12:29:18 2016 +0800

    dm snapshot: disallow the COW and origin devices from being identical
    
    [ Upstream commit 4df2bf466a9c9c92f40d27c4aa9120f4e8227bfc ]
    
    Otherwise loading a "snapshot" table using the same device for the
    origin and COW devices, e.g.:
    
    echo "0 20971520 snapshot 253:3 253:3 P 8" | dmsetup create snap
    
    will trigger:
    
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000098
    [ 1958.979934] IP: [<ffffffffa040efba>] dm_exception_store_set_chunk_size+0x7a/0x110 [dm_snapshot]
    [ 1958.989655] PGD 0
    [ 1958.991903] Oops: 0000 [#1] SMP
    ...
    [ 1959.059647] CPU: 9 PID: 3556 Comm: dmsetup Tainted: G          IO    4.5.0-rc5.snitm+ #150
    ...
    [ 1959.083517] task: ffff8800b9660c80 ti: ffff88032a954000 task.ti: ffff88032a954000
    [ 1959.091865] RIP: 0010:[<ffffffffa040efba>]  [<ffffffffa040efba>] dm_exception_store_set_chunk_size+0x7a/0x110 [dm_snapshot]
    [ 1959.104295] RSP: 0018:ffff88032a957b30  EFLAGS: 00010246
    [ 1959.110219] RAX: 0000000000000000 RBX: 0000000000000008 RCX: 0000000000000001
    [ 1959.118180] RDX: 0000000000000000 RSI: 0000000000000008 RDI: ffff880329334a00
    [ 1959.126141] RBP: ffff88032a957b50 R08: 0000000000000000 R09: 0000000000000001
    [ 1959.134102] R10: 000000000000000a R11: f000000000000000 R12: ffff880330884d80
    [ 1959.142061] R13: 0000000000000008 R14: ffffc90001c13088 R15: ffff880330884d80
    [ 1959.150021] FS:  00007f8926ba3840(0000) GS:ffff880333440000(0000) knlGS:0000000000000000
    [ 1959.159047] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1959.165456] CR2: 0000000000000098 CR3: 000000032f48b000 CR4: 00000000000006e0
    [ 1959.173415] Stack:
    [ 1959.175656]  ffffc90001c13040 ffff880329334a00 ffff880330884ed0 ffff88032a957bdc
    [ 1959.183946]  ffff88032a957bb8 ffffffffa040f225 ffff880329334a30 ffff880300000000
    [ 1959.192233]  ffffffffa04133e0 ffff880329334b30 0000000830884d58 00000000569c58cf
    [ 1959.200521] Call Trace:
    [ 1959.203248]  [<ffffffffa040f225>] dm_exception_store_create+0x1d5/0x240 [dm_snapshot]
    [ 1959.211986]  [<ffffffffa040d310>] snapshot_ctr+0x140/0x630 [dm_snapshot]
    [ 1959.219469]  [<ffffffffa0005c44>] ? dm_split_args+0x64/0x150 [dm_mod]
    [ 1959.226656]  [<ffffffffa0005ea7>] dm_table_add_target+0x177/0x440 [dm_mod]
    [ 1959.234328]  [<ffffffffa0009203>] table_load+0x143/0x370 [dm_mod]
    [ 1959.241129]  [<ffffffffa00090c0>] ? retrieve_status+0x1b0/0x1b0 [dm_mod]
    [ 1959.248607]  [<ffffffffa0009e35>] ctl_ioctl+0x255/0x4d0 [dm_mod]
    [ 1959.255307]  [<ffffffff813304e2>] ? memzero_explicit+0x12/0x20
    [ 1959.261816]  [<ffffffffa000a0c3>] dm_ctl_ioctl+0x13/0x20 [dm_mod]
    [ 1959.268615]  [<ffffffff81215eb6>] do_vfs_ioctl+0xa6/0x5c0
    [ 1959.274637]  [<ffffffff81120d2f>] ? __audit_syscall_entry+0xaf/0x100
    [ 1959.281726]  [<ffffffff81003176>] ? do_audit_syscall_entry+0x66/0x70
    [ 1959.288814]  [<ffffffff81216449>] SyS_ioctl+0x79/0x90
    [ 1959.294450]  [<ffffffff8167e4ae>] entry_SYSCALL_64_fastpath+0x12/0x71
    ...
    [ 1959.323277] RIP  [<ffffffffa040efba>] dm_exception_store_set_chunk_size+0x7a/0x110 [dm_snapshot]
    [ 1959.333090]  RSP <ffff88032a957b30>
    [ 1959.336978] CR2: 0000000000000098
    [ 1959.344121] ---[ end trace b049991ccad1169e ]---
    
    Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1195899
    Cc: stable@vger.kernel.org
    Signed-off-by: Ding Xiang <dingxiang@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 8f82841376c2dc033b6b3f976cfb463678c8b80f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Nov 18 15:25:23 2015 +0100

    ASoC: samsung: pass DMA channels as pointers
    
    [ Upstream commit b9a1a743818ea3265abf98f9431623afa8c50c86 ]
    
    ARM64 allmodconfig produces a bunch of warnings when building the
    samsung ASoC code:
    
    sound/soc/samsung/dmaengine.c: In function 'samsung_asoc_init_dma_data':
    sound/soc/samsung/dmaengine.c:53:32: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
       playback_data->filter_data = (void *)playback->channel;
    sound/soc/samsung/dmaengine.c:60:31: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
       capture_data->filter_data = (void *)capture->channel;
    
    We could easily shut up the warning by adding an intermediate cast,
    but there is a bigger underlying problem: The use of IORESOURCE_DMA
    to pass data from platform code to device drivers is dubious to start
    with, as what we really want is a pointer that can be passed into
    a filter function.
    
    Note that on s3c64xx, the pl08x DMA data is already a pointer, but
    gets cast to resource_size_t so we can pass it as a resource, and it
    then gets converted back to a pointer. In contrast, the data we pass
    for s3c24xx is an index into a device specific table, and we artificially
    convert that into a pointer for the filter function.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 85aa23b07fabe1d50a26968d07b0e040feb4007c
Author: Krzysztof Hałasa <khalasa@piap.pl>
Date:   Tue Mar 1 07:07:18 2016 +0100

    PCI: Allow a NULL "parent" pointer in pci_bus_assign_domain_nr()
    
    [ Upstream commit 54c6e2dd00c313d0add58e5befe62fe6f286d03b ]
    
    pci_create_root_bus() passes a "parent" pointer to
    pci_bus_assign_domain_nr().  When CONFIG_PCI_DOMAINS_GENERIC is defined,
    pci_bus_assign_domain_nr() dereferences that pointer.  Many callers of
    pci_create_root_bus() supply a NULL "parent" pointer, which leads to a NULL
    pointer dereference error.
    
    7c674700098c ("PCI: Move domain assignment from arm64 to generic code")
    moved the "parent" dereference from arm64 to generic code.  Only arm64 used
    that code (because only arm64 defined CONFIG_PCI_DOMAINS_GENERIC), and it
    always supplied a valid "parent" pointer.  Other arches supplied NULL
    "parent" pointers but didn't defined CONFIG_PCI_DOMAINS_GENERIC, so they
    used a no-op version of pci_bus_assign_domain_nr().
    
    8c7d14746abc ("ARM/PCI: Move to generic PCI domains") defined
    CONFIG_PCI_DOMAINS_GENERIC on ARM, and many ARM platforms use
    pci_common_init(), which supplies a NULL "parent" pointer.
    These platforms (cns3xxx, dove, footbridge, iop13xx, etc.) crash
    with a NULL pointer dereference like this while probing PCI:
    
      Unable to handle kernel NULL pointer dereference at virtual address 000000a4
      PC is at pci_bus_assign_domain_nr+0x10/0x84
      LR is at pci_create_root_bus+0x48/0x2e4
      Kernel panic - not syncing: Attempted to kill init!
    
    [bhelgaas: changelog, add "Reported:" and "Fixes:" tags]
    Reported: http://forum.doozan.com/read.php?2,17868,22070,quote=1
    Fixes: 8c7d14746abc ("ARM/PCI: Move to generic PCI domains")
    Fixes: 7c674700098c ("PCI: Move domain assignment from arm64 to generic code")
    Signed-off-by: Krzysztof Hałasa <khalasa@piap.pl>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    CC: stable@vger.kernel.org      # v4.0+
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a1f678e55da552523dd45a531580a7e533b3bd8f
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri Jul 1 14:56:07 2016 +0200

    locks: use file_inode()
    
    [ Upstream commit 6343a2120862f7023006c8091ad95c1f16a32077 ]
    
    (Another one for the f_path debacle.)
    
    ltp fcntl33 testcase caused an Oops in selinux_file_send_sigiotask.
    
    The reason is that generic_add_lease() used filp->f_path.dentry->inode
    while all the others use file_inode().  This makes a difference for files
    opened on overlayfs since the former will point to the overlay inode the
    latter to the underlying inode.
    
    So generic_add_lease() added the lease to the overlay inode and
    generic_delete_lease() removed it from the underlying inode.  When the file
    was released the lease remained on the overlay inode's lock list, resulting
    in use after free.
    
    Reported-by: Eryu Guan <eguan@redhat.com>
    Fixes: 4bacc9c9234c ("overlayfs: Make f_path always point to the overlay and f_inode to the underlay")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2119a62b133e4b4ade51cbc446f31b728662eed8
Author: Andrey Ulanov <andreyu@google.com>
Date:   Fri Apr 15 14:24:41 2016 -0700

    namespace: update event counter when umounting a deleted dentry
    
    [ Upstream commit e06b933e6ded42384164d28a2060b7f89243b895 ]
    
    - m_start() in fs/namespace.c expects that ns->event is incremented each
      time a mount added or removed from ns->list.
    - umount_tree() removes items from the list but does not increment event
      counter, expecting that it's done before the function is called.
    - There are some codepaths that call umount_tree() without updating
      "event" counter. e.g. from __detach_mounts().
    - When this happens m_start may reuse a cached mount structure that no
      longer belongs to ns->list (i.e. use after free which usually leads
      to infinite loop).
    
    This change fixes the above problem by incrementing global event counter
    before invoking umount_tree().
    
    Change-Id: I622c8e84dcb9fb63542372c5dbf0178ee86bb589
    Cc: stable@vger.kernel.org
    Signed-off-by: Andrey Ulanov <andreyu@google.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4a883b820416683360258a08becad92d99f7fab1
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Sat Jun 25 19:19:28 2016 -0400

    NFS: Fix another OPEN_DOWNGRADE bug
    
    [ Upstream commit e547f2628327fec6afd2e03b46f113f614cca05b ]
    
    Olga Kornievskaia reports that the following test fails to trigger
    an OPEN_DOWNGRADE on the wire, and only triggers the final CLOSE.
    
            fd0 = open(foo, RDRW)   -- should be open on the wire for "both"
            fd1 = open(foo, RDONLY)  -- should be open on the wire for "read"
            close(fd0) -- should trigger an open_downgrade
            read(fd1)
            close(fd1)
    
    The issue is that we're missing a check for whether or not the current
    state transitioned from an O_RDWR state as opposed to having transitioned
    from a combination of O_RDONLY and O_WRONLY.
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Fixes: cd9288ffaea4 ("NFSv4: Fix another bug in the close/open_downgrade code")
    Cc: stable@vger.kernel.org # 2.6.33+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 2bbd6a57310cd7dd8fd4c484e629bb5389b78d9b
Author: Michael Holzheu <holzheu@linux.vnet.ibm.com>
Date:   Mon Jun 13 17:03:48 2016 +0200

    Revert "s390/kdump: Clear subchannel ID to signal non-CCW/SCSI IPL"
    
    [ Upstream commit 5419447e2142d6ed68c9f5c1a28630b3a290a845 ]
    
    This reverts commit 852ffd0f4e23248b47531058e531066a988434b5.
    
    There are use cases where an intermediate boot kernel (1) uses kexec
    to boot the final production kernel (2). For this scenario we should
    provide the original boot information to the production kernel (2).
    Therefore clearing the boot information during kexec() should not
    be done.
    
    Cc: stable@vger.kernel.org # v3.17+
    Reported-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Signed-off-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 49cacd2b68d3dfc88bbf5cf16c885138ba947561
Author: Alexey Brodkin <Alexey.Brodkin@synopsys.com>
Date:   Thu Jun 23 11:00:39 2016 +0300

    arc: unwind: warn only once if DW2_UNWIND is disabled
    
    [ Upstream commit 9bd54517ee86cb164c734f72ea95aeba4804f10b ]
    
    If CONFIG_ARC_DW2_UNWIND is disabled every time arc_unwind_core()
    gets called following message gets printed in debug console:
    ----------------->8---------------
    CONFIG_ARC_DW2_UNWIND needs to be enabled
    ----------------->8---------------
    
    That message makes sense if user indeed wants to see a backtrace or
    get nice function call-graphs in perf but what if user disabled
    unwinder for the purpose? Why pollute his debug console?
    
    So instead we'll warn user about possibly missing feature once and
    let him decide if that was what he or she really wanted.
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7678c949a43aefb98ac7e64d6b8b2c32ad442fc3
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue Jun 28 09:42:25 2016 +0530

    ARC: unwind: ensure that .debug_frame is generated (vs. .eh_frame)
    
    [ Upstream commit f52e126cc7476196f44f3c313b7d9f0699a881fc ]
    
    With recent binutils update to support dwarf CFI pseudo-ops in gas, we
    now get .eh_frame vs. .debug_frame. Although the call frame info is
    exactly the same in both, the CIE differs, which the current kernel
    unwinder can't cope with.
    
    This broke both the kernel unwinder as well as loadable modules (latter
    because of a new unhandled relo R_ARC_32_PCREL from .rela.eh_frame in
    the module loader)
    
    The ideal solution would be to switch unwinder to .eh_frame.
    For now however we can make do by just ensureing .debug_frame is
    generated by removing -fasynchronous-unwind-tables
    
     .eh_frame    generated with -gdwarf-2 -fasynchronous-unwind-tables
     .debug_frame generated with -gdwarf-2
    
    Fixes STAR 9001058196
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7421921581dc77ffb4017ce747f95931f74a624b
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Jun 27 10:23:10 2016 -0400

    USB: don't free bandwidth_mutex too early
    
    [ Upstream commit ab2a4bf83902c170d29ba130a8abb5f9d90559e1 ]
    
    The USB core contains a bug that can show up when a USB-3 host
    controller is removed.  If the primary (USB-2) hcd structure is
    released before the shared (USB-3) hcd, the core will try to do a
    double-free of the common bandwidth_mutex.
    
    The problem was described in graphical form by Chung-Geol Kim, who
    first reported it:
    
    =================================================
         At *remove USB(3.0) Storage
         sequence <1> --> <5> ((Problem Case))
    =================================================
                                      VOLD
    ------------------------------------|------------
                                     (uevent)
                                ________|_________
                               |<1>               |
                               |dwc3_otg_sm_work  |
                               |usb_put_hcd       |
                               |peer_hcd(kref=2)|
                               |__________________|
                                ________|_________
                               |<2>               |
                               |New USB BUS #2    |
                               |                  |
                               |peer_hcd(kref=1)  |
                               |                  |
                             --(Link)-bandXX_mutex|
                             | |__________________|
                             |
        ___________________  |
       |<3>                | |
       |dwc3_otg_sm_work   | |
       |usb_put_hcd        | |
       |primary_hcd(kref=1)| |
       |___________________| |
        _________|_________  |
       |<4>                | |
       |New USB BUS #1     | |
       |hcd_release        | |
       |primary_hcd(kref=0)| |
       |                   | |
       |bandXX_mutex(free) |<-
       |___________________|
                                   (( VOLD ))
                                ______|___________
                               |<5>               |
                               |      SCSI        |
                               |usb_put_hcd       |
                               |peer_hcd(kref=0)  |
                               |*hcd_release      |
                               |bandXX_mutex(free*)|<- double free
                               |__________________|
    
    =================================================
    
    This happens because hcd_release() frees the bandwidth_mutex whenever
    it sees a primary hcd being released (which is not a very good idea
    in any case), but in the course of releasing the primary hcd, it
    changes the pointers in the shared hcd in such a way that the shared
    hcd will appear to be primary when it gets released.
    
    This patch fixes the problem by changing hcd_release() so that it
    deallocates the bandwidth_mutex only when the _last_ hcd structure
    referencing it is released.  The patch also removes an unnecessary
    test, so that when an hcd is released, both the shared_hcd and
    primary_hcd pointers in the hcd's peer will be cleared.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Chung-Geol Kim <chunggeol.kim@samsung.com>
    Tested-by: Chung-Geol Kim <chunggeol.kim@samsung.com>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 3f3d3526c73a85950a3d963347b0de675fb3bea5
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Mon Jun 20 13:14:36 2016 -0400

    make nfs_atomic_open() call d_drop() on all ->open_context() errors.
    
    [ Upstream commit d20cb71dbf3487f24549ede1a8e2d67579b4632e ]
    
    In "NFSv4: Move dentry instantiation into the NFSv4-specific atomic open code"
    unconditional d_drop() after the ->open_context() had been removed.  It had
    been correct for success cases (there ->open_context() itself had been doing
    dcache manipulations), but not for error ones.  Only one of those (ENOENT)
    got a compensatory d_drop() added in that commit, but in fact it should've
    been done for all errors.  As it is, the case of O_CREAT non-exclusive open
    on a hashed negative dentry racing with e.g. symlink creation from another
    client ended up with ->open_context() getting an error and proceeding to
    call nfs_lookup().  On a hashed dentry, which would've instantly triggered
    BUG_ON() in d_materialise_unique() (or, these days, its equivalent in
    d_splice_alias()).
    
    Cc: stable@vger.kernel.org # v3.10+
    Tested-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d4b08964d00a0b99e999a2bb1ce417e54b5c607f
Author: James Morse <james.morse@arm.com>
Date:   Wed Jun 8 17:24:45 2016 +0100

    KVM: arm/arm64: Stop leaking vcpu pid references
    
    [ Upstream commit 591d215afcc2f94e8e2c69a63c924c044677eb31 ]
    
    kvm provides kvm_vcpu_uninit(), which amongst other things, releases the
    last reference to the struct pid of the task that was last running the vcpu.
    
    On arm64 built with CONFIG_DEBUG_KMEMLEAK, starting a guest with kvmtool,
    then killing it with SIGKILL results (after some considerable time) in:
    > cat /sys/kernel/debug/kmemleak
    > unreferenced object 0xffff80007d5ea080 (size 128):
    >  comm "lkvm", pid 2025, jiffies 4294942645 (age 1107.776s)
    >  hex dump (first 32 bytes):
    >    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    >    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    >  backtrace:
    >    [<ffff8000001b30ec>] create_object+0xfc/0x278
    >    [<ffff80000071da34>] kmemleak_alloc+0x34/0x70
    >    [<ffff80000019fa2c>] kmem_cache_alloc+0x16c/0x1d8
    >    [<ffff8000000d0474>] alloc_pid+0x34/0x4d0
    >    [<ffff8000000b5674>] copy_process.isra.6+0x79c/0x1338
    >    [<ffff8000000b633c>] _do_fork+0x74/0x320
    >    [<ffff8000000b66b0>] SyS_clone+0x18/0x20
    >    [<ffff800000085cb0>] el0_svc_naked+0x24/0x28
    >    [<ffffffffffffffff>] 0xffffffffffffffff
    
    On x86 kvm_vcpu_uninit() is called on the path from kvm_arch_destroy_vm(),
    on arm no equivalent call is made. Add the call to kvm_arch_vcpu_free().
    
    Signed-off-by: James Morse <james.morse@arm.com>
    Fixes: 749cf76c5a36 ("KVM: ARM: Initial skeleton to compile KVM support")
    Cc: <stable@vger.kernel.org> # 3.10+
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 848be4770beb10fcc6f971c58e80aa2c2b6dad66
Author: Cyril Bur <cyrilbur@gmail.com>
Date:   Fri Jun 17 14:58:34 2016 +1000

    powerpc/tm: Always reclaim in start_thread() for exec() class syscalls
    
    [ Upstream commit 8e96a87c5431c256feb65bcfc5aec92d9f7839b6 ]
    
    Userspace can quite legitimately perform an exec() syscall with a
    suspended transaction. exec() does not return to the old process, rather
    it load a new one and starts that, the expectation therefore is that the
    new process starts not in a transaction. Currently exec() is not treated
    any differently to any other syscall which creates problems.
    
    Firstly it could allow a new process to start with a suspended
    transaction for a binary that no longer exists. This means that the
    checkpointed state won't be valid and if the suspended transaction were
    ever to be resumed and subsequently aborted (a possibility which is
    exceedingly likely as exec()ing will likely doom the transaction) the
    new process will jump to invalid state.
    
    Secondly the incorrect attempt to keep the transactional state while
    still zeroing state for the new process creates at least two TM Bad
    Things. The first triggers on the rfid to return to userspace as
    start_thread() has given the new process a 'clean' MSR but the suspend
    will still be set in the hardware MSR. The second TM Bad Thing triggers
    in __switch_to() as the processor is still transactionally suspended but
    __switch_to() wants to zero the TM sprs for the new process.
    
    This is an example of the outcome of calling exec() with a suspended
    transaction. Note the first 700 is likely the first TM bad thing
    decsribed earlier only the kernel can't report it as we've loaded
    userspace registers. c000000000009980 is the rfid in
    fast_exception_return()
    
      Bad kernel stack pointer 3fffcfa1a370 at c000000000009980
      Oops: Bad kernel stack pointer, sig: 6 [#1]
      CPU: 0 PID: 2006 Comm: tm-execed Not tainted
      NIP: c000000000009980 LR: 0000000000000000 CTR: 0000000000000000
      REGS: c00000003ffefd40 TRAP: 0700   Not tainted
      MSR: 8000000300201031 <SF,ME,IR,DR,LE,TM[SE]>  CR: 00000000  XER: 00000000
      CFAR: c0000000000098b4 SOFTE: 0
      PACATMSCRATCH: b00000010000d033
      GPR00: 0000000000000000 00003fffcfa1a370 0000000000000000 0000000000000000
      GPR04: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR08: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR12: 00003fff966611c0 0000000000000000 0000000000000000 0000000000000000
      NIP [c000000000009980] fast_exception_return+0xb0/0xb8
      LR [0000000000000000]           (null)
      Call Trace:
      Instruction dump:
      f84d0278 e9a100d8 7c7b03a6 e84101a0 7c4ff120 e8410170 7c5a03a6 e8010070
      e8410080 e8610088 e8810090 e8210078 <4c000024> 48000000 e8610178 88ed023b
    
      Kernel BUG at c000000000043e80 [verbose debug info unavailable]
      Unexpected TM Bad Thing exception at c000000000043e80 (msr 0x201033)
      Oops: Unrecoverable exception, sig: 6 [#2]
      CPU: 0 PID: 2006 Comm: tm-execed Tainted: G      D
      task: c0000000fbea6d80 ti: c00000003ffec000 task.ti: c0000000fb7ec000
      NIP: c000000000043e80 LR: c000000000015a24 CTR: 0000000000000000
      REGS: c00000003ffef7e0 TRAP: 0700   Tainted: G      D
      MSR: 8000000300201033 <SF,ME,IR,DR,RI,LE,TM[SE]>  CR: 28002828  XER: 00000000
      CFAR: c000000000015a20 SOFTE: 0
      PACATMSCRATCH: b00000010000d033
      GPR00: 0000000000000000 c00000003ffefa60 c000000000db5500 c0000000fbead000
      GPR04: 8000000300001033 2222222222222222 2222222222222222 00000000ff160000
      GPR08: 0000000000000000 800000010000d033 c0000000fb7e3ea0 c00000000fe00004
      GPR12: 0000000000002200 c00000000fe00000 0000000000000000 0000000000000000
      GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR20: 0000000000000000 0000000000000000 c0000000fbea7410 00000000ff160000
      GPR24: c0000000ffe1f600 c0000000fbea8700 c0000000fbea8700 c0000000fbead000
      GPR28: c000000000e20198 c0000000fbea6d80 c0000000fbeab680 c0000000fbea6d80
      NIP [c000000000043e80] tm_restore_sprs+0xc/0x1c
      LR [c000000000015a24] __switch_to+0x1f4/0x420
      Call Trace:
      Instruction dump:
      7c800164 4e800020 7c0022a6 f80304a8 7c0222a6 f80304b0 7c0122a6 f80304b8
      4e800020 e80304a8 7c0023a6 e80304b0 <7c0223a6> e80304b8 7c0123a6 4e800020
    
    This fixes CVE-2016-5828.
    
    Fixes: bc2a9408fa65 ("powerpc: Hook in new transactional memory code")
    Cc: stable@vger.kernel.org # v3.9+
    Signed-off-by: Cyril Bur <cyrilbur@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit cc6fd729b8a04fbb4b88e45209c1241dd89a3fbe
Author: Torsten Hilbrich <torsten.hilbrich@secunet.com>
Date:   Fri Jun 24 14:50:18 2016 -0700

    fs/nilfs2: fix potential underflow in call to crc32_le
    
    [ Upstream commit 63d2f95d63396059200c391ca87161897b99e74a ]
    
    The value `bytes' comes from the filesystem which is about to be
    mounted.  We cannot trust that the value is always in the range we
    expect it to be.
    
    Check its value before using it to calculate the length for the crc32_le
    call.  It value must be larger (or equal) sumoff + 4.
    
    This fixes a kernel bug when accidentially mounting an image file which
    had the nilfs2 magic value 0x3434 at the right offset 0x406 by chance.
    The bytes 0x01 0x00 were stored at 0x408 and were interpreted as a
    s_bytes value of 1.  This caused an underflow when substracting sumoff +
    4 (20) in the call to crc32_le.
    
      BUG: unable to handle kernel paging request at ffff88021e600000
      IP:  crc32_le+0x36/0x100
      ...
      Call Trace:
        nilfs_valid_sb.part.5+0x52/0x60 [nilfs2]
        nilfs_load_super_block+0x142/0x300 [nilfs2]
        init_nilfs+0x60/0x390 [nilfs2]
        nilfs_mount+0x302/0x520 [nilfs2]
        mount_fs+0x38/0x160
        vfs_kern_mount+0x67/0x110
        do_mount+0x269/0xe00
        SyS_mount+0x9f/0x100
        entry_SYSCALL_64_fastpath+0x16/0x71
    
    Link: http://lkml.kernel.org/r/1466778587-5184-2-git-send-email-konishi.ryusuke@lab.ntt.co.jp
    Signed-off-by: Torsten Hilbrich <torsten.hilbrich@secunet.com>
    Tested-by: Torsten Hilbrich <torsten.hilbrich@secunet.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 284f69fb49e2e385203f52441b324b9a68461d6b
Author: David Rientjes <rientjes@google.com>
Date:   Fri Jun 24 14:50:10 2016 -0700

    mm, compaction: abort free scanner if split fails
    
    [ Upstream commit a4f04f2c6955aff5e2c08dcb40aca247ff4d7370 ]
    
    If the memory compaction free scanner cannot successfully split a free
    page (only possible due to per-zone low watermark), terminate the free
    scanner rather than continuing to scan memory needlessly.  If the
    watermark is insufficient for a free page of order <= cc->order, then
    terminate the scanner since all future splits will also likely fail.
    
    This prevents the compaction freeing scanner from scanning all memory on
    very large zones (very noticeable for zones > 128GB, for instance) when
    all splits will likely fail while holding zone->lock.
    
    compaction_alloc() iterating a 128GB zone has been benchmarked to take
    over 400ms on some systems whereas any free page isolated and ready to
    be split ends up failing in split_free_page() because of the low
    watermark check and thus the iteration continues.
    
    The next time compaction occurs, the freeing scanner will likely start
    at the end of the zone again since no success was made previously and we
    get the same lengthy iteration until the zone is brought above the low
    watermark.  All thp page faults can take >400ms in such a state without
    this fix.
    
    Link: http://lkml.kernel.org/r/alpine.DEB.2.10.1606211820350.97086@chino.kir.corp.google.com
    Signed-off-by: David Rientjes <rientjes@google.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 683854270f84daa09baffe2b21d64ec88c614fa9
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Tue Sep 8 15:02:49 2015 -0700

    mm, compaction: skip compound pages by order in free scanner
    
    [ Upstream commit 9fcd6d2e052eef525e94a9ae58dbe7ed4df4f5a7 ]
    
    The compaction free scanner is looking for PageBuddy() pages and
    skipping all others.  For large compound pages such as THP or hugetlbfs,
    we can save a lot of iterations if we skip them at once using their
    compound_order().  This is generally unsafe and we can read a bogus
    value of order due to a race, but if we are careful, the only danger is
    skipping too much.
    
    When tested with stress-highalloc from mmtests on 4GB system with 1GB
    hugetlbfs pages, the vmstat compact_free_scanned count decreased by at
    least 15%.
    
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Mel Gorman <mgorman@suse.de>
    Acked-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Acked-by: Michal Nazarewicz <mina86@mina86.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c5ad33184354260be6d05de57e46a5498692f6d6
Author: Lukasz Odzioba <lukasz.odzioba@intel.com>
Date:   Fri Jun 24 14:50:01 2016 -0700

    mm/swap.c: flush lru pvecs on compound page arrival
    
    [ Upstream commit 8f182270dfec432e93fae14f9208a6b9af01009f ]
    
    Currently we can have compound pages held on per cpu pagevecs, which
    leads to a lot of memory unavailable for reclaim when needed.  In the
    systems with hundreads of processors it can be GBs of memory.
    
    On of the way of reproducing the problem is to not call munmap
    explicitly on all mapped regions (i.e.  after receiving SIGTERM).  After
    that some pages (with THP enabled also huge pages) may end up on
    lru_add_pvec, example below.
    
      void main() {
      #pragma omp parallel
      {
            size_t size = 55 * 1000 * 1000; // smaller than  MEM/CPUS
            void *p = mmap(NULL, size, PROT_READ | PROT_WRITE,
                    MAP_PRIVATE | MAP_ANONYMOUS , -1, 0);
            if (p != MAP_FAILED)
                    memset(p, 0, size);
            //munmap(p, size); // uncomment to make the problem go away
      }
      }
    
    When we run it with THP enabled it will leave significant amount of
    memory on lru_add_pvec.  This memory will be not reclaimed if we hit
    OOM, so when we run above program in a loop:
    
            for i in `seq 100`; do ./a.out; done
    
    many processes (95% in my case) will be killed by OOM.
    
    The primary point of the LRU add cache is to save the zone lru_lock
    contention with a hope that more pages will belong to the same zone and
    so their addition can be batched.  The huge page is already a form of
    batched addition (it will add 512 worth of memory in one go) so skipping
    the batching seems like a safer option when compared to a potential
    excess in the caching which can be quite large and much harder to fix
    because lru_add_drain_all is way to expensive and it is not really clear
    what would be a good moment to call it.
    
    Similarly we can reproduce the problem on lru_deactivate_pvec by adding:
    madvise(p, size, MADV_FREE); after memset.
    
    This patch flushes lru pvecs on compound page arrival making the problem
    less severe - after applying it kill rate of above example drops to 0%,
    due to reducing maximum amount of memory held on pvec from 28MB (with
    THP) to 56kB per CPU.
    
    Suggested-by: Michal Hocko <mhocko@suse.com>
    Link: http://lkml.kernel.org/r/1466180198-18854-1-git-send-email-lukasz.odzioba@intel.com
    Signed-off-by: Lukasz Odzioba <lukasz.odzioba@intel.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Vladimir Davydov <vdavydov@parallels.com>
    Cc: Ming Li <mingli199x@qq.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c5bcec6cbcbf520f088dc7939934bbf10c20c5a5
Author: Anthony Romano <anthony.romano@coreos.com>
Date:   Fri Jun 24 14:48:43 2016 -0700

    tmpfs: don't undo fallocate past its last page
    
    [ Upstream commit b9b4bb26af017dbe930cd4df7f9b2fc3a0497bfe ]
    
    When fallocate is interrupted it will undo a range that extends one byte
    past its range of allocated pages.  This can corrupt an in-use page by
    zeroing out its first byte.  Instead, undo using the inclusive byte
    range.
    
    Fixes: 1635f6a74152f1d ("tmpfs: undo fallocation on failure")
    Link: http://lkml.kernel.org/r/1462713387-16724-1-git-send-email-anthony.romano@coreos.com
    Signed-off-by: Anthony Romano <anthony.romano@coreos.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Brandon Philips <brandon@ifup.co>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7f3724b8951735ef1d5ae4f2846b8af98a665d73
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu Jun 23 14:54:37 2016 -0400

    USB: EHCI: declare hostpc register as zero-length array
    
    [ Upstream commit 7e8b3dfef16375dbfeb1f36a83eb9f27117c51fd ]
    
    The HOSTPC extension registers found in some EHCI implementations form
    a variable-length array, with one element for each port.  Therefore
    the hostpc field in struct ehci_regs should be declared as a
    zero-length array, not a single-element array.
    
    This fixes a problem reported by UBSAN.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    Tested-by: Wilfried Klaebe <linux-kernel@lebenslange-mailadresse.de>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 655d8d195ad10e5bf3252eb7822136303d7c65fe
Author: Steve French <smfrench@gmail.com>
Date:   Wed Jun 22 21:07:32 2016 -0500

    File names with trailing period or space need special case conversion
    
    [ Upstream commit 45e8a2583d97ca758a55c608f78c4cef562644d1 ]
    
    POSIX allows files with trailing spaces or a trailing period but
    SMB3 does not, so convert these using the normal Services For Mac
    mapping as we do for other reserved characters such as
            : < > | ? *
    This is similar to what Macs do for the same problem over SMB3.
    
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Acked-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e20c888e2b3576e5f498c167729d274ef60b86f8
Author: Steve French <smfrench@gmail.com>
Date:   Wed Jun 22 20:12:05 2016 -0500

    Fix reconnect to not defer smb3 session reconnect long after socket reconnect
    
    [ Upstream commit 4fcd1813e6404dd4420c7d12fb483f9320f0bf93 ]
    
    Azure server blocks clients that open a socket and don't do anything on it.
    In our reconnect scenarios, we can reconnect the tcp session and
    detect the socket is available but we defer the negprot and SMB3 session
    setup and tree connect reconnection until the next i/o is requested, but
    this looks suspicous to some servers who expect SMB3 negprog and session
    setup soon after a socket is created.
    
    In the echo thread, reconnect SMB3 sessions and tree connections
    that are disconnected.  A later patch will replay persistent (and
    resilient) handle opens.
    
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <steve.french@primarydata.com>
    Acked-by: Pavel Shilovsky <pshilovsky@samba.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit eba391c749fe8a47aea9de2e78fadc02434b5417
Author: Weston Andros Adamson <dros@monkey.org>
Date:   Fri Jun 17 16:48:24 2016 -0400

    pnfs_nfs: fix _cancel_empty_pagelist
    
    [ Upstream commit 5e3a98883e7ebdd1440f829a9e9dd5c3d2c5903b ]
    
    pnfs_generic_commit_cancel_empty_pagelist calls nfs_commitdata_release,
    but that is wrong: nfs_commitdata_release puts the open context, something
    that isn't valid until nfs_init_commit is called, which is never the case
    when pnfs_generic_commit_cancel_empty_pagelist is called.
    
    This was introduced in "nfs: avoid race that crashes nfs_init_commit".
    
    Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 691c507ec01fa0cab2a9cfb5bd4398ddd5480a8a
Author: Weston Andros Adamson <dros@monkey.org>
Date:   Wed May 25 10:07:23 2016 -0400

    nfs: avoid race that crashes nfs_init_commit
    
    [ Upstream commit ade8febde0271513360bac44883dbebad44276c3 ]
    
    Since the patch "NFS: Allow multiple commit requests in flight per file"
    we can run multiple simultaneous commits on the same inode.  This
    introduced a race over collecting pages to commit that made it possible
    to call nfs_init_commit() with an empty list - which causes crashes like
    the one below.
    
    The fix is to catch this race and avoid calling nfs_init_commit and
    initiate_commit when there is no work to do.
    
    Here is the crash:
    
    [600522.076832] BUG: unable to handle kernel NULL pointer dereference at 0000000000000040
    [600522.078475] IP: [<ffffffffa0479e72>] nfs_init_commit+0x22/0x130 [nfs]
    [600522.078745] PGD 4272b1067 PUD 4272cb067 PMD 0
    [600522.078972] Oops: 0000 [#1] SMP
    [600522.079204] Modules linked in: nfsv3 nfs_layout_flexfiles rpcsec_gss_krb5 nfsv4 dns_resolver nfs fscache dcdbas ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 xt_conntrack ebtable_nat ebtable_broute bridge stp llc ebtable_filter ebtables ip6table_nat nf_conntrack_ipv6 nf_defrag_ipv6 nf_nat_ipv6 ip6table_mangle ip6table_security ip6table_raw ip6table_filter ip6_tables iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack iptable_mangle iptable_security iptable_raw vmw_vsock_vmci_transport vsock bonding ipmi_devintf ipmi_msghandler coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ppdev vmw_balloon parport_pc parport acpi_cpufreq vmw_vmci i2c_piix4 shpchp nfsd auth_rpcgss nfs_acl lockd grace sunrpc xfs libcrc32c vmwgfx drm_kms_helper ttm drm crc32c_intel serio_raw vmxnet3
    [600522.081380]  vmw_pvscsi ata_generic pata_acpi
    [600522.081809] CPU: 3 PID: 15667 Comm: /usr/bin/python Not tainted 4.1.9-100.pd.88.el7.x86_64 #1
    [600522.082281] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 09/30/2014
    [600522.082814] task: ffff8800bbbfa780 ti: ffff88042ae84000 task.ti: ffff88042ae84000
    [600522.083378] RIP: 0010:[<ffffffffa0479e72>]  [<ffffffffa0479e72>] nfs_init_commit+0x22/0x130 [nfs]
    [600522.083973] RSP: 0018:ffff88042ae87438  EFLAGS: 00010246
    [600522.084571] RAX: 0000000000000000 RBX: ffff880003485e40 RCX: ffff88042ae87588
    [600522.085188] RDX: 0000000000000000 RSI: ffff88042ae874b0 RDI: ffff880003485e40
    [600522.085756] RBP: ffff88042ae87448 R08: ffff880003486010 R09: ffff88042ae874b0
    [600522.086332] R10: 0000000000000000 R11: 0000000000000005 R12: ffff88042ae872d0
    [600522.086905] R13: ffff88042ae874b0 R14: ffff880003485e40 R15: ffff88042704c840
    [600522.087484] FS:  00007f4728ff2740(0000) GS:ffff88043fd80000(0000) knlGS:0000000000000000
    [600522.088070] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [600522.088663] CR2: 0000000000000040 CR3: 000000042b6aa000 CR4: 00000000001406e0
    [600522.089327] Stack:
    [600522.089926]  0000000000000001 ffff88042ae87588 ffff88042ae874f8 ffffffffa04f09fa
    [600522.090549]  0000000000017840 0000000000017840 ffff88042ae87588 ffff8803258d9930
    [600522.091169]  ffff88042ae87578 ffffffffa0563d80 0000000000000000 ffff88042704c840
    [600522.091789] Call Trace:
    [600522.092420]  [<ffffffffa04f09fa>] pnfs_generic_commit_pagelist+0x1da/0x320 [nfsv4]
    [600522.093052]  [<ffffffffa0563d80>] ? ff_layout_commit_prepare_v3+0x30/0x30 [nfs_layout_flexfiles]
    [600522.093696]  [<ffffffffa0562645>] ff_layout_commit_pagelist+0x15/0x20 [nfs_layout_flexfiles]
    [600522.094359]  [<ffffffffa047bc78>] nfs_generic_commit_list+0xe8/0x120 [nfs]
    [600522.095032]  [<ffffffffa047bd6a>] nfs_commit_inode+0xba/0x110 [nfs]
    [600522.095719]  [<ffffffffa046ac54>] nfs_release_page+0x44/0xd0 [nfs]
    [600522.096410]  [<ffffffff811a8122>] try_to_release_page+0x32/0x50
    [600522.097109]  [<ffffffff811bd4f1>] shrink_page_list+0x961/0xb30
    [600522.097812]  [<ffffffff811bdced>] shrink_inactive_list+0x1cd/0x550
    [600522.098530]  [<ffffffff811bea65>] shrink_lruvec+0x635/0x840
    [600522.099250]  [<ffffffff811bed60>] shrink_zone+0xf0/0x2f0
    [600522.099974]  [<ffffffff811bf312>] do_try_to_free_pages+0x192/0x470
    [600522.100709]  [<ffffffff811bf6ca>] try_to_free_pages+0xda/0x170
    [600522.101464]  [<ffffffff811b2198>] __alloc_pages_nodemask+0x588/0x970
    [600522.102235]  [<ffffffff811fbbd5>] alloc_pages_vma+0xb5/0x230
    [600522.103000]  [<ffffffff813a1589>] ? cpumask_any_but+0x39/0x50
    [600522.103774]  [<ffffffff811d6115>] wp_page_copy.isra.55+0x95/0x490
    [600522.104558]  [<ffffffff810e3438>] ? __wake_up+0x48/0x60
    [600522.105357]  [<ffffffff811d7d3b>] do_wp_page+0xab/0x4f0
    [600522.106137]  [<ffffffff810a1bbb>] ? release_task+0x36b/0x470
    [600522.106902]  [<ffffffff8126dbd7>] ? eventfd_ctx_read+0x67/0x1c0
    [600522.107659]  [<ffffffff811da2a8>] handle_mm_fault+0xc78/0x1900
    [600522.108431]  [<ffffffff81067ef1>] __do_page_fault+0x181/0x420
    [600522.109173]  [<ffffffff811446a6>] ? __audit_syscall_exit+0x1e6/0x280
    [600522.109893]  [<ffffffff810681c0>] do_page_fault+0x30/0x80
    [600522.110594]  [<ffffffff81024f36>] ? syscall_trace_leave+0xc6/0x120
    [600522.111288]  [<ffffffff81790a58>] page_fault+0x28/0x30
    [600522.111947] Code: 5d c3 0f 1f 80 00 00 00 00 0f 1f 44 00 00 55 4c 8d 87 d0 01 00 00 48 89 e5 53 48 89 fb 48 83 ec 08 4c 8b 0e 49 8b 41 18 4c 39 ce <48> 8b 40 40 4c 8b 50 30 74 24 48 8b 87 d0 01 00 00 48 8b 7e 08
    [600522.113343] RIP  [<ffffffffa0479e72>] nfs_init_commit+0x22/0x130 [nfs]
    [600522.114003]  RSP <ffff88042ae87438>
    [600522.114636] CR2: 0000000000000040
    
    Fixes: af7cf057 (NFS: Allow multiple commit requests in flight per file)
    CC: stable@vger.kernel.org
    Signed-off-by: Weston Andros Adamson <dros@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 94d06a437eb0ad1a492ed75f929d82715b6c05f8
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Aug 3 17:38:33 2015 -0400

    pNFS: Tighten up locking around DS commit buckets
    
    [ Upstream commit 27571297a7e9a2a845c232813a7ba7e1227f5ec6 ]
    
    I'm not aware of any bugreports around this issue, but the locking
    around the pnfs_commit_bucket is inconsistent at best. This patch
    tightens it up by ensuring that the 'bucket->committing' list is always
    changed atomically w.r.t. the 'bucket->clseg' layout segment tracking.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1ff20a560eba527ba652502a2da1cd431e1e2fea
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jun 24 15:15:26 2016 +0200

    ALSA: dummy: Fix a use-after-free at closing
    
    [ Upstream commit d5dbbe6569481bf12dcbe3e12cff72c5f78d272c ]
    
    syzkaller fuzzer spotted a potential use-after-free case in snd-dummy
    driver when hrtimer is used as backend:
    > ==================================================================
    > BUG: KASAN: use-after-free in rb_erase+0x1b17/0x2010 at addr ffff88005e5b6f68
    >  Read of size 8 by task syz-executor/8984
    > =============================================================================
    > BUG kmalloc-192 (Not tainted): kasan: bad access detected
    > -----------------------------------------------------------------------------
    >
    > Disabling lock debugging due to kernel taint
    > INFO: Allocated in 0xbbbbbbbbbbbbbbbb age=18446705582212484632
    > ....
    > [<      none      >] dummy_hrtimer_create+0x49/0x1a0 sound/drivers/dummy.c:464
    > ....
    > INFO: Freed in 0xfffd8e09 age=18446705496313138713 cpu=2164287125 pid=-1
    > [<      none      >] dummy_hrtimer_free+0x68/0x80 sound/drivers/dummy.c:481
    > ....
    > Call Trace:
    >  [<ffffffff8179e59e>] __asan_report_load8_noabort+0x3e/0x40 mm/kasan/report.c:333
    >  [<     inline     >] rb_set_parent include/linux/rbtree_augmented.h:111
    >  [<     inline     >] __rb_erase_augmented include/linux/rbtree_augmented.h:218
    >  [<ffffffff82ca5787>] rb_erase+0x1b17/0x2010 lib/rbtree.c:427
    >  [<ffffffff82cb02e8>] timerqueue_del+0x78/0x170 lib/timerqueue.c:86
    >  [<ffffffff814d0c80>] __remove_hrtimer+0x90/0x220 kernel/time/hrtimer.c:903
    >  [<     inline     >] remove_hrtimer kernel/time/hrtimer.c:945
    >  [<ffffffff814d23da>] hrtimer_try_to_cancel+0x22a/0x570 kernel/time/hrtimer.c:1046
    >  [<ffffffff814d2742>] hrtimer_cancel+0x22/0x40 kernel/time/hrtimer.c:1066
    >  [<ffffffff85420531>] dummy_hrtimer_stop+0x91/0xb0 sound/drivers/dummy.c:417
    >  [<ffffffff854228bf>] dummy_pcm_trigger+0x17f/0x1e0 sound/drivers/dummy.c:507
    >  [<ffffffff85392170>] snd_pcm_do_stop+0x160/0x1b0 sound/core/pcm_native.c:1106
    >  [<ffffffff85391b26>] snd_pcm_action_single+0x76/0x120 sound/core/pcm_native.c:956
    >  [<ffffffff85391e01>] snd_pcm_action+0x231/0x290 sound/core/pcm_native.c:974
    >  [<     inline     >] snd_pcm_stop sound/core/pcm_native.c:1139
    >  [<ffffffff8539754d>] snd_pcm_drop+0x12d/0x1d0 sound/core/pcm_native.c:1784
    >  [<ffffffff8539d3be>] snd_pcm_common_ioctl1+0xfae/0x2150 sound/core/pcm_native.c:2805
    >  [<ffffffff8539ee91>] snd_pcm_capture_ioctl1+0x2a1/0x5e0 sound/core/pcm_native.c:2976
    >  [<ffffffff8539f2ec>] snd_pcm_kernel_ioctl+0x11c/0x160 sound/core/pcm_native.c:3020
    >  [<ffffffff853d9a44>] snd_pcm_oss_sync+0x3a4/0xa30 sound/core/oss/pcm_oss.c:1693
    >  [<ffffffff853da27d>] snd_pcm_oss_release+0x1ad/0x280 sound/core/oss/pcm_oss.c:2483
    >  .....
    
    A workaround is to call hrtimer_cancel() in dummy_hrtimer_sync() which
    is called certainly before other blocking ops.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 9bbe4e5d2bfb5a94cc40e75969df16f3cdf85927
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Fri Jun 24 15:13:16 2016 +0200

    ALSA: hda / realtek - add two more Thinkpad IDs (5050,5053) for tpt460 fixup
    
    [ Upstream commit 0f087ee3f3b86a4507db4ff1d2d5a3880e4cfd16 ]
    
      See: https://bugzilla.redhat.com/show_bug.cgi?id=1349539
      See: https://bugzilla.kernel.org/show_bug.cgi?id=120961
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 65f6fab102a9da8bbaf9e9fed3a8dec76f120636
Author: Hui Wang <hui.wang@canonical.com>
Date:   Wed Jul 22 10:33:34 2015 +0800

    ALSA: hda - remove one pin from ALC292_STANDARD_PINS
    
    [ Upstream commit 21e9d017b88ea0baa367ef0b6516d794fa23e85e ]
    
    One more Dell laptop with alc293 codec needs
    ALC293_FIXUP_DELL1_MIC_NO_PRESENCE, but the pin 0x1e does not match
    the corresponding one in the ALC292_STANDARD_PINS. To use this macro
    for this machine, we need to remove pin 0x1e from it.
    
    BugLink: https://bugs.launchpad.net/bugs/1476888
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit f67b6920a0cf03d363c5f3bfb14f5d258168dc8c
Author: Scott Bauer <sbauer@plzdonthack.me>
Date:   Thu Jun 23 08:59:47 2016 -0600

    HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES commands
    
    [ Upstream commit 93a2001bdfd5376c3dc2158653034c20392d15c5 ]
    
    This patch validates the num_values parameter from userland during the
    HIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was set
    to HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameter
    leading to a heap overflow.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Scott Bauer <sbauer@plzdonthack.me>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 32dc059d132c7fb4f45a7aeab70e08d2a47ed90d
Author: Jerome Marchand <jmarchan@redhat.com>
Date:   Thu May 26 11:52:25 2016 +0200

    cifs: dynamic allocation of ntlmssp blob
    
    [ Upstream commit b8da344b74c822e966c6d19d6b2321efe82c5d97 ]
    
    In sess_auth_rawntlmssp_authenticate(), the ntlmssp blob is allocated
    statically and its size is an "empirical" 5*sizeof(struct
    _AUTHENTICATE_MESSAGE) (320B on x86_64). I don't know where this value
    comes from or if it was ever appropriate, but it is currently
    insufficient: the user and domain name in UTF16 could take 1kB by
    themselves. Because of that, build_ntlmssp_auth_blob() might corrupt
    memory (out-of-bounds write). The size of ntlmssp_blob in
    SMB2_sess_setup() is too small too (sizeof(struct _NEGOTIATE_MESSAGE)
    + 500).
    
    This patch allocates the blob dynamically in
    build_ntlmssp_auth_blob().
    
    Signed-off-by: Jerome Marchand <jmarchan@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 60243e6760bb680c9c6c6d5676a0669c44890c74
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Thu Jun 23 17:37:34 2016 -0700

    Input: vmmouse - remove port reservation
    
    [ Upstream commit 60842ef8128e7bf58c024814cd0dc14319232b6c ]
    
    The VMWare EFI BIOS will expose port 0x5658 as an ACPI resource.  This
    causes the port to be reserved by the APCI module as the system comes up,
    making it unavailable to be reserved again by other drivers, thus
    preserving this VMWare port for special use in a VMWare guest.
    
    This port is designed to be shared among multiple VMWare services, such as
    the VMMOUSE.  Because of this, VMMOUSE should not try to reserve this port
    on its own.
    
    The VMWare non-EFI BIOS does not do this to preserve compatibility with
    existing/legacy VMs.  It is known that there is small chance a VM may be
    configured such that these ports get reserved by other non-VMWare devices,
    and if this ever happens, the result is undefined.
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Cc: <stable@vger.kernel.org> # 4.1-
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6a2f15857e4debf46d34fd897e9d3eaf70590e33
Author: Dmitrii Tcvetkov <demfloro@demfloro.ru>
Date:   Mon Jun 20 13:52:14 2016 +0300

    drm/nouveau: fix for disabled fbdev emulation
    
    [ Upstream commit 52dfcc5ccfbb6697ac3cac7f7ff1e712760e1216 ]
    
    Hello,
    
    after this commit:
    
    commit f045f459d925138fe7d6193a8c86406bda7e49da
    Author: Ben Skeggs <bskeggs@redhat.com>
    Date:   Thu Jun 2 12:23:31 2016 +1000
        drm/nouveau/fbcon: fix out-of-bounds memory accesses
    
    kernel started to oops when loading nouveau module when using GTX 780 Ti
    video adapter. This patch fixes the problem.
    
    Bug report: https://bugzilla.kernel.org/show_bug.cgi?id=120591
    
    Signed-off-by: Dmitrii Tcvetkov <demfloro@demfloro.ru>
    Suggested-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Fixes: f045f459d925 ("nouveau_fbcon_init()")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 97e2a92930008f6087b6d59f761277f0839b30be
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Jun 21 16:09:00 2016 -0700

    Input: elantech - add more IC body types to the list
    
    [ Upstream commit 226ba707744a51acb4244724e09caacb1d96aed9 ]
    
    The touchpad in HP Pavilion 14-ab057ca reports it's version as 12 and
    according to Elan both 11 and 12 are valid IC types and should be
    identified as hw_version 4.
    
    Reported-by: Patrick Lessard <Patrick.Lessard@cogeco.com>
    Tested-by: Patrick Lessard <Patrick.Lessard@cogeco.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 37d925d2750f0efcbdc04e17d6bc46d3c82dc214
Author: Ping Cheng <pinglinux@gmail.com>
Date:   Thu Jun 23 10:54:17 2016 -0700

    Input: wacom_w8001 - w8001_MAX_LENGTH should be 13
    
    [ Upstream commit 12afb34400eb2b301f06b2aa3535497d14faee59 ]
    
    Somehow the patch that added two-finger touch support forgot to update
    W8001_MAX_LENGTH from 11 to 13.
    
    Signed-off-by: Ping Cheng <pingc@wacom.com>
    Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 90a12c571f30254108126ee82ca7f4179e934b33
Author: Andrey Grodzovsky <andrey2805@gmail.com>
Date:   Tue Jun 21 14:26:36 2016 -0400

    xen/pciback: Fix conf_space read/write overlap check.
    
    [ Upstream commit 02ef871ecac290919ea0c783d05da7eedeffc10e ]
    
    Current overlap check is evaluating to false a case where a filter
    field is fully contained (proper subset) of a r/w request.  This
    change applies classical overlap check instead to include all the
    scenarios.
    
    More specifically, for (Hilscher GmbH CIFX 50E-DP(M/S)) device driver
    the logic is such that the entire confspace is read and written in 4
    byte chunks. In this case as an example, CACHE_LINE_SIZE,
    LATENCY_TIMER and PCI_BIST are arriving together in one call to
    xen_pcibk_config_write() with offset == 0xc and size == 4.  With the
    exsisting overlap check the LATENCY_TIMER field (offset == 0xd, length
    == 1) is fully contained in the write request and hence is excluded
    from write, which is incorrect.
    
    Signed-off-by: Andrey Grodzovsky <andrey2805@gmail.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Reviewed-by: Jan Beulich <JBeulich@suse.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 760102cd663d7a2f952177942f0cf44bbb06320d
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Tue Jun 21 15:45:47 2016 +0200

    can: fix oops caused by wrong rtnl dellink usage
    
    [ Upstream commit 25e1ed6e64f52a692ba3191c4fde650aab3ecc07 ]
    
    For 'real' hardware CAN devices the netlink interface is used to set CAN
    specific communication parameters. Real CAN hardware can not be created nor
    removed with the ip tool ...
    
    This patch adds a private dellink function for the CAN device driver interface
    that does just nothing.
    
    It's a follow up to commit 993e6f2fd ("can: fix oops caused by wrong rtnl
    newlink usage") but for dellink.
    
    Reported-by: ajneu <ajneu1@gmail.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 488ba7c5a08649e4f05075a8237135b2ae4c37b4
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Tue Jun 21 12:14:07 2016 +0200

    can: fix handling of unmodifiable configuration options fix
    
    [ Upstream commit bce271f255dae8335dc4d2ee2c4531e09cc67f5a ]
    
    With upstream commit bb208f144cf3f59 (can: fix handling of unmodifiable
    configuration options) a new can_validate() function was introduced.
    
    When invoking 'ip link set can0 type can' without any configuration data
    can_validate() tries to validate the content without taking into account that
    there's totally no content. This patch adds a check for missing content.
    
    Reported-by: ajneu <ajneu1@gmail.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit f3d1ae6f55fd1c9bedb26fd742693f629facd01a
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Jun 16 23:26:15 2016 +0200

    UBIFS: Implement ->migratepage()
    
    [ Upstream commit 4ac1c17b2044a1b4b2fbed74451947e905fc2992 ]
    
    During page migrations UBIFS might get confused
    and the following assert triggers:
    [  213.480000] UBIFS assert failed in ubifs_set_page_dirty at 1451 (pid 436)
    [  213.490000] CPU: 0 PID: 436 Comm: drm-stress-test Not tainted 4.4.4-00176-geaa802524636-dirty #1008
    [  213.490000] Hardware name: Allwinner sun4i/sun5i Families
    [  213.490000] [<c0015e70>] (unwind_backtrace) from [<c0012cdc>] (show_stack+0x10/0x14)
    [  213.490000] [<c0012cdc>] (show_stack) from [<c02ad834>] (dump_stack+0x8c/0xa0)
    [  213.490000] [<c02ad834>] (dump_stack) from [<c0236ee8>] (ubifs_set_page_dirty+0x44/0x50)
    [  213.490000] [<c0236ee8>] (ubifs_set_page_dirty) from [<c00fa0bc>] (try_to_unmap_one+0x10c/0x3a8)
    [  213.490000] [<c00fa0bc>] (try_to_unmap_one) from [<c00fadb4>] (rmap_walk+0xb4/0x290)
    [  213.490000] [<c00fadb4>] (rmap_walk) from [<c00fb1bc>] (try_to_unmap+0x64/0x80)
    [  213.490000] [<c00fb1bc>] (try_to_unmap) from [<c010dc28>] (migrate_pages+0x328/0x7a0)
    [  213.490000] [<c010dc28>] (migrate_pages) from [<c00d0cb0>] (alloc_contig_range+0x168/0x2f4)
    [  213.490000] [<c00d0cb0>] (alloc_contig_range) from [<c010ec00>] (cma_alloc+0x170/0x2c0)
    [  213.490000] [<c010ec00>] (cma_alloc) from [<c001a958>] (__alloc_from_contiguous+0x38/0xd8)
    [  213.490000] [<c001a958>] (__alloc_from_contiguous) from [<c001ad44>] (__dma_alloc+0x23c/0x274)
    [  213.490000] [<c001ad44>] (__dma_alloc) from [<c001ae08>] (arm_dma_alloc+0x54/0x5c)
    [  213.490000] [<c001ae08>] (arm_dma_alloc) from [<c035cecc>] (drm_gem_cma_create+0xb8/0xf0)
    [  213.490000] [<c035cecc>] (drm_gem_cma_create) from [<c035cf20>] (drm_gem_cma_create_with_handle+0x1c/0xe8)
    [  213.490000] [<c035cf20>] (drm_gem_cma_create_with_handle) from [<c035d088>] (drm_gem_cma_dumb_create+0x3c/0x48)
    [  213.490000] [<c035d088>] (drm_gem_cma_dumb_create) from [<c0341ed8>] (drm_ioctl+0x12c/0x444)
    [  213.490000] [<c0341ed8>] (drm_ioctl) from [<c0121adc>] (do_vfs_ioctl+0x3f4/0x614)
    [  213.490000] [<c0121adc>] (do_vfs_ioctl) from [<c0121d30>] (SyS_ioctl+0x34/0x5c)
    [  213.490000] [<c0121d30>] (SyS_ioctl) from [<c000f2c0>] (ret_fast_syscall+0x0/0x34)
    
    UBIFS is using PagePrivate() which can have different meanings across
    filesystems. Therefore the generic page migration code cannot handle this
    case correctly.
    We have to implement our own migration function which basically does a
    plain copy but also duplicates the page private flag.
    UBIFS is not a block device filesystem and cannot use buffer_migrate_page().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    [rw: Massaged changelog, build fixes, etc...]
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Acked-by: Christoph Hellwig <hch@lst.de>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a13b0f0a244b15e576f6edf4ffb9ce41ea6f3837
Author: Richard Weinberger <richard@nod.at>
Date:   Thu Jun 16 23:26:14 2016 +0200

    mm: Export migrate_page_move_mapping and migrate_page_copy
    
    [ Upstream commit 1118dce773d84f39ebd51a9fe7261f9169cb056e ]
    
    Export these symbols such that UBIFS can implement
    ->migratepage.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Acked-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 59523335cd4ae9e0b3359ce6577afea1fff9524d
Author: Richard Weinberger <richard@nod.at>
Date:   Tue Jun 21 00:31:50 2016 +0200

    ubi: Make recover_peb power cut aware
    
    [ Upstream commit 972228d87445dc46c0a01f5f3de673ac017626f7 ]
    
    recover_peb() was never power cut aware,
    if a power cut happened right after writing the VID header
    upon next attach UBI would blindly use the new partial written
    PEB and all data from the old PEB is lost.
    
    In order to make recover_peb() power cut aware, write the new
    VID with a proper crc and copy_flag set such that the UBI attach
    process will detect whether the new PEB is completely written
    or not.
    We cannot directly use ubi_eba_atomic_leb_change() since we'd
    have to unlock the LEB which is facing a write error.
    
    Cc: stable@vger.kernel.org
    Reported-by: Jörg Pfähler <pfaehler@isse.de>
    Reviewed-by: Jörg Pfähler <pfaehler@isse.de>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0e16f4fb69810c58bdf142dd85ee92e46576b877
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue May 31 14:17:06 2016 -0700

    pinctrl: single: Fix missing flush of posted write for a wakeirq
    
    [ Upstream commit 0ac3c0a4025f41748a083bdd4970cb3ede802b15 ]
    
    With many repeated suspend resume cycles, the pin specific wakeirq
    may not always work on omaps. This is because the write to enable the
    pin interrupt may not have reached the device over the interconnect
    before suspend happens.
    
    Let's fix the issue with a flush of posted write with a readback.
    
    Cc: stable@vger.kernel.org
    Reported-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 65c68fd8c1c79178d17217fb045b80badecdd472
Author: Alexander Shiyan <shc_work@mail.ru>
Date:   Wed Jun 1 22:21:53 2016 +0300

    pinctrl: imx: Do not treat a PIN without MUX register as an error
    
    [ Upstream commit ba562d5e54fd3136bfea0457add3675850247774 ]
    
    Some PINs do not have a MUX register, it is not an error.
    It is necessary to allow the continuation of the PINs configuration,
    otherwise the whole PIN-group will be configured incorrectly.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexander Shiyan <shc_work@mail.ru>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 32bab0754d80dc086111d93bdc8ce39cf37c9eb9
Author: Shaokun Zhang <zhangshaokun@hisilicon.com>
Date:   Tue Jun 21 15:32:57 2016 +0800

    arm64: mm: remove page_mapping check in __sync_icache_dcache
    
    [ Upstream commit 20c27a4270c775d7ed661491af8ac03264d60fc6 ]
    
    __sync_icache_dcache unconditionally skips the cache maintenance for
    anonymous pages, under the assumption that flushing is only required in
    the presence of D-side aliases [see 7249b79f6b4cc ("arm64: Do not flush
    the D-cache for anonymous pages")].
    
    Unfortunately, this breaks migration of anonymous pages holding
    self-modifying code, where userspace cannot be reasonably expected to
    reissue maintenance instructions in response to a migration.
    
    This patch fixes the problem by removing the broken page_mapping(page)
    check from the cache syncing code, otherwise we may end up fetching and
    executing stale instructions from the PoU.
    
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Shaokun Zhang <zhangshaokun@hisilicon.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 78016458e6bc8d2e3a352be3e7d879ab43a233e6
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Fri May 27 16:09:25 2016 +0200

    drm: atmel-hlcdc: actually disable scaling when no scaling is required
    
    [ Upstream commit 1b7e38b92b0bbd363369f5160f13f4d26140972d ]
    
    The driver is only enabling scaling, but never disabling it, thus, if you
    enable the scaling feature once it stays enabled forever.
    
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reported-by: Alex Vazquez <avazquez.dev@gmail.com>
    Reviewed-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Fixes: 1a396789f65a ("drm: add Atmel HLCDC Display Controller support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 335f166ee3341efcf402c46ea0e7d6362e7c9122
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Fri Jun 17 16:10:42 2016 -0400

    tracing: Handle NULL formats in hold_module_trace_bprintk_format()
    
    [ Upstream commit 70c8217acd4383e069fe1898bbad36ea4fcdbdcc ]
    
    If a task uses a non constant string for the format parameter in
    trace_printk(), then the trace_printk_fmt variable is set to NULL. This
    variable is then saved in the __trace_printk_fmt section.
    
    The function hold_module_trace_bprintk_format() checks to see if duplicate
    formats are used by modules, and reuses them if so (saves them to the list
    if it is new). But this function calls lookup_format() that does a strcmp()
    to the value (which is now NULL) and can cause a kernel oops.
    
    This wasn't an issue till 3debb0a9ddb ("tracing: Fix trace_printk() to print
    when not using bprintk()") which added "__used" to the trace_printk_fmt
    variable, and before that, the kernel simply optimized it out (no NULL value
    was saved).
    
    The fix is simply to handle the NULL pointer in lookup_format() and have the
    caller ignore the value if it was NULL.
    
    Link: http://lkml.kernel.org/r/1464769870-18344-1-git-send-email-zhengjun.xing@intel.com
    
    Reported-by: xingzhen <zhengjun.xing@intel.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Fixes: 3debb0a9ddb ("tracing: Fix trace_printk() to print when not using bprintk()")
    Cc: stable@vger.kernel.org # v3.5+
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1105110de5bac70124e63663c618cab9d4e5c3b7
Author: Wolfgang Grandegger <wg@grandegger.com>
Date:   Mon Jun 13 15:44:19 2016 +0200

    can: at91_can: RX queue could get stuck at high bus load
    
    [ Upstream commit 43200a4480cbbe660309621817f54cbb93907108 ]
    
    At high bus load it could happen that "at91_poll()" enters with all RX
    message boxes filled up. If then at the end the "quota" is exceeded as
    well, "rx_next" will not be reset to the first RX mailbox and hence the
    interrupts remain disabled.
    
    Signed-off-by: Wolfgang Grandegger <wg@grandegger.com>
    Tested-by: Amr Bekhit <amrbekhit@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 293745be2931d248a1244918b2318b7cbcdda542
Author: Thor Thayer <tthayer@opensource.altera.com>
Date:   Thu Jun 16 11:10:19 2016 -0500

    can: c_can: Update D_CAN TX and RX functions to 32 bit - fix Altera Cyclone access
    
    [ Upstream commit 427460c83cdf55069eee49799a0caef7dde8df69 ]
    
    When testing CAN write floods on Altera's CycloneV, the first 2 bytes
    are sometimes 0x00, 0x00 or corrupted instead of the values sent. Also
    observed bytes 4 & 5 were corrupted in some cases.
    
    The D_CAN Data registers are 32 bits and changing from 16 bit writes to
    32 bit writes fixes the problem.
    
    Testing performed on Altera CycloneV (D_CAN).  Requesting tests on other
    C_CAN & D_CAN platforms.
    
    Reported-by: Richard Andrysek <richard.andrysek@gomtec.de>
    Signed-off-by: Thor Thayer <tthayer@opensource.altera.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0764832cd4b2472693529696578563892929701a
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Jun 8 17:28:29 2016 -0600

    IB/mlx4: Properly initialize GRH TClass and FlowLabel in AHs
    
    [ Upstream commit 8c5122e45a10a9262f872b53f151a592e870f905 ]
    
    When this code was reworked for IBoE support the order of assignments
    for the sl_tclass_flowlabel got flipped around resulting in
    TClass & FlowLabel being permanently set to 0 in the packet headers.
    
    This breaks IB routers that rely on these headers, but only affects
    kernel users - libmlx4 does this properly for user space.
    
    Cc: stable@vger.kernel.org
    Fixes: fa417f7b520e ("IB/mlx4: Add support for IBoE")
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit efe098c364208b0d1fcc1b252290df0fd225d352
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Wed Jun 8 00:36:38 2016 -0400

    btrfs: account for non-CoW'd blocks in btrfs_abort_transaction
    
    [ Upstream commit 64c12921e11b3a0c10d088606e328c58e29274d8 ]
    
    The test for !trans->blocks_used in btrfs_abort_transaction is
    insufficient to determine whether it's safe to drop the transaction
    handle on the floor.  btrfs_cow_block, informed by should_cow_block,
    can return blocks that have already been CoW'd in the current
    transaction.  trans->blocks_used is only incremented for new block
    allocations. If an operation overlaps the blocks in the current
    transaction entirely and must abort the transaction, we'll happily
    let it clean up the trans handle even though it may have modified
    the blocks and will commit an incomplete operation.
    
    In the long-term, I'd like to do closer tracking of when the fs
    is actually modified so we can still recover as gracefully as possible,
    but that approach will need some discussion.  In the short term,
    since this is the only code using trans->blocks_used, let's just
    switch it to a bool indicating whether any blocks were used and set
    it when should_cow_block returns false.
    
    Cc: stable@vger.kernel.org # 3.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0b1ca750b5fe6e457768c1b835f7f380a288ca58
Author: Jaroslav Kysela <perex@perex.cz>
Date:   Fri Jun 17 13:35:56 2016 +0200

    ALSA: hdac_regmap - fix the register access for runtime PM
    
    [ Upstream commit 8198868f0a283eb23e264951632ce61ec2f82228 ]
    
    Call path:
    
      1) snd_hdac_power_up_pm()
      2) snd_hdac_power_up()
      3) pm_runtime_get_sync()
      4) __pm_runtime_resume()
      5) rpm_resume()
    
    The rpm_resume() returns 1 when the device is already active.
    Because the return value is unmodified, the hdac regmap read/write
    functions should allow this value for the retry I/O operation, too.
    
    Signed-off-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit ec3e73223a8e5a5ec66ca6a2b12d37ddaf2530dd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Apr 21 17:49:11 2016 +0200

    ALSA: hda - Fix possible race on regmap bypass flip
    
    [ Upstream commit 3194ed497939c6448005542e3ca4fa2386968fa0 ]
    
    HD-audio driver uses regmap cache bypass feature for reading a raw
    value without the cache.  But this is racy since both the cached and
    the uncached reads may occur concurrently.  The former is done via the
    normal control API access while the latter comes from the proc file
    read.
    
    Even though the regmap itself has the protection against the
    concurrent accesses, the flag set/reset is done without the
    protection, so it may lead to inconsistent state of bypass flag that
    doesn't match with the current read and occasionally result in a
    kernel WARNING like:
      WARNING: CPU: 3 PID: 2731 at drivers/base/regmap/regcache.c:499 regcache_cache_only+0x78/0x93
    
    One way to work around such a problem is to wrap with a mutex.  But in
    this case, the solution is simpler: for the uncached read, we just
    skip the regmap and directly calls its accessor.  The verb execution
    there is protected by itself, so basically it's safe to call
    individually.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=116171
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c262505cdb45765ddea20a1f85f0023990276772
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jun 16 15:48:57 2016 +0100

    KEYS: potential uninitialized variable
    
    [ Upstream commit 38327424b40bcebe2de92d07312c89360ac9229a ]
    
    If __key_link_begin() failed then "edit" would be uninitialized.  I've
    added a check to fix that.
    
    This allows a random user to crash the kernel, though it's quite
    difficult to achieve.  There are three ways it can be done as the user
    would have to cause an error to occur in __key_link():
    
     (1) Cause the kernel to run out of memory.  In practice, this is difficult
         to achieve without ENOMEM cropping up elsewhere and aborting the
         attempt.
    
     (2) Revoke the destination keyring between the keyring ID being looked up
         and it being tested for revocation.  In practice, this is difficult to
         time correctly because the KEYCTL_REJECT function can only be used
         from the request-key upcall process.  Further, users can only make use
         of what's in /sbin/request-key.conf, though this does including a
         rejection debugging test - which means that the destination keyring
         has to be the caller's session keyring in practice.
    
     (3) Have just enough key quota available to create a key, a new session
         keyring for the upcall and a link in the session keyring, but not then
         sufficient quota to create a link in the nominated destination keyring
         so that it fails with EDQUOT.
    
    The bug can be triggered using option (3) above using something like the
    following:
    
            echo 80 >/proc/sys/kernel/keys/root_maxbytes
            keyctl request2 user debug:fred negate @t
    
    The above sets the quota to something much lower (80) to make the bug
    easier to trigger, but this is dependent on the system.  Note also that
    the name of the keyring created contains a random number that may be
    between 1 and 10 characters in size, so may throw the test off by
    changing the amount of quota used.
    
    Assuming the failure occurs, something like the following will be seen:
    
            kfree_debugcheck: out of range ptr 6b6b6b6b6b6b6b68h
            ------------[ cut here ]------------
            kernel BUG at ../mm/slab.c:2821!
            ...
            RIP: 0010:[<ffffffff811600f9>] kfree_debugcheck+0x20/0x25
            RSP: 0018:ffff8804014a7de8  EFLAGS: 00010092
            RAX: 0000000000000034 RBX: 6b6b6b6b6b6b6b68 RCX: 0000000000000000
            RDX: 0000000000040001 RSI: 00000000000000f6 RDI: 0000000000000300
            RBP: ffff8804014a7df0 R08: 0000000000000001 R09: 0000000000000000
            R10: ffff8804014a7e68 R11: 0000000000000054 R12: 0000000000000202
            R13: ffffffff81318a66 R14: 0000000000000000 R15: 0000000000000001
            ...
            Call Trace:
              kfree+0xde/0x1bc
              assoc_array_cancel_edit+0x1f/0x36
              __key_link_end+0x55/0x63
              key_reject_and_link+0x124/0x155
              keyctl_reject_key+0xb6/0xe0
              keyctl_negate_key+0x10/0x12
              SyS_keyctl+0x9f/0xe7
              do_syscall_64+0x63/0x13a
              entry_SYSCALL64_slow_path+0x25/0x25
    
    Fixes: f70e2e06196a ('KEYS: Do preallocation for __key_link()')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0356b95fcc4e7eb670633be53db29147201ddce4
Author: Tejun Heo <tj@kernel.org>
Date:   Thu May 26 15:42:13 2016 -0400

    cgroup: set css->id to -1 during init
    
    [ Upstream commit 8fa3b8d689a54d6d04ff7803c724fb7aca6ce98e ]
    
    If percpu_ref initialization fails during css_create(), the free path
    can end up trying to free css->id of zero.  As ID 0 is unused, it
    doesn't cause a critical breakage but it does trigger a warning
    message.  Fix it by setting css->id to -1 from init_and_link_css().
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Wenwei Tao <ww.tao0320@gmail.com>
    Fixes: 01e586598b22 ("cgroup: release css->id after css_free")
    Cc: stable@vger.kernel.org # v4.0+
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4c9b1064a186967df8c81f7305df533f56678abf
Author: Ocquidant, Sebastien <sebastienocquidant@eaton.com>
Date:   Wed Jun 15 13:47:35 2016 +0200

    memory: omap-gpmc: Fix omap gpmc EXTRADELAY timing
    
    [ Upstream commit 8f50b8e57442d28e41bb736c173d8a2490549a82 ]
    
    In the omap gpmc driver it can be noticed that GPMC_CONFIG4_OEEXTRADELAY
    is overwritten by the WEEXTRADELAY value from the device tree and
    GPMC_CONFIG4_WEEXTRADELAY is not updated by the value from the device
    tree.
    
    As a consequence, the memory accesses cannot be configured properly when
    the extra delay are needed for OE and WE.
    
    Fix the update of GPMC_CONFIG4_WEEXTRADELAY with the value from the
    device tree file and prevents GPMC_CONFIG4_OEXTRADELAY
    being overwritten by the WEXTRADELAY value from the device tree.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ocquidant, Sebastien <sebastienocquidant@eaton.com>
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 316515981206627bf97be37eca397234d604395d
Author: Xiubo Li <lixiubo@cmss.chinamobile.com>
Date:   Wed Jun 15 18:00:33 2016 +0800

    kvm: Fix irq route entries exceeding KVM_MAX_IRQ_ROUTES
    
    [ Upstream commit caf1ff26e1aa178133df68ac3d40815fed2187d9 ]
    
    These days, we experienced one guest crash with 8 cores and 3 disks,
    with qemu error logs as bellow:
    
    qemu-system-x86_64: /build/qemu-2.0.0/kvm-all.c:984:
    kvm_irqchip_commit_routes: Assertion `ret == 0' failed.
    
    And then we found one patch(bdf026317d) in qemu tree, which said
    could fix this bug.
    
    Execute the following script will reproduce the BUG quickly:
    
    irq_affinity.sh
    ========================================================================
    
    vda_irq_num=25
    vdb_irq_num=27
    while [ 1 ]
    do
        for irq in {1,2,4,8,10,20,40,80}
            do
                echo $irq > /proc/irq/$vda_irq_num/smp_affinity
                echo $irq > /proc/irq/$vdb_irq_num/smp_affinity
                dd if=/dev/vda of=/dev/zero bs=4K count=100 iflag=direct
                dd if=/dev/vdb of=/dev/zero bs=4K count=100 iflag=direct
            done
    done
    ========================================================================
    
    The following qemu log is added in the qemu code and is displayed when
    this bug reproduced:
    
    kvm_irqchip_commit_routes: max gsi: 1008, nr_allocated_irq_routes: 1024,
    irq_routes->nr: 1024, gsi_count: 1024.
    
    That's to say when irq_routes->nr == 1024, there are 1024 routing entries,
    but in the kernel code when routes->nr >= 1024, will just return -EINVAL;
    
    The nr is the number of the routing entries which is in of
    [1 ~ KVM_MAX_IRQ_ROUTES], not the index in [0 ~ KVM_MAX_IRQ_ROUTES - 1].
    
    This patch fix the BUG above.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Xiubo Li <lixiubo@cmss.chinamobile.com>
    Signed-off-by: Wei Tang <tangwei@cmss.chinamobile.com>
    Signed-off-by: Zhang Zhuoyu <zhangzhuoyu@cmss.chinamobile.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit aec2ddb9595f130759ca20c8f089e0361c95ca97
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Jun 10 10:54:32 2016 +0200

    base: make module_create_drivers_dir race-free
    
    [ Upstream commit 7e1b1fc4dabd6ec8e28baa0708866e13fa93c9b3 ]
    
    Modules which register drivers via standard path (driver_register) in
    parallel can cause a warning:
    WARNING: CPU: 2 PID: 3492 at ../fs/sysfs/dir.c:31 sysfs_warn_dup+0x62/0x80
    sysfs: cannot create duplicate filename '/module/saa7146/drivers'
    Modules linked in: hexium_gemini(+) mxb(+) ...
    ...
    Call Trace:
    ...
     [<ffffffff812e63a2>] sysfs_warn_dup+0x62/0x80
     [<ffffffff812e6487>] sysfs_create_dir_ns+0x77/0x90
     [<ffffffff8140f2c4>] kobject_add_internal+0xb4/0x340
     [<ffffffff8140f5b8>] kobject_add+0x68/0xb0
     [<ffffffff8140f631>] kobject_create_and_add+0x31/0x70
     [<ffffffff8157a703>] module_add_driver+0xc3/0xd0
     [<ffffffff8155e5d4>] bus_add_driver+0x154/0x280
     [<ffffffff815604c0>] driver_register+0x60/0xe0
     [<ffffffff8145bed0>] __pci_register_driver+0x60/0x70
     [<ffffffffa0273e14>] saa7146_register_extension+0x64/0x90 [saa7146]
     [<ffffffffa0033011>] hexium_init_module+0x11/0x1000 [hexium_gemini]
    ...
    
    As can be (mostly) seen, driver_register causes this call sequence:
      -> bus_add_driver
        -> module_add_driver
          -> module_create_drivers_dir
    The last one creates "drivers" directory in /sys/module/<...>. When
    this is done in parallel, the directory is attempted to be created
    twice at the same time.
    
    This can be easily reproduced by loading mxb and hexium_gemini in
    parallel:
    while :; do
      modprobe mxb &
      modprobe hexium_gemini
      wait
      rmmod mxb hexium_gemini saa7146_vv saa7146
    done
    
    saa7146 calls pci_register_driver for both mxb and hexium_gemini,
    which means /sys/module/saa7146/drivers is to be created for both of
    them.
    
    Fix this by a new mutex in module_create_drivers_dir which makes the
    test-and-create "drivers" dir atomic.
    
    I inverted the condition and removed 'return' to avoid multiple
    unlocks or a goto.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Fixes: fe480a2675ed (Modules: only add drivers/ direcory if needed)
    Cc: v2.6.21+ <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c2edadb9814a6ca12e1442c574d2191ca7352c06
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Mon May 16 17:03:42 2016 -0400

    nfsd4/rpc: move backchannel create logic into rpc code
    
    [ Upstream commit d50039ea5ee63c589b0434baa5ecf6e5075bb6f9 ]
    
    Also simplify the logic a bit.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Acked-by: Trond Myklebust <trondmy@primarydata.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 040ad2a3262124ac7d4676a5409c194baca514a9
Author: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
Date:   Wed May 25 16:45:43 2016 -0400

    drm/dp/mst: Always clear proposed vcpi table for port.
    
    [ Upstream commit fd2d2bac6e79b0be91ab86a6075a0c46ffda658a ]
    
    Not clearing mst manager's proposed vcpis table for destroyed connectors when the manager is stopped leaves it pointing to unrefernced memory, this causes pagefault when the manager is restarted when plugging back a branch.
    
    Fixes: 91a25e463130 ("drm/dp/mst: deallocate payload on port destruction")
    Signed-off-by: Andrey Grodzovsky <Andrey.Grodzovsky@amd.com>
    Reviewed-by: Lyude <cpaul@redhat.com>
    Cc: stable@vger.kernel.org
    Cc: Mykola Lysenko <Mykola.Lysenko@amd.com>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5a6c735c13e0ad34cdb4fc24a782924b64efec92
Author: Lyude <cpaul@redhat.com>
Date:   Tue Jun 14 11:04:09 2016 -0400

    drm/i915/ilk: Don't disable SSC source if it's in use
    
    [ Upstream commit 476490a945e1f0f6bd58e303058d2d8ca93a974c ]
    
    Thanks to Ville Syrjälä for pointing me towards the cause of this issue.
    
    Unfortunately one of the sideaffects of having the refclk for a DPLL set
    to SSC is that as long as it's set to SSC, the GPU will prevent us from
    powering down any of the pipes or transcoders using it. A couple of
    BIOSes enable SSC in both PCH_DREF_CONTROL and in the DPLL
    configurations. This causes issues on the first modeset, since we don't
    expect SSC to be left on and as a result, can't successfully power down
    the pipes or the transcoders using it. Here's an example from this Dell
    OptiPlex 990:
    
    [drm:intel_modeset_init] SSC enabled by BIOS, overriding VBT which says disabled
    [drm:intel_modeset_init] 2 display pipes available.
    [drm:intel_update_cdclk] Current CD clock rate: 400000 kHz
    [drm:intel_update_max_cdclk] Max CD clock rate: 400000 kHz
    [drm:intel_update_max_cdclk] Max dotclock rate: 360000 kHz
    vgaarb: device changed decodes: PCI:0000:00:02.0,olddecodes=io+mem,decodes=io+mem:owns=io+mem
    [drm:intel_crt_reset] crt adpa set to 0xf40000
    [drm:intel_dp_init_connector] Adding DP connector on port C
    [drm:intel_dp_aux_init] registering DPDDC-C bus for card0-DP-1
    [drm:ironlake_init_pch_refclk] has_panel 0 has_lvds 0 has_ck505 0
    [drm:ironlake_init_pch_refclk] Disabling SSC entirely
    … later we try committing the first modeset …
    [drm:intel_dump_pipe_config] [CRTC:26][modeset] config ffff88041b02e800 for pipe A
    [drm:intel_dump_pipe_config] cpu_transcoder: A
    …
    [drm:intel_dump_pipe_config] dpll_hw_state: dpll: 0xc4016001, dpll_md: 0x0, fp0: 0x20e08, fp1: 0x30d07
    [drm:intel_dump_pipe_config] planes on this crtc
    [drm:intel_dump_pipe_config] STANDARD PLANE:23 plane: 0.0 idx: 0 enabled
    [drm:intel_dump_pipe_config]     FB:42, fb = 800x600 format = 0x34325258
    [drm:intel_dump_pipe_config]     scaler:0 src (0, 0) 800x600 dst (0, 0) 800x600
    [drm:intel_dump_pipe_config] CURSOR PLANE:25 plane: 0.1 idx: 1 disabled, scaler_id = 0
    [drm:intel_dump_pipe_config] STANDARD PLANE:27 plane: 0.1 idx: 2 disabled, scaler_id = 0
    [drm:intel_get_shared_dpll] CRTC:26 allocated PCH DPLL A
    [drm:intel_get_shared_dpll] using PCH DPLL A for pipe A
    [drm:ilk_audio_codec_disable] Disable audio codec on port C, pipe A
    [drm:intel_disable_pipe] disabling pipe A
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 130 at drivers/gpu/drm/i915/intel_display.c:1146 intel_disable_pipe+0x297/0x2d0 [i915]
    pipe_off wait timed out
    …
    ---[ end trace 94fc8aa03ae139e8 ]---
    [drm:intel_dp_link_down]
    [drm:ironlake_crtc_disable [i915]] *ERROR* failed to disable transcoder A
    
    Later modesets succeed since they reset the DPLL's configuration anyway,
    but this is enough to get stuck with a big fat warning in dmesg.
    
    A better solution would be to add refcounts for the SSC source, but for
    now leaving the source clock on should suffice.
    
    Changes since v4:
     - Fix calculation of final for systems with LVDS panels (fixes BUG() on
       CI test suite)
    Changes since v3:
     - Move temp variable into loop
     - Move checks for using_ssc_source to after we've figured out has_ck505
     - Add using_ssc_source to debug output
    Changes since v2:
     - Fix debug output for when we disable the CPU source
    Changes since v1:
     - Leave the SSC source clock on instead of just shutting it off on all
       of the DPLL configurations.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Lyude <cpaul@redhat.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1465916649-10228-1-git-send-email-cpaul@redhat.com
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 260c505e55b51645affb70a2c456b350f7e7460a
Author: Rhyland Klein <rklein@nvidia.com>
Date:   Thu Jun 9 17:28:39 2016 -0400

    power_supply: power_supply_read_temp only if use_cnt > 0
    
    [ Upstream commit 5bc28b93a36e3cb3acc2870fb75cb6ffb182fece ]
    
    Change power_supply_read_temp() to use power_supply_get_property()
    so that it will check the use_cnt and ensure it is > 0. The use_cnt
    will be incremented at the end of __power_supply_register, so this
    will block to case where get_property can be called before the supply
    is fully registered. This fixes the issue show in the stack below:
    
    [    1.452598] power_supply_read_temp+0x78/0x80
    [    1.458680] thermal_zone_get_temp+0x5c/0x11c
    [    1.464765] thermal_zone_device_update+0x34/0xb4
    [    1.471195] thermal_zone_device_register+0x87c/0x8cc
    [    1.477974] __power_supply_register+0x364/0x424
    [    1.484317] power_supply_register_no_ws+0x10/0x18
    [    1.490833] bq27xxx_battery_setup+0x10c/0x164
    [    1.497003] bq27xxx_battery_i2c_probe+0xd0/0x1b0
    [    1.503435] i2c_device_probe+0x174/0x240
    [    1.509172] driver_probe_device+0x1fc/0x29c
    [    1.515167] __driver_attach+0xa4/0xa8
    [    1.520643] bus_for_each_dev+0x58/0x98
    [    1.526204] driver_attach+0x20/0x28
    [    1.531505] bus_add_driver+0x1c8/0x22c
    [    1.537067] driver_register+0x68/0x108
    [    1.542630] i2c_register_driver+0x38/0x7c
    [    1.548457] bq27xxx_battery_i2c_driver_init+0x18/0x20
    [    1.555321] do_one_initcall+0x38/0x12c
    [    1.560886] kernel_init_freeable+0x148/0x1ec
    [    1.566972] kernel_init+0x10/0xfc
    [    1.572101] ret_from_fork+0x10/0x40
    
    Also make the same change to ps_get_max_charge_cntl_limit() and
    ps_get_cur_chrage_cntl_limit() to be safe. Lastly, change the return
    value of power_supply_get_property() to -EAGAIN from -ENODEV if
    use_cnt <= 0.
    
    Fixes: 297d716f6260 ("power_supply: Change ownership from driver to core")
    Cc: stable@vger.kernel.org
    Signed-off-by: Rhyland Klein <rklein@nvidia.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 9f67dcf663004c56aaf153835f624f9f87d9a643
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Thu Jun 9 15:20:05 2016 +0300

    kernel/sysrq, watchdog, sched/core: Reset watchdog on all CPUs while processing sysrq-w
    
    [ Upstream commit 57675cb976eff977aefb428e68e4e0236d48a9ff ]
    
    Lengthy output of sysrq-w may take a lot of time on slow serial console.
    
    Currently we reset NMI-watchdog on the current CPU to avoid spurious
    lockup messages. Sometimes this doesn't work since softlockup watchdog
    might trigger on another CPU which is waiting for an IPI to proceed.
    We reset softlockup watchdogs on all CPUs, but we do this only after
    listing all tasks, and this may be too late on a busy system.
    
    So, reset watchdogs CPUs earlier, in for_each_process_thread() loop.
    
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/1465474805-14641-1-git-send-email-aryabinin@virtuozzo.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c5ffc99b6e519420a791e942606d48fe030383d2
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Jun 11 23:06:53 2016 +0900

    kprobes/x86: Clear TF bit in fault on single-stepping
    
    [ Upstream commit dcfc47248d3f7d28df6f531e6426b933de94370d ]
    
    Fix kprobe_fault_handler() to clear the TF (trap flag) bit of
    the flags register in the case of a fault fixup on single-stepping.
    
    If we put a kprobe on the instruction which caused a
    page fault (e.g. actual mov instructions in copy_user_*),
    that fault happens on the single-stepping buffer. In this
    case, kprobes resets running instance so that the CPU can
    retry execution on the original ip address.
    
    However, current code forgets to reset the TF bit. Since this
    fault happens with TF bit set for enabling single-stepping,
    when it retries, it causes a debug exception and kprobes
    can not handle it because it already reset itself.
    
    On the most of x86-64 platform, it can be easily reproduced
    by using kprobe tracer. E.g.
    
      # cd /sys/kernel/debug/tracing
      # echo p copy_user_enhanced_fast_string+5 > kprobe_events
      # echo 1 > events/kprobes/enable
    
    And you'll see a kernel panic on do_debug(), since the debug
    trap is not handled by kprobes.
    
    To fix this problem, we just need to clear the TF bit when
    resetting running kprobe.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Acked-by: Steven Rostedt <rostedt@goodmis.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: systemtap@sourceware.org
    Cc: stable@vger.kernel.org # All the way back to ancient kernels
    Link: http://lkml.kernel.org/r/20160611140648.25885.37482.stgit@devbox
    [ Updated the comments. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 01c93ba6d66687ff46116a46527b7d3b314e0787
Author: Michal Suchanek <hramrach@gmail.com>
Date:   Mon Jun 13 17:46:49 2016 +0000

    spi: sunxi: fix transfer timeout
    
    [ Upstream commit 719bd6542044efd9b338a53dba1bef45f40ca169 ]
    
    The trasfer timeout is fixed at 1000 ms. Reading a 4Mbyte flash over
    1MHz SPI bus takes way longer than that. Calculate the timeout from the
    actual time the transfer is supposed to take and multiply by 2 for good
    measure.
    
    Signed-off-by: Michal Suchanek <hramrach@gmail.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit fcc5d265d134e891abd67169c77358cd5ea2fc77
Author: Michal Suchanek <hramrach@gmail.com>
Date:   Mon Jun 13 17:46:49 2016 +0000

    spi: sun4i: fix FIFO limit
    
    [ Upstream commit 6d9fe44bd73d567d04d3a68a2d2fa521ab9532f2 ]
    
    When testing SPI without DMA I noticed that filling the FIFO on the
    spi controller causes timeout.
    
    Always leave room for one byte in the FIFO.
    
    Signed-off-by: Michal Suchanek <hramrach@gmail.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d1c7fc1c906d7f7ca1788a53ab67043f3094fd67
Author: James Hogan <jhogan@kernel.org>
Date:   Thu Jun 9 10:50:43 2016 +0100

    MIPS: KVM: Fix modular KVM under QEMU
    
    [ Upstream commit 797179bc4fe06c89e47a9f36f886f68640b423f8 ]
    
    Copy __kvm_mips_vcpu_run() into unmapped memory, so that we can never
    get a TLB refill exception in it when KVM is built as a module.
    
    This was observed to happen with the host MIPS kernel running under
    QEMU, due to a not entirely transparent optimisation in the QEMU TLB
    handling where TLB entries replaced with TLBWR are copied to a separate
    part of the TLB array. Code in those pages continue to be executable,
    but those mappings persist only until the next ASID switch, even if they
    are marked global.
    
    An ASID switch happens in __kvm_mips_vcpu_run() at exception level after
    switching to the guest exception base. Subsequent TLB mapped kernel
    instructions just prior to switching to the guest trigger a TLB refill
    exception, which enters the guest exception handlers without updating
    EPC. This appears as a guest triggered TLB refill on a host kernel
    mapped (host KSeg2) address, which is not handled correctly as user
    (guest) mode accesses to kernel (host) segments always generate address
    error exceptions.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: kvm@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Cc: <stable@vger.kernel.org> # 3.10.x-
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 505291afa41b4918f3edbd775210853778b7939f
Author: Oscar <oscar@naiandei.net>
Date:   Tue Jun 14 14:14:35 2016 +0800

    usb: common: otg-fsm: add license to usb-otg-fsm
    
    [ Upstream commit ea1d39a31d3b1b6060b6e83e5a29c069a124c68a ]
    
    Fix warning about tainted kernel because usb-otg-fsm has no license.
    WARNING: with this patch usb-otg-fsm module can be loaded
    but then the kernel will hang. Tested with a udoo quad board.
    
    Cc: <stable@vger.kernel.org> #v4.1+
    Signed-off-by: Oscar <oscar@naiandei.net>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d7afed774eec54eabc25de2623cda1aa8176a2bb
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Jun 13 15:37:34 2016 -0400

    drm/radeon: fix asic initialization for virtualized environments
    
    [ Upstream commit 05082b8bbd1a0ffc74235449c4b8930a8c240f85 ]
    
    When executing in a PCI passthrough based virtuzliation environment, the
    hypervisor will usually attempt to send a PCIe bus reset signal to the
    ASIC when the VM reboots. In this scenario, the card is not correctly
    initialized, but we still consider it to be posted. Therefore, in a
    passthrough based environemnt we should always post the card to guarantee
    it is in a good state for driver initialization.
    
    Ported from amdgpu commit:
    amdgpu: fix asic initialization for virtualized environments
    
    Cc: Andres Rodriguez <andres.rodriguez@amd.com>
    Cc: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7ac3a704d7dd6c0b8a72048ee66523f190afda8d
Author: Junichi Nomura <j-nomura@ce.jp.nec.com>
Date:   Fri Jun 10 04:31:52 2016 +0000

    ipmi: Remove smi_msg from waiting_rcv_msgs list before handle_one_recv_msg()
    
    [ Upstream commit ae4ea9a2460c7fee2ae8feeb4dfe96f5f6c3e562 ]
    
    Commit 7ea0ed2b5be8 ("ipmi: Make the message handler easier to use for
    SMI interfaces") changed handle_new_recv_msgs() to call handle_one_recv_msg()
    for a smi_msg while the smi_msg is still connected to waiting_rcv_msgs list.
    That could lead to following list corruption problems:
    
    1) low-level function treats smi_msg as not connected to list
    
      handle_one_recv_msg() could end up calling smi_send(), which
      assumes the msg is not connected to list.
    
      For example, the following sequence could corrupt list by
      doing list_add_tail() for the entry still connected to other list.
    
        handle_new_recv_msgs()
          msg = list_entry(waiting_rcv_msgs)
          handle_one_recv_msg(msg)
            handle_ipmb_get_msg_cmd(msg)
              smi_send(msg)
                spin_lock(xmit_msgs_lock)
                list_add_tail(msg)
                spin_unlock(xmit_msgs_lock)
    
    2) race between multiple handle_new_recv_msgs() instances
    
      handle_new_recv_msgs() once releases waiting_rcv_msgs_lock before calling
      handle_one_recv_msg() then retakes the lock and list_del() it.
    
      If others call handle_new_recv_msgs() during the window shown below
      list_del() will be done twice for the same smi_msg.
    
      handle_new_recv_msgs()
        spin_lock(waiting_rcv_msgs_lock)
        msg = list_entry(waiting_rcv_msgs)
        spin_unlock(waiting_rcv_msgs_lock)
      |
      | handle_one_recv_msg(msg)
      |
        spin_lock(waiting_rcv_msgs_lock)
        list_del(msg)
        spin_unlock(waiting_rcv_msgs_lock)
    
    Fixes: 7ea0ed2b5be8 ("ipmi: Make the message handler easier to use for SMI interfaces")
    Signed-off-by: Jun'ichi Nomura <j-nomura@ce.jp.nec.com>
    [Added a comment to describe why this works.]
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Cc: stable@vger.kernel.org # 3.19
    Tested-by: Ye Feng <yefeng.yl@alibaba-inc.com>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 4a088cba60485acbdceee2c3f903e7b0c7846737
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Jun 8 14:56:39 2016 +0200

    crypto: ux500 - memmove the right size
    
    [ Upstream commit 19ced623db2fe91604d69f7d86b03144c5107739 ]
    
    The hash buffer is really HASH_BLOCK_SIZE bytes, someone
    must have thought that memmove takes n*u32 words by mistake.
    Tests work as good/bad as before after this patch.
    
    Cc: Joakim Bech <joakim.bech@linaro.org>
    Cc: stable@vger.kernel.org
    Reported-by: David Binderman <linuxdev.baldrick@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 9341331d504d3acd5b3ad0763bb9d23cd3b28944
Author: Anton Blanchard <anton@samba.org>
Date:   Fri Jun 10 16:47:03 2016 +1000

    crypto: vmx - Increase priority of aes-cbc cipher
    
    [ Upstream commit 12d3f49e1ffbbf8cbbb60acae5a21103c5c841ac ]
    
    All of the VMX AES ciphers (AES, AES-CBC and AES-CTR) are set at
    priority 1000. Unfortunately this means we never use AES-CBC and
    AES-CTR, because the base AES-CBC cipher that is implemented on
    top of AES inherits its priority.
    
    To fix this, AES-CBC and AES-CTR have to be a higher priority. Set
    them to 2000.
    
    Testing on a POWER8 with:
    
    cryptsetup benchmark --cipher aes --key-size 256
    
    Shows decryption speed increase from 402.4 MB/s to 3069.2 MB/s,
    over 7x faster. Thanks to Mike Strosaker for helping me debug
    this issue.
    
    Fixes: 8c755ace357c ("crypto: vmx - Adding CBC routines for VMX module")
    Cc: stable@vger.kernel.org
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 515f30350a5e240febb0b710dbb68abe1f293464
Author: Steve Capper <steve.capper@arm.com>
Date:   Tue Jun 7 17:58:06 2016 +0100

    ARM: 8579/1: mm: Fix definition of pmd_mknotpresent
    
    [ Upstream commit 56530f5d2ddc9b9fade7ef8db9cb886e9dc689b5 ]
    
    Currently pmd_mknotpresent will use a zero entry to respresent an
    invalidated pmd.
    
    Unfortunately this definition clashes with pmd_none, thus it is
    possible for a race condition to occur if zap_pmd_range sees pmd_none
    whilst __split_huge_pmd_locked is running too with pmdp_invalidate
    just called.
    
    This patch fixes the race condition by modifying pmd_mknotpresent to
    create non-zero faulting entries (as is done in other architectures),
    removing the ambiguity with pmd_none.
    
    [catalin.marinas@arm.com: using L_PMD_SECT_VALID instead of PMD_TYPE_SECT]
    
    Fixes: 8d9625070073 ("ARM: mm: Transparent huge page support for LPAE systems.")
    Cc: <stable@vger.kernel.org> # 3.11+
    Reported-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Signed-off-by: Steve Capper <steve.capper@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 017864ed4d67f66d11cf951ad8d8f497c81e915c
Author: Will Deacon <will@kernel.org>
Date:   Tue Jun 7 17:57:54 2016 +0100

    ARM: 8578/1: mm: ensure pmd_present only checks the valid bit
    
    [ Upstream commit 624531886987f0f1b5d01fb598034d039198e090 ]
    
    In a subsequent patch, pmd_mknotpresent will clear the valid bit of the
    pmd entry, resulting in a not-present entry from the hardware's
    perspective. Unfortunately, pmd_present simply checks for a non-zero pmd
    value and will therefore continue to return true even after a
    pmd_mknotpresent operation. Since pmd_mknotpresent is only used for
    managing huge entries, this is only an issue for the 3-level case.
    
    This patch fixes the 3-level pmd_present implementation to take into
    account the valid bit. For bisectability, the change is made before the
    fix to pmd_mknotpresent.
    
    [catalin.marinas@arm.com: comment update regarding pmd_mknotpresent patch]
    
    Fixes: 8d9625070073 ("ARM: mm: Transparent huge page support for LPAE systems.")
    Cc: <stable@vger.kernel.org> # 3.11+
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Steve Capper <Steve.Capper@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit bcef1c817adc16f798ff75e7910ab8b3361b85c8
Author: Wei Fang <fangwei1@huawei.com>
Date:   Tue Jun 7 14:53:56 2016 +0800

    scsi: fix race between simultaneous decrements of ->host_failed
    
    [ Upstream commit 72d8c36ec364c82bf1bf0c64dfa1041cfaf139f7 ]
    
    sas_ata_strategy_handler() adds the works of the ata error handler to
    system_unbound_wq. This workqueue asynchronously runs work items, so the
    ata error handler will be performed concurrently on different CPUs. In
    this case, ->host_failed will be decreased simultaneously in
    scsi_eh_finish_cmd() on different CPUs, and become abnormal.
    
    It will lead to permanently inequality between ->host_failed and
    ->host_busy, and scsi error handler thread won't start running. IO
    errors after that won't be handled.
    
    Since all scmds must have been handled in the strategy handler, just
    remove the decrement in scsi_eh_finish_cmd() and zero ->host_busy after
    the strategy handler to fix this race.
    
    Fixes: 50824d6c5657 ("[SCSI] libsas: async ata-eh")
    Cc: stable@vger.kernel.org
    Signed-off-by: Wei Fang <fangwei1@huawei.com>
    Reviewed-by: James Bottomley <jejb@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e342d574a6ce550e14ae1def0eaf2c7cbdc3d991
Author: Thierry Reding <treding@nvidia.com>
Date:   Thu May 26 17:23:29 2016 +0200

    usb: host: ehci-tegra: Grab the correct UTMI pads reset
    
    [ Upstream commit f8a15a9650694feaa0dabf197b0c94d37cd3fb42 ]
    
    There are three EHCI controllers on Tegra SoCs, each with its own reset
    line. However, the first controller contains a set of UTMI configuration
    registers that are shared with its siblings. These registers will only
    be reset as part of the first controller's reset. For proper operation
    it must be ensured that the UTMI configuration registers are reset
    before any of the EHCI controllers are enabled, irrespective of the
    probe order.
    
    Commit a47cc24cd1e5 ("USB: EHCI: tegra: Fix probe order issue leading to
    broken USB") introduced code that ensures the first controller is always
    reset before setting up any of the controllers, and is never again reset
    afterwards.
    
    This code, however, grabs the wrong reset. Each EHCI controller has two
    reset controls attached: 1) the USB controller reset and 2) the UTMI
    pads reset (really the first controller's reset). In order to reset the
    UTMI pads registers the code must grab the second reset, but instead it
    grabbing the first.
    
    Fixes: a47cc24cd1e5 ("USB: EHCI: tegra: Fix probe order issue leading to broken USB")
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 5cf1329f2004c34966fd4de2bdba14b470c1895f
Author: Andrew Goodbody <andrew.goodbody@cambrionix.com>
Date:   Tue May 31 10:05:27 2016 -0500

    usb: musb: Stop bulk endpoint while queue is rotated
    
    [ Upstream commit 7b2c17f829545df27a910e8d82e133c21c9a8c9c ]
    
    Ensure that the endpoint is stopped by clearing REQPKT before
    clearing DATAERR_NAKTIMEOUT before rotating the queue on the
    dedicated bulk endpoint.
    This addresses an issue where a race could result in the endpoint
    receiving data before it was reprogrammed resulting in a warning
    about such data from musb_rx_reinit before it was thrown away.
    The data thrown away was a valid packet that had been correctly
    ACKed which meant the host and device got out of sync.
    
    Signed-off-by: Andrew Goodbody <andrew.goodbody@cambrionix.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit ffb84c1774409125134fe0eebd5fd4da82993f22
Author: Andrew Goodbody <andrew.goodbody@cambrionix.com>
Date:   Tue May 31 10:05:26 2016 -0500

    usb: musb: Ensure rx reinit occurs for shared_fifo endpoints
    
    [ Upstream commit f3eec0cf784e0d6c47822ca6b66df3d5812af7e6 ]
    
    shared_fifo endpoints would only get a previous tx state cleared
    out, the rx state was only cleared for non shared_fifo endpoints
    Change this so that the rx state is cleared for all endpoints.
    This addresses an issue that resulted in rx packets being dropped
    silently.
    
    Signed-off-by: Andrew Goodbody <andrew.goodbody@cambrionix.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 95cb83b7af2bf9d7a466b51427966eba42333977
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jun 1 21:01:29 2016 +0200

    USB: xhci: Add broken streams quirk for Frescologic device id 1009
    
    [ Upstream commit d95815ba6a0f287213118c136e64d8c56daeaeab ]
    
    I got one of these cards for testing uas with, it seems that with streams
    it dma-s all over the place, corrupting memory. On my first tests it
    managed to dma over the BIOS of the motherboard somehow and completely
    bricked it.
    
    Tests on another motherboard show that it does work with streams disabled.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 378cd9e7d03774e60d58ad8fcbd67fd226234d40
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu May 19 17:12:20 2016 +0200

    usb: quirks: Add no-lpm quirk for Acer C120 LED Projector
    
    [ Upstream commit 32cb0b37098f4beeff5ad9e325f11b42a6ede56c ]
    
    The Acer C120 LED Projector is a USB-3 connected pico projector which
    takes both its power and video data from USB-3.
    
    In combination with some hubs this device does not play well with
    lpm, so disable lpm for it.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 7d2831a8cd331f8d8d214b2a78a217a4ee1b5138
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu May 19 17:12:19 2016 +0200

    usb: quirks: Fix sorting
    
    [ Upstream commit 81099f97bd31e25ff2719a435b1860fc3876122f ]
    
    Properly sort all the entries by vendor id.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 0c3f25d8c6aa0ff475a86cd5d3b7e2c7b6eb496f
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Wed Jun 1 18:09:09 2016 +0300

    usb: xhci-plat: properly handle probe deferral for devm_clk_get()
    
    [ Upstream commit de95c40d5beaa47f6dc8fe9ac4159b4672b51523 ]
    
    On some platforms, the clocks might be registered by a platform
    driver. When this is the case, the clock platform driver may very well
    be probed after xhci-plat, in which case the first probe() invocation
    of xhci-plat will receive -EPROBE_DEFER as the return value of
    devm_clk_get().
    
    The current code handles that as a normal error, and simply assumes
    that this means that the system doesn't have a clock for the XHCI
    controller, and continues probing without calling
    clk_prepare_enable(). Unfortunately, this doesn't work on systems
    where the XHCI controller does have a clock, but that clock is
    provided by another platform driver. In order to fix this situation,
    we handle the -EPROBE_DEFER error condition specially, and abort the
    XHCI controller probe(). It will be retried later automatically, the
    clock will be available, devm_clk_get() will succeed, and the probe()
    will continue with the clock prepared and enabled as expected.
    
    In practice, such issue is seen on the ARM64 Marvell 7K/8K platform,
    where the clocks are registered by a platform driver.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit e78c8a575fd956a4e8a04125c50c23264e012e8e
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed Jun 1 18:09:08 2016 +0300

    xhci: Fix handling timeouted commands on hosts in weird states.
    
    [ Upstream commit 3425aa03f484d45dc21e0e791c2f6c74ea656421 ]
    
    If commands timeout we mark them for abortion, then stop the command
    ring, and turn the commands to no-ops and finally restart the command
    ring.
    
    If the host is working properly the no-op commands will finish and
    pending completions are called.
    If we notice the host is failing, driver clears the command ring and
    completes, deletes and frees all pending commands.
    
    There are two separate cases reported where host is believed to work
    properly but is not. In the first case we successfully stop the ring
    but no abort or stop command ring event is ever sent and host locks up.
    
    The second case is if a host is removed, command times out and driver
    believes the ring is stopped, and assumes it will be restarted, but
    actually ends up timing out on the same command forever.
    If one of the pending commands has the xhci->mutex held it will block
    xhci_stop() in the remove codepath which otherwise would cleanup pending
    commands.
    
    Add a check that clears all pending commands in case host is removed,
    or we are stuck timing out on the same command. Also restart the
    command timeout timer when stopping the command ring to ensure we
    recive an ring stop/abort event.
    
    Cc: stable <stable@vger.kernel.org>
    Tested-by: Joe Lawrence <joe.lawrence@stratus.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit b71d1794461e3be4e193b76a04132ac55afd5ae1
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue May 31 14:48:15 2016 +0200

    HID: elo: kill not flush the work
    
    [ Upstream commit ed596a4a88bd161f868ccba078557ee7ede8a6ef ]
    
    Flushing a work that reschedules itself is not a sensible operation. It needs
    to be killed. Failure to do so leads to a kernel panic in the timer code.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 1aaee5de33d2b615b35afd77cdc6002da8919f0d
Author: Bin Liu <b-liu@ti.com>
Date:   Thu May 26 11:43:45 2016 -0500

    usb: gadget: fix spinlock dead lock in gadgetfs
    
    [ Upstream commit d246dcb2331c5783743720e6510892eb1d2801d9 ]
    
    [   40.467381] =============================================
    [   40.473013] [ INFO: possible recursive locking detected ]
    [   40.478651] 4.6.0-08691-g7f3db9a #37 Not tainted
    [   40.483466] ---------------------------------------------
    [   40.489098] usb/733 is trying to acquire lock:
    [   40.493734]  (&(&dev->lock)->rlock){-.....}, at: [<bf129288>] ep0_complete+0x18/0xdc [gadgetfs]
    [   40.502882]
    [   40.502882] but task is already holding lock:
    [   40.508967]  (&(&dev->lock)->rlock){-.....}, at: [<bf12a420>] ep0_read+0x20/0x5e0 [gadgetfs]
    [   40.517811]
    [   40.517811] other info that might help us debug this:
    [   40.524623]  Possible unsafe locking scenario:
    [   40.524623]
    [   40.530798]        CPU0
    [   40.533346]        ----
    [   40.535894]   lock(&(&dev->lock)->rlock);
    [   40.540088]   lock(&(&dev->lock)->rlock);
    [   40.544284]
    [   40.544284]  *** DEADLOCK ***
    [   40.544284]
    [   40.550461]  May be due to missing lock nesting notation
    [   40.550461]
    [   40.557544] 2 locks held by usb/733:
    [   40.561271]  #0:  (&f->f_pos_lock){+.+.+.}, at: [<c02a6114>] __fdget_pos+0x40/0x48
    [   40.569219]  #1:  (&(&dev->lock)->rlock){-.....}, at: [<bf12a420>] ep0_read+0x20/0x5e0 [gadgetfs]
    [   40.578523]
    [   40.578523] stack backtrace:
    [   40.583075] CPU: 0 PID: 733 Comm: usb Not tainted 4.6.0-08691-g7f3db9a #37
    [   40.590246] Hardware name: Generic AM33XX (Flattened Device Tree)
    [   40.596625] [<c010ffbc>] (unwind_backtrace) from [<c010c1bc>] (show_stack+0x10/0x14)
    [   40.604718] [<c010c1bc>] (show_stack) from [<c04207fc>] (dump_stack+0xb0/0xe4)
    [   40.612267] [<c04207fc>] (dump_stack) from [<c01886ec>] (__lock_acquire+0xf68/0x1994)
    [   40.620440] [<c01886ec>] (__lock_acquire) from [<c0189528>] (lock_acquire+0xd8/0x238)
    [   40.628621] [<c0189528>] (lock_acquire) from [<c06ad6b4>] (_raw_spin_lock_irqsave+0x38/0x4c)
    [   40.637440] [<c06ad6b4>] (_raw_spin_lock_irqsave) from [<bf129288>] (ep0_complete+0x18/0xdc [gadgetfs])
    [   40.647339] [<bf129288>] (ep0_complete [gadgetfs]) from [<bf10a728>] (musb_g_giveback+0x118/0x1b0 [musb_hdrc])
    [   40.657842] [<bf10a728>] (musb_g_giveback [musb_hdrc]) from [<bf108768>] (musb_g_ep0_queue+0x16c/0x188 [musb_hdrc])
    [   40.668772] [<bf108768>] (musb_g_ep0_queue [musb_hdrc]) from [<bf12a944>] (ep0_read+0x544/0x5e0 [gadgetfs])
    [   40.678963] [<bf12a944>] (ep0_read [gadgetfs]) from [<c0284470>] (__vfs_read+0x20/0x110)
    [   40.687414] [<c0284470>] (__vfs_read) from [<c0285324>] (vfs_read+0x88/0x114)
    [   40.694864] [<c0285324>] (vfs_read) from [<c0286150>] (SyS_read+0x44/0x9c)
    [   40.702051] [<c0286150>] (SyS_read) from [<c0107820>] (ret_fast_syscall+0x0/0x1c)
    
    This is caused by the spinlock bug in ep0_read().
    Fix the two other deadlock sources in gadgetfs_setup() too.
    
    Cc: <stable@vger.kernel.org> # v3.16+
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit a56c72fc0cda3382a339172a35c76cea10df72ad
Author: Steinar H. Gunderson <sesse@google.com>
Date:   Tue May 24 20:13:15 2016 +0200

    usb: dwc3: exynos: Fix deferred probing storm.
    
    [ Upstream commit 4879efb34f7d49235fac334d76d9c6a77a021413 ]
    
    dwc3-exynos has two problems during init if the regulators are slow
    to come up (for instance if the I2C bus driver is not on the initramfs)
    and return probe deferral. First, every time this happens, the driver
    leaks the USB phys created; they need to be deallocated on error.
    
    Second, since the phy devices are created before the regulators fail,
    this means that there's a new device to re-trigger deferred probing,
    which causes it to essentially go into a busy loop of re-probing the
    device until the regulators come up.
    
    Move the phy creation to after the regulators have succeeded, and also
    fix cleanup on failure. On my ODROID XU4 system (with Debian's initramfs
    which doesn't contain the I2C driver), this reduces the number of probe
    attempts (for each of the two controllers) from more than 2000 to eight.
    
    Signed-off-by: Steinar H. Gunderson <sesse@google.com>
    Reviewed-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Reviewed-by: Vivek Gautam <gautam.vivek@samsung.com>
    Fixes: d720f057fda4 ("usb: dwc3: exynos: add nop transceiver support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 01a129f8a323fc3c393a4d55851f5c671f4c9a4e
Author: Heiko Stuebner <heiko@sntech.de>
Date:   Tue May 17 20:57:50 2016 +0200

    clk: rockchip: initialize flags of clk_init_data in mmc-phase clock
    
    [ Upstream commit 595144c1141c951a3c6bb9004ae6a2bc29aad66f ]
    
    The flags element of clk_init_data was never initialized for mmc-
    phase-clocks resulting in the element containing a random value
    and thus possibly enabling unwanted clock flags.
    
    Fixes: 89bf26cbc1a0 ("clk: rockchip: Add support for the mmc clock phases using the framework")
    Cc: stable@vger.kernel.org
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 039f59796079951d6e0ffb40d7882b5597e5e16c
Author: Ludovic Desroches <ludovic.desroches@atmel.com>
Date:   Thu May 12 16:54:10 2016 +0200

    dmaengine: at_xdmac: double FIFO flush needed to compute residue
    
    [ Upstream commit 9295c41d77ca93aac79cfca6fa09fa1ca5cab66f ]
    
    Due to the way CUBC register is updated, a double flush is needed to
    compute an accurate residue. First flush aim is to get data from the DMA
    FIFO and second one ensures that we won't report data which are not in
    memory.
    
    Signed-off-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel
    eXtended DMA Controller driver")
    Cc: stable@vger.kernel.org #v4.1 and later
    Reviewed-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6d8fde793d0efbf1e48bca89ee261c18ddafea84
Author: Ludovic Desroches <ludovic.desroches@atmel.com>
Date:   Thu May 12 16:54:09 2016 +0200

    dmaengine: at_xdmac: fix residue corruption
    
    [ Upstream commit 53398f488821c2b5b15291e3debec6ad33f75d3d ]
    
    An unexpected value of CUBC can lead to a corrupted residue. A more
    complex sequence is needed to detect an inaccurate value for NCA or CUBC.
    
    Signed-off-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel
    eXtended DMA Controller driver")
    Cc: stable@vger.kernel.org #v4.1 and later
    Reviewed-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit c6ec15d8965d03a604bdcfde28a5c506b9de7043
Author: Ludovic Desroches <ludovic.desroches@atmel.com>
Date:   Thu May 12 16:54:08 2016 +0200

    dmaengine: at_xdmac: align descriptors on 64 bits
    
    [ Upstream commit 4a9723e8df68cfce4048517ee32e37f78854b6fb ]
    
    Having descriptors aligned on 64 bits allows update CNDA and CUBC in an
    atomic way.
    
    Signed-off-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel
    eXtended DMA Controller driver")
    Cc: stable@vger.kernel.org #v4.1 and later
    Reviewed-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 6ef304587cf41e19312fa9fd81448ea6880ad475
Author: Wenwei Tao <ww.tao0320@gmail.com>
Date:   Fri May 13 22:59:20 2016 +0800

    cgroup: remove redundant cleanup in css_create
    
    [ Upstream commit b00c52dae6d9ee8d0f2407118ef6544ae5524781 ]
    
    When create css failed, before call css_free_rcu_fn, we remove the css
    id and exit the percpu_ref, but we will do these again in
    css_free_work_fn, so they are redundant.  Especially the css id, that
    would cause problem if we remove it twice, since it may be assigned to
    another css after the first remove.
    
    tj: This was broken by two commits updating the free path without
        synchronizing the creation failure path.  This can be easily
        triggered by trying to create more than 64k memory cgroups.
    
    Signed-off-by: Wenwei Tao <ww.tao0320@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Vladimir Davydov <vdavydov@parallels.com>
    Fixes: 9a1049da9bd2 ("percpu-refcount: require percpu_ref to be exited explicitly")
    Fixes: 01e586598b22 ("cgroup: release css->id after css_free")
    Cc: stable@vger.kernel.org # v3.17+
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 62f7175fa64005be2e090618da5a20f87752704d
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 25 11:48:25 2016 -0400

    percpu: fix synchronization between synchronous map extension and chunk destruction
    
    [ Upstream commit 6710e594f71ccaad8101bc64321152af7cd9ea28 ]
    
    For non-atomic allocations, pcpu_alloc() can try to extend the area
    map synchronously after dropping pcpu_lock; however, the extension
    wasn't synchronized against chunk destruction and the chunk might get
    freed while extension is in progress.
    
    This patch fixes the bug by putting most of non-atomic allocations
    under pcpu_alloc_mutex to synchronize against pcpu_balance_work which
    is responsible for async chunk management including destruction.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-and-tested-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: stable@vger.kernel.org # v3.18+
    Fixes: 1a4d76076cda ("percpu: implement asynchronous chunk population")
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit d273823dc63bb51e3adc11e0f7c324d86e2d2009
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 25 11:48:25 2016 -0400

    percpu: fix synchronization between chunk->map_extend_work and chunk destruction
    
    [ Upstream commit 4f996e234dad488e5d9ba0858bc1bae12eff82c3 ]
    
    Atomic allocations can trigger async map extensions which is serviced
    by chunk->map_extend_work.  pcpu_balance_work which is responsible for
    destroying idle chunks wasn't synchronizing properly against
    chunk->map_extend_work and may end up freeing the chunk while the work
    item is still in flight.
    
    This patch fixes the bug by rolling async map extension operations
    into pcpu_balance_work.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-and-tested-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: stable@vger.kernel.org # v3.18+
    Fixes: 9c824b6a172c ("percpu: make sure chunk->map array has available space")
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>

commit 272d474fc6e9e4362c69df4b77adc0008b53b4ad
Author: Rainer Weikusat <rweikusat@mobileactivedefense.com>
Date:   Sun Jan 3 18:56:38 2016 +0000

    af_unix: Fix splice-bind deadlock
    
    [ Upstream commit c845acb324aa85a39650a14e7696982ceea75dc1 ]
    
    On 2015/11/06, Dmitry Vyukov reported a deadlock involving the splice
    system call and AF_UNIX sockets,
    
    http://lists.openwall.net/netdev/2015/11/06/24
    
    The situation was analyzed as
    
    (a while ago) A: socketpair()
    B: splice() from a pipe to /mnt/regular_file
            does sb_start_write() on /mnt
    C: try to freeze /mnt
            wait for B to finish with /mnt
    A: bind() try to bind our socket to /mnt/new_socket_name
            lock our socket, see it not bound yet
            decide that it needs to create something in /mnt
            try to do sb_start_write() on /mnt, block (it's
            waiting for C).
    D: splice() from the same pipe to our socket
            lock the pipe, see that socket is connected
            try to lock the socket, block waiting for A
    B:      get around to actually feeding a chunk from
            pipe to file, try to lock the pipe.  Deadlock.
    
    on 2015/11/10 by Al Viro,
    
    http://lists.openwall.net/netdev/2015/11/10/4
    
    The patch fixes this by removing the kern_path_create related code from
    unix_mknod and executing it as part of unix_bind prior acquiring the
    readlock of the socket in question. This means that A (as used above)
    will sb_start_write on /mnt before it acquires the readlock, hence, it
    won't indirectly block B which first did a sb_start_write and then
    waited for a thread trying to acquire the readlock. Consequently, A
    being blocked by C waiting for B won't cause a deadlock anymore
    (effectively, both A and B acquire two locks in opposite order in the
    situation described above).
    
    Dmitry Vyukov(<dvyukov@google.com>) tested the original patch.
    
    Signed-off-by: Rainer Weikusat <rweikusat@mobileactivedefense.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
