commit f422a02f865a93f9d3db0d8f2de08aab455fd1dc
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Mar 5 17:57:07 2019 +0100

    Linux 4.9.162

commit dd15ae3ccc12f4435d77d735c6a5676e9ff0be3d
Author: Andy Lutomirski <luto@kernel.org>
Date:   Fri Feb 22 17:17:04 2019 -0800

    x86/uaccess: Don't leak the AC flag into __put_user() value evaluation
    
    commit 2a418cf3f5f1caf911af288e978d61c9844b0695 upstream.
    
    When calling __put_user(foo(), ptr), the __put_user() macro would call
    foo() in between __uaccess_begin() and __uaccess_end().  If that code
    were buggy, then those bugs would be run without SMAP protection.
    
    Fortunately, there seem to be few instances of the problem in the
    kernel. Nevertheless, __put_user() should be fixed to avoid doing this.
    Therefore, evaluate __put_user()'s argument before setting AC.
    
    This issue was noticed when an objtool hack by Peter Zijlstra complained
    about genregs_get() and I compared the assembly output to the C source.
    
     [ bp: Massage commit message and fixed up whitespace. ]
    
    Fixes: 11f1a4b9755f ("x86: reorganize SMAP handling in user space accesses")
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20190225125231.845656645@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 331fc4df776be3e5a88a1a9f08ef2f7e063ef1a9
Author: Jann Horn <jannh@google.com>
Date:   Wed Feb 27 21:29:52 2019 +0100

    mm: enforce min addr even if capable() in expand_downwards()
    
    commit 0a1d52994d440e21def1c2174932410b4f2a98a1 upstream.
    
    security_mmap_addr() does a capability check with current_cred(), but
    we can reach this code from contexts like a VFS write handler where
    current_cred() must not be used.
    
    This can be abused on systems without SMAP to make NULL pointer
    dereferences exploitable again.
    
    Fixes: 8869477a49c3 ("security: protect from stack expansion into low vm addresses")
    Cc: stable@kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b97476e18f75ef6c71a5a9c7cae4fb2dac6245bb
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Sun Feb 10 18:31:07 2019 +0100

    mmc: spi: Fix card detection during probe
    
    commit c9bd505dbd9d3dc80c496f88eafe70affdcf1ba6 upstream.
    
    When using the mmc_spi driver with a card-detect pin, I noticed that the
    card was not detected immediately after probe, but only after it was
    unplugged and plugged back in (and the CD IRQ fired).
    
    The call tree looks something like this:
    
    mmc_spi_probe
      mmc_add_host
        mmc_start_host
          _mmc_detect_change
            mmc_schedule_delayed_work(&host->detect, 0)
              mmc_rescan
                host->bus_ops->detect(host)
                  mmc_detect
                    _mmc_detect_card_removed
                      host->ops->get_cd(host)
                        mmc_gpio_get_cd -> -ENOSYS (ctx->cd_gpio not set)
      mmc_gpiod_request_cd
        ctx->cd_gpio = desc
    
    To fix this issue, call mmc_detect_change after the card-detect GPIO/IRQ
    is registered.
    
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d681c246bf5f8e9d19c962f1fbcc3595fe129816
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Thu Sep 28 09:33:39 2017 -0400

    powerpc: Always initialize input array when calling epapr_hypercall()
    
    commit 186b8f1587c79c2fa04bfa392fdf084443e398c1 upstream.
    
    Several callers to epapr_hypercall() pass an uninitialized stack
    allocated array for the input arguments, presumably because they
    have no input arguments. However this can produce errors like
    this one
    
     arch/powerpc/include/asm/epapr_hcalls.h:470:42: error: 'in' may be used uninitialized in this function [-Werror=maybe-uninitialized]
      unsigned long register r3 asm("r3") = in[0];
                                            ~~^~~
    
    Fix callers to this function to always zero-initialize the input
    arguments array to prevent this.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: "A. Wilcox" <awilfox@adelielinux.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c0d76ee79e30abd2e6d0a8d9690e8f3c895f8ed
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Mon Jan 7 19:44:51 2019 +0100

    KVM: nSVM: clear events pending from svm_complete_interrupts() when exiting to L1
    
    [ Upstream commit 619ad846fc3452adaf71ca246c5aa711e2055398 ]
    
    kvm-unit-tests' eventinj "NMI failing on IDT" test results in NMI being
    delivered to the host (L1) when it's running nested. The problem seems to
    be: svm_complete_interrupts() raises 'nmi_injected' flag but later we
    decide to reflect EXIT_NPF to L1. The flag remains pending and we do NMI
    injection upon entry so it got delivered to L1 instead of L2.
    
    It seems that VMX code solves the same issue in prepare_vmcs12(), this was
    introduced with code refactoring in commit 5f3d5799974b ("KVM: nVMX: Rework
    event injection and recovery").
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5118fea067cec7d148d102a4905cfded4e33e7a
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Tue Jan 22 10:25:13 2019 +0000

    svm: Fix AVIC incomplete IPI emulation
    
    [ Upstream commit bb218fbcfaaa3b115d4cd7a43c0ca164f3a96e57 ]
    
    In case of incomplete IPI with invalid interrupt type, the current
    SVM driver does not properly emulate the IPI, and fails to boot
    FreeBSD guests with multiple vcpus when enabling AVIC.
    
    Fix this by update APIC ICR high/low registers, which also
    emulate sending the IPI.
    
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8933dbb085f684a60fd59cdf6cdc9a5a7dffc617
Author: Chaitanya Tata <chaitanya.tata@bluwirelesstechnology.com>
Date:   Sat Jan 19 03:17:47 2019 +0530

    cfg80211: extend range deviation for DMG
    
    [ Upstream commit 93183bdbe73bbdd03e9566c8dc37c9d06b0d0db6 ]
    
    Recently, DMG frequency bands have been extended till 71GHz, so extend
    the range check till 20GHz (45-71GHZ), else some channels will be marked
    as disabled.
    
    Signed-off-by: Chaitanya Tata <Chaitanya.Tata@bluwireless.co.uk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b8acf2b6a2d7b2671b5bf55cb9fa6afdf8bf957
Author: Mathieu Malaterre <malat@debian.org>
Date:   Thu Jan 24 19:19:57 2019 +0100

    mac80211: Add attribute aligned(2) to struct 'action'
    
    [ Upstream commit 7c53eb5d87bc21464da4268c3c0c47457b6d9c9b ]
    
    During refactor in commit 9e478066eae4 ("mac80211: fix MU-MIMO
    follow-MAC mode") a new struct 'action' was declared with packed
    attribute as:
    
      struct {
              struct ieee80211_hdr_3addr hdr;
              u8 category;
              u8 action_code;
      } __packed action;
    
    But since struct 'ieee80211_hdr_3addr' is declared with an aligned
    keyword as:
    
      struct ieee80211_hdr {
            __le16 frame_control;
            __le16 duration_id;
            u8 addr1[ETH_ALEN];
            u8 addr2[ETH_ALEN];
            u8 addr3[ETH_ALEN];
            __le16 seq_ctrl;
            u8 addr4[ETH_ALEN];
      } __packed __aligned(2);
    
    Solve the ambiguity of placing aligned structure in a packed one by
    adding the aligned(2) attribute to struct 'action'.
    
    This removes the following warning (W=1):
    
      net/mac80211/rx.c:234:2: warning: alignment 1 of 'struct <anonymous>' is less than 2 [-Wpacked-not-aligned]
    
    Cc: Johannes Berg <johannes.berg@intel.com>
    Suggested-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee3ba745a68d850df3a9aa2fce71068e54a5fa8b
Author: Balaji Pothunoori <bpothuno@codeaurora.org>
Date:   Mon Jan 21 12:30:43 2019 +0530

    mac80211: don't initiate TDLS connection if station is not associated to AP
    
    [ Upstream commit 7ed5285396c257fd4070b1e29e7b2341aae2a1ce ]
    
    Following call trace is observed while adding TDLS peer entry in driver
    during TDLS setup.
    
    Call Trace:
    [<c1301476>] dump_stack+0x47/0x61
    [<c10537d2>] __warn+0xe2/0x100
    [<fa22415f>] ? sta_apply_parameters+0x49f/0x550 [mac80211]
    [<c1053895>] warn_slowpath_null+0x25/0x30
    [<fa22415f>] sta_apply_parameters+0x49f/0x550 [mac80211]
    [<fa20ad42>] ? sta_info_alloc+0x1c2/0x450 [mac80211]
    [<fa224623>] ieee80211_add_station+0xe3/0x160 [mac80211]
    [<c1876fe3>] nl80211_new_station+0x273/0x420
    [<c170f6d9>] genl_rcv_msg+0x219/0x3c0
    [<c170f4c0>] ? genl_rcv+0x30/0x30
    [<c170ee7e>] netlink_rcv_skb+0x8e/0xb0
    [<c170f4ac>] genl_rcv+0x1c/0x30
    [<c170e8aa>] netlink_unicast+0x13a/0x1d0
    [<c170ec18>] netlink_sendmsg+0x2d8/0x390
    [<c16c5acd>] sock_sendmsg+0x2d/0x40
    [<c16c6369>] ___sys_sendmsg+0x1d9/0x1e0
    
    Fixing this by allowing TDLS setup request only when we have completed
    association.
    
    Signed-off-by: Balaji Pothunoori <bpothuno@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f56ab29a48f5fc088df390e99325bfcb6e12b0f5
Author: Thomas Falcon <tlfalcon@linux.ibm.com>
Date:   Thu Jan 24 11:17:01 2019 -0600

    ibmveth: Do not process frames after calling napi_reschedule
    
    [ Upstream commit e95d22c69b2c130ccce257b84daf283fd82d611e ]
    
    The IBM virtual ethernet driver's polling function continues
    to process frames after rescheduling NAPI, resulting in a warning
    if it exhausted its budget. Do not restart polling after calling
    napi_reschedule. Instead let frames be processed in the following
    instance.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa30a23499efc1ce7df8390b746bc5b44e763cd7
Author: Zhang Run <zhang.run@zte.com.cn>
Date:   Thu Jan 24 13:48:49 2019 +0800

    net: usb: asix: ax88772_bind return error when hw_reset fail
    
    [ Upstream commit 6eea3527e68acc22483f4763c8682f223eb90029 ]
    
    The ax88772_bind() should return error code immediately when the PHY
    was not reset properly through ax88772a_hw_reset().
    Otherwise, The asix_get_phyid() will block when get the PHY
    Identifier from the PHYSID1 MII registers through asix_mdio_read()
    due to the PHY isn't ready. Furthermore, it will produce a lot of
    error message cause system crash.As follows:
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to write
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to send
     software reset: ffffffb9
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to write
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to enable
     software MII access
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to read
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to write
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to enable
     software MII access
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to read
     reg index 0x0000: -71
    ...
    
    Signed-off-by: Zhang Run <zhang.run@zte.com.cn>
    Reviewed-by: Yang Wei <yang.wei9@zte.com.cn>
    Tested-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18b37b6b4250f76108cd4a50249887410cabbb63
Author: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
Date:   Mon Jan 21 17:26:41 2019 +0900

    net: altera_tse: fix connect_local_phy error path
    
    [ Upstream commit 17b42a20d7ca59377788c6a2409e77569570cc10 ]
    
    The connect_local_phy should return NULL (not negative errno) on
    error, since its caller expects it.
    
    Signed-off-by: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
    Acked-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7d012ec2a0d65490fd33e216aad73604adc3d36
Author: Varun Prakash <varun@chelsio.com>
Date:   Sat Jan 12 22:14:30 2019 +0530

    scsi: csiostor: fix NULL pointer dereference in csio_vport_set_state()
    
    [ Upstream commit fe35a40e675473eb65f2f5462b82770f324b5689 ]
    
    Assign fc_vport to ln->fc_vport before calling csio_fcoe_alloc_vnp() to
    avoid a NULL pointer dereference in csio_vport_set_state().
    
    ln->fc_vport is dereferenced in csio_vport_set_state().
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93ab28b29c5719486056b4d1bddadd22be4286fa
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Mon Oct 8 20:58:23 2018 -0300

    direct-io: allow direct writes to empty inodes
    
    [ Upstream commit 8b9433eb4de3c26a9226c981c283f9f4896ae030 ]
    
    On a DIO_SKIP_HOLES filesystem, the ->get_block() method is currently
    not allowed to create blocks for an empty inode.  This confusion comes
    from trying to bit shift a negative number, so check the size of the
    inode first.
    
    The problem is most visible for hfsplus, because the fallback to
    buffered I/O doesn't happen and the write fails with EIO.  This is in
    part the fault of the module, because it gives a wrong return value on
    ->get_block(); that will be fixed in a separate patch.
    
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b7d22eb15d1052de3047c4a4f89df93410a155b
Author: Tomonori Sakita <tomonori.sakita@sord.co.jp>
Date:   Mon Jan 21 17:34:16 2019 +0900

    serial: fsl_lpuart: fix maximum acceptable baud rate with over-sampling
    
    [ Upstream commit 815d835b7ba46685c316b000013367dacb2b461b ]
    
    Using over-sampling ratio, lpuart can accept baud rate upto uartclk / 4.
    
    Signed-off-by: Tomonori Sakita <tomonori.sakita@sord.co.jp>
    Signed-off-by: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4df4582231712fb03e03ce763bcaae188163fd7
Author: Xie Yongji <xieyongji@baidu.com>
Date:   Thu Nov 29 20:50:30 2018 +0800

    locking/rwsem: Fix (possible) missed wakeup
    
    [ Upstream commit e158488be27b157802753a59b336142dc0eb0380 ]
    
    Because wake_q_add() can imply an immediate wakeup (cmpxchg failure
    case), we must not rely on the wakeup being delayed. However, commit:
    
      e38513905eea ("locking/rwsem: Rework zeroing reader waiter->task")
    
    relies on exactly that behaviour in that the wakeup must not happen
    until after we clear waiter->task.
    
    [ peterz: Added changelog. ]
    
    Signed-off-by: Xie Yongji <xieyongji@baidu.com>
    Signed-off-by: Zhang Yu <zhangyu31@baidu.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: e38513905eea ("locking/rwsem: Rework zeroing reader waiter->task")
    Link: https://lkml.kernel.org/r/1543495830-2644-1-git-send-email-xieyongji@baidu.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0038e4d33c938459f25253fb06f14ee1f907ce8
Author: Bob Copeland <me@bobcopeland.com>
Date:   Thu Jan 17 16:32:42 2019 -0500

    mac80211: fix miscounting of ttl-dropped frames
    
    [ Upstream commit a0dc02039a2ee54fb4ae400e0b755ed30e73e58c ]
    
    In ieee80211_rx_h_mesh_fwding, we increment the 'dropped_frames_ttl'
    counter when we decrement the ttl to zero.  For unicast frames
    destined for other hosts, we stop processing the frame at that point.
    
    For multicast frames, we do not rebroadcast it in this case, but we
    do pass the frame up the stack to process it on this STA.  That
    doesn't match the usual definition of "dropped," so don't count
    those as such.
    
    With this change, something like `ping6 -i0.2 ff02::1%mesh0` from a
    peer in a ttl=1 network no longer increments the counter rapidly.
    
    Signed-off-by: Bob Copeland <bobcopeland@fb.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 311acb0a9fafffe472c0137e6e23fe13eccef724
Author: Aaron Hill <aa1ronham@gmail.com>
Date:   Mon Dec 24 14:23:36 2018 -0500

    drivers: thermal: int340x_thermal: Fix sysfs race condition
    
    [ Upstream commit 129699bb8c7572106b5bbb2407c2daee4727ccad ]
    
    Changes since V1:
    * Use dev_info instead of printk
    * Use dev_warn instead of BUG_ON
    
    Previously, sysfs_create_group was called before all initialization had
    fully run - specifically, before pci_set_drvdata was called. Since the
    sysctl group is visible to userspace as soon as sysfs_create_group
    returns, a small window of time existed during which a process could read
    from an uninitialized/partially-initialized device.
    
    This commit moves the creation of the sysctl group to after all
    initialized is completed. This ensures that it's impossible for
    userspace to read from a sysctl file before initialization has fully
    completed.
    
    To catch any future regressions, I've added a check to ensure
    that proc_thermal_emum_mode is never PROC_THERMAL_NONE when a process
    tries to read from a sysctl file. Previously, the aforementioned race
    condition could result in the 'else' branch
    running while PROC_THERMAL_NONE was set,
    leading to a null pointer deference.
    
    Signed-off-by: Aaron Hill <aa1ronham@gmail.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad5530d0c39f1769a7e7120fc92508d7b57aa1fc
Author: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
Date:   Thu Dec 13 18:42:57 2018 +0300

    ARC: fix __ffs return value to avoid build warnings
    
    [ Upstream commit 4e868f8419cb4cb558c5d428e7ab5629cef864c7 ]
    
    |  CC      mm/nobootmem.o
    |In file included from ./include/asm-generic/bug.h:18:0,
    |                 from ./arch/arc/include/asm/bug.h:32,
    |                 from ./include/linux/bug.h:5,
    |                 from ./include/linux/mmdebug.h:5,
    |                 from ./include/linux/gfp.h:5,
    |                 from ./include/linux/slab.h:15,
    |                 from mm/nobootmem.c:14:
    |mm/nobootmem.c: In function '__free_pages_memory':
    |./include/linux/kernel.h:845:29: warning: comparison of distinct pointer types lacks a cast
    |   (!!(sizeof((typeof(x) *)1 == (typeof(y) *)1)))
    |                             ^
    |./include/linux/kernel.h:859:4: note: in expansion of macro '__typecheck'
    |   (__typecheck(x, y) && __no_side_effects(x, y))
    |    ^~~~~~~~~~~
    |./include/linux/kernel.h:869:24: note: in expansion of macro '__safe_cmp'
    |  __builtin_choose_expr(__safe_cmp(x, y), \
    |                        ^~~~~~~~~~
    |./include/linux/kernel.h:878:19: note: in expansion of macro '__careful_cmp'
    | #define min(x, y) __careful_cmp(x, y, <)
    |                   ^~~~~~~~~~~~~
    |mm/nobootmem.c:104:11: note: in expansion of macro 'min'
    |   order = min(MAX_ORDER - 1UL, __ffs(start));
    
    Change __ffs return value from 'int' to 'unsigned long' as it
    is done in other implementations (like asm-generic, x86, etc...)
    to avoid build-time warnings in places where type is strictly
    checked.
    
    As __ffs may return values in [0-31] interval changing return
    type to unsigned is valid.
    
    Signed-off-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9017857c06b1857acff30fdbd280032ca940baac
Author: Silvio Cesare <silvio.cesare@gmail.com>
Date:   Tue Jan 15 04:27:27 2019 +0100

    ASoC: imx-audmux: change snprintf to scnprintf for possible overflow
    
    [ Upstream commit c407cd008fd039320d147088b52d0fa34ed3ddcb ]
    
    Change snprintf to scnprintf. There are generally two cases where using
    snprintf causes problems.
    
    1) Uses of size += snprintf(buf, SIZE - size, fmt, ...)
    In this case, if snprintf would have written more characters than what the
    buffer size (SIZE) is, then size will end up larger than SIZE. In later
    uses of snprintf, SIZE - size will result in a negative number, leading
    to problems. Note that size might already be too large by using
    size = snprintf before the code reaches a case of size += snprintf.
    
    2) If size is ultimately used as a length parameter for a copy back to user
    space, then it will potentially allow for a buffer overflow and information
    disclosure when size is greater than SIZE. When the size is used to index
    the buffer directly, we can have memory corruption. This also means when
    size = snprintf... is used, it may also cause problems since size may become
    large.  Copying to userspace is mitigated by the HARDENED_USERCOPY kernel
    configuration.
    
    The solution to these issues is to use scnprintf which returns the number of
    characters actually written to the buffer, so the size variable will never
    exceed SIZE.
    
    Signed-off-by: Silvio Cesare <silvio.cesare@gmail.com>
    Cc: Timur Tabi <timur@kernel.org>
    Cc: Nicolin Chen <nicoleotsuka@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Xiubo Li <Xiubo.Lee@gmail.com>
    Cc: Fabio Estevam <fabio.estevam@nxp.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91890492d7300710b2776fb94a9c5ae93a0dfb95
Author: Silvio Cesare <silvio.cesare@gmail.com>
Date:   Sat Jan 12 16:28:43 2019 +0100

    ASoC: dapm: change snprintf to scnprintf for possible overflow
    
    [ Upstream commit e581e151e965bf1f2815dd94620b638fec4d0a7e ]
    
    Change snprintf to scnprintf. There are generally two cases where using
    snprintf causes problems.
    
    1) Uses of size += snprintf(buf, SIZE - size, fmt, ...)
    In this case, if snprintf would have written more characters than what the
    buffer size (SIZE) is, then size will end up larger than SIZE. In later
    uses of snprintf, SIZE - size will result in a negative number, leading
    to problems. Note that size might already be too large by using
    size = snprintf before the code reaches a case of size += snprintf.
    
    2) If size is ultimately used as a length parameter for a copy back to user
    space, then it will potentially allow for a buffer overflow and information
    disclosure when size is greater than SIZE. When the size is used to index
    the buffer directly, we can have memory corruption. This also means when
    size = snprintf... is used, it may also cause problems since size may become
    large.  Copying to userspace is mitigated by the HARDENED_USERCOPY kernel
    configuration.
    
    The solution to these issues is to use scnprintf which returns the number of
    characters actually written to the buffer, so the size variable will never
    exceed SIZE.
    
    Signed-off-by: Silvio Cesare <silvio.cesare@gmail.com>
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3b0e3061767d57d8cb2d9034d515e201e78f50a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 21 23:42:52 2018 +0300

    usb: gadget: Potential NULL dereference on allocation error
    
    [ Upstream commit df28169e1538e4a8bcd8b779b043e5aa6524545c ]
    
    The source_sink_alloc_func() function is supposed to return error
    pointers on error.  The function is called from usb_get_function() which
    doesn't check for NULL returns so it would result in an Oops.
    
    Of course, in the current kernel, small allocations always succeed so
    this doesn't affect runtime.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38152b626bcbaafd5bbd4b63ca4e4e6662613175
Author: Zeng Tao <prime.zeng@hisilicon.com>
Date:   Wed Dec 26 19:22:00 2018 +0800

    usb: dwc3: gadget: Fix the uninitialized link_state when udc starts
    
    [ Upstream commit 88b1bb1f3b88e0bf20b05d543a53a5b99bd7ceb6 ]
    
    Currently the link_state is uninitialized and the default value is 0(U0)
    before the first time we start the udc, and after we start the udc then
     stop the udc, the link_state will be undefined.
    We may have the following warnings if we start the udc again with
    an undefined link_state:
    
    WARNING: CPU: 0 PID: 327 at drivers/usb/dwc3/gadget.c:294 dwc3_send_gadget_ep_cmd+0x304/0x308
    dwc3 100e0000.hidwc3_0: wakeup failed --> -22
    [...]
    Call Trace:
    [<c010f270>] (unwind_backtrace) from [<c010b3d8>] (show_stack+0x10/0x14)
    [<c010b3d8>] (show_stack) from [<c034a4dc>] (dump_stack+0x84/0x98)
    [<c034a4dc>] (dump_stack) from [<c0118000>] (__warn+0xe8/0x100)
    [<c0118000>] (__warn) from [<c0118050>](warn_slowpath_fmt+0x38/0x48)
    [<c0118050>] (warn_slowpath_fmt) from [<c0442ec0>](dwc3_send_gadget_ep_cmd+0x304/0x308)
    [<c0442ec0>] (dwc3_send_gadget_ep_cmd) from [<c0445e68>](dwc3_ep0_start_trans+0x48/0xf4)
    [<c0445e68>] (dwc3_ep0_start_trans) from [<c0446750>](dwc3_ep0_out_start+0x64/0x80)
    [<c0446750>] (dwc3_ep0_out_start) from [<c04451c0>](__dwc3_gadget_start+0x1e0/0x278)
    [<c04451c0>] (__dwc3_gadget_start) from [<c04452e0>](dwc3_gadget_start+0x88/0x10c)
    [<c04452e0>] (dwc3_gadget_start) from [<c045ee54>](udc_bind_to_driver+0x88/0xbc)
    [<c045ee54>] (udc_bind_to_driver) from [<c045f29c>](usb_gadget_probe_driver+0xf8/0x140)
    [<c045f29c>] (usb_gadget_probe_driver) from [<bf005424>](gadget_dev_desc_UDC_store+0xac/0xc4 [libcomposite])
    [<bf005424>] (gadget_dev_desc_UDC_store [libcomposite]) from[<c023d8e0>] (configfs_write_file+0xd4/0x160)
    [<c023d8e0>] (configfs_write_file) from [<c01d51e8>] (__vfs_write+0x1c/0x114)
    [<c01d51e8>] (__vfs_write) from [<c01d5ff4>] (vfs_write+0xa4/0x168)
    [<c01d5ff4>] (vfs_write) from [<c01d6d40>] (SyS_write+0x3c/0x90)
    [<c01d6d40>] (SyS_write) from [<c0107400>] (ret_fast_syscall+0x0/0x3c)
    
    Signed-off-by: Zeng Tao <prime.zeng@hisilicon.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92efac6f4e3f998a476ccd6b61dd7111ba3d0432
Author: Bo He <bo.he@intel.com>
Date:   Mon Jan 14 09:48:32 2019 +0200

    usb: dwc3: gadget: synchronize_irq dwc irq in suspend
    
    [ Upstream commit 01c10880d24291a96a4ab0da773e3c5ce4d12da8 ]
    
    We see dwc3 endpoint stopped by unwanted irq during
    suspend resume test, which is caused dwc3 ep can't be started
    with error "No Resource".
    
    Here, add synchronize_irq before suspend to sync the
    pending IRQ handlers complete.
    
    Signed-off-by: Bo He <bo.he@intel.com>
    Signed-off-by: Yu Wang <yu.y.wang@intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26e284fab2b42b96524794c04d0d7f099943bb79
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Dec 17 10:02:42 2018 +0300

    thermal: int340x_thermal: Fix a NULL vs IS_ERR() check
    
    [ Upstream commit 3fe931b31a4078395c1967f0495dcc9e5ec6b5e3 ]
    
    The intel_soc_dts_iosf_init() function doesn't return NULL, it returns
    error pointers.
    
    Fixes: 4d0dd6c1576b ("Thermal/int340x/processor_thermal: Enable auxiliary DTS for Braswell")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1639e1d6662a14afc7891fe32428b033267fbcd
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 21 12:06:58 2018 +0300

    ALSA: compress: prevent potential divide by zero bugs
    
    [ Upstream commit 678e2b44c8e3fec3afc7202f1996a4500a50be93 ]
    
    The problem is seen in the q6asm_dai_compr_set_params() function:
    
            ret = q6asm_map_memory_regions(dir, prtd->audio_client, prtd->phys,
                                           (prtd->pcm_size / prtd->periods),
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                           prtd->periods);
    
    In this code prtd->pcm_size is the buffer_size and prtd->periods comes
    from params->buffer.fragments.  If we allow the number of fragments to
    be zero then it results in a divide by zero bug.  One possible fix would
    be to use prtd->pcm_count directly instead of using the division to
    re-calculate it.  But I decided that it doesn't really make sense to
    allow zero fragments.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5c20d87c956a649a09dd1492ee77d7f380e573a
Author: Rander Wang <rander.wang@linux.intel.com>
Date:   Tue Dec 18 16:24:54 2018 +0800

    ASoC: Intel: Haswell/Broadwell: fix setting for .dynamic field
    
    [ Upstream commit 906a9abc5de73c383af518f5a806f4be2993a0c7 ]
    
    For some reason this field was set to zero when all other drivers use
    .dynamic = 1 for front-ends. This change was tested on Dell XPS13 and
    has no impact with the existing legacy driver. The SOF driver also works
    with this change which enables it to override the fixed topology.
    
    Signed-off-by: Rander Wang <rander.wang@linux.intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96f18451ec25c516acef6057e7cbefd94210d966
Author: Kristian H. Kristensen <hoegsberg@gmail.com>
Date:   Wed Dec 19 08:57:41 2018 -0800

    drm/msm: Unblock writer if reader closes file
    
    [ Upstream commit 99c66bc051e7407fe0bf0607b142ec0be1a1d1dd ]
    
    Prevents deadlock when fifo is full and reader closes file.
    
    Signed-off-by: Kristian H. Kristensen <hoegsberg@chromium.org>
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87955cafb1aa9cddfa3353d2fd1e4971bbb7b8d6
Author: John Garry <john.garry@huawei.com>
Date:   Fri Feb 15 00:37:57 2019 +0800

    scsi: libsas: Fix rphy phy_identifier for PHYs with end devices attached
    
    commit ffeafdd2bf0b280d67ec1a47ea6287910d271f3f upstream.
    
    The sysfs phy_identifier attribute for a sas_end_device comes from the rphy
    phy_identifier value.
    
    Currently this is not being set for rphys with an end device attached, so
    we see incorrect symlinks from systemd disk/by-path:
    
    root@localhost:~# ls -l /dev/disk/by-path/
    total 0
    lrwxrwxrwx 1 root root  9 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0 -> ../../sdb
    lrwxrwxrwx 1 root root 10 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0-part1 -> ../../sdb1
    lrwxrwxrwx 1 root root 10 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0-part2 -> ../../sdb2
    lrwxrwxrwx 1 root root 10 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0-part3 -> ../../sdc3
    
    Indeed, each sas_end_device phy_identifier value is 0:
    
    root@localhost:/# more sys/class/sas_device/end_device-0\:0\:2/phy_identifier
    0
    root@localhost:/# more sys/class/sas_device/end_device-0\:0\:10/phy_identifier
    0
    
    This patch fixes the discovery code to set the phy_identifier.  With this,
    we now get proper symlinks:
    
    root@localhost:~# ls -l /dev/disk/by-path/
    total 0
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy10-lun-0 -> ../../sdg
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy11-lun-0 -> ../../sdh
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy2-lun-0 -> ../../sda
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy2-lun-0-part1 -> ../../sda1
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy3-lun-0 -> ../../sdb
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy3-lun-0-part1 -> ../../sdb1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy3-lun-0-part2 -> ../../sdb2
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0 -> ../../sdc
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0-part1 -> ../../sdc1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0-part2 -> ../../sdc2
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0-part3 -> ../../sdc3
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy5-lun-0 -> ../../sdd
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0 -> ../../sde
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0-part1 -> ../../sde1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0-part2 -> ../../sde2
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0-part3 -> ../../sde3
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0 -> ../../sdf
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0-part1 -> ../../sdf1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0-part2 -> ../../sdf2
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0-part3 -> ../../sdf3
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Reported-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jason Yan <yanaijie@huawei.com>
    Tested-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5c5b8ed71bba3a919e211264930bc7148db90c6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 15:02:03 2019 +0100

    Revert "loop: Fold __loop_release into loop_release"
    
    This reverts commit 7d839c10b848aa66ca1290a21ee600bd17c2dcb4 which is
    commit 967d1dc144b50ad005e5eecdfadfbcfb399ffff6 upstream.
    
    It does not work properly in the 4.9.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6ae51ad49172310c9fa14b9af9b0fcf63b1471c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 15:00:55 2019 +0100

    Revert "loop: Get rid of loop_index_mutex"
    
    This reverts commit 6a8f1d8d701462937ce01a3f2219af5435372af7 which is
    commit 0a42e99b58a208839626465af194cfe640ef9493 upstream.
    
    It does not work properly in the 4.9.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86af0f992e2a5cfabcd431ec107bea0400cddb04
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 14:58:58 2019 +0100

    Revert "loop: Fix double mutex_unlock(&loop_ctl_mutex) in loop_control_ioctl()"
    
    This reverts commit 5d3cf50105d007adc54949e0caeca1e944549723 which is
    commit 628bd85947091830a8c4872adfd5ed1d515a9cf2 upstream.
    
    It does not work properly in the 4.9.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: syzbot <syzbot+c0138741c2290fc5e63f@syzkaller.appspotmail.com>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
